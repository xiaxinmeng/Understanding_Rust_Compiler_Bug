{"sha": "43743d63b3e6026088cb5bacca87ccc08acd97cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM3NDNkNjNiM2U2MDI2MDg4Y2I1YmFjY2E4N2NjYzA4YWNkOTdjZA==", "commit": {"author": {"name": "Matthias Klose", "email": "doko@ubuntu.com", "date": "2012-03-02T17:15:20Z"}, "committer": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2012-03-02T17:15:20Z"}, "message": "2012-03-02  Matthias Klose  <doko@ubuntu.com>\n\n        * Imported zlib 1.2.5; merged local changes.\n\nFrom-SVN: r184805", "tree": {"sha": "08301625dedcb8a8837a464f46ca0292c54c5ecb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08301625dedcb8a8837a464f46ca0292c54c5ecb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43743d63b3e6026088cb5bacca87ccc08acd97cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43743d63b3e6026088cb5bacca87ccc08acd97cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43743d63b3e6026088cb5bacca87ccc08acd97cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43743d63b3e6026088cb5bacca87ccc08acd97cd/comments", "author": {"login": "doko42", "id": 11258518, "node_id": "MDQ6VXNlcjExMjU4NTE4", "avatar_url": "https://avatars.githubusercontent.com/u/11258518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doko42", "html_url": "https://github.com/doko42", "followers_url": "https://api.github.com/users/doko42/followers", "following_url": "https://api.github.com/users/doko42/following{/other_user}", "gists_url": "https://api.github.com/users/doko42/gists{/gist_id}", "starred_url": "https://api.github.com/users/doko42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doko42/subscriptions", "organizations_url": "https://api.github.com/users/doko42/orgs", "repos_url": "https://api.github.com/users/doko42/repos", "events_url": "https://api.github.com/users/doko42/events{/privacy}", "received_events_url": "https://api.github.com/users/doko42/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5d216c70d980e3169b42e9734cf4bea1648ff8f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d216c70d980e3169b42e9734cf4bea1648ff8f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d216c70d980e3169b42e9734cf4bea1648ff8f0"}], "stats": {"total": 28185, "additions": 19137, "deletions": 9048}, "files": [{"sha": "a64fe0b2cae5790b2a20ff30898f31919cf5767f", "filename": "zlib/CMakeLists.txt", "status": "added", "additions": 190, "deletions": 0, "changes": 190, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2FCMakeLists.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2FCMakeLists.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2FCMakeLists.txt?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -0,0 +1,190 @@\n+cmake_minimum_required(VERSION 2.4.4)\n+set(CMAKE_ALLOW_LOOSE_LOOP_CONSTRUCTS ON)\n+\n+project(zlib C)\n+\n+if(NOT DEFINED BUILD_SHARED_LIBS)\n+    option(BUILD_SHARED_LIBS \"Build a shared library form of zlib\" ON)\n+endif()\n+\n+include(CheckTypeSize)\n+include(CheckFunctionExists)\n+include(CheckIncludeFile)\n+include(CheckCSourceCompiles)\n+enable_testing()\n+\n+check_include_file(sys/types.h HAVE_SYS_TYPES_H)\n+check_include_file(stdint.h    HAVE_STDINT_H)\n+check_include_file(stddef.h    HAVE_STDDEF_H)\n+\n+#\n+# Check to see if we have large file support\n+#\n+set(CMAKE_REQUIRED_DEFINITIONS -D_LARGEFILE64_SOURCE=1)\n+# We add these other definitions here because CheckTypeSize.cmake\n+# in CMake 2.4.x does not automatically do so and we want\n+# compatibility with CMake 2.4.x.\n+if(HAVE_SYS_TYPES_H)\n+    list(APPEND CMAKE_REQUIRED_DEFINITIONS -DHAVE_SYS_TYPES_H)\n+endif()\n+if(HAVE_STDINT_H)\n+    list(APPEND CMAKE_REQUIRED_DEFINITIONS -DHAVE_STDINT_H)\n+endif()\n+if(HAVE_STDDEF_H)\n+    list(APPEND CMAKE_REQUIRED_DEFINITIONS -DHAVE_STDDEF_H)\n+endif()\n+check_type_size(off64_t OFF64_T)\n+if(HAVE_OFF64_T)\n+   add_definitions(-D_LARGEFILE64_SOURCE=1)\n+endif()\n+set(CMAKE_REQUIRED_DEFINITIONS) # clear variable\n+\n+#\n+# Check for fseeko\n+#\n+check_function_exists(fseeko HAVE_FSEEKO)\n+if(NOT HAVE_FSEEKO)\n+    add_definitions(-DNO_FSEEKO)\n+endif()\n+\n+#\n+# Check for unistd.h\n+#\n+check_include_file(unistd.h Z_HAVE_UNISTD_H)\n+\n+if(MSVC)\n+    set(CMAKE_DEBUG_POSTFIX \"d\")\n+    add_definitions(-D_CRT_SECURE_NO_DEPRECATE)\n+    add_definitions(-D_CRT_NONSTDC_NO_DEPRECATE)\n+endif()\n+\n+if(NOT CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_CURRENT_BINARY_DIR)\n+    # If we're doing an out of source build and the user has a zconf.h\n+    # in their source tree...\n+    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/zconf.h)\n+        message(FATAL_ERROR\n+            \"You must remove ${CMAKE_CURRENT_SOURCE_DIR}/zconf.h \"\n+            \"from the source tree.  This file is included with zlib \"\n+            \"but CMake generates this file for you automatically \"\n+            \"in the build directory.\")\n+  endif()\n+endif()\n+\n+configure_file(${CMAKE_CURRENT_SOURCE_DIR}/zconf.h.cmakein\n+               ${CMAKE_CURRENT_BINARY_DIR}/zconf.h @ONLY)\n+include_directories(${CMAKE_CURRENT_BINARY_DIR})\n+\n+\n+#============================================================================\n+# zlib\n+#============================================================================\n+\n+set(ZLIB_PUBLIC_HDRS\n+    ${CMAKE_CURRENT_BINARY_DIR}/zconf.h\n+    zlib.h\n+)\n+set(ZLIB_PRIVATE_HDRS\n+    crc32.h\n+    deflate.h\n+    gzguts.h\n+    inffast.h\n+    inffixed.h\n+    inflate.h\n+    inftrees.h\n+    trees.h\n+    zutil.h\n+)\n+set(ZLIB_SRCS\n+    adler32.c\n+    compress.c\n+    crc32.c\n+    deflate.c\n+    gzclose.c\n+    gzlib.c\n+    gzread.c\n+    gzwrite.c\n+    inflate.c\n+    infback.c\n+    inftrees.c\n+    inffast.c\n+    trees.c\n+    uncompr.c\n+    zutil.c\n+    win32/zlib1.rc\n+)\n+\n+# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n+file(READ ${CMAKE_CURRENT_SOURCE_DIR}/zlib.h _zlib_h_contents)\n+string(REGEX REPLACE \".*#define[ \\t]+ZLIB_VERSION[ \\t]+\\\"([0-9A-Za-z.]+)\\\".*\"\n+    \"\\\\1\" ZLIB_FULL_VERSION ${_zlib_h_contents})\n+\n+if(MINGW)\n+    # This gets us DLL resource information when compiling on MinGW.\n+    add_custom_command(OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/zlib1rc.obj\n+                       COMMAND windres.exe\n+                            -D GCC_WINDRES\n+                            -I ${CMAKE_CURRENT_SOURCE_DIR}\n+                            -I ${CMAKE_CURRENT_BINARY_DIR}\n+                            -o ${CMAKE_CURRENT_BINARY_DIR}/zlib1rc.obj\n+                            -i ${CMAKE_CURRENT_SOURCE_DIR}/win32/zlib1.rc)\n+    set(ZLIB_SRCS ${ZLIB_SRCS} ${CMAKE_CURRENT_BINARY_DIR}/zlib1rc.obj)\n+endif(MINGW)\n+\n+add_library(zlib ${ZLIB_SRCS} ${ZLIB_PUBLIC_HDRS} ${ZLIB_PRIVATE_HDRS})\n+set_target_properties(zlib PROPERTIES DEFINE_SYMBOL ZLIB_DLL)\n+\n+set_target_properties(zlib PROPERTIES SOVERSION 1)\n+\n+if(NOT CYGWIN)\n+    # This property causes shared libraries on Linux to have the full version\n+    # encoded into their final filename.  We disable this on Cygwin because\n+    # it causes cygz-${ZLIB_FULL_VERSION}.dll to be created when cygz.dll\n+    # seems to be the default.\n+    #\n+    # This has no effect with MSVC, on that platform the version info for\n+    # the DLL comes from the resource file win32/zlib1.rc\n+    set_target_properties(zlib PROPERTIES VERSION ${ZLIB_FULL_VERSION})\n+endif()\n+\n+if(UNIX)\n+    # On unix-like platforms the library is almost always called libz\n+   set_target_properties(zlib PROPERTIES OUTPUT_NAME z)\n+elseif(BUILD_SHARED_LIBS AND WIN32)\n+    # Creates zlib1.dll when building shared library version\n+    set_target_properties(zlib PROPERTIES SUFFIX \"1.dll\")\n+endif()\n+\n+if(NOT SKIP_INSTALL_LIBRARIES AND NOT SKIP_INSTALL_ALL )\n+    install(TARGETS zlib\n+        RUNTIME DESTINATION bin\n+        ARCHIVE DESTINATION lib\n+        LIBRARY DESTINATION lib )\n+endif()\n+if(NOT SKIP_INSTALL_HEADERS AND NOT SKIP_INSTALL_ALL )\n+    install(FILES ${ZLIB_PUBLIC_HDRS} DESTINATION include)\n+endif()\n+if(NOT SKIP_INSTALL_FILES AND NOT SKIP_INSTALL_ALL )\n+    install(FILES zlib.3 DESTINATION share/man/man3)\n+endif()\n+\n+#============================================================================\n+# Example binaries\n+#============================================================================\n+\n+add_executable(example example.c)\n+target_link_libraries(example zlib)\n+add_test(example example)\n+\n+add_executable(minigzip minigzip.c)\n+target_link_libraries(minigzip zlib)\n+\n+if(HAVE_OFF64_T)\n+    add_executable(example64 example.c)\n+    target_link_libraries(example64 zlib)\n+    set_target_properties(example64 PROPERTIES COMPILE_FLAGS \"-D_FILE_OFFSET_BITS=64\")\n+    add_test(example64 example64)\n+\n+    add_executable(minigzip64 minigzip.c)\n+    target_link_libraries(minigzip64 zlib)\n+    set_target_properties(minigzip64 PROPERTIES COMPILE_FLAGS \"-D_FILE_OFFSET_BITS=64\")\n+endif()"}, {"sha": "fd4cae655e3e46fa968948a39e1a2d429622b4ae", "filename": "zlib/ChangeLog", "status": "modified", "additions": 354, "deletions": 1, "changes": 355, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2FChangeLog?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,6 +1,359 @@\n \n                 ChangeLog file for zlib\n \n+Changes in 1.2.5 (19 Apr 2010)\n+- Disable visibility attribute in win32/Makefile.gcc [Bar-Lev]\n+- Default to libdir as sharedlibdir in configure [Nieder]\n+- Update copyright dates on modified source files\n+- Update trees.c to be able to generate modified trees.h\n+- Exit configure for MinGW, suggesting win32/Makefile.gcc\n+\n+Changes in 1.2.4.5 (18 Apr 2010)\n+- Set sharedlibdir in configure [Torok]\n+- Set LDFLAGS in Makefile.in [Bar-Lev]\n+- Avoid mkdir objs race condition in Makefile.in [Bowler]\n+- Add ZLIB_INTERNAL in front of internal inter-module functions and arrays\n+- Define ZLIB_INTERNAL to hide internal functions and arrays for GNU C\n+- Don't use hidden attribute when it is a warning generator (e.g. Solaris)\n+\n+Changes in 1.2.4.4 (18 Apr 2010)\n+- Fix CROSS_PREFIX executable testing, CHOST extract, mingw* [Torok]\n+- Undefine _LARGEFILE64_SOURCE in zconf.h if it is zero, but not if empty\n+- Try to use bash or ksh regardless of functionality of /bin/sh\n+- Fix configure incompatibility with NetBSD sh\n+- Remove attempt to run under bash or ksh since have better NetBSD fix\n+- Fix win32/Makefile.gcc for MinGW [Bar-Lev]\n+- Add diagnostic messages when using CROSS_PREFIX in configure\n+- Added --sharedlibdir option to configure [Weigelt]\n+- Use hidden visibility attribute when available [Frysinger]\n+\n+Changes in 1.2.4.3 (10 Apr 2010)\n+- Only use CROSS_PREFIX in configure for ar and ranlib if they exist\n+- Use CROSS_PREFIX for nm [Bar-Lev]\n+- Assume _LARGEFILE64_SOURCE defined is equivalent to true\n+- Avoid use of undefined symbols in #if with && and ||\n+- Make *64 prototypes in gzguts.h consistent with functions\n+- Add -shared load option for MinGW in configure [Bowler]\n+- Move z_off64_t to public interface, use instead of off64_t\n+- Remove ! from shell test in configure (not portable to Solaris)\n+- Change +0 macro tests to -0 for possibly increased portability\n+\n+Changes in 1.2.4.2 (9 Apr 2010)\n+- Add consistent carriage returns to readme.txt's in masmx86 and masmx64\n+- Really provide prototypes for *64 functions when building without LFS\n+- Only define unlink() in minigzip.c if unistd.h not included\n+- Update README to point to contrib/vstudio project files\n+- Move projects/vc6 to old/ and remove projects/\n+- Include stdlib.h in minigzip.c for setmode() definition under WinCE\n+- Clean up assembler builds in win32/Makefile.msc [Rowe]\n+- Include sys/types.h for Microsoft for off_t definition\n+- Fix memory leak on error in gz_open()\n+- Symbolize nm as $NM in configure [Weigelt]\n+- Use TEST_LDSHARED instead of LDSHARED to link test programs [Weigelt]\n+- Add +0 to _FILE_OFFSET_BITS and _LFS64_LARGEFILE in case not defined\n+- Fix bug in gzeof() to take into account unused input data\n+- Avoid initialization of structures with variables in puff.c\n+- Updated win32/README-WIN32.txt [Rowe]\n+\n+Changes in 1.2.4.1 (28 Mar 2010)\n+- Remove the use of [a-z] constructs for sed in configure [gentoo 310225]\n+- Remove $(SHAREDLIB) from LIBS in Makefile.in [Creech]\n+- Restore \"for debugging\" comment on sprintf() in gzlib.c\n+- Remove fdopen for MVS from gzguts.h\n+- Put new README-WIN32.txt in win32 [Rowe]\n+- Add check for shell to configure and invoke another shell if needed\n+- Fix big fat stinking bug in gzseek() on uncompressed files\n+- Remove vestigial F_OPEN64 define in zutil.h\n+- Set and check the value of _LARGEFILE_SOURCE and _LARGEFILE64_SOURCE\n+- Avoid errors on non-LFS systems when applications define LFS macros\n+- Set EXE to \".exe\" in configure for MINGW [Kahle]\n+- Match crc32() in crc32.c exactly to the prototype in zlib.h [Sherrill]\n+- Add prefix for cross-compilation in win32/makefile.gcc [Bar-Lev]\n+- Add DLL install in win32/makefile.gcc [Bar-Lev]\n+- Allow Linux* or linux* from uname in configure [Bar-Lev]\n+- Allow ldconfig to be redefined in configure and Makefile.in [Bar-Lev]\n+- Add cross-compilation prefixes to configure [Bar-Lev]\n+- Match type exactly in gz_load() invocation in gzread.c\n+- Match type exactly of zcalloc() in zutil.c to zlib.h alloc_func\n+- Provide prototypes for *64 functions when building zlib without LFS\n+- Don't use -lc when linking shared library on MinGW\n+- Remove errno.h check in configure and vestigial errno code in zutil.h\n+\n+Changes in 1.2.4 (14 Mar 2010)\n+- Fix VER3 extraction in configure for no fourth subversion\n+- Update zlib.3, add docs to Makefile.in to make .pdf out of it\n+- Add zlib.3.pdf to distribution\n+- Don't set error code in gzerror() if passed pointer is NULL\n+- Apply destination directory fixes to CMakeLists.txt [Lowman]\n+- Move #cmakedefine's to a new zconf.in.cmakein\n+- Restore zconf.h for builds that don't use configure or cmake\n+- Add distclean to dummy Makefile for convenience\n+- Update and improve INDEX, README, and FAQ\n+- Update CMakeLists.txt for the return of zconf.h [Lowman]\n+- Update contrib/vstudio/vc9 and vc10 [Vollant]\n+- Change libz.dll.a back to libzdll.a in win32/Makefile.gcc\n+- Apply license and readme changes to contrib/asm686 [Raiter]\n+- Check file name lengths and add -c option in minigzip.c [Li]\n+- Update contrib/amd64 and contrib/masmx86/ [Vollant]\n+- Avoid use of \"eof\" parameter in trees.c to not shadow library variable\n+- Update make_vms.com for removal of zlibdefs.h [Zinser]\n+- Update assembler code and vstudio projects in contrib [Vollant]\n+- Remove outdated assembler code contrib/masm686 and contrib/asm586\n+- Remove old vc7 and vc8 from contrib/vstudio\n+- Update win32/Makefile.msc, add ZLIB_VER_SUBREVISION [Rowe]\n+- Fix memory leaks in gzclose_r() and gzclose_w(), file leak in gz_open()\n+- Add contrib/gcc_gvmat64 for longest_match and inflate_fast [Vollant]\n+- Remove *64 functions from win32/zlib.def (they're not 64-bit yet)\n+- Fix bug in void-returning vsprintf() case in gzwrite.c\n+- Fix name change from inflate.h in contrib/inflate86/inffas86.c\n+- Check if temporary file exists before removing in make_vms.com [Zinser]\n+- Fix make install and uninstall for --static option\n+- Fix usage of _MSC_VER in gzguts.h and zutil.h [Truta]\n+- Update readme.txt in contrib/masmx64 and masmx86 to assemble\n+\n+Changes in 1.2.3.9 (21 Feb 2010)\n+- Expunge gzio.c\n+- Move as400 build information to old\n+- Fix updates in contrib/minizip and contrib/vstudio\n+- Add const to vsnprintf test in configure to avoid warnings [Weigelt]\n+- Delete zconf.h (made by configure) [Weigelt]\n+- Change zconf.in.h to zconf.h.in per convention [Weigelt]\n+- Check for NULL buf in gzgets()\n+- Return empty string for gzgets() with len == 1 (like fgets())\n+- Fix description of gzgets() in zlib.h for end-of-file, NULL return\n+- Update minizip to 1.1 [Vollant]\n+- Avoid MSVC loss of data warnings in gzread.c, gzwrite.c\n+- Note in zlib.h that gzerror() should be used to distinguish from EOF\n+- Remove use of snprintf() from gzlib.c\n+- Fix bug in gzseek()\n+- Update contrib/vstudio, adding vc9 and vc10 [Kuno, Vollant]\n+- Fix zconf.h generation in CMakeLists.txt [Lowman]\n+- Improve comments in zconf.h where modified by configure\n+\n+Changes in 1.2.3.8 (13 Feb 2010)\n+- Clean up text files (tabs, trailing whitespace, etc.) [Oberhumer]\n+- Use z_off64_t in gz_zero() and gz_skip() to match state->skip\n+- Avoid comparison problem when sizeof(int) == sizeof(z_off64_t)\n+- Revert to Makefile.in from 1.2.3.6 (live with the clutter)\n+- Fix missing error return in gzflush(), add zlib.h note\n+- Add *64 functions to zlib.map [Levin]\n+- Fix signed/unsigned comparison in gz_comp()\n+- Use SFLAGS when testing shared linking in configure\n+- Add --64 option to ./configure to use -m64 with gcc\n+- Fix ./configure --help to correctly name options\n+- Have make fail if a test fails [Levin]\n+- Avoid buffer overrun in contrib/masmx64/gvmat64.asm [Simpson]\n+- Remove assembler object files from contrib\n+\n+Changes in 1.2.3.7 (24 Jan 2010)\n+- Always gzopen() with O_LARGEFILE if available\n+- Fix gzdirect() to work immediately after gzopen() or gzdopen()\n+- Make gzdirect() more precise when the state changes while reading\n+- Improve zlib.h documentation in many places\n+- Catch memory allocation failure in gz_open()\n+- Complete close operation if seek forward in gzclose_w() fails\n+- Return Z_ERRNO from gzclose_r() if close() fails\n+- Return Z_STREAM_ERROR instead of EOF for gzclose() being passed NULL\n+- Return zero for gzwrite() errors to match zlib.h description\n+- Return -1 on gzputs() error to match zlib.h description\n+- Add zconf.in.h to allow recovery from configure modification [Weigelt]\n+- Fix static library permissions in Makefile.in [Weigelt]\n+- Avoid warnings in configure tests that hide functionality [Weigelt]\n+- Add *BSD and DragonFly to Linux case in configure [gentoo 123571]\n+- Change libzdll.a to libz.dll.a in win32/Makefile.gcc [gentoo 288212]\n+- Avoid access of uninitialized data for first inflateReset2 call [Gomes]\n+- Keep object files in subdirectories to reduce the clutter somewhat\n+- Remove default Makefile and zlibdefs.h, add dummy Makefile\n+- Add new external functions to Z_PREFIX, remove duplicates, z_z_ -> z_\n+- Remove zlibdefs.h completely -- modify zconf.h instead\n+\n+Changes in 1.2.3.6 (17 Jan 2010)\n+- Avoid void * arithmetic in gzread.c and gzwrite.c\n+- Make compilers happier with const char * for gz_error message\n+- Avoid unused parameter warning in inflate.c\n+- Avoid signed-unsigned comparison warning in inflate.c\n+- Indent #pragma's for traditional C\n+- Fix usage of strwinerror() in glib.c, change to gz_strwinerror()\n+- Correct email address in configure for system options\n+- Update make_vms.com and add make_vms.com to contrib/minizip [Zinser]\n+- Update zlib.map [Brown]\n+- Fix Makefile.in for Solaris 10 make of example64 and minizip64 [Torok]\n+- Apply various fixes to CMakeLists.txt [Lowman]\n+- Add checks on len in gzread() and gzwrite()\n+- Add error message for no more room for gzungetc()\n+- Remove zlib version check in gzwrite()\n+- Defer compression of gzprintf() result until need to\n+- Use snprintf() in gzdopen() if available\n+- Remove USE_MMAP configuration determination (only used by minigzip)\n+- Remove examples/pigz.c (available separately)\n+- Update examples/gun.c to 1.6\n+\n+Changes in 1.2.3.5 (8 Jan 2010)\n+- Add space after #if in zutil.h for some compilers\n+- Fix relatively harmless bug in deflate_fast() [Exarevsky]\n+- Fix same problem in deflate_slow()\n+- Add $(SHAREDLIBV) to LIBS in Makefile.in [Brown]\n+- Add deflate_rle() for faster Z_RLE strategy run-length encoding\n+- Add deflate_huff() for faster Z_HUFFMAN_ONLY encoding\n+- Change name of \"write\" variable in inffast.c to avoid library collisions\n+- Fix premature EOF from gzread() in gzio.c [Brown]\n+- Use zlib header window size if windowBits is 0 in inflateInit2()\n+- Remove compressBound() call in deflate.c to avoid linking compress.o\n+- Replace use of errno in gz* with functions, support WinCE [Alves]\n+- Provide alternative to perror() in minigzip.c for WinCE [Alves]\n+- Don't use _vsnprintf on later versions of MSVC [Lowman]\n+- Add CMake build script and input file [Lowman]\n+- Update contrib/minizip to 1.1 [Svensson, Vollant]\n+- Moved nintendods directory from contrib to .\n+- Replace gzio.c with a new set of routines with the same functionality\n+- Add gzbuffer(), gzoffset(), gzclose_r(), gzclose_w() as part of above\n+- Update contrib/minizip to 1.1b\n+- Change gzeof() to return 0 on error instead of -1 to agree with zlib.h\n+\n+Changes in 1.2.3.4 (21 Dec 2009)\n+- Use old school .SUFFIXES in Makefile.in for FreeBSD compatibility\n+- Update comments in configure and Makefile.in for default --shared\n+- Fix test -z's in configure [Marquess]\n+- Build examplesh and minigzipsh when not testing\n+- Change NULL's to Z_NULL's in deflate.c and in comments in zlib.h\n+- Import LDFLAGS from the environment in configure\n+- Fix configure to populate SFLAGS with discovered CFLAGS options\n+- Adapt make_vms.com to the new Makefile.in [Zinser]\n+- Add zlib2ansi script for C++ compilation [Marquess]\n+- Add _FILE_OFFSET_BITS=64 test to make test (when applicable)\n+- Add AMD64 assembler code for longest match to contrib [Teterin]\n+- Include options from $SFLAGS when doing $LDSHARED\n+- Simplify 64-bit file support by introducing z_off64_t type\n+- Make shared object files in objs directory to work around old Sun cc\n+- Use only three-part version number for Darwin shared compiles\n+- Add rc option to ar in Makefile.in for when ./configure not run\n+- Add -WI,-rpath,. to LDFLAGS for OSF 1 V4*\n+- Set LD_LIBRARYN32_PATH for SGI IRIX shared compile\n+- Protect against _FILE_OFFSET_BITS being defined when compiling zlib\n+- Rename Makefile.in targets allstatic to static and allshared to shared\n+- Fix static and shared Makefile.in targets to be independent\n+- Correct error return bug in gz_open() by setting state [Brown]\n+- Put spaces before ;;'s in configure for better sh compatibility\n+- Add pigz.c (parallel implementation of gzip) to examples/\n+- Correct constant in crc32.c to UL [Leventhal]\n+- Reject negative lengths in crc32_combine()\n+- Add inflateReset2() function to work like inflateEnd()/inflateInit2()\n+- Include sys/types.h for _LARGEFILE64_SOURCE [Brown]\n+- Correct typo in doc/algorithm.txt [Janik]\n+- Fix bug in adler32_combine() [Zhu]\n+- Catch missing-end-of-block-code error in all inflates and in puff\n+    Assures that random input to inflate eventually results in an error\n+- Added enough.c (calculation of ENOUGH for inftrees.h) to examples/\n+- Update ENOUGH and its usage to reflect discovered bounds\n+- Fix gzerror() error report on empty input file [Brown]\n+- Add ush casts in trees.c to avoid pedantic runtime errors\n+- Fix typo in zlib.h uncompress() description [Reiss]\n+- Correct inflate() comments with regard to automatic header detection\n+- Remove deprecation comment on Z_PARTIAL_FLUSH (it stays)\n+- Put new version of gzlog (2.0) in examples with interruption recovery\n+- Add puff compile option to permit invalid distance-too-far streams\n+- Add puff TEST command options, ability to read piped input\n+- Prototype the *64 functions in zlib.h when _FILE_OFFSET_BITS == 64, but\n+  _LARGEFILE64_SOURCE not defined\n+- Fix Z_FULL_FLUSH to truly erase the past by resetting s->strstart\n+- Fix deflateSetDictionary() to use all 32K for output consistency\n+- Remove extraneous #define MIN_LOOKAHEAD in deflate.c (in deflate.h)\n+- Clear bytes after deflate lookahead to avoid use of uninitialized data\n+- Change a limit in inftrees.c to be more transparent to Coverity Prevent\n+- Update win32/zlib.def with exported symbols from zlib.h\n+- Correct spelling error in zlib.h [Willem]\n+- Allow Z_BLOCK for deflate() to force a new block\n+- Allow negative bits in inflatePrime() to delete existing bit buffer\n+- Add Z_TREES flush option to inflate() to return at end of trees\n+- Add inflateMark() to return current state information for random access\n+- Add Makefile for NintendoDS to contrib [Costa]\n+- Add -w in configure compile tests to avoid spurious warnings [Beucler]\n+- Fix typos in zlib.h comments for deflateSetDictionary()\n+- Fix EOF detection in transparent gzread() [Maier]\n+\n+Changes in 1.2.3.3 (2 October 2006)\n+- Make --shared the default for configure, add a --static option\n+- Add compile option to permit invalid distance-too-far streams\n+- Add inflateUndermine() function which is required to enable above\n+- Remove use of \"this\" variable name for C++ compatibility [Marquess]\n+- Add testing of shared library in make test, if shared library built\n+- Use ftello() and fseeko() if available instead of ftell() and fseek()\n+- Provide two versions of all functions that use the z_off_t type for\n+  binary compatibility -- a normal version and a 64-bit offset version,\n+  per the Large File Support Extension when _LARGEFILE64_SOURCE is\n+  defined; use the 64-bit versions by default when _FILE_OFFSET_BITS\n+  is defined to be 64\n+- Add a --uname= option to configure to perhaps help with cross-compiling\n+\n+Changes in 1.2.3.2 (3 September 2006)\n+- Turn off silly Borland warnings [Hay]\n+- Use off64_t and define _LARGEFILE64_SOURCE when present\n+- Fix missing dependency on inffixed.h in Makefile.in\n+- Rig configure --shared to build both shared and static [Teredesai, Truta]\n+- Remove zconf.in.h and instead create a new zlibdefs.h file\n+- Fix contrib/minizip/unzip.c non-encrypted after encrypted [Vollant]\n+- Add treebuild.xml (see http://treebuild.metux.de/) [Weigelt]\n+\n+Changes in 1.2.3.1 (16 August 2006)\n+- Add watcom directory with OpenWatcom make files [Daniel]\n+- Remove #undef of FAR in zconf.in.h for MVS [Fedtke]\n+- Update make_vms.com [Zinser]\n+- Use -fPIC for shared build in configure [Teredesai, Nicholson]\n+- Use only major version number for libz.so on IRIX and OSF1 [Reinholdtsen]\n+- Use fdopen() (not _fdopen()) for Interix in zutil.h [B\ufffdck]\n+- Add some FAQ entries about the contrib directory\n+- Update the MVS question in the FAQ\n+- Avoid extraneous reads after EOF in gzio.c [Brown]\n+- Correct spelling of \"successfully\" in gzio.c [Randers-Pehrson]\n+- Add comments to zlib.h about gzerror() usage [Brown]\n+- Set extra flags in gzip header in gzopen() like deflate() does\n+- Make configure options more compatible with double-dash conventions\n+  [Weigelt]\n+- Clean up compilation under Solaris SunStudio cc [Rowe, Reinholdtsen]\n+- Fix uninstall target in Makefile.in [Truta]\n+- Add pkgconfig support [Weigelt]\n+- Use $(DESTDIR) macro in Makefile.in [Reinholdtsen, Weigelt]\n+- Replace set_data_type() with a more accurate detect_data_type() in\n+  trees.c, according to the txtvsbin.txt document [Truta]\n+- Swap the order of #include <stdio.h> and #include \"zlib.h\" in\n+  gzio.c, example.c and minigzip.c [Truta]\n+- Shut up annoying VS2005 warnings about standard C deprecation [Rowe,\n+  Truta] (where?)\n+- Fix target \"clean\" from win32/Makefile.bor [Truta]\n+- Create .pdb and .manifest files in win32/makefile.msc [Ziegler, Rowe]\n+- Update zlib www home address in win32/DLL_FAQ.txt [Truta]\n+- Update contrib/masmx86/inffas32.asm for VS2005 [Vollant, Van Wassenhove]\n+- Enable browse info in the \"Debug\" and \"ASM Debug\" configurations in\n+  the Visual C++ 6 project, and set (non-ASM) \"Debug\" as default [Truta]\n+- Add pkgconfig support [Weigelt]\n+- Add ZLIB_VER_MAJOR, ZLIB_VER_MINOR and ZLIB_VER_REVISION in zlib.h,\n+  for use in win32/zlib1.rc [Polushin, Rowe, Truta]\n+- Add a document that explains the new text detection scheme to\n+  doc/txtvsbin.txt [Truta]\n+- Add rfc1950.txt, rfc1951.txt and rfc1952.txt to doc/ [Truta]\n+- Move algorithm.txt into doc/ [Truta]\n+- Synchronize FAQ with website\n+- Fix compressBound(), was low for some pathological cases [Fearnley]\n+- Take into account wrapper variations in deflateBound()\n+- Set examples/zpipe.c input and output to binary mode for Windows\n+- Update examples/zlib_how.html with new zpipe.c (also web site)\n+- Fix some warnings in examples/gzlog.c and examples/zran.c (it seems\n+  that gcc became pickier in 4.0)\n+- Add zlib.map for Linux: \"All symbols from zlib-1.1.4 remain\n+  un-versioned, the patch adds versioning only for symbols introduced in\n+  zlib-1.2.0 or later.  It also declares as local those symbols which are\n+  not designed to be exported.\" [Levin]\n+- Update Z_PREFIX list in zconf.in.h, add --zprefix option to configure\n+- Do not initialize global static by default in trees.c, add a response\n+  NO_INIT_GLOBAL_POINTERS to initialize them if needed [Marquess]\n+- Don't use strerror() in gzio.c under WinCE [Yakimov]\n+- Don't use errno.h in zutil.h under WinCE [Yakimov]\n+- Move arguments for AR to its usage to allow replacing ar [Marot]\n+- Add HAVE_VISIBILITY_PRAGMA in zconf.in.h for Mozilla [Randers-Pehrson]\n+- Improve inflateInit() and inflateInit2() documentation\n+- Fix structure size comment in inflate.h\n+- Change configure help option from --h* to --help [Santos]\n+\n Changes in 1.2.3 (18 July 2005)\n - Apply security vulnerability fixes to contrib/infback9 as well\n - Clean up some text files (carriage returns, trailing space)\n@@ -13,7 +366,7 @@ Changes in 1.2.2.4 (11 July 2005)\n   compile\n - Fix some spelling errors in comments [Betts]\n - Correct inflateInit2() error return documentation in zlib.h\n-- Added zran.c example of compressed data random access to examples\n+- Add zran.c example of compressed data random access to examples\n   directory, shows use of inflatePrime()\n - Fix cast for assignments to strm->state in inflate.c and infback.c\n - Fix zlibCompileFlags() in zutil.c to use 1L for long shifts [Oberhumer]"}, {"sha": "8cce45d3023ccfa96909b3fdd69805a71ce7f0dd", "filename": "zlib/ChangeLog.gcj", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2FChangeLog.gcj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2FChangeLog.gcj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2FChangeLog.gcj?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,3 +1,7 @@\n+2012-03-02  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* Imported zlib 1.2.5; merged local changes.\n+\n 2011-11-21  Andreas Tobler  <andreast@fgznet.ch>\n \n         * configure: Regenerate."}, {"sha": "1a22750a58e40c0a3db4302108773c5242e1ff66", "filename": "zlib/FAQ", "status": "modified", "additions": 144, "deletions": 117, "changes": 261, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2FFAQ", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2FFAQ", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2FFAQ?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -3,8 +3,8 @@\n \n \n If your question is not there, please check the zlib home page\n-http://www.zlib.org which may have more recent information.\n-The lastest zlib FAQ is at http://www.gzip.org/zlib/zlib_faq.html\n+http://zlib.net/ which may have more recent information.\n+The lastest zlib FAQ is at http://zlib.net/zlib_faq.html\n \n \n  1. Is zlib Y2K-compliant?\n@@ -13,54 +13,51 @@ The lastest zlib FAQ is at http://www.gzip.org/zlib/zlib_faq.html\n \n  2. Where can I get a Windows DLL version?\n \n-    The zlib sources can be compiled without change to produce a DLL.\n-    See the file win32/DLL_FAQ.txt in the zlib distribution.\n-    Pointers to the precompiled DLL are found in the zlib web site at\n-    http://www.zlib.org.\n+    The zlib sources can be compiled without change to produce a DLL.  See the\n+    file win32/DLL_FAQ.txt in the zlib distribution.  Pointers to the\n+    precompiled DLL are found in the zlib web site at http://zlib.net/ .\n \n  3. Where can I get a Visual Basic interface to zlib?\n \n     See\n-        * http://www.dogma.net/markn/articles/zlibtool/zlibtool.htm\n-        * contrib/visual-basic.txt in the zlib distribution\n+        * http://marknelson.us/1997/01/01/zlib-engine/\n         * win32/DLL_FAQ.txt in the zlib distribution\n \n  4. compress() returns Z_BUF_ERROR.\n \n-    Make sure that before the call of compress, the length of the compressed\n-    buffer is equal to the total size of the compressed buffer and not\n-    zero. For Visual Basic, check that this parameter is passed by reference\n+    Make sure that before the call of compress(), the length of the compressed\n+    buffer is equal to the available size of the compressed buffer and not\n+    zero.  For Visual Basic, check that this parameter is passed by reference\n     (\"as any\"), not by value (\"as long\").\n \n  5. deflate() or inflate() returns Z_BUF_ERROR.\n \n-    Before making the call, make sure that avail_in and avail_out are not\n-    zero. When setting the parameter flush equal to Z_FINISH, also make sure\n-    that avail_out is big enough to allow processing all pending input.\n-    Note that a Z_BUF_ERROR is not fatal--another call to deflate() or\n-    inflate() can be made with more input or output space. A Z_BUF_ERROR\n-    may in fact be unavoidable depending on how the functions are used, since\n-    it is not possible to tell whether or not there is more output pending\n-    when strm.avail_out returns with zero.\n+    Before making the call, make sure that avail_in and avail_out are not zero.\n+    When setting the parameter flush equal to Z_FINISH, also make sure that\n+    avail_out is big enough to allow processing all pending input.  Note that a\n+    Z_BUF_ERROR is not fatal--another call to deflate() or inflate() can be\n+    made with more input or output space.  A Z_BUF_ERROR may in fact be\n+    unavoidable depending on how the functions are used, since it is not\n+    possible to tell whether or not there is more output pending when\n+    strm.avail_out returns with zero.  See http://zlib.net/zlib_how.html for a\n+    heavily annotated example.\n \n  6. Where's the zlib documentation (man pages, etc.)?\n \n-    It's in zlib.h for the moment, and Francis S. Lin has converted it to a\n-    web page zlib.html. Volunteers to transform this to Unix-style man pages,\n-    please contact us (zlib@gzip.org). Examples of zlib usage are in the files\n-    example.c and minigzip.c.\n+    It's in zlib.h .  Examples of zlib usage are in the files example.c and\n+    minigzip.c, with more in examples/ .\n \n  7. Why don't you use GNU autoconf or libtool or ...?\n \n-    Because we would like to keep zlib as a very small and simple\n-    package. zlib is rather portable and doesn't need much configuration.\n+    Because we would like to keep zlib as a very small and simple package.\n+    zlib is rather portable and doesn't need much configuration.\n \n  8. I found a bug in zlib.\n \n-    Most of the time, such problems are due to an incorrect usage of\n-    zlib. Please try to reproduce the problem with a small program and send\n-    the corresponding source to us at zlib@gzip.org . Do not send\n-    multi-megabyte data files without prior agreement.\n+    Most of the time, such problems are due to an incorrect usage of zlib.\n+    Please try to reproduce the problem with a small program and send the\n+    corresponding source to us at zlib@gzip.org .  Do not send multi-megabyte\n+    data files without prior agreement.\n \n  9. Why do I get \"undefined reference to gzputc\"?\n \n@@ -82,7 +79,7 @@ The lastest zlib FAQ is at http://www.gzip.org/zlib/zlib_faq.html\n \n 12. Can zlib handle .Z files?\n \n-    No, sorry. You have to spawn an uncompress or gunzip subprocess, or adapt\n+    No, sorry.  You have to spawn an uncompress or gunzip subprocess, or adapt\n     the code of uncompress on your own.\n \n 13. How can I make a Unix shared library?\n@@ -99,8 +96,10 @@ The lastest zlib FAQ is at http://www.gzip.org/zlib/zlib_faq.html\n \n     However, many flavors of Unix come with a shared zlib already installed.\n     Before going to the trouble of compiling a shared version of zlib and\n-    trying to install it, you may want to check if it's already there! If you\n-    can #include <zlib.h>, it's there. The -lz option will probably link to it.\n+    trying to install it, you may want to check if it's already there!  If you\n+    can #include <zlib.h>, it's there.  The -lz option will probably link to\n+    it.  You can check the version at the top of zlib.h or with the\n+    ZLIB_VERSION symbol defined in zlib.h .\n \n 15. I have a question about OttoPDF.\n \n@@ -109,8 +108,8 @@ The lastest zlib FAQ is at http://www.gzip.org/zlib/zlib_faq.html\n \n 16. Can zlib decode Flate data in an Adobe PDF file?\n \n-    Yes. See http://www.fastio.com/ (ClibPDF), or http://www.pdflib.com/ .\n-    To modify PDF forms, see http://sourceforge.net/projects/acroformtool/ .\n+    Yes. See http://www.pdflib.com/ . To modify PDF forms, see\n+    http://sourceforge.net/projects/acroformtool/ .\n \n 17. Why am I getting this \"register_frame_info not found\" error on Solaris?\n \n@@ -121,67 +120,67 @@ The lastest zlib FAQ is at http://www.gzip.org/zlib/zlib_faq.html\n         symbol __register_frame_info: referenced symbol not found\n \n     The symbol __register_frame_info is not part of zlib, it is generated by\n-    the C compiler (cc or gcc). You must recompile applications using zlib\n-    which have this problem. This problem is specific to Solaris. See\n+    the C compiler (cc or gcc).  You must recompile applications using zlib\n+    which have this problem.  This problem is specific to Solaris.  See\n     http://www.sunfreeware.com for Solaris versions of zlib and applications\n     using zlib.\n \n 18. Why does gzip give an error on a file I make with compress/deflate?\n \n     The compress and deflate functions produce data in the zlib format, which\n-    is different and incompatible with the gzip format. The gz* functions in\n-    zlib on the other hand use the gzip format. Both the zlib and gzip\n-    formats use the same compressed data format internally, but have different\n-    headers and trailers around the compressed data.\n+    is different and incompatible with the gzip format.  The gz* functions in\n+    zlib on the other hand use the gzip format.  Both the zlib and gzip formats\n+    use the same compressed data format internally, but have different headers\n+    and trailers around the compressed data.\n \n 19. Ok, so why are there two different formats?\n \n-    The gzip format was designed to retain the directory information about\n-    a single file, such as the name and last modification date. The zlib\n-    format on the other hand was designed for in-memory and communication\n-    channel applications, and has a much more compact header and trailer and\n-    uses a faster integrity check than gzip.\n+    The gzip format was designed to retain the directory information about a\n+    single file, such as the name and last modification date.  The zlib format\n+    on the other hand was designed for in-memory and communication channel\n+    applications, and has a much more compact header and trailer and uses a\n+    faster integrity check than gzip.\n \n 20. Well that's nice, but how do I make a gzip file in memory?\n \n     You can request that deflate write the gzip format instead of the zlib\n-    format using deflateInit2(). You can also request that inflate decode\n-    the gzip format using inflateInit2(). Read zlib.h for more details.\n+    format using deflateInit2().  You can also request that inflate decode the\n+    gzip format using inflateInit2().  Read zlib.h for more details.\n \n 21. Is zlib thread-safe?\n \n-    Yes. However any library routines that zlib uses and any application-\n-    provided memory allocation routines must also be thread-safe. zlib's gz*\n+    Yes.  However any library routines that zlib uses and any application-\n+    provided memory allocation routines must also be thread-safe.  zlib's gz*\n     functions use stdio library routines, and most of zlib's functions use the\n-    library memory allocation routines by default. zlib's Init functions allow\n-    for the application to provide custom memory allocation routines.\n+    library memory allocation routines by default.  zlib's *Init* functions\n+    allow for the application to provide custom memory allocation routines.\n \n     Of course, you should only operate on any given zlib or gzip stream from a\n     single thread at a time.\n \n 22. Can I use zlib in my commercial application?\n \n-    Yes. Please read the license in zlib.h.\n+    Yes.  Please read the license in zlib.h.\n \n 23. Is zlib under the GNU license?\n \n-    No. Please read the license in zlib.h.\n+    No.  Please read the license in zlib.h.\n \n 24. The license says that altered source versions must be \"plainly marked\". So\n     what exactly do I need to do to meet that requirement?\n \n-    You need to change the ZLIB_VERSION and ZLIB_VERNUM #defines in zlib.h. In\n+    You need to change the ZLIB_VERSION and ZLIB_VERNUM #defines in zlib.h.  In\n     particular, the final version number needs to be changed to \"f\", and an\n-    identification string should be appended to ZLIB_VERSION. Version numbers\n+    identification string should be appended to ZLIB_VERSION.  Version numbers\n     x.x.x.f are reserved for modifications to zlib by others than the zlib\n-    maintainers. For example, if the version of the base zlib you are altering\n+    maintainers.  For example, if the version of the base zlib you are altering\n     is \"1.2.3.4\", then in zlib.h you should change ZLIB_VERNUM to 0x123f, and\n-    ZLIB_VERSION to something like \"1.2.3.f-zachary-mods-v3\". You can also\n+    ZLIB_VERSION to something like \"1.2.3.f-zachary-mods-v3\".  You can also\n     update the version strings in deflate.c and inftrees.c.\n \n     For altered source distributions, you should also note the origin and\n     nature of the changes in zlib.h, as well as in ChangeLog and README, along\n-    with the dates of the alterations. The origin should include at least your\n+    with the dates of the alterations.  The origin should include at least your\n     name (or your company's name), and an email address to contact for help or\n     issues with the library.\n \n@@ -197,105 +196,112 @@ The lastest zlib FAQ is at http://www.gzip.org/zlib/zlib_faq.html\n \n 26. Will zlib work on a 64-bit machine?\n \n-    It should. It has been tested on 64-bit machines, and has no dependence\n-    on any data types being limited to 32-bits in length. If you have any\n+    Yes.  It has been tested on 64-bit machines, and has no dependence on any\n+    data types being limited to 32-bits in length.  If you have any\n     difficulties, please provide a complete problem report to zlib@gzip.org\n \n 27. Will zlib decompress data from the PKWare Data Compression Library?\n \n-    No. The PKWare DCL uses a completely different compressed data format\n-    than does PKZIP and zlib. However, you can look in zlib's contrib/blast\n+    No.  The PKWare DCL uses a completely different compressed data format than\n+    does PKZIP and zlib.  However, you can look in zlib's contrib/blast\n     directory for a possible solution to your problem.\n \n 28. Can I access data randomly in a compressed stream?\n \n-    No, not without some preparation. If when compressing you periodically\n-    use Z_FULL_FLUSH, carefully write all the pending data at those points,\n-    and keep an index of those locations, then you can start decompression\n-    at those points. You have to be careful to not use Z_FULL_FLUSH too\n-    often, since it can significantly degrade compression.\n+    No, not without some preparation.  If when compressing you periodically use\n+    Z_FULL_FLUSH, carefully write all the pending data at those points, and\n+    keep an index of those locations, then you can start decompression at those\n+    points.  You have to be careful to not use Z_FULL_FLUSH too often, since it\n+    can significantly degrade compression.  Alternatively, you can scan a\n+    deflate stream once to generate an index, and then use that index for\n+    random access.  See examples/zran.c .\n \n 29. Does zlib work on MVS, OS/390, CICS, etc.?\n \n-    We don't know for sure. We have heard occasional reports of success on\n-    these systems. If you do use it on one of these, please provide us with\n-    a report, instructions, and patches that we can reference when we get\n-    these questions. Thanks.\n+    It has in the past, but we have not heard of any recent evidence.  There\n+    were working ports of zlib 1.1.4 to MVS, but those links no longer work.\n+    If you know of recent, successful applications of zlib on these operating\n+    systems, please let us know.  Thanks.\n \n-30. Is there some simpler, easier to read version of inflate I can look at\n-    to understand the deflate format?\n+30. Is there some simpler, easier to read version of inflate I can look at to\n+    understand the deflate format?\n \n-    First off, you should read RFC 1951. Second, yes. Look in zlib's\n+    First off, you should read RFC 1951.  Second, yes.  Look in zlib's\n     contrib/puff directory.\n \n 31. Does zlib infringe on any patents?\n \n-    As far as we know, no. In fact, that was originally the whole point behind\n-    zlib. Look here for some more information:\n+    As far as we know, no.  In fact, that was originally the whole point behind\n+    zlib.  Look here for some more information:\n \n     http://www.gzip.org/#faq11\n \n 32. Can zlib work with greater than 4 GB of data?\n \n-    Yes. inflate() and deflate() will process any amount of data correctly.\n+    Yes.  inflate() and deflate() will process any amount of data correctly.\n     Each call of inflate() or deflate() is limited to input and output chunks\n     of the maximum value that can be stored in the compiler's \"unsigned int\"\n-    type, but there is no limit to the number of chunks. Note however that the\n-    strm.total_in and strm_total_out counters may be limited to 4 GB. These\n+    type, but there is no limit to the number of chunks.  Note however that the\n+    strm.total_in and strm_total_out counters may be limited to 4 GB.  These\n     counters are provided as a convenience and are not used internally by\n-    inflate() or deflate(). The application can easily set up its own counters\n+    inflate() or deflate().  The application can easily set up its own counters\n     updated after each call of inflate() or deflate() to count beyond 4 GB.\n     compress() and uncompress() may be limited to 4 GB, since they operate in a\n-    single call. gzseek() and gztell() may be limited to 4 GB depending on how\n-    zlib is compiled. See the zlibCompileFlags() function in zlib.h.\n+    single call.  gzseek() and gztell() may be limited to 4 GB depending on how\n+    zlib is compiled.  See the zlibCompileFlags() function in zlib.h.\n \n-    The word \"may\" appears several times above since there is a 4 GB limit\n-    only if the compiler's \"long\" type is 32 bits. If the compiler's \"long\"\n-    type is 64 bits, then the limit is 16 exabytes.\n+    The word \"may\" appears several times above since there is a 4 GB limit only\n+    if the compiler's \"long\" type is 32 bits.  If the compiler's \"long\" type is\n+    64 bits, then the limit is 16 exabytes.\n \n 33. Does zlib have any security vulnerabilities?\n \n-    The only one that we are aware of is potentially in gzprintf(). If zlib\n-    is compiled to use sprintf() or vsprintf(), then there is no protection\n-    against a buffer overflow of a 4K string space, other than the caller of\n-    gzprintf() assuring that the output will not exceed 4K. On the other\n-    hand, if zlib is compiled to use snprintf() or vsnprintf(), which should\n-    normally be the case, then there is no vulnerability. The ./configure\n-    script will display warnings if an insecure variation of sprintf() will\n-    be used by gzprintf(). Also the zlibCompileFlags() function will return\n-    information on what variant of sprintf() is used by gzprintf().\n+    The only one that we are aware of is potentially in gzprintf().  If zlib is\n+    compiled to use sprintf() or vsprintf(), then there is no protection\n+    against a buffer overflow of an 8K string space (or other value as set by\n+    gzbuffer()), other than the caller of gzprintf() assuring that the output\n+    will not exceed 8K.  On the other hand, if zlib is compiled to use\n+    snprintf() or vsnprintf(), which should normally be the case, then there is\n+    no vulnerability.  The ./configure script will display warnings if an\n+    insecure variation of sprintf() will be used by gzprintf().  Also the\n+    zlibCompileFlags() function will return information on what variant of\n+    sprintf() is used by gzprintf().\n \n     If you don't have snprintf() or vsnprintf() and would like one, you can\n     find a portable implementation here:\n \n         http://www.ijs.si/software/snprintf/\n \n-    Note that you should be using the most recent version of zlib. Versions\n-    1.1.3 and before were subject to a double-free vulnerability.\n+    Note that you should be using the most recent version of zlib.  Versions\n+    1.1.3 and before were subject to a double-free vulnerability, and versions\n+    1.2.1 and 1.2.2 were subject to an access exception when decompressing\n+    invalid compressed data.\n \n 34. Is there a Java version of zlib?\n \n     Probably what you want is to use zlib in Java. zlib is already included\n     as part of the Java SDK in the java.util.zip package. If you really want\n     a version of zlib written in the Java language, look on the zlib home\n-    page for links: http://www.zlib.org/\n+    page for links: http://zlib.net/ .\n \n 35. I get this or that compiler or source-code scanner warning when I crank it\n     up to maximally-pedantic. Can't you guys write proper code?\n \n     Many years ago, we gave up attempting to avoid warnings on every compiler\n-    in the universe. It just got to be a waste of time, and some compilers\n-    were downright silly. So now, we simply make sure that the code always\n-    works.\n+    in the universe.  It just got to be a waste of time, and some compilers\n+    were downright silly as well as contradicted each other.  So now, we simply\n+    make sure that the code always works.\n \n 36. Valgrind (or some similar memory access checker) says that deflate is\n     performing a conditional jump that depends on an uninitialized value.\n     Isn't that a bug?\n \n-    No.  That is intentional for performance reasons, and the output of\n-    deflate is not affected.  This only started showing up recently since\n-    zlib 1.2.x uses malloc() by default for allocations, whereas earlier\n-    versions used calloc(), which zeros out the allocated memory.\n+    No.  That is intentional for performance reasons, and the output of deflate\n+    is not affected.  This only started showing up recently since zlib 1.2.x\n+    uses malloc() by default for allocations, whereas earlier versions used\n+    calloc(), which zeros out the allocated memory.  Even though the code was\n+    correct, versions 1.2.4 and later was changed to not stimulate these\n+    checkers.\n \n 37. Will zlib read the (insert any ancient or arcane format here) compressed\n     data format?\n@@ -305,20 +311,21 @@ The lastest zlib FAQ is at http://www.gzip.org/zlib/zlib_faq.html\n \n 38. How can I encrypt/decrypt zip files with zlib?\n \n-    zlib doesn't support encryption. The original PKZIP encryption is very weak\n-    and can be broken with freely available programs. To get strong encryption,\n-    use GnuPG, http://www.gnupg.org/ , which already includes zlib compression.\n-    For PKZIP compatible \"encryption\", look at http://www.info-zip.org/\n+    zlib doesn't support encryption.  The original PKZIP encryption is very\n+    weak and can be broken with freely available programs.  To get strong\n+    encryption, use GnuPG, http://www.gnupg.org/ , which already includes zlib\n+    compression.  For PKZIP compatible \"encryption\", look at\n+    http://www.info-zip.org/\n \n 39. What's the difference between the \"gzip\" and \"deflate\" HTTP 1.1 encodings?\n \n-    \"gzip\" is the gzip format, and \"deflate\" is the zlib format. They should\n-    probably have called the second one \"zlib\" instead to avoid confusion\n-    with the raw deflate compressed data format. While the HTTP 1.1 RFC 2616\n+    \"gzip\" is the gzip format, and \"deflate\" is the zlib format.  They should\n+    probably have called the second one \"zlib\" instead to avoid confusion with\n+    the raw deflate compressed data format.  While the HTTP 1.1 RFC 2616\n     correctly points to the zlib specification in RFC 1950 for the \"deflate\"\n     transfer encoding, there have been reports of servers and browsers that\n     incorrectly produce or expect raw deflate data per the deflate\n-    specficiation in RFC 1951, most notably Microsoft. So even though the\n+    specficiation in RFC 1951, most notably Microsoft.  So even though the\n     \"deflate\" transfer encoding using the zlib format would be the more\n     efficient approach (and in fact exactly what the zlib format was designed\n     for), using the \"gzip\" transfer encoding is probably more reliable due to\n@@ -328,12 +335,32 @@ The lastest zlib FAQ is at http://www.gzip.org/zlib/zlib_faq.html\n \n 40. Does zlib support the new \"Deflate64\" format introduced by PKWare?\n \n-    No. PKWare has apparently decided to keep that format proprietary, since\n-    they have not documented it as they have previous compression formats.\n-    In any case, the compression improvements are so modest compared to other\n-    more modern approaches, that it's not worth the effort to implement.\n+    No.  PKWare has apparently decided to keep that format proprietary, since\n+    they have not documented it as they have previous compression formats.  In\n+    any case, the compression improvements are so modest compared to other more\n+    modern approaches, that it's not worth the effort to implement.\n \n-41. Can you please sign these lengthy legal documents and fax them back to us\n+41. I'm having a problem with the zip functions in zlib, can you help?\n+\n+    There are no zip functions in zlib.  You are probably using minizip by\n+    Giles Vollant, which is found in the contrib directory of zlib.  It is not\n+    part of zlib.  In fact none of the stuff in contrib is part of zlib.  The\n+    files in there are not supported by the zlib authors.  You need to contact\n+    the authors of the respective contribution for help.\n+\n+42. The match.asm code in contrib is under the GNU General Public License.\n+    Since it's part of zlib, doesn't that mean that all of zlib falls under the\n+    GNU GPL?\n+\n+    No.  The files in contrib are not part of zlib.  They were contributed by\n+    other authors and are provided as a convenience to the user within the zlib\n+    distribution.  Each item in contrib has its own license.\n+\n+43. Is zlib subject to export controls?  What is its ECCN?\n+\n+    zlib is not subject to export controls, and so is classified as EAR99.\n+\n+44. Can you please sign these lengthy legal documents and fax them back to us\n     so that we can use your software in our product?\n \n     No. Go away. Shoo."}, {"sha": "f6c51ca1759fc8435a8dce00301eda710dcf9eb0", "filename": "zlib/INDEX", "status": "modified", "additions": 22, "deletions": 8, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2FINDEX", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2FINDEX", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2FINDEX?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,23 +1,32 @@\n+CMakeLists.txt  cmake build file\n ChangeLog       history of changes\n FAQ             Frequently Asked Questions about zlib\n INDEX           this file\n-Makefile        makefile for Unix (generated by configure)\n-Makefile.in     makefile for Unix (template for configure)\n+Makefile        dummy Makefile that tells you to ./configure\n+Makefile.in     template for Unix Makefile\n README          guess what\n-algorithm.txt   description of the (de)compression algorithm\n configure       configure script for Unix\n-zconf.in.h      template for zconf.h (used by configure)\n+make_vms.com    makefile for VMS\n+treebuild.xml   XML description of source file dependencies\n+zconf.h.cmakein zconf.h template for cmake\n+zconf.h.in      zconf.h template for configure\n+zlib.3          Man page for zlib\n+zlib.3.pdf      Man page in PDF format\n+zlib.map        Linux symbol information\n+zlib.pc.in      Template for pkg-config descriptor\n+zlib2ansi       perl script to convert source files for C++ compilation\n \n amiga/          makefiles for Amiga SAS C\n-as400/          makefiles for IBM AS/400\n+doc/            documentation for formats and algorithms\n msdos/          makefiles for MSDOS\n+nintendods/     makefile for Nintendo DS\n old/            makefiles for various architectures and zlib documentation\n                 files that have not yet been updated for zlib 1.2.x\n-projects/       projects for various Integrated Development Environments\n qnx/            makefiles for QNX\n+watcom/         makefiles for OpenWatcom\n win32/          makefiles for Windows\n \n-                zlib public header files (must be kept):\n+                zlib public header files (required for library use):\n zconf.h\n zlib.h\n \n@@ -28,7 +37,11 @@ crc32.c\n crc32.h\n deflate.c\n deflate.h\n-gzio.c\n+gzclose.c\n+gzguts.h\n+gzlib.c\n+gzread.c\n+gzwrite.c\n infback.c\n inffast.c\n inffast.h\n@@ -46,6 +59,7 @@ zutil.h\n                 source files for sample programs:\n example.c\n minigzip.c\n+See examples/README.examples for more\n \n                 unsupported contribution by third parties\n See contrib/README.contrib"}, {"sha": "a9c42cb2cf5d82b055ae2ec89c3932b1a172f92b", "filename": "zlib/Makefile.am", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2FMakefile.am?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -5,9 +5,10 @@ AUTOMAKE_OPTIONS = 1.8 cygnus\n ACLOCAL_AMFLAGS = -I .. -I ../config\n \n ZLIB_SOURCES = adler32.c compress.c crc32.c crc32.h deflate.c \\\n-deflate.h gzio.c infback.c inffast.c inffast.h inffixed.h inflate.c \\\n+deflate.h gzguts.h gzread.c gzclose.c gzwrite.c gzlib.c \\\n+infback.c inffast.c inffast.h inffixed.h inflate.c \\\n inflate.h inftrees.c inftrees.h trees.c trees.h uncompr.c zconf.h \\\n-zconf.in.h zlib.h zutil.c zutil.h\n+zconf.h.in zlib.h zutil.c zutil.h\n \n if TARGET_LIBRARY\n noinst_LTLIBRARIES = libzgcj_convenience.la"}, {"sha": "f5ef37a647f6cc5119ee2603fd79c5cdf5ab84fe", "filename": "zlib/Makefile.in", "status": "modified", "additions": 34, "deletions": 13, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2FMakefile.in?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -84,17 +84,19 @@ libz_a_AR = $(AR) $(ARFLAGS)\n libz_a_LIBADD =\n am__objects_1 = libz_a-adler32.$(OBJEXT) libz_a-compress.$(OBJEXT) \\\n \tlibz_a-crc32.$(OBJEXT) libz_a-deflate.$(OBJEXT) \\\n-\tlibz_a-gzio.$(OBJEXT) libz_a-infback.$(OBJEXT) \\\n-\tlibz_a-inffast.$(OBJEXT) libz_a-inflate.$(OBJEXT) \\\n-\tlibz_a-inftrees.$(OBJEXT) libz_a-trees.$(OBJEXT) \\\n-\tlibz_a-uncompr.$(OBJEXT) libz_a-zutil.$(OBJEXT)\n+\tlibz_a-gzread.$(OBJEXT) libz_a-gzclose.$(OBJEXT) \\\n+\tlibz_a-gzwrite.$(OBJEXT) libz_a-gzlib.$(OBJEXT) \\\n+\tlibz_a-infback.$(OBJEXT) libz_a-inffast.$(OBJEXT) \\\n+\tlibz_a-inflate.$(OBJEXT) libz_a-inftrees.$(OBJEXT) \\\n+\tlibz_a-trees.$(OBJEXT) libz_a-uncompr.$(OBJEXT) \\\n+\tlibz_a-zutil.$(OBJEXT)\n @TARGET_LIBRARY_FALSE@am_libz_a_OBJECTS = $(am__objects_1)\n libz_a_OBJECTS = $(am_libz_a_OBJECTS)\n LTLIBRARIES = $(noinst_LTLIBRARIES)\n libzgcj_convenience_la_LIBADD =\n-am__objects_2 = adler32.lo compress.lo crc32.lo deflate.lo gzio.lo \\\n-\tinfback.lo inffast.lo inflate.lo inftrees.lo trees.lo \\\n-\tuncompr.lo zutil.lo\n+am__objects_2 = adler32.lo compress.lo crc32.lo deflate.lo gzread.lo \\\n+\tgzclose.lo gzwrite.lo gzlib.lo infback.lo inffast.lo \\\n+\tinflate.lo inftrees.lo trees.lo uncompr.lo zutil.lo\n @TARGET_LIBRARY_TRUE@am_libzgcj_convenience_la_OBJECTS =  \\\n @TARGET_LIBRARY_TRUE@\t$(am__objects_2)\n libzgcj_convenience_la_OBJECTS = $(am_libzgcj_convenience_la_OBJECTS)\n@@ -244,9 +246,10 @@ top_srcdir = @top_srcdir@\n AUTOMAKE_OPTIONS = 1.8 cygnus\n ACLOCAL_AMFLAGS = -I .. -I ../config\n ZLIB_SOURCES = adler32.c compress.c crc32.c crc32.h deflate.c \\\n-deflate.h gzio.c infback.c inffast.c inffast.h inffixed.h inflate.c \\\n+deflate.h gzguts.h gzread.c gzclose.c gzwrite.c gzlib.c \\\n+infback.c inffast.c inffast.h inffixed.h inflate.c \\\n inflate.h inftrees.c inftrees.h trees.c trees.h uncompr.c zconf.h \\\n-zconf.in.h zlib.h zutil.c zutil.h\n+zconf.h.in zlib.h zutil.c zutil.h\n \n @TARGET_LIBRARY_TRUE@noinst_LTLIBRARIES = libzgcj_convenience.la\n @TARGET_LIBRARY_TRUE@libzgcj_convenience_la_SOURCES = $(ZLIB_SOURCES)\n@@ -420,11 +423,29 @@ libz_a-deflate.o: deflate.c\n libz_a-deflate.obj: deflate.c\n \t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libz_a_CFLAGS) $(CFLAGS) -c -o libz_a-deflate.obj `if test -f 'deflate.c'; then $(CYGPATH_W) 'deflate.c'; else $(CYGPATH_W) '$(srcdir)/deflate.c'; fi`\n \n-libz_a-gzio.o: gzio.c\n-\t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libz_a_CFLAGS) $(CFLAGS) -c -o libz_a-gzio.o `test -f 'gzio.c' || echo '$(srcdir)/'`gzio.c\n+libz_a-gzread.o: gzread.c\n+\t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libz_a_CFLAGS) $(CFLAGS) -c -o libz_a-gzread.o `test -f 'gzread.c' || echo '$(srcdir)/'`gzread.c\n \n-libz_a-gzio.obj: gzio.c\n-\t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libz_a_CFLAGS) $(CFLAGS) -c -o libz_a-gzio.obj `if test -f 'gzio.c'; then $(CYGPATH_W) 'gzio.c'; else $(CYGPATH_W) '$(srcdir)/gzio.c'; fi`\n+libz_a-gzread.obj: gzread.c\n+\t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libz_a_CFLAGS) $(CFLAGS) -c -o libz_a-gzread.obj `if test -f 'gzread.c'; then $(CYGPATH_W) 'gzread.c'; else $(CYGPATH_W) '$(srcdir)/gzread.c'; fi`\n+\n+libz_a-gzclose.o: gzclose.c\n+\t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libz_a_CFLAGS) $(CFLAGS) -c -o libz_a-gzclose.o `test -f 'gzclose.c' || echo '$(srcdir)/'`gzclose.c\n+\n+libz_a-gzclose.obj: gzclose.c\n+\t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libz_a_CFLAGS) $(CFLAGS) -c -o libz_a-gzclose.obj `if test -f 'gzclose.c'; then $(CYGPATH_W) 'gzclose.c'; else $(CYGPATH_W) '$(srcdir)/gzclose.c'; fi`\n+\n+libz_a-gzwrite.o: gzwrite.c\n+\t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libz_a_CFLAGS) $(CFLAGS) -c -o libz_a-gzwrite.o `test -f 'gzwrite.c' || echo '$(srcdir)/'`gzwrite.c\n+\n+libz_a-gzwrite.obj: gzwrite.c\n+\t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libz_a_CFLAGS) $(CFLAGS) -c -o libz_a-gzwrite.obj `if test -f 'gzwrite.c'; then $(CYGPATH_W) 'gzwrite.c'; else $(CYGPATH_W) '$(srcdir)/gzwrite.c'; fi`\n+\n+libz_a-gzlib.o: gzlib.c\n+\t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libz_a_CFLAGS) $(CFLAGS) -c -o libz_a-gzlib.o `test -f 'gzlib.c' || echo '$(srcdir)/'`gzlib.c\n+\n+libz_a-gzlib.obj: gzlib.c\n+\t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libz_a_CFLAGS) $(CFLAGS) -c -o libz_a-gzlib.obj `if test -f 'gzlib.c'; then $(CYGPATH_W) 'gzlib.c'; else $(CYGPATH_W) '$(srcdir)/gzlib.c'; fi`\n \n libz_a-infback.o: infback.c\n \t$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libz_a_CFLAGS) $(CFLAGS) -c -o libz_a-infback.o `test -f 'infback.c' || echo '$(srcdir)/'`infback.c"}, {"sha": "2070218cf1edc2906d9df7b16620d23c69b94612", "filename": "zlib/README", "status": "modified", "additions": 38, "deletions": 48, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2FREADME?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -3,57 +3,53 @@ shipped with GCC as convenience.\n \n ZLIB DATA COMPRESSION LIBRARY\n \n-zlib 1.2.3 is a general purpose data compression library.  All the code is\n+zlib 1.2.5 is a general purpose data compression library.  All the code is\n thread safe.  The data format used by the zlib library is described by RFCs\n (Request for Comments) 1950 to 1952 in the files\n http://www.ietf.org/rfc/rfc1950.txt (zlib format), rfc1951.txt (deflate format)\n-and rfc1952.txt (gzip format). These documents are also available in other\n-formats from ftp://ftp.uu.net/graphics/png/documents/zlib/zdoc-index.html\n+and rfc1952.txt (gzip format).\n \n All functions of the compression library are documented in the file zlib.h\n-(volunteer to write man pages welcome, contact zlib@gzip.org). A usage example\n+(volunteer to write man pages welcome, contact zlib@gzip.org).  A usage example\n of the library is given in the file example.c which also tests that the library\n-is working correctly. Another example is given in the file minigzip.c. The\n+is working correctly.  Another example is given in the file minigzip.c.  The\n compression library itself is composed of all source files except example.c and\n minigzip.c.\n \n To compile all files and run the test program, follow the instructions given at\n-the top of Makefile. In short \"make test; make install\" should work for most\n-machines. For Unix: \"./configure; make test; make install\". For MSDOS, use one\n-of the special makefiles such as Makefile.msc. For VMS, use make_vms.com.\n+the top of Makefile.in.  In short \"./configure; make test\", and if that goes\n+well, \"make install\" should work for most flavors of Unix.  For Windows, use one\n+of the special makefiles in win32/ or contrib/vstudio/ .  For VMS, use\n+make_vms.com.\n \n Questions about zlib should be sent to <zlib@gzip.org>, or to Gilles Vollant\n-<info@winimage.com> for the Windows DLL version. The zlib home page is\n-http://www.zlib.org or http://www.gzip.org/zlib/ Before reporting a problem,\n-please check this site to verify that you have the latest version of zlib;\n-otherwise get the latest version and check whether the problem still exists or\n-not.\n+<info@winimage.com> for the Windows DLL version.  The zlib home page is\n+http://zlib.net/ .  Before reporting a problem, please check this site to\n+verify that you have the latest version of zlib; otherwise get the latest\n+version and check whether the problem still exists or not.\n \n-PLEASE read the zlib FAQ http://www.gzip.org/zlib/zlib_faq.html before asking\n-for help.\n+PLEASE read the zlib FAQ http://zlib.net/zlib_faq.html before asking for help.\n \n-Mark Nelson <markn@ieee.org> wrote an article about zlib for the Jan. 1997\n-issue of  Dr. Dobb's Journal; a copy of the article is available in\n-http://dogma.net/markn/articles/zlibtool/zlibtool.htm\n+Mark Nelson <markn@ieee.org> wrote an article about zlib for the Jan.  1997\n+issue of Dr.  Dobb's Journal; a copy of the article is available at\n+http://marknelson.us/1997/01/01/zlib-engine/ .\n \n-The changes made in version 1.2.3 are documented in the file ChangeLog.\n+The changes made in version 1.2.5 are documented in the file ChangeLog.\n \n-Unsupported third party contributions are provided in directory \"contrib\".\n+Unsupported third party contributions are provided in directory contrib/ .\n \n-A Java implementation of zlib is available in the Java Development Kit\n-http://java.sun.com/j2se/1.4.2/docs/api/java/util/zip/package-summary.html\n-See the zlib home page http://www.zlib.org for details.\n+zlib is available in Java using the java.util.zip package, documented at\n+http://java.sun.com/developer/technicalArticles/Programming/compression/ .\n \n-A Perl interface to zlib written by Paul Marquess <pmqs@cpan.org> is in the\n-CPAN (Comprehensive Perl Archive Network) sites\n-http://www.cpan.org/modules/by-module/Compress/\n+A Perl interface to zlib written by Paul Marquess <pmqs@cpan.org> is available\n+at CPAN (Comprehensive Perl Archive Network) sites, including\n+http://search.cpan.org/~pmqs/IO-Compress-Zlib/ .\n \n A Python interface to zlib written by A.M. Kuchling <amk@amk.ca> is\n available in Python 1.5 and later versions, see\n-http://www.python.org/doc/lib/module-zlib.html\n+http://www.python.org/doc/lib/module-zlib.html .\n \n-A zlib binding for TCL written by Andreas Kupries <a.kupries@westend.com> is\n-availlable at http://www.oche.de/~akupries/soft/trf/trf_zip.html\n+zlib is built into tcl: http://wiki.tcl.tk/4610 .\n \n An experimental package to read and write files in .zip format, written on top\n of zlib by Gilles Vollant <info@winimage.com>, is available in the\n@@ -77,25 +73,21 @@ Notes for some targets:\n - zlib doesn't work on HP-UX 9.05 with some versions of /bin/cc. It works with\n   other compilers. Use \"make test\" to check your compiler.\n \n-- gzdopen is not supported on RISCOS, BEOS and by some Mac compilers.\n+- gzdopen is not supported on RISCOS or BEOS.\n \n - For PalmOs, see http://palmzlib.sourceforge.net/\n \n-- When building a shared, i.e. dynamic library on Mac OS X, the library must be\n-  installed before testing (do \"make install\" before \"make test\"), since the\n-  library location is specified in the library.\n-\n \n Acknowledgments:\n \n-  The deflate format used by zlib was defined by Phil Katz. The deflate\n-  and zlib specifications were written by L. Peter Deutsch. Thanks to all the\n-  people who reported problems and suggested various improvements in zlib;\n-  they are too numerous to cite here.\n+  The deflate format used by zlib was defined by Phil Katz.  The deflate and\n+  zlib specifications were written by L.  Peter Deutsch.  Thanks to all the\n+  people who reported problems and suggested various improvements in zlib; they\n+  are too numerous to cite here.\n \n Copyright notice:\n \n- (C) 1995-2004 Jean-loup Gailly and Mark Adler\n+ (C) 1995-2010 Jean-loup Gailly and Mark Adler\n \n   This software is provided 'as-is', without any express or implied\n   warranty.  In no event will the authors be held liable for any damages\n@@ -116,13 +108,11 @@ Copyright notice:\n   Jean-loup Gailly        Mark Adler\n   jloup@gzip.org          madler@alumni.caltech.edu\n \n-If you use the zlib library in a product, we would appreciate *not*\n-receiving lengthy legal documents to sign. The sources are provided\n-for free but without warranty of any kind.  The library has been\n-entirely written by Jean-loup Gailly and Mark Adler; it does not\n-include third-party code.\n+If you use the zlib library in a product, we would appreciate *not* receiving\n+lengthy legal documents to sign.  The sources are provided for free but without\n+warranty of any kind.  The library has been entirely written by Jean-loup\n+Gailly and Mark Adler; it does not include third-party code.\n \n-If you redistribute modified sources, we would appreciate that you include\n-in the file ChangeLog history information documenting your changes. Please\n-read the FAQ for more information on the distribution of modified source\n-versions.\n+If you redistribute modified sources, we would appreciate that you include in\n+the file ChangeLog history information documenting your changes.  Please read\n+the FAQ for more information on the distribution of modified source versions."}, {"sha": "c772d935184dde29debf6c0f172ab1b5caca5924", "filename": "zlib/adler32.c", "status": "modified", "additions": 29, "deletions": 9, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fadler32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fadler32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fadler32.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,12 +1,15 @@\n /* adler32.c -- compute the Adler-32 checksum of a data stream\n- * Copyright (C) 1995-2004 Mark Adler\n+ * Copyright (C) 1995-2007 Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n /* @(#) $Id: adler32.c,v 1.1.1.2 2002/03/11 21:53:23 tromey Exp $ */\n \n-#define ZLIB_INTERNAL\n-#include \"zlib.h\"\n+#include \"zutil.h\"\n+\n+#define local static\n+\n+local uLong adler32_combine_(uLong adler1, uLong adler2, z_off64_t len2);\n \n #define BASE 65521UL    /* largest prime smaller than 65536 */\n #define NMAX 5552\n@@ -125,10 +128,10 @@ uLong ZEXPORT adler32(adler, buf, len)\n }\n \n /* ========================================================================= */\n-uLong ZEXPORT adler32_combine(adler1, adler2, len2)\n+local uLong adler32_combine_(adler1, adler2, len2)\n     uLong adler1;\n     uLong adler2;\n-    z_off_t len2;\n+    z_off64_t len2;\n {\n     unsigned long sum1;\n     unsigned long sum2;\n@@ -141,9 +144,26 @@ uLong ZEXPORT adler32_combine(adler1, adler2, len2)\n     MOD(sum2);\n     sum1 += (adler2 & 0xffff) + BASE - 1;\n     sum2 += ((adler1 >> 16) & 0xffff) + ((adler2 >> 16) & 0xffff) + BASE - rem;\n-    if (sum1 > BASE) sum1 -= BASE;\n-    if (sum1 > BASE) sum1 -= BASE;\n-    if (sum2 > (BASE << 1)) sum2 -= (BASE << 1);\n-    if (sum2 > BASE) sum2 -= BASE;\n+    if (sum1 >= BASE) sum1 -= BASE;\n+    if (sum1 >= BASE) sum1 -= BASE;\n+    if (sum2 >= (BASE << 1)) sum2 -= (BASE << 1);\n+    if (sum2 >= BASE) sum2 -= BASE;\n     return sum1 | (sum2 << 16);\n }\n+\n+/* ========================================================================= */\n+uLong ZEXPORT adler32_combine(adler1, adler2, len2)\n+    uLong adler1;\n+    uLong adler2;\n+    z_off_t len2;\n+{\n+    return adler32_combine_(adler1, adler2, len2);\n+}\n+\n+uLong ZEXPORT adler32_combine64(adler1, adler2, len2)\n+    uLong adler1;\n+    uLong adler2;\n+    z_off64_t len2;\n+{\n+    return adler32_combine_(adler1, adler2, len2);\n+}"}, {"sha": "8940c120fbb9705472fe7d623a37759ebc6ffeec", "filename": "zlib/amiga/Makefile.pup", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Famiga%2FMakefile.pup", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Famiga%2FMakefile.pup", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Famiga%2FMakefile.pup?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -14,8 +14,8 @@ LDFLAGS\t= -o\n LDLIBS\t= LIB:scppc.a LIB:end.o\n RM\t= delete quiet\n \n-OBJS = adler32.o compress.o crc32.o gzio.o uncompr.o deflate.o trees.o \\\n-       zutil.o inflate.o infback.o inftrees.o inffast.o\n+OBJS = adler32.o compress.o crc32.o gzclose.o gzlib.o gzread.o gzwrite.o \\\n+       uncompr.o deflate.o trees.o zutil.o inflate.o infback.o inftrees.o inffast.o\n \n TEST_OBJS = example.o minigzip.o\n \n@@ -55,7 +55,10 @@ compress.o: zlib.h zconf.h\n crc32.o: crc32.h zlib.h zconf.h\n deflate.o: deflate.h zutil.h zlib.h zconf.h\n example.o: zlib.h zconf.h\n-gzio.o: zutil.h zlib.h zconf.h\n+gzclose.o: zlib.h zconf.h gzguts.h\n+gzlib.o: zlib.h zconf.h gzguts.h\n+gzread.o: zlib.h zconf.h gzguts.h\n+gzwrite.o: zlib.h zconf.h gzguts.h\n inffast.o: zutil.h zlib.h zconf.h inftrees.h inflate.h inffast.h\n inflate.o: zutil.h zlib.h zconf.h inftrees.h inflate.h inffast.h\n infback.o: zutil.h zlib.h zconf.h inftrees.h inflate.h inffast.h"}, {"sha": "749e2915271d258a022c32848f0f432d043e1097", "filename": "zlib/amiga/Makefile.sas", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Famiga%2FMakefile.sas", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Famiga%2FMakefile.sas", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Famiga%2FMakefile.sas?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -13,8 +13,8 @@ SCOPTIONS=OPTSCHED OPTINLINE OPTALIAS OPTTIME OPTINLOCAL STRMERGE \\\n        NOICONS PARMS=BOTH NOSTACKCHECK UTILLIB NOVERSION ERRORREXX \\\n        DEF=POSTINC\n \n-OBJS = adler32.o compress.o crc32.o gzio.o uncompr.o deflate.o trees.o \\\n-       zutil.o inflate.o infback.o inftrees.o inffast.o\n+OBJS = adler32.o compress.o crc32.o gzclose.o gzlib.o gzread.o gzwrite.o \\\n+       uncompr.o deflate.o trees.o zutil.o inflate.o infback.o inftrees.o inffast.o\n \n TEST_OBJS = example.o minigzip.o\n \n@@ -54,7 +54,10 @@ compress.o: zlib.h zconf.h\n crc32.o: crc32.h zlib.h zconf.h\n deflate.o: deflate.h zutil.h zlib.h zconf.h\n example.o: zlib.h zconf.h\n-gzio.o: zutil.h zlib.h zconf.h\n+gzclose.o: zlib.h zconf.h gzguts.h\n+gzlib.o: zlib.h zconf.h gzguts.h\n+gzread.o: zlib.h zconf.h gzguts.h\n+gzwrite.o: zlib.h zconf.h gzguts.h\n inffast.o: zutil.h zlib.h zconf.h inftrees.h inflate.h inffast.h\n inflate.o: zutil.h zlib.h zconf.h inftrees.h inflate.h inffast.h\n infback.o: zutil.h zlib.h zconf.h inftrees.h inflate.h inffast.h"}, {"sha": "7de97663f9eec97638da5f311d1f9f12ee4052b6", "filename": "zlib/compress.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcompress.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcompress.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcompress.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,5 +1,5 @@\n /* compress.c -- compress a memory buffer\n- * Copyright (C) 1995-2003 Jean-loup Gailly.\n+ * Copyright (C) 1995-2005 Jean-loup Gailly.\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -75,5 +75,6 @@ int ZEXPORT compress (dest, destLen, source, sourceLen)\n uLong ZEXPORT compressBound (sourceLen)\n     uLong sourceLen;\n {\n-    return sourceLen + (sourceLen >> 12) + (sourceLen >> 14) + 11;\n+    return sourceLen + (sourceLen >> 12) + (sourceLen >> 14) +\n+           (sourceLen >> 25) + 13;\n }"}, {"sha": "dd2285d960a84ce86ee096612a93def1ab3d1a45", "filename": "zlib/contrib/README.contrib", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2FREADME.contrib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2FREADME.contrib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2FREADME.contrib?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -8,7 +8,10 @@ ada/        by Dmitriy Anisimkov <anisimkov@yahoo.com>\n         Support for Ada\n         See http://zlib-ada.sourceforge.net/\n \n-asm586/\n+amd64/      by Mikhail Teterin <mi@ALDAN.algebra.com>\n+        asm code for AMD64\n+        See patch at http://www.freebsd.org/cgi/query-pr.cgi?pr=bin/96393\n+\n asm686/     by Brian Raiter <breadbox@muppetlabs.com>\n         asm code for Pentium and PPro/PII, using the AT&T (GNU as) syntax\n         See http://www.muppetlabs.com/~breadbox/software/assembly.html\n@@ -22,6 +25,10 @@ delphi/     by Cosmin Truta <cosmint@cs.ubbcluj.ro>\n dotzlib/    by Henrik Ravn <henrik@ravn.com>\n         Support for Microsoft .Net and Visual C++ .Net\n \n+gcc_gvmat64/by Gilles Vollant <info@winimage.com>\n+        GCC Version of x86 64-bit (AMD64 and Intel EM64t) code for x64\n+        assembler to replace longest_match() and inflate_fast()\n+\n infback9/   by Mark Adler <madler@alumni.caltech.edu>\n         Unsupported diffs to infback to decode the deflate64 format\n \n@@ -38,20 +45,19 @@ iostream3/  by Ludwig Schwardt <schwardt@sun.ac.za>\n             and Kevin Ruland <kevin@rodin.wustl.edu>\n         Yet another C++ I/O streams interface\n \n-masm686/    by Dan Higdon <hdan@kinesoft.com>\n-            and Chuck Walbourn <chuckw@kinesoft.com>\n-        asm code for Pentium Pro/PII, using the MASM syntax\n-\n masmx64/    by Gilles Vollant <info@winimage.com>\n-\tx86 64-bit (AMD64 and Intel EM64t) code for x64 assembler to\n-\treplace longest_match() and inflate_fast()\n+        x86 64-bit (AMD64 and Intel EM64t) code for x64 assembler to\n+        replace longest_match() and inflate_fast(),  also masm x86\n+        64-bits translation of Chris Anderson inflate_fast()\n \n masmx86/    by Gilles Vollant <info@winimage.com>\n         x86 asm code to replace longest_match() and inflate_fast(),\n-        for Visual C++ and MASM\n+        for Visual C++ and MASM (32 bits).\n+        Based on Brian Raiter (asm686) and Chris Anderson (inflate86)\n \n minizip/    by Gilles Vollant <info@winimage.com>\n         Mini zip and unzip based on zlib\n+        Includes Zip64 support by Mathias Svensson <mathias@result42.com>\n         See http://www.winimage.com/zLibDll/unzip.html\n \n pascal/     by Bob Dellaca <bobdl@xtra.co.nz> et al."}, {"sha": "81d4a1c9494b1c7a26849d2b594874918f04c700", "filename": "zlib/contrib/amd64/amd64-match.S", "status": "added", "additions": 452, "deletions": 0, "changes": 452, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Famd64%2Famd64-match.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Famd64%2Famd64-match.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Famd64%2Famd64-match.S?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -0,0 +1,452 @@\n+/*\n+ * match.S -- optimized version of longest_match()\n+ * based on the similar work by Gilles Vollant, and Brian Raiter, written 1998\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the BSD License. Use by owners of Che Guevarra\n+ * parafernalia is prohibited, where possible, and highly discouraged\n+ * elsewhere.\n+ */\n+\n+#ifndef NO_UNDERLINE\n+#\tdefine\tmatch_init\t_match_init\n+#\tdefine\tlongest_match\t_longest_match\n+#endif\n+\n+#define\tscanend\t\tebx\n+#define\tscanendw\tbx\n+#define\tchainlenwmask\tedx /* high word: current chain len low word: s->wmask */\n+#define\tcurmatch\trsi\n+#define\tcurmatchd\tesi\n+#define\twindowbestlen\tr8\n+#define\tscanalign\tr9\n+#define\tscanalignd\tr9d\n+#define\twindow\t\tr10\n+#define\tbestlen\t\tr11\n+#define\tbestlend\tr11d\n+#define\tscanstart\tr12d\n+#define\tscanstartw\tr12w\n+#define scan\t\tr13\n+#define nicematch\tr14d\n+#define\tlimit\t\tr15\n+#define\tlimitd\t\tr15d\n+#define prev\t\trcx\n+\n+/*\n+ * The 258 is a \"magic number, not a parameter -- changing it\n+ * breaks the hell loose\n+ */\n+#define\tMAX_MATCH\t(258)\n+#define\tMIN_MATCH\t(3)\n+#define\tMIN_LOOKAHEAD\t(MAX_MATCH + MIN_MATCH + 1)\n+#define\tMAX_MATCH_8\t((MAX_MATCH + 7) & ~7)\n+\n+/* stack frame offsets */\n+#define\tLocalVarsSize\t(112)\n+#define _chainlenwmask\t( 8-LocalVarsSize)(%rsp)\n+#define _windowbestlen\t(16-LocalVarsSize)(%rsp)\n+#define save_r14        (24-LocalVarsSize)(%rsp)\n+#define save_rsi        (32-LocalVarsSize)(%rsp)\n+#define save_rbx        (40-LocalVarsSize)(%rsp)\n+#define save_r12        (56-LocalVarsSize)(%rsp)\n+#define save_r13        (64-LocalVarsSize)(%rsp)\n+#define save_r15        (80-LocalVarsSize)(%rsp)\n+\n+\n+.globl\tmatch_init, longest_match\n+\n+/*\n+ * On AMD64 the first argument of a function (in our case -- the pointer to\n+ * deflate_state structure) is passed in %rdi, hence our offsets below are\n+ * all off of that.\n+ */\n+\n+/* you can check the structure offset by running\n+\n+#include <stdlib.h>\n+#include <stdio.h>\n+#include \"deflate.h\"\n+\n+void print_depl()\n+{\n+deflate_state ds;\n+deflate_state *s=&ds;\n+printf(\"size pointer=%u\\n\",(int)sizeof(void*));\n+\n+printf(\"#define dsWSize         (%3u)(%%rdi)\\n\",(int)(((char*)&(s->w_size))-((char*)s)));\n+printf(\"#define dsWMask         (%3u)(%%rdi)\\n\",(int)(((char*)&(s->w_mask))-((char*)s)));\n+printf(\"#define dsWindow        (%3u)(%%rdi)\\n\",(int)(((char*)&(s->window))-((char*)s)));\n+printf(\"#define dsPrev          (%3u)(%%rdi)\\n\",(int)(((char*)&(s->prev))-((char*)s)));\n+printf(\"#define dsMatchLen      (%3u)(%%rdi)\\n\",(int)(((char*)&(s->match_length))-((char*)s)));\n+printf(\"#define dsPrevMatch     (%3u)(%%rdi)\\n\",(int)(((char*)&(s->prev_match))-((char*)s)));\n+printf(\"#define dsStrStart      (%3u)(%%rdi)\\n\",(int)(((char*)&(s->strstart))-((char*)s)));\n+printf(\"#define dsMatchStart    (%3u)(%%rdi)\\n\",(int)(((char*)&(s->match_start))-((char*)s)));\n+printf(\"#define dsLookahead     (%3u)(%%rdi)\\n\",(int)(((char*)&(s->lookahead))-((char*)s)));\n+printf(\"#define dsPrevLen       (%3u)(%%rdi)\\n\",(int)(((char*)&(s->prev_length))-((char*)s)));\n+printf(\"#define dsMaxChainLen   (%3u)(%%rdi)\\n\",(int)(((char*)&(s->max_chain_length))-((char*)s)));\n+printf(\"#define dsGoodMatch     (%3u)(%%rdi)\\n\",(int)(((char*)&(s->good_match))-((char*)s)));\n+printf(\"#define dsNiceMatch     (%3u)(%%rdi)\\n\",(int)(((char*)&(s->nice_match))-((char*)s)));\n+}\n+\n+*/\n+\n+\n+/*\n+  to compile for XCode 3.2 on MacOSX x86_64\n+  - run \"gcc -g -c -DXCODE_MAC_X64_STRUCTURE amd64-match.S\"\n+ */\n+\n+\n+#ifndef CURRENT_LINX_XCODE_MAC_X64_STRUCTURE\n+#define dsWSize\t\t( 68)(%rdi)\n+#define dsWMask\t\t( 76)(%rdi)\n+#define dsWindow\t( 80)(%rdi)\n+#define dsPrev\t\t( 96)(%rdi)\n+#define dsMatchLen\t(144)(%rdi)\n+#define dsPrevMatch\t(148)(%rdi)\n+#define dsStrStart\t(156)(%rdi)\n+#define dsMatchStart\t(160)(%rdi)\n+#define dsLookahead\t(164)(%rdi)\n+#define dsPrevLen\t(168)(%rdi)\n+#define dsMaxChainLen\t(172)(%rdi)\n+#define dsGoodMatch\t(188)(%rdi)\n+#define dsNiceMatch\t(192)(%rdi)\n+\n+#else \n+\n+#ifndef STRUCT_OFFSET\n+#\tdefine STRUCT_OFFSET\t(0)\n+#endif\n+\n+\n+#define dsWSize\t\t( 56 + STRUCT_OFFSET)(%rdi)\n+#define dsWMask\t\t( 64 + STRUCT_OFFSET)(%rdi)\n+#define dsWindow\t( 72 + STRUCT_OFFSET)(%rdi)\n+#define dsPrev\t\t( 88 + STRUCT_OFFSET)(%rdi)\n+#define dsMatchLen\t(136 + STRUCT_OFFSET)(%rdi)\n+#define dsPrevMatch\t(140 + STRUCT_OFFSET)(%rdi)\n+#define dsStrStart\t(148 + STRUCT_OFFSET)(%rdi)\n+#define dsMatchStart\t(152 + STRUCT_OFFSET)(%rdi)\n+#define dsLookahead\t(156 + STRUCT_OFFSET)(%rdi)\n+#define dsPrevLen\t(160 + STRUCT_OFFSET)(%rdi)\n+#define dsMaxChainLen\t(164 + STRUCT_OFFSET)(%rdi)\n+#define dsGoodMatch\t(180 + STRUCT_OFFSET)(%rdi)\n+#define dsNiceMatch\t(184 + STRUCT_OFFSET)(%rdi)\n+\n+#endif\n+\n+\n+\n+\n+.text\n+\n+/* uInt longest_match(deflate_state *deflatestate, IPos curmatch) */\n+\n+longest_match:\n+/*\n+ * Retrieve the function arguments. %curmatch will hold cur_match\n+ * throughout the entire function (passed via rsi on amd64).\n+ * rdi will hold the pointer to the deflate_state (first arg on amd64)\n+ */\n+\t\tmov     %rsi, save_rsi\n+\t\tmov     %rbx, save_rbx\n+\t\tmov\t%r12, save_r12\n+\t\tmov     %r13, save_r13\n+\t\tmov     %r14, save_r14\n+\t\tmov     %r15, save_r15\n+\n+/* uInt wmask = s->w_mask;\t\t\t\t\t\t*/\n+/* unsigned chain_length = s->max_chain_length;\t\t\t\t*/\n+/* if (s->prev_length >= s->good_match) {\t\t\t\t*/\n+/*     chain_length >>= 2;\t\t\t\t\t\t*/\n+/* }\t\t\t\t\t\t\t\t\t*/\n+\n+\t\tmovl\tdsPrevLen, %eax\n+\t\tmovl\tdsGoodMatch, %ebx\n+\t\tcmpl\t%ebx, %eax\n+\t\tmovl\tdsWMask, %eax\n+\t\tmovl\tdsMaxChainLen, %chainlenwmask\n+\t\tjl\tLastMatchGood\n+\t\tshrl\t$2, %chainlenwmask\n+LastMatchGood:\n+\n+/* chainlen is decremented once beforehand so that the function can\t*/\n+/* use the sign flag instead of the zero flag for the exit test.\t*/\n+/* It is then shifted into the high word, to make room for the wmask\t*/\n+/* value, which it will always accompany.\t\t\t\t*/\n+\n+\t\tdecl\t%chainlenwmask\n+\t\tshll\t$16, %chainlenwmask\n+\t\torl\t%eax, %chainlenwmask\n+\n+/* if ((uInt)nice_match > s->lookahead) nice_match = s->lookahead;\t*/\n+\n+\t\tmovl\tdsNiceMatch, %eax\n+\t\tmovl\tdsLookahead, %ebx\n+\t\tcmpl\t%eax, %ebx\n+\t\tjl\tLookaheadLess\n+\t\tmovl\t%eax, %ebx\n+LookaheadLess:\tmovl\t%ebx, %nicematch\n+\n+/* register Bytef *scan = s->window + s->strstart;\t\t\t*/\n+\n+\t\tmov\tdsWindow, %window\n+\t\tmovl\tdsStrStart, %limitd\n+\t\tlea\t(%limit, %window), %scan\n+\n+/* Determine how many bytes the scan ptr is off from being\t\t*/\n+/* dword-aligned.\t\t\t\t\t\t\t*/\n+\n+\t\tmov\t%scan, %scanalign\n+\t\tnegl\t%scanalignd\n+\t\tandl\t$3, %scanalignd\n+\n+/* IPos limit = s->strstart > (IPos)MAX_DIST(s) ?\t\t\t*/\n+/*     s->strstart - (IPos)MAX_DIST(s) : NIL;\t\t\t\t*/\n+\n+\t\tmovl\tdsWSize, %eax\n+\t\tsubl\t$MIN_LOOKAHEAD, %eax\n+\t\txorl\t%ecx, %ecx\n+\t\tsubl\t%eax, %limitd\n+\t\tcmovng\t%ecx, %limitd\n+\n+/* int best_len = s->prev_length;\t\t\t\t\t*/\n+\n+\t\tmovl\tdsPrevLen, %bestlend\n+\n+/* Store the sum of s->window + best_len in %windowbestlen locally, and in memory.\t*/\n+\n+\t\tlea\t(%window, %bestlen), %windowbestlen\n+\t\tmov\t%windowbestlen, _windowbestlen\n+\n+/* register ush scan_start = *(ushf*)scan;\t\t\t\t*/\n+/* register ush scan_end   = *(ushf*)(scan+best_len-1);\t\t\t*/\n+/* Posf *prev = s->prev;\t\t\t\t\t\t*/\n+\n+\t\tmovzwl\t(%scan), %scanstart\n+\t\tmovzwl\t-1(%scan, %bestlen), %scanend\n+\t\tmov\tdsPrev, %prev\n+\n+/* Jump into the main loop.\t\t\t\t\t\t*/\n+\n+\t\tmovl\t%chainlenwmask, _chainlenwmask\n+\t\tjmp\tLoopEntry\n+\n+.balign 16\n+\n+/* do {\n+ *     match = s->window + cur_match;\n+ *     if (*(ushf*)(match+best_len-1) != scan_end ||\n+ *         *(ushf*)match != scan_start) continue;\n+ *     [...]\n+ * } while ((cur_match = prev[cur_match & wmask]) > limit\n+ *          && --chain_length != 0);\n+ *\n+ * Here is the inner loop of the function. The function will spend the\n+ * majority of its time in this loop, and majority of that time will\n+ * be spent in the first ten instructions.\n+ */\n+LookupLoop:\n+\t\tandl\t%chainlenwmask, %curmatchd\n+\t\tmovzwl\t(%prev, %curmatch, 2), %curmatchd\n+\t\tcmpl\t%limitd, %curmatchd\n+\t\tjbe\tLeaveNow\n+\t\tsubl\t$0x00010000, %chainlenwmask\n+\t\tjs\tLeaveNow\n+LoopEntry:\tcmpw\t-1(%windowbestlen, %curmatch), %scanendw\n+\t\tjne\tLookupLoop\n+\t\tcmpw\t%scanstartw, (%window, %curmatch)\n+\t\tjne\tLookupLoop\n+\n+/* Store the current value of chainlen.\t\t\t\t\t*/\n+\t\tmovl\t%chainlenwmask, _chainlenwmask\n+\n+/* %scan is the string under scrutiny, and %prev to the string we\t*/\n+/* are hoping to match it up with. In actuality, %esi and %edi are\t*/\n+/* both pointed (MAX_MATCH_8 - scanalign) bytes ahead, and %edx is\t*/\n+/* initialized to -(MAX_MATCH_8 - scanalign).\t\t\t\t*/\n+\n+\t\tmov\t$(-MAX_MATCH_8), %rdx\n+\t\tlea\t(%curmatch, %window), %windowbestlen\n+\t\tlea\tMAX_MATCH_8(%windowbestlen, %scanalign), %windowbestlen\n+\t\tlea\tMAX_MATCH_8(%scan, %scanalign), %prev\n+\n+/* the prefetching below makes very little difference... */\n+\t\tprefetcht1\t(%windowbestlen, %rdx)\n+\t\tprefetcht1\t(%prev, %rdx)\n+\n+/*\n+ * Test the strings for equality, 8 bytes at a time. At the end,\n+ * adjust %rdx so that it is offset to the exact byte that mismatched.\n+ *\n+ * It should be confessed that this loop usually does not represent\n+ * much of the total running time. Replacing it with a more\n+ * straightforward \"rep cmpsb\" would not drastically degrade\n+ * performance -- unrolling it, for example, makes no difference.\n+ */\n+\n+#undef USE_SSE\t/* works, but is 6-7% slower, than non-SSE... */\n+\n+LoopCmps:\n+#ifdef USE_SSE\n+\t\t/* Preload the SSE registers */\n+\t\tmovdqu\t  (%windowbestlen, %rdx), %xmm1\n+\t\tmovdqu\t  (%prev, %rdx), %xmm2\n+\t\tpcmpeqb\t%xmm2, %xmm1\n+\t\tmovdqu\t16(%windowbestlen, %rdx), %xmm3\n+\t\tmovdqu\t16(%prev, %rdx), %xmm4\n+\t\tpcmpeqb\t%xmm4, %xmm3\n+\t\tmovdqu\t32(%windowbestlen, %rdx), %xmm5\n+\t\tmovdqu\t32(%prev, %rdx), %xmm6\n+\t\tpcmpeqb\t%xmm6, %xmm5\n+\t\tmovdqu\t48(%windowbestlen, %rdx), %xmm7\n+\t\tmovdqu\t48(%prev, %rdx), %xmm8\n+\t\tpcmpeqb\t%xmm8, %xmm7\n+\n+\t\t/* Check the comparisions' results */\n+\t\tpmovmskb %xmm1, %rax\n+\t\tnotw\t%ax\n+\t\tbsfw\t%ax, %ax\n+\t\tjnz\tLeaveLoopCmps\n+\t\t\n+\t\t/* this is the only iteration of the loop with a possibility of having\n+\t\t   incremented rdx by 0x108 (each loop iteration add 16*4 = 0x40 \n+\t\t   and (0x40*4)+8=0x108 */\n+\t\tadd\t$8, %rdx\n+\t\tjz LenMaximum\n+\t\tadd\t$8, %rdx\n+\n+\t\t\n+\t\tpmovmskb %xmm3, %rax\n+\t\tnotw\t%ax\n+\t\tbsfw\t%ax, %ax\n+\t\tjnz\tLeaveLoopCmps\n+\t\t\n+\t\t\n+\t\tadd\t$16, %rdx\n+\n+\n+\t\tpmovmskb %xmm5, %rax\n+\t\tnotw\t%ax\n+\t\tbsfw\t%ax, %ax\n+\t\tjnz\tLeaveLoopCmps\n+\t\t\n+\t\tadd\t$16, %rdx\n+\n+\n+\t\tpmovmskb %xmm7, %rax\n+\t\tnotw\t%ax\n+\t\tbsfw\t%ax, %ax\n+\t\tjnz\tLeaveLoopCmps\n+\t\t\n+\t\tadd\t$16, %rdx\n+\t\t\n+\t\tjmp\tLoopCmps\n+LeaveLoopCmps:\tadd\t%rax, %rdx\n+#else\n+\t\tmov\t(%windowbestlen, %rdx), %rax\n+\t\txor\t(%prev, %rdx), %rax\n+\t\tjnz\tLeaveLoopCmps\n+\t\t\n+\t\tmov\t8(%windowbestlen, %rdx), %rax\n+\t\txor\t8(%prev, %rdx), %rax\n+\t\tjnz\tLeaveLoopCmps8\n+\n+\t\tmov\t16(%windowbestlen, %rdx), %rax\n+\t\txor\t16(%prev, %rdx), %rax\n+\t\tjnz\tLeaveLoopCmps16\n+\t\t\t\t\n+\t\tadd\t$24, %rdx\n+\t\tjnz\tLoopCmps\n+\t\tjmp\tLenMaximum\n+#\tif 0\n+/*\n+ * This three-liner is tantalizingly simple, but bsf is a slow instruction,\n+ * and the complicated alternative down below is quite a bit faster. Sad...\n+ */\n+\n+LeaveLoopCmps:\tbsf\t%rax, %rax /* find the first non-zero bit */\n+\t\tshrl\t$3, %eax /* divide by 8 to get the byte */\n+\t\tadd\t%rax, %rdx\n+#\telse\n+LeaveLoopCmps16:\n+\t\tadd\t$8, %rdx\n+LeaveLoopCmps8:\n+\t\tadd\t$8, %rdx\n+LeaveLoopCmps:\ttestl   $0xFFFFFFFF, %eax /* Check the first 4 bytes */\n+\t\tjnz     Check16\n+\t\tadd     $4, %rdx\n+\t\tshr     $32, %rax\n+Check16:        testw   $0xFFFF, %ax\n+\t\tjnz     LenLower\n+\t\tadd\t$2, %rdx\n+\t\tshrl\t$16, %eax\n+LenLower:\tsubb\t$1, %al\n+\t\tadc\t$0, %rdx\n+#\tendif\n+#endif\n+\n+/* Calculate the length of the match. If it is longer than MAX_MATCH,\t*/\n+/* then automatically accept it as the best possible match and leave.\t*/\n+\n+\t\tlea\t(%prev, %rdx), %rax\n+\t\tsub\t%scan, %rax\n+\t\tcmpl\t$MAX_MATCH, %eax\n+\t\tjge\tLenMaximum\n+\n+/* If the length of the match is not longer than the best match we\t*/\n+/* have so far, then forget it and return to the lookup loop.\t\t*/\n+\n+\t\tcmpl\t%bestlend, %eax\n+\t\tjg\tLongerMatch\n+\t\tmov\t_windowbestlen, %windowbestlen\n+\t\tmov\tdsPrev, %prev\n+\t\tmovl\t_chainlenwmask, %edx\n+\t\tjmp\tLookupLoop\n+\n+/*         s->match_start = cur_match;\t\t\t\t\t*/\n+/*         best_len = len;\t\t\t\t\t\t*/\n+/*         if (len >= nice_match) break;\t\t\t\t*/\n+/*         scan_end = *(ushf*)(scan+best_len-1);\t\t\t*/\n+\n+LongerMatch:\n+\t\tmovl\t%eax, %bestlend\n+\t\tmovl\t%curmatchd, dsMatchStart\n+\t\tcmpl\t%nicematch, %eax\n+\t\tjge\tLeaveNow\n+\n+\t\tlea\t(%window, %bestlen), %windowbestlen\n+\t\tmov\t%windowbestlen, _windowbestlen\n+\n+\t\tmovzwl\t-1(%scan, %rax), %scanend\n+\t\tmov\tdsPrev, %prev\n+\t\tmovl\t_chainlenwmask, %chainlenwmask\n+\t\tjmp\tLookupLoop\n+\n+/* Accept the current string, with the maximum possible length.\t\t*/\n+\n+LenMaximum:\n+\t\tmovl\t$MAX_MATCH, %bestlend\n+\t\tmovl\t%curmatchd, dsMatchStart\n+\n+/* if ((uInt)best_len <= s->lookahead) return (uInt)best_len;\t\t*/\n+/* return s->lookahead;\t\t\t\t\t\t\t*/\n+\n+LeaveNow:\n+\t\tmovl\tdsLookahead, %eax\n+\t\tcmpl\t%eax, %bestlend\n+\t\tcmovngl\t%bestlend, %eax\n+LookaheadRet:\n+\n+/* Restore the registers and return from whence we came.\t\t\t*/\n+\n+\tmov\tsave_rsi, %rsi\n+\tmov\tsave_rbx, %rbx\n+\tmov\tsave_r12, %r12\n+\tmov\tsave_r13, %r13\n+\tmov\tsave_r14, %r14\n+\tmov\tsave_r15, %r15\n+\n+\tret\n+\n+match_init:\tret"}, {"sha": "6bb78f32069be8952917f66c95d63b154ad9c830", "filename": "zlib/contrib/asm586/README.586", "status": "removed", "additions": 0, "deletions": 43, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d216c70d980e3169b42e9734cf4bea1648ff8f0/zlib%2Fcontrib%2Fasm586%2FREADME.586", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d216c70d980e3169b42e9734cf4bea1648ff8f0/zlib%2Fcontrib%2Fasm586%2FREADME.586", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fasm586%2FREADME.586?ref=5d216c70d980e3169b42e9734cf4bea1648ff8f0", "patch": "@@ -1,43 +0,0 @@\n-This is a patched version of zlib modified to use\n-Pentium-optimized assembly code in the deflation algorithm. The files\n-changed/added by this patch are:\n-\n-README.586\n-match.S\n-\n-The effectiveness of these modifications is a bit marginal, as the the\n-program's bottleneck seems to be mostly L1-cache contention, for which\n-there is no real way to work around without rewriting the basic\n-algorithm. The speedup on average is around 5-10% (which is generally\n-less than the amount of variance between subsequent executions).\n-However, when used at level 9 compression, the cache contention can\n-drop enough for the assembly version to achieve 10-20% speedup (and\n-sometimes more, depending on the amount of overall redundancy in the\n-files). Even here, though, cache contention can still be the limiting\n-factor, depending on the nature of the program using the zlib library.\n-This may also mean that better improvements will be seen on a Pentium\n-with MMX, which suffers much less from L1-cache contention, but I have\n-not yet verified this.\n-\n-Note that this code has been tailored for the Pentium in particular,\n-and will not perform well on the Pentium Pro (due to the use of a\n-partial register in the inner loop).\n-\n-If you are using an assembler other than GNU as, you will have to\n-translate match.S to use your assembler's syntax. (Have fun.)\n-\n-Brian Raiter\n-breadbox@muppetlabs.com\n-April, 1998\n-\n-\n-Added for zlib 1.1.3:\n-\n-The patches come from\n-http://www.muppetlabs.com/~breadbox/software/assembly.html\n-\n-To compile zlib with this asm file, copy match.S to the zlib directory\n-then do:\n-\n-CFLAGS=\"-O3 -DASMV\" ./configure\n-make OBJA=match.o"}, {"sha": "0368b35fe3aa93c1d3cb09d0de3c1cfecca8867c", "filename": "zlib/contrib/asm586/match.S", "status": "removed", "additions": 0, "deletions": 364, "changes": 364, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d216c70d980e3169b42e9734cf4bea1648ff8f0/zlib%2Fcontrib%2Fasm586%2Fmatch.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d216c70d980e3169b42e9734cf4bea1648ff8f0/zlib%2Fcontrib%2Fasm586%2Fmatch.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fasm586%2Fmatch.S?ref=5d216c70d980e3169b42e9734cf4bea1648ff8f0", "patch": "@@ -1,364 +0,0 @@\n-/* match.s -- Pentium-optimized version of longest_match()\n- * Written for zlib 1.1.2\n- * Copyright (C) 1998 Brian Raiter <breadbox@muppetlabs.com>\n- *\n- * This is free software; you can redistribute it and/or modify it\n- * under the terms of the GNU General Public License.\n- */\n-\n-#ifndef NO_UNDERLINE\n-#define\tmatch_init\t_match_init\n-#define\tlongest_match\t_longest_match\n-#endif\n-\n-#define\tMAX_MATCH\t(258)\n-#define\tMIN_MATCH\t(3)\n-#define\tMIN_LOOKAHEAD\t(MAX_MATCH + MIN_MATCH + 1)\n-#define\tMAX_MATCH_8\t((MAX_MATCH + 7) & ~7)\n-\n-/* stack frame offsets */\n-\n-#define\twmask\t\t\t0\t/* local copy of s->wmask\t*/\n-#define\twindow\t\t\t4\t/* local copy of s->window\t*/\n-#define\twindowbestlen\t\t8\t/* s->window + bestlen\t\t*/\n-#define\tchainlenscanend\t\t12\t/* high word: current chain len\t*/\n-\t\t\t\t\t/* low word: last bytes sought\t*/\n-#define\tscanstart\t\t16\t/* first two bytes of string\t*/\n-#define\tscanalign\t\t20\t/* dword-misalignment of string\t*/\n-#define\tnicematch\t\t24\t/* a good enough match size\t*/\n-#define\tbestlen\t\t\t28\t/* size of best match so far\t*/\n-#define\tscan\t\t\t32\t/* ptr to string wanting match\t*/\n-\n-#define\tLocalVarsSize\t\t(36)\n-/*\tsaved ebx\t\t36 */\n-/*\tsaved edi\t\t40 */\n-/*\tsaved esi\t\t44 */\n-/*\tsaved ebp\t\t48 */\n-/*\treturn address\t\t52 */\n-#define\tdeflatestate\t\t56\t/* the function arguments\t*/\n-#define\tcurmatch\t\t60\n-\n-/* Offsets for fields in the deflate_state structure. These numbers\n- * are calculated from the definition of deflate_state, with the\n- * assumption that the compiler will dword-align the fields. (Thus,\n- * changing the definition of deflate_state could easily cause this\n- * program to crash horribly, without so much as a warning at\n- * compile time. Sigh.)\n- */\n-\n-/* All the +zlib1222add offsets are due to the addition of fields\n- *  in zlib in the deflate_state structure since the asm code was first written\n- * (if you compile with zlib 1.0.4 or older, use \"zlib1222add equ (-4)\").\n- * (if you compile with zlib between 1.0.5 and 1.2.2.1, use \"zlib1222add equ 0\").\n- * if you compile with zlib 1.2.2.2 or later , use \"zlib1222add equ 8\").\n- */\n-\n-#define zlib1222add\t\t(8)\n-\n-#define\tdsWSize\t\t\t(36+zlib1222add)\n-#define\tdsWMask\t\t\t(44+zlib1222add)\n-#define\tdsWindow\t\t(48+zlib1222add)\n-#define\tdsPrev\t\t\t(56+zlib1222add)\n-#define\tdsMatchLen\t\t(88+zlib1222add)\n-#define\tdsPrevMatch\t\t(92+zlib1222add)\n-#define\tdsStrStart\t\t(100+zlib1222add)\n-#define\tdsMatchStart\t\t(104+zlib1222add)\n-#define\tdsLookahead\t\t(108+zlib1222add)\n-#define\tdsPrevLen\t\t(112+zlib1222add)\n-#define\tdsMaxChainLen\t\t(116+zlib1222add)\n-#define\tdsGoodMatch\t\t(132+zlib1222add)\n-#define\tdsNiceMatch\t\t(136+zlib1222add)\n-\n-\n-.file \"match.S\"\n-\n-.globl\tmatch_init, longest_match\n-\n-.text\n-\n-/* uInt longest_match(deflate_state *deflatestate, IPos curmatch) */\n-\n-longest_match:\n-\n-/* Save registers that the compiler may be using, and adjust %esp to\t*/\n-/* make room for our stack frame.\t\t\t\t\t*/\n-\n-\t\tpushl\t%ebp\n-\t\tpushl\t%edi\n-\t\tpushl\t%esi\n-\t\tpushl\t%ebx\n-\t\tsubl\t$LocalVarsSize, %esp\n-\n-/* Retrieve the function arguments. %ecx will hold cur_match\t\t*/\n-/* throughout the entire function. %edx will hold the pointer to the\t*/\n-/* deflate_state structure during the function's setup (before\t\t*/\n-/* entering the main loop).\t\t\t\t\t\t*/\n-\n-\t\tmovl\tdeflatestate(%esp), %edx\n-\t\tmovl\tcurmatch(%esp), %ecx\n-\n-/* if ((uInt)nice_match > s->lookahead) nice_match = s->lookahead;\t*/\n-\n-\t\tmovl\tdsNiceMatch(%edx), %eax\n-\t\tmovl\tdsLookahead(%edx), %ebx\n-\t\tcmpl\t%eax, %ebx\n-\t\tjl\tLookaheadLess\n-\t\tmovl\t%eax, %ebx\n-LookaheadLess:\tmovl\t%ebx, nicematch(%esp)\n-\n-/* register Bytef *scan = s->window + s->strstart;\t\t\t*/\n-\n-\t\tmovl\tdsWindow(%edx), %esi\n-\t\tmovl\t%esi, window(%esp)\n-\t\tmovl\tdsStrStart(%edx), %ebp\n-\t\tlea\t(%esi,%ebp), %edi\n-\t\tmovl\t%edi, scan(%esp)\n-\n-/* Determine how many bytes the scan ptr is off from being\t\t*/\n-/* dword-aligned.\t\t\t\t\t\t\t*/\n-\n-\t\tmovl\t%edi, %eax\n-\t\tnegl\t%eax\n-\t\tandl\t$3, %eax\n-\t\tmovl\t%eax, scanalign(%esp)\n-\n-/* IPos limit = s->strstart > (IPos)MAX_DIST(s) ?\t\t\t*/\n-/*     s->strstart - (IPos)MAX_DIST(s) : NIL;\t\t\t\t*/\n-\n-\t\tmovl\tdsWSize(%edx), %eax\n-\t\tsubl\t$MIN_LOOKAHEAD, %eax\n-\t\tsubl\t%eax, %ebp\n-\t\tjg\tLimitPositive\n-\t\txorl\t%ebp, %ebp\n-LimitPositive:\n-\n-/* unsigned chain_length = s->max_chain_length;\t\t\t\t*/\n-/* if (s->prev_length >= s->good_match) {\t\t\t\t*/\n-/*     chain_length >>= 2;\t\t\t\t\t\t*/\n-/* }\t\t\t\t\t\t\t\t\t*/\n-\n-\t\tmovl\tdsPrevLen(%edx), %eax\n-\t\tmovl\tdsGoodMatch(%edx), %ebx\n-\t\tcmpl\t%ebx, %eax\n-\t\tmovl\tdsMaxChainLen(%edx), %ebx\n-\t\tjl\tLastMatchGood\n-\t\tshrl\t$2, %ebx\n-LastMatchGood:\n-\n-/* chainlen is decremented once beforehand so that the function can\t*/\n-/* use the sign flag instead of the zero flag for the exit test.\t*/\n-/* It is then shifted into the high word, to make room for the scanend\t*/\n-/* scanend value, which it will always accompany.\t\t\t*/\n-\n-\t\tdecl\t%ebx\n-\t\tshll\t$16, %ebx\n-\n-/* int best_len = s->prev_length;\t\t\t\t\t*/\n-\n-\t\tmovl\tdsPrevLen(%edx), %eax\n-\t\tmovl\t%eax, bestlen(%esp)\n-\n-/* Store the sum of s->window + best_len in %esi locally, and in %esi.\t*/\n-\n-\t\taddl\t%eax, %esi\n-\t\tmovl\t%esi, windowbestlen(%esp)\n-\n-/* register ush scan_start = *(ushf*)scan;\t\t\t\t*/\n-/* register ush scan_end   = *(ushf*)(scan+best_len-1);\t\t\t*/\n-\n-\t\tmovw\t(%edi), %bx\n-\t\tmovw\t%bx, scanstart(%esp)\n-\t\tmovw\t-1(%edi,%eax), %bx\n-\t\tmovl\t%ebx, chainlenscanend(%esp)\n-\n-/* Posf *prev = s->prev;\t\t\t\t\t\t*/\n-/* uInt wmask = s->w_mask;\t\t\t\t\t\t*/\n-\n-\t\tmovl\tdsPrev(%edx), %edi\n-\t\tmovl\tdsWMask(%edx), %edx\n-\t\tmov\t%edx, wmask(%esp)\n-\n-/* Jump into the main loop.\t\t\t\t\t\t*/\n-\n-\t\tjmp\tLoopEntry\n-\n-.balign 16\n-\n-/* do {\n- *     match = s->window + cur_match;\n- *     if (*(ushf*)(match+best_len-1) != scan_end ||\n- *         *(ushf*)match != scan_start) continue;\n- *     [...]\n- * } while ((cur_match = prev[cur_match & wmask]) > limit\n- *          && --chain_length != 0);\n- *\n- * Here is the inner loop of the function. The function will spend the\n- * majority of its time in this loop, and majority of that time will\n- * be spent in the first ten instructions.\n- *\n- * Within this loop:\n- * %ebx = chainlenscanend - i.e., ((chainlen << 16) | scanend)\n- * %ecx = curmatch\n- * %edx = curmatch & wmask\n- * %esi = windowbestlen - i.e., (window + bestlen)\n- * %edi = prev\n- * %ebp = limit\n- *\n- * Two optimization notes on the choice of instructions:\n- *\n- * The first instruction uses a 16-bit address, which costs an extra,\n- * unpairable cycle. This is cheaper than doing a 32-bit access and\n- * zeroing the high word, due to the 3-cycle misalignment penalty which\n- * would occur half the time. This also turns out to be cheaper than\n- * doing two separate 8-bit accesses, as the memory is so rarely in the\n- * L1 cache.\n- *\n- * The window buffer, however, apparently spends a lot of time in the\n- * cache, and so it is faster to retrieve the word at the end of the\n- * match string with two 8-bit loads. The instructions that test the\n- * word at the beginning of the match string, however, are executed\n- * much less frequently, and there it was cheaper to use 16-bit\n- * instructions, which avoided the necessity of saving off and\n- * subsequently reloading one of the other registers.\n- */\n-LookupLoop:\n-\t\t\t\t\t\t\t/* 1 U & V  */\n-\t\tmovw\t(%edi,%edx,2), %cx\t\t/* 2 U pipe */\n-\t\tmovl\twmask(%esp), %edx\t\t/* 2 V pipe */\n-\t\tcmpl\t%ebp, %ecx\t\t\t/* 3 U pipe */\n-\t\tjbe\tLeaveNow\t\t\t/* 3 V pipe */\n-\t\tsubl\t$0x00010000, %ebx\t\t/* 4 U pipe */\n-\t\tjs\tLeaveNow\t\t\t/* 4 V pipe */\n-LoopEntry:\tmovb\t-1(%esi,%ecx), %al\t\t/* 5 U pipe */\n-\t\tandl\t%ecx, %edx\t\t\t/* 5 V pipe */\n-\t\tcmpb\t%bl, %al\t\t\t/* 6 U pipe */\n-\t\tjnz\tLookupLoop\t\t\t/* 6 V pipe */\n-\t\tmovb\t(%esi,%ecx), %ah\n-\t\tcmpb\t%bh, %ah\n-\t\tjnz\tLookupLoop\n-\t\tmovl\twindow(%esp), %eax\n-\t\tmovw\t(%eax,%ecx), %ax\n-\t\tcmpw\tscanstart(%esp), %ax\n-\t\tjnz\tLookupLoop\n-\n-/* Store the current value of chainlen.\t\t\t\t\t*/\n-\n-\t\tmovl\t%ebx, chainlenscanend(%esp)\n-\n-/* Point %edi to the string under scrutiny, and %esi to the string we\t*/\n-/* are hoping to match it up with. In actuality, %esi and %edi are\t*/\n-/* both pointed (MAX_MATCH_8 - scanalign) bytes ahead, and %edx is\t*/\n-/* initialized to -(MAX_MATCH_8 - scanalign).\t\t\t\t*/\n-\n-\t\tmovl\twindow(%esp), %esi\n-\t\tmovl\tscan(%esp), %edi\n-\t\taddl\t%ecx, %esi\n-\t\tmovl\tscanalign(%esp), %eax\n-\t\tmovl\t$(-MAX_MATCH_8), %edx\n-\t\tlea\tMAX_MATCH_8(%edi,%eax), %edi\n-\t\tlea\tMAX_MATCH_8(%esi,%eax), %esi\n-\n-/* Test the strings for equality, 8 bytes at a time. At the end,\n- * adjust %edx so that it is offset to the exact byte that mismatched.\n- *\n- * We already know at this point that the first three bytes of the\n- * strings match each other, and they can be safely passed over before\n- * starting the compare loop. So what this code does is skip over 0-3\n- * bytes, as much as necessary in order to dword-align the %edi\n- * pointer. (%esi will still be misaligned three times out of four.)\n- *\n- * It should be confessed that this loop usually does not represent\n- * much of the total running time. Replacing it with a more\n- * straightforward \"rep cmpsb\" would not drastically degrade\n- * performance.\n- */\n-LoopCmps:\n-\t\tmovl\t(%esi,%edx), %eax\n-\t\tmovl\t(%edi,%edx), %ebx\n-\t\txorl\t%ebx, %eax\n-\t\tjnz\tLeaveLoopCmps\n-\t\tmovl\t4(%esi,%edx), %eax\n-\t\tmovl\t4(%edi,%edx), %ebx\n-\t\txorl\t%ebx, %eax\n-\t\tjnz\tLeaveLoopCmps4\n-\t\taddl\t$8, %edx\n-\t\tjnz\tLoopCmps\n-\t\tjmp\tLenMaximum\n-LeaveLoopCmps4:\taddl\t$4, %edx\n-LeaveLoopCmps:\ttestl\t$0x0000FFFF, %eax\n-\t\tjnz\tLenLower\n-\t\taddl\t$2, %edx\n-\t\tshrl\t$16, %eax\n-LenLower:\tsubb\t$1, %al\n-\t\tadcl\t$0, %edx\n-\n-/* Calculate the length of the match. If it is longer than MAX_MATCH,\t*/\n-/* then automatically accept it as the best possible match and leave.\t*/\n-\n-\t\tlea\t(%edi,%edx), %eax\n-\t\tmovl\tscan(%esp), %edi\n-\t\tsubl\t%edi, %eax\n-\t\tcmpl\t$MAX_MATCH, %eax\n-\t\tjge\tLenMaximum\n-\n-/* If the length of the match is not longer than the best match we\t*/\n-/* have so far, then forget it and return to the lookup loop.\t\t*/\n-\n-\t\tmovl\tdeflatestate(%esp), %edx\n-\t\tmovl\tbestlen(%esp), %ebx\n-\t\tcmpl\t%ebx, %eax\n-\t\tjg\tLongerMatch\n-\t\tmovl\tchainlenscanend(%esp), %ebx\n-\t\tmovl\twindowbestlen(%esp), %esi\n-\t\tmovl\tdsPrev(%edx), %edi\n-\t\tmovl\twmask(%esp), %edx\n-\t\tandl\t%ecx, %edx\n-\t\tjmp\tLookupLoop\n-\n-/*         s->match_start = cur_match;\t\t\t\t\t*/\n-/*         best_len = len;\t\t\t\t\t\t*/\n-/*         if (len >= nice_match) break;\t\t\t\t*/\n-/*         scan_end = *(ushf*)(scan+best_len-1);\t\t\t*/\n-\n-LongerMatch:\tmovl\tnicematch(%esp), %ebx\n-\t\tmovl\t%eax, bestlen(%esp)\n-\t\tmovl\t%ecx, dsMatchStart(%edx)\n-\t\tcmpl\t%ebx, %eax\n-\t\tjge\tLeaveNow\n-\t\tmovl\twindow(%esp), %esi\n-\t\taddl\t%eax, %esi\n-\t\tmovl\t%esi, windowbestlen(%esp)\n-\t\tmovl\tchainlenscanend(%esp), %ebx\n-\t\tmovw\t-1(%edi,%eax), %bx\n-\t\tmovl\tdsPrev(%edx), %edi\n-\t\tmovl\t%ebx, chainlenscanend(%esp)\n-\t\tmovl\twmask(%esp), %edx\n-\t\tandl\t%ecx, %edx\n-\t\tjmp\tLookupLoop\n-\n-/* Accept the current string, with the maximum possible length.\t\t*/\n-\n-LenMaximum:\tmovl\tdeflatestate(%esp), %edx\n-\t\tmovl\t$MAX_MATCH, bestlen(%esp)\n-\t\tmovl\t%ecx, dsMatchStart(%edx)\n-\n-/* if ((uInt)best_len <= s->lookahead) return (uInt)best_len;\t\t*/\n-/* return s->lookahead;\t\t\t\t\t\t\t*/\n-\n-LeaveNow:\n-\t\tmovl\tdeflatestate(%esp), %edx\n-\t\tmovl\tbestlen(%esp), %ebx\n-\t\tmovl\tdsLookahead(%edx), %eax\n-\t\tcmpl\t%eax, %ebx\n-\t\tjg\tLookaheadRet\n-\t\tmovl\t%ebx, %eax\n-LookaheadRet:\n-\n-/* Restore the stack and return from whence we came.\t\t\t*/\n-\n-\t\taddl\t$LocalVarsSize, %esp\n-\t\tpopl\t%ebx\n-\t\tpopl\t%esi\n-\t\tpopl\t%edi\n-\t\tpopl\t%ebp\n-match_init:\tret"}, {"sha": "a0bf3bea4aff5b9c231fadb605b9cc455fe31bb8", "filename": "zlib/contrib/asm686/README.686", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fasm686%2FREADME.686", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fasm686%2FREADME.686", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fasm686%2FREADME.686?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -32,3 +32,20 @@ then do:\n \n CFLAGS=\"-O3 -DASMV\" ./configure\n make OBJA=match.o\n+\n+\n+Update:\n+\n+I've been ignoring these assembly routines for years, believing that\n+gcc's generated code had caught up with it sometime around gcc 2.95\n+and the major rearchitecting of the Pentium 4. However, I recently\n+learned that, despite what I believed, this code still has some life\n+in it. On the Pentium 4 and AMD64 chips, it continues to run about 8%\n+faster than the code produced by gcc 4.1.\n+\n+In acknowledgement of its continuing usefulness, I've altered the\n+license to match that of the rest of zlib. Share and Enjoy!\n+\n+Brian Raiter\n+breadbox@muppetlabs.com\n+April, 2007"}, {"sha": "06817e1dd08bd102bcf6a813632533a7372302cb", "filename": "zlib/contrib/asm686/match.S", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fasm686%2Fmatch.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fasm686%2Fmatch.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fasm686%2Fmatch.S?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,9 +1,23 @@\n-/* match.s -- Pentium-Pro-optimized version of longest_match()\n- * Written for zlib 1.1.2\n- * Copyright (C) 1998 Brian Raiter <breadbox@muppetlabs.com>\n+/* match.S -- x86 assembly version of the zlib longest_match() function.\n+ * Optimized for the Intel 686 chips (PPro and later).\n  *\n- * This is free software; you can redistribute it and/or modify it\n- * under the terms of the GNU General Public License.\n+ * Copyright (C) 1998, 2007 Brian Raiter <breadbox@muppetlabs.com>\n+ *\n+ * This software is provided 'as-is', without any express or implied\n+ * warranty.  In no event will the author be held liable for any damages\n+ * arising from the use of this software.\n+ *\n+ * Permission is granted to anyone to use this software for any purpose,\n+ * including commercial applications, and to alter it and redistribute it\n+ * freely, subject to the following restrictions:\n+ *\n+ * 1. The origin of this software must not be misrepresented; you must not\n+ *    claim that you wrote the original software. If you use this software\n+ *    in a product, an acknowledgment in the product documentation would be\n+ *    appreciated but is not required.\n+ * 2. Altered source versions must be plainly marked as such, and must not be\n+ *    misrepresented as being the original software.\n+ * 3. This notice may not be removed or altered from any source distribution.\n  */\n \n #ifndef NO_UNDERLINE"}, {"sha": "0d86fb52fcf9a0d940adb6245e7718cea5aad416", "filename": "zlib/contrib/delphi/ZLib.pas", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fdelphi%2FZLib.pas", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fdelphi%2FZLib.pas", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fdelphi%2FZLib.pas?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -152,7 +152,7 @@ procedure DecompressToUserBuf(const InBuf: Pointer; InBytes: Integer;\n   const OutBuf: Pointer; BufSize: Integer);\n \n const\n-  zlib_version = '1.2.3';\n+  zlib_version = '1.2.5';\n \n type\n   EZlibError = class(Exception);"}, {"sha": "0d0699a69a3c735d8dfdfc22abf9a820c1963e8f", "filename": "zlib/contrib/delphi/zlibd32.mak", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fdelphi%2Fzlibd32.mak", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fdelphi%2Fzlibd32.mak", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fdelphi%2Fzlibd32.mak?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -18,10 +18,10 @@ LDFLAGS =\n # variables\n ZLIB_LIB = zlib.lib\n \n-OBJ1 = adler32.obj compress.obj crc32.obj deflate.obj gzio.obj infback.obj\n-OBJ2 = inffast.obj inflate.obj inftrees.obj trees.obj uncompr.obj zutil.obj\n-OBJP1 = +adler32.obj+compress.obj+crc32.obj+deflate.obj+gzio.obj+infback.obj\n-OBJP2 = +inffast.obj+inflate.obj+inftrees.obj+trees.obj+uncompr.obj+zutil.obj\n+OBJ1 = adler32.obj compress.obj crc32.obj deflate.obj gzclose.obj gzlib.obj gzread.obj\n+OBJ2 = gzwrite.obj infback.obj inffast.obj inflate.obj inftrees.obj trees.obj uncompr.obj zutil.obj\n+OBJP1 = +adler32.obj+compress.obj+crc32.obj+deflate.obj+gzclose.obj+gzlib.obj+gzread.obj\n+OBJP2 = +gzwrite.obj+infback.obj+inffast.obj+inflate.obj+inftrees.obj+trees.obj+uncompr.obj+zutil.obj\n \n \n # targets\n@@ -38,7 +38,13 @@ crc32.obj: crc32.c zlib.h zconf.h crc32.h\n \n deflate.obj: deflate.c deflate.h zutil.h zlib.h zconf.h\n \n-gzio.obj: gzio.c zutil.h zlib.h zconf.h\n+gzclose.obj: gzclose.c zlib.h zconf.h gzguts.h\n+\n+gzlib.obj: gzlib.c zlib.h zconf.h gzguts.h\n+\n+gzread.obj: gzread.c zlib.h zconf.h gzguts.h\n+\n+gzwrite.obj: gzwrite.c zlib.h zconf.h gzguts.h\n \n infback.obj: infback.c zutil.h zlib.h zconf.h inftrees.h inflate.h \\\n  inffast.h inffixed.h"}, {"sha": "7f90d6bc7c49c73c40ccc1fcd4c144bc5f5c72b8", "filename": "zlib/contrib/dotzlib/DotZLib.build", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fdotzlib%2FDotZLib.build", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fdotzlib%2FDotZLib.build", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fdotzlib%2FDotZLib.build?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -4,7 +4,7 @@\n \r\n \t<property name=\"nunit.location\" value=\"c:/program files/NUnit V2.1/bin\" />\r\n \t<property name=\"build.root\" value=\"bin\" />\r\n-\t\r\n+\r\n \t<property name=\"debug\" value=\"true\" />\r\n \t<property name=\"nunit\" value=\"true\" />\r\n \r\n@@ -16,7 +16,7 @@\n \t</target>\r\n \r\n \t<target name=\"build\" description=\"compiles the source code\">\r\n-\t\t\r\n+\r\n \t\t<mkdir dir=\"${build.folder}\" />\r\n \t\t<csc target=\"library\" output=\"${build.folder}DotZLib.dll\" debug=\"${debug}\">\r\n \t\t\t<references basedir=\"${nunit.location}\">\r"}, {"sha": "0491bfc2b036f179f9d3a2f37fd61d9b3b8dd779", "filename": "zlib/contrib/dotzlib/DotZLib/AssemblyInfo.cs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FAssemblyInfo.cs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FAssemblyInfo.cs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FAssemblyInfo.cs?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -2,7 +2,7 @@\n using System.Runtime.CompilerServices;\r\n \r\n //\r\n-// General Information about an assembly is controlled through the following \r\n+// General Information about an assembly is controlled through the following\r\n // set of attributes. Change these attribute values to modify the information\r\n // associated with an assembly.\r\n //\r\n@@ -13,42 +13,42 @@\n [assembly: AssemblyProduct(\"\")]\r\n [assembly: AssemblyCopyright(\"(c) 2004 by Henrik Ravn\")]\r\n [assembly: AssemblyTrademark(\"\")]\r\n-[assembly: AssemblyCulture(\"\")]\t\t\r\n+[assembly: AssemblyCulture(\"\")]\r\n \r\n //\r\n // Version information for an assembly consists of the following four values:\r\n //\r\n //      Major Version\r\n-//      Minor Version \r\n+//      Minor Version\r\n //      Build Number\r\n //      Revision\r\n //\r\n-// You can specify all the values or you can default the Revision and Build Numbers \r\n+// You can specify all the values or you can default the Revision and Build Numbers\r\n // by using the '*' as shown below:\r\n \r\n [assembly: AssemblyVersion(\"1.0.*\")]\r\n \r\n //\r\n-// In order to sign your assembly you must specify a key to use. Refer to the \r\n+// In order to sign your assembly you must specify a key to use. Refer to the\r\n // Microsoft .NET Framework documentation for more information on assembly signing.\r\n //\r\n-// Use the attributes below to control which key is used for signing. \r\n+// Use the attributes below to control which key is used for signing.\r\n //\r\n-// Notes: \r\n+// Notes:\r\n //   (*) If no key is specified, the assembly is not signed.\r\n //   (*) KeyName refers to a key that has been installed in the Crypto Service\r\n //       Provider (CSP) on your machine. KeyFile refers to a file which contains\r\n //       a key.\r\n-//   (*) If the KeyFile and the KeyName values are both specified, the \r\n+//   (*) If the KeyFile and the KeyName values are both specified, the\r\n //       following processing occurs:\r\n //       (1) If the KeyName can be found in the CSP, that key is used.\r\n-//       (2) If the KeyName does not exist and the KeyFile does exist, the key \r\n+//       (2) If the KeyName does not exist and the KeyFile does exist, the key\r\n //           in the KeyFile is installed into the CSP and used.\r\n //   (*) In order to create a KeyFile, you can use the sn.exe (Strong Name) utility.\r\n //       When specifying the KeyFile, the location of the KeyFile should be\r\n //       relative to the project output directory which is\r\n //       %Project Directory%\\obj\\<configuration>. For example, if your KeyFile is\r\n-//       located in the project directory, you would specify the AssemblyKeyFile \r\n+//       located in the project directory, you would specify the AssemblyKeyFile\r\n //       attribute as [assembly: AssemblyKeyFile(\"..\\\\..\\\\mykey.snk\")]\r\n //   (*) Delay Signing is an advanced option - see the Microsoft .NET Framework\r\n //       documentation for more information on this.\r"}, {"sha": "788b2fcecedb07801588b0e7f6be89b66e4e1e72", "filename": "zlib/contrib/dotzlib/DotZLib/ChecksumImpl.cs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FChecksumImpl.cs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FChecksumImpl.cs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FChecksumImpl.cs?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,7 +1,7 @@\n //\r\n // \ufffd Copyright Henrik Ravn 2004\r\n //\r\n-// Use, modification and distribution are subject to the Boost Software License, Version 1.0. \r\n+// Use, modification and distribution are subject to the Boost Software License, Version 1.0.\r\n // (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\r\n //\r\n \r\n@@ -25,7 +25,7 @@ public abstract class ChecksumGeneratorBase : ChecksumGenerator\n         protected uint _current;\r\n \r\n         /// <summary>\r\n-        /// Initializes a new instance of the checksum generator base - the current checksum is \r\n+        /// Initializes a new instance of the checksum generator base - the current checksum is\r\n         /// set to zero\r\n         /// </summary>\r\n         public ChecksumGeneratorBase()\r\n@@ -61,7 +61,7 @@ public ChecksumGeneratorBase(uint initialValue)\n         /// <exception cref=\"ArgumentException\">The sum of offset and count is larger than the length of <c>data</c></exception>\r\n         /// <exception cref=\"NullReferenceException\"><c>data</c> is a null reference</exception>\r\n         /// <exception cref=\"ArgumentOutOfRangeException\">Offset or count is negative.</exception>\r\n-        /// <remarks>All the other <c>Update</c> methods are implmeneted in terms of this one. \r\n+        /// <remarks>All the other <c>Update</c> methods are implmeneted in terms of this one.\r\n         /// This is therefore the only method a derived class has to implement</remarks>\r\n         public abstract void Update(byte[] data, int offset, int count);\r\n \r\n@@ -101,7 +101,7 @@ public void Update(string data, Encoding encoding)\n     /// <summary>\r\n     /// Implements a CRC32 checksum generator\r\n     /// </summary>\r\n-    public sealed class CRC32Checksum : ChecksumGeneratorBase    \r\n+    public sealed class CRC32Checksum : ChecksumGeneratorBase\r\n     {\r\n         #region DLL imports\r\n \r\n@@ -152,7 +152,7 @@ public override void Update(byte[] data, int offset, int count)\n     /// <summary>\r\n     /// Implements a checksum generator that computes the Adler checksum on data\r\n     /// </summary>\r\n-    public sealed class AdlerChecksum : ChecksumGeneratorBase    \r\n+    public sealed class AdlerChecksum : ChecksumGeneratorBase\r\n     {\r\n         #region DLL imports\r\n \r"}, {"sha": "c1cab3a02c60973bc9676f6af9bea25801a33c9a", "filename": "zlib/contrib/dotzlib/DotZLib/CircularBuffer.cs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FCircularBuffer.cs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FCircularBuffer.cs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FCircularBuffer.cs?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,7 +1,7 @@\n //\r\n // \ufffd Copyright Henrik Ravn 2004\r\n //\r\n-// Use, modification and distribution are subject to the Boost Software License, Version 1.0. \r\n+// Use, modification and distribution are subject to the Boost Software License, Version 1.0.\r\n // (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\r\n //\r\n \r\n@@ -25,7 +25,7 @@ internal class CircularBuffer\n         #endregion\r\n \r\n         public CircularBuffer(int capacity)\r\n-        {    \r\n+        {\r\n             Debug.Assert( capacity > 0 );\r\n             _buffer = new byte[capacity];\r\n             _capacity = capacity;\r"}, {"sha": "42e6da3a5652fe2e96cdecf3c8c45a63a4cd0798", "filename": "zlib/contrib/dotzlib/DotZLib/CodecBase.cs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FCodecBase.cs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FCodecBase.cs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FCodecBase.cs?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,7 +1,7 @@\n //\r\n // \ufffd Copyright Henrik Ravn 2004\r\n //\r\n-// Use, modification and distribution are subject to the Boost Software License, Version 1.0. \r\n+// Use, modification and distribution are subject to the Boost Software License, Version 1.0.\r\n // (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\r\n //\r\n \r\n@@ -19,7 +19,7 @@ public abstract class CodecBase : Codec, IDisposable\n         #region Data members\r\n \r\n         /// <summary>\r\n-        /// Instance of the internal zlib buffer structure that is \r\n+        /// Instance of the internal zlib buffer structure that is\r\n         /// passed to all functions in the zlib dll\r\n         /// </summary>\r\n         internal ZStream _ztream = new ZStream();\r\n@@ -45,7 +45,7 @@ public abstract class CodecBase : Codec, IDisposable\n         #endregion\r\n \r\n         /// <summary>\r\n-        /// Initializes a new instance of the <c>CodeBase</c> class. \r\n+        /// Initializes a new instance of the <c>CodeBase</c> class.\r\n         /// </summary>\r\n \t\tpublic CodecBase()\r\n \t\t{\r\n@@ -77,7 +77,7 @@ protected void OnDataAvailable()\n             if (_ztream.total_out > 0)\r\n             {\r\n                 if (DataAvailable != null)\r\n-                    DataAvailable( _outBuffer, 0, (int)_ztream.total_out); \r\n+                    DataAvailable( _outBuffer, 0, (int)_ztream.total_out);\r\n                 resetOutput();\r\n             }\r\n         }\r"}, {"sha": "c2477925b626610a1737447cc6422a11fc35f0ed", "filename": "zlib/contrib/dotzlib/DotZLib/Deflater.cs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FDeflater.cs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FDeflater.cs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FDeflater.cs?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,7 +1,7 @@\n //\r\n // \ufffd Copyright Henrik Ravn 2004\r\n //\r\n-// Use, modification and distribution are subject to the Boost Software License, Version 1.0. \r\n+// Use, modification and distribution are subject to the Boost Software License, Version 1.0.\r\n // (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\r\n //\r\n \r\n@@ -56,7 +56,7 @@ public override void Add(byte[] data, int offset, int count)\n             if (data == null) throw new ArgumentNullException();\r\n             if (offset < 0 || count < 0) throw new ArgumentOutOfRangeException();\r\n             if ((offset+count) > data.Length) throw new ArgumentException();\r\n-            \r\n+\r\n             int total = count;\r\n             int inputIndex = offset;\r\n             int err = 0;\r\n@@ -86,7 +86,7 @@ public override void Add(byte[] data, int offset, int count)\n         public override void Finish()\r\n         {\r\n             int err;\r\n-            do \r\n+            do\r\n             {\r\n                 err = deflate(ref _ztream, (int)FlushTypes.Finish);\r\n                 OnDataAvailable();\r"}, {"sha": "be184b4c71b47fef4ad94e93a6836591d5788ac0", "filename": "zlib/contrib/dotzlib/DotZLib/DotZLib.cs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FDotZLib.cs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FDotZLib.cs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FDotZLib.cs?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,7 +1,7 @@\n //\r\n // \ufffd Copyright Henrik Ravn 2004\r\n //\r\n-// Use, modification and distribution are subject to the Boost Software License, Version 1.0. \r\n+// Use, modification and distribution are subject to the Boost Software License, Version 1.0.\r\n // (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\r\n //\r\n \r\n@@ -19,7 +19,7 @@ namespace DotZLib\n     /// <summary>\r\n     /// Defines constants for the various flush types used with zlib\r\n     /// </summary>\r\n-    internal enum FlushTypes \r\n+    internal enum FlushTypes\r\n     {\r\n         None,  Partial,  Sync,  Full,  Finish,  Block\r\n     }\r\n@@ -38,7 +38,7 @@ internal struct ZStream\n         public uint total_out;\r\n \r\n         [MarshalAs(UnmanagedType.LPStr)]\r\n-        string msg; \r\n+        string msg;\r\n         uint state;\r\n \r\n         uint zalloc;\r\n@@ -51,7 +51,7 @@ internal struct ZStream\n     }\r\n \r\n     #endregion\r\n-    \r\n+\r\n     #endregion\r\n \r\n     #region Public enums\r\n@@ -63,15 +63,15 @@ public enum CompressLevel : int\n         /// <summary>\r\n         /// The default compression level with a reasonable compromise between compression and speed\r\n         /// </summary>\r\n-        Default = -1,   \r\n+        Default = -1,\r\n         /// <summary>\r\n         /// No compression at all. The data are passed straight through.\r\n         /// </summary>\r\n         None = 0,\r\n         /// <summary>\r\n         /// The maximum compression rate available.\r\n         /// </summary>\r\n-        Best = 9,   \r\n+        Best = 9,\r\n         /// <summary>\r\n         /// The fastest available compression level.\r\n         /// </summary>\r\n@@ -86,7 +86,7 @@ public enum CompressLevel : int\n     public class ZLibException : ApplicationException\r\n     {\r\n         /// <summary>\r\n-        /// Initializes a new instance of the <see cref=\"ZLibException\"/> class with a specified \r\n+        /// Initializes a new instance of the <see cref=\"ZLibException\"/> class with a specified\r\n         /// error message and error code\r\n         /// </summary>\r\n         /// <param name=\"errorCode\">The zlib error code that caused the exception</param>\r\n@@ -96,7 +96,7 @@ public ZLibException(int errorCode, string msg) : base(String.Format(\"ZLib error\n         }\r\n \r\n         /// <summary>\r\n-        /// Initializes a new instance of the <see cref=\"ZLibException\"/> class with a specified \r\n+        /// Initializes a new instance of the <see cref=\"ZLibException\"/> class with a specified\r\n         /// error code\r\n         /// </summary>\r\n         /// <param name=\"errorCode\">The zlib error code that caused the exception</param>\r\n@@ -109,7 +109,7 @@ public ZLibException(int errorCode) : base(String.Format(\"ZLib error {0}\", error\n     #region Interfaces\r\n \r\n     /// <summary>\r\n-    /// Declares methods and properties that enables a running checksum to be calculated \r\n+    /// Declares methods and properties that enables a running checksum to be calculated\r\n     /// </summary>\r\n     public interface ChecksumGenerator\r\n     {\r\n@@ -163,7 +163,7 @@ public interface ChecksumGenerator\n     /// <paramref name=\"data\">The byte array containing the processed data</paramref>\r\n     /// <paramref name=\"startIndex\">The index of the first processed byte in <c>data</c></paramref>\r\n     /// <paramref name=\"count\">The number of processed bytes available</paramref>\r\n-    /// <remarks>On return from this method, the data may be overwritten, so grab it while you can. \r\n+    /// <remarks>On return from this method, the data may be overwritten, so grab it while you can.\r\n     /// You cannot assume that startIndex will be zero.\r\n     /// </remarks>\r\n     public delegate void DataAvailableHandler(byte[] data, int startIndex, int count);\r"}, {"sha": "b161300b185919abba6e22dfee577a74dbaeb1a7", "filename": "zlib/contrib/dotzlib/DotZLib/GZipStream.cs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FGZipStream.cs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FGZipStream.cs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FGZipStream.cs?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,7 +1,7 @@\n //\r\n // \ufffd Copyright Henrik Ravn 2004\r\n //\r\n-// Use, modification and distribution are subject to the Boost Software License, Version 1.0. \r\n+// Use, modification and distribution are subject to the Boost Software License, Version 1.0.\r\n // (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\r\n //\r\n \r\n@@ -84,7 +84,7 @@ public override bool CanRead\n                 return !_isWriting;\r\n             }\r\n         }\r\n-    \r\n+\r\n \r\n         /// <summary>\r\n         /// Returns false.\r\n@@ -96,7 +96,7 @@ public override bool CanSeek\n                 return false;\r\n             }\r\n         }\r\n-    \r\n+\r\n         /// <summary>\r\n         /// Returns true if this tsream is writeable, false otherwise\r\n         /// </summary>\r\n@@ -108,7 +108,7 @@ public override bool CanWrite\n             }\r\n         }\r\n         #endregion\r\n-    \r\n+\r\n         #region Destructor & IDispose stuff\r\n \r\n         /// <summary>\r\n@@ -137,7 +137,7 @@ private void cleanUp(bool isDisposing)\n             }\r\n         }\r\n         #endregion\r\n-    \r\n+\r\n         #region Basic reading and writing\r\n         /// <summary>\r\n         /// Attempts to read a number of bytes from the stream.\r\n@@ -244,7 +244,7 @@ public override void SetLength(long value)\n         {\r\n             throw new NotSupportedException();\r\n         }\r\n-    \r\n+\r\n         /// <summary>\r\n         ///  Not suppported.\r\n         /// </summary>\r\n@@ -256,7 +256,7 @@ public override long Seek(long offset, SeekOrigin origin)\n         {\r\n             throw new NotSupportedException();\r\n         }\r\n-    \r\n+\r\n         /// <summary>\r\n         /// Flushes the <c>GZipStream</c>.\r\n         /// </summary>\r\n@@ -266,7 +266,7 @@ public override void Flush()\n         {\r\n             // left empty on purpose\r\n         }\r\n-    \r\n+\r\n         /// <summary>\r\n         /// Gets/sets the current position in the <c>GZipStream</c>. Not suppported.\r\n         /// </summary>\r\n@@ -283,7 +283,7 @@ public override long Position\n                 throw new NotSupportedException();\r\n             }\r\n         }\r\n-    \r\n+\r\n         /// <summary>\r\n         /// Gets the size of the stream. Not suppported.\r\n         /// </summary>\r"}, {"sha": "8ed5451d664204ecb9c73fc9d7beae5a976087f3", "filename": "zlib/contrib/dotzlib/DotZLib/Inflater.cs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FInflater.cs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FInflater.cs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FInflater.cs?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,7 +1,7 @@\n //\r\n // \ufffd Copyright Henrik Ravn 2004\r\n //\r\n-// Use, modification and distribution are subject to the Boost Software License, Version 1.0. \r\n+// Use, modification and distribution are subject to the Boost Software License, Version 1.0.\r\n // (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\r\n //\r\n \r\n@@ -11,7 +11,7 @@\n \r\n namespace DotZLib\r\n {\r\n-    \r\n+\r\n     /// <summary>\r\n     /// Implements a data decompressor, using the inflate algorithm in the ZLib dll\r\n     /// </summary>\r\n@@ -84,7 +84,7 @@ public override void Add(byte[] data, int offset, int count)\n         public override void Finish()\r\n         {\r\n             int err;\r\n-            do \r\n+            do\r\n             {\r\n                 err = inflate(ref _ztream, (int)FlushTypes.Finish);\r\n                 OnDataAvailable();\r"}, {"sha": "3bbcc8cee6e355e71d824095a9b4620c7540d174", "filename": "zlib/contrib/dotzlib/DotZLib/UnitTests.cs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FUnitTests.cs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FUnitTests.cs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FUnitTests.cs?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,7 +1,7 @@\n //\r\n // \ufffd Copyright Henrik Ravn 2004\r\n //\r\n-// Use, modification and distribution are subject to the Boost Software License, Version 1.0. \r\n+// Use, modification and distribution are subject to the Boost Software License, Version 1.0.\r\n // (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\r\n //\r\n \r\n@@ -156,7 +156,7 @@ public class InfoTests\n         public void Info_Version()\r\n         {\r\n             Info info = new Info();\r\n-            Assert.AreEqual(\"1.2.3\", Info.Version);\r\n+            Assert.AreEqual(\"1.2.5\", Info.Version);\r\n             Assert.AreEqual(32, info.SizeOfUInt);\r\n             Assert.AreEqual(32, info.SizeOfULong);\r\n             Assert.AreEqual(32, info.SizeOfPointer);\r\n@@ -225,7 +225,7 @@ private void DDataAvail(byte[] data, int startIndex, int count)\n \r\n         [Test]\r\n         public void Inflate_Expand()\r\n-        { \r\n+        {\r\n             uncompressedData.Clear();\r\n \r\n             using (Inflater inf = new Inflater())\r\n@@ -271,4 +271,4 @@ public void GZipStream_WriteRead()\n \t}\r\n }\r\n \r\n-#endif\n\\ No newline at end of file\n+#endif\r"}, {"sha": "b2395720d4c5693213001c449ed09869be9bd944", "filename": "zlib/contrib/dotzlib/readme.txt", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fdotzlib%2Freadme.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fdotzlib%2Freadme.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fdotzlib%2Freadme.txt?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,6 +1,6 @@\n This directory contains a .Net wrapper class library for the ZLib1.dll\r\n \r\n-The wrapper includes support for inflating/deflating memory buffers, \r\n+The wrapper includes support for inflating/deflating memory buffers,\r\n .Net streaming wrappers for the gz streams part of zlib, and wrappers\r\n for the checksum parts of zlib. See DotZLib/UnitTests.cs for examples.\r\n \r\n@@ -26,33 +26,33 @@ Build instructions:\n \r\n 1. Using Visual Studio.Net 2003:\r\n    Open DotZLib.sln in VS.Net and build from there. Output file (DotZLib.dll)\r\n-   will be found ./DotZLib/bin/release or ./DotZLib/bin/debug, depending on \r\n-   you are building the release or debug version of the library. Check \r\n+   will be found ./DotZLib/bin/release or ./DotZLib/bin/debug, depending on\r\n+   you are building the release or debug version of the library. Check\r\n    DotZLib/UnitTests.cs for instructions on how to include unit tests in the\r\n    build.\r\n-   \r\n+\r\n 2. Using NAnt:\r\n    Open a command prompt with access to the build environment and run nant\r\n    in the same directory as the DotZLib.build file.\r\n    You can define 2 properties on the nant command-line to control the build:\r\n    debug={true|false} to toggle between release/debug builds (default=true).\r\n    nunit={true|false} to include or esclude unit tests (default=true).\r\n    Also the target clean will remove binaries.\r\n-   Output file (DotZLib.dll) will be found in either ./DotZLib/bin/release \r\n-   or ./DotZLib/bin/debug, depending on whether you are building the release \r\n+   Output file (DotZLib.dll) will be found in either ./DotZLib/bin/release\r\n+   or ./DotZLib/bin/debug, depending on whether you are building the release\r\n    or debug version of the library.\r\n \r\n-   Examples: \r\n+   Examples:\r\n      nant -D:debug=false -D:nunit=false\r\n        will build a release mode version of the library without unit tests.\r\n      nant\r\n-       will build a debug version of the library with unit tests \r\n+       will build a debug version of the library with unit tests\r\n      nant clean\r\n        will remove all previously built files.\r\n \r\n \r\n ---------------------------------\r\n Copyright (c) Henrik Ravn 2004\r\n \r\n-Use, modification and distribution are subject to the Boost Software License, Version 1.0. \r\n+Use, modification and distribution are subject to the Boost Software License, Version 1.0.\r\n (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\r"}, {"sha": "dd858ddbd16b031aa8aed0794ab120a647b97818", "filename": "zlib/contrib/gcc_gvmat64/gvmat64.S", "status": "added", "additions": 574, "deletions": 0, "changes": 574, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fgcc_gvmat64%2Fgvmat64.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fgcc_gvmat64%2Fgvmat64.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fgcc_gvmat64%2Fgvmat64.S?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -0,0 +1,574 @@\n+/*\r\n+;uInt longest_match_x64(\r\n+;    deflate_state *s,\r\n+;    IPos cur_match);                             // current match \r\n+\r\n+; gvmat64.S -- Asm portion of the optimized longest_match for 32 bits x86_64\r\n+;  (AMD64 on Athlon 64, Opteron, Phenom\r\n+;     and Intel EM64T on Pentium 4 with EM64T, Pentium D, Core 2 Duo, Core I5/I7)\r\n+; this file is translation from gvmat64.asm to GCC 4.x (for Linux, Mac XCode)\r\n+; Copyright (C) 1995-2010 Jean-loup Gailly, Brian Raiter and Gilles Vollant.\r\n+;\r\n+; File written by Gilles Vollant, by converting to assembly the longest_match\r\n+;  from Jean-loup Gailly in deflate.c of zLib and infoZip zip.\r\n+;  and by taking inspiration on asm686 with masm, optimised assembly code\r\n+;        from Brian Raiter, written 1998\r\n+;\r\n+;  This software is provided 'as-is', without any express or implied\r\n+;  warranty.  In no event will the authors be held liable for any damages\r\n+;  arising from the use of this software.\r\n+;\r\n+;  Permission is granted to anyone to use this software for any purpose,\r\n+;  including commercial applications, and to alter it and redistribute it\r\n+;  freely, subject to the following restrictions:\r\n+;\r\n+;  1. The origin of this software must not be misrepresented; you must not\r\n+;     claim that you wrote the original software. If you use this software\r\n+;     in a product, an acknowledgment in the product documentation would be\r\n+;     appreciated but is not required.\r\n+;  2. Altered source versions must be plainly marked as such, and must not be\r\n+;     misrepresented as being the original software\r\n+;  3. This notice may not be removed or altered from any source distribution.\r\n+;\r\n+;         http://www.zlib.net\r\n+;         http://www.winimage.com/zLibDll\r\n+;         http://www.muppetlabs.com/~breadbox/software/assembly.html\r\n+;\r\n+; to compile this file for zLib, I use option:\r\n+;   gcc -c -arch x86_64 gvmat64.S\r\n+\r\n+\r\n+;uInt longest_match(s, cur_match)\r\n+;    deflate_state *s;\r\n+;    IPos cur_match;                             // current match /\r\n+;\r\n+; with XCode for Mac, I had strange error with some jump on intel syntax\r\n+; this is why BEFORE_JMP and AFTER_JMP are used\r\n+ */\r\n+\r\n+\r\n+#define BEFORE_JMP .att_syntax\r\n+#define AFTER_JMP .intel_syntax noprefix\r\n+\r\n+#ifndef NO_UNDERLINE\r\n+#\tdefine\tmatch_init\t_match_init\r\n+#\tdefine\tlongest_match\t_longest_match\r\n+#endif\r\n+\r\n+.intel_syntax noprefix\r\n+\r\n+.globl\tmatch_init, longest_match\r\n+.text\r\n+longest_match:\r\n+\r\n+\r\n+\r\n+#define LocalVarsSize 96\r\n+/*\r\n+; register used : rax,rbx,rcx,rdx,rsi,rdi,r8,r9,r10,r11,r12\r\n+; free register :  r14,r15\r\n+; register can be saved : rsp\r\n+*/\r\n+\r\n+#define chainlenwmask     (rsp + 8 - LocalVarsSize)\r\n+#define nicematch         (rsp + 16 - LocalVarsSize)\r\n+\r\n+#define save_rdi        (rsp + 24 - LocalVarsSize)\r\n+#define save_rsi        (rsp + 32 - LocalVarsSize)\r\n+#define save_rbx        (rsp + 40 - LocalVarsSize)\r\n+#define save_rbp        (rsp + 48 - LocalVarsSize)\r\n+#define save_r12        (rsp + 56 - LocalVarsSize)\r\n+#define save_r13        (rsp + 64 - LocalVarsSize)\r\n+#define save_r14        (rsp + 72 - LocalVarsSize)\r\n+#define save_r15        (rsp + 80 - LocalVarsSize)\r\n+\r\n+\r\n+/*\r\n+;  all the +4 offsets are due to the addition of pending_buf_size (in zlib\r\n+;  in the deflate_state structure since the asm code was first written\r\n+;  (if you compile with zlib 1.0.4 or older, remove the +4).\r\n+;  Note : these value are good with a 8 bytes boundary pack structure\r\n+*/\r\n+\r\n+#define    MAX_MATCH              258\r\n+#define    MIN_MATCH              3\r\n+#define    MIN_LOOKAHEAD          (MAX_MATCH+MIN_MATCH+1)\r\n+\r\n+/*\r\n+;;; Offsets for fields in the deflate_state structure. These numbers\r\n+;;; are calculated from the definition of deflate_state, with the\r\n+;;; assumption that the compiler will dword-align the fields. (Thus,\r\n+;;; changing the definition of deflate_state could easily cause this\r\n+;;; program to crash horribly, without so much as a warning at\r\n+;;; compile time. Sigh.)\r\n+\r\n+;  all the +zlib1222add offsets are due to the addition of fields\r\n+;  in zlib in the deflate_state structure since the asm code was first written\r\n+;  (if you compile with zlib 1.0.4 or older, use \"zlib1222add equ (-4)\").\r\n+;  (if you compile with zlib between 1.0.5 and 1.2.2.1, use \"zlib1222add equ 0\").\r\n+;  if you compile with zlib 1.2.2.2 or later , use \"zlib1222add equ 8\").\r\n+*/\r\n+\r\n+\r\n+\r\n+/* you can check the structure offset by running\r\n+\r\n+#include <stdlib.h>\r\n+#include <stdio.h>\r\n+#include \"deflate.h\"\r\n+\r\n+void print_depl()\r\n+{\r\n+deflate_state ds;\r\n+deflate_state *s=&ds;\r\n+printf(\"size pointer=%u\\n\",(int)sizeof(void*));\r\n+\r\n+printf(\"#define dsWSize         %u\\n\",(int)(((char*)&(s->w_size))-((char*)s)));\r\n+printf(\"#define dsWMask         %u\\n\",(int)(((char*)&(s->w_mask))-((char*)s)));\r\n+printf(\"#define dsWindow        %u\\n\",(int)(((char*)&(s->window))-((char*)s)));\r\n+printf(\"#define dsPrev          %u\\n\",(int)(((char*)&(s->prev))-((char*)s)));\r\n+printf(\"#define dsMatchLen      %u\\n\",(int)(((char*)&(s->match_length))-((char*)s)));\r\n+printf(\"#define dsPrevMatch     %u\\n\",(int)(((char*)&(s->prev_match))-((char*)s)));\r\n+printf(\"#define dsStrStart      %u\\n\",(int)(((char*)&(s->strstart))-((char*)s)));\r\n+printf(\"#define dsMatchStart    %u\\n\",(int)(((char*)&(s->match_start))-((char*)s)));\r\n+printf(\"#define dsLookahead     %u\\n\",(int)(((char*)&(s->lookahead))-((char*)s)));\r\n+printf(\"#define dsPrevLen       %u\\n\",(int)(((char*)&(s->prev_length))-((char*)s)));\r\n+printf(\"#define dsMaxChainLen   %u\\n\",(int)(((char*)&(s->max_chain_length))-((char*)s)));\r\n+printf(\"#define dsGoodMatch     %u\\n\",(int)(((char*)&(s->good_match))-((char*)s)));\r\n+printf(\"#define dsNiceMatch     %u\\n\",(int)(((char*)&(s->nice_match))-((char*)s)));\r\n+}\r\n+*/\r\n+\r\n+#define dsWSize          68\r\n+#define dsWMask          76\r\n+#define dsWindow         80\r\n+#define dsPrev           96\r\n+#define dsMatchLen       144\r\n+#define dsPrevMatch      148\r\n+#define dsStrStart       156\r\n+#define dsMatchStart     160\r\n+#define dsLookahead      164\r\n+#define dsPrevLen        168\r\n+#define dsMaxChainLen    172\r\n+#define dsGoodMatch      188\r\n+#define dsNiceMatch      192\r\n+\r\n+#define window_size      [ rcx + dsWSize]\r\n+#define WMask            [ rcx + dsWMask]\r\n+#define window_ad        [ rcx + dsWindow]\r\n+#define prev_ad          [ rcx + dsPrev]\r\n+#define strstart         [ rcx + dsStrStart]\r\n+#define match_start      [ rcx + dsMatchStart]\r\n+#define Lookahead        [ rcx + dsLookahead] //; 0ffffffffh on infozip\r\n+#define prev_length      [ rcx + dsPrevLen]\r\n+#define max_chain_length [ rcx + dsMaxChainLen]\r\n+#define good_match       [ rcx + dsGoodMatch]\r\n+#define nice_match       [ rcx + dsNiceMatch]\r\n+\r\n+/*\r\n+; windows:\r\n+; parameter 1 in rcx(deflate state s), param 2 in rdx (cur match)\r\n+\r\n+; see http://weblogs.asp.net/oldnewthing/archive/2004/01/14/58579.aspx and\r\n+; http://msdn.microsoft.com/library/en-us/kmarch/hh/kmarch/64bitAMD_8e951dd2-ee77-4728-8702-55ce4b5dd24a.xml.asp\r\n+;\r\n+; All registers must be preserved across the call, except for\r\n+;   rax, rcx, rdx, r8, r9, r10, and r11, which are scratch.\r\n+\r\n+;\r\n+; gcc on macosx-linux:\r\n+; see http://www.x86-64.org/documentation/abi-0.99.pdf\r\n+; param 1 in rdi, param 2 in rsi\r\n+; rbx, rsp, rbp, r12 to r15 must be preserved\r\n+\r\n+;;; Save registers that the compiler may be using, and adjust esp to\r\n+;;; make room for our stack frame.\r\n+\r\n+\r\n+;;; Retrieve the function arguments. r8d will hold cur_match\r\n+;;; throughout the entire function. edx will hold the pointer to the\r\n+;;; deflate_state structure during the function's setup (before\r\n+;;; entering the main loop.\r\n+\r\n+; ms: parameter 1 in rcx (deflate_state* s), param 2 in edx -> r8 (cur match)\r\n+; mac: param 1 in rdi, param 2 rsi\r\n+; this clear high 32 bits of r8, which can be garbage in both r8 and rdx\r\n+*/\r\n+        mov [save_rbx],rbx\r\n+        mov [save_rbp],rbp\r\n+\r\n+\r\n+        mov rcx,rdi\r\n+\r\n+        mov r8d,esi\r\n+\r\n+\r\n+        mov [save_r12],r12\r\n+        mov [save_r13],r13\r\n+        mov [save_r14],r14\r\n+        mov [save_r15],r15\r\n+\r\n+\r\n+//;;; uInt wmask = s->w_mask;\r\n+//;;; unsigned chain_length = s->max_chain_length;\r\n+//;;; if (s->prev_length >= s->good_match) {\r\n+//;;;     chain_length >>= 2;\r\n+//;;; }\r\n+\r\n+\r\n+        mov edi, prev_length\r\n+        mov esi, good_match\r\n+        mov eax, WMask\r\n+        mov ebx, max_chain_length\r\n+        cmp edi, esi\r\n+        jl  LastMatchGood\r\n+        shr ebx, 2\r\n+LastMatchGood:\r\n+\r\n+//;;; chainlen is decremented once beforehand so that the function can\r\n+//;;; use the sign flag instead of the zero flag for the exit test.\r\n+//;;; It is then shifted into the high word, to make room for the wmask\r\n+//;;; value, which it will always accompany.\r\n+\r\n+        dec ebx\r\n+        shl ebx, 16\r\n+        or  ebx, eax\r\n+\r\n+//;;; on zlib only\r\n+//;;; if ((uInt)nice_match > s->lookahead) nice_match = s->lookahead;\r\n+\r\n+\r\n+\r\n+        mov eax, nice_match\r\n+        mov [chainlenwmask], ebx\r\n+        mov r10d, Lookahead\r\n+        cmp r10d, eax\r\n+        cmovnl r10d, eax\r\n+        mov [nicematch],r10d\r\n+\r\n+\r\n+\r\n+//;;; register Bytef *scan = s->window + s->strstart;\r\n+        mov r10, window_ad\r\n+        mov ebp, strstart\r\n+        lea r13, [r10 + rbp]\r\n+\r\n+//;;; Determine how many bytes the scan ptr is off from being\r\n+//;;; dword-aligned.\r\n+\r\n+         mov r9,r13\r\n+         neg r13\r\n+         and r13,3\r\n+\r\n+//;;; IPos limit = s->strstart > (IPos)MAX_DIST(s) ?\r\n+//;;;     s->strstart - (IPos)MAX_DIST(s) : NIL;\r\n+\r\n+\r\n+        mov eax, window_size\r\n+        sub eax, MIN_LOOKAHEAD\r\n+\r\n+\r\n+        xor edi,edi\r\n+        sub ebp, eax\r\n+\r\n+        mov r11d, prev_length\r\n+\r\n+        cmovng ebp,edi\r\n+\r\n+//;;; int best_len = s->prev_length;\r\n+\r\n+\r\n+//;;; Store the sum of s->window + best_len in esi locally, and in esi.\r\n+\r\n+       lea  rsi,[r10+r11]\r\n+\r\n+//;;; register ush scan_start = *(ushf*)scan;\r\n+//;;; register ush scan_end   = *(ushf*)(scan+best_len-1);\r\n+//;;; Posf *prev = s->prev;\r\n+\r\n+        movzx r12d,word ptr [r9]\r\n+        movzx ebx, word ptr [r9 + r11 - 1]\r\n+\r\n+        mov rdi, prev_ad\r\n+\r\n+//;;; Jump into the main loop.\r\n+\r\n+        mov edx, [chainlenwmask]\r\n+\r\n+        cmp bx,word ptr [rsi + r8 - 1]\r\n+        jz  LookupLoopIsZero\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\r\n+LookupLoop1:\r\n+        and r8d, edx\r\n+\r\n+        movzx   r8d, word ptr [rdi + r8*2]\r\n+        cmp r8d, ebp\r\n+        jbe LeaveNow\r\n+\t\t\r\n+\t\t\r\n+\t\t\r\n+        sub edx, 0x00010000\r\n+\t\tBEFORE_JMP\r\n+        js  LeaveNow\r\n+\t\tAFTER_JMP\r\n+\r\n+LoopEntry1:\r\n+        cmp bx,word ptr [rsi + r8 - 1]\r\n+\t\tBEFORE_JMP\r\n+        jz  LookupLoopIsZero\r\n+\t\tAFTER_JMP\r\n+\r\n+LookupLoop2:\r\n+        and r8d, edx\r\n+\r\n+        movzx   r8d, word ptr [rdi + r8*2]\r\n+        cmp r8d, ebp\r\n+\t\tBEFORE_JMP\r\n+        jbe LeaveNow\r\n+\t\tAFTER_JMP\r\n+        sub edx, 0x00010000\r\n+\t\tBEFORE_JMP\r\n+        js  LeaveNow\r\n+\t\tAFTER_JMP\r\n+\r\n+LoopEntry2:\r\n+        cmp bx,word ptr [rsi + r8 - 1]\r\n+\t\tBEFORE_JMP\r\n+        jz  LookupLoopIsZero\r\n+\t\tAFTER_JMP\r\n+\r\n+LookupLoop4:\r\n+        and r8d, edx\r\n+\r\n+        movzx   r8d, word ptr [rdi + r8*2]\r\n+        cmp r8d, ebp\r\n+\t\tBEFORE_JMP\r\n+        jbe LeaveNow\r\n+\t\tAFTER_JMP\r\n+        sub edx, 0x00010000\r\n+\t\tBEFORE_JMP\r\n+        js  LeaveNow\r\n+\t\tAFTER_JMP\r\n+\r\n+LoopEntry4:\r\n+\r\n+        cmp bx,word ptr [rsi + r8 - 1]\r\n+\t\tBEFORE_JMP\r\n+        jnz LookupLoop1\r\n+        jmp LookupLoopIsZero\r\n+\t\tAFTER_JMP\r\n+/*\r\n+;;; do {\r\n+;;;     match = s->window + cur_match;\r\n+;;;     if (*(ushf*)(match+best_len-1) != scan_end ||\r\n+;;;         *(ushf*)match != scan_start) continue;\r\n+;;;     [...]\r\n+;;; } while ((cur_match = prev[cur_match & wmask]) > limit\r\n+;;;          && --chain_length != 0);\r\n+;;;\r\n+;;; Here is the inner loop of the function. The function will spend the\r\n+;;; majority of its time in this loop, and majority of that time will\r\n+;;; be spent in the first ten instructions.\r\n+;;;\r\n+;;; Within this loop:\r\n+;;; ebx = scanend\r\n+;;; r8d = curmatch\r\n+;;; edx = chainlenwmask - i.e., ((chainlen << 16) | wmask)\r\n+;;; esi = windowbestlen - i.e., (window + bestlen)\r\n+;;; edi = prev\r\n+;;; ebp = limit\r\n+*/\r\n+.balign 16\r\n+LookupLoop:\r\n+        and r8d, edx\r\n+\r\n+        movzx   r8d, word ptr [rdi + r8*2]\r\n+        cmp r8d, ebp\r\n+\t\tBEFORE_JMP\r\n+        jbe LeaveNow\r\n+\t\tAFTER_JMP\r\n+        sub edx, 0x00010000\r\n+\t\tBEFORE_JMP\r\n+        js  LeaveNow\r\n+\t\tAFTER_JMP\r\n+\r\n+LoopEntry:\r\n+\r\n+        cmp bx,word ptr [rsi + r8 - 1]\r\n+\t\tBEFORE_JMP\r\n+        jnz LookupLoop1\r\n+\t\tAFTER_JMP\r\n+LookupLoopIsZero:\r\n+        cmp     r12w, word ptr [r10 + r8]\r\n+\t\tBEFORE_JMP\r\n+        jnz LookupLoop1\r\n+\t\tAFTER_JMP\r\n+\r\n+\r\n+//;;; Store the current value of chainlen.\r\n+        mov [chainlenwmask], edx\r\n+/*\r\n+;;; Point edi to the string under scrutiny, and esi to the string we\r\n+;;; are hoping to match it up with. In actuality, esi and edi are\r\n+;;; both pointed (MAX_MATCH_8 - scanalign) bytes ahead, and edx is\r\n+;;; initialized to -(MAX_MATCH_8 - scanalign).\r\n+*/\r\n+        lea rsi,[r8+r10]\r\n+        mov rdx, 0xfffffffffffffef8 //; -(MAX_MATCH_8)\r\n+        lea rsi, [rsi + r13 + 0x0108] //;MAX_MATCH_8]\r\n+        lea rdi, [r9 + r13 + 0x0108] //;MAX_MATCH_8]\r\n+\r\n+        prefetcht1 [rsi+rdx]\r\n+        prefetcht1 [rdi+rdx]\r\n+\r\n+/*\r\n+;;; Test the strings for equality, 8 bytes at a time. At the end,\r\n+;;; adjust rdx so that it is offset to the exact byte that mismatched.\r\n+;;;\r\n+;;; We already know at this point that the first three bytes of the\r\n+;;; strings match each other, and they can be safely passed over before\r\n+;;; starting the compare loop. So what this code does is skip over 0-3\r\n+;;; bytes, as much as necessary in order to dword-align the edi\r\n+;;; pointer. (rsi will still be misaligned three times out of four.)\r\n+;;;\r\n+;;; It should be confessed that this loop usually does not represent\r\n+;;; much of the total running time. Replacing it with a more\r\n+;;; straightforward \"rep cmpsb\" would not drastically degrade\r\n+;;; performance.\r\n+*/\r\n+\r\n+LoopCmps:\r\n+        mov rax, [rsi + rdx]\r\n+        xor rax, [rdi + rdx]\r\n+        jnz LeaveLoopCmps\r\n+\r\n+        mov rax, [rsi + rdx + 8]\r\n+        xor rax, [rdi + rdx + 8]\r\n+        jnz LeaveLoopCmps8\r\n+\r\n+\r\n+        mov rax, [rsi + rdx + 8+8]\r\n+        xor rax, [rdi + rdx + 8+8]\r\n+        jnz LeaveLoopCmps16\r\n+\r\n+        add rdx,8+8+8\r\n+\r\n+\t\tBEFORE_JMP\r\n+        jnz  LoopCmps\r\n+        jmp  LenMaximum\r\n+\t\tAFTER_JMP\r\n+\t\t\r\n+LeaveLoopCmps16: add rdx,8\r\n+LeaveLoopCmps8: add rdx,8\r\n+LeaveLoopCmps:\r\n+\r\n+        test    eax, 0x0000FFFF\r\n+        jnz LenLower\r\n+\r\n+        test eax,0xffffffff\r\n+\r\n+        jnz LenLower32\r\n+\r\n+        add rdx,4\r\n+        shr rax,32\r\n+        or ax,ax\r\n+\t\tBEFORE_JMP\r\n+        jnz LenLower\r\n+\t\tAFTER_JMP\r\n+\r\n+LenLower32:\r\n+        shr eax,16\r\n+        add rdx,2\r\n+\t\t\r\n+LenLower:\t\t\r\n+        sub al, 1\r\n+        adc rdx, 0\r\n+//;;; Calculate the length of the match. If it is longer than MAX_MATCH,\r\n+//;;; then automatically accept it as the best possible match and leave.\r\n+\r\n+        lea rax, [rdi + rdx]\r\n+        sub rax, r9\r\n+        cmp eax, MAX_MATCH\r\n+\t\tBEFORE_JMP\r\n+        jge LenMaximum\r\n+\t\tAFTER_JMP\r\n+/*\r\n+;;; If the length of the match is not longer than the best match we\r\n+;;; have so far, then forget it and return to the lookup loop.\r\n+;///////////////////////////////////\r\n+*/\r\n+        cmp eax, r11d\r\n+        jg  LongerMatch\r\n+\r\n+        lea rsi,[r10+r11]\r\n+\r\n+        mov rdi, prev_ad\r\n+        mov edx, [chainlenwmask]\r\n+\t\tBEFORE_JMP\r\n+        jmp LookupLoop\r\n+\t\tAFTER_JMP\r\n+/*\r\n+;;;         s->match_start = cur_match;\r\n+;;;         best_len = len;\r\n+;;;         if (len >= nice_match) break;\r\n+;;;         scan_end = *(ushf*)(scan+best_len-1);\r\n+*/\r\n+LongerMatch:\r\n+        mov r11d, eax\r\n+        mov match_start, r8d\r\n+        cmp eax, [nicematch]\r\n+\t\tBEFORE_JMP\r\n+        jge LeaveNow\r\n+\t\tAFTER_JMP\r\n+\r\n+        lea rsi,[r10+rax]\r\n+\r\n+        movzx   ebx, word ptr [r9 + rax - 1]\r\n+        mov rdi, prev_ad\r\n+        mov edx, [chainlenwmask]\r\n+\t\tBEFORE_JMP\r\n+        jmp LookupLoop\r\n+\t\tAFTER_JMP\r\n+\r\n+//;;; Accept the current string, with the maximum possible length.\r\n+\r\n+LenMaximum:\r\n+        mov r11d,MAX_MATCH\r\n+        mov match_start, r8d\r\n+\r\n+//;;; if ((uInt)best_len <= s->lookahead) return (uInt)best_len;\r\n+//;;; return s->lookahead;\r\n+\r\n+LeaveNow:\r\n+        mov eax, Lookahead\r\n+        cmp r11d, eax\r\n+        cmovng eax, r11d\r\n+\r\n+\r\n+\r\n+//;;; Restore the stack and return from whence we came.\r\n+\r\n+\r\n+//        mov rsi,[save_rsi]\r\n+//        mov rdi,[save_rdi]\r\n+        mov rbx,[save_rbx]\r\n+        mov rbp,[save_rbp]\r\n+        mov r12,[save_r12]\r\n+        mov r13,[save_r13]\r\n+        mov r14,[save_r14]\r\n+        mov r15,[save_r15]\r\n+\r\n+\r\n+        ret 0\r\n+//; please don't remove this string !\r\n+//; Your can freely use gvmat64 in any free or commercial app\r\n+//; but it is far better don't remove the string in the binary!\r\n+ //   db     0dh,0ah,\"asm686 with masm, optimised assembly code from Brian Raiter, written 1998, converted to amd 64 by Gilles Vollant 2005\",0dh,0ah,0\r\n+\r\n+\r\n+match_init:\r\n+  ret 0\r\n+\r\n+\r"}, {"sha": "7bbe90ced2ec5f1cdb99c7b1263b7f6faf3d16e2", "filename": "zlib/contrib/infback9/infback9.c", "status": "modified", "additions": 50, "deletions": 41, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Finfback9%2Finfback9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Finfback9%2Finfback9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Finfback9%2Finfback9.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,5 +1,5 @@\n /* infback9.c -- inflate deflate64 data using a call-back interface\n- * Copyright (C) 1995-2003 Mark Adler\n+ * Copyright (C) 1995-2008 Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -242,7 +242,7 @@ void FAR *out_desc;\n     code const FAR *distcode;   /* starting table for distance codes */\n     unsigned lenbits;           /* index bits for lencode */\n     unsigned distbits;          /* index bits for distcode */\n-    code this;                  /* current decoding table entry */\n+    code here;                  /* current decoding table entry */\n     code last;                  /* parent table entry */\n     unsigned len;               /* length to copy for repeats, bits to drop */\n     int ret;                    /* return code */\n@@ -384,19 +384,19 @@ void FAR *out_desc;\n             state->have = 0;\n             while (state->have < state->nlen + state->ndist) {\n                 for (;;) {\n-                    this = lencode[BITS(lenbits)];\n-                    if ((unsigned)(this.bits) <= bits) break;\n+                    here = lencode[BITS(lenbits)];\n+                    if ((unsigned)(here.bits) <= bits) break;\n                     PULLBYTE();\n                 }\n-                if (this.val < 16) {\n-                    NEEDBITS(this.bits);\n-                    DROPBITS(this.bits);\n-                    state->lens[state->have++] = this.val;\n+                if (here.val < 16) {\n+                    NEEDBITS(here.bits);\n+                    DROPBITS(here.bits);\n+                    state->lens[state->have++] = here.val;\n                 }\n                 else {\n-                    if (this.val == 16) {\n-                        NEEDBITS(this.bits + 2);\n-                        DROPBITS(this.bits);\n+                    if (here.val == 16) {\n+                        NEEDBITS(here.bits + 2);\n+                        DROPBITS(here.bits);\n                         if (state->have == 0) {\n                             strm->msg = (char *)\"invalid bit length repeat\";\n                             mode = BAD;\n@@ -406,16 +406,16 @@ void FAR *out_desc;\n                         copy = 3 + BITS(2);\n                         DROPBITS(2);\n                     }\n-                    else if (this.val == 17) {\n-                        NEEDBITS(this.bits + 3);\n-                        DROPBITS(this.bits);\n+                    else if (here.val == 17) {\n+                        NEEDBITS(here.bits + 3);\n+                        DROPBITS(here.bits);\n                         len = 0;\n                         copy = 3 + BITS(3);\n                         DROPBITS(3);\n                     }\n                     else {\n-                        NEEDBITS(this.bits + 7);\n-                        DROPBITS(this.bits);\n+                        NEEDBITS(here.bits + 7);\n+                        DROPBITS(here.bits);\n                         len = 0;\n                         copy = 11 + BITS(7);\n                         DROPBITS(7);\n@@ -433,7 +433,16 @@ void FAR *out_desc;\n             /* handle error breaks in while */\n             if (mode == BAD) break;\n \n-            /* build code tables */\n+            /* check for end-of-block code (better have one) */\n+            if (state->lens[256] == 0) {\n+                strm->msg = (char *)\"invalid code -- missing end-of-block\";\n+                mode = BAD;\n+                break;\n+            }\n+\n+            /* build code tables -- note: do not change the lenbits or distbits\n+               values here (9 and 6) without reading the comments in inftree9.h\n+               concerning the ENOUGH constants, which depend on those values */\n             state->next = state->codes;\n             lencode = (code const FAR *)(state->next);\n             lenbits = 9;\n@@ -460,28 +469,28 @@ void FAR *out_desc;\n         case LEN:\n             /* get a literal, length, or end-of-block code */\n             for (;;) {\n-                this = lencode[BITS(lenbits)];\n-                if ((unsigned)(this.bits) <= bits) break;\n+                here = lencode[BITS(lenbits)];\n+                if ((unsigned)(here.bits) <= bits) break;\n                 PULLBYTE();\n             }\n-            if (this.op && (this.op & 0xf0) == 0) {\n-                last = this;\n+            if (here.op && (here.op & 0xf0) == 0) {\n+                last = here;\n                 for (;;) {\n-                    this = lencode[last.val +\n+                    here = lencode[last.val +\n                             (BITS(last.bits + last.op) >> last.bits)];\n-                    if ((unsigned)(last.bits + this.bits) <= bits) break;\n+                    if ((unsigned)(last.bits + here.bits) <= bits) break;\n                     PULLBYTE();\n                 }\n                 DROPBITS(last.bits);\n             }\n-            DROPBITS(this.bits);\n-            length = (unsigned)this.val;\n+            DROPBITS(here.bits);\n+            length = (unsigned)here.val;\n \n             /* process literal */\n-            if (this.op == 0) {\n-                Tracevv((stderr, this.val >= 0x20 && this.val < 0x7f ?\n+            if (here.op == 0) {\n+                Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n                         \"inflate:         literal '%c'\\n\" :\n-                        \"inflate:         literal 0x%02x\\n\", this.val));\n+                        \"inflate:         literal 0x%02x\\n\", here.val));\n                 ROOM();\n                 *put++ = (unsigned char)(length);\n                 left--;\n@@ -490,21 +499,21 @@ void FAR *out_desc;\n             }\n \n             /* process end of block */\n-            if (this.op & 32) {\n+            if (here.op & 32) {\n                 Tracevv((stderr, \"inflate:         end of block\\n\"));\n                 mode = TYPE;\n                 break;\n             }\n \n             /* invalid code */\n-            if (this.op & 64) {\n+            if (here.op & 64) {\n                 strm->msg = (char *)\"invalid literal/length code\";\n                 mode = BAD;\n                 break;\n             }\n \n             /* length code -- get extra bits, if any */\n-            extra = (unsigned)(this.op) & 31;\n+            extra = (unsigned)(here.op) & 31;\n             if (extra != 0) {\n                 NEEDBITS(extra);\n                 length += BITS(extra);\n@@ -514,30 +523,30 @@ void FAR *out_desc;\n \n             /* get distance code */\n             for (;;) {\n-                this = distcode[BITS(distbits)];\n-                if ((unsigned)(this.bits) <= bits) break;\n+                here = distcode[BITS(distbits)];\n+                if ((unsigned)(here.bits) <= bits) break;\n                 PULLBYTE();\n             }\n-            if ((this.op & 0xf0) == 0) {\n-                last = this;\n+            if ((here.op & 0xf0) == 0) {\n+                last = here;\n                 for (;;) {\n-                    this = distcode[last.val +\n+                    here = distcode[last.val +\n                             (BITS(last.bits + last.op) >> last.bits)];\n-                    if ((unsigned)(last.bits + this.bits) <= bits) break;\n+                    if ((unsigned)(last.bits + here.bits) <= bits) break;\n                     PULLBYTE();\n                 }\n                 DROPBITS(last.bits);\n             }\n-            DROPBITS(this.bits);\n-            if (this.op & 64) {\n+            DROPBITS(here.bits);\n+            if (here.op & 64) {\n                 strm->msg = (char *)\"invalid distance code\";\n                 mode = BAD;\n                 break;\n             }\n-            offset = (unsigned)this.val;\n+            offset = (unsigned)here.val;\n \n             /* get distance extra bits, if any */\n-            extra = (unsigned)(this.op) & 15;\n+            extra = (unsigned)(here.op) & 15;\n             if (extra != 0) {\n                 NEEDBITS(extra);\n                 offset += BITS(extra);"}, {"sha": "306c5f1b19e07928d98467f04272ac094b8f9f9e", "filename": "zlib/contrib/infback9/inftree9.c", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Finfback9%2Finftree9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Finfback9%2Finftree9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Finfback9%2Finftree9.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,5 +1,5 @@\n /* inftree9.c -- generate Huffman trees for efficient decoding\n- * Copyright (C) 1995-2005 Mark Adler\n+ * Copyright (C) 1995-2010 Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -9,7 +9,7 @@\n #define MAXBITS 15\n \n const char inflate9_copyright[] =\n-   \" inflate9 1.2.3 Copyright 1995-2005 Mark Adler \";\n+   \" inflate9 1.2.5 Copyright 1995-2010 Mark Adler \";\n /*\n   If you use the zlib library in a product, an acknowledgment is welcome\n   in the documentation of your product. If for some reason you cannot\n@@ -64,7 +64,7 @@ unsigned short FAR *work;\n     static const unsigned short lext[31] = { /* Length codes 257..285 extra */\n         128, 128, 128, 128, 128, 128, 128, 128, 129, 129, 129, 129,\n         130, 130, 130, 130, 131, 131, 131, 131, 132, 132, 132, 132,\n-        133, 133, 133, 133, 144, 201, 196};\n+        133, 133, 133, 133, 144, 73, 195};\n     static const unsigned short dbase[32] = { /* Distance codes 0..31 base */\n         1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49,\n         65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073,\n@@ -160,11 +160,10 @@ unsigned short FAR *work;\n        entered in the tables.\n \n        used keeps track of how many table entries have been allocated from the\n-       provided *table space.  It is checked when a LENS table is being made\n-       against the space in *table, ENOUGH, minus the maximum space needed by\n-       the worst case distance code, MAXD.  This should never happen, but the\n-       sufficiency of ENOUGH has not been proven exhaustively, hence the check.\n-       This assumes that when type == LENS, bits == 9.\n+       provided *table space.  It is checked for LENS and DIST tables against\n+       the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n+       the initial root table size constants.  See the comments in inftree9.h\n+       for more information.\n \n        sym increments through all symbols, and the loop terminates when\n        all codes of length max, i.e. all codes, have been processed.  This\n@@ -203,7 +202,8 @@ unsigned short FAR *work;\n     mask = used - 1;            /* mask for comparing low */\n \n     /* check available table space */\n-    if (type == LENS && used >= ENOUGH - MAXD)\n+    if ((type == LENS && used >= ENOUGH_LENS) ||\n+        (type == DISTS && used >= ENOUGH_DISTS))\n         return 1;\n \n     /* process all codes and make table entries */\n@@ -270,7 +270,8 @@ unsigned short FAR *work;\n \n             /* check for enough space */\n             used += 1U << curr;\n-            if (type == LENS && used >= ENOUGH - MAXD)\n+            if ((type == LENS && used >= ENOUGH_LENS) ||\n+                (type == DISTS && used >= ENOUGH_DISTS))\n                 return 1;\n \n             /* point entry in root table to sub-table */"}, {"sha": "5ab21f0c6d112033069b26647e6537de05df640d", "filename": "zlib/contrib/infback9/inftree9.h", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Finfback9%2Finftree9.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Finfback9%2Finftree9.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Finfback9%2Finftree9.h?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,5 +1,5 @@\n /* inftree9.h -- header to use inftree9.c\n- * Copyright (C) 1995-2003 Mark Adler\n+ * Copyright (C) 1995-2008 Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -35,15 +35,21 @@ typedef struct {\n     01000000 - invalid code\n  */\n \n-/* Maximum size of dynamic tree.  The maximum found in a long but non-\n-   exhaustive search was 1444 code structures (852 for length/literals\n-   and 592 for distances, the latter actually the result of an\n-   exhaustive search).  The true maximum is not known, but the value\n-   below is more than safe. */\n-#define ENOUGH 2048\n-#define MAXD 592\n+/* Maximum size of the dynamic table.  The maximum number of code structures is\n+   1446, which is the sum of 852 for literal/length codes and 594 for distance\n+   codes.  These values were found by exhaustive searches using the program\n+   examples/enough.c found in the zlib distribtution.  The arguments to that\n+   program are the number of symbols, the initial root table size, and the\n+   maximum bit length of a code.  \"enough 286 9 15\" for literal/length codes\n+   returns returns 852, and \"enough 32 6 15\" for distance codes returns 594.\n+   The initial root table size (9 or 6) is found in the fifth argument of the\n+   inflate_table() calls in infback9.c.  If the root table size is changed,\n+   then these maximum sizes would be need to be recalculated and updated. */\n+#define ENOUGH_LENS 852\n+#define ENOUGH_DISTS 594\n+#define ENOUGH (ENOUGH_LENS+ENOUGH_DISTS)\n \n-/* Type of code to build for inftable() */\n+/* Type of code to build for inflate_table9() */\n typedef enum {\n     CODES,\n     LENS,"}, {"sha": "7292f67b753795a33aff274e4adcbf561f78c75c", "filename": "zlib/contrib/inflate86/inffas86.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Finflate86%2Finffas86.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Finflate86%2Finffas86.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Finflate86%2Finffas86.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -113,7 +113,7 @@ unsigned start;         /* inflate()'s starting value for strm->avail_out */\n     ar.beg = ar.out - (start - strm->avail_out);\n     ar.end = ar.out + (strm->avail_out - PAD_AVAIL_OUT);\n     ar.wsize = state->wsize;\n-    ar.write = state->write;\n+    ar.write = state->wnext;\n     ar.window = state->window;\n     ar.hold = state->hold;\n     ar.bits = state->bits;"}, {"sha": "4b03a71abd5998f095e500f6bbf6ddcca9a1eaad", "filename": "zlib/contrib/masm686/match.asm", "status": "removed", "additions": 0, "deletions": 413, "changes": 413, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d216c70d980e3169b42e9734cf4bea1648ff8f0/zlib%2Fcontrib%2Fmasm686%2Fmatch.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d216c70d980e3169b42e9734cf4bea1648ff8f0/zlib%2Fcontrib%2Fmasm686%2Fmatch.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fmasm686%2Fmatch.asm?ref=5d216c70d980e3169b42e9734cf4bea1648ff8f0", "patch": "@@ -1,413 +0,0 @@\n-\r\n-; match.asm -- Pentium-Pro optimized version of longest_match()\r\n-;\r\n-; Updated for zlib 1.1.3 and converted to MASM 6.1x\r\n-; Copyright (C) 2000 Dan Higdon <hdan@kinesoft.com>\r\n-;                    and Chuck Walbourn <chuckw@kinesoft.com>\r\n-; Corrections by Cosmin Truta <cosmint@cs.ubbcluj.ro>\r\n-;\r\n-; This is free software; you can redistribute it and/or modify it\r\n-; under the terms of the GNU General Public License.\r\n-\r\n-; Based on match.S\r\n-; Written for zlib 1.1.2\r\n-; Copyright (C) 1998 Brian Raiter <breadbox@muppetlabs.com>\r\n-;\r\n-; Modified by Gilles Vollant (2005) for add gzhead and gzindex\r\n-\r\n-\t.686P\r\n-\t.MODEL\tFLAT\r\n-\r\n-;===========================================================================\r\n-; EQUATES\r\n-;===========================================================================\r\n-\r\n-MAX_MATCH\tEQU 258\r\n-MIN_MATCH\tEQU 3\r\n-MIN_LOOKAHEAD\tEQU (MAX_MATCH + MIN_MATCH + 1)\r\n-MAX_MATCH_8\tEQU ((MAX_MATCH + 7) AND (NOT 7))\r\n-\r\n-;===========================================================================\r\n-; STRUCTURES\r\n-;===========================================================================\r\n-\r\n-; This STRUCT assumes a 4-byte alignment\r\n-\r\n-DEFLATE_STATE\tSTRUCT\r\n-ds_strm\t\t\tdd ?\r\n-ds_status\t\tdd ?\r\n-ds_pending_buf\t\tdd ?\r\n-ds_pending_buf_size\tdd ?\r\n-ds_pending_out\t\tdd ?\r\n-ds_pending\t\tdd ?\r\n-ds_wrap\t\t\tdd ?\r\n-; gzhead and gzindex are added in zlib 1.2.2.2 (see deflate.h)\r\n-ds_gzhead               dd ?\r\n-ds_gzindex              dd ?\r\n-ds_data_type\t\tdb ?\r\n-ds_method\t\tdb ?\r\n-\t\t\tdb ?\t; padding\r\n-\t\t\tdb ?\t; padding\r\n-ds_last_flush\t\tdd ?\r\n-ds_w_size\t\tdd ?\t; used\r\n-ds_w_bits\t\tdd ?\r\n-ds_w_mask\t\tdd ?\t; used\r\n-ds_window\t\tdd ?\t; used\r\n-ds_window_size\t\tdd ?\r\n-ds_prev\t\t\tdd ?\t; used\r\n-ds_head\t\t\tdd ?\r\n-ds_ins_h\t\tdd ?\r\n-ds_hash_size\t\tdd ?\r\n-ds_hash_bits\t\tdd ?\r\n-ds_hash_mask\t\tdd ?\r\n-ds_hash_shift\t\tdd ?\r\n-ds_block_start\t\tdd ?\r\n-ds_match_length\t\tdd ?\t; used\r\n-ds_prev_match\t\tdd ?\t; used\r\n-ds_match_available\tdd ?\r\n-ds_strstart\t\tdd ?\t; used\r\n-ds_match_start\t\tdd ?\t; used\r\n-ds_lookahead\t\tdd ?\t; used\r\n-ds_prev_length\t\tdd ?\t; used\r\n-ds_max_chain_length\tdd ?\t; used\r\n-ds_max_laxy_match\tdd ?\r\n-ds_level\t\tdd ?\r\n-ds_strategy\t\tdd ?\r\n-ds_good_match\t\tdd ?\t; used\r\n-ds_nice_match\t\tdd ?\t; used\r\n-\r\n-; Don't need anymore of the struct for match\r\n-DEFLATE_STATE\tENDS\r\n-\r\n-;===========================================================================\r\n-; CODE\r\n-;===========================================================================\r\n-_TEXT\tSEGMENT\r\n-\r\n-;---------------------------------------------------------------------------\r\n-; match_init\r\n-;---------------------------------------------------------------------------\r\n-\tALIGN\t4\r\n-PUBLIC\t_match_init\r\n-_match_init\tPROC\r\n-\t; no initialization needed\r\n-\tret\r\n-_match_init\tENDP\r\n-\r\n-;---------------------------------------------------------------------------\r\n-; uInt longest_match(deflate_state *deflatestate, IPos curmatch)\r\n-;---------------------------------------------------------------------------\r\n-\tALIGN\t4\r\n-\r\n-PUBLIC\t_longest_match\r\n-_longest_match\tPROC\r\n-\r\n-; Since this code uses EBP for a scratch register, the stack frame must\r\n-; be manually constructed and referenced relative to the ESP register.\r\n-\r\n-; Stack image\r\n-; Variables\r\n-chainlenwmask\t=  0\t; high word: current chain len\r\n-\t\t\t; low word: s->wmask\r\n-window\t\t=  4\t; local copy of s->window\r\n-windowbestlen\t=  8\t; s->window + bestlen\r\n-scanend\t\t= 12\t; last two bytes of string\r\n-scanstart\t= 16\t; first two bytes of string\r\n-scanalign\t= 20\t; dword-misalignment of string\r\n-nicematch\t= 24\t; a good enough match size\r\n-bestlen\t\t= 28\t; size of best match so far\r\n-scan\t\t= 32\t; ptr to string wanting match\r\n-varsize\t\t= 36\t; number of bytes (also offset to last saved register)\r\n-\r\n-; Saved Registers (actually pushed into place)\r\n-ebx_save\t= 36\r\n-edi_save\t= 40\r\n-esi_save\t= 44\r\n-ebp_save\t= 48\r\n-\r\n-; Parameters\r\n-retaddr\t\t= 52\r\n-deflatestate\t= 56\r\n-curmatch\t= 60\r\n-\r\n-; Save registers that the compiler may be using\r\n-\tpush\tebp\r\n-\tpush\tedi\r\n-\tpush\tesi\r\n-\tpush\tebx\r\n-\r\n-; Allocate local variable space\r\n-\tsub\tesp,varsize\r\n-\r\n-; Retrieve the function arguments. ecx will hold cur_match\r\n-; throughout the entire function. edx will hold the pointer to the\r\n-; deflate_state structure during the function's setup (before\r\n-; entering the main loop).\r\n-\r\n-\tmov\tedx, [esp+deflatestate]\r\n-ASSUME\tedx:PTR DEFLATE_STATE\r\n-\r\n-\tmov\tecx, [esp+curmatch]\r\n-\r\n-; uInt wmask = s->w_mask;\r\n-; unsigned chain_length = s->max_chain_length;\r\n-; if (s->prev_length >= s->good_match) {\r\n-;     chain_length >>= 2;\r\n-; }\r\n-\r\n-\tmov\teax, [edx].ds_prev_length\r\n-\tmov\tebx, [edx].ds_good_match\r\n-\tcmp\teax, ebx\r\n-\tmov\teax, [edx].ds_w_mask\r\n-\tmov\tebx, [edx].ds_max_chain_length\r\n-\tjl\tSHORT LastMatchGood\r\n-\tshr\tebx, 2\r\n-LastMatchGood:\r\n-\r\n-; chainlen is decremented once beforehand so that the function can\r\n-; use the sign flag instead of the zero flag for the exit test.\r\n-; It is then shifted into the high word, to make room for the wmask\r\n-; value, which it will always accompany.\r\n-\r\n-\tdec\tebx\r\n-\tshl\tebx, 16\r\n-\tor\tebx, eax\r\n-\tmov\t[esp+chainlenwmask], ebx\r\n-\r\n-; if ((uInt)nice_match > s->lookahead) nice_match = s->lookahead;\r\n-\r\n-\tmov\teax, [edx].ds_nice_match\r\n-\tmov\tebx, [edx].ds_lookahead\r\n-\tcmp\tebx, eax\r\n-\tjl\tSHORT LookaheadLess\r\n-\tmov\tebx, eax\r\n-LookaheadLess:\r\n-\tmov\t[esp+nicematch], ebx\r\n-\r\n-;/* register Bytef *scan = s->window + s->strstart;                     */\r\n-\r\n-\tmov\tesi, [edx].ds_window\r\n-\tmov\t[esp+window], esi\r\n-\tmov\tebp, [edx].ds_strstart\r\n-\tlea\tedi, [esi+ebp]\r\n-\tmov\t[esp+scan],edi\r\n-\r\n-;/* Determine how many bytes the scan ptr is off from being             */\r\n-;/* dword-aligned.                                                      */\r\n-\r\n-\tmov\teax, edi\r\n-\tneg\teax\r\n-\tand\teax, 3\r\n-\tmov\t[esp+scanalign], eax\r\n-\r\n-;/* IPos limit = s->strstart > (IPos)MAX_DIST(s) ?                      */\r\n-;/*     s->strstart - (IPos)MAX_DIST(s) : NIL;                          */\r\n-\r\n-\tmov\teax, [edx].ds_w_size\r\n-\tsub\teax, MIN_LOOKAHEAD\r\n-\tsub\tebp, eax\r\n-\tjg\tSHORT LimitPositive\r\n-\txor\tebp, ebp\r\n-LimitPositive:\r\n-\r\n-;/* int best_len = s->prev_length;                                      */\r\n-\r\n-\tmov\teax, [edx].ds_prev_length\r\n-\tmov\t[esp+bestlen], eax\r\n-\r\n-;/* Store the sum of s->window + best_len in %esi locally, and in %esi. */\r\n-\r\n-\tadd\tesi, eax\r\n-\tmov\t[esp+windowbestlen], esi\r\n-\r\n-;/* register ush scan_start = *(ushf*)scan;                             */\r\n-;/* register ush scan_end   = *(ushf*)(scan+best_len-1);                */\r\n-;/* Posf *prev = s->prev;                                               */\r\n-\r\n-\tmovzx\tebx, WORD PTR[edi]\r\n-\tmov\t[esp+scanstart], ebx\r\n-\tmovzx\tebx, WORD PTR[eax+edi-1]\r\n-\tmov\t[esp+scanend], ebx\r\n-\tmov\tedi, [edx].ds_prev\r\n-\r\n-;/* Jump into the main loop.                                            */\r\n-\r\n-\tmov\tedx, [esp+chainlenwmask]\r\n-\tjmp\tSHORT LoopEntry\r\n-\r\n-;/* do {\r\n-; *     match = s->window + cur_match;\r\n-; *     if (*(ushf*)(match+best_len-1) != scan_end ||\r\n-; *         *(ushf*)match != scan_start) continue;\r\n-; *     [...]\r\n-; * } while ((cur_match = prev[cur_match & wmask]) > limit\r\n-; *          && --chain_length != 0);\r\n-; *\r\n-; * Here is the inner loop of the function. The function will spend the\r\n-; * majority of its time in this loop, and majority of that time will\r\n-; * be spent in the first ten instructions.\r\n-; *\r\n-; * Within this loop:\r\n-; * %ebx = scanend\r\n-; * %ecx = curmatch\r\n-; * %edx = chainlenwmask - i.e., ((chainlen << 16) | wmask)\r\n-; * %esi = windowbestlen - i.e., (window + bestlen)\r\n-; * %edi = prev\r\n-; * %ebp = limit\r\n-; */\r\n-\r\n-\tALIGN\t4\r\n-LookupLoop:\r\n-\tand\tecx, edx\r\n-\tmovzx\tecx, WORD PTR[edi+ecx*2]\r\n-\tcmp\tecx, ebp\r\n-\tjbe\tLeaveNow\r\n-\tsub\tedx, 000010000H\r\n-\tjs\tLeaveNow\r\n-\r\n-LoopEntry:\r\n-\tmovzx\teax, WORD PTR[esi+ecx-1]\r\n-\tcmp\teax, ebx\r\n-\tjnz\tSHORT LookupLoop\r\n-\r\n-\tmov\teax, [esp+window]\r\n-\tmovzx\teax, WORD PTR[eax+ecx]\r\n-\tcmp\teax, [esp+scanstart]\r\n-\tjnz\tSHORT LookupLoop\r\n-\r\n-;/* Store the current value of chainlen.                                */\r\n-\r\n-\tmov\t[esp+chainlenwmask], edx\r\n-\r\n-;/* Point %edi to the string under scrutiny, and %esi to the string we  */\r\n-;/* are hoping to match it up with. In actuality, %esi and %edi are     */\r\n-;/* both pointed (MAX_MATCH_8 - scanalign) bytes ahead, and %edx is     */\r\n-;/* initialized to -(MAX_MATCH_8 - scanalign).                          */\r\n-\r\n-\tmov\tesi, [esp+window]\r\n-\tmov\tedi, [esp+scan]\r\n-\tadd\tesi, ecx\r\n-\tmov\teax, [esp+scanalign]\r\n-\tmov\tedx, -MAX_MATCH_8\r\n-\tlea\tedi, [edi+eax+MAX_MATCH_8]\r\n-\tlea\tesi, [esi+eax+MAX_MATCH_8]\r\n-\r\n-;/* Test the strings for equality, 8 bytes at a time. At the end,\r\n-; * adjust %edx so that it is offset to the exact byte that mismatched.\r\n-; *\r\n-; * We already know at this point that the first three bytes of the\r\n-; * strings match each other, and they can be safely passed over before\r\n-; * starting the compare loop. So what this code does is skip over 0-3\r\n-; * bytes, as much as necessary in order to dword-align the %edi\r\n-; * pointer. (%esi will still be misaligned three times out of four.)\r\n-; *\r\n-; * It should be confessed that this loop usually does not represent\r\n-; * much of the total running time. Replacing it with a more\r\n-; * straightforward \"rep cmpsb\" would not drastically degrade\r\n-; * performance.\r\n-; */\r\n-\r\n-LoopCmps:\r\n-\tmov\teax, DWORD PTR[esi+edx]\r\n-\txor\teax, DWORD PTR[edi+edx]\r\n-\tjnz\tSHORT LeaveLoopCmps\r\n-\r\n-\tmov\teax, DWORD PTR[esi+edx+4]\r\n-\txor\teax, DWORD PTR[edi+edx+4]\r\n-\tjnz\tSHORT LeaveLoopCmps4\r\n-\r\n-\tadd\tedx, 8\r\n-\tjnz\tSHORT LoopCmps\r\n-\tjmp\tLenMaximum\r\n-\tALIGN\t4\r\n-\r\n-LeaveLoopCmps4:\r\n-\tadd\tedx, 4\r\n-\r\n-LeaveLoopCmps:\r\n-\ttest\teax, 00000FFFFH\r\n-\tjnz\tSHORT LenLower\r\n-\r\n-\tadd\tedx, 2\r\n-\tshr\teax, 16\r\n-\r\n-LenLower:\r\n-\tsub\tal, 1\r\n-\tadc\tedx, 0\r\n-\r\n-;/* Calculate the length of the match. If it is longer than MAX_MATCH,  */\r\n-;/* then automatically accept it as the best possible match and leave.  */\r\n-\r\n-\tlea\teax, [edi+edx]\r\n-\tmov\tedi, [esp+scan]\r\n-\tsub\teax, edi\r\n-\tcmp\teax, MAX_MATCH\r\n-\tjge\tSHORT LenMaximum\r\n-\r\n-;/* If the length of the match is not longer than the best match we     */\r\n-;/* have so far, then forget it and return to the lookup loop.          */\r\n-\r\n-\tmov\tedx, [esp+deflatestate]\r\n-\tmov\tebx, [esp+bestlen]\r\n-\tcmp\teax, ebx\r\n-\tjg\tSHORT LongerMatch\r\n-\tmov\tesi, [esp+windowbestlen]\r\n-\tmov\tedi, [edx].ds_prev\r\n-\tmov\tebx, [esp+scanend]\r\n-\tmov\tedx, [esp+chainlenwmask]\r\n-\tjmp\tLookupLoop\r\n-\tALIGN\t4\r\n-\r\n-;/*         s->match_start = cur_match;                                 */\r\n-;/*         best_len = len;                                             */\r\n-;/*         if (len >= nice_match) break;                               */\r\n-;/*         scan_end = *(ushf*)(scan+best_len-1);                       */\r\n-\r\n-LongerMatch:\r\n-\tmov\tebx, [esp+nicematch]\r\n-\tmov\t[esp+bestlen], eax\r\n-\tmov\t[edx].ds_match_start, ecx\r\n-\tcmp\teax, ebx\r\n-\tjge\tSHORT LeaveNow\r\n-\tmov\tesi, [esp+window]\r\n-\tadd\tesi, eax\r\n-\tmov\t[esp+windowbestlen], esi\r\n-\tmovzx\tebx, WORD PTR[edi+eax-1]\r\n-\tmov\tedi, [edx].ds_prev\r\n-\tmov\t[esp+scanend], ebx\r\n-\tmov\tedx, [esp+chainlenwmask]\r\n-\tjmp\tLookupLoop\r\n-\tALIGN\t4\r\n-\r\n-;/* Accept the current string, with the maximum possible length.        */\r\n-\r\n-LenMaximum:\r\n-\tmov\tedx, [esp+deflatestate]\r\n-\tmov\tDWORD PTR[esp+bestlen], MAX_MATCH\r\n-\tmov\t[edx].ds_match_start, ecx\r\n-\r\n-;/* if ((uInt)best_len <= s->lookahead) return (uInt)best_len;          */\r\n-;/* return s->lookahead;                                                */\r\n-\r\n-LeaveNow:\r\n-\tmov\tedx, [esp+deflatestate]\r\n-\tmov\tebx, [esp+bestlen]\r\n-\tmov\teax, [edx].ds_lookahead\r\n-\tcmp\tebx, eax\r\n-\tjg\tSHORT LookaheadRet\r\n-\tmov\teax, ebx\r\n-LookaheadRet:\r\n-\r\n-; Restore the stack and return from whence we came.\r\n-\r\n-\tadd\tesp, varsize\r\n-\tpop\tebx\r\n-\tpop\tesi\r\n-\tpop\tedi\r\n-\tpop\tebp\r\n-\tret\r\n-\r\n-_longest_match\tENDP\r\n-\r\n-_TEXT\tENDS\r\n-END\r"}, {"sha": "9879c28b908c94d5b0ee598b283da13d26bc8dcf", "filename": "zlib/contrib/masmx64/gvmat64.asm", "status": "modified", "additions": 46, "deletions": 6, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fmasmx64%2Fgvmat64.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fmasmx64%2Fgvmat64.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fmasmx64%2Fgvmat64.asm?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -2,15 +2,35 @@\n ;    deflate_state *s,\r\n ;    IPos cur_match);                             /* current match */\r\n \r\n-; gvmat64.asm -- Asm portion of the optimized longest_match for 32 bits x86\r\n-; Copyright (C) 1995-2005 Jean-loup Gailly, Brian Raiter and Gilles Vollant.\r\n+; gvmat64.asm -- Asm portion of the optimized longest_match for 32 bits x86_64\r\n+;  (AMD64 on Athlon 64, Opteron, Phenom\r\n+;     and Intel EM64T on Pentium 4 with EM64T, Pentium D, Core 2 Duo, Core I5/I7)\r\n+; Copyright (C) 1995-2010 Jean-loup Gailly, Brian Raiter and Gilles Vollant.\r\n ;\r\n ; File written by Gilles Vollant, by converting to assembly the longest_match\r\n ;  from Jean-loup Gailly in deflate.c of zLib and infoZip zip.\r\n ;\r\n ;  and by taking inspiration on asm686 with masm, optimised assembly code\r\n ;        from Brian Raiter, written 1998\r\n ;\r\n+;  This software is provided 'as-is', without any express or implied\r\n+;  warranty.  In no event will the authors be held liable for any damages\r\n+;  arising from the use of this software.\r\n+;\r\n+;  Permission is granted to anyone to use this software for any purpose,\r\n+;  including commercial applications, and to alter it and redistribute it\r\n+;  freely, subject to the following restrictions:\r\n+;\r\n+;  1. The origin of this software must not be misrepresented; you must not\r\n+;     claim that you wrote the original software. If you use this software\r\n+;     in a product, an acknowledgment in the product documentation would be\r\n+;     appreciated but is not required.\r\n+;  2. Altered source versions must be plainly marked as such, and must not be\r\n+;     misrepresented as being the original software\r\n+;  3. This notice may not be removed or altered from any source distribution.\r\n+;\r\n+;\r\n+;\r\n ;         http://www.zlib.net\r\n ;         http://www.winimage.com/zLibDll\r\n ;         http://www.muppetlabs.com/~breadbox/software/assembly.html\r\n@@ -26,10 +46,10 @@\n ;\r\n ; This file compile with Microsoft Macro Assembler (x64) for AMD64\r\n ;\r\n-;   ml64.exe is given with Visual Studio 2005 and Windows 2003 server DDK\r\n+;   ml64.exe is given with Visual Studio 2005/2008/2010 and Windows WDK\r\n ;\r\n-;   (you can get Windows 2003 server DDK with ml64 and cl for AMD64 from\r\n-;      http://www.microsoft.com/whdc/devtools/ddk/default.mspx for low price)\r\n+;   (you can get Windows WDK with ml64 for AMD64 from\r\n+;      http://www.microsoft.com/whdc/Devtools/wdk/default.mspx for low price)\r\n ;\r\n \r\n \r\n@@ -71,6 +91,25 @@ save_r13        equ  rsp + 64 - LocalVarsSize\n ;save_r15        equ  rsp + 80 - LocalVarsSize\r\n \r\n \r\n+; summary of register usage\r\n+; scanend     ebx\r\n+; scanendw    bx\r\n+; chainlenwmask   edx\r\n+; curmatch    rsi\r\n+; curmatchd   esi\r\n+; windowbestlen   r8\r\n+; scanalign   r9\r\n+; scanalignd  r9d\r\n+; window      r10\r\n+; bestlen     r11\r\n+; bestlend    r11d\r\n+; scanstart   r12d\r\n+; scanstartw  r12w\r\n+; scan        r13\r\n+; nicematch   r14d\r\n+; limit       r15\r\n+; limitd      r15d\r\n+; prev        rcx\r\n \r\n ;  all the +4 offsets are due to the addition of pending_buf_size (in zlib\r\n ;  in the deflate_state structure since the asm code was first written\r\n@@ -406,7 +445,8 @@ LoopCmps:\n \r\n         add rdx,8+8+8\r\n \r\n-        jmp short LoopCmps\r\n+        jnz short LoopCmps\r\n+        jmp short LenMaximum\r\n LeaveLoopCmps16: add rdx,8\r\n LeaveLoopCmps8: add rdx,8\r\n LeaveLoopCmps:\r"}, {"sha": "e8af06fa023b734fb7548eb46c23c911553d7b1a", "filename": "zlib/contrib/masmx64/inffas8664.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fmasmx64%2Finffas8664.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fmasmx64%2Finffas8664.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fmasmx64%2Finffas8664.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -111,11 +111,11 @@ unsigned start;         /* inflate()'s starting value for strm->avail_out */\n     type_ar ar;\r\n     void inffas8664fnc(struct inffast_ar * par);\r\n \r\n-    \r\n+\r\n \r\n #if (defined( __GNUC__ ) && defined( __amd64__ ) && ! defined( __i386 )) || (defined(_MSC_VER) && defined(_M_AMD64))\r\n #define PAD_AVAIL_IN 6\r\n-#define PAD_AVAIL_OUT 258    \r\n+#define PAD_AVAIL_OUT 258\r\n #else\r\n #define PAD_AVAIL_IN 5\r\n #define PAD_AVAIL_OUT 257\r\n@@ -130,7 +130,7 @@ unsigned start;         /* inflate()'s starting value for strm->avail_out */\n     ar.beg = ar.out - (start - strm->avail_out);\r\n     ar.end = ar.out + (strm->avail_out - PAD_AVAIL_OUT);\r\n     ar.wsize = state->wsize;\r\n-    ar.write = state->write;\r\n+    ar.write = state->wnext;\r\n     ar.window = state->window;\r\n     ar.hold = state->hold;\r\n     ar.bits = state->bits;\r"}, {"sha": "60a8d89b71846c015795966dfaa3547711061cd1", "filename": "zlib/contrib/masmx64/inffasx64.asm", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fmasmx64%2Finffasx64.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fmasmx64%2Finffasx64.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fmasmx64%2Finffasx64.asm?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -9,12 +9,16 @@\n ;   ml64.exe /Flinffasx64 /c /Zi inffasx64.asm\r\n ;   with Microsoft Macro Assembler (x64) for AMD64\r\n ;\r\n-;   ml64.exe is given with Visual Studio 2005, Windows 2003 server DDK\r\n+\r\n+; This file compile with Microsoft Macro Assembler (x64) for AMD64\r\n+;\r\n+;   ml64.exe is given with Visual Studio 2005/2008/2010 and Windows WDK\r\n ;\r\n-;   (you can get Windows 2003 server DDK with ml64 and cl.exe for AMD64 from \r\n-;      http://www.microsoft.com/whdc/devtools/ddk/default.mspx for low price)\r\n+;   (you can get Windows WDK with ml64 for AMD64 from\r\n+;      http://www.microsoft.com/whdc/Devtools/wdk/default.mspx for low price)\r\n ;\r\n \r\n+\r\n .code\r\n inffas8664fnc PROC\r\n \r\n@@ -379,7 +383,7 @@ L_break_loop_with_status:\n \tmov r14,[rsp-40]\r\n \tmov r15,[rsp-48]\r\n \tmov rbx,[rsp-56]\r\n-\t\r\n+\r\n     ret 0\r\n ;          :\r\n ;          : \"m\" (ar)\r"}, {"sha": "2da6733412aab24841af676f3a127c290253919c", "filename": "zlib/contrib/masmx64/readme.txt", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fmasmx64%2Freadme.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fmasmx64%2Freadme.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fmasmx64%2Freadme.txt?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -12,7 +12,10 @@ inffasx64.asm and inffas8664.c were written by Chris Anderson, by optimizing\n \r\n Use instructions\r\n ----------------\r\n-Copy these files into the zlib source directory.\r\n+Assemble the .asm files using MASM and put the object files into the zlib source\r\n+directory.  You can also get object files here:\r\n+\r\n+     http://www.winimage.com/zLibDll/zlib124_masm_obj.zip\r\n \r\n define ASMV and ASMINF in your project. Include inffas8664.c in your source tree,\r\n and inffasx64.obj and gvmat64.obj as object to link.\r\n@@ -24,5 +27,5 @@ run bld_64.bat with Microsoft Macro Assembler (x64) for AMD64 (ml64.exe)\n \r\n ml64.exe is given with Visual Studio 2005, Windows 2003 server DDK\r\n \r\n-You can get Windows 2003 server DDK with ml64 and cl for AMD64 from \r\n+You can get Windows 2003 server DDK with ml64 and cl for AMD64 from\r\n   http://www.microsoft.com/whdc/devtools/ddk/default.mspx for low price)\r"}, {"sha": "e1b86bf68a9b263dadf1f3d70481006b8d7941cf", "filename": "zlib/contrib/masmx86/bld_ml32.bat", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fmasmx86%2Fbld_ml32.bat", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fmasmx86%2Fbld_ml32.bat", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fmasmx86%2Fbld_ml32.bat?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,2 +1,2 @@\n-ml /coff /Zi /c /Flgvmat32.lst  gvmat32.asm \r\n-ml /coff /Zi /c /Flinffas32.lst inffas32.asm \r\n+ml /coff /Zi /c /Flmatch686.lst match686.asm\r\n+ml /coff /Zi /c /Flinffas32.lst inffas32.asm\r"}, {"sha": "874bb2d482beb9794956cb376190be1b7a29bc42", "filename": "zlib/contrib/masmx86/gvmat32.asm", "status": "removed", "additions": 0, "deletions": 972, "changes": 972, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d216c70d980e3169b42e9734cf4bea1648ff8f0/zlib%2Fcontrib%2Fmasmx86%2Fgvmat32.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d216c70d980e3169b42e9734cf4bea1648ff8f0/zlib%2Fcontrib%2Fmasmx86%2Fgvmat32.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fmasmx86%2Fgvmat32.asm?ref=5d216c70d980e3169b42e9734cf4bea1648ff8f0", "patch": "@@ -1,972 +0,0 @@\n-; gvmat32.asm -- Asm portion of the optimized longest_match for 32 bits x86\r\n-; Copyright (C) 1995-1996 Jean-loup Gailly and Gilles Vollant.\r\n-; File written by Gilles Vollant, by modifiying the longest_match\r\n-;  from Jean-loup Gailly in deflate.c\r\n-;\r\n-;         http://www.zlib.net\r\n-;         http://www.winimage.com/zLibDll\r\n-;         http://www.muppetlabs.com/~breadbox/software/assembly.html\r\n-;\r\n-; For Visual C++ 4.x and higher and ML 6.x and higher\r\n-;   ml.exe is in directory \\MASM611C of Win95 DDK\r\n-;   ml.exe is also distributed in http://www.masm32.com/masmdl.htm\r\n-;    and in VC++2003 toolkit at http://msdn.microsoft.com/visualc/vctoolkit2003/\r\n-;\r\n-; this file contain two implementation of longest_match\r\n-;\r\n-;  longest_match_7fff : written 1996 by Gilles Vollant optimized for \r\n-;            first Pentium. Assume s->w_mask == 0x7fff\r\n-;  longest_match_686 : written by Brian raiter (1998), optimized for Pentium Pro\r\n-;\r\n-;  for using an seembly version of longest_match, you need define ASMV in project\r\n-;  There is two way in using gvmat32.asm\r\n-;\r\n-;  A) Suggested method\r\n-;    if you want include both longest_match_7fff and longest_match_686\r\n-;    compile the asm file running\r\n-;           ml /coff /Zi /Flgvmat32.lst /c gvmat32.asm\r\n-;    and include gvmat32c.c in your project\r\n-;    if you have an old cpu (386,486 or first Pentium) and s->w_mask==0x7fff,\r\n-;        longest_match_7fff will be used\r\n-;    if you have a more modern CPU (Pentium Pro, II and higher)\r\n-;        longest_match_686 will be used\r\n-;    on old cpu with s->w_mask!=0x7fff, longest_match_686 will be used,\r\n-;        but this is not a sitation you'll find often\r\n-;\r\n-;  B) Alternative\r\n-;    if you are not interresed in old cpu performance and want the smaller\r\n-;       binaries possible\r\n-;\r\n-;    compile the asm file running\r\n-;           ml /coff /Zi /c /Flgvmat32.lst /DNOOLDPENTIUMCODE gvmat32.asm\r\n-;    and do not include gvmat32c.c in your project (ou define also \r\n-;              NOOLDPENTIUMCODE)\r\n-;\r\n-; note : as I known, longest_match_686 is very faster than longest_match_7fff\r\n-;        on pentium Pro/II/III, faster (but less) in P4, but it seem\r\n-;        longest_match_7fff can be faster (very very litte) on AMD Athlon64/K8\r\n-;\r\n-; see below : zlib1222add must be adjuster if you use a zlib version < 1.2.2.2\r\n-\r\n-;uInt longest_match_7fff(s, cur_match)\r\n-;    deflate_state *s;\r\n-;    IPos cur_match;                             /* current match */\r\n-\r\n-    NbStack         equ     76\r\n-    cur_match       equ     dword ptr[esp+NbStack-0]\r\n-    str_s           equ     dword ptr[esp+NbStack-4]\r\n-; 5 dword on top (ret,ebp,esi,edi,ebx)\r\n-    adrret          equ     dword ptr[esp+NbStack-8]\r\n-    pushebp         equ     dword ptr[esp+NbStack-12]\r\n-    pushedi         equ     dword ptr[esp+NbStack-16]\r\n-    pushesi         equ     dword ptr[esp+NbStack-20]\r\n-    pushebx         equ     dword ptr[esp+NbStack-24]\r\n-\r\n-    chain_length    equ     dword ptr [esp+NbStack-28]\r\n-    limit           equ     dword ptr [esp+NbStack-32]\r\n-    best_len        equ     dword ptr [esp+NbStack-36]\r\n-    window          equ     dword ptr [esp+NbStack-40]\r\n-    prev            equ     dword ptr [esp+NbStack-44]\r\n-    scan_start      equ      word ptr [esp+NbStack-48]\r\n-    wmask           equ     dword ptr [esp+NbStack-52]\r\n-    match_start_ptr equ     dword ptr [esp+NbStack-56]\r\n-    nice_match      equ     dword ptr [esp+NbStack-60]\r\n-    scan            equ     dword ptr [esp+NbStack-64]\r\n-\r\n-    windowlen       equ     dword ptr [esp+NbStack-68]\r\n-    match_start     equ     dword ptr [esp+NbStack-72]\r\n-    strend          equ     dword ptr [esp+NbStack-76]\r\n-    NbStackAdd      equ     (NbStack-24)\r\n-\r\n-    .386p\r\n-\r\n-    name    gvmatch\r\n-    .MODEL  FLAT\r\n-\r\n-\r\n-\r\n-;  all the +zlib1222add offsets are due to the addition of fields\r\n-;  in zlib in the deflate_state structure since the asm code was first written\r\n-;  (if you compile with zlib 1.0.4 or older, use \"zlib1222add equ (-4)\").\r\n-;  (if you compile with zlib between 1.0.5 and 1.2.2.1, use \"zlib1222add equ 0\").\r\n-;  if you compile with zlib 1.2.2.2 or later , use \"zlib1222add equ 8\").\r\n-\r\n-    zlib1222add         equ     8\r\n-\r\n-;  Note : these value are good with a 8 bytes boundary pack structure\r\n-    dep_chain_length    equ     74h+zlib1222add\r\n-    dep_window          equ     30h+zlib1222add\r\n-    dep_strstart        equ     64h+zlib1222add\r\n-    dep_prev_length     equ     70h+zlib1222add\r\n-    dep_nice_match      equ     88h+zlib1222add\r\n-    dep_w_size          equ     24h+zlib1222add\r\n-    dep_prev            equ     38h+zlib1222add\r\n-    dep_w_mask          equ     2ch+zlib1222add\r\n-    dep_good_match      equ     84h+zlib1222add\r\n-    dep_match_start     equ     68h+zlib1222add\r\n-    dep_lookahead       equ     6ch+zlib1222add\r\n-\r\n-\r\n-_TEXT                   segment\r\n-\r\n-IFDEF NOUNDERLINE\r\n-   IFDEF NOOLDPENTIUMCODE\r\n-            public  longest_match\r\n-            public  match_init\r\n-   ELSE            \r\n-            public  longest_match_7fff\r\n-            public  cpudetect32\r\n-            public  longest_match_686\r\n-   ENDIF\r\n-ELSE\r\n-   IFDEF NOOLDPENTIUMCODE\r\n-            public  _longest_match\r\n-            public  _match_init\r\n-   ELSE\r\n-            public  _longest_match_7fff\r\n-            public  _cpudetect32\r\n-            public  _longest_match_686\r\n-   ENDIF\r\n-ENDIF\r\n-\r\n-    MAX_MATCH           equ     258\r\n-    MIN_MATCH           equ     3\r\n-    MIN_LOOKAHEAD       equ     (MAX_MATCH+MIN_MATCH+1)\r\n-\r\n-\r\n-\r\n-IFNDEF NOOLDPENTIUMCODE\r\n-IFDEF NOUNDERLINE\r\n-longest_match_7fff   proc near\r\n-ELSE\r\n-_longest_match_7fff  proc near\r\n-ENDIF\r\n-\r\n-    mov     edx,[esp+4]\r\n-\r\n-\r\n-\r\n-    push    ebp\r\n-    push    edi\r\n-    push    esi\r\n-    push    ebx\r\n-\r\n-    sub     esp,NbStackAdd\r\n-\r\n-; initialize or check the variables used in match.asm.\r\n-    mov     ebp,edx\r\n-\r\n-; chain_length = s->max_chain_length\r\n-; if (prev_length>=good_match) chain_length >>= 2\r\n-    mov     edx,[ebp+dep_chain_length]\r\n-    mov     ebx,[ebp+dep_prev_length]\r\n-    cmp     [ebp+dep_good_match],ebx\r\n-    ja      noshr\r\n-    shr     edx,2\r\n-noshr:\r\n-; we increment chain_length because in the asm, the --chain_lenght is in the beginning of the loop\r\n-    inc     edx\r\n-    mov     edi,[ebp+dep_nice_match]\r\n-    mov     chain_length,edx\r\n-    mov     eax,[ebp+dep_lookahead]\r\n-    cmp     eax,edi\r\n-; if ((uInt)nice_match > s->lookahead) nice_match = s->lookahead;\r\n-    jae     nolookaheadnicematch\r\n-    mov     edi,eax\r\n-nolookaheadnicematch:\r\n-; best_len = s->prev_length\r\n-    mov     best_len,ebx\r\n-\r\n-; window = s->window\r\n-    mov     esi,[ebp+dep_window]\r\n-    mov     ecx,[ebp+dep_strstart]\r\n-    mov     window,esi\r\n-\r\n-    mov     nice_match,edi\r\n-; scan = window + strstart\r\n-    add     esi,ecx\r\n-    mov     scan,esi\r\n-; dx = *window\r\n-    mov     dx,word ptr [esi]\r\n-; bx = *(window+best_len-1)\r\n-    mov     bx,word ptr [esi+ebx-1]\r\n-    add     esi,MAX_MATCH-1\r\n-; scan_start = *scan\r\n-    mov     scan_start,dx\r\n-; strend = scan + MAX_MATCH-1\r\n-    mov     strend,esi\r\n-; bx = scan_end = *(window+best_len-1)\r\n-\r\n-;    IPos limit = s->strstart > (IPos)MAX_DIST(s) ?\r\n-;        s->strstart - (IPos)MAX_DIST(s) : NIL;\r\n-\r\n-    mov     esi,[ebp+dep_w_size]\r\n-    sub     esi,MIN_LOOKAHEAD\r\n-; here esi = MAX_DIST(s)\r\n-    sub     ecx,esi\r\n-    ja      nodist\r\n-    xor     ecx,ecx\r\n-nodist:\r\n-    mov     limit,ecx\r\n-\r\n-; prev = s->prev\r\n-    mov     edx,[ebp+dep_prev]\r\n-    mov     prev,edx\r\n-\r\n-;\r\n-    mov     edx,dword ptr [ebp+dep_match_start]\r\n-    mov     bp,scan_start\r\n-    mov     eax,cur_match\r\n-    mov     match_start,edx\r\n-\r\n-    mov     edx,window\r\n-    mov     edi,edx\r\n-    add     edi,best_len\r\n-    mov     esi,prev\r\n-    dec     edi\r\n-; windowlen = window + best_len -1\r\n-    mov     windowlen,edi\r\n-\r\n-    jmp     beginloop2\r\n-    align   4\r\n-\r\n-; here, in the loop\r\n-;       eax = ax = cur_match\r\n-;       ecx = limit\r\n-;        bx = scan_end\r\n-;        bp = scan_start\r\n-;       edi = windowlen (window + best_len -1)\r\n-;       esi = prev\r\n-\r\n-\r\n-;// here; chain_length <=16\r\n-normalbeg0add16:\r\n-    add     chain_length,16\r\n-    jz      exitloop\r\n-normalbeg0:\r\n-    cmp     word ptr[edi+eax],bx\r\n-    je      normalbeg2noroll\r\n-rcontlabnoroll:\r\n-; cur_match = prev[cur_match & wmask]\r\n-    and     eax,7fffh\r\n-    mov     ax,word ptr[esi+eax*2]\r\n-; if cur_match > limit, go to exitloop\r\n-    cmp     ecx,eax\r\n-    jnb     exitloop\r\n-; if --chain_length != 0, go to exitloop\r\n-    dec     chain_length\r\n-    jnz     normalbeg0\r\n-    jmp     exitloop\r\n-\r\n-normalbeg2noroll:\r\n-; if (scan_start==*(cur_match+window)) goto normalbeg2\r\n-    cmp     bp,word ptr[edx+eax]\r\n-    jne     rcontlabnoroll\r\n-    jmp     normalbeg2\r\n-\r\n-contloop3:\r\n-    mov     edi,windowlen\r\n-\r\n-; cur_match = prev[cur_match & wmask]\r\n-    and     eax,7fffh\r\n-    mov     ax,word ptr[esi+eax*2]\r\n-; if cur_match > limit, go to exitloop\r\n-    cmp     ecx,eax\r\n-jnbexitloopshort1:\r\n-    jnb     exitloop\r\n-; if --chain_length != 0, go to exitloop\r\n-\r\n-\r\n-; begin the main loop\r\n-beginloop2:\r\n-    sub     chain_length,16+1\r\n-; if chain_length <=16, don't use the unrolled loop\r\n-    jna     normalbeg0add16\r\n-\r\n-do16:\r\n-    cmp     word ptr[edi+eax],bx\r\n-    je      normalbeg2dc0\r\n-\r\n-maccn   MACRO   lab\r\n-    and     eax,7fffh\r\n-    mov     ax,word ptr[esi+eax*2]\r\n-    cmp     ecx,eax\r\n-    jnb     exitloop\r\n-    cmp     word ptr[edi+eax],bx\r\n-    je      lab\r\n-    ENDM\r\n-\r\n-rcontloop0:\r\n-    maccn   normalbeg2dc1\r\n-\r\n-rcontloop1:\r\n-    maccn   normalbeg2dc2\r\n-\r\n-rcontloop2:\r\n-    maccn   normalbeg2dc3\r\n-\r\n-rcontloop3:\r\n-    maccn   normalbeg2dc4\r\n-\r\n-rcontloop4:\r\n-    maccn   normalbeg2dc5\r\n-\r\n-rcontloop5:\r\n-    maccn   normalbeg2dc6\r\n-\r\n-rcontloop6:\r\n-    maccn   normalbeg2dc7\r\n-\r\n-rcontloop7:\r\n-    maccn   normalbeg2dc8\r\n-\r\n-rcontloop8:\r\n-    maccn   normalbeg2dc9\r\n-\r\n-rcontloop9:\r\n-    maccn   normalbeg2dc10\r\n-\r\n-rcontloop10:\r\n-    maccn   short normalbeg2dc11\r\n-\r\n-rcontloop11:\r\n-    maccn   short normalbeg2dc12\r\n-\r\n-rcontloop12:\r\n-    maccn   short normalbeg2dc13\r\n-\r\n-rcontloop13:\r\n-    maccn   short normalbeg2dc14\r\n-\r\n-rcontloop14:\r\n-    maccn   short normalbeg2dc15\r\n-\r\n-rcontloop15:\r\n-    and     eax,7fffh\r\n-    mov     ax,word ptr[esi+eax*2]\r\n-    cmp     ecx,eax\r\n-    jnb     exitloop\r\n-\r\n-    sub     chain_length,16\r\n-    ja      do16\r\n-    jmp     normalbeg0add16\r\n-\r\n-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\r\n-\r\n-normbeg MACRO   rcontlab,valsub\r\n-; if we are here, we know that *(match+best_len-1) == scan_end\r\n-    cmp     bp,word ptr[edx+eax]\r\n-; if (match != scan_start) goto rcontlab\r\n-    jne     rcontlab\r\n-; calculate the good chain_length, and we'll compare scan and match string\r\n-    add     chain_length,16-valsub\r\n-    jmp     iseq\r\n-    ENDM\r\n-\r\n-\r\n-normalbeg2dc11:\r\n-    normbeg rcontloop11,11\r\n-\r\n-normalbeg2dc12:\r\n-    normbeg short rcontloop12,12\r\n-\r\n-normalbeg2dc13:\r\n-    normbeg short rcontloop13,13\r\n-\r\n-normalbeg2dc14:\r\n-    normbeg short rcontloop14,14\r\n-\r\n-normalbeg2dc15:\r\n-    normbeg short rcontloop15,15\r\n-\r\n-normalbeg2dc10:\r\n-    normbeg rcontloop10,10\r\n-\r\n-normalbeg2dc9:\r\n-    normbeg rcontloop9,9\r\n-\r\n-normalbeg2dc8:\r\n-    normbeg rcontloop8,8\r\n-\r\n-normalbeg2dc7:\r\n-    normbeg rcontloop7,7\r\n-\r\n-normalbeg2dc6:\r\n-    normbeg rcontloop6,6\r\n-\r\n-normalbeg2dc5:\r\n-    normbeg rcontloop5,5\r\n-\r\n-normalbeg2dc4:\r\n-    normbeg rcontloop4,4\r\n-\r\n-normalbeg2dc3:\r\n-    normbeg rcontloop3,3\r\n-\r\n-normalbeg2dc2:\r\n-    normbeg rcontloop2,2\r\n-\r\n-normalbeg2dc1:\r\n-    normbeg rcontloop1,1\r\n-\r\n-normalbeg2dc0:\r\n-    normbeg rcontloop0,0\r\n-\r\n-\r\n-; we go in normalbeg2 because *(ushf*)(match+best_len-1) == scan_end\r\n-\r\n-normalbeg2:\r\n-    mov     edi,window\r\n-\r\n-    cmp     bp,word ptr[edi+eax]\r\n-    jne     contloop3                   ; if *(ushf*)match != scan_start, continue\r\n-\r\n-iseq:\r\n-; if we are here, we know that *(match+best_len-1) == scan_end\r\n-; and (match == scan_start)\r\n-\r\n-    mov     edi,edx\r\n-    mov     esi,scan                    ; esi = scan\r\n-    add     edi,eax                     ; edi = window + cur_match = match\r\n-\r\n-    mov     edx,[esi+3]                 ; compare manually dword at match+3\r\n-    xor     edx,[edi+3]                 ; and scan +3\r\n-\r\n-    jz      begincompare                ; if equal, go to long compare\r\n-\r\n-; we will determine the unmatch byte and calculate len (in esi)\r\n-    or      dl,dl\r\n-    je      eq1rr\r\n-    mov     esi,3\r\n-    jmp     trfinval\r\n-eq1rr:\r\n-    or      dx,dx\r\n-    je      eq1\r\n-\r\n-    mov     esi,4\r\n-    jmp     trfinval\r\n-eq1:\r\n-    and     edx,0ffffffh\r\n-    jz      eq11\r\n-    mov     esi,5\r\n-    jmp     trfinval\r\n-eq11:\r\n-    mov     esi,6\r\n-    jmp     trfinval\r\n-\r\n-begincompare:\r\n-    ; here we now scan and match begin same\r\n-    add     edi,6\r\n-    add     esi,6\r\n-    mov     ecx,(MAX_MATCH-(2+4))/4     ; scan for at most MAX_MATCH bytes\r\n-    repe    cmpsd                       ; loop until mismatch\r\n-\r\n-    je      trfin                       ; go to trfin if not unmatch\r\n-; we determine the unmatch byte\r\n-    sub     esi,4\r\n-    mov     edx,[edi-4]\r\n-    xor     edx,[esi]\r\n-\r\n-    or      dl,dl\r\n-    jnz     trfin\r\n-    inc     esi\r\n-\r\n-    or      dx,dx\r\n-    jnz     trfin\r\n-    inc     esi\r\n-\r\n-    and     edx,0ffffffh\r\n-    jnz     trfin\r\n-    inc     esi\r\n-\r\n-trfin:\r\n-    sub     esi,scan          ; esi = len\r\n-trfinval:\r\n-; here we have finised compare, and esi contain len of equal string\r\n-    cmp     esi,best_len        ; if len > best_len, go newbestlen\r\n-    ja      short newbestlen\r\n-; now we restore edx, ecx and esi, for the big loop\r\n-    mov     esi,prev\r\n-    mov     ecx,limit\r\n-    mov     edx,window\r\n-    jmp     contloop3\r\n-\r\n-newbestlen:\r\n-    mov     best_len,esi        ; len become best_len\r\n-\r\n-    mov     match_start,eax     ; save new position as match_start\r\n-    cmp     esi,nice_match      ; if best_len >= nice_match, exit\r\n-    jae     exitloop\r\n-    mov     ecx,scan\r\n-    mov     edx,window          ; restore edx=window\r\n-    add     ecx,esi\r\n-    add     esi,edx\r\n-\r\n-    dec     esi\r\n-    mov     windowlen,esi       ; windowlen = window + best_len-1\r\n-    mov     bx,[ecx-1]          ; bx = *(scan+best_len-1) = scan_end\r\n-\r\n-; now we restore ecx and esi, for the big loop :\r\n-    mov     esi,prev\r\n-    mov     ecx,limit\r\n-    jmp     contloop3\r\n-\r\n-exitloop:\r\n-; exit : s->match_start=match_start\r\n-    mov     ebx,match_start\r\n-    mov     ebp,str_s\r\n-    mov     ecx,best_len\r\n-    mov     dword ptr [ebp+dep_match_start],ebx\r\n-    mov     eax,dword ptr [ebp+dep_lookahead]\r\n-    cmp     ecx,eax\r\n-    ja      minexlo\r\n-    mov     eax,ecx\r\n-minexlo:\r\n-; return min(best_len,s->lookahead)\r\n-\r\n-; restore stack and register ebx,esi,edi,ebp\r\n-    add     esp,NbStackAdd\r\n-\r\n-    pop     ebx\r\n-    pop     esi\r\n-    pop     edi\r\n-    pop     ebp\r\n-    ret\r\n-InfoAuthor:\r\n-; please don't remove this string !\r\n-; Your are free use gvmat32 in any fre or commercial apps if you don't remove the string in the binary!\r\n-    db     0dh,0ah,\"GVMat32 optimised assembly code written 1996-98 by Gilles Vollant\",0dh,0ah\r\n-\r\n-\r\n-\r\n-IFDEF NOUNDERLINE\r\n-longest_match_7fff   endp\r\n-ELSE\r\n-_longest_match_7fff  endp\r\n-ENDIF\r\n-\r\n-\r\n-IFDEF NOUNDERLINE\r\n-cpudetect32     proc near\r\n-ELSE\r\n-_cpudetect32    proc near\r\n-ENDIF\r\n-\r\n-    push    ebx\r\n-\r\n-    pushfd                  ; push original EFLAGS\r\n-    pop     eax             ; get original EFLAGS\r\n-    mov     ecx, eax        ; save original EFLAGS\r\n-    xor     eax, 40000h     ; flip AC bit in EFLAGS\r\n-    push    eax             ; save new EFLAGS value on stack\r\n-    popfd                   ; replace current EFLAGS value\r\n-    pushfd                  ; get new EFLAGS\r\n-    pop     eax             ; store new EFLAGS in EAX\r\n-    xor     eax, ecx        ; can\ufffdt toggle AC bit, processor=80386\r\n-    jz      end_cpu_is_386  ; jump if 80386 processor\r\n-    push    ecx\r\n-    popfd                   ; restore AC bit in EFLAGS first\r\n-\r\n-    pushfd\r\n-    pushfd\r\n-    pop     ecx\r\n-\r\n-    mov     eax, ecx        ; get original EFLAGS\r\n-    xor     eax, 200000h    ; flip ID bit in EFLAGS\r\n-    push    eax             ; save new EFLAGS value on stack\r\n-    popfd                   ; replace current EFLAGS value\r\n-    pushfd                  ; get new EFLAGS\r\n-    pop     eax             ; store new EFLAGS in EAX\r\n-    popfd                   ; restore original EFLAGS\r\n-    xor     eax, ecx        ; can\ufffdt toggle ID bit,\r\n-    je      is_old_486      ; processor=old\r\n-\r\n-    mov     eax,1\r\n-    db      0fh,0a2h        ;CPUID\r\n-\r\n-exitcpudetect:\r\n-    pop ebx\r\n-    ret\r\n-\r\n-end_cpu_is_386:\r\n-    mov     eax,0300h\r\n-    jmp     exitcpudetect\r\n-\r\n-is_old_486:\r\n-    mov     eax,0400h\r\n-    jmp     exitcpudetect\r\n-\r\n-IFDEF NOUNDERLINE\r\n-cpudetect32     endp\r\n-ELSE\r\n-_cpudetect32    endp\r\n-ENDIF\r\n-ENDIF\r\n-\r\n-MAX_MATCH       equ     258\r\n-MIN_MATCH       equ     3\r\n-MIN_LOOKAHEAD   equ     (MAX_MATCH + MIN_MATCH + 1)\r\n-MAX_MATCH_8_     equ     ((MAX_MATCH + 7) AND 0FFF0h)\r\n-\r\n-\r\n-;;; stack frame offsets\r\n-\r\n-chainlenwmask   equ  esp + 0    ; high word: current chain len\r\n-                    ; low word: s->wmask\r\n-window      equ  esp + 4    ; local copy of s->window\r\n-windowbestlen   equ  esp + 8    ; s->window + bestlen\r\n-scanstart   equ  esp + 16   ; first two bytes of string\r\n-scanend     equ  esp + 12   ; last two bytes of string\r\n-scanalign   equ  esp + 20   ; dword-misalignment of string\r\n-nicematch   equ  esp + 24   ; a good enough match size\r\n-bestlen     equ  esp + 28   ; size of best match so far\r\n-scan        equ  esp + 32   ; ptr to string wanting match\r\n-\r\n-LocalVarsSize   equ 36\r\n-;   saved ebx   byte esp + 36\r\n-;   saved edi   byte esp + 40\r\n-;   saved esi   byte esp + 44\r\n-;   saved ebp   byte esp + 48\r\n-;   return address  byte esp + 52\r\n-deflatestate    equ  esp + 56   ; the function arguments\r\n-curmatch    equ  esp + 60\r\n-\r\n-;;; Offsets for fields in the deflate_state structure. These numbers\r\n-;;; are calculated from the definition of deflate_state, with the\r\n-;;; assumption that the compiler will dword-align the fields. (Thus,\r\n-;;; changing the definition of deflate_state could easily cause this\r\n-;;; program to crash horribly, without so much as a warning at\r\n-;;; compile time. Sigh.)\r\n-\r\n-dsWSize     equ 36+zlib1222add\r\n-dsWMask     equ 44+zlib1222add\r\n-dsWindow    equ 48+zlib1222add\r\n-dsPrev      equ 56+zlib1222add\r\n-dsMatchLen  equ 88+zlib1222add\r\n-dsPrevMatch equ 92+zlib1222add\r\n-dsStrStart  equ 100+zlib1222add\r\n-dsMatchStart    equ 104+zlib1222add\r\n-dsLookahead equ 108+zlib1222add\r\n-dsPrevLen   equ 112+zlib1222add\r\n-dsMaxChainLen   equ 116+zlib1222add\r\n-dsGoodMatch equ 132+zlib1222add\r\n-dsNiceMatch equ 136+zlib1222add\r\n-\r\n-\r\n-;;; match.asm -- Pentium-Pro-optimized version of longest_match()\r\n-;;; Written for zlib 1.1.2\r\n-;;; Copyright (C) 1998 Brian Raiter <breadbox@muppetlabs.com>\r\n-;;; You can look at http://www.muppetlabs.com/~breadbox/software/assembly.html\r\n-;;;\r\n-;;; This is free software; you can redistribute it and/or modify it\r\n-;;; under the terms of the GNU General Public License.\r\n-\r\n-;GLOBAL _longest_match, _match_init\r\n-\r\n-\r\n-;SECTION    .text\r\n-\r\n-;;; uInt longest_match(deflate_state *deflatestate, IPos curmatch)\r\n-\r\n-;_longest_match:\r\n-IFDEF NOOLDPENTIUMCODE\r\n-    IFDEF NOUNDERLINE\r\n-    longest_match       proc near\r\n-    ELSE\r\n-    _longest_match      proc near\r\n-    ENDIF\r\n-ELSE\r\n-    IFDEF NOUNDERLINE\r\n-    longest_match_686   proc near\r\n-    ELSE\r\n-    _longest_match_686  proc near\r\n-    ENDIF\r\n-ENDIF\r\n-\r\n-;;; Save registers that the compiler may be using, and adjust esp to\r\n-;;; make room for our stack frame.\r\n-\r\n-        push    ebp\r\n-        push    edi\r\n-        push    esi\r\n-        push    ebx\r\n-        sub esp, LocalVarsSize\r\n-\r\n-;;; Retrieve the function arguments. ecx will hold cur_match\r\n-;;; throughout the entire function. edx will hold the pointer to the\r\n-;;; deflate_state structure during the function's setup (before\r\n-;;; entering the main loop.\r\n-\r\n-        mov edx, [deflatestate]\r\n-        mov ecx, [curmatch]\r\n-\r\n-;;; uInt wmask = s->w_mask;\r\n-;;; unsigned chain_length = s->max_chain_length;\r\n-;;; if (s->prev_length >= s->good_match) {\r\n-;;;     chain_length >>= 2;\r\n-;;; }\r\n-\r\n-        mov eax, [edx + dsPrevLen]\r\n-        mov ebx, [edx + dsGoodMatch]\r\n-        cmp eax, ebx\r\n-        mov eax, [edx + dsWMask]\r\n-        mov ebx, [edx + dsMaxChainLen]\r\n-        jl  LastMatchGood\r\n-        shr ebx, 2\r\n-LastMatchGood:\r\n-\r\n-;;; chainlen is decremented once beforehand so that the function can\r\n-;;; use the sign flag instead of the zero flag for the exit test.\r\n-;;; It is then shifted into the high word, to make room for the wmask\r\n-;;; value, which it will always accompany.\r\n-\r\n-        dec ebx\r\n-        shl ebx, 16\r\n-        or  ebx, eax\r\n-        mov [chainlenwmask], ebx\r\n-\r\n-;;; if ((uInt)nice_match > s->lookahead) nice_match = s->lookahead;\r\n-\r\n-        mov eax, [edx + dsNiceMatch]\r\n-        mov ebx, [edx + dsLookahead]\r\n-        cmp ebx, eax\r\n-        jl  LookaheadLess\r\n-        mov ebx, eax\r\n-LookaheadLess:  mov [nicematch], ebx\r\n-\r\n-;;; register Bytef *scan = s->window + s->strstart;\r\n-\r\n-        mov esi, [edx + dsWindow]\r\n-        mov [window], esi\r\n-        mov ebp, [edx + dsStrStart]\r\n-        lea edi, [esi + ebp]\r\n-        mov [scan], edi\r\n-\r\n-;;; Determine how many bytes the scan ptr is off from being\r\n-;;; dword-aligned.\r\n-\r\n-        mov eax, edi\r\n-        neg eax\r\n-        and eax, 3\r\n-        mov [scanalign], eax\r\n-\r\n-;;; IPos limit = s->strstart > (IPos)MAX_DIST(s) ?\r\n-;;;     s->strstart - (IPos)MAX_DIST(s) : NIL;\r\n-\r\n-        mov eax, [edx + dsWSize]\r\n-        sub eax, MIN_LOOKAHEAD\r\n-        sub ebp, eax\r\n-        jg  LimitPositive\r\n-        xor ebp, ebp\r\n-LimitPositive:\r\n-\r\n-;;; int best_len = s->prev_length;\r\n-\r\n-        mov eax, [edx + dsPrevLen]\r\n-        mov [bestlen], eax\r\n-\r\n-;;; Store the sum of s->window + best_len in esi locally, and in esi.\r\n-\r\n-        add esi, eax\r\n-        mov [windowbestlen], esi\r\n-\r\n-;;; register ush scan_start = *(ushf*)scan;\r\n-;;; register ush scan_end   = *(ushf*)(scan+best_len-1);\r\n-;;; Posf *prev = s->prev;\r\n-\r\n-        movzx   ebx, word ptr [edi]\r\n-        mov [scanstart], ebx\r\n-        movzx   ebx, word ptr [edi + eax - 1]\r\n-        mov [scanend], ebx\r\n-        mov edi, [edx + dsPrev]\r\n-\r\n-;;; Jump into the main loop.\r\n-\r\n-        mov edx, [chainlenwmask]\r\n-        jmp short LoopEntry\r\n-\r\n-align 4\r\n-\r\n-;;; do {\r\n-;;;     match = s->window + cur_match;\r\n-;;;     if (*(ushf*)(match+best_len-1) != scan_end ||\r\n-;;;         *(ushf*)match != scan_start) continue;\r\n-;;;     [...]\r\n-;;; } while ((cur_match = prev[cur_match & wmask]) > limit\r\n-;;;          && --chain_length != 0);\r\n-;;;\r\n-;;; Here is the inner loop of the function. The function will spend the\r\n-;;; majority of its time in this loop, and majority of that time will\r\n-;;; be spent in the first ten instructions.\r\n-;;;\r\n-;;; Within this loop:\r\n-;;; ebx = scanend\r\n-;;; ecx = curmatch\r\n-;;; edx = chainlenwmask - i.e., ((chainlen << 16) | wmask)\r\n-;;; esi = windowbestlen - i.e., (window + bestlen)\r\n-;;; edi = prev\r\n-;;; ebp = limit\r\n-\r\n-LookupLoop:\r\n-        and ecx, edx\r\n-        movzx   ecx, word ptr [edi + ecx*2]\r\n-        cmp ecx, ebp\r\n-        jbe LeaveNow\r\n-        sub edx, 00010000h\r\n-        js  LeaveNow\r\n-LoopEntry:  movzx   eax, word ptr [esi + ecx - 1]\r\n-        cmp eax, ebx\r\n-        jnz LookupLoop\r\n-        mov eax, [window]\r\n-        movzx   eax, word ptr [eax + ecx]\r\n-        cmp eax, [scanstart]\r\n-        jnz LookupLoop\r\n-\r\n-;;; Store the current value of chainlen.\r\n-\r\n-        mov [chainlenwmask], edx\r\n-\r\n-;;; Point edi to the string under scrutiny, and esi to the string we\r\n-;;; are hoping to match it up with. In actuality, esi and edi are\r\n-;;; both pointed (MAX_MATCH_8 - scanalign) bytes ahead, and edx is\r\n-;;; initialized to -(MAX_MATCH_8 - scanalign).\r\n-\r\n-        mov esi, [window]\r\n-        mov edi, [scan]\r\n-        add esi, ecx\r\n-        mov eax, [scanalign]\r\n-        mov edx, 0fffffef8h; -(MAX_MATCH_8)\r\n-        lea edi, [edi + eax + 0108h] ;MAX_MATCH_8]\r\n-        lea esi, [esi + eax + 0108h] ;MAX_MATCH_8]\r\n-\r\n-;;; Test the strings for equality, 8 bytes at a time. At the end,\r\n-;;; adjust edx so that it is offset to the exact byte that mismatched.\r\n-;;;\r\n-;;; We already know at this point that the first three bytes of the\r\n-;;; strings match each other, and they can be safely passed over before\r\n-;;; starting the compare loop. So what this code does is skip over 0-3\r\n-;;; bytes, as much as necessary in order to dword-align the edi\r\n-;;; pointer. (esi will still be misaligned three times out of four.)\r\n-;;;\r\n-;;; It should be confessed that this loop usually does not represent\r\n-;;; much of the total running time. Replacing it with a more\r\n-;;; straightforward \"rep cmpsb\" would not drastically degrade\r\n-;;; performance.\r\n-\r\n-LoopCmps:\r\n-        mov eax, [esi + edx]\r\n-        xor eax, [edi + edx]\r\n-        jnz LeaveLoopCmps\r\n-        mov eax, [esi + edx + 4]\r\n-        xor eax, [edi + edx + 4]\r\n-        jnz LeaveLoopCmps4\r\n-        add edx, 8\r\n-        jnz LoopCmps\r\n-        jmp short LenMaximum\r\n-LeaveLoopCmps4: add edx, 4\r\n-LeaveLoopCmps:  test    eax, 0000FFFFh\r\n-        jnz LenLower\r\n-        add edx,  2\r\n-        shr eax, 16\r\n-LenLower:   sub al, 1\r\n-        adc edx, 0\r\n-\r\n-;;; Calculate the length of the match. If it is longer than MAX_MATCH,\r\n-;;; then automatically accept it as the best possible match and leave.\r\n-\r\n-        lea eax, [edi + edx]\r\n-        mov edi, [scan]\r\n-        sub eax, edi\r\n-        cmp eax, MAX_MATCH\r\n-        jge LenMaximum\r\n-\r\n-;;; If the length of the match is not longer than the best match we\r\n-;;; have so far, then forget it and return to the lookup loop.\r\n-\r\n-        mov edx, [deflatestate]\r\n-        mov ebx, [bestlen]\r\n-        cmp eax, ebx\r\n-        jg  LongerMatch\r\n-        mov esi, [windowbestlen]\r\n-        mov edi, [edx + dsPrev]\r\n-        mov ebx, [scanend]\r\n-        mov edx, [chainlenwmask]\r\n-        jmp LookupLoop\r\n-\r\n-;;;         s->match_start = cur_match;\r\n-;;;         best_len = len;\r\n-;;;         if (len >= nice_match) break;\r\n-;;;         scan_end = *(ushf*)(scan+best_len-1);\r\n-\r\n-LongerMatch:    mov ebx, [nicematch]\r\n-        mov [bestlen], eax\r\n-        mov [edx + dsMatchStart], ecx\r\n-        cmp eax, ebx\r\n-        jge LeaveNow\r\n-        mov esi, [window]\r\n-        add esi, eax\r\n-        mov [windowbestlen], esi\r\n-        movzx   ebx, word ptr [edi + eax - 1]\r\n-        mov edi, [edx + dsPrev]\r\n-        mov [scanend], ebx\r\n-        mov edx, [chainlenwmask]\r\n-        jmp LookupLoop\r\n-\r\n-;;; Accept the current string, with the maximum possible length.\r\n-\r\n-LenMaximum: mov edx, [deflatestate]\r\n-        mov dword ptr [bestlen], MAX_MATCH\r\n-        mov [edx + dsMatchStart], ecx\r\n-\r\n-;;; if ((uInt)best_len <= s->lookahead) return (uInt)best_len;\r\n-;;; return s->lookahead;\r\n-\r\n-LeaveNow:\r\n-        mov edx, [deflatestate]\r\n-        mov ebx, [bestlen]\r\n-        mov eax, [edx + dsLookahead]\r\n-        cmp ebx, eax\r\n-        jg  LookaheadRet\r\n-        mov eax, ebx\r\n-LookaheadRet:\r\n-\r\n-;;; Restore the stack and return from whence we came.\r\n-\r\n-        add esp, LocalVarsSize\r\n-        pop ebx\r\n-        pop esi\r\n-        pop edi\r\n-        pop ebp\r\n-\r\n-        ret\r\n-; please don't remove this string !\r\n-; Your can freely use gvmat32 in any free or commercial app if you don't remove the string in the binary!\r\n-    db     0dh,0ah,\"asm686 with masm, optimised assembly code from Brian Raiter, written 1998\",0dh,0ah\r\n-\r\n-\r\n-IFDEF NOOLDPENTIUMCODE\r\n-    IFDEF NOUNDERLINE\r\n-    longest_match       endp\r\n-    ELSE\r\n-    _longest_match      endp\r\n-    ENDIF\r\n-\r\n-    IFDEF NOUNDERLINE\r\n-    match_init      proc near\r\n-                    ret\r\n-    match_init      endp\r\n-    ELSE\r\n-    _match_init     proc near\r\n-                    ret\r\n-    _match_init     endp\r\n-    ENDIF    \r\n-ELSE\r\n-    IFDEF NOUNDERLINE\r\n-    longest_match_686   endp\r\n-    ELSE\r\n-    _longest_match_686  endp\r\n-    ENDIF\r\n-ENDIF\r\n-\r\n-_TEXT   ends\r\n-end\r"}, {"sha": "7ad2b27943bc0bbbdbd06df733548c47e157dc85", "filename": "zlib/contrib/masmx86/gvmat32c.c", "status": "removed", "additions": 0, "deletions": 62, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d216c70d980e3169b42e9734cf4bea1648ff8f0/zlib%2Fcontrib%2Fmasmx86%2Fgvmat32c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d216c70d980e3169b42e9734cf4bea1648ff8f0/zlib%2Fcontrib%2Fmasmx86%2Fgvmat32c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fmasmx86%2Fgvmat32c.c?ref=5d216c70d980e3169b42e9734cf4bea1648ff8f0", "patch": "@@ -1,62 +0,0 @@\n-/* gvmat32.c -- C portion of the optimized longest_match for 32 bits x86\r\n- * Copyright (C) 1995-1996 Jean-loup Gailly and Gilles Vollant.\r\n- * File written by Gilles Vollant, by modifiying the longest_match\r\n- *  from Jean-loup Gailly in deflate.c\r\n- *  it prepare all parameters and call the assembly longest_match_gvasm\r\n- *  longest_match execute standard C code is wmask != 0x7fff\r\n- *     (assembly code is faster with a fixed wmask)\r\n- *\r\n- * Read comment at beginning of gvmat32.asm for more information\r\n- */\r\n-\r\n-#if defined(ASMV) && (!defined(NOOLDPENTIUMCODE))\r\n-#include \"deflate.h\"\r\n-\r\n-/* if your C compiler don't add underline before function name,\r\n-        define ADD_UNDERLINE_ASMFUNC */\r\n-#ifdef ADD_UNDERLINE_ASMFUNC\r\n-#define longest_match_7fff _longest_match_7fff\r\n-#define longest_match_686  _longest_match_686\r\n-#define cpudetect32        _cpudetect32\r\n-#endif\r\n-\r\n-\r\n-unsigned long cpudetect32();\r\n-\r\n-uInt longest_match_c(\r\n-    deflate_state *s,\r\n-    IPos cur_match);                             /* current match */\r\n-\r\n-\r\n-uInt longest_match_7fff(\r\n-    deflate_state *s,\r\n-    IPos cur_match);                             /* current match */\r\n-\r\n-uInt longest_match_686(\r\n-    deflate_state *s,\r\n-    IPos cur_match);                             /* current match */\r\n-\r\n-\r\n-static uInt iIsPPro=2;\r\n-\r\n-void match_init ()\r\n-{\r\n-    iIsPPro = (((cpudetect32()/0x100)&0xf)>=6) ? 1 : 0;\r\n-}\r\n-\r\n-uInt longest_match(\r\n-    deflate_state *s,\r\n-    IPos cur_match)                             /* current match */\r\n-{\r\n-    if (iIsPPro!=0)\r\n-        return longest_match_686(s,cur_match);\r\n-\r\n-    if (s->w_mask != 0x7fff)\r\n-        return longest_match_686(s,cur_match);\r\n-\r\n-    /* now ((s->w_mask == 0x7fff) && (iIsPPro==0)) */\r\n-        return longest_match_7fff(s,cur_match);\r\n-}\r\n-\r\n-\r\n-#endif /* defined(ASMV) && (!defined(NOOLDPENTIUMCODE)) */\r"}, {"sha": "92ac22ad9d904b5328adf6f00d9da9a2ff4bdf7f", "filename": "zlib/contrib/masmx86/inffas32.asm", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fmasmx86%2Finffas32.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fmasmx86%2Finffas32.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fmasmx86%2Finffas32.asm?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -16,7 +16,7 @@\n ; * enabled.  I will attempt to merge the MMX code into this version.  Newer\r\n ; * versions of this and inffast.S can be found at\r\n ; * http://www.eetbeetee.com/zlib/ and http://www.charm.net/~christop/zlib/\r\n-; * \r\n+; *\r\n ; * 2005 : modification by Gilles Vollant\r\n ; */\r\n ; For Visual C++ 4.x and higher and ML 6.x and higher\r\n@@ -33,7 +33,7 @@\n \r\n \r\n ; zlib122sup is 0 fort zlib 1.2.2.1 and lower\r\n-; zlib122sup is 8 fort zlib 1.2.2.2 and more (with addition of dmax and head \r\n+; zlib122sup is 8 fort zlib 1.2.2.2 and more (with addition of dmax and head\r\n ;        in inflate_state in inflate.h)\r\n zlib1222sup      equ    8\r\n \r\n@@ -644,9 +644,9 @@ L_init_mmx:\n \tmovd mm0,ebp\r\n \tmov  ebp,ebx\r\n ; 896 \"inffast.S\"\r\n-\tmovd mm4,[esp+0]\r\n+\tmovd mm4,dword ptr [esp+0]\r\n \tmovq mm3,mm4\r\n-\tmovd mm5,[esp+4]\r\n+\tmovd mm5,dword ptr [esp+4]\r\n \tmovq mm2,mm5\r\n \tpxor mm1,mm1\r\n \tmov  ebx, [esp+8]\r\n@@ -660,7 +660,7 @@ L_do_loop_mmx:\n \tja  L_get_length_code_mmx\r\n \r\n \tmovd mm6,ebp\r\n-\tmovd mm7,[esi]\r\n+\tmovd mm7,dword ptr [esi]\r\n \tadd  esi,4\r\n \tpsllq mm7,mm6\r\n \tadd  ebp,32\r\n@@ -717,7 +717,7 @@ L_decode_distance_mmx:\n \tja L_get_dist_code_mmx\r\n \r\n \tmovd mm6,ebp\r\n-\tmovd mm7,[esi]\r\n+\tmovd mm7,dword ptr [esi]\r\n \tadd  esi,4\r\n \tpsllq mm7,mm6\r\n \tadd  ebp,32\r"}, {"sha": "1eaf555026f8ead0c1d1d3fbb4a44f48e96cbc2b", "filename": "zlib/contrib/masmx86/match686.asm", "status": "added", "additions": 478, "deletions": 0, "changes": 478, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fmasmx86%2Fmatch686.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fmasmx86%2Fmatch686.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fmasmx86%2Fmatch686.asm?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -0,0 +1,478 @@\n+; match686.asm -- Asm portion of the optimized longest_match for 32 bits x86\r\n+; Copyright (C) 1995-1996 Jean-loup Gailly, Brian Raiter and Gilles Vollant.\r\n+; File written by Gilles Vollant, by converting match686.S from Brian Raiter\r\n+; for MASM. This is as assembly version of longest_match\r\n+;  from Jean-loup Gailly in deflate.c\r\n+;\r\n+;         http://www.zlib.net\r\n+;         http://www.winimage.com/zLibDll\r\n+;         http://www.muppetlabs.com/~breadbox/software/assembly.html\r\n+;\r\n+; For Visual C++ 4.x and higher and ML 6.x and higher\r\n+;   ml.exe is distributed in\r\n+;  http://www.microsoft.com/downloads/details.aspx?FamilyID=7a1c9da0-0510-44a2-b042-7ef370530c64\r\n+;\r\n+; this file contain two implementation of longest_match\r\n+;\r\n+;  this longest_match was written by Brian raiter (1998), optimized for Pentium Pro\r\n+;   (and the faster known version of match_init on modern Core 2 Duo and AMD Phenom)\r\n+;\r\n+;  for using an assembly version of longest_match, you need define ASMV in project\r\n+;\r\n+;    compile the asm file running\r\n+;           ml /coff /Zi /c /Flmatch686.lst match686.asm\r\n+;    and do not include match686.obj in your project\r\n+;\r\n+; note: contrib of zLib 1.2.3 and earlier contained both a deprecated version for\r\n+;  Pentium (prior Pentium Pro) and this version for Pentium Pro and modern processor\r\n+;  with autoselect (with cpu detection code)\r\n+;  if you want support the old pentium optimization, you can still use these version\r\n+;\r\n+; this file is not optimized for old pentium, but it compatible with all x86 32 bits\r\n+; processor (starting 80386)\r\n+;\r\n+;\r\n+; see below : zlib1222add must be adjuster if you use a zlib version < 1.2.2.2\r\n+\r\n+;uInt longest_match(s, cur_match)\r\n+;    deflate_state *s;\r\n+;    IPos cur_match;                             /* current match */\r\n+\r\n+    NbStack         equ     76\r\n+    cur_match       equ     dword ptr[esp+NbStack-0]\r\n+    str_s           equ     dword ptr[esp+NbStack-4]\r\n+; 5 dword on top (ret,ebp,esi,edi,ebx)\r\n+    adrret          equ     dword ptr[esp+NbStack-8]\r\n+    pushebp         equ     dword ptr[esp+NbStack-12]\r\n+    pushedi         equ     dword ptr[esp+NbStack-16]\r\n+    pushesi         equ     dword ptr[esp+NbStack-20]\r\n+    pushebx         equ     dword ptr[esp+NbStack-24]\r\n+\r\n+    chain_length    equ     dword ptr [esp+NbStack-28]\r\n+    limit           equ     dword ptr [esp+NbStack-32]\r\n+    best_len        equ     dword ptr [esp+NbStack-36]\r\n+    window          equ     dword ptr [esp+NbStack-40]\r\n+    prev            equ     dword ptr [esp+NbStack-44]\r\n+    scan_start      equ      word ptr [esp+NbStack-48]\r\n+    wmask           equ     dword ptr [esp+NbStack-52]\r\n+    match_start_ptr equ     dword ptr [esp+NbStack-56]\r\n+    nice_match      equ     dword ptr [esp+NbStack-60]\r\n+    scan            equ     dword ptr [esp+NbStack-64]\r\n+\r\n+    windowlen       equ     dword ptr [esp+NbStack-68]\r\n+    match_start     equ     dword ptr [esp+NbStack-72]\r\n+    strend          equ     dword ptr [esp+NbStack-76]\r\n+    NbStackAdd      equ     (NbStack-24)\r\n+\r\n+    .386p\r\n+\r\n+    name    gvmatch\r\n+    .MODEL  FLAT\r\n+\r\n+\r\n+\r\n+;  all the +zlib1222add offsets are due to the addition of fields\r\n+;  in zlib in the deflate_state structure since the asm code was first written\r\n+;  (if you compile with zlib 1.0.4 or older, use \"zlib1222add equ (-4)\").\r\n+;  (if you compile with zlib between 1.0.5 and 1.2.2.1, use \"zlib1222add equ 0\").\r\n+;  if you compile with zlib 1.2.2.2 or later , use \"zlib1222add equ 8\").\r\n+\r\n+    zlib1222add         equ     8\r\n+\r\n+;  Note : these value are good with a 8 bytes boundary pack structure\r\n+    dep_chain_length    equ     74h+zlib1222add\r\n+    dep_window          equ     30h+zlib1222add\r\n+    dep_strstart        equ     64h+zlib1222add\r\n+    dep_prev_length     equ     70h+zlib1222add\r\n+    dep_nice_match      equ     88h+zlib1222add\r\n+    dep_w_size          equ     24h+zlib1222add\r\n+    dep_prev            equ     38h+zlib1222add\r\n+    dep_w_mask          equ     2ch+zlib1222add\r\n+    dep_good_match      equ     84h+zlib1222add\r\n+    dep_match_start     equ     68h+zlib1222add\r\n+    dep_lookahead       equ     6ch+zlib1222add\r\n+\r\n+\r\n+_TEXT                   segment\r\n+\r\n+IFDEF NOUNDERLINE\r\n+            public  longest_match\r\n+            public  match_init\r\n+ELSE\r\n+            public  _longest_match\r\n+            public  _match_init\r\n+ENDIF\r\n+\r\n+    MAX_MATCH           equ     258\r\n+    MIN_MATCH           equ     3\r\n+    MIN_LOOKAHEAD       equ     (MAX_MATCH+MIN_MATCH+1)\r\n+\r\n+\r\n+\r\n+MAX_MATCH       equ     258\r\n+MIN_MATCH       equ     3\r\n+MIN_LOOKAHEAD   equ     (MAX_MATCH + MIN_MATCH + 1)\r\n+MAX_MATCH_8_     equ     ((MAX_MATCH + 7) AND 0FFF0h)\r\n+\r\n+\r\n+;;; stack frame offsets\r\n+\r\n+chainlenwmask   equ  esp + 0    ; high word: current chain len\r\n+                    ; low word: s->wmask\r\n+window      equ  esp + 4    ; local copy of s->window\r\n+windowbestlen   equ  esp + 8    ; s->window + bestlen\r\n+scanstart   equ  esp + 16   ; first two bytes of string\r\n+scanend     equ  esp + 12   ; last two bytes of string\r\n+scanalign   equ  esp + 20   ; dword-misalignment of string\r\n+nicematch   equ  esp + 24   ; a good enough match size\r\n+bestlen     equ  esp + 28   ; size of best match so far\r\n+scan        equ  esp + 32   ; ptr to string wanting match\r\n+\r\n+LocalVarsSize   equ 36\r\n+;   saved ebx   byte esp + 36\r\n+;   saved edi   byte esp + 40\r\n+;   saved esi   byte esp + 44\r\n+;   saved ebp   byte esp + 48\r\n+;   return address  byte esp + 52\r\n+deflatestate    equ  esp + 56   ; the function arguments\r\n+curmatch    equ  esp + 60\r\n+\r\n+;;; Offsets for fields in the deflate_state structure. These numbers\r\n+;;; are calculated from the definition of deflate_state, with the\r\n+;;; assumption that the compiler will dword-align the fields. (Thus,\r\n+;;; changing the definition of deflate_state could easily cause this\r\n+;;; program to crash horribly, without so much as a warning at\r\n+;;; compile time. Sigh.)\r\n+\r\n+dsWSize     equ 36+zlib1222add\r\n+dsWMask     equ 44+zlib1222add\r\n+dsWindow    equ 48+zlib1222add\r\n+dsPrev      equ 56+zlib1222add\r\n+dsMatchLen  equ 88+zlib1222add\r\n+dsPrevMatch equ 92+zlib1222add\r\n+dsStrStart  equ 100+zlib1222add\r\n+dsMatchStart    equ 104+zlib1222add\r\n+dsLookahead equ 108+zlib1222add\r\n+dsPrevLen   equ 112+zlib1222add\r\n+dsMaxChainLen   equ 116+zlib1222add\r\n+dsGoodMatch equ 132+zlib1222add\r\n+dsNiceMatch equ 136+zlib1222add\r\n+\r\n+\r\n+;;; match686.asm -- Pentium-Pro-optimized version of longest_match()\r\n+;;; Written for zlib 1.1.2\r\n+;;; Copyright (C) 1998 Brian Raiter <breadbox@muppetlabs.com>\r\n+;;; You can look at http://www.muppetlabs.com/~breadbox/software/assembly.html\r\n+;;;\r\n+;;\r\n+;;  This software is provided 'as-is', without any express or implied\r\n+;;  warranty.  In no event will the authors be held liable for any damages\r\n+;;  arising from the use of this software.\r\n+;;\r\n+;;  Permission is granted to anyone to use this software for any purpose,\r\n+;;  including commercial applications, and to alter it and redistribute it\r\n+;;  freely, subject to the following restrictions:\r\n+;;\r\n+;;  1. The origin of this software must not be misrepresented; you must not\r\n+;;     claim that you wrote the original software. If you use this software\r\n+;;     in a product, an acknowledgment in the product documentation would be\r\n+;;     appreciated but is not required.\r\n+;;  2. Altered source versions must be plainly marked as such, and must not be\r\n+;;     misrepresented as being the original software\r\n+;;  3. This notice may not be removed or altered from any source distribution.\r\n+;;\r\n+\r\n+;GLOBAL _longest_match, _match_init\r\n+\r\n+\r\n+;SECTION    .text\r\n+\r\n+;;; uInt longest_match(deflate_state *deflatestate, IPos curmatch)\r\n+\r\n+;_longest_match:\r\n+    IFDEF NOUNDERLINE\r\n+    longest_match       proc near\r\n+    ELSE\r\n+    _longest_match      proc near\r\n+    ENDIF\r\n+\r\n+;;; Save registers that the compiler may be using, and adjust esp to\r\n+;;; make room for our stack frame.\r\n+\r\n+        push    ebp\r\n+        push    edi\r\n+        push    esi\r\n+        push    ebx\r\n+        sub esp, LocalVarsSize\r\n+\r\n+;;; Retrieve the function arguments. ecx will hold cur_match\r\n+;;; throughout the entire function. edx will hold the pointer to the\r\n+;;; deflate_state structure during the function's setup (before\r\n+;;; entering the main loop.\r\n+\r\n+        mov edx, [deflatestate]\r\n+        mov ecx, [curmatch]\r\n+\r\n+;;; uInt wmask = s->w_mask;\r\n+;;; unsigned chain_length = s->max_chain_length;\r\n+;;; if (s->prev_length >= s->good_match) {\r\n+;;;     chain_length >>= 2;\r\n+;;; }\r\n+\r\n+        mov eax, [edx + dsPrevLen]\r\n+        mov ebx, [edx + dsGoodMatch]\r\n+        cmp eax, ebx\r\n+        mov eax, [edx + dsWMask]\r\n+        mov ebx, [edx + dsMaxChainLen]\r\n+        jl  LastMatchGood\r\n+        shr ebx, 2\r\n+LastMatchGood:\r\n+\r\n+;;; chainlen is decremented once beforehand so that the function can\r\n+;;; use the sign flag instead of the zero flag for the exit test.\r\n+;;; It is then shifted into the high word, to make room for the wmask\r\n+;;; value, which it will always accompany.\r\n+\r\n+        dec ebx\r\n+        shl ebx, 16\r\n+        or  ebx, eax\r\n+        mov [chainlenwmask], ebx\r\n+\r\n+;;; if ((uInt)nice_match > s->lookahead) nice_match = s->lookahead;\r\n+\r\n+        mov eax, [edx + dsNiceMatch]\r\n+        mov ebx, [edx + dsLookahead]\r\n+        cmp ebx, eax\r\n+        jl  LookaheadLess\r\n+        mov ebx, eax\r\n+LookaheadLess:  mov [nicematch], ebx\r\n+\r\n+;;; register Bytef *scan = s->window + s->strstart;\r\n+\r\n+        mov esi, [edx + dsWindow]\r\n+        mov [window], esi\r\n+        mov ebp, [edx + dsStrStart]\r\n+        lea edi, [esi + ebp]\r\n+        mov [scan], edi\r\n+\r\n+;;; Determine how many bytes the scan ptr is off from being\r\n+;;; dword-aligned.\r\n+\r\n+        mov eax, edi\r\n+        neg eax\r\n+        and eax, 3\r\n+        mov [scanalign], eax\r\n+\r\n+;;; IPos limit = s->strstart > (IPos)MAX_DIST(s) ?\r\n+;;;     s->strstart - (IPos)MAX_DIST(s) : NIL;\r\n+\r\n+        mov eax, [edx + dsWSize]\r\n+        sub eax, MIN_LOOKAHEAD\r\n+        sub ebp, eax\r\n+        jg  LimitPositive\r\n+        xor ebp, ebp\r\n+LimitPositive:\r\n+\r\n+;;; int best_len = s->prev_length;\r\n+\r\n+        mov eax, [edx + dsPrevLen]\r\n+        mov [bestlen], eax\r\n+\r\n+;;; Store the sum of s->window + best_len in esi locally, and in esi.\r\n+\r\n+        add esi, eax\r\n+        mov [windowbestlen], esi\r\n+\r\n+;;; register ush scan_start = *(ushf*)scan;\r\n+;;; register ush scan_end   = *(ushf*)(scan+best_len-1);\r\n+;;; Posf *prev = s->prev;\r\n+\r\n+        movzx   ebx, word ptr [edi]\r\n+        mov [scanstart], ebx\r\n+        movzx   ebx, word ptr [edi + eax - 1]\r\n+        mov [scanend], ebx\r\n+        mov edi, [edx + dsPrev]\r\n+\r\n+;;; Jump into the main loop.\r\n+\r\n+        mov edx, [chainlenwmask]\r\n+        jmp short LoopEntry\r\n+\r\n+align 4\r\n+\r\n+;;; do {\r\n+;;;     match = s->window + cur_match;\r\n+;;;     if (*(ushf*)(match+best_len-1) != scan_end ||\r\n+;;;         *(ushf*)match != scan_start) continue;\r\n+;;;     [...]\r\n+;;; } while ((cur_match = prev[cur_match & wmask]) > limit\r\n+;;;          && --chain_length != 0);\r\n+;;;\r\n+;;; Here is the inner loop of the function. The function will spend the\r\n+;;; majority of its time in this loop, and majority of that time will\r\n+;;; be spent in the first ten instructions.\r\n+;;;\r\n+;;; Within this loop:\r\n+;;; ebx = scanend\r\n+;;; ecx = curmatch\r\n+;;; edx = chainlenwmask - i.e., ((chainlen << 16) | wmask)\r\n+;;; esi = windowbestlen - i.e., (window + bestlen)\r\n+;;; edi = prev\r\n+;;; ebp = limit\r\n+\r\n+LookupLoop:\r\n+        and ecx, edx\r\n+        movzx   ecx, word ptr [edi + ecx*2]\r\n+        cmp ecx, ebp\r\n+        jbe LeaveNow\r\n+        sub edx, 00010000h\r\n+        js  LeaveNow\r\n+LoopEntry:  movzx   eax, word ptr [esi + ecx - 1]\r\n+        cmp eax, ebx\r\n+        jnz LookupLoop\r\n+        mov eax, [window]\r\n+        movzx   eax, word ptr [eax + ecx]\r\n+        cmp eax, [scanstart]\r\n+        jnz LookupLoop\r\n+\r\n+;;; Store the current value of chainlen.\r\n+\r\n+        mov [chainlenwmask], edx\r\n+\r\n+;;; Point edi to the string under scrutiny, and esi to the string we\r\n+;;; are hoping to match it up with. In actuality, esi and edi are\r\n+;;; both pointed (MAX_MATCH_8 - scanalign) bytes ahead, and edx is\r\n+;;; initialized to -(MAX_MATCH_8 - scanalign).\r\n+\r\n+        mov esi, [window]\r\n+        mov edi, [scan]\r\n+        add esi, ecx\r\n+        mov eax, [scanalign]\r\n+        mov edx, 0fffffef8h; -(MAX_MATCH_8)\r\n+        lea edi, [edi + eax + 0108h] ;MAX_MATCH_8]\r\n+        lea esi, [esi + eax + 0108h] ;MAX_MATCH_8]\r\n+\r\n+;;; Test the strings for equality, 8 bytes at a time. At the end,\r\n+;;; adjust edx so that it is offset to the exact byte that mismatched.\r\n+;;;\r\n+;;; We already know at this point that the first three bytes of the\r\n+;;; strings match each other, and they can be safely passed over before\r\n+;;; starting the compare loop. So what this code does is skip over 0-3\r\n+;;; bytes, as much as necessary in order to dword-align the edi\r\n+;;; pointer. (esi will still be misaligned three times out of four.)\r\n+;;;\r\n+;;; It should be confessed that this loop usually does not represent\r\n+;;; much of the total running time. Replacing it with a more\r\n+;;; straightforward \"rep cmpsb\" would not drastically degrade\r\n+;;; performance.\r\n+\r\n+LoopCmps:\r\n+        mov eax, [esi + edx]\r\n+        xor eax, [edi + edx]\r\n+        jnz LeaveLoopCmps\r\n+        mov eax, [esi + edx + 4]\r\n+        xor eax, [edi + edx + 4]\r\n+        jnz LeaveLoopCmps4\r\n+        add edx, 8\r\n+        jnz LoopCmps\r\n+        jmp short LenMaximum\r\n+LeaveLoopCmps4: add edx, 4\r\n+LeaveLoopCmps:  test    eax, 0000FFFFh\r\n+        jnz LenLower\r\n+        add edx,  2\r\n+        shr eax, 16\r\n+LenLower:   sub al, 1\r\n+        adc edx, 0\r\n+\r\n+;;; Calculate the length of the match. If it is longer than MAX_MATCH,\r\n+;;; then automatically accept it as the best possible match and leave.\r\n+\r\n+        lea eax, [edi + edx]\r\n+        mov edi, [scan]\r\n+        sub eax, edi\r\n+        cmp eax, MAX_MATCH\r\n+        jge LenMaximum\r\n+\r\n+;;; If the length of the match is not longer than the best match we\r\n+;;; have so far, then forget it and return to the lookup loop.\r\n+\r\n+        mov edx, [deflatestate]\r\n+        mov ebx, [bestlen]\r\n+        cmp eax, ebx\r\n+        jg  LongerMatch\r\n+        mov esi, [windowbestlen]\r\n+        mov edi, [edx + dsPrev]\r\n+        mov ebx, [scanend]\r\n+        mov edx, [chainlenwmask]\r\n+        jmp LookupLoop\r\n+\r\n+;;;         s->match_start = cur_match;\r\n+;;;         best_len = len;\r\n+;;;         if (len >= nice_match) break;\r\n+;;;         scan_end = *(ushf*)(scan+best_len-1);\r\n+\r\n+LongerMatch:    mov ebx, [nicematch]\r\n+        mov [bestlen], eax\r\n+        mov [edx + dsMatchStart], ecx\r\n+        cmp eax, ebx\r\n+        jge LeaveNow\r\n+        mov esi, [window]\r\n+        add esi, eax\r\n+        mov [windowbestlen], esi\r\n+        movzx   ebx, word ptr [edi + eax - 1]\r\n+        mov edi, [edx + dsPrev]\r\n+        mov [scanend], ebx\r\n+        mov edx, [chainlenwmask]\r\n+        jmp LookupLoop\r\n+\r\n+;;; Accept the current string, with the maximum possible length.\r\n+\r\n+LenMaximum: mov edx, [deflatestate]\r\n+        mov dword ptr [bestlen], MAX_MATCH\r\n+        mov [edx + dsMatchStart], ecx\r\n+\r\n+;;; if ((uInt)best_len <= s->lookahead) return (uInt)best_len;\r\n+;;; return s->lookahead;\r\n+\r\n+LeaveNow:\r\n+        mov edx, [deflatestate]\r\n+        mov ebx, [bestlen]\r\n+        mov eax, [edx + dsLookahead]\r\n+        cmp ebx, eax\r\n+        jg  LookaheadRet\r\n+        mov eax, ebx\r\n+LookaheadRet:\r\n+\r\n+;;; Restore the stack and return from whence we came.\r\n+\r\n+        add esp, LocalVarsSize\r\n+        pop ebx\r\n+        pop esi\r\n+        pop edi\r\n+        pop ebp\r\n+\r\n+        ret\r\n+; please don't remove this string !\r\n+; Your can freely use match686 in any free or commercial app if you don't remove the string in the binary!\r\n+    db     0dh,0ah,\"asm686 with masm, optimised assembly code from Brian Raiter, written 1998\",0dh,0ah\r\n+\r\n+\r\n+    IFDEF NOUNDERLINE\r\n+    longest_match       endp\r\n+    ELSE\r\n+    _longest_match      endp\r\n+    ENDIF\r\n+\r\n+    IFDEF NOUNDERLINE\r\n+    match_init      proc near\r\n+                    ret\r\n+    match_init      endp\r\n+    ELSE\r\n+    _match_init     proc near\r\n+                    ret\r\n+    _match_init     endp\r\n+    ENDIF\r\n+\r\n+\r\n+_TEXT   ends\r\n+end\r"}, {"sha": "70a51f83777641741e14cda729a41c90d5dcc8fc", "filename": "zlib/contrib/masmx86/mkasm.bat", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d216c70d980e3169b42e9734cf4bea1648ff8f0/zlib%2Fcontrib%2Fmasmx86%2Fmkasm.bat", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d216c70d980e3169b42e9734cf4bea1648ff8f0/zlib%2Fcontrib%2Fmasmx86%2Fmkasm.bat", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fmasmx86%2Fmkasm.bat?ref=5d216c70d980e3169b42e9734cf4bea1648ff8f0", "patch": "@@ -1,3 +0,0 @@\n-cl /DASMV /I..\\.. /O2 /c gvmat32c.c\r\n-ml /coff /Zi /c /Flgvmat32.lst gvmat32.asm\r\n-ml /coff /Zi /c /Flinffas32.lst inffas32.asm\r"}, {"sha": "3271f720a1a7645a301b8d1fc16389cad955d5f8", "filename": "zlib/contrib/masmx86/readme.txt", "status": "modified", "additions": 27, "deletions": 21, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fmasmx86%2Freadme.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fmasmx86%2Freadme.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fmasmx86%2Freadme.txt?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,21 +1,27 @@\n-\n-Summary\n--------\n-This directory contains ASM implementations of the functions\n-longest_match() and inflate_fast().\n-\n-\n-Use instructions\n-----------------\n-Copy these files into the zlib source directory, then run the\n-appropriate makefile, as suggested below.\n-\n-\n-Build instructions\n-------------------\n-* With Microsoft C and MASM:\n-nmake -f win32/Makefile.msc LOC=\"-DASMV -DASMINF\" OBJA=\"gvmat32c.obj gvmat32.obj inffas32.obj\"\n-\n-* With Borland C and TASM:\n-make -f win32/Makefile.bor LOCAL_ZLIB=\"-DASMV -DASMINF\" OBJA=\"gvmat32c.obj gvmat32.obj inffas32.obj\" OBJPA=\"+gvmat32c.obj+gvmat32.obj+inffas32.obj\"\n-\n+\r\n+Summary\r\n+-------\r\n+This directory contains ASM implementations of the functions\r\n+longest_match() and inflate_fast().\r\n+\r\n+\r\n+Use instructions\r\n+----------------\r\n+Assemble using MASM, and copy the object files into the zlib source\r\n+directory, then run the appropriate makefile, as suggested below.  You can\r\n+donwload MASM from here:\r\n+\r\n+    http://www.microsoft.com/downloads/details.aspx?displaylang=en&FamilyID=7a1c9da0-0510-44a2-b042-7ef370530c64\r\n+\r\n+You can also get objects files here:\r\n+\r\n+    http://www.winimage.com/zLibDll/zlib124_masm_obj.zip\r\n+\r\n+Build instructions\r\n+------------------\r\n+* With Microsoft C and MASM:\r\n+nmake -f win32/Makefile.msc LOC=\"-DASMV -DASMINF\" OBJA=\"match686.obj inffas32.obj\"\r\n+\r\n+* With Borland C and TASM:\r\n+make -f win32/Makefile.bor LOCAL_ZLIB=\"-DASMV -DASMINF\" OBJA=\"match686.obj inffas32.obj\" OBJPA=\"+match686c.obj+match686.obj+inffas32.obj\"\r\n+\r"}, {"sha": "50ca6a9e0f32f0a000f796f5d5d60fd36a36014d", "filename": "zlib/contrib/minizip/ChangeLogUnzip", "status": "removed", "additions": 0, "deletions": 67, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d216c70d980e3169b42e9734cf4bea1648ff8f0/zlib%2Fcontrib%2Fminizip%2FChangeLogUnzip", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d216c70d980e3169b42e9734cf4bea1648ff8f0/zlib%2Fcontrib%2Fminizip%2FChangeLogUnzip", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fminizip%2FChangeLogUnzip?ref=5d216c70d980e3169b42e9734cf4bea1648ff8f0", "patch": "@@ -1,67 +0,0 @@\n-Change in 1.01e (12 feb 05)\n-- Fix in zipOpen2 for globalcomment (Rolf Kalbermatter)\n-- Fix possible memory leak in unzip.c (Zoran Stevanovic)\n-\n-Change in 1.01b (20 may 04)\n-- Integrate patch from Debian package (submited by Mark Brown)\n-- Add tools mztools from Xavier Roche\n-\n-Change in 1.01 (8 may 04)\n-- fix buffer overrun risk in unzip.c (Xavier Roche)\n-- fix a minor buffer insecurity in minizip.c (Mike Whittaker)\n-\n-Change in 1.00: (10 sept 03)\n-- rename to 1.00\n-- cosmetic code change\n-\n-Change in 0.22: (19 May 03)\n-- crypting support (unless you define NOCRYPT)\n-- append file in existing zipfile\n-\n-Change in 0.21: (10 Mar 03)\n-- bug fixes\n-\n-Change in 0.17: (27 Jan 02)\n-- bug fixes\n-\n-Change in 0.16: (19 Jan 02)\n-- Support of ioapi for virtualize zip file access\n-\n-Change in 0.15: (19 Mar 98)\n-- fix memory leak in minizip.c\n-\n-Change in 0.14: (10 Mar 98)\n-- fix bugs in minizip.c sample for zipping big file\n-- fix problem in month in date handling\n-- fix bug in unzlocal_GetCurrentFileInfoInternal in unzip.c for\n-    comment handling\n-\n-Change in 0.13: (6 Mar 98)\n-- fix bugs in zip.c\n-- add real minizip sample\n-\n-Change in 0.12: (4 Mar 98)\n-- add zip.c and zip.h for creates .zip file\n-- fix change_file_date in miniunz.c for Unix (Jean-loup Gailly)\n-- fix miniunz.c for file without specific record for directory\n-\n-Change in 0.11: (3 Mar 98)\n-- fix bug in unzGetCurrentFileInfo for get extra field and comment\n-- enhance miniunz sample, remove the bad unztst.c sample\n-\n-Change in 0.10: (2 Mar 98)\n-- fix bug in unzReadCurrentFile\n-- rename unzip* to unz* function and structure\n-- remove Windows-like hungary notation variable name\n-- modify some structure in unzip.h\n-- add somes comment in source\n-- remove unzipGetcCurrentFile function\n-- replace ZUNZEXPORT by ZEXPORT\n-- add unzGetLocalExtrafield for get the local extrafield info\n-- add a new sample, miniunz.c\n-\n-Change in 0.4: (25 Feb 98)\n-- suppress the type unzipFileInZip.\n-  Only on file in the zipfile can be open at the same time\n-- fix somes typo in code\n-- added tm_unz structure in unzip_file_info (date/time in readable format)"}, {"sha": "13a1bd91a9b00f5527e7878e74740918d2833907", "filename": "zlib/contrib/minizip/MiniZip64_Changes.txt", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fminizip%2FMiniZip64_Changes.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fminizip%2FMiniZip64_Changes.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fminizip%2FMiniZip64_Changes.txt?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -0,0 +1,6 @@\n+\n+MiniZip 1.1 was derrived from MiniZip at version 1.01f\n+\n+Change in 1.0 (Okt 2009)\n+ - **TODO - Add history**\n+"}, {"sha": "57d715242087b328c37dbd6a47217b63b1ed88c6", "filename": "zlib/contrib/minizip/MiniZip64_info.txt", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fminizip%2FMiniZip64_info.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fminizip%2FMiniZip64_info.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fminizip%2FMiniZip64_info.txt?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -0,0 +1,74 @@\n+MiniZip - Copyright (c) 1998-2010 - by Gilles Vollant - version 1.1 64 bits from Mathias Svensson\n+\n+Introduction\n+---------------------\n+MiniZip 1.1 is built from MiniZip 1.0 by Gilles Vollant ( http://www.winimage.com/zLibDll/minizip.html )\n+\n+When adding ZIP64 support into minizip it would result into risk of breaking compatibility with minizip 1.0.\n+All possible work was done for compatibility.\n+\n+\n+Background\n+---------------------\n+When adding ZIP64 support Mathias Svensson found that Even Rouault have added ZIP64 \n+support for unzip.c into minizip for a open source project called gdal ( http://www.gdal.org/ )\n+\n+That was used as a starting point. And after that ZIP64 support was added to zip.c\n+some refactoring and code cleanup was also done.\n+\n+\n+Changed from MiniZip 1.0 to MiniZip 1.1\n+---------------------------------------\n+* Added ZIP64 support for unzip ( by Even Rouault )\n+* Added ZIP64 support for zip ( by Mathias Svensson )\n+* Reverted some changed that Even Rouault did.\n+* Bunch of patches received from Gulles Vollant that he received for MiniZip from various users.\n+* Added unzip patch for BZIP Compression method (patch create by Daniel Borca)\n+* Added BZIP Compress method for zip\n+* Did some refactoring and code cleanup\n+\n+\n+Credits\n+\n+ Gilles Vollant    - Original MiniZip author\n+ Even Rouault      - ZIP64 unzip Support\n+ Daniel Borca      - BZip Compression method support in unzip\n+ Mathias Svensson  - ZIP64 zip support\n+ Mathias Svensson  - BZip Compression method support in zip\n+\n+ Resources\n+\n+ ZipLayout   http://result42.com/projects/ZipFileLayout\n+             Command line tool for Windows that shows the layout and information of the headers in a zip archive.\n+             Used when debugging and validating the creation of zip files using MiniZip64\n+\n+\n+ ZIP App Note  http://www.pkware.com/documents/casestudies/APPNOTE.TXT\n+               Zip File specification\n+\n+\n+Notes.\n+ * To be able to use BZip compression method in zip64.c or unzip64.c the BZIP2 lib is needed and HAVE_BZIP2 need to be defined.\n+\n+License\n+----------------------------------------------------------\n+   Condition of use and distribution are the same than zlib :\n+\n+  This software is provided 'as-is', without any express or implied\n+  warranty.  In no event will the authors be held liable for any damages\n+  arising from the use of this software.\n+\n+  Permission is granted to anyone to use this software for any purpose,\n+  including commercial applications, and to alter it and redistribute it\n+  freely, subject to the following restrictions:\n+\n+  1. The origin of this software must not be misrepresented; you must not\n+     claim that you wrote the original software. If you use this software\n+     in a product, an acknowledgment in the product documentation would be\n+     appreciated but is not required.\n+  2. Altered source versions must be plainly marked as such, and must not be\n+     misrepresented as being the original software.\n+  3. This notice may not be removed or altered from any source distribution.\n+\n+----------------------------------------------------------\n+"}, {"sha": "a01d08d932852ed4612183cda59d19df97d2ad54", "filename": "zlib/contrib/minizip/crypt.h", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fminizip%2Fcrypt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fminizip%2Fcrypt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fminizip%2Fcrypt.h?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -87,13 +87,12 @@ static void init_keys(const char* passwd,unsigned long* pkeys,const unsigned lon\n #    define ZCR_SEED2 3141592654UL     /* use PI as default pattern */\n #  endif\n \n-static int crypthead(passwd, buf, bufSize, pkeys, pcrc_32_tab, crcForCrypting)\n-    const char *passwd;         /* password string */\n-    unsigned char *buf;         /* where to write header */\n-    int bufSize;\n-    unsigned long* pkeys;\n-    const unsigned long* pcrc_32_tab;\n-    unsigned long crcForCrypting;\n+static int crypthead(const char* passwd,      /* password string */\n+                     unsigned char* buf,      /* where to write header */\n+                     int bufSize,\n+                     unsigned long* pkeys,\n+                     const unsigned long* pcrc_32_tab,\n+                     unsigned long crcForCrypting)\n {\n     int n;                       /* index in random header */\n     int t;                       /* temporary */\n@@ -124,8 +123,8 @@ static int crypthead(passwd, buf, bufSize, pkeys, pcrc_32_tab, crcForCrypting)\n     {\n         buf[n] = (unsigned char)zencode(pkeys, pcrc_32_tab, header[n], t);\n     }\n-    buf[n++] = zencode(pkeys, pcrc_32_tab, (int)(crcForCrypting >> 16) & 0xff, t);\n-    buf[n++] = zencode(pkeys, pcrc_32_tab, (int)(crcForCrypting >> 24) & 0xff, t);\n+    buf[n++] = (unsigned char)zencode(pkeys, pcrc_32_tab, (int)(crcForCrypting >> 16) & 0xff, t);\n+    buf[n++] = (unsigned char)zencode(pkeys, pcrc_32_tab, (int)(crcForCrypting >> 24) & 0xff, t);\n     return n;\n }\n "}, {"sha": "49958f61ffd660c96031aa49dbcffd08b127ea45", "filename": "zlib/contrib/minizip/ioapi.c", "status": "modified", "additions": 139, "deletions": 81, "changes": 220, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fminizip%2Fioapi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fminizip%2Fioapi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fminizip%2Fioapi.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,74 +1,104 @@\n-/* ioapi.c -- IO base function header for compress/uncompress .zip\n-   files using zlib + zip or unzip API\n+/* ioapi.h -- IO base function header for compress/uncompress .zip\n+   part of the MiniZip project - ( http://www.winimage.com/zLibDll/minizip.html )\n \n-   Version 1.01e, February 12th, 2005\n-\n-   Copyright (C) 1998-2005 Gilles Vollant\n-*/\n-\n-#include <stdio.h>\n-#include <stdlib.h>\n-#include <string.h>\n-\n-#include \"zlib.h\"\n-#include \"ioapi.h\"\n+         Copyright (C) 1998-2010 Gilles Vollant (minizip) ( http://www.winimage.com/zLibDll/minizip.html )\n \n+         Modifications for Zip64 support\n+         Copyright (C) 2009-2010 Mathias Svensson ( http://result42.com )\n \n+         For more info read MiniZip_info.txt\n \n-/* I've found an old Unix (a SunOS 4.1.3_U1) without all SEEK_* defined.... */\n+*/\n \n-#ifndef SEEK_CUR\n-#define SEEK_CUR    1\n+#if (defined(_WIN32))\n+        #define _CRT_SECURE_NO_WARNINGS\n #endif\n \n-#ifndef SEEK_END\n-#define SEEK_END    2\n-#endif\n+#include \"ioapi.h\"\n \n-#ifndef SEEK_SET\n-#define SEEK_SET    0\n-#endif\n+voidpf call_zopen64 (const zlib_filefunc64_32_def* pfilefunc,const void*filename,int mode)\n+{\n+    if (pfilefunc->zfile_func64.zopen64_file != NULL)\n+        return (*(pfilefunc->zfile_func64.zopen64_file)) (pfilefunc->zfile_func64.opaque,filename,mode);\n+    else\n+    {\n+        return (*(pfilefunc->zopen32_file))(pfilefunc->zfile_func64.opaque,(const char*)filename,mode);\n+    }\n+}\n \n-voidpf ZCALLBACK fopen_file_func OF((\n-   voidpf opaque,\n-   const char* filename,\n-   int mode));\n+long call_zseek64 (const zlib_filefunc64_32_def* pfilefunc,voidpf filestream, ZPOS64_T offset, int origin)\n+{\n+    if (pfilefunc->zfile_func64.zseek64_file != NULL)\n+        return (*(pfilefunc->zfile_func64.zseek64_file)) (pfilefunc->zfile_func64.opaque,filestream,offset,origin);\n+    else\n+    {\n+        uLong offsetTruncated = (uLong)offset;\n+        if (offsetTruncated != offset)\n+            return -1;\n+        else\n+            return (*(pfilefunc->zseek32_file))(pfilefunc->zfile_func64.opaque,filestream,offsetTruncated,origin);\n+    }\n+}\n \n-uLong ZCALLBACK fread_file_func OF((\n-   voidpf opaque,\n-   voidpf stream,\n-   void* buf,\n-   uLong size));\n+ZPOS64_T call_ztell64 (const zlib_filefunc64_32_def* pfilefunc,voidpf filestream)\n+{\n+    if (pfilefunc->zfile_func64.zseek64_file != NULL)\n+        return (*(pfilefunc->zfile_func64.ztell64_file)) (pfilefunc->zfile_func64.opaque,filestream);\n+    else\n+    {\n+        uLong tell_uLong = (*(pfilefunc->ztell32_file))(pfilefunc->zfile_func64.opaque,filestream);\n+        if ((tell_uLong) == ((uLong)-1))\n+            return (ZPOS64_T)-1;\n+        else\n+            return tell_uLong;\n+    }\n+}\n \n-uLong ZCALLBACK fwrite_file_func OF((\n-   voidpf opaque,\n-   voidpf stream,\n-   const void* buf,\n-   uLong size));\n+void fill_zlib_filefunc64_32_def_from_filefunc32(zlib_filefunc64_32_def* p_filefunc64_32,const zlib_filefunc_def* p_filefunc32)\n+{\n+    p_filefunc64_32->zfile_func64.zopen64_file = NULL;\n+    p_filefunc64_32->zopen32_file = p_filefunc32->zopen_file;\n+    p_filefunc64_32->zfile_func64.zerror_file = p_filefunc32->zerror_file;\n+    p_filefunc64_32->zfile_func64.zread_file = p_filefunc32->zread_file;\n+    p_filefunc64_32->zfile_func64.zwrite_file = p_filefunc32->zwrite_file;\n+    p_filefunc64_32->zfile_func64.ztell64_file = NULL;\n+    p_filefunc64_32->zfile_func64.zseek64_file = NULL;\n+    p_filefunc64_32->zfile_func64.zclose_file = p_filefunc32->zclose_file;\n+    p_filefunc64_32->zfile_func64.zerror_file = p_filefunc32->zerror_file;\n+    p_filefunc64_32->zfile_func64.opaque = p_filefunc32->opaque;\n+    p_filefunc64_32->zseek32_file = p_filefunc32->zseek_file;\n+    p_filefunc64_32->ztell32_file = p_filefunc32->ztell_file;\n+}\n \n-long ZCALLBACK ftell_file_func OF((\n-   voidpf opaque,\n-   voidpf stream));\n \n-long ZCALLBACK fseek_file_func OF((\n-   voidpf opaque,\n-   voidpf stream,\n-   uLong offset,\n-   int origin));\n \n-int ZCALLBACK fclose_file_func OF((\n-   voidpf opaque,\n-   voidpf stream));\n+static voidpf  ZCALLBACK fopen_file_func OF((voidpf opaque, const char* filename, int mode));\n+static uLong   ZCALLBACK fread_file_func OF((voidpf opaque, voidpf stream, void* buf, uLong size));\n+static uLong   ZCALLBACK fwrite_file_func OF((voidpf opaque, voidpf stream, const void* buf,uLong size));\n+static ZPOS64_T ZCALLBACK ftell64_file_func OF((voidpf opaque, voidpf stream));\n+static long    ZCALLBACK fseek64_file_func OF((voidpf opaque, voidpf stream, ZPOS64_T offset, int origin));\n+static int     ZCALLBACK fclose_file_func OF((voidpf opaque, voidpf stream));\n+static int     ZCALLBACK ferror_file_func OF((voidpf opaque, voidpf stream));\n \n-int ZCALLBACK ferror_file_func OF((\n-   voidpf opaque,\n-   voidpf stream));\n+static voidpf ZCALLBACK fopen_file_func (voidpf opaque, const char* filename, int mode)\n+{\n+    FILE* file = NULL;\n+    const char* mode_fopen = NULL;\n+    if ((mode & ZLIB_FILEFUNC_MODE_READWRITEFILTER)==ZLIB_FILEFUNC_MODE_READ)\n+        mode_fopen = \"rb\";\n+    else\n+    if (mode & ZLIB_FILEFUNC_MODE_EXISTING)\n+        mode_fopen = \"r+b\";\n+    else\n+    if (mode & ZLIB_FILEFUNC_MODE_CREATE)\n+        mode_fopen = \"wb\";\n \n+    if ((filename!=NULL) && (mode_fopen != NULL))\n+        file = fopen(filename, mode_fopen);\n+    return file;\n+}\n \n-voidpf ZCALLBACK fopen_file_func (opaque, filename, mode)\n-   voidpf opaque;\n-   const char* filename;\n-   int mode;\n+static voidpf ZCALLBACK fopen64_file_func (voidpf opaque, const void* filename, int mode)\n {\n     FILE* file = NULL;\n     const char* mode_fopen = NULL;\n@@ -82,48 +112,41 @@ voidpf ZCALLBACK fopen_file_func (opaque, filename, mode)\n         mode_fopen = \"wb\";\n \n     if ((filename!=NULL) && (mode_fopen != NULL))\n-        file = fopen(filename, mode_fopen);\n+        file = fopen64((const char*)filename, mode_fopen);\n     return file;\n }\n \n \n-uLong ZCALLBACK fread_file_func (opaque, stream, buf, size)\n-   voidpf opaque;\n-   voidpf stream;\n-   void* buf;\n-   uLong size;\n+static uLong ZCALLBACK fread_file_func (voidpf opaque, voidpf stream, void* buf, uLong size)\n {\n     uLong ret;\n     ret = (uLong)fread(buf, 1, (size_t)size, (FILE *)stream);\n     return ret;\n }\n \n-\n-uLong ZCALLBACK fwrite_file_func (opaque, stream, buf, size)\n-   voidpf opaque;\n-   voidpf stream;\n-   const void* buf;\n-   uLong size;\n+static uLong ZCALLBACK fwrite_file_func (voidpf opaque, voidpf stream, const void* buf, uLong size)\n {\n     uLong ret;\n     ret = (uLong)fwrite(buf, 1, (size_t)size, (FILE *)stream);\n     return ret;\n }\n \n-long ZCALLBACK ftell_file_func (opaque, stream)\n-   voidpf opaque;\n-   voidpf stream;\n+static long ZCALLBACK ftell_file_func (voidpf opaque, voidpf stream)\n {\n     long ret;\n     ret = ftell((FILE *)stream);\n     return ret;\n }\n \n-long ZCALLBACK fseek_file_func (opaque, stream, offset, origin)\n-   voidpf opaque;\n-   voidpf stream;\n-   uLong offset;\n-   int origin;\n+\n+static ZPOS64_T ZCALLBACK ftell64_file_func (voidpf opaque, voidpf stream)\n+{\n+    ZPOS64_T ret;\n+    ret = ftello64((FILE *)stream);\n+    return ret;\n+}\n+\n+static long ZCALLBACK fseek_file_func (voidpf  opaque, voidpf stream, uLong offset, int origin)\n {\n     int fseek_origin=0;\n     long ret;\n@@ -141,22 +164,45 @@ long ZCALLBACK fseek_file_func (opaque, stream, offset, origin)\n     default: return -1;\n     }\n     ret = 0;\n-    fseek((FILE *)stream, offset, fseek_origin);\n+    if (fseek((FILE *)stream, offset, fseek_origin) != 0)\n+        ret = -1;\n     return ret;\n }\n \n-int ZCALLBACK fclose_file_func (opaque, stream)\n-   voidpf opaque;\n-   voidpf stream;\n+static long ZCALLBACK fseek64_file_func (voidpf  opaque, voidpf stream, ZPOS64_T offset, int origin)\n+{\n+    int fseek_origin=0;\n+    long ret;\n+    switch (origin)\n+    {\n+    case ZLIB_FILEFUNC_SEEK_CUR :\n+        fseek_origin = SEEK_CUR;\n+        break;\n+    case ZLIB_FILEFUNC_SEEK_END :\n+        fseek_origin = SEEK_END;\n+        break;\n+    case ZLIB_FILEFUNC_SEEK_SET :\n+        fseek_origin = SEEK_SET;\n+        break;\n+    default: return -1;\n+    }\n+    ret = 0;\n+\n+    if(fseeko64((FILE *)stream, offset, fseek_origin) != 0)\n+                        ret = -1;\n+\n+    return ret;\n+}\n+\n+\n+static int ZCALLBACK fclose_file_func (voidpf opaque, voidpf stream)\n {\n     int ret;\n     ret = fclose((FILE *)stream);\n     return ret;\n }\n \n-int ZCALLBACK ferror_file_func (opaque, stream)\n-   voidpf opaque;\n-   voidpf stream;\n+static int ZCALLBACK ferror_file_func (voidpf opaque, voidpf stream)\n {\n     int ret;\n     ret = ferror((FILE *)stream);\n@@ -175,3 +221,15 @@ void fill_fopen_filefunc (pzlib_filefunc_def)\n     pzlib_filefunc_def->zerror_file = ferror_file_func;\n     pzlib_filefunc_def->opaque = NULL;\n }\n+\n+void fill_fopen64_filefunc (zlib_filefunc64_def*  pzlib_filefunc_def)\n+{\n+    pzlib_filefunc_def->zopen64_file = fopen64_file_func;\n+    pzlib_filefunc_def->zread_file = fread_file_func;\n+    pzlib_filefunc_def->zwrite_file = fwrite_file_func;\n+    pzlib_filefunc_def->ztell64_file = ftell64_file_func;\n+    pzlib_filefunc_def->zseek64_file = fseek64_file_func;\n+    pzlib_filefunc_def->zclose_file = fclose_file_func;\n+    pzlib_filefunc_def->zerror_file = ferror_file_func;\n+    pzlib_filefunc_def->opaque = NULL;\n+}"}, {"sha": "8309c4cf8f4b512b144568a6d5b662343f35b3fc", "filename": "zlib/contrib/minizip/ioapi.h", "status": "modified", "additions": 153, "deletions": 28, "changes": 181, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fminizip%2Fioapi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fminizip%2Fioapi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fminizip%2Fioapi.h?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,13 +1,104 @@\n /* ioapi.h -- IO base function header for compress/uncompress .zip\n-   files using zlib + zip or unzip API\n+   part of the MiniZip project - ( http://www.winimage.com/zLibDll/minizip.html )\n \n-   Version 1.01e, February 12th, 2005\n+         Copyright (C) 1998-2010 Gilles Vollant (minizip) ( http://www.winimage.com/zLibDll/minizip.html )\n \n-   Copyright (C) 1998-2005 Gilles Vollant\n+         Modifications for Zip64 support\n+         Copyright (C) 2009-2010 Mathias Svensson ( http://result42.com )\n+\n+         For more info read MiniZip_info.txt\n+\n+         Changes\n+\n+    Oct-2009 - Defined ZPOS64_T to fpos_t on windows and u_int64_t on linux. (might need to find a better why for this)\n+    Oct-2009 - Change to fseeko64, ftello64 and fopen64 so large files would work on linux.\n+               More if/def section may be needed to support other platforms\n+    Oct-2009 - Defined fxxxx64 calls to normal fopen/ftell/fseek so they would compile on windows.\n+                          (but you should use iowin32.c for windows instead)\n+\n+*/\n+\n+#ifndef _ZLIBIOAPI64_H\n+#define _ZLIBIOAPI64_H\n+\n+#if (!defined(_WIN32)) && (!defined(WIN32))\n+\n+  // Linux needs this to support file operation on files larger then 4+GB\n+  // But might need better if/def to select just the platforms that needs them.\n+\n+        #ifndef __USE_FILE_OFFSET64\n+                #define __USE_FILE_OFFSET64\n+        #endif\n+        #ifndef __USE_LARGEFILE64\n+                #define __USE_LARGEFILE64\n+        #endif\n+        #ifndef _LARGEFILE64_SOURCE\n+                #define _LARGEFILE64_SOURCE\n+        #endif\n+        #ifndef _FILE_OFFSET_BIT\n+                #define _FILE_OFFSET_BIT 64\n+        #endif\n+#endif\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include \"zlib.h\"\n+\n+#if defined(USE_FILE32API)\n+#define fopen64 fopen\n+#define ftello64 ftell\n+#define fseeko64 fseek\n+#else\n+#ifdef _MSC_VER\n+ #define fopen64 fopen\n+ #if (_MSC_VER >= 1400) && (!(defined(NO_MSCVER_FILE64_FUNC)))\n+  #define ftello64 _ftelli64\n+  #define fseeko64 _fseeki64\n+ #else // old MSC\n+  #define ftello64 ftell\n+  #define fseeko64 fseek\n+ #endif\n+#endif\n+#endif\n+\n+/*\n+#ifndef ZPOS64_T\n+  #ifdef _WIN32\n+                #define ZPOS64_T fpos_t\n+  #else\n+    #include <stdint.h>\n+    #define ZPOS64_T uint64_t\n+  #endif\n+#endif\n */\n \n-#ifndef _ZLIBIOAPI_H\n-#define _ZLIBIOAPI_H\n+#ifdef HAVE_MINIZIP64_CONF_H\n+#include \"mz64conf.h\"\n+#endif\n+\n+/* a type choosen by DEFINE */\n+#ifdef HAVE_64BIT_INT_CUSTOM\n+typedef  64BIT_INT_CUSTOM_TYPE ZPOS64_T;\n+#else\n+#ifdef HAS_STDINT_H\n+#include \"stdint.h\"\n+typedef uint64_t ZPOS64_T;\n+#else\n+\n+\n+#if defined(_MSC_VER) || defined(__BORLANDC__)\n+typedef unsigned __int64 ZPOS64_T;\n+#else\n+typedef unsigned long long int ZPOS64_T;\n+#endif\n+#endif\n+#endif\n+\n+\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n \n \n #define ZLIB_FILEFUNC_SEEK_CUR (1)\n@@ -23,26 +114,27 @@\n \n \n #ifndef ZCALLBACK\n-\n-#if (defined(WIN32) || defined (WINDOWS) || defined (_WINDOWS)) && defined(CALLBACK) && defined (USEWINDOWS_CALLBACK)\n-#define ZCALLBACK CALLBACK\n-#else\n-#define ZCALLBACK\n-#endif\n+ #if (defined(WIN32) || defined(_WIN32) || defined (WINDOWS) || defined (_WINDOWS)) && defined(CALLBACK) && defined (USEWINDOWS_CALLBACK)\n+   #define ZCALLBACK CALLBACK\n+ #else\n+   #define ZCALLBACK\n+ #endif\n #endif\n \n-#ifdef __cplusplus\n-extern \"C\" {\n-#endif\n \n-typedef voidpf (ZCALLBACK *open_file_func) OF((voidpf opaque, const char* filename, int mode));\n-typedef uLong  (ZCALLBACK *read_file_func) OF((voidpf opaque, voidpf stream, void* buf, uLong size));\n-typedef uLong  (ZCALLBACK *write_file_func) OF((voidpf opaque, voidpf stream, const void* buf, uLong size));\n-typedef long   (ZCALLBACK *tell_file_func) OF((voidpf opaque, voidpf stream));\n-typedef long   (ZCALLBACK *seek_file_func) OF((voidpf opaque, voidpf stream, uLong offset, int origin));\n-typedef int    (ZCALLBACK *close_file_func) OF((voidpf opaque, voidpf stream));\n-typedef int    (ZCALLBACK *testerror_file_func) OF((voidpf opaque, voidpf stream));\n \n+\n+typedef voidpf   (ZCALLBACK *open_file_func)      OF((voidpf opaque, const char* filename, int mode));\n+typedef uLong    (ZCALLBACK *read_file_func)      OF((voidpf opaque, voidpf stream, void* buf, uLong size));\n+typedef uLong    (ZCALLBACK *write_file_func)     OF((voidpf opaque, voidpf stream, const void* buf, uLong size));\n+typedef int      (ZCALLBACK *close_file_func)     OF((voidpf opaque, voidpf stream));\n+typedef int      (ZCALLBACK *testerror_file_func) OF((voidpf opaque, voidpf stream));\n+\n+typedef long     (ZCALLBACK *tell_file_func)      OF((voidpf opaque, voidpf stream));\n+typedef long     (ZCALLBACK *seek_file_func)      OF((voidpf opaque, voidpf stream, uLong offset, int origin));\n+\n+\n+/* here is the \"old\" 32 bits structure structure */\n typedef struct zlib_filefunc_def_s\n {\n     open_file_func      zopen_file;\n@@ -55,21 +147,54 @@ typedef struct zlib_filefunc_def_s\n     voidpf              opaque;\n } zlib_filefunc_def;\n \n+typedef ZPOS64_T (ZCALLBACK *tell64_file_func)    OF((voidpf opaque, voidpf stream));\n+typedef long     (ZCALLBACK *seek64_file_func)    OF((voidpf opaque, voidpf stream, ZPOS64_T offset, int origin));\n+typedef voidpf   (ZCALLBACK *open64_file_func)    OF((voidpf opaque, const void* filename, int mode));\n \n+typedef struct zlib_filefunc64_def_s\n+{\n+    open64_file_func    zopen64_file;\n+    read_file_func      zread_file;\n+    write_file_func     zwrite_file;\n+    tell64_file_func    ztell64_file;\n+    seek64_file_func    zseek64_file;\n+    close_file_func     zclose_file;\n+    testerror_file_func zerror_file;\n+    voidpf              opaque;\n+} zlib_filefunc64_def;\n \n+void fill_fopen64_filefunc OF((zlib_filefunc64_def* pzlib_filefunc_def));\n void fill_fopen_filefunc OF((zlib_filefunc_def* pzlib_filefunc_def));\n \n-#define ZREAD(filefunc,filestream,buf,size) ((*((filefunc).zread_file))((filefunc).opaque,filestream,buf,size))\n-#define ZWRITE(filefunc,filestream,buf,size) ((*((filefunc).zwrite_file))((filefunc).opaque,filestream,buf,size))\n-#define ZTELL(filefunc,filestream) ((*((filefunc).ztell_file))((filefunc).opaque,filestream))\n-#define ZSEEK(filefunc,filestream,pos,mode) ((*((filefunc).zseek_file))((filefunc).opaque,filestream,pos,mode))\n-#define ZCLOSE(filefunc,filestream) ((*((filefunc).zclose_file))((filefunc).opaque,filestream))\n-#define ZERROR(filefunc,filestream) ((*((filefunc).zerror_file))((filefunc).opaque,filestream))\n+/* now internal definition, only for zip.c and unzip.h */\n+typedef struct zlib_filefunc64_32_def_s\n+{\n+    zlib_filefunc64_def zfile_func64;\n+    open_file_func      zopen32_file;\n+    tell_file_func      ztell32_file;\n+    seek_file_func      zseek32_file;\n+} zlib_filefunc64_32_def;\n+\n+\n+#define ZREAD64(filefunc,filestream,buf,size)     ((*((filefunc).zfile_func64.zread_file))   ((filefunc).zfile_func64.opaque,filestream,buf,size))\n+#define ZWRITE64(filefunc,filestream,buf,size)    ((*((filefunc).zfile_func64.zwrite_file))  ((filefunc).zfile_func64.opaque,filestream,buf,size))\n+//#define ZTELL64(filefunc,filestream)            ((*((filefunc).ztell64_file)) ((filefunc).opaque,filestream))\n+//#define ZSEEK64(filefunc,filestream,pos,mode)   ((*((filefunc).zseek64_file)) ((filefunc).opaque,filestream,pos,mode))\n+#define ZCLOSE64(filefunc,filestream)             ((*((filefunc).zfile_func64.zclose_file))  ((filefunc).zfile_func64.opaque,filestream))\n+#define ZERROR64(filefunc,filestream)             ((*((filefunc).zfile_func64.zerror_file))  ((filefunc).zfile_func64.opaque,filestream))\n \n+voidpf call_zopen64 OF((const zlib_filefunc64_32_def* pfilefunc,const void*filename,int mode));\n+long    call_zseek64 OF((const zlib_filefunc64_32_def* pfilefunc,voidpf filestream, ZPOS64_T offset, int origin));\n+ZPOS64_T call_ztell64 OF((const zlib_filefunc64_32_def* pfilefunc,voidpf filestream));\n+\n+void    fill_zlib_filefunc64_32_def_from_filefunc32(zlib_filefunc64_32_def* p_filefunc64_32,const zlib_filefunc_def* p_filefunc32);\n+\n+#define ZOPEN64(filefunc,filename,mode)         (call_zopen64((&(filefunc)),(filename),(mode)))\n+#define ZTELL64(filefunc,filestream)            (call_ztell64((&(filefunc)),(filestream)))\n+#define ZSEEK64(filefunc,filestream,pos,mode)   (call_zseek64((&(filefunc)),(filestream),(pos),(mode)))\n \n #ifdef __cplusplus\n }\n #endif\n \n #endif\n-"}, {"sha": "6a2a883be7225417ac14d9496e5604a51bf650f1", "filename": "zlib/contrib/minizip/iowin32.c", "status": "modified", "additions": 214, "deletions": 95, "changes": 309, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fminizip%2Fiowin32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fminizip%2Fiowin32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fminizip%2Fiowin32.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,10 +1,14 @@\n /* iowin32.c -- IO base function header for compress/uncompress .zip\n-   files using zlib + zip or unzip API\n-   This IO API version uses the Win32 API (for Microsoft Windows)\n+     Version 1.1, February 14h, 2010\n+     part of the MiniZip project - ( http://www.winimage.com/zLibDll/minizip.html )\n \n-   Version 1.01e, February 12th, 2005\n+         Copyright (C) 1998-2010 Gilles Vollant (minizip) ( http://www.winimage.com/zLibDll/minizip.html )\n+\n+         Modifications for Zip64 support\n+         Copyright (C) 2009-2010 Mathias Svensson ( http://result42.com )\n+\n+     For more info read MiniZip_info.txt\n \n-   Copyright (C) 1998-2005 Gilles Vollant\n */\n \n #include <stdlib.h>\n@@ -21,148 +25,170 @@\n #define INVALID_SET_FILE_POINTER ((DWORD)-1)\n #endif\n \n-voidpf ZCALLBACK win32_open_file_func OF((\n-   voidpf opaque,\n-   const char* filename,\n-   int mode));\n-\n-uLong ZCALLBACK win32_read_file_func OF((\n-   voidpf opaque,\n-   voidpf stream,\n-   void* buf,\n-   uLong size));\n-\n-uLong ZCALLBACK win32_write_file_func OF((\n-   voidpf opaque,\n-   voidpf stream,\n-   const void* buf,\n-   uLong size));\n-\n-long ZCALLBACK win32_tell_file_func OF((\n-   voidpf opaque,\n-   voidpf stream));\n-\n-long ZCALLBACK win32_seek_file_func OF((\n-   voidpf opaque,\n-   voidpf stream,\n-   uLong offset,\n-   int origin));\n-\n-int ZCALLBACK win32_close_file_func OF((\n-   voidpf opaque,\n-   voidpf stream));\n-\n-int ZCALLBACK win32_error_file_func OF((\n-   voidpf opaque,\n-   voidpf stream));\n+voidpf  ZCALLBACK win32_open_file_func  OF((voidpf opaque, const char* filename, int mode));\n+uLong   ZCALLBACK win32_read_file_func  OF((voidpf opaque, voidpf stream, void* buf, uLong size));\n+uLong   ZCALLBACK win32_write_file_func OF((voidpf opaque, voidpf stream, const void* buf, uLong size));\n+ZPOS64_T ZCALLBACK win32_tell64_file_func  OF((voidpf opaque, voidpf stream));\n+long    ZCALLBACK win32_seek64_file_func  OF((voidpf opaque, voidpf stream, ZPOS64_T offset, int origin));\n+int     ZCALLBACK win32_close_file_func OF((voidpf opaque, voidpf stream));\n+int     ZCALLBACK win32_error_file_func OF((voidpf opaque, voidpf stream));\n \n typedef struct\n {\n     HANDLE hf;\n     int error;\n } WIN32FILE_IOWIN;\n \n-voidpf ZCALLBACK win32_open_file_func (opaque, filename, mode)\n-   voidpf opaque;\n-   const char* filename;\n-   int mode;\n-{\n-    const char* mode_fopen = NULL;\n-    DWORD dwDesiredAccess,dwCreationDisposition,dwShareMode,dwFlagsAndAttributes ;\n-    HANDLE hFile = 0;\n-    voidpf ret=NULL;\n \n-    dwDesiredAccess = dwShareMode = dwFlagsAndAttributes = 0;\n+static void win32_translate_open_mode(int mode,\n+                                      DWORD* lpdwDesiredAccess,\n+                                      DWORD* lpdwCreationDisposition,\n+                                      DWORD* lpdwShareMode,\n+                                      DWORD* lpdwFlagsAndAttributes)\n+{\n+    *lpdwDesiredAccess = *lpdwShareMode = *lpdwFlagsAndAttributes = *lpdwCreationDisposition = 0;\n \n     if ((mode & ZLIB_FILEFUNC_MODE_READWRITEFILTER)==ZLIB_FILEFUNC_MODE_READ)\n     {\n-        dwDesiredAccess = GENERIC_READ;\n-        dwCreationDisposition = OPEN_EXISTING;\n-        dwShareMode = FILE_SHARE_READ;\n+        *lpdwDesiredAccess = GENERIC_READ;\n+        *lpdwCreationDisposition = OPEN_EXISTING;\n+        *lpdwShareMode = FILE_SHARE_READ;\n     }\n-    else\n-    if (mode & ZLIB_FILEFUNC_MODE_EXISTING)\n+    else if (mode & ZLIB_FILEFUNC_MODE_EXISTING)\n     {\n-        dwDesiredAccess = GENERIC_WRITE | GENERIC_READ;\n-        dwCreationDisposition = OPEN_EXISTING;\n+        *lpdwDesiredAccess = GENERIC_WRITE | GENERIC_READ;\n+        *lpdwCreationDisposition = OPEN_EXISTING;\n     }\n-    else\n-    if (mode & ZLIB_FILEFUNC_MODE_CREATE)\n+    else if (mode & ZLIB_FILEFUNC_MODE_CREATE)\n     {\n-        dwDesiredAccess = GENERIC_WRITE | GENERIC_READ;\n-        dwCreationDisposition = CREATE_ALWAYS;\n+        *lpdwDesiredAccess = GENERIC_WRITE | GENERIC_READ;\n+        *lpdwCreationDisposition = CREATE_ALWAYS;\n     }\n+}\n \n-    if ((filename!=NULL) && (dwDesiredAccess != 0))\n-        hFile = CreateFile((LPCTSTR)filename, dwDesiredAccess, dwShareMode, NULL,\n-                      dwCreationDisposition, dwFlagsAndAttributes, NULL);\n-\n-    if (hFile == INVALID_HANDLE_VALUE)\n-        hFile = NULL;\n+static voidpf win32_build_iowin(HANDLE hFile)\n+{\n+    voidpf ret=NULL;\n \n-    if (hFile != NULL)\n+    if ((hFile != NULL) && (hFile != INVALID_HANDLE_VALUE))\n     {\n         WIN32FILE_IOWIN w32fiow;\n         w32fiow.hf = hFile;\n         w32fiow.error = 0;\n         ret = malloc(sizeof(WIN32FILE_IOWIN));\n+\n         if (ret==NULL)\n             CloseHandle(hFile);\n-        else *((WIN32FILE_IOWIN*)ret) = w32fiow;\n+        else\n+            *((WIN32FILE_IOWIN*)ret) = w32fiow;\n     }\n     return ret;\n }\n \n+voidpf ZCALLBACK win32_open64_file_func (voidpf opaque,const void* filename,int mode)\n+{\n+    const char* mode_fopen = NULL;\n+    DWORD dwDesiredAccess,dwCreationDisposition,dwShareMode,dwFlagsAndAttributes ;\n+    HANDLE hFile = NULL;\n+\n+    win32_translate_open_mode(mode,&dwDesiredAccess,&dwCreationDisposition,&dwShareMode,&dwFlagsAndAttributes);\n+\n+    if ((filename!=NULL) && (dwDesiredAccess != 0))\n+        hFile = CreateFile((LPCTSTR)filename, dwDesiredAccess, dwShareMode, NULL, dwCreationDisposition, dwFlagsAndAttributes, NULL);\n+\n+    return win32_build_iowin(hFile);\n+}\n+\n \n-uLong ZCALLBACK win32_read_file_func (opaque, stream, buf, size)\n-   voidpf opaque;\n-   voidpf stream;\n-   void* buf;\n-   uLong size;\n+voidpf ZCALLBACK win32_open64_file_funcA (voidpf opaque,const void* filename,int mode)\n+{\n+    const char* mode_fopen = NULL;\n+    DWORD dwDesiredAccess,dwCreationDisposition,dwShareMode,dwFlagsAndAttributes ;\n+    HANDLE hFile = NULL;\n+\n+    win32_translate_open_mode(mode,&dwDesiredAccess,&dwCreationDisposition,&dwShareMode,&dwFlagsAndAttributes);\n+\n+    if ((filename!=NULL) && (dwDesiredAccess != 0))\n+        hFile = CreateFileA((LPCSTR)filename, dwDesiredAccess, dwShareMode, NULL, dwCreationDisposition, dwFlagsAndAttributes, NULL);\n+\n+    return win32_build_iowin(hFile);\n+}\n+\n+\n+voidpf ZCALLBACK win32_open64_file_funcW (voidpf opaque,const void* filename,int mode)\n+{\n+    const char* mode_fopen = NULL;\n+    DWORD dwDesiredAccess,dwCreationDisposition,dwShareMode,dwFlagsAndAttributes ;\n+    HANDLE hFile = NULL;\n+\n+    win32_translate_open_mode(mode,&dwDesiredAccess,&dwCreationDisposition,&dwShareMode,&dwFlagsAndAttributes);\n+\n+    if ((filename!=NULL) && (dwDesiredAccess != 0))\n+        hFile = CreateFileW((LPCWSTR)filename, dwDesiredAccess, dwShareMode, NULL, dwCreationDisposition, dwFlagsAndAttributes, NULL);\n+\n+    return win32_build_iowin(hFile);\n+}\n+\n+\n+voidpf ZCALLBACK win32_open_file_func (voidpf opaque,const char* filename,int mode)\n+{\n+    const char* mode_fopen = NULL;\n+    DWORD dwDesiredAccess,dwCreationDisposition,dwShareMode,dwFlagsAndAttributes ;\n+    HANDLE hFile = NULL;\n+\n+    win32_translate_open_mode(mode,&dwDesiredAccess,&dwCreationDisposition,&dwShareMode,&dwFlagsAndAttributes);\n+\n+    if ((filename!=NULL) && (dwDesiredAccess != 0))\n+        hFile = CreateFile((LPCTSTR)filename, dwDesiredAccess, dwShareMode, NULL, dwCreationDisposition, dwFlagsAndAttributes, NULL);\n+\n+    return win32_build_iowin(hFile);\n+}\n+\n+\n+uLong ZCALLBACK win32_read_file_func (voidpf opaque, voidpf stream, void* buf,uLong size)\n {\n     uLong ret=0;\n     HANDLE hFile = NULL;\n     if (stream!=NULL)\n         hFile = ((WIN32FILE_IOWIN*)stream) -> hf;\n+\n     if (hFile != NULL)\n+    {\n         if (!ReadFile(hFile, buf, size, &ret, NULL))\n         {\n             DWORD dwErr = GetLastError();\n             if (dwErr == ERROR_HANDLE_EOF)\n                 dwErr = 0;\n             ((WIN32FILE_IOWIN*)stream) -> error=(int)dwErr;\n         }\n+    }\n \n     return ret;\n }\n \n \n-uLong ZCALLBACK win32_write_file_func (opaque, stream, buf, size)\n-   voidpf opaque;\n-   voidpf stream;\n-   const void* buf;\n-   uLong size;\n+uLong ZCALLBACK win32_write_file_func (voidpf opaque,voidpf stream,const void* buf,uLong size)\n {\n     uLong ret=0;\n     HANDLE hFile = NULL;\n     if (stream!=NULL)\n         hFile = ((WIN32FILE_IOWIN*)stream) -> hf;\n \n-    if (hFile !=NULL)\n+    if (hFile != NULL)\n+    {\n         if (!WriteFile(hFile, buf, size, &ret, NULL))\n         {\n             DWORD dwErr = GetLastError();\n             if (dwErr == ERROR_HANDLE_EOF)\n                 dwErr = 0;\n             ((WIN32FILE_IOWIN*)stream) -> error=(int)dwErr;\n         }\n+    }\n \n     return ret;\n }\n \n-long ZCALLBACK win32_tell_file_func (opaque, stream)\n-   voidpf opaque;\n-   voidpf stream;\n+long ZCALLBACK win32_tell_file_func (voidpf opaque,voidpf stream)\n {\n     long ret=-1;\n     HANDLE hFile = NULL;\n@@ -183,11 +209,32 @@ long ZCALLBACK win32_tell_file_func (opaque, stream)\n     return ret;\n }\n \n-long ZCALLBACK win32_seek_file_func (opaque, stream, offset, origin)\n-   voidpf opaque;\n-   voidpf stream;\n-   uLong offset;\n-   int origin;\n+ZPOS64_T ZCALLBACK win32_tell64_file_func (voidpf opaque, voidpf stream)\n+{\n+    ZPOS64_T ret= (ZPOS64_T)-1;\n+    HANDLE hFile = NULL;\n+    if (stream!=NULL)\n+        hFile = ((WIN32FILE_IOWIN*)stream)->hf;\n+\n+    if (hFile)\n+    {\n+        LARGE_INTEGER li;\n+        li.QuadPart = 0;\n+        li.u.LowPart = SetFilePointer(hFile, li.u.LowPart, &li.u.HighPart, FILE_CURRENT);\n+        if ( (li.LowPart == 0xFFFFFFFF) && (GetLastError() != NO_ERROR))\n+        {\n+            DWORD dwErr = GetLastError();\n+            ((WIN32FILE_IOWIN*)stream) -> error=(int)dwErr;\n+            ret = (ZPOS64_T)-1;\n+        }\n+        else\n+            ret=li.QuadPart;\n+    }\n+    return ret;\n+}\n+\n+\n+long ZCALLBACK win32_seek_file_func (voidpf opaque,voidpf stream,uLong offset,int origin)\n {\n     DWORD dwMoveMethod=0xFFFFFFFF;\n     HANDLE hFile = NULL;\n@@ -224,9 +271,46 @@ long ZCALLBACK win32_seek_file_func (opaque, stream, offset, origin)\n     return ret;\n }\n \n-int ZCALLBACK win32_close_file_func (opaque, stream)\n-   voidpf opaque;\n-   voidpf stream;\n+long ZCALLBACK win32_seek64_file_func (voidpf opaque, voidpf stream,ZPOS64_T offset,int origin)\n+{\n+    DWORD dwMoveMethod=0xFFFFFFFF;\n+    HANDLE hFile = NULL;\n+    long ret=-1;\n+\n+    if (stream!=NULL)\n+        hFile = ((WIN32FILE_IOWIN*)stream)->hf;\n+\n+    switch (origin)\n+    {\n+        case ZLIB_FILEFUNC_SEEK_CUR :\n+            dwMoveMethod = FILE_CURRENT;\n+            break;\n+        case ZLIB_FILEFUNC_SEEK_END :\n+            dwMoveMethod = FILE_END;\n+            break;\n+        case ZLIB_FILEFUNC_SEEK_SET :\n+            dwMoveMethod = FILE_BEGIN;\n+            break;\n+        default: return -1;\n+    }\n+\n+    if (hFile)\n+    {\n+        LARGE_INTEGER* li = (LARGE_INTEGER*)&offset;\n+        DWORD dwSet = SetFilePointer(hFile, li->u.LowPart, &li->u.HighPart, dwMoveMethod);\n+        if (dwSet == INVALID_SET_FILE_POINTER)\n+        {\n+            DWORD dwErr = GetLastError();\n+            ((WIN32FILE_IOWIN*)stream) -> error=(int)dwErr;\n+            ret = -1;\n+        }\n+        else\n+            ret=0;\n+    }\n+    return ret;\n+}\n+\n+int ZCALLBACK win32_close_file_func (voidpf opaque, voidpf stream)\n {\n     int ret=-1;\n \n@@ -244,9 +328,7 @@ int ZCALLBACK win32_close_file_func (opaque, stream)\n     return ret;\n }\n \n-int ZCALLBACK win32_error_file_func (opaque, stream)\n-   voidpf opaque;\n-   voidpf stream;\n+int ZCALLBACK win32_error_file_func (voidpf opaque,voidpf stream)\n {\n     int ret=-1;\n     if (stream!=NULL)\n@@ -256,8 +338,7 @@ int ZCALLBACK win32_error_file_func (opaque, stream)\n     return ret;\n }\n \n-void fill_win32_filefunc (pzlib_filefunc_def)\n-  zlib_filefunc_def* pzlib_filefunc_def;\n+void fill_win32_filefunc (zlib_filefunc_def* pzlib_filefunc_def)\n {\n     pzlib_filefunc_def->zopen_file = win32_open_file_func;\n     pzlib_filefunc_def->zread_file = win32_read_file_func;\n@@ -266,5 +347,43 @@ void fill_win32_filefunc (pzlib_filefunc_def)\n     pzlib_filefunc_def->zseek_file = win32_seek_file_func;\n     pzlib_filefunc_def->zclose_file = win32_close_file_func;\n     pzlib_filefunc_def->zerror_file = win32_error_file_func;\n-    pzlib_filefunc_def->opaque=NULL;\n+    pzlib_filefunc_def->opaque = NULL;\n+}\n+\n+void fill_win32_filefunc64(zlib_filefunc64_def* pzlib_filefunc_def)\n+{\n+    pzlib_filefunc_def->zopen64_file = win32_open64_file_func;\n+    pzlib_filefunc_def->zread_file = win32_read_file_func;\n+    pzlib_filefunc_def->zwrite_file = win32_write_file_func;\n+    pzlib_filefunc_def->ztell64_file = win32_tell64_file_func;\n+    pzlib_filefunc_def->zseek64_file = win32_seek64_file_func;\n+    pzlib_filefunc_def->zclose_file = win32_close_file_func;\n+    pzlib_filefunc_def->zerror_file = win32_error_file_func;\n+    pzlib_filefunc_def->opaque = NULL;\n+}\n+\n+\n+void fill_win32_filefunc64A(zlib_filefunc64_def* pzlib_filefunc_def)\n+{\n+    pzlib_filefunc_def->zopen64_file = win32_open64_file_funcA;\n+    pzlib_filefunc_def->zread_file = win32_read_file_func;\n+    pzlib_filefunc_def->zwrite_file = win32_write_file_func;\n+    pzlib_filefunc_def->ztell64_file = win32_tell64_file_func;\n+    pzlib_filefunc_def->zseek64_file = win32_seek64_file_func;\n+    pzlib_filefunc_def->zclose_file = win32_close_file_func;\n+    pzlib_filefunc_def->zerror_file = win32_error_file_func;\n+    pzlib_filefunc_def->opaque = NULL;\n+}\n+\n+\n+void fill_win32_filefunc64W(zlib_filefunc64_def* pzlib_filefunc_def)\n+{\n+    pzlib_filefunc_def->zopen64_file = win32_open64_file_funcW;\n+    pzlib_filefunc_def->zread_file = win32_read_file_func;\n+    pzlib_filefunc_def->zwrite_file = win32_write_file_func;\n+    pzlib_filefunc_def->ztell64_file = win32_tell64_file_func;\n+    pzlib_filefunc_def->zseek64_file = win32_seek64_file_func;\n+    pzlib_filefunc_def->zclose_file = win32_close_file_func;\n+    pzlib_filefunc_def->zerror_file = win32_error_file_func;\n+    pzlib_filefunc_def->opaque = NULL;\n }"}, {"sha": "0ca0969a7d09a487b1b2b5d74b805837a3bf2e96", "filename": "zlib/contrib/minizip/iowin32.h", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fminizip%2Fiowin32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fminizip%2Fiowin32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fminizip%2Fiowin32.h?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,10 +1,14 @@\n /* iowin32.h -- IO base function header for compress/uncompress .zip\n-   files using zlib + zip or unzip API\n-   This IO API version uses the Win32 API (for Microsoft Windows)\n+     Version 1.1, February 14h, 2010\n+     part of the MiniZip project - ( http://www.winimage.com/zLibDll/minizip.html )\n \n-   Version 1.01e, February 12th, 2005\n+         Copyright (C) 1998-2010 Gilles Vollant (minizip) ( http://www.winimage.com/zLibDll/minizip.html )\n+\n+         Modifications for Zip64 support\n+         Copyright (C) 2009-2010 Mathias Svensson ( http://result42.com )\n+\n+         For more info read MiniZip_info.txt\n \n-   Copyright (C) 1998-2005 Gilles Vollant\n */\n \n #include <windows.h>\n@@ -15,6 +19,9 @@ extern \"C\" {\n #endif\n \n void fill_win32_filefunc OF((zlib_filefunc_def* pzlib_filefunc_def));\n+void fill_win32_filefunc64 OF((zlib_filefunc64_def* pzlib_filefunc_def));\n+void fill_win32_filefunc64A OF((zlib_filefunc64_def* pzlib_filefunc_def));\n+void fill_win32_filefunc64W OF((zlib_filefunc64_def* pzlib_filefunc_def));\n \n #ifdef __cplusplus\n }"}, {"sha": "9ac13a98fa5fb4769bdd1e818dd1d07d83f79a8b", "filename": "zlib/contrib/minizip/make_vms.com", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fminizip%2Fmake_vms.com", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fminizip%2Fmake_vms.com", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fminizip%2Fmake_vms.com?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -0,0 +1,25 @@\n+$ if f$search(\"ioapi.h_orig\") .eqs. \"\" then copy ioapi.h ioapi.h_orig\n+$ open/write zdef vmsdefs.h\n+$ copy sys$input: zdef\n+$ deck\n+#define unix\n+#define fill_zlib_filefunc64_32_def_from_filefunc32 fillzffunc64from\n+#define Write_Zip64EndOfCentralDirectoryLocator Write_Zip64EoDLocator\n+#define Write_Zip64EndOfCentralDirectoryRecord Write_Zip64EoDRecord\n+#define Write_EndOfCentralDirectoryRecord Write_EoDRecord\n+$ eod\n+$ close zdef\n+$ copy vmsdefs.h,ioapi.h_orig ioapi.h\n+$ cc/include=[--]/prefix=all ioapi.c\n+$ cc/include=[--]/prefix=all miniunz.c\n+$ cc/include=[--]/prefix=all unzip.c\n+$ cc/include=[--]/prefix=all minizip.c\n+$ cc/include=[--]/prefix=all zip.c\n+$ link miniunz,unzip,ioapi,[--]libz.olb/lib\n+$ link minizip,zip,ioapi,[--]libz.olb/lib\n+$ mcr []minizip test minizip_info.txt\n+$ mcr []miniunz -l test.zip\n+$ rename minizip_info.txt; minizip_info.txt_old\n+$ mcr []miniunz test.zip\n+$ delete test.zip;*\n+$exit"}, {"sha": "9ed009fbd9947b39212123c072c489983079dc36", "filename": "zlib/contrib/minizip/miniunz.c", "status": "modified", "additions": 102, "deletions": 39, "changes": 141, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fminizip%2Fminiunz.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fminizip%2Fminiunz.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fminizip%2Fminiunz.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,10 +1,31 @@\n /*\n    miniunz.c\n-   Version 1.01e, February 12th, 2005\n+   Version 1.1, February 14h, 2010\n+   sample part of the MiniZip project - ( http://www.winimage.com/zLibDll/minizip.html )\n \n-   Copyright (C) 1998-2005 Gilles Vollant\n+         Copyright (C) 1998-2010 Gilles Vollant (minizip) ( http://www.winimage.com/zLibDll/minizip.html )\n+\n+         Modifications of Unzip for Zip64\n+         Copyright (C) 2007-2008 Even Rouault\n+\n+         Modifications for Zip64 support on both zip and unzip\n+         Copyright (C) 2009-2010 Mathias Svensson ( http://result42.com )\n */\n \n+#ifndef _WIN32\n+        #ifndef __USE_FILE_OFFSET64\n+                #define __USE_FILE_OFFSET64\n+        #endif\n+        #ifndef __USE_LARGEFILE64\n+                #define __USE_LARGEFILE64\n+        #endif\n+        #ifndef _LARGEFILE64_SOURCE\n+                #define _LARGEFILE64_SOURCE\n+        #endif\n+        #ifndef _FILE_OFFSET_BIT\n+                #define _FILE_OFFSET_BIT 64\n+        #endif\n+#endif\n \n #include <stdio.h>\n #include <stdlib.h>\n@@ -27,7 +48,7 @@\n #define WRITEBUFFERSIZE (8192)\n #define MAXFILENAME (256)\n \n-#ifdef WIN32\n+#ifdef _WIN32\n #define USEWIN32IOAPI\n #include \"iowin32.h\"\n #endif\n@@ -51,11 +72,11 @@ void change_file_date(filename,dosdate,tmu_date)\n     uLong dosdate;\n     tm_unz tmu_date;\n {\n-#ifdef WIN32\n+#ifdef _WIN32\n   HANDLE hFile;\n   FILETIME ftm,ftLocal,ftCreate,ftLastAcc,ftLastWrite;\n \n-  hFile = CreateFile(filename,GENERIC_READ | GENERIC_WRITE,\n+  hFile = CreateFileA(filename,GENERIC_READ | GENERIC_WRITE,\n                       0,NULL,OPEN_EXISTING,0,NULL);\n   GetFileTime(hFile,&ftCreate,&ftLastAcc,&ftLastWrite);\n   DosDateTimeToFileTime((WORD)(dosdate>>16),(WORD)dosdate,&ftLocal);\n@@ -91,8 +112,8 @@ int mymkdir(dirname)\n     const char* dirname;\n {\n     int ret=0;\n-#ifdef WIN32\n-    ret = mkdir(dirname);\n+#ifdef _WIN32\n+    ret = _mkdir(dirname);\n #else\n #ifdef unix\n     ret = mkdir (dirname,0775);\n@@ -112,6 +133,11 @@ int makedir (newdir)\n     return 0;\n \n   buffer = (char*)malloc(len+1);\n+        if (buffer==NULL)\n+        {\n+                printf(\"Error allocating memory\\n\");\n+                return UNZ_INTERNALERROR;\n+        }\n   strcpy(buffer,newdir);\n \n   if (buffer[len-1] == '/') {\n@@ -164,34 +190,61 @@ void do_help()\n            \"  -p  extract crypted file using password\\n\\n\");\n }\n \n+void Display64BitsSize(ZPOS64_T n, int size_char)\n+{\n+  /* to avoid compatibility problem , we do here the conversion */\n+  char number[21];\n+  int offset=19;\n+  int pos_string = 19;\n+  number[20]=0;\n+  for (;;) {\n+      number[offset]=(char)((n%10)+'0');\n+      if (number[offset] != '0')\n+          pos_string=offset;\n+      n/=10;\n+      if (offset==0)\n+          break;\n+      offset--;\n+  }\n+  {\n+      int size_display_string = 19-pos_string;\n+      while (size_char > size_display_string)\n+      {\n+          size_char--;\n+          printf(\" \");\n+      }\n+  }\n+\n+  printf(\"%s\",&number[pos_string]);\n+}\n \n int do_list(uf)\n     unzFile uf;\n {\n     uLong i;\n-    unz_global_info gi;\n+    unz_global_info64 gi;\n     int err;\n \n-    err = unzGetGlobalInfo (uf,&gi);\n+    err = unzGetGlobalInfo64(uf,&gi);\n     if (err!=UNZ_OK)\n         printf(\"error %d with zipfile in unzGetGlobalInfo \\n\",err);\n-    printf(\" Length  Method   Size  Ratio   Date    Time   CRC-32     Name\\n\");\n-    printf(\" ------  ------   ----  -----   ----    ----   ------     ----\\n\");\n+    printf(\"  Length  Method     Size Ratio   Date    Time   CRC-32     Name\\n\");\n+    printf(\"  ------  ------     ---- -----   ----    ----   ------     ----\\n\");\n     for (i=0;i<gi.number_entry;i++)\n     {\n         char filename_inzip[256];\n-        unz_file_info file_info;\n+        unz_file_info64 file_info;\n         uLong ratio=0;\n         const char *string_method;\n         char charCrypt=' ';\n-        err = unzGetCurrentFileInfo(uf,&file_info,filename_inzip,sizeof(filename_inzip),NULL,0,NULL,0);\n+        err = unzGetCurrentFileInfo64(uf,&file_info,filename_inzip,sizeof(filename_inzip),NULL,0,NULL,0);\n         if (err!=UNZ_OK)\n         {\n             printf(\"error %d with zipfile in unzGetCurrentFileInfo\\n\",err);\n             break;\n         }\n         if (file_info.uncompressed_size>0)\n-            ratio = (file_info.compressed_size*100)/file_info.uncompressed_size;\n+            ratio = (uLong)((file_info.compressed_size*100)/file_info.uncompressed_size);\n \n         /* display a '*' if the file is crypted */\n         if ((file_info.flag & 1) != 0)\n@@ -210,13 +263,18 @@ int do_list(uf)\n             else if ((iLevel==2) || (iLevel==3))\n               string_method=\"Defl:F\"; /* 2:fast , 3 : extra fast*/\n         }\n+        else\n+        if (file_info.compression_method==Z_BZIP2ED)\n+        {\n+              string_method=\"BZip2 \";\n+        }\n         else\n             string_method=\"Unkn. \";\n \n-        printf(\"%7lu  %6s%c%7lu %3lu%%  %2.2lu-%2.2lu-%2.2lu  %2.2lu:%2.2lu  %8.8lx   %s\\n\",\n-                file_info.uncompressed_size,string_method,\n-                charCrypt,\n-                file_info.compressed_size,\n+        Display64BitsSize(file_info.uncompressed_size,7);\n+        printf(\"  %6s%c\",string_method,charCrypt);\n+        Display64BitsSize(file_info.compressed_size,7);\n+        printf(\" %3lu%%  %2.2lu-%2.2lu-%2.2lu  %2.2lu:%2.2lu  %8.8lx   %s\\n\",\n                 ratio,\n                 (uLong)file_info.tmu_date.tm_mon + 1,\n                 (uLong)file_info.tmu_date.tm_mday,\n@@ -252,9 +310,9 @@ int do_extract_currentfile(uf,popt_extract_without_path,popt_overwrite,password)\n     void* buf;\n     uInt size_buf;\n \n-    unz_file_info file_info;\n+    unz_file_info64 file_info;\n     uLong ratio=0;\n-    err = unzGetCurrentFileInfo(uf,&file_info,filename_inzip,sizeof(filename_inzip),NULL,0,NULL,0);\n+    err = unzGetCurrentFileInfo64(uf,&file_info,filename_inzip,sizeof(filename_inzip),NULL,0,NULL,0);\n \n     if (err!=UNZ_OK)\n     {\n@@ -306,7 +364,7 @@ int do_extract_currentfile(uf,popt_extract_without_path,popt_overwrite,password)\n         {\n             char rep=0;\n             FILE* ftestexist;\n-            ftestexist = fopen(write_filename,\"rb\");\n+            ftestexist = fopen64(write_filename,\"rb\");\n             if (ftestexist!=NULL)\n             {\n                 fclose(ftestexist);\n@@ -317,7 +375,7 @@ int do_extract_currentfile(uf,popt_extract_without_path,popt_overwrite,password)\n \n                     printf(\"The file %s exists. Overwrite ? [y]es, [n]o, [A]ll: \",write_filename);\n                     ret = scanf(\"%1s\",answer);\n-                    if (ret != 1) \n+                    if (ret != 1)\n                     {\n                        exit(EXIT_FAILURE);\n                     }\n@@ -337,7 +395,7 @@ int do_extract_currentfile(uf,popt_extract_without_path,popt_overwrite,password)\n \n         if ((skip==0) && (err==UNZ_OK))\n         {\n-            fout=fopen(write_filename,\"wb\");\n+            fout=fopen64(write_filename,\"wb\");\n \n             /* some zipfile don't contain directory alone before file */\n             if ((fout==NULL) && ((*popt_extract_without_path)==0) &&\n@@ -347,7 +405,7 @@ int do_extract_currentfile(uf,popt_extract_without_path,popt_overwrite,password)\n                 *(filename_withoutpath-1)='\\0';\n                 makedir(write_filename);\n                 *(filename_withoutpath-1)=c;\n-                fout=fopen(write_filename,\"wb\");\n+                fout=fopen64(write_filename,\"wb\");\n             }\n \n             if (fout==NULL)\n@@ -409,11 +467,11 @@ int do_extract(uf,opt_extract_without_path,opt_overwrite,password)\n     const char* password;\n {\n     uLong i;\n-    unz_global_info gi;\n+    unz_global_info64 gi;\n     int err;\n     FILE* fout=NULL;\n \n-    err = unzGetGlobalInfo (uf,&gi);\n+    err = unzGetGlobalInfo64(uf,&gi);\n     if (err!=UNZ_OK)\n         printf(\"error %d with zipfile in unzGetGlobalInfo \\n\",err);\n \n@@ -470,6 +528,7 @@ int main(argc,argv)\n     const char *password=NULL;\n     char filename_try[MAXFILENAME+16] = \"\";\n     int i;\n+    int ret_value=0;\n     int opt_do_list=0;\n     int opt_do_extract=1;\n     int opt_do_extract_withoutpath=0;\n@@ -532,26 +591,26 @@ int main(argc,argv)\n     {\n \n #        ifdef USEWIN32IOAPI\n-        zlib_filefunc_def ffunc;\n+        zlib_filefunc64_def ffunc;\n #        endif\n \n         strncpy(filename_try, zipfilename,MAXFILENAME-1);\n         /* strncpy doesnt append the trailing NULL, of the string is too long. */\n         filename_try[ MAXFILENAME ] = '\\0';\n \n #        ifdef USEWIN32IOAPI\n-        fill_win32_filefunc(&ffunc);\n-        uf = unzOpen2(zipfilename,&ffunc);\n+        fill_win32_filefunc64A(&ffunc);\n+        uf = unzOpen2_64(zipfilename,&ffunc);\n #        else\n-        uf = unzOpen(zipfilename);\n+        uf = unzOpen64(zipfilename);\n #        endif\n         if (uf==NULL)\n         {\n             strcat(filename_try,\".zip\");\n #            ifdef USEWIN32IOAPI\n-            uf = unzOpen2(filename_try,&ffunc);\n+            uf = unzOpen2_64(filename_try,&ffunc);\n #            else\n-            uf = unzOpen(filename_try);\n+            uf = unzOpen64(filename_try);\n #            endif\n         }\n     }\n@@ -564,22 +623,26 @@ int main(argc,argv)\n     printf(\"%s opened\\n\",filename_try);\n \n     if (opt_do_list==1)\n-        return do_list(uf);\n+        ret_value = do_list(uf);\n     else if (opt_do_extract==1)\n     {\n-        if (opt_extractdir && chdir(dirname)) \n+#ifdef _WIN32\n+        if (opt_extractdir && _chdir(dirname))\n+#else\n+        if (opt_extractdir && chdir(dirname))\n+#endif\n         {\n           printf(\"Error changing into %s, aborting\\n\", dirname);\n           exit(-1);\n         }\n \n         if (filename_to_extract == NULL)\n-            return do_extract(uf,opt_do_extract_withoutpath,opt_overwrite,password);\n+            ret_value = do_extract(uf, opt_do_extract_withoutpath, opt_overwrite, password);\n         else\n-            return do_extract_onefile(uf,filename_to_extract,\n-                                      opt_do_extract_withoutpath,opt_overwrite,password);\n+            ret_value = do_extract_onefile(uf, filename_to_extract, opt_do_extract_withoutpath, opt_overwrite, password);\n     }\n-    unzCloseCurrentFile(uf);\n \n-    return 0;\n+    unzClose(uf);\n+\n+    return ret_value;\n }"}, {"sha": "7a4fa5a643ebf9ca484cc0654eb10071d16ea885", "filename": "zlib/contrib/minizip/minizip.c", "status": "modified", "additions": 109, "deletions": 22, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fminizip%2Fminizip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fminizip%2Fminizip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fminizip%2Fminizip.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,10 +1,33 @@\n /*\n    minizip.c\n-   Version 1.01e, February 12th, 2005\n+   Version 1.1, February 14h, 2010\n+   sample part of the MiniZip project - ( http://www.winimage.com/zLibDll/minizip.html )\n \n-   Copyright (C) 1998-2005 Gilles Vollant\n+         Copyright (C) 1998-2010 Gilles Vollant (minizip) ( http://www.winimage.com/zLibDll/minizip.html )\n+\n+         Modifications of Unzip for Zip64\n+         Copyright (C) 2007-2008 Even Rouault\n+\n+         Modifications for Zip64 support on both zip and unzip\n+         Copyright (C) 2009-2010 Mathias Svensson ( http://result42.com )\n */\n \n+\n+#ifndef _WIN32\n+        #ifndef __USE_FILE_OFFSET64\n+                #define __USE_FILE_OFFSET64\n+        #endif\n+        #ifndef __USE_LARGEFILE64\n+                #define __USE_LARGEFILE64\n+        #endif\n+        #ifndef _LARGEFILE64_SOURCE\n+                #define _LARGEFILE64_SOURCE\n+        #endif\n+        #ifndef _FILE_OFFSET_BIT\n+                #define _FILE_OFFSET_BIT 64\n+        #endif\n+#endif\n+\n #include <stdio.h>\n #include <stdlib.h>\n #include <string.h>\n@@ -24,17 +47,17 @@\n \n #include \"zip.h\"\n \n-#ifdef WIN32\n-#define USEWIN32IOAPI\n-#include \"iowin32.h\"\n+#ifdef _WIN32\n+        #define USEWIN32IOAPI\n+        #include \"iowin32.h\"\n #endif\n \n \n \n #define WRITEBUFFERSIZE (16384)\n #define MAXFILENAME (256)\n \n-#ifdef WIN32\n+#ifdef _WIN32\n uLong filetime(f, tmzip, dt)\n     char *f;                /* name of file to get info on */\n     tm_zip *tmzip;             /* return value: access, modific. and creation times */\n@@ -44,9 +67,9 @@ uLong filetime(f, tmzip, dt)\n   {\n       FILETIME ftLocal;\n       HANDLE hFind;\n-      WIN32_FIND_DATA  ff32;\n+      WIN32_FIND_DATAA ff32;\n \n-      hFind = FindFirstFile(f,&ff32);\n+      hFind = FindFirstFileA(f,&ff32);\n       if (hFind != INVALID_HANDLE_VALUE)\n       {\n         FileTimeToLocalFileTime(&(ff32.ftLastWriteTime),&ftLocal);\n@@ -119,7 +142,7 @@ int check_exist_file(filename)\n {\n     FILE* ftestexist;\n     int ret = 1;\n-    ftestexist = fopen(filename,\"rb\");\n+    ftestexist = fopen64(filename,\"rb\");\n     if (ftestexist==NULL)\n         ret = 0;\n     else\n@@ -129,18 +152,19 @@ int check_exist_file(filename)\n \n void do_banner()\n {\n-    printf(\"MiniZip 1.01b, demo of zLib + Zip package written by Gilles Vollant\\n\");\n-    printf(\"more info at http://www.winimage.com/zLibDll/unzip.html\\n\\n\");\n+    printf(\"MiniZip 1.1, demo of zLib + MiniZip64 package, written by Gilles Vollant\\n\");\n+    printf(\"more info on MiniZip at http://www.winimage.com/zLibDll/minizip.html\\n\\n\");\n }\n \n void do_help()\n {\n-    printf(\"Usage : minizip [-o] [-a] [-0 to -9] [-p password] file.zip [files_to_add]\\n\\n\" \\\n+    printf(\"Usage : minizip [-o] [-a] [-0 to -9] [-p password] [-j] file.zip [files_to_add]\\n\\n\" \\\n            \"  -o  Overwrite existing file.zip\\n\" \\\n            \"  -a  Append to existing file.zip\\n\" \\\n            \"  -0  Store only\\n\" \\\n            \"  -1  Compress faster\\n\" \\\n-           \"  -9  Compress better\\n\\n\");\n+           \"  -9  Compress better\\n\\n\" \\\n+           \"  -j  exclude path. store only the file name.\\n\\n\");\n }\n \n /* calculate the CRC32 of a file,\n@@ -149,7 +173,7 @@ int getFileCrc(const char* filenameinzip,void*buf,unsigned long size_buf,unsigne\n {\n    unsigned long calculate_crc=0;\n    int err=ZIP_OK;\n-   FILE * fin = fopen(filenameinzip,\"rb\");\n+   FILE * fin = fopen64(filenameinzip,\"rb\");\n    unsigned long size_read = 0;\n    unsigned long total_read = 0;\n    if (fin==NULL)\n@@ -179,17 +203,41 @@ int getFileCrc(const char* filenameinzip,void*buf,unsigned long size_buf,unsigne\n         fclose(fin);\n \n     *result_crc=calculate_crc;\n-    printf(\"file %s crc %x\\n\",filenameinzip,calculate_crc);\n+    printf(\"file %s crc %lx\\n\", filenameinzip, calculate_crc);\n     return err;\n }\n \n+int isLargeFile(const char* filename)\n+{\n+  int largeFile = 0;\n+  ZPOS64_T pos = 0;\n+  FILE* pFile = fopen64(filename, \"rb\");\n+\n+  if(pFile != NULL)\n+  {\n+    int n = fseeko64(pFile, 0, SEEK_END);\n+\n+    pos = ftello64(pFile);\n+\n+                printf(\"File : %s is %lld bytes\\n\", filename, pos);\n+\n+    if(pos >= 0xffffffff)\n+     largeFile = 1;\n+\n+                fclose(pFile);\n+  }\n+\n+ return largeFile;\n+}\n+\n int main(argc,argv)\n     int argc;\n     char *argv[];\n {\n     int i;\n     int opt_overwrite=0;\n     int opt_compress_level=Z_DEFAULT_COMPRESSION;\n+    int opt_exclude_path=0;\n     int zipfilenamearg = 0;\n     char filename_try[MAXFILENAME+16];\n     int zipok;\n@@ -222,6 +270,8 @@ int main(argc,argv)\n                         opt_overwrite = 2;\n                     if ((c>='0') && (c<='9'))\n                         opt_compress_level = c-'0';\n+                    if ((c=='j') || (c=='J'))\n+                        opt_exclude_path = 1;\n \n                     if (((c=='p') || (c=='P')) && (i+1<argc))\n                     {\n@@ -231,8 +281,12 @@ int main(argc,argv)\n                 }\n             }\n             else\n+            {\n                 if (zipfilenamearg == 0)\n+                {\n                     zipfilenamearg = i ;\n+                }\n+            }\n         }\n     }\n \n@@ -245,7 +299,9 @@ int main(argc,argv)\n     }\n \n     if (zipfilenamearg==0)\n+    {\n         zipok=0;\n+    }\n     else\n     {\n         int i,len;\n@@ -302,11 +358,11 @@ int main(argc,argv)\n         zipFile zf;\n         int errclose;\n #        ifdef USEWIN32IOAPI\n-        zlib_filefunc_def ffunc;\n-        fill_win32_filefunc(&ffunc);\n-        zf = zipOpen2(filename_try,(opt_overwrite==2) ? 2 : 0,NULL,&ffunc);\n+        zlib_filefunc64_def ffunc;\n+        fill_win32_filefunc64A(&ffunc);\n+        zf = zipOpen2_64(filename_try,(opt_overwrite==2) ? 2 : 0,NULL,&ffunc);\n #        else\n-        zf = zipOpen(filename_try,(opt_overwrite==2) ? 2 : 0);\n+        zf = zipOpen64(filename_try,(opt_overwrite==2) ? 2 : 0);\n #        endif\n \n         if (zf == NULL)\n@@ -329,8 +385,10 @@ int main(argc,argv)\n                 FILE * fin;\n                 int size_read;\n                 const char* filenameinzip = argv[i];\n+                const char *savefilenameinzip;\n                 zip_fileinfo zi;\n                 unsigned long crcFile=0;\n+                int zip64 = 0;\n \n                 zi.tmz_date.tm_sec = zi.tmz_date.tm_min = zi.tmz_date.tm_hour =\n                 zi.tmz_date.tm_mday = zi.tmz_date.tm_mon = zi.tmz_date.tm_year = 0;\n@@ -348,19 +406,48 @@ int main(argc,argv)\n                 if ((password != NULL) && (err==ZIP_OK))\n                     err = getFileCrc(filenameinzip,buf,size_buf,&crcFile);\n \n-                err = zipOpenNewFileInZip3(zf,filenameinzip,&zi,\n+                zip64 = isLargeFile(filenameinzip);\n+\n+                                                         /* The path name saved, should not include a leading slash. */\n+               /*if it did, windows/xp and dynazip couldn't read the zip file. */\n+                 savefilenameinzip = filenameinzip;\n+                 while( savefilenameinzip[0] == '\\\\' || savefilenameinzip[0] == '/' )\n+                 {\n+                     savefilenameinzip++;\n+                 }\n+\n+                 /*should the zip file contain any path at all?*/\n+                 if( opt_exclude_path )\n+                 {\n+                     const char *tmpptr;\n+                     const char *lastslash = 0;\n+                     for( tmpptr = savefilenameinzip; *tmpptr; tmpptr++)\n+                     {\n+                         if( *tmpptr == '\\\\' || *tmpptr == '/')\n+                         {\n+                             lastslash = tmpptr;\n+                         }\n+                     }\n+                     if( lastslash != NULL )\n+                     {\n+                         savefilenameinzip = lastslash+1; // base filename follows last slash.\n+                     }\n+                 }\n+\n+                 /**/\n+                err = zipOpenNewFileInZip3_64(zf,savefilenameinzip,&zi,\n                                  NULL,0,NULL,0,NULL /* comment*/,\n                                  (opt_compress_level != 0) ? Z_DEFLATED : 0,\n                                  opt_compress_level,0,\n                                  /* -MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY, */\n                                  -MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY,\n-                                 password,crcFile);\n+                                 password,crcFile, zip64);\n \n                 if (err != ZIP_OK)\n                     printf(\"error in opening %s in zipfile\\n\",filenameinzip);\n                 else\n                 {\n-                    fin = fopen(filenameinzip,\"rb\");\n+                    fin = fopen64(filenameinzip,\"rb\");\n                     if (fin==NULL)\n                     {\n                         err=ZIP_ERRNO;"}, {"sha": "f9092e65ae6c5f19813c57d808a9c684a6b0d4fc", "filename": "zlib/contrib/minizip/mztools.c", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fminizip%2Fmztools.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fminizip%2Fmztools.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fminizip%2Fmztools.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -62,15 +62,15 @@ uLong* bytesRecovered;\n         unsigned int fnsize = READ_16(header + 26); /* file name length */\n         unsigned int extsize = READ_16(header + 28); /* extra field length */\n         filename[0] = extra[0] = '\\0';\n-        \n+\n         /* Header */\n         if (fwrite(header, 1, 30, fpOut) == 30) {\n           offset += 30;\n         } else {\n           err = Z_ERRNO;\n           break;\n         }\n-        \n+\n         /* Filename */\n         if (fnsize > 0) {\n           if (fread(filename, 1, fnsize, fpZip) == fnsize) {\n@@ -103,7 +103,7 @@ uLong* bytesRecovered;\n             break;\n           }\n         }\n-        \n+\n         /* Data */\n         {\n           int dataSize = cpsize;\n@@ -133,7 +133,7 @@ uLong* bytesRecovered;\n             }\n           }\n         }\n-        \n+\n         /* Central directory entry */\n         {\n           char header[46];\n@@ -159,7 +159,7 @@ uLong* bytesRecovered;\n           /* Header */\n           if (fwrite(header, 1, 46, fpOutCD) == 46) {\n             offsetCD += 46;\n-            \n+\n             /* Filename */\n             if (fnsize > 0) {\n               if (fwrite(filename, 1, fnsize, fpOutCD) == fnsize) {\n@@ -172,7 +172,7 @@ uLong* bytesRecovered;\n               err = Z_STREAM_ERROR;\n               break;\n             }\n-            \n+\n             /* Extra field */\n             if (extsize > 0) {\n               if (fwrite(extra, 1, extsize, fpOutCD) == extsize) {\n@@ -182,7 +182,7 @@ uLong* bytesRecovered;\n                 break;\n               }\n             }\n-            \n+\n             /* Comment field */\n             if (comsize > 0) {\n               if ((int)fwrite(comment, 1, comsize, fpOutCD) == comsize) {\n@@ -192,8 +192,8 @@ uLong* bytesRecovered;\n                 break;\n               }\n             }\n-            \n-            \n+\n+\n           } else {\n             err = Z_ERRNO;\n             break;\n@@ -225,17 +225,17 @@ uLong* bytesRecovered;\n       WRITE_32(header + 12, offsetCD);    /* size of CD */\n       WRITE_32(header + 16, offset);      /* offset to CD */\n       WRITE_16(header + 20, comsize);     /* comment */\n-      \n+\n       /* Header */\n       if (fwrite(header, 1, 22, fpOutCD) == 22) {\n-        \n+\n         /* Comment field */\n         if (comsize > 0) {\n           if ((int)fwrite(comment, 1, comsize, fpOutCD) != comsize) {\n             err = Z_ERRNO;\n           }\n         }\n-        \n+\n       } else {\n         err = Z_ERRNO;\n       }\n@@ -257,14 +257,14 @@ uLong* bytesRecovered;\n         fclose(fpOutCD);\n       }\n     }\n-    \n+\n     /* Close */\n     fclose(fpZip);\n     fclose(fpOut);\n-    \n+\n     /* Wipe temporary file */\n     (void)remove(fileOutTmp);\n-    \n+\n     /* Number of recovered entries */\n     if (err == Z_OK) {\n       if (nRecovered != NULL) {"}, {"sha": "88b34592bf5ce021640c242c727264e6287edcd7", "filename": "zlib/contrib/minizip/mztools.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fminizip%2Fmztools.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fminizip%2Fmztools.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fminizip%2Fmztools.h?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -17,14 +17,14 @@ extern \"C\" {\n \n #include \"unzip.h\"\n \n-/* Repair a ZIP file (missing central directory) \n+/* Repair a ZIP file (missing central directory)\n    file: file to recover\n    fileOut: output file after recovery\n    fileOutTmp: temporary file name used for recovery\n */\n-extern int ZEXPORT unzRepair(const char* file, \n-                             const char* fileOut, \n-                             const char* fileOutTmp, \n+extern int ZEXPORT unzRepair(const char* file,\n+                             const char* fileOut,\n+                             const char* fileOutTmp,\n                              uLong* nRecovered,\n                              uLong* bytesRecovered);\n "}, {"sha": "7617f41f1ccf9c54ad8e002a956c1b42a5e63b24", "filename": "zlib/contrib/minizip/unzip.c", "status": "modified", "additions": 905, "deletions": 378, "changes": 1283, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fminizip%2Funzip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fminizip%2Funzip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fminizip%2Funzip.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,43 +1,77 @@\n /* unzip.c -- IO for uncompress .zip files using zlib\n-   Version 1.01e, February 12th, 2005\n+   Version 1.1, February 14h, 2010\n+   part of the MiniZip project - ( http://www.winimage.com/zLibDll/minizip.html )\n \n-   Copyright (C) 1998-2005 Gilles Vollant\n+         Copyright (C) 1998-2010 Gilles Vollant (minizip) ( http://www.winimage.com/zLibDll/minizip.html )\n \n-   Read unzip.h for more info\n-*/\n+         Modifications of Unzip for Zip64\n+         Copyright (C) 2007-2008 Even Rouault\n+\n+         Modifications for Zip64 support on both zip and unzip\n+         Copyright (C) 2009-2010 Mathias Svensson ( http://result42.com )\n+\n+         For more info read MiniZip_info.txt\n+\n+\n+  ------------------------------------------------------------------------------------\n+  Decryption code comes from crypt.c by Info-ZIP but has been greatly reduced in terms of\n+  compatibility with older software. The following is from the original crypt.c.\n+  Code woven in by Terry Thorsen 1/2003.\n \n-/* Decryption code comes from crypt.c by Info-ZIP but has been greatly reduced in terms of\n-compatibility with older software. The following is from the original crypt.c. Code\n-woven in by Terry Thorsen 1/2003.\n-*/\n-/*\n   Copyright (c) 1990-2000 Info-ZIP.  All rights reserved.\n \n   See the accompanying file LICENSE, version 2000-Apr-09 or later\n   (the contents of which are also included in zip.h) for terms of use.\n   If, for some reason, all these files are missing, the Info-ZIP license\n   also may be found at:  ftp://ftp.info-zip.org/pub/infozip/license.html\n-*/\n-/*\n-  crypt.c (full version) by Info-ZIP.      Last revised:  [see crypt.h]\n+\n+        crypt.c (full version) by Info-ZIP.      Last revised:  [see crypt.h]\n \n   The encryption/decryption parts of this source code (as opposed to the\n   non-echoing password parts) were originally written in Europe.  The\n   whole source package can be freely distributed, including from the USA.\n   (Prior to January 2000, re-export from the US was a violation of US law.)\n- */\n \n-/*\n-  This encryption code is a direct transcription of the algorithm from\n+        This encryption code is a direct transcription of the algorithm from\n   Roger Schlafly, described by Phil Katz in the file appnote.txt.  This\n   file (appnote.txt) is distributed with the PKZIP program (even in the\n   version without encryption capabilities).\n- */\n+\n+        ------------------------------------------------------------------------------------\n+\n+        Changes in unzip.c\n+\n+        2007-2008 - Even Rouault - Addition of cpl_unzGetCurrentFileZStreamPos\n+  2007-2008 - Even Rouault - Decoration of symbol names unz* -> cpl_unz*\n+  2007-2008 - Even Rouault - Remove old C style function prototypes\n+  2007-2008 - Even Rouault - Add unzip support for ZIP64\n+\n+        Copyright (C) 2007-2008 Even Rouault\n+\n+\n+        Oct-2009 - Mathias Svensson - Removed cpl_* from symbol names (Even Rouault added them but since this is now moved to a new project (minizip64) I renamed them again).\n+  Oct-2009 - Mathias Svensson - Fixed problem if uncompressed size was > 4G and compressed size was <4G\n+                                should only read the compressed/uncompressed size from the Zip64 format if\n+                                the size from normal header was 0xFFFFFFFF\n+  Oct-2009 - Mathias Svensson - Applied some bug fixes from paches recived from Gilles Vollant\n+        Oct-2009 - Mathias Svensson - Applied support to unzip files with compression mathod BZIP2 (bzip2 lib is required)\n+                                Patch created by Daniel Borca\n+\n+  Jan-2010 - back to unzip and minizip 1.0 name scheme, with compatibility layer\n+\n+  Copyright (C) 1998 - 2010 Gilles Vollant, Even Rouault, Mathias Svensson\n+\n+*/\n \n \n #include <stdio.h>\n #include <stdlib.h>\n #include <string.h>\n+\n+#ifndef NOUNCRYPT\n+        #define NOUNCRYPT\n+#endif\n+\n #include \"zlib.h\"\n #include \"unzip.h\"\n \n@@ -85,16 +119,14 @@ woven in by Terry Thorsen 1/2003.\n #define SIZEZIPLOCALHEADER (0x1e)\n \n \n-\n-\n const char unz_copyright[] =\n    \" unzip 1.01 Copyright 1998-2004 Gilles Vollant - http://www.winimage.com/zLibDll\";\n \n /* unz_file_info_interntal contain internal info about a file in zipfile*/\n-typedef struct unz_file_info_internal_s\n+typedef struct unz_file_info64_internal_s\n {\n-    uLong offset_curfile;/* relative offset of local header 4 bytes */\n-} unz_file_info_internal;\n+    ZPOS64_T offset_curfile;/* relative offset of local header 8 bytes */\n+} unz_file_info64_internal;\n \n \n /* file_in_zip_read_info_s contain internal information about a file in zipfile,\n@@ -104,52 +136,61 @@ typedef struct\n     char  *read_buffer;         /* internal buffer for compressed data */\n     z_stream stream;            /* zLib stream structure for inflate */\n \n-    uLong pos_in_zipfile;       /* position in byte on the zipfile, for fseek*/\n+#ifdef HAVE_BZIP2\n+    bz_stream bstream;          /* bzLib stream structure for bziped */\n+#endif\n+\n+    ZPOS64_T pos_in_zipfile;       /* position in byte on the zipfile, for fseek*/\n     uLong stream_initialised;   /* flag set if stream structure is initialised*/\n \n-    uLong offset_local_extrafield;/* offset of the local extra field */\n+    ZPOS64_T offset_local_extrafield;/* offset of the local extra field */\n     uInt  size_local_extrafield;/* size of the local extra field */\n-    uLong pos_local_extrafield;   /* position in the local extra field in read*/\n+    ZPOS64_T pos_local_extrafield;   /* position in the local extra field in read*/\n+    ZPOS64_T total_out_64;\n \n     uLong crc32;                /* crc32 of all data uncompressed */\n     uLong crc32_wait;           /* crc32 we must obtain after decompress all */\n-    uLong rest_read_compressed; /* number of byte to be decompressed */\n-    uLong rest_read_uncompressed;/*number of byte to be obtained after decomp*/\n-    zlib_filefunc_def z_filefunc;\n+    ZPOS64_T rest_read_compressed; /* number of byte to be decompressed */\n+    ZPOS64_T rest_read_uncompressed;/*number of byte to be obtained after decomp*/\n+    zlib_filefunc64_32_def z_filefunc;\n     voidpf filestream;        /* io structore of the zipfile */\n     uLong compression_method;   /* compression method (0==store) */\n-    uLong byte_before_the_zipfile;/* byte before the zipfile, (>0 for sfx)*/\n+    ZPOS64_T byte_before_the_zipfile;/* byte before the zipfile, (>0 for sfx)*/\n     int   raw;\n-} file_in_zip_read_info_s;\n+} file_in_zip64_read_info_s;\n \n \n-/* unz_s contain internal information about the zipfile\n+/* unz64_s contain internal information about the zipfile\n */\n typedef struct\n {\n-    zlib_filefunc_def z_filefunc;\n+    zlib_filefunc64_32_def z_filefunc;\n+    int is64bitOpenFunction;\n     voidpf filestream;        /* io structore of the zipfile */\n-    unz_global_info gi;       /* public global information */\n-    uLong byte_before_the_zipfile;/* byte before the zipfile, (>0 for sfx)*/\n-    uLong num_file;             /* number of the current file in the zipfile*/\n-    uLong pos_in_central_dir;   /* pos of the current file in the central dir*/\n-    uLong current_file_ok;      /* flag about the usability of the current file*/\n-    uLong central_pos;          /* position of the beginning of the central dir*/\n-\n-    uLong size_central_dir;     /* size of the central directory  */\n-    uLong offset_central_dir;   /* offset of start of central directory with\n+    unz_global_info64 gi;       /* public global information */\n+    ZPOS64_T byte_before_the_zipfile;/* byte before the zipfile, (>0 for sfx)*/\n+    ZPOS64_T num_file;             /* number of the current file in the zipfile*/\n+    ZPOS64_T pos_in_central_dir;   /* pos of the current file in the central dir*/\n+    ZPOS64_T current_file_ok;      /* flag about the usability of the current file*/\n+    ZPOS64_T central_pos;          /* position of the beginning of the central dir*/\n+\n+    ZPOS64_T size_central_dir;     /* size of the central directory  */\n+    ZPOS64_T offset_central_dir;   /* offset of start of central directory with\n                                    respect to the starting disk number */\n \n-    unz_file_info cur_file_info; /* public info about the current file in zip*/\n-    unz_file_info_internal cur_file_info_internal; /* private info about it*/\n-    file_in_zip_read_info_s* pfile_in_zip_read; /* structure about the current\n+    unz_file_info64 cur_file_info; /* public info about the current file in zip*/\n+    unz_file_info64_internal cur_file_info_internal; /* private info about it*/\n+    file_in_zip64_read_info_s* pfile_in_zip_read; /* structure about the current\n                                         file if we are decompressing it */\n     int encrypted;\n+\n+    int isZip64;\n+\n #    ifndef NOUNCRYPT\n     unsigned long keys[3];     /* keys defining the pseudo-random sequence */\n     const unsigned long* pcrc_32_tab;\n #    endif\n-} unz_s;\n+} unz64_s;\n \n \n #ifndef NOUNCRYPT\n@@ -163,26 +204,23 @@ typedef struct\n */\n \n \n-local int unzlocal_getByte OF((\n-    const zlib_filefunc_def* pzlib_filefunc_def,\n+local int unz64local_getByte OF((\n+    const zlib_filefunc64_32_def* pzlib_filefunc_def,\n     voidpf filestream,\n     int *pi));\n \n-local int unzlocal_getByte(pzlib_filefunc_def,filestream,pi)\n-    const zlib_filefunc_def* pzlib_filefunc_def;\n-    voidpf filestream;\n-    int *pi;\n+local int unz64local_getByte(const zlib_filefunc64_32_def* pzlib_filefunc_def, voidpf filestream, int *pi)\n {\n     unsigned char c;\n-    int err = (int)ZREAD(*pzlib_filefunc_def,filestream,&c,1);\n+    int err = (int)ZREAD64(*pzlib_filefunc_def,filestream,&c,1);\n     if (err==1)\n     {\n         *pi = (int)c;\n         return UNZ_OK;\n     }\n     else\n     {\n-        if (ZERROR(*pzlib_filefunc_def,filestream))\n+        if (ZERROR64(*pzlib_filefunc_def,filestream))\n             return UNZ_ERRNO;\n         else\n             return UNZ_EOF;\n@@ -193,26 +231,25 @@ local int unzlocal_getByte(pzlib_filefunc_def,filestream,pi)\n /* ===========================================================================\n    Reads a long in LSB order from the given gz_stream. Sets\n */\n-local int unzlocal_getShort OF((\n-    const zlib_filefunc_def* pzlib_filefunc_def,\n+local int unz64local_getShort OF((\n+    const zlib_filefunc64_32_def* pzlib_filefunc_def,\n     voidpf filestream,\n     uLong *pX));\n \n-local int unzlocal_getShort (pzlib_filefunc_def,filestream,pX)\n-    const zlib_filefunc_def* pzlib_filefunc_def;\n-    voidpf filestream;\n-    uLong *pX;\n+local int unz64local_getShort (const zlib_filefunc64_32_def* pzlib_filefunc_def,\n+                             voidpf filestream,\n+                             uLong *pX)\n {\n     uLong x ;\n-    int i;\n+    int i = 0;\n     int err;\n \n-    err = unzlocal_getByte(pzlib_filefunc_def,filestream,&i);\n+    err = unz64local_getByte(pzlib_filefunc_def,filestream,&i);\n     x = (uLong)i;\n \n     if (err==UNZ_OK)\n-        err = unzlocal_getByte(pzlib_filefunc_def,filestream,&i);\n-    x += ((uLong)i)<<8;\n+        err = unz64local_getByte(pzlib_filefunc_def,filestream,&i);\n+    x |= ((uLong)i)<<8;\n \n     if (err==UNZ_OK)\n         *pX = x;\n@@ -221,33 +258,32 @@ local int unzlocal_getShort (pzlib_filefunc_def,filestream,pX)\n     return err;\n }\n \n-local int unzlocal_getLong OF((\n-    const zlib_filefunc_def* pzlib_filefunc_def,\n+local int unz64local_getLong OF((\n+    const zlib_filefunc64_32_def* pzlib_filefunc_def,\n     voidpf filestream,\n     uLong *pX));\n \n-local int unzlocal_getLong (pzlib_filefunc_def,filestream,pX)\n-    const zlib_filefunc_def* pzlib_filefunc_def;\n-    voidpf filestream;\n-    uLong *pX;\n+local int unz64local_getLong (const zlib_filefunc64_32_def* pzlib_filefunc_def,\n+                            voidpf filestream,\n+                            uLong *pX)\n {\n     uLong x ;\n-    int i;\n+    int i = 0;\n     int err;\n \n-    err = unzlocal_getByte(pzlib_filefunc_def,filestream,&i);\n+    err = unz64local_getByte(pzlib_filefunc_def,filestream,&i);\n     x = (uLong)i;\n \n     if (err==UNZ_OK)\n-        err = unzlocal_getByte(pzlib_filefunc_def,filestream,&i);\n-    x += ((uLong)i)<<8;\n+        err = unz64local_getByte(pzlib_filefunc_def,filestream,&i);\n+    x |= ((uLong)i)<<8;\n \n     if (err==UNZ_OK)\n-        err = unzlocal_getByte(pzlib_filefunc_def,filestream,&i);\n-    x += ((uLong)i)<<16;\n+        err = unz64local_getByte(pzlib_filefunc_def,filestream,&i);\n+    x |= ((uLong)i)<<16;\n \n     if (err==UNZ_OK)\n-        err = unzlocal_getByte(pzlib_filefunc_def,filestream,&i);\n+        err = unz64local_getByte(pzlib_filefunc_def,filestream,&i);\n     x += ((uLong)i)<<24;\n \n     if (err==UNZ_OK)\n@@ -257,11 +293,60 @@ local int unzlocal_getLong (pzlib_filefunc_def,filestream,pX)\n     return err;\n }\n \n+local int unz64local_getLong64 OF((\n+    const zlib_filefunc64_32_def* pzlib_filefunc_def,\n+    voidpf filestream,\n+    ZPOS64_T *pX));\n+\n+\n+local int unz64local_getLong64 (const zlib_filefunc64_32_def* pzlib_filefunc_def,\n+                            voidpf filestream,\n+                            ZPOS64_T *pX)\n+{\n+    ZPOS64_T x ;\n+    int i = 0;\n+    int err;\n+\n+    err = unz64local_getByte(pzlib_filefunc_def,filestream,&i);\n+    x = (ZPOS64_T)i;\n+\n+    if (err==UNZ_OK)\n+        err = unz64local_getByte(pzlib_filefunc_def,filestream,&i);\n+    x |= ((ZPOS64_T)i)<<8;\n+\n+    if (err==UNZ_OK)\n+        err = unz64local_getByte(pzlib_filefunc_def,filestream,&i);\n+    x |= ((ZPOS64_T)i)<<16;\n+\n+    if (err==UNZ_OK)\n+        err = unz64local_getByte(pzlib_filefunc_def,filestream,&i);\n+    x |= ((ZPOS64_T)i)<<24;\n+\n+    if (err==UNZ_OK)\n+        err = unz64local_getByte(pzlib_filefunc_def,filestream,&i);\n+    x |= ((ZPOS64_T)i)<<32;\n+\n+    if (err==UNZ_OK)\n+        err = unz64local_getByte(pzlib_filefunc_def,filestream,&i);\n+    x |= ((ZPOS64_T)i)<<40;\n+\n+    if (err==UNZ_OK)\n+        err = unz64local_getByte(pzlib_filefunc_def,filestream,&i);\n+    x |= ((ZPOS64_T)i)<<48;\n+\n+    if (err==UNZ_OK)\n+        err = unz64local_getByte(pzlib_filefunc_def,filestream,&i);\n+    x |= ((ZPOS64_T)i)<<56;\n+\n+    if (err==UNZ_OK)\n+        *pX = x;\n+    else\n+        *pX = 0;\n+    return err;\n+}\n \n /* My own strcmpi / strcasecmp */\n-local int strcmpcasenosensitive_internal (fileName1,fileName2)\n-    const char* fileName1;\n-    const char* fileName2;\n+local int strcmpcasenosensitive_internal (const char* fileName1, const char* fileName2)\n {\n     for (;;)\n     {\n@@ -302,10 +387,10 @@ local int strcmpcasenosensitive_internal (fileName1,fileName2)\n         (like 1 on Unix, 2 on Windows)\n \n */\n-extern int ZEXPORT unzStringFileNameCompare (fileName1,fileName2,iCaseSensitivity)\n-    const char* fileName1;\n-    const char* fileName2;\n-    int iCaseSensitivity;\n+extern int ZEXPORT unzStringFileNameCompare (const char*  fileName1,\n+                                                 const char*  fileName2,\n+                                                 int iCaseSensitivity)\n+\n {\n     if (iCaseSensitivity==0)\n         iCaseSensitivity=CASESENSITIVITYDEFAULTVALUE;\n@@ -324,25 +409,20 @@ extern int ZEXPORT unzStringFileNameCompare (fileName1,fileName2,iCaseSensitivit\n   Locate the Central directory of a zipfile (at the end, just before\n     the global comment)\n */\n-local uLong unzlocal_SearchCentralDir OF((\n-    const zlib_filefunc_def* pzlib_filefunc_def,\n-    voidpf filestream));\n-\n-local uLong unzlocal_SearchCentralDir(pzlib_filefunc_def,filestream)\n-    const zlib_filefunc_def* pzlib_filefunc_def;\n-    voidpf filestream;\n+local ZPOS64_T unz64local_SearchCentralDir OF((const zlib_filefunc64_32_def* pzlib_filefunc_def, voidpf filestream));\n+local ZPOS64_T unz64local_SearchCentralDir(const zlib_filefunc64_32_def* pzlib_filefunc_def, voidpf filestream)\n {\n     unsigned char* buf;\n-    uLong uSizeFile;\n-    uLong uBackRead;\n-    uLong uMaxBack=0xffff; /* maximum size of global comment */\n-    uLong uPosFound=0;\n+    ZPOS64_T uSizeFile;\n+    ZPOS64_T uBackRead;\n+    ZPOS64_T uMaxBack=0xffff; /* maximum size of global comment */\n+    ZPOS64_T uPosFound=0;\n \n-    if (ZSEEK(*pzlib_filefunc_def,filestream,0,ZLIB_FILEFUNC_SEEK_END) != 0)\n+    if (ZSEEK64(*pzlib_filefunc_def,filestream,0,ZLIB_FILEFUNC_SEEK_END) != 0)\n         return 0;\n \n \n-    uSizeFile = ZTELL(*pzlib_filefunc_def,filestream);\n+    uSizeFile = ZTELL64(*pzlib_filefunc_def,filestream);\n \n     if (uMaxBack>uSizeFile)\n         uMaxBack = uSizeFile;\n@@ -354,7 +434,8 @@ local uLong unzlocal_SearchCentralDir(pzlib_filefunc_def,filestream)\n     uBackRead = 4;\n     while (uBackRead<uMaxBack)\n     {\n-        uLong uReadSize,uReadPos ;\n+        uLong uReadSize;\n+        ZPOS64_T uReadPos ;\n         int i;\n         if (uBackRead+BUFREADCOMMENT>uMaxBack)\n             uBackRead = uMaxBack;\n@@ -363,11 +444,11 @@ local uLong unzlocal_SearchCentralDir(pzlib_filefunc_def,filestream)\n         uReadPos = uSizeFile-uBackRead ;\n \n         uReadSize = ((BUFREADCOMMENT+4) < (uSizeFile-uReadPos)) ?\n-                     (BUFREADCOMMENT+4) : (uSizeFile-uReadPos);\n-        if (ZSEEK(*pzlib_filefunc_def,filestream,uReadPos,ZLIB_FILEFUNC_SEEK_SET)!=0)\n+                     (BUFREADCOMMENT+4) : (uLong)(uSizeFile-uReadPos);\n+        if (ZSEEK64(*pzlib_filefunc_def,filestream,uReadPos,ZLIB_FILEFUNC_SEEK_SET)!=0)\n             break;\n \n-        if (ZREAD(*pzlib_filefunc_def,filestream,buf,uReadSize)!=uReadSize)\n+        if (ZREAD64(*pzlib_filefunc_def,filestream,buf,uReadSize)!=uReadSize)\n             break;\n \n         for (i=(int)uReadSize-3; (i--)>0;)\n@@ -385,6 +466,112 @@ local uLong unzlocal_SearchCentralDir(pzlib_filefunc_def,filestream)\n     return uPosFound;\n }\n \n+\n+/*\n+  Locate the Central directory 64 of a zipfile (at the end, just before\n+    the global comment)\n+*/\n+local ZPOS64_T unz64local_SearchCentralDir64 OF((\n+    const zlib_filefunc64_32_def* pzlib_filefunc_def,\n+    voidpf filestream));\n+\n+local ZPOS64_T unz64local_SearchCentralDir64(const zlib_filefunc64_32_def* pzlib_filefunc_def,\n+                                      voidpf filestream)\n+{\n+    unsigned char* buf;\n+    ZPOS64_T uSizeFile;\n+    ZPOS64_T uBackRead;\n+    ZPOS64_T uMaxBack=0xffff; /* maximum size of global comment */\n+    ZPOS64_T uPosFound=0;\n+    uLong uL;\n+                ZPOS64_T relativeOffset;\n+\n+    if (ZSEEK64(*pzlib_filefunc_def,filestream,0,ZLIB_FILEFUNC_SEEK_END) != 0)\n+        return 0;\n+\n+\n+    uSizeFile = ZTELL64(*pzlib_filefunc_def,filestream);\n+\n+    if (uMaxBack>uSizeFile)\n+        uMaxBack = uSizeFile;\n+\n+    buf = (unsigned char*)ALLOC(BUFREADCOMMENT+4);\n+    if (buf==NULL)\n+        return 0;\n+\n+    uBackRead = 4;\n+    while (uBackRead<uMaxBack)\n+    {\n+        uLong uReadSize;\n+        ZPOS64_T uReadPos;\n+        int i;\n+        if (uBackRead+BUFREADCOMMENT>uMaxBack)\n+            uBackRead = uMaxBack;\n+        else\n+            uBackRead+=BUFREADCOMMENT;\n+        uReadPos = uSizeFile-uBackRead ;\n+\n+        uReadSize = ((BUFREADCOMMENT+4) < (uSizeFile-uReadPos)) ?\n+                     (BUFREADCOMMENT+4) : (uLong)(uSizeFile-uReadPos);\n+        if (ZSEEK64(*pzlib_filefunc_def,filestream,uReadPos,ZLIB_FILEFUNC_SEEK_SET)!=0)\n+            break;\n+\n+        if (ZREAD64(*pzlib_filefunc_def,filestream,buf,uReadSize)!=uReadSize)\n+            break;\n+\n+        for (i=(int)uReadSize-3; (i--)>0;)\n+            if (((*(buf+i))==0x50) && ((*(buf+i+1))==0x4b) &&\n+                ((*(buf+i+2))==0x06) && ((*(buf+i+3))==0x07))\n+            {\n+                uPosFound = uReadPos+i;\n+                break;\n+            }\n+\n+        if (uPosFound!=0)\n+            break;\n+    }\n+    TRYFREE(buf);\n+    if (uPosFound == 0)\n+        return 0;\n+\n+    /* Zip64 end of central directory locator */\n+    if (ZSEEK64(*pzlib_filefunc_def,filestream, uPosFound,ZLIB_FILEFUNC_SEEK_SET)!=0)\n+        return 0;\n+\n+    /* the signature, already checked */\n+    if (unz64local_getLong(pzlib_filefunc_def,filestream,&uL)!=UNZ_OK)\n+        return 0;\n+\n+    /* number of the disk with the start of the zip64 end of  central directory */\n+    if (unz64local_getLong(pzlib_filefunc_def,filestream,&uL)!=UNZ_OK)\n+        return 0;\n+    if (uL != 0)\n+        return 0;\n+\n+    /* relative offset of the zip64 end of central directory record */\n+    if (unz64local_getLong64(pzlib_filefunc_def,filestream,&relativeOffset)!=UNZ_OK)\n+        return 0;\n+\n+    /* total number of disks */\n+    if (unz64local_getLong(pzlib_filefunc_def,filestream,&uL)!=UNZ_OK)\n+        return 0;\n+    if (uL != 1)\n+        return 0;\n+\n+    /* Goto end of central directory record */\n+    if (ZSEEK64(*pzlib_filefunc_def,filestream, relativeOffset,ZLIB_FILEFUNC_SEEK_SET)!=0)\n+        return 0;\n+\n+     /* the signature */\n+    if (unz64local_getLong(pzlib_filefunc_def,filestream,&uL)!=UNZ_OK)\n+        return 0;\n+\n+    if (uL != 0x06064b50)\n+        return 0;\n+\n+    return relativeOffset;\n+}\n+\n /*\n   Open a Zip file. path contain the full pathname (by example,\n      on a Windows NT computer \"c:\\\\test\\\\zlib114.zip\" or on an Unix computer\n@@ -394,19 +581,20 @@ local uLong unzlocal_SearchCentralDir(pzlib_filefunc_def,filestream)\n      Else, the return value is a unzFile Handle, usable with other function\n        of this unzip package.\n */\n-extern unzFile ZEXPORT unzOpen2 (path, pzlib_filefunc_def)\n-    const char *path;\n-    zlib_filefunc_def* pzlib_filefunc_def;\n+local unzFile unzOpenInternal (const void *path,\n+                               zlib_filefunc64_32_def* pzlib_filefunc64_32_def,\n+                               int is64bitOpenFunction)\n {\n-    unz_s us;\n-    unz_s *s;\n-    uLong central_pos,uL;\n+    unz64_s us;\n+    unz64_s *s;\n+    ZPOS64_T central_pos;\n+    uLong   uL;\n \n     uLong number_disk;          /* number of the current dist, used for\n                                    spaning ZIP, unsupported, always 0*/\n     uLong number_disk_with_CD;  /* number the the disk with central dir, used\n                                    for spaning ZIP, unsupported, always 0*/\n-    uLong number_entry_CD;      /* total number of entries in\n+    ZPOS64_T number_entry_CD;      /* total number of entries in\n                                    the central dir\n                                    (same than number_entry on nospan) */\n \n@@ -415,71 +603,145 @@ extern unzFile ZEXPORT unzOpen2 (path, pzlib_filefunc_def)\n     if (unz_copyright[0]!=' ')\n         return NULL;\n \n-    if (pzlib_filefunc_def==NULL)\n-        fill_fopen_filefunc(&us.z_filefunc);\n+    us.z_filefunc.zseek32_file = NULL;\n+    us.z_filefunc.ztell32_file = NULL;\n+    if (pzlib_filefunc64_32_def==NULL)\n+        fill_fopen64_filefunc(&us.z_filefunc.zfile_func64);\n     else\n-        us.z_filefunc = *pzlib_filefunc_def;\n+        us.z_filefunc = *pzlib_filefunc64_32_def;\n+    us.is64bitOpenFunction = is64bitOpenFunction;\n \n-    us.filestream= (*(us.z_filefunc.zopen_file))(us.z_filefunc.opaque,\n+\n+\n+    us.filestream = ZOPEN64(us.z_filefunc,\n                                                  path,\n                                                  ZLIB_FILEFUNC_MODE_READ |\n                                                  ZLIB_FILEFUNC_MODE_EXISTING);\n     if (us.filestream==NULL)\n         return NULL;\n \n-    central_pos = unzlocal_SearchCentralDir(&us.z_filefunc,us.filestream);\n-    if (central_pos==0)\n-        err=UNZ_ERRNO;\n+    central_pos = unz64local_SearchCentralDir64(&us.z_filefunc,us.filestream);\n+    if (central_pos)\n+    {\n+        uLong uS;\n+        ZPOS64_T uL64;\n+\n+        us.isZip64 = 1;\n \n-    if (ZSEEK(us.z_filefunc, us.filestream,\n+        if (ZSEEK64(us.z_filefunc, us.filestream,\n                                       central_pos,ZLIB_FILEFUNC_SEEK_SET)!=0)\n         err=UNZ_ERRNO;\n \n-    /* the signature, already checked */\n-    if (unzlocal_getLong(&us.z_filefunc, us.filestream,&uL)!=UNZ_OK)\n-        err=UNZ_ERRNO;\n+        /* the signature, already checked */\n+        if (unz64local_getLong(&us.z_filefunc, us.filestream,&uL)!=UNZ_OK)\n+            err=UNZ_ERRNO;\n \n-    /* number of this disk */\n-    if (unzlocal_getShort(&us.z_filefunc, us.filestream,&number_disk)!=UNZ_OK)\n-        err=UNZ_ERRNO;\n+        /* size of zip64 end of central directory record */\n+        if (unz64local_getLong64(&us.z_filefunc, us.filestream,&uL64)!=UNZ_OK)\n+            err=UNZ_ERRNO;\n \n-    /* number of the disk with the start of the central directory */\n-    if (unzlocal_getShort(&us.z_filefunc, us.filestream,&number_disk_with_CD)!=UNZ_OK)\n-        err=UNZ_ERRNO;\n+        /* version made by */\n+        if (unz64local_getShort(&us.z_filefunc, us.filestream,&uS)!=UNZ_OK)\n+            err=UNZ_ERRNO;\n \n-    /* total number of entries in the central dir on this disk */\n-    if (unzlocal_getShort(&us.z_filefunc, us.filestream,&us.gi.number_entry)!=UNZ_OK)\n-        err=UNZ_ERRNO;\n+        /* version needed to extract */\n+        if (unz64local_getShort(&us.z_filefunc, us.filestream,&uS)!=UNZ_OK)\n+            err=UNZ_ERRNO;\n \n-    /* total number of entries in the central dir */\n-    if (unzlocal_getShort(&us.z_filefunc, us.filestream,&number_entry_CD)!=UNZ_OK)\n-        err=UNZ_ERRNO;\n+        /* number of this disk */\n+        if (unz64local_getLong(&us.z_filefunc, us.filestream,&number_disk)!=UNZ_OK)\n+            err=UNZ_ERRNO;\n \n-    if ((number_entry_CD!=us.gi.number_entry) ||\n-        (number_disk_with_CD!=0) ||\n-        (number_disk!=0))\n-        err=UNZ_BADZIPFILE;\n+        /* number of the disk with the start of the central directory */\n+        if (unz64local_getLong(&us.z_filefunc, us.filestream,&number_disk_with_CD)!=UNZ_OK)\n+            err=UNZ_ERRNO;\n \n-    /* size of the central directory */\n-    if (unzlocal_getLong(&us.z_filefunc, us.filestream,&us.size_central_dir)!=UNZ_OK)\n-        err=UNZ_ERRNO;\n+        /* total number of entries in the central directory on this disk */\n+        if (unz64local_getLong64(&us.z_filefunc, us.filestream,&us.gi.number_entry)!=UNZ_OK)\n+            err=UNZ_ERRNO;\n+\n+        /* total number of entries in the central directory */\n+        if (unz64local_getLong64(&us.z_filefunc, us.filestream,&number_entry_CD)!=UNZ_OK)\n+            err=UNZ_ERRNO;\n \n-    /* offset of start of central directory with respect to the\n+        if ((number_entry_CD!=us.gi.number_entry) ||\n+            (number_disk_with_CD!=0) ||\n+            (number_disk!=0))\n+            err=UNZ_BADZIPFILE;\n+\n+        /* size of the central directory */\n+        if (unz64local_getLong64(&us.z_filefunc, us.filestream,&us.size_central_dir)!=UNZ_OK)\n+            err=UNZ_ERRNO;\n+\n+        /* offset of start of central directory with respect to the\n           starting disk number */\n-    if (unzlocal_getLong(&us.z_filefunc, us.filestream,&us.offset_central_dir)!=UNZ_OK)\n-        err=UNZ_ERRNO;\n+        if (unz64local_getLong64(&us.z_filefunc, us.filestream,&us.offset_central_dir)!=UNZ_OK)\n+            err=UNZ_ERRNO;\n \n-    /* zipfile comment length */\n-    if (unzlocal_getShort(&us.z_filefunc, us.filestream,&us.gi.size_comment)!=UNZ_OK)\n-        err=UNZ_ERRNO;\n+        us.gi.size_comment = 0;\n+    }\n+    else\n+    {\n+        central_pos = unz64local_SearchCentralDir(&us.z_filefunc,us.filestream);\n+        if (central_pos==0)\n+            err=UNZ_ERRNO;\n+\n+        us.isZip64 = 0;\n+\n+        if (ZSEEK64(us.z_filefunc, us.filestream,\n+                                        central_pos,ZLIB_FILEFUNC_SEEK_SET)!=0)\n+            err=UNZ_ERRNO;\n+\n+        /* the signature, already checked */\n+        if (unz64local_getLong(&us.z_filefunc, us.filestream,&uL)!=UNZ_OK)\n+            err=UNZ_ERRNO;\n+\n+        /* number of this disk */\n+        if (unz64local_getShort(&us.z_filefunc, us.filestream,&number_disk)!=UNZ_OK)\n+            err=UNZ_ERRNO;\n+\n+        /* number of the disk with the start of the central directory */\n+        if (unz64local_getShort(&us.z_filefunc, us.filestream,&number_disk_with_CD)!=UNZ_OK)\n+            err=UNZ_ERRNO;\n+\n+        /* total number of entries in the central dir on this disk */\n+        if (unz64local_getShort(&us.z_filefunc, us.filestream,&uL)!=UNZ_OK)\n+            err=UNZ_ERRNO;\n+        us.gi.number_entry = uL;\n+\n+        /* total number of entries in the central dir */\n+        if (unz64local_getShort(&us.z_filefunc, us.filestream,&uL)!=UNZ_OK)\n+            err=UNZ_ERRNO;\n+        number_entry_CD = uL;\n+\n+        if ((number_entry_CD!=us.gi.number_entry) ||\n+            (number_disk_with_CD!=0) ||\n+            (number_disk!=0))\n+            err=UNZ_BADZIPFILE;\n+\n+        /* size of the central directory */\n+        if (unz64local_getLong(&us.z_filefunc, us.filestream,&uL)!=UNZ_OK)\n+            err=UNZ_ERRNO;\n+        us.size_central_dir = uL;\n+\n+        /* offset of start of central directory with respect to the\n+            starting disk number */\n+        if (unz64local_getLong(&us.z_filefunc, us.filestream,&uL)!=UNZ_OK)\n+            err=UNZ_ERRNO;\n+        us.offset_central_dir = uL;\n+\n+        /* zipfile comment length */\n+        if (unz64local_getShort(&us.z_filefunc, us.filestream,&us.gi.size_comment)!=UNZ_OK)\n+            err=UNZ_ERRNO;\n+    }\n \n     if ((central_pos<us.offset_central_dir+us.size_central_dir) &&\n         (err==UNZ_OK))\n         err=UNZ_BADZIPFILE;\n \n     if (err!=UNZ_OK)\n     {\n-        ZCLOSE(us.z_filefunc, us.filestream);\n+        ZCLOSE64(us.z_filefunc, us.filestream);\n         return NULL;\n     }\n \n@@ -490,36 +752,70 @@ extern unzFile ZEXPORT unzOpen2 (path, pzlib_filefunc_def)\n     us.encrypted = 0;\n \n \n-    s=(unz_s*)ALLOC(sizeof(unz_s));\n-    *s=us;\n-    unzGoToFirstFile((unzFile)s);\n+    s=(unz64_s*)ALLOC(sizeof(unz64_s));\n+    if( s != NULL)\n+    {\n+        *s=us;\n+        unzGoToFirstFile((unzFile)s);\n+    }\n     return (unzFile)s;\n }\n \n \n-extern unzFile ZEXPORT unzOpen (path)\n-    const char *path;\n+extern unzFile ZEXPORT unzOpen2 (const char *path,\n+                                        zlib_filefunc_def* pzlib_filefunc32_def)\n {\n-    return unzOpen2(path, NULL);\n+    if (pzlib_filefunc32_def != NULL)\n+    {\n+        zlib_filefunc64_32_def zlib_filefunc64_32_def_fill;\n+        fill_zlib_filefunc64_32_def_from_filefunc32(&zlib_filefunc64_32_def_fill,pzlib_filefunc32_def);\n+        return unzOpenInternal(path, &zlib_filefunc64_32_def_fill, 0);\n+    }\n+    else\n+        return unzOpenInternal(path, NULL, 0);\n+}\n+\n+extern unzFile ZEXPORT unzOpen2_64 (const void *path,\n+                                     zlib_filefunc64_def* pzlib_filefunc_def)\n+{\n+    if (pzlib_filefunc_def != NULL)\n+    {\n+        zlib_filefunc64_32_def zlib_filefunc64_32_def_fill;\n+        zlib_filefunc64_32_def_fill.zfile_func64 = *pzlib_filefunc_def;\n+        zlib_filefunc64_32_def_fill.ztell32_file = NULL;\n+        zlib_filefunc64_32_def_fill.zseek32_file = NULL;\n+        return unzOpenInternal(path, &zlib_filefunc64_32_def_fill, 1);\n+    }\n+    else\n+        return unzOpenInternal(path, NULL, 1);\n+}\n+\n+extern unzFile ZEXPORT unzOpen (const char *path)\n+{\n+    return unzOpenInternal(path, NULL, 0);\n+}\n+\n+extern unzFile ZEXPORT unzOpen64 (const void *path)\n+{\n+    return unzOpenInternal(path, NULL, 1);\n }\n \n /*\n   Close a ZipFile opened with unzipOpen.\n   If there is files inside the .Zip opened with unzipOpenCurrentFile (see later),\n     these files MUST be closed with unzipCloseCurrentFile before call unzipClose.\n   return UNZ_OK if there is no problem. */\n-extern int ZEXPORT unzClose (file)\n-    unzFile file;\n+extern int ZEXPORT unzClose (unzFile file)\n {\n-    unz_s* s;\n+    unz64_s* s;\n     if (file==NULL)\n         return UNZ_PARAMERROR;\n-    s=(unz_s*)file;\n+    s=(unz64_s*)file;\n \n     if (s->pfile_in_zip_read!=NULL)\n         unzCloseCurrentFile(file);\n \n-    ZCLOSE(s->z_filefunc, s->filestream);\n+    ZCLOSE64(s->z_filefunc, s->filestream);\n     TRYFREE(s);\n     return UNZ_OK;\n }\n@@ -529,28 +825,34 @@ extern int ZEXPORT unzClose (file)\n   Write info about the ZipFile in the *pglobal_info structure.\n   No preparation of the structure is needed\n   return UNZ_OK if there is no problem. */\n-extern int ZEXPORT unzGetGlobalInfo (file,pglobal_info)\n-    unzFile file;\n-    unz_global_info *pglobal_info;\n+extern int ZEXPORT unzGetGlobalInfo64 (unzFile file, unz_global_info64* pglobal_info)\n {\n-    unz_s* s;\n+    unz64_s* s;\n     if (file==NULL)\n         return UNZ_PARAMERROR;\n-    s=(unz_s*)file;\n+    s=(unz64_s*)file;\n     *pglobal_info=s->gi;\n     return UNZ_OK;\n }\n \n-\n+extern int ZEXPORT unzGetGlobalInfo (unzFile file, unz_global_info* pglobal_info32)\n+{\n+    unz64_s* s;\n+    if (file==NULL)\n+        return UNZ_PARAMERROR;\n+    s=(unz64_s*)file;\n+    /* to do : check if number_entry is not truncated */\n+    pglobal_info32->number_entry = (uLong)s->gi.number_entry;\n+    pglobal_info32->size_comment = s->gi.size_comment;\n+    return UNZ_OK;\n+}\n /*\n    Translate date/time from Dos format to tm_unz (readable more easilty)\n */\n-local void unzlocal_DosDateToTmuDate (ulDosDate, ptm)\n-    uLong ulDosDate;\n-    tm_unz* ptm;\n+local void unz64local_DosDateToTmuDate (ZPOS64_T ulDosDate, tm_unz* ptm)\n {\n-    uLong uDate;\n-    uDate = (uLong)(ulDosDate>>16);\n+    ZPOS64_T uDate;\n+    uDate = (ZPOS64_T)(ulDosDate>>16);\n     ptm->tm_mday = (uInt)(uDate&0x1f) ;\n     ptm->tm_mon =  (uInt)((((uDate)&0x1E0)/0x20)-1) ;\n     ptm->tm_year = (uInt)(((uDate&0x0FE00)/0x0200)+1980) ;\n@@ -563,9 +865,9 @@ local void unzlocal_DosDateToTmuDate (ulDosDate, ptm)\n /*\n   Get Info about the current file in the zipfile, with internal only info\n */\n-local int unzlocal_GetCurrentFileInfoInternal OF((unzFile file,\n-                                                  unz_file_info *pfile_info,\n-                                                  unz_file_info_internal\n+local int unz64local_GetCurrentFileInfoInternal OF((unzFile file,\n+                                                  unz_file_info64 *pfile_info,\n+                                                  unz_file_info64_internal\n                                                   *pfile_info_internal,\n                                                   char *szFileName,\n                                                   uLong fileNameBufferSize,\n@@ -574,91 +876,93 @@ local int unzlocal_GetCurrentFileInfoInternal OF((unzFile file,\n                                                   char *szComment,\n                                                   uLong commentBufferSize));\n \n-local int unzlocal_GetCurrentFileInfoInternal (file,\n-                                              pfile_info,\n-                                              pfile_info_internal,\n-                                              szFileName, fileNameBufferSize,\n-                                              extraField, extraFieldBufferSize,\n-                                              szComment,  commentBufferSize)\n-    unzFile file;\n-    unz_file_info *pfile_info;\n-    unz_file_info_internal *pfile_info_internal;\n-    char *szFileName;\n-    uLong fileNameBufferSize;\n-    void *extraField;\n-    uLong extraFieldBufferSize;\n-    char *szComment;\n-    uLong commentBufferSize;\n+local int unz64local_GetCurrentFileInfoInternal (unzFile file,\n+                                                  unz_file_info64 *pfile_info,\n+                                                  unz_file_info64_internal\n+                                                  *pfile_info_internal,\n+                                                  char *szFileName,\n+                                                  uLong fileNameBufferSize,\n+                                                  void *extraField,\n+                                                  uLong extraFieldBufferSize,\n+                                                  char *szComment,\n+                                                  uLong commentBufferSize)\n {\n-    unz_s* s;\n-    unz_file_info file_info;\n-    unz_file_info_internal file_info_internal;\n+    unz64_s* s;\n+    unz_file_info64 file_info;\n+    unz_file_info64_internal file_info_internal;\n     int err=UNZ_OK;\n     uLong uMagic;\n     long lSeek=0;\n+    uLong uL;\n \n     if (file==NULL)\n         return UNZ_PARAMERROR;\n-    s=(unz_s*)file;\n-    if (ZSEEK(s->z_filefunc, s->filestream,\n+    s=(unz64_s*)file;\n+    if (ZSEEK64(s->z_filefunc, s->filestream,\n               s->pos_in_central_dir+s->byte_before_the_zipfile,\n               ZLIB_FILEFUNC_SEEK_SET)!=0)\n         err=UNZ_ERRNO;\n \n \n     /* we check the magic */\n     if (err==UNZ_OK)\n-        if (unzlocal_getLong(&s->z_filefunc, s->filestream,&uMagic) != UNZ_OK)\n+    {\n+        if (unz64local_getLong(&s->z_filefunc, s->filestream,&uMagic) != UNZ_OK)\n             err=UNZ_ERRNO;\n         else if (uMagic!=0x02014b50)\n             err=UNZ_BADZIPFILE;\n+    }\n \n-    if (unzlocal_getShort(&s->z_filefunc, s->filestream,&file_info.version) != UNZ_OK)\n+    if (unz64local_getShort(&s->z_filefunc, s->filestream,&file_info.version) != UNZ_OK)\n         err=UNZ_ERRNO;\n \n-    if (unzlocal_getShort(&s->z_filefunc, s->filestream,&file_info.version_needed) != UNZ_OK)\n+    if (unz64local_getShort(&s->z_filefunc, s->filestream,&file_info.version_needed) != UNZ_OK)\n         err=UNZ_ERRNO;\n \n-    if (unzlocal_getShort(&s->z_filefunc, s->filestream,&file_info.flag) != UNZ_OK)\n+    if (unz64local_getShort(&s->z_filefunc, s->filestream,&file_info.flag) != UNZ_OK)\n         err=UNZ_ERRNO;\n \n-    if (unzlocal_getShort(&s->z_filefunc, s->filestream,&file_info.compression_method) != UNZ_OK)\n+    if (unz64local_getShort(&s->z_filefunc, s->filestream,&file_info.compression_method) != UNZ_OK)\n         err=UNZ_ERRNO;\n \n-    if (unzlocal_getLong(&s->z_filefunc, s->filestream,&file_info.dosDate) != UNZ_OK)\n+    if (unz64local_getLong(&s->z_filefunc, s->filestream,&file_info.dosDate) != UNZ_OK)\n         err=UNZ_ERRNO;\n \n-    unzlocal_DosDateToTmuDate(file_info.dosDate,&file_info.tmu_date);\n+    unz64local_DosDateToTmuDate(file_info.dosDate,&file_info.tmu_date);\n \n-    if (unzlocal_getLong(&s->z_filefunc, s->filestream,&file_info.crc) != UNZ_OK)\n+    if (unz64local_getLong(&s->z_filefunc, s->filestream,&file_info.crc) != UNZ_OK)\n         err=UNZ_ERRNO;\n \n-    if (unzlocal_getLong(&s->z_filefunc, s->filestream,&file_info.compressed_size) != UNZ_OK)\n+    if (unz64local_getLong(&s->z_filefunc, s->filestream,&uL) != UNZ_OK)\n         err=UNZ_ERRNO;\n+    file_info.compressed_size = uL;\n \n-    if (unzlocal_getLong(&s->z_filefunc, s->filestream,&file_info.uncompressed_size) != UNZ_OK)\n+    if (unz64local_getLong(&s->z_filefunc, s->filestream,&uL) != UNZ_OK)\n         err=UNZ_ERRNO;\n+    file_info.uncompressed_size = uL;\n \n-    if (unzlocal_getShort(&s->z_filefunc, s->filestream,&file_info.size_filename) != UNZ_OK)\n+    if (unz64local_getShort(&s->z_filefunc, s->filestream,&file_info.size_filename) != UNZ_OK)\n         err=UNZ_ERRNO;\n \n-    if (unzlocal_getShort(&s->z_filefunc, s->filestream,&file_info.size_file_extra) != UNZ_OK)\n+    if (unz64local_getShort(&s->z_filefunc, s->filestream,&file_info.size_file_extra) != UNZ_OK)\n         err=UNZ_ERRNO;\n \n-    if (unzlocal_getShort(&s->z_filefunc, s->filestream,&file_info.size_file_comment) != UNZ_OK)\n+    if (unz64local_getShort(&s->z_filefunc, s->filestream,&file_info.size_file_comment) != UNZ_OK)\n         err=UNZ_ERRNO;\n \n-    if (unzlocal_getShort(&s->z_filefunc, s->filestream,&file_info.disk_num_start) != UNZ_OK)\n+    if (unz64local_getShort(&s->z_filefunc, s->filestream,&file_info.disk_num_start) != UNZ_OK)\n         err=UNZ_ERRNO;\n \n-    if (unzlocal_getShort(&s->z_filefunc, s->filestream,&file_info.internal_fa) != UNZ_OK)\n+    if (unz64local_getShort(&s->z_filefunc, s->filestream,&file_info.internal_fa) != UNZ_OK)\n         err=UNZ_ERRNO;\n \n-    if (unzlocal_getLong(&s->z_filefunc, s->filestream,&file_info.external_fa) != UNZ_OK)\n+    if (unz64local_getLong(&s->z_filefunc, s->filestream,&file_info.external_fa) != UNZ_OK)\n         err=UNZ_ERRNO;\n \n-    if (unzlocal_getLong(&s->z_filefunc, s->filestream,&file_info_internal.offset_curfile) != UNZ_OK)\n+                // relative offset of local header\n+    if (unz64local_getLong(&s->z_filefunc, s->filestream,&uL) != UNZ_OK)\n         err=UNZ_ERRNO;\n+    file_info_internal.offset_curfile = uL;\n \n     lSeek+=file_info.size_filename;\n     if ((err==UNZ_OK) && (szFileName!=NULL))\n@@ -673,33 +977,105 @@ local int unzlocal_GetCurrentFileInfoInternal (file,\n             uSizeRead = fileNameBufferSize;\n \n         if ((file_info.size_filename>0) && (fileNameBufferSize>0))\n-            if (ZREAD(s->z_filefunc, s->filestream,szFileName,uSizeRead)!=uSizeRead)\n+            if (ZREAD64(s->z_filefunc, s->filestream,szFileName,uSizeRead)!=uSizeRead)\n                 err=UNZ_ERRNO;\n         lSeek -= uSizeRead;\n     }\n \n-\n+    // Read extrafield\n     if ((err==UNZ_OK) && (extraField!=NULL))\n     {\n-        uLong uSizeRead ;\n+        ZPOS64_T uSizeRead ;\n         if (file_info.size_file_extra<extraFieldBufferSize)\n             uSizeRead = file_info.size_file_extra;\n         else\n             uSizeRead = extraFieldBufferSize;\n \n         if (lSeek!=0)\n-            if (ZSEEK(s->z_filefunc, s->filestream,lSeek,ZLIB_FILEFUNC_SEEK_CUR)==0)\n+        {\n+            if (ZSEEK64(s->z_filefunc, s->filestream,lSeek,ZLIB_FILEFUNC_SEEK_CUR)==0)\n                 lSeek=0;\n             else\n                 err=UNZ_ERRNO;\n+        }\n+\n         if ((file_info.size_file_extra>0) && (extraFieldBufferSize>0))\n-            if (ZREAD(s->z_filefunc, s->filestream,extraField,uSizeRead)!=uSizeRead)\n+            if (ZREAD64(s->z_filefunc, s->filestream,extraField,(uLong)uSizeRead)!=uSizeRead)\n                 err=UNZ_ERRNO;\n-        lSeek += file_info.size_file_extra - uSizeRead;\n+\n+        lSeek += file_info.size_file_extra - (uLong)uSizeRead;\n     }\n     else\n-        lSeek+=file_info.size_file_extra;\n+        lSeek += file_info.size_file_extra;\n+\n+\n+    if ((err==UNZ_OK) && (file_info.size_file_extra != 0))\n+    {\n+                                uLong acc = 0;\n+\n+        // since lSeek now points to after the extra field we need to move back\n+        lSeek -= file_info.size_file_extra;\n+\n+        if (lSeek!=0)\n+        {\n+            if (ZSEEK64(s->z_filefunc, s->filestream,lSeek,ZLIB_FILEFUNC_SEEK_CUR)==0)\n+                lSeek=0;\n+            else\n+                err=UNZ_ERRNO;\n+        }\n \n+        while(acc < file_info.size_file_extra)\n+        {\n+            uLong headerId;\n+                                                uLong dataSize;\n+\n+            if (unz64local_getShort(&s->z_filefunc, s->filestream,&headerId) != UNZ_OK)\n+                err=UNZ_ERRNO;\n+\n+            if (unz64local_getShort(&s->z_filefunc, s->filestream,&dataSize) != UNZ_OK)\n+                err=UNZ_ERRNO;\n+\n+            /* ZIP64 extra fields */\n+            if (headerId == 0x0001)\n+            {\n+                                                        uLong uL;\n+\n+                                                                if(file_info.uncompressed_size == (ZPOS64_T)(unsigned long)-1)\n+                                                                {\n+                                                                        if (unz64local_getLong64(&s->z_filefunc, s->filestream,&file_info.uncompressed_size) != UNZ_OK)\n+                                                                                        err=UNZ_ERRNO;\n+                                                                }\n+\n+                                                                if(file_info.compressed_size == (ZPOS64_T)(unsigned long)-1)\n+                                                                {\n+                                                                        if (unz64local_getLong64(&s->z_filefunc, s->filestream,&file_info.compressed_size) != UNZ_OK)\n+                                                                                  err=UNZ_ERRNO;\n+                                                                }\n+\n+                                                                if(file_info_internal.offset_curfile == (ZPOS64_T)(unsigned long)-1)\n+                                                                {\n+                                                                        /* Relative Header offset */\n+                                                                        if (unz64local_getLong64(&s->z_filefunc, s->filestream,&file_info_internal.offset_curfile) != UNZ_OK)\n+                                                                                err=UNZ_ERRNO;\n+                                                                }\n+\n+                                                                if(file_info.disk_num_start == (unsigned long)-1)\n+                                                                {\n+                                                                        /* Disk Start Number */\n+                                                                        if (unz64local_getLong(&s->z_filefunc, s->filestream,&uL) != UNZ_OK)\n+                                                                                err=UNZ_ERRNO;\n+                                                                }\n+\n+            }\n+            else\n+            {\n+                if (ZSEEK64(s->z_filefunc, s->filestream,dataSize,ZLIB_FILEFUNC_SEEK_CUR)!=0)\n+                    err=UNZ_ERRNO;\n+            }\n+\n+            acc += 2 + 2 + dataSize;\n+        }\n+    }\n \n     if ((err==UNZ_OK) && (szComment!=NULL))\n     {\n@@ -713,18 +1089,22 @@ local int unzlocal_GetCurrentFileInfoInternal (file,\n             uSizeRead = commentBufferSize;\n \n         if (lSeek!=0)\n-            if (ZSEEK(s->z_filefunc, s->filestream,lSeek,ZLIB_FILEFUNC_SEEK_CUR)==0)\n+        {\n+            if (ZSEEK64(s->z_filefunc, s->filestream,lSeek,ZLIB_FILEFUNC_SEEK_CUR)==0)\n                 lSeek=0;\n             else\n                 err=UNZ_ERRNO;\n+        }\n+\n         if ((file_info.size_file_comment>0) && (commentBufferSize>0))\n-            if (ZREAD(s->z_filefunc, s->filestream,szComment,uSizeRead)!=uSizeRead)\n+            if (ZREAD64(s->z_filefunc, s->filestream,szComment,uSizeRead)!=uSizeRead)\n                 err=UNZ_ERRNO;\n         lSeek+=file_info.size_file_comment - uSizeRead;\n     }\n     else\n         lSeek+=file_info.size_file_comment;\n \n+\n     if ((err==UNZ_OK) && (pfile_info!=NULL))\n         *pfile_info=file_info;\n \n@@ -741,41 +1121,70 @@ local int unzlocal_GetCurrentFileInfoInternal (file,\n   No preparation of the structure is needed\n   return UNZ_OK if there is no problem.\n */\n-extern int ZEXPORT unzGetCurrentFileInfo (file,\n-                                          pfile_info,\n-                                          szFileName, fileNameBufferSize,\n-                                          extraField, extraFieldBufferSize,\n-                                          szComment,  commentBufferSize)\n-    unzFile file;\n-    unz_file_info *pfile_info;\n-    char *szFileName;\n-    uLong fileNameBufferSize;\n-    void *extraField;\n-    uLong extraFieldBufferSize;\n-    char *szComment;\n-    uLong commentBufferSize;\n+extern int ZEXPORT unzGetCurrentFileInfo64 (unzFile file,\n+                                          unz_file_info64 * pfile_info,\n+                                          char * szFileName, uLong fileNameBufferSize,\n+                                          void *extraField, uLong extraFieldBufferSize,\n+                                          char* szComment,  uLong commentBufferSize)\n {\n-    return unzlocal_GetCurrentFileInfoInternal(file,pfile_info,NULL,\n+    return unz64local_GetCurrentFileInfoInternal(file,pfile_info,NULL,\n                                                 szFileName,fileNameBufferSize,\n                                                 extraField,extraFieldBufferSize,\n                                                 szComment,commentBufferSize);\n }\n \n+extern int ZEXPORT unzGetCurrentFileInfo (unzFile file,\n+                                          unz_file_info * pfile_info,\n+                                          char * szFileName, uLong fileNameBufferSize,\n+                                          void *extraField, uLong extraFieldBufferSize,\n+                                          char* szComment,  uLong commentBufferSize)\n+{\n+    int err;\n+    unz_file_info64 file_info64;\n+    err = unz64local_GetCurrentFileInfoInternal(file,&file_info64,NULL,\n+                                                szFileName,fileNameBufferSize,\n+                                                extraField,extraFieldBufferSize,\n+                                                szComment,commentBufferSize);\n+    if (err==UNZ_OK)\n+    {\n+        pfile_info->version = file_info64.version;\n+        pfile_info->version_needed = file_info64.version_needed;\n+        pfile_info->flag = file_info64.flag;\n+        pfile_info->compression_method = file_info64.compression_method;\n+        pfile_info->dosDate = file_info64.dosDate;\n+        pfile_info->crc = file_info64.crc;\n+\n+        pfile_info->size_filename = file_info64.size_filename;\n+        pfile_info->size_file_extra = file_info64.size_file_extra;\n+        pfile_info->size_file_comment = file_info64.size_file_comment;\n+\n+        pfile_info->disk_num_start = file_info64.disk_num_start;\n+        pfile_info->internal_fa = file_info64.internal_fa;\n+        pfile_info->external_fa = file_info64.external_fa;\n+\n+        pfile_info->tmu_date = file_info64.tmu_date,\n+\n+\n+        pfile_info->compressed_size = (uLong)file_info64.compressed_size;\n+        pfile_info->uncompressed_size = (uLong)file_info64.uncompressed_size;\n+\n+    }\n+    return err;\n+}\n /*\n   Set the current file of the zipfile to the first file.\n   return UNZ_OK if there is no problem\n */\n-extern int ZEXPORT unzGoToFirstFile (file)\n-    unzFile file;\n+extern int ZEXPORT unzGoToFirstFile (unzFile file)\n {\n     int err=UNZ_OK;\n-    unz_s* s;\n+    unz64_s* s;\n     if (file==NULL)\n         return UNZ_PARAMERROR;\n-    s=(unz_s*)file;\n+    s=(unz64_s*)file;\n     s->pos_in_central_dir=s->offset_central_dir;\n     s->num_file=0;\n-    err=unzlocal_GetCurrentFileInfoInternal(file,&s->cur_file_info,\n+    err=unz64local_GetCurrentFileInfoInternal(file,&s->cur_file_info,\n                                              &s->cur_file_info_internal,\n                                              NULL,0,NULL,0,NULL,0);\n     s->current_file_ok = (err == UNZ_OK);\n@@ -787,15 +1196,14 @@ extern int ZEXPORT unzGoToFirstFile (file)\n   return UNZ_OK if there is no problem\n   return UNZ_END_OF_LIST_OF_FILE if the actual file was the latest.\n */\n-extern int ZEXPORT unzGoToNextFile (file)\n-    unzFile file;\n+extern int ZEXPORT unzGoToNextFile (unzFile  file)\n {\n-    unz_s* s;\n+    unz64_s* s;\n     int err;\n \n     if (file==NULL)\n         return UNZ_PARAMERROR;\n-    s=(unz_s*)file;\n+    s=(unz64_s*)file;\n     if (!s->current_file_ok)\n         return UNZ_END_OF_LIST_OF_FILE;\n     if (s->gi.number_entry != 0xffff)    /* 2^16 files overflow hack */\n@@ -805,7 +1213,7 @@ extern int ZEXPORT unzGoToNextFile (file)\n     s->pos_in_central_dir += SIZECENTRALDIRITEM + s->cur_file_info.size_filename +\n             s->cur_file_info.size_file_extra + s->cur_file_info.size_file_comment ;\n     s->num_file++;\n-    err = unzlocal_GetCurrentFileInfoInternal(file,&s->cur_file_info,\n+    err = unz64local_GetCurrentFileInfoInternal(file,&s->cur_file_info,\n                                                &s->cur_file_info_internal,\n                                                NULL,0,NULL,0,NULL,0);\n     s->current_file_ok = (err == UNZ_OK);\n@@ -821,21 +1229,18 @@ extern int ZEXPORT unzGoToNextFile (file)\n   UNZ_OK if the file is found. It becomes the current file.\n   UNZ_END_OF_LIST_OF_FILE if the file is not found\n */\n-extern int ZEXPORT unzLocateFile (file, szFileName, iCaseSensitivity)\n-    unzFile file;\n-    const char *szFileName;\n-    int iCaseSensitivity;\n+extern int ZEXPORT unzLocateFile (unzFile file, const char *szFileName, int iCaseSensitivity)\n {\n-    unz_s* s;\n+    unz64_s* s;\n     int err;\n \n     /* We remember the 'current' position in the file so that we can jump\n      * back there if we fail.\n      */\n-    unz_file_info cur_file_infoSaved;\n-    unz_file_info_internal cur_file_info_internalSaved;\n-    uLong num_fileSaved;\n-    uLong pos_in_central_dirSaved;\n+    unz_file_info64 cur_file_infoSaved;\n+    unz_file_info64_internal cur_file_info_internalSaved;\n+    ZPOS64_T num_fileSaved;\n+    ZPOS64_T pos_in_central_dirSaved;\n \n \n     if (file==NULL)\n@@ -844,7 +1249,7 @@ extern int ZEXPORT unzLocateFile (file, szFileName, iCaseSensitivity)\n     if (strlen(szFileName)>=UNZ_MAXFILENAMEINZIP)\n         return UNZ_PARAMERROR;\n \n-    s=(unz_s*)file;\n+    s=(unz64_s*)file;\n     if (!s->current_file_ok)\n         return UNZ_END_OF_LIST_OF_FILE;\n \n@@ -859,7 +1264,7 @@ extern int ZEXPORT unzLocateFile (file, szFileName, iCaseSensitivity)\n     while (err == UNZ_OK)\n     {\n         char szCurrentFileName[UNZ_MAXFILENAMEINZIP+1];\n-        err = unzGetCurrentFileInfo(file,NULL,\n+        err = unzGetCurrentFileInfo64(file,NULL,\n                                     szCurrentFileName,sizeof(szCurrentFileName)-1,\n                                     NULL,0,NULL,0);\n         if (err == UNZ_OK)\n@@ -895,20 +1300,18 @@ extern int ZEXPORT unzLocateFile (file, szFileName, iCaseSensitivity)\n /*\n typedef struct unz_file_pos_s\n {\n-    uLong pos_in_zip_directory;   // offset in file\n-    uLong num_of_file;            // # of file\n+    ZPOS64_T pos_in_zip_directory;   // offset in file\n+    ZPOS64_T num_of_file;            // # of file\n } unz_file_pos;\n */\n \n-extern int ZEXPORT unzGetFilePos(file, file_pos)\n-    unzFile file;\n-    unz_file_pos* file_pos;\n+extern int ZEXPORT unzGetFilePos64(unzFile file, unz64_file_pos*  file_pos)\n {\n-    unz_s* s;\n+    unz64_s* s;\n \n     if (file==NULL || file_pos==NULL)\n         return UNZ_PARAMERROR;\n-    s=(unz_s*)file;\n+    s=(unz64_s*)file;\n     if (!s->current_file_ok)\n         return UNZ_END_OF_LIST_OF_FILE;\n \n@@ -918,30 +1321,55 @@ extern int ZEXPORT unzGetFilePos(file, file_pos)\n     return UNZ_OK;\n }\n \n-extern int ZEXPORT unzGoToFilePos(file, file_pos)\n-    unzFile file;\n-    unz_file_pos* file_pos;\n+extern int ZEXPORT unzGetFilePos(\n+    unzFile file,\n+    unz_file_pos* file_pos)\n+{\n+    unz64_file_pos file_pos64;\n+    int err = unzGetFilePos64(file,&file_pos64);\n+    if (err==UNZ_OK)\n+    {\n+        file_pos->pos_in_zip_directory = (uLong)file_pos64.pos_in_zip_directory;\n+        file_pos->num_of_file = (uLong)file_pos64.num_of_file;\n+    }\n+    return err;\n+}\n+\n+extern int ZEXPORT unzGoToFilePos64(unzFile file, const unz64_file_pos* file_pos)\n {\n-    unz_s* s;\n+    unz64_s* s;\n     int err;\n \n     if (file==NULL || file_pos==NULL)\n         return UNZ_PARAMERROR;\n-    s=(unz_s*)file;\n+    s=(unz64_s*)file;\n \n     /* jump to the right spot */\n     s->pos_in_central_dir = file_pos->pos_in_zip_directory;\n     s->num_file           = file_pos->num_of_file;\n \n     /* set the current file */\n-    err = unzlocal_GetCurrentFileInfoInternal(file,&s->cur_file_info,\n+    err = unz64local_GetCurrentFileInfoInternal(file,&s->cur_file_info,\n                                                &s->cur_file_info_internal,\n                                                NULL,0,NULL,0,NULL,0);\n     /* return results */\n     s->current_file_ok = (err == UNZ_OK);\n     return err;\n }\n \n+extern int ZEXPORT unzGoToFilePos(\n+    unzFile file,\n+    unz_file_pos* file_pos)\n+{\n+    unz64_file_pos file_pos64;\n+    if (file_pos == NULL)\n+        return UNZ_PARAMERROR;\n+\n+    file_pos64.pos_in_zip_directory = file_pos->pos_in_zip_directory;\n+    file_pos64.num_of_file = file_pos->num_of_file;\n+    return unzGoToFilePos64(file,&file_pos64);\n+}\n+\n /*\n // Unzip Helper Functions - should be here?\n ///////////////////////////////////////////\n@@ -954,13 +1382,9 @@ extern int ZEXPORT unzGoToFilePos(file, file_pos)\n   store in *piSizeVar the size of extra info in local header\n         (filename and size of extra field data)\n */\n-local int unzlocal_CheckCurrentFileCoherencyHeader (s,piSizeVar,\n-                                                    poffset_local_extrafield,\n-                                                    psize_local_extrafield)\n-    unz_s* s;\n-    uInt* piSizeVar;\n-    uLong *poffset_local_extrafield;\n-    uInt  *psize_local_extrafield;\n+local int unz64local_CheckCurrentFileCoherencyHeader (unz64_s* s, uInt* piSizeVar,\n+                                                    ZPOS64_T * poffset_local_extrafield,\n+                                                    uInt  * psize_local_extrafield)\n {\n     uLong uMagic,uData,uFlags;\n     uLong size_filename;\n@@ -971,65 +1395,66 @@ local int unzlocal_CheckCurrentFileCoherencyHeader (s,piSizeVar,\n     *poffset_local_extrafield = 0;\n     *psize_local_extrafield = 0;\n \n-    if (ZSEEK(s->z_filefunc, s->filestream,s->cur_file_info_internal.offset_curfile +\n+    if (ZSEEK64(s->z_filefunc, s->filestream,s->cur_file_info_internal.offset_curfile +\n                                 s->byte_before_the_zipfile,ZLIB_FILEFUNC_SEEK_SET)!=0)\n         return UNZ_ERRNO;\n \n \n     if (err==UNZ_OK)\n-        if (unzlocal_getLong(&s->z_filefunc, s->filestream,&uMagic) != UNZ_OK)\n+    {\n+        if (unz64local_getLong(&s->z_filefunc, s->filestream,&uMagic) != UNZ_OK)\n             err=UNZ_ERRNO;\n         else if (uMagic!=0x04034b50)\n             err=UNZ_BADZIPFILE;\n+    }\n \n-    if (unzlocal_getShort(&s->z_filefunc, s->filestream,&uData) != UNZ_OK)\n+    if (unz64local_getShort(&s->z_filefunc, s->filestream,&uData) != UNZ_OK)\n         err=UNZ_ERRNO;\n /*\n     else if ((err==UNZ_OK) && (uData!=s->cur_file_info.wVersion))\n         err=UNZ_BADZIPFILE;\n */\n-    if (unzlocal_getShort(&s->z_filefunc, s->filestream,&uFlags) != UNZ_OK)\n+    if (unz64local_getShort(&s->z_filefunc, s->filestream,&uFlags) != UNZ_OK)\n         err=UNZ_ERRNO;\n \n-    if (unzlocal_getShort(&s->z_filefunc, s->filestream,&uData) != UNZ_OK)\n+    if (unz64local_getShort(&s->z_filefunc, s->filestream,&uData) != UNZ_OK)\n         err=UNZ_ERRNO;\n     else if ((err==UNZ_OK) && (uData!=s->cur_file_info.compression_method))\n         err=UNZ_BADZIPFILE;\n \n     if ((err==UNZ_OK) && (s->cur_file_info.compression_method!=0) &&\n+/* #ifdef HAVE_BZIP2 */\n+                         (s->cur_file_info.compression_method!=Z_BZIP2ED) &&\n+/* #endif */\n                          (s->cur_file_info.compression_method!=Z_DEFLATED))\n         err=UNZ_BADZIPFILE;\n \n-    if (unzlocal_getLong(&s->z_filefunc, s->filestream,&uData) != UNZ_OK) /* date/time */\n+    if (unz64local_getLong(&s->z_filefunc, s->filestream,&uData) != UNZ_OK) /* date/time */\n         err=UNZ_ERRNO;\n \n-    if (unzlocal_getLong(&s->z_filefunc, s->filestream,&uData) != UNZ_OK) /* crc */\n+    if (unz64local_getLong(&s->z_filefunc, s->filestream,&uData) != UNZ_OK) /* crc */\n         err=UNZ_ERRNO;\n-    else if ((err==UNZ_OK) && (uData!=s->cur_file_info.crc) &&\n-                              ((uFlags & 8)==0))\n+    else if ((err==UNZ_OK) && (uData!=s->cur_file_info.crc) && ((uFlags & 8)==0))\n         err=UNZ_BADZIPFILE;\n \n-    if (unzlocal_getLong(&s->z_filefunc, s->filestream,&uData) != UNZ_OK) /* size compr */\n+    if (unz64local_getLong(&s->z_filefunc, s->filestream,&uData) != UNZ_OK) /* size compr */\n         err=UNZ_ERRNO;\n-    else if ((err==UNZ_OK) && (uData!=s->cur_file_info.compressed_size) &&\n-                              ((uFlags & 8)==0))\n+    else if (uData != 0xFFFFFFFF && (err==UNZ_OK) && (uData!=s->cur_file_info.compressed_size) && ((uFlags & 8)==0))\n         err=UNZ_BADZIPFILE;\n \n-    if (unzlocal_getLong(&s->z_filefunc, s->filestream,&uData) != UNZ_OK) /* size uncompr */\n+    if (unz64local_getLong(&s->z_filefunc, s->filestream,&uData) != UNZ_OK) /* size uncompr */\n         err=UNZ_ERRNO;\n-    else if ((err==UNZ_OK) && (uData!=s->cur_file_info.uncompressed_size) &&\n-                              ((uFlags & 8)==0))\n+    else if (uData != 0xFFFFFFFF && (err==UNZ_OK) && (uData!=s->cur_file_info.uncompressed_size) && ((uFlags & 8)==0))\n         err=UNZ_BADZIPFILE;\n \n-\n-    if (unzlocal_getShort(&s->z_filefunc, s->filestream,&size_filename) != UNZ_OK)\n+    if (unz64local_getShort(&s->z_filefunc, s->filestream,&size_filename) != UNZ_OK)\n         err=UNZ_ERRNO;\n     else if ((err==UNZ_OK) && (size_filename!=s->cur_file_info.size_filename))\n         err=UNZ_BADZIPFILE;\n \n     *piSizeVar += (uInt)size_filename;\n \n-    if (unzlocal_getShort(&s->z_filefunc, s->filestream,&size_extra_field) != UNZ_OK)\n+    if (unz64local_getShort(&s->z_filefunc, s->filestream,&size_extra_field) != UNZ_OK)\n         err=UNZ_ERRNO;\n     *poffset_local_extrafield= s->cur_file_info_internal.offset_curfile +\n                                     SIZEZIPLOCALHEADER + size_filename;\n@@ -1044,18 +1469,14 @@ local int unzlocal_CheckCurrentFileCoherencyHeader (s,piSizeVar,\n   Open for reading data the current file in the zipfile.\n   If there is no error and the file is opened, the return value is UNZ_OK.\n */\n-extern int ZEXPORT unzOpenCurrentFile3 (file, method, level, raw, password)\n-    unzFile file;\n-    int* method;\n-    int* level;\n-    int raw;\n-    const char* password;\n+extern int ZEXPORT unzOpenCurrentFile3 (unzFile file, int* method,\n+                                            int* level, int raw, const char* password)\n {\n     int err=UNZ_OK;\n     uInt iSizeVar;\n-    unz_s* s;\n-    file_in_zip_read_info_s* pfile_in_zip_read_info;\n-    uLong offset_local_extrafield;  /* offset of the local extra field */\n+    unz64_s* s;\n+    file_in_zip64_read_info_s* pfile_in_zip_read_info;\n+    ZPOS64_T offset_local_extrafield;  /* offset of the local extra field */\n     uInt  size_local_extrafield;    /* size of the local extra field */\n #    ifndef NOUNCRYPT\n     char source[12];\n@@ -1066,19 +1487,17 @@ extern int ZEXPORT unzOpenCurrentFile3 (file, method, level, raw, password)\n \n     if (file==NULL)\n         return UNZ_PARAMERROR;\n-    s=(unz_s*)file;\n+    s=(unz64_s*)file;\n     if (!s->current_file_ok)\n         return UNZ_PARAMERROR;\n \n     if (s->pfile_in_zip_read != NULL)\n         unzCloseCurrentFile(file);\n \n-    if (unzlocal_CheckCurrentFileCoherencyHeader(s,&iSizeVar,\n-                &offset_local_extrafield,&size_local_extrafield)!=UNZ_OK)\n+    if (unz64local_CheckCurrentFileCoherencyHeader(s,&iSizeVar, &offset_local_extrafield,&size_local_extrafield)!=UNZ_OK)\n         return UNZ_BADZIPFILE;\n \n-    pfile_in_zip_read_info = (file_in_zip_read_info_s*)\n-                                        ALLOC(sizeof(file_in_zip_read_info_s));\n+    pfile_in_zip_read_info = (file_in_zip64_read_info_s*)ALLOC(sizeof(file_in_zip64_read_info_s));\n     if (pfile_in_zip_read_info==NULL)\n         return UNZ_INTERNALERROR;\n \n@@ -1111,31 +1530,60 @@ extern int ZEXPORT unzOpenCurrentFile3 (file, method, level, raw, password)\n     }\n \n     if ((s->cur_file_info.compression_method!=0) &&\n+/* #ifdef HAVE_BZIP2 */\n+        (s->cur_file_info.compression_method!=Z_BZIP2ED) &&\n+/* #endif */\n         (s->cur_file_info.compression_method!=Z_DEFLATED))\n+\n         err=UNZ_BADZIPFILE;\n \n     pfile_in_zip_read_info->crc32_wait=s->cur_file_info.crc;\n     pfile_in_zip_read_info->crc32=0;\n-    pfile_in_zip_read_info->compression_method =\n-            s->cur_file_info.compression_method;\n+    pfile_in_zip_read_info->total_out_64=0;\n+    pfile_in_zip_read_info->compression_method = s->cur_file_info.compression_method;\n     pfile_in_zip_read_info->filestream=s->filestream;\n     pfile_in_zip_read_info->z_filefunc=s->z_filefunc;\n     pfile_in_zip_read_info->byte_before_the_zipfile=s->byte_before_the_zipfile;\n \n     pfile_in_zip_read_info->stream.total_out = 0;\n \n-    if ((s->cur_file_info.compression_method==Z_DEFLATED) &&\n-        (!raw))\n+    if ((s->cur_file_info.compression_method==Z_BZIP2ED) && (!raw))\n     {\n+#ifdef HAVE_BZIP2\n+      pfile_in_zip_read_info->bstream.bzalloc = (void *(*) (void *, int, int))0;\n+      pfile_in_zip_read_info->bstream.bzfree = (free_func)0;\n+      pfile_in_zip_read_info->bstream.opaque = (voidpf)0;\n+      pfile_in_zip_read_info->bstream.state = (voidpf)0;\n+\n       pfile_in_zip_read_info->stream.zalloc = (alloc_func)0;\n       pfile_in_zip_read_info->stream.zfree = (free_func)0;\n       pfile_in_zip_read_info->stream.opaque = (voidpf)0;\n       pfile_in_zip_read_info->stream.next_in = (voidpf)0;\n       pfile_in_zip_read_info->stream.avail_in = 0;\n \n+      err=BZ2_bzDecompressInit(&pfile_in_zip_read_info->bstream, 0, 0);\n+      if (err == Z_OK)\n+        pfile_in_zip_read_info->stream_initialised=Z_BZIP2ED;\n+      else\n+      {\n+        TRYFREE(pfile_in_zip_read_info);\n+        return err;\n+      }\n+#else\n+      pfile_in_zip_read_info->raw=1;\n+#endif\n+    }\n+    else if ((s->cur_file_info.compression_method==Z_DEFLATED) && (!raw))\n+    {\n+      pfile_in_zip_read_info->stream.zalloc = (alloc_func)0;\n+      pfile_in_zip_read_info->stream.zfree = (free_func)0;\n+      pfile_in_zip_read_info->stream.opaque = (voidpf)0;\n+      pfile_in_zip_read_info->stream.next_in = 0;\n+      pfile_in_zip_read_info->stream.avail_in = 0;\n+\n       err=inflateInit2(&pfile_in_zip_read_info->stream, -MAX_WBITS);\n       if (err == Z_OK)\n-        pfile_in_zip_read_info->stream_initialised=1;\n+        pfile_in_zip_read_info->stream_initialised=Z_DEFLATED;\n       else\n       {\n         TRYFREE(pfile_in_zip_read_info);\n@@ -1162,19 +1610,20 @@ extern int ZEXPORT unzOpenCurrentFile3 (file, method, level, raw, password)\n     pfile_in_zip_read_info->stream.avail_in = (uInt)0;\n \n     s->pfile_in_zip_read = pfile_in_zip_read_info;\n+                s->encrypted = 0;\n \n #    ifndef NOUNCRYPT\n     if (password != NULL)\n     {\n         int i;\n         s->pcrc_32_tab = get_crc_table();\n         init_keys(password,s->keys,s->pcrc_32_tab);\n-        if (ZSEEK(s->z_filefunc, s->filestream,\n+        if (ZSEEK64(s->z_filefunc, s->filestream,\n                   s->pfile_in_zip_read->pos_in_zipfile +\n                      s->pfile_in_zip_read->byte_before_the_zipfile,\n                   SEEK_SET)!=0)\n             return UNZ_INTERNALERROR;\n-        if(ZREAD(s->z_filefunc, s->filestream,source, 12)<12)\n+        if(ZREAD64(s->z_filefunc, s->filestream,source, 12)<12)\n             return UNZ_INTERNALERROR;\n \n         for (i = 0; i<12; i++)\n@@ -1189,28 +1638,39 @@ extern int ZEXPORT unzOpenCurrentFile3 (file, method, level, raw, password)\n     return UNZ_OK;\n }\n \n-extern int ZEXPORT unzOpenCurrentFile (file)\n-    unzFile file;\n+extern int ZEXPORT unzOpenCurrentFile (unzFile file)\n {\n     return unzOpenCurrentFile3(file, NULL, NULL, 0, NULL);\n }\n \n-extern int ZEXPORT unzOpenCurrentFilePassword (file, password)\n-    unzFile file;\n-    const char* password;\n+extern int ZEXPORT unzOpenCurrentFilePassword (unzFile file, const char*  password)\n {\n     return unzOpenCurrentFile3(file, NULL, NULL, 0, password);\n }\n \n-extern int ZEXPORT unzOpenCurrentFile2 (file,method,level,raw)\n-    unzFile file;\n-    int* method;\n-    int* level;\n-    int raw;\n+extern int ZEXPORT unzOpenCurrentFile2 (unzFile file, int* method, int* level, int raw)\n {\n     return unzOpenCurrentFile3(file, method, level, raw, NULL);\n }\n \n+/** Addition for GDAL : START */\n+\n+extern ZPOS64_T ZEXPORT unzGetCurrentFileZStreamPos64( unzFile file)\n+{\n+    unz64_s* s;\n+    file_in_zip64_read_info_s* pfile_in_zip_read_info;\n+    s=(unz64_s*)file;\n+    if (file==NULL)\n+        return 0; //UNZ_PARAMERROR;\n+    pfile_in_zip_read_info=s->pfile_in_zip_read;\n+    if (pfile_in_zip_read_info==NULL)\n+        return 0; //UNZ_PARAMERROR;\n+    return pfile_in_zip_read_info->pos_in_zipfile +\n+                         pfile_in_zip_read_info->byte_before_the_zipfile;\n+}\n+\n+/** Addition for GDAL : END */\n+\n /*\n   Read bytes from the current file.\n   buf contain buffer where data must be copied\n@@ -1221,18 +1681,15 @@ extern int ZEXPORT unzOpenCurrentFile2 (file,method,level,raw)\n   return <0 with error code if there is an error\n     (UNZ_ERRNO for IO error, or zLib error for uncompress error)\n */\n-extern int ZEXPORT unzReadCurrentFile  (file, buf, len)\n-    unzFile file;\n-    voidp buf;\n-    unsigned len;\n+extern int ZEXPORT unzReadCurrentFile  (unzFile file, voidp buf, unsigned len)\n {\n     int err=UNZ_OK;\n     uInt iRead = 0;\n-    unz_s* s;\n-    file_in_zip_read_info_s* pfile_in_zip_read_info;\n+    unz64_s* s;\n+    file_in_zip64_read_info_s* pfile_in_zip_read_info;\n     if (file==NULL)\n         return UNZ_PARAMERROR;\n-    s=(unz_s*)file;\n+    s=(unz64_s*)file;\n     pfile_in_zip_read_info=s->pfile_in_zip_read;\n \n     if (pfile_in_zip_read_info==NULL)\n@@ -1270,13 +1727,13 @@ extern int ZEXPORT unzReadCurrentFile  (file, buf, len)\n                 uReadThis = (uInt)pfile_in_zip_read_info->rest_read_compressed;\n             if (uReadThis == 0)\n                 return UNZ_EOF;\n-            if (ZSEEK(pfile_in_zip_read_info->z_filefunc,\n+            if (ZSEEK64(pfile_in_zip_read_info->z_filefunc,\n                       pfile_in_zip_read_info->filestream,\n                       pfile_in_zip_read_info->pos_in_zipfile +\n                          pfile_in_zip_read_info->byte_before_the_zipfile,\n                          ZLIB_FILEFUNC_SEEK_SET)!=0)\n                 return UNZ_ERRNO;\n-            if (ZREAD(pfile_in_zip_read_info->z_filefunc,\n+            if (ZREAD64(pfile_in_zip_read_info->z_filefunc,\n                       pfile_in_zip_read_info->filestream,\n                       pfile_in_zip_read_info->read_buffer,\n                       uReadThis)!=uReadThis)\n@@ -1322,6 +1779,8 @@ extern int ZEXPORT unzReadCurrentFile  (file, buf, len)\n                 *(pfile_in_zip_read_info->stream.next_out+i) =\n                         *(pfile_in_zip_read_info->stream.next_in+i);\n \n+            pfile_in_zip_read_info->total_out_64 = pfile_in_zip_read_info->total_out_64 + uDoCopy;\n+\n             pfile_in_zip_read_info->crc32 = crc32(pfile_in_zip_read_info->crc32,\n                                 pfile_in_zip_read_info->stream.next_out,\n                                 uDoCopy);\n@@ -1333,11 +1792,54 @@ extern int ZEXPORT unzReadCurrentFile  (file, buf, len)\n             pfile_in_zip_read_info->stream.total_out += uDoCopy;\n             iRead += uDoCopy;\n         }\n-        else\n+        else if (pfile_in_zip_read_info->compression_method==Z_BZIP2ED)\n         {\n+#ifdef HAVE_BZIP2\n             uLong uTotalOutBefore,uTotalOutAfter;\n             const Bytef *bufBefore;\n             uLong uOutThis;\n+\n+            pfile_in_zip_read_info->bstream.next_in        = (char*)pfile_in_zip_read_info->stream.next_in;\n+            pfile_in_zip_read_info->bstream.avail_in       = pfile_in_zip_read_info->stream.avail_in;\n+            pfile_in_zip_read_info->bstream.total_in_lo32  = pfile_in_zip_read_info->stream.total_in;\n+            pfile_in_zip_read_info->bstream.total_in_hi32  = 0;\n+            pfile_in_zip_read_info->bstream.next_out       = (char*)pfile_in_zip_read_info->stream.next_out;\n+            pfile_in_zip_read_info->bstream.avail_out      = pfile_in_zip_read_info->stream.avail_out;\n+            pfile_in_zip_read_info->bstream.total_out_lo32 = pfile_in_zip_read_info->stream.total_out;\n+            pfile_in_zip_read_info->bstream.total_out_hi32 = 0;\n+\n+            uTotalOutBefore = pfile_in_zip_read_info->bstream.total_out_lo32;\n+            bufBefore = (const Bytef *)pfile_in_zip_read_info->bstream.next_out;\n+\n+            err=BZ2_bzDecompress(&pfile_in_zip_read_info->bstream);\n+\n+            uTotalOutAfter = pfile_in_zip_read_info->bstream.total_out_lo32;\n+            uOutThis = uTotalOutAfter-uTotalOutBefore;\n+\n+            pfile_in_zip_read_info->total_out_64 = pfile_in_zip_read_info->total_out_64 + uOutThis;\n+\n+            pfile_in_zip_read_info->crc32 = crc32(pfile_in_zip_read_info->crc32,bufBefore, (uInt)(uOutThis));\n+            pfile_in_zip_read_info->rest_read_uncompressed -= uOutThis;\n+            iRead += (uInt)(uTotalOutAfter - uTotalOutBefore);\n+\n+            pfile_in_zip_read_info->stream.next_in   = (Bytef*)pfile_in_zip_read_info->bstream.next_in;\n+            pfile_in_zip_read_info->stream.avail_in  = pfile_in_zip_read_info->bstream.avail_in;\n+            pfile_in_zip_read_info->stream.total_in  = pfile_in_zip_read_info->bstream.total_in_lo32;\n+            pfile_in_zip_read_info->stream.next_out  = (Bytef*)pfile_in_zip_read_info->bstream.next_out;\n+            pfile_in_zip_read_info->stream.avail_out = pfile_in_zip_read_info->bstream.avail_out;\n+            pfile_in_zip_read_info->stream.total_out = pfile_in_zip_read_info->bstream.total_out_lo32;\n+\n+            if (err==BZ_STREAM_END)\n+              return (iRead==0) ? UNZ_EOF : iRead;\n+            if (err!=BZ_OK)\n+              break;\n+#endif\n+        } // end Z_BZIP2ED\n+        else\n+        {\n+            ZPOS64_T uTotalOutBefore,uTotalOutAfter;\n+            const Bytef *bufBefore;\n+            ZPOS64_T uOutThis;\n             int flush=Z_SYNC_FLUSH;\n \n             uTotalOutBefore = pfile_in_zip_read_info->stream.total_out;\n@@ -1357,6 +1859,8 @@ extern int ZEXPORT unzReadCurrentFile  (file, buf, len)\n             uTotalOutAfter = pfile_in_zip_read_info->stream.total_out;\n             uOutThis = uTotalOutAfter-uTotalOutBefore;\n \n+            pfile_in_zip_read_info->total_out_64 = pfile_in_zip_read_info->total_out_64 + uOutThis;\n+\n             pfile_in_zip_read_info->crc32 =\n                 crc32(pfile_in_zip_read_info->crc32,bufBefore,\n                         (uInt)(uOutThis));\n@@ -1382,14 +1886,13 @@ extern int ZEXPORT unzReadCurrentFile  (file, buf, len)\n /*\n   Give the current position in uncompressed data\n */\n-extern z_off_t ZEXPORT unztell (file)\n-    unzFile file;\n+extern z_off_t ZEXPORT unztell (unzFile file)\n {\n-    unz_s* s;\n-    file_in_zip_read_info_s* pfile_in_zip_read_info;\n+    unz64_s* s;\n+    file_in_zip64_read_info_s* pfile_in_zip_read_info;\n     if (file==NULL)\n         return UNZ_PARAMERROR;\n-    s=(unz_s*)file;\n+    s=(unz64_s*)file;\n     pfile_in_zip_read_info=s->pfile_in_zip_read;\n \n     if (pfile_in_zip_read_info==NULL)\n@@ -1398,18 +1901,33 @@ extern z_off_t ZEXPORT unztell (file)\n     return (z_off_t)pfile_in_zip_read_info->stream.total_out;\n }\n \n+extern ZPOS64_T ZEXPORT unztell64 (unzFile file)\n+{\n+\n+    unz64_s* s;\n+    file_in_zip64_read_info_s* pfile_in_zip_read_info;\n+    if (file==NULL)\n+        return (ZPOS64_T)-1;\n+    s=(unz64_s*)file;\n+    pfile_in_zip_read_info=s->pfile_in_zip_read;\n+\n+    if (pfile_in_zip_read_info==NULL)\n+        return (ZPOS64_T)-1;\n+\n+    return pfile_in_zip_read_info->total_out_64;\n+}\n+\n \n /*\n   return 1 if the end of file was reached, 0 elsewhere\n */\n-extern int ZEXPORT unzeof (file)\n-    unzFile file;\n+extern int ZEXPORT unzeof (unzFile file)\n {\n-    unz_s* s;\n-    file_in_zip_read_info_s* pfile_in_zip_read_info;\n+    unz64_s* s;\n+    file_in_zip64_read_info_s* pfile_in_zip_read_info;\n     if (file==NULL)\n         return UNZ_PARAMERROR;\n-    s=(unz_s*)file;\n+    s=(unz64_s*)file;\n     pfile_in_zip_read_info=s->pfile_in_zip_read;\n \n     if (pfile_in_zip_read_info==NULL)\n@@ -1424,9 +1942,9 @@ extern int ZEXPORT unzeof (file)\n \n \n /*\n-  Read extra field from the current file (opened by unzOpenCurrentFile)\n-  This is the local-header version of the extra field (sometimes, there is\n-    more info in the local-header version than in the central-header)\n+Read extra field from the current file (opened by unzOpenCurrentFile)\n+This is the local-header version of the extra field (sometimes, there is\n+more info in the local-header version than in the central-header)\n \n   if buf==NULL, it return the size of the local extra field that can be read\n \n@@ -1435,19 +1953,16 @@ extern int ZEXPORT unzeof (file)\n   the return value is the number of bytes copied in buf, or (if <0)\n     the error code\n */\n-extern int ZEXPORT unzGetLocalExtrafield (file,buf,len)\n-    unzFile file;\n-    voidp buf;\n-    unsigned len;\n+extern int ZEXPORT unzGetLocalExtrafield (unzFile file, voidp buf, unsigned len)\n {\n-    unz_s* s;\n-    file_in_zip_read_info_s* pfile_in_zip_read_info;\n+    unz64_s* s;\n+    file_in_zip64_read_info_s* pfile_in_zip_read_info;\n     uInt read_now;\n-    uLong size_to_read;\n+    ZPOS64_T size_to_read;\n \n     if (file==NULL)\n         return UNZ_PARAMERROR;\n-    s=(unz_s*)file;\n+    s=(unz64_s*)file;\n     pfile_in_zip_read_info=s->pfile_in_zip_read;\n \n     if (pfile_in_zip_read_info==NULL)\n@@ -1467,14 +1982,14 @@ extern int ZEXPORT unzGetLocalExtrafield (file,buf,len)\n     if (read_now==0)\n         return 0;\n \n-    if (ZSEEK(pfile_in_zip_read_info->z_filefunc,\n+    if (ZSEEK64(pfile_in_zip_read_info->z_filefunc,\n               pfile_in_zip_read_info->filestream,\n               pfile_in_zip_read_info->offset_local_extrafield +\n               pfile_in_zip_read_info->pos_local_extrafield,\n               ZLIB_FILEFUNC_SEEK_SET)!=0)\n         return UNZ_ERRNO;\n \n-    if (ZREAD(pfile_in_zip_read_info->z_filefunc,\n+    if (ZREAD64(pfile_in_zip_read_info->z_filefunc,\n               pfile_in_zip_read_info->filestream,\n               buf,read_now)!=read_now)\n         return UNZ_ERRNO;\n@@ -1486,16 +2001,15 @@ extern int ZEXPORT unzGetLocalExtrafield (file,buf,len)\n   Close the file in zip opened with unzipOpenCurrentFile\n   Return UNZ_CRCERROR if all the file was read but the CRC is not good\n */\n-extern int ZEXPORT unzCloseCurrentFile (file)\n-    unzFile file;\n+extern int ZEXPORT unzCloseCurrentFile (unzFile file)\n {\n     int err=UNZ_OK;\n \n-    unz_s* s;\n-    file_in_zip_read_info_s* pfile_in_zip_read_info;\n+    unz64_s* s;\n+    file_in_zip64_read_info_s* pfile_in_zip_read_info;\n     if (file==NULL)\n         return UNZ_PARAMERROR;\n-    s=(unz_s*)file;\n+    s=(unz64_s*)file;\n     pfile_in_zip_read_info=s->pfile_in_zip_read;\n \n     if (pfile_in_zip_read_info==NULL)\n@@ -1512,8 +2026,13 @@ extern int ZEXPORT unzCloseCurrentFile (file)\n \n     TRYFREE(pfile_in_zip_read_info->read_buffer);\n     pfile_in_zip_read_info->read_buffer = NULL;\n-    if (pfile_in_zip_read_info->stream_initialised)\n+    if (pfile_in_zip_read_info->stream_initialised == Z_DEFLATED)\n         inflateEnd(&pfile_in_zip_read_info->stream);\n+#ifdef HAVE_BZIP2\n+    else if (pfile_in_zip_read_info->stream_initialised == Z_BZIP2ED)\n+        BZ2_bzDecompressEnd(&pfile_in_zip_read_info->bstream);\n+#endif\n+\n \n     pfile_in_zip_read_info->stream_initialised = 0;\n     TRYFREE(pfile_in_zip_read_info);\n@@ -1529,29 +2048,25 @@ extern int ZEXPORT unzCloseCurrentFile (file)\n   uSizeBuf is the size of the szComment buffer.\n   return the number of byte copied or an error code <0\n */\n-extern int ZEXPORT unzGetGlobalComment (file, szComment, uSizeBuf)\n-    unzFile file;\n-    char *szComment;\n-    uLong uSizeBuf;\n+extern int ZEXPORT unzGetGlobalComment (unzFile file, char * szComment, uLong uSizeBuf)\n {\n-    int err=UNZ_OK;\n-    unz_s* s;\n+    unz64_s* s;\n     uLong uReadThis ;\n     if (file==NULL)\n-        return UNZ_PARAMERROR;\n-    s=(unz_s*)file;\n+        return (int)UNZ_PARAMERROR;\n+    s=(unz64_s*)file;\n \n     uReadThis = uSizeBuf;\n     if (uReadThis>s->gi.size_comment)\n         uReadThis = s->gi.size_comment;\n \n-    if (ZSEEK(s->z_filefunc,s->filestream,s->central_pos+22,ZLIB_FILEFUNC_SEEK_SET)!=0)\n+    if (ZSEEK64(s->z_filefunc,s->filestream,s->central_pos+22,ZLIB_FILEFUNC_SEEK_SET)!=0)\n         return UNZ_ERRNO;\n \n     if (uReadThis>0)\n     {\n       *szComment='\\0';\n-      if (ZREAD(s->z_filefunc,s->filestream,szComment,uReadThis)!=uReadThis)\n+      if (ZREAD64(s->z_filefunc,s->filestream,szComment,uReadThis)!=uReadThis)\n         return UNZ_ERRNO;\n     }\n \n@@ -1561,14 +2076,13 @@ extern int ZEXPORT unzGetGlobalComment (file, szComment, uSizeBuf)\n }\n \n /* Additions by RX '2004 */\n-extern uLong ZEXPORT unzGetOffset (file)\n-    unzFile file;\n+extern ZPOS64_T ZEXPORT unzGetOffset64(unzFile file)\n {\n-    unz_s* s;\n+    unz64_s* s;\n \n     if (file==NULL)\n-          return UNZ_PARAMERROR;\n-    s=(unz_s*)file;\n+          return 0; //UNZ_PARAMERROR;\n+    s=(unz64_s*)file;\n     if (!s->current_file_ok)\n       return 0;\n     if (s->gi.number_entry != 0 && s->gi.number_entry != 0xffff)\n@@ -1577,22 +2091,35 @@ extern uLong ZEXPORT unzGetOffset (file)\n     return s->pos_in_central_dir;\n }\n \n-extern int ZEXPORT unzSetOffset (file, pos)\n-        unzFile file;\n-        uLong pos;\n+extern uLong ZEXPORT unzGetOffset (unzFile file)\n+{\n+    ZPOS64_T offset64;\n+\n+    if (file==NULL)\n+          return 0; //UNZ_PARAMERROR;\n+    offset64 = unzGetOffset64(file);\n+    return (uLong)offset64;\n+}\n+\n+extern int ZEXPORT unzSetOffset64(unzFile file, ZPOS64_T pos)\n {\n-    unz_s* s;\n+    unz64_s* s;\n     int err;\n \n     if (file==NULL)\n         return UNZ_PARAMERROR;\n-    s=(unz_s*)file;\n+    s=(unz64_s*)file;\n \n     s->pos_in_central_dir = pos;\n     s->num_file = s->gi.number_entry;      /* hack */\n-    err = unzlocal_GetCurrentFileInfoInternal(file,&s->cur_file_info,\n+    err = unz64local_GetCurrentFileInfoInternal(file,&s->cur_file_info,\n                                               &s->cur_file_info_internal,\n                                               NULL,0,NULL,0,NULL,0);\n     s->current_file_ok = (err == UNZ_OK);\n     return err;\n }\n+\n+extern int ZEXPORT unzSetOffset (unzFile file, uLong pos)\n+{\n+    return unzSetOffset64(file,pos);\n+}"}, {"sha": "3183968b771e3c261fdcc7a0f50bd743faf531e3", "filename": "zlib/contrib/minizip/unzip.h", "status": "modified", "additions": 105, "deletions": 22, "changes": 127, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fminizip%2Funzip.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fminizip%2Funzip.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fminizip%2Funzip.h?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,20 +1,20 @@\n /* unzip.h -- IO for uncompress .zip files using zlib\n-   Version 1.01e, February 12th, 2005\n+   Version 1.1, February 14h, 2010\n+   part of the MiniZip project - ( http://www.winimage.com/zLibDll/minizip.html )\n \n-   Copyright (C) 1998-2005 Gilles Vollant\n+         Copyright (C) 1998-2010 Gilles Vollant (minizip) ( http://www.winimage.com/zLibDll/minizip.html )\n \n-   This unzip package allow extract file from .ZIP file, compatible with PKZip 2.04g\n-     WinZip, InfoZip tools and compatible.\n+         Modifications of Unzip for Zip64\n+         Copyright (C) 2007-2008 Even Rouault\n \n-   Multi volume ZipFile (span) are not supported.\n-   Encryption compatible with pkzip 2.04g only supported\n-   Old compressions used by old PKZip 1.x are not supported\n+         Modifications for Zip64 support on both zip and unzip\n+         Copyright (C) 2009-2010 Mathias Svensson ( http://result42.com )\n \n+         For more info read MiniZip_info.txt\n \n-   I WAIT FEEDBACK at mail info@winimage.com\n-   Visit also http://www.winimage.com/zLibDll/unzip.htm for evolution\n+         ---------------------------------------------------------------------------------\n \n-   Condition of use and distribution are the same than zlib :\n+        Condition of use and distribution are the same than zlib :\n \n   This software is provided 'as-is', without any express or implied\n   warranty.  In no event will the authors be held liable for any damages\n@@ -32,18 +32,16 @@\n      misrepresented as being the original software.\n   3. This notice may not be removed or altered from any source distribution.\n \n+  ---------------------------------------------------------------------------------\n \n-*/\n+        Changes\n+\n+        See header of unzip64.c\n \n-/* for more info about .ZIP format, see\n-      http://www.info-zip.org/pub/infozip/doc/appnote-981119-iz.zip\n-      http://www.info-zip.org/pub/infozip/doc/\n-   PkWare has also a specification at :\n-      ftp://ftp.pkware.com/probdesc.zip\n */\n \n-#ifndef _unz_H\n-#define _unz_H\n+#ifndef _unz64_H\n+#define _unz64_H\n \n #ifdef __cplusplus\n extern \"C\" {\n@@ -53,10 +51,16 @@ extern \"C\" {\n #include \"zlib.h\"\n #endif\n \n-#ifndef _ZLIBIOAPI_H\n+#ifndef  _ZLIBIOAPI_H\n #include \"ioapi.h\"\n #endif\n \n+#ifdef HAVE_BZIP2\n+#include \"bzlib.h\"\n+#endif\n+\n+#define Z_BZIP2ED 12\n+\n #if defined(STRICTUNZIP) || defined(STRICTZIPUNZIP)\n /* like the STRICT of WIN32, we define a pointer that cannot be converted\n     from (void*) without cast */\n@@ -89,15 +93,42 @@ typedef struct tm_unz_s\n \n /* unz_global_info structure contain global data about the ZIPfile\n    These data comes from the end of central dir */\n+typedef struct unz_global_info64_s\n+{\n+    ZPOS64_T number_entry;         /* total number of entries in\n+                                     the central dir on this disk */\n+    uLong size_comment;         /* size of the global comment of the zipfile */\n+} unz_global_info64;\n+\n typedef struct unz_global_info_s\n {\n     uLong number_entry;         /* total number of entries in\n-                       the central dir on this disk */\n+                                     the central dir on this disk */\n     uLong size_comment;         /* size of the global comment of the zipfile */\n } unz_global_info;\n \n-\n /* unz_file_info contain information about a file in the zipfile */\n+typedef struct unz_file_info64_s\n+{\n+    uLong version;              /* version made by                 2 bytes */\n+    uLong version_needed;       /* version needed to extract       2 bytes */\n+    uLong flag;                 /* general purpose bit flag        2 bytes */\n+    uLong compression_method;   /* compression method              2 bytes */\n+    uLong dosDate;              /* last mod file date in Dos fmt   4 bytes */\n+    uLong crc;                  /* crc-32                          4 bytes */\n+    ZPOS64_T compressed_size;   /* compressed size                 8 bytes */\n+    ZPOS64_T uncompressed_size; /* uncompressed size               8 bytes */\n+    uLong size_filename;        /* filename length                 2 bytes */\n+    uLong size_file_extra;      /* extra field length              2 bytes */\n+    uLong size_file_comment;    /* file comment length             2 bytes */\n+\n+    uLong disk_num_start;       /* disk number start               2 bytes */\n+    uLong internal_fa;          /* internal file attributes        2 bytes */\n+    uLong external_fa;          /* external file attributes        4 bytes */\n+\n+    tm_unz tmu_date;\n+} unz_file_info64;\n+\n typedef struct unz_file_info_s\n {\n     uLong version;              /* version made by                 2 bytes */\n@@ -133,6 +164,7 @@ extern int ZEXPORT unzStringFileNameCompare OF ((const char* fileName1,\n \n \n extern unzFile ZEXPORT unzOpen OF((const char *path));\n+extern unzFile ZEXPORT unzOpen64 OF((const void *path));\n /*\n   Open a Zip file. path contain the full pathname (by example,\n      on a Windows XP computer \"c:\\\\zlib\\\\zlib113.zip\" or on an Unix computer\n@@ -141,15 +173,28 @@ extern unzFile ZEXPORT unzOpen OF((const char *path));\n        return value is NULL.\n      Else, the return value is a unzFile Handle, usable with other function\n        of this unzip package.\n+     the \"64\" function take a const void* pointer, because the path is just the\n+       value passed to the open64_file_func callback.\n+     Under Windows, if UNICODE is defined, using fill_fopen64_filefunc, the path\n+       is a pointer to a wide unicode string (LPCTSTR is LPCWSTR), so const char*\n+       does not describe the reality\n */\n \n+\n extern unzFile ZEXPORT unzOpen2 OF((const char *path,\n                                     zlib_filefunc_def* pzlib_filefunc_def));\n /*\n    Open a Zip file, like unzOpen, but provide a set of file low level API\n       for read/write the zip file (see ioapi.h)\n */\n \n+extern unzFile ZEXPORT unzOpen2_64 OF((const void *path,\n+                                    zlib_filefunc64_def* pzlib_filefunc_def));\n+/*\n+   Open a Zip file, like unz64Open, but provide a set of file low level API\n+      for read/write the zip file (see ioapi.h)\n+*/\n+\n extern int ZEXPORT unzClose OF((unzFile file));\n /*\n   Close a ZipFile opened with unzipOpen.\n@@ -159,6 +204,9 @@ extern int ZEXPORT unzClose OF((unzFile file));\n \n extern int ZEXPORT unzGetGlobalInfo OF((unzFile file,\n                                         unz_global_info *pglobal_info));\n+\n+extern int ZEXPORT unzGetGlobalInfo64 OF((unzFile file,\n+                                        unz_global_info64 *pglobal_info));\n /*\n   Write info about the ZipFile in the *pglobal_info structure.\n   No preparation of the structure is needed\n@@ -221,8 +269,31 @@ extern int ZEXPORT unzGoToFilePos(\n     unzFile file,\n     unz_file_pos* file_pos);\n \n+typedef struct unz64_file_pos_s\n+{\n+    ZPOS64_T pos_in_zip_directory;   /* offset in zip file directory */\n+    ZPOS64_T num_of_file;            /* # of file */\n+} unz64_file_pos;\n+\n+extern int ZEXPORT unzGetFilePos64(\n+    unzFile file,\n+    unz64_file_pos* file_pos);\n+\n+extern int ZEXPORT unzGoToFilePos64(\n+    unzFile file,\n+    const unz64_file_pos* file_pos);\n+\n /* ****************************************** */\n \n+extern int ZEXPORT unzGetCurrentFileInfo64 OF((unzFile file,\n+                         unz_file_info64 *pfile_info,\n+                         char *szFileName,\n+                         uLong fileNameBufferSize,\n+                         void *extraField,\n+                         uLong extraFieldBufferSize,\n+                         char *szComment,\n+                         uLong commentBufferSize));\n+\n extern int ZEXPORT unzGetCurrentFileInfo OF((unzFile file,\n                          unz_file_info *pfile_info,\n                          char *szFileName,\n@@ -244,6 +315,14 @@ extern int ZEXPORT unzGetCurrentFileInfo OF((unzFile file,\n             (commentBufferSize is the size of the buffer)\n */\n \n+\n+/** Addition for GDAL : START */\n+\n+extern ZPOS64_T ZEXPORT unzGetCurrentFileZStreamPos64 OF((unzFile file));\n+\n+/** Addition for GDAL : END */\n+\n+\n /***************************************************************************/\n /* for reading the content of the current zipfile, you can open it, read data\n    from it, and close it (you can close it before reading all the file)\n@@ -312,6 +391,8 @@ extern int ZEXPORT unzReadCurrentFile OF((unzFile file,\n */\n \n extern z_off_t ZEXPORT unztell OF((unzFile file));\n+\n+extern ZPOS64_T ZEXPORT unztell64 OF((unzFile file));\n /*\n   Give the current position in uncompressed data\n */\n@@ -340,9 +421,11 @@ extern int ZEXPORT unzGetLocalExtrafield OF((unzFile file,\n /***************************************************************************/\n \n /* Get the current file offset */\n+extern ZPOS64_T ZEXPORT unzGetOffset64 (unzFile file);\n extern uLong ZEXPORT unzGetOffset (unzFile file);\n \n /* Set the current file offset */\n+extern int ZEXPORT unzSetOffset64 (unzFile file, ZPOS64_T pos);\n extern int ZEXPORT unzSetOffset (unzFile file, uLong pos);\n \n \n@@ -351,4 +434,4 @@ extern int ZEXPORT unzSetOffset (unzFile file, uLong pos);\n }\n #endif\n \n-#endif /* _unz_H */\n+#endif /* _unz64_H */"}, {"sha": "3c34fc8bd4925ae4efd0527018bd95c3279a9b23", "filename": "zlib/contrib/minizip/zip.c", "status": "modified", "additions": 1307, "deletions": 522, "changes": 1829, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fminizip%2Fzip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fminizip%2Fzip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fminizip%2Fzip.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,12 +1,24 @@\n /* zip.c -- IO on .zip files using zlib\n-   Version 1.01e, February 12th, 2005\n+   Version 1.1, February 14h, 2010\n+   part of the MiniZip project - ( http://www.winimage.com/zLibDll/minizip.html )\n \n-   27 Dec 2004 Rolf Kalbermatter\n-   Modification to zipOpen2 to support globalComment retrieval.\n+         Copyright (C) 1998-2010 Gilles Vollant (minizip) ( http://www.winimage.com/zLibDll/minizip.html )\n \n-   Copyright (C) 1998-2005 Gilles Vollant\n+         Modifications for Zip64 support\n+         Copyright (C) 2009-2010 Mathias Svensson ( http://result42.com )\n+\n+         For more info read MiniZip_info.txt\n+\n+         Changes\n+   Oct-2009 - Mathias Svensson - Remove old C style function prototypes\n+   Oct-2009 - Mathias Svensson - Added Zip64 Support when creating new file archives\n+   Oct-2009 - Mathias Svensson - Did some code cleanup and refactoring to get better overview of some functions.\n+   Oct-2009 - Mathias Svensson - Added zipRemoveExtraInfoBlock to strip extra field data from its ZIP64 data\n+                                 It is used when recreting zip archive with RAW when deleting items from a zip.\n+                                 ZIP64 data is automaticly added to items that needs it, and existing ZIP64 data need to be removed.\n+   Oct-2009 - Mathias Svensson - Added support for BZIP2 as compression mode (bzip2 lib is required)\n+   Jan-2010 - back to unzip and minizip 1.0 name scheme, with compatibility layer\n \n-   Read zip.h for more info\n */\n \n \n@@ -39,7 +51,7 @@\n #endif\n \n #ifndef Z_BUFSIZE\n-#define Z_BUFSIZE (16384)\n+#define Z_BUFSIZE (64*1024) //(16384)\n #endif\n \n #ifndef Z_MAXFILENAMEINZIP\n@@ -60,6 +72,10 @@\n \n /* I've found an old Unix (a SunOS 4.1.3_U1) without all SEEK_* defined.... */\n \n+\n+// NOT sure that this work on ALL platform\n+#define MAKEULONG64(a, b) ((ZPOS64_T)(((unsigned long)(a)) | ((ZPOS64_T)((unsigned long)(b))) << 32))\n+\n #ifndef SEEK_CUR\n #define SEEK_CUR    1\n #endif\n@@ -79,15 +95,16 @@\n #  define DEF_MEM_LEVEL  MAX_MEM_LEVEL\n #endif\n #endif\n-const char zip_copyright[] =\n-   \" zip 1.01 Copyright 1998-2004 Gilles Vollant - http://www.winimage.com/zLibDll\";\n+const char zip_copyright[] =\" zip 1.01 Copyright 1998-2004 Gilles Vollant - http://www.winimage.com/zLibDll\";\n \n \n #define SIZEDATA_INDATABLOCK (4096-(4*4))\n \n #define LOCALHEADERMAGIC    (0x04034b50)\n #define CENTRALHEADERMAGIC  (0x02014b50)\n #define ENDHEADERMAGIC      (0x06054b50)\n+#define ZIP64ENDHEADERMAGIC      (0x6064b50)\n+#define ZIP64ENDLOCHEADERMAGIC   (0x7064b50)\n \n #define FLAG_LOCALHEADER_OFFSET (0x06)\n #define CRC_LOCALHEADER_OFFSET  (0x0e)\n@@ -113,13 +130,19 @@ typedef struct linkedlist_data_s\n typedef struct\n {\n     z_stream stream;            /* zLib stream structure for inflate */\n+#ifdef HAVE_BZIP2\n+    bz_stream bstream;          /* bzLib stream structure for bziped */\n+#endif\n+\n     int  stream_initialised;    /* 1 is stream is initialised */\n     uInt pos_in_buffered_data;  /* last written byte in buffered_data */\n \n-    uLong pos_local_header;     /* offset of the local header of the file\n+    ZPOS64_T pos_local_header;     /* offset of the local header of the file\n                                      currenty writing */\n     char* central_header;       /* central header data for the current file */\n+    uLong size_centralExtra;\n     uLong size_centralheader;   /* size of the central header for cur file */\n+    uLong size_centralExtraFree; /* Extra bytes allocated to the centralheader but that are not used */\n     uLong flag;                 /* flag of the file currently writing */\n \n     int  method;                /* compression method of file currenty wr.*/\n@@ -128,29 +151,34 @@ typedef struct\n     uLong dosDate;\n     uLong crc32;\n     int  encrypt;\n+    int  zip64;               /* Add ZIP64 extened information in the extra field */\n+    ZPOS64_T pos_zip64extrainfo;\n+    ZPOS64_T totalCompressedData;\n+    ZPOS64_T totalUncompressedData;\n #ifndef NOCRYPT\n     unsigned long keys[3];     /* keys defining the pseudo-random sequence */\n     const unsigned long* pcrc_32_tab;\n     int crypt_header_size;\n #endif\n-} curfile_info;\n+} curfile64_info;\n \n typedef struct\n {\n-    zlib_filefunc_def z_filefunc;\n+    zlib_filefunc64_32_def z_filefunc;\n     voidpf filestream;        /* io structore of the zipfile */\n     linkedlist_data central_dir;/* datablock with central dir in construction*/\n     int  in_opened_file_inzip;  /* 1 if a file in the zip is currently writ.*/\n-    curfile_info ci;            /* info on the file curretly writing */\n+    curfile64_info ci;            /* info on the file curretly writing */\n+\n+    ZPOS64_T begin_pos;            /* position of the beginning of the zipfile */\n+    ZPOS64_T add_position_when_writting_offset;\n+    ZPOS64_T number_entry;\n \n-    uLong begin_pos;            /* position of the beginning of the zipfile */\n-    uLong add_position_when_writting_offset;\n-    uLong number_entry;\n #ifndef NO_ADDFILEINEXISTINGZIP\n     char *globalcomment;\n #endif\n-} zip_internal;\n \n+} zip64_internal;\n \n \n #ifndef NOCRYPT\n@@ -172,8 +200,7 @@ local linkedlist_datablock_internal* allocate_new_datablock()\n     return ldi;\n }\n \n-local void free_datablock(ldi)\n-    linkedlist_datablock_internal* ldi;\n+local void free_datablock(linkedlist_datablock_internal* ldi)\n {\n     while (ldi!=NULL)\n     {\n@@ -183,24 +210,19 @@ local void free_datablock(ldi)\n     }\n }\n \n-local void init_linkedlist(ll)\n-    linkedlist_data* ll;\n+local void init_linkedlist(linkedlist_data* ll)\n {\n     ll->first_block = ll->last_block = NULL;\n }\n \n-local void free_linkedlist(ll)\n-    linkedlist_data* ll;\n+local void free_linkedlist(linkedlist_data* ll)\n {\n     free_datablock(ll->first_block);\n     ll->first_block = ll->last_block = NULL;\n }\n \n \n-local int add_data_in_datablock(ll,buf,len)\n-    linkedlist_data* ll;\n-    const void* buf;\n-    uLong len;\n+local int add_data_in_datablock(linkedlist_data* ll, const void* buf, uLong len)\n {\n     linkedlist_datablock_internal* ldi;\n     const unsigned char* from_copy;\n@@ -258,18 +280,13 @@ local int add_data_in_datablock(ll,buf,len)\n #ifndef NO_ADDFILEINEXISTINGZIP\n /* ===========================================================================\n    Inputs a long in LSB order to the given file\n-   nbByte == 1, 2 or 4 (byte, short or long)\n+   nbByte == 1, 2 ,4 or 8 (byte, short or long, ZPOS64_T)\n */\n \n-local int ziplocal_putValue OF((const zlib_filefunc_def* pzlib_filefunc_def,\n-                                voidpf filestream, uLong x, int nbByte));\n-local int ziplocal_putValue (pzlib_filefunc_def, filestream, x, nbByte)\n-    const zlib_filefunc_def* pzlib_filefunc_def;\n-    voidpf filestream;\n-    uLong x;\n-    int nbByte;\n+local int zip64local_putValue OF((const zlib_filefunc64_32_def* pzlib_filefunc_def, voidpf filestream, ZPOS64_T x, int nbByte));\n+local int zip64local_putValue (const zlib_filefunc64_32_def* pzlib_filefunc_def, voidpf filestream, ZPOS64_T x, int nbByte)\n {\n-    unsigned char buf[4];\n+    unsigned char buf[8];\n     int n;\n     for (n = 0; n < nbByte; n++)\n     {\n@@ -284,17 +301,14 @@ local int ziplocal_putValue (pzlib_filefunc_def, filestream, x, nbByte)\n         }\n       }\n \n-    if (ZWRITE(*pzlib_filefunc_def,filestream,buf,nbByte)!=(uLong)nbByte)\n+    if (ZWRITE64(*pzlib_filefunc_def,filestream,buf,nbByte)!=(uLong)nbByte)\n         return ZIP_ERRNO;\n     else\n         return ZIP_OK;\n }\n \n-local void ziplocal_putValue_inmemory OF((void* dest, uLong x, int nbByte));\n-local void ziplocal_putValue_inmemory (dest, x, nbByte)\n-    void* dest;\n-    uLong x;\n-    int nbByte;\n+local void zip64local_putValue_inmemory OF((void* dest, ZPOS64_T x, int nbByte));\n+local void zip64local_putValue_inmemory (void* dest, ZPOS64_T x, int nbByte)\n {\n     unsigned char* buf=(unsigned char*)dest;\n     int n;\n@@ -315,14 +329,12 @@ local void ziplocal_putValue_inmemory (dest, x, nbByte)\n /****************************************************************************/\n \n \n-local uLong ziplocal_TmzDateToDosDate(ptm,dosDate)\n-    const tm_zip* ptm;\n-    uLong dosDate;\n+local uLong zip64local_TmzDateToDosDate(const tm_zip* ptm)\n {\n     uLong year = (uLong)ptm->tm_year;\n-    if (year>1980)\n+    if (year>=1980)\n         year-=1980;\n-    else if (year>80)\n+    else if (year>=80)\n         year-=80;\n     return\n       (uLong) (((ptm->tm_mday) + (32 * (ptm->tm_mon+1)) + (512 * year)) << 16) |\n@@ -332,26 +344,20 @@ local uLong ziplocal_TmzDateToDosDate(ptm,dosDate)\n \n /****************************************************************************/\n \n-local int ziplocal_getByte OF((\n-    const zlib_filefunc_def* pzlib_filefunc_def,\n-    voidpf filestream,\n-    int *pi));\n+local int zip64local_getByte OF((const zlib_filefunc64_32_def* pzlib_filefunc_def, voidpf filestream, int *pi));\n \n-local int ziplocal_getByte(pzlib_filefunc_def,filestream,pi)\n-    const zlib_filefunc_def* pzlib_filefunc_def;\n-    voidpf filestream;\n-    int *pi;\n+local int zip64local_getByte(const zlib_filefunc64_32_def* pzlib_filefunc_def,voidpf filestream,int* pi)\n {\n     unsigned char c;\n-    int err = (int)ZREAD(*pzlib_filefunc_def,filestream,&c,1);\n+    int err = (int)ZREAD64(*pzlib_filefunc_def,filestream,&c,1);\n     if (err==1)\n     {\n         *pi = (int)c;\n         return ZIP_OK;\n     }\n     else\n     {\n-        if (ZERROR(*pzlib_filefunc_def,filestream))\n+        if (ZERROR64(*pzlib_filefunc_def,filestream))\n             return ZIP_ERRNO;\n         else\n             return ZIP_EOF;\n@@ -362,25 +368,19 @@ local int ziplocal_getByte(pzlib_filefunc_def,filestream,pi)\n /* ===========================================================================\n    Reads a long in LSB order from the given gz_stream. Sets\n */\n-local int ziplocal_getShort OF((\n-    const zlib_filefunc_def* pzlib_filefunc_def,\n-    voidpf filestream,\n-    uLong *pX));\n-\n-local int ziplocal_getShort (pzlib_filefunc_def,filestream,pX)\n-    const zlib_filefunc_def* pzlib_filefunc_def;\n-    voidpf filestream;\n-    uLong *pX;\n+local int zip64local_getShort OF((const zlib_filefunc64_32_def* pzlib_filefunc_def, voidpf filestream, uLong *pX));\n+\n+local int zip64local_getShort (const zlib_filefunc64_32_def* pzlib_filefunc_def, voidpf filestream, uLong* pX)\n {\n     uLong x ;\n-    int i;\n+    int i = 0;\n     int err;\n \n-    err = ziplocal_getByte(pzlib_filefunc_def,filestream,&i);\n+    err = zip64local_getByte(pzlib_filefunc_def,filestream,&i);\n     x = (uLong)i;\n \n     if (err==ZIP_OK)\n-        err = ziplocal_getByte(pzlib_filefunc_def,filestream,&i);\n+        err = zip64local_getByte(pzlib_filefunc_def,filestream,&i);\n     x += ((uLong)i)<<8;\n \n     if (err==ZIP_OK)\n@@ -390,33 +390,27 @@ local int ziplocal_getShort (pzlib_filefunc_def,filestream,pX)\n     return err;\n }\n \n-local int ziplocal_getLong OF((\n-    const zlib_filefunc_def* pzlib_filefunc_def,\n-    voidpf filestream,\n-    uLong *pX));\n+local int zip64local_getLong OF((const zlib_filefunc64_32_def* pzlib_filefunc_def, voidpf filestream, uLong *pX));\n \n-local int ziplocal_getLong (pzlib_filefunc_def,filestream,pX)\n-    const zlib_filefunc_def* pzlib_filefunc_def;\n-    voidpf filestream;\n-    uLong *pX;\n+local int zip64local_getLong (const zlib_filefunc64_32_def* pzlib_filefunc_def, voidpf filestream, uLong* pX)\n {\n     uLong x ;\n-    int i;\n+    int i = 0;\n     int err;\n \n-    err = ziplocal_getByte(pzlib_filefunc_def,filestream,&i);\n+    err = zip64local_getByte(pzlib_filefunc_def,filestream,&i);\n     x = (uLong)i;\n \n     if (err==ZIP_OK)\n-        err = ziplocal_getByte(pzlib_filefunc_def,filestream,&i);\n+        err = zip64local_getByte(pzlib_filefunc_def,filestream,&i);\n     x += ((uLong)i)<<8;\n \n     if (err==ZIP_OK)\n-        err = ziplocal_getByte(pzlib_filefunc_def,filestream,&i);\n+        err = zip64local_getByte(pzlib_filefunc_def,filestream,&i);\n     x += ((uLong)i)<<16;\n \n     if (err==ZIP_OK)\n-        err = ziplocal_getByte(pzlib_filefunc_def,filestream,&i);\n+        err = zip64local_getByte(pzlib_filefunc_def,filestream,&i);\n     x += ((uLong)i)<<24;\n \n     if (err==ZIP_OK)\n@@ -426,113 +420,470 @@ local int ziplocal_getLong (pzlib_filefunc_def,filestream,pX)\n     return err;\n }\n \n+local int zip64local_getLong64 OF((const zlib_filefunc64_32_def* pzlib_filefunc_def, voidpf filestream, ZPOS64_T *pX));\n+\n+\n+local int zip64local_getLong64 (const zlib_filefunc64_32_def* pzlib_filefunc_def, voidpf filestream, ZPOS64_T *pX)\n+{\n+  ZPOS64_T x;\n+  int i = 0;\n+  int err;\n+\n+  err = zip64local_getByte(pzlib_filefunc_def,filestream,&i);\n+  x = (ZPOS64_T)i;\n+\n+  if (err==ZIP_OK)\n+    err = zip64local_getByte(pzlib_filefunc_def,filestream,&i);\n+  x += ((ZPOS64_T)i)<<8;\n+\n+  if (err==ZIP_OK)\n+    err = zip64local_getByte(pzlib_filefunc_def,filestream,&i);\n+  x += ((ZPOS64_T)i)<<16;\n+\n+  if (err==ZIP_OK)\n+    err = zip64local_getByte(pzlib_filefunc_def,filestream,&i);\n+  x += ((ZPOS64_T)i)<<24;\n+\n+  if (err==ZIP_OK)\n+    err = zip64local_getByte(pzlib_filefunc_def,filestream,&i);\n+  x += ((ZPOS64_T)i)<<32;\n+\n+  if (err==ZIP_OK)\n+    err = zip64local_getByte(pzlib_filefunc_def,filestream,&i);\n+  x += ((ZPOS64_T)i)<<40;\n+\n+  if (err==ZIP_OK)\n+    err = zip64local_getByte(pzlib_filefunc_def,filestream,&i);\n+  x += ((ZPOS64_T)i)<<48;\n+\n+  if (err==ZIP_OK)\n+    err = zip64local_getByte(pzlib_filefunc_def,filestream,&i);\n+  x += ((ZPOS64_T)i)<<56;\n+\n+  if (err==ZIP_OK)\n+    *pX = x;\n+  else\n+    *pX = 0;\n+\n+  return err;\n+}\n+\n #ifndef BUFREADCOMMENT\n #define BUFREADCOMMENT (0x400)\n #endif\n /*\n   Locate the Central directory of a zipfile (at the end, just before\n     the global comment)\n */\n-local uLong ziplocal_SearchCentralDir OF((\n-    const zlib_filefunc_def* pzlib_filefunc_def,\n-    voidpf filestream));\n+local ZPOS64_T zip64local_SearchCentralDir OF((const zlib_filefunc64_32_def* pzlib_filefunc_def, voidpf filestream));\n \n-local uLong ziplocal_SearchCentralDir(pzlib_filefunc_def,filestream)\n-    const zlib_filefunc_def* pzlib_filefunc_def;\n-    voidpf filestream;\n+local ZPOS64_T zip64local_SearchCentralDir(const zlib_filefunc64_32_def* pzlib_filefunc_def, voidpf filestream)\n {\n-    unsigned char* buf;\n-    uLong uSizeFile;\n-    uLong uBackRead;\n-    uLong uMaxBack=0xffff; /* maximum size of global comment */\n-    uLong uPosFound=0;\n+  unsigned char* buf;\n+  ZPOS64_T uSizeFile;\n+  ZPOS64_T uBackRead;\n+  ZPOS64_T uMaxBack=0xffff; /* maximum size of global comment */\n+  ZPOS64_T uPosFound=0;\n+\n+  if (ZSEEK64(*pzlib_filefunc_def,filestream,0,ZLIB_FILEFUNC_SEEK_END) != 0)\n+    return 0;\n \n-    if (ZSEEK(*pzlib_filefunc_def,filestream,0,ZLIB_FILEFUNC_SEEK_END) != 0)\n-        return 0;\n \n+  uSizeFile = ZTELL64(*pzlib_filefunc_def,filestream);\n \n-    uSizeFile = ZTELL(*pzlib_filefunc_def,filestream);\n+  if (uMaxBack>uSizeFile)\n+    uMaxBack = uSizeFile;\n \n-    if (uMaxBack>uSizeFile)\n-        uMaxBack = uSizeFile;\n+  buf = (unsigned char*)ALLOC(BUFREADCOMMENT+4);\n+  if (buf==NULL)\n+    return 0;\n \n-    buf = (unsigned char*)ALLOC(BUFREADCOMMENT+4);\n-    if (buf==NULL)\n-        return 0;\n+  uBackRead = 4;\n+  while (uBackRead<uMaxBack)\n+  {\n+    uLong uReadSize;\n+    ZPOS64_T uReadPos ;\n+    int i;\n+    if (uBackRead+BUFREADCOMMENT>uMaxBack)\n+      uBackRead = uMaxBack;\n+    else\n+      uBackRead+=BUFREADCOMMENT;\n+    uReadPos = uSizeFile-uBackRead ;\n+\n+    uReadSize = ((BUFREADCOMMENT+4) < (uSizeFile-uReadPos)) ?\n+      (BUFREADCOMMENT+4) : (uLong)(uSizeFile-uReadPos);\n+    if (ZSEEK64(*pzlib_filefunc_def,filestream,uReadPos,ZLIB_FILEFUNC_SEEK_SET)!=0)\n+      break;\n+\n+    if (ZREAD64(*pzlib_filefunc_def,filestream,buf,uReadSize)!=uReadSize)\n+      break;\n+\n+    for (i=(int)uReadSize-3; (i--)>0;)\n+      if (((*(buf+i))==0x50) && ((*(buf+i+1))==0x4b) &&\n+        ((*(buf+i+2))==0x05) && ((*(buf+i+3))==0x06))\n+      {\n+        uPosFound = uReadPos+i;\n+        break;\n+      }\n+\n+      if (uPosFound!=0)\n+        break;\n+  }\n+  TRYFREE(buf);\n+  return uPosFound;\n+}\n \n-    uBackRead = 4;\n-    while (uBackRead<uMaxBack)\n+/*\n+Locate the End of Zip64 Central directory locator and from there find the CD of a zipfile (at the end, just before\n+the global comment)\n+*/\n+local ZPOS64_T zip64local_SearchCentralDir64 OF((const zlib_filefunc64_32_def* pzlib_filefunc_def, voidpf filestream));\n+\n+local ZPOS64_T zip64local_SearchCentralDir64(const zlib_filefunc64_32_def* pzlib_filefunc_def, voidpf filestream)\n+{\n+  unsigned char* buf;\n+  ZPOS64_T uSizeFile;\n+  ZPOS64_T uBackRead;\n+  ZPOS64_T uMaxBack=0xffff; /* maximum size of global comment */\n+  ZPOS64_T uPosFound=0;\n+  uLong uL;\n+  ZPOS64_T relativeOffset;\n+\n+  if (ZSEEK64(*pzlib_filefunc_def,filestream,0,ZLIB_FILEFUNC_SEEK_END) != 0)\n+    return 0;\n+\n+  uSizeFile = ZTELL64(*pzlib_filefunc_def,filestream);\n+\n+  if (uMaxBack>uSizeFile)\n+    uMaxBack = uSizeFile;\n+\n+  buf = (unsigned char*)ALLOC(BUFREADCOMMENT+4);\n+  if (buf==NULL)\n+    return 0;\n+\n+  uBackRead = 4;\n+  while (uBackRead<uMaxBack)\n+  {\n+    uLong uReadSize;\n+    ZPOS64_T uReadPos;\n+    int i;\n+    if (uBackRead+BUFREADCOMMENT>uMaxBack)\n+      uBackRead = uMaxBack;\n+    else\n+      uBackRead+=BUFREADCOMMENT;\n+    uReadPos = uSizeFile-uBackRead ;\n+\n+    uReadSize = ((BUFREADCOMMENT+4) < (uSizeFile-uReadPos)) ?\n+      (BUFREADCOMMENT+4) : (uLong)(uSizeFile-uReadPos);\n+    if (ZSEEK64(*pzlib_filefunc_def,filestream,uReadPos,ZLIB_FILEFUNC_SEEK_SET)!=0)\n+      break;\n+\n+    if (ZREAD64(*pzlib_filefunc_def,filestream,buf,uReadSize)!=uReadSize)\n+      break;\n+\n+    for (i=(int)uReadSize-3; (i--)>0;)\n     {\n-        uLong uReadSize,uReadPos ;\n-        int i;\n-        if (uBackRead+BUFREADCOMMENT>uMaxBack)\n-            uBackRead = uMaxBack;\n-        else\n-            uBackRead+=BUFREADCOMMENT;\n-        uReadPos = uSizeFile-uBackRead ;\n+      // Signature \"0x07064b50\" Zip64 end of central directory locater\n+      if (((*(buf+i))==0x50) && ((*(buf+i+1))==0x4b) && ((*(buf+i+2))==0x06) && ((*(buf+i+3))==0x07))\n+      {\n+        uPosFound = uReadPos+i;\n+        break;\n+      }\n+    }\n \n-        uReadSize = ((BUFREADCOMMENT+4) < (uSizeFile-uReadPos)) ?\n-                     (BUFREADCOMMENT+4) : (uSizeFile-uReadPos);\n-        if (ZSEEK(*pzlib_filefunc_def,filestream,uReadPos,ZLIB_FILEFUNC_SEEK_SET)!=0)\n-            break;\n+      if (uPosFound!=0)\n+        break;\n+  }\n \n-        if (ZREAD(*pzlib_filefunc_def,filestream,buf,uReadSize)!=uReadSize)\n-            break;\n+  TRYFREE(buf);\n+  if (uPosFound == 0)\n+    return 0;\n \n-        for (i=(int)uReadSize-3; (i--)>0;)\n-            if (((*(buf+i))==0x50) && ((*(buf+i+1))==0x4b) &&\n-                ((*(buf+i+2))==0x05) && ((*(buf+i+3))==0x06))\n-            {\n-                uPosFound = uReadPos+i;\n-                break;\n-            }\n+  /* Zip64 end of central directory locator */\n+  if (ZSEEK64(*pzlib_filefunc_def,filestream, uPosFound,ZLIB_FILEFUNC_SEEK_SET)!=0)\n+    return 0;\n+\n+  /* the signature, already checked */\n+  if (zip64local_getLong(pzlib_filefunc_def,filestream,&uL)!=ZIP_OK)\n+    return 0;\n+\n+  /* number of the disk with the start of the zip64 end of  central directory */\n+  if (zip64local_getLong(pzlib_filefunc_def,filestream,&uL)!=ZIP_OK)\n+    return 0;\n+  if (uL != 0)\n+    return 0;\n+\n+  /* relative offset of the zip64 end of central directory record */\n+  if (zip64local_getLong64(pzlib_filefunc_def,filestream,&relativeOffset)!=ZIP_OK)\n+    return 0;\n+\n+  /* total number of disks */\n+  if (zip64local_getLong(pzlib_filefunc_def,filestream,&uL)!=ZIP_OK)\n+    return 0;\n+  if (uL != 1)\n+    return 0;\n \n-        if (uPosFound!=0)\n-            break;\n+  /* Goto Zip64 end of central directory record */\n+  if (ZSEEK64(*pzlib_filefunc_def,filestream, relativeOffset,ZLIB_FILEFUNC_SEEK_SET)!=0)\n+    return 0;\n+\n+  /* the signature */\n+  if (zip64local_getLong(pzlib_filefunc_def,filestream,&uL)!=ZIP_OK)\n+    return 0;\n+\n+  if (uL != 0x06064b50) // signature of 'Zip64 end of central directory'\n+    return 0;\n+\n+  return relativeOffset;\n+}\n+\n+int LoadCentralDirectoryRecord(zip64_internal* pziinit)\n+{\n+  int err=ZIP_OK;\n+  ZPOS64_T byte_before_the_zipfile;/* byte before the zipfile, (>0 for sfx)*/\n+\n+  ZPOS64_T size_central_dir;     /* size of the central directory  */\n+  ZPOS64_T offset_central_dir;   /* offset of start of central directory */\n+  ZPOS64_T central_pos;\n+  uLong uL;\n+\n+  uLong number_disk;          /* number of the current dist, used for\n+                              spaning ZIP, unsupported, always 0*/\n+  uLong number_disk_with_CD;  /* number the the disk with central dir, used\n+                              for spaning ZIP, unsupported, always 0*/\n+  ZPOS64_T number_entry;\n+  ZPOS64_T number_entry_CD;      /* total number of entries in\n+                                the central dir\n+                                (same than number_entry on nospan) */\n+  uLong VersionMadeBy;\n+  uLong VersionNeeded;\n+  uLong size_comment;\n+\n+  int hasZIP64Record = 0;\n+\n+  // check first if we find a ZIP64 record\n+  central_pos = zip64local_SearchCentralDir64(&pziinit->z_filefunc,pziinit->filestream);\n+  if(central_pos > 0)\n+  {\n+    hasZIP64Record = 1;\n+  }\n+  else if(central_pos == 0)\n+  {\n+    central_pos = zip64local_SearchCentralDir(&pziinit->z_filefunc,pziinit->filestream);\n+  }\n+\n+/* disable to allow appending to empty ZIP archive\n+        if (central_pos==0)\n+            err=ZIP_ERRNO;\n+*/\n+\n+  if(hasZIP64Record)\n+  {\n+    ZPOS64_T sizeEndOfCentralDirectory;\n+    if (ZSEEK64(pziinit->z_filefunc, pziinit->filestream, central_pos, ZLIB_FILEFUNC_SEEK_SET) != 0)\n+      err=ZIP_ERRNO;\n+\n+    /* the signature, already checked */\n+    if (zip64local_getLong(&pziinit->z_filefunc, pziinit->filestream,&uL)!=ZIP_OK)\n+      err=ZIP_ERRNO;\n+\n+    /* size of zip64 end of central directory record */\n+    if (zip64local_getLong64(&pziinit->z_filefunc, pziinit->filestream, &sizeEndOfCentralDirectory)!=ZIP_OK)\n+      err=ZIP_ERRNO;\n+\n+    /* version made by */\n+    if (zip64local_getShort(&pziinit->z_filefunc, pziinit->filestream, &VersionMadeBy)!=ZIP_OK)\n+      err=ZIP_ERRNO;\n+\n+    /* version needed to extract */\n+    if (zip64local_getShort(&pziinit->z_filefunc, pziinit->filestream, &VersionNeeded)!=ZIP_OK)\n+      err=ZIP_ERRNO;\n+\n+    /* number of this disk */\n+    if (zip64local_getLong(&pziinit->z_filefunc, pziinit->filestream,&number_disk)!=ZIP_OK)\n+      err=ZIP_ERRNO;\n+\n+    /* number of the disk with the start of the central directory */\n+    if (zip64local_getLong(&pziinit->z_filefunc, pziinit->filestream,&number_disk_with_CD)!=ZIP_OK)\n+      err=ZIP_ERRNO;\n+\n+    /* total number of entries in the central directory on this disk */\n+    if (zip64local_getLong64(&pziinit->z_filefunc, pziinit->filestream, &number_entry)!=ZIP_OK)\n+      err=ZIP_ERRNO;\n+\n+    /* total number of entries in the central directory */\n+    if (zip64local_getLong64(&pziinit->z_filefunc, pziinit->filestream,&number_entry_CD)!=ZIP_OK)\n+      err=ZIP_ERRNO;\n+\n+    if ((number_entry_CD!=number_entry) || (number_disk_with_CD!=0) || (number_disk!=0))\n+      err=ZIP_BADZIPFILE;\n+\n+    /* size of the central directory */\n+    if (zip64local_getLong64(&pziinit->z_filefunc, pziinit->filestream,&size_central_dir)!=ZIP_OK)\n+      err=ZIP_ERRNO;\n+\n+    /* offset of start of central directory with respect to the\n+    starting disk number */\n+    if (zip64local_getLong64(&pziinit->z_filefunc, pziinit->filestream,&offset_central_dir)!=ZIP_OK)\n+      err=ZIP_ERRNO;\n+\n+    // TODO..\n+    // read the comment from the standard central header.\n+    size_comment = 0;\n+  }\n+  else\n+  {\n+    // Read End of central Directory info\n+    if (ZSEEK64(pziinit->z_filefunc, pziinit->filestream, central_pos,ZLIB_FILEFUNC_SEEK_SET)!=0)\n+      err=ZIP_ERRNO;\n+\n+    /* the signature, already checked */\n+    if (zip64local_getLong(&pziinit->z_filefunc, pziinit->filestream,&uL)!=ZIP_OK)\n+      err=ZIP_ERRNO;\n+\n+    /* number of this disk */\n+    if (zip64local_getShort(&pziinit->z_filefunc, pziinit->filestream,&number_disk)!=ZIP_OK)\n+      err=ZIP_ERRNO;\n+\n+    /* number of the disk with the start of the central directory */\n+    if (zip64local_getShort(&pziinit->z_filefunc, pziinit->filestream,&number_disk_with_CD)!=ZIP_OK)\n+      err=ZIP_ERRNO;\n+\n+    /* total number of entries in the central dir on this disk */\n+    number_entry = 0;\n+    if (zip64local_getShort(&pziinit->z_filefunc, pziinit->filestream, &uL)!=ZIP_OK)\n+      err=ZIP_ERRNO;\n+    else\n+      number_entry = uL;\n+\n+    /* total number of entries in the central dir */\n+    number_entry_CD = 0;\n+    if (zip64local_getShort(&pziinit->z_filefunc, pziinit->filestream, &uL)!=ZIP_OK)\n+      err=ZIP_ERRNO;\n+    else\n+      number_entry_CD = uL;\n+\n+    if ((number_entry_CD!=number_entry) || (number_disk_with_CD!=0) || (number_disk!=0))\n+      err=ZIP_BADZIPFILE;\n+\n+    /* size of the central directory */\n+    size_central_dir = 0;\n+    if (zip64local_getLong(&pziinit->z_filefunc, pziinit->filestream, &uL)!=ZIP_OK)\n+      err=ZIP_ERRNO;\n+    else\n+      size_central_dir = uL;\n+\n+    /* offset of start of central directory with respect to the starting disk number */\n+    offset_central_dir = 0;\n+    if (zip64local_getLong(&pziinit->z_filefunc, pziinit->filestream, &uL)!=ZIP_OK)\n+      err=ZIP_ERRNO;\n+    else\n+      offset_central_dir = uL;\n+\n+\n+    /* zipfile global comment length */\n+    if (zip64local_getShort(&pziinit->z_filefunc, pziinit->filestream, &size_comment)!=ZIP_OK)\n+      err=ZIP_ERRNO;\n+  }\n+\n+  if ((central_pos<offset_central_dir+size_central_dir) &&\n+    (err==ZIP_OK))\n+    err=ZIP_BADZIPFILE;\n+\n+  if (err!=ZIP_OK)\n+  {\n+    ZCLOSE64(pziinit->z_filefunc, pziinit->filestream);\n+    return ZIP_ERRNO;\n+  }\n+\n+  if (size_comment>0)\n+  {\n+    pziinit->globalcomment = (char*)ALLOC(size_comment+1);\n+    if (pziinit->globalcomment)\n+    {\n+      size_comment = ZREAD64(pziinit->z_filefunc, pziinit->filestream, pziinit->globalcomment,size_comment);\n+      pziinit->globalcomment[size_comment]=0;\n     }\n-    TRYFREE(buf);\n-    return uPosFound;\n+  }\n+\n+  byte_before_the_zipfile = central_pos - (offset_central_dir+size_central_dir);\n+  pziinit->add_position_when_writting_offset = byte_before_the_zipfile;\n+\n+  {\n+    ZPOS64_T size_central_dir_to_read = size_central_dir;\n+    size_t buf_size = SIZEDATA_INDATABLOCK;\n+    void* buf_read = (void*)ALLOC(buf_size);\n+    if (ZSEEK64(pziinit->z_filefunc, pziinit->filestream, offset_central_dir + byte_before_the_zipfile, ZLIB_FILEFUNC_SEEK_SET) != 0)\n+      err=ZIP_ERRNO;\n+\n+    while ((size_central_dir_to_read>0) && (err==ZIP_OK))\n+    {\n+      ZPOS64_T read_this = SIZEDATA_INDATABLOCK;\n+      if (read_this > size_central_dir_to_read)\n+        read_this = size_central_dir_to_read;\n+\n+      if (ZREAD64(pziinit->z_filefunc, pziinit->filestream,buf_read,(uLong)read_this) != read_this)\n+        err=ZIP_ERRNO;\n+\n+      if (err==ZIP_OK)\n+        err = add_data_in_datablock(&pziinit->central_dir,buf_read, (uLong)read_this);\n+\n+      size_central_dir_to_read-=read_this;\n+    }\n+    TRYFREE(buf_read);\n+  }\n+  pziinit->begin_pos = byte_before_the_zipfile;\n+  pziinit->number_entry = number_entry_CD;\n+\n+  if (ZSEEK64(pziinit->z_filefunc, pziinit->filestream, offset_central_dir+byte_before_the_zipfile,ZLIB_FILEFUNC_SEEK_SET) != 0)\n+    err=ZIP_ERRNO;\n+\n+  return err;\n }\n+\n+\n #endif /* !NO_ADDFILEINEXISTINGZIP*/\n \n+\n /************************************************************/\n-extern zipFile ZEXPORT zipOpen2 (pathname, append, globalcomment, pzlib_filefunc_def)\n-    const char *pathname;\n-    int append;\n-    zipcharpc* globalcomment;\n-    zlib_filefunc_def* pzlib_filefunc_def;\n+extern zipFile ZEXPORT zipOpen3 (const void *pathname, int append, zipcharpc* globalcomment, zlib_filefunc64_32_def* pzlib_filefunc64_32_def)\n {\n-    zip_internal ziinit;\n-    zip_internal* zi;\n+    zip64_internal ziinit;\n+    zip64_internal* zi;\n     int err=ZIP_OK;\n \n-\n-    if (pzlib_filefunc_def==NULL)\n-        fill_fopen_filefunc(&ziinit.z_filefunc);\n+    ziinit.z_filefunc.zseek32_file = NULL;\n+    ziinit.z_filefunc.ztell32_file = NULL;\n+    if (pzlib_filefunc64_32_def==NULL)\n+        fill_fopen64_filefunc(&ziinit.z_filefunc.zfile_func64);\n     else\n-        ziinit.z_filefunc = *pzlib_filefunc_def;\n+        ziinit.z_filefunc = *pzlib_filefunc64_32_def;\n \n-    ziinit.filestream = (*(ziinit.z_filefunc.zopen_file))\n-                 (ziinit.z_filefunc.opaque,\n+    ziinit.filestream = ZOPEN64(ziinit.z_filefunc,\n                   pathname,\n                   (append == APPEND_STATUS_CREATE) ?\n                   (ZLIB_FILEFUNC_MODE_READ | ZLIB_FILEFUNC_MODE_WRITE | ZLIB_FILEFUNC_MODE_CREATE) :\n                     (ZLIB_FILEFUNC_MODE_READ | ZLIB_FILEFUNC_MODE_WRITE | ZLIB_FILEFUNC_MODE_EXISTING));\n \n     if (ziinit.filestream == NULL)\n         return NULL;\n-    ziinit.begin_pos = ZTELL(ziinit.z_filefunc,ziinit.filestream);\n+\n+    if (append == APPEND_STATUS_CREATEAFTER)\n+        ZSEEK64(ziinit.z_filefunc,ziinit.filestream,0,SEEK_END);\n+\n+    ziinit.begin_pos = ZTELL64(ziinit.z_filefunc,ziinit.filestream);\n     ziinit.in_opened_file_inzip = 0;\n     ziinit.ci.stream_initialised = 0;\n     ziinit.number_entry = 0;\n     ziinit.add_position_when_writting_offset = 0;\n     init_linkedlist(&(ziinit.central_dir));\n \n \n-    zi = (zip_internal*)ALLOC(sizeof(zip_internal));\n+\n+    zi = (zip64_internal*)ALLOC(sizeof(zip64_internal));\n     if (zi==NULL)\n     {\n-        ZCLOSE(ziinit.z_filefunc,ziinit.filestream);\n+        ZCLOSE64(ziinit.z_filefunc,ziinit.filestream);\n         return NULL;\n     }\n \n@@ -541,122 +892,8 @@ extern zipFile ZEXPORT zipOpen2 (pathname, append, globalcomment, pzlib_filefunc\n     ziinit.globalcomment = NULL;\n     if (append == APPEND_STATUS_ADDINZIP)\n     {\n-        uLong byte_before_the_zipfile;/* byte before the zipfile, (>0 for sfx)*/\n-\n-        uLong size_central_dir;     /* size of the central directory  */\n-        uLong offset_central_dir;   /* offset of start of central directory */\n-        uLong central_pos,uL;\n-\n-        uLong number_disk;          /* number of the current dist, used for\n-                                    spaning ZIP, unsupported, always 0*/\n-        uLong number_disk_with_CD;  /* number the the disk with central dir, used\n-                                    for spaning ZIP, unsupported, always 0*/\n-        uLong number_entry;\n-        uLong number_entry_CD;      /* total number of entries in\n-                                    the central dir\n-                                    (same than number_entry on nospan) */\n-        uLong size_comment;\n-\n-        central_pos = ziplocal_SearchCentralDir(&ziinit.z_filefunc,ziinit.filestream);\n-        if (central_pos==0)\n-            err=ZIP_ERRNO;\n-\n-        if (ZSEEK(ziinit.z_filefunc, ziinit.filestream,\n-                                        central_pos,ZLIB_FILEFUNC_SEEK_SET)!=0)\n-            err=ZIP_ERRNO;\n-\n-        /* the signature, already checked */\n-        if (ziplocal_getLong(&ziinit.z_filefunc, ziinit.filestream,&uL)!=ZIP_OK)\n-            err=ZIP_ERRNO;\n-\n-        /* number of this disk */\n-        if (ziplocal_getShort(&ziinit.z_filefunc, ziinit.filestream,&number_disk)!=ZIP_OK)\n-            err=ZIP_ERRNO;\n-\n-        /* number of the disk with the start of the central directory */\n-        if (ziplocal_getShort(&ziinit.z_filefunc, ziinit.filestream,&number_disk_with_CD)!=ZIP_OK)\n-            err=ZIP_ERRNO;\n-\n-        /* total number of entries in the central dir on this disk */\n-        if (ziplocal_getShort(&ziinit.z_filefunc, ziinit.filestream,&number_entry)!=ZIP_OK)\n-            err=ZIP_ERRNO;\n-\n-        /* total number of entries in the central dir */\n-        if (ziplocal_getShort(&ziinit.z_filefunc, ziinit.filestream,&number_entry_CD)!=ZIP_OK)\n-            err=ZIP_ERRNO;\n-\n-        if ((number_entry_CD!=number_entry) ||\n-            (number_disk_with_CD!=0) ||\n-            (number_disk!=0))\n-            err=ZIP_BADZIPFILE;\n-\n-        /* size of the central directory */\n-        if (ziplocal_getLong(&ziinit.z_filefunc, ziinit.filestream,&size_central_dir)!=ZIP_OK)\n-            err=ZIP_ERRNO;\n-\n-        /* offset of start of central directory with respect to the\n-            starting disk number */\n-        if (ziplocal_getLong(&ziinit.z_filefunc, ziinit.filestream,&offset_central_dir)!=ZIP_OK)\n-            err=ZIP_ERRNO;\n-\n-        /* zipfile global comment length */\n-        if (ziplocal_getShort(&ziinit.z_filefunc, ziinit.filestream,&size_comment)!=ZIP_OK)\n-            err=ZIP_ERRNO;\n-\n-        if ((central_pos<offset_central_dir+size_central_dir) &&\n-            (err==ZIP_OK))\n-            err=ZIP_BADZIPFILE;\n-\n-        if (err!=ZIP_OK)\n-        {\n-            ZCLOSE(ziinit.z_filefunc, ziinit.filestream);\n-            return NULL;\n-        }\n-\n-        if (size_comment>0)\n-        {\n-            ziinit.globalcomment = ALLOC(size_comment+1);\n-            if (ziinit.globalcomment)\n-            {\n-               size_comment = ZREAD(ziinit.z_filefunc, ziinit.filestream,ziinit.globalcomment,size_comment);\n-               ziinit.globalcomment[size_comment]=0;\n-            }\n-        }\n-\n-        byte_before_the_zipfile = central_pos -\n-                                (offset_central_dir+size_central_dir);\n-        ziinit.add_position_when_writting_offset = byte_before_the_zipfile;\n-\n-        {\n-            uLong size_central_dir_to_read = size_central_dir;\n-            size_t buf_size = SIZEDATA_INDATABLOCK;\n-            void* buf_read = (void*)ALLOC(buf_size);\n-            if (ZSEEK(ziinit.z_filefunc, ziinit.filestream,\n-                  offset_central_dir + byte_before_the_zipfile,\n-                  ZLIB_FILEFUNC_SEEK_SET) != 0)\n-                  err=ZIP_ERRNO;\n-\n-            while ((size_central_dir_to_read>0) && (err==ZIP_OK))\n-            {\n-                uLong read_this = SIZEDATA_INDATABLOCK;\n-                if (read_this > size_central_dir_to_read)\n-                    read_this = size_central_dir_to_read;\n-                if (ZREAD(ziinit.z_filefunc, ziinit.filestream,buf_read,read_this) != read_this)\n-                    err=ZIP_ERRNO;\n-\n-                if (err==ZIP_OK)\n-                    err = add_data_in_datablock(&ziinit.central_dir,buf_read,\n-                                                (uLong)read_this);\n-                size_central_dir_to_read-=read_this;\n-            }\n-            TRYFREE(buf_read);\n-        }\n-        ziinit.begin_pos = byte_before_the_zipfile;\n-        ziinit.number_entry = number_entry_CD;\n-\n-        if (ZSEEK(ziinit.z_filefunc, ziinit.filestream,\n-                  offset_central_dir+byte_before_the_zipfile,ZLIB_FILEFUNC_SEEK_SET)!=0)\n-            err=ZIP_ERRNO;\n+      // Read and Cache Central Directory Records\n+      err = LoadCentralDirectoryRecord(&ziinit);\n     }\n \n     if (globalcomment)\n@@ -680,37 +917,150 @@ extern zipFile ZEXPORT zipOpen2 (pathname, append, globalcomment, pzlib_filefunc\n     }\n }\n \n-extern zipFile ZEXPORT zipOpen (pathname, append)\n-    const char *pathname;\n-    int append;\n+extern zipFile ZEXPORT zipOpen2 (const char *pathname, int append, zipcharpc* globalcomment, zlib_filefunc_def* pzlib_filefunc32_def)\n {\n-    return zipOpen2(pathname,append,NULL,NULL);\n+    if (pzlib_filefunc32_def != NULL)\n+    {\n+        zlib_filefunc64_32_def zlib_filefunc64_32_def_fill;\n+        fill_zlib_filefunc64_32_def_from_filefunc32(&zlib_filefunc64_32_def_fill,pzlib_filefunc32_def);\n+        return zipOpen3(pathname, append, globalcomment, &zlib_filefunc64_32_def_fill);\n+    }\n+    else\n+        return zipOpen3(pathname, append, globalcomment, NULL);\n }\n \n-extern int ZEXPORT zipOpenNewFileInZip3 (file, filename, zipfi,\n-                                         extrafield_local, size_extrafield_local,\n-                                         extrafield_global, size_extrafield_global,\n-                                         comment, method, level, raw,\n-                                         windowBits, memLevel, strategy,\n-                                         password, crcForCrypting)\n-    zipFile file;\n-    const char* filename;\n-    const zip_fileinfo* zipfi;\n-    const void* extrafield_local;\n-    uInt size_extrafield_local;\n-    const void* extrafield_global;\n-    uInt size_extrafield_global;\n-    const char* comment;\n-    int method;\n-    int level;\n-    int raw;\n-    int windowBits;\n-    int memLevel;\n-    int strategy;\n-    const char* password;\n-    uLong crcForCrypting;\n+extern zipFile ZEXPORT zipOpen2_64 (const void *pathname, int append, zipcharpc* globalcomment, zlib_filefunc64_def* pzlib_filefunc_def)\n+{\n+    if (pzlib_filefunc_def != NULL)\n+    {\n+        zlib_filefunc64_32_def zlib_filefunc64_32_def_fill;\n+        zlib_filefunc64_32_def_fill.zfile_func64 = *pzlib_filefunc_def;\n+        zlib_filefunc64_32_def_fill.ztell32_file = NULL;\n+        zlib_filefunc64_32_def_fill.zseek32_file = NULL;\n+        return zipOpen3(pathname, append, globalcomment, &zlib_filefunc64_32_def_fill);\n+    }\n+    else\n+        return zipOpen3(pathname, append, globalcomment, NULL);\n+}\n+\n+\n+\n+extern zipFile ZEXPORT zipOpen (const char* pathname, int append)\n {\n-    zip_internal* zi;\n+    return zipOpen3((const void*)pathname,append,NULL,NULL);\n+}\n+\n+extern zipFile ZEXPORT zipOpen64 (const void* pathname, int append)\n+{\n+    return zipOpen3(pathname,append,NULL,NULL);\n+}\n+\n+int Write_LocalFileHeader(zip64_internal* zi, const char* filename, uInt size_extrafield_local, const void* extrafield_local)\n+{\n+  /* write the local header */\n+  int err;\n+  uInt size_filename = (uInt)strlen(filename);\n+  uInt size_extrafield = size_extrafield_local;\n+\n+  err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(uLong)LOCALHEADERMAGIC, 4);\n+\n+  if (err==ZIP_OK)\n+  {\n+    if(zi->ci.zip64)\n+      err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(uLong)45,2);/* version needed to extract */\n+    else\n+      err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(uLong)20,2);/* version needed to extract */\n+  }\n+\n+  if (err==ZIP_OK)\n+    err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(uLong)zi->ci.flag,2);\n+\n+  if (err==ZIP_OK)\n+    err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(uLong)zi->ci.method,2);\n+\n+  if (err==ZIP_OK)\n+    err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(uLong)zi->ci.dosDate,4);\n+\n+  // CRC / Compressed size / Uncompressed size will be filled in later and rewritten later\n+  if (err==ZIP_OK)\n+    err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(uLong)0,4); /* crc 32, unknown */\n+  if (err==ZIP_OK)\n+  {\n+    if(zi->ci.zip64)\n+      err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(uLong)0xFFFFFFFF,4); /* compressed size, unknown */\n+    else\n+      err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(uLong)0,4); /* compressed size, unknown */\n+  }\n+  if (err==ZIP_OK)\n+  {\n+    if(zi->ci.zip64)\n+      err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(uLong)0xFFFFFFFF,4); /* uncompressed size, unknown */\n+    else\n+      err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(uLong)0,4); /* uncompressed size, unknown */\n+  }\n+\n+  if (err==ZIP_OK)\n+    err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(uLong)size_filename,2);\n+\n+  if(zi->ci.zip64)\n+  {\n+    size_extrafield += 20;\n+  }\n+\n+  if (err==ZIP_OK)\n+    err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(uLong)size_extrafield,2);\n+\n+  if ((err==ZIP_OK) && (size_filename > 0))\n+  {\n+    if (ZWRITE64(zi->z_filefunc,zi->filestream,filename,size_filename)!=size_filename)\n+      err = ZIP_ERRNO;\n+  }\n+\n+  if ((err==ZIP_OK) && (size_extrafield_local > 0))\n+  {\n+    if (ZWRITE64(zi->z_filefunc, zi->filestream, extrafield_local, size_extrafield_local) != size_extrafield_local)\n+      err = ZIP_ERRNO;\n+  }\n+\n+\n+  if ((err==ZIP_OK) && (zi->ci.zip64))\n+  {\n+      // write the Zip64 extended info\n+      short HeaderID = 1;\n+      short DataSize = 16;\n+      ZPOS64_T CompressedSize = 0;\n+      ZPOS64_T UncompressedSize = 0;\n+\n+      // Remember position of Zip64 extended info for the local file header. (needed when we update size after done with file)\n+      zi->ci.pos_zip64extrainfo = ZTELL64(zi->z_filefunc,zi->filestream);\n+\n+      err = zip64local_putValue(&zi->z_filefunc, zi->filestream, (short)HeaderID,2);\n+      err = zip64local_putValue(&zi->z_filefunc, zi->filestream, (short)DataSize,2);\n+\n+      err = zip64local_putValue(&zi->z_filefunc, zi->filestream, (ZPOS64_T)UncompressedSize,8);\n+      err = zip64local_putValue(&zi->z_filefunc, zi->filestream, (ZPOS64_T)CompressedSize,8);\n+  }\n+\n+  return err;\n+}\n+\n+/*\n+ NOTE.\n+ When writing RAW the ZIP64 extended information in extrafield_local and extrafield_global needs to be stripped\n+ before calling this function it can be done with zipRemoveExtraInfoBlock\n+\n+ It is not done here because then we need to realloc a new buffer since parameters are 'const' and I want to minimize\n+ unnecessary allocations.\n+ */\n+extern int ZEXPORT zipOpenNewFileInZip4_64 (zipFile file, const char* filename, const zip_fileinfo* zipfi,\n+                                         const void* extrafield_local, uInt size_extrafield_local,\n+                                         const void* extrafield_global, uInt size_extrafield_global,\n+                                         const char* comment, int method, int level, int raw,\n+                                         int windowBits,int memLevel, int strategy,\n+                                         const char* password, uLong crcForCrypting,\n+                                         uLong versionMadeBy, uLong flagBase, int zip64)\n+{\n+    zip64_internal* zi;\n     uInt size_filename;\n     uInt size_comment;\n     uInt i;\n@@ -723,10 +1073,16 @@ extern int ZEXPORT zipOpenNewFileInZip3 (file, filename, zipfi,\n \n     if (file == NULL)\n         return ZIP_PARAMERROR;\n+\n+#ifdef HAVE_BZIP2\n+    if ((method!=0) && (method!=Z_DEFLATED) && (method!=Z_BZIP2ED))\n+      return ZIP_PARAMERROR;\n+#else\n     if ((method!=0) && (method!=Z_DEFLATED))\n-        return ZIP_PARAMERROR;\n+      return ZIP_PARAMERROR;\n+#endif\n \n-    zi = (zip_internal*)file;\n+    zi = (zip64_internal*)file;\n \n     if (zi->in_opened_file_inzip == 1)\n     {\n@@ -735,7 +1091,6 @@ extern int ZEXPORT zipOpenNewFileInZip3 (file, filename, zipfi,\n             return err;\n     }\n \n-\n     if (filename==NULL)\n         filename=\"-\";\n \n@@ -752,10 +1107,11 @@ extern int ZEXPORT zipOpenNewFileInZip3 (file, filename, zipfi,\n     {\n         if (zipfi->dosDate != 0)\n             zi->ci.dosDate = zipfi->dosDate;\n-        else zi->ci.dosDate = ziplocal_TmzDateToDosDate(&zipfi->tmz_date,zipfi->dosDate);\n+        else\n+          zi->ci.dosDate = zip64local_TmzDateToDosDate(&zipfi->tmz_date);\n     }\n \n-    zi->ci.flag = 0;\n+    zi->ci.flag = flagBase;\n     if ((level==8) || (level==9))\n       zi->ci.flag |= 2;\n     if ((level==2))\n@@ -771,37 +1127,43 @@ extern int ZEXPORT zipOpenNewFileInZip3 (file, filename, zipfi,\n     zi->ci.stream_initialised = 0;\n     zi->ci.pos_in_buffered_data = 0;\n     zi->ci.raw = raw;\n-    zi->ci.pos_local_header = ZTELL(zi->z_filefunc,zi->filestream) ;\n-    zi->ci.size_centralheader = SIZECENTRALHEADER + size_filename +\n-                                      size_extrafield_global + size_comment;\n-    zi->ci.central_header = (char*)ALLOC((uInt)zi->ci.size_centralheader);\n+    zi->ci.pos_local_header = ZTELL64(zi->z_filefunc,zi->filestream);\n+\n+    zi->ci.size_centralheader = SIZECENTRALHEADER + size_filename + size_extrafield_global + size_comment;\n+    zi->ci.size_centralExtraFree = 32; // Extra space we have reserved in case we need to add ZIP64 extra info data\n \n-    ziplocal_putValue_inmemory(zi->ci.central_header,(uLong)CENTRALHEADERMAGIC,4);\n+    zi->ci.central_header = (char*)ALLOC((uInt)zi->ci.size_centralheader + zi->ci.size_centralExtraFree);\n+\n+    zi->ci.size_centralExtra = size_extrafield_global;\n+    zip64local_putValue_inmemory(zi->ci.central_header,(uLong)CENTRALHEADERMAGIC,4);\n     /* version info */\n-    ziplocal_putValue_inmemory(zi->ci.central_header+4,(uLong)VERSIONMADEBY,2);\n-    ziplocal_putValue_inmemory(zi->ci.central_header+6,(uLong)20,2);\n-    ziplocal_putValue_inmemory(zi->ci.central_header+8,(uLong)zi->ci.flag,2);\n-    ziplocal_putValue_inmemory(zi->ci.central_header+10,(uLong)zi->ci.method,2);\n-    ziplocal_putValue_inmemory(zi->ci.central_header+12,(uLong)zi->ci.dosDate,4);\n-    ziplocal_putValue_inmemory(zi->ci.central_header+16,(uLong)0,4); /*crc*/\n-    ziplocal_putValue_inmemory(zi->ci.central_header+20,(uLong)0,4); /*compr size*/\n-    ziplocal_putValue_inmemory(zi->ci.central_header+24,(uLong)0,4); /*uncompr size*/\n-    ziplocal_putValue_inmemory(zi->ci.central_header+28,(uLong)size_filename,2);\n-    ziplocal_putValue_inmemory(zi->ci.central_header+30,(uLong)size_extrafield_global,2);\n-    ziplocal_putValue_inmemory(zi->ci.central_header+32,(uLong)size_comment,2);\n-    ziplocal_putValue_inmemory(zi->ci.central_header+34,(uLong)0,2); /*disk nm start*/\n+    zip64local_putValue_inmemory(zi->ci.central_header+4,(uLong)versionMadeBy,2);\n+    zip64local_putValue_inmemory(zi->ci.central_header+6,(uLong)20,2);\n+    zip64local_putValue_inmemory(zi->ci.central_header+8,(uLong)zi->ci.flag,2);\n+    zip64local_putValue_inmemory(zi->ci.central_header+10,(uLong)zi->ci.method,2);\n+    zip64local_putValue_inmemory(zi->ci.central_header+12,(uLong)zi->ci.dosDate,4);\n+    zip64local_putValue_inmemory(zi->ci.central_header+16,(uLong)0,4); /*crc*/\n+    zip64local_putValue_inmemory(zi->ci.central_header+20,(uLong)0,4); /*compr size*/\n+    zip64local_putValue_inmemory(zi->ci.central_header+24,(uLong)0,4); /*uncompr size*/\n+    zip64local_putValue_inmemory(zi->ci.central_header+28,(uLong)size_filename,2);\n+    zip64local_putValue_inmemory(zi->ci.central_header+30,(uLong)size_extrafield_global,2);\n+    zip64local_putValue_inmemory(zi->ci.central_header+32,(uLong)size_comment,2);\n+    zip64local_putValue_inmemory(zi->ci.central_header+34,(uLong)0,2); /*disk nm start*/\n \n     if (zipfi==NULL)\n-        ziplocal_putValue_inmemory(zi->ci.central_header+36,(uLong)0,2);\n+        zip64local_putValue_inmemory(zi->ci.central_header+36,(uLong)0,2);\n     else\n-        ziplocal_putValue_inmemory(zi->ci.central_header+36,(uLong)zipfi->internal_fa,2);\n+        zip64local_putValue_inmemory(zi->ci.central_header+36,(uLong)zipfi->internal_fa,2);\n \n     if (zipfi==NULL)\n-        ziplocal_putValue_inmemory(zi->ci.central_header+38,(uLong)0,4);\n+        zip64local_putValue_inmemory(zi->ci.central_header+38,(uLong)0,4);\n     else\n-        ziplocal_putValue_inmemory(zi->ci.central_header+38,(uLong)zipfi->external_fa,4);\n+        zip64local_putValue_inmemory(zi->ci.central_header+38,(uLong)zipfi->external_fa,4);\n \n-    ziplocal_putValue_inmemory(zi->ci.central_header+42,(uLong)zi->ci.pos_local_header- zi->add_position_when_writting_offset,4);\n+    if(zi->ci.pos_local_header >= 0xffffffff)\n+      zip64local_putValue_inmemory(zi->ci.central_header+42,(uLong)0xffffffff,4);\n+    else\n+      zip64local_putValue_inmemory(zi->ci.central_header+42,(uLong)zi->ci.pos_local_header - zi->add_position_when_writting_offset,4);\n \n     for (i=0;i<size_filename;i++)\n         *(zi->ci.central_header+SIZECENTRALHEADER+i) = *(filename+i);\n@@ -816,63 +1178,66 @@ extern int ZEXPORT zipOpenNewFileInZip3 (file, filename, zipfi,\n     if (zi->ci.central_header == NULL)\n         return ZIP_INTERNALERROR;\n \n-    /* write the local header */\n-    err = ziplocal_putValue(&zi->z_filefunc,zi->filestream,(uLong)LOCALHEADERMAGIC,4);\n-\n-    if (err==ZIP_OK)\n-        err = ziplocal_putValue(&zi->z_filefunc,zi->filestream,(uLong)20,2);/* version needed to extract */\n-    if (err==ZIP_OK)\n-        err = ziplocal_putValue(&zi->z_filefunc,zi->filestream,(uLong)zi->ci.flag,2);\n-\n-    if (err==ZIP_OK)\n-        err = ziplocal_putValue(&zi->z_filefunc,zi->filestream,(uLong)zi->ci.method,2);\n-\n-    if (err==ZIP_OK)\n-        err = ziplocal_putValue(&zi->z_filefunc,zi->filestream,(uLong)zi->ci.dosDate,4);\n-\n-    if (err==ZIP_OK)\n-        err = ziplocal_putValue(&zi->z_filefunc,zi->filestream,(uLong)0,4); /* crc 32, unknown */\n-    if (err==ZIP_OK)\n-        err = ziplocal_putValue(&zi->z_filefunc,zi->filestream,(uLong)0,4); /* compressed size, unknown */\n-    if (err==ZIP_OK)\n-        err = ziplocal_putValue(&zi->z_filefunc,zi->filestream,(uLong)0,4); /* uncompressed size, unknown */\n-\n-    if (err==ZIP_OK)\n-        err = ziplocal_putValue(&zi->z_filefunc,zi->filestream,(uLong)size_filename,2);\n-\n-    if (err==ZIP_OK)\n-        err = ziplocal_putValue(&zi->z_filefunc,zi->filestream,(uLong)size_extrafield_local,2);\n-\n-    if ((err==ZIP_OK) && (size_filename>0))\n-        if (ZWRITE(zi->z_filefunc,zi->filestream,filename,size_filename)!=size_filename)\n-                err = ZIP_ERRNO;\n-\n-    if ((err==ZIP_OK) && (size_extrafield_local>0))\n-        if (ZWRITE(zi->z_filefunc,zi->filestream,extrafield_local,size_extrafield_local)\n-                                                                           !=size_extrafield_local)\n-                err = ZIP_ERRNO;\n+    zi->ci.zip64 = zip64;\n+    zi->ci.totalCompressedData = 0;\n+    zi->ci.totalUncompressedData = 0;\n+    zi->ci.pos_zip64extrainfo = 0;\n+\n+    err = Write_LocalFileHeader(zi, filename, size_extrafield_local, extrafield_local);\n+\n+#ifdef HAVE_BZIP2\n+    zi->ci.bstream.avail_in = (uInt)0;\n+    zi->ci.bstream.avail_out = (uInt)Z_BUFSIZE;\n+    zi->ci.bstream.next_out = (char*)zi->ci.buffered_data;\n+    zi->ci.bstream.total_in_hi32 = 0;\n+    zi->ci.bstream.total_in_lo32 = 0;\n+    zi->ci.bstream.total_out_hi32 = 0;\n+    zi->ci.bstream.total_out_lo32 = 0;\n+#endif\n \n     zi->ci.stream.avail_in = (uInt)0;\n     zi->ci.stream.avail_out = (uInt)Z_BUFSIZE;\n     zi->ci.stream.next_out = zi->ci.buffered_data;\n     zi->ci.stream.total_in = 0;\n     zi->ci.stream.total_out = 0;\n+    zi->ci.stream.data_type = Z_BINARY;\n \n+#ifdef HAVE_BZIP2\n+    if ((err==ZIP_OK) && (zi->ci.method == Z_DEFLATED || zi->ci.method == Z_BZIP2ED) && (!zi->ci.raw))\n+#else\n     if ((err==ZIP_OK) && (zi->ci.method == Z_DEFLATED) && (!zi->ci.raw))\n+#endif\n     {\n-        zi->ci.stream.zalloc = (alloc_func)0;\n-        zi->ci.stream.zfree = (free_func)0;\n-        zi->ci.stream.opaque = (voidpf)0;\n+        if(zi->ci.method == Z_DEFLATED)\n+        {\n+          zi->ci.stream.zalloc = (alloc_func)0;\n+          zi->ci.stream.zfree = (free_func)0;\n+          zi->ci.stream.opaque = (voidpf)0;\n \n-        if (windowBits>0)\n-            windowBits = -windowBits;\n+          if (windowBits>0)\n+              windowBits = -windowBits;\n \n-        err = deflateInit2(&zi->ci.stream, level,\n-               Z_DEFLATED, windowBits, memLevel, strategy);\n+          err = deflateInit2(&zi->ci.stream, level, Z_DEFLATED, windowBits, memLevel, strategy);\n+\n+          if (err==Z_OK)\n+              zi->ci.stream_initialised = Z_DEFLATED;\n+        }\n+        else if(zi->ci.method == Z_BZIP2ED)\n+        {\n+#ifdef HAVE_BZIP2\n+            // Init BZip stuff here\n+          zi->ci.bstream.bzalloc = 0;\n+          zi->ci.bstream.bzfree = 0;\n+          zi->ci.bstream.opaque = (voidpf)0;\n+\n+          err = BZ2_bzCompressInit(&zi->ci.bstream, level, 0,35);\n+          if(err == BZ_OK)\n+            zi->ci.stream_initialised = Z_BZIP2ED;\n+#endif\n+        }\n \n-        if (err==Z_OK)\n-            zi->ci.stream_initialised = 1;\n     }\n+\n #    ifndef NOCRYPT\n     zi->ci.crypt_header_size = 0;\n     if ((err==Z_OK) && (password != NULL))\n@@ -886,7 +1251,7 @@ extern int ZEXPORT zipOpenNewFileInZip3 (file, filename, zipfi,\n         sizeHead=crypthead(password,bufHead,RAND_HEAD_LEN,zi->ci.keys,zi->ci.pcrc_32_tab,crcForCrypting);\n         zi->ci.crypt_header_size = sizeHead;\n \n-        if (ZWRITE(zi->z_filefunc,zi->filestream,bufHead,sizeHead) != sizeHead)\n+        if (ZWRITE64(zi->z_filefunc,zi->filestream,bufHead,sizeHead) != sizeHead)\n                 err = ZIP_ERRNO;\n     }\n #    endif\n@@ -896,53 +1261,105 @@ extern int ZEXPORT zipOpenNewFileInZip3 (file, filename, zipfi,\n     return err;\n }\n \n-extern int ZEXPORT zipOpenNewFileInZip2(file, filename, zipfi,\n-                                        extrafield_local, size_extrafield_local,\n-                                        extrafield_global, size_extrafield_global,\n-                                        comment, method, level, raw)\n-    zipFile file;\n-    const char* filename;\n-    const zip_fileinfo* zipfi;\n-    const void* extrafield_local;\n-    uInt size_extrafield_local;\n-    const void* extrafield_global;\n-    uInt size_extrafield_global;\n-    const char* comment;\n-    int method;\n-    int level;\n-    int raw;\n+extern int ZEXPORT zipOpenNewFileInZip4 (zipFile file, const char* filename, const zip_fileinfo* zipfi,\n+                                         const void* extrafield_local, uInt size_extrafield_local,\n+                                         const void* extrafield_global, uInt size_extrafield_global,\n+                                         const char* comment, int method, int level, int raw,\n+                                         int windowBits,int memLevel, int strategy,\n+                                         const char* password, uLong crcForCrypting,\n+                                         uLong versionMadeBy, uLong flagBase)\n+{\n+    return zipOpenNewFileInZip4_64 (file, filename, zipfi,\n+                                 extrafield_local, size_extrafield_local,\n+                                 extrafield_global, size_extrafield_global,\n+                                 comment, method, level, raw,\n+                                 windowBits, memLevel, strategy,\n+                                 password, crcForCrypting, versionMadeBy, flagBase, 0);\n+}\n+\n+extern int ZEXPORT zipOpenNewFileInZip3 (zipFile file, const char* filename, const zip_fileinfo* zipfi,\n+                                         const void* extrafield_local, uInt size_extrafield_local,\n+                                         const void* extrafield_global, uInt size_extrafield_global,\n+                                         const char* comment, int method, int level, int raw,\n+                                         int windowBits,int memLevel, int strategy,\n+                                         const char* password, uLong crcForCrypting)\n+{\n+    return zipOpenNewFileInZip4_64 (file, filename, zipfi,\n+                                 extrafield_local, size_extrafield_local,\n+                                 extrafield_global, size_extrafield_global,\n+                                 comment, method, level, raw,\n+                                 windowBits, memLevel, strategy,\n+                                 password, crcForCrypting, VERSIONMADEBY, 0, 0);\n+}\n+\n+extern int ZEXPORT zipOpenNewFileInZip3_64(zipFile file, const char* filename, const zip_fileinfo* zipfi,\n+                                         const void* extrafield_local, uInt size_extrafield_local,\n+                                         const void* extrafield_global, uInt size_extrafield_global,\n+                                         const char* comment, int method, int level, int raw,\n+                                         int windowBits,int memLevel, int strategy,\n+                                         const char* password, uLong crcForCrypting, int zip64)\n+{\n+    return zipOpenNewFileInZip4_64 (file, filename, zipfi,\n+                                 extrafield_local, size_extrafield_local,\n+                                 extrafield_global, size_extrafield_global,\n+                                 comment, method, level, raw,\n+                                 windowBits, memLevel, strategy,\n+                                 password, crcForCrypting, VERSIONMADEBY, 0, zip64);\n+}\n+\n+extern int ZEXPORT zipOpenNewFileInZip2(zipFile file, const char* filename, const zip_fileinfo* zipfi,\n+                                        const void* extrafield_local, uInt size_extrafield_local,\n+                                        const void* extrafield_global, uInt size_extrafield_global,\n+                                        const char* comment, int method, int level, int raw)\n {\n-    return zipOpenNewFileInZip3 (file, filename, zipfi,\n+    return zipOpenNewFileInZip4_64 (file, filename, zipfi,\n                                  extrafield_local, size_extrafield_local,\n                                  extrafield_global, size_extrafield_global,\n                                  comment, method, level, raw,\n                                  -MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY,\n-                                 NULL, 0);\n+                                 NULL, 0, VERSIONMADEBY, 0, 0);\n }\n \n-extern int ZEXPORT zipOpenNewFileInZip (file, filename, zipfi,\n-                                        extrafield_local, size_extrafield_local,\n-                                        extrafield_global, size_extrafield_global,\n-                                        comment, method, level)\n-    zipFile file;\n-    const char* filename;\n-    const zip_fileinfo* zipfi;\n-    const void* extrafield_local;\n-    uInt size_extrafield_local;\n-    const void* extrafield_global;\n-    uInt size_extrafield_global;\n-    const char* comment;\n-    int method;\n-    int level;\n+extern int ZEXPORT zipOpenNewFileInZip2_64(zipFile file, const char* filename, const zip_fileinfo* zipfi,\n+                                        const void* extrafield_local, uInt size_extrafield_local,\n+                                        const void* extrafield_global, uInt size_extrafield_global,\n+                                        const char* comment, int method, int level, int raw, int zip64)\n {\n-    return zipOpenNewFileInZip2 (file, filename, zipfi,\n+    return zipOpenNewFileInZip4_64 (file, filename, zipfi,\n                                  extrafield_local, size_extrafield_local,\n                                  extrafield_global, size_extrafield_global,\n-                                 comment, method, level, 0);\n+                                 comment, method, level, raw,\n+                                 -MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY,\n+                                 NULL, 0, VERSIONMADEBY, 0, zip64);\n }\n \n-local int zipFlushWriteBuffer(zi)\n-  zip_internal* zi;\n+extern int ZEXPORT zipOpenNewFileInZip64 (zipFile file, const char* filename, const zip_fileinfo* zipfi,\n+                                        const void* extrafield_local, uInt size_extrafield_local,\n+                                        const void*extrafield_global, uInt size_extrafield_global,\n+                                        const char* comment, int method, int level, int zip64)\n+{\n+    return zipOpenNewFileInZip4_64 (file, filename, zipfi,\n+                                 extrafield_local, size_extrafield_local,\n+                                 extrafield_global, size_extrafield_global,\n+                                 comment, method, level, 0,\n+                                 -MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY,\n+                                 NULL, 0, VERSIONMADEBY, 0, zip64);\n+}\n+\n+extern int ZEXPORT zipOpenNewFileInZip (zipFile file, const char* filename, const zip_fileinfo* zipfi,\n+                                        const void* extrafield_local, uInt size_extrafield_local,\n+                                        const void*extrafield_global, uInt size_extrafield_global,\n+                                        const char* comment, int method, int level)\n+{\n+    return zipOpenNewFileInZip4_64 (file, filename, zipfi,\n+                                 extrafield_local, size_extrafield_local,\n+                                 extrafield_global, size_extrafield_global,\n+                                 comment, method, level, 0,\n+                                 -MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY,\n+                                 NULL, 0, VERSIONMADEBY, 0, 0);\n+}\n+\n+local int zip64FlushWriteBuffer(zip64_internal* zi)\n {\n     int err=ZIP_OK;\n \n@@ -952,169 +1369,372 @@ local int zipFlushWriteBuffer(zi)\n         uInt i;\n         int t;\n         for (i=0;i<zi->ci.pos_in_buffered_data;i++)\n-            zi->ci.buffered_data[i] = zencode(zi->ci.keys, zi->ci.pcrc_32_tab,\n-                                       zi->ci.buffered_data[i],t);\n+            zi->ci.buffered_data[i] = zencode(zi->ci.keys, zi->ci.pcrc_32_tab, zi->ci.buffered_data[i],t);\n #endif\n     }\n-    if (ZWRITE(zi->z_filefunc,zi->filestream,zi->ci.buffered_data,zi->ci.pos_in_buffered_data)\n-                                                                    !=zi->ci.pos_in_buffered_data)\n+\n+    if (ZWRITE64(zi->z_filefunc,zi->filestream,zi->ci.buffered_data,zi->ci.pos_in_buffered_data) != zi->ci.pos_in_buffered_data)\n       err = ZIP_ERRNO;\n+\n+    zi->ci.totalCompressedData += zi->ci.pos_in_buffered_data;\n+\n+#ifdef HAVE_BZIP2\n+    if(zi->ci.method == Z_BZIP2ED)\n+    {\n+      zi->ci.totalUncompressedData += zi->ci.bstream.total_in_lo32;\n+      zi->ci.bstream.total_in_lo32 = 0;\n+      zi->ci.bstream.total_in_hi32 = 0;\n+    }\n+    else\n+#endif\n+    {\n+      zi->ci.totalUncompressedData += zi->ci.stream.total_in;\n+      zi->ci.stream.total_in = 0;\n+    }\n+\n+\n     zi->ci.pos_in_buffered_data = 0;\n+\n     return err;\n }\n \n-extern int ZEXPORT zipWriteInFileInZip (file, buf, len)\n-    zipFile file;\n-    const void* buf;\n-    unsigned len;\n+extern int ZEXPORT zipWriteInFileInZip (zipFile file,const void* buf,unsigned int len)\n {\n-    zip_internal* zi;\n+    zip64_internal* zi;\n     int err=ZIP_OK;\n \n     if (file == NULL)\n         return ZIP_PARAMERROR;\n-    zi = (zip_internal*)file;\n+    zi = (zip64_internal*)file;\n \n     if (zi->in_opened_file_inzip == 0)\n         return ZIP_PARAMERROR;\n \n-    zi->ci.stream.next_in = (void*)buf;\n-    zi->ci.stream.avail_in = len;\n-    zi->ci.crc32 = crc32(zi->ci.crc32,buf,len);\n+    zi->ci.crc32 = crc32(zi->ci.crc32,buf,(uInt)len);\n \n-    while ((err==ZIP_OK) && (zi->ci.stream.avail_in>0))\n+#ifdef HAVE_BZIP2\n+    if(zi->ci.method == Z_BZIP2ED && (!zi->ci.raw))\n     {\n-        if (zi->ci.stream.avail_out == 0)\n+      zi->ci.bstream.next_in = (void*)buf;\n+      zi->ci.bstream.avail_in = len;\n+      err = BZ_RUN_OK;\n+\n+      while ((err==BZ_RUN_OK) && (zi->ci.bstream.avail_in>0))\n+      {\n+        if (zi->ci.bstream.avail_out == 0)\n         {\n-            if (zipFlushWriteBuffer(zi) == ZIP_ERRNO)\n-                err = ZIP_ERRNO;\n-            zi->ci.stream.avail_out = (uInt)Z_BUFSIZE;\n-            zi->ci.stream.next_out = zi->ci.buffered_data;\n+          if (zip64FlushWriteBuffer(zi) == ZIP_ERRNO)\n+            err = ZIP_ERRNO;\n+          zi->ci.bstream.avail_out = (uInt)Z_BUFSIZE;\n+          zi->ci.bstream.next_out = (char*)zi->ci.buffered_data;\n         }\n \n \n-        if(err != ZIP_OK)\n-            break;\n+        if(err != BZ_RUN_OK)\n+          break;\n \n-        if ((zi->ci.method == Z_DEFLATED) && (!zi->ci.raw))\n+        if ((zi->ci.method == Z_BZIP2ED) && (!zi->ci.raw))\n         {\n-            uLong uTotalOutBefore = zi->ci.stream.total_out;\n-            err=deflate(&zi->ci.stream,  Z_NO_FLUSH);\n-            zi->ci.pos_in_buffered_data += (uInt)(zi->ci.stream.total_out - uTotalOutBefore) ;\n+          uLong uTotalOutBefore_lo = zi->ci.bstream.total_out_lo32;\n+//          uLong uTotalOutBefore_hi = zi->ci.bstream.total_out_hi32;\n+          err=BZ2_bzCompress(&zi->ci.bstream,  BZ_RUN);\n \n+          zi->ci.pos_in_buffered_data += (uInt)(zi->ci.bstream.total_out_lo32 - uTotalOutBefore_lo) ;\n         }\n-        else\n-        {\n-            uInt copy_this,i;\n-            if (zi->ci.stream.avail_in < zi->ci.stream.avail_out)\n-                copy_this = zi->ci.stream.avail_in;\n-            else\n-                copy_this = zi->ci.stream.avail_out;\n-            for (i=0;i<copy_this;i++)\n-                *(((char*)zi->ci.stream.next_out)+i) =\n-                    *(((const char*)zi->ci.stream.next_in)+i);\n-            {\n-                zi->ci.stream.avail_in -= copy_this;\n-                zi->ci.stream.avail_out-= copy_this;\n-                zi->ci.stream.next_in+= copy_this;\n-                zi->ci.stream.next_out+= copy_this;\n-                zi->ci.stream.total_in+= copy_this;\n-                zi->ci.stream.total_out+= copy_this;\n-                zi->ci.pos_in_buffered_data += copy_this;\n-            }\n-        }\n+      }\n+\n+      if(err == BZ_RUN_OK)\n+        err = ZIP_OK;\n+    }\n+    else\n+#endif\n+    {\n+      zi->ci.stream.next_in = (Bytef*)buf;\n+      zi->ci.stream.avail_in = len;\n+\n+      while ((err==ZIP_OK) && (zi->ci.stream.avail_in>0))\n+      {\n+          if (zi->ci.stream.avail_out == 0)\n+          {\n+              if (zip64FlushWriteBuffer(zi) == ZIP_ERRNO)\n+                  err = ZIP_ERRNO;\n+              zi->ci.stream.avail_out = (uInt)Z_BUFSIZE;\n+              zi->ci.stream.next_out = zi->ci.buffered_data;\n+          }\n+\n+\n+          if(err != ZIP_OK)\n+              break;\n+\n+          if ((zi->ci.method == Z_DEFLATED) && (!zi->ci.raw))\n+          {\n+              uLong uTotalOutBefore = zi->ci.stream.total_out;\n+              err=deflate(&zi->ci.stream,  Z_NO_FLUSH);\n+              if(uTotalOutBefore > zi->ci.stream.total_out)\n+              {\n+                int bBreak = 0;\n+                bBreak++;\n+              }\n+\n+              zi->ci.pos_in_buffered_data += (uInt)(zi->ci.stream.total_out - uTotalOutBefore) ;\n+          }\n+          else\n+          {\n+              uInt copy_this,i;\n+              if (zi->ci.stream.avail_in < zi->ci.stream.avail_out)\n+                  copy_this = zi->ci.stream.avail_in;\n+              else\n+                  copy_this = zi->ci.stream.avail_out;\n+\n+              for (i = 0; i < copy_this; i++)\n+                  *(((char*)zi->ci.stream.next_out)+i) =\n+                      *(((const char*)zi->ci.stream.next_in)+i);\n+              {\n+                  zi->ci.stream.avail_in -= copy_this;\n+                  zi->ci.stream.avail_out-= copy_this;\n+                  zi->ci.stream.next_in+= copy_this;\n+                  zi->ci.stream.next_out+= copy_this;\n+                  zi->ci.stream.total_in+= copy_this;\n+                  zi->ci.stream.total_out+= copy_this;\n+                  zi->ci.pos_in_buffered_data += copy_this;\n+              }\n+          }\n+      }// while(...)\n     }\n \n     return err;\n }\n \n-extern int ZEXPORT zipCloseFileInZipRaw (file, uncompressed_size, crc32)\n-    zipFile file;\n-    uLong uncompressed_size;\n-    uLong crc32;\n+extern int ZEXPORT zipCloseFileInZipRaw (zipFile file, uLong uncompressed_size, uLong crc32)\n+{\n+    return zipCloseFileInZipRaw64 (file, uncompressed_size, crc32);\n+}\n+\n+extern int ZEXPORT zipCloseFileInZipRaw64 (zipFile file, ZPOS64_T uncompressed_size, uLong crc32)\n {\n-    zip_internal* zi;\n-    uLong compressed_size;\n+    zip64_internal* zi;\n+    ZPOS64_T compressed_size;\n+    uLong invalidValue = 0xffffffff;\n+    short datasize = 0;\n     int err=ZIP_OK;\n \n     if (file == NULL)\n         return ZIP_PARAMERROR;\n-    zi = (zip_internal*)file;\n+    zi = (zip64_internal*)file;\n \n     if (zi->in_opened_file_inzip == 0)\n         return ZIP_PARAMERROR;\n     zi->ci.stream.avail_in = 0;\n \n     if ((zi->ci.method == Z_DEFLATED) && (!zi->ci.raw))\n-        while (err==ZIP_OK)\n+                {\n+                        while (err==ZIP_OK)\n+                        {\n+                                uLong uTotalOutBefore;\n+                                if (zi->ci.stream.avail_out == 0)\n+                                {\n+                                        if (zip64FlushWriteBuffer(zi) == ZIP_ERRNO)\n+                                                err = ZIP_ERRNO;\n+                                        zi->ci.stream.avail_out = (uInt)Z_BUFSIZE;\n+                                        zi->ci.stream.next_out = zi->ci.buffered_data;\n+                                }\n+                                uTotalOutBefore = zi->ci.stream.total_out;\n+                                err=deflate(&zi->ci.stream,  Z_FINISH);\n+                                zi->ci.pos_in_buffered_data += (uInt)(zi->ci.stream.total_out - uTotalOutBefore) ;\n+                        }\n+                }\n+    else if ((zi->ci.method == Z_BZIP2ED) && (!zi->ci.raw))\n     {\n+#ifdef HAVE_BZIP2\n+      err = BZ_FINISH_OK;\n+      while (err==BZ_FINISH_OK)\n+      {\n         uLong uTotalOutBefore;\n-        if (zi->ci.stream.avail_out == 0)\n+        if (zi->ci.bstream.avail_out == 0)\n         {\n-            if (zipFlushWriteBuffer(zi) == ZIP_ERRNO)\n-                err = ZIP_ERRNO;\n-            zi->ci.stream.avail_out = (uInt)Z_BUFSIZE;\n-            zi->ci.stream.next_out = zi->ci.buffered_data;\n+          if (zip64FlushWriteBuffer(zi) == ZIP_ERRNO)\n+            err = ZIP_ERRNO;\n+          zi->ci.bstream.avail_out = (uInt)Z_BUFSIZE;\n+          zi->ci.bstream.next_out = (char*)zi->ci.buffered_data;\n         }\n-        uTotalOutBefore = zi->ci.stream.total_out;\n-        err=deflate(&zi->ci.stream,  Z_FINISH);\n-        zi->ci.pos_in_buffered_data += (uInt)(zi->ci.stream.total_out - uTotalOutBefore) ;\n+        uTotalOutBefore = zi->ci.bstream.total_out_lo32;\n+        err=BZ2_bzCompress(&zi->ci.bstream,  BZ_FINISH);\n+        if(err == BZ_STREAM_END)\n+          err = Z_STREAM_END;\n+\n+        zi->ci.pos_in_buffered_data += (uInt)(zi->ci.bstream.total_out_lo32 - uTotalOutBefore);\n+      }\n+\n+      if(err == BZ_FINISH_OK)\n+        err = ZIP_OK;\n+#endif\n     }\n \n     if (err==Z_STREAM_END)\n         err=ZIP_OK; /* this is normal */\n \n     if ((zi->ci.pos_in_buffered_data>0) && (err==ZIP_OK))\n-        if (zipFlushWriteBuffer(zi)==ZIP_ERRNO)\n+                {\n+        if (zip64FlushWriteBuffer(zi)==ZIP_ERRNO)\n             err = ZIP_ERRNO;\n+                }\n \n     if ((zi->ci.method == Z_DEFLATED) && (!zi->ci.raw))\n     {\n-        err=deflateEnd(&zi->ci.stream);\n+        int tmp_err = deflateEnd(&zi->ci.stream);\n+        if (err == ZIP_OK)\n+            err = tmp_err;\n         zi->ci.stream_initialised = 0;\n     }\n+#ifdef HAVE_BZIP2\n+    else if((zi->ci.method == Z_BZIP2ED) && (!zi->ci.raw))\n+    {\n+      int tmperr = BZ2_bzCompressEnd(&zi->ci.bstream);\n+                        if (err==ZIP_OK)\n+                                err = tmperr;\n+                        zi->ci.stream_initialised = 0;\n+    }\n+#endif\n \n     if (!zi->ci.raw)\n     {\n         crc32 = (uLong)zi->ci.crc32;\n-        uncompressed_size = (uLong)zi->ci.stream.total_in;\n+        uncompressed_size = zi->ci.totalUncompressedData;\n     }\n-    compressed_size = (uLong)zi->ci.stream.total_out;\n+    compressed_size = zi->ci.totalCompressedData;\n+\n #    ifndef NOCRYPT\n     compressed_size += zi->ci.crypt_header_size;\n #    endif\n \n-    ziplocal_putValue_inmemory(zi->ci.central_header+16,crc32,4); /*crc*/\n-    ziplocal_putValue_inmemory(zi->ci.central_header+20,\n-                                compressed_size,4); /*compr size*/\n+    // update Current Item crc and sizes,\n+    if(compressed_size >= 0xffffffff || uncompressed_size >= 0xffffffff || zi->ci.pos_local_header >= 0xffffffff)\n+    {\n+      /*version Made by*/\n+      zip64local_putValue_inmemory(zi->ci.central_header+4,(uLong)45,2);\n+      /*version needed*/\n+      zip64local_putValue_inmemory(zi->ci.central_header+6,(uLong)45,2);\n+\n+    }\n+\n+    zip64local_putValue_inmemory(zi->ci.central_header+16,crc32,4); /*crc*/\n+\n+\n+    if(compressed_size >= 0xffffffff)\n+      zip64local_putValue_inmemory(zi->ci.central_header+20, invalidValue,4); /*compr size*/\n+    else\n+      zip64local_putValue_inmemory(zi->ci.central_header+20, compressed_size,4); /*compr size*/\n+\n+    /// set internal file attributes field\n     if (zi->ci.stream.data_type == Z_ASCII)\n-        ziplocal_putValue_inmemory(zi->ci.central_header+36,(uLong)Z_ASCII,2);\n-    ziplocal_putValue_inmemory(zi->ci.central_header+24,\n-                                uncompressed_size,4); /*uncompr size*/\n+        zip64local_putValue_inmemory(zi->ci.central_header+36,(uLong)Z_ASCII,2);\n+\n+    if(uncompressed_size >= 0xffffffff)\n+      zip64local_putValue_inmemory(zi->ci.central_header+24, invalidValue,4); /*uncompr size*/\n+    else\n+      zip64local_putValue_inmemory(zi->ci.central_header+24, uncompressed_size,4); /*uncompr size*/\n+\n+    // Add ZIP64 extra info field for uncompressed size\n+    if(uncompressed_size >= 0xffffffff)\n+      datasize += 8;\n+\n+    // Add ZIP64 extra info field for compressed size\n+    if(compressed_size >= 0xffffffff)\n+      datasize += 8;\n+\n+    // Add ZIP64 extra info field for relative offset to local file header of current file\n+    if(zi->ci.pos_local_header >= 0xffffffff)\n+      datasize += 8;\n+\n+    if(datasize > 0)\n+    {\n+      char* p = NULL;\n+\n+      if((uLong)(datasize + 4) > zi->ci.size_centralExtraFree)\n+      {\n+        // we can not write more data to the buffer that we have room for.\n+        return ZIP_BADZIPFILE;\n+      }\n+\n+      p = zi->ci.central_header + zi->ci.size_centralheader;\n+\n+      // Add Extra Information Header for 'ZIP64 information'\n+      zip64local_putValue_inmemory(p, 0x0001, 2); // HeaderID\n+      p += 2;\n+      zip64local_putValue_inmemory(p, datasize, 2); // DataSize\n+      p += 2;\n+\n+      if(uncompressed_size >= 0xffffffff)\n+      {\n+        zip64local_putValue_inmemory(p, uncompressed_size, 8);\n+        p += 8;\n+      }\n+\n+      if(compressed_size >= 0xffffffff)\n+      {\n+        zip64local_putValue_inmemory(p, compressed_size, 8);\n+        p += 8;\n+      }\n+\n+      if(zi->ci.pos_local_header >= 0xffffffff)\n+      {\n+        zip64local_putValue_inmemory(p, zi->ci.pos_local_header, 8);\n+        p += 8;\n+      }\n+\n+      // Update how much extra free space we got in the memory buffer\n+      // and increase the centralheader size so the new ZIP64 fields are included\n+      // ( 4 below is the size of HeaderID and DataSize field )\n+      zi->ci.size_centralExtraFree -= datasize + 4;\n+      zi->ci.size_centralheader += datasize + 4;\n+\n+      // Update the extra info size field\n+      zi->ci.size_centralExtra += datasize + 4;\n+      zip64local_putValue_inmemory(zi->ci.central_header+30,(uLong)zi->ci.size_centralExtra,2);\n+    }\n \n     if (err==ZIP_OK)\n-        err = add_data_in_datablock(&zi->central_dir,zi->ci.central_header,\n-                                       (uLong)zi->ci.size_centralheader);\n+        err = add_data_in_datablock(&zi->central_dir, zi->ci.central_header, (uLong)zi->ci.size_centralheader);\n+\n     free(zi->ci.central_header);\n \n     if (err==ZIP_OK)\n     {\n-        long cur_pos_inzip = ZTELL(zi->z_filefunc,zi->filestream);\n-        if (ZSEEK(zi->z_filefunc,zi->filestream,\n-                  zi->ci.pos_local_header + 14,ZLIB_FILEFUNC_SEEK_SET)!=0)\n+        // Update the LocalFileHeader with the new values.\n+\n+        ZPOS64_T cur_pos_inzip = ZTELL64(zi->z_filefunc,zi->filestream);\n+\n+        if (ZSEEK64(zi->z_filefunc,zi->filestream, zi->ci.pos_local_header + 14,ZLIB_FILEFUNC_SEEK_SET)!=0)\n             err = ZIP_ERRNO;\n \n         if (err==ZIP_OK)\n-            err = ziplocal_putValue(&zi->z_filefunc,zi->filestream,crc32,4); /* crc 32, unknown */\n+            err = zip64local_putValue(&zi->z_filefunc,zi->filestream,crc32,4); /* crc 32, unknown */\n \n-        if (err==ZIP_OK) /* compressed size, unknown */\n-            err = ziplocal_putValue(&zi->z_filefunc,zi->filestream,compressed_size,4);\n+        if(uncompressed_size >= 0xffffffff)\n+        {\n+          if(zi->ci.pos_zip64extrainfo > 0)\n+          {\n+            // Update the size in the ZIP64 extended field.\n+            if (ZSEEK64(zi->z_filefunc,zi->filestream, zi->ci.pos_zip64extrainfo + 4,ZLIB_FILEFUNC_SEEK_SET)!=0)\n+              err = ZIP_ERRNO;\n+\n+            if (err==ZIP_OK) /* compressed size, unknown */\n+              err = zip64local_putValue(&zi->z_filefunc, zi->filestream, uncompressed_size, 8);\n+\n+            if (err==ZIP_OK) /* uncompressed size, unknown */\n+              err = zip64local_putValue(&zi->z_filefunc, zi->filestream, compressed_size, 8);\n+          }\n+        }\n+        else\n+        {\n+          if (err==ZIP_OK) /* compressed size, unknown */\n+              err = zip64local_putValue(&zi->z_filefunc,zi->filestream,compressed_size,4);\n \n-        if (err==ZIP_OK) /* uncompressed size, unknown */\n-            err = ziplocal_putValue(&zi->z_filefunc,zi->filestream,uncompressed_size,4);\n+          if (err==ZIP_OK) /* uncompressed size, unknown */\n+              err = zip64local_putValue(&zi->z_filefunc,zi->filestream,uncompressed_size,4);\n+        }\n \n-        if (ZSEEK(zi->z_filefunc,zi->filestream,\n-                  cur_pos_inzip,ZLIB_FILEFUNC_SEEK_SET)!=0)\n+        if (ZSEEK64(zi->z_filefunc,zi->filestream, cur_pos_inzip,ZLIB_FILEFUNC_SEEK_SET)!=0)\n             err = ZIP_ERRNO;\n     }\n \n@@ -1124,24 +1744,150 @@ extern int ZEXPORT zipCloseFileInZipRaw (file, uncompressed_size, crc32)\n     return err;\n }\n \n-extern int ZEXPORT zipCloseFileInZip (file)\n-    zipFile file;\n+extern int ZEXPORT zipCloseFileInZip (zipFile file)\n {\n     return zipCloseFileInZipRaw (file,0,0);\n }\n \n-extern int ZEXPORT zipClose (file, global_comment)\n-    zipFile file;\n-    const char* global_comment;\n+int Write_Zip64EndOfCentralDirectoryLocator(zip64_internal* zi, ZPOS64_T zip64eocd_pos_inzip)\n {\n-    zip_internal* zi;\n+  int err = ZIP_OK;\n+  ZPOS64_T pos = zip64eocd_pos_inzip - zi->add_position_when_writting_offset;\n+\n+  err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(uLong)ZIP64ENDLOCHEADERMAGIC,4);\n+\n+  /*num disks*/\n+    if (err==ZIP_OK) /* number of the disk with the start of the central directory */\n+      err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(uLong)0,4);\n+\n+  /*relative offset*/\n+    if (err==ZIP_OK) /* Relative offset to the Zip64EndOfCentralDirectory */\n+      err = zip64local_putValue(&zi->z_filefunc,zi->filestream, pos,8);\n+\n+  /*total disks*/ /* Do not support spawning of disk so always say 1 here*/\n+    if (err==ZIP_OK) /* number of the disk with the start of the central directory */\n+      err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(uLong)1,4);\n+\n+    return err;\n+}\n+\n+int Write_Zip64EndOfCentralDirectoryRecord(zip64_internal* zi, uLong size_centraldir, ZPOS64_T centraldir_pos_inzip)\n+{\n+  int err = ZIP_OK;\n+\n+  uLong Zip64DataSize = 44;\n+\n+  err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(uLong)ZIP64ENDHEADERMAGIC,4);\n+\n+  if (err==ZIP_OK) /* size of this 'zip64 end of central directory' */\n+    err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(ZPOS64_T)Zip64DataSize,8); // why ZPOS64_T of this ?\n+\n+  if (err==ZIP_OK) /* version made by */\n+    err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(uLong)45,2);\n+\n+  if (err==ZIP_OK) /* version needed */\n+    err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(uLong)45,2);\n+\n+  if (err==ZIP_OK) /* number of this disk */\n+    err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(uLong)0,4);\n+\n+  if (err==ZIP_OK) /* number of the disk with the start of the central directory */\n+    err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(uLong)0,4);\n+\n+  if (err==ZIP_OK) /* total number of entries in the central dir on this disk */\n+    err = zip64local_putValue(&zi->z_filefunc, zi->filestream, zi->number_entry, 8);\n+\n+  if (err==ZIP_OK) /* total number of entries in the central dir */\n+    err = zip64local_putValue(&zi->z_filefunc, zi->filestream, zi->number_entry, 8);\n+\n+  if (err==ZIP_OK) /* size of the central directory */\n+    err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(ZPOS64_T)size_centraldir,8);\n+\n+  if (err==ZIP_OK) /* offset of start of central directory with respect to the starting disk number */\n+  {\n+    ZPOS64_T pos = centraldir_pos_inzip - zi->add_position_when_writting_offset;\n+    err = zip64local_putValue(&zi->z_filefunc,zi->filestream, (ZPOS64_T)pos,8);\n+  }\n+  return err;\n+}\n+int Write_EndOfCentralDirectoryRecord(zip64_internal* zi, uLong size_centraldir, ZPOS64_T centraldir_pos_inzip)\n+{\n+  int err = ZIP_OK;\n+\n+  /*signature*/\n+  err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(uLong)ENDHEADERMAGIC,4);\n+\n+  if (err==ZIP_OK) /* number of this disk */\n+    err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(uLong)0,2);\n+\n+  if (err==ZIP_OK) /* number of the disk with the start of the central directory */\n+    err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(uLong)0,2);\n+\n+  if (err==ZIP_OK) /* total number of entries in the central dir on this disk */\n+  {\n+    {\n+      if(zi->number_entry >= 0xFFFF)\n+        err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(uLong)0xffff,2); // use value in ZIP64 record\n+      else\n+        err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(uLong)zi->number_entry,2);\n+    }\n+  }\n+\n+  if (err==ZIP_OK) /* total number of entries in the central dir */\n+  {\n+    if(zi->number_entry >= 0xFFFF)\n+      err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(uLong)0xffff,2); // use value in ZIP64 record\n+    else\n+      err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(uLong)zi->number_entry,2);\n+  }\n+\n+  if (err==ZIP_OK) /* size of the central directory */\n+    err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(uLong)size_centraldir,4);\n+\n+  if (err==ZIP_OK) /* offset of start of central directory with respect to the starting disk number */\n+  {\n+    ZPOS64_T pos = centraldir_pos_inzip - zi->add_position_when_writting_offset;\n+    if(pos >= 0xffffffff)\n+    {\n+      err = zip64local_putValue(&zi->z_filefunc,zi->filestream, (uLong)0xffffffff,4);\n+    }\n+    else\n+                  err = zip64local_putValue(&zi->z_filefunc,zi->filestream, (uLong)(centraldir_pos_inzip - zi->add_position_when_writting_offset),4);\n+  }\n+\n+   return err;\n+}\n+\n+int Write_GlobalComment(zip64_internal* zi, const char* global_comment)\n+{\n+  int err = ZIP_OK;\n+  uInt size_global_comment = 0;\n+\n+  if(global_comment != NULL)\n+    size_global_comment = (uInt)strlen(global_comment);\n+\n+  err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(uLong)size_global_comment,2);\n+\n+  if (err == ZIP_OK && size_global_comment > 0)\n+  {\n+    if (ZWRITE64(zi->z_filefunc,zi->filestream, global_comment, size_global_comment) != size_global_comment)\n+      err = ZIP_ERRNO;\n+  }\n+  return err;\n+}\n+\n+extern int ZEXPORT zipClose (zipFile file, const char* global_comment)\n+{\n+    zip64_internal* zi;\n     int err = 0;\n     uLong size_centraldir = 0;\n-    uLong centraldir_pos_inzip;\n-    uInt size_global_comment;\n+    ZPOS64_T centraldir_pos_inzip;\n+    ZPOS64_T pos;\n+\n     if (file == NULL)\n         return ZIP_PARAMERROR;\n-    zi = (zip_internal*)file;\n+\n+    zi = (zip64_internal*)file;\n \n     if (zi->in_opened_file_inzip == 1)\n     {\n@@ -1152,61 +1898,42 @@ extern int ZEXPORT zipClose (file, global_comment)\n     if (global_comment==NULL)\n         global_comment = zi->globalcomment;\n #endif\n-    if (global_comment==NULL)\n-        size_global_comment = 0;\n-    else\n-        size_global_comment = (uInt)strlen(global_comment);\n \n-    centraldir_pos_inzip = ZTELL(zi->z_filefunc,zi->filestream);\n+    centraldir_pos_inzip = ZTELL64(zi->z_filefunc,zi->filestream);\n+\n     if (err==ZIP_OK)\n     {\n-        linkedlist_datablock_internal* ldi = zi->central_dir.first_block ;\n+        linkedlist_datablock_internal* ldi = zi->central_dir.first_block;\n         while (ldi!=NULL)\n         {\n             if ((err==ZIP_OK) && (ldi->filled_in_this_block>0))\n-                if (ZWRITE(zi->z_filefunc,zi->filestream,\n-                           ldi->data,ldi->filled_in_this_block)\n-                              !=ldi->filled_in_this_block )\n+            {\n+                if (ZWRITE64(zi->z_filefunc,zi->filestream, ldi->data, ldi->filled_in_this_block) != ldi->filled_in_this_block)\n                     err = ZIP_ERRNO;\n+            }\n \n             size_centraldir += ldi->filled_in_this_block;\n             ldi = ldi->next_datablock;\n         }\n     }\n-    free_datablock(zi->central_dir.first_block);\n-\n-    if (err==ZIP_OK) /* Magic End */\n-        err = ziplocal_putValue(&zi->z_filefunc,zi->filestream,(uLong)ENDHEADERMAGIC,4);\n-\n-    if (err==ZIP_OK) /* number of this disk */\n-        err = ziplocal_putValue(&zi->z_filefunc,zi->filestream,(uLong)0,2);\n-\n-    if (err==ZIP_OK) /* number of the disk with the start of the central directory */\n-        err = ziplocal_putValue(&zi->z_filefunc,zi->filestream,(uLong)0,2);\n-\n-    if (err==ZIP_OK) /* total number of entries in the central dir on this disk */\n-        err = ziplocal_putValue(&zi->z_filefunc,zi->filestream,(uLong)zi->number_entry,2);\n+    free_linkedlist(&(zi->central_dir));\n \n-    if (err==ZIP_OK) /* total number of entries in the central dir */\n-        err = ziplocal_putValue(&zi->z_filefunc,zi->filestream,(uLong)zi->number_entry,2);\n+    pos = centraldir_pos_inzip - zi->add_position_when_writting_offset;\n+    if(pos >= 0xffffffff)\n+    {\n+      ZPOS64_T Zip64EOCDpos = ZTELL64(zi->z_filefunc,zi->filestream);\n+      Write_Zip64EndOfCentralDirectoryRecord(zi, size_centraldir, centraldir_pos_inzip);\n \n-    if (err==ZIP_OK) /* size of the central directory */\n-        err = ziplocal_putValue(&zi->z_filefunc,zi->filestream,(uLong)size_centraldir,4);\n+      Write_Zip64EndOfCentralDirectoryLocator(zi, Zip64EOCDpos);\n+    }\n \n-    if (err==ZIP_OK) /* offset of start of central directory with respect to the\n-                            starting disk number */\n-        err = ziplocal_putValue(&zi->z_filefunc,zi->filestream,\n-                                (uLong)(centraldir_pos_inzip - zi->add_position_when_writting_offset),4);\n+    if (err==ZIP_OK)\n+      err = Write_EndOfCentralDirectoryRecord(zi, size_centraldir, centraldir_pos_inzip);\n \n-    if (err==ZIP_OK) /* zipfile comment length */\n-        err = ziplocal_putValue(&zi->z_filefunc,zi->filestream,(uLong)size_global_comment,2);\n+    if(err == ZIP_OK)\n+      err = Write_GlobalComment(zi, global_comment);\n \n-    if ((err==ZIP_OK) && (size_global_comment>0))\n-        if (ZWRITE(zi->z_filefunc,zi->filestream,\n-                   global_comment,size_global_comment) != size_global_comment)\n-                err = ZIP_ERRNO;\n-\n-    if (ZCLOSE(zi->z_filefunc,zi->filestream) != 0)\n+    if (ZCLOSE64(zi->z_filefunc,zi->filestream) != 0)\n         if (err == ZIP_OK)\n             err = ZIP_ERRNO;\n \n@@ -1217,3 +1944,61 @@ extern int ZEXPORT zipClose (file, global_comment)\n \n     return err;\n }\n+\n+extern int ZEXPORT zipRemoveExtraInfoBlock (char* pData, int* dataLen, short sHeader)\n+{\n+  char* p = pData;\n+  int size = 0;\n+  char* pNewHeader;\n+  char* pTmp;\n+  short header;\n+  short dataSize;\n+\n+  int retVal = ZIP_OK;\n+\n+  if(pData == NULL || *dataLen < 4)\n+    return ZIP_PARAMERROR;\n+\n+  pNewHeader = (char*)ALLOC(*dataLen);\n+  pTmp = pNewHeader;\n+\n+  while(p < (pData + *dataLen))\n+  {\n+    header = *(short*)p;\n+    dataSize = *(((short*)p)+1);\n+\n+    if( header == sHeader ) // Header found.\n+    {\n+      p += dataSize + 4; // skip it. do not copy to temp buffer\n+    }\n+    else\n+    {\n+      // Extra Info block should not be removed, So copy it to the temp buffer.\n+      memcpy(pTmp, p, dataSize + 4);\n+      p += dataSize + 4;\n+      size += dataSize + 4;\n+    }\n+\n+  }\n+\n+  if(size < *dataLen)\n+  {\n+    // clean old extra info block.\n+    memset(pData,0, *dataLen);\n+\n+    // copy the new extra info block over the old\n+    if(size > 0)\n+      memcpy(pData, pNewHeader, size);\n+\n+    // set the new extra info size\n+    *dataLen = size;\n+\n+    retVal = ZIP_OK;\n+  }\n+  else\n+    retVal = ZIP_ERRNO;\n+\n+  TRYFREE(pNewHeader);\n+\n+  return retVal;\n+}"}, {"sha": "8aaebb623430fcba7801c3502f8f94e46198ddb4", "filename": "zlib/contrib/minizip/zip.h", "status": "modified", "additions": 151, "deletions": 24, "changes": 175, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fminizip%2Fzip.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fminizip%2Fzip.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fminizip%2Fzip.h?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,19 +1,15 @@\n-/* zip.h -- IO for compress .zip files using zlib\n-   Version 1.01e, February 12th, 2005\n+/* zip.h -- IO on .zip files using zlib\n+   Version 1.1, February 14h, 2010\n+   part of the MiniZip project - ( http://www.winimage.com/zLibDll/minizip.html )\n \n-   Copyright (C) 1998-2005 Gilles Vollant\n+         Copyright (C) 1998-2010 Gilles Vollant (minizip) ( http://www.winimage.com/zLibDll/minizip.html )\n \n-   This unzip package allow creates .ZIP file, compatible with PKZip 2.04g\n-     WinZip, InfoZip tools and compatible.\n-   Multi volume ZipFile (span) are not supported.\n-   Encryption compatible with pkzip 2.04g only supported\n-   Old compressions used by old PKZip 1.x are not supported\n+         Modifications for Zip64 support\n+         Copyright (C) 2009-2010 Mathias Svensson ( http://result42.com )\n \n-  For uncompress .zip file, look at unzip.h\n+         For more info read MiniZip_info.txt\n \n-\n-   I WAIT FEEDBACK at mail info@winimage.com\n-   Visit also http://www.winimage.com/zLibDll/unzip.html for evolution\n+         ---------------------------------------------------------------------------\n \n    Condition of use and distribution are the same than zlib :\n \n@@ -33,23 +29,23 @@\n      misrepresented as being the original software.\n   3. This notice may not be removed or altered from any source distribution.\n \n+        ---------------------------------------------------------------------------\n \n-*/\n+        Changes\n+\n+        See header of zip.h\n \n-/* for more info about .ZIP format, see\n-      http://www.info-zip.org/pub/infozip/doc/appnote-981119-iz.zip\n-      http://www.info-zip.org/pub/infozip/doc/\n-   PkWare has also a specification at :\n-      ftp://ftp.pkware.com/probdesc.zip\n */\n \n-#ifndef _zip_H\n-#define _zip_H\n+#ifndef _zip12_H\n+#define _zip12_H\n \n #ifdef __cplusplus\n extern \"C\" {\n #endif\n \n+//#define HAVE_BZIP2\n+\n #ifndef _ZLIB_H\n #include \"zlib.h\"\n #endif\n@@ -58,6 +54,12 @@ extern \"C\" {\n #include \"ioapi.h\"\n #endif\n \n+#ifdef HAVE_BZIP2\n+#include \"bzlib.h\"\n+#endif\n+\n+#define Z_BZIP2ED 12\n+\n #if defined(STRICTZIP) || defined(STRICTZIPUNZIP)\n /* like the STRICT of WIN32, we define a pointer that cannot be converted\n     from (void*) without cast */\n@@ -112,6 +114,7 @@ typedef const char* zipcharpc;\n #define APPEND_STATUS_ADDINZIP      (2)\n \n extern zipFile ZEXPORT zipOpen OF((const char *pathname, int append));\n+extern zipFile ZEXPORT zipOpen64 OF((const void *pathname, int append));\n /*\n   Create a zipfile.\n      pathname contain on Windows XP a filename like \"c:\\\\zlib\\\\zlib113.zip\" or on\n@@ -136,6 +139,11 @@ extern zipFile ZEXPORT zipOpen2 OF((const char *pathname,\n                                    zipcharpc* globalcomment,\n                                    zlib_filefunc_def* pzlib_filefunc_def));\n \n+extern zipFile ZEXPORT zipOpen2_64 OF((const void *pathname,\n+                                   int append,\n+                                   zipcharpc* globalcomment,\n+                                   zlib_filefunc64_def* pzlib_filefunc_def));\n+\n extern int ZEXPORT zipOpenNewFileInZip OF((zipFile file,\n                        const char* filename,\n                        const zip_fileinfo* zipfi,\n@@ -146,6 +154,19 @@ extern int ZEXPORT zipOpenNewFileInZip OF((zipFile file,\n                        const char* comment,\n                        int method,\n                        int level));\n+\n+extern int ZEXPORT zipOpenNewFileInZip64 OF((zipFile file,\n+                       const char* filename,\n+                       const zip_fileinfo* zipfi,\n+                       const void* extrafield_local,\n+                       uInt size_extrafield_local,\n+                       const void* extrafield_global,\n+                       uInt size_extrafield_global,\n+                       const char* comment,\n+                       int method,\n+                       int level,\n+                       int zip64));\n+\n /*\n   Open a file in the ZIP for writing.\n   filename : the filename in zip (if NULL, '-' without quote will be used\n@@ -157,6 +178,9 @@ extern int ZEXPORT zipOpenNewFileInZip OF((zipFile file,\n   if comment != NULL, comment contain the comment string\n   method contain the compression method (0 for store, Z_DEFLATED for deflate)\n   level contain the level of compression (can be Z_DEFAULT_COMPRESSION)\n+  zip64 is set to 1 if a zip64 extended information block should be added to the local file header.\n+                    this MUST be '1' if the uncompressed size is >= 0xffffffff.\n+\n */\n \n \n@@ -172,6 +196,19 @@ extern int ZEXPORT zipOpenNewFileInZip2 OF((zipFile file,\n                                             int level,\n                                             int raw));\n \n+\n+extern int ZEXPORT zipOpenNewFileInZip2_64 OF((zipFile file,\n+                                            const char* filename,\n+                                            const zip_fileinfo* zipfi,\n+                                            const void* extrafield_local,\n+                                            uInt size_extrafield_local,\n+                                            const void* extrafield_global,\n+                                            uInt size_extrafield_global,\n+                                            const char* comment,\n+                                            int method,\n+                                            int level,\n+                                            int raw,\n+                                            int zip64));\n /*\n   Same than zipOpenNewFileInZip, except if raw=1, we write raw file\n  */\n@@ -191,13 +228,79 @@ extern int ZEXPORT zipOpenNewFileInZip3 OF((zipFile file,\n                                             int memLevel,\n                                             int strategy,\n                                             const char* password,\n-                                            uLong crcForCtypting));\n+                                            uLong crcForCrypting));\n+\n+extern int ZEXPORT zipOpenNewFileInZip3_64 OF((zipFile file,\n+                                            const char* filename,\n+                                            const zip_fileinfo* zipfi,\n+                                            const void* extrafield_local,\n+                                            uInt size_extrafield_local,\n+                                            const void* extrafield_global,\n+                                            uInt size_extrafield_global,\n+                                            const char* comment,\n+                                            int method,\n+                                            int level,\n+                                            int raw,\n+                                            int windowBits,\n+                                            int memLevel,\n+                                            int strategy,\n+                                            const char* password,\n+                                            uLong crcForCrypting,\n+                                            int zip64\n+                                            ));\n \n /*\n   Same than zipOpenNewFileInZip2, except\n     windowBits,memLevel,,strategy : see parameter strategy in deflateInit2\n     password : crypting password (NULL for no crypting)\n-    crcForCtypting : crc of file to compress (needed for crypting)\n+    crcForCrypting : crc of file to compress (needed for crypting)\n+ */\n+\n+extern int ZEXPORT zipOpenNewFileInZip4 OF((zipFile file,\n+                                            const char* filename,\n+                                            const zip_fileinfo* zipfi,\n+                                            const void* extrafield_local,\n+                                            uInt size_extrafield_local,\n+                                            const void* extrafield_global,\n+                                            uInt size_extrafield_global,\n+                                            const char* comment,\n+                                            int method,\n+                                            int level,\n+                                            int raw,\n+                                            int windowBits,\n+                                            int memLevel,\n+                                            int strategy,\n+                                            const char* password,\n+                                            uLong crcForCrypting,\n+                                            uLong versionMadeBy,\n+                                            uLong flagBase\n+                                            ));\n+\n+\n+extern int ZEXPORT zipOpenNewFileInZip4_64 OF((zipFile file,\n+                                            const char* filename,\n+                                            const zip_fileinfo* zipfi,\n+                                            const void* extrafield_local,\n+                                            uInt size_extrafield_local,\n+                                            const void* extrafield_global,\n+                                            uInt size_extrafield_global,\n+                                            const char* comment,\n+                                            int method,\n+                                            int level,\n+                                            int raw,\n+                                            int windowBits,\n+                                            int memLevel,\n+                                            int strategy,\n+                                            const char* password,\n+                                            uLong crcForCrypting,\n+                                            uLong versionMadeBy,\n+                                            uLong flagBase,\n+                                            int zip64\n+                                            ));\n+/*\n+  Same than zipOpenNewFileInZip4, except\n+    versionMadeBy : value for Version made by field\n+    flag : value for flag field (compression level info will be added)\n  */\n \n \n@@ -216,8 +319,13 @@ extern int ZEXPORT zipCloseFileInZip OF((zipFile file));\n extern int ZEXPORT zipCloseFileInZipRaw OF((zipFile file,\n                                             uLong uncompressed_size,\n                                             uLong crc32));\n+\n+extern int ZEXPORT zipCloseFileInZipRaw64 OF((zipFile file,\n+                                            ZPOS64_T uncompressed_size,\n+                                            uLong crc32));\n+\n /*\n-  Close the current file in the zipfile, for fiel opened with\n+  Close the current file in the zipfile, for file opened with\n     parameter raw=1 in zipOpenNewFileInZip2\n   uncompressed_size and crc32 are value for the uncompressed size\n */\n@@ -228,8 +336,27 @@ extern int ZEXPORT zipClose OF((zipFile file,\n   Close the zipfile\n */\n \n+\n+extern int ZEXPORT zipRemoveExtraInfoBlock OF((char* pData, int* dataLen, short sHeader));\n+/*\n+  zipRemoveExtraInfoBlock -  Added by Mathias Svensson\n+\n+  Remove extra information block from a extra information data for the local file header or central directory header\n+\n+  It is needed to remove ZIP64 extra information blocks when before data is written if using RAW mode.\n+\n+  0x0001 is the signature header for the ZIP64 extra information blocks\n+\n+  usage.\n+                        Remove ZIP64 Extra information from a central director extra field data\n+              zipRemoveExtraInfoBlock(pCenDirExtraFieldData, &nCenDirExtraFieldDataLen, 0x0001);\n+\n+                        Remove ZIP64 Extra information from a Local File Header extra field data\n+        zipRemoveExtraInfoBlock(pLocalHeaderExtraFieldData, &nLocalHeaderExtraFieldDataLen, 0x0001);\n+*/\n+\n #ifdef __cplusplus\n }\n #endif\n \n-#endif /* _zip_H */\n+#endif /* _zip64_H */"}, {"sha": "0d0699a69a3c735d8dfdfc22abf9a820c1963e8f", "filename": "zlib/contrib/pascal/zlibd32.mak", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fpascal%2Fzlibd32.mak", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fpascal%2Fzlibd32.mak", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fpascal%2Fzlibd32.mak?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -18,10 +18,10 @@ LDFLAGS =\n # variables\n ZLIB_LIB = zlib.lib\n \n-OBJ1 = adler32.obj compress.obj crc32.obj deflate.obj gzio.obj infback.obj\n-OBJ2 = inffast.obj inflate.obj inftrees.obj trees.obj uncompr.obj zutil.obj\n-OBJP1 = +adler32.obj+compress.obj+crc32.obj+deflate.obj+gzio.obj+infback.obj\n-OBJP2 = +inffast.obj+inflate.obj+inftrees.obj+trees.obj+uncompr.obj+zutil.obj\n+OBJ1 = adler32.obj compress.obj crc32.obj deflate.obj gzclose.obj gzlib.obj gzread.obj\n+OBJ2 = gzwrite.obj infback.obj inffast.obj inflate.obj inftrees.obj trees.obj uncompr.obj zutil.obj\n+OBJP1 = +adler32.obj+compress.obj+crc32.obj+deflate.obj+gzclose.obj+gzlib.obj+gzread.obj\n+OBJP2 = +gzwrite.obj+infback.obj+inffast.obj+inflate.obj+inftrees.obj+trees.obj+uncompr.obj+zutil.obj\n \n \n # targets\n@@ -38,7 +38,13 @@ crc32.obj: crc32.c zlib.h zconf.h crc32.h\n \n deflate.obj: deflate.c deflate.h zutil.h zlib.h zconf.h\n \n-gzio.obj: gzio.c zutil.h zlib.h zconf.h\n+gzclose.obj: gzclose.c zlib.h zconf.h gzguts.h\n+\n+gzlib.obj: gzlib.c zlib.h zconf.h gzguts.h\n+\n+gzread.obj: gzread.c zlib.h zconf.h gzguts.h\n+\n+gzwrite.obj: gzwrite.c zlib.h zconf.h gzguts.h\n \n infback.obj: infback.c zutil.h zlib.h zconf.h inftrees.h inflate.h \\\n  inffast.h inffixed.h"}, {"sha": "637ae3a3f8e0b5fbf40fa7deeb79be05895b7b7c", "filename": "zlib/contrib/pascal/zlibpas.pas", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fpascal%2Fzlibpas.pas", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fpascal%2Fzlibpas.pas", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fpascal%2Fzlibpas.pas?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -10,7 +10,7 @@\n interface\n \n const\n-  ZLIB_VERSION = '1.2.3';\n+  ZLIB_VERSION = '1.2.5';\n \n type\n   alloc_func = function(opaque: Pointer; items, size: Integer): Pointer;"}, {"sha": "650694e9ed823fc457eacf92dfbc172a7fccd6c9", "filename": "zlib/contrib/puff/puff.c", "status": "modified", "additions": 166, "deletions": 48, "changes": 214, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fpuff%2Fpuff.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fpuff%2Fpuff.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fpuff%2Fpuff.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,8 +1,8 @@\n /*\n  * puff.c\n- * Copyright (C) 2002-2004 Mark Adler\n+ * Copyright (C) 2002-2010 Mark Adler\n  * For conditions of distribution and use, see copyright notice in puff.h\n- * version 1.8, 9 Jan 2004\n+ * version 2.1, 4 Apr 2010\n  *\n  * puff.c is a simple inflate written to be an unambiguous way to specify the\n  * deflate format.  It is not written for speed but rather simplicity.  As a\n@@ -61,6 +61,14 @@\n  * 1.7   3 Mar 2003     - Added test code for distribution\n  *                      - Added zlib-like license\n  * 1.8   9 Jan 2004     - Added some comments on no distance codes case\n+ * 1.9  21 Feb 2008     - Fix bug on 16-bit integer architectures [Pohland]\n+ *                      - Catch missing end-of-block symbol error\n+ * 2.0  25 Jul 2008     - Add #define to permit distance too far back\n+ *                      - Add option in TEST code for puff to write the data\n+ *                      - Add option in TEST code to skip input bytes\n+ *                      - Allow TEST code to read from piped stdin\n+ * 2.1   4 Apr 2010     - Avoid variable initialization for happier compilers\n+ *                      - Avoid unsigned comparisons for even happier compilers\n  */\n \n #include <setjmp.h>             /* for setjmp(), longjmp(), and jmp_buf */\n@@ -194,7 +202,7 @@ struct huffman {\n  * Decode a code from the stream s using huffman table h.  Return the symbol or\n  * a negative value if there is an error.  If all of the lengths are zero, i.e.\n  * an empty code, or if the code is incomplete and an invalid code is received,\n- * then -9 is returned after reading MAXBITS bits.\n+ * then -10 is returned after reading MAXBITS bits.\n  *\n  * Format notes:\n  *\n@@ -226,14 +234,14 @@ local int decode(struct state *s, struct huffman *h)\n     for (len = 1; len <= MAXBITS; len++) {\n         code |= bits(s, 1);             /* get next bit */\n         count = h->count[len];\n-        if (code < first + count)       /* if length len, return symbol */\n+        if (code - count < first)       /* if length len, return symbol */\n             return h->symbol[index + (code - first)];\n         index += count;                 /* else update for next length */\n         first += count;\n         first <<= 1;\n         code <<= 1;\n     }\n-    return -9;                          /* ran out of codes */\n+    return -10;                         /* ran out of codes */\n }\n \n /*\n@@ -263,7 +271,7 @@ local int decode(struct state *s, struct huffman *h)\n             code |= bitbuf & 1;\n             bitbuf >>= 1;\n             count = *next++;\n-            if (code < first + count) { /* if length len, return symbol */\n+            if (code - count < first) { /* if length len, return symbol */\n                 s->bitbuf = bitbuf;\n                 s->bitcnt = (s->bitcnt - len) & 7;\n                 return h->symbol[index + (code - first)];\n@@ -280,7 +288,7 @@ local int decode(struct state *s, struct huffman *h)\n         bitbuf = s->in[s->incnt++];\n         if (left > 8) left = 8;\n     }\n-    return -9;                          /* ran out of codes */\n+    return -10;                         /* ran out of codes */\n }\n #endif /* SLOW */\n \n@@ -448,21 +456,27 @@ local int codes(struct state *s,\n         else if (symbol > 256) {        /* length */\n             /* get and compute length */\n             symbol -= 257;\n-            if (symbol >= 29) return -9;        /* invalid fixed code */\n+            if (symbol >= 29) return -10;       /* invalid fixed code */\n             len = lens[symbol] + bits(s, lext[symbol]);\n \n             /* get and check distance */\n             symbol = decode(s, distcode);\n             if (symbol < 0) return symbol;      /* invalid symbol */\n             dist = dists[symbol] + bits(s, dext[symbol]);\n+#ifndef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n             if (dist > s->outcnt)\n-                return -10;     /* distance too far back */\n+                return -11;     /* distance too far back */\n+#endif\n \n             /* copy length bytes from distance bytes back */\n             if (s->out != NIL) {\n                 if (s->outcnt + len > s->outlen) return 1;\n                 while (len--) {\n-                    s->out[s->outcnt] = s->out[s->outcnt - dist];\n+                    s->out[s->outcnt] =\n+#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n+                        dist > s->outcnt ? 0 :\n+#endif\n+                        s->out[s->outcnt - dist];\n                     s->outcnt++;\n                 }\n             }\n@@ -504,8 +518,7 @@ local int fixed(struct state *s)\n     static int virgin = 1;\n     static short lencnt[MAXBITS+1], lensym[FIXLCODES];\n     static short distcnt[MAXBITS+1], distsym[MAXDCODES];\n-    static struct huffman lencode = {lencnt, lensym};\n-    static struct huffman distcode = {distcnt, distsym};\n+    static struct huffman lencode, distcode;\n \n     /* build fixed huffman tables if first call (may not be thread safe) */\n     if (virgin) {\n@@ -528,6 +541,12 @@ local int fixed(struct state *s)\n             lengths[symbol] = 5;\n         construct(&distcode, lengths, MAXDCODES);\n \n+        /* construct lencode and distcode */\n+        lencode.count = lencnt;\n+        lencode.symbol = lensym;\n+        distcode.count = distcnt;\n+        distcode.symbol = distsym;\n+\n         /* do this just once */\n         virgin = 0;\n     }\n@@ -631,11 +650,16 @@ local int dynamic(struct state *s)\n     short lengths[MAXCODES];            /* descriptor code lengths */\n     short lencnt[MAXBITS+1], lensym[MAXLCODES];         /* lencode memory */\n     short distcnt[MAXBITS+1], distsym[MAXDCODES];       /* distcode memory */\n-    struct huffman lencode = {lencnt, lensym};          /* length code */\n-    struct huffman distcode = {distcnt, distsym};       /* distance code */\n+    struct huffman lencode, distcode;   /* length and distance codes */\n     static const short order[19] =      /* permutation of code length codes */\n         {16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15};\n \n+    /* construct lencode and distcode */\n+    lencode.count = lencnt;\n+    lencode.symbol = lensym;\n+    distcode.count = distcnt;\n+    distcode.symbol = distsym;\n+\n     /* get number of lengths in each table, check lengths */\n     nlen = bits(s, 5) + 257;\n     ndist = bits(s, 5) + 1;\n@@ -680,6 +704,10 @@ local int dynamic(struct state *s)\n         }\n     }\n \n+    /* check for end-of-block code -- there better be one! */\n+    if (lengths[256] == 0)\n+        return -9;\n+\n     /* build huffman table for literal/length codes */\n     err = construct(&lencode, lengths, nlen);\n     if (err < 0 || (err > 0 && nlen - lencode.count[0] != 1))\n@@ -724,8 +752,9 @@ local int dynamic(struct state *s)\n  *  -6:  dynamic block code description: repeat more than specified lengths\n  *  -7:  dynamic block code description: invalid literal/length code lengths\n  *  -8:  dynamic block code description: invalid distance code lengths\n- *  -9:  invalid literal/length or distance code in fixed or dynamic block\n- * -10:  distance is too far back in fixed or dynamic block\n+ *  -9:  dynamic block code description: missing end-of-block code\n+ * -10:  invalid literal/length or distance code in fixed or dynamic block\n+ * -11:  distance is too far back in fixed or dynamic block\n  *\n  * Format notes:\n  *\n@@ -783,54 +812,143 @@ int puff(unsigned char *dest,           /* pointer to destination pointer */\n }\n \n #ifdef TEST\n-/* Example of how to use puff() */\n+/* Examples of how to use puff().\n+\n+   Usage: puff [-w] [-nnn] file\n+          ... | puff [-w] [-nnn]\n+\n+   where file is the input file with deflate data, nnn is the number of bytes\n+   of input to skip before inflating (e.g. to skip a zlib or gzip header), and\n+   -w is used to write the decompressed data to stdout */\n+\n #include <stdio.h>\n #include <stdlib.h>\n-#include <sys/types.h>\n-#include <sys/stat.h>\n \n-local unsigned char *yank(char *name, unsigned long *len)\n+/* Return size times approximately the cube root of 2, keeping the result as 1,\n+   3, or 5 times a power of 2 -- the result is always > size, until the result\n+   is the maximum value of an unsigned long, where it remains.  This is useful\n+   to keep reallocations less than ~33% over the actual data. */\n+local size_t bythirds(size_t size)\n+{\n+    int n;\n+    size_t m;\n+\n+    m = size;\n+    for (n = 0; m; n++)\n+        m >>= 1;\n+    if (n < 3)\n+        return size + 1;\n+    n -= 3;\n+    m = size >> n;\n+    m += m == 6 ? 2 : 1;\n+    m <<= n;\n+    return m > size ? m : (size_t)(-1);\n+}\n+\n+/* Read the input file *name, or stdin if name is NULL, into allocated memory.\n+   Reallocate to larger buffers until the entire file is read in.  Return a\n+   pointer to the allocated data, or NULL if there was a memory allocation\n+   failure.  *len is the number of bytes of data read from the input file (even\n+   if load() returns NULL).  If the input file was empty or could not be opened\n+   or read, *len is zero. */\n+local void *load(char *name, size_t *len)\n {\n-    unsigned long size;\n-    unsigned char *buf;\n+    size_t size;\n+    void *buf, *swap;\n     FILE *in;\n-    struct stat s;\n \n     *len = 0;\n-    if (stat(name, &s)) return NULL;\n-    if ((s.st_mode & S_IFMT) != S_IFREG) return NULL;\n-    size = (unsigned long)(s.st_size);\n-    if (size == 0 || (off_t)size != s.st_size) return NULL;\n-    in = fopen(name, \"r\");\n-    if (in == NULL) return NULL;\n-    buf = malloc(size);\n-    if (buf != NULL && fread(buf, 1, size, in) != size) {\n-        free(buf);\n-        buf = NULL;\n+    buf = malloc(size = 4096);\n+    if (buf == NULL)\n+        return NULL;\n+    in = name == NULL ? stdin : fopen(name, \"rb\");\n+    if (in != NULL) {\n+        for (;;) {\n+            *len += fread((char *)buf + *len, 1, size - *len, in);\n+            if (*len < size) break;\n+            size = bythirds(size);\n+            if (size == *len || (swap = realloc(buf, size)) == NULL) {\n+                free(buf);\n+                buf = NULL;\n+                break;\n+            }\n+            buf = swap;\n+        }\n+        fclose(in);\n     }\n-    fclose(in);\n-    *len = size;\n     return buf;\n }\n \n int main(int argc, char **argv)\n {\n-    int ret;\n-    unsigned char *source;\n-    unsigned long len, sourcelen, destlen;\n-\n-    if (argc < 2) return 2;\n-    source = yank(argv[1], &len);\n-    if (source == NULL) return 2;\n-    sourcelen = len;\n-    ret = puff(NIL, &destlen, source, &sourcelen);\n+    int ret, put = 0;\n+    unsigned skip = 0;\n+    char *arg, *name = NULL;\n+    unsigned char *source = NULL, *dest;\n+    size_t len = 0;\n+    unsigned long sourcelen, destlen;\n+\n+    /* process arguments */\n+    while (arg = *++argv, --argc)\n+        if (arg[0] == '-') {\n+            if (arg[1] == 'w' && arg[2] == 0)\n+                put = 1;\n+            else if (arg[1] >= '0' && arg[1] <= '9')\n+                skip = (unsigned)atoi(arg + 1);\n+            else {\n+                fprintf(stderr, \"invalid option %s\\n\", arg);\n+                return 3;\n+            }\n+        }\n+        else if (name != NULL) {\n+            fprintf(stderr, \"only one file name allowed\\n\");\n+            return 3;\n+        }\n+        else\n+            name = arg;\n+    source = load(name, &len);\n+    if (source == NULL) {\n+        fprintf(stderr, \"memory allocation failure\\n\");\n+        return 4;\n+    }\n+    if (len == 0) {\n+        fprintf(stderr, \"could not read %s, or it was empty\\n\",\n+                name == NULL ? \"<stdin>\" : name);\n+        free(source);\n+        return 3;\n+    }\n+    if (skip >= len) {\n+        fprintf(stderr, \"skip request of %d leaves no input\\n\", skip);\n+        free(source);\n+        return 3;\n+    }\n+\n+    /* test inflate data with offset skip */\n+    len -= skip;\n+    sourcelen = (unsigned long)len;\n+    ret = puff(NIL, &destlen, source + skip, &sourcelen);\n     if (ret)\n-        printf(\"puff() failed with return code %d\\n\", ret);\n+        fprintf(stderr, \"puff() failed with return code %d\\n\", ret);\n     else {\n-        printf(\"puff() succeeded uncompressing %lu bytes\\n\", destlen);\n-        if (sourcelen < len) printf(\"%lu compressed bytes unused\\n\",\n-                                    len - sourcelen);\n+        fprintf(stderr, \"puff() succeeded uncompressing %lu bytes\\n\", destlen);\n+        if (sourcelen < len) fprintf(stderr, \"%lu compressed bytes unused\\n\",\n+                                     len - sourcelen);\n+    }\n+\n+    /* if requested, inflate again and write decompressd data to stdout */\n+    if (put) {\n+        dest = malloc(destlen);\n+        if (dest == NULL) {\n+            fprintf(stderr, \"memory allocation failure\\n\");\n+            free(source);\n+            return 4;\n+        }\n+        puff(dest, &destlen, source + skip, &sourcelen);\n+        fwrite(dest, 1, destlen, stdout);\n+        free(dest);\n     }\n+\n+    /* clean up */\n     free(source);\n     return ret;\n }"}, {"sha": "88d1b3844fff544a0dd346d7d10d865a026e5eee", "filename": "zlib/contrib/puff/puff.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fpuff%2Fpuff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fpuff%2Fpuff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fpuff%2Fpuff.h?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,6 +1,6 @@\n /* puff.h\n-  Copyright (C) 2002, 2003 Mark Adler, all rights reserved\n-  version 1.7, 3 Mar 2002\n+  Copyright (C) 2002-2010 Mark Adler, all rights reserved\n+  version 2.1, 4 Apr 2010\n \n   This software is provided 'as-is', without any express or implied\n   warranty.  In no event will the author be held liable for any damages"}, {"sha": "135888eb10f16587d7d6cad9cb2b97493ec73b20", "filename": "zlib/contrib/testzlib/testzlib.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Ftestzlib%2Ftestzlib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Ftestzlib%2Ftestzlib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Ftestzlib%2Ftestzlib.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -103,12 +103,12 @@ DWORD GetMsecSincePerfCounter(LARGE_INTEGER beginTime64,BOOL fComputeTimeQueryPe\n         MyDoMinus64(&ticks,endTime64,beginTime64);\r\n         QueryPerformanceFrequency(&ticksPerSecond);\r\n \r\n-    \r\n+\r\n         {\r\n             ticksShifted = Int64ShrlMod32(*(DWORDLONG*)&ticks,dwLog);\r\n             tickSecShifted = Int64ShrlMod32(*(DWORDLONG*)&ticksPerSecond,dwLog);\r\n-        \r\n-        } \r\n+\r\n+        }\r\n \r\n         dwRet = (DWORD)((((DWORD)ticksShifted)*1000)/(DWORD)(tickSecShifted));\r\n         dwRet *=1;\r"}, {"sha": "904888ba3931ff864067ab741dbee58e07827d54", "filename": "zlib/contrib/vstudio/readme.txt", "status": "modified", "additions": 13, "deletions": 26, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Freadme.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Freadme.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Freadme.txt?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,45 +1,32 @@\n-Building instructions for the DLL versions of Zlib 1.2.3\r\n+Building instructions for the DLL versions of Zlib 1.2.4\r\n ========================================================\r\n \r\n This directory contains projects that build zlib and minizip using\r\n-Microsoft Visual C++ 7.0/7.1, and Visual C++ .\r\n+Microsoft Visual C++ 9.0/10.0, and Visual C++ .\r\n \r\n You don't need to build these projects yourself. You can download the\r\n binaries from:\r\n   http://www.winimage.com/zLibDll\r\n \r\n More information can be found at this site.\r\n \r\n+first compile assembly code by running\r\n+bld_ml64.bat in contrib\\masmx64\r\n+bld_ml32.bat in contrib\\masmx86\r\n+\r\n \r\n-Build instructions for Visual Studio 7.x (32 bits)\r\n---------------------------------------------------\r\n-- Uncompress current zlib, including all contrib/* files\r\n-- Download the crtdll library from\r\n-    http://www.winimage.com/zLibDll/crtdll.zip\r\n-  Unzip crtdll.zip to extract crtdll.lib on contrib\\vstudio\\vc7.\r\n-- Open contrib\\vstudio\\vc7\\zlibvc.sln with Microsoft Visual C++ 7.x\r\n-  (Visual Studio .Net 2002 or 2003).\r\n \r\n-Build instructions for Visual Studio 2005 (32 bits or 64 bits)\r\n+\r\n+Build instructions for Visual Studio 2008 (32 bits or 64 bits)\r\n --------------------------------------------------------------\r\n - Uncompress current zlib, including all contrib/* files\r\n-- For 32 bits only: download the crtdll library from\r\n-    http://www.winimage.com/zLibDll/crtdll.zip\r\n-  Unzip crtdll.zip to extract crtdll.lib on contrib\\vstudio\\vc8.\r\n-- Open contrib\\vstudio\\vc8\\zlibvc.sln with Microsoft Visual C++ 8.0\r\n-\r\n-Build instructions for Visual Studio 2005 64 bits, PSDK compiler\r\n-----------------------------------------------------------------\r\n-at the time of writing this text file, Visual Studio 2005 (and \r\n-  Microsoft Visual C++ 8.0) is on the beta 2 stage.\r\n-Using you can get the free 64 bits compiler from Platform SDK, \r\n-  which is NOT a beta, and compile using the Visual studio 2005 IDE\r\n-see http://www.winimage.com/misc/sdk64onvs2005/ for instruction\r\n+- Open contrib\\vstudio\\vc9\\zlibvc.sln with Microsoft Visual C++ 2008.0\r\n+- Or run: vcbuild /rebuild contrib\\vstudio\\vc9\\zlibvc.sln \"Release|Win32\"\r\n \r\n+Build instructions for Visual Studio 2010 (32 bits or 64 bits)\r\n+--------------------------------------------------------------\r\n - Uncompress current zlib, including all contrib/* files\r\n-- start Visual Studio 2005 from a platform SDK command prompt, using\r\n-  the /useenv switch\r\n-- Open contrib\\vstudio\\vc8\\zlibvc.sln with Microsoft Visual C++ 8.0\r\n+- Open contrib\\vstudio\\vc10\\zlibvc.sln with Microsoft Visual C++ 2010.0\r\n \r\n \r\n Important\r"}, {"sha": "74e15c90d3c4bd46309713f42a762db785b04680", "filename": "zlib/contrib/vstudio/vc10/miniunz.vcxproj", "status": "added", "additions": 310, "deletions": 0, "changes": 310, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fminiunz.vcxproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fminiunz.vcxproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fminiunz.vcxproj?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -0,0 +1,310 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n+  <ItemGroup Label=\"ProjectConfigurations\">\r\n+    <ProjectConfiguration Include=\"Debug|Itanium\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>Itanium</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Debug|Win32\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>Win32</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Debug|x64\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|Itanium\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>Itanium</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|Win32\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>Win32</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|x64\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+  </ItemGroup>\r\n+  <PropertyGroup Label=\"Globals\">\r\n+    <ProjectGuid>{C52F9E7B-498A-42BE-8DB4-85A15694382A}</ProjectGuid>\r\n+    <Keyword>Win32Proj</Keyword>\r\n+  </PropertyGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\r\n+  <ImportGroup Label=\"ExtensionSettings\">\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <PropertyGroup Label=\"UserMacros\" />\r\n+  <PropertyGroup>\r\n+    <_ProjectFileVersion>10.0.30128.1</_ProjectFileVersion>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\MiniUnzip$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\MiniUnzip$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\MiniUnzip$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\MiniUnzip$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\MiniUnzip$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\MiniUnzip$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\MiniUnzip$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\MiniUnzip$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">true</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\MiniUnzip$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\MiniUnzip$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\MiniUnzip$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\MiniUnzip$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</GenerateManifest>\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\r\n+  </PropertyGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MinimalRebuild>true</MinimalRebuild>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>x86\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)miniunz.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <ProgramDatabaseFile>$(OutDir)miniunz.pdb</ProgramDatabaseFile>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\r\n+      <DataExecutionPrevention>\r\n+      </DataExecutionPrevention>\r\n+      <TargetMachine>MachineX86</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\r\n+    <ClCompile>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <OmitFramePointers>true</OmitFramePointers>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>x86\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)miniunz.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\r\n+      <DataExecutionPrevention>\r\n+      </DataExecutionPrevention>\r\n+      <TargetMachine>MachineX86</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>X64</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MinimalRebuild>true</MinimalRebuild>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>x64\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)miniunz.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <ProgramDatabaseFile>$(OutDir)miniunz.pdb</ProgramDatabaseFile>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <TargetMachine>MachineX64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>Itanium</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MinimalRebuild>true</MinimalRebuild>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>ia64\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)miniunz.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <ProgramDatabaseFile>$(OutDir)miniunz.pdb</ProgramDatabaseFile>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <TargetMachine>MachineIA64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>X64</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <OmitFramePointers>true</OmitFramePointers>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>x64\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)miniunz.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <TargetMachine>MachineX64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>Itanium</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <OmitFramePointers>true</OmitFramePointers>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>ia64\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)miniunz.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <TargetMachine>MachineIA64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemGroup>\r\n+    <ClCompile Include=\"..\\..\\minizip\\miniunz.c\" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ProjectReference Include=\"zlibvc.vcxproj\">\r\n+      <Project>{8fd826f8-3739-44e6-8cc8-997122e53b8d}</Project>\r\n+    </ProjectReference>\r\n+  </ItemGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\r\n+  <ImportGroup Label=\"ExtensionTargets\">\r\n+  </ImportGroup>\r\n+</Project>\n\\ No newline at end of file"}, {"sha": "0b2a3de2dfe25f8afef4b331e92197929a698181", "filename": "zlib/contrib/vstudio/vc10/miniunz.vcxproj.filters", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fminiunz.vcxproj.filters", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fminiunz.vcxproj.filters", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fminiunz.vcxproj.filters?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -0,0 +1,22 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n+<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n+  <ItemGroup>\r\n+    <Filter Include=\"Source Files\">\r\n+      <UniqueIdentifier>{048af943-022b-4db6-beeb-a54c34774ee2}</UniqueIdentifier>\r\n+      <Extensions>cpp;c;cxx;def;odl;idl;hpj;bat;asm</Extensions>\r\n+    </Filter>\r\n+    <Filter Include=\"Header Files\">\r\n+      <UniqueIdentifier>{c1d600d2-888f-4aea-b73e-8b0dd9befa0c}</UniqueIdentifier>\r\n+      <Extensions>h;hpp;hxx;hm;inl;inc</Extensions>\r\n+    </Filter>\r\n+    <Filter Include=\"Resource Files\">\r\n+      <UniqueIdentifier>{0844199a-966b-4f19-81db-1e0125e141b9}</UniqueIdentifier>\r\n+      <Extensions>rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe</Extensions>\r\n+    </Filter>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ClCompile Include=\"..\\..\\minizip\\miniunz.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+  </ItemGroup>\r\n+</Project>\n\\ No newline at end of file"}, {"sha": "695b5c78b91edfc29f77823eb642fc9ead8e15f1", "filename": "zlib/contrib/vstudio/vc10/miniunz.vcxproj.user", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fminiunz.vcxproj.user", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fminiunz.vcxproj.user", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fminiunz.vcxproj.user?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -0,0 +1,3 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n+<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n+</Project>\n\\ No newline at end of file"}, {"sha": "917e15652b18f93d1fc1c41e3696fc1ca4c2104c", "filename": "zlib/contrib/vstudio/vc10/minizip.vcxproj", "status": "added", "additions": 307, "deletions": 0, "changes": 307, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fminizip.vcxproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fminizip.vcxproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fminizip.vcxproj?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -0,0 +1,307 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n+  <ItemGroup Label=\"ProjectConfigurations\">\r\n+    <ProjectConfiguration Include=\"Debug|Itanium\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>Itanium</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Debug|Win32\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>Win32</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Debug|x64\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|Itanium\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>Itanium</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|Win32\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>Win32</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|x64\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+  </ItemGroup>\r\n+  <PropertyGroup Label=\"Globals\">\r\n+    <ProjectGuid>{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}</ProjectGuid>\r\n+    <Keyword>Win32Proj</Keyword>\r\n+  </PropertyGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\r\n+  <ImportGroup Label=\"ExtensionSettings\">\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <PropertyGroup Label=\"UserMacros\" />\r\n+  <PropertyGroup>\r\n+    <_ProjectFileVersion>10.0.30128.1</_ProjectFileVersion>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\MiniZip$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\MiniZip$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\MiniZip$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\MiniZip$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\$(Configuration)\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\$(Configuration)\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">true</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\$(Configuration)\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</LinkIncremental>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\$(Configuration)\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</LinkIncremental>\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\r\n+  </PropertyGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MinimalRebuild>true</MinimalRebuild>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>x86\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)minizip.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <ProgramDatabaseFile>$(OutDir)minizip.pdb</ProgramDatabaseFile>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\r\n+      <DataExecutionPrevention>\r\n+      </DataExecutionPrevention>\r\n+      <TargetMachine>MachineX86</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\r\n+    <ClCompile>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <OmitFramePointers>true</OmitFramePointers>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>x86\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)minizip.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\r\n+      <DataExecutionPrevention>\r\n+      </DataExecutionPrevention>\r\n+      <TargetMachine>MachineX86</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>X64</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MinimalRebuild>true</MinimalRebuild>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>x64\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)minizip.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <ProgramDatabaseFile>$(OutDir)minizip.pdb</ProgramDatabaseFile>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <TargetMachine>MachineX64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>Itanium</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MinimalRebuild>true</MinimalRebuild>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>ia64\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)minizip.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <ProgramDatabaseFile>$(OutDir)minizip.pdb</ProgramDatabaseFile>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <TargetMachine>MachineIA64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>X64</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <OmitFramePointers>true</OmitFramePointers>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>x64\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)minizip.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <TargetMachine>MachineX64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>Itanium</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <OmitFramePointers>true</OmitFramePointers>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>ia64\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)minizip.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <TargetMachine>MachineIA64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemGroup>\r\n+    <ClCompile Include=\"..\\..\\minizip\\minizip.c\" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ProjectReference Include=\"zlibvc.vcxproj\">\r\n+      <Project>{8fd826f8-3739-44e6-8cc8-997122e53b8d}</Project>\r\n+    </ProjectReference>\r\n+  </ItemGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\r\n+  <ImportGroup Label=\"ExtensionTargets\">\r\n+  </ImportGroup>\r\n+</Project>\n\\ No newline at end of file"}, {"sha": "dd73cd3132981f0bfc3fe2c6dc64810988c1e5d7", "filename": "zlib/contrib/vstudio/vc10/minizip.vcxproj.filters", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fminizip.vcxproj.filters", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fminizip.vcxproj.filters", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fminizip.vcxproj.filters?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -0,0 +1,22 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n+<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n+  <ItemGroup>\r\n+    <Filter Include=\"Source Files\">\r\n+      <UniqueIdentifier>{c0419b40-bf50-40da-b153-ff74215b79de}</UniqueIdentifier>\r\n+      <Extensions>cpp;c;cxx;def;odl;idl;hpj;bat;asm</Extensions>\r\n+    </Filter>\r\n+    <Filter Include=\"Header Files\">\r\n+      <UniqueIdentifier>{bb87b070-735b-478e-92ce-7383abb2f36c}</UniqueIdentifier>\r\n+      <Extensions>h;hpp;hxx;hm;inl;inc</Extensions>\r\n+    </Filter>\r\n+    <Filter Include=\"Resource Files\">\r\n+      <UniqueIdentifier>{f46ab6a6-548f-43cb-ae96-681abb5bd5db}</UniqueIdentifier>\r\n+      <Extensions>rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe</Extensions>\r\n+    </Filter>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ClCompile Include=\"..\\..\\minizip\\minizip.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+  </ItemGroup>\r\n+</Project>\n\\ No newline at end of file"}, {"sha": "695b5c78b91edfc29f77823eb642fc9ead8e15f1", "filename": "zlib/contrib/vstudio/vc10/minizip.vcxproj.user", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fminizip.vcxproj.user", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fminizip.vcxproj.user", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fminizip.vcxproj.user?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -0,0 +1,3 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n+<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n+</Project>\n\\ No newline at end of file"}, {"sha": "9088d176f8ce9f3c4e584dec6c513b3fc0a78306", "filename": "zlib/contrib/vstudio/vc10/testzlib.vcxproj", "status": "added", "additions": 420, "deletions": 0, "changes": 420, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Ftestzlib.vcxproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Ftestzlib.vcxproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Ftestzlib.vcxproj?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -0,0 +1,420 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n+  <ItemGroup Label=\"ProjectConfigurations\">\r\n+    <ProjectConfiguration Include=\"Debug|Itanium\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>Itanium</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Debug|Win32\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>Win32</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Debug|x64\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|Itanium\">\r\n+      <Configuration>ReleaseWithoutAsm</Configuration>\r\n+      <Platform>Itanium</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|Win32\">\r\n+      <Configuration>ReleaseWithoutAsm</Configuration>\r\n+      <Platform>Win32</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|x64\">\r\n+      <Configuration>ReleaseWithoutAsm</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|Itanium\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>Itanium</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|Win32\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>Win32</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|x64\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+  </ItemGroup>\r\n+  <PropertyGroup Label=\"Globals\">\r\n+    <ProjectGuid>{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}</ProjectGuid>\r\n+    <RootNamespace>testzlib</RootNamespace>\r\n+    <Keyword>Win32Proj</Keyword>\r\n+  </PropertyGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+  </PropertyGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\r\n+  <ImportGroup Label=\"ExtensionSettings\">\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <PropertyGroup Label=\"UserMacros\" />\r\n+  <PropertyGroup>\r\n+    <_ProjectFileVersion>10.0.30128.1</_ProjectFileVersion>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\TestZlib$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\TestZlib$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">x86\\TestZlib$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">x86\\TestZlib$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">false</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\TestZlib$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\TestZlib$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\TestZlib$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\TestZlib$(Configuration)\\Tmp\\</IntDir>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\TestZlib$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\TestZlib$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">true</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">x64\\TestZlib$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">x64\\TestZlib$(Configuration)\\Tmp\\</IntDir>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">ia64\\TestZlib$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">ia64\\TestZlib$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">false</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\TestZlib$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\TestZlib$(Configuration)\\Tmp\\</IntDir>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\TestZlib$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\TestZlib$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</GenerateManifest>\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\r\n+  </PropertyGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>ASMV;ASMINF;WIN32;ZLIB_WINAPI;_DEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MinimalRebuild>true</MinimalRebuild>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerOutput>AssemblyAndSourceCode</AssemblerOutput>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>..\\..\\masmx86\\match686.obj;..\\..\\masmx86\\inffas32.obj;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)testzlib.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <ProgramDatabaseFile>$(OutDir)testzlib.pdb</ProgramDatabaseFile>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\r\n+      <DataExecutionPrevention>\r\n+      </DataExecutionPrevention>\r\n+      <TargetMachine>MachineX86</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">\r\n+    <ClCompile>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <OmitFramePointers>true</OmitFramePointers>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <OutputFile>$(OutDir)testzlib.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\r\n+      <DataExecutionPrevention>\r\n+      </DataExecutionPrevention>\r\n+      <TargetMachine>MachineX86</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\r\n+    <ClCompile>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <OmitFramePointers>true</OmitFramePointers>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>ASMV;ASMINF;WIN32;ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>..\\..\\masmx86\\match686.obj;..\\..\\masmx86\\inffas32.obj;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)testzlib.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\r\n+      <DataExecutionPrevention>\r\n+      </DataExecutionPrevention>\r\n+      <TargetMachine>MachineX86</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\r\n+    <ClCompile>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>ASMV;ASMINF;WIN32;ZLIB_WINAPI;_DEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>..\\..\\masmx64\\gvmat64.obj;..\\..\\masmx64\\inffasx64.obj;%(AdditionalDependencies)</AdditionalDependencies>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>Itanium</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>ZLIB_WINAPI;_DEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MinimalRebuild>true</MinimalRebuild>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerOutput>AssemblyAndSourceCode</AssemblerOutput>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <OutputFile>$(OutDir)testzlib.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <ProgramDatabaseFile>$(OutDir)testzlib.pdb</ProgramDatabaseFile>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <TargetMachine>MachineIA64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">\r\n+    <ClCompile>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>Itanium</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <OmitFramePointers>true</OmitFramePointers>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <OutputFile>$(OutDir)testzlib.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <TargetMachine>MachineIA64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\r\n+    <ClCompile>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>ASMV;ASMINF;WIN32;ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>..\\..\\masmx64\\gvmat64.obj;..\\..\\masmx64\\inffasx64.obj;%(AdditionalDependencies)</AdditionalDependencies>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>Itanium</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <OmitFramePointers>true</OmitFramePointers>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <OutputFile>$(OutDir)testzlib.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <TargetMachine>MachineIA64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemGroup>\r\n+    <ClCompile Include=\"..\\..\\..\\adler32.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\compress.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\crc32.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\deflate.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\infback.c\" />\r\n+    <ClCompile Include=\"..\\..\\masmx64\\inffas8664.c\">\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">true</ExcludedFromBuild>\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</ExcludedFromBuild>\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">true</ExcludedFromBuild>\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">true</ExcludedFromBuild>\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">true</ExcludedFromBuild>\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">true</ExcludedFromBuild>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\inffast.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\inflate.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\inftrees.c\" />\r\n+    <ClCompile Include=\"..\\..\\testzlib\\testzlib.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\trees.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\uncompr.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\zutil.c\" />\r\n+  </ItemGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\r\n+  <ImportGroup Label=\"ExtensionTargets\">\r\n+  </ImportGroup>\r\n+</Project>\n\\ No newline at end of file"}, {"sha": "249daa89caf99e98b077b58873859a8d25ab6d6b", "filename": "zlib/contrib/vstudio/vc10/testzlib.vcxproj.filters", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Ftestzlib.vcxproj.filters", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Ftestzlib.vcxproj.filters", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Ftestzlib.vcxproj.filters?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -0,0 +1,58 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n+<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n+  <ItemGroup>\r\n+    <Filter Include=\"Source Files\">\r\n+      <UniqueIdentifier>{c1f6a2e3-5da5-4955-8653-310d3efe05a9}</UniqueIdentifier>\r\n+      <Extensions>cpp;c;cxx;def;odl;idl;hpj;bat;asm</Extensions>\r\n+    </Filter>\r\n+    <Filter Include=\"Header Files\">\r\n+      <UniqueIdentifier>{c2aaffdc-2c95-4d6f-8466-4bec5890af2c}</UniqueIdentifier>\r\n+      <Extensions>h;hpp;hxx;hm;inl;inc</Extensions>\r\n+    </Filter>\r\n+    <Filter Include=\"Resource Files\">\r\n+      <UniqueIdentifier>{c274fe07-05f2-461c-964b-f6341e4e7eb5}</UniqueIdentifier>\r\n+      <Extensions>rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe</Extensions>\r\n+    </Filter>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ClCompile Include=\"..\\..\\..\\adler32.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\compress.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\crc32.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\deflate.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\infback.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\masmx64\\inffas8664.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\inffast.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\inflate.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\inftrees.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\testzlib\\testzlib.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\trees.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\uncompr.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\zutil.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+  </ItemGroup>\r\n+</Project>\n\\ No newline at end of file"}, {"sha": "695b5c78b91edfc29f77823eb642fc9ead8e15f1", "filename": "zlib/contrib/vstudio/vc10/testzlib.vcxproj.user", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Ftestzlib.vcxproj.user", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Ftestzlib.vcxproj.user", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Ftestzlib.vcxproj.user?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -0,0 +1,3 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n+<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n+</Project>\n\\ No newline at end of file"}, {"sha": "2d628158b477c06c12514bb06ec9d88bca81fe69", "filename": "zlib/contrib/vstudio/vc10/testzlibdll.vcxproj", "status": "added", "additions": 310, "deletions": 0, "changes": 310, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Ftestzlibdll.vcxproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Ftestzlibdll.vcxproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Ftestzlibdll.vcxproj?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -0,0 +1,310 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n+  <ItemGroup Label=\"ProjectConfigurations\">\r\n+    <ProjectConfiguration Include=\"Debug|Itanium\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>Itanium</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Debug|Win32\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>Win32</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Debug|x64\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|Itanium\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>Itanium</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|Win32\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>Win32</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|x64\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+  </ItemGroup>\r\n+  <PropertyGroup Label=\"Globals\">\r\n+    <ProjectGuid>{C52F9E7B-498A-42BE-8DB4-85A15694366A}</ProjectGuid>\r\n+    <Keyword>Win32Proj</Keyword>\r\n+  </PropertyGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\r\n+  <ImportGroup Label=\"ExtensionSettings\">\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <PropertyGroup Label=\"UserMacros\" />\r\n+  <PropertyGroup>\r\n+    <_ProjectFileVersion>10.0.30128.1</_ProjectFileVersion>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\TestZlibDll$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\TestZlibDll$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\TestZlibDll$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\TestZlibDll$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\TestZlibDll$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\TestZlibDll$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\TestZlibDll$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\TestZlibDll$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">true</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\TestZlibDll$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\TestZlibDll$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\TestZlibDll$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\TestZlibDll$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</GenerateManifest>\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\r\n+  </PropertyGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MinimalRebuild>true</MinimalRebuild>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>x86\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)testzlib.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <ProgramDatabaseFile>$(OutDir)testzlib.pdb</ProgramDatabaseFile>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\r\n+      <DataExecutionPrevention>\r\n+      </DataExecutionPrevention>\r\n+      <TargetMachine>MachineX86</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\r\n+    <ClCompile>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <OmitFramePointers>true</OmitFramePointers>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>x86\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)testzlib.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\r\n+      <DataExecutionPrevention>\r\n+      </DataExecutionPrevention>\r\n+      <TargetMachine>MachineX86</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>X64</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MinimalRebuild>true</MinimalRebuild>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>x64\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)testzlib.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <ProgramDatabaseFile>$(OutDir)testzlib.pdb</ProgramDatabaseFile>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <TargetMachine>MachineX64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>Itanium</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MinimalRebuild>true</MinimalRebuild>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>ia64\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)testzlib.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <ProgramDatabaseFile>$(OutDir)testzlib.pdb</ProgramDatabaseFile>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <TargetMachine>MachineIA64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>X64</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <OmitFramePointers>true</OmitFramePointers>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>x64\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)testzlib.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <TargetMachine>MachineX64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>Itanium</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <OmitFramePointers>true</OmitFramePointers>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>ia64\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)testzlib.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <TargetMachine>MachineIA64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemGroup>\r\n+    <ClCompile Include=\"..\\..\\testzlib\\testzlib.c\" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ProjectReference Include=\"zlibvc.vcxproj\">\r\n+      <Project>{8fd826f8-3739-44e6-8cc8-997122e53b8d}</Project>\r\n+    </ProjectReference>\r\n+  </ItemGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\r\n+  <ImportGroup Label=\"ExtensionTargets\">\r\n+  </ImportGroup>\r\n+</Project>\n\\ No newline at end of file"}, {"sha": "53a8693bb0a4fdbef4cc457675e4f867cf64e5c6", "filename": "zlib/contrib/vstudio/vc10/testzlibdll.vcxproj.filters", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Ftestzlibdll.vcxproj.filters", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Ftestzlibdll.vcxproj.filters", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Ftestzlibdll.vcxproj.filters?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -0,0 +1,22 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n+<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n+  <ItemGroup>\r\n+    <Filter Include=\"Source Files\">\r\n+      <UniqueIdentifier>{fa61a89f-93fc-4c89-b29e-36224b7592f4}</UniqueIdentifier>\r\n+      <Extensions>cpp;c;cxx;def;odl;idl;hpj;bat;asm</Extensions>\r\n+    </Filter>\r\n+    <Filter Include=\"Header Files\">\r\n+      <UniqueIdentifier>{d4b85da0-2ba2-4934-b57f-e2584e3848ee}</UniqueIdentifier>\r\n+      <Extensions>h;hpp;hxx;hm;inl;inc</Extensions>\r\n+    </Filter>\r\n+    <Filter Include=\"Resource Files\">\r\n+      <UniqueIdentifier>{e573e075-00bd-4a7d-bd67-a8cc9bfc5aca}</UniqueIdentifier>\r\n+      <Extensions>rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe</Extensions>\r\n+    </Filter>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ClCompile Include=\"..\\..\\testzlib\\testzlib.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+  </ItemGroup>\r\n+</Project>\n\\ No newline at end of file"}, {"sha": "695b5c78b91edfc29f77823eb642fc9ead8e15f1", "filename": "zlib/contrib/vstudio/vc10/testzlibdll.vcxproj.user", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Ftestzlibdll.vcxproj.user", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Ftestzlibdll.vcxproj.user", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Ftestzlibdll.vcxproj.user?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -0,0 +1,3 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n+<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n+</Project>\n\\ No newline at end of file"}, {"sha": "f82245087ddcff4bf3bea6ff6a4b84de28adbbfb", "filename": "zlib/contrib/vstudio/vc10/zlib.rc", "status": "renamed", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlib.rc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlib.rc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlib.rc?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -2,8 +2,8 @@\n \r\n #define IDR_VERSION1  1\r\n IDR_VERSION1\tVERSIONINFO\tMOVEABLE IMPURE LOADONCALL DISCARDABLE\r\n-  FILEVERSION\t 1,2,3,0\r\n-  PRODUCTVERSION 1,2,3,0\r\n+  FILEVERSION\t 1,2,5,0\r\n+  PRODUCTVERSION 1,2,5,0\r\n   FILEFLAGSMASK\tVS_FFI_FILEFLAGSMASK\r\n   FILEFLAGS\t0\r\n   FILEOS\tVOS_DOS_WINDOWS32\r\n@@ -16,13 +16,13 @@ BEGIN\n     //language ID = U.S. English, char set = Windows, Multilingual\r\n \r\n     BEGIN\r\n-      VALUE \"FileDescription\", \"zlib data compression library\\0\"\r\n-      VALUE \"FileVersion\",\t\"1.2.3.0\\0\"\r\n+      VALUE \"FileDescription\", \"zlib data compression and ZIP file I/O library\\0\"\r\n+      VALUE \"FileVersion\",\t\"1.2.5\\0\"\r\n       VALUE \"InternalName\",\t\"zlib\\0\"\r\n       VALUE \"OriginalFilename\",\t\"zlib.dll\\0\"\r\n       VALUE \"ProductName\",\t\"ZLib.DLL\\0\"\r\n       VALUE \"Comments\",\"DLL support by Alessandro Iacopetti & Gilles Vollant\\0\"\r\n-      VALUE \"LegalCopyright\", \"(C) 1995-2003 Jean-loup Gailly & Mark Adler\\0\"\r\n+      VALUE \"LegalCopyright\", \"(C) 1995-2010 Jean-loup Gailly & Mark Adler\\0\"\r\n     END\r\n   END\r\n   BLOCK \"VarFileInfo\"\r", "previous_filename": "zlib/contrib/vstudio/vc7/zlib.rc"}, {"sha": "2682fca24a6272e25081c9cc69926f84f2dd6a6b", "filename": "zlib/contrib/vstudio/vc10/zlibstat.vcxproj", "status": "added", "additions": 457, "deletions": 0, "changes": 457, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibstat.vcxproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibstat.vcxproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibstat.vcxproj?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -0,0 +1,457 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n+  <ItemGroup Label=\"ProjectConfigurations\">\r\n+    <ProjectConfiguration Include=\"Debug|Itanium\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>Itanium</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Debug|Win32\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>Win32</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Debug|x64\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|Itanium\">\r\n+      <Configuration>ReleaseWithoutAsm</Configuration>\r\n+      <Platform>Itanium</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|Win32\">\r\n+      <Configuration>ReleaseWithoutAsm</Configuration>\r\n+      <Platform>Win32</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|x64\">\r\n+      <Configuration>ReleaseWithoutAsm</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|Itanium\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>Itanium</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|Win32\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>Win32</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|x64\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+  </ItemGroup>\r\n+  <PropertyGroup Label=\"Globals\">\r\n+    <ProjectGuid>{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}</ProjectGuid>\r\n+  </PropertyGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" Label=\"Configuration\">\r\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\r\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\r\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" Label=\"Configuration\">\r\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"Configuration\">\r\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"Configuration\">\r\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" Label=\"Configuration\">\r\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\r\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\r\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+  </PropertyGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\r\n+  <ImportGroup Label=\"ExtensionSettings\">\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <PropertyGroup Label=\"UserMacros\" />\r\n+  <PropertyGroup>\r\n+    <_ProjectFileVersion>10.0.30128.1</_ProjectFileVersion>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\ZlibStat$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\ZlibStat$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">x86\\ZlibStat$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">x86\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\ZlibStat$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\ZlibStat$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\ZlibStat$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\ZlibStat$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">x64\\ZlibStat$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">x64\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">ia64\\ZlibStat$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">ia64\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\r\n+  </PropertyGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <DebugInformationFormat>OldStyle</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Lib>\r\n+      <AdditionalOptions>/MACHINE:X86 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\r\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </Lib>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\r\n+    <ClCompile>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ASMV;ASMINF;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Lib>\r\n+      <AdditionalOptions>/MACHINE:X86 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\r\n+      <AdditionalDependencies>..\\..\\masmx86\\match686.obj;..\\..\\masmx86\\inffas32.obj;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </Lib>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">\r\n+    <ClCompile>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Lib>\r\n+      <AdditionalOptions>/MACHINE:X86 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\r\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </Lib>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>X64</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <DebugInformationFormat>OldStyle</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Lib>\r\n+      <AdditionalOptions>/MACHINE:AMD64 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\r\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </Lib>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>Itanium</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <DebugInformationFormat>OldStyle</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Lib>\r\n+      <AdditionalOptions>/MACHINE:IA64 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\r\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </Lib>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>X64</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ASMV;ASMINF;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Lib>\r\n+      <AdditionalOptions>/MACHINE:AMD64 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\r\n+      <AdditionalDependencies>..\\..\\masmx64\\gvmat64.obj;..\\..\\masmx64\\inffasx64.obj;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </Lib>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>Itanium</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Lib>\r\n+      <AdditionalOptions>/MACHINE:IA64 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\r\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </Lib>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>X64</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Lib>\r\n+      <AdditionalOptions>/MACHINE:AMD64 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\r\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </Lib>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>Itanium</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Lib>\r\n+      <AdditionalOptions>/MACHINE:IA64 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\r\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </Lib>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemGroup>\r\n+    <ClCompile Include=\"..\\..\\..\\adler32.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\compress.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\crc32.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\deflate.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\gzclose.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\gzlib.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\gzread.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\gzwrite.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\infback.c\" />\r\n+    <ClCompile Include=\"..\\..\\masmx64\\inffas8664.c\">\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">true</ExcludedFromBuild>\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</ExcludedFromBuild>\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">true</ExcludedFromBuild>\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">true</ExcludedFromBuild>\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">true</ExcludedFromBuild>\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">true</ExcludedFromBuild>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\inffast.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\inflate.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\inftrees.c\" />\r\n+    <ClCompile Include=\"..\\..\\minizip\\ioapi.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\trees.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\uncompr.c\" />\r\n+    <ClCompile Include=\"..\\..\\minizip\\unzip.c\" />\r\n+    <ClCompile Include=\"..\\..\\minizip\\zip.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\zutil.c\" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ResourceCompile Include=\"zlib.rc\" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <None Include=\"zlibvc.def\" />\r\n+  </ItemGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\r\n+  <ImportGroup Label=\"ExtensionTargets\">\r\n+  </ImportGroup>\r\n+</Project>\n\\ No newline at end of file"}, {"sha": "c8c7f7ea395ca448ec7753636e4c6806ad2e7c17", "filename": "zlib/contrib/vstudio/vc10/zlibstat.vcxproj.filters", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibstat.vcxproj.filters", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibstat.vcxproj.filters", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibstat.vcxproj.filters?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -0,0 +1,77 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n+<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n+  <ItemGroup>\r\n+    <Filter Include=\"Source Files\">\r\n+      <UniqueIdentifier>{174213f6-7f66-4ae8-a3a8-a1e0a1e6ffdd}</UniqueIdentifier>\r\n+    </Filter>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ClCompile Include=\"..\\..\\..\\adler32.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\compress.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\crc32.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\deflate.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\gzclose.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\gzlib.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\gzread.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\gzwrite.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\infback.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\masmx64\\inffas8664.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\inffast.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\inflate.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\inftrees.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\minizip\\ioapi.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\trees.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\uncompr.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\minizip\\unzip.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\minizip\\zip.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\zutil.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ResourceCompile Include=\"zlib.rc\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ResourceCompile>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <None Include=\"zlibvc.def\">\r\n+      <Filter>Source Files</Filter>\r\n+    </None>\r\n+  </ItemGroup>\r\n+</Project>\n\\ No newline at end of file"}, {"sha": "695b5c78b91edfc29f77823eb642fc9ead8e15f1", "filename": "zlib/contrib/vstudio/vc10/zlibstat.vcxproj.user", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibstat.vcxproj.user", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibstat.vcxproj.user", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibstat.vcxproj.user?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -0,0 +1,3 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n+<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n+</Project>\n\\ No newline at end of file"}, {"sha": "0269ef722c1ce3a9422168a9b99e64466600111f", "filename": "zlib/contrib/vstudio/vc10/zlibvc.def", "status": "renamed", "additions": 41, "deletions": 3, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibvc.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibvc.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibvc.def?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,7 +1,7 @@\n+LIBRARY\r\n+; zlib data compression and ZIP file I/O library\r\n \r\n-VERSION\t\t1.23\r\n-\r\n-HEAPSIZE\t1048576,8192\r\n+VERSION\t\t1.24\r\n \r\n EXPORTS\r\n         adler32                                  @1\r\n@@ -90,3 +90,41 @@ EXPORTS\n         unzGoToFilePos                           @101\r\n \r\n         fill_win32_filefunc                      @110\r\n+\r\n+; zlibwapi v1.2.4 added:\r\n+        fill_win32_filefunc64                   @111\r\n+        fill_win32_filefunc64A                  @112\r\n+        fill_win32_filefunc64W                  @113\r\n+\r\n+        unzOpen64                               @120\r\n+        unzOpen2_64                             @121\r\n+        unzGetGlobalInfo64                      @122\r\n+        unzGetCurrentFileInfo64                 @124\r\n+        unzGetCurrentFileZStreamPos64           @125\r\n+        unztell64                               @126\r\n+        unzGetFilePos64                         @127\r\n+        unzGoToFilePos64                        @128\r\n+\r\n+        zipOpen64                               @130\r\n+        zipOpen2_64                             @131\r\n+        zipOpenNewFileInZip64                   @132\r\n+        zipOpenNewFileInZip2_64                 @133\r\n+        zipOpenNewFileInZip3_64                 @134\r\n+        zipOpenNewFileInZip4_64                 @135\r\n+        zipCloseFileInZipRaw64                  @136\r\n+\r\n+; zlib1 v1.2.4 added:\r\n+        adler32_combine                         @140\r\n+        crc32_combine                           @142\r\n+        deflateSetHeader                        @144\r\n+        deflateTune                             @145\r\n+        gzbuffer                                @146\r\n+        gzclose_r                               @147\r\n+        gzclose_w                               @148\r\n+        gzdirect                                @149\r\n+        gzoffset                                @150\r\n+        inflateGetHeader                        @156\r\n+        inflateMark                             @157\r\n+        inflatePrime                            @158\r\n+        inflateReset2                           @159\r\n+        inflateUndermine                        @160\r", "previous_filename": "zlib/contrib/vstudio/vc7/zlibvc.def"}, {"sha": "6f6ffd5eea13b661512f1fe3e8f6cb2d30023e36", "filename": "zlib/contrib/vstudio/vc10/zlibvc.sln", "status": "added", "additions": 135, "deletions": 0, "changes": 135, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibvc.sln", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibvc.sln", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibvc.sln?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -0,0 +1,135 @@\n+\ufeff\r\n+Microsoft Visual Studio Solution File, Format Version 11.00\r\n+# Visual Studio 2010\r\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"zlibvc\", \"zlibvc.vcxproj\", \"{8FD826F8-3739-44E6-8CC8-997122E53B8D}\"\r\n+EndProject\r\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"zlibstat\", \"zlibstat.vcxproj\", \"{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}\"\r\n+EndProject\r\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"testzlib\", \"testzlib.vcxproj\", \"{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}\"\r\n+EndProject\r\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"testzlibdll\", \"testzlibdll.vcxproj\", \"{C52F9E7B-498A-42BE-8DB4-85A15694366A}\"\r\n+EndProject\r\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"minizip\", \"minizip.vcxproj\", \"{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}\"\r\n+EndProject\r\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"miniunz\", \"miniunz.vcxproj\", \"{C52F9E7B-498A-42BE-8DB4-85A15694382A}\"\r\n+EndProject\r\n+Global\r\n+\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n+\t\tDebug|Itanium = Debug|Itanium\r\n+\t\tDebug|Win32 = Debug|Win32\r\n+\t\tDebug|x64 = Debug|x64\r\n+\t\tRelease|Itanium = Release|Itanium\r\n+\t\tRelease|Win32 = Release|Win32\r\n+\t\tRelease|x64 = Release|x64\r\n+\t\tReleaseWithoutAsm|Itanium = ReleaseWithoutAsm|Itanium\r\n+\t\tReleaseWithoutAsm|Win32 = ReleaseWithoutAsm|Win32\r\n+\t\tReleaseWithoutAsm|x64 = ReleaseWithoutAsm|x64\r\n+\tEndGlobalSection\r\n+\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Debug|Itanium.ActiveCfg = Debug|Itanium\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Debug|Itanium.Build.0 = Debug|Itanium\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Debug|Win32.ActiveCfg = Debug|Win32\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Debug|Win32.Build.0 = Debug|Win32\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Debug|x64.ActiveCfg = Debug|x64\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Debug|x64.Build.0 = Debug|x64\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Release|Itanium.ActiveCfg = Release|Itanium\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Release|Itanium.Build.0 = Release|Itanium\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Release|Win32.ActiveCfg = Release|Win32\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Release|Win32.Build.0 = Release|Win32\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Release|x64.ActiveCfg = Release|x64\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Release|x64.Build.0 = Release|x64\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.ReleaseWithoutAsm|Itanium.ActiveCfg = ReleaseWithoutAsm|Itanium\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.ReleaseWithoutAsm|Itanium.Build.0 = ReleaseWithoutAsm|Itanium\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.ReleaseWithoutAsm|Win32.ActiveCfg = ReleaseWithoutAsm|Win32\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.ReleaseWithoutAsm|Win32.Build.0 = ReleaseWithoutAsm|Win32\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.ReleaseWithoutAsm|x64.ActiveCfg = ReleaseWithoutAsm|x64\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.ReleaseWithoutAsm|x64.Build.0 = ReleaseWithoutAsm|x64\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Debug|Itanium.ActiveCfg = Debug|Itanium\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Debug|Itanium.Build.0 = Debug|Itanium\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Debug|Win32.ActiveCfg = Debug|Win32\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Debug|Win32.Build.0 = Debug|Win32\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Debug|x64.ActiveCfg = Debug|x64\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Debug|x64.Build.0 = Debug|x64\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Release|Itanium.ActiveCfg = Release|Itanium\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Release|Itanium.Build.0 = Release|Itanium\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Release|Win32.ActiveCfg = Release|Win32\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Release|Win32.Build.0 = Release|Win32\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Release|x64.ActiveCfg = Release|x64\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Release|x64.Build.0 = Release|x64\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.ReleaseWithoutAsm|Itanium.ActiveCfg = ReleaseWithoutAsm|Itanium\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.ReleaseWithoutAsm|Itanium.Build.0 = ReleaseWithoutAsm|Itanium\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.ReleaseWithoutAsm|Win32.ActiveCfg = ReleaseWithoutAsm|Win32\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.ReleaseWithoutAsm|Win32.Build.0 = ReleaseWithoutAsm|Win32\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.ReleaseWithoutAsm|x64.ActiveCfg = ReleaseWithoutAsm|x64\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.ReleaseWithoutAsm|x64.Build.0 = ReleaseWithoutAsm|x64\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Debug|Itanium.ActiveCfg = Debug|Itanium\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Debug|Itanium.Build.0 = Debug|Itanium\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Debug|Win32.ActiveCfg = Debug|Win32\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Debug|Win32.Build.0 = Debug|Win32\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Debug|x64.ActiveCfg = Debug|x64\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Debug|x64.Build.0 = Debug|x64\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Release|Itanium.ActiveCfg = Release|Itanium\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Release|Itanium.Build.0 = Release|Itanium\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Release|Win32.ActiveCfg = Release|Win32\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Release|Win32.Build.0 = Release|Win32\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Release|x64.ActiveCfg = Release|x64\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Release|x64.Build.0 = Release|x64\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|Itanium.ActiveCfg = ReleaseWithoutAsm|Itanium\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|Itanium.Build.0 = ReleaseWithoutAsm|Itanium\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|Win32.ActiveCfg = ReleaseWithoutAsm|Win32\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|Win32.Build.0 = ReleaseWithoutAsm|Win32\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|x64.ActiveCfg = ReleaseWithoutAsm|x64\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|x64.Build.0 = ReleaseWithoutAsm|x64\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Debug|Itanium.ActiveCfg = Debug|Itanium\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Debug|Itanium.Build.0 = Debug|Itanium\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Debug|Win32.ActiveCfg = Debug|Win32\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Debug|Win32.Build.0 = Debug|Win32\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Debug|x64.ActiveCfg = Debug|x64\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Debug|x64.Build.0 = Debug|x64\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Release|Itanium.ActiveCfg = Release|Itanium\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Release|Itanium.Build.0 = Release|Itanium\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Release|Win32.ActiveCfg = Release|Win32\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Release|Win32.Build.0 = Release|Win32\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Release|x64.ActiveCfg = Release|x64\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Release|x64.Build.0 = Release|x64\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.ReleaseWithoutAsm|Itanium.ActiveCfg = Release|Itanium\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.ReleaseWithoutAsm|Itanium.Build.0 = Release|Itanium\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.ReleaseWithoutAsm|Win32.ActiveCfg = Release|Win32\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.ReleaseWithoutAsm|x64.ActiveCfg = Release|x64\r\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Debug|Itanium.ActiveCfg = Debug|Itanium\r\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Debug|Itanium.Build.0 = Debug|Itanium\r\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Debug|Win32.ActiveCfg = Debug|Win32\r\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Debug|Win32.Build.0 = Debug|Win32\r\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Debug|x64.ActiveCfg = Debug|x64\r\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Debug|x64.Build.0 = Debug|x64\r\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Release|Itanium.ActiveCfg = Release|Itanium\r\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Release|Itanium.Build.0 = Release|Itanium\r\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Release|Win32.ActiveCfg = Release|Win32\r\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Release|Win32.Build.0 = Release|Win32\r\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Release|x64.ActiveCfg = Release|x64\r\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Release|x64.Build.0 = Release|x64\r\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|Itanium.ActiveCfg = Release|Itanium\r\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|Itanium.Build.0 = Release|Itanium\r\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|Win32.ActiveCfg = Release|Win32\r\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|x64.ActiveCfg = Release|x64\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Debug|Itanium.ActiveCfg = Debug|Itanium\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Debug|Itanium.Build.0 = Debug|Itanium\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Debug|Win32.ActiveCfg = Debug|Win32\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Debug|Win32.Build.0 = Debug|Win32\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Debug|x64.ActiveCfg = Debug|x64\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Debug|x64.Build.0 = Debug|x64\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Release|Itanium.ActiveCfg = Release|Itanium\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Release|Itanium.Build.0 = Release|Itanium\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Release|Win32.ActiveCfg = Release|Win32\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Release|Win32.Build.0 = Release|Win32\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Release|x64.ActiveCfg = Release|x64\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Release|x64.Build.0 = Release|x64\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.ReleaseWithoutAsm|Itanium.ActiveCfg = Release|Itanium\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.ReleaseWithoutAsm|Itanium.Build.0 = Release|Itanium\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.ReleaseWithoutAsm|Win32.ActiveCfg = Release|Win32\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.ReleaseWithoutAsm|x64.ActiveCfg = Release|x64\r\n+\tEndGlobalSection\r\n+\tGlobalSection(SolutionProperties) = preSolution\r\n+\t\tHideSolutionNode = FALSE\r\n+\tEndGlobalSection\r\n+EndGlobal\r"}, {"sha": "98623989343e437cec320e767cf023bcc0ce579a", "filename": "zlib/contrib/vstudio/vc10/zlibvc.vcxproj", "status": "added", "additions": 659, "deletions": 0, "changes": 659, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibvc.vcxproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibvc.vcxproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibvc.vcxproj?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -0,0 +1,659 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n+  <ItemGroup Label=\"ProjectConfigurations\">\r\n+    <ProjectConfiguration Include=\"Debug|Itanium\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>Itanium</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Debug|Win32\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>Win32</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Debug|x64\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|Itanium\">\r\n+      <Configuration>ReleaseWithoutAsm</Configuration>\r\n+      <Platform>Itanium</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|Win32\">\r\n+      <Configuration>ReleaseWithoutAsm</Configuration>\r\n+      <Platform>Win32</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|x64\">\r\n+      <Configuration>ReleaseWithoutAsm</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|Itanium\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>Itanium</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|Win32\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>Win32</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|x64\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+  </ItemGroup>\r\n+  <PropertyGroup Label=\"Globals\">\r\n+    <ProjectGuid>{8FD826F8-3739-44E6-8CC8-997122E53B8D}</ProjectGuid>\r\n+  </PropertyGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\r\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" Label=\"Configuration\">\r\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\r\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"Configuration\">\r\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" Label=\"Configuration\">\r\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"Configuration\">\r\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\r\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" Label=\"Configuration\">\r\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\r\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+  </PropertyGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\r\n+  <ImportGroup Label=\"ExtensionSettings\">\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <PropertyGroup Label=\"UserMacros\" />\r\n+  <PropertyGroup>\r\n+    <_ProjectFileVersion>10.0.30128.1</_ProjectFileVersion>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\ZlibDll$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">x86\\ZlibDll$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">x86\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">false</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\ZlibDll$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\ZlibDll$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\ZlibDll$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">true</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">x64\\ZlibDll$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">x64\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">false</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">ia64\\ZlibDll$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">ia64\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">false</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\ZlibDll$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\ZlibDll$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</GenerateManifest>\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\r\n+  </PropertyGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\r\n+    <Midl>\r\n+      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <TargetEnvironment>Win32</TargetEnvironment>\r\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;ASMV;ASMINF;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <BrowseInformation>\r\n+      </BrowseInformation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Link>\r\n+      <AdditionalOptions>/MACHINE:I386 %(AdditionalOptions)</AdditionalOptions>\r\n+      <AdditionalDependencies>..\\..\\masmx86\\match686.obj;..\\..\\masmx86\\inffas32.obj;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\r\n+      <GenerateMapFile>true</GenerateMapFile>\r\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\r\n+      <SubSystem>Windows</SubSystem>\r\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\r\n+      <DataExecutionPrevention>\r\n+      </DataExecutionPrevention>\r\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">\r\n+    <Midl>\r\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <TargetEnvironment>Win32</TargetEnvironment>\r\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerOutput>All</AssemblerOutput>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <BrowseInformation>\r\n+      </BrowseInformation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Link>\r\n+      <AdditionalOptions>/MACHINE:I386 %(AdditionalOptions)</AdditionalOptions>\r\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>\r\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\r\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\r\n+      <GenerateMapFile>true</GenerateMapFile>\r\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\r\n+      <SubSystem>Windows</SubSystem>\r\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\r\n+      <DataExecutionPrevention>\r\n+      </DataExecutionPrevention>\r\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\r\n+    <Midl>\r\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <TargetEnvironment>Win32</TargetEnvironment>\r\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;ASMV;ASMINF;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerOutput>All</AssemblerOutput>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <BrowseInformation>\r\n+      </BrowseInformation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Link>\r\n+      <AdditionalOptions>/MACHINE:I386 %(AdditionalOptions)</AdditionalOptions>\r\n+      <AdditionalDependencies>..\\..\\masmx86\\match686.obj;..\\..\\masmx86\\inffas32.obj;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>\r\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\r\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\r\n+      <GenerateMapFile>true</GenerateMapFile>\r\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\r\n+      <SubSystem>Windows</SubSystem>\r\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\r\n+      <DataExecutionPrevention>\r\n+      </DataExecutionPrevention>\r\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\r\n+    <Midl>\r\n+      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <TargetEnvironment>X64</TargetEnvironment>\r\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;ASMV;ASMINF;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <BrowseInformation>\r\n+      </BrowseInformation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>..\\..\\masmx64\\gvmat64.obj;..\\..\\masmx64\\inffasx64.obj;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\r\n+      <GenerateMapFile>true</GenerateMapFile>\r\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\r\n+      <SubSystem>Windows</SubSystem>\r\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\r\n+      <TargetMachine>MachineX64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">\r\n+    <Midl>\r\n+      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <TargetEnvironment>Itanium</TargetEnvironment>\r\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <BrowseInformation>\r\n+      </BrowseInformation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Link>\r\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\r\n+      <GenerateMapFile>true</GenerateMapFile>\r\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\r\n+      <SubSystem>Windows</SubSystem>\r\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\r\n+      <TargetMachine>MachineIA64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">\r\n+    <Midl>\r\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <TargetEnvironment>X64</TargetEnvironment>\r\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerOutput>All</AssemblerOutput>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <BrowseInformation>\r\n+      </BrowseInformation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Link>\r\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>\r\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\r\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\r\n+      <GenerateMapFile>true</GenerateMapFile>\r\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\r\n+      <SubSystem>Windows</SubSystem>\r\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\r\n+      <TargetMachine>MachineX64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">\r\n+    <Midl>\r\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <TargetEnvironment>Itanium</TargetEnvironment>\r\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerOutput>All</AssemblerOutput>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <BrowseInformation>\r\n+      </BrowseInformation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Link>\r\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>\r\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\r\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\r\n+      <GenerateMapFile>true</GenerateMapFile>\r\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\r\n+      <SubSystem>Windows</SubSystem>\r\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\r\n+      <TargetMachine>MachineIA64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\r\n+    <Midl>\r\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <TargetEnvironment>X64</TargetEnvironment>\r\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;ASMV;ASMINF;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerOutput>All</AssemblerOutput>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <BrowseInformation>\r\n+      </BrowseInformation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>..\\..\\masmx64\\gvmat64.obj;..\\..\\masmx64\\inffasx64.obj;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>\r\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\r\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\r\n+      <GenerateMapFile>true</GenerateMapFile>\r\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\r\n+      <SubSystem>Windows</SubSystem>\r\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\r\n+      <TargetMachine>MachineX64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">\r\n+    <Midl>\r\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <TargetEnvironment>Itanium</TargetEnvironment>\r\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerOutput>All</AssemblerOutput>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <BrowseInformation>\r\n+      </BrowseInformation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Link>\r\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>\r\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\r\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\r\n+      <GenerateMapFile>true</GenerateMapFile>\r\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\r\n+      <SubSystem>Windows</SubSystem>\r\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\r\n+      <TargetMachine>MachineIA64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemGroup>\r\n+    <ClCompile Include=\"..\\..\\..\\adler32.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\compress.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\crc32.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\deflate.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\gzclose.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\gzlib.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\gzread.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\gzwrite.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\infback.c\" />\r\n+    <ClCompile Include=\"..\\..\\masmx64\\inffas8664.c\">\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">true</ExcludedFromBuild>\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</ExcludedFromBuild>\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">true</ExcludedFromBuild>\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">true</ExcludedFromBuild>\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">true</ExcludedFromBuild>\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">true</ExcludedFromBuild>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\inffast.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\inflate.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\inftrees.c\" />\r\n+    <ClCompile Include=\"..\\..\\minizip\\ioapi.c\" />\r\n+    <ClCompile Include=\"..\\..\\minizip\\iowin32.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\trees.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\uncompr.c\" />\r\n+    <ClCompile Include=\"..\\..\\minizip\\unzip.c\">\r\n+      <AdditionalIncludeDirectories Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ZLIB_INTERNAL;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <AdditionalIncludeDirectories Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">ZLIB_INTERNAL;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <AdditionalIncludeDirectories Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">ZLIB_INTERNAL;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\minizip\\zip.c\">\r\n+      <AdditionalIncludeDirectories Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ZLIB_INTERNAL;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <AdditionalIncludeDirectories Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">ZLIB_INTERNAL;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <AdditionalIncludeDirectories Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">ZLIB_INTERNAL;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\zutil.c\" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ResourceCompile Include=\"zlib.rc\" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <None Include=\"zlibvc.def\" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ClInclude Include=\"..\\..\\..\\deflate.h\" />\r\n+    <ClInclude Include=\"..\\..\\..\\infblock.h\" />\r\n+    <ClInclude Include=\"..\\..\\..\\infcodes.h\" />\r\n+    <ClInclude Include=\"..\\..\\..\\inffast.h\" />\r\n+    <ClInclude Include=\"..\\..\\..\\inftrees.h\" />\r\n+    <ClInclude Include=\"..\\..\\..\\infutil.h\" />\r\n+    <ClInclude Include=\"..\\..\\..\\zconf.h\" />\r\n+    <ClInclude Include=\"..\\..\\..\\zlib.h\" />\r\n+    <ClInclude Include=\"..\\..\\..\\zutil.h\" />\r\n+  </ItemGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\r\n+  <ImportGroup Label=\"ExtensionTargets\">\r\n+  </ImportGroup>\r\n+</Project>\n\\ No newline at end of file"}, {"sha": "180b71cd61df64afb4f8c13f84e73426c4cd7d2e", "filename": "zlib/contrib/vstudio/vc10/zlibvc.vcxproj.filters", "status": "added", "additions": 118, "deletions": 0, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibvc.vcxproj.filters", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibvc.vcxproj.filters", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibvc.vcxproj.filters?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -0,0 +1,118 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n+<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n+  <ItemGroup>\r\n+    <Filter Include=\"Source Files\">\r\n+      <UniqueIdentifier>{07934a85-8b61-443d-a0ee-b2eedb74f3cd}</UniqueIdentifier>\r\n+      <Extensions>cpp;c;cxx;rc;def;r;odl;hpj;bat;for;f90</Extensions>\r\n+    </Filter>\r\n+    <Filter Include=\"Header Files\">\r\n+      <UniqueIdentifier>{1d99675b-433d-4a21-9e50-ed4ab8b19762}</UniqueIdentifier>\r\n+      <Extensions>h;hpp;hxx;hm;inl;fi;fd</Extensions>\r\n+    </Filter>\r\n+    <Filter Include=\"Resource Files\">\r\n+      <UniqueIdentifier>{431c0958-fa71-44d0-9084-2d19d100c0cc}</UniqueIdentifier>\r\n+      <Extensions>ico;cur;bmp;dlg;rc2;rct;bin;cnt;rtf;gif;jpg;jpeg;jpe</Extensions>\r\n+    </Filter>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ClCompile Include=\"..\\..\\..\\adler32.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\compress.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\crc32.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\deflate.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\gzclose.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\gzlib.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\gzread.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\gzwrite.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\infback.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\masmx64\\inffas8664.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\inffast.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\inflate.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\inftrees.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\minizip\\ioapi.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\minizip\\iowin32.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\trees.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\uncompr.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\minizip\\unzip.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\minizip\\zip.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\zutil.c\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ResourceCompile Include=\"zlib.rc\">\r\n+      <Filter>Source Files</Filter>\r\n+    </ResourceCompile>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <None Include=\"zlibvc.def\">\r\n+      <Filter>Source Files</Filter>\r\n+    </None>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ClInclude Include=\"..\\..\\..\\deflate.h\">\r\n+      <Filter>Header Files</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=\"..\\..\\..\\infblock.h\">\r\n+      <Filter>Header Files</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=\"..\\..\\..\\infcodes.h\">\r\n+      <Filter>Header Files</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=\"..\\..\\..\\inffast.h\">\r\n+      <Filter>Header Files</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=\"..\\..\\..\\inftrees.h\">\r\n+      <Filter>Header Files</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=\"..\\..\\..\\infutil.h\">\r\n+      <Filter>Header Files</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=\"..\\..\\..\\zconf.h\">\r\n+      <Filter>Header Files</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=\"..\\..\\..\\zlib.h\">\r\n+      <Filter>Header Files</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=\"..\\..\\..\\zutil.h\">\r\n+      <Filter>Header Files</Filter>\r\n+    </ClInclude>\r\n+  </ItemGroup>\r\n+</Project>\n\\ No newline at end of file"}, {"sha": "695b5c78b91edfc29f77823eb642fc9ead8e15f1", "filename": "zlib/contrib/vstudio/vc10/zlibvc.vcxproj.user", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibvc.vcxproj.user", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibvc.vcxproj.user", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibvc.vcxproj.user?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -0,0 +1,3 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n+<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n+</Project>\n\\ No newline at end of file"}, {"sha": "ad5117c84517de0d36b281288839a77afda48328", "filename": "zlib/contrib/vstudio/vc7/miniunz.vcproj", "status": "removed", "additions": 0, "deletions": 126, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d216c70d980e3169b42e9734cf4bea1648ff8f0/zlib%2Fcontrib%2Fvstudio%2Fvc7%2Fminiunz.vcproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d216c70d980e3169b42e9734cf4bea1648ff8f0/zlib%2Fcontrib%2Fvstudio%2Fvc7%2Fminiunz.vcproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc7%2Fminiunz.vcproj?ref=5d216c70d980e3169b42e9734cf4bea1648ff8f0", "patch": "@@ -1,126 +0,0 @@\n-<?xml version=\"1.0\" encoding = \"Windows-1252\"?>\r\n-<VisualStudioProject\r\n-\tProjectType=\"Visual C++\"\r\n-\tVersion=\"7.00\"\r\n-\tName=\"miniunz\"\r\n-\tProjectGUID=\"{C52F9E7B-498A-42BE-8DB4-85A15694382A}\"\r\n-\tKeyword=\"Win32Proj\">\r\n-\t<Platforms>\r\n-\t\t<Platform\r\n-\t\t\tName=\"Win32\"/>\r\n-\t</Platforms>\r\n-\t<Configurations>\r\n-\t\t<Configuration\r\n-\t\t\tName=\"Debug|Win32\"\r\n-\t\t\tOutputDirectory=\"Debug\"\r\n-\t\t\tIntermediateDirectory=\"Debug\"\r\n-\t\t\tConfigurationType=\"1\"\r\n-\t\t\tCharacterSet=\"2\">\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\tOptimization=\"0\"\r\n-\t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\minizip\"\r\n-\t\t\t\tPreprocessorDefinitions=\"WIN32;ZLIB_WINAPI;_DEBUG;_CONSOLE\"\r\n-\t\t\t\tMinimalRebuild=\"TRUE\"\r\n-\t\t\t\tBasicRuntimeChecks=\"3\"\r\n-\t\t\t\tRuntimeLibrary=\"5\"\r\n-\t\t\t\tUsePrecompiledHeader=\"0\"\r\n-\t\t\t\tWarningLevel=\"3\"\r\n-\t\t\t\tDetect64BitPortabilityProblems=\"TRUE\"\r\n-\t\t\t\tDebugInformationFormat=\"4\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCCustomBuildTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCLinkerTool\"\r\n-\t\t\t\tOutputFile=\"$(OutDir)/miniunz.exe\"\r\n-\t\t\t\tLinkIncremental=\"2\"\r\n-\t\t\t\tGenerateDebugInformation=\"TRUE\"\r\n-\t\t\t\tProgramDatabaseFile=\"$(OutDir)/miniunz.pdb\"\r\n-\t\t\t\tSubSystem=\"1\"\r\n-\t\t\t\tTargetMachine=\"1\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCMIDLTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPostBuildEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPreBuildEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPreLinkEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCResourceCompilerTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebServiceProxyGeneratorTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"/>\r\n-\t\t</Configuration>\r\n-\t\t<Configuration\r\n-\t\t\tName=\"Release|Win32\"\r\n-\t\t\tOutputDirectory=\"Release\"\r\n-\t\t\tIntermediateDirectory=\"Release\"\r\n-\t\t\tConfigurationType=\"1\"\r\n-\t\t\tCharacterSet=\"2\">\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\tOptimization=\"2\"\r\n-\t\t\t\tInlineFunctionExpansion=\"1\"\r\n-\t\t\t\tOmitFramePointers=\"TRUE\"\r\n-\t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\minizip\"\r\n-\t\t\t\tPreprocessorDefinitions=\"WIN32;ZLIB_WINAPI;NDEBUG;_CONSOLE\"\r\n-\t\t\t\tStringPooling=\"TRUE\"\r\n-\t\t\t\tRuntimeLibrary=\"4\"\r\n-\t\t\t\tEnableFunctionLevelLinking=\"TRUE\"\r\n-\t\t\t\tUsePrecompiledHeader=\"0\"\r\n-\t\t\t\tWarningLevel=\"3\"\r\n-\t\t\t\tDetect64BitPortabilityProblems=\"TRUE\"\r\n-\t\t\t\tDebugInformationFormat=\"3\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCCustomBuildTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCLinkerTool\"\r\n-\t\t\t\tOutputFile=\"$(OutDir)/miniunz.exe\"\r\n-\t\t\t\tLinkIncremental=\"1\"\r\n-\t\t\t\tGenerateDebugInformation=\"TRUE\"\r\n-\t\t\t\tSubSystem=\"1\"\r\n-\t\t\t\tOptimizeReferences=\"2\"\r\n-\t\t\t\tEnableCOMDATFolding=\"2\"\r\n-\t\t\t\tOptimizeForWindows98=\"1\"\r\n-\t\t\t\tTargetMachine=\"1\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCMIDLTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPostBuildEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPreBuildEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPreLinkEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCResourceCompilerTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebServiceProxyGeneratorTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"/>\r\n-\t\t</Configuration>\r\n-\t</Configurations>\r\n-\t<Files>\r\n-\t\t<Filter\r\n-\t\t\tName=\"Source Files\"\r\n-\t\t\tFilter=\"cpp;c;cxx;def;odl;idl;hpj;bat;asm\">\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\minizip\\miniunz.c\">\r\n-\t\t\t</File>\r\n-\t\t</Filter>\r\n-\t\t<Filter\r\n-\t\t\tName=\"Header Files\"\r\n-\t\t\tFilter=\"h;hpp;hxx;hm;inl;inc\">\r\n-\t\t</Filter>\r\n-\t\t<Filter\r\n-\t\t\tName=\"Resource Files\"\r\n-\t\t\tFilter=\"rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe\">\r\n-\t\t</Filter>\r\n-\t\t<File\r\n-\t\t\tRelativePath=\"ReleaseDll\\zlibwapi.lib\">\r\n-\t\t</File>\r\n-\t</Files>\r\n-\t<Globals>\r\n-\t</Globals>\r\n-</VisualStudioProject>\r"}, {"sha": "fb5b6320d503fd7776a14450ad17b117a7645024", "filename": "zlib/contrib/vstudio/vc7/minizip.vcproj", "status": "removed", "additions": 0, "deletions": 126, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d216c70d980e3169b42e9734cf4bea1648ff8f0/zlib%2Fcontrib%2Fvstudio%2Fvc7%2Fminizip.vcproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d216c70d980e3169b42e9734cf4bea1648ff8f0/zlib%2Fcontrib%2Fvstudio%2Fvc7%2Fminizip.vcproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc7%2Fminizip.vcproj?ref=5d216c70d980e3169b42e9734cf4bea1648ff8f0", "patch": "@@ -1,126 +0,0 @@\n-<?xml version=\"1.0\" encoding = \"Windows-1252\"?>\r\n-<VisualStudioProject\r\n-\tProjectType=\"Visual C++\"\r\n-\tVersion=\"7.00\"\r\n-\tName=\"minizip\"\r\n-\tProjectGUID=\"{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}\"\r\n-\tKeyword=\"Win32Proj\">\r\n-\t<Platforms>\r\n-\t\t<Platform\r\n-\t\t\tName=\"Win32\"/>\r\n-\t</Platforms>\r\n-\t<Configurations>\r\n-\t\t<Configuration\r\n-\t\t\tName=\"Debug|Win32\"\r\n-\t\t\tOutputDirectory=\"Debug\"\r\n-\t\t\tIntermediateDirectory=\"Debug\"\r\n-\t\t\tConfigurationType=\"1\"\r\n-\t\t\tCharacterSet=\"2\">\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\tOptimization=\"0\"\r\n-\t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\minizip\"\r\n-\t\t\t\tPreprocessorDefinitions=\"WIN32;ZLIB_WINAPI;_DEBUG;_CONSOLE\"\r\n-\t\t\t\tMinimalRebuild=\"TRUE\"\r\n-\t\t\t\tBasicRuntimeChecks=\"3\"\r\n-\t\t\t\tRuntimeLibrary=\"5\"\r\n-\t\t\t\tUsePrecompiledHeader=\"0\"\r\n-\t\t\t\tWarningLevel=\"3\"\r\n-\t\t\t\tDetect64BitPortabilityProblems=\"TRUE\"\r\n-\t\t\t\tDebugInformationFormat=\"4\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCCustomBuildTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCLinkerTool\"\r\n-\t\t\t\tOutputFile=\"$(OutDir)/minizip.exe\"\r\n-\t\t\t\tLinkIncremental=\"2\"\r\n-\t\t\t\tGenerateDebugInformation=\"TRUE\"\r\n-\t\t\t\tProgramDatabaseFile=\"$(OutDir)/minizip.pdb\"\r\n-\t\t\t\tSubSystem=\"1\"\r\n-\t\t\t\tTargetMachine=\"1\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCMIDLTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPostBuildEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPreBuildEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPreLinkEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCResourceCompilerTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebServiceProxyGeneratorTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"/>\r\n-\t\t</Configuration>\r\n-\t\t<Configuration\r\n-\t\t\tName=\"Release|Win32\"\r\n-\t\t\tOutputDirectory=\"Release\"\r\n-\t\t\tIntermediateDirectory=\"Release\"\r\n-\t\t\tConfigurationType=\"1\"\r\n-\t\t\tCharacterSet=\"2\">\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\tOptimization=\"2\"\r\n-\t\t\t\tInlineFunctionExpansion=\"1\"\r\n-\t\t\t\tOmitFramePointers=\"TRUE\"\r\n-\t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\minizip\"\r\n-\t\t\t\tPreprocessorDefinitions=\"WIN32;ZLIB_WINAPI;NDEBUG;_CONSOLE\"\r\n-\t\t\t\tStringPooling=\"TRUE\"\r\n-\t\t\t\tRuntimeLibrary=\"4\"\r\n-\t\t\t\tEnableFunctionLevelLinking=\"TRUE\"\r\n-\t\t\t\tUsePrecompiledHeader=\"0\"\r\n-\t\t\t\tWarningLevel=\"3\"\r\n-\t\t\t\tDetect64BitPortabilityProblems=\"TRUE\"\r\n-\t\t\t\tDebugInformationFormat=\"3\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCCustomBuildTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCLinkerTool\"\r\n-\t\t\t\tOutputFile=\"$(OutDir)/minizip.exe\"\r\n-\t\t\t\tLinkIncremental=\"1\"\r\n-\t\t\t\tGenerateDebugInformation=\"TRUE\"\r\n-\t\t\t\tSubSystem=\"1\"\r\n-\t\t\t\tOptimizeReferences=\"2\"\r\n-\t\t\t\tEnableCOMDATFolding=\"2\"\r\n-\t\t\t\tOptimizeForWindows98=\"1\"\r\n-\t\t\t\tTargetMachine=\"1\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCMIDLTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPostBuildEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPreBuildEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPreLinkEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCResourceCompilerTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebServiceProxyGeneratorTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"/>\r\n-\t\t</Configuration>\r\n-\t</Configurations>\r\n-\t<Files>\r\n-\t\t<Filter\r\n-\t\t\tName=\"Source Files\"\r\n-\t\t\tFilter=\"cpp;c;cxx;def;odl;idl;hpj;bat;asm\">\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\minizip\\minizip.c\">\r\n-\t\t\t</File>\r\n-\t\t</Filter>\r\n-\t\t<Filter\r\n-\t\t\tName=\"Header Files\"\r\n-\t\t\tFilter=\"h;hpp;hxx;hm;inl;inc\">\r\n-\t\t</Filter>\r\n-\t\t<Filter\r\n-\t\t\tName=\"Resource Files\"\r\n-\t\t\tFilter=\"rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe\">\r\n-\t\t</Filter>\r\n-\t\t<File\r\n-\t\t\tRelativePath=\"ReleaseDll\\zlibwapi.lib\">\r\n-\t\t</File>\r\n-\t</Files>\r\n-\t<Globals>\r\n-\t</Globals>\r\n-</VisualStudioProject>\r"}, {"sha": "97bc3e8c86de547e9e13332ea8aa1203939626de", "filename": "zlib/contrib/vstudio/vc7/testzlib.vcproj", "status": "removed", "additions": 0, "deletions": 126, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d216c70d980e3169b42e9734cf4bea1648ff8f0/zlib%2Fcontrib%2Fvstudio%2Fvc7%2Ftestzlib.vcproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d216c70d980e3169b42e9734cf4bea1648ff8f0/zlib%2Fcontrib%2Fvstudio%2Fvc7%2Ftestzlib.vcproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc7%2Ftestzlib.vcproj?ref=5d216c70d980e3169b42e9734cf4bea1648ff8f0", "patch": "@@ -1,126 +0,0 @@\n-<?xml version=\"1.0\" encoding = \"Windows-1252\"?>\r\n-<VisualStudioProject\r\n-\tProjectType=\"Visual C++\"\r\n-\tVersion=\"7.00\"\r\n-\tName=\"testZlibDll\"\r\n-\tProjectGUID=\"{AA6666AA-E09F-4135-9C0C-4FE50C3C654C}\"\r\n-\tKeyword=\"Win32Proj\">\r\n-\t<Platforms>\r\n-\t\t<Platform\r\n-\t\t\tName=\"Win32\"/>\r\n-\t</Platforms>\r\n-\t<Configurations>\r\n-\t\t<Configuration\r\n-\t\t\tName=\"Debug|Win32\"\r\n-\t\t\tOutputDirectory=\"Debug\"\r\n-\t\t\tIntermediateDirectory=\"Debug\"\r\n-\t\t\tConfigurationType=\"1\"\r\n-\t\t\tCharacterSet=\"2\">\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\tOptimization=\"0\"\r\n-\t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..\"\r\n-\t\t\t\tPreprocessorDefinitions=\"WIN32;ZLIB_WINAPI;_DEBUG;_CONSOLE\"\r\n-\t\t\t\tMinimalRebuild=\"TRUE\"\r\n-\t\t\t\tBasicRuntimeChecks=\"3\"\r\n-\t\t\t\tRuntimeLibrary=\"5\"\r\n-\t\t\t\tUsePrecompiledHeader=\"0\"\r\n-\t\t\t\tWarningLevel=\"3\"\r\n-\t\t\t\tDetect64BitPortabilityProblems=\"TRUE\"\r\n-\t\t\t\tDebugInformationFormat=\"4\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCCustomBuildTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCLinkerTool\"\r\n-\t\t\t\tOutputFile=\"$(OutDir)/testzlib.exe\"\r\n-\t\t\t\tLinkIncremental=\"2\"\r\n-\t\t\t\tGenerateDebugInformation=\"TRUE\"\r\n-\t\t\t\tProgramDatabaseFile=\"$(OutDir)/testzlib.pdb\"\r\n-\t\t\t\tSubSystem=\"1\"\r\n-\t\t\t\tTargetMachine=\"1\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCMIDLTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPostBuildEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPreBuildEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPreLinkEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCResourceCompilerTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebServiceProxyGeneratorTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"/>\r\n-\t\t</Configuration>\r\n-\t\t<Configuration\r\n-\t\t\tName=\"Release|Win32\"\r\n-\t\t\tOutputDirectory=\"Release\"\r\n-\t\t\tIntermediateDirectory=\"Release\"\r\n-\t\t\tConfigurationType=\"1\"\r\n-\t\t\tCharacterSet=\"2\">\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\tOptimization=\"2\"\r\n-\t\t\t\tInlineFunctionExpansion=\"1\"\r\n-\t\t\t\tOmitFramePointers=\"TRUE\"\r\n-\t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..\"\r\n-\t\t\t\tPreprocessorDefinitions=\"WIN32;ZLIB_WINAPI;NDEBUG;_CONSOLE\"\r\n-\t\t\t\tStringPooling=\"TRUE\"\r\n-\t\t\t\tRuntimeLibrary=\"4\"\r\n-\t\t\t\tEnableFunctionLevelLinking=\"TRUE\"\r\n-\t\t\t\tUsePrecompiledHeader=\"0\"\r\n-\t\t\t\tWarningLevel=\"3\"\r\n-\t\t\t\tDetect64BitPortabilityProblems=\"TRUE\"\r\n-\t\t\t\tDebugInformationFormat=\"3\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCCustomBuildTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCLinkerTool\"\r\n-\t\t\t\tOutputFile=\"$(OutDir)/testzlib.exe\"\r\n-\t\t\t\tLinkIncremental=\"1\"\r\n-\t\t\t\tGenerateDebugInformation=\"TRUE\"\r\n-\t\t\t\tSubSystem=\"1\"\r\n-\t\t\t\tOptimizeReferences=\"2\"\r\n-\t\t\t\tEnableCOMDATFolding=\"2\"\r\n-\t\t\t\tOptimizeForWindows98=\"1\"\r\n-\t\t\t\tTargetMachine=\"1\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCMIDLTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPostBuildEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPreBuildEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPreLinkEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCResourceCompilerTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebServiceProxyGeneratorTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"/>\r\n-\t\t</Configuration>\r\n-\t</Configurations>\r\n-\t<Files>\r\n-\t\t<Filter\r\n-\t\t\tName=\"Source Files\"\r\n-\t\t\tFilter=\"cpp;c;cxx;def;odl;idl;hpj;bat;asm\">\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\testzlib\\testzlib.c\">\r\n-\t\t\t</File>\r\n-\t\t</Filter>\r\n-\t\t<Filter\r\n-\t\t\tName=\"Header Files\"\r\n-\t\t\tFilter=\"h;hpp;hxx;hm;inl;inc\">\r\n-\t\t</Filter>\r\n-\t\t<Filter\r\n-\t\t\tName=\"Resource Files\"\r\n-\t\t\tFilter=\"rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe\">\r\n-\t\t</Filter>\r\n-\t\t<File\r\n-\t\t\tRelativePath=\"ReleaseDll\\zlibwapi.lib\">\r\n-\t\t</File>\r\n-\t</Files>\r\n-\t<Globals>\r\n-\t</Globals>\r\n-</VisualStudioProject>\r"}, {"sha": "766d7a4d6e7b86e78e517331801527dc374605db", "filename": "zlib/contrib/vstudio/vc7/zlibstat.vcproj", "status": "removed", "additions": 0, "deletions": 246, "changes": 246, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d216c70d980e3169b42e9734cf4bea1648ff8f0/zlib%2Fcontrib%2Fvstudio%2Fvc7%2Fzlibstat.vcproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d216c70d980e3169b42e9734cf4bea1648ff8f0/zlib%2Fcontrib%2Fvstudio%2Fvc7%2Fzlibstat.vcproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc7%2Fzlibstat.vcproj?ref=5d216c70d980e3169b42e9734cf4bea1648ff8f0", "patch": "@@ -1,246 +0,0 @@\n-<?xml version=\"1.0\" encoding = \"Windows-1252\"?>\r\n-<VisualStudioProject\r\n-\tProjectType=\"Visual C++\"\r\n-\tVersion=\"7.00\"\r\n-\tName=\"zlibstat\"\r\n-\tSccProjectName=\"\"\r\n-\tSccLocalPath=\"\">\r\n-\t<Platforms>\r\n-\t\t<Platform\r\n-\t\t\tName=\"Win32\"/>\r\n-\t</Platforms>\r\n-\t<Configurations>\r\n-\t\t<Configuration\r\n-\t\t\tName=\"Debug|Win32\"\r\n-\t\t\tOutputDirectory=\".\\zlibstatDebug\"\r\n-\t\t\tIntermediateDirectory=\".\\zlibstatDebug\"\r\n-\t\t\tConfigurationType=\"4\"\r\n-\t\t\tUseOfMFC=\"0\"\r\n-\t\t\tATLMinimizesCRunTimeLibraryUsage=\"FALSE\">\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\tOptimization=\"0\"\r\n-\t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\masmx86\"\r\n-\t\t\t\tPreprocessorDefinitions=\"WIN32;ZLIB_WINAPI\"\r\n-\t\t\t\tExceptionHandling=\"FALSE\"\r\n-\t\t\t\tRuntimeLibrary=\"5\"\r\n-\t\t\t\tPrecompiledHeaderFile=\".\\zlibstatDebug/zlibstat.pch\"\r\n-\t\t\t\tAssemblerListingLocation=\".\\zlibstatDebug/\"\r\n-\t\t\t\tObjectFile=\".\\zlibstatDebug/\"\r\n-\t\t\t\tProgramDataBaseFileName=\".\\zlibstatDebug/\"\r\n-\t\t\t\tWarningLevel=\"3\"\r\n-\t\t\t\tSuppressStartupBanner=\"TRUE\"\r\n-\t\t\t\tDebugInformationFormat=\"1\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCCustomBuildTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCLibrarianTool\"\r\n-\t\t\t\tAdditionalOptions=\"/NODEFAULTLIB \"\r\n-\t\t\t\tOutputFile=\".\\zlibstatDebug\\zlibstat.lib\"\r\n-\t\t\t\tSuppressStartupBanner=\"TRUE\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCMIDLTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPostBuildEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPreBuildEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPreLinkEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCResourceCompilerTool\"\r\n-\t\t\t\tCulture=\"1036\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebServiceProxyGeneratorTool\"/>\r\n-\t\t</Configuration>\r\n-\t\t<Configuration\r\n-\t\t\tName=\"ReleaseAxp|Win32\"\r\n-\t\t\tOutputDirectory=\".\\zlibsta0\"\r\n-\t\t\tIntermediateDirectory=\".\\zlibsta0\"\r\n-\t\t\tConfigurationType=\"4\"\r\n-\t\t\tUseOfMFC=\"0\"\r\n-\t\t\tATLMinimizesCRunTimeLibraryUsage=\"FALSE\">\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\tInlineFunctionExpansion=\"1\"\r\n-\t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\masmx86\"\r\n-\t\t\t\tPreprocessorDefinitions=\"WIN32;ZLIB_WINAPI\"\r\n-\t\t\t\tStringPooling=\"TRUE\"\r\n-\t\t\t\tExceptionHandling=\"FALSE\"\r\n-\t\t\t\tRuntimeLibrary=\"4\"\r\n-\t\t\t\tEnableFunctionLevelLinking=\"TRUE\"\r\n-\t\t\t\tPrecompiledHeaderFile=\".\\zlibsta0/zlibstat.pch\"\r\n-\t\t\t\tAssemblerListingLocation=\".\\zlibsta0/\"\r\n-\t\t\t\tObjectFile=\".\\zlibsta0/\"\r\n-\t\t\t\tProgramDataBaseFileName=\".\\zlibsta0/\"\r\n-\t\t\t\tWarningLevel=\"3\"\r\n-\t\t\t\tSuppressStartupBanner=\"TRUE\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCCustomBuildTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCLibrarianTool\"\r\n-\t\t\t\tAdditionalOptions=\"/NODEFAULTLIB \"\r\n-\t\t\t\tOutputFile=\".\\zlibsta0\\zlibstat.lib\"\r\n-\t\t\t\tSuppressStartupBanner=\"TRUE\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCMIDLTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPostBuildEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPreBuildEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPreLinkEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCResourceCompilerTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebServiceProxyGeneratorTool\"/>\r\n-\t\t</Configuration>\r\n-\t\t<Configuration\r\n-\t\t\tName=\"Release|Win32\"\r\n-\t\t\tOutputDirectory=\".\\zlibstat\"\r\n-\t\t\tIntermediateDirectory=\".\\zlibstat\"\r\n-\t\t\tConfigurationType=\"4\"\r\n-\t\t\tUseOfMFC=\"0\"\r\n-\t\t\tATLMinimizesCRunTimeLibraryUsage=\"FALSE\">\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\tInlineFunctionExpansion=\"1\"\r\n-\t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\masmx86\"\r\n-\t\t\t\tPreprocessorDefinitions=\"WIN32;ZLIB_WINAPI;ASMV;ASMINF\"\r\n-\t\t\t\tStringPooling=\"TRUE\"\r\n-\t\t\t\tExceptionHandling=\"FALSE\"\r\n-\t\t\t\tRuntimeLibrary=\"4\"\r\n-\t\t\t\tEnableFunctionLevelLinking=\"TRUE\"\r\n-\t\t\t\tPrecompiledHeaderFile=\".\\zlibstat/zlibstat.pch\"\r\n-\t\t\t\tAssemblerListingLocation=\".\\zlibstat/\"\r\n-\t\t\t\tObjectFile=\".\\zlibstat/\"\r\n-\t\t\t\tProgramDataBaseFileName=\".\\zlibstat/\"\r\n-\t\t\t\tWarningLevel=\"3\"\r\n-\t\t\t\tSuppressStartupBanner=\"TRUE\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCCustomBuildTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCLibrarianTool\"\r\n-\t\t\t\tAdditionalOptions=\"..\\..\\masmx86\\gvmat32.obj ..\\..\\masmx86\\inffas32.obj /NODEFAULTLIB \"\r\n-\t\t\t\tOutputFile=\".\\zlibstat\\zlibstat.lib\"\r\n-\t\t\t\tSuppressStartupBanner=\"TRUE\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCMIDLTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPostBuildEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPreBuildEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPreLinkEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCResourceCompilerTool\"\r\n-\t\t\t\tCulture=\"1036\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebServiceProxyGeneratorTool\"/>\r\n-\t\t</Configuration>\r\n-\t\t<Configuration\r\n-\t\t\tName=\"ReleaseWithoutAsm|Win32\"\r\n-\t\t\tOutputDirectory=\"zlibstatWithoutAsm\"\r\n-\t\t\tIntermediateDirectory=\"zlibstatWithoutAsm\"\r\n-\t\t\tConfigurationType=\"4\"\r\n-\t\t\tUseOfMFC=\"0\"\r\n-\t\t\tATLMinimizesCRunTimeLibraryUsage=\"FALSE\">\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\tInlineFunctionExpansion=\"1\"\r\n-\t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\masmx86\"\r\n-\t\t\t\tPreprocessorDefinitions=\"WIN32;ZLIB_WINAPI\"\r\n-\t\t\t\tStringPooling=\"TRUE\"\r\n-\t\t\t\tExceptionHandling=\"FALSE\"\r\n-\t\t\t\tRuntimeLibrary=\"4\"\r\n-\t\t\t\tEnableFunctionLevelLinking=\"TRUE\"\r\n-\t\t\t\tPrecompiledHeaderFile=\".\\zlibstat/zlibstat.pch\"\r\n-\t\t\t\tAssemblerListingLocation=\".\\zlibstatWithoutAsm/\"\r\n-\t\t\t\tObjectFile=\".\\zlibstatWithoutAsm/\"\r\n-\t\t\t\tProgramDataBaseFileName=\".\\zlibstatWithoutAsm/\"\r\n-\t\t\t\tWarningLevel=\"3\"\r\n-\t\t\t\tSuppressStartupBanner=\"TRUE\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCCustomBuildTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCLibrarianTool\"\r\n-\t\t\t\tAdditionalOptions=\" /NODEFAULTLIB \"\r\n-\t\t\t\tOutputFile=\".\\zlibstatWithoutAsm\\zlibstat.lib\"\r\n-\t\t\t\tSuppressStartupBanner=\"TRUE\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCMIDLTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPostBuildEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPreBuildEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPreLinkEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCResourceCompilerTool\"\r\n-\t\t\t\tCulture=\"1036\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebServiceProxyGeneratorTool\"/>\r\n-\t\t</Configuration>\r\n-\t</Configurations>\r\n-\t<Files>\r\n-\t\t<Filter\r\n-\t\t\tName=\"Source Files\"\r\n-\t\t\tFilter=\"\">\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\adler32.c\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\compress.c\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\crc32.c\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\deflate.c\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\masmx86\\gvmat32c.c\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\gzio.c\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\infback.c\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\inffast.c\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\inflate.c\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\inftrees.c\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\minizip\\ioapi.c\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\trees.c\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\uncompr.c\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\minizip\\unzip.c\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\minizip\\zip.c\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\".\\zlib.rc\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\".\\zlibvc.def\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\zutil.c\">\r\n-\t\t\t</File>\r\n-\t\t</Filter>\r\n-\t</Files>\r\n-\t<Globals>\r\n-\t</Globals>\r\n-</VisualStudioProject>\r"}, {"sha": "927b42b7bde0570787ebc6add0859072e5515b53", "filename": "zlib/contrib/vstudio/vc7/zlibvc.sln", "status": "removed", "additions": 0, "deletions": 78, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d216c70d980e3169b42e9734cf4bea1648ff8f0/zlib%2Fcontrib%2Fvstudio%2Fvc7%2Fzlibvc.sln", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d216c70d980e3169b42e9734cf4bea1648ff8f0/zlib%2Fcontrib%2Fvstudio%2Fvc7%2Fzlibvc.sln", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc7%2Fzlibvc.sln?ref=5d216c70d980e3169b42e9734cf4bea1648ff8f0", "patch": "@@ -1,78 +0,0 @@\n-Microsoft Visual Studio Solution File, Format Version 7.00\r\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"zlibstat\", \"zlibstat.vcproj\", \"{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}\"\r\n-EndProject\r\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"zlibvc\", \"zlibvc.vcproj\", \"{8FD826F8-3739-44E6-8CC8-997122E53B8D}\"\r\n-EndProject\r\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"minizip\", \"minizip.vcproj\", \"{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}\"\r\n-EndProject\r\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"miniunz\", \"miniunz.vcproj\", \"{C52F9E7B-498A-42BE-8DB4-85A15694382A}\"\r\n-EndProject\r\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"testZlibDll\", \"testzlib.vcproj\", \"{AA6666AA-E09F-4135-9C0C-4FE50C3C654C}\"\r\n-EndProject\r\n-Global\r\n-\tGlobalSection(SolutionConfiguration) = preSolution\r\n-\t\tConfigName.0 = Debug\r\n-\t\tConfigName.1 = Release\r\n-\t\tConfigName.2 = ReleaseAxp\r\n-\t\tConfigName.3 = ReleaseWithoutAsm\r\n-\t\tConfigName.4 = ReleaseWithoutCrtdll\r\n-\tEndGlobalSection\r\n-\tGlobalSection(ProjectDependencies) = postSolution\r\n-\tEndGlobalSection\r\n-\tGlobalSection(ProjectConfiguration) = postSolution\r\n-\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Debug.ActiveCfg = Debug|Win32\r\n-\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Debug.Build.0 = Debug|Win32\r\n-\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Release.ActiveCfg = Release|Win32\r\n-\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Release.Build.0 = Release|Win32\r\n-\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.ReleaseAxp.ActiveCfg = ReleaseAxp|Win32\r\n-\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.ReleaseAxp.Build.0 = ReleaseAxp|Win32\r\n-\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.ReleaseWithoutAsm.ActiveCfg = ReleaseWithoutAsm|Win32\r\n-\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.ReleaseWithoutAsm.Build.0 = ReleaseWithoutAsm|Win32\r\n-\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.ReleaseWithoutCrtdll.ActiveCfg = ReleaseAxp|Win32\r\n-\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.ReleaseWithoutCrtdll.Build.0 = ReleaseAxp|Win32\r\n-\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Debug.ActiveCfg = Debug|Win32\r\n-\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Debug.Build.0 = Debug|Win32\r\n-\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Release.ActiveCfg = Release|Win32\r\n-\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Release.Build.0 = Release|Win32\r\n-\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.ReleaseAxp.ActiveCfg = ReleaseAxp|Win32\r\n-\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.ReleaseAxp.Build.0 = ReleaseAxp|Win32\r\n-\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.ReleaseWithoutAsm.ActiveCfg = ReleaseWithoutAsm|Win32\r\n-\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.ReleaseWithoutAsm.Build.0 = ReleaseWithoutAsm|Win32\r\n-\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.ReleaseWithoutCrtdll.ActiveCfg = ReleaseWithoutCrtdll|Win32\r\n-\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.ReleaseWithoutCrtdll.Build.0 = ReleaseWithoutCrtdll|Win32\r\n-\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Debug.ActiveCfg = Debug|Win32\r\n-\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Debug.Build.0 = Debug|Win32\r\n-\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Release.ActiveCfg = Release|Win32\r\n-\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Release.Build.0 = Release|Win32\r\n-\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.ReleaseAxp.ActiveCfg = Release|Win32\r\n-\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.ReleaseAxp.Build.0 = Release|Win32\r\n-\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm.ActiveCfg = Release|Win32\r\n-\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm.Build.0 = Release|Win32\r\n-\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutCrtdll.ActiveCfg = Release|Win32\r\n-\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutCrtdll.Build.0 = Release|Win32\r\n-\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Debug.ActiveCfg = Debug|Win32\r\n-\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Debug.Build.0 = Debug|Win32\r\n-\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Release.ActiveCfg = Release|Win32\r\n-\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Release.Build.0 = Release|Win32\r\n-\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.ReleaseAxp.ActiveCfg = Release|Win32\r\n-\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.ReleaseAxp.Build.0 = Release|Win32\r\n-\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.ReleaseWithoutAsm.ActiveCfg = Release|Win32\r\n-\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.ReleaseWithoutAsm.Build.0 = Release|Win32\r\n-\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.ReleaseWithoutCrtdll.ActiveCfg = Release|Win32\r\n-\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.ReleaseWithoutCrtdll.Build.0 = Release|Win32\r\n-\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654C}.Debug.ActiveCfg = Debug|Win32\r\n-\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654C}.Debug.Build.0 = Debug|Win32\r\n-\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654C}.Release.ActiveCfg = Release|Win32\r\n-\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654C}.Release.Build.0 = Release|Win32\r\n-\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654C}.ReleaseAxp.ActiveCfg = Release|Win32\r\n-\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654C}.ReleaseAxp.Build.0 = Release|Win32\r\n-\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654C}.ReleaseWithoutAsm.ActiveCfg = Release|Win32\r\n-\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654C}.ReleaseWithoutAsm.Build.0 = Release|Win32\r\n-\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654C}.ReleaseWithoutCrtdll.ActiveCfg = Release|Win32\r\n-\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654C}.ReleaseWithoutCrtdll.Build.0 = Release|Win32\r\n-\tEndGlobalSection\r\n-\tGlobalSection(ExtensibilityGlobals) = postSolution\r\n-\tEndGlobalSection\r\n-\tGlobalSection(ExtensibilityAddIns) = postSolution\r\n-\tEndGlobalSection\r\n-EndGlobal\r"}, {"sha": "8533b49475e1b4ab0f47886e96c4fc72fed3f361", "filename": "zlib/contrib/vstudio/vc7/zlibvc.vcproj", "status": "removed", "additions": 0, "deletions": 445, "changes": 445, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d216c70d980e3169b42e9734cf4bea1648ff8f0/zlib%2Fcontrib%2Fvstudio%2Fvc7%2Fzlibvc.vcproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d216c70d980e3169b42e9734cf4bea1648ff8f0/zlib%2Fcontrib%2Fvstudio%2Fvc7%2Fzlibvc.vcproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc7%2Fzlibvc.vcproj?ref=5d216c70d980e3169b42e9734cf4bea1648ff8f0", "patch": "@@ -1,445 +0,0 @@\n-<?xml version=\"1.0\" encoding = \"Windows-1252\"?>\r\n-<VisualStudioProject\r\n-\tProjectType=\"Visual C++\"\r\n-\tVersion=\"7.00\"\r\n-\tName=\"zlibvc\"\r\n-\tSccProjectName=\"\"\r\n-\tSccLocalPath=\"\">\r\n-\t<Platforms>\r\n-\t\t<Platform\r\n-\t\t\tName=\"Win32\"/>\r\n-\t</Platforms>\r\n-\t<Configurations>\r\n-\t\t<Configuration\r\n-\t\t\tName=\"Debug|Win32\"\r\n-\t\t\tOutputDirectory=\".\\DebugDll\"\r\n-\t\t\tIntermediateDirectory=\".\\DebugDll\"\r\n-\t\t\tConfigurationType=\"2\"\r\n-\t\t\tUseOfMFC=\"0\"\r\n-\t\t\tATLMinimizesCRunTimeLibraryUsage=\"FALSE\">\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\tOptimization=\"0\"\r\n-\t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\masmx86\"\r\n-\t\t\t\tPreprocessorDefinitions=\"WIN32,ZLIB_WINAPI,ASMV,ASMINF\"\r\n-\t\t\t\tExceptionHandling=\"FALSE\"\r\n-\t\t\t\tRuntimeLibrary=\"1\"\r\n-\t\t\t\tPrecompiledHeaderFile=\".\\DebugDll/zlibvc.pch\"\r\n-\t\t\t\tAssemblerListingLocation=\".\\DebugDll/\"\r\n-\t\t\t\tObjectFile=\".\\DebugDll/\"\r\n-\t\t\t\tProgramDataBaseFileName=\".\\DebugDll/\"\r\n-\t\t\t\tWarningLevel=\"3\"\r\n-\t\t\t\tSuppressStartupBanner=\"TRUE\"\r\n-\t\t\t\tDebugInformationFormat=\"4\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCCustomBuildTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCLinkerTool\"\r\n-\t\t\t\tAdditionalOptions=\"/MACHINE:I386\"\r\n-\t\t\t\tAdditionalDependencies=\"..\\..\\masmx86\\gvmat32.obj ..\\..\\masmx86\\inffas32.obj\"\r\n-\t\t\t\tOutputFile=\".\\DebugDll\\zlibwapi.dll\"\r\n-\t\t\t\tLinkIncremental=\"2\"\r\n-\t\t\t\tSuppressStartupBanner=\"TRUE\"\r\n-\t\t\t\tModuleDefinitionFile=\".\\zlibvc.def\"\r\n-\t\t\t\tGenerateDebugInformation=\"TRUE\"\r\n-\t\t\t\tProgramDatabaseFile=\".\\DebugDll/zlibwapi.pdb\"\r\n-\t\t\t\tSubSystem=\"2\"\r\n-\t\t\t\tImportLibrary=\".\\DebugDll/zlibwapi.lib\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCMIDLTool\"\r\n-\t\t\t\tPreprocessorDefinitions=\"_DEBUG\"\r\n-\t\t\t\tMkTypLibCompatible=\"TRUE\"\r\n-\t\t\t\tSuppressStartupBanner=\"TRUE\"\r\n-\t\t\t\tTargetEnvironment=\"1\"\r\n-\t\t\t\tTypeLibraryName=\".\\DebugDll/zlibvc.tlb\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPostBuildEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPreBuildEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPreLinkEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCResourceCompilerTool\"\r\n-\t\t\t\tPreprocessorDefinitions=\"_DEBUG\"\r\n-\t\t\t\tCulture=\"1036\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebServiceProxyGeneratorTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"/>\r\n-\t\t</Configuration>\r\n-\t\t<Configuration\r\n-\t\t\tName=\"ReleaseWithoutAsm|Win32\"\r\n-\t\t\tOutputDirectory=\".\\zlibDllWithoutAsm\"\r\n-\t\t\tIntermediateDirectory=\".\\zlibDllWithoutAsm\"\r\n-\t\t\tConfigurationType=\"2\"\r\n-\t\t\tUseOfMFC=\"0\"\r\n-\t\t\tATLMinimizesCRunTimeLibraryUsage=\"FALSE\"\r\n-\t\t\tWholeProgramOptimization=\"TRUE\">\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\tInlineFunctionExpansion=\"1\"\r\n-\t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\masmx86\"\r\n-\t\t\t\tPreprocessorDefinitions=\"WIN32,ZLIB_WINAPI\"\r\n-\t\t\t\tStringPooling=\"TRUE\"\r\n-\t\t\t\tExceptionHandling=\"FALSE\"\r\n-\t\t\t\tRuntimeLibrary=\"0\"\r\n-\t\t\t\tEnableFunctionLevelLinking=\"TRUE\"\r\n-\t\t\t\tPrecompiledHeaderFile=\".\\zlibDllWithoutAsm/zlibvc.pch\"\r\n-\t\t\t\tAssemblerOutput=\"2\"\r\n-\t\t\t\tAssemblerListingLocation=\".\\zlibDllWithoutAsm/\"\r\n-\t\t\t\tObjectFile=\".\\zlibDllWithoutAsm/\"\r\n-\t\t\t\tProgramDataBaseFileName=\".\\zlibDllWithoutAsm/\"\r\n-\t\t\t\tBrowseInformation=\"1\"\r\n-\t\t\t\tWarningLevel=\"3\"\r\n-\t\t\t\tSuppressStartupBanner=\"TRUE\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCCustomBuildTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCLinkerTool\"\r\n-\t\t\t\tAdditionalOptions=\"/MACHINE:I386\"\r\n-\t\t\t\tAdditionalDependencies=\"crtdll.lib\"\r\n-\t\t\t\tOutputFile=\".\\zlibDllWithoutAsm\\zlibwapi.dll\"\r\n-\t\t\t\tLinkIncremental=\"1\"\r\n-\t\t\t\tSuppressStartupBanner=\"TRUE\"\r\n-\t\t\t\tIgnoreAllDefaultLibraries=\"TRUE\"\r\n-\t\t\t\tModuleDefinitionFile=\".\\zlibvc.def\"\r\n-\t\t\t\tProgramDatabaseFile=\".\\zlibDllWithoutAsm/zlibwapi.pdb\"\r\n-\t\t\t\tGenerateMapFile=\"TRUE\"\r\n-\t\t\t\tMapFileName=\".\\zlibDllWithoutAsm/zlibwapi.map\"\r\n-\t\t\t\tSubSystem=\"2\"\r\n-\t\t\t\tOptimizeForWindows98=\"1\"\r\n-\t\t\t\tImportLibrary=\".\\zlibDllWithoutAsm/zlibwapi.lib\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCMIDLTool\"\r\n-\t\t\t\tPreprocessorDefinitions=\"NDEBUG\"\r\n-\t\t\t\tMkTypLibCompatible=\"TRUE\"\r\n-\t\t\t\tSuppressStartupBanner=\"TRUE\"\r\n-\t\t\t\tTargetEnvironment=\"1\"\r\n-\t\t\t\tTypeLibraryName=\".\\zlibDllWithoutAsm/zlibvc.tlb\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPostBuildEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPreBuildEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPreLinkEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCResourceCompilerTool\"\r\n-\t\t\t\tPreprocessorDefinitions=\"NDEBUG\"\r\n-\t\t\t\tCulture=\"1036\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebServiceProxyGeneratorTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"/>\r\n-\t\t</Configuration>\r\n-\t\t<Configuration\r\n-\t\t\tName=\"ReleaseWithoutCrtdll|Win32\"\r\n-\t\t\tOutputDirectory=\".\\zlibDllWithoutCrtDll\"\r\n-\t\t\tIntermediateDirectory=\".\\zlibDllWithoutCrtDll\"\r\n-\t\t\tConfigurationType=\"2\"\r\n-\t\t\tUseOfMFC=\"0\"\r\n-\t\t\tATLMinimizesCRunTimeLibraryUsage=\"FALSE\"\r\n-\t\t\tWholeProgramOptimization=\"TRUE\">\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\tInlineFunctionExpansion=\"1\"\r\n-\t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\masmx86\"\r\n-\t\t\t\tPreprocessorDefinitions=\"WIN32,ZLIB_WINAPI,ASMV,ASMINF\"\r\n-\t\t\t\tStringPooling=\"TRUE\"\r\n-\t\t\t\tExceptionHandling=\"FALSE\"\r\n-\t\t\t\tRuntimeLibrary=\"0\"\r\n-\t\t\t\tEnableFunctionLevelLinking=\"TRUE\"\r\n-\t\t\t\tPrecompiledHeaderFile=\".\\zlibDllWithoutCrtDll/zlibvc.pch\"\r\n-\t\t\t\tAssemblerOutput=\"2\"\r\n-\t\t\t\tAssemblerListingLocation=\".\\zlibDllWithoutCrtDll/\"\r\n-\t\t\t\tObjectFile=\".\\zlibDllWithoutCrtDll/\"\r\n-\t\t\t\tProgramDataBaseFileName=\".\\zlibDllWithoutCrtDll/\"\r\n-\t\t\t\tBrowseInformation=\"1\"\r\n-\t\t\t\tWarningLevel=\"3\"\r\n-\t\t\t\tSuppressStartupBanner=\"TRUE\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCCustomBuildTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCLinkerTool\"\r\n-\t\t\t\tAdditionalOptions=\"/MACHINE:I386\"\r\n-\t\t\t\tAdditionalDependencies=\"..\\..\\masmx86\\gvmat32.obj ..\\..\\masmx86\\inffas32.obj \"\r\n-\t\t\t\tOutputFile=\".\\zlibDllWithoutCrtDll\\zlibwapi.dll\"\r\n-\t\t\t\tLinkIncremental=\"1\"\r\n-\t\t\t\tSuppressStartupBanner=\"TRUE\"\r\n-\t\t\t\tIgnoreAllDefaultLibraries=\"FALSE\"\r\n-\t\t\t\tModuleDefinitionFile=\".\\zlibvc.def\"\r\n-\t\t\t\tProgramDatabaseFile=\".\\zlibDllWithoutCrtDll/zlibwapi.pdb\"\r\n-\t\t\t\tGenerateMapFile=\"TRUE\"\r\n-\t\t\t\tMapFileName=\".\\zlibDllWithoutCrtDll/zlibwapi.map\"\r\n-\t\t\t\tSubSystem=\"2\"\r\n-\t\t\t\tOptimizeForWindows98=\"1\"\r\n-\t\t\t\tImportLibrary=\".\\zlibDllWithoutCrtDll/zlibwapi.lib\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCMIDLTool\"\r\n-\t\t\t\tPreprocessorDefinitions=\"NDEBUG\"\r\n-\t\t\t\tMkTypLibCompatible=\"TRUE\"\r\n-\t\t\t\tSuppressStartupBanner=\"TRUE\"\r\n-\t\t\t\tTargetEnvironment=\"1\"\r\n-\t\t\t\tTypeLibraryName=\".\\zlibDllWithoutCrtDll/zlibvc.tlb\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPostBuildEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPreBuildEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPreLinkEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCResourceCompilerTool\"\r\n-\t\t\t\tPreprocessorDefinitions=\"NDEBUG\"\r\n-\t\t\t\tCulture=\"1036\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebServiceProxyGeneratorTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"/>\r\n-\t\t</Configuration>\r\n-\t\t<Configuration\r\n-\t\t\tName=\"ReleaseAxp|Win32\"\r\n-\t\t\tOutputDirectory=\".\\zlibvc__\"\r\n-\t\t\tIntermediateDirectory=\".\\zlibvc__\"\r\n-\t\t\tConfigurationType=\"2\"\r\n-\t\t\tUseOfMFC=\"0\"\r\n-\t\t\tATLMinimizesCRunTimeLibraryUsage=\"FALSE\"\r\n-\t\t\tWholeProgramOptimization=\"TRUE\">\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\tInlineFunctionExpansion=\"1\"\r\n-\t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\masmx86\"\r\n-\t\t\t\tPreprocessorDefinitions=\"WIN32,ZLIB_WINAPI\"\r\n-\t\t\t\tStringPooling=\"TRUE\"\r\n-\t\t\t\tExceptionHandling=\"FALSE\"\r\n-\t\t\t\tRuntimeLibrary=\"0\"\r\n-\t\t\t\tEnableFunctionLevelLinking=\"TRUE\"\r\n-\t\t\t\tPrecompiledHeaderFile=\".\\zlibvc__/zlibvc.pch\"\r\n-\t\t\t\tAssemblerOutput=\"2\"\r\n-\t\t\t\tAssemblerListingLocation=\".\\zlibvc__/\"\r\n-\t\t\t\tObjectFile=\".\\zlibvc__/\"\r\n-\t\t\t\tProgramDataBaseFileName=\".\\zlibvc__/\"\r\n-\t\t\t\tBrowseInformation=\"1\"\r\n-\t\t\t\tWarningLevel=\"3\"\r\n-\t\t\t\tSuppressStartupBanner=\"TRUE\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCCustomBuildTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCLinkerTool\"\r\n-\t\t\t\tAdditionalDependencies=\"crtdll.lib\"\r\n-\t\t\t\tOutputFile=\"zlibvc__\\zlibwapi.dll\"\r\n-\t\t\t\tLinkIncremental=\"1\"\r\n-\t\t\t\tSuppressStartupBanner=\"TRUE\"\r\n-\t\t\t\tIgnoreAllDefaultLibraries=\"TRUE\"\r\n-\t\t\t\tModuleDefinitionFile=\".\\zlibvc.def\"\r\n-\t\t\t\tProgramDatabaseFile=\".\\zlibvc__/zlibwapi.pdb\"\r\n-\t\t\t\tGenerateMapFile=\"TRUE\"\r\n-\t\t\t\tMapFileName=\".\\zlibvc__/zlibwapi.map\"\r\n-\t\t\t\tSubSystem=\"2\"\r\n-\t\t\t\tImportLibrary=\".\\zlibvc__/zlibwapi.lib\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCMIDLTool\"\r\n-\t\t\t\tPreprocessorDefinitions=\"NDEBUG\"\r\n-\t\t\t\tMkTypLibCompatible=\"TRUE\"\r\n-\t\t\t\tSuppressStartupBanner=\"TRUE\"\r\n-\t\t\t\tTargetEnvironment=\"1\"\r\n-\t\t\t\tTypeLibraryName=\".\\zlibvc__/zlibvc.tlb\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPostBuildEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPreBuildEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPreLinkEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCResourceCompilerTool\"\r\n-\t\t\t\tPreprocessorDefinitions=\"NDEBUG\"\r\n-\t\t\t\tCulture=\"1036\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebServiceProxyGeneratorTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"/>\r\n-\t\t</Configuration>\r\n-\t\t<Configuration\r\n-\t\t\tName=\"Release|Win32\"\r\n-\t\t\tOutputDirectory=\".\\ReleaseDll\"\r\n-\t\t\tIntermediateDirectory=\".\\ReleaseDll\"\r\n-\t\t\tConfigurationType=\"2\"\r\n-\t\t\tUseOfMFC=\"0\"\r\n-\t\t\tATLMinimizesCRunTimeLibraryUsage=\"FALSE\"\r\n-\t\t\tWholeProgramOptimization=\"TRUE\">\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\tInlineFunctionExpansion=\"1\"\r\n-\t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\masmx86\"\r\n-\t\t\t\tPreprocessorDefinitions=\"WIN32,ZLIB_WINAPI,ASMV,ASMINF\"\r\n-\t\t\t\tStringPooling=\"TRUE\"\r\n-\t\t\t\tExceptionHandling=\"FALSE\"\r\n-\t\t\t\tRuntimeLibrary=\"0\"\r\n-\t\t\t\tEnableFunctionLevelLinking=\"TRUE\"\r\n-\t\t\t\tPrecompiledHeaderFile=\".\\ReleaseDll/zlibvc.pch\"\r\n-\t\t\t\tAssemblerOutput=\"2\"\r\n-\t\t\t\tAssemblerListingLocation=\".\\ReleaseDll/\"\r\n-\t\t\t\tObjectFile=\".\\ReleaseDll/\"\r\n-\t\t\t\tProgramDataBaseFileName=\".\\ReleaseDll/\"\r\n-\t\t\t\tBrowseInformation=\"1\"\r\n-\t\t\t\tWarningLevel=\"3\"\r\n-\t\t\t\tSuppressStartupBanner=\"TRUE\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCCustomBuildTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCLinkerTool\"\r\n-\t\t\t\tAdditionalOptions=\"/MACHINE:I386\"\r\n-\t\t\t\tAdditionalDependencies=\"..\\..\\masmx86\\gvmat32.obj ..\\..\\masmx86\\inffas32.obj crtdll.lib\"\r\n-\t\t\t\tOutputFile=\".\\ReleaseDll\\zlibwapi.dll\"\r\n-\t\t\t\tLinkIncremental=\"1\"\r\n-\t\t\t\tSuppressStartupBanner=\"TRUE\"\r\n-\t\t\t\tIgnoreAllDefaultLibraries=\"TRUE\"\r\n-\t\t\t\tModuleDefinitionFile=\".\\zlibvc.def\"\r\n-\t\t\t\tProgramDatabaseFile=\".\\ReleaseDll/zlibwapi.pdb\"\r\n-\t\t\t\tGenerateMapFile=\"TRUE\"\r\n-\t\t\t\tMapFileName=\".\\ReleaseDll/zlibwapi.map\"\r\n-\t\t\t\tSubSystem=\"2\"\r\n-\t\t\t\tOptimizeForWindows98=\"1\"\r\n-\t\t\t\tImportLibrary=\".\\ReleaseDll/zlibwapi.lib\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCMIDLTool\"\r\n-\t\t\t\tPreprocessorDefinitions=\"NDEBUG\"\r\n-\t\t\t\tMkTypLibCompatible=\"TRUE\"\r\n-\t\t\t\tSuppressStartupBanner=\"TRUE\"\r\n-\t\t\t\tTargetEnvironment=\"1\"\r\n-\t\t\t\tTypeLibraryName=\".\\Release/zlibvc.tlb\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPostBuildEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPreBuildEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCPreLinkEventTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCResourceCompilerTool\"\r\n-\t\t\t\tPreprocessorDefinitions=\"NDEBUG\"\r\n-\t\t\t\tCulture=\"1036\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebServiceProxyGeneratorTool\"/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"/>\r\n-\t\t</Configuration>\r\n-\t</Configurations>\r\n-\t<Files>\r\n-\t\t<Filter\r\n-\t\t\tName=\"Source Files\"\r\n-\t\t\tFilter=\"cpp;c;cxx;rc;def;r;odl;hpj;bat;for;f90\">\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\adler32.c\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\compress.c\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\crc32.c\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\deflate.c\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\masmx86\\gvmat32c.c\">\r\n-\t\t\t\t<FileConfiguration\r\n-\t\t\t\t\tName=\"ReleaseWithoutAsm|Win32\"\r\n-\t\t\t\t\tExcludedFromBuild=\"TRUE\">\r\n-\t\t\t\t\t<Tool\r\n-\t\t\t\t\t\tName=\"VCCLCompilerTool\"/>\r\n-\t\t\t\t</FileConfiguration>\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\gzio.c\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\infback.c\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\inffast.c\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\inflate.c\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\inftrees.c\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\minizip\\ioapi.c\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\minizip\\iowin32.c\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\trees.c\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\uncompr.c\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\minizip\\unzip.c\">\r\n-\t\t\t\t<FileConfiguration\r\n-\t\t\t\t\tName=\"Release|Win32\">\r\n-\t\t\t\t\t<Tool\r\n-\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\t\t\tAdditionalIncludeDirectories=\"\"\r\n-\t\t\t\t\t\tPreprocessorDefinitions=\"ZLIB_INTERNAL\"/>\r\n-\t\t\t\t</FileConfiguration>\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\minizip\\zip.c\">\r\n-\t\t\t\t<FileConfiguration\r\n-\t\t\t\t\tName=\"Release|Win32\">\r\n-\t\t\t\t\t<Tool\r\n-\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\t\t\tAdditionalIncludeDirectories=\"\"\r\n-\t\t\t\t\t\tPreprocessorDefinitions=\"ZLIB_INTERNAL\"/>\r\n-\t\t\t\t</FileConfiguration>\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\".\\zlib.rc\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\".\\zlibvc.def\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\zutil.c\">\r\n-\t\t\t</File>\r\n-\t\t</Filter>\r\n-\t\t<Filter\r\n-\t\t\tName=\"Header Files\"\r\n-\t\t\tFilter=\"h;hpp;hxx;hm;inl;fi;fd\">\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\deflate.h\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\infblock.h\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\infcodes.h\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\inffast.h\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\inftrees.h\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\infutil.h\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\zconf.h\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\zlib.h\">\r\n-\t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\zutil.h\">\r\n-\t\t\t</File>\r\n-\t\t</Filter>\r\n-\t\t<Filter\r\n-\t\t\tName=\"Resource Files\"\r\n-\t\t\tFilter=\"ico;cur;bmp;dlg;rc2;rct;bin;cnt;rtf;gif;jpg;jpeg;jpe\">\r\n-\t\t</Filter>\r\n-\t</Files>\r\n-\t<Globals>\r\n-\t</Globals>\r\n-</VisualStudioProject>\r"}, {"sha": "7da32b91eafb368077ef07d67fcdb84180567cac", "filename": "zlib/contrib/vstudio/vc9/miniunz.vcproj", "status": "renamed", "additions": 40, "deletions": 41, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fminiunz.vcproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fminiunz.vcproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fminiunz.vcproj?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,10 +1,11 @@\n <?xml version=\"1.0\" encoding=\"Windows-1252\"?>\r\n <VisualStudioProject\r\n \tProjectType=\"Visual C++\"\r\n-\tVersion=\"8,00\"\r\n+\tVersion=\"9.00\"\r\n \tName=\"miniunz\"\r\n \tProjectGUID=\"{C52F9E7B-498A-42BE-8DB4-85A15694382A}\"\r\n \tKeyword=\"Win32Proj\"\r\n+\tTargetFrameworkVersion=\"131072\"\r\n \t>\r\n \t<Platforms>\r\n \t\t<Platform\r\n@@ -76,6 +77,8 @@\n \t\t\t\tGenerateDebugInformation=\"true\"\r\n \t\t\t\tProgramDatabaseFile=\"$(OutDir)/miniunz.pdb\"\r\n \t\t\t\tSubSystem=\"1\"\r\n+\t\t\t\tRandomizedBaseAddress=\"1\"\r\n+\t\t\t\tDataExecutionPrevention=\"0\"\r\n \t\t\t\tTargetMachine=\"1\"\r\n \t\t\t/>\r\n \t\t\t<Tool\r\n@@ -96,17 +99,14 @@\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCAppVerifierTool\"\r\n \t\t\t/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"\r\n-\t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCPostBuildEventTool\"\r\n \t\t\t/>\r\n \t\t</Configuration>\r\n \t\t<Configuration\r\n-\t\t\tName=\"Debug|x64\"\r\n-\t\t\tOutputDirectory=\"x64\\MiniUnzip$(ConfigurationName)\"\r\n-\t\t\tIntermediateDirectory=\"x64\\MiniUnzip$(ConfigurationName)\\Tmp\"\r\n+\t\t\tName=\"Release|Win32\"\r\n+\t\t\tOutputDirectory=\"x86\\MiniUnzip$(ConfigurationName)\"\r\n+\t\t\tIntermediateDirectory=\"x86\\MiniUnzip$(ConfigurationName)\\Tmp\"\r\n \t\t\tConfigurationType=\"1\"\r\n \t\t\tInheritedPropertySheets=\"UpgradeFromVC70.vsprops\"\r\n \t\t\tCharacterSet=\"2\"\r\n@@ -125,17 +125,19 @@\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCMIDLTool\"\r\n-\t\t\t\tTargetEnvironment=\"3\"\r\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\tOptimization=\"0\"\r\n+\t\t\t\tOptimization=\"2\"\r\n+\t\t\t\tInlineFunctionExpansion=\"1\"\r\n+\t\t\t\tOmitFramePointers=\"true\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\minizip\"\r\n-\t\t\t\tPreprocessorDefinitions=\"_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;WIN64\"\r\n-\t\t\t\tMinimalRebuild=\"true\"\r\n+\t\t\t\tPreprocessorDefinitions=\"WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE\"\r\n+\t\t\t\tStringPooling=\"true\"\r\n \t\t\t\tBasicRuntimeChecks=\"0\"\r\n-\t\t\t\tRuntimeLibrary=\"3\"\r\n+\t\t\t\tRuntimeLibrary=\"0\"\r\n \t\t\t\tBufferSecurityCheck=\"false\"\r\n+\t\t\t\tEnableFunctionLevelLinking=\"true\"\r\n \t\t\t\tUsePrecompiledHeader=\"0\"\r\n \t\t\t\tAssemblerListingLocation=\"$(IntDir)\\\"\r\n \t\t\t\tWarningLevel=\"3\"\r\n@@ -153,14 +155,18 @@\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCLinkerTool\"\r\n-\t\t\t\tAdditionalDependencies=\"x64\\ZlibDllDebug\\zlibwapi.lib\"\r\n+\t\t\t\tAdditionalDependencies=\"x86\\ZlibDllRelease\\zlibwapi.lib\"\r\n \t\t\t\tOutputFile=\"$(OutDir)/miniunz.exe\"\r\n-\t\t\t\tLinkIncremental=\"2\"\r\n+\t\t\t\tLinkIncremental=\"1\"\r\n \t\t\t\tGenerateManifest=\"false\"\r\n \t\t\t\tGenerateDebugInformation=\"true\"\r\n-\t\t\t\tProgramDatabaseFile=\"$(OutDir)/miniunz.pdb\"\r\n \t\t\t\tSubSystem=\"1\"\r\n-\t\t\t\tTargetMachine=\"17\"\r\n+\t\t\t\tOptimizeReferences=\"2\"\r\n+\t\t\t\tEnableCOMDATFolding=\"2\"\r\n+\t\t\t\tOptimizeForWindows98=\"1\"\r\n+\t\t\t\tRandomizedBaseAddress=\"1\"\r\n+\t\t\t\tDataExecutionPrevention=\"0\"\r\n+\t\t\t\tTargetMachine=\"1\"\r\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCALinkTool\"\r\n@@ -180,17 +186,14 @@\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCAppVerifierTool\"\r\n \t\t\t/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"\r\n-\t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCPostBuildEventTool\"\r\n \t\t\t/>\r\n \t\t</Configuration>\r\n \t\t<Configuration\r\n-\t\t\tName=\"Debug|Itanium\"\r\n-\t\t\tOutputDirectory=\"ia64\\MiniUnzip$(ConfigurationName)\"\r\n-\t\t\tIntermediateDirectory=\"ia64\\MiniUnzip$(ConfigurationName)\\Tmp\"\r\n+\t\t\tName=\"Debug|x64\"\r\n+\t\t\tOutputDirectory=\"x64\\MiniUnzip$(ConfigurationName)\"\r\n+\t\t\tIntermediateDirectory=\"x64\\MiniUnzip$(ConfigurationName)\\Tmp\"\r\n \t\t\tConfigurationType=\"1\"\r\n \t\t\tInheritedPropertySheets=\"UpgradeFromVC70.vsprops\"\r\n \t\t\tCharacterSet=\"2\"\r\n@@ -209,7 +212,7 @@\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCMIDLTool\"\r\n-\t\t\t\tTargetEnvironment=\"2\"\r\n+\t\t\t\tTargetEnvironment=\"3\"\r\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCCLCompilerTool\"\r\n@@ -237,14 +240,14 @@\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCLinkerTool\"\r\n-\t\t\t\tAdditionalDependencies=\"ia64\\ZlibDllDebug\\zlibwapi.lib\"\r\n+\t\t\t\tAdditionalDependencies=\"x64\\ZlibDllDebug\\zlibwapi.lib\"\r\n \t\t\t\tOutputFile=\"$(OutDir)/miniunz.exe\"\r\n \t\t\t\tLinkIncremental=\"2\"\r\n \t\t\t\tGenerateManifest=\"false\"\r\n \t\t\t\tGenerateDebugInformation=\"true\"\r\n \t\t\t\tProgramDatabaseFile=\"$(OutDir)/miniunz.pdb\"\r\n \t\t\t\tSubSystem=\"1\"\r\n-\t\t\t\tTargetMachine=\"5\"\r\n+\t\t\t\tTargetMachine=\"17\"\r\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCALinkTool\"\r\n@@ -272,9 +275,9 @@\n \t\t\t/>\r\n \t\t</Configuration>\r\n \t\t<Configuration\r\n-\t\t\tName=\"Release|Win32\"\r\n-\t\t\tOutputDirectory=\"x86\\MiniUnzip$(ConfigurationName)\"\r\n-\t\t\tIntermediateDirectory=\"x86\\MiniUnzip$(ConfigurationName)\\Tmp\"\r\n+\t\t\tName=\"Debug|Itanium\"\r\n+\t\t\tOutputDirectory=\"ia64\\MiniUnzip$(ConfigurationName)\"\r\n+\t\t\tIntermediateDirectory=\"ia64\\MiniUnzip$(ConfigurationName)\\Tmp\"\r\n \t\t\tConfigurationType=\"1\"\r\n \t\t\tInheritedPropertySheets=\"UpgradeFromVC70.vsprops\"\r\n \t\t\tCharacterSet=\"2\"\r\n@@ -293,19 +296,17 @@\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCMIDLTool\"\r\n+\t\t\t\tTargetEnvironment=\"2\"\r\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\tOptimization=\"2\"\r\n-\t\t\t\tInlineFunctionExpansion=\"1\"\r\n-\t\t\t\tOmitFramePointers=\"true\"\r\n+\t\t\t\tOptimization=\"0\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\minizip\"\r\n-\t\t\t\tPreprocessorDefinitions=\"WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE\"\r\n-\t\t\t\tStringPooling=\"true\"\r\n+\t\t\t\tPreprocessorDefinitions=\"_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;WIN64\"\r\n+\t\t\t\tMinimalRebuild=\"true\"\r\n \t\t\t\tBasicRuntimeChecks=\"0\"\r\n-\t\t\t\tRuntimeLibrary=\"0\"\r\n+\t\t\t\tRuntimeLibrary=\"3\"\r\n \t\t\t\tBufferSecurityCheck=\"false\"\r\n-\t\t\t\tEnableFunctionLevelLinking=\"true\"\r\n \t\t\t\tUsePrecompiledHeader=\"0\"\r\n \t\t\t\tAssemblerListingLocation=\"$(IntDir)\\\"\r\n \t\t\t\tWarningLevel=\"3\"\r\n@@ -323,16 +324,14 @@\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCLinkerTool\"\r\n-\t\t\t\tAdditionalDependencies=\"x86\\ZlibDllRelease\\zlibwapi.lib\"\r\n+\t\t\t\tAdditionalDependencies=\"ia64\\ZlibDllDebug\\zlibwapi.lib\"\r\n \t\t\t\tOutputFile=\"$(OutDir)/miniunz.exe\"\r\n-\t\t\t\tLinkIncremental=\"1\"\r\n+\t\t\t\tLinkIncremental=\"2\"\r\n \t\t\t\tGenerateManifest=\"false\"\r\n \t\t\t\tGenerateDebugInformation=\"true\"\r\n+\t\t\t\tProgramDatabaseFile=\"$(OutDir)/miniunz.pdb\"\r\n \t\t\t\tSubSystem=\"1\"\r\n-\t\t\t\tOptimizeReferences=\"2\"\r\n-\t\t\t\tEnableCOMDATFolding=\"2\"\r\n-\t\t\t\tOptimizeForWindows98=\"1\"\r\n-\t\t\t\tTargetMachine=\"1\"\r\n+\t\t\t\tTargetMachine=\"5\"\r\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCALinkTool\"\r", "previous_filename": "zlib/contrib/vstudio/vc8/miniunz.vcproj"}, {"sha": "e57e07d90c3d0a28fd48cbd2b5cefbf384557cf7", "filename": "zlib/contrib/vstudio/vc9/minizip.vcproj", "status": "renamed", "additions": 41, "deletions": 42, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fminizip.vcproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fminizip.vcproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fminizip.vcproj?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,10 +1,11 @@\n <?xml version=\"1.0\" encoding=\"Windows-1252\"?>\r\n <VisualStudioProject\r\n \tProjectType=\"Visual C++\"\r\n-\tVersion=\"8,00\"\r\n+\tVersion=\"9.00\"\r\n \tName=\"minizip\"\r\n \tProjectGUID=\"{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}\"\r\n \tKeyword=\"Win32Proj\"\r\n+\tTargetFrameworkVersion=\"131072\"\r\n \t>\r\n \t<Platforms>\r\n \t\t<Platform\r\n@@ -76,6 +77,8 @@\n \t\t\t\tGenerateDebugInformation=\"true\"\r\n \t\t\t\tProgramDatabaseFile=\"$(OutDir)/minizip.pdb\"\r\n \t\t\t\tSubSystem=\"1\"\r\n+\t\t\t\tRandomizedBaseAddress=\"1\"\r\n+\t\t\t\tDataExecutionPrevention=\"0\"\r\n \t\t\t\tTargetMachine=\"1\"\r\n \t\t\t/>\r\n \t\t\t<Tool\r\n@@ -96,17 +99,14 @@\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCAppVerifierTool\"\r\n \t\t\t/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"\r\n-\t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCPostBuildEventTool\"\r\n \t\t\t/>\r\n \t\t</Configuration>\r\n \t\t<Configuration\r\n-\t\t\tName=\"Debug|x64\"\r\n-\t\t\tOutputDirectory=\"x64\\$(ConfigurationName)\"\r\n-\t\t\tIntermediateDirectory=\"x64\\$(ConfigurationName)\"\r\n+\t\t\tName=\"Release|Win32\"\r\n+\t\t\tOutputDirectory=\"x86\\MiniZip$(ConfigurationName)\"\r\n+\t\t\tIntermediateDirectory=\"x86\\MiniZip$(ConfigurationName)\\Tmp\"\r\n \t\t\tConfigurationType=\"1\"\r\n \t\t\tInheritedPropertySheets=\"UpgradeFromVC70.vsprops\"\r\n \t\t\tCharacterSet=\"2\"\r\n@@ -125,17 +125,19 @@\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCMIDLTool\"\r\n-\t\t\t\tTargetEnvironment=\"3\"\r\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\tOptimization=\"0\"\r\n+\t\t\t\tOptimization=\"2\"\r\n+\t\t\t\tInlineFunctionExpansion=\"1\"\r\n+\t\t\t\tOmitFramePointers=\"true\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\minizip\"\r\n-\t\t\t\tPreprocessorDefinitions=\"_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;WIN64\"\r\n-\t\t\t\tMinimalRebuild=\"true\"\r\n+\t\t\t\tPreprocessorDefinitions=\"WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE\"\r\n+\t\t\t\tStringPooling=\"true\"\r\n \t\t\t\tBasicRuntimeChecks=\"0\"\r\n-\t\t\t\tRuntimeLibrary=\"3\"\r\n+\t\t\t\tRuntimeLibrary=\"0\"\r\n \t\t\t\tBufferSecurityCheck=\"false\"\r\n+\t\t\t\tEnableFunctionLevelLinking=\"true\"\r\n \t\t\t\tUsePrecompiledHeader=\"0\"\r\n \t\t\t\tAssemblerListingLocation=\"$(IntDir)\\\"\r\n \t\t\t\tWarningLevel=\"3\"\r\n@@ -153,14 +155,17 @@\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCLinkerTool\"\r\n-\t\t\t\tAdditionalDependencies=\"x64\\ZlibDllDebug\\zlibwapi.lib\"\r\n+\t\t\t\tAdditionalDependencies=\"x86\\ZlibDllRelease\\zlibwapi.lib\"\r\n \t\t\t\tOutputFile=\"$(OutDir)/minizip.exe\"\r\n-\t\t\t\tLinkIncremental=\"2\"\r\n-\t\t\t\tGenerateManifest=\"false\"\r\n+\t\t\t\tLinkIncremental=\"1\"\r\n \t\t\t\tGenerateDebugInformation=\"true\"\r\n-\t\t\t\tProgramDatabaseFile=\"$(OutDir)/minizip.pdb\"\r\n \t\t\t\tSubSystem=\"1\"\r\n-\t\t\t\tTargetMachine=\"17\"\r\n+\t\t\t\tOptimizeReferences=\"2\"\r\n+\t\t\t\tEnableCOMDATFolding=\"2\"\r\n+\t\t\t\tOptimizeForWindows98=\"1\"\r\n+\t\t\t\tRandomizedBaseAddress=\"1\"\r\n+\t\t\t\tDataExecutionPrevention=\"0\"\r\n+\t\t\t\tTargetMachine=\"1\"\r\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCALinkTool\"\r\n@@ -180,17 +185,14 @@\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCAppVerifierTool\"\r\n \t\t\t/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"\r\n-\t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCPostBuildEventTool\"\r\n \t\t\t/>\r\n \t\t</Configuration>\r\n \t\t<Configuration\r\n-\t\t\tName=\"Debug|Itanium\"\r\n-\t\t\tOutputDirectory=\"ia64\\$(ConfigurationName)\"\r\n-\t\t\tIntermediateDirectory=\"ia64\\$(ConfigurationName)\"\r\n+\t\t\tName=\"Debug|x64\"\r\n+\t\t\tOutputDirectory=\"x64\\$(ConfigurationName)\"\r\n+\t\t\tIntermediateDirectory=\"x64\\$(ConfigurationName)\"\r\n \t\t\tConfigurationType=\"1\"\r\n \t\t\tInheritedPropertySheets=\"UpgradeFromVC70.vsprops\"\r\n \t\t\tCharacterSet=\"2\"\r\n@@ -209,7 +211,7 @@\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCMIDLTool\"\r\n-\t\t\t\tTargetEnvironment=\"2\"\r\n+\t\t\t\tTargetEnvironment=\"3\"\r\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCCLCompilerTool\"\r\n@@ -237,14 +239,14 @@\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCLinkerTool\"\r\n-\t\t\t\tAdditionalDependencies=\"ia64\\ZlibDllDebug\\zlibwapi.lib\"\r\n+\t\t\t\tAdditionalDependencies=\"x64\\ZlibDllDebug\\zlibwapi.lib\"\r\n \t\t\t\tOutputFile=\"$(OutDir)/minizip.exe\"\r\n \t\t\t\tLinkIncremental=\"2\"\r\n \t\t\t\tGenerateManifest=\"false\"\r\n \t\t\t\tGenerateDebugInformation=\"true\"\r\n \t\t\t\tProgramDatabaseFile=\"$(OutDir)/minizip.pdb\"\r\n \t\t\t\tSubSystem=\"1\"\r\n-\t\t\t\tTargetMachine=\"5\"\r\n+\t\t\t\tTargetMachine=\"17\"\r\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCALinkTool\"\r\n@@ -272,9 +274,9 @@\n \t\t\t/>\r\n \t\t</Configuration>\r\n \t\t<Configuration\r\n-\t\t\tName=\"Release|Win32\"\r\n-\t\t\tOutputDirectory=\"x86\\MiniZip$(ConfigurationName)\"\r\n-\t\t\tIntermediateDirectory=\"x86\\MiniZip$(ConfigurationName)\\Tmp\"\r\n+\t\t\tName=\"Debug|Itanium\"\r\n+\t\t\tOutputDirectory=\"ia64\\$(ConfigurationName)\"\r\n+\t\t\tIntermediateDirectory=\"ia64\\$(ConfigurationName)\"\r\n \t\t\tConfigurationType=\"1\"\r\n \t\t\tInheritedPropertySheets=\"UpgradeFromVC70.vsprops\"\r\n \t\t\tCharacterSet=\"2\"\r\n@@ -293,19 +295,17 @@\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCMIDLTool\"\r\n+\t\t\t\tTargetEnvironment=\"2\"\r\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\tOptimization=\"2\"\r\n-\t\t\t\tInlineFunctionExpansion=\"1\"\r\n-\t\t\t\tOmitFramePointers=\"true\"\r\n+\t\t\t\tOptimization=\"0\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\minizip\"\r\n-\t\t\t\tPreprocessorDefinitions=\"WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE\"\r\n-\t\t\t\tStringPooling=\"true\"\r\n+\t\t\t\tPreprocessorDefinitions=\"_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;WIN64\"\r\n+\t\t\t\tMinimalRebuild=\"true\"\r\n \t\t\t\tBasicRuntimeChecks=\"0\"\r\n-\t\t\t\tRuntimeLibrary=\"0\"\r\n+\t\t\t\tRuntimeLibrary=\"3\"\r\n \t\t\t\tBufferSecurityCheck=\"false\"\r\n-\t\t\t\tEnableFunctionLevelLinking=\"true\"\r\n \t\t\t\tUsePrecompiledHeader=\"0\"\r\n \t\t\t\tAssemblerListingLocation=\"$(IntDir)\\\"\r\n \t\t\t\tWarningLevel=\"3\"\r\n@@ -323,15 +323,14 @@\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCLinkerTool\"\r\n-\t\t\t\tAdditionalDependencies=\"x86\\ZlibDllRelease\\zlibwapi.lib\"\r\n+\t\t\t\tAdditionalDependencies=\"ia64\\ZlibDllDebug\\zlibwapi.lib\"\r\n \t\t\t\tOutputFile=\"$(OutDir)/minizip.exe\"\r\n-\t\t\t\tLinkIncremental=\"1\"\r\n+\t\t\t\tLinkIncremental=\"2\"\r\n+\t\t\t\tGenerateManifest=\"false\"\r\n \t\t\t\tGenerateDebugInformation=\"true\"\r\n+\t\t\t\tProgramDatabaseFile=\"$(OutDir)/minizip.pdb\"\r\n \t\t\t\tSubSystem=\"1\"\r\n-\t\t\t\tOptimizeReferences=\"2\"\r\n-\t\t\t\tEnableCOMDATFolding=\"2\"\r\n-\t\t\t\tOptimizeForWindows98=\"1\"\r\n-\t\t\t\tTargetMachine=\"1\"\r\n+\t\t\t\tTargetMachine=\"5\"\r\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCALinkTool\"\r", "previous_filename": "zlib/contrib/vstudio/vc8/minizip.vcproj"}, {"sha": "9cb0bf877f3d2145e335b03491cc30dd7a12dc0f", "filename": "zlib/contrib/vstudio/vc9/testzlib.vcproj", "status": "renamed", "additions": 20, "deletions": 116, "changes": 136, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Ftestzlib.vcproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Ftestzlib.vcproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Ftestzlib.vcproj?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,11 +1,12 @@\n <?xml version=\"1.0\" encoding=\"Windows-1252\"?>\r\n <VisualStudioProject\r\n \tProjectType=\"Visual C++\"\r\n-\tVersion=\"8,00\"\r\n+\tVersion=\"9,00\"\r\n \tName=\"testzlib\"\r\n \tProjectGUID=\"{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}\"\r\n \tRootNamespace=\"testzlib\"\r\n \tKeyword=\"Win32Proj\"\r\n+\tTargetFrameworkVersion=\"131072\"\r\n \t>\r\n \t<Platforms>\r\n \t\t<Platform\r\n@@ -47,7 +48,7 @@\n \t\t\t\tName=\"VCCLCompilerTool\"\r\n \t\t\t\tOptimization=\"0\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..\"\r\n-\t\t\t\tPreprocessorDefinitions=\"ASMV;ASMINF;WIN32;ZLIB_WINAPI;_DEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE\"\r\n+\t\t\t\tPreprocessorDefinitions=\"ASMV;ASMINF;WIN32;ZLIB_WINAPI;_DEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS\"\r\n \t\t\t\tMinimalRebuild=\"true\"\r\n \t\t\t\tBasicRuntimeChecks=\"0\"\r\n \t\t\t\tRuntimeLibrary=\"1\"\r\n@@ -70,13 +71,15 @@\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCLinkerTool\"\r\n-\t\t\t\tAdditionalDependencies=\"..\\..\\masmx86\\gvmat32.obj ..\\..\\masmx86\\inffas32.obj\"\r\n+\t\t\t\tAdditionalDependencies=\"..\\..\\masmx86\\match686.obj ..\\..\\masmx86\\inffas32.obj\"\r\n \t\t\t\tOutputFile=\"$(OutDir)/testzlib.exe\"\r\n \t\t\t\tLinkIncremental=\"2\"\r\n \t\t\t\tGenerateManifest=\"false\"\r\n \t\t\t\tGenerateDebugInformation=\"true\"\r\n \t\t\t\tProgramDatabaseFile=\"$(OutDir)/testzlib.pdb\"\r\n \t\t\t\tSubSystem=\"1\"\r\n+\t\t\t\tRandomizedBaseAddress=\"1\"\r\n+\t\t\t\tDataExecutionPrevention=\"0\"\r\n \t\t\t\tTargetMachine=\"1\"\r\n \t\t\t/>\r\n \t\t\t<Tool\r\n@@ -97,9 +100,6 @@\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCAppVerifierTool\"\r\n \t\t\t/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"\r\n-\t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCPostBuildEventTool\"\r\n \t\t\t/>\r\n@@ -128,7 +128,7 @@\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCCLCompilerTool\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..\"\r\n-\t\t\t\tPreprocessorDefinitions=\"ASMV;ASMINF;WIN32;ZLIB_WINAPI;_DEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE\"\r\n+\t\t\t\tPreprocessorDefinitions=\"ASMV;ASMINF;WIN32;ZLIB_WINAPI;_DEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS\"\r\n \t\t\t\tBasicRuntimeChecks=\"0\"\r\n \t\t\t\tRuntimeLibrary=\"3\"\r\n \t\t\t\tBufferSecurityCheck=\"false\"\r\n@@ -166,9 +166,6 @@\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCAppVerifierTool\"\r\n \t\t\t/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"\r\n-\t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCPostBuildEventTool\"\r\n \t\t\t/>\r\n@@ -200,7 +197,7 @@\n \t\t\t\tName=\"VCCLCompilerTool\"\r\n \t\t\t\tOptimization=\"0\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..\"\r\n-\t\t\t\tPreprocessorDefinitions=\"ZLIB_WINAPI;_DEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;WIN64\"\r\n+\t\t\t\tPreprocessorDefinitions=\"ZLIB_WINAPI;_DEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64\"\r\n \t\t\t\tMinimalRebuild=\"true\"\r\n \t\t\t\tBasicRuntimeChecks=\"0\"\r\n \t\t\t\tRuntimeLibrary=\"3\"\r\n@@ -249,9 +246,6 @@\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCAppVerifierTool\"\r\n \t\t\t/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"\r\n-\t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCPostBuildEventTool\"\r\n \t\t\t/>\r\n@@ -285,7 +279,7 @@\n \t\t\t\tInlineFunctionExpansion=\"1\"\r\n \t\t\t\tOmitFramePointers=\"true\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..\"\r\n-\t\t\t\tPreprocessorDefinitions=\"WIN32;ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE\"\r\n+\t\t\t\tPreprocessorDefinitions=\"WIN32;ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS\"\r\n \t\t\t\tStringPooling=\"true\"\r\n \t\t\t\tBasicRuntimeChecks=\"0\"\r\n \t\t\t\tRuntimeLibrary=\"0\"\r\n@@ -316,6 +310,8 @@\n \t\t\t\tOptimizeReferences=\"2\"\r\n \t\t\t\tEnableCOMDATFolding=\"2\"\r\n \t\t\t\tOptimizeForWindows98=\"1\"\r\n+\t\t\t\tRandomizedBaseAddress=\"1\"\r\n+\t\t\t\tDataExecutionPrevention=\"0\"\r\n \t\t\t\tTargetMachine=\"1\"\r\n \t\t\t/>\r\n \t\t\t<Tool\r\n@@ -336,9 +332,6 @@\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCAppVerifierTool\"\r\n \t\t\t/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"\r\n-\t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCPostBuildEventTool\"\r\n \t\t\t/>\r\n@@ -368,7 +361,7 @@\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCCLCompilerTool\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..\"\r\n-\t\t\t\tPreprocessorDefinitions=\"WIN32;ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE\"\r\n+\t\t\t\tPreprocessorDefinitions=\"WIN32;ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS\"\r\n \t\t\t\tBasicRuntimeChecks=\"0\"\r\n \t\t\t\tRuntimeLibrary=\"2\"\r\n \t\t\t\tBufferSecurityCheck=\"false\"\r\n@@ -406,9 +399,6 @@\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCAppVerifierTool\"\r\n \t\t\t/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"\r\n-\t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCPostBuildEventTool\"\r\n \t\t\t/>\r\n@@ -443,7 +433,7 @@\n \t\t\t\tInlineFunctionExpansion=\"1\"\r\n \t\t\t\tOmitFramePointers=\"true\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..\"\r\n-\t\t\t\tPreprocessorDefinitions=\"ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;WIN64\"\r\n+\t\t\t\tPreprocessorDefinitions=\"ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64\"\r\n \t\t\t\tStringPooling=\"true\"\r\n \t\t\t\tBasicRuntimeChecks=\"0\"\r\n \t\t\t\tRuntimeLibrary=\"2\"\r\n@@ -494,9 +484,6 @@\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCAppVerifierTool\"\r\n \t\t\t/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"\r\n-\t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCPostBuildEventTool\"\r\n \t\t\t/>\r\n@@ -530,7 +517,7 @@\n \t\t\t\tInlineFunctionExpansion=\"1\"\r\n \t\t\t\tOmitFramePointers=\"true\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..\"\r\n-\t\t\t\tPreprocessorDefinitions=\"ASMV;ASMINF;WIN32;ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE\"\r\n+\t\t\t\tPreprocessorDefinitions=\"ASMV;ASMINF;WIN32;ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS\"\r\n \t\t\t\tStringPooling=\"true\"\r\n \t\t\t\tBasicRuntimeChecks=\"0\"\r\n \t\t\t\tRuntimeLibrary=\"0\"\r\n@@ -553,7 +540,7 @@\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCLinkerTool\"\r\n-\t\t\t\tAdditionalDependencies=\"..\\..\\masmx86\\gvmat32.obj ..\\..\\masmx86\\inffas32.obj\"\r\n+\t\t\t\tAdditionalDependencies=\"..\\..\\masmx86\\match686.obj ..\\..\\masmx86\\inffas32.obj\"\r\n \t\t\t\tOutputFile=\"$(OutDir)/testzlib.exe\"\r\n \t\t\t\tLinkIncremental=\"1\"\r\n \t\t\t\tGenerateManifest=\"false\"\r\n@@ -562,6 +549,8 @@\n \t\t\t\tOptimizeReferences=\"2\"\r\n \t\t\t\tEnableCOMDATFolding=\"2\"\r\n \t\t\t\tOptimizeForWindows98=\"1\"\r\n+\t\t\t\tRandomizedBaseAddress=\"1\"\r\n+\t\t\t\tDataExecutionPrevention=\"0\"\r\n \t\t\t\tTargetMachine=\"1\"\r\n \t\t\t/>\r\n \t\t\t<Tool\r\n@@ -582,9 +571,6 @@\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCAppVerifierTool\"\r\n \t\t\t/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"\r\n-\t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCPostBuildEventTool\"\r\n \t\t\t/>\r\n@@ -614,9 +600,9 @@\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCCLCompilerTool\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..\"\r\n-\t\t\t\tPreprocessorDefinitions=\"ASMV;ASMINF;WIN32;ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE\"\r\n+\t\t\t\tPreprocessorDefinitions=\"ASMV;ASMINF;WIN32;ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS\"\r\n \t\t\t\tBasicRuntimeChecks=\"0\"\r\n-\t\t\t\tRuntimeLibrary=\"2\"\r\n+\t\t\t\tRuntimeLibrary=\"0\"\r\n \t\t\t\tBufferSecurityCheck=\"false\"\r\n \t\t\t\tAssemblerListingLocation=\"$(IntDir)\\\"\r\n \t\t\t/>\r\n@@ -652,9 +638,6 @@\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCAppVerifierTool\"\r\n \t\t\t/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"\r\n-\t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCPostBuildEventTool\"\r\n \t\t\t/>\r\n@@ -689,7 +672,7 @@\n \t\t\t\tInlineFunctionExpansion=\"1\"\r\n \t\t\t\tOmitFramePointers=\"true\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..\"\r\n-\t\t\t\tPreprocessorDefinitions=\"ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;WIN64\"\r\n+\t\t\t\tPreprocessorDefinitions=\"ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64\"\r\n \t\t\t\tStringPooling=\"true\"\r\n \t\t\t\tBasicRuntimeChecks=\"0\"\r\n \t\t\t\tRuntimeLibrary=\"2\"\r\n@@ -740,9 +723,6 @@\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCAppVerifierTool\"\r\n \t\t\t/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"\r\n-\t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCPostBuildEventTool\"\r\n \t\t\t/>\r\n@@ -771,82 +751,6 @@\n \t\t\t\tRelativePath=\"..\\..\\..\\deflate.c\"\r\n \t\t\t\t>\r\n \t\t\t</File>\r\n-\t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\masmx86\\gvmat32c.c\"\r\n-\t\t\t\t>\r\n-\t\t\t\t<FileConfiguration\r\n-\t\t\t\t\tName=\"Debug|x64\"\r\n-\t\t\t\t\tExcludedFromBuild=\"true\"\r\n-\t\t\t\t\t>\r\n-\t\t\t\t\t<Tool\r\n-\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FileConfiguration>\r\n-\t\t\t\t<FileConfiguration\r\n-\t\t\t\t\tName=\"Debug|Itanium\"\r\n-\t\t\t\t\tExcludedFromBuild=\"true\"\r\n-\t\t\t\t\t>\r\n-\t\t\t\t\t<Tool\r\n-\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FileConfiguration>\r\n-\t\t\t\t<FileConfiguration\r\n-\t\t\t\t\tName=\"ReleaseWithoutAsm|x64\"\r\n-\t\t\t\t\tExcludedFromBuild=\"true\"\r\n-\t\t\t\t\t>\r\n-\t\t\t\t\t<Tool\r\n-\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FileConfiguration>\r\n-\t\t\t\t<FileConfiguration\r\n-\t\t\t\t\tName=\"ReleaseWithoutAsm|Itanium\"\r\n-\t\t\t\t\tExcludedFromBuild=\"true\"\r\n-\t\t\t\t\t>\r\n-\t\t\t\t\t<Tool\r\n-\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FileConfiguration>\r\n-\t\t\t\t<FileConfiguration\r\n-\t\t\t\t\tName=\"Release|x64\"\r\n-\t\t\t\t\tExcludedFromBuild=\"true\"\r\n-\t\t\t\t\t>\r\n-\t\t\t\t\t<Tool\r\n-\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FileConfiguration>\r\n-\t\t\t\t<FileConfiguration\r\n-\t\t\t\t\tName=\"Release|Itanium\"\r\n-\t\t\t\t\tExcludedFromBuild=\"true\"\r\n-\t\t\t\t\t>\r\n-\t\t\t\t\t<Tool\r\n-\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FileConfiguration>\r\n-\t\t\t\t<FileConfiguration\r\n-\t\t\t\t\tName=\"Debug|Win64 (AMD64)\"\r\n-\t\t\t\t\tExcludedFromBuild=\"TRUE\"\r\n-\t\t\t\t\t>\r\n-\t\t\t\t\t<Tool\r\n-\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FileConfiguration>\r\n-\t\t\t\t<FileConfiguration\r\n-\t\t\t\t\tName=\"Release|Win64 (AMD64)\"\r\n-\t\t\t\t\tExcludedFromBuild=\"TRUE\"\r\n-\t\t\t\t\t>\r\n-\t\t\t\t\t<Tool\r\n-\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FileConfiguration>\r\n-\t\t\t\t<FileConfiguration\r\n-\t\t\t\t\tName=\"ReleaseAsm|Win64 (AMD64)\"\r\n-\t\t\t\t\tExcludedFromBuild=\"TRUE\"\r\n-\t\t\t\t\t>\r\n-\t\t\t\t\t<Tool\r\n-\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FileConfiguration>\r\n-\t\t\t</File>\r\n \t\t\t<File\r\n \t\t\t\tRelativePath=\"..\\..\\..\\infback.c\"\r\n \t\t\t\t>\r", "previous_filename": "zlib/contrib/vstudio/vc8/testzlib.vcproj"}, {"sha": "b1ddde05f98458ebb75fecd4283194c91a09a7d2", "filename": "zlib/contrib/vstudio/vc9/testzlibdll.vcproj", "status": "renamed", "additions": 40, "deletions": 42, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Ftestzlibdll.vcproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Ftestzlibdll.vcproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Ftestzlibdll.vcproj?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,11 +1,11 @@\n <?xml version=\"1.0\" encoding=\"Windows-1252\"?>\r\n <VisualStudioProject\r\n \tProjectType=\"Visual C++\"\r\n-\tVersion=\"8,00\"\r\n+\tVersion=\"9.00\"\r\n \tName=\"TestZlibDll\"\r\n \tProjectGUID=\"{C52F9E7B-498A-42BE-8DB4-85A15694366A}\"\r\n \tKeyword=\"Win32Proj\"\r\n-\tSignManifests=\"true\"\r\n+\tTargetFrameworkVersion=\"131072\"\r\n \t>\r\n \t<Platforms>\r\n \t\t<Platform\r\n@@ -77,6 +77,8 @@\n \t\t\t\tGenerateDebugInformation=\"true\"\r\n \t\t\t\tProgramDatabaseFile=\"$(OutDir)/testzlib.pdb\"\r\n \t\t\t\tSubSystem=\"1\"\r\n+\t\t\t\tRandomizedBaseAddress=\"1\"\r\n+\t\t\t\tDataExecutionPrevention=\"0\"\r\n \t\t\t\tTargetMachine=\"1\"\r\n \t\t\t/>\r\n \t\t\t<Tool\r\n@@ -97,17 +99,14 @@\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCAppVerifierTool\"\r\n \t\t\t/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"\r\n-\t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCPostBuildEventTool\"\r\n \t\t\t/>\r\n \t\t</Configuration>\r\n \t\t<Configuration\r\n-\t\t\tName=\"Debug|x64\"\r\n-\t\t\tOutputDirectory=\"x64\\TestZlibDll$(ConfigurationName)\"\r\n-\t\t\tIntermediateDirectory=\"x64\\TestZlibDll$(ConfigurationName)\\Tmp\"\r\n+\t\t\tName=\"Release|Win32\"\r\n+\t\t\tOutputDirectory=\"x86\\TestZlibDll$(ConfigurationName)\"\r\n+\t\t\tIntermediateDirectory=\"x86\\TestZlibDll$(ConfigurationName)\\Tmp\"\r\n \t\t\tConfigurationType=\"1\"\r\n \t\t\tInheritedPropertySheets=\"UpgradeFromVC70.vsprops\"\r\n \t\t\tCharacterSet=\"2\"\r\n@@ -126,17 +125,19 @@\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCMIDLTool\"\r\n-\t\t\t\tTargetEnvironment=\"3\"\r\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\tOptimization=\"0\"\r\n+\t\t\t\tOptimization=\"2\"\r\n+\t\t\t\tInlineFunctionExpansion=\"1\"\r\n+\t\t\t\tOmitFramePointers=\"true\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\minizip\"\r\n-\t\t\t\tPreprocessorDefinitions=\"_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;WIN64\"\r\n-\t\t\t\tMinimalRebuild=\"true\"\r\n+\t\t\t\tPreprocessorDefinitions=\"WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE\"\r\n+\t\t\t\tStringPooling=\"true\"\r\n \t\t\t\tBasicRuntimeChecks=\"0\"\r\n-\t\t\t\tRuntimeLibrary=\"3\"\r\n+\t\t\t\tRuntimeLibrary=\"0\"\r\n \t\t\t\tBufferSecurityCheck=\"false\"\r\n+\t\t\t\tEnableFunctionLevelLinking=\"true\"\r\n \t\t\t\tUsePrecompiledHeader=\"0\"\r\n \t\t\t\tAssemblerListingLocation=\"$(IntDir)\\\"\r\n \t\t\t\tWarningLevel=\"3\"\r\n@@ -154,14 +155,18 @@\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCLinkerTool\"\r\n-\t\t\t\tAdditionalDependencies=\"x64\\ZlibDllDebug\\zlibwapi.lib\"\r\n+\t\t\t\tAdditionalDependencies=\"x86\\ZlibDllRelease\\zlibwapi.lib\"\r\n \t\t\t\tOutputFile=\"$(OutDir)/testzlib.exe\"\r\n-\t\t\t\tLinkIncremental=\"2\"\r\n+\t\t\t\tLinkIncremental=\"1\"\r\n \t\t\t\tGenerateManifest=\"false\"\r\n \t\t\t\tGenerateDebugInformation=\"true\"\r\n-\t\t\t\tProgramDatabaseFile=\"$(OutDir)/testzlib.pdb\"\r\n \t\t\t\tSubSystem=\"1\"\r\n-\t\t\t\tTargetMachine=\"17\"\r\n+\t\t\t\tOptimizeReferences=\"2\"\r\n+\t\t\t\tEnableCOMDATFolding=\"2\"\r\n+\t\t\t\tOptimizeForWindows98=\"1\"\r\n+\t\t\t\tRandomizedBaseAddress=\"1\"\r\n+\t\t\t\tDataExecutionPrevention=\"0\"\r\n+\t\t\t\tTargetMachine=\"1\"\r\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCALinkTool\"\r\n@@ -181,17 +186,14 @@\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCAppVerifierTool\"\r\n \t\t\t/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"\r\n-\t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCPostBuildEventTool\"\r\n \t\t\t/>\r\n \t\t</Configuration>\r\n \t\t<Configuration\r\n-\t\t\tName=\"Debug|Itanium\"\r\n-\t\t\tOutputDirectory=\"ia64\\TestZlibDll$(ConfigurationName)\"\r\n-\t\t\tIntermediateDirectory=\"ia64\\TestZlibDll$(ConfigurationName)\\Tmp\"\r\n+\t\t\tName=\"Debug|x64\"\r\n+\t\t\tOutputDirectory=\"x64\\TestZlibDll$(ConfigurationName)\"\r\n+\t\t\tIntermediateDirectory=\"x64\\TestZlibDll$(ConfigurationName)\\Tmp\"\r\n \t\t\tConfigurationType=\"1\"\r\n \t\t\tInheritedPropertySheets=\"UpgradeFromVC70.vsprops\"\r\n \t\t\tCharacterSet=\"2\"\r\n@@ -210,7 +212,7 @@\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCMIDLTool\"\r\n-\t\t\t\tTargetEnvironment=\"2\"\r\n+\t\t\t\tTargetEnvironment=\"3\"\r\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCCLCompilerTool\"\r\n@@ -238,14 +240,14 @@\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCLinkerTool\"\r\n-\t\t\t\tAdditionalDependencies=\"ia64\\ZlibDllDebug\\zlibwapi.lib\"\r\n+\t\t\t\tAdditionalDependencies=\"x64\\ZlibDllDebug\\zlibwapi.lib\"\r\n \t\t\t\tOutputFile=\"$(OutDir)/testzlib.exe\"\r\n \t\t\t\tLinkIncremental=\"2\"\r\n \t\t\t\tGenerateManifest=\"false\"\r\n \t\t\t\tGenerateDebugInformation=\"true\"\r\n \t\t\t\tProgramDatabaseFile=\"$(OutDir)/testzlib.pdb\"\r\n \t\t\t\tSubSystem=\"1\"\r\n-\t\t\t\tTargetMachine=\"5\"\r\n+\t\t\t\tTargetMachine=\"17\"\r\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCALinkTool\"\r\n@@ -273,9 +275,9 @@\n \t\t\t/>\r\n \t\t</Configuration>\r\n \t\t<Configuration\r\n-\t\t\tName=\"Release|Win32\"\r\n-\t\t\tOutputDirectory=\"x86\\TestZlibDll$(ConfigurationName)\"\r\n-\t\t\tIntermediateDirectory=\"x86\\TestZlibDll$(ConfigurationName)\\Tmp\"\r\n+\t\t\tName=\"Debug|Itanium\"\r\n+\t\t\tOutputDirectory=\"ia64\\TestZlibDll$(ConfigurationName)\"\r\n+\t\t\tIntermediateDirectory=\"ia64\\TestZlibDll$(ConfigurationName)\\Tmp\"\r\n \t\t\tConfigurationType=\"1\"\r\n \t\t\tInheritedPropertySheets=\"UpgradeFromVC70.vsprops\"\r\n \t\t\tCharacterSet=\"2\"\r\n@@ -294,19 +296,17 @@\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCMIDLTool\"\r\n+\t\t\t\tTargetEnvironment=\"2\"\r\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\tOptimization=\"2\"\r\n-\t\t\t\tInlineFunctionExpansion=\"1\"\r\n-\t\t\t\tOmitFramePointers=\"true\"\r\n+\t\t\t\tOptimization=\"0\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\minizip\"\r\n-\t\t\t\tPreprocessorDefinitions=\"WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE\"\r\n-\t\t\t\tStringPooling=\"true\"\r\n+\t\t\t\tPreprocessorDefinitions=\"_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;WIN64\"\r\n+\t\t\t\tMinimalRebuild=\"true\"\r\n \t\t\t\tBasicRuntimeChecks=\"0\"\r\n-\t\t\t\tRuntimeLibrary=\"0\"\r\n+\t\t\t\tRuntimeLibrary=\"3\"\r\n \t\t\t\tBufferSecurityCheck=\"false\"\r\n-\t\t\t\tEnableFunctionLevelLinking=\"true\"\r\n \t\t\t\tUsePrecompiledHeader=\"0\"\r\n \t\t\t\tAssemblerListingLocation=\"$(IntDir)\\\"\r\n \t\t\t\tWarningLevel=\"3\"\r\n@@ -324,16 +324,14 @@\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCLinkerTool\"\r\n-\t\t\t\tAdditionalDependencies=\"x86\\ZlibDllRelease\\zlibwapi.lib\"\r\n+\t\t\t\tAdditionalDependencies=\"ia64\\ZlibDllDebug\\zlibwapi.lib\"\r\n \t\t\t\tOutputFile=\"$(OutDir)/testzlib.exe\"\r\n-\t\t\t\tLinkIncremental=\"1\"\r\n+\t\t\t\tLinkIncremental=\"2\"\r\n \t\t\t\tGenerateManifest=\"false\"\r\n \t\t\t\tGenerateDebugInformation=\"true\"\r\n+\t\t\t\tProgramDatabaseFile=\"$(OutDir)/testzlib.pdb\"\r\n \t\t\t\tSubSystem=\"1\"\r\n-\t\t\t\tOptimizeReferences=\"2\"\r\n-\t\t\t\tEnableCOMDATFolding=\"2\"\r\n-\t\t\t\tOptimizeForWindows98=\"1\"\r\n-\t\t\t\tTargetMachine=\"1\"\r\n+\t\t\t\tTargetMachine=\"5\"\r\n \t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCALinkTool\"\r", "previous_filename": "zlib/contrib/vstudio/vc8/testzlibdll.vcproj"}, {"sha": "f82245087ddcff4bf3bea6ff6a4b84de28adbbfb", "filename": "zlib/contrib/vstudio/vc9/zlib.rc", "status": "renamed", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fzlib.rc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fzlib.rc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fzlib.rc?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -2,8 +2,8 @@\n \r\n #define IDR_VERSION1  1\r\n IDR_VERSION1\tVERSIONINFO\tMOVEABLE IMPURE LOADONCALL DISCARDABLE\r\n-  FILEVERSION\t 1,2,3,0\r\n-  PRODUCTVERSION 1,2,3,0\r\n+  FILEVERSION\t 1,2,5,0\r\n+  PRODUCTVERSION 1,2,5,0\r\n   FILEFLAGSMASK\tVS_FFI_FILEFLAGSMASK\r\n   FILEFLAGS\t0\r\n   FILEOS\tVOS_DOS_WINDOWS32\r\n@@ -16,13 +16,13 @@ BEGIN\n     //language ID = U.S. English, char set = Windows, Multilingual\r\n \r\n     BEGIN\r\n-      VALUE \"FileDescription\", \"zlib data compression library\\0\"\r\n-      VALUE \"FileVersion\",\t\"1.2.3.0\\0\"\r\n+      VALUE \"FileDescription\", \"zlib data compression and ZIP file I/O library\\0\"\r\n+      VALUE \"FileVersion\",\t\"1.2.5\\0\"\r\n       VALUE \"InternalName\",\t\"zlib\\0\"\r\n       VALUE \"OriginalFilename\",\t\"zlib.dll\\0\"\r\n       VALUE \"ProductName\",\t\"ZLib.DLL\\0\"\r\n       VALUE \"Comments\",\"DLL support by Alessandro Iacopetti & Gilles Vollant\\0\"\r\n-      VALUE \"LegalCopyright\", \"(C) 1995-2003 Jean-loup Gailly & Mark Adler\\0\"\r\n+      VALUE \"LegalCopyright\", \"(C) 1995-2010 Jean-loup Gailly & Mark Adler\\0\"\r\n     END\r\n   END\r\n   BLOCK \"VarFileInfo\"\r", "previous_filename": "zlib/contrib/vstudio/vc8/zlib.rc"}, {"sha": "61c76c7c5bc504e0c21d0cea1b7ed462d719702e", "filename": "zlib/contrib/vstudio/vc9/zlibstat.vcproj", "status": "renamed", "additions": 26, "deletions": 61, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fzlibstat.vcproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fzlibstat.vcproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fzlibstat.vcproj?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,9 +1,10 @@\n <?xml version=\"1.0\" encoding=\"Windows-1252\"?>\r\n <VisualStudioProject\r\n \tProjectType=\"Visual C++\"\r\n-\tVersion=\"8,00\"\r\n+\tVersion=\"9,00\"\r\n \tName=\"zlibstat\"\r\n \tProjectGUID=\"{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}\"\r\n+\tTargetFrameworkVersion=\"131072\"\r\n \t>\r\n \t<Platforms>\r\n \t\t<Platform\r\n@@ -47,7 +48,7 @@\n \t\t\t\tName=\"VCCLCompilerTool\"\r\n \t\t\t\tOptimization=\"0\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\masmx86\"\r\n-\t\t\t\tPreprocessorDefinitions=\"WIN32;ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE\"\r\n+\t\t\t\tPreprocessorDefinitions=\"WIN32;ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS\"\r\n \t\t\t\tExceptionHandling=\"0\"\r\n \t\t\t\tRuntimeLibrary=\"1\"\r\n \t\t\t\tBufferSecurityCheck=\"false\"\r\n@@ -121,7 +122,7 @@\n \t\t\t\tName=\"VCCLCompilerTool\"\r\n \t\t\t\tOptimization=\"0\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\masmx86\"\r\n-\t\t\t\tPreprocessorDefinitions=\"ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;WIN64\"\r\n+\t\t\t\tPreprocessorDefinitions=\"ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64\"\r\n \t\t\t\tExceptionHandling=\"0\"\r\n \t\t\t\tRuntimeLibrary=\"3\"\r\n \t\t\t\tBufferSecurityCheck=\"false\"\r\n@@ -195,7 +196,7 @@\n \t\t\t\tName=\"VCCLCompilerTool\"\r\n \t\t\t\tOptimization=\"0\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\masmx86\"\r\n-\t\t\t\tPreprocessorDefinitions=\"ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;WIN64\"\r\n+\t\t\t\tPreprocessorDefinitions=\"ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64\"\r\n \t\t\t\tExceptionHandling=\"0\"\r\n \t\t\t\tRuntimeLibrary=\"3\"\r\n \t\t\t\tBufferSecurityCheck=\"false\"\r\n@@ -268,7 +269,7 @@\n \t\t\t\tName=\"VCCLCompilerTool\"\r\n \t\t\t\tInlineFunctionExpansion=\"1\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\masmx86\"\r\n-\t\t\t\tPreprocessorDefinitions=\"WIN32;ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ASMV;ASMINF\"\r\n+\t\t\t\tPreprocessorDefinitions=\"WIN32;ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ASMV;ASMINF\"\r\n \t\t\t\tStringPooling=\"true\"\r\n \t\t\t\tExceptionHandling=\"0\"\r\n \t\t\t\tRuntimeLibrary=\"0\"\r\n@@ -294,7 +295,7 @@\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCLibrarianTool\"\r\n \t\t\t\tAdditionalOptions=\"/MACHINE:X86 /NODEFAULTLIB\"\r\n-\t\t\t\tAdditionalDependencies=\"..\\..\\masmx86\\gvmat32.obj ..\\..\\masmx86\\inffas32.obj \"\r\n+\t\t\t\tAdditionalDependencies=\"..\\..\\masmx86\\match686.obj ..\\..\\masmx86\\inffas32.obj \"\r\n \t\t\t\tOutputFile=\"$(OutDir)\\zlibstat.lib\"\r\n \t\t\t\tSuppressStartupBanner=\"true\"\r\n \t\t\t/>\r\n@@ -343,7 +344,7 @@\n \t\t\t\tName=\"VCCLCompilerTool\"\r\n \t\t\t\tInlineFunctionExpansion=\"1\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\masmx86\"\r\n-\t\t\t\tPreprocessorDefinitions=\"ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ASMV;ASMINF;WIN64\"\r\n+\t\t\t\tPreprocessorDefinitions=\"ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ASMV;ASMINF;WIN64\"\r\n \t\t\t\tStringPooling=\"true\"\r\n \t\t\t\tExceptionHandling=\"0\"\r\n \t\t\t\tRuntimeLibrary=\"2\"\r\n@@ -418,7 +419,7 @@\n \t\t\t\tName=\"VCCLCompilerTool\"\r\n \t\t\t\tInlineFunctionExpansion=\"1\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\masmx86\"\r\n-\t\t\t\tPreprocessorDefinitions=\"ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;WIN64\"\r\n+\t\t\t\tPreprocessorDefinitions=\"ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64\"\r\n \t\t\t\tStringPooling=\"true\"\r\n \t\t\t\tExceptionHandling=\"0\"\r\n \t\t\t\tRuntimeLibrary=\"2\"\r\n@@ -491,7 +492,7 @@\n \t\t\t\tName=\"VCCLCompilerTool\"\r\n \t\t\t\tInlineFunctionExpansion=\"1\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\masmx86\"\r\n-\t\t\t\tPreprocessorDefinitions=\"WIN32;ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE\"\r\n+\t\t\t\tPreprocessorDefinitions=\"WIN32;ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS\"\r\n \t\t\t\tStringPooling=\"true\"\r\n \t\t\t\tExceptionHandling=\"0\"\r\n \t\t\t\tRuntimeLibrary=\"0\"\r\n@@ -565,7 +566,7 @@\n \t\t\t\tName=\"VCCLCompilerTool\"\r\n \t\t\t\tInlineFunctionExpansion=\"1\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\masmx86\"\r\n-\t\t\t\tPreprocessorDefinitions=\"ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;WIN64\"\r\n+\t\t\t\tPreprocessorDefinitions=\"ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64\"\r\n \t\t\t\tStringPooling=\"true\"\r\n \t\t\t\tExceptionHandling=\"0\"\r\n \t\t\t\tRuntimeLibrary=\"2\"\r\n@@ -639,7 +640,7 @@\n \t\t\t\tName=\"VCCLCompilerTool\"\r\n \t\t\t\tInlineFunctionExpansion=\"1\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\masmx86\"\r\n-\t\t\t\tPreprocessorDefinitions=\"ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;WIN64\"\r\n+\t\t\t\tPreprocessorDefinitions=\"ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64\"\r\n \t\t\t\tStringPooling=\"true\"\r\n \t\t\t\tExceptionHandling=\"0\"\r\n \t\t\t\tRuntimeLibrary=\"2\"\r\n@@ -708,59 +709,23 @@\n \t\t\t\t>\r\n \t\t\t</File>\r\n \t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\masmx86\\gvmat32c.c\"\r\n+\t\t\t\tRelativePath=\"..\\..\\..\\gzclose.c\"\r\n+\t\t\t\t>\r\n+\t\t\t</File>\r\n+\t\t\t<File\r\n+\t\t\t\tRelativePath=\"..\\..\\..\\gzguts.h\"\r\n+\t\t\t\t>\r\n+\t\t\t</File>\r\n+\t\t\t<File\r\n+\t\t\t\tRelativePath=\"..\\..\\..\\gzlib.c\"\r\n+\t\t\t\t>\r\n+\t\t\t</File>\r\n+\t\t\t<File\r\n+\t\t\t\tRelativePath=\"..\\..\\..\\gzread.c\"\r\n \t\t\t\t>\r\n-\t\t\t\t<FileConfiguration\r\n-\t\t\t\t\tName=\"Debug|x64\"\r\n-\t\t\t\t\tExcludedFromBuild=\"true\"\r\n-\t\t\t\t\t>\r\n-\t\t\t\t\t<Tool\r\n-\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FileConfiguration>\r\n-\t\t\t\t<FileConfiguration\r\n-\t\t\t\t\tName=\"Debug|Itanium\"\r\n-\t\t\t\t\tExcludedFromBuild=\"true\"\r\n-\t\t\t\t\t>\r\n-\t\t\t\t\t<Tool\r\n-\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FileConfiguration>\r\n-\t\t\t\t<FileConfiguration\r\n-\t\t\t\t\tName=\"Release|x64\"\r\n-\t\t\t\t\tExcludedFromBuild=\"true\"\r\n-\t\t\t\t\t>\r\n-\t\t\t\t\t<Tool\r\n-\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FileConfiguration>\r\n-\t\t\t\t<FileConfiguration\r\n-\t\t\t\t\tName=\"Release|Itanium\"\r\n-\t\t\t\t\tExcludedFromBuild=\"true\"\r\n-\t\t\t\t\t>\r\n-\t\t\t\t\t<Tool\r\n-\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FileConfiguration>\r\n-\t\t\t\t<FileConfiguration\r\n-\t\t\t\t\tName=\"ReleaseWithoutAsm|x64\"\r\n-\t\t\t\t\tExcludedFromBuild=\"true\"\r\n-\t\t\t\t\t>\r\n-\t\t\t\t\t<Tool\r\n-\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FileConfiguration>\r\n-\t\t\t\t<FileConfiguration\r\n-\t\t\t\t\tName=\"ReleaseWithoutAsm|Itanium\"\r\n-\t\t\t\t\tExcludedFromBuild=\"true\"\r\n-\t\t\t\t\t>\r\n-\t\t\t\t\t<Tool\r\n-\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FileConfiguration>\r\n \t\t\t</File>\r\n \t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\gzio.c\"\r\n+\t\t\t\tRelativePath=\"..\\..\\..\\gzwrite.c\"\r\n \t\t\t\t>\r\n \t\t\t</File>\r\n \t\t\t<File\r", "previous_filename": "zlib/contrib/vstudio/vc8/zlibstat.vcproj"}, {"sha": "0269ef722c1ce3a9422168a9b99e64466600111f", "filename": "zlib/contrib/vstudio/vc9/zlibvc.def", "status": "renamed", "additions": 41, "deletions": 3, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fzlibvc.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fzlibvc.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fzlibvc.def?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,7 +1,7 @@\n+LIBRARY\r\n+; zlib data compression and ZIP file I/O library\r\n \r\n-VERSION\t\t1.23\r\n-\r\n-HEAPSIZE\t1048576,8192\r\n+VERSION\t\t1.24\r\n \r\n EXPORTS\r\n         adler32                                  @1\r\n@@ -90,3 +90,41 @@ EXPORTS\n         unzGoToFilePos                           @101\r\n \r\n         fill_win32_filefunc                      @110\r\n+\r\n+; zlibwapi v1.2.4 added:\r\n+        fill_win32_filefunc64                   @111\r\n+        fill_win32_filefunc64A                  @112\r\n+        fill_win32_filefunc64W                  @113\r\n+\r\n+        unzOpen64                               @120\r\n+        unzOpen2_64                             @121\r\n+        unzGetGlobalInfo64                      @122\r\n+        unzGetCurrentFileInfo64                 @124\r\n+        unzGetCurrentFileZStreamPos64           @125\r\n+        unztell64                               @126\r\n+        unzGetFilePos64                         @127\r\n+        unzGoToFilePos64                        @128\r\n+\r\n+        zipOpen64                               @130\r\n+        zipOpen2_64                             @131\r\n+        zipOpenNewFileInZip64                   @132\r\n+        zipOpenNewFileInZip2_64                 @133\r\n+        zipOpenNewFileInZip3_64                 @134\r\n+        zipOpenNewFileInZip4_64                 @135\r\n+        zipCloseFileInZipRaw64                  @136\r\n+\r\n+; zlib1 v1.2.4 added:\r\n+        adler32_combine                         @140\r\n+        crc32_combine                           @142\r\n+        deflateSetHeader                        @144\r\n+        deflateTune                             @145\r\n+        gzbuffer                                @146\r\n+        gzclose_r                               @147\r\n+        gzclose_w                               @148\r\n+        gzdirect                                @149\r\n+        gzoffset                                @150\r\n+        inflateGetHeader                        @156\r\n+        inflateMark                             @157\r\n+        inflatePrime                            @158\r\n+        inflateReset2                           @159\r\n+        inflateUndermine                        @160\r", "previous_filename": "zlib/contrib/vstudio/vc8/zlibvc.def"}, {"sha": "b4829671f62a99d3a39d01a77f8fad86f5b0445c", "filename": "zlib/contrib/vstudio/vc9/zlibvc.sln", "status": "renamed", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fzlibvc.sln", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fzlibvc.sln", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fzlibvc.sln?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,6 +1,6 @@\n \ufeff\r\n-Microsoft Visual Studio Solution File, Format Version 9.00\r\n-# Visual Studio 2005\r\n+Microsoft Visual Studio Solution File, Format Version 10.00\r\n+# Visual Studio 2008\r\n Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"zlibvc\", \"zlibvc.vcproj\", \"{8FD826F8-3739-44E6-8CC8-997122E53B8D}\"\r\n EndProject\r\n Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"zlibstat\", \"zlibstat.vcproj\", \"{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}\"\r\n@@ -45,8 +45,8 @@ Global\n \t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Release|Itanium.Build.0 = Release|Itanium\r\n \t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Release|Win32.ActiveCfg = Release|Win32\r\n \t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Release|Win32.Build.0 = Release|Win32\r\n-\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Release|x64.ActiveCfg = ReleaseWithoutAsm|x64\r\n-\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Release|x64.Build.0 = ReleaseWithoutAsm|x64\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Release|x64.ActiveCfg = Release|x64\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Release|x64.Build.0 = Release|x64\r\n \t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.ReleaseWithoutAsm|Itanium.ActiveCfg = ReleaseWithoutAsm|Itanium\r\n \t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.ReleaseWithoutAsm|Itanium.Build.0 = ReleaseWithoutAsm|Itanium\r\n \t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.ReleaseWithoutAsm|Win32.ActiveCfg = ReleaseWithoutAsm|Win32\r\n@@ -103,8 +103,8 @@ Global\n \t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Release|x64.Build.0 = Release|x64\r\n \t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.ReleaseWithoutAsm|Itanium.ActiveCfg = Release|Itanium\r\n \t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.ReleaseWithoutAsm|Itanium.Build.0 = Release|Itanium\r\n-\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.ReleaseWithoutAsm|Win32.ActiveCfg = Release|Itanium\r\n-\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.ReleaseWithoutAsm|x64.ActiveCfg = Release|Itanium\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.ReleaseWithoutAsm|Win32.ActiveCfg = Release|Win32\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.ReleaseWithoutAsm|x64.ActiveCfg = Release|x64\r\n \t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Debug|Itanium.ActiveCfg = Debug|Itanium\r\n \t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Debug|Itanium.Build.0 = Debug|Itanium\r\n \t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Debug|Win32.ActiveCfg = Debug|Win32\r\n@@ -119,8 +119,8 @@ Global\n \t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Release|x64.Build.0 = Release|x64\r\n \t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|Itanium.ActiveCfg = Release|Itanium\r\n \t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|Itanium.Build.0 = Release|Itanium\r\n-\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|Win32.ActiveCfg = Release|Itanium\r\n-\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|x64.ActiveCfg = Release|Itanium\r\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|Win32.ActiveCfg = Release|Win32\r\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|x64.ActiveCfg = Release|x64\r\n \t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Debug|Itanium.ActiveCfg = Debug|Itanium\r\n \t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Debug|Itanium.Build.0 = Debug|Itanium\r\n \t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Debug|Win32.ActiveCfg = Debug|Win32\r\n@@ -135,8 +135,8 @@ Global\n \t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Release|x64.Build.0 = Release|x64\r\n \t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.ReleaseWithoutAsm|Itanium.ActiveCfg = Release|Itanium\r\n \t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.ReleaseWithoutAsm|Itanium.Build.0 = Release|Itanium\r\n-\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.ReleaseWithoutAsm|Win32.ActiveCfg = Release|Itanium\r\n-\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.ReleaseWithoutAsm|x64.ActiveCfg = Release|Itanium\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.ReleaseWithoutAsm|Win32.ActiveCfg = Release|Win32\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.ReleaseWithoutAsm|x64.ActiveCfg = Release|x64\r\n \tEndGlobalSection\r\n \tGlobalSection(SolutionProperties) = preSolution\r\n \t\tHideSolutionNode = FALSE\r", "previous_filename": "zlib/contrib/vstudio/vc8/zlibvc.sln"}, {"sha": "c9a89471e703a529f710b2a1520749ebcaba547e", "filename": "zlib/contrib/vstudio/vc9/zlibvc.vcproj", "status": "renamed", "additions": 35, "deletions": 98, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fzlibvc.vcproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fzlibvc.vcproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fzlibvc.vcproj?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,9 +1,11 @@\n <?xml version=\"1.0\" encoding=\"Windows-1252\"?>\r\n <VisualStudioProject\r\n \tProjectType=\"Visual C++\"\r\n-\tVersion=\"8,00\"\r\n+\tVersion=\"9,00\"\r\n \tName=\"zlibvc\"\r\n \tProjectGUID=\"{8FD826F8-3739-44E6-8CC8-997122E53B8D}\"\r\n+\tRootNamespace=\"zlibvc\"\r\n+\tTargetFrameworkVersion=\"131072\"\r\n \t>\r\n \t<Platforms>\r\n \t\t<Platform\r\n@@ -52,7 +54,7 @@\n \t\t\t\tName=\"VCCLCompilerTool\"\r\n \t\t\t\tOptimization=\"0\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\masmx86\"\r\n-\t\t\t\tPreprocessorDefinitions=\"WIN32,_CRT_SECURE_NO_DEPRECATE,ZLIB_WINAPI,ASMV,ASMINF\"\r\n+\t\t\t\tPreprocessorDefinitions=\"WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;ASMV;ASMINF\"\r\n \t\t\t\tExceptionHandling=\"0\"\r\n \t\t\t\tRuntimeLibrary=\"1\"\r\n \t\t\t\tBufferSecurityCheck=\"false\"\r\n@@ -79,7 +81,7 @@\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCLinkerTool\"\r\n \t\t\t\tAdditionalOptions=\"/MACHINE:I386\"\r\n-\t\t\t\tAdditionalDependencies=\"..\\..\\masmx86\\gvmat32.obj ..\\..\\masmx86\\inffas32.obj\"\r\n+\t\t\t\tAdditionalDependencies=\"..\\..\\masmx86\\match686.obj ..\\..\\masmx86\\inffas32.obj\"\r\n \t\t\t\tOutputFile=\"$(OutDir)\\zlibwapi.dll\"\r\n \t\t\t\tLinkIncremental=\"2\"\r\n \t\t\t\tSuppressStartupBanner=\"true\"\r\n@@ -90,6 +92,8 @@\n \t\t\t\tGenerateMapFile=\"true\"\r\n \t\t\t\tMapFileName=\"$(OutDir)/zlibwapi.map\"\r\n \t\t\t\tSubSystem=\"2\"\r\n+\t\t\t\tRandomizedBaseAddress=\"1\"\r\n+\t\t\t\tDataExecutionPrevention=\"0\"\r\n \t\t\t\tImportLibrary=\"$(OutDir)/zlibwapi.lib\"\r\n \t\t\t/>\r\n \t\t\t<Tool\r\n@@ -110,9 +114,6 @@\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCAppVerifierTool\"\r\n \t\t\t/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"\r\n-\t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCPostBuildEventTool\"\r\n \t\t\t/>\r\n@@ -150,7 +151,7 @@\n \t\t\t\tName=\"VCCLCompilerTool\"\r\n \t\t\t\tOptimization=\"0\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\masmx86\"\r\n-\t\t\t\tPreprocessorDefinitions=\"WIN32,_CRT_SECURE_NO_DEPRECATE,ZLIB_WINAPI,ASMV,ASMINF;WIN64\"\r\n+\t\t\t\tPreprocessorDefinitions=\"WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;ASMV;ASMINF;WIN64\"\r\n \t\t\t\tExceptionHandling=\"0\"\r\n \t\t\t\tRuntimeLibrary=\"3\"\r\n \t\t\t\tBufferSecurityCheck=\"false\"\r\n@@ -208,9 +209,6 @@\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCAppVerifierTool\"\r\n \t\t\t/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"\r\n-\t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCPostBuildEventTool\"\r\n \t\t\t/>\r\n@@ -248,7 +246,7 @@\n \t\t\t\tName=\"VCCLCompilerTool\"\r\n \t\t\t\tOptimization=\"0\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\masmx86\"\r\n-\t\t\t\tPreprocessorDefinitions=\"WIN32;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;WIN64\"\r\n+\t\t\t\tPreprocessorDefinitions=\"WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;WIN64\"\r\n \t\t\t\tExceptionHandling=\"0\"\r\n \t\t\t\tRuntimeLibrary=\"3\"\r\n \t\t\t\tBufferSecurityCheck=\"false\"\r\n@@ -305,9 +303,6 @@\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCAppVerifierTool\"\r\n \t\t\t/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"\r\n-\t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCPostBuildEventTool\"\r\n \t\t\t/>\r\n@@ -346,7 +341,7 @@\n \t\t\t\tName=\"VCCLCompilerTool\"\r\n \t\t\t\tInlineFunctionExpansion=\"1\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\masmx86\"\r\n-\t\t\t\tPreprocessorDefinitions=\"WIN32,_CRT_SECURE_NO_DEPRECATE,ZLIB_WINAPI\"\r\n+\t\t\t\tPreprocessorDefinitions=\"WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI\"\r\n \t\t\t\tStringPooling=\"true\"\r\n \t\t\t\tExceptionHandling=\"0\"\r\n \t\t\t\tRuntimeLibrary=\"2\"\r\n@@ -386,6 +381,8 @@\n \t\t\t\tMapFileName=\"$(OutDir)/zlibwapi.map\"\r\n \t\t\t\tSubSystem=\"2\"\r\n \t\t\t\tOptimizeForWindows98=\"1\"\r\n+\t\t\t\tRandomizedBaseAddress=\"1\"\r\n+\t\t\t\tDataExecutionPrevention=\"0\"\r\n \t\t\t\tImportLibrary=\"$(OutDir)/zlibwapi.lib\"\r\n \t\t\t/>\r\n \t\t\t<Tool\r\n@@ -406,9 +403,6 @@\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCAppVerifierTool\"\r\n \t\t\t/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"\r\n-\t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCPostBuildEventTool\"\r\n \t\t\t/>\r\n@@ -447,7 +441,7 @@\n \t\t\t\tName=\"VCCLCompilerTool\"\r\n \t\t\t\tInlineFunctionExpansion=\"1\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\masmx86\"\r\n-\t\t\t\tPreprocessorDefinitions=\"WIN32,_CRT_SECURE_NO_DEPRECATE,ZLIB_WINAPI;WIN64\"\r\n+\t\t\t\tPreprocessorDefinitions=\"WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;WIN64\"\r\n \t\t\t\tStringPooling=\"true\"\r\n \t\t\t\tExceptionHandling=\"0\"\r\n \t\t\t\tRuntimeLibrary=\"2\"\r\n@@ -507,9 +501,6 @@\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCAppVerifierTool\"\r\n \t\t\t/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"\r\n-\t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCPostBuildEventTool\"\r\n \t\t\t/>\r\n@@ -548,7 +539,7 @@\n \t\t\t\tName=\"VCCLCompilerTool\"\r\n \t\t\t\tInlineFunctionExpansion=\"1\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\masmx86\"\r\n-\t\t\t\tPreprocessorDefinitions=\"WIN32,_CRT_SECURE_NO_DEPRECATE,ZLIB_WINAPI;WIN64\"\r\n+\t\t\t\tPreprocessorDefinitions=\"WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;WIN64\"\r\n \t\t\t\tStringPooling=\"true\"\r\n \t\t\t\tExceptionHandling=\"0\"\r\n \t\t\t\tRuntimeLibrary=\"2\"\r\n@@ -608,9 +599,6 @@\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCAppVerifierTool\"\r\n \t\t\t/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"\r\n-\t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCPostBuildEventTool\"\r\n \t\t\t/>\r\n@@ -649,10 +637,10 @@\n \t\t\t\tName=\"VCCLCompilerTool\"\r\n \t\t\t\tInlineFunctionExpansion=\"1\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\masmx86\"\r\n-\t\t\t\tPreprocessorDefinitions=\"WIN32;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;ASMV;ASMINF\"\r\n+\t\t\t\tPreprocessorDefinitions=\"WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;ASMV;ASMINF\"\r\n \t\t\t\tStringPooling=\"true\"\r\n \t\t\t\tExceptionHandling=\"0\"\r\n-\t\t\t\tRuntimeLibrary=\"2\"\r\n+\t\t\t\tRuntimeLibrary=\"0\"\r\n \t\t\t\tBufferSecurityCheck=\"false\"\r\n \t\t\t\tEnableFunctionLevelLinking=\"true\"\r\n \t\t\t\tPrecompiledHeaderFile=\"$(IntDir)/zlibvc.pch\"\r\n@@ -678,7 +666,7 @@\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCLinkerTool\"\r\n \t\t\t\tAdditionalOptions=\"/MACHINE:I386\"\r\n-\t\t\t\tAdditionalDependencies=\"..\\..\\masmx86\\gvmat32.obj ..\\..\\masmx86\\inffas32.obj \"\r\n+\t\t\t\tAdditionalDependencies=\"..\\..\\masmx86\\match686.obj ..\\..\\masmx86\\inffas32.obj \"\r\n \t\t\t\tOutputFile=\"$(OutDir)\\zlibwapi.dll\"\r\n \t\t\t\tLinkIncremental=\"1\"\r\n \t\t\t\tSuppressStartupBanner=\"true\"\r\n@@ -690,6 +678,8 @@\n \t\t\t\tMapFileName=\"$(OutDir)/zlibwapi.map\"\r\n \t\t\t\tSubSystem=\"2\"\r\n \t\t\t\tOptimizeForWindows98=\"1\"\r\n+\t\t\t\tRandomizedBaseAddress=\"1\"\r\n+\t\t\t\tDataExecutionPrevention=\"0\"\r\n \t\t\t\tImportLibrary=\"$(OutDir)/zlibwapi.lib\"\r\n \t\t\t/>\r\n \t\t\t<Tool\r\n@@ -710,9 +700,6 @@\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCAppVerifierTool\"\r\n \t\t\t/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"\r\n-\t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCPostBuildEventTool\"\r\n \t\t\t/>\r\n@@ -751,7 +738,7 @@\n \t\t\t\tName=\"VCCLCompilerTool\"\r\n \t\t\t\tInlineFunctionExpansion=\"1\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\masmx86\"\r\n-\t\t\t\tPreprocessorDefinitions=\"_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;ASMV;ASMINF;WIN64\"\r\n+\t\t\t\tPreprocessorDefinitions=\"_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;ASMV;ASMINF;WIN64\"\r\n \t\t\t\tStringPooling=\"true\"\r\n \t\t\t\tExceptionHandling=\"0\"\r\n \t\t\t\tRuntimeLibrary=\"2\"\r\n@@ -812,9 +799,6 @@\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCAppVerifierTool\"\r\n \t\t\t/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"\r\n-\t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCPostBuildEventTool\"\r\n \t\t\t/>\r\n@@ -853,7 +837,7 @@\n \t\t\t\tName=\"VCCLCompilerTool\"\r\n \t\t\t\tInlineFunctionExpansion=\"1\"\r\n \t\t\t\tAdditionalIncludeDirectories=\"..\\..\\..;..\\..\\masmx86\"\r\n-\t\t\t\tPreprocessorDefinitions=\"_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;WIN64\"\r\n+\t\t\t\tPreprocessorDefinitions=\"_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;WIN64\"\r\n \t\t\t\tStringPooling=\"true\"\r\n \t\t\t\tExceptionHandling=\"0\"\r\n \t\t\t\tRuntimeLibrary=\"2\"\r\n@@ -913,9 +897,6 @@\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCAppVerifierTool\"\r\n \t\t\t/>\r\n-\t\t\t<Tool\r\n-\t\t\t\tName=\"VCWebDeploymentTool\"\r\n-\t\t\t/>\r\n \t\t\t<Tool\r\n \t\t\t\tName=\"VCPostBuildEventTool\"\r\n \t\t\t/>\r\n@@ -945,67 +926,23 @@\n \t\t\t\t>\r\n \t\t\t</File>\r\n \t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\masmx86\\gvmat32c.c\"\r\n+\t\t\t\tRelativePath=\"..\\..\\..\\gzclose.c\"\r\n+\t\t\t\t>\r\n+\t\t\t</File>\r\n+\t\t\t<File\r\n+\t\t\t\tRelativePath=\"..\\..\\..\\gzguts.h\"\r\n+\t\t\t\t>\r\n+\t\t\t</File>\r\n+\t\t\t<File\r\n+\t\t\t\tRelativePath=\"..\\..\\..\\gzlib.c\"\r\n+\t\t\t\t>\r\n+\t\t\t</File>\r\n+\t\t\t<File\r\n+\t\t\t\tRelativePath=\"..\\..\\..\\gzread.c\"\r\n \t\t\t\t>\r\n-\t\t\t\t<FileConfiguration\r\n-\t\t\t\t\tName=\"Debug|x64\"\r\n-\t\t\t\t\tExcludedFromBuild=\"true\"\r\n-\t\t\t\t\t>\r\n-\t\t\t\t\t<Tool\r\n-\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FileConfiguration>\r\n-\t\t\t\t<FileConfiguration\r\n-\t\t\t\t\tName=\"Debug|Itanium\"\r\n-\t\t\t\t\tExcludedFromBuild=\"true\"\r\n-\t\t\t\t\t>\r\n-\t\t\t\t\t<Tool\r\n-\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FileConfiguration>\r\n-\t\t\t\t<FileConfiguration\r\n-\t\t\t\t\tName=\"ReleaseWithoutAsm|Win32\"\r\n-\t\t\t\t\tExcludedFromBuild=\"true\"\r\n-\t\t\t\t\t>\r\n-\t\t\t\t\t<Tool\r\n-\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FileConfiguration>\r\n-\t\t\t\t<FileConfiguration\r\n-\t\t\t\t\tName=\"ReleaseWithoutAsm|x64\"\r\n-\t\t\t\t\tExcludedFromBuild=\"true\"\r\n-\t\t\t\t\t>\r\n-\t\t\t\t\t<Tool\r\n-\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FileConfiguration>\r\n-\t\t\t\t<FileConfiguration\r\n-\t\t\t\t\tName=\"ReleaseWithoutAsm|Itanium\"\r\n-\t\t\t\t\tExcludedFromBuild=\"true\"\r\n-\t\t\t\t\t>\r\n-\t\t\t\t\t<Tool\r\n-\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FileConfiguration>\r\n-\t\t\t\t<FileConfiguration\r\n-\t\t\t\t\tName=\"Release|x64\"\r\n-\t\t\t\t\tExcludedFromBuild=\"true\"\r\n-\t\t\t\t\t>\r\n-\t\t\t\t\t<Tool\r\n-\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FileConfiguration>\r\n-\t\t\t\t<FileConfiguration\r\n-\t\t\t\t\tName=\"Release|Itanium\"\r\n-\t\t\t\t\tExcludedFromBuild=\"true\"\r\n-\t\t\t\t\t>\r\n-\t\t\t\t\t<Tool\r\n-\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t</FileConfiguration>\r\n \t\t\t</File>\r\n \t\t\t<File\r\n-\t\t\t\tRelativePath=\"..\\..\\..\\gzio.c\"\r\n+\t\t\t\tRelativePath=\"..\\..\\..\\gzwrite.c\"\r\n \t\t\t\t>\r\n \t\t\t</File>\r\n \t\t\t<File\r", "previous_filename": "zlib/contrib/vstudio/vc8/zlibvc.vcproj"}, {"sha": "74bbb1ea201a24efea85f9760aa836741413bf4e", "filename": "zlib/crc32.c", "status": "modified", "additions": 27, "deletions": 8, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcrc32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fcrc32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcrc32.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,5 +1,5 @@\n /* crc32.c -- compute the CRC-32 of a data stream\n- * Copyright (C) 1995-2005 Mark Adler\n+ * Copyright (C) 1995-2006, 2010 Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  *\n  * Thanks to Rodney Brown <rbrown64@csc.com.au> for his contribution of faster\n@@ -53,7 +53,7 @@\n \n /* Definitions for doing the crc four data bytes at a time. */\n #ifdef BYFOUR\n-#  define REV(w) (((w)>>24)+(((w)>>8)&0xff00)+ \\\n+#  define REV(w) ((((w)>>24)&0xff)+(((w)>>8)&0xff00)+ \\\n                 (((w)&0xff00)<<8)+(((w)&0xff)<<24))\n    local unsigned long crc32_little OF((unsigned long,\n                         const unsigned char FAR *, unsigned));\n@@ -68,6 +68,8 @@\n local unsigned long gf2_matrix_times OF((unsigned long *mat,\n                                          unsigned long vec));\n local void gf2_matrix_square OF((unsigned long *square, unsigned long *mat));\n+local uLong crc32_combine_(uLong crc1, uLong crc2, z_off64_t len2);\n+\n \n #ifdef DYNAMIC_CRC_TABLE\n \n@@ -219,7 +221,7 @@ const unsigned long FAR * ZEXPORT get_crc_table()\n unsigned long ZEXPORT crc32(crc, buf, len)\n     unsigned long crc;\n     const unsigned char FAR *buf;\n-    unsigned len;\n+    uInt len;\n {\n     if (buf == Z_NULL) return 0UL;\n \n@@ -367,22 +369,22 @@ local void gf2_matrix_square(square, mat)\n }\n \n /* ========================================================================= */\n-uLong ZEXPORT crc32_combine(crc1, crc2, len2)\n+local uLong crc32_combine_(crc1, crc2, len2)\n     uLong crc1;\n     uLong crc2;\n-    z_off_t len2;\n+    z_off64_t len2;\n {\n     int n;\n     unsigned long row;\n     unsigned long even[GF2_DIM];    /* even-power-of-two zeros operator */\n     unsigned long odd[GF2_DIM];     /* odd-power-of-two zeros operator */\n \n-    /* degenerate case */\n-    if (len2 == 0)\n+    /* degenerate case (also disallow negative lengths) */\n+    if (len2 <= 0)\n         return crc1;\n \n     /* put operator for one zero bit in odd */\n-    odd[0] = 0xedb88320L;           /* CRC-32 polynomial */\n+    odd[0] = 0xedb88320UL;          /* CRC-32 polynomial */\n     row = 1;\n     for (n = 1; n < GF2_DIM; n++) {\n         odd[n] = row;\n@@ -421,3 +423,20 @@ uLong ZEXPORT crc32_combine(crc1, crc2, len2)\n     crc1 ^= crc2;\n     return crc1;\n }\n+\n+/* ========================================================================= */\n+uLong ZEXPORT crc32_combine(crc1, crc2, len2)\n+    uLong crc1;\n+    uLong crc2;\n+    z_off_t len2;\n+{\n+    return crc32_combine_(crc1, crc2, len2);\n+}\n+\n+uLong ZEXPORT crc32_combine64(crc1, crc2, len2)\n+    uLong crc1;\n+    uLong crc2;\n+    z_off64_t len2;\n+{\n+    return crc32_combine_(crc1, crc2, len2);\n+}"}, {"sha": "9d2ae7f5af73f83bec6b0336d0284e9cabd45612", "filename": "zlib/deflate.c", "status": "modified", "additions": 183, "deletions": 85, "changes": 268, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fdeflate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fdeflate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fdeflate.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,5 +1,5 @@\n /* deflate.c -- compress data using the deflation algorithm\n- * Copyright (C) 1995-2005 Jean-loup Gailly.\n+ * Copyright (C) 1995-2010 Jean-loup Gailly and Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -52,7 +52,7 @@\n #include \"deflate.h\"\n \n const char deflate_copyright[] =\n-   \" deflate 1.2.3 Copyright 1995-2005 Jean-loup Gailly \";\n+   \" deflate 1.2.5 Copyright 1995-2010 Jean-loup Gailly and Mark Adler \";\n /*\n   If you use the zlib library in a product, an acknowledgment is welcome\n   in the documentation of your product. If for some reason you cannot\n@@ -79,19 +79,18 @@ local block_state deflate_fast   OF((deflate_state *s, int flush));\n #ifndef FASTEST\n local block_state deflate_slow   OF((deflate_state *s, int flush));\n #endif\n+local block_state deflate_rle    OF((deflate_state *s, int flush));\n+local block_state deflate_huff   OF((deflate_state *s, int flush));\n local void lm_init        OF((deflate_state *s));\n local void putShortMSB    OF((deflate_state *s, uInt b));\n local void flush_pending  OF((z_streamp strm));\n local int read_buf        OF((z_streamp strm, Bytef *buf, unsigned size));\n-#ifndef FASTEST\n #ifdef ASMV\n       void match_init OF((void)); /* asm code initialization */\n       uInt longest_match  OF((deflate_state *s, IPos cur_match));\n #else\n local uInt longest_match  OF((deflate_state *s, IPos cur_match));\n #endif\n-#endif\n-local uInt longest_match_fast OF((deflate_state *s, IPos cur_match));\n \n #ifdef DEBUG\n local  void check_match OF((deflate_state *s, IPos start, IPos match,\n@@ -110,11 +109,6 @@ local  void check_match OF((deflate_state *s, IPos start, IPos match,\n #endif\n /* Matches of length 3 are discarded if their distance exceeds TOO_FAR */\n \n-#define MIN_LOOKAHEAD (MAX_MATCH+MIN_MATCH+1)\n-/* Minimum amount of lookahead, except at the end of the input file.\n- * See deflate.c for comments about the MIN_MATCH+1.\n- */\n-\n /* Values for max_lazy_match, good_match and max_chain_length, depending on\n  * the desired pack level (0..9). The values given below have been tuned to\n  * exclude worst case performance for pathological files. Better values may be\n@@ -288,6 +282,8 @@ int ZEXPORT deflateInit2_(strm, level, method, windowBits, memLevel, strategy,\n     s->prev   = (Posf *)  ZALLOC(strm, s->w_size, sizeof(Pos));\n     s->head   = (Posf *)  ZALLOC(strm, s->hash_size, sizeof(Pos));\n \n+    s->high_water = 0;      /* nothing written to s->window yet */\n+\n     s->lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n \n     overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n@@ -332,8 +328,8 @@ int ZEXPORT deflateSetDictionary (strm, dictionary, dictLength)\n         strm->adler = adler32(strm->adler, dictionary, dictLength);\n \n     if (length < MIN_MATCH) return Z_OK;\n-    if (length > MAX_DIST(s)) {\n-        length = MAX_DIST(s);\n+    if (length > s->w_size) {\n+        length = s->w_size;\n         dictionary += dictLength - length; /* use the tail of the dictionary */\n     }\n     zmemcpy(s->window, dictionary, length);\n@@ -435,9 +431,10 @@ int ZEXPORT deflateParams(strm, level, strategy)\n     }\n     func = configuration_table[s->level].func;\n \n-    if (func != configuration_table[level].func && strm->total_in != 0) {\n+    if ((strategy != s->strategy || func != configuration_table[level].func) &&\n+        strm->total_in != 0) {\n         /* Flush the last buffer: */\n-        err = deflate(strm, Z_PARTIAL_FLUSH);\n+        err = deflate(strm, Z_BLOCK);\n     }\n     if (s->level != level) {\n         s->level = level;\n@@ -481,33 +478,66 @@ int ZEXPORT deflateTune(strm, good_length, max_lazy, nice_length, max_chain)\n  * resulting from using fixed blocks instead of stored blocks, which deflate\n  * can emit on compressed data for some combinations of the parameters.\n  *\n- * This function could be more sophisticated to provide closer upper bounds\n- * for every combination of windowBits and memLevel, as well as wrap.\n- * But even the conservative upper bound of about 14% expansion does not\n- * seem onerous for output buffer allocation.\n+ * This function could be more sophisticated to provide closer upper bounds for\n+ * every combination of windowBits and memLevel.  But even the conservative\n+ * upper bound of about 14% expansion does not seem onerous for output buffer\n+ * allocation.\n  */\n uLong ZEXPORT deflateBound(strm, sourceLen)\n     z_streamp strm;\n     uLong sourceLen;\n {\n     deflate_state *s;\n-    uLong destLen;\n+    uLong complen, wraplen;\n+    Bytef *str;\n \n-    /* conservative upper bound */\n-    destLen = sourceLen +\n-              ((sourceLen + 7) >> 3) + ((sourceLen + 63) >> 6) + 11;\n+    /* conservative upper bound for compressed data */\n+    complen = sourceLen +\n+              ((sourceLen + 7) >> 3) + ((sourceLen + 63) >> 6) + 5;\n \n-    /* if can't get parameters, return conservative bound */\n+    /* if can't get parameters, return conservative bound plus zlib wrapper */\n     if (strm == Z_NULL || strm->state == Z_NULL)\n-        return destLen;\n+        return complen + 6;\n \n-    /* if not default parameters, return conservative bound */\n+    /* compute wrapper length */\n     s = strm->state;\n+    switch (s->wrap) {\n+    case 0:                                 /* raw deflate */\n+        wraplen = 0;\n+        break;\n+    case 1:                                 /* zlib wrapper */\n+        wraplen = 6 + (s->strstart ? 4 : 0);\n+        break;\n+    case 2:                                 /* gzip wrapper */\n+        wraplen = 18;\n+        if (s->gzhead != Z_NULL) {          /* user-supplied gzip header */\n+            if (s->gzhead->extra != Z_NULL)\n+                wraplen += 2 + s->gzhead->extra_len;\n+            str = s->gzhead->name;\n+            if (str != Z_NULL)\n+                do {\n+                    wraplen++;\n+                } while (*str++);\n+            str = s->gzhead->comment;\n+            if (str != Z_NULL)\n+                do {\n+                    wraplen++;\n+                } while (*str++);\n+            if (s->gzhead->hcrc)\n+                wraplen += 2;\n+        }\n+        break;\n+    default:                                /* for compiler happiness */\n+        wraplen = 6;\n+    }\n+\n+    /* if not default parameters, return conservative bound */\n     if (s->w_bits != 15 || s->hash_bits != 8 + 7)\n-        return destLen;\n+        return complen + wraplen;\n \n     /* default settings: return tight bound for that case */\n-    return compressBound(sourceLen);\n+    return sourceLen + (sourceLen >> 12) + (sourceLen >> 14) +\n+           (sourceLen >> 25) + 13 - 6 + wraplen;\n }\n \n /* =========================================================================\n@@ -557,7 +587,7 @@ int ZEXPORT deflate (strm, flush)\n     deflate_state *s;\n \n     if (strm == Z_NULL || strm->state == Z_NULL ||\n-        flush > Z_FINISH || flush < 0) {\n+        flush > Z_BLOCK || flush < 0) {\n         return Z_STREAM_ERROR;\n     }\n     s = strm->state;\n@@ -581,7 +611,7 @@ int ZEXPORT deflate (strm, flush)\n             put_byte(s, 31);\n             put_byte(s, 139);\n             put_byte(s, 8);\n-            if (s->gzhead == NULL) {\n+            if (s->gzhead == Z_NULL) {\n                 put_byte(s, 0);\n                 put_byte(s, 0);\n                 put_byte(s, 0);\n@@ -608,7 +638,7 @@ int ZEXPORT deflate (strm, flush)\n                             (s->strategy >= Z_HUFFMAN_ONLY || s->level < 2 ?\n                              4 : 0));\n                 put_byte(s, s->gzhead->os & 0xff);\n-                if (s->gzhead->extra != NULL) {\n+                if (s->gzhead->extra != Z_NULL) {\n                     put_byte(s, s->gzhead->extra_len & 0xff);\n                     put_byte(s, (s->gzhead->extra_len >> 8) & 0xff);\n                 }\n@@ -650,7 +680,7 @@ int ZEXPORT deflate (strm, flush)\n     }\n #ifdef GZIP\n     if (s->status == EXTRA_STATE) {\n-        if (s->gzhead->extra != NULL) {\n+        if (s->gzhead->extra != Z_NULL) {\n             uInt beg = s->pending;  /* start of bytes to update crc */\n \n             while (s->gzindex < (s->gzhead->extra_len & 0xffff)) {\n@@ -678,7 +708,7 @@ int ZEXPORT deflate (strm, flush)\n             s->status = NAME_STATE;\n     }\n     if (s->status == NAME_STATE) {\n-        if (s->gzhead->name != NULL) {\n+        if (s->gzhead->name != Z_NULL) {\n             uInt beg = s->pending;  /* start of bytes to update crc */\n             int val;\n \n@@ -709,7 +739,7 @@ int ZEXPORT deflate (strm, flush)\n             s->status = COMMENT_STATE;\n     }\n     if (s->status == COMMENT_STATE) {\n-        if (s->gzhead->comment != NULL) {\n+        if (s->gzhead->comment != Z_NULL) {\n             uInt beg = s->pending;  /* start of bytes to update crc */\n             int val;\n \n@@ -787,7 +817,9 @@ int ZEXPORT deflate (strm, flush)\n         (flush != Z_NO_FLUSH && s->status != FINISH_STATE)) {\n         block_state bstate;\n \n-        bstate = (*(configuration_table[s->level].func))(s, flush);\n+        bstate = s->strategy == Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n+                    (s->strategy == Z_RLE ? deflate_rle(s, flush) :\n+                        (*(configuration_table[s->level].func))(s, flush));\n \n         if (bstate == finish_started || bstate == finish_done) {\n             s->status = FINISH_STATE;\n@@ -808,13 +840,17 @@ int ZEXPORT deflate (strm, flush)\n         if (bstate == block_done) {\n             if (flush == Z_PARTIAL_FLUSH) {\n                 _tr_align(s);\n-            } else { /* FULL_FLUSH or SYNC_FLUSH */\n+            } else if (flush != Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n                 _tr_stored_block(s, (char*)0, 0L, 0);\n                 /* For a full flush, this empty block will be recognized\n                  * as a special marker by inflate_sync().\n                  */\n                 if (flush == Z_FULL_FLUSH) {\n                     CLEAR_HASH(s);             /* forget history */\n+                    if (s->lookahead == 0) {\n+                        s->strstart = 0;\n+                        s->block_start = 0L;\n+                    }\n                 }\n             }\n             flush_pending(strm);\n@@ -1167,12 +1203,13 @@ local uInt longest_match(s, cur_match)\n     return s->lookahead;\n }\n #endif /* ASMV */\n-#endif /* FASTEST */\n+\n+#else /* FASTEST */\n \n /* ---------------------------------------------------------------------------\n- * Optimized version for level == 1 or strategy == Z_RLE only\n+ * Optimized version for FASTEST only\n  */\n-local uInt longest_match_fast(s, cur_match)\n+local uInt longest_match(s, cur_match)\n     deflate_state *s;\n     IPos cur_match;                             /* current match */\n {\n@@ -1225,6 +1262,8 @@ local uInt longest_match_fast(s, cur_match)\n     return (uInt)len <= s->lookahead ? (uInt)len : s->lookahead;\n }\n \n+#endif /* FASTEST */\n+\n #ifdef DEBUG\n /* ===========================================================================\n  * Check that the match at match_start is indeed a match.\n@@ -1303,7 +1342,6 @@ local void fill_window(s)\n                later. (Using level 0 permanently is not an optimal usage of\n                zlib, so we don't care about this pathological case.)\n              */\n-            /* %%% avoid this when Z_RLE */\n             n = s->hash_size;\n             p = &s->head[n];\n             do {\n@@ -1355,27 +1393,61 @@ local void fill_window(s)\n          */\n \n     } while (s->lookahead < MIN_LOOKAHEAD && s->strm->avail_in != 0);\n+\n+    /* If the WIN_INIT bytes after the end of the current data have never been\n+     * written, then zero those bytes in order to avoid memory check reports of\n+     * the use of uninitialized (or uninitialised as Julian writes) bytes by\n+     * the longest match routines.  Update the high water mark for the next\n+     * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n+     * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n+     */\n+    if (s->high_water < s->window_size) {\n+        ulg curr = s->strstart + (ulg)(s->lookahead);\n+        ulg init;\n+\n+        if (s->high_water < curr) {\n+            /* Previous high water mark below current data -- zero WIN_INIT\n+             * bytes or up to end of window, whichever is less.\n+             */\n+            init = s->window_size - curr;\n+            if (init > WIN_INIT)\n+                init = WIN_INIT;\n+            zmemzero(s->window + curr, (unsigned)init);\n+            s->high_water = curr + init;\n+        }\n+        else if (s->high_water < (ulg)curr + WIN_INIT) {\n+            /* High water mark at or above current data, but below current data\n+             * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n+             * to end of window, whichever is less.\n+             */\n+            init = (ulg)curr + WIN_INIT - s->high_water;\n+            if (init > s->window_size - s->high_water)\n+                init = s->window_size - s->high_water;\n+            zmemzero(s->window + s->high_water, (unsigned)init);\n+            s->high_water += init;\n+        }\n+    }\n }\n \n /* ===========================================================================\n  * Flush the current block, with given end-of-file flag.\n  * IN assertion: strstart is set to the end of the current match.\n  */\n-#define FLUSH_BLOCK_ONLY(s, eof) { \\\n+#define FLUSH_BLOCK_ONLY(s, last) { \\\n    _tr_flush_block(s, (s->block_start >= 0L ? \\\n                    (charf *)&s->window[(unsigned)s->block_start] : \\\n                    (charf *)Z_NULL), \\\n                 (ulg)((long)s->strstart - s->block_start), \\\n-                (eof)); \\\n+                (last)); \\\n    s->block_start = s->strstart; \\\n    flush_pending(s->strm); \\\n    Tracev((stderr,\"[FLUSH]\")); \\\n }\n \n /* Same but force premature exit if necessary. */\n-#define FLUSH_BLOCK(s, eof) { \\\n-   FLUSH_BLOCK_ONLY(s, eof); \\\n-   if (s->strm->avail_out == 0) return (eof) ? finish_started : need_more; \\\n+#define FLUSH_BLOCK(s, last) { \\\n+   FLUSH_BLOCK_ONLY(s, last); \\\n+   if (s->strm->avail_out == 0) return (last) ? finish_started : need_more; \\\n }\n \n /* ===========================================================================\n@@ -1449,7 +1521,7 @@ local block_state deflate_fast(s, flush)\n     deflate_state *s;\n     int flush;\n {\n-    IPos hash_head = NIL; /* head of the hash chain */\n+    IPos hash_head;       /* head of the hash chain */\n     int bflush;           /* set if current block must be flushed */\n \n     for (;;) {\n@@ -1469,6 +1541,7 @@ local block_state deflate_fast(s, flush)\n         /* Insert the string window[strstart .. strstart+2] in the\n          * dictionary, and set hash_head to the head of the hash chain:\n          */\n+        hash_head = NIL;\n         if (s->lookahead >= MIN_MATCH) {\n             INSERT_STRING(s, s->strstart, hash_head);\n         }\n@@ -1481,19 +1554,8 @@ local block_state deflate_fast(s, flush)\n              * of window index 0 (in particular we have to avoid a match\n              * of the string with itself at the start of the input file).\n              */\n-#ifdef FASTEST\n-            if ((s->strategy != Z_HUFFMAN_ONLY && s->strategy != Z_RLE) ||\n-                (s->strategy == Z_RLE && s->strstart - hash_head == 1)) {\n-                s->match_length = longest_match_fast (s, hash_head);\n-            }\n-#else\n-            if (s->strategy != Z_HUFFMAN_ONLY && s->strategy != Z_RLE) {\n-                s->match_length = longest_match (s, hash_head);\n-            } else if (s->strategy == Z_RLE && s->strstart - hash_head == 1) {\n-                s->match_length = longest_match_fast (s, hash_head);\n-            }\n-#endif\n-            /* longest_match() or longest_match_fast() sets match_start */\n+            s->match_length = longest_match (s, hash_head);\n+            /* longest_match() sets match_start */\n         }\n         if (s->match_length >= MIN_MATCH) {\n             check_match(s, s->strstart, s->match_start, s->match_length);\n@@ -1555,7 +1617,7 @@ local block_state deflate_slow(s, flush)\n     deflate_state *s;\n     int flush;\n {\n-    IPos hash_head = NIL;    /* head of hash chain */\n+    IPos hash_head;          /* head of hash chain */\n     int bflush;              /* set if current block must be flushed */\n \n     /* Process the input block. */\n@@ -1576,6 +1638,7 @@ local block_state deflate_slow(s, flush)\n         /* Insert the string window[strstart .. strstart+2] in the\n          * dictionary, and set hash_head to the head of the hash chain:\n          */\n+        hash_head = NIL;\n         if (s->lookahead >= MIN_MATCH) {\n             INSERT_STRING(s, s->strstart, hash_head);\n         }\n@@ -1591,12 +1654,8 @@ local block_state deflate_slow(s, flush)\n              * of window index 0 (in particular we have to avoid a match\n              * of the string with itself at the start of the input file).\n              */\n-            if (s->strategy != Z_HUFFMAN_ONLY && s->strategy != Z_RLE) {\n-                s->match_length = longest_match (s, hash_head);\n-            } else if (s->strategy == Z_RLE && s->strstart - hash_head == 1) {\n-                s->match_length = longest_match_fast (s, hash_head);\n-            }\n-            /* longest_match() or longest_match_fast() sets match_start */\n+            s->match_length = longest_match (s, hash_head);\n+            /* longest_match() sets match_start */\n \n             if (s->match_length <= 5 && (s->strategy == Z_FILTERED\n #if TOO_FAR <= 32767\n@@ -1674,7 +1733,6 @@ local block_state deflate_slow(s, flush)\n }\n #endif /* FASTEST */\n \n-#if 0\n /* ===========================================================================\n  * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n  * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n@@ -1684,11 +1742,9 @@ local block_state deflate_rle(s, flush)\n     deflate_state *s;\n     int flush;\n {\n-    int bflush;         /* set if current block must be flushed */\n-    uInt run;           /* length of run */\n-    uInt max;           /* maximum length of run */\n-    uInt prev;          /* byte at distance one to match */\n-    Bytef *scan;        /* scan for end of run */\n+    int bflush;             /* set if current block must be flushed */\n+    uInt prev;              /* byte at distance one to match */\n+    Bytef *scan, *strend;   /* scan goes up to strend for length of run */\n \n     for (;;) {\n         /* Make sure that we always have enough lookahead, except\n@@ -1704,23 +1760,33 @@ local block_state deflate_rle(s, flush)\n         }\n \n         /* See how many times the previous byte repeats */\n-        run = 0;\n-        if (s->strstart > 0) {      /* if there is a previous byte, that is */\n-            max = s->lookahead < MAX_MATCH ? s->lookahead : MAX_MATCH;\n+        s->match_length = 0;\n+        if (s->lookahead >= MIN_MATCH && s->strstart > 0) {\n             scan = s->window + s->strstart - 1;\n-            prev = *scan++;\n-            do {\n-                if (*scan++ != prev)\n-                    break;\n-            } while (++run < max);\n+            prev = *scan;\n+            if (prev == *++scan && prev == *++scan && prev == *++scan) {\n+                strend = s->window + s->strstart + MAX_MATCH;\n+                do {\n+                } while (prev == *++scan && prev == *++scan &&\n+                         prev == *++scan && prev == *++scan &&\n+                         prev == *++scan && prev == *++scan &&\n+                         prev == *++scan && prev == *++scan &&\n+                         scan < strend);\n+                s->match_length = MAX_MATCH - (int)(strend - scan);\n+                if (s->match_length > s->lookahead)\n+                    s->match_length = s->lookahead;\n+            }\n         }\n \n         /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n-        if (run >= MIN_MATCH) {\n-            check_match(s, s->strstart, s->strstart - 1, run);\n-            _tr_tally_dist(s, 1, run - MIN_MATCH, bflush);\n-            s->lookahead -= run;\n-            s->strstart += run;\n+        if (s->match_length >= MIN_MATCH) {\n+            check_match(s, s->strstart, s->strstart - 1, s->match_length);\n+\n+            _tr_tally_dist(s, 1, s->match_length - MIN_MATCH, bflush);\n+\n+            s->lookahead -= s->match_length;\n+            s->strstart += s->match_length;\n+            s->match_length = 0;\n         } else {\n             /* No match, output a literal byte */\n             Tracevv((stderr,\"%c\", s->window[s->strstart]));\n@@ -1733,4 +1799,36 @@ local block_state deflate_rle(s, flush)\n     FLUSH_BLOCK(s, flush == Z_FINISH);\n     return flush == Z_FINISH ? finish_done : block_done;\n }\n-#endif\n+\n+/* ===========================================================================\n+ * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n+ * (It will be regenerated if this run of deflate switches away from Huffman.)\n+ */\n+local block_state deflate_huff(s, flush)\n+    deflate_state *s;\n+    int flush;\n+{\n+    int bflush;             /* set if current block must be flushed */\n+\n+    for (;;) {\n+        /* Make sure that we have a literal to write. */\n+        if (s->lookahead == 0) {\n+            fill_window(s);\n+            if (s->lookahead == 0) {\n+                if (flush == Z_NO_FLUSH)\n+                    return need_more;\n+                break;      /* flush the current block */\n+            }\n+        }\n+\n+        /* Output a literal byte */\n+        s->match_length = 0;\n+        Tracevv((stderr,\"%c\", s->window[s->strstart]));\n+        _tr_tally_lit (s, s->window[s->strstart], bflush);\n+        s->lookahead--;\n+        s->strstart++;\n+        if (bflush) FLUSH_BLOCK(s, 0);\n+    }\n+    FLUSH_BLOCK(s, flush == Z_FINISH);\n+    return flush == Z_FINISH ? finish_done : block_done;\n+}"}, {"sha": "184857545fc46841d5ef7e694f7430704f65ded1", "filename": "zlib/deflate.h", "status": "modified", "additions": 23, "deletions": 12, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fdeflate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fdeflate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fdeflate.h?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -1,5 +1,5 @@\n /* deflate.h -- internal compression state\n- * Copyright (C) 1995-2004 Jean-loup Gailly\n+ * Copyright (C) 1995-2010 Jean-loup Gailly\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -260,6 +260,13 @@ typedef struct internal_state {\n      * are always zero.\n      */\n \n+    ulg high_water;\n+    /* High water mark offset in window for initialized bytes -- bytes above\n+     * this are set to zero in order to avoid memory check warnings when\n+     * longest match routines access bytes past the input.  This is then\n+     * updated to the new high water mark.\n+     */\n+\n } FAR deflate_state;\n \n /* Output a byte on the stream.\n@@ -278,14 +285,18 @@ typedef struct internal_state {\n  * distances are limited to MAX_DIST instead of WSIZE.\n  */\n \n+#define WIN_INIT MAX_MATCH\n+/* Number of bytes after end of data in window to initialize in order to avoid\n+   memory checker errors from longest match routines */\n+\n         /* in trees.c */\n-void _tr_init         OF((deflate_state *s));\n-int  _tr_tally        OF((deflate_state *s, unsigned dist, unsigned lc));\n-void _tr_flush_block  OF((deflate_state *s, charf *buf, ulg stored_len,\n-                          int eof));\n-void _tr_align        OF((deflate_state *s));\n-void _tr_stored_block OF((deflate_state *s, charf *buf, ulg stored_len,\n-                          int eof));\n+void ZLIB_INTERNAL _tr_init OF((deflate_state *s));\n+int ZLIB_INTERNAL _tr_tally OF((deflate_state *s, unsigned dist, unsigned lc));\n+void ZLIB_INTERNAL _tr_flush_block OF((deflate_state *s, charf *buf,\n+                        ulg stored_len, int last));\n+void ZLIB_INTERNAL _tr_align OF((deflate_state *s));\n+void ZLIB_INTERNAL _tr_stored_block OF((deflate_state *s, charf *buf,\n+                        ulg stored_len, int last));\n \n #define d_code(dist) \\\n    ((dist) < 256 ? _dist_code[dist] : _dist_code[256+((dist)>>7)])\n@@ -298,11 +309,11 @@ void _tr_stored_block OF((deflate_state *s, charf *buf, ulg stored_len,\n /* Inline versions of _tr_tally for speed: */\n \n #if defined(GEN_TREES_H) || !defined(STDC)\n-  extern uch _length_code[];\n-  extern uch _dist_code[];\n+  extern uch ZLIB_INTERNAL _length_code[];\n+  extern uch ZLIB_INTERNAL _dist_code[];\n #else\n-  extern const uch _length_code[];\n-  extern const uch _dist_code[];\n+  extern const uch ZLIB_INTERNAL _length_code[];\n+  extern const uch ZLIB_INTERNAL _dist_code[];\n #endif\n \n # define _tr_tally_lit(s, c, flush) \\"}, {"sha": "34960bddaccdb7ab4cf0a8a0f4370137c8a110e5", "filename": "zlib/doc/algorithm.txt", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fdoc%2Falgorithm.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fdoc%2Falgorithm.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fdoc%2Falgorithm.txt?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "patch": "@@ -121,7 +121,7 @@ At least for deflate's output that generates new trees every several 10's of\n kbytes.  You can imagine that filling in a 2^15 entry table for a 15-bit code\n would take too long if you're only decoding several thousand symbols.  At the\n other extreme, you could make a new table for every bit in the code.  In fact,\n-that's essentially a Huffman tree.  But then you spend two much time\n+that's essentially a Huffman tree.  But then you spend too much time\n traversing the tree while decoding, even for short symbols.\n \n So the number of bits for the first lookup table is a trade of the time to", "previous_filename": "zlib/algorithm.txt"}, {"sha": "ce6428a0f2eed45691ce209b1daf36807c29b3e7", "filename": "zlib/doc/rfc1950.txt", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fdoc%2Frfc1950.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fdoc%2Frfc1950.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fdoc%2Frfc1950.txt?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "403c8c722ff24ca034973876fa819d37715b9b6a", "filename": "zlib/doc/rfc1951.txt", "status": "added", "additions": 955, "deletions": 0, "changes": 955, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fdoc%2Frfc1951.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fdoc%2Frfc1951.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fdoc%2Frfc1951.txt?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "a8e51b4567fd49035fd3b570ba7c57f9a48b01b1", "filename": "zlib/doc/rfc1952.txt", "status": "added", "additions": 675, "deletions": 0, "changes": 675, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fdoc%2Frfc1952.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fdoc%2Frfc1952.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fdoc%2Frfc1952.txt?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "3d0f0634f72e6483c54857b0dbd72c219e46671e", "filename": "zlib/doc/txtvsbin.txt", "status": "added", "additions": 107, "deletions": 0, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fdoc%2Ftxtvsbin.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fdoc%2Ftxtvsbin.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fdoc%2Ftxtvsbin.txt?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "e30389750b23bdc85cbc34a84e7df74d5eb59aab", "filename": "zlib/example.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fexample.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fexample.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fexample.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "56a31714e566aa29fd85dec5ea3a9716f558fefa", "filename": "zlib/examples/README.examples", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fexamples%2FREADME.examples", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fexamples%2FREADME.examples", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fexamples%2FREADME.examples?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "c40410badef7d1210d8bcd5d5fd451ddd6a4891a", "filename": "zlib/examples/enough.c", "status": "added", "additions": 569, "deletions": 0, "changes": 569, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fexamples%2Fenough.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fexamples%2Fenough.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fexamples%2Fenough.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "72b0882ab86fc2c408ca0827f48609297a95dba4", "filename": "zlib/examples/gun.c", "status": "modified", "additions": 26, "deletions": 18, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fexamples%2Fgun.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fexamples%2Fgun.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fexamples%2Fgun.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "d70aacabaebbf57db6b999fda1c17af6b0e8c243", "filename": "zlib/examples/gzlog.c", "status": "modified", "additions": 974, "deletions": 329, "changes": 1303, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fexamples%2Fgzlog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fexamples%2Fgzlog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fexamples%2Fgzlog.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "c46142673dba77b45da50f54f03a702d6d0ab2d1", "filename": "zlib/examples/gzlog.h", "status": "modified", "additions": 62, "deletions": 31, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fexamples%2Fgzlog.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fexamples%2Fgzlog.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fexamples%2Fgzlog.h?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "444ff1c9a32e8530f5f4cffe29ad51be4366c39b", "filename": "zlib/examples/zlib_how.html", "status": "modified", "additions": 29, "deletions": 7, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fexamples%2Fzlib_how.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fexamples%2Fzlib_how.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fexamples%2Fzlib_how.html?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "83535d1693580f04824a2ddd22bd241fd00533d8", "filename": "zlib/examples/zpipe.c", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fexamples%2Fzpipe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fexamples%2Fzpipe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fexamples%2Fzpipe.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "617a13086fa48931343d69545bded3e752e577f1", "filename": "zlib/examples/zran.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fexamples%2Fzran.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fexamples%2Fzran.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fexamples%2Fzran.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "caeb99a3177f477d622870255a00ac2b72f10cad", "filename": "zlib/gzclose.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fgzclose.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fgzclose.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fgzclose.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "0f8fb79f87d4f65e7f5667129c763e3a361199f2", "filename": "zlib/gzguts.h", "status": "added", "additions": 132, "deletions": 0, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fgzguts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fgzguts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fgzguts.h?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "a35877440f50e6983b887805061d517d9f5a98a7", "filename": "zlib/gzio.c", "status": "removed", "additions": 0, "deletions": 1026, "changes": 1026, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d216c70d980e3169b42e9734cf4bea1648ff8f0/zlib%2Fgzio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d216c70d980e3169b42e9734cf4bea1648ff8f0/zlib%2Fgzio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fgzio.c?ref=5d216c70d980e3169b42e9734cf4bea1648ff8f0"}, {"sha": "603e60ed5444e0e7a2ed9590a9d9a73ce7cc97bf", "filename": "zlib/gzlib.c", "status": "added", "additions": 537, "deletions": 0, "changes": 537, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fgzlib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fgzlib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fgzlib.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "548201ab0099b51556da32c4873d1dbb2d211b5a", "filename": "zlib/gzread.c", "status": "added", "additions": 653, "deletions": 0, "changes": 653, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fgzread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fgzread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fgzread.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "e8defc6887a186055f17597968c4fc5791332811", "filename": "zlib/gzwrite.c", "status": "added", "additions": 531, "deletions": 0, "changes": 531, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fgzwrite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fgzwrite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fgzwrite.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "af3a8c965d50cc6ac05c6c844a8f79e2cdc9f3c1", "filename": "zlib/infback.c", "status": "modified", "additions": 51, "deletions": 42, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Finfback.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Finfback.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Finfback.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "2f1d60b43b8a9deacf22bb5526a979dcc219a68f", "filename": "zlib/inffast.c", "status": "modified", "additions": 51, "deletions": 29, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Finffast.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Finffast.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Finffast.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "e5c1aa4ca8cd5244423680865609c71ab68f9ab6", "filename": "zlib/inffast.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Finffast.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Finffast.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Finffast.h?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "a8431abeacffd97e5028a9e54135a5f173528960", "filename": "zlib/inflate.c", "status": "modified", "additions": 197, "deletions": 85, "changes": 282, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Finflate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Finflate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Finflate.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "95f4986d400223bad542e5b34a7e6284a039425e", "filename": "zlib/inflate.h", "status": "modified", "additions": 19, "deletions": 12, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Finflate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Finflate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Finflate.h?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "11e9c52accbe8e2cf4e502f88ce89ccfa4f992e5", "filename": "zlib/inftrees.c", "status": "modified", "additions": 32, "deletions": 31, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Finftrees.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Finftrees.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Finftrees.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "baa53a0b1a199ce6ea4c3f99d0306502ab4fab2c", "filename": "zlib/inftrees.h", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Finftrees.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Finftrees.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Finftrees.h?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "6576490e651cfefec4a1c54bd6c1274e26335245", "filename": "zlib/make_vms.com", "status": "modified", "additions": 411, "deletions": 68, "changes": 479, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fmake_vms.com", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fmake_vms.com", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fmake_vms.com?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "7aa1c0f4ddd088c3589f85fcb4c8d14d0e45e093", "filename": "zlib/minigzip.c", "status": "modified", "additions": 126, "deletions": 8, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fminigzip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fminigzip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fminigzip.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "0c1b99c9b9f13d8450c60649c0117cb49fe0cdcf", "filename": "zlib/msdos/Makefile.bor", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fmsdos%2FMakefile.bor", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fmsdos%2FMakefile.bor", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fmsdos%2FMakefile.bor?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "29b03954d7bb5c21ef8866798153d9a771b68525", "filename": "zlib/msdos/Makefile.dj2", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fmsdos%2FMakefile.dj2", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fmsdos%2FMakefile.dj2", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fmsdos%2FMakefile.dj2?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "9c1b57a58579851fd0184f0510631568e7b5fd8d", "filename": "zlib/msdos/Makefile.emx", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fmsdos%2FMakefile.emx", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fmsdos%2FMakefile.emx", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fmsdos%2FMakefile.emx?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "cd2816fbf3159ac91a75f187819aee93bbf7b749", "filename": "zlib/msdos/Makefile.msc", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fmsdos%2FMakefile.msc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fmsdos%2FMakefile.msc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fmsdos%2FMakefile.msc?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "bcd0d1889c558339079cef7fe842a61e02534aad", "filename": "zlib/msdos/Makefile.tc", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fmsdos%2FMakefile.tc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fmsdos%2FMakefile.tc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fmsdos%2FMakefile.tc?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "21337d01ab2fe20743682125994666e20af6b7e7", "filename": "zlib/nintendods/Makefile", "status": "added", "additions": 126, "deletions": 0, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fnintendods%2FMakefile", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fnintendods%2FMakefile", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fnintendods%2FMakefile?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "ba7a37dbe8e9163da1d3e1da995372e7e611ccae", "filename": "zlib/nintendods/README", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fnintendods%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fnintendods%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fnintendods%2FREADME?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "9cf94bb35673d67786957d0df87b67aaf622f29a", "filename": "zlib/old/as400/bndsrc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fold%2Fas400%2Fbndsrc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fold%2Fas400%2Fbndsrc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fold%2Fas400%2Fbndsrc?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "previous_filename": "zlib/as400/bndsrc"}, {"sha": "85549515006281b6ccc305d7bddccfeb84dcb529", "filename": "zlib/old/as400/compile.clp", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fold%2Fas400%2Fcompile.clp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fold%2Fas400%2Fcompile.clp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fold%2Fas400%2Fcompile.clp?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "previous_filename": "zlib/as400/compile.clp"}, {"sha": "beae13f565bda4eab2966bbd059394dc7a4f23e5", "filename": "zlib/old/as400/readme.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fold%2Fas400%2Freadme.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fold%2Fas400%2Freadme.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fold%2Fas400%2Freadme.txt?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "previous_filename": "zlib/as400/readme.txt"}, {"sha": "a9a4f5cf4f61c371780ba278f9a29d6ba6b00bca", "filename": "zlib/old/as400/zlib.inc", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fold%2Fas400%2Fzlib.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fold%2Fas400%2Fzlib.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fold%2Fas400%2Fzlib.inc?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "previous_filename": "zlib/as400/zlib.inc"}, {"sha": "d0296c272c31c82545b0d287c0b9a4198c834854", "filename": "zlib/old/visualc6/README.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fold%2Fvisualc6%2FREADME.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fold%2Fvisualc6%2FREADME.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fold%2Fvisualc6%2FREADME.txt?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "previous_filename": "zlib/projects/visualc6/README.txt"}, {"sha": "d3580525bd4e1d453d1f62d920237273672f8aea", "filename": "zlib/old/visualc6/example.dsp", "status": "renamed", "additions": 63, "deletions": 63, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fold%2Fvisualc6%2Fexample.dsp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fold%2Fvisualc6%2Fexample.dsp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fold%2Fvisualc6%2Fexample.dsp?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "previous_filename": "zlib/projects/visualc6/example.dsp"}, {"sha": "71034684d820b2fb01b843e13b03dc54fcf62a8e", "filename": "zlib/old/visualc6/minigzip.dsp", "status": "renamed", "additions": 63, "deletions": 63, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fold%2Fvisualc6%2Fminigzip.dsp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fold%2Fvisualc6%2Fminigzip.dsp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fold%2Fvisualc6%2Fminigzip.dsp?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "previous_filename": "zlib/projects/visualc6/minigzip.dsp"}, {"sha": "00f54ea4222e6fe274958c77379ae5066cf99266", "filename": "zlib/old/visualc6/zlib.dsp", "status": "renamed", "additions": 127, "deletions": 115, "changes": 242, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fold%2Fvisualc6%2Fzlib.dsp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fold%2Fvisualc6%2Fzlib.dsp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fold%2Fvisualc6%2Fzlib.dsp?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "previous_filename": "zlib/projects/visualc6/zlib.dsp"}, {"sha": "3a771fce07d16f68c4dfffd6f90d7ea8973d6c76", "filename": "zlib/old/visualc6/zlib.dsw", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fold%2Fvisualc6%2Fzlib.dsw", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fold%2Fvisualc6%2Fzlib.dsw", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fold%2Fvisualc6%2Fzlib.dsw?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "previous_filename": "zlib/projects/visualc6/zlib.dsw"}, {"sha": "8c1b190c38b967709e2d39563b4393b41a294c89", "filename": "zlib/old/zlib.html", "status": "removed", "additions": 0, "deletions": 971, "changes": 971, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d216c70d980e3169b42e9734cf4bea1648ff8f0/zlib%2Fold%2Fzlib.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d216c70d980e3169b42e9734cf4bea1648ff8f0/zlib%2Fold%2Fzlib.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fold%2Fzlib.html?ref=5d216c70d980e3169b42e9734cf4bea1648ff8f0"}, {"sha": "1c029e4a34019956bbfdf55e7062b89a36da6b9e", "filename": "zlib/projects/README.projects", "status": "removed", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d216c70d980e3169b42e9734cf4bea1648ff8f0/zlib%2Fprojects%2FREADME.projects", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d216c70d980e3169b42e9734cf4bea1648ff8f0/zlib%2Fprojects%2FREADME.projects", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fprojects%2FREADME.projects?ref=5d216c70d980e3169b42e9734cf4bea1648ff8f0"}, {"sha": "2bc63b21ace314939b9e5f049b63427c05d0eae9", "filename": "zlib/qnx/package.qpg", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fqnx%2Fpackage.qpg", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fqnx%2Fpackage.qpg", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fqnx%2Fpackage.qpg?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "6b8f5428d44b2b427469ec7468771f12462f114c", "filename": "zlib/treebuild.xml", "status": "added", "additions": 116, "deletions": 0, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Ftreebuild.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Ftreebuild.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Ftreebuild.xml?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "049a91a0b69c0c7ef32f510c8baa687dafa7a82c", "filename": "zlib/trees.c", "status": "modified", "additions": 59, "deletions": 34, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Ftrees.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Ftrees.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Ftrees.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "d35639d82a27807e49ea35c334f8bbcf64720f82", "filename": "zlib/trees.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Ftrees.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Ftrees.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Ftrees.h?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "8a2e1f97194f18bb537da65f9642573b5399c71e", "filename": "zlib/uncompr.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Funcompr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Funcompr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Funcompr.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "37f4d74c19c0a369f8bf54f177d42d977ee53f52", "filename": "zlib/watcom/watcom_f.mak", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fwatcom%2Fwatcom_f.mak", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fwatcom%2Fwatcom_f.mak", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fwatcom%2Fwatcom_f.mak?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "193eed7b318a605bb0fca99c972d1998931c1016", "filename": "zlib/watcom/watcom_l.mak", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fwatcom%2Fwatcom_l.mak", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fwatcom%2Fwatcom_l.mak", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fwatcom%2Fwatcom_l.mak?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "12c009018c3775df11e98b403a447d97a46da4ab", "filename": "zlib/win32/DLL_FAQ.txt", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fwin32%2FDLL_FAQ.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fwin32%2FDLL_FAQ.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fwin32%2FDLL_FAQ.txt?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "3981d4246b7cc41a82aa331d2df3c706e54a4653", "filename": "zlib/win32/Makefile.bor", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fwin32%2FMakefile.bor", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fwin32%2FMakefile.bor", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fwin32%2FMakefile.bor?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "4d6ab0efa6629b13024d9c153de24a43732949b8", "filename": "zlib/win32/Makefile.emx", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fwin32%2FMakefile.emx", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fwin32%2FMakefile.emx", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fwin32%2FMakefile.emx?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "0a33bf6a704acbff20500a730b43f0ad38db793d", "filename": "zlib/win32/Makefile.gcc", "status": "modified", "additions": 47, "deletions": 24, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fwin32%2FMakefile.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fwin32%2FMakefile.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fwin32%2FMakefile.gcc?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "fa10a1aa5f1118baded1163cf041ecc3cf937749", "filename": "zlib/win32/Makefile.msc", "status": "modified", "additions": 53, "deletions": 22, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fwin32%2FMakefile.msc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fwin32%2FMakefile.msc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fwin32%2FMakefile.msc?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "1e4c093c5e7b15fbef3fba9cd94ef43bb43f09fb", "filename": "zlib/win32/README-WIN32.txt", "status": "added", "additions": 103, "deletions": 0, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fwin32%2FREADME-WIN32.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fwin32%2FREADME-WIN32.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fwin32%2FREADME-WIN32.txt?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "03df8bf822aa1508de20b085e2893cbff99cab38", "filename": "zlib/win32/zlib.def", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fwin32%2Fzlib.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fwin32%2Fzlib.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fwin32%2Fzlib.def?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "0d1d7ffcf70594a3161023f651fd06651dc2d308", "filename": "zlib/win32/zlib1.rc", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fwin32%2Fzlib1.rc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fwin32%2Fzlib1.rc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fwin32%2Fzlib1.rc?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "89c483eb5ac6d8ae87abaa81188a9a623ba597d9", "filename": "zlib/zconf.h", "status": "modified", "additions": 143, "deletions": 47, "changes": 190, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fzconf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fzconf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fzconf.h?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "a2f71b1f32e20339cc4ff1e22256bc18d57c172b", "filename": "zlib/zconf.h.cmakein", "status": "added", "additions": 430, "deletions": 0, "changes": 430, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fzconf.h.cmakein", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fzconf.h.cmakein", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fzconf.h.cmakein?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "02ce56c4313b7e7490c0416ed52bfd9c65694553", "filename": "zlib/zconf.h.in", "status": "renamed", "additions": 143, "deletions": 47, "changes": 190, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fzconf.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fzconf.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fzconf.h.in?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd", "previous_filename": "zlib/zconf.in.h"}, {"sha": "27adc4cd10a35713943497e5c4c91b09e70e74ef", "filename": "zlib/zlib.3", "status": "modified", "additions": 29, "deletions": 37, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fzlib.3", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fzlib.3", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fzlib.3?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "bfbba83e8ee0902abe8bcbfab8bdebbbc07dca69", "filename": "zlib/zlib.h", "status": "modified", "additions": 709, "deletions": 453, "changes": 1162, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fzlib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fzlib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fzlib.h?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "f282d3624a5128921937e3f8cc197ad1f5a0c5a1", "filename": "zlib/zlib.map", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fzlib.map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fzlib.map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fzlib.map?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "7e5acf9c77e7749e710a8960de27d8eff7d94786", "filename": "zlib/zlib.pc.in", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fzlib.pc.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fzlib.pc.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fzlib.pc.in?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "15e3e165f37decb7c403a892438650de80f3b928", "filename": "zlib/zlib2ansi", "status": "added", "additions": 152, "deletions": 0, "changes": 152, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fzlib2ansi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fzlib2ansi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fzlib2ansi?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "cea4a311c3f01d7725b78fb47d1228dc90306763", "filename": "zlib/zutil.c", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fzutil.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fzutil.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fzutil.c?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}, {"sha": "31a5353dcb323a8fd1dac8cd7ea00ccd840a0964", "filename": "zlib/zutil.h", "status": "modified", "additions": 34, "deletions": 29, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fzutil.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43743d63b3e6026088cb5bacca87ccc08acd97cd/zlib%2Fzutil.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fzutil.h?ref=43743d63b3e6026088cb5bacca87ccc08acd97cd"}]}