{"sha": "7c286398e0a815c86b9aaf73ace6acf462235a87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2MyODYzOThlMGE4MTVjODZiOWFhZjczYWNlNmFjZjQ2MjIzNWE4Nw==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2015-10-05T22:18:05Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2015-10-05T22:18:05Z"}, "message": "Fix PR65345 in SH backend\nAdjust to use create_tmp_var_raw rather than create_tmp_var at\nsh_atomic_assign_expand_fenv.\n\nFrom-SVN: r228502", "tree": {"sha": "5fd4dfe98576a9533a1087c8a436844d4d7fd3cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5fd4dfe98576a9533a1087c8a436844d4d7fd3cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c286398e0a815c86b9aaf73ace6acf462235a87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c286398e0a815c86b9aaf73ace6acf462235a87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c286398e0a815c86b9aaf73ace6acf462235a87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c286398e0a815c86b9aaf73ace6acf462235a87/comments", "author": null, "committer": null, "parents": [{"sha": "fcbc0f7cf76a9ee075003fe38ae900bf4842becc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcbc0f7cf76a9ee075003fe38ae900bf4842becc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcbc0f7cf76a9ee075003fe38ae900bf4842becc"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "1007bd9a333fdda00ade9b656e25b839f0e84766", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c286398e0a815c86b9aaf73ace6acf462235a87/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c286398e0a815c86b9aaf73ace6acf462235a87/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7c286398e0a815c86b9aaf73ace6acf462235a87", "patch": "@@ -1,3 +1,9 @@\n+2015-10-05  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\tPR c/65345\n+\t* config/sh/sh.c (sh_atomic_assign_expand_fenv): Adjust to use\n+\tcreate_tmp_var_raw rather than create_tmp_var.\n+\n 2015-10-05  Marek Polacek  <polacek@redhat.com>\n \n \t* tree-ssa-loop-im.c"}, {"sha": "54da3386ff733ce1bc07ebcecf9e4aaf87d620c6", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c286398e0a815c86b9aaf73ace6acf462235a87/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c286398e0a815c86b9aaf73ace6acf462235a87/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=7c286398e0a815c86b9aaf73ace6acf462235a87", "patch": "@@ -12106,17 +12106,19 @@ sh_atomic_assign_expand_fenv (tree *hold, tree *clear, tree *update)\n \n        __builtin_sh_set_fpscr (masked_fenv);  */\n \n-  fenv_var = create_tmp_var (unsigned_type_node);\n+  fenv_var = create_tmp_var_raw (unsigned_type_node);\n   mask = build_int_cst (unsigned_type_node,\n \t\t\t~((SH_FE_ALL_EXCEPT << SH_FE_EXCEPT_SHIFT)\n \t\t\t  | SH_FE_ALL_EXCEPT));\n   ld_fenv = build2 (MODIFY_EXPR, unsigned_type_node,\n \t\t    fenv_var, build_call_expr (sh_builtin_get_fpscr, 0));\n   masked_fenv = build2 (BIT_AND_EXPR, unsigned_type_node, fenv_var, mask);\n   hold_fnclex = build_call_expr (sh_builtin_set_fpscr, 1, masked_fenv);\n-  *hold = build2 (COMPOUND_EXPR, void_type_node,\n-\t\t  build2 (COMPOUND_EXPR, void_type_node, masked_fenv, ld_fenv),\n-\t\t  hold_fnclex);\n+  fenv_var = build4 (TARGET_EXPR, unsigned_type_node, fenv_var,\n+\t\t     build2 (COMPOUND_EXPR, void_type_node, masked_fenv,\n+\t\t\t     ld_fenv),\n+\t\t     NULL_TREE, NULL_TREE);\n+  *hold = build2 (COMPOUND_EXPR, void_type_node, fenv_var, hold_fnclex);\n \n   /* Store the value of masked_fenv to clear the exceptions:\n      __builtin_sh_set_fpscr (masked_fenv);  */\n@@ -12131,7 +12133,7 @@ sh_atomic_assign_expand_fenv (tree *hold, tree *clear, tree *update)\n \n        __atomic_feraiseexcept (new_fenv_var);  */\n \n-  new_fenv_var = create_tmp_var (unsigned_type_node);\n+  new_fenv_var = create_tmp_var_raw (unsigned_type_node);\n   reload_fenv = build2 (MODIFY_EXPR, unsigned_type_node, new_fenv_var,\n \t\t\tbuild_call_expr (sh_builtin_get_fpscr, 0));\n   restore_fnenv = build_call_expr (sh_builtin_set_fpscr, 1, fenv_var);"}]}