{"sha": "911c34a6b8847f14fb533488caca8d0f57a285d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTExYzM0YTZiODg0N2YxNGZiNTMzNDg4Y2FjYThkMGY1N2EyODVkOQ==", "commit": {"author": {"name": "Kris Van Hees", "email": "kris.van.hees@oracle.com", "date": "2008-07-18T22:37:42Z"}, "committer": {"name": "Kris Van Hees", "email": "kvanhees@gcc.gnu.org", "date": "2008-07-18T22:37:42Z"}, "message": "utf-array.C: Fix broken merge/checkin.\n\n2008-07-18  Kris Van Hees  <kris.van.hees@oracle.com>\n\n       * g++.dg/ext/utf-array.C: Fix broken merge/checkin.\n       * g++.dg/ext/utf-array-short-wchar.C: Idem\n       * gcc.dg/utf-array.c: Idem\n       * gcc.dg/utf-array-short-wchar.c: Idem\n\nFrom-SVN: r137970", "tree": {"sha": "a9ca7fba352e14d89adecf8497a05ee1bc1a46d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9ca7fba352e14d89adecf8497a05ee1bc1a46d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/911c34a6b8847f14fb533488caca8d0f57a285d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/911c34a6b8847f14fb533488caca8d0f57a285d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/911c34a6b8847f14fb533488caca8d0f57a285d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/911c34a6b8847f14fb533488caca8d0f57a285d9/comments", "author": {"login": "kvanhees", "id": 36747794, "node_id": "MDQ6VXNlcjM2NzQ3Nzk0", "avatar_url": "https://avatars.githubusercontent.com/u/36747794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvanhees", "html_url": "https://github.com/kvanhees", "followers_url": "https://api.github.com/users/kvanhees/followers", "following_url": "https://api.github.com/users/kvanhees/following{/other_user}", "gists_url": "https://api.github.com/users/kvanhees/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvanhees/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvanhees/subscriptions", "organizations_url": "https://api.github.com/users/kvanhees/orgs", "repos_url": "https://api.github.com/users/kvanhees/repos", "events_url": "https://api.github.com/users/kvanhees/events{/privacy}", "received_events_url": "https://api.github.com/users/kvanhees/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e5e981d55e734534d81318b849a1e8bb6b6036da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5e981d55e734534d81318b849a1e8bb6b6036da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5e981d55e734534d81318b849a1e8bb6b6036da"}], "stats": {"total": 168, "additions": 14, "deletions": 154}, "files": [{"sha": "338edcd9deedadb112e36583293eb96f54ee34d9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/911c34a6b8847f14fb533488caca8d0f57a285d9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/911c34a6b8847f14fb533488caca8d0f57a285d9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=911c34a6b8847f14fb533488caca8d0f57a285d9", "patch": "@@ -1,3 +1,10 @@\n+2008-07-18  Kris Van Hees  <kris.van.hees@oracle.com>\n+\n+\t* g++.dg/ext/utf-array.C: Fix broken merge/checkin.\n+\t* g++.dg/ext/utf-array-short-wchar.C: Idem\n+\t* gcc.dg/utf-array.c: Idem\n+\t* gcc.dg/utf-array-short-wchar.c: Idem\n+\n 2008-07-18  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/fshort-wchar.c: Use -Wl,--no-wchar-size-warning on\n@@ -13,6 +20,13 @@\n \tPR c++/36407\n \t* g++.dg/conversion/op5.C: New testcase.\n \n+2008-07-18  Kris Van Hees  <kris.van.hees@oracle.com>\n+\n+\t* g++.dg/ext/utf-array.C: Fix broken merge/checkin.\n+\t* g++.dg/ext/utf-array-short-wchar.C: Idem\n+\t* gcc.dg/utf-array.c: Idem\n+\t* gcc.dg/utf-array-short-wchar.c: Idem\n+\n 2008-07-18  Kris Van Hees  <kris.van.hees@oracle.com>\n \n \tTests for char16_t and char32_t support."}, {"sha": "43ae508d64db4c64c89fed059dd8741519d2f77e", "filename": "gcc/testsuite/g++.dg/ext/utf-array-short-wchar.C", "status": "modified", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/911c34a6b8847f14fb533488caca8d0f57a285d9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Futf-array-short-wchar.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/911c34a6b8847f14fb533488caca8d0f57a285d9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Futf-array-short-wchar.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Futf-array-short-wchar.C?ref=911c34a6b8847f14fb533488caca8d0f57a285d9", "patch": "@@ -34,39 +34,3 @@ const wchar_t\tsw_0[]\t= \"ab\";\t\t/* { dg-error \"from non-wide\" } */\n const wchar_t\tsw_1[]\t= u\"ab\";\t/* { dg-error \"from incompatible\" } */\n const wchar_t\tsw_2[]\t= U\"ab\";\t/* { dg-error \"from incompatible\" } */\n const wchar_t\tsw_3[]\t= L\"ab\";\n-/* Contributed by Kris Van Hees <kris.van.hees@oracle.com> */\n-/* Expected errors for char16_t/char32_t string literals. */\n-/* { dg-do compile } */\n-/* { dg-options \"-std=c++0x -fshort-wchar\" } */\n-\n-const char\ts_0[]\t= \"ab\";\n-const char\ts_1[]\t= u\"ab\";\t/* { dg-error \"from wide string\" } */\n-const char\ts_2[]\t= U\"ab\";\t/* { dg-error \"from wide string\" } */\n-const char\ts_3[]\t= L\"ab\";\t/* { dg-error \"from wide string\" } */\n-\n-const char16_t\ts16_0[]\t= \"ab\";\t\t/* { dg-error \"from non-wide\" } */\n-const char16_t\ts16_1[]\t= u\"ab\";\n-const char16_t\ts16_2[]\t= U\"ab\";\t/* { dg-error \"from incompatible\" } */\n-const char16_t\ts16_3[]\t= L\"ab\";\t/* { dg-error \"from incompatible\" } */\n-\n-const char16_t\ts16_4[0] = u\"ab\";\t/* { dg-warning \"chars is too long\" } */\n-const char16_t\ts16_5[1] = u\"ab\";\t/* { dg-warning \"chars is too long\" } */\n-const char16_t\ts16_6[2] = u\"ab\";\t/* { dg-warning \"chars is too long\" } */\n-const char16_t\ts16_7[3] = u\"ab\";\n-const char16_t\ts16_8[4] = u\"ab\";\n-\n-const char32_t\ts32_0[]\t= \"ab\";\t\t/* { dg-error \"from non-wide\" } */\n-const char32_t\ts32_1[]\t= u\"ab\";\t/* { dg-error \"from incompatible\" } */\n-const char32_t\ts32_2[]\t= U\"ab\";\n-const char32_t\ts32_3[]\t= L\"ab\";\t/* { dg-error \"from incompatible\" } */\n-\n-const char16_t\ts32_4[0] = u\"ab\";\t/* { dg-warning \"chars is too long\" } */\n-const char16_t\ts32_5[1] = u\"ab\";\t/* { dg-warning \"chars is too long\" } */\n-const char16_t\ts32_6[2] = u\"ab\";\t/* { dg-warning \"chars is too long\" } */\n-const char16_t\ts32_7[3] = u\"ab\";\n-const char16_t\ts32_8[4] = u\"ab\";\n-\n-const wchar_t\tsw_0[]\t= \"ab\";\t\t/* { dg-error \"from non-wide\" } */\n-const wchar_t\tsw_1[]\t= u\"ab\";\t/* { dg-error \"from incompatible\" } */\n-const wchar_t\tsw_2[]\t= U\"ab\";\t/* { dg-error \"from incompatible\" } */\n-const wchar_t\tsw_3[]\t= L\"ab\";"}, {"sha": "65d8453d99de03192079dee93ab07b0824750796", "filename": "gcc/testsuite/g++.dg/ext/utf-array.C", "status": "modified", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/911c34a6b8847f14fb533488caca8d0f57a285d9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Futf-array.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/911c34a6b8847f14fb533488caca8d0f57a285d9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Futf-array.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Futf-array.C?ref=911c34a6b8847f14fb533488caca8d0f57a285d9", "patch": "@@ -34,39 +34,3 @@ const wchar_t\tsw_0[]\t= \"ab\";\t\t/* { dg-error \"from non-wide\" } */\n const wchar_t\tsw_1[]\t= u\"ab\";\t/* { dg-error \"from incompatible\" } */\n const wchar_t\tsw_2[]\t= U\"ab\";\t/* { dg-error \"from incompatible\" } */\n const wchar_t\tsw_3[]\t= L\"ab\";\n-/* Contributed by Kris Van Hees <kris.van.hees@oracle.com> */\n-/* Expected errors for char16_t/char32_t string literals. */\n-/* { dg-do compile } */\n-/* { dg-options \"-std=c++0x\" } */\n-\n-const char\ts_0[]\t= \"ab\";\n-const char\ts_1[]\t= u\"ab\";\t/* { dg-error \"from wide string\" } */\n-const char\ts_2[]\t= U\"ab\";\t/* { dg-error \"from wide string\" } */\n-const char\ts_3[]\t= L\"ab\";\t/* { dg-error \"from wide string\" } */\n-\n-const char16_t\ts16_0[]\t= \"ab\";\t\t/* { dg-error \"from non-wide\" } */\n-const char16_t\ts16_1[]\t= u\"ab\";\n-const char16_t\ts16_2[]\t= U\"ab\";\t/* { dg-error \"from incompatible\" } */\n-const char16_t\ts16_3[]\t= L\"ab\";\t/* { dg-error \"from incompatible\" } */\n-\n-const char16_t\ts16_4[0] = u\"ab\";\t/* { dg-warning \"chars is too long\" } */\n-const char16_t\ts16_5[1] = u\"ab\";\t/* { dg-warning \"chars is too long\" } */\n-const char16_t\ts16_6[2] = u\"ab\";\t/* { dg-warning \"chars is too long\" } */\n-const char16_t\ts16_7[3] = u\"ab\";\n-const char16_t\ts16_8[4] = u\"ab\";\n-\n-const char32_t\ts32_0[]\t= \"ab\";\t\t/* { dg-error \"from non-wide\" } */\n-const char32_t\ts32_1[]\t= u\"ab\";\t/* { dg-error \"from incompatible\" } */\n-const char32_t\ts32_2[]\t= U\"ab\";\n-const char32_t\ts32_3[]\t= L\"ab\";\t/* { dg-error \"from incompatible\" } */\n-\n-const char16_t\ts32_4[0] = u\"ab\";\t/* { dg-warning \"chars is too long\" } */\n-const char16_t\ts32_5[1] = u\"ab\";\t/* { dg-warning \"chars is too long\" } */\n-const char16_t\ts32_6[2] = u\"ab\";\t/* { dg-warning \"chars is too long\" } */\n-const char16_t\ts32_7[3] = u\"ab\";\n-const char16_t\ts32_8[4] = u\"ab\";\n-\n-const wchar_t\tsw_0[]\t= \"ab\";\t\t/* { dg-error \"from non-wide\" } */\n-const wchar_t\tsw_1[]\t= u\"ab\";\t/* { dg-error \"from incompatible\" } */\n-const wchar_t\tsw_2[]\t= U\"ab\";\t/* { dg-error \"from incompatible\" } */\n-const wchar_t\tsw_3[]\t= L\"ab\";"}, {"sha": "7d8c319d99a203c1460662c4b2ecc2310b307b8c", "filename": "gcc/testsuite/gcc.dg/utf-array-short-wchar.c", "status": "modified", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/911c34a6b8847f14fb533488caca8d0f57a285d9/gcc%2Ftestsuite%2Fgcc.dg%2Futf-array-short-wchar.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/911c34a6b8847f14fb533488caca8d0f57a285d9/gcc%2Ftestsuite%2Fgcc.dg%2Futf-array-short-wchar.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Futf-array-short-wchar.c?ref=911c34a6b8847f14fb533488caca8d0f57a285d9", "patch": "@@ -39,44 +39,3 @@ const wchar_t\tsw_0[]\t= \"ab\";\t\t/* { dg-error \"from non-wide\" } */\n const wchar_t\tsw_1[]\t= u\"ab\";\n const wchar_t\tsw_2[]\t= U\"ab\";\t/* { dg-error \"from incompatible\" } */\n const wchar_t\tsw_3[]\t= L\"ab\";\n-/* Contributed by Kris Van Hees <kris.van.hees@oracle.com> */\n-/* Expected errors for char16_t/char32_t string literals. */\n-/* { dg-do compile } */\n-/* { dg-options \"-std=gnu99 -fshort-wchar\" } */\n-\n-#include <wchar.h>\n-\n-typedef short unsigned int\tchar16_t;\n-typedef unsigned int\t\tchar32_t;\n-\n-const char\ts_0[]\t= \"ab\";\n-const char\ts_1[]\t= u\"ab\";\t/* { dg-error \"from wide string\" } */\n-const char\ts_2[]\t= U\"ab\";\t/* { dg-error \"from wide string\" } */\n-const char\ts_3[]\t= L\"ab\";\t/* { dg-error \"from wide string\" } */\n-\n-const char16_t\ts16_0[]\t= \"ab\";\t\t/* { dg-error \"from non-wide\" } */\n-const char16_t\ts16_1[]\t= u\"ab\";\n-const char16_t\ts16_2[]\t= U\"ab\";\t/* { dg-error \"from incompatible\" } */\n-const char16_t\ts16_3[]\t= L\"ab\";\n-\n-const char16_t\ts16_4[0] = u\"ab\";\t/* { dg-warning \"chars is too long\" } */\n-const char16_t\ts16_5[1] = u\"ab\";\t/* { dg-warning \"chars is too long\" } */\n-const char16_t\ts16_6[2] = u\"ab\";\n-const char16_t\ts16_7[3] = u\"ab\";\n-const char16_t\ts16_8[4] = u\"ab\";\n-\n-const char32_t\ts32_0[]\t= \"ab\";\t\t/* { dg-error \"from non-wide\" } */\n-const char32_t\ts32_1[]\t= u\"ab\";\t/* { dg-error \"from incompatible\" } */\n-const char32_t\ts32_2[]\t= U\"ab\";\n-const char32_t\ts32_3[]\t= L\"ab\";\t/* { dg-error \"from incompatible\" } */\n-\n-const char16_t\ts32_4[0] = u\"ab\";\t/* { dg-warning \"chars is too long\" } */\n-const char16_t\ts32_5[1] = u\"ab\";\t/* { dg-warning \"chars is too long\" } */\n-const char16_t\ts32_6[2] = u\"ab\";\n-const char16_t\ts32_7[3] = u\"ab\";\n-const char16_t\ts32_8[4] = u\"ab\";\n-\n-const wchar_t\tsw_0[]\t= \"ab\";\t\t/* { dg-error \"from non-wide\" } */\n-const wchar_t\tsw_1[]\t= u\"ab\";\n-const wchar_t\tsw_2[]\t= U\"ab\";\t/* { dg-error \"from incompatible\" } */\n-const wchar_t\tsw_3[]\t= L\"ab\";"}, {"sha": "50a29fe9375935e7b889a4e55ec7fb69ae62f8a8", "filename": "gcc/testsuite/gcc.dg/utf-array.c", "status": "modified", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/911c34a6b8847f14fb533488caca8d0f57a285d9/gcc%2Ftestsuite%2Fgcc.dg%2Futf-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/911c34a6b8847f14fb533488caca8d0f57a285d9/gcc%2Ftestsuite%2Fgcc.dg%2Futf-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Futf-array.c?ref=911c34a6b8847f14fb533488caca8d0f57a285d9", "patch": "@@ -39,44 +39,3 @@ const wchar_t\tsw_0[]\t= \"ab\";\t\t/* { dg-error \"from non-wide\" } */\n const wchar_t\tsw_1[]\t= u\"ab\";\t/* { dg-error \"from incompatible\" } */\n const wchar_t\tsw_2[]\t= U\"ab\";\t/* { dg-error \"from incompatible\" } */\n const wchar_t\tsw_3[]\t= L\"ab\";\n-/* Contributed by Kris Van Hees <kris.van.hees@oracle.com> */\n-/* Expected errors for char16_t/char32_t string literals. */\n-/* { dg-do compile } */\n-/* { dg-options \"-std=gnu99\" } */\n-\n-#include <wchar.h>\n-\n-typedef short unsigned int\tchar16_t;\n-typedef unsigned int\t\tchar32_t;\n-\n-const char\ts_0[]\t= \"ab\";\n-const char\ts_1[]\t= u\"ab\";\t/* { dg-error \"from wide string\" } */\n-const char\ts_2[]\t= U\"ab\";\t/* { dg-error \"from wide string\" } */\n-const char\ts_3[]\t= L\"ab\";\t/* { dg-error \"from wide string\" } */\n-\n-const char16_t\ts16_0[]\t= \"ab\";\t\t/* { dg-error \"from non-wide\" } */\n-const char16_t\ts16_1[]\t= u\"ab\";\n-const char16_t\ts16_2[]\t= U\"ab\";\t/* { dg-error \"from incompatible\" } */\n-const char16_t\ts16_3[]\t= L\"ab\";\t/* { dg-error \"from incompatible\" } */\n-\n-const char16_t\ts16_4[0] = u\"ab\";\t/* { dg-warning \"chars is too long\" } */\n-const char16_t\ts16_5[1] = u\"ab\";\t/* { dg-warning \"chars is too long\" } */\n-const char16_t\ts16_6[2] = u\"ab\";\n-const char16_t\ts16_7[3] = u\"ab\";\n-const char16_t\ts16_8[4] = u\"ab\";\n-\n-const char32_t\ts32_0[]\t= \"ab\";\t\t/* { dg-error \"from non-wide\" } */\n-const char32_t\ts32_1[]\t= u\"ab\";\t/* { dg-error \"from incompatible\" } */\n-const char32_t\ts32_2[]\t= U\"ab\";\n-const char32_t\ts32_3[]\t= L\"ab\";\t/* { dg-error \"from incompatible\" } */\n-\n-const char16_t\ts32_4[0] = u\"ab\";\t/* { dg-warning \"chars is too long\" } */\n-const char16_t\ts32_5[1] = u\"ab\";\t/* { dg-warning \"chars is too long\" } */\n-const char16_t\ts32_6[2] = u\"ab\";\n-const char16_t\ts32_7[3] = u\"ab\";\n-const char16_t\ts32_8[4] = u\"ab\";\n-\n-const wchar_t\tsw_0[]\t= \"ab\";\t\t/* { dg-error \"from non-wide\" } */\n-const wchar_t\tsw_1[]\t= u\"ab\";\t/* { dg-error \"from incompatible\" } */\n-const wchar_t\tsw_2[]\t= U\"ab\";\t/* { dg-error \"from incompatible\" } */\n-const wchar_t\tsw_3[]\t= L\"ab\";"}]}