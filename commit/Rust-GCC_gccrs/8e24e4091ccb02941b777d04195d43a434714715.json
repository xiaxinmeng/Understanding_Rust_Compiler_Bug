{"sha": "8e24e4091ccb02941b777d04195d43a434714715", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGUyNGU0MDkxY2NiMDI5NDFiNzc3ZDA0MTk1ZDQzYTQzNDcxNDcxNQ==", "commit": {"author": {"name": "David S. Miller", "email": "davem@davemloft.net", "date": "2011-10-14T03:48:06Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2011-10-14T03:48:06Z"}, "message": "Merge sparc plus/minus vector operations using a code iterator.\n\n\t* config/sparc/sparc.md (plusminus): New code iterator.\n\t(plusminus_insn): New code attr.\n\t(addv2si3, subv2si3, addv4hi3, subv4hi3, addv2hi3, subv2hi3): Merge\n\tusing plusminus and plusminus_insn.\n\t(fpadd64_vis, fpsub64_vis): Likewise.\n\nFrom-SVN: r179959", "tree": {"sha": "0c636e477147fcebf597015e63724b94604c31ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c636e477147fcebf597015e63724b94604c31ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e24e4091ccb02941b777d04195d43a434714715", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e24e4091ccb02941b777d04195d43a434714715", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e24e4091ccb02941b777d04195d43a434714715", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e24e4091ccb02941b777d04195d43a434714715/comments", "author": {"login": "davem330", "id": 1053866, "node_id": "MDQ6VXNlcjEwNTM4NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1053866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davem330", "html_url": "https://github.com/davem330", "followers_url": "https://api.github.com/users/davem330/followers", "following_url": "https://api.github.com/users/davem330/following{/other_user}", "gists_url": "https://api.github.com/users/davem330/gists{/gist_id}", "starred_url": "https://api.github.com/users/davem330/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davem330/subscriptions", "organizations_url": "https://api.github.com/users/davem330/orgs", "repos_url": "https://api.github.com/users/davem330/repos", "events_url": "https://api.github.com/users/davem330/events{/privacy}", "received_events_url": "https://api.github.com/users/davem330/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d7943c8b140b77226e40e32d10fcaf5dd786ef6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7943c8b140b77226e40e32d10fcaf5dd786ef6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7943c8b140b77226e40e32d10fcaf5dd786ef6a"}], "stats": {"total": 81, "additions": 27, "deletions": 54}, "files": [{"sha": "a8f51e91a61e743d1fea3987dce8faf5a2e88b94", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e24e4091ccb02941b777d04195d43a434714715/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e24e4091ccb02941b777d04195d43a434714715/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8e24e4091ccb02941b777d04195d43a434714715", "patch": "@@ -1,3 +1,11 @@\n+2011-10-13  David S. Miller  <davem@davemloft.net>\n+\n+\t* config/sparc/sparc.md (plusminus): New code iterator.\n+\t(plusminus_insn): New code attr.\n+\t(addv2si3, subv2si3, addv4hi3, subv4hi3, addv2hi3, subv2hi3): Merge\n+\tusing plusminus and plusminus_insn.\n+\t(fpadd64_vis, fpsub64_vis): Likewise.\n+\n 2011-10-13  Richard Henderson  <rth@redhat.com>\n \n \t* doc/md.texi (vec_perm): Document fallback to byte permutation."}, {"sha": "6118e6d8bce221e571ac9574d4de69a54d7051b7", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 19, "deletions": 54, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e24e4091ccb02941b777d04195d43a434714715/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e24e4091ccb02941b777d04195d43a434714715/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=8e24e4091ccb02941b777d04195d43a434714715", "patch": "@@ -7881,64 +7881,36 @@\n   [(set_attr \"type\" \"multi\")\n    (set_attr \"length\" \"4\")])\n \n-\n ;; Vector instructions.\n \n-(define_insn \"addv2si3\"\n-  [(set (match_operand:V2SI 0 \"register_operand\" \"=e\")\n-\t(plus:V2SI (match_operand:V2SI 1 \"register_operand\" \"e\")\n-\t\t   (match_operand:V2SI 2 \"register_operand\" \"e\")))]\n-  \"TARGET_VIS\"\n-  \"fpadd32\\t%1, %2, %0\"\n-  [(set_attr \"type\" \"fga\")\n-   (set_attr \"fptype\" \"double\")])\n-\n-(define_insn \"addv4hi3\"\n-  [(set (match_operand:V4HI 0 \"register_operand\" \"=e\")\n-\t (plus:V4HI (match_operand:V4HI 1 \"register_operand\" \"e\")\n-\t\t    (match_operand:V4HI 2 \"register_operand\" \"e\")))]\n-  \"TARGET_VIS\"\n-  \"fpadd16\\t%1, %2, %0\"\n-  [(set_attr \"type\" \"fga\")\n-   (set_attr \"fptype\" \"double\")])\n-\n-;; fpadd32s is emitted by the addsi3 pattern.\n-\n-(define_insn \"addv2hi3\"\n-  [(set (match_operand:V2HI 0 \"register_operand\" \"=f\")\n-\t(plus:V2HI (match_operand:V2HI 1 \"register_operand\" \"f\")\n-\t\t   (match_operand:V2HI 2 \"register_operand\" \"f\")))]\n-  \"TARGET_VIS\"\n-  \"fpadd16s\\t%1, %2, %0\"\n-  [(set_attr \"type\" \"fga\")\n-   (set_attr \"fptype\" \"single\")])\n+(define_code_iterator plusminus [plus minus])\n+(define_code_attr plusminus_insn [(plus \"add\") (minus \"sub\")])\n \n-(define_insn \"subv2si3\"\n+;; fp{add,sub}32s are emitted by the {add,sub}si3 patterns.\n+(define_insn \"<plusminus_insn>v2si3\"\n   [(set (match_operand:V2SI 0 \"register_operand\" \"=e\")\n-\t(minus:V2SI (match_operand:V2SI 1 \"register_operand\" \"e\")\n-\t\t    (match_operand:V2SI 2 \"register_operand\" \"e\")))]\n+\t(plusminus:V2SI (match_operand:V2SI 1 \"register_operand\" \"e\")\n+\t\t\t(match_operand:V2SI 2 \"register_operand\" \"e\")))]\n   \"TARGET_VIS\"\n-  \"fpsub32\\t%1, %2, %0\"\n+  \"fp<plusminus_insn>32\\t%1, %2, %0\"\n   [(set_attr \"type\" \"fga\")\n    (set_attr \"fptype\" \"double\")])\n \n-(define_insn \"subv4hi3\"\n+(define_insn \"<plusminus_insn>v4hi3\"\n   [(set (match_operand:V4HI 0 \"register_operand\" \"=e\")\n-\t(minus:V4HI (match_operand:V4HI 1 \"register_operand\" \"e\")\n-\t\t    (match_operand:V4HI 2 \"register_operand\" \"e\")))]\n+\t(plusminus:V4HI (match_operand:V4HI 1 \"register_operand\" \"e\")\n+\t\t\t(match_operand:V4HI 2 \"register_operand\" \"e\")))]\n   \"TARGET_VIS\"\n-  \"fpsub16\\t%1, %2, %0\"\n+  \"fp<plusminus_insn>16\\t%1, %2, %0\"\n   [(set_attr \"type\" \"fga\")\n    (set_attr \"fptype\" \"double\")])\n \n-;; fpsub32s is emitted by the subsi3 pattern.\n-\n-(define_insn \"subv2hi3\"\n+(define_insn \"<plusminus_insn>v2hi3\"\n   [(set (match_operand:V2HI 0 \"register_operand\" \"=f\")\n-\t(minus:V2HI (match_operand:V2HI 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:V2HI 2 \"register_operand\" \"f\")))]\n+\t(plusminus:V2HI (match_operand:V2HI 1 \"register_operand\" \"f\")\n+\t\t\t(match_operand:V2HI 2 \"register_operand\" \"f\")))]\n   \"TARGET_VIS\"\n-  \"fpsub16s\\t%1, %2, %0\"\n+  \"fp<plusminus_insn>16s\\t%1, %2, %0\"\n   [(set_attr \"type\" \"fga\")\n    (set_attr \"fptype\" \"single\")])\n \n@@ -8505,19 +8477,12 @@\n   \"TARGET_VIS3\"\n   \"fmean16\\t%1, %2, %0\")\n \n-(define_insn \"fpadd64_vis\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=e\")\n-        (plus:DI (match_operand:DI 1 \"register_operand\" \"e\")\n-                 (match_operand:DI 2 \"register_operand\" \"e\")))]\n-  \"TARGET_VIS3\"\n-  \"fpadd64\\t%1, %2, %0\")\n-\n-(define_insn \"fpsub64_vis\"\n+(define_insn \"fp<plusminus_insn>64_vis\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=e\")\n-        (minus:DI (match_operand:DI 1 \"register_operand\" \"e\")\n-                  (match_operand:DI 2 \"register_operand\" \"e\")))]\n+\t(plusminus:DI (match_operand:DI 1 \"register_operand\" \"e\")\n+\t\t      (match_operand:DI 2 \"register_operand\" \"e\")))]\n   \"TARGET_VIS3\"\n-  \"fpsub64\\t%1, %2, %0\")\n+  \"fp<plusminus_insn>64\\t%1, %2, %0\")\n \n (define_mode_iterator VASS [V4HI V2SI V2HI SI])\n (define_code_iterator vis3_addsub_ss [ss_plus ss_minus])"}]}