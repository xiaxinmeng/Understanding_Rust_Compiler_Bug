{"sha": "557532d1728af193d47867dabbe26bd556fb8586", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTU3NTMyZDE3MjhhZjE5M2Q0Nzg2N2RhYmJlMjZiZDU1NmZiODU4Ng==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-11-21T17:45:36Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-11-21T17:45:36Z"}, "message": "Reject versioning for alignment with different masks (PR 92526)\n\nAllowing mixed vector sizes broke the assumption in the following assert,\nsince it's now possible for different accesses to require different\nlevels of alignment:\n\n              /* FORNOW: use the same mask to test all potentially unaligned\n                 references in the loop.  The vectorizer currently supports\n                 a single vector size, see the reference to\n                 GET_MODE_NUNITS (TYPE_MODE (vectype)) where the\n                 vectorization factor is computed.  */\n              gcc_assert (!LOOP_VINFO_PTR_MASK (loop_vinfo)\n                          || LOOP_VINFO_PTR_MASK (loop_vinfo) == mask);\n\nI guess we could try to over-align smaller accesses so that all\nof them are consistent, or try to support multiple alignment masks,\nbut for now the easiest fix seems to be to turn the assert into a\nbail-out check.\n\n2019-11-21  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\tPR tree-optimization/92526\n\t* tree-vect-data-refs.c (vect_enhance_data_refs_alignment): Reject\n\tversioning for alignment if the accesses do not have a consistent\n\tmask, rather than asserting that the masks are consistent.\n\ngcc/testsuite/\n\tPR tree-optimization/92526\n\t* gcc.target/aarch64/pr92526.c: New test.\n\nFrom-SVN: r278592", "tree": {"sha": "61e5d148c084e4903914eb83f17fc6d938f64b2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61e5d148c084e4903914eb83f17fc6d938f64b2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/557532d1728af193d47867dabbe26bd556fb8586", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/557532d1728af193d47867dabbe26bd556fb8586", "html_url": "https://github.com/Rust-GCC/gccrs/commit/557532d1728af193d47867dabbe26bd556fb8586", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/557532d1728af193d47867dabbe26bd556fb8586/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "91f161b03b649984991573c2f2605555da4a678c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91f161b03b649984991573c2f2605555da4a678c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91f161b03b649984991573c2f2605555da4a678c"}], "stats": {"total": 37, "additions": 30, "deletions": 7}, "files": [{"sha": "a4b458084100d6dd871c271d44db662969d8661b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/557532d1728af193d47867dabbe26bd556fb8586/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/557532d1728af193d47867dabbe26bd556fb8586/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=557532d1728af193d47867dabbe26bd556fb8586", "patch": "@@ -1,3 +1,10 @@\n+2019-11-21  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/92526\n+\t* tree-vect-data-refs.c (vect_enhance_data_refs_alignment): Reject\n+\tversioning for alignment if the accesses do not have a consistent\n+\tmask, rather than asserting that the masks are consistent.\n+\n 2019-11-21  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR tree-optimization/92595"}, {"sha": "1f30ffd9ed3438b355b4b830c778b74a22429ea9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/557532d1728af193d47867dabbe26bd556fb8586/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/557532d1728af193d47867dabbe26bd556fb8586/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=557532d1728af193d47867dabbe26bd556fb8586", "patch": "@@ -1,3 +1,8 @@\n+2019-11-21  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/92526\n+\t* gcc.target/aarch64/pr92526.c: New test.\n+\n 2019-11-21  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR testsuite/92543"}, {"sha": "61b347c6a7cf4a64230c21d16182c72c6f5b82b2", "filename": "gcc/testsuite/gcc.target/aarch64/pr92526.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/557532d1728af193d47867dabbe26bd556fb8586/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr92526.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/557532d1728af193d47867dabbe26bd556fb8586/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr92526.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr92526.c?ref=557532d1728af193d47867dabbe26bd556fb8586", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-options \"-O3 -mstrict-align\" } */\n+\n+void\n+f (unsigned int *restrict x, unsigned int *restrict y,\n+   unsigned char *restrict z, unsigned int n)\n+{\n+  for (unsigned int i = 0; i < n % 4; ++i)\n+    x[i] = x[i] + y[i] + z[i];\n+}"}, {"sha": "b876d07f44b9922be478fe04b9e7cb201f245b24", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/557532d1728af193d47867dabbe26bd556fb8586/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/557532d1728af193d47867dabbe26bd556fb8586/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=557532d1728af193d47867dabbe26bd556fb8586", "patch": "@@ -2266,13 +2266,15 @@ vect_enhance_data_refs_alignment (loop_vec_info loop_vinfo)\n                  mask must be 15 = 0xf. */\n \t      mask = size - 1;\n \n-              /* FORNOW: use the same mask to test all potentially unaligned\n-                 references in the loop.  The vectorizer currently supports\n-                 a single vector size, see the reference to\n-                 GET_MODE_NUNITS (TYPE_MODE (vectype)) where the\n-                 vectorization factor is computed.  */\n-              gcc_assert (!LOOP_VINFO_PTR_MASK (loop_vinfo)\n-                          || LOOP_VINFO_PTR_MASK (loop_vinfo) == mask);\n+\t      /* FORNOW: use the same mask to test all potentially unaligned\n+\t\t references in the loop.  */\n+\t      if (LOOP_VINFO_PTR_MASK (loop_vinfo)\n+\t\t  && LOOP_VINFO_PTR_MASK (loop_vinfo) != mask)\n+\t\t{\n+\t\t  do_versioning = false;\n+\t\t  break;\n+\t\t}\n+\n               LOOP_VINFO_PTR_MASK (loop_vinfo) = mask;\n \t      LOOP_VINFO_MAY_MISALIGN_STMTS (loop_vinfo).safe_push (stmt_info);\n             }"}]}