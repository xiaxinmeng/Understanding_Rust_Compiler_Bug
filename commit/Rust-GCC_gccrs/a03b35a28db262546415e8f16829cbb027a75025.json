{"sha": "a03b35a28db262546415e8f16829cbb027a75025", "node_id": "C_kwDOANBUbNoAKGEwM2IzNWEyOGRiMjYyNTQ2NDE1ZThmMTY4MjljYmIwMjdhNzUwMjU", "commit": {"author": {"name": "Jeff Law", "email": "jlaw@ventanamicro.com", "date": "2022-11-22T23:22:18Z"}, "committer": {"name": "Jeff Law", "email": "jlaw@ventanamicro.com", "date": "2022-11-22T23:23:11Z"}, "message": "Fix comment typos noticed by Bernhard\n\ngcc/\n\t* tree-ssa-dom.cc (record_edge_info): Fix comment typos.", "tree": {"sha": "847754b048c089dde04da432db43dbf6d4ed8a2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/847754b048c089dde04da432db43dbf6d4ed8a2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a03b35a28db262546415e8f16829cbb027a75025", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a03b35a28db262546415e8f16829cbb027a75025", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a03b35a28db262546415e8f16829cbb027a75025", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a03b35a28db262546415e8f16829cbb027a75025/comments", "author": null, "committer": null, "parents": [{"sha": "ca73d4c80ea06087d9dd22594e5670bb15e21066", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca73d4c80ea06087d9dd22594e5670bb15e21066", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca73d4c80ea06087d9dd22594e5670bb15e21066"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "e82f4f73a66e655eb4c71e59182d97ba364eda0c", "filename": "gcc/tree-ssa-dom.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03b35a28db262546415e8f16829cbb027a75025/gcc%2Ftree-ssa-dom.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03b35a28db262546415e8f16829cbb027a75025/gcc%2Ftree-ssa-dom.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.cc?ref=a03b35a28db262546415e8f16829cbb027a75025", "patch": "@@ -673,10 +673,10 @@ record_edge_info (basic_block bb)\n \t\t{\n \t\t  /* At this point we know the exit condition is loop\n \t\t     invariant.  The only way to get out of the loop is\n-\t\t     if never traverses the backedge to begin with.  This\n-\t\t     implies that any PHI nodes create equivalances we can\n-\t\t     attach to the loop exit edge.  */\n-\t\t  int alternative\n+\t\t     if it never traverses the backedge to begin with.  This\n+\t\t     implies that any PHI nodes create equivalances that we\n+\t\t     can attach to the loop exit edge.  */\n+\t\t  int bool\n \t\t    = (EDGE_PRED (bb, 0)->flags & EDGE_DFS_BACK) ? 1 : 0;\n \n \t\t  gphi_iterator gsi;"}]}