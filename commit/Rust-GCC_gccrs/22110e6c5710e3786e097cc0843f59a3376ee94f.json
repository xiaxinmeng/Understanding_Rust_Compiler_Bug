{"sha": "22110e6c5710e3786e097cc0843f59a3376ee94f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjIxMTBlNmM1NzEwZTM3ODZlMDk3Y2MwODQzZjU5YTMzNzZlZTk0Zg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2013-03-04T17:41:32Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2013-03-04T17:41:32Z"}, "message": "re PR tree-optimization/56424 (ICE at tree-inline.c:2833 on a-nllcef.ads at -O2)\n\n\tPR tree-optimization/56424\n\t* ipa-split.c (split_function): Do not set the RSO flag if result is\n\tnot by reference and its type is a register type.\n\nFrom-SVN: r196439", "tree": {"sha": "c430041e9450edc881a1c1f7ab9daed21e93d52f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c430041e9450edc881a1c1f7ab9daed21e93d52f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22110e6c5710e3786e097cc0843f59a3376ee94f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22110e6c5710e3786e097cc0843f59a3376ee94f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22110e6c5710e3786e097cc0843f59a3376ee94f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22110e6c5710e3786e097cc0843f59a3376ee94f/comments", "author": null, "committer": null, "parents": [{"sha": "e5cb02e200ea3cdd71a57cba4d77b41e0745a58c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5cb02e200ea3cdd71a57cba4d77b41e0745a58c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5cb02e200ea3cdd71a57cba4d77b41e0745a58c"}], "stats": {"total": 47, "additions": 46, "deletions": 1}, "files": [{"sha": "175a619524bf50e4d4ca6750d770af337d7d549c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22110e6c5710e3786e097cc0843f59a3376ee94f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22110e6c5710e3786e097cc0843f59a3376ee94f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=22110e6c5710e3786e097cc0843f59a3376ee94f", "patch": "@@ -1,3 +1,9 @@\n+2013-01-04  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR tree-optimization/56424\n+\t* ipa-split.c (split_function): Do not set the RSO flag if result is\n+\tnot by reference and its type is a register type.\n+\n 2013-03-04  David Holsgrove <david.holsgrove@xilinx.com>\n \n \t* config/microblaze/microblaze.c (microblaze_valid_pic_const): New "}, {"sha": "e7d469d74423a3b6c7720220ad820ef34f430fee", "filename": "gcc/ipa-split.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22110e6c5710e3786e097cc0843f59a3376ee94f/gcc%2Fipa-split.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22110e6c5710e3786e097cc0843f59a3376ee94f/gcc%2Fipa-split.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-split.c?ref=22110e6c5710e3786e097cc0843f59a3376ee94f", "patch": "@@ -1309,7 +1309,9 @@ split_function (struct split_point *split_point)\n      so return slot optimization is always possible.  Moreover this is\n      required to make DECL_BY_REFERENCE work.  */\n   if (aggregate_value_p (DECL_RESULT (current_function_decl),\n-\t\t\t TREE_TYPE (current_function_decl)))\n+\t\t\t TREE_TYPE (current_function_decl))\n+      && (!is_gimple_reg_type (TREE_TYPE (DECL_RESULT (current_function_decl)))\n+\t  || DECL_BY_REFERENCE (DECL_RESULT (current_function_decl))))\n     gimple_call_set_return_slot_opt (call, true);\n \n   /* Update return value.  This is bit tricky.  When we do not return,"}, {"sha": "19c64d61f64e5e91d57a6354a23593bfcc8676bd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22110e6c5710e3786e097cc0843f59a3376ee94f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22110e6c5710e3786e097cc0843f59a3376ee94f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=22110e6c5710e3786e097cc0843f59a3376ee94f", "patch": "@@ -1,3 +1,7 @@\n+2013-01-04  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc.dg/pr56424.c: New test.\n+\n 2013-03-04  Georg-Johann Lay  <avr@gjlay.de>\n \n \t* gcc.dg/pr55153.c: Add dg-require-effective-target scheduling."}, {"sha": "a724c640e993a0e1aabcb3a35426c39d72297ac7", "filename": "gcc/testsuite/gcc.dg/pr56424.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22110e6c5710e3786e097cc0843f59a3376ee94f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56424.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22110e6c5710e3786e097cc0843f59a3376ee94f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56424.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56424.c?ref=22110e6c5710e3786e097cc0843f59a3376ee94f", "patch": "@@ -0,0 +1,33 @@\n+/* PR tree-optimization/56424 */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fexceptions -fnon-call-exceptions\" } */\n+\n+extern long double cosl (long double);\n+extern long double sinl (long double);\n+extern long double reml (long double, long double);\n+\n+long double my_cos (long double arg)\n+{\n+  return cosl (arg);\n+}\n+\n+long double my_sin (long double arg)\n+{\n+  if (__builtin_fabs (arg) < 1.0)\n+    return arg;\n+\n+  return sinl (arg);\n+}\n+\n+long double my_cot (long double arg, long double cycle)\n+{\n+  long double t = reml (arg, cycle);\n+  return my_cos (t) / my_sin (t);\n+}\n+\n+long double my_tan (long double arg, long double cycle)\n+{\n+  long double t = reml (arg, cycle);\n+  return my_sin (t) / my_cos (t);\n+}"}]}