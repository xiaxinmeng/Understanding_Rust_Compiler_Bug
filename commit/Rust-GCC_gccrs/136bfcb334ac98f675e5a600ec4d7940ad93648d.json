{"sha": "136bfcb334ac98f675e5a600ec4d7940ad93648d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM2YmZjYjMzNGFjOThmNjc1ZTVhNjAwZWM0ZDc5NDBhZDkzNjQ4ZA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1994-09-02T18:25:11Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1994-09-02T18:25:11Z"}, "message": "Add support for -gstabs on SVR4 configurations.\n\nFrom-SVN: r8017", "tree": {"sha": "071bd8d20594b98990efc5d2650a9a89733dfe91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/071bd8d20594b98990efc5d2650a9a89733dfe91"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/136bfcb334ac98f675e5a600ec4d7940ad93648d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/136bfcb334ac98f675e5a600ec4d7940ad93648d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/136bfcb334ac98f675e5a600ec4d7940ad93648d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/136bfcb334ac98f675e5a600ec4d7940ad93648d/comments", "author": null, "committer": null, "parents": [{"sha": "a89b2cc4581e43f3b1f728d38bc4a23769ce63f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a89b2cc4581e43f3b1f728d38bc4a23769ce63f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a89b2cc4581e43f3b1f728d38bc4a23769ce63f3"}], "stats": {"total": 88, "additions": 60, "deletions": 28}, "files": [{"sha": "c37901531ef401dee48df3cf2585306be4da5e2e", "filename": "gcc/config/sparc/sol2.h", "status": "modified", "additions": 1, "deletions": 27, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/136bfcb334ac98f675e5a600ec4d7940ad93648d/gcc%2Fconfig%2Fsparc%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/136bfcb334ac98f675e5a600ec4d7940ad93648d/gcc%2Fconfig%2Fsparc%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsol2.h?ref=136bfcb334ac98f675e5a600ec4d7940ad93648d", "patch": "@@ -51,21 +51,9 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n /* We use stabs-in-elf for debugging, because that is what the native\n    toolchain uses.  */\n-#define DBX_DEBUGGING_INFO\n+#undef PREFERRED_DEBUGGING_TYPE\n #define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n \n-#define DBX_BLOCKS_FUNCTION_RELATIVE 1\n-\n-/* \"gcc2_compiled.\" must be a .stabs, not an ordinary symbol, or GDB won't\n-   see it.  Furthermore, since GDB reads the input piecemeal, starting\n-   with each N_SO, it's a lot easier if the gcc2 flag symbol is *after*\n-   the N_SO rather than before it.  So we emit an N_OPT stab here.  */\n-\n-#define ASM_IDENTIFY_GCC(FILE)\t/* Do nothing */\n-\n-#define ASM_IDENTIFY_GCC_AFTER_SOURCE(FILE)\t\\\n- fputs (\"\\t.stabs\\t\\\"gcc2_compiled.\\\", 0x3c, 0, 0, 0\\n\", FILE)\n-\n /* The Solaris 2 assembler uses .skip, not .zero, so put this back. */\n #undef ASM_OUTPUT_SKIP\n #define ASM_OUTPUT_SKIP(FILE,SIZE)  \\\n@@ -106,20 +94,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define ASM_GENERATE_INTERNAL_LABEL(LABEL,PREFIX,NUM)\t\\\n   sprintf (LABEL, \"*.L%s%d\", PREFIX, NUM)\n \n-/* in Solaris 2.0, linenos are relative to the current fn. */\n-#undef  ASM_OUTPUT_SOURCE_LINE\n-#define ASM_OUTPUT_SOURCE_LINE(file, line)\t\t\\\n-  { static int sym_lineno = 1;\t\t\t\t\\\n-    fprintf (file, \".stabn 68,0,%d,.LM%d-%s\\n.LM%d:\\n\",\t\\\n-\t     line, sym_lineno, \t\t\t\t\\\n-\t     XSTR (XEXP (DECL_RTL (current_function_decl), 0), 0), \\\n-\t     sym_lineno);\t\t\t\t\\\n-    sym_lineno += 1; }\n-\n-/* But, to make this work, we have to output the stabs for the function\n-   name *first*...  */\n-#define\tDBX_FUNCTION_FIRST\n-\n \f\n /* We don't use the standard svr4 STARTFILE_SPEC because it's wrong for us.\n    We don't use the standard LIB_SPEC only because we don't yet support c++ */"}, {"sha": "066fa1813e7ae9cde37097c4a28b621d3c1a3429", "filename": "gcc/config/sparc/sysv4.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/136bfcb334ac98f675e5a600ec4d7940ad93648d/gcc%2Fconfig%2Fsparc%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/136bfcb334ac98f675e5a600ec4d7940ad93648d/gcc%2Fconfig%2Fsparc%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsysv4.h?ref=136bfcb334ac98f675e5a600ec4d7940ad93648d", "patch": "@@ -24,8 +24,8 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n /* Undefine some symbols which are defined in \"sparc.h\" but which are\n    appropriate only for SunOS 4.x, and not for svr4.  */\n \n-#undef DBX_DEBUGGING_INFO\n #undef WORD_SWITCH_TAKES_ARG\n+#undef ASM_OUTPUT_SOURCE_LINE\n #undef SELECT_SECTION\n #undef ASM_DECLARE_FUNCTION_NAME\n #undef TEXT_SECTION_ASM_OP"}, {"sha": "d4124919e30246207d1515cf54f9b280059b9ead", "filename": "gcc/config/svr4.h", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/136bfcb334ac98f675e5a600ec4d7940ad93648d/gcc%2Fconfig%2Fsvr4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/136bfcb334ac98f675e5a600ec4d7940ad93648d/gcc%2Fconfig%2Fsvr4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsvr4.h?ref=136bfcb334ac98f675e5a600ec4d7940ad93648d", "patch": "@@ -244,6 +244,64 @@ do {\t\t\t\t \t\t\t\t\\\n \n #undef DBX_REGISTER_NUMBER\n \n+/* gas on SVR4 supports the use of .stabs.  Permit -gstabs to be used\n+   in general, although it will only work when using gas.  */\n+\n+#define DBX_DEBUGGING_INFO\n+\n+/* Use DWARF debugging info by default.  */\n+\n+#define PREFERRED_DEBUGGING_TYPE DWARF_DEBUG\n+\n+/* Make LBRAC and RBRAC addresses relative to the start of the\n+   function.  The native Solaris stabs debugging format works this\n+   way, gdb expects it, and it reduces the number of relocation\n+   entries.  */\n+\n+#define DBX_BLOCKS_FUNCTION_RELATIVE 1\n+\n+/* When using stabs, gcc2_compiled must be a stabs entry, not an\n+   ordinary symbol, or gdb won't see it.  Furthermore, since gdb reads\n+   the input piecemeal, starting with each N_SO, it's a lot easier if\n+   the gcc2 flag symbol is *after* the N_SO rather than before it.  So\n+   we emit an N_OPT stab there.  */\n+\n+#define ASM_IDENTIFY_GCC(FILE)\t\t\t\t\t\t\\\n+do\t\t\t\t\t\t\t\t\t\\\n+  {\t\t\t\t\t\t\t\t\t\\\n+    if (write_symbols != DBX_DEBUG)\t\t\t\t\t\\\n+      fputs (\"gcc2_compiled.:\\n\", FILE);\t\t\t\t\\\n+  }\t\t\t\t\t\t\t\t\t\\\n+while (0)\n+\n+#define ASM_IDENTIFY_GCC_AFTER_SOURCE(FILE)\t\t\t\t\\\n+do\t\t\t\t\t\t\t\t\t\\\n+  {\t\t\t\t\t\t\t\t\t\\\n+    if (write_symbols == DBX_DEBUG)\t\t\t\t\t\\\n+      fputs (\"\\t.stabs\\t\\\"gcc2_compiled.\\\", 0x3c, 0, 0, 0\\n\", FILE);\t\\\n+  }\t\t\t\t\t\t\t\t\t\\\n+while (0)\n+\n+/* Like block addresses, stabs line numbers are relative to the\n+   current function.  */\n+\n+#define ASM_OUTPUT_SOURCE_LINE(file, line)\t\t\t\t\\\n+do\t\t\t\t\t\t\t\t\t\\\n+  {\t\t\t\t\t\t\t\t\t\\\n+    static int sym_lineno = 1;\t\t\t\t\t\t\\\n+    fprintf (file, \".stabn 68,0,%d,.LM%d-%s\\n.LM%d:\\n\",\t\t\t\\\n+\t     line, sym_lineno, \t\t\t\t\t\t\\\n+\t     XSTR (XEXP (DECL_RTL (current_function_decl), 0), 0), \t\\\n+\t     sym_lineno);\t\t\t\t\t\t\\\n+    sym_lineno += 1;\t\t\t\t\t\t\t\\\n+  }\t\t\t\t\t\t\t\t\t\\\n+while (0)\n+\n+/* In order for relative line numbers to work, we must output the\n+   stabs entry for the function name first.  */\n+\n+#define DBX_FUNCTION_FIRST\n+\n /* Define the actual types of some ANSI-mandated types.  (These\n    definitions should work for most SVR4 systems).  */\n "}]}