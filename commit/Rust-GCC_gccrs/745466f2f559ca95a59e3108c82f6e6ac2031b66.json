{"sha": "745466f2f559ca95a59e3108c82f6e6ac2031b66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ1NDY2ZjJmNTU5Y2E5NWE1OWUzMTA4YzgyZjZlNmFjMjAzMWI2Ng==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-06-13T01:47:01Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-06-13T01:47:01Z"}, "message": "Add scheduling rules for EV5.\n\nFrom-SVN: r12280", "tree": {"sha": "76099cb0e9520b24eb581a16053af40867a1751f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76099cb0e9520b24eb581a16053af40867a1751f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/745466f2f559ca95a59e3108c82f6e6ac2031b66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/745466f2f559ca95a59e3108c82f6e6ac2031b66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/745466f2f559ca95a59e3108c82f6e6ac2031b66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/745466f2f559ca95a59e3108c82f6e6ac2031b66/comments", "author": null, "committer": null, "parents": [{"sha": "f6f6a13c082f48718cfb19285569dde93889e74b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6f6a13c082f48718cfb19285569dde93889e74b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6f6a13c082f48718cfb19285569dde93889e74b"}], "stats": {"total": 463, "additions": 300, "deletions": 163}, "files": [{"sha": "b3028eaeff7fc4ab1be3b49064aee09dd5f5d4d6", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 300, "deletions": 163, "changes": 463, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745466f2f559ca95a59e3108c82f6e6ac2031b66/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745466f2f559ca95a59e3108c82f6e6ac2031b66/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=745466f2f559ca95a59e3108c82f6e6ac2031b66", "patch": "@@ -21,21 +21,27 @@\n \n ;;- See file \"rtl.def\" for documentation on define_insn, match_*, et. al.\n \f\n+;; Processor type -- this attribute must exactly match the processor_type\n+;; enumeration in alpha.h.\n+\n+(define_attr \"cpu\" \"ev4,ev5\"\n+  (const (symbol_ref \"alpha_cpu\")))\n+\n ;; Define an insn type attribute.  This is used in function unit delay\n ;; computations, among other purposes.  For the most part, we use the names\n ;; defined in the EV4 documentation, but add a few that we have to know about\n ;; separately.\n \n (define_attr \"type\"\n-  \"ld,st,ibr,fbr,jsr,iaddlog,shiftcm,icmp,imull,imulq,fpop,fdivs,fdivt,ldsym,isubr\"\n-  (const_string \"shiftcm\"))\n+  \"ld,st,ibr,fbr,jsr,iadd,ilog,shift,cmov,icmp,imull,imulq,fadd,fmul,fcpys,fdivs,fdivt,ldsym,isubr\"\n+  (const_string \"iadd\"))\n \n ;; The TRAP_TYPE attribute marks instructions that may generate traps\n ;; (which are imprecise and may need a trapb if software complention\n ;; is desired).\n (define_attr \"trap\" \"yes,no\" (const_string \"no\"))\n \n-;; We include four function units: ABOX, which computes the address,\n+;; For the EV4 we include four function units: ABOX, which computes the address,\n ;; BBOX, used for branches, EBOX, used for integer operations, and FBOX,\n ;; used for FP operations.\n ;;\n@@ -45,33 +51,161 @@\n ;; issues.\n \n ;; Memory delivers its result in three cycles.\n-(define_function_unit \"abox\" 1 0 (eq_attr \"type\" \"ld,ldsym,st\") 6 2)\n+(define_function_unit \"ev4_abox\" 1 0\n+  (and (eq_attr \"cpu\" \"ev4\")\n+       (eq_attr \"type\" \"ld,st\"))\n+  6 2)\n \n ;; Branches have no delay cost, but do tie up the unit for two cycles.\n-(define_function_unit \"bbox\" 1 1 (eq_attr \"type\" \"ibr,fbr,jsr\") 4 4)\n+(define_function_unit \"ev4_bbox\" 1 1\n+  (and (eq_attr \"cpu\" \"ev4\")\n+       (eq_attr \"type\" \"ibr,fbr,jsr\"))\n+  4 4)\n \n ;; Arithmetic insns are normally have their results available after two\n ;; cycles.  There are a number of exceptions.  They are encoded in\n ;; ADJUST_COST.  Some of the other insns have similar exceptions.\n \n-(define_function_unit \"ebox\" 1 0 (eq_attr \"type\" \"iaddlog,shiftcm,icmp\") 4 2)\n+(define_function_unit \"ev4_ebox\" 1 0\n+  (and (eq_attr \"cpu\" \"ev4\")\n+       (eq_attr \"type\" \"iadd,ilog,ldsym,shift,cmov,icmp\"))\n+  4 2)\n \n ;; These really don't take up the integer pipeline, but they do occupy\n ;; IBOX1; we approximate here.\n \n-(define_function_unit \"ebox\" 1 0 (eq_attr \"type\" \"imull\") 42 2)\n-(define_function_unit \"ebox\" 1 0 (eq_attr \"type\" \"imulq\") 46 2)\n-\n-(define_function_unit \"imult\" 1 0 (eq_attr \"type\" \"imull\") 42 38)\n-(define_function_unit \"imult\" 1 0 (eq_attr \"type\" \"imulq\") 46 42)\n-\n-(define_function_unit \"fbox\" 1 0 (eq_attr \"type\" \"fpop\") 12 2)\n-\n-(define_function_unit \"fbox\" 1 0 (eq_attr \"type\" \"fdivs\") 68 0)\n-(define_function_unit \"fbox\" 1 0 (eq_attr \"type\" \"fdivt\") 126 0)\n-\n-(define_function_unit \"divider\" 1 0 (eq_attr \"type\" \"fdivs\") 68 60)\n-(define_function_unit \"divider\" 1 0 (eq_attr \"type\" \"fdivt\") 126 118)\n+(define_function_unit \"ev4_ebox\" 1 0\n+  (and (eq_attr \"cpu\" \"ev4\")\n+       (eq_attr \"type\" \"imull\"))\n+  42 2)\n+\n+(define_function_unit \"ev4_ebox\" 1 0\n+  (and (eq_attr \"cpu\" \"ev4\")\n+       (eq_attr \"type\" \"imulq\"))\n+  46 2)\n+\n+(define_function_unit \"ev4_imult\" 1 0\n+  (and (eq_attr \"cpu\" \"ev4\")\n+       (eq_attr \"type\" \"imull\"))\n+  42 38)\n+\n+(define_function_unit \"ev4_imult\" 1 0\n+  (and (eq_attr \"cpu\" \"ev4\")\n+       (eq_attr \"type\" \"imulq\"))\n+  46 42)\n+\n+(define_function_unit \"ev4_fbox\" 1 0\n+  (and (eq_attr \"cpu\" \"ev4\")\n+       (eq_attr \"type\" \"fadd,fmul,fcpys\"))\n+  12 2)\n+\n+(define_function_unit \"ev4_fbox\" 1 0\n+  (and (eq_attr \"cpu\" \"ev4\")\n+       (eq_attr \"type\" \"fdivs\"))\n+  68 0)\n+\n+(define_function_unit \"ev4_fbox\" 1 0\n+  (and (eq_attr \"cpu\" \"ev4\")\n+       (eq_attr \"type\" \"fdivt\"))\n+  126 0)\n+\n+(define_function_unit \"ev4_divider\" 1 0\n+  (and (eq_attr \"cpu\" \"ev4\")\n+       (eq_attr \"type\" \"fdivs\"))\n+  68 60)\n+\n+(define_function_unit \"ev4_divider\" 1 0\n+  (and (eq_attr \"cpu\" \"ev4\")\n+       (eq_attr \"type\" \"fdivt\"))\n+  126 118)\n+\f\n+;; EV5 scheduling.  EV5 can issue 4 insns per clock.\n+;; Multiply all costs by 4.\n+\n+;; EV5 has two integer units.\n+(define_function_unit \"ev5_ebox\" 2 0\n+  (and (eq_attr \"cpu\" \"ev5\")\n+       (eq_attr \"type\" \"iadd,ilog,icmp,ldsym\"))\n+  4 4)\n+\n+;; Memory takes at least 2 clocks.\n+;; Conditional moves always take 2 ticks.\n+(define_function_unit \"ev5_ebox\" 2 0\n+  (and (eq_attr \"cpu\" \"ev5\")\n+       (eq_attr \"type\" \"ld,cmov\"))\n+  8 4)\n+\n+;; Loads can dual issue.  Store cannot; nor can loads + stores.\n+;; Model this with a mythical load/store unit.\n+(define_function_unit \"ev5_ldst\" 1 0\n+  (and (eq_attr \"cpu\" \"ev5\")\n+       (eq_attr \"type\" \"ld\"))\n+  8 4 [(eq_attr \"type\" \"st\")])\n+\n+(define_function_unit \"ev5_ldst\" 1 0\n+  (and (eq_attr \"cpu\" \"ev5\")\n+       (eq_attr \"type\" \"st\"))\n+  4 4)\n+\n+(define_function_unit \"ev5_ebox\" 2 0\n+  (and (eq_attr \"cpu\" \"ev5\")\n+       (eq_attr \"type\" \"imull\"))\n+  32 4)\n+\n+(define_function_unit \"ev5_ebox\" 2 0\n+  (and (eq_attr \"cpu\" \"ev5\")\n+       (eq_attr \"type\" \"imulq\"))\n+  48 4)\n+\n+;; Multiplies also use the integer multiplier.\n+(define_function_unit \"ev5_imult\" 1 0\n+  (and (eq_attr \"cpu\" \"ev5\")\n+       (eq_attr \"type\" \"imull\"))\n+  16 8)\n+\n+(define_function_unit \"ev5_imult\" 1 0\n+  (and (eq_attr \"cpu\" \"ev5\")\n+       (eq_attr \"type\" \"imulq\"))\n+  48 32)\n+\n+;; There is only 1 shifter/zapper.\n+(define_function_unit \"ev5_shift\" 1 0\n+  (and (eq_attr \"cpu\" \"ev5\")\n+       (eq_attr \"type\" \"shift\"))\n+  4 4)\n+\n+;; We pretend EV5 has symmetrical 2 fpus,\n+;; even though cpys is the only insn that can issue on either unit.\n+(define_function_unit \"ev5_fpu\" 2 0\n+  (and (eq_attr \"cpu\" \"ev5\")\n+       (eq_attr \"type\" \"fadd,fmul,fcpys\"))\n+  16 4)\n+  \n+;; Multiplies (resp. adds) also use the fmul (resp. fadd) units.\n+(define_function_unit \"ev5_fpmul\" 1 0\n+  (and (eq_attr \"cpu\" \"ev5\")\n+       (eq_attr \"type\" \"fmul\"))\n+  16 4)\n+\n+(define_function_unit \"ev5_fpadd\" 1 0\n+  (and (eq_attr \"cpu\" \"ev5\")\n+       (eq_attr \"type\" \"fadd\"))\n+  16 4)\n+\n+(define_function_unit \"ev5_fpadd\" 1 0\n+  (and (eq_attr \"cpu\" \"ev5\")\n+       (eq_attr \"type\" \"fbr\"))\n+  4 4)\n+\n+(define_function_unit \"ev5_fpadd\" 1 0\n+  (and (eq_attr \"cpu\" \"ev5\")\n+       (eq_attr \"type\" \"fdivs\"))\n+  60 4)\n+\n+(define_function_unit \"ev5_fpadd\" 1 0\n+  (and (eq_attr \"cpu\" \"ev5\")\n+       (eq_attr \"type\" \"fdivt\"))\n+  88 4)\n \f\n ;; First define the arithmetic insns.  Note that the 32-bit forms also\n ;; sign-extend.\n@@ -89,7 +223,7 @@\n    addl %1,$31,%0\n    ldl %0,%1\n    cvtql %1,%0\\;cvtlq %0,%0\"\n-  [(set_attr \"type\" \"iaddlog,ld,fpop\")])\n+  [(set_attr \"type\" \"iadd,ld,fadd\")])\n \n ;; Do addsi3 the way expand_binop would do if we didn't have one.  This\n ;; generates better code.  We have the anonymous addsi3 pattern below in\n@@ -116,8 +250,7 @@\n    addl %r1,%2,%0\n    subl %r1,%n2,%0\n    lda %0,%2(%r1)\n-   ldah %0,%h2(%r1)\"\n-  [(set_attr \"type\" \"iaddlog\")])\n+   ldah %0,%h2(%r1)\")\n \n (define_split\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n@@ -144,8 +277,7 @@\n   \"\"\n   \"@\n    addl %r1,%2,%0\n-   subl %r1,%n2,%0\"\n-  [(set_attr \"type\" \"iaddlog\")])\n+   subl %r1,%n2,%0\")\n \n (define_split\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n@@ -198,8 +330,7 @@\n    addq %r1,%2,%0\n    subq %r1,%n2,%0\n    lda %0,%2(%r1)\n-   ldah %0,%h2(%r1)\"\n-  [(set_attr \"type\" \"iaddlog\")])\n+   ldah %0,%h2(%r1)\")\n \n ;; Don't do this if we are adjusting SP since we don't want to do\n ;; it in two steps. \n@@ -229,8 +360,7 @@\n   \"\"\n   \"@\n    s%2addl %r1,%3,%0\n-   s%2subl %r1,%n3,%0\"\n-  [(set_attr \"type\" \"iaddlog\")])\n+   s%2subl %r1,%n3,%0\")\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r\")\n@@ -241,8 +371,7 @@\n   \"\"\n   \"@\n    s%2addl %r1,%3,%0\n-   s%2subl %r1,%n3,%0\"\n-  [(set_attr \"type\" \"iaddlog\")])\n+   s%2subl %r1,%n3,%0\")\n \n (define_split\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n@@ -273,8 +402,7 @@\n   \"\"\n   \"@\n    s%2addq %r1,%3,%0\n-   s%2subq %1,%n3,%0\"\n-  [(set_attr \"type\" \"iaddlog\")])\n+   s%2subq %1,%n3,%0\")\n \n ;; These variants of the above insns can occur if the third operand\n ;; is the frame pointer.  This is a kludge, but there doesn't\n@@ -286,8 +414,7 @@\n \t\t\t  (match_operand:DI 2 \"some_operand\" \"r\"))\n \t\t (match_operand:DI 3 \"some_operand\" \"rIOKL\")))]\n   \"reload_in_progress\"\n-  \"#\"\n-  [(set_attr \"type\" \"iaddlog\")])\n+  \"#\")\n \n (define_split\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n@@ -306,8 +433,7 @@\n \t\t\t  (match_operand:SI 3 \"some_operand\" \"r\"))\n \t\t (match_operand:SI 4 \"some_operand\" \"rIOKL\")))]\n   \"reload_in_progress\"\n-  \"#\"\n-  [(set_attr \"type\" \"iaddlog\")])\n+  \"#\")\n \n (define_split\n   [(set (match_operand:SI 0 \"register_operand\" \"r\")\n@@ -330,8 +456,7 @@\n \t\t   (match_operand:SI 3 \"some_operand\" \"r\"))\n \t\t  (match_operand:SI 4 \"some_operand\" \"rIOKL\"))))]\n   \"reload_in_progress\"\n-  \"#\"\n-  [(set_attr \"type\" \"iaddlog\")])\n+  \"#\")\n \n (define_split\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n@@ -356,8 +481,7 @@\n \t\t\t  (match_operand:DI 3 \"some_operand\" \"r\"))\n \t\t (match_operand:DI 4 \"some_operand\" \"rIOKL\")))]\n   \"reload_in_progress\"\n-  \"#\"\n-  [(set_attr \"type\" \"iaddlog\")])\n+  \"#\")\n \n (define_split\n   [(set (match_operand:DI 0 \"register_operand\" \"=\")\n@@ -375,23 +499,20 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(neg:SI (match_operand:SI 1 \"reg_or_8bit_operand\" \"rI\")))]\n   \"\"\n-  \"subl $31,%1,%0\"\n-  [(set_attr \"type\" \"iaddlog\")])\n+  \"subl $31,%1,%0\")\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(sign_extend:DI (neg:SI\n \t\t\t (match_operand:SI 1 \"reg_or_8bit_operand\" \"rI\"))))]\n   \"\"\n-  \"subl $31,%1,%0\"\n-  [(set_attr \"type\" \"iaddlog\")])\n+  \"subl $31,%1,%0\")\n \n (define_insn \"negdi2\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(neg:DI (match_operand:DI 1 \"reg_or_8bit_operand\" \"rI\")))]\n   \"\"\n-  \"subq $31,%1,%0\"\n-  [(set_attr \"type\" \"iaddlog\")])\n+  \"subq $31,%1,%0\")\n \n (define_expand \"subsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n@@ -412,33 +533,29 @@\n \t(minus:SI (match_operand:SI 1 \"reg_or_0_operand\" \"rJ\")\n \t\t  (match_operand:SI 2 \"reg_or_8bit_operand\" \"rI\")))]\n   \"\"\n-  \"subl %r1,%2,%0\"\n-  [(set_attr \"type\" \"iaddlog\")])\n+  \"subl %r1,%2,%0\")\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(sign_extend:DI (minus:SI (match_operand:SI 1 \"reg_or_0_operand\" \"rJ\")\n \t\t\t\t  (match_operand:SI 2 \"reg_or_8bit_operand\" \"rI\"))))]\n   \"\"\n-  \"subl %r1,%2,%0\"\n-  [(set_attr \"type\" \"iaddlog\")])\n+  \"subl %r1,%2,%0\")\n \n (define_insn \"subdi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(minus:DI (match_operand:DI 1 \"reg_or_0_operand\" \"rJ\")\n \t\t  (match_operand:DI 2 \"reg_or_8bit_operand\" \"rI\")))]\n   \"\"\n-  \"subq %r1,%2,%0\"\n-  [(set_attr \"type\" \"iaddlog\")])\n+  \"subq %r1,%2,%0\")\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(minus:SI (mult:SI (match_operand:SI 1 \"reg_or_0_operand\" \"rJ\")\n \t\t\t   (match_operand:SI 2 \"const48_operand\" \"I\"))\n \t\t  (match_operand:SI 3 \"reg_or_8bit_operand\" \"rI\")))]\n   \"\"\n-  \"s%2subl %r1,%3,%0\"\n-  [(set_attr \"type\" \"iaddlog\")])\n+  \"s%2subl %r1,%3,%0\")\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n@@ -447,17 +564,15 @@\n \t\t\t    (match_operand:SI 2 \"const48_operand\" \"I\"))\n \t\t   (match_operand:SI 3 \"reg_or_8bit_operand\" \"rI\"))))]\n   \"\"\n-  \"s%2subl %r1,%3,%0\"\n-  [(set_attr \"type\" \"iaddlog\")])\n+  \"s%2subl %r1,%3,%0\")\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(minus:DI (mult:DI (match_operand:DI 1 \"reg_or_0_operand\" \"rJ\")\n \t\t\t   (match_operand:DI 2 \"const48_operand\" \"I\"))\n \t\t  (match_operand:DI 3 \"reg_or_8bit_operand\" \"rI\")))]\n   \"\"\n-  \"s%2subq %r1,%3,%0\"\n-  [(set_attr \"type\" \"iaddlog\")])\n+  \"s%2subq %r1,%3,%0\")\n \n (define_insn \"mulsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n@@ -643,7 +758,7 @@\n    and %r1,%2,%0\n    bic %r1,%N2,%0\n    zapnot %r1,%m2,%0\"\n-  [(set_attr \"type\" \"iaddlog,iaddlog,shiftcm\")])\n+  [(set_attr \"type\" \"ilog,ilog,shift\")])\n \n ;; There are times when we can split an AND into two AND insns.  This occurs\n ;; when we can first clear any bytes and then clear anything else.  For\n@@ -681,50 +796,50 @@\n \t(zero_extend:HI (match_operand:QI 1 \"register_operand\" \"r\")))]\n   \"\"\n   \"zapnot %1,1,%0\"\n-  [(set_attr \"type\" \"iaddlog\")])\n+  [(set_attr \"type\" \"shift\")])\n \n (define_insn \"zero_extendqisi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(zero_extend:SI (match_operand:QI 1 \"register_operand\" \"r\")))]\n   \"\"\n   \"zapnot %1,1,%0\"\n-  [(set_attr \"type\" \"iaddlog\")])\n+  [(set_attr \"type\" \"shift\")])\n \n (define_insn \"zero_extendqidi2\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(zero_extend:DI (match_operand:QI 1 \"register_operand\" \"r\")))]\n   \"\"\n   \"zapnot %1,1,%0\"\n-  [(set_attr \"type\" \"iaddlog\")])\n+  [(set_attr \"type\" \"shift\")])\n \n (define_insn \"zero_extendhisi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(zero_extend:SI (match_operand:HI 1 \"register_operand\" \"r\")))]\n   \"\"\n   \"zapnot %1,3,%0\"\n-  [(set_attr \"type\" \"iaddlog\")])\n+  [(set_attr \"type\" \"shift\")])\n \n (define_insn \"zero_extendhidi2\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(zero_extend:DI (match_operand:HI 1 \"register_operand\" \"r\")))]\n   \"\"\n   \"zapnot %1,3,%0\"\n-  [(set_attr \"type\" \"iaddlog\")])\n+  [(set_attr \"type\" \"shift\")])\n \n (define_insn \"zero_extendsidi2\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(zero_extend:DI (match_operand:SI 1 \"register_operand\" \"r\")))]\n   \"\"\n   \"zapnot %1,15,%0\"\n-  [(set_attr \"type\" \"iaddlog\")])\n+  [(set_attr \"type\" \"shift\")])\n \n (define_insn  \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(and:DI (not:DI (match_operand:DI 1 \"reg_or_8bit_operand\" \"rI\"))\n \t\t(match_operand:DI 2 \"reg_or_0_operand\" \"rJ\")))]\n   \"\"\n   \"bic %r2,%1,%0\"\n-  [(set_attr \"type\" \"iaddlog\")])\n+  [(set_attr \"type\" \"ilog\")])\n \n (define_insn \"iordi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r\")\n@@ -734,22 +849,22 @@\n   \"@\n    bis %r1,%2,%0\n    ornot %r1,%N2,%0\"\n-  [(set_attr \"type\" \"iaddlog\")])\n+  [(set_attr \"type\" \"ilog\")])\n \n (define_insn \"one_cmpldi2\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(not:DI (match_operand:DI 1 \"reg_or_8bit_operand\" \"rI\")))]\n   \"\"\n   \"ornot $31,%1,%0\"\n-  [(set_attr \"type\" \"iaddlog\")])\n+  [(set_attr \"type\" \"ilog\")])\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(ior:DI (not:DI (match_operand:DI 1 \"reg_or_8bit_operand\" \"rI\"))\n \t\t(match_operand:DI 2 \"reg_or_0_operand\" \"rJ\")))]\n   \"\"\n   \"ornot %r2,%1,%0\"\n-  [(set_attr \"type\" \"iaddlog\")])\n+  [(set_attr \"type\" \"ilog\")])\n \n (define_insn \"xordi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r\")\n@@ -759,15 +874,15 @@\n   \"@\n    xor %r1,%2,%0\n    eqv %r1,%N2,%0\"\n-  [(set_attr \"type\" \"iaddlog\")])\n+  [(set_attr \"type\" \"ilog\")])\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(not:DI (xor:DI (match_operand:DI 1 \"register_operand\" \"%rJ\")\n \t\t\t(match_operand:DI 2 \"register_operand\" \"rI\"))))]\n   \"\"\n   \"eqv %r1,%2,%0\"\n-  [(set_attr \"type\" \"iaddlog\")])\n+  [(set_attr \"type\" \"ilog\")])\n \f\n ;; Next come the shifts and the various extract and insert operations.\n \n@@ -789,7 +904,7 @@\n       return \\\"sll %r1,%2,%0\\\";\n     }\n }\"\n-  [(set_attr \"type\" \"iaddlog,shiftcm\")])\n+  [(set_attr \"type\" \"iadd,shift\")])\n \n ;; ??? The following pattern is made by combine, but earlier phases\n ;; (specifically flow) can't handle it.  This occurs in jump.c.  Deal\n@@ -808,21 +923,23 @@\n ;;  else\n ;;    return \\\"s%P2addl %r1,0,%0\\\";\n ;; }\"\n-;;  [(set_attr \"type\" \"iaddlog\")])\n+;;  [(set_attr \"type\" \"iadd\")])\n \t\t\t  \n (define_insn \"lshrdi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(lshiftrt:DI (match_operand:DI 1 \"reg_or_0_operand\" \"rJ\")\n \t\t     (match_operand:DI 2 \"reg_or_6bit_operand\" \"rI\")))]\n   \"\"\n-  \"srl %r1,%2,%0\")\n+  \"srl %r1,%2,%0\"\n+  [(set_attr \"type\" \"shift\")])\n \n (define_insn \"ashrdi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(ashiftrt:DI (match_operand:DI 1 \"reg_or_0_operand\" \"rJ\")\n \t\t     (match_operand:DI 2 \"reg_or_6bit_operand\" \"rI\")))]\n   \"\"\n-  \"sra %r1,%2,%0\")\n+  \"sra %r1,%2,%0\"\n+  [(set_attr \"type\" \"shift\")])\n \n (define_expand \"extendqihi2\"\n   [(set (match_dup 2)\n@@ -1005,7 +1122,8 @@\n \t\t\t (match_operand:DI 2 \"mode_width_operand\" \"n\")\n \t\t\t (match_operand:DI 3 \"mul8_operand\" \"I\")))]\n   \"\"\n-  \"ext%M2l %r1,%s3,%0\")\n+  \"ext%M2l %r1,%s3,%0\"\n+  [(set_attr \"type\" \"shift\")])\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n@@ -1014,7 +1132,8 @@\n \t\t\t (ashift:DI (match_operand:DI 3 \"reg_or_8bit_operand\" \"rI\")\n \t\t\t\t    (const_int 3))))]\n   \"\"\n-  \"ext%M2l %r1,%3,%0\")\n+  \"ext%M2l %r1,%3,%0\"\n+  [(set_attr \"type\" \"shift\")])\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n@@ -1028,7 +1147,8 @@\n \t\t      (const_int 7))\n \t\t     (const_int 3)))))]\n   \"\"\n-  \"extqh %r1,%2,%0\")\n+  \"extqh %r1,%2,%0\"\n+  [(set_attr \"type\" \"shift\")])\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n@@ -1043,7 +1163,8 @@\n \t\t      (const_int 7))\n \t\t     (const_int 3)))))]\n   \"\"\n-  \"extlh %r1,%2,%0\")\n+  \"extlh %r1,%2,%0\"\n+  [(set_attr \"type\" \"shift\")])\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n@@ -1058,7 +1179,8 @@\n \t\t      (const_int 7))\n \t\t     (const_int 3)))))]\n   \"\"\n-  \"extwh %r1,%2,%0\")\n+  \"extwh %r1,%2,%0\"\n+  [(set_attr \"type\" \"shift\")])\n \n ;; This converts an extXl into an extXh with an appropriate adjustment\n ;; to the address calculation.\n@@ -1091,45 +1213,51 @@\n \t(ashift:DI (zero_extend:DI (match_operand:QI 1 \"register_operand\" \"r\"))\n \t\t   (match_operand:DI 2 \"mul8_operand\" \"I\")))]\n   \"\"\n-  \"insbl %1,%s2,%0\")\n+  \"insbl %1,%s2,%0\"\n+  [(set_attr \"type\" \"shift\")])\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(ashift:DI (zero_extend:DI (match_operand:HI 1 \"register_operand\" \"r\"))\n \t\t   (match_operand:DI 2 \"mul8_operand\" \"I\")))]\n   \"\"\n-  \"inswl %1,%s2,%0\")\n+  \"inswl %1,%s2,%0\"\n+  [(set_attr \"type\" \"shift\")])\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(ashift:DI (zero_extend:DI (match_operand:SI 1 \"register_operand\" \"r\"))\n \t\t   (match_operand:DI 2 \"mul8_operand\" \"I\")))]\n   \"\"\n-  \"insll %1,%s2,%0\")\n+  \"insll %1,%s2,%0\"\n+  [(set_attr \"type\" \"shift\")])\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(ashift:DI (zero_extend:DI (match_operand:QI 1 \"register_operand\" \"r\"))\n \t\t   (ashift:DI (match_operand:DI 2 \"reg_or_8bit_operand\" \"rI\")\n \t\t\t      (const_int 3))))]\n   \"\"\n-  \"insbl %1,%2,%0\")\n+  \"insbl %1,%2,%0\"\n+  [(set_attr \"type\" \"shift\")])\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(ashift:DI (zero_extend:DI (match_operand:HI 1 \"register_operand\" \"r\"))\n \t\t   (ashift:DI (match_operand:DI 2 \"reg_or_8bit_operand\" \"rI\")\n \t\t\t      (const_int 3))))]\n   \"\"\n-  \"inswl %1,%2,%0\")\n+  \"inswl %1,%2,%0\"\n+  [(set_attr \"type\" \"shift\")])\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(ashift:DI (zero_extend:DI (match_operand:SI 1 \"register_operand\" \"r\"))\n \t\t   (ashift:DI (match_operand:DI 2 \"reg_or_8bit_operand\" \"rI\")\n \t\t\t      (const_int 3))))]\n   \"\"\n-  \"insll %1,%2,%0\")\n+  \"insll %1,%2,%0\"\n+  [(set_attr \"type\" \"shift\")])\n \n ;; We do not include the insXh insns because they are complex to express\n ;; and it does not appear that we would ever want to generate them.\n@@ -1143,7 +1271,8 @@\n \t\t\t  (const_int 3))))\n \t\t(match_operand:DI 1 \"reg_or_0_operand\" \"rJ\")))]\n   \"\"\n-  \"msk%U2l %r1,%3,%0\")\n+  \"msk%U2l %r1,%3,%0\"\n+  [(set_attr \"type\" \"shift\")])\n \n ;; We do not include the mskXh insns because it does not appear we would ever\n ;; generate one.\n@@ -1157,36 +1286,36 @@\n \t(abs:SF (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n   \"cpys $f31,%R1,%0\"\n-  [(set_attr \"type\" \"fpop\")])\n+  [(set_attr \"type\" \"fcpys\")])\n \n (define_insn \"absdf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(abs:DF (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n   \"cpys $f31,%R1,%0\"\n-  [(set_attr \"type\" \"fpop\")])\n+  [(set_attr \"type\" \"fcpys\")])\n \n (define_insn \"negsf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(neg:SF (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n   \"cpysn %R1,%R1,%0\"\n-  [(set_attr \"type\" \"fpop\")])\n+  [(set_attr \"type\" \"fadd\")])\n \n (define_insn \"negdf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(neg:DF (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n   \"cpysn %R1,%R1,%0\"\n-  [(set_attr \"type\" \"fpop\")])\n+  [(set_attr \"type\" \"fadd\")])\n \n (define_insn \"\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=&f\")\n \t(plus:SF (match_operand:SF 1 \"reg_or_fp0_operand\" \"%fG\")\n \t\t (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP && (alpha_tp == ALPHA_TP_INSN)\"\n   \"adds%)%& %R1,%R2,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"addsf3\"\n@@ -1195,7 +1324,7 @@\n \t\t (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n   \"adds%)%& %R1,%R2,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n@@ -1204,7 +1333,7 @@\n \t\t (match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP && (alpha_tp == ALPHA_TP_INSN)\"\n   \"addt%)%& %R1,%R2,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"adddf3\"\n@@ -1213,7 +1342,7 @@\n \t\t (match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n   \"addt%)%& %R1,%R2,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n@@ -1223,7 +1352,7 @@\n \t\t (match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP && (alpha_tp == ALPHA_TP_INSN)\"\n   \"addt%)%& %R1,%R2,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n@@ -1233,7 +1362,7 @@\n \t\t (match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n   \"addt%)%& %R1,%R2,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n@@ -1244,7 +1373,7 @@\n \t\t  (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\"))))]\n   \"TARGET_FP && (alpha_tp == ALPHA_TP_INSN)\"\n   \"addt%)%& %R1,%R2,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n@@ -1255,54 +1384,54 @@\n \t\t  (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\"))))]\n   \"TARGET_FP\"\n   \"addt%)%& %R1,%R2,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"fix_truncdfdi2\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=f\")\n \t(fix:DI (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n   \"cvttqc %R1,%0\"\n-  [(set_attr \"type\" \"fpop\")])\n+  [(set_attr \"type\" \"fadd\")])\n \n (define_insn \"fix_truncsfdi2\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=f\")\n \t(fix:DI (float_extend:DF\n \t\t (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\"))))]\n   \"TARGET_FP\"\n   \"cvttqc %R1,%0\"\n-  [(set_attr \"type\" \"fpop\")])\n+  [(set_attr \"type\" \"fadd\")])\n \n (define_insn \"\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=&f\")\n \t(float:SF (match_operand:DI 1 \"register_operand\" \"f\")))]\n   \"TARGET_FP && (alpha_tp == ALPHA_TP_INSN)\"\n   \"cvtqs%+%& %1,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"floatdisf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(float:SF (match_operand:DI 1 \"register_operand\" \"f\")))]\n   \"TARGET_FP\"\n   \"cvtqs%+%& %1,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=&f\")\n \t(float:DF (match_operand:DI 1 \"register_operand\" \"f\")))]\n   \"TARGET_FP && (alpha_tp == ALPHA_TP_INSN)\"\n   \"cvtqt%+%& %1,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"floatdidf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(float:DF (match_operand:DI 1 \"register_operand\" \"f\")))]\n   \"TARGET_FP\"\n   \"cvtqt%+%& %1,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n@@ -1312,7 +1441,7 @@\n   \"@\n    addt%)%& $f31,%1,%0\n    lds %0,%1\"\n-  [(set_attr \"type\" \"fpop,ld\")\n+  [(set_attr \"type\" \"fadd,ld\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"extendsfdf2\"\n@@ -1322,23 +1451,23 @@\n   \"@\n    addt%)%& $f31,%1,%0\n    lds %0,%1\"\n-  [(set_attr \"type\" \"fpop,ld\")\n+  [(set_attr \"type\" \"fadd,ld\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=&f\")\n \t(float_truncate:SF (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP && (alpha_tp == ALPHA_TP_INSN)\"\n   \"cvtts%)%& %R1,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"truncdfsf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(float_truncate:SF (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n   \"cvtts%)%& %R1,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n@@ -1439,7 +1568,7 @@\n \t\t (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP && (alpha_tp == ALPHA_TP_INSN)\"\n   \"muls%)%& %R1,%R2,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fmul\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"mulsf3\"\n@@ -1448,7 +1577,7 @@\n \t\t (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n   \"muls%)%& %R1,%R2,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fmul\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n@@ -1457,7 +1586,7 @@\n \t\t (match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP && (alpha_tp == ALPHA_TP_INSN)\"\n   \"mult%)%& %R1,%R2,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fmul\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"muldf3\"\n@@ -1466,7 +1595,7 @@\n \t\t (match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n   \"mult%)%& %R1,%R2,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fmul\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n@@ -1476,7 +1605,7 @@\n \t\t (match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP && (alpha_tp == ALPHA_TP_INSN)\"\n   \"mult%)%& %R1,%R2,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fmul\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n@@ -1486,7 +1615,7 @@\n \t\t (match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n   \"mult%)%& %R1,%R2,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fmul\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n@@ -1497,7 +1626,7 @@\n \t\t  (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\"))))]\n   \"TARGET_FP && (alpha_tp == ALPHA_TP_INSN)\"\n   \"mult%)%& %R1,%R2,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fmul\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n@@ -1508,7 +1637,7 @@\n \t\t  (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\"))))]\n   \"TARGET_FP\"\n   \"mult%)%& %R1,%R2,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fmul\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n@@ -1517,7 +1646,7 @@\n \t\t  (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP && (alpha_tp == ALPHA_TP_INSN)\"\n   \"subs%)%& %R1,%R2,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"subsf3\"\n@@ -1526,7 +1655,7 @@\n \t\t  (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n   \"subs%)%& %R1,%R2,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n@@ -1535,7 +1664,7 @@\n \t\t  (match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP && (alpha_tp == ALPHA_TP_INSN)\"\n   \"subt%)%& %R1,%R2,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"subdf3\"\n@@ -1544,7 +1673,7 @@\n \t\t  (match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n   \"subt%)%& %R1,%R2,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n@@ -1554,7 +1683,7 @@\n \t\t  (match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP && (alpha_tp == ALPHA_TP_INSN)\"\n   \"subt%)%& %R1,%R2,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n@@ -1564,7 +1693,7 @@\n \t\t  (match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n   \"subt%)%& %R1,%R2,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n@@ -1574,7 +1703,7 @@\n \t\t   (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\"))))]\n   \"TARGET_FP && (alpha_tp == ALPHA_TP_INSN)\"\n   \"subt%)%& %R1,%R2,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n@@ -1584,7 +1713,7 @@\n \t\t   (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\"))))]\n   \"TARGET_FP\"\n   \"subt%)%& %R1,%R2,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n@@ -1595,7 +1724,7 @@\n \t\t   (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\"))))]\n   \"TARGET_FP && (alpha_tp == ALPHA_TP_INSN)\"\n   \"subt%)%& %R1,%R2,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n@@ -1606,7 +1735,7 @@\n \t\t   (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\"))))]\n   \"TARGET_FP\"\n   \"subt%)%& %R1,%R2,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \f\n ;; Next are all the integer comparisons, and conditional moves and branches\n@@ -1664,7 +1793,8 @@\n    cmov%C2 %r3,%1,%0\n    cmov%D2 %r3,%5,%0\n    cmov%c2 %r4,%1,%0\n-   cmov%d2 %r4,%5,%0\")\n+   cmov%d2 %r4,%5,%0\"\n+  [(set_attr \"type\" \"cmov\")])\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r,r,r\")\n@@ -1679,7 +1809,8 @@\n    cmov%C2 %r3,%1,%0\n    cmov%D2 %r3,%5,%0\n    cmov%c2 %r4,%1,%0\n-   cmov%d2 %r4,%5,%0\")\n+   cmov%d2 %r4,%5,%0\"\n+  [(set_attr \"type\" \"cmov\")])\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r\")\n@@ -1693,7 +1824,8 @@\n   \"\"\n   \"@\n    cmovlbc %r2,%1,%0\n-   cmovlbs %r2,%3,%0\")\n+   cmovlbs %r2,%3,%0\"\n+  [(set_attr \"type\" \"cmov\")])\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r\")\n@@ -1707,7 +1839,8 @@\n   \"\"\n   \"@\n    cmovlbs %r2,%1,%0\n-   cmovlbc %r2,%3,%0\")\n+   cmovlbc %r2,%3,%0\"\n+  [(set_attr \"type\" \"cmov\")])\n \n ;; This form is added since combine thinks that an IF_THEN_ELSE with both\n ;; arms constant is a single insn, so it won't try to form it if combine\n@@ -1725,7 +1858,8 @@\n \t (match_dup 0)))\n    (clobber (match_scratch:DI 4 \"=&r\"))]\n   \"\"\n-  \"addq %0,%1,%4\\;cmov%C2 %r3,%4,%0\")\n+  \"addq %0,%1,%4\\;cmov%C2 %r3,%4,%0\"\n+  [(set_attr \"type\" \"cmov\")])\n \n (define_split\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n@@ -1871,7 +2005,8 @@\n \t(smax:DI (match_operand:DI 1 \"register_operand\" \"0\")\n \t\t (const_int 0)))]\n   \"\"\n-  \"cmovlt %0,0,%0\")\n+  \"cmovlt %0,0,%0\"\n+  [(set_attr \"type\" \"cmov\")])\n \n (define_expand \"smindi3\"\n   [(set (match_dup 3)\n@@ -1901,7 +2036,8 @@\n \t(smin:DI (match_operand:DI 1 \"register_operand\" \"0\")\n \t\t (const_int 0)))]\n   \"\"\n-  \"cmovgt %0,0,%0\")\n+  \"cmovgt %0,0,%0\"\n+  [(set_attr \"type\" \"cmov\")])\n \n (define_expand \"umaxdi3\"\n   [(set (match_dup 3) \n@@ -2023,7 +2159,7 @@\n \t\t\t    (match_operand:DF 3 \"reg_or_fp0_operand\" \"fG\")]))]\n   \"TARGET_FP && (alpha_tp == ALPHA_TP_INSN)\"\n   \"cmpt%C1%' %R2,%R3,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n@@ -2033,7 +2169,7 @@\n \t\t\t    (match_operand:DF 3 \"reg_or_fp0_operand\" \"fG\")]))]\n   \"TARGET_FP\"\n   \"cmpt%C1%' %R2,%R3,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n@@ -2044,7 +2180,7 @@\n \t\t\t    (match_operand:DF 3 \"reg_or_fp0_operand\" \"fG\")]))]\n   \"TARGET_FP && (alpha_tp == ALPHA_TP_INSN)\"\n   \"cmpt%C1%' %R2,%R3,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n@@ -2055,7 +2191,7 @@\n \t\t\t    (match_operand:DF 3 \"reg_or_fp0_operand\" \"fG\")]))]\n   \"TARGET_FP\"\n   \"cmpt%C1%' %R2,%R3,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n@@ -2066,7 +2202,7 @@\n \t\t\t     (match_operand:SF 3 \"reg_or_fp0_operand\" \"fG\"))]))]\n   \"TARGET_FP && (alpha_tp == ALPHA_TP_INSN)\"\n   \"cmpt%C1%' %R2,%R3,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n@@ -2077,7 +2213,7 @@\n \t\t\t     (match_operand:SF 3 \"reg_or_fp0_operand\" \"fG\"))]))]\n   \"TARGET_FP\"\n   \"cmpt%C1%' %R2,%R3,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n@@ -2089,7 +2225,7 @@\n \t\t\t     (match_operand:SF 3 \"reg_or_fp0_operand\" \"fG\"))]))]\n   \"TARGET_FP && (alpha_tp == ALPHA_TP_INSN)\"\n   \"cmpt%C1%' %R2,%R3,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n@@ -2101,7 +2237,7 @@\n \t\t\t     (match_operand:SF 3 \"reg_or_fp0_operand\" \"fG\"))]))]\n   \"TARGET_FP\"\n   \"cmpt%C1%' %R2,%R3,%0\"\n-  [(set_attr \"type\" \"fpop\")\n+  [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\"\n@@ -2116,7 +2252,7 @@\n   \"@\n    fcmov%C3 %R4,%R1,%0\n    fcmov%D3 %R4,%R5,%0\"\n-  [(set_attr \"type\" \"fpop\")])\n+  [(set_attr \"type\" \"fadd\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n@@ -2130,7 +2266,7 @@\n   \"@\n    fcmov%C3 %R4,%R1,%0\n    fcmov%D3 %R4,%R5,%0\"\n-  [(set_attr \"type\" \"fpop\")])\n+  [(set_attr \"type\" \"fadd\")])\n \n (define_insn \"\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=&f,f\")\n@@ -2144,7 +2280,7 @@\n   \"@\n    fcmov%C3 %R4,%R1,%0\n    fcmov%D3 %R4,%R5,%0\"\n-  [(set_attr \"type\" \"fpop\")])\n+  [(set_attr \"type\" \"fadd\")])\n \n (define_insn \"\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n@@ -2158,7 +2294,7 @@\n   \"@\n    fcmov%C3 %R4,%R1,%0\n    fcmov%D3 %R4,%R5,%0\"\n-  [(set_attr \"type\" \"fpop\")])\n+  [(set_attr \"type\" \"fadd\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=&f,f\")\n@@ -2172,7 +2308,7 @@\n   \"@\n    fcmov%C3 %R4,%R1,%0\n    fcmov%D3 %R4,%R5,%0\"\n-  [(set_attr \"type\" \"fpop\")])\n+  [(set_attr \"type\" \"fadd\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=&f,f\")\n@@ -2187,7 +2323,7 @@\n   \"@\n    fcmov%C3 %R4,%R1,%0\n    fcmov%D3 %R4,%R5,%0\"\n-  [(set_attr \"type\" \"fpop\")])\n+  [(set_attr \"type\" \"fadd\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n@@ -2201,7 +2337,7 @@\n   \"@\n    fcmov%C3 %R4,%R1,%0\n    fcmov%D3 %R4,%R5,%0\"\n-  [(set_attr \"type\" \"fpop\")])\n+  [(set_attr \"type\" \"fadd\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n@@ -2216,7 +2352,7 @@\n   \"@\n    fcmov%C3 %R4,%R1,%0\n    fcmov%D3 %R4,%R5,%0\"\n-  [(set_attr \"type\" \"fpop\")])\n+  [(set_attr \"type\" \"fadd\")])\n \n (define_insn \"\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=&f,f\")\n@@ -2231,7 +2367,7 @@\n   \"@\n    fcmov%C3 %R4,%R1,%0\n    fcmov%D3 %R4,%R5,%0\"\n-  [(set_attr \"type\" \"fpop\")])\n+  [(set_attr \"type\" \"fadd\")])\n \n (define_insn \"\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n@@ -2246,7 +2382,7 @@\n   \"@\n    fcmov%C3 %R4,%R1,%0\n    fcmov%D3 %R4,%R5,%0\"\n-  [(set_attr \"type\" \"fpop\")])\n+  [(set_attr \"type\" \"fadd\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=&f,f\")\n@@ -2261,7 +2397,7 @@\n   \"@\n    fcmov%C3 %R4,%R1,%0\n    fcmov%D3 %R4,%R5,%0\"\n-  [(set_attr \"type\" \"fpop\")])\n+  [(set_attr \"type\" \"fadd\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n@@ -2276,7 +2412,7 @@\n   \"@\n    fcmov%C3 %R4,%R1,%0\n    fcmov%D3 %R4,%R5,%0\"\n-  [(set_attr \"type\" \"fpop\")])\n+  [(set_attr \"type\" \"fadd\")])\n \n (define_expand \"maxdf3\"\n   [(set (match_dup 3)\n@@ -3198,7 +3334,7 @@\n   [(const_int 0)]\n   \"\"\n   \"bis $31,$31,$31\"\n-  [(set_attr \"type\" \"iaddlog\")])\n+  [(set_attr \"type\" \"ilog\")])\n \n (define_expand \"tablejump\"\n   [(use (match_operand:SI 0 \"register_operand\" \"\"))\n@@ -3327,7 +3463,8 @@\n (define_insn \"\"\n   [(unspec_volatile [(const_int 0)] 0)]\n   \"\"\n-  \"call_pal 0x86\")\n+  \"call_pal 0x86\"\n+  [(set_attr \"type\" \"isubr\")])\n \f\n ;; Finally, we have the basic data motion insns.  The byte and word insns\n ;; are done via define_expand.  Start with the floating-point insns, since\n@@ -3346,7 +3483,7 @@\n    cpys $f31,$f31,%0\n    lds %0,%1\n    sts %R1,%0\"\n-  [(set_attr \"type\" \"iaddlog,ld,st,fpop,fpop,ld,st\")])\n+  [(set_attr \"type\" \"ilog,ld,st,fcpys,fcpys,ld,st\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=r,r,m,f,f,f,m\")\n@@ -3361,7 +3498,7 @@\n    cpys $f31,$f31,%0\n    ldt %0,%1\n    stt %R1,%0\"\n-  [(set_attr \"type\" \"iaddlog,ld,st,fpop,fpop,ld,st\")])\n+  [(set_attr \"type\" \"ilog,ld,st,fcpys,fcpys,ld,st\")])\n \n (define_expand \"movsf\"\n   [(set (match_operand:SF 0 \"nonimmediate_operand\" \"\")\n@@ -3402,7 +3539,7 @@\n    cpys $f31,$f31,%0\n    lds %0,%1\n    sts %R1,%0\"\n-  [(set_attr \"type\" \"iaddlog,iaddlog,iaddlog,iaddlog,iaddlog,ld,st,fpop,fpop,ld,st\")])\n+  [(set_attr \"type\" \"ilog,ilog,ilog,iadd,iadd,ld,st,fcpys,fcpys,ld,st\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,r,r,r,r,r,r,m,f,f,f,m\")\n@@ -3422,7 +3559,7 @@\n    cpys $f31,$f31,%0\n    lds %0,%1\n    sts %R1,%0\"\n-  [(set_attr \"type\" \"iaddlog,iaddlog,iaddlog,iaddlog,iaddlog,ldsym,ld,st,fpop,fpop,ld,st\")])\n+  [(set_attr \"type\" \"ilog,ilog,ilog,iadd,iadd,ldsym,ld,st,fcpys,fcpys,ld,st\")])\n \n (define_insn \"\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=r,r,r,r,f,f\")\n@@ -3436,7 +3573,7 @@\n    lda %0,%L1\n    cpys %1,%1,%0\n    cpys $f31,$f31,%0\"\n-  [(set_attr \"type\" \"iaddlog,iaddlog,iaddlog,iaddlog,fpop,fpop\")])\n+  [(set_attr \"type\" \"ilog,ilog,ilog,iadd,fcpys,fcpys\")])\n \n (define_insn \"\"\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=r,r,r,r,f,f\")\n@@ -3450,7 +3587,7 @@\n    lda %0,%L1\n    cpys %1,%1,%0\n    cpys $f31,$f31,%0\"\n-  [(set_attr \"type\" \"iaddlog,iaddlog,iaddlog,iaddlog,fpop,fpop\")])\n+  [(set_attr \"type\" \"ilog,ilog,ilog,iadd,fcpys,fcpys\")])\n \n ;; We do two major things here: handle mem->mem and construct long\n ;; constants.\n@@ -3513,7 +3650,7 @@\n    cpys $f31,$f31,%0\n    ldt %0,%1\n    stt %R1,%0\"\n-  [(set_attr \"type\" \"iaddlog,iaddlog,iaddlog,iaddlog,iaddlog,ldsym,ld,st,fpop,fpop,ld,st\")])\n+  [(set_attr \"type\" \"ilog,ilog,ilog,iadd,iadd,ldsym,ld,st,fcpys,fcpys,ld,st\")])\n \n ;; We do three major things here: handle mem->mem, put 64-bit constants in\n ;; memory, and construct long 32-bit constants."}]}