{"sha": "924ef62b9145c6c3e14e04dc6cd5034b472307b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI0ZWY2MmI5MTQ1YzZjM2UxNGUwNGRjNmNkNTAzNGI0NzIzMDdiOQ==", "commit": {"author": {"name": "Sterling Augustine", "email": "saugustine@google.com", "date": "2012-07-09T21:44:57Z"}, "committer": {"name": "Sterling Augustine", "email": "sterling@gcc.gnu.org", "date": "2012-07-09T21:44:57Z"}, "message": "error.c (lang_decl_name): Use TFF_UNQUALIFIED_NAME flag.\n\ngcc/cp/ChangeLog\n2012-07-09  Sterling Augustine  <saugustine@google.com>\n\n\t* error.c (lang_decl_name): Use TFF_UNQUALIFIED_NAME flag.\n\ngcc/testsuite/ChangeLog\n2012-07-09  Sterling Augustine  <saugustine@google.com>\n\n\t* g++.dg/debug/dwarf2/pubnames-2.C: New.\n\nFrom-SVN: r189392", "tree": {"sha": "64ef810d14d22cc86f27ad0a15aeeed73fc02a7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64ef810d14d22cc86f27ad0a15aeeed73fc02a7a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/924ef62b9145c6c3e14e04dc6cd5034b472307b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/924ef62b9145c6c3e14e04dc6cd5034b472307b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/924ef62b9145c6c3e14e04dc6cd5034b472307b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/924ef62b9145c6c3e14e04dc6cd5034b472307b9/comments", "author": {"login": "Sterling-Augustine", "id": 56981066, "node_id": "MDQ6VXNlcjU2OTgxMDY2", "avatar_url": "https://avatars.githubusercontent.com/u/56981066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sterling-Augustine", "html_url": "https://github.com/Sterling-Augustine", "followers_url": "https://api.github.com/users/Sterling-Augustine/followers", "following_url": "https://api.github.com/users/Sterling-Augustine/following{/other_user}", "gists_url": "https://api.github.com/users/Sterling-Augustine/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sterling-Augustine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sterling-Augustine/subscriptions", "organizations_url": "https://api.github.com/users/Sterling-Augustine/orgs", "repos_url": "https://api.github.com/users/Sterling-Augustine/repos", "events_url": "https://api.github.com/users/Sterling-Augustine/events{/privacy}", "received_events_url": "https://api.github.com/users/Sterling-Augustine/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1cd130b0467be2880d35f1e328c809e95c9f27c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cd130b0467be2880d35f1e328c809e95c9f27c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cd130b0467be2880d35f1e328c809e95c9f27c8"}], "stats": {"total": 204, "additions": 203, "deletions": 1}, "files": [{"sha": "1afef7a1bf16ce46d4a49a93f6ef4e8ff84624d8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/924ef62b9145c6c3e14e04dc6cd5034b472307b9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/924ef62b9145c6c3e14e04dc6cd5034b472307b9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=924ef62b9145c6c3e14e04dc6cd5034b472307b9", "patch": "@@ -1,3 +1,7 @@\n+2012-07-09  Sterling Augustine  <saugustine@google.com>\n+\n+\t* error.c (lang_decl_name): Use TFF_UNQUALIFIED_NAME flag.\n+\n 2012-07-08  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* decl.c (cp_finish_decl): Add FIXME at add_local_decl call site."}, {"sha": "58f0aff93975888734be12670e8fb98a0a5cd614", "filename": "gcc/cp/error.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/924ef62b9145c6c3e14e04dc6cd5034b472307b9/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/924ef62b9145c6c3e14e04dc6cd5034b472307b9/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=924ef62b9145c6c3e14e04dc6cd5034b472307b9", "patch": "@@ -2633,7 +2633,7 @@ lang_decl_name (tree decl, int v, bool translate)\n     dump_function_name (decl, TFF_PLAIN_IDENTIFIER);\n   else if ((DECL_NAME (decl) == NULL_TREE)\n            && TREE_CODE (decl) == NAMESPACE_DECL)\n-    dump_decl (decl, TFF_PLAIN_IDENTIFIER);\n+    dump_decl (decl, TFF_PLAIN_IDENTIFIER | TFF_UNQUALIFIED_NAME);\n   else\n     dump_decl (DECL_NAME (decl), TFF_PLAIN_IDENTIFIER);\n "}, {"sha": "8f1b93117254344f4ddfb89a36c302948cedfaf8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/924ef62b9145c6c3e14e04dc6cd5034b472307b9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/924ef62b9145c6c3e14e04dc6cd5034b472307b9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=924ef62b9145c6c3e14e04dc6cd5034b472307b9", "patch": "@@ -1,3 +1,7 @@\n+2012-07-09  Sterling Augustine  <saugustine@google.com>\n+\n+\t* g++.dg/debug/dwarf2/pubnames-2.C: New.\n+\n 2012-07-09  Steven Bosscher  <steven@gcc.gnu.org>\n \n \tPR tree-optimization/53887"}, {"sha": "eef03360a6631696111103b78e1397b511200952", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/pubnames-2.C", "status": "added", "additions": 194, "deletions": 0, "changes": 194, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/924ef62b9145c6c3e14e04dc6cd5034b472307b9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpubnames-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/924ef62b9145c6c3e14e04dc6cd5034b472307b9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpubnames-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpubnames-2.C?ref=924ef62b9145c6c3e14e04dc6cd5034b472307b9", "patch": "@@ -0,0 +1,194 @@\n+// { dg-do compile }\n+// { dg-options \"-gpubnames -gdwarf-4 -std=c++0x -dA\" }\n+// { dg-final { scan-assembler \".section\\t.debug_pubnames\" } }\n+// { dg-final { scan-assembler \"\\\"\\\\(anonymous namespace\\\\)\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"one\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"one::G_A\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"one::G_B\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"one::G_C\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"one::\\\\(anonymous namespace\\\\)\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"F_A\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"F_B\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"F_C\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"inline_func_1\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"one::c1::c1\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"one::c1::~c1\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"one::c1::val\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"check_enum\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"main\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2<int>::c2\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2<double>::c2\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2<int const\\\\\\*>::c2\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"check<one::c1>\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"check<two::c2<int> \\\\>\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"check<two::c2<double> \\\\>\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"check<two::c2<int const\\\\\\*> \\\\>\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2<int>::val\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2<double>::val\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2<int const\\\\\\*>::val\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"__static_initialization_and_destruction_0\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2<int>::~c2\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2<double>::~c2\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2<int const\\\\\\*>::~c2\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"_GLOBAL__sub_I__ZN3one3c1vE\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"anonymous_union_var\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::ci\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2v1\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2v2\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2v3\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"one::c1v\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"one::\\\\(anonymous namespace\\\\)::one_anonymous_var\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"\\\\(anonymous namespace\\\\)::c1_count\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"\\\\(anonymous namespace\\\\)::c2_count\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"\\\\(anonymous namespace\\\\)::three\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"\\\\(anonymous namespace\\\\)::three::anonymous_three_var\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \".section\\t.debug_pubtypes\" } }\n+// { dg-final { scan-assembler \"\\\"one::G\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"one::c1\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"int\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"one::c1\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2<int>\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2<int>\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2<double>\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"double\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2<double>\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2<int const\\\\\\*>\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2<int const\\\\\\*>\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"F\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"anonymous_union_container\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"bool\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;]+\\[ \\t\\]+external name\" } }\n+\n+namespace\n+{\n+int c1_count;\n+int c2_count;\n+\n+namespace three\n+{\n+int anonymous_three_var;\n+}\n+};\n+\n+namespace one\n+{\n+\n+enum G\n+{\n+  G_A,\n+  G_B,\n+  G_C\n+};\n+\n+namespace {\n+int one_anonymous_var;\n+}\n+\n+class c1\n+{\n+ public:\n+  static int count;\n+\n+  c1()\n+  { ++c1_count; }\n+\n+  ~c1()\n+  {\n+    --c1_count;\n+  }\n+\n+  enum E\n+  {\n+    E_A,\n+    E_B,\n+    E_C,\n+  };\n+\n+  int\n+  val()\n+  { return E_A; }\n+};\n+\n+c1 c1v;\n+};\n+\n+namespace two\n+{\n+const int ci = 3;\n+\n+template <typename T>\n+class c2\n+{\n+ public:\n+  c2(T t)\n+    : t_(t)\n+  {\n+    ++c2_count;\n+  }\n+\n+  ~c2()\n+  { --c2_count; }\n+\n+  T\n+  val()\n+  { return this->t_; }\n+\n+  T t_;\n+};\n+\n+c2<int> c2v1(1);\n+c2<double> c2v2(2.0);\n+c2<int const*> c2v3(&ci);\n+};\n+\n+enum F\n+{\n+  F_A,\n+  F_B,\n+  F_C\n+};\n+\n+template <class C>\n+bool\n+check(C* c)\n+{ return c->val() == 0; }\n+\n+bool\n+check_enum(int i)\n+{ return i > 0; }\n+\n+struct anonymous_union_container {\n+  union {\n+    struct astruct {\n+      int a;\n+    };\n+    int b;\n+  } u;\n+};\n+\n+anonymous_union_container anonymous_union_var;\n+\n+#ifdef __GNUC__\n+#define ALWAYS_INLINE __attribute__((always_inline))\n+#else\n+#define ALWAYS_INLINE\n+#endif\n+\n+static inline ALWAYS_INLINE int\n+inline_func_1(int i)\n+{ return i * 17; }\n+\n+int\n+main()\n+{\n+  F f = F_A;\n+  one::G g = one::G_A;\n+  check_enum(f);\n+  check_enum(g);\n+  check(&one::c1v);\n+  check(&two::c2v1);\n+  check(&two::c2v2);\n+  check(&two::c2v3);\n+  anonymous_union_var.u.b = inline_func_1(3) - 51;\n+  return anonymous_union_var.u.b;\n+}"}]}