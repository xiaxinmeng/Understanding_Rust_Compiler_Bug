{"sha": "ed4639a996cda959bf36c8fab94517a123978101", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ0NjM5YTk5NmNkYTk1OWJmMzZjOGZhYjk0NTE3YTEyMzk3ODEwMQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2012-05-04T18:54:25Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2012-05-04T18:54:25Z"}, "message": "re PR fortran/53175 (link failure for private module variables used in function specification)\n\n2012-05-04  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/53175\n        * resolve.c (resolve_variable): Set public_used\n        if a private module variable is used in a (public)\n        specification expression.\n        * trans-decl.c (gfc_finish_var_decl): Mark those\n        TREE_PUBLIC.\n\n2012-05-04  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/53175\n        gfortran.dg/public_private_module_5.f90: New.\n\nFrom-SVN: r187175", "tree": {"sha": "433a90213b8b4c8613e31097b36bed3bd909cdb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/433a90213b8b4c8613e31097b36bed3bd909cdb1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed4639a996cda959bf36c8fab94517a123978101", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed4639a996cda959bf36c8fab94517a123978101", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed4639a996cda959bf36c8fab94517a123978101", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed4639a996cda959bf36c8fab94517a123978101/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6ba84c3143a13266f40ea804ae2fb98717ccfc04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ba84c3143a13266f40ea804ae2fb98717ccfc04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ba84c3143a13266f40ea804ae2fb98717ccfc04"}], "stats": {"total": 69, "additions": 68, "deletions": 1}, "files": [{"sha": "bb4c22d49bc1d80eef0ecc10642d74c0a236ae7b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed4639a996cda959bf36c8fab94517a123978101/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed4639a996cda959bf36c8fab94517a123978101/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ed4639a996cda959bf36c8fab94517a123978101", "patch": "@@ -1,3 +1,12 @@\n+2012-05-04  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/53175\n+\t* resolve.c (resolve_variable): Set public_used\n+\tif a private module variable is used in a (public)\n+\tspecification expression.\n+\t* trans-decl.c (gfc_finish_var_decl): Mark those\n+\tTREE_PUBLIC.\n+\n 2012-05-04  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/53111"}, {"sha": "e15d6e12d7daedd698b36de44d7c500af371ffe1", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed4639a996cda959bf36c8fab94517a123978101/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed4639a996cda959bf36c8fab94517a123978101/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=ed4639a996cda959bf36c8fab94517a123978101", "patch": "@@ -5124,6 +5124,19 @@ resolve_variable (gfc_expr *e)\n   if (check_assumed_size_reference (sym, e))\n     return FAILURE;\n \n+  /* If a PRIVATE variable is used in the specification expression of the\n+     result variable, it might be accessed from outside the module and can\n+     thus not be TREE_PUBLIC() = 0.\n+     TODO: sym->attr.public_used only has to be set for the result variable's\n+     type-parameter expression and not for dummies or automatic variables.\n+     Additionally, it only has to be set if the function is either PUBLIC or\n+     used in a generic interface or TBP; unfortunately,\n+     proc_name->attr.public_used can get set at a later stage.  */\n+  if (specification_expr && sym->attr.access == ACCESS_PRIVATE\n+      && !sym->attr.function && !sym->attr.use_assoc\n+      && gfc_current_ns->proc_name && gfc_current_ns->proc_name->attr.function)\n+    sym->attr.public_used = 1;\n+\n   /* Deal with forward references to entries during resolve_code, to\n      satisfy, at least partially, 12.5.2.5.  */\n   if (gfc_current_ns->entries"}, {"sha": "9196f0a33098b52e33e536b64cbe7246f25b459c", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed4639a996cda959bf36c8fab94517a123978101/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed4639a996cda959bf36c8fab94517a123978101/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=ed4639a996cda959bf36c8fab94517a123978101", "patch": "@@ -565,7 +565,7 @@ gfc_finish_var_decl (tree decl, gfc_symbol * sym)\n       /* TODO: Don't set sym->module for result or dummy variables.  */\n       gcc_assert (current_function_decl == NULL_TREE || sym->result == sym);\n       /* This is the declaration of a module variable.  */\n-      if (sym->attr.access != ACCESS_PRIVATE)\n+      if (sym->attr.access != ACCESS_PRIVATE || sym->attr.public_used)\n \tTREE_PUBLIC (decl) = 1;\n       TREE_STATIC (decl) = 1;\n     }"}, {"sha": "cb5486c20aa4bd44ff46a3318049229f0367d35d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed4639a996cda959bf36c8fab94517a123978101/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed4639a996cda959bf36c8fab94517a123978101/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ed4639a996cda959bf36c8fab94517a123978101", "patch": "@@ -1,3 +1,8 @@\n+2012-05-04  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/53175\n+\tgfortran.dg/public_private_module_5.f90: New.\n+\n 2012-05-04  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/53111"}, {"sha": "9c9d15dbd760a3f9cb35d8b9cfa4f3c0e13f2910", "filename": "gcc/testsuite/gfortran.dg/public_private_module_5.f90", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed4639a996cda959bf36c8fab94517a123978101/gcc%2Ftestsuite%2Fgfortran.dg%2Fpublic_private_module_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed4639a996cda959bf36c8fab94517a123978101/gcc%2Ftestsuite%2Fgfortran.dg%2Fpublic_private_module_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpublic_private_module_5.f90?ref=ed4639a996cda959bf36c8fab94517a123978101", "patch": "@@ -0,0 +1,40 @@\n+! { dg-do compile }\n+! { dg-options \"-O3\" }\n+!\n+! PR fortran/53175\n+!\n+\n+MODULE ENERGY_FUNCTION\n+   IMPLICIT NONE\n+\n+   TYPE PARAM\n+      PRIVATE\n+         INTEGER :: WHICH_VECTOR\n+   END TYPE PARAM\n+\n+   INTEGER, PRIVATE :: DIM2\n+   INTEGER, PRIVATE :: DIM5\n+\n+   private :: specific\n+   interface gen\n+     module procedure  specific\n+   end interface gen\n+\n+   CONTAINS\n+\n+      FUNCTION ENERGY_FUNCTION_CURRENT_ARGS()\n+         INTEGER, DIMENSION(DIM2) :: ENERGY_FUNCTION_CURRENT_ARGS\n+      END FUNCTION ENERGY_FUNCTION_CURRENT_ARGS\n+\n+      FUNCTION ENERGY_FUNCTION_GET_PARAMS()\n+         TYPE(PARAM), DIMENSION(DIM2) :: ENERGY_FUNCTION_GET_PARAMS\n+      END FUNCTION ENERGY_FUNCTION_GET_PARAMS   \n+\n+      function specific()\n+        character(len=dim5) :: specific\n+      end function specific\n+END MODULE ENERGY_FUNCTION\n+\n+! { dg-final { scan-assembler \"__energy_function_MOD_dim2\" } }\n+! { dg-final { scan-assembler \"__energy_function_MOD_dim5\" } }\n+"}]}