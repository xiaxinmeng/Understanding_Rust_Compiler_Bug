{"sha": "27f418b8ec6d0a95c10844e468d2d579ea16d826", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdmNDE4YjhlYzZkMGE5NWMxMDg0NGU0NjhkMmQ1NzllYTE2ZDgyNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-12-10T21:04:57Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-12-10T21:04:57Z"}, "message": "re PR ipa/92883 (ICE in compare_values_warnv)\n\n\tPR ipa/92883\n\t* ipa-cp.c (propagate_vr_across_jump_function): Pass jvr rather\n\tthan *jfunc->m_vr to intersect.  Formatting fix.\n\n\t* gcc.dg/ipa/pr92883.c: New test.\n\nFrom-SVN: r279194", "tree": {"sha": "de562f81b0d027b6f91efc28e1da1363385a1798", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de562f81b0d027b6f91efc28e1da1363385a1798"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27f418b8ec6d0a95c10844e468d2d579ea16d826", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27f418b8ec6d0a95c10844e468d2d579ea16d826", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27f418b8ec6d0a95c10844e468d2d579ea16d826", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27f418b8ec6d0a95c10844e468d2d579ea16d826/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6b24e342cb30abb5c13e3092929837545a5bd49e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b24e342cb30abb5c13e3092929837545a5bd49e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b24e342cb30abb5c13e3092929837545a5bd49e"}], "stats": {"total": 33, "additions": 26, "deletions": 7}, "files": [{"sha": "71609c9121f07eed74139e3f63aaf1e1d3e54f6a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27f418b8ec6d0a95c10844e468d2d579ea16d826/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27f418b8ec6d0a95c10844e468d2d579ea16d826/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=27f418b8ec6d0a95c10844e468d2d579ea16d826", "patch": "@@ -1,5 +1,9 @@\n 2019-12-10  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR ipa/92883\n+\t* ipa-cp.c (propagate_vr_across_jump_function): Pass jvr rather\n+\tthan *jfunc->m_vr to intersect.  Formatting fix.\n+\n \tPR middle-end/92825\n \t* cfgexpand.c (add_stack_protection_conflicts): Change return type\n \tfrom void to bool, return true if at least one stack_vars[i].decl"}, {"sha": "1a80ccbde2ddc6ccc24d1191a11713908b426bbe", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27f418b8ec6d0a95c10844e468d2d579ea16d826/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27f418b8ec6d0a95c10844e468d2d579ea16d826/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=27f418b8ec6d0a95c10844e468d2d579ea16d826", "patch": "@@ -2369,12 +2369,10 @@ propagate_vr_across_jump_function (cgraph_edge *cs, ipa_jump_func *jfunc,\n \n       value_range vr;\n       if (TREE_CODE_CLASS (operation) == tcc_unary)\n-\t{\n-\t  ipa_vr_operation_and_type_effects (&vr,\n-\t\t\t\t\t     &src_lats->m_value_range.m_vr,\n-\t\t\t\t\t     operation, param_type,\n-\t\t\t\t\t     operand_type);\n-\t}\n+\tipa_vr_operation_and_type_effects (&vr,\n+\t\t\t\t\t   &src_lats->m_value_range.m_vr,\n+\t\t\t\t\t   operation, param_type,\n+\t\t\t\t\t   operand_type);\n       /* A crude way to prevent unbounded number of value range updates\n \t in SCC components.  We should allow limited number of updates within\n \t SCC, too.  */\n@@ -2400,7 +2398,7 @@ propagate_vr_across_jump_function (cgraph_edge *cs, ipa_jump_func *jfunc,\n \t\t\t\t\t\t     NOP_EXPR,\n \t\t\t\t\t\t     param_type,\n \t\t\t\t\t\t     jfunc->m_vr->type ()))\n-\t\tvr.intersect (*jfunc->m_vr);\n+\t\tvr.intersect (jvr);\n \t    }\n \t  return dest_lat->meet_with (&vr);\n \t}"}, {"sha": "4f4a2a55e9b217f44f622841c430fa21468679e3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27f418b8ec6d0a95c10844e468d2d579ea16d826/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27f418b8ec6d0a95c10844e468d2d579ea16d826/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=27f418b8ec6d0a95c10844e468d2d579ea16d826", "patch": "@@ -1,5 +1,8 @@\n 2019-12-10  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR ipa/92883\n+\t* gcc.dg/ipa/pr92883.c: New test.\n+\n \tPR middle-end/92825\n \t* gcc.target/i386/pr92825.c: New test.\n "}, {"sha": "a7c5dc6de876c546e1c2d4effbb66e501caf71a7", "filename": "gcc/testsuite/gcc.dg/ipa/pr92883.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27f418b8ec6d0a95c10844e468d2d579ea16d826/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr92883.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27f418b8ec6d0a95c10844e468d2d579ea16d826/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr92883.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr92883.c?ref=27f418b8ec6d0a95c10844e468d2d579ea16d826", "patch": "@@ -0,0 +1,14 @@\n+/* PR ipa/92883 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int a, b, c, d;\n+unsigned e;\n+void baz (void *, int);\n+void grault (int, unsigned long);\n+int foo (unsigned g) { return a / g; }\n+void bar (void *g) { if (b) baz (g, 5); }\n+static void quux (int, unsigned long);\n+static void qux (unsigned long g) { if (g) { d = foo (-1); quux (e, (d & 2) + g); } }\n+static void quux (int g, unsigned long m) { (void) g; grault (c, m); bar (\"\"); }\n+void corge () { qux (e); }"}]}