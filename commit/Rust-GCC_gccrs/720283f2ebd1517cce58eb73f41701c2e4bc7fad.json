{"sha": "720283f2ebd1517cce58eb73f41701c2e4bc7fad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzIwMjgzZjJlYmQxNTE3Y2NlNThlYjczZjQxNzAxYzJlNGJjN2ZhZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-11-12T19:17:33Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-11-12T19:17:33Z"}, "message": "(grokdeclarator): Generate a warning if -Wimplicit, unless a warning\nwas already generated by -Wreturn-type.\n\nFrom-SVN: r13135", "tree": {"sha": "5554c1b2cad058621b49d3c369b0df95f770006c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5554c1b2cad058621b49d3c369b0df95f770006c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/720283f2ebd1517cce58eb73f41701c2e4bc7fad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/720283f2ebd1517cce58eb73f41701c2e4bc7fad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/720283f2ebd1517cce58eb73f41701c2e4bc7fad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/720283f2ebd1517cce58eb73f41701c2e4bc7fad/comments", "author": null, "committer": null, "parents": [{"sha": "2f23fcc9f1b46317c0bb0ad24e60a987f01b3cd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f23fcc9f1b46317c0bb0ad24e60a987f01b3cd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f23fcc9f1b46317c0bb0ad24e60a987f01b3cd5"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "accc0257e96ad719b69eba0ac41567d46f787387", "filename": "gcc/c-decl.c", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/720283f2ebd1517cce58eb73f41701c2e4bc7fad/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/720283f2ebd1517cce58eb73f41701c2e4bc7fad/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=720283f2ebd1517cce58eb73f41701c2e4bc7fad", "patch": "@@ -4277,10 +4277,20 @@ grokdeclarator (declarator, declspecs, decl_context, initialized)\n \n   if (type == 0)\n     {\n-      if (funcdef_flag && warn_return_type\n-\t  && ! (specbits & ((1 << (int) RID_LONG) | (1 << (int) RID_SHORT)\n-\t\t\t    | (1 << (int) RID_SIGNED) | (1 << (int) RID_UNSIGNED))))\n-\twarn_about_return_type = 1;\n+      if (! (specbits & ((1 << (int) RID_LONG) | (1 << (int) RID_SHORT)\n+\t\t\t | (1 << (int) RID_SIGNED)\n+\t\t\t | (1 << (int) RID_UNSIGNED))))\n+\t{\n+\t  /* C9x will probably require a diagnostic here.\n+\t     For now, issue a warning if -Wreturn-type and this is a function,\n+\t     or if -Wimplicit; prefer the former warning since it is more\n+\t     explicit.  */\n+\t  if ((warn_implicit || warn_return_type) && funcdef_flag)\n+\t    warn_about_return_type = 1;\n+\t  else if (warn_implicit)\n+\t    warning (\"type defaults to `int' in declaration of `%s'\", name);\n+\t}\n+\n       defaulted_int = 1;\n       type = integer_type_node;\n     }"}]}