{"sha": "73999267a3581a69fc112fb7c420231ed4213357", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM5OTkyNjdhMzU4MWE2OWZjMTEyZmI3YzQyMDIzMWVkNDIxMzM1Nw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T10:24:57Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T10:24:57Z"}, "message": "[multiple changes]\n\n2014-08-01  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch10.adb: Minor reformatting.\n\n2014-08-01  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb (Same_Generic_Actual): Make function symmetric,\n\tbecause either type may be a subtype of the other.\n\n2014-08-01  Vincent Celier  <celier@adacore.com>\n\n\t* makeusg.adb: Add documentation for debug switch -dn.\n\n2014-08-01  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_dim.adb (Process_Minus, Process_Divide): Label dimension\n\texpression with standard operator and type, for pretty-printing\n\tuse, when in ASIS_Mode. When generating code dimensional analysis\n\tis not involved and dimension expressions are handled statically,\n\tand other operators are resolved in the usual way.\n\n2014-08-01  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb (Build_Derived_Record_Type): Remove setting of\n\tParent_Subtype in ASIS mode, leads to several failures.\n\t* sem_ch4.adb (Analyze_Selected_Component): In an instance,\n\tif the prefix is a type extension, check whether component is\n\tdeclared in the parent type, possibly in a parent unit. Needed\n\tin ASIS mode when Parent_Subtype is not set.\n\nFrom-SVN: r213449", "tree": {"sha": "13611c201ce517772dfcbde8a63af2bf79a07061", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13611c201ce517772dfcbde8a63af2bf79a07061"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73999267a3581a69fc112fb7c420231ed4213357", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73999267a3581a69fc112fb7c420231ed4213357", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73999267a3581a69fc112fb7c420231ed4213357", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73999267a3581a69fc112fb7c420231ed4213357/comments", "author": null, "committer": null, "parents": [{"sha": "885e570af17aed5736e4fd92347ca05e3d552926", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/885e570af17aed5736e4fd92347ca05e3d552926", "html_url": "https://github.com/Rust-GCC/gccrs/commit/885e570af17aed5736e4fd92347ca05e3d552926"}], "stats": {"total": 120, "additions": 94, "deletions": 26}, "files": [{"sha": "54b32b47e361a88f2d4a41f00605dce68adf9ebe", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73999267a3581a69fc112fb7c420231ed4213357/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73999267a3581a69fc112fb7c420231ed4213357/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=73999267a3581a69fc112fb7c420231ed4213357", "patch": "@@ -1,3 +1,33 @@\n+2014-08-01  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch10.adb: Minor reformatting.\n+\n+2014-08-01  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Same_Generic_Actual): Make function symmetric,\n+\tbecause either type may be a subtype of the other.\n+\n+2014-08-01  Vincent Celier  <celier@adacore.com>\n+\n+\t* makeusg.adb: Add documentation for debug switch -dn.\n+\n+2014-08-01  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_dim.adb (Process_Minus, Process_Divide): Label dimension\n+\texpression with standard operator and type, for pretty-printing\n+\tuse, when in ASIS_Mode. When generating code dimensional analysis\n+\tis not involved and dimension expressions are handled statically,\n+\tand other operators are resolved in the usual way.\n+\n+2014-08-01  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Build_Derived_Record_Type): Remove setting of\n+\tParent_Subtype in ASIS mode, leads to several failures.\n+\t* sem_ch4.adb (Analyze_Selected_Component): In an instance,\n+\tif the prefix is a type extension, check whether component is\n+\tdeclared in the parent type, possibly in a parent unit. Needed\n+\tin ASIS mode when Parent_Subtype is not set.\n+\n 2014-08-01  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_prag.adb: Minor reformatting."}, {"sha": "3c708bf0eac329145d27e19805973ca04d738199", "filename": "gcc/ada/makeusg.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73999267a3581a69fc112fb7c420231ed4213357/gcc%2Fada%2Fmakeusg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73999267a3581a69fc112fb7c420231ed4213357/gcc%2Fada%2Fmakeusg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeusg.adb?ref=73999267a3581a69fc112fb7c420231ed4213357", "patch": "@@ -257,6 +257,12 @@ begin\n    Write_Eol;\n    Write_Eol;\n \n+   --  Line for -dn\n+\n+   Write_Str (\"  -dn      Do not delete temporary files\");\n+   Write_Eol;\n+   Write_Eol;\n+\n    Write_Str (\"  --create-map-file   Create map file mainprog.map\");\n    Write_Eol;\n "}, {"sha": "a3c6784be2c06d7a6524e8b5a0a59b5a030cb753", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73999267a3581a69fc112fb7c420231ed4213357/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73999267a3581a69fc112fb7c420231ed4213357/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=73999267a3581a69fc112fb7c420231ed4213357", "patch": "@@ -507,14 +507,17 @@ package body Sem_Ch10 is\n \n             --  Avoid checking implicitly generated with clauses, limited with\n             --  clauses or withs that have pragma Elaborate or Elaborate_All.\n-            --  With_clauses introduced for renamings of parent clauses are not\n-            --  marked implicit because they need to be properly installed, but\n-            --  they do not come from source and do not require warnings.\n \n             if Nkind (Clause) = N_With_Clause\n               and then not Implicit_With (Clause)\n               and then not Limited_Present (Clause)\n               and then not Elaborate_Present (Clause)\n+\n+              --  With_clauses introduced for renamings of parent clauses\n+              --  are not marked implicit because they need to be properly\n+              --  installed, but they do not come from source and do not\n+              --  require warnings.\n+\n               and then Comes_From_Source (Clause)\n             then\n                --  Package body-to-spec check"}, {"sha": "df59cb7c63cbe90e0140ce7dff97ca1ea65fc4f1", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73999267a3581a69fc112fb7c420231ed4213357/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73999267a3581a69fc112fb7c420231ed4213357/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=73999267a3581a69fc112fb7c420231ed4213357", "patch": "@@ -8418,17 +8418,11 @@ package body Sem_Ch3 is\n       --  STEP 5c: Process the record extension for non private tagged types\n \n       elsif not Private_Extension then\n+         Expand_Record_Extension (Derived_Type, Type_Def);\n \n-         --  Add the _parent field in the derived type. In ASIS mode there is\n-         --  not enough semantic information for full expansion, but set the\n-         --  parent subtype to allow resolution of selected components in\n-         --  instance bodies.\n-\n-         if ASIS_Mode then\n-            Set_Parent_Subtype (Derived_Type, Parent_Type);\n-         else\n-            Expand_Record_Extension (Derived_Type, Type_Def);\n-         end if;\n+         --  Note : previously in ASIS mode we set the Parent_Subtype of the\n+         --  derived type to propagate some semantic information. This led\n+         --  to other ASIS failures and has been removed.\n \n          --  Ada 2005 (AI-251): Addition of the Tag corresponding to all the\n          --  implemented interfaces if we are in expansion mode"}, {"sha": "64f0a7451f66478538e60c233fe0588750cf72ca", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73999267a3581a69fc112fb7c420231ed4213357/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73999267a3581a69fc112fb7c420231ed4213357/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=73999267a3581a69fc112fb7c420231ed4213357", "patch": "@@ -4646,6 +4646,7 @@ package body Sem_Ch4 is\n                end loop;\n \n                if Present (Par) and then Is_Generic_Actual_Type (Par) then\n+\n                   --  Now look for component in ancestor types\n \n                   Par := Generic_Parent_Type (Declaration_Node (Par));\n@@ -4655,6 +4656,14 @@ package body Sem_Ch4 is\n                        or else Par = Etype (Par);\n                      Par := Etype (Par);\n                   end loop;\n+\n+               --  In ASIS mode the generic parent type may be absent. Examine\n+               --  the parent type directly for a component that may have been\n+               --  visible in a parent generic unit.\n+\n+               elsif Is_Derived_Type (Prefix_Type) then\n+                  Par := Etype (Prefix_Type);\n+                  Find_Component_In_Instance (Par);\n                end if;\n             end;\n \n@@ -4664,6 +4673,7 @@ package body Sem_Ch4 is\n             if No (Entity (Sel)) then\n                raise Program_Error;\n             end if;\n+\n             return;\n \n          --  Component not found, specialize error message when appropriate"}, {"sha": "1fb0e7e1f58fc95ee5fab9d069dd03445c82118d", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73999267a3581a69fc112fb7c420231ed4213357/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73999267a3581a69fc112fb7c420231ed4213357/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=73999267a3581a69fc112fb7c420231ed4213357", "patch": "@@ -7274,21 +7274,38 @@ package body Sem_Ch6 is\n          --  Check that the types of corresponding formals have the same\n          --  generic actual if any. We have to account for subtypes of a\n          --  generic formal, declared between a spec and a body, which may\n-         --  appear distinct in an instance but matched in the generic.\n+         --  appear distinct in an instance but matched in the generic, and\n+         --  the subtype may be used either in the spec or the body of the\n+         --  subprogram being checked.\n \n          -------------------------\n          -- Same_Generic_Actual --\n          -------------------------\n \n          function Same_Generic_Actual (T1, T2 : Entity_Id) return Boolean is\n+\n+            function Is_Declared_Subtype (S1, S2 : Entity_Id) return Boolean;\n+            --  Predicate to check whether S1 is a subtype of S2 in the source\n+            --  of the instance.\n+\n+            -------------------------\n+            -- Is_Declared_Subtype --\n+            -------------------------\n+\n+            function Is_Declared_Subtype (S1, S2 : Entity_Id) return Boolean is\n+            begin\n+               return Comes_From_Source (Parent (S1))\n+                 and then Nkind (Parent (S1)) = N_Subtype_Declaration\n+                 and then Is_Entity_Name (Subtype_Indication (Parent (S1)))\n+                 and then Entity (Subtype_Indication (Parent (S1))) = S2;\n+            end Is_Declared_Subtype;\n+\n+         --  Start of processing for Same_Generic_Actual\n+\n          begin\n             return Is_Generic_Actual_Type (T1) = Is_Generic_Actual_Type (T2)\n-              or else\n-                (Present (Parent (T1))\n-                  and then Comes_From_Source (Parent (T1))\n-                  and then Nkind (Parent (T1)) = N_Subtype_Declaration\n-                  and then Is_Entity_Name (Subtype_Indication (Parent (T1)))\n-                  and then Entity (Subtype_Indication (Parent (T1))) = T2);\n+              or else Is_Declared_Subtype (T1, T2)\n+              or else Is_Declared_Subtype (T2, T1);\n          end Same_Generic_Actual;\n \n       --  Start of processing for Different_Generic_Profile"}, {"sha": "37d2f7a9123c31a3708eaec4272dc7b7512a5662", "filename": "gcc/ada/sem_dim.adb", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73999267a3581a69fc112fb7c420231ed4213357/gcc%2Fada%2Fsem_dim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73999267a3581a69fc112fb7c420231ed4213357/gcc%2Fada%2Fsem_dim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dim.adb?ref=73999267a3581a69fc112fb7c420231ed4213357", "patch": "@@ -2262,10 +2262,14 @@ package body Sem_Dim is\n \n          --  Provide minimal semantic information on dimension expressions,\n          --  even though they have no run-time existence. This is for use by\n-         --  ASIS tools, in particular pretty-printing.\n+         --  ASIS tools, in particular pretty-printing. If generating code\n+         --  standard operator resolution will take place.\n+\n+         if ASIS_Mode then\n+            Set_Entity (N, Standard_Op_Minus);\n+            Set_Etype  (N, Standard_Integer);\n+         end if;\n \n-         Set_Entity (N, Standard_Op_Minus);\n-         Set_Etype  (N, Standard_Integer);\n          return Result;\n       end Process_Minus;\n \n@@ -2294,10 +2298,14 @@ package body Sem_Dim is\n \n          --  Provide minimal semantic information on dimension expressions,\n          --  even though they have no run-time existence. This is for use by\n-         --  ASIS tools, in particular pretty-printing.\n+         --  ASIS tools, in particular pretty-printing. If generating code\n+         --  standard operator resolution will take place.\n+\n+         if ASIS_Mode then\n+            Set_Entity (N, Standard_Op_Divide);\n+            Set_Etype  (N, Standard_Integer);\n+         end if;\n \n-         Set_Entity (N, Standard_Op_Divide);\n-         Set_Etype  (N, Standard_Integer);\n          return Result;\n       end Process_Divide;\n "}]}