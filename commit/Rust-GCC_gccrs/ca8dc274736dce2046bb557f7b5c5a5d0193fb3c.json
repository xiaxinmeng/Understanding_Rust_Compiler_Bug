{"sha": "ca8dc274736dce2046bb557f7b5c5a5d0193fb3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2E4ZGMyNzQ3MzZkY2UyMDQ2YmI1NTdmN2I1YzVhNWQwMTkzZmIzYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-11-08T17:10:09Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-11-08T17:10:09Z"}, "message": "re PR c++/50835 (Lvalue-ness of conditional operator results is incorrect in a function template)\n\n\tPR c++/50835\n\t* typeck.c (build_x_conditional_expr): Preserve lvalue/xvalueness.\n\t* tree.c (lvalue_kind) [NON_DEPENDENT_EXPR]: Return clk_ordinary\n\tin C++98.\n\nFrom-SVN: r181174", "tree": {"sha": "3e07a425ce3f8dbc0b60c88f2ef81e9501ce6e22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e07a425ce3f8dbc0b60c88f2ef81e9501ce6e22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca8dc274736dce2046bb557f7b5c5a5d0193fb3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca8dc274736dce2046bb557f7b5c5a5d0193fb3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca8dc274736dce2046bb557f7b5c5a5d0193fb3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca8dc274736dce2046bb557f7b5c5a5d0193fb3c/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e55cef40ed1f6f5b2a9933e0256ea23e66b1806c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e55cef40ed1f6f5b2a9933e0256ea23e66b1806c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e55cef40ed1f6f5b2a9933e0256ea23e66b1806c"}], "stats": {"total": 53, "additions": 47, "deletions": 6}, "files": [{"sha": "58241a8088fcfed86d738b7313987424c1fb1fb6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8dc274736dce2046bb557f7b5c5a5d0193fb3c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8dc274736dce2046bb557f7b5c5a5d0193fb3c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ca8dc274736dce2046bb557f7b5c5a5d0193fb3c", "patch": "@@ -1,3 +1,10 @@\n+2011-11-08  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/50835\n+\t* typeck.c (build_x_conditional_expr): Preserve lvalue/xvalueness.\n+\t* tree.c (lvalue_kind) [NON_DEPENDENT_EXPR]: Return clk_ordinary\n+\tin C++98.\n+\n 2011-11-08  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/51010"}, {"sha": "841029f3385880786dde11b93b3357b22e47ac0a", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8dc274736dce2046bb557f7b5c5a5d0193fb3c/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8dc274736dce2046bb557f7b5c5a5d0193fb3c/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=ca8dc274736dce2046bb557f7b5c5a5d0193fb3c", "patch": "@@ -203,10 +203,13 @@ lvalue_kind (const_tree ref)\n       return lvalue_kind (BASELINK_FUNCTIONS (CONST_CAST_TREE (ref)));\n \n     case NON_DEPENDENT_EXPR:\n-      /* We used to just return clk_ordinary for NON_DEPENDENT_EXPR because\n-\t it was safe enough for C++98, but in C++0x lvalues don't bind to\n-\t rvalue references, so we get bogus errors (c++/44870).  */\n-      return lvalue_kind (TREE_OPERAND (ref, 0));\n+      /* We just return clk_ordinary for NON_DEPENDENT_EXPR in C++98, but\n+\t in C++11 lvalues don't bind to rvalue references, so we need to\n+\t work harder to avoid bogus errors (c++/44870).  */\n+      if (cxx_dialect < cxx0x)\n+\treturn clk_ordinary;\n+      else\n+\treturn lvalue_kind (TREE_OPERAND (ref, 0));\n \n     default:\n       if (!TREE_TYPE (ref))"}, {"sha": "aed28918db8ec6dab5a548ed47276fd0fef55ccb", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8dc274736dce2046bb557f7b5c5a5d0193fb3c/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8dc274736dce2046bb557f7b5c5a5d0193fb3c/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=ca8dc274736dce2046bb557f7b5c5a5d0193fb3c", "patch": "@@ -5498,8 +5498,16 @@ build_x_conditional_expr (tree ifexp, tree op1, tree op2,\n \n   expr = build_conditional_expr (ifexp, op1, op2, complain);\n   if (processing_template_decl && expr != error_mark_node)\n-    return build_min_non_dep (COND_EXPR, expr,\n-\t\t\t      orig_ifexp, orig_op1, orig_op2);\n+    {\n+      tree min = build_min_non_dep (COND_EXPR, expr,\n+\t\t\t\t    orig_ifexp, orig_op1, orig_op2);\n+      /* Remember that the result is an lvalue or xvalue.  */\n+      if (lvalue_or_rvalue_with_address_p (expr)\n+\t  && !lvalue_or_rvalue_with_address_p (min))\n+\tTREE_TYPE (min) = cp_build_reference_type (TREE_TYPE (min),\n+\t\t\t\t\t\t   !real_lvalue_p (expr));\n+      expr = convert_from_reference (min);\n+    }\n   return expr;\n }\n \f"}, {"sha": "b0cbbb6eb2e7fc4836ebe24a7f94b306bc7dd9ce", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8dc274736dce2046bb557f7b5c5a5d0193fb3c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8dc274736dce2046bb557f7b5c5a5d0193fb3c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ca8dc274736dce2046bb557f7b5c5a5d0193fb3c", "patch": "@@ -1,3 +1,8 @@\n+2011-10-23  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/50835\n+\t* g++.dg/template/lvalue2.C: New.\n+\n 2011-11-08  Michael Matz  <matz@suse.de>\n \n \t* gcc.dg/tree-ssa/20031015-1.c: Adjust."}, {"sha": "e9074aa6c92a68b749cfd3815d0083453c9e0274", "filename": "gcc/testsuite/g++.dg/template/lvalue2.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8dc274736dce2046bb557f7b5c5a5d0193fb3c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flvalue2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8dc274736dce2046bb557f7b5c5a5d0193fb3c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flvalue2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flvalue2.C?ref=ca8dc274736dce2046bb557f7b5c5a5d0193fb3c", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/50835\n+\n+struct A {};\n+\n+struct B\n+{\n+  explicit B(A &);\n+  operator A&() const;\n+};\n+\n+void should_be_lvalue(A&);\n+\n+template <typename>\n+void f()\n+{\n+    A v;\n+    should_be_lvalue(true ? B(v) : v);\n+}"}]}