{"sha": "e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTBjMjNhYzcxY2MwMTIzZDA1M2ZiNWIyM2QzM2I1ZmJjZjFmODk0Nw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-03-02T09:28:56Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-03-02T09:28:56Z"}, "message": "[multiple changes]\n\n2015-03-02  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch3.adb, exp_attr.adb, checks.adb, exp_aggr.adb: Minor\n\treformatting.\n\n2015-03-02  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch8.adb: extend use of Available_Subtype.\n\n2015-03-02  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_prag.adb (Duplication_Error): Remove the special handling\n\tof 'Class or _Class in the context of pre/postconditions.\n\t(Process_Class_Wide_Condition): Remove the special handling of\n\t'Class or _Class in the context of pre/postconditions.\n\t* sem_util.adb (Original_Aspect_Pragma_Name): Names Pre_Class\n\tand Post_Class no longer need to be converted to _Pre and _Post.\n\t* sem_util.ads (Original_Aspect_Pragma_Name): Update the comment\n\ton usage.\n\n2015-03-02  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch6.adb (Process_Preconditions): Modify the\n\tmechanism that find the first source declaration to correct exit\n\tthe loop once it has been found.\n\n2015-03-02  Gary Dismukes  <dismukes@adacore.com>\n\n\t* a-strsea.adb: Minor typo fix.\n\n2015-03-02  Bob Duff  <duff@adacore.com>\n\n\t* einfo.ads: Minor comment fixes.\n\nFrom-SVN: r221103", "tree": {"sha": "786f95a5c26b0859c8ac363ddf0bae78825fe7db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/786f95a5c26b0859c8ac363ddf0bae78825fe7db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947/comments", "author": null, "committer": null, "parents": [{"sha": "e99991618f2f64eda18a257b5d653bd0f5d91028", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e99991618f2f64eda18a257b5d653bd0f5d91028", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e99991618f2f64eda18a257b5d653bd0f5d91028"}], "stats": {"total": 135, "additions": 64, "deletions": 71}, "files": [{"sha": "ca3de2d8f43256ceaebade800c22a5276be33f56", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947", "patch": "@@ -1,3 +1,37 @@\n+2015-03-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch3.adb, exp_attr.adb, checks.adb, exp_aggr.adb: Minor\n+\treformatting.\n+\n+2015-03-02  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch8.adb: extend use of Available_Subtype.\n+\n+2015-03-02  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_prag.adb (Duplication_Error): Remove the special handling\n+\tof 'Class or _Class in the context of pre/postconditions.\n+\t(Process_Class_Wide_Condition): Remove the special handling of\n+\t'Class or _Class in the context of pre/postconditions.\n+\t* sem_util.adb (Original_Aspect_Pragma_Name): Names Pre_Class\n+\tand Post_Class no longer need to be converted to _Pre and _Post.\n+\t* sem_util.ads (Original_Aspect_Pragma_Name): Update the comment\n+\ton usage.\n+\n+2015-03-02  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch6.adb (Process_Preconditions): Modify the\n+\tmechanism that find the first source declaration to correct exit\n+\tthe loop once it has been found.\n+\n+2015-03-02  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* a-strsea.adb: Minor typo fix.\n+\n+2015-03-02  Bob Duff  <duff@adacore.com>\n+\n+\t* einfo.ads: Minor comment fixes.\n+\n 2015-03-02  Gary Dismukes  <dismukes@adacore.com>\n \n \t* einfo.adb, checks.adb: Minor reformatting and typo fixes."}, {"sha": "42d57dfc28352b4144970af6edefd240c2fc0ab7", "filename": "gcc/ada/a-strsea.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947/gcc%2Fada%2Fa-strsea.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947/gcc%2Fada%2Fa-strsea.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strsea.adb?ref=e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -263,7 +263,7 @@ package body Ada.Strings.Search is\n \n       --  Here if no token found\n \n-      --  RM 2005 A.4.3 (68/1)) specifies that an exception must be raised if\n+      --  RM 2005 A.4.3 (68/1) specifies that an exception must be raised if\n       --  Source'First is not positive and is assigned to First. Formulation\n       --  is slightly different in RM 2012, but the intent seems similar, so\n       --  we check explicitly for that condition."}, {"sha": "e869605c2de5a9eea2598ff56afaedeeec377eb9", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947", "patch": "@@ -2576,7 +2576,7 @@ package body Checks is\n \n         or else Is_Formal_Subprogram (Subp)\n \n-        --  Do not process imported subprograms since pre- and postconditions\n+        --  Do not process imported subprograms since pre and postconditions\n         --  are never verified on routines coming from a different language.\n \n         or else Is_Imported (Subp)"}, {"sha": "43ae961cc9684e095f10f6bf93064daba6b66c75", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947", "patch": "@@ -2882,7 +2882,7 @@ package Einfo is\n --    Is_Public (Flag10)\n --       Defined in all entities. Set to indicate that an entity defined in\n --       one compilation unit can be referenced from other compilation units.\n---       If this reference causes a reference in the generated variable, for\n+--       If this reference causes a reference in the generated code, for\n --       example in the case of a variable name, then the backend will generate\n --       an appropriate external name for use by the linker.\n \n@@ -3875,8 +3875,8 @@ package Einfo is\n --       Defined in all entities. Points to the entity for the scope (block,\n --       loop, subprogram, package etc.) in which the entity is declared.\n --       Since this field is in the base part of the entity node, the access\n---       routines for this field are in Sinfo. Note that for a child package,\n---       the Scope will be the parent package, and for a non-child package,\n+--       routines for this field are in Sinfo. Note that for a child unit,\n+--       the Scope will be the parent package, and for a root library unit,\n --       the Scope will be Standard.\n \n --    Scope_Depth (synthesized)"}, {"sha": "b53b28febf563447d9d3d8c45f829544d851afe3", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947", "patch": "@@ -1542,12 +1542,12 @@ package body Exp_Aggr is\n             if Is_Scalar_Type (Ctype) then\n                if Present (Default_Aspect_Component_Value (Typ)) then\n                   return Default_Aspect_Component_Value (Typ);\n-\n                elsif Present (Default_Aspect_Value (Ctype)) then\n                   return Default_Aspect_Value (Ctype);\n                else\n                   return Empty;\n                end if;\n+\n             else\n                return Empty;\n             end if;"}, {"sha": "a4f6f5a8082e1e11529714251f0d74d51e9dd0a8", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947", "patch": "@@ -3654,16 +3654,17 @@ package body Exp_Attr is\n \n                   Expr :=\n                     Make_Function_Call (Loc,\n-                      Name =>\n+                      Name                   =>\n                         New_Occurrence_Of (RTE (RE_Descendant_Tag), Loc),\n                       Parameter_Associations => New_List (\n                         Make_Attribute_Reference (Loc,\n-                          Prefix => New_Occurrence_Of (Standard_String, Loc),\n+                          Prefix         =>\n+                            New_Occurrence_Of (Standard_String, Loc),\n                           Attribute_Name => Name_Input,\n-                          Expressions => New_List (\n+                          Expressions    => New_List (\n                             Relocate_Node (Duplicate_Subexpr (Strm)))),\n                         Make_Attribute_Reference (Loc,\n-                          Prefix => New_Occurrence_Of (P_Type, Loc),\n+                          Prefix         => New_Occurrence_Of (P_Type, Loc),\n                           Attribute_Name => Name_Tag)));\n                   Set_Etype (Expr, RTE (RE_Tag));\n "}, {"sha": "1311615c8a7fa1a8f9ed5b86ace26c7e9e57eb10", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947", "patch": "@@ -7718,9 +7718,10 @@ package body Exp_Ch6 is\n             Decl := First (Decls);\n \n             while Present (Decl) loop\n-               if not Comes_From_Source (Decl) then\n-                  Insert_Node := Decl;\n+               if Comes_From_Source (Decl) then\n                   exit;\n+               else\n+                  Insert_Node := Decl;\n                end if;\n \n                Next (Decl);"}, {"sha": "537be5ea6f305394407b647ac323875ec28aae87", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947", "patch": "@@ -16466,7 +16466,7 @@ package body Sem_Ch3 is\n             Set_Has_Private_Declaration (Prev);\n             Set_Has_Private_Declaration (Id);\n \n-            --  AI12-0133: indicate whether we have a partial view with\n+            --  AI12-0133: Indicate whether we have a partial view with\n             --  unknown discriminants, in which case initialization of objects\n             --  of the type do not receive an invariant check.\n "}, {"sha": "3e7d5ab70a70fc7f243e49d1a2203cab2a93affd", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947", "patch": "@@ -6593,8 +6593,7 @@ package body Sem_Ch8 is\n                  and then (not Is_Entity_Name (P)\n                             or else Chars (Entity (P)) /= Name_uInit)\n                then\n-                  if Is_Entity_Name (P)\n-                    and then Ekind (Etype (P)) = E_Record_Subtype\n+                  if Ekind (Etype (P)) = E_Record_Subtype\n                     and then Nkind (Parent (Etype (P))) = N_Subtype_Declaration\n                     and then Is_Array_Type (Etype (Selector))\n                     and then not Is_Packed (Etype (Selector))"}, {"sha": "04d7317345367066d4676b3797485714f6a0991b", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 11, "deletions": 48, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947", "patch": "@@ -21445,32 +21445,23 @@ package body Sem_Prag is\n \n          procedure Replace_Types is new Traverse_Proc (Replace_Type);\n \n-         --  Local variables\n-\n-         Prag_Nam : constant Name_Id := Original_Aspect_Pragma_Name (N);\n-\n       --  Start of processing for Process_Class_Wide_Condition\n \n       begin\n          --  The subprogram subject to Pre'Class/Post'Class does not have a\n          --  dispatching type, therefore the aspect/pragma is illegal.\n \n          if No (Disp_Typ) then\n+            Error_Msg_Name_1 := Original_Aspect_Pragma_Name (N);\n+\n             if From_Aspect_Specification (N) then\n-               Error_Msg_Name_1 := Prag_Nam;\n                Error_Msg_N\n                  (\"aspect % can only be specified for a primitive operation \"\n                   & \"of a tagged type\", Corresponding_Aspect (N));\n \n             --  The pragma is a source construct\n \n             else\n-               if Prag_Nam = Name_Precondition then\n-                  Error_Msg_Name_1 := Name_Pre_Class;\n-               else\n-                  Error_Msg_Name_1 := Name_Post_Class;\n-               end if;\n-\n                Error_Msg_N\n                  (\"pragma % can only be specified for a primitive operation \"\n                   & \"of a tagged type\", N);\n@@ -24973,11 +24964,11 @@ package body Sem_Prag is\n \n    procedure Duplication_Error (Prag : Node_Id; Prev : Node_Id) is\n       Prag_From_Asp : constant Boolean := From_Aspect_Specification (Prag);\n-      Prag_Nam      : constant Name_Id := Original_Aspect_Pragma_Name (Prag);\n       Prev_From_Asp : constant Boolean := From_Aspect_Specification (Prev);\n \n    begin\n-      Error_Msg_Sloc := Sloc (Prev);\n+      Error_Msg_Sloc   := Sloc (Prev);\n+      Error_Msg_Name_1 := Original_Aspect_Pragma_Name (Prag);\n \n       --  Emit a precise message to distinguish between source pragmas and\n       --  pragmas generated from aspects. The ordering of the two pragmas is\n@@ -24989,42 +24980,14 @@ package body Sem_Prag is\n       --  No error is emitted when both pragmas come from aspects because this\n       --  is already detected by the general aspect analysis mechanism.\n \n-      if Prag_Nam = Name_uPre then\n-         Error_Msg_Name_1 := Name_Pre;\n-      elsif Prag_Nam = Name_uPost then\n-         Error_Msg_Name_1 := Name_Post;\n-      else\n-         Error_Msg_Name_1 := Prag_Nam;\n-      end if;\n-\n-      --  The item appears as aspect XXX'Class or pragma XXX_Class\n-\n-      if Class_Present (Prag) then\n-         if Prag_From_Asp and Prev_From_Asp then\n-            null;\n-         elsif Prag_From_Asp then\n-            Error_Msg_N\n-              (\"aspect `%'Class` duplicates pragma declared #\", Prag);\n-         elsif Prev_From_Asp then\n-            Error_Msg_N\n-              (\"pragma `%_Class` duplicates aspect declared #\", Prag);\n-         else\n-            Error_Msg_N\n-              (\"pragma `%_Class` duplicates pragma declared #\", Prag);\n-         end if;\n-\n-      --  Otherwise the pragma appears in its normal form\n-\n+      if Prag_From_Asp and Prev_From_Asp then\n+         null;\n+      elsif Prag_From_Asp then\n+         Error_Msg_N (\"aspect % duplicates pragma declared #\", Prag);\n+      elsif Prev_From_Asp then\n+         Error_Msg_N (\"pragma % duplicates aspect declared #\", Prag);\n       else\n-         if Prag_From_Asp and Prev_From_Asp then\n-            null;\n-         elsif Prag_From_Asp then\n-            Error_Msg_N (\"aspect % duplicates pragma declared #\", Prag);\n-         elsif Prev_From_Asp then\n-            Error_Msg_N (\"pragma % duplicates aspect declared #\", Prag);\n-         else\n-            Error_Msg_N (\"pragma % duplicates pragma declared #\", Prag);\n-         end if;\n+         Error_Msg_N (\"pragma % duplicates pragma declared #\", Prag);\n       end if;\n    end Duplication_Error;\n "}, {"sha": "d9ab705bd13e10946934ee565e45e2ff7d8bea64", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947", "patch": "@@ -15538,15 +15538,12 @@ package body Sem_Util is\n          if Item_Nam = Name_Invariant then\n             Item_Nam := Name_uInvariant;\n \n-         elsif Nam_In (Item_Nam, Name_Post, Name_Post_Class) then\n+         elsif Item_Nam = Name_Post then\n             Item_Nam := Name_uPost;\n \n-         elsif Nam_In (Item_Nam, Name_Pre, Name_Pre_Class) then\n+         elsif Item_Nam = Name_Pre then\n             Item_Nam := Name_uPre;\n \n-         elsif Item_Nam = Name_Invariant then\n-            Item_Nam := Name_uInvariant;\n-\n          elsif Nam_In (Item_Nam, Name_Type_Invariant,\n                                  Name_Type_Invariant_Class)\n          then"}, {"sha": "e0781ab937222b449084afdcf02de44fc1612696", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=e0c23ac71cc0123d053fb5b23d33b5fbcf1f8947", "patch": "@@ -1683,9 +1683,7 @@ package Sem_Util is\n    --  returns the following values:\n    --\n    --    Invariant            -> Name_uInvariant\n-   --    Post                 -> Name_uPost\n    --    Post'Class           -> Name_uPost\n-   --    Pre                  -> Name_uPre\n    --    Pre'Class            -> Name_uPre\n    --    Type_Invariant       -> Name_uType_Invariant\n    --    Type_Invariant'Class -> Name_uType_Invariant"}]}