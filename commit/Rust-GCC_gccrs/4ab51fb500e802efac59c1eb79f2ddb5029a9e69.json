{"sha": "4ab51fb500e802efac59c1eb79f2ddb5029a9e69", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGFiNTFmYjUwMGU4MDJlZmFjNTljMWViNzlmMmRkYjUwMjlhOWU2OQ==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@superh.com", "date": "2004-02-25T12:42:26Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2004-02-25T12:42:26Z"}, "message": "reload1.c (reload): Only spill eliminable register with multiple adjacent elimination alternatives...\n\n\t* reload1.c (reload): Only spill eliminable register with multiple\n\tadjacent elimination alternatives if all alternatives fail.\n\nFrom-SVN: r78430", "tree": {"sha": "015eca1b742786bb55b1a0c3a590560746745b08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/015eca1b742786bb55b1a0c3a590560746745b08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ab51fb500e802efac59c1eb79f2ddb5029a9e69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ab51fb500e802efac59c1eb79f2ddb5029a9e69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ab51fb500e802efac59c1eb79f2ddb5029a9e69", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ab51fb500e802efac59c1eb79f2ddb5029a9e69/comments", "author": null, "committer": null, "parents": [{"sha": "e1471c91b8215ed17e1f4dde075eee0e9f0f804b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1471c91b8215ed17e1f4dde075eee0e9f0f804b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1471c91b8215ed17e1f4dde075eee0e9f0f804b"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "4405cd971408ef5dc5be86bb9e6403273da18ed1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ab51fb500e802efac59c1eb79f2ddb5029a9e69/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ab51fb500e802efac59c1eb79f2ddb5029a9e69/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4ab51fb500e802efac59c1eb79f2ddb5029a9e69", "patch": "@@ -1,3 +1,8 @@\n+2004-02-25  J\"orn Rennecke <joern.rennecke@superh.com>\n+\n+\t* reload1.c (reload): Only spill eliminable register with multiple\n+\tadjacent elimination alternatives if all alternatives fail.\n+\n 2004-02-25  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* arm.c (arm_legitimate_index_p): For QImode the range of an offset"}, {"sha": "12451db1318e8fb85db1f5a8bd4751177e899d46", "filename": "gcc/reload1.c", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ab51fb500e802efac59c1eb79f2ddb5029a9e69/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ab51fb500e802efac59c1eb79f2ddb5029a9e69/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=4ab51fb500e802efac59c1eb79f2ddb5029a9e69", "patch": "@@ -849,9 +849,22 @@ reload (rtx first, int global)\n \n   /* Spill any hard regs that we know we can't eliminate.  */\n   CLEAR_HARD_REG_SET (used_spill_regs);\n-  for (ep = reg_eliminate; ep < &reg_eliminate[NUM_ELIMINABLE_REGS]; ep++)\n-    if (! ep->can_eliminate)\n-      spill_hard_reg (ep->from, 1);\n+  /* There can be multiple ways to eliminate a register;\n+     they should be listed adjacently.\n+     Elimination for any register fails only if all possible ways fail.  */\n+  for (ep = reg_eliminate; ep < &reg_eliminate[NUM_ELIMINABLE_REGS]; )\n+    {\n+      int from = ep->from;\n+      int can_eliminate = 0;\n+      do\n+\t{\n+          can_eliminate |= ep->can_eliminate;\n+          ep++;\n+\t}\n+      while (ep < &reg_eliminate[NUM_ELIMINABLE_REGS] && ep->from == from);\n+      if (! can_eliminate)\n+\tspill_hard_reg (from, 1);\n+    }\n \n #if HARD_FRAME_POINTER_REGNUM != FRAME_POINTER_REGNUM\n   if (frame_pointer_needed)"}]}