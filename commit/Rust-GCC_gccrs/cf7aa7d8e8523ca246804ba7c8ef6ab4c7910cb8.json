{"sha": "cf7aa7d8e8523ca246804ba7c8ef6ab4c7910cb8", "node_id": "C_kwDOANBUbNoAKGNmN2FhN2Q4ZTg1MjNjYTI0NjgwNGJhN2M4ZWY2YWI0Yzc5MTBjYjg", "commit": {"author": {"name": "Ghjuvan Lacambre", "email": "lacambre@adacore.com", "date": "2021-07-05T15:08:56Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-09-21T15:24:58Z"}, "message": "[Ada] exp_pakd.adb: work around spurious Codepeer warnings\n\ngcc/ada/\n\n\t* exp_pakd.adb (Expand_Packed_Not): Replace expression with\n\tstatement.", "tree": {"sha": "7d8f5b75fd76080468198b06176fb6b5a3ffadf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d8f5b75fd76080468198b06176fb6b5a3ffadf6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf7aa7d8e8523ca246804ba7c8ef6ab4c7910cb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf7aa7d8e8523ca246804ba7c8ef6ab4c7910cb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf7aa7d8e8523ca246804ba7c8ef6ab4c7910cb8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf7aa7d8e8523ca246804ba7c8ef6ab4c7910cb8/comments", "author": {"login": "glacambre", "id": 11534587, "node_id": "MDQ6VXNlcjExNTM0NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glacambre", "html_url": "https://github.com/glacambre", "followers_url": "https://api.github.com/users/glacambre/followers", "following_url": "https://api.github.com/users/glacambre/following{/other_user}", "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}", "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions", "organizations_url": "https://api.github.com/users/glacambre/orgs", "repos_url": "https://api.github.com/users/glacambre/repos", "events_url": "https://api.github.com/users/glacambre/events{/privacy}", "received_events_url": "https://api.github.com/users/glacambre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69a0ff3416a5bbd8abcdd3fb85a387b2eccc88dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69a0ff3416a5bbd8abcdd3fb85a387b2eccc88dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69a0ff3416a5bbd8abcdd3fb85a387b2eccc88dc"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "779dbb3ad306d7fffb41ee8eadefdafaf7273455", "filename": "gcc/ada/exp_pakd.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf7aa7d8e8523ca246804ba7c8ef6ab4c7910cb8/gcc%2Fada%2Fexp_pakd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf7aa7d8e8523ca246804ba7c8ef6ab4c7910cb8/gcc%2Fada%2Fexp_pakd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.adb?ref=cf7aa7d8e8523ca246804ba7c8ef6ab4c7910cb8", "patch": "@@ -2002,7 +2002,11 @@ package body Exp_Pakd is\n       --  actual subtype of the operand. Preserve old behavior in case size is\n       --  not set.\n \n-      Size := (if Known_RM_Size (PAT) then RM_Size (PAT) else Uint_0);\n+      if Known_RM_Size (PAT) then\n+         Size := RM_Size (PAT);\n+      else\n+         Size := Uint_0;\n+      end if;\n       Lit := Make_Integer_Literal (Loc, 2 ** Size - 1);\n       Set_Print_In_Hex (Lit);\n "}]}