{"sha": "22dc669e109de9a76c74535cdf30e7922e0ef5c1", "node_id": "C_kwDOANBUbNoAKDIyZGM2NjllMTA5ZGU5YTc2Yzc0NTM1Y2RmMzBlNzkyMmUwZWY1YzE", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2022-12-14T07:01:56Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2022-12-19T14:09:35Z"}, "message": "RISC-V: Fix RVV machine mode attribute configuration\n\nThe attribute configuration of each machine mode are support in the previous patch.\nI noticed some of them are not correct during VSETVL PASS testsing.\nCorrect them in the single patch now.\n\ngcc/ChangeLog:\n\n\t* config/riscv/riscv-vector-switch.def (ENTRY): Correct attributes.", "tree": {"sha": "e5929ec0e5d29465f14c020df1d9e44b30f5643f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5929ec0e5d29465f14c020df1d9e44b30f5643f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22dc669e109de9a76c74535cdf30e7922e0ef5c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22dc669e109de9a76c74535cdf30e7922e0ef5c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22dc669e109de9a76c74535cdf30e7922e0ef5c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22dc669e109de9a76c74535cdf30e7922e0ef5c1/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e85f89a7d59a99a3395b6e153b99262a58b2f6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e85f89a7d59a99a3395b6e153b99262a58b2f6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e85f89a7d59a99a3395b6e153b99262a58b2f6c"}], "stats": {"total": 38, "additions": 19, "deletions": 19}, "files": [{"sha": "ec12be84661edc6ac06d419245fc33512116badb", "filename": "gcc/config/riscv/riscv-vector-switch.def", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22dc669e109de9a76c74535cdf30e7922e0ef5c1/gcc%2Fconfig%2Friscv%2Friscv-vector-switch.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22dc669e109de9a76c74535cdf30e7922e0ef5c1/gcc%2Fconfig%2Friscv%2Friscv-vector-switch.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-vector-switch.def?ref=22dc669e109de9a76c74535cdf30e7922e0ef5c1", "patch": "@@ -95,16 +95,16 @@ TODO: FP16 vector needs support of 'zvfh', we don't support it yet.  */\n #endif\n \n /* Mask modes. Disable VNx64BImode when TARGET_MIN_VLEN == 32.  */\n-ENTRY (VNx64BI, TARGET_MIN_VLEN > 32, LMUL_F8, 64, LMUL_RESERVED, 0)\n-ENTRY (VNx32BI, true, LMUL_F4, 32, LMUL_RESERVED, 0)\n-ENTRY (VNx16BI, true, LMUL_F2, 16, LMUL_RESERVED, 0)\n-ENTRY (VNx8BI, true, LMUL_1, 8, LMUL_RESERVED, 0)\n-ENTRY (VNx4BI, true, LMUL_2, 4, LMUL_RESERVED, 0)\n-ENTRY (VNx2BI, true, LMUL_4, 2, LMUL_RESERVED, 0)\n-ENTRY (VNx1BI, true, LMUL_8, 1, LMUL_RESERVED, 0)\n+ENTRY (VNx64BI, TARGET_MIN_VLEN > 32, LMUL_RESERVED, 0, LMUL_8, 1)\n+ENTRY (VNx32BI, true, LMUL_8, 1, LMUL_4, 2)\n+ENTRY (VNx16BI, true, LMUL_4, 2, LMUL_2, 4)\n+ENTRY (VNx8BI, true, LMUL_2, 4, LMUL_1, 8)\n+ENTRY (VNx4BI, true, LMUL_1, 8, LMUL_F2, 16)\n+ENTRY (VNx2BI, true, LMUL_F2, 16, LMUL_F4, 32)\n+ENTRY (VNx1BI, true, LMUL_F4, 32, LMUL_F8, 64)\n \n /* SEW = 8. Disable VNx64QImode when TARGET_MIN_VLEN == 32.  */\n-ENTRY (VNx64QI, TARGET_MIN_VLEN > 32, LMUL_8, 1, LMUL_RESERVED, 0)\n+ENTRY (VNx64QI, TARGET_MIN_VLEN > 32, LMUL_RESERVED, 0, LMUL_8, 1)\n ENTRY (VNx32QI, true, LMUL_8, 1, LMUL_4, 2)\n ENTRY (VNx16QI, true, LMUL_4, 2, LMUL_2, 4)\n ENTRY (VNx8QI, true, LMUL_2, 4, LMUL_1, 8)\n@@ -113,15 +113,15 @@ ENTRY (VNx2QI, true, LMUL_F2, 16, LMUL_F4, 32)\n ENTRY (VNx1QI, true, LMUL_F4, 32, LMUL_F8, 64)\n \n /* SEW = 16. Disable VNx32HImode when TARGET_MIN_VLEN == 32.  */\n-ENTRY (VNx32HI, TARGET_MIN_VLEN > 32, LMUL_8, 2, LMUL_RESERVED, 0)\n+ENTRY (VNx32HI, TARGET_MIN_VLEN > 32, LMUL_RESERVED, 0, LMUL_8, 2)\n ENTRY (VNx16HI, true, LMUL_8, 2, LMUL_4, 4)\n ENTRY (VNx8HI, true, LMUL_4, 4, LMUL_2, 8)\n ENTRY (VNx4HI, true, LMUL_2, 8, LMUL_1, 16)\n ENTRY (VNx2HI, true, LMUL_1, 16, LMUL_F2, 32)\n ENTRY (VNx1HI, true, LMUL_F2, 32, LMUL_F4, 64)\n \n /* TODO:Disable all FP16 vector, enable them when 'zvfh' is supported.  */\n-ENTRY (VNx32HF, false, LMUL_8, 2, LMUL_RESERVED, 0)\n+ENTRY (VNx32HF, false, LMUL_RESERVED, 0, LMUL_8, 2)\n ENTRY (VNx16HF, false, LMUL_8, 2, LMUL_4, 4)\n ENTRY (VNx8HF, false, LMUL_4, 4, LMUL_2, 8)\n ENTRY (VNx4HF, false, LMUL_2, 8, LMUL_1, 16)\n@@ -131,18 +131,18 @@ ENTRY (VNx1HF, false, LMUL_F2, 32, LMUL_F4, 64)\n /* SEW = 32. Disable VNx16SImode when TARGET_MIN_VLEN == 32.\n    For single-precision floating-point, we need TARGET_VECTOR_FP32 ==\n    RVV_ENABLE.  */\n-ENTRY (VNx16SI, TARGET_MIN_VLEN > 32, LMUL_8, 4, LMUL_RESERVED, 0)\n+ENTRY (VNx16SI, TARGET_MIN_VLEN > 32, LMUL_RESERVED, 0, LMUL_8, 4)\n ENTRY (VNx8SI, true, LMUL_8, 4, LMUL_4, 8)\n-ENTRY (VNx4SI, true, LMUL_4, 8, LMUL_2, 4)\n-ENTRY (VNx2SI, true, LMUL_2, 16, LMUL_1, 2)\n-ENTRY (VNx1SI, true, LMUL_1, 32, LMUL_F2, 1)\n+ENTRY (VNx4SI, true, LMUL_4, 8, LMUL_2, 16)\n+ENTRY (VNx2SI, true, LMUL_2, 16, LMUL_1, 32)\n+ENTRY (VNx1SI, true, LMUL_1, 32, LMUL_F2, 64)\n \n-ENTRY (VNx16SF, TARGET_VECTOR_FP32 && (TARGET_MIN_VLEN > 32), LMUL_8, 4,\n-       LMUL_RESERVED, 0)\n+ENTRY (VNx16SF, TARGET_VECTOR_FP32 && (TARGET_MIN_VLEN > 32), LMUL_RESERVED, 0,\n+       LMUL_8, 4)\n ENTRY (VNx8SF, TARGET_VECTOR_FP32, LMUL_8, 4, LMUL_4, 8)\n-ENTRY (VNx4SF, TARGET_VECTOR_FP32, LMUL_4, 8, LMUL_2, 4)\n-ENTRY (VNx2SF, TARGET_VECTOR_FP32, LMUL_2, 16, LMUL_1, 2)\n-ENTRY (VNx1SF, TARGET_VECTOR_FP32, LMUL_1, 32, LMUL_F2, 1)\n+ENTRY (VNx4SF, TARGET_VECTOR_FP32, LMUL_4, 8, LMUL_2, 16)\n+ENTRY (VNx2SF, TARGET_VECTOR_FP32, LMUL_2, 16, LMUL_1, 32)\n+ENTRY (VNx1SF, TARGET_VECTOR_FP32, LMUL_1, 32, LMUL_F2, 64)\n \n /* SEW = 64. Enable when TARGET_MIN_VLEN > 32.\n    For double-precision floating-point, we need TARGET_VECTOR_FP64 =="}]}