{"sha": "210cfe6365e5b2f696bb1e32b8bc25628b1064c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjEwY2ZlNjM2NWU1YjJmNjk2YmIxZTMyYjhiYzI1NjI4YjEwNjRjMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-05-14T17:07:41Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-05-14T17:07:41Z"}, "message": "dwarf2out.c (dwarf2out_define, [...]): Treat lineno 1 the same as lineno 0 before first start file directive.\n\n\t* dwarf2out.c (dwarf2out_define, dwarf2out_undef): Treat\n\tlineno 1 the same as lineno 0 before first start file directive.\n\t(optimize_macinfo_range): Likewise.\n\nFrom-SVN: r187475", "tree": {"sha": "ed7986e8c06e4ca04a82074342024ce1bfd64047", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed7986e8c06e4ca04a82074342024ce1bfd64047"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/210cfe6365e5b2f696bb1e32b8bc25628b1064c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/210cfe6365e5b2f696bb1e32b8bc25628b1064c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/210cfe6365e5b2f696bb1e32b8bc25628b1064c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/210cfe6365e5b2f696bb1e32b8bc25628b1064c1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d5c90983388dd8841b2cb1986fa0624a000731bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5c90983388dd8841b2cb1986fa0624a000731bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5c90983388dd8841b2cb1986fa0624a000731bd"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "bdb3a5b33a9b1c137014b66db732d06a7028278c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/210cfe6365e5b2f696bb1e32b8bc25628b1064c1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/210cfe6365e5b2f696bb1e32b8bc25628b1064c1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=210cfe6365e5b2f696bb1e32b8bc25628b1064c1", "patch": "@@ -1,5 +1,9 @@\n 2012-05-14  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* dwarf2out.c (dwarf2out_define, dwarf2out_undef): Treat\n+\tlineno 1 the same as lineno 0 before first start file directive.\n+\t(optimize_macinfo_range): Likewise.\n+\n \t* dwarf2out.c (have_macinfo): Define.\n \t(dwarf2out_finish): Don't emit DW_AT_GNU_macros or DW_AT_macro_info\n \tattribute, don't force empty compilation unit and don't emit any"}, {"sha": "3569dc565b8381175d7d919287f4fbbaa083ff84", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/210cfe6365e5b2f696bb1e32b8bc25628b1064c1/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/210cfe6365e5b2f696bb1e32b8bc25628b1064c1/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=210cfe6365e5b2f696bb1e32b8bc25628b1064c1", "patch": "@@ -20110,7 +20110,7 @@ dwarf2out_define (unsigned int lineno ATTRIBUTE_UNUSED,\n       macinfo_entry e;\n       /* Insert a dummy first entry to be able to optimize the whole\n \t predefined macro block using DW_MACRO_GNU_transparent_include.  */\n-      if (VEC_empty (macinfo_entry, macinfo_table) && lineno == 0)\n+      if (VEC_empty (macinfo_entry, macinfo_table) && lineno <= 1)\n \t{\n \t  e.code = 0;\n \t  e.lineno = 0;\n@@ -20137,7 +20137,7 @@ dwarf2out_undef (unsigned int lineno ATTRIBUTE_UNUSED,\n       macinfo_entry e;\n       /* Insert a dummy first entry to be able to optimize the whole\n \t predefined macro block using DW_MACRO_GNU_transparent_include.  */\n-      if (VEC_empty (macinfo_entry, macinfo_table) && lineno == 0)\n+      if (VEC_empty (macinfo_entry, macinfo_table) && lineno <= 1)\n \t{\n \t  e.code = 0;\n \t  e.lineno = 0;\n@@ -20276,13 +20276,13 @@ optimize_macinfo_range (unsigned int idx, VEC (macinfo_entry, gc) *files,\n \n   /* Optimize only if there are at least two consecutive define/undef ops,\n      and either all of them are before first DW_MACINFO_start_file\n-     with lineno 0 (i.e. predefined macro block), or all of them are\n+     with lineno {0,1} (i.e. predefined macro block), or all of them are\n      in some included header file.  */\n   if (second->code != DW_MACINFO_define && second->code != DW_MACINFO_undef)\n     return 0;\n   if (VEC_empty (macinfo_entry, files))\n     {\n-      if (first->lineno != 0 || second->lineno != 0)\n+      if (first->lineno > 1 || second->lineno > 1)\n \treturn 0;\n     }\n   else if (first->lineno == 0)\n@@ -20295,7 +20295,7 @@ optimize_macinfo_range (unsigned int idx, VEC (macinfo_entry, gc) *files,\n   for (i = idx; VEC_iterate (macinfo_entry, macinfo_table, i, cur); i++)\n     if (cur->code != DW_MACINFO_define && cur->code != DW_MACINFO_undef)\n       break;\n-    else if (first->lineno == 0 && cur->lineno != 0)\n+    else if (VEC_empty (macinfo_entry, files) && cur->lineno > 1)\n       break;\n     else\n       {\n@@ -20309,7 +20309,7 @@ optimize_macinfo_range (unsigned int idx, VEC (macinfo_entry, gc) *files,\n \n   /* From the containing include filename (if any) pick up just\n      usable characters from its basename.  */\n-  if (first->lineno == 0)\n+  if (VEC_empty (macinfo_entry, files))\n     base = \"\";\n   else\n     base = lbasename (VEC_last (macinfo_entry, files)->info);"}]}