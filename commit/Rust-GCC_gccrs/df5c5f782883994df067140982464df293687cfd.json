{"sha": "df5c5f782883994df067140982464df293687cfd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGY1YzVmNzgyODgzOTk0ZGYwNjcxNDA5ODI0NjRkZjI5MzY4N2NmZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-03-17T20:32:17Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-03-17T20:32:17Z"}, "message": "re PR c++/17232 ([DR 1640] classes and class template specializations treated differently w.r.t. core issue #337)\n\n\tPR c++/17232\n\tPR c++/56642\n\t* typeck2.c (abstract_virtuals_error_sfinae): Revert complete_type\n\tchange for now.\n\nFrom-SVN: r196758", "tree": {"sha": "c1804474bfef8953aed9d2a6fde7b72cbf23305e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1804474bfef8953aed9d2a6fde7b72cbf23305e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df5c5f782883994df067140982464df293687cfd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df5c5f782883994df067140982464df293687cfd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df5c5f782883994df067140982464df293687cfd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df5c5f782883994df067140982464df293687cfd/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "286fb67781dc30504ab07890fc6867cce92d8ddd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/286fb67781dc30504ab07890fc6867cce92d8ddd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/286fb67781dc30504ab07890fc6867cce92d8ddd"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "b341e92979049fa303ed7b86636be3197757ee8a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df5c5f782883994df067140982464df293687cfd/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df5c5f782883994df067140982464df293687cfd/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=df5c5f782883994df067140982464df293687cfd", "patch": "@@ -1,3 +1,10 @@\n+2013-03-17  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/17232\n+\tPR c++/56642\n+\t* typeck2.c (abstract_virtuals_error_sfinae): Revert complete_type\n+\tchange for now.\n+\n 2013-03-16  Jason Merrill  <jason@redhat.com>\n \n \t* decl.c (grokdeclarator): Assert that we won't see a pointer to"}, {"sha": "24b559385276d19dd775e9527900c53cebf7fc02", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df5c5f782883994df067140982464df293687cfd/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df5c5f782883994df067140982464df293687cfd/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=df5c5f782883994df067140982464df293687cfd", "patch": "@@ -265,10 +265,6 @@ abstract_virtuals_error_sfinae (tree decl, tree type, abstract_class_use use,\n     return 0;\n   type = TYPE_MAIN_VARIANT (type);\n \n-  /* In SFINAE context, force instantiation.  */\n-  if (!(complain & tf_error))\n-    complete_type (type);\n-\n   /* If the type is incomplete, we register it within a hash table,\n      so that we can check again once it is completed. This makes sense\n      only for objects for which we have a declaration or at least a"}]}