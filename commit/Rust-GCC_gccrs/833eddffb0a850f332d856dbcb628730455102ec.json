{"sha": "833eddffb0a850f332d856dbcb628730455102ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODMzZWRkZmZiMGE4NTBmMzMyZDg1NmRiY2I2Mjg3MzA0NTUxMDJlYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-08-16T12:22:05Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-08-16T12:22:05Z"}, "message": "Resync\n\nFrom-SVN: r127553", "tree": {"sha": "54877415d0cd7da46d293950cbdc4abb2ceca510", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54877415d0cd7da46d293950cbdc4abb2ceca510"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/833eddffb0a850f332d856dbcb628730455102ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/833eddffb0a850f332d856dbcb628730455102ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/833eddffb0a850f332d856dbcb628730455102ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/833eddffb0a850f332d856dbcb628730455102ec/comments", "author": null, "committer": null, "parents": [{"sha": "cd3cd5b19818bb30992ba42ea61da2914a95e393", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd3cd5b19818bb30992ba42ea61da2914a95e393", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd3cd5b19818bb30992ba42ea61da2914a95e393"}], "stats": {"total": 195, "additions": 195, "deletions": 0}, "files": [{"sha": "07e95a684c929e6949617bacb61dc1a848827c03", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 195, "deletions": 0, "changes": 195, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833eddffb0a850f332d856dbcb628730455102ec/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833eddffb0a850f332d856dbcb628730455102ec/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=833eddffb0a850f332d856dbcb628730455102ec", "patch": "@@ -1,3 +1,198 @@\n+2007-08-16  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* cstand.adb (Create_Standard): Create an entity for a zero-sized type\n+\tassociated with Standard_Debug_Renaming_Type, to be used as the type of\n+\tthe special variables whose names provide debugger encodings for\n+\trenaming declarations.\n+\n+\t* einfo.ads, einfo.adb (Debug_Renaming_Link): Change to return Node25.\n+\t(Set_Debug_Renaming_Link): Change to set Node25.\n+\t(Write_Field13_Name): Remove case for E_Enumeration_Literal.\n+\t(Write_Field25_Name): Add case for E_Variable to output\n+\t\"Debug_Renaming_Link\".\n+\t(Write_Field23_Name): Correct the output string for \"Limited_View\".\n+\n+\t* exp_dbug.adb: Add with and use of Tbuild.\n+\t(Debug_Renaming_Declaration): Replace creation of an enumeration type\n+\tand literal with creation of a variable of type\n+\tStandard_Debug_Renaming_Type whose name encodes both the renamed object\n+\tand the entity of the renaming declaration.\n+\t(Qualify_Entity_Name): Add the delayed qualification of the entity name\n+\tpart of the name of a variable that has a Debug_Renaming_Link.\n+\n+\t* stand.ads (Standard_Debug_Renaming_Type): New Entity_Id denoting a\n+\tspecial type to be associated with variables that provide debugger\n+\tencodings for renaming declarations.\n+\n+2007-08-16  Gary Dismukes  <dismukes@adacore.com>\n+\t    Ed Schonberg  <schonberg@adacore.com>\n+\t    Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_aggr.adb (Build_Record_Aggr_Code): Extend the test for an\n+\tancestor part given by an aggregate to test for an unchecked conversion,\n+\tsince this can occur in some cases when the ancestor part is a function\n+\tcall, and we don't want to fall into the recursive call to this\n+\tprocedure in that case.\n+\n+\t* exp_ch3.adb (Stream_Operation_OK): Revise tests for availability of\n+\tstream attributes on limited types to account for user-specified\n+\tattributes as well as whether Input (resp. Output) becomes available\n+\tdue to Read (resp. Write) being available for the type. Change Boolean\n+\tvariable to the more accurate name\n+\tHas_Predefined_Or_Specified_Stream_Attribute. Change convoluted\n+\tdouble-\"not\" predicate at beginning of return statement to more\n+\tunderstandable form.\n+\n+\t* exp_ch5.adb (Expand_N_Extended_Return_Statement): If the extended\n+\treturn has an associated N_Handled_Sequence_Of_Statements, then wrap it\n+\tin a block statement and use that as the first statement of the\n+\texpanded return rather than incorrectly using the handled sequence as\n+\tthe first statement.\n+\n+\t* exp_ch6.adb (Expand_N_Subprogram_Declaration): If this is a protected\n+\toperation, generate an explicit freeze node for it rather than\n+\tgenerating extra formals, to ensure that gigi has the proper order of\n+\telaboration for anonymous subtypes in the signature of the subprograms.\n+\t(Build_In_Place_Formal): Move assertion to beginning of loop.\n+\t(Is_Build_In_Place_Function_Call): Allow for an unchecked conversion\n+\tapplied to a function call (occurs for some cases of 'Input).\n+\t(Make_Build_In_Place_Call_In_*): Allow for an unchecked conversion\n+\tapplied to a function call (occurs for some cases of 'Input).\n+\n+\t* exp_strm.adb (Build_Record_Or_Elementary_Input_Function): For Ada\n+\t2005, generate an extended return statement enclosing the result object\n+\tand 'Read call.\n+\n+\t* freeze.adb (Freeze_Record_Type): Extend the current management of\n+\tcomponents that are access type with an allocator as default value: add\n+\tmissing support to the use of qualified expressions of the\n+\tallocator (which also cause freezing of the designated type!)\n+\t(Freeze_Entity): Call Freeze_Subprogram in the case of a predefined\n+\tdispatching operation, since extra formals may be needed by calls to\n+\tbuild-in-place functions (such as stream 'Input).\n+\n+\t* sem_ch6.adb (Create_Extra_Formals): Skip creation of the extra\n+\tformals for 'Constrained and accessibility level in the case of a\n+\tpredefined dispatching operation.\n+\n+\t* exp_util.adb (Insert_Actions): A protected body is a valid insertion\n+\tpoint, no need to find the parent node.\n+\n+2007-08-16  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_attr.adb (Attribute_Priority): Add missing support for entries\n+\tand entry barriers.\n+\n+2007-08-16  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_ch9.adb (Build_Protected_Entry): Undo previous change because it\n+\tis not really required and can introduce regression with the debugger.\n+\tThe original problem is fixed with the patch written for checks.adb.\n+\n+2007-08-16  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* g-dyntab.adb, g-table.adb, table.adb: (Set_Item): Suppress\n+\tRange_Check on Allocated_Table.\n+\n+2007-08-16  Vincent Celier  <celier@adacore.com>\n+\n+\t* make.adb (Collect_Arguments): Call Test_If_Relative_Path with\n+\tIncluding_Non_Switch set to False.\n+\t(Gnatmake): For the compiler, call Test_If_Relative_Path with\n+\tIncluding_Non_Switch set to False.\n+\n+\t* makeutl.adb, makeutl.ads (Test_If_Relative_Path): New Boolean\n+\tparameter Including_Non_Switch, defaulted to True. When\n+\tIncluding_Non_Switch is False, options that are not switches and\n+\tappear as relative path are not converted to absolute paths.\n+\n+2007-08-16  Nicolas Roche  <roche@adacore.com>\n+\n+\t* Makefile.in (gnatlib): Propagate FORCE_DEBUG_ADAFLAGS value to sub\n+\tmakefiles\n+\n+\t* Make-lang.in: Update dependencies\n+\n+2007-08-16  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch10.adb (Has_With_Clause): If the name of the with clause\n+\tcurrently inspected is a selected component, retrieve the entity of\n+\tits selector.\n+\t(Install_Limited_Withed_Unit): Call Has_Limited_With_Clause starting\n+\tfrom the immediate ancestor of Main_Unit_Entity.\n+\t(Install_Limited_Withed_Unit): Do not install the limited view of\n+\tpackage P if P is reachable through an ancestor chain from package C\n+\tand C also has a with clause for P in its body.\n+\t(Has_Limited_With_Clause): New routine.\n+\t(Has_With_Clause): New routine.\n+\n+2007-08-16  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb (Copy_Generic_Node): A reference to a child unit of the\n+\tgeneric for an enclosing instance is a global reference, even though\n+\tits scope is the enclosing instance.\n+\n+2007-08-16  Gary Dismukes  <dismukes@adacore.com>\n+\t    Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_ch3.adb (OK_For_Limited_Init_In_05): Allow calls to 'Input to\n+\tinitialize a limited object.\n+\t(Build_Derived_Record_Type): Add missing check of rules ARM 3.9.4\n+\t13/2 and 14/2.\n+\tMake sure Has_Complex_Representation is inherited by derived type.\n+\n+2007-08-16  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch5.adb (Analyze_Assignment): Make sure we still note update in\n+\texception case\n+\n+2007-08-16  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_disp.adb (Check_Dispatching_Operation): If the operation\n+\timplements an operation inherited from a progenitor interface, verify\n+\tthat they are subtype-conformant.\n+\n+2007-08-16  Hristian Kirtchev  <kirtchev@adacore.com>\n+\t    Bob Duff  <duff@adacore.com>\n+\t    Nicolas Setton  <setton@adacore.com>\n+\n+\t* sem_res.adb (Comes_From_Predefined_Lib_Unit): New.\n+\t(Resolve): Alphabetize local variables. Add new variable From_Lib. When\n+\tthe statement which is being resolved comes from a predefined library\n+\tunit, all non-predefined library interpretations are skipped.\n+\t(Resolve_Op_Concat): If string concatenation was folded in the parser,\n+\tbut the \"&\" is user defined, give an error, because the folding would\n+\tbe wrong.\n+\n+\t* sinfo.ads, sinfo.adb (Is_Folded_In_Parser): New flag to indicate that\n+\tthe parser has folded a long sequence of concatenations of string\n+\tliterals.\n+\n+\t* trans.c (Handled_Sequence_Of_Statements_to_gnu): Mark \"JMPBUF_SAVE\"\n+\tand \"JMP_BUF\" variables as artificial.\n+\t(N_String_Literal): Do not use alloca for very long string literals. Use\n+\txmalloc/free instead. Otherwise the stack might overflow.\n+\n+\t* utils.c (init_gigi_decls): Mark \"JMPBUF_T\" type as created by the\n+\tcompiler.\n+\n+2007-08-16  Vincent Celier  <celier@adacore.com>\n+\n+\t* vms_conv.adb (Process_Argument): Ensure that project related options\n+\tare not put in the -cargs section when using GNAT COMPILE.\n+\n+2007-08-16  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_ugn.texi: Add note on preprocessing (output file not written)\n+\n+2007-08-16  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* a-tags.adb: Minor reformatting.\n+\n+2007-08-16  Bob Duff  <duff@adacore.com>\n+\n+\t* sem_type.ads, sem_ch4.adb: Minor reformatting.\n+\n 2007-08-14  Thomas Quinot  <quinot@adacore.com>\n \n \t* g-soccon-interix.ads, a-excpol-interix.adb, a-intnam-interix.ads, "}]}