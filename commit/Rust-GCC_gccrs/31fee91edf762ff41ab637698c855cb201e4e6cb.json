{"sha": "31fee91edf762ff41ab637698c855cb201e4e6cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFmZWU5MWVkZjc2MmZmNDFhYjYzNzY5OGM4NTVjYjIwMWU0ZTZjYg==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2010-07-25T17:01:15Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2010-07-25T17:01:15Z"}, "message": "re PR fortran/44660 (ICE in resolve_equivalence())\n\n2010-07-25  Mikael Morin  <mikael@gcc.gnu.org>\n\n\tPR fortran/44660\n\t* gfortran.h (gfc_namespace): New field old_equiv.\n\t(gfc_free_equiv_until): New prototype.\n\t* match.c (gfc_free_equiv_until): New, renamed from gfc_free_equiv with\n\ta parameterized stop condition.\n\t(gfc_free_equiv): Use gfc_free_equiv_until.\n\t* parse.c (next_statement): Save equivalence list.\n\t(reject_statement): Restore equivalence list.\n\nFrom-SVN: r162516", "tree": {"sha": "741b2b6a14d8e50c49bfb3012ae66b8c5847a4ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/741b2b6a14d8e50c49bfb3012ae66b8c5847a4ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31fee91edf762ff41ab637698c855cb201e4e6cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31fee91edf762ff41ab637698c855cb201e4e6cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31fee91edf762ff41ab637698c855cb201e4e6cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31fee91edf762ff41ab637698c855cb201e4e6cb/comments", "author": null, "committer": null, "parents": [{"sha": "20b84bef2b603adfc1a079de6575021c3529077f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20b84bef2b603adfc1a079de6575021c3529077f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20b84bef2b603adfc1a079de6575021c3529077f"}], "stats": {"total": 31, "additions": 27, "deletions": 4}, "files": [{"sha": "c6d786e3decb76ae7fb981b72a24926e9f2d6871", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31fee91edf762ff41ab637698c855cb201e4e6cb/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31fee91edf762ff41ab637698c855cb201e4e6cb/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=31fee91edf762ff41ab637698c855cb201e4e6cb", "patch": "@@ -78,6 +78,17 @@\n \t* dependency.c (gfc_check_dependency): Add argument alising check.\n \t* symbol.c (gfc_symbols_could_alias): Add argument alising check.\n \n+2010-07-25  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/44660\n+\t* gfortran.h (gfc_namespace): New field old_equiv.\n+\t(gfc_free_equiv_until): New prototype.\n+\t* match.c (gfc_free_equiv_until): New, renamed from gfc_free_equiv with\n+\ta parameterized stop condition.\n+\t(gfc_free_equiv): Use gfc_free_equiv_until.\n+\t* parse.c (next_statement): Save equivalence list.\n+\t(reject_statement): Restore equivalence list. \n+\n 2010-07-22  Daniel Kraft  <d@domob.eu>\n \n \t* trans-stmt.c (gfc_trans_return): Put back in the handling of se.post,"}, {"sha": "70cc4fdccbe56795b60af06cc839a533278d7a64", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31fee91edf762ff41ab637698c855cb201e4e6cb/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31fee91edf762ff41ab637698c855cb201e4e6cb/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=31fee91edf762ff41ab637698c855cb201e4e6cb", "patch": "@@ -1355,7 +1355,7 @@ typedef struct gfc_namespace\n   struct gfc_code *code;\n \n   /* Points to the equivalences set up in this namespace.  */\n-  struct gfc_equiv *equiv;\n+  struct gfc_equiv *equiv, *old_equiv;\n \n   /* Points to the equivalence groups produced by trans_common.  */\n   struct gfc_equiv_list *equiv_lists;\n@@ -2611,6 +2611,7 @@ void gfc_free_forall_iterator (gfc_forall_iterator *);\n void gfc_free_alloc_list (gfc_alloc *);\n void gfc_free_namelist (gfc_namelist *);\n void gfc_free_equiv (gfc_equiv *);\n+void gfc_free_equiv_until (gfc_equiv *, gfc_equiv *);\n void gfc_free_data (gfc_data *);\n void gfc_free_case_list (gfc_case *);\n "}, {"sha": "bd73929b8659d9f845e775acd49a98062ca098a4", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31fee91edf762ff41ab637698c855cb201e4e6cb/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31fee91edf762ff41ab637698c855cb201e4e6cb/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=31fee91edf762ff41ab637698c855cb201e4e6cb", "patch": "@@ -4035,18 +4035,25 @@ gfc_match_module (void)\n    do this.  */\n \n void\n-gfc_free_equiv (gfc_equiv *eq)\n+gfc_free_equiv_until (gfc_equiv *eq, gfc_equiv *stop)\n {\n-  if (eq == NULL)\n+  if (eq == stop)\n     return;\n \n   gfc_free_equiv (eq->eq);\n-  gfc_free_equiv (eq->next);\n+  gfc_free_equiv_until (eq->next, stop);\n   gfc_free_expr (eq->expr);\n   gfc_free (eq);\n }\n \n \n+void\n+gfc_free_equiv (gfc_equiv *eq)\n+{\n+  gfc_free_equiv_until (eq, NULL);\n+}\n+\n+\n /* Match an EQUIVALENCE statement.  */\n \n match"}, {"sha": "1575b2b37efe564efa7f7fff096d2d7392165f75", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31fee91edf762ff41ab637698c855cb201e4e6cb/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31fee91edf762ff41ab637698c855cb201e4e6cb/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=31fee91edf762ff41ab637698c855cb201e4e6cb", "patch": "@@ -892,6 +892,7 @@ next_statement (void)\n   gfc_new_block = NULL;\n \n   gfc_current_ns->old_cl_list = gfc_current_ns->cl_list;\n+  gfc_current_ns->old_equiv = gfc_current_ns->equiv;\n   for (;;)\n     {\n       gfc_statement_label = NULL;\n@@ -1651,6 +1652,9 @@ reject_statement (void)\n   gfc_free_charlen (gfc_current_ns->cl_list, gfc_current_ns->old_cl_list);\n   gfc_current_ns->cl_list = gfc_current_ns->old_cl_list;\n \n+  gfc_free_equiv_until (gfc_current_ns->equiv, gfc_current_ns->old_equiv);\n+  gfc_current_ns->equiv = gfc_current_ns->old_equiv;\n+\n   gfc_new_block = NULL;\n   gfc_undo_symbols ();\n   gfc_clear_warning ();"}]}