{"sha": "c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJjNjAxYjJjMGU0MDZjZGU2Zjk0YTkwNTYzNWQ0ZmNkZjUxZDNkZQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2018-02-26T17:00:46Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2018-02-26T17:00:46Z"}, "message": "i386: Add TARGET_INDIRECT_BRANCH_REGISTER\n\nFor\n\n---\nstruct C {\n  virtual ~C();\n  virtual void f();\n};\n\nvoid\nf (C *p)\n{\n  p->f();\n  p->f();\n}\n---\n\n-mindirect-branch=thunk-extern -O2 on x86-64 GNU/Linux generates:\n\n_Z1fP1C:\n.LFB0:\n        .cfi_startproc\n        pushq   %rbx\n        .cfi_def_cfa_offset 16\n        .cfi_offset 3, -16\n        movq    (%rdi), %rax\n        movq    %rdi, %rbx\n        jmp     .LIND1\n.LIND0:\n        pushq   16(%rax)\n        jmp     __x86_indirect_thunk\n.LIND1:\n        call    .LIND0\n        movq    (%rbx), %rax\n        movq    %rbx, %rdi\n        popq    %rbx\n        .cfi_def_cfa_offset 8\n        movq    16(%rax), %rax\n        jmp     __x86_indirect_thunk_rax\n        .cfi_endproc\n\nx86-64 is supposed to have asynchronous unwind tables by default, but\nthere is nothing that reflects the change in the (relative) frame\naddress after .LIND0.  That region really has to be moved outside of\nthe .cfi_startproc/.cfi_endproc bracket.\n\nThis patch adds TARGET_INDIRECT_BRANCH_REGISTER to force indirect\nbranch via register whenever -mindirect-branch= is used.  Now,\n-mindirect-branch=thunk-extern -O2 on x86-64 GNU/Linux generates:\n\n_Z1fP1C:\n.LFB0:\n\t.cfi_startproc\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset 3, -16\n\tmovq\t(%rdi), %rax\n\tmovq\t%rdi, %rbx\n\tmovq\t16(%rax), %rax\n\tcall\t__x86_indirect_thunk_rax\n\tmovq\t(%rbx), %rax\n\tmovq\t%rbx, %rdi\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tmovq\t16(%rax), %rax\n\tjmp\t__x86_indirect_thunk_rax\n\t.cfi_endproc\n\nso that \"-mindirect-branch=thunk-extern\" is equivalent to\n\"-mindirect-branch=thunk-extern -mindirect-branch-register\", which is\nused by Linux kernel.\n\ngcc/\n\n\tPR target/84039\n\t* config/i386/constraints.md (Bs): Replace\n\tix86_indirect_branch_register with\n\tTARGET_INDIRECT_BRANCH_REGISTER.\n\t(Bw): Likewise.\n\t* config/i386/i386.md (indirect_jump): Likewise.\n\t(tablejump): Likewise.\n\t(*sibcall_memory): Likewise.\n\t(*sibcall_value_memory): Likewise.\n\tPeepholes of indirect call and jump via memory: Likewise.\n\t(*sibcall_GOT_32): Disallowed for TARGET_INDIRECT_BRANCH_REGISTER.\n\t(*sibcall_value_GOT_32): Likewise.\n\t* config/i386/i386.opt: Likewise.\n\t* config/i386/predicates.md (indirect_branch_operand): Likewise.\n\t(GOT_memory_operand): Likewise.\n\t(call_insn_operand): Likewise.\n\t(sibcall_insn_operand): Likewise.\n\t(GOT32_symbol_operand): Likewise.\n\t* config/i386/i386.h (TARGET_INDIRECT_BRANCH_REGISTER): New.\n\ngcc/testsuite/\n\n\tPR target/84039\n\t* gcc.target/i386/indirect-thunk-1.c: Updated.\n\t* gcc.target/i386/indirect-thunk-2.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-3.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-4.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-5.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-6.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-7.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-attr-1.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-attr-2.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-attr-3.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-attr-4.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-attr-5.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-attr-6.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-attr-7.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-bnd-1.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-bnd-2.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-bnd-3.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-bnd-4.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-extern-1.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-extern-2.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-extern-3.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-extern-4.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-extern-5.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-extern-6.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-extern-7.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-inline-1.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-inline-2.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-inline-3.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-inline-4.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-inline-5.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-inline-6.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-inline-7.c: Likewise.\n\t* gcc.target/i386/ret-thunk-9.c: Likewise.\n\t* gcc.target/i386/ret-thunk-10.c: Likewise.\n\t* gcc.target/i386/ret-thunk-11.c: Likewise.\n\t* gcc.target/i386/ret-thunk-12.c: Likewise.\n\t* gcc.target/i386/ret-thunk-13.c: Likewise.\n\t* gcc.target/i386/ret-thunk-14.c: Likewise.\n\t* gcc.target/i386/ret-thunk-15.c: Likewise.\n\nFrom-SVN: r258001", "tree": {"sha": "5accf513fe52169d1b14dfc30b5cf254fda89dda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5accf513fe52169d1b14dfc30b5cf254fda89dda"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "94e16982e6f26d9d0db20bdeed01741b1cb1018f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94e16982e6f26d9d0db20bdeed01741b1cb1018f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94e16982e6f26d9d0db20bdeed01741b1cb1018f"}], "stats": {"total": 333, "additions": 192, "deletions": 141}, "files": [{"sha": "5aa9e591bde663cc5c051ebfc422713892231ef8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -1,3 +1,25 @@\n+2018-02-26  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/84039\n+\t* config/i386/constraints.md (Bs): Replace\n+\tix86_indirect_branch_register with\n+\tTARGET_INDIRECT_BRANCH_REGISTER.\n+\t(Bw): Likewise.\n+\t* config/i386/i386.md (indirect_jump): Likewise.\n+\t(tablejump): Likewise.\n+\t(*sibcall_memory): Likewise.\n+\t(*sibcall_value_memory): Likewise.\n+\tPeepholes of indirect call and jump via memory: Likewise.\n+\t(*sibcall_GOT_32): Disallowed for TARGET_INDIRECT_BRANCH_REGISTER.\n+\t(*sibcall_value_GOT_32): Likewise.\n+\t* config/i386/i386.opt: Likewise.\n+\t* config/i386/predicates.md (indirect_branch_operand): Likewise.\n+\t(GOT_memory_operand): Likewise.\n+\t(call_insn_operand): Likewise.\n+\t(sibcall_insn_operand): Likewise.\n+\t(GOT32_symbol_operand): Likewise.\n+\t* config/i386/i386.h (TARGET_INDIRECT_BRANCH_REGISTER): New.\n+\n 2018-02-26  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR rtl-optimization/83496"}, {"sha": "d026968c4c906cd42602480d542760bd1bf9db1b", "filename": "gcc/config/i386/constraints.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Fconfig%2Fi386%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Fconfig%2Fi386%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fconstraints.md?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -225,15 +225,15 @@\n \n (define_constraint \"Bs\"\n   \"@internal Sibcall memory operand.\"\n-  (ior (and (not (match_test \"ix86_indirect_branch_register\"))\n+  (ior (and (not (match_test \"TARGET_INDIRECT_BRANCH_REGISTER\"))\n \t    (not (match_test \"TARGET_X32\"))\n \t    (match_operand 0 \"sibcall_memory_operand\"))\n        (and (match_test \"TARGET_X32 && Pmode == DImode\")\n \t    (match_operand 0 \"GOT_memory_operand\"))))\n \n (define_constraint \"Bw\"\n   \"@internal Call memory operand.\"\n-  (ior (and (not (match_test \"ix86_indirect_branch_register\"))\n+  (ior (and (not (match_test \"TARGET_INDIRECT_BRANCH_REGISTER\"))\n \t    (not (match_test \"TARGET_X32\"))\n \t    (match_operand 0 \"memory_operand\"))\n        (and (match_test \"TARGET_X32 && Pmode == DImode\")"}, {"sha": "6f3ae683d74a92ea66e64acb4a98c188bcfba9d7", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -2709,6 +2709,10 @@ extern void debug_dispatch_window (int);\n #define TARGET_PREFER_AVX256\t(TARGET_PREFER_AVX128 \\\n \t\t\t\t || prefer_vector_width_type == PVW_AVX256)\n \n+#define TARGET_INDIRECT_BRANCH_REGISTER \\\n+  (ix86_indirect_branch_register \\\n+   || cfun->machine->indirect_branch_type != indirect_branch_keep)\n+\n #define IX86_HLE_ACQUIRE (1 << 16)\n #define IX86_HLE_RELEASE (1 << 17)\n "}, {"sha": "85e4b07cd0f73d7f4f0c1003ca8a5924630488cd", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -12311,7 +12311,7 @@\n   [(set (pc) (match_operand 0 \"indirect_branch_operand\"))]\n   \"\"\n {\n-  if (TARGET_X32 || ix86_indirect_branch_register)\n+  if (TARGET_X32 || TARGET_INDIRECT_BRANCH_REGISTER)\n     operands[0] = convert_memory_address (word_mode, operands[0]);\n   cfun->machine->has_local_indirect_jump = true;\n })\n@@ -12365,7 +12365,7 @@\n \t\t\t\t\t OPTAB_DIRECT);\n     }\n \n-  if (TARGET_X32 || ix86_indirect_branch_register)\n+  if (TARGET_X32 || TARGET_INDIRECT_BRANCH_REGISTER)\n     operands[0] = convert_memory_address (word_mode, operands[0]);\n   cfun->machine->has_local_indirect_jump = true;\n })\n@@ -12595,7 +12595,10 @@\n \t\t     (match_operand:SI 0 \"register_no_elim_operand\" \"U\")\n \t\t     (match_operand:SI 1 \"GOT32_symbol_operand\"))))\n \t (match_operand 2))]\n-  \"!TARGET_MACHO && !TARGET_64BIT && SIBLING_CALL_P (insn)\"\n+  \"!TARGET_MACHO\n+  && !TARGET_64BIT\n+  && !TARGET_INDIRECT_BRANCH_REGISTER\n+  && SIBLING_CALL_P (insn)\"\n {\n   rtx fnaddr = gen_rtx_PLUS (SImode, operands[0], operands[1]);\n   fnaddr = gen_const_mem (SImode, fnaddr);\n@@ -12614,7 +12617,7 @@\n   [(call (mem:QI (match_operand:W 0 \"memory_operand\" \"m\"))\n \t (match_operand 1))\n    (unspec [(const_int 0)] UNSPEC_PEEPSIB)]\n-  \"!TARGET_X32 && !ix86_indirect_branch_register\"\n+  \"!TARGET_X32 && !TARGET_INDIRECT_BRANCH_REGISTER\"\n   \"* return ix86_output_call_insn (insn, operands[0]);\"\n   [(set_attr \"type\" \"call\")])\n \n@@ -12624,7 +12627,7 @@\n    (call (mem:QI (match_dup 0))\n \t (match_operand 3))]\n   \"!TARGET_X32\n-   && !ix86_indirect_branch_register\n+   && !TARGET_INDIRECT_BRANCH_REGISTER\n    && SIBLING_CALL_P (peep2_next_insn (1))\n    && !reg_mentioned_p (operands[0],\n \t\t\tCALL_INSN_FUNCTION_USAGE (peep2_next_insn (1)))\"\n@@ -12639,7 +12642,7 @@\n    (call (mem:QI (match_dup 0))\n \t (match_operand 3))]\n   \"!TARGET_X32\n-   && !ix86_indirect_branch_register\n+   && !TARGET_INDIRECT_BRANCH_REGISTER\n    && SIBLING_CALL_P (peep2_next_insn (2))\n    && !reg_mentioned_p (operands[0],\n \t\t\tCALL_INSN_FUNCTION_USAGE (peep2_next_insn (2)))\"\n@@ -12737,7 +12740,7 @@\n         (match_operand:W 1 \"memory_operand\"))\n    (set (pc) (match_dup 0))]\n   \"!TARGET_X32\n-   && !ix86_indirect_branch_register\n+   && !TARGET_INDIRECT_BRANCH_REGISTER\n    && peep2_reg_dead_p (2, operands[0])\"\n   [(set (pc) (match_dup 1))])\n \n@@ -12798,7 +12801,10 @@\n \t\t\t  (match_operand:SI 1 \"register_no_elim_operand\" \"U\")\n \t\t\t  (match_operand:SI 2 \"GOT32_symbol_operand\"))))\n \t (match_operand 3)))]\n-  \"!TARGET_MACHO && !TARGET_64BIT && SIBLING_CALL_P (insn)\"\n+  \"!TARGET_MACHO\n+   && !TARGET_64BIT\n+   && !TARGET_INDIRECT_BRANCH_REGISTER\n+   && SIBLING_CALL_P (insn)\"\n {\n   rtx fnaddr = gen_rtx_PLUS (SImode, operands[1], operands[2]);\n   fnaddr = gen_const_mem (SImode, fnaddr);\n@@ -12819,7 +12825,7 @@\n  \t(call (mem:QI (match_operand:W 1 \"memory_operand\" \"m\"))\n \t      (match_operand 2)))\n    (unspec [(const_int 0)] UNSPEC_PEEPSIB)]\n-  \"!TARGET_X32 && !ix86_indirect_branch_register\"\n+  \"!TARGET_X32 && !TARGET_INDIRECT_BRANCH_REGISTER\"\n   \"* return ix86_output_call_insn (insn, operands[1]);\"\n   [(set_attr \"type\" \"callv\")])\n \n@@ -12830,7 +12836,7 @@\n    (call (mem:QI (match_dup 0))\n \t\t (match_operand 3)))]\n   \"!TARGET_X32\n-   && !ix86_indirect_branch_register\n+   && !TARGET_INDIRECT_BRANCH_REGISTER\n    && SIBLING_CALL_P (peep2_next_insn (1))\n    && !reg_mentioned_p (operands[0],\n \t\t\tCALL_INSN_FUNCTION_USAGE (peep2_next_insn (1)))\"\n@@ -12847,7 +12853,7 @@\n \t(call (mem:QI (match_dup 0))\n \t      (match_operand 3)))]\n   \"!TARGET_X32\n-   && !ix86_indirect_branch_register\n+   && !TARGET_INDIRECT_BRANCH_REGISTER\n    && SIBLING_CALL_P (peep2_next_insn (2))\n    && !reg_mentioned_p (operands[0],\n \t\t\tCALL_INSN_FUNCTION_USAGE (peep2_next_insn (2)))\""}, {"sha": "f6cdc86fc5f8f4fa19b44eee8e049e25e53e412f", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -665,7 +665,7 @@\n ;; Test for a valid operand for indirect branch.\n (define_predicate \"indirect_branch_operand\"\n   (ior (match_operand 0 \"register_operand\")\n-       (and (not (match_test \"ix86_indirect_branch_register\"))\n+       (and (not (match_test \"TARGET_INDIRECT_BRANCH_REGISTER\"))\n \t    (not (match_test \"TARGET_X32\"))\n \t    (match_operand 0 \"memory_operand\"))))\n \n@@ -709,7 +709,7 @@\n   (ior (match_test \"constant_call_address_operand\n \t\t     (op, mode == VOIDmode ? mode : Pmode)\")\n        (match_operand 0 \"call_register_no_elim_operand\")\n-       (and (not (match_test \"ix86_indirect_branch_register\"))\n+       (and (not (match_test \"TARGET_INDIRECT_BRANCH_REGISTER\"))\n \t    (ior (and (not (match_test \"TARGET_X32\"))\n \t\t      (match_operand 0 \"memory_operand\"))\n \t\t (and (match_test \"TARGET_X32 && Pmode == DImode\")\n@@ -720,7 +720,7 @@\n   (ior (match_test \"constant_call_address_operand\n \t\t     (op, mode == VOIDmode ? mode : Pmode)\")\n        (match_operand 0 \"register_no_elim_operand\")\n-       (and (not (match_test \"ix86_indirect_branch_register\"))\n+       (and (not (match_test \"TARGET_INDIRECT_BRANCH_REGISTER\"))\n \t    (ior (and (not (match_test \"TARGET_X32\"))\n \t\t      (match_operand 0 \"sibcall_memory_operand\"))\n \t\t (and (match_test \"TARGET_X32 && Pmode == DImode\")"}, {"sha": "bb7a9e99ff6246c3d49c90d8e2974ac002f82e64", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -1,3 +1,46 @@\n+2018-02-26  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/84039\n+\t* gcc.target/i386/indirect-thunk-1.c: Updated.\n+\t* gcc.target/i386/indirect-thunk-2.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-3.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-4.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-5.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-6.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-7.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-attr-1.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-attr-2.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-attr-3.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-attr-4.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-attr-5.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-attr-6.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-attr-7.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-bnd-1.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-bnd-2.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-bnd-3.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-bnd-4.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-extern-1.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-extern-2.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-extern-3.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-extern-4.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-extern-5.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-extern-6.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-extern-7.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-inline-1.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-inline-2.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-inline-3.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-inline-4.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-inline-5.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-inline-6.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-inline-7.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-9.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-10.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-11.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-12.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-13.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-14.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-15.c: Likewise.\n+\n 2018-02-26  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc.c-torture/execute/20180226-1.c: New test."}, {"sha": "6e94d2c48655534acc4291be3dc8e021ceeba10e", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-1.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -11,9 +11,8 @@ male_indirect_jump (long offset)\n   dispatch(offset);\n }\n \n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*_?dispatch\" { target { { ! x32 } && *-*-linux* } } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk\" { target { ! x32 } } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" { target x32 } } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n /* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler {\\tpause} } } */"}, {"sha": "3c467078964b9c941ad311114da42f9520f24d48", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-2.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-2.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -11,9 +11,8 @@ male_indirect_jump (long offset)\n   dispatch[offset](offset);\n }\n \n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*_?dispatch\" { target { { ! x32 } && *-*-linux* } } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk\" { target { ! x32 } } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" { target x32 } } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n /* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler {\\tpause} } } */"}, {"sha": "e4c9b885d50b762995c8a2358727dcee9a5e78dd", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-3.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-3.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -12,9 +12,8 @@ male_indirect_jump (long offset)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*_?dispatch\" { target { { ! x32 } && *-*-linux* } } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk\" { target { ! x32 } } } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" { target x32 } } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n /* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler {\\tpause} } } */"}, {"sha": "b22554ae2823ca7b85f1d6f8af72aae34ccb9e0b", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-4.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-4.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -12,9 +12,8 @@ male_indirect_jump (long offset)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*_?dispatch\" { target { { ! x32 } && *-*-linux* } } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk\" { target { ! x32 } } } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" { target x32 } } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n /* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler {\\tpause} } } */"}, {"sha": "fb26c005e80dbc60a4d5e53e433d9278e8aa6d5a", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-5.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-5.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -9,8 +9,10 @@ foo (void)\n   bar ();\n }\n \n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*bar@GOT\" } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk\" } } */\n+/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*bar@GOT\" { target x32 } } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk\" { target x32 } } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*bar@GOT\" { target { ! x32 } } } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" { target { ! x32 } } } } */\n /* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler {\\tpause} } } */"}, {"sha": "8bc45ff68ce9415e164fb1f2241cada082b6e54e", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-6.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-6.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -10,9 +10,13 @@ foo (void)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*bar@GOT\" } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk\" } } */\n-/* { dg-final { scan-assembler-times \"jmp\\[ \\t\\]*\\.LIND\" 2 } } */\n-/* { dg-final { scan-assembler-times \"call\\[ \\t\\]*\\.LIND\" 2 } } */\n+/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*bar@GOT\" { target x32 } } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk\" { target x32 } } } */\n+/* { dg-final { scan-assembler-times \"jmp\\[ \\t\\]*\\.LIND\" 2 { target x32 } } } */\n+/* { dg-final { scan-assembler-times \"call\\[ \\t\\]*\\.LIND\" 2 { target x32 } } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*bar@GOT\" { target { ! x32 } } } } */\n+/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" { target { ! x32 } } } } */\n+/* { dg-final { scan-assembler-times \"jmp\\[ \\t\\]*\\.LIND\" 1 { target { ! x32 } } } } */\n+/* { dg-final { scan-assembler-times \"call\\[ \\t\\]*\\.LIND\" 1 { target { ! x32 } } } } */\n /* { dg-final { scan-assembler {\\tpause} } } */\n /* { dg-final { scan-assembler {\\tlfence} } } */"}, {"sha": "3c72036dbaf43a4309d73eda3e03b8ce40cfc69d", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-7.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-7.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -35,9 +35,8 @@ bar (int i)\n     }\n }\n \n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*\\.L\\[0-9\\]+\\\\(,%\" { target { { ! x32 } && *-*-linux* } } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk\" { target { ! x32 } } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" { target x32 } } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*\\.L\\[0-9\\]+\\\\(,%\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n /* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler {\\tpause} } } */"}, {"sha": "7106407b83d0f7f40b04930bd8f20023b783bfc0", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-attr-1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-1.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -14,9 +14,8 @@ male_indirect_jump (long offset)\n   dispatch(offset);\n }\n \n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*_?dispatch\" { target { { ! x32 } && *-*-linux* } } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk\" { target { ! x32 } } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" { target x32 } } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n /* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler {\\tpause} } } */"}, {"sha": "27c7e5b029b4592873b43255e2edd488cebfba81", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-attr-2.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-2.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -12,9 +12,8 @@ male_indirect_jump (long offset)\n   dispatch[offset](offset);\n }\n \n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*_?dispatch\" { target { { ! x32 } && *-*-linux* } } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk\" { target { ! x32 } } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" { target x32 } } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n /* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler {\\tpause} } } */"}, {"sha": "89a2bac84032c7f30942b9b6a5326500fac1c40c", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-attr-3.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-3.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -14,10 +14,9 @@ male_indirect_jump (long offset)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*_?dispatch\" { target { { ! x32 } && *-*-linux* } } } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n /* { dg-final { scan-assembler-times \"jmp\\[ \\t\\]*\\.LIND\" 2 } } */\n /* { dg-final { scan-assembler-times \"call\\[ \\t\\]*\\.LIND\" 2 } } */\n /* { dg-final { scan-assembler {\\tpause} } } */\n /* { dg-final { scan-assembler {\\tlfence} } } */\n /* { dg-final { scan-assembler-not \"__x86_indirect_thunk\" } } */\n-/* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" { target x32 } } } */"}, {"sha": "3eb83c3779aacd9d308ea218c5d6fef46f62c73e", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-attr-4.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-4.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -13,10 +13,9 @@ male_indirect_jump (long offset)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*_?dispatch\" { target { { ! x32 } && *-*-linux* } } } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n /* { dg-final { scan-assembler-times \"jmp\\[ \\t\\]*\\.LIND\" 2 } } */\n /* { dg-final { scan-assembler-times \"call\\[ \\t\\]*\\.LIND\" 2 } } */\n /* { dg-final { scan-assembler {\\tpause} } } */\n /* { dg-final { scan-assembler {\\tlfence} } } */\n /* { dg-final { scan-assembler-not \"__x86_indirect_thunk\" } } */\n-/* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" { target x32 } } } */"}, {"sha": "0098dd1133d7b653a248b41c40ea7800ce2b4a3a", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-attr-5.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-5.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -14,9 +14,8 @@ male_indirect_jump (long offset)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*_?dispatch\" { target { { ! x32 } && *-*-linux* } } } } */\n-/* { dg-final { scan-assembler-times \"jmp\\[ \\t\\]*\\.LIND\" 1 { target { ! x32 } } } } */\n-/* { dg-final { scan-assembler-times \"call\\[ \\t\\]*\\.LIND\" 1 { target { ! x32 } } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk\" { target { ! x32 } } } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" { target x32 } } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n /* { dg-final { scan-assembler-not {\\t(lfence|pause)} } } */\n+/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler-not \"call\\[ \\t\\]*\\.LIND\" } } */"}, {"sha": "ece8de15a4bb902da3424d57e28eaec5550181a1", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-attr-6.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-6.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -13,9 +13,8 @@ male_indirect_jump (long offset)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*_?dispatch\" { target { { ! x32 } && *-*-linux* } } } } */\n-/* { dg-final { scan-assembler-times \"jmp\\[ \\t\\]*\\.LIND\" 1 { target { ! x32 } } } } */\n-/* { dg-final { scan-assembler-times \"call\\[ \\t\\]*\\.LIND\" 1 { target { ! x32 } } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk\" { target { ! x32 } } } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" { target x32 } } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n /* { dg-final { scan-assembler-not {\\t(lfence|pause)} } } */\n+/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler-not \"call\\[ \\t\\]*\\.LIND\" } } */"}, {"sha": "d53fc887dcc1eadbc44c4c89e33e6fc2d2375f0c", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-attr-7.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-7.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -36,9 +36,8 @@ bar (int i)\n     }\n }\n \n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*\\.L\\[0-9\\]+\\\\(,%\" { target { { ! x32 } && *-*-linux* } } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" { target x32 } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk\" } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*\\.L\\[0-9\\]+\\\\(,%\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n /* { dg-final { scan-assembler-not {\\t(lfence|pause)} } } */\n /* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler-not \"call\\[ \\t\\]*\\.LIND\" } } */"}, {"sha": "73d16baddc7e743caafdac2e74305dbc03933ab0", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-bnd-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-bnd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-bnd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-bnd-1.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -10,9 +10,9 @@ foo (void)\n   dispatch (buf);\n }\n \n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*_?dispatch\" { target { { ! x32 } && *-*-linux* } } } } */\n-/* { dg-final { scan-assembler \"pushq\\[ \\t\\]%rax\" { target x32 } } } */\n-/* { dg-final { scan-assembler \"bnd jmp\\[ \\t\\]*__x86_indirect_thunk_bnd\" } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler \"bnd jmp\\[ \\t\\]*__x86_indirect_thunk_bnd_rax\" { target lp64 } } } */\n+/* { dg-final { scan-assembler \"bnd call\\[ \\t\\]*__x86_indirect_thunk_bnd_eax\" { target ia32 } } } */\n /* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler \"bnd call\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler \"bnd ret\" } } */"}, {"sha": "856751ac2241aa57306aac9f8897b0d5046a1975", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-bnd-2.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-bnd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-bnd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-bnd-2.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -11,10 +11,8 @@ foo (void)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*_?dispatch\" { target { { ! x32 } && *-*-linux* } } } } */\n-/* { dg-final { scan-assembler \"pushq\\[ \\t\\]%rax\" { target x32 } } } */\n-/* { dg-final { scan-assembler \"bnd jmp\\[ \\t\\]*__x86_indirect_thunk_bnd\" } } */\n-/* { dg-final { scan-assembler \"bnd jmp\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler \"bnd call\\[ \\t\\]*__x86_indirect_thunk_bnd_(r|e)ax\" } } */\n /* { dg-final { scan-assembler \"bnd call\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler \"bnd ret\" } } */\n /* { dg-final { scan-assembler {\\tpause} } } */"}, {"sha": "42312f655888be6d12608e3196e64c1d8ac2aea7", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-bnd-3.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-bnd-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-bnd-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-bnd-3.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -10,8 +10,9 @@ foo (void)\n   bar (buf);\n }\n \n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*bar@GOT\" } } */\n-/* { dg-final { scan-assembler \"bnd jmp\\[ \\t\\]*__x86_indirect_thunk_bnd\" } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*bar@GOT\" } } */\n+/* { dg-final { scan-assembler \"bnd jmp\\[ \\t\\]*__x86_indirect_thunk_bnd_rax\" { target lp64 } } } */\n+/* { dg-final { scan-assembler \"bnd call\\[ \\t\\]*__x86_indirect_thunk_bnd_eax\" { target ia32 } } } */\n /* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler \"bnd call\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler \"bnd ret\" } } */"}, {"sha": "8850f2ffca4f4bfe6155ba5b0703968bbd825ac9", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-bnd-4.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-bnd-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-bnd-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-bnd-4.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -11,10 +11,9 @@ foo (void)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*bar@GOT\" } } */\n-/* { dg-final { scan-assembler \"bnd jmp\\[ \\t\\]*__x86_indirect_thunk\" } } */\n-/* { dg-final { scan-assembler \"bnd jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler-times \"bnd call\\[ \\t\\]*\\.LIND\" 2 } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*bar@GOT\" } } */\n+/* { dg-final { scan-assembler \"bnd call\\[ \\t\\]*__x86_indirect_thunk_bnd_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler-times \"bnd call\\[ \\t\\]*\\.LIND\" 1 } } */\n /* { dg-final { scan-assembler \"bnd ret\" } } */\n /* { dg-final { scan-assembler {\\tpause} } } */\n /* { dg-final { scan-assembler {\\tlfence} } } */"}, {"sha": "c09dd0afd2d693c2c44f3ff19e90635b1772aef7", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-extern-1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-1.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -11,9 +11,8 @@ male_indirect_jump (long offset)\n   dispatch(offset);\n }\n \n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*_?dispatch\" { target { { ! x32 } && *-*-linux* } } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk\" { target { ! x32 } } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" { target x32 } } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n /* { dg-final { scan-assembler-not {\\t(lfence|pause)} } } */\n /* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler-not \"call\\[ \\t\\]*\\.LIND\" } } */"}, {"sha": "826425a5115021d1b3c836f2afda53a07b61731c", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-extern-2.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-2.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -11,9 +11,8 @@ male_indirect_jump (long offset)\n   dispatch[offset](offset);\n }\n \n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*_?dispatch\" { target { { ! x32 } && *-*-linux* } } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk\" { target { ! x32 } } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" { target x32 } } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n /* { dg-final { scan-assembler-not {\\t(lfence|pause)} } } */\n /* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler-not \"call\\[ \\t\\]*\\.LIND\" } } */"}, {"sha": "385626850a205b5577a3febf0f6f3d9d8928369f", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-extern-3.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-3.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -12,9 +12,8 @@ male_indirect_jump (long offset)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*_?dispatch\" { target { { ! x32 } && *-*-linux* } } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk\" { target { ! x32 } } } } */\n-/* { dg-final { scan-assembler-times \"jmp\\[ \\t\\]*\\.LIND\" 1 { target { ! x32 } } } } */\n-/* { dg-final { scan-assembler-times \"call\\[ \\t\\]*\\.LIND\" 1 { target { ! x32 } } } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" { target x32 } } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n /* { dg-final { scan-assembler-not {\\t(lfence|pause)} } } */\n+/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler-not \"call\\[ \\t\\]*\\.LIND\" } } */"}, {"sha": "1ae49b137cae59105ec41587bad1f4957adfa5a7", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-extern-4.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-4.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -12,9 +12,7 @@ male_indirect_jump (long offset)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*_?dispatch\" { target { { ! x32 } && *-*-linux* } } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk\" { target { ! x32 } } } } */\n-/* { dg-final { scan-assembler-times \"jmp\\[ \\t\\]*\\.LIND\" 1 { target { ! x32 } } } } */\n-/* { dg-final { scan-assembler-times \"call\\[ \\t\\]*\\.LIND\" 1 { target { ! x32 } } } } */\n /* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" { target x32 } } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n /* { dg-final { scan-assembler-not {\\t(lfence|pause)} } } */"}, {"sha": "53282390977d949efedf01666aadcf7016e1c654", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-extern-5.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-5.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -9,8 +9,10 @@ foo (void)\n   bar ();\n }\n \n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*bar@GOT\" } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk\" } } */\n+/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*bar@GOT\" { target x32 } } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk\" { target x32 } } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*bar@GOT\" { target { ! x32 } } } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" { target { ! x32 } } } } */\n /* { dg-final { scan-assembler-not {\\t(lfence|pause)} } } */\n /* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler-not \"call\\[ \\t\\]*\\.LIND\" } } */"}, {"sha": "8ae43482d0cb3e139615edf5253e07fcbbc69f5e", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-extern-6.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-6.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -10,8 +10,8 @@ foo (void)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*bar@GOT\" } } */\n-/* { dg-final { scan-assembler-times \"jmp\\[ \\t\\]*\\.LIND\" 1 } } */\n-/* { dg-final { scan-assembler-times \"call\\[ \\t\\]*\\.LIND\" 1 } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk\" } } */\n+/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*bar@GOT\" { target x32 } } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk\" { target x32 } } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*bar@GOT\" { target { ! x32 } } } } */\n+/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" { target { ! x32 } } } } */\n /* { dg-final { scan-assembler-not {\\t(lfence|pause)} } } */"}, {"sha": "2b9a33e93dca4e3443d3aeab3880c43caeac16d7", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-extern-7.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-7.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -35,9 +35,8 @@ bar (int i)\n     }\n }\n \n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*\\.L\\[0-9\\]+\\\\(,%\" { target { { ! x32 } && *-*-linux* } } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk\" { target { ! x32 } } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" { target x32 } } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*\\.L\\[0-9\\]+\\\\(,%\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n /* { dg-final { scan-assembler-not {\\t(lfence|pause)} } } */\n /* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler-not \"call\\[ \\t\\]*\\.LIND\" } } */"}, {"sha": "869d90408382eff3ce2922e35784121c8c0a4812", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-inline-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-1.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -11,7 +11,7 @@ male_indirect_jump (long offset)\n   dispatch(offset);\n }\n \n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*_?dispatch\" { target { { ! x32 } && *-*-linux* } } } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n /* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler {\\tpause} } } */"}, {"sha": "c5c16ed8bd83b6a4e4df646bcc32be1c4884d125", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-inline-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-2.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -11,7 +11,7 @@ male_indirect_jump (long offset)\n   dispatch[offset](offset);\n }\n \n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*_?dispatch\" { target { { ! x32 } && *-*-linux* } } } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n /* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler {\\tpause} } } */"}, {"sha": "4a63ebed8ab3959511c36210f8657c0ad0fb3d0e", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-inline-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-3.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -12,7 +12,7 @@ male_indirect_jump (long offset)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*_?dispatch\" { target { { ! x32 } && *-*-linux* } } } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n /* { dg-final { scan-assembler-times \"jmp\\[ \\t\\]*\\.LIND\" 2 } } */\n /* { dg-final { scan-assembler-times \"call\\[ \\t\\]*\\.LIND\" 2 } } */\n /* { dg-final { scan-assembler-times {\\tpause} 1 } } */"}, {"sha": "a395ffca018b1982c47d0798540cf18bf8b34c12", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-inline-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-4.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -12,7 +12,7 @@ male_indirect_jump (long offset)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*_?dispatch\" { target { { ! x32 } && *-*-linux* } } } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n /* { dg-final { scan-assembler-times \"jmp\\[ \\t\\]*\\.LIND\" 2 } } */\n /* { dg-final { scan-assembler-times \"call\\[ \\t\\]*\\.LIND\" 2 } } */\n /* { dg-final { scan-assembler-times {\\tpause} 1 } } */"}, {"sha": "21cbfd39582a265d8ef58283913c87033a6cba58", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-inline-5.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-5.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -9,7 +9,8 @@ foo (void)\n   bar ();\n }\n \n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*bar@GOT\" } } */\n+/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*bar@GOT\" { target x32 } } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*bar@GOT\" { target { ! x32 } } } } */\n /* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler {\\tpause} } } */"}, {"sha": "d1300f18dc7ac3b2b69a5ddc5a132702fdc6c9ef", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-inline-6.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-6.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -10,7 +10,8 @@ foo (void)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*bar@GOT\" } } */\n+/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*bar@GOT\" { target x32 } } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*bar@GOT\" { target { ! x32 } } } } */\n /* { dg-final { scan-assembler-times \"jmp\\[ \\t\\]*\\.LIND\" 2 } } */\n /* { dg-final { scan-assembler-times \"call\\[ \\t\\]*\\.LIND\" 2 } } */\n /* { dg-final { scan-assembler-times {\\tpause} 1 } } */"}, {"sha": "ea009245a58f79a7e565d27b4c4275355732dc4b", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-inline-7.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-7.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -35,8 +35,8 @@ bar (int i)\n     }\n }\n \n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*\\.L\\[0-9\\]+\\\\(,%\" { target { { ! x32 } && *-*-linux* } } } } */\n-/* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" { target x32 } } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*\\.L\\[0-9\\]+\\\\(,%\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%(r|e)ax\" } } */\n /* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler {\\tpause} } } */"}, {"sha": "b245d21b0020e0bbc15e0649c1ada553c267f9d8", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-10.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-10.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -15,9 +15,6 @@ foo (void)\n /* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*__x86_return_thunk\" } } */\n /* { dg-final { scan-assembler-times {\\tpause} 2 } } */\n /* { dg-final { scan-assembler-times {\\tlfence} 2 } } */\n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*_?bar\" { target { { ! x32 } && *-*-linux* } } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk\" { target { ! x32 } }  } } */\n-/* { dg-final { scan-assembler \"__x86_indirect_thunk:\" { target { ! x32 } }  } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" { target { x32 } }  } } */\n-/* { dg-final { scan-assembler \"__x86_indirect_thunk_(r|e)ax:\" { target { x32 } }  } } */\n-/* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" { target x32 } } } */\n+/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler \"__x86_indirect_thunk_(r|e)ax:\" } } */\n+/* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" } } */"}, {"sha": "ce0543e1181b9d6b183288d58bdb00f9face8a35", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-11.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-11.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -15,9 +15,6 @@ foo (void)\n /* { dg-final { scan-assembler-times {\\tlfence} 1 } } */\n /* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*_?bar\" { target { { ! x32 } && *-*-linux* } } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk\" { target { ! x32 } } } } */\n-/* { dg-final { scan-assembler \"__x86_indirect_thunk:\" { target { ! x32 } }  } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" { target { x32 } }  } } */\n-/* { dg-final { scan-assembler \"__x86_indirect_thunk_(r|e)ax:\" { target { x32 } }  } } */\n-/* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" { target x32 } } } */\n+/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler \"__x86_indirect_thunk_(r|e)ax:\" } } */\n+/* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" } } */"}, {"sha": "3b0023a0a6d43b51a705d6bb623e06264d360cf9", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-12.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-12.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -15,8 +15,6 @@ foo (void)\n /* { dg-final { scan-assembler-times {\\tlfence} 1 } } */\n /* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk\" { target { ! x32 } } } } */\n-/* { dg-final { scan-assembler \"__x86_indirect_thunk:\" { target { ! x32 } }  } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" { target { x32 } }  } } */\n-/* { dg-final { scan-assembler \"__x86_indirect_thunk_(r|e)ax:\" { target { x32 } }  } } */\n-/* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" { target x32 } } } */\n+/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler \"__x86_indirect_thunk_(r|e)ax:\" } } */\n+/* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" } } */"}, {"sha": "55f156c437677f53067844682ee43ad4b39d2a62", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-13.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-13.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -14,9 +14,8 @@ foo (void)\n /* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_return_thunk\" } } */\n /* { dg-final { scan-assembler-times {\\tpause} 2 } } */\n /* { dg-final { scan-assembler-times {\\tlfence} 2 } } */\n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*_?bar\" { target { { ! x32 } && *-*-linux* } } } } */\n /* { dg-final { scan-assembler-times \"jmp\\[ \\t\\]*\\.LIND\" 3 } } */\n /* { dg-final { scan-assembler-times \"call\\[ \\t\\]*\\.LIND\" 3 } } */\n /* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*__x86_indirect_thunk\" } } */\n-/* { dg-final { scan-assembler-not \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" { target { x32 } }  } } */\n-/* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" { target x32 } } } */\n+/* { dg-final { scan-assembler-not \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" } } */"}, {"sha": "1c790436a53e7043c42ed1adbf46e73544ba699f", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-14.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-14.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -16,7 +16,6 @@ foo (void)\n /* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*__x86_return_thunk\" } } */\n /* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*_?bar\" { target { { ! x32 } && *-*-linux* } } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk\" { target { ! x32 } } } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" { target { x32 } }  } } */\n-/* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" { target x32 } } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?bar\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" } } */"}, {"sha": "bc2bedf5a9c7b4c63c28f872df44ce0ead9d8472", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-15.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-15.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -16,7 +16,6 @@ foo (void)\n /* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler-times {\\tpause} 1 } } */\n /* { dg-final { scan-assembler-times {\\tlfence} 1 } } */\n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*_?bar\" { target { { ! x32 } && *-*-linux* } } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk\" { target { ! x32 } } } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" { target x32 } } } */\n-/* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" { target x32 } } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?bar\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" } } */"}, {"sha": "b75fc9219b017be7f9d7e3b8ac6aa143683bcfe5", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-9.c", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c601b2c0e406cde6f94a905635d4fcdf51d3de/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-9.c?ref=c2c601b2c0e406cde6f94a905635d4fcdf51d3de", "patch": "@@ -14,11 +14,8 @@ foo (void)\n /* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n /* { dg-final { scan-assembler \"__x86_indirect_thunk:\" } } */\n-/* { dg-final { scan-assembler-times {\\tpause} 1 { target { ! x32 } } } } */\n-/* { dg-final { scan-assembler-times {\\tlfence} 1 { target { ! x32 } } } } */\n-/* { dg-final { scan-assembler \"push(?:l|q)\\[ \\t\\]*_?bar\" { target { { ! x32 } && *-*-linux* } } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk\" { target { ! x32 } } } } */\n-/* { dg-final { scan-assembler-times {\\tpause} 2 { target { x32 } } } } */\n-/* { dg-final { scan-assembler-times {\\tlfence} 2 { target { x32 } } } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" { target { x32 } } } } */\n-/* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" { target x32 } } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?bar\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler-times {\\tpause} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tlfence} 2 } } */\n+/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" } } */"}]}