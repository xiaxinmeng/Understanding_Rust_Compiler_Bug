{"sha": "ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY1ZjU5ZjYzOTVhZTJkYjZjMDJjOGJlZDRkYWQ5YTNkZDhjNTYzZA==", "commit": {"author": {"name": "Ralf Wildenhues", "email": "Ralf.Wildenhues@gmx.de", "date": "2008-04-20T21:10:38Z"}, "committer": {"name": "Ralf Wildenhues", "email": "rwild@gcc.gnu.org", "date": "2008-04-20T21:10:38Z"}, "message": "Makefile.am: Fix most stamp rules to regenerate the links for all sources newer than the...\n\nlibstdc++-v3/\n\t* include/Makefile.am: Fix most stamp rules to regenerate\n\tthe links for all sources newer than the stamp file.\n\t* include/Makefile.in: Regenerate.\n\t* Makefile.in: Likewise.\n\t* src/Makefile.in: Likewise.\n\t* doc/Makefile.in: Likewise.\n\t* po/Makefile.in: Likewise.\n\t* libmath/Makefile.in: Likewise.\n\t* libsupc++/Makefile.in: Likewise.\n\t* testsuite/Makefile.in: Likewise.\n\nFrom-SVN: r134492", "tree": {"sha": "a05884d69b8a55b7333f5066042ed228ab479d94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a05884d69b8a55b7333f5066042ed228ab479d94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d/comments", "author": null, "committer": null, "parents": [{"sha": "49339fa475b6644efaffa2dd85126d171e125297", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49339fa475b6644efaffa2dd85126d171e125297", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49339fa475b6644efaffa2dd85126d171e125297"}], "stats": {"total": 295, "additions": 113, "deletions": 182}, "files": [{"sha": "90a895bce4e7d3af06072aefe9e8df8f6dedadb9", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d", "patch": "@@ -1,3 +1,16 @@\n+2008-04-20  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* include/Makefile.am: Fix most stamp rules to regenerate\n+\tthe links for all sources newer than the stamp file.\n+\t* include/Makefile.in: Regenerate.\n+\t* Makefile.in: Likewise.\n+\t* src/Makefile.in: Likewise.\n+\t* doc/Makefile.in: Likewise.\n+\t* po/Makefile.in: Likewise.\n+\t* libmath/Makefile.in: Likewise.\n+\t* libsupc++/Makefile.in: Likewise.\n+\t* testsuite/Makefile.in: Likewise.\n+\n 2008-04-18  Paolo Bonzini  <bonzini@gnu.org>\n \n \tPR bootstrap/35457"}, {"sha": "d77cbc4b83fa7bf43733690b6bbab4389810824e", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d", "patch": "@@ -54,6 +54,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n+\t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/proginstall.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n \t$(top_srcdir)/../config/unwind_ipinfo.m4 \\"}, {"sha": "dc02af2cd5f8403256d1b97d81b91b9c7eeee0c2", "filename": "libstdc++-v3/doc/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in?ref=ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d", "patch": "@@ -49,6 +49,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n+\t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/proginstall.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n \t$(top_srcdir)/../config/unwind_ipinfo.m4 \\"}, {"sha": "7bfde7caa8c819caa8415907846336acca5f5525", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 46, "deletions": 91, "changes": 137, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d", "patch": "@@ -858,72 +858,46 @@ allcreated = \\\n # Here are the rules for building the headers\n all-local: ${allstamped} ${allcreated}\n \n-# This rule is slightly different, in that we must change the name of the\n-# local file from std_foo.h to foo.\n+# Ignore errors from 'mkdir -p' to avoid parallel make failure on\n+# systems with broken mkdir.  Call mkdir unconditionally because\n+# it is just as cheap to avoid going through the shell.\n+# Ignore errors from $(LN_S) because the links may already exist.\n stamp-std: ${std_headers}\n-\t@if [ ! -d \"${std_builddir}\" ]; then \\\n-\t  mkdir -p ${std_builddir} ;\\\n-\tfi ;\\\n-\tif [ ! -f stamp-std ]; then \\\n-\t  (cd ${std_builddir} && $(LN_S) $? . || true) ;\\\n-\tfi ;\\\n-\t$(STAMP) stamp-std\n+\t@-mkdir -p ${std_builddir}\n+\t@-cd ${std_builddir} && $(LN_S) $? . 2>/dev/null\n+\t@$(STAMP) stamp-std\n \n stamp-bits: ${bits_headers}\n-\t@if [ ! -d \"${bits_builddir}\" ]; then \\\n-\t  mkdir -p ${bits_builddir} ;\\\n-\tfi ;\\\n-\tif [ ! -f stamp-bits ]; then \\\n-\t  (cd ${bits_builddir} && $(LN_S) $? . || true) ;\\\n-\tfi ;\\\n-\t$(STAMP) stamp-bits\n-\n-stamp-c_base: ${c_base_headers} \n-\t@if [ ! -d \"${c_base_builddir}\" ]; then \\\n-\t  mkdir -p ${c_base_builddir} ;\\\n-\tfi ;\\\n-\tif [ ! -f stamp-c_base ]; then \\\n-\t  (cd ${c_base_builddir} && $(LN_S) $? . || true) ;\\\n-\tfi ;\\\n-\t$(STAMP) stamp-c_base\n+\t@-mkdir -p ${bits_builddir}\n+\t@-cd ${bits_builddir} && $(LN_S) $? . 2>/dev/null\n+\t@$(STAMP) stamp-bits\n+\n+stamp-c_base: ${c_base_headers}\n+\t@-mkdir -p ${c_base_builddir}\n+\t@-cd ${c_base_builddir} && $(LN_S) $? . 2>/dev/null\n+\t@$(STAMP) stamp-c_base\n \n stamp-c_base_extra: ${c_base_headers_extra}\n-\t@if [ ! -d \"${bits_builddir}\" ]; then \\\n-\t  mkdir -p ${bits_builddir} ;\\\n-\tfi ;\\\n-\tif [ ! -f stamp-c_base_extra ]; then \\\n-\t  (cd ${bits_builddir} && $(LN_S) $? . || true) ;\\\n-\tfi ;\\\n-\t$(STAMP) stamp-c_base_extra\n+\t@-mkdir -p ${bits_builddir}\n+\t@-cd ${bits_builddir} && $(LN_S) $? . 2>/dev/null\n+\t@$(STAMP) stamp-c_base_extra\n \n stamp-c_compatibility: ${c_compatibility_headers_extra}\n-\t@if [ ! -d \"${c_compatibility_builddir}\" ]; then \\\n-\t  mkdir -p ${c_compatibility_builddir} ;\\\n-\tfi ;\\\n-\tif [ ! -f stamp-c_compatibility ]; then \\\n-\t  if [ ! -z \"${c_compatibility_headers_extra}\" ]; then \\\n-\t    (cd ${c_compatibility_builddir} && $(LN_S) $? . || true) ;\\\n-\t  fi ;\\\n-\tfi ;\\\n-\t$(STAMP) stamp-c_compatibility\n+\t@-mkdir -p ${c_compatibility_builddir}\n+\t@-if [ ! -z \"${c_compatibility_headers_extra}\" ]; then \\\n+\t  cd ${c_compatibility_builddir} && $(LN_S) $? . 2>/dev/null ;\\\n+\tfi\n+\t@$(STAMP) stamp-c_compatibility\n \n stamp-backward: ${backward_headers}\n-\t@if [ ! -d \"${backward_builddir}\" ]; then \\\n-\t  mkdir -p ${backward_builddir} ;\\\n-\tfi ;\\\n-\tif [ ! -f stamp-backward ]; then \\\n-\t  (cd ${backward_builddir} && $(LN_S) $? . || true) ;\\\n-\tfi ;\\\n-\t$(STAMP) stamp-backward\n+\t@-mkdir -p ${backward_builddir}\n+\t@-cd ${backward_builddir} && $(LN_S) $? . 2>/dev/null\n+\t@$(STAMP) stamp-backward\n \n stamp-ext: ${ext_headers}\n-\t@if [ ! -d \"${ext_builddir}\" ]; then \\\n-\t    mkdir -p ${ext_builddir} ;\\\n-\tfi ;\\\n-\tif [ ! -f stamp-ext ]; then \\\n-\t  (cd ${ext_builddir} && $(LN_S) $? . || true) ;\\\n-\tfi ;\\\n-\t$(STAMP) stamp-ext\n+\t@-mkdir -p ${ext_builddir}\n+\t@-cd ${ext_builddir} && $(LN_S) $? . 2>/dev/null\n+\t@$(STAMP) stamp-ext\n \n # Have to deal with nested include directories, gah! Strip off source\n # directory before making the link.\n@@ -977,52 +951,33 @@ stamp-pb:\n \t$(STAMP) stamp-pb\n \n stamp-tr1: ${tr1_headers}\n-\t@if [ ! -d \"${tr1_builddir}\" ]; then \\\n-\t    mkdir -p ${tr1_builddir} ;\\\n-\tfi ;\\\n-\tif [ ! -f stamp-tr1 ]; then \\\n-\t  (cd ${tr1_builddir} && $(LN_S) $? . || true) ;\\\n-\tfi ;\\\n-\t$(STAMP) stamp-tr1\n+\t@-mkdir -p ${tr1_builddir}\n+\t@-cd ${tr1_builddir} && $(LN_S) $? . 2>/dev/null\n+\t@$(STAMP) stamp-tr1\n \n stamp-tr1-impl: ${tr1_impl_headers}\n-\t@if [ ! -d \"${tr1_impl_builddir}\" ]; then \\\n-\t    mkdir -p ${tr1_impl_builddir} ;\\\n-\tfi ;\\\n-\tif [ ! -f stamp-tr1-impl ]; then \\\n-\t  (cd ${tr1_impl_builddir} && $(LN_S) $? . || true) ;\\\n-\tfi ;\\\n-\t$(STAMP) stamp-tr1-impl\n+\t@-mkdir -p ${tr1_impl_builddir}\n+\t@-cd ${tr1_impl_builddir} && $(LN_S) $? . 2>/dev/null\n+\t@$(STAMP) stamp-tr1-impl\n \n stamp-debug: ${debug_headers}\n-\t@if [ ! -d \"${debug_builddir}\" ]; then \\\n-\t  mkdir -p ${debug_builddir} ;\\\n-\tfi ;\\\n-\tif [ ! -f stamp-debug ]; then \\\n-\t  (cd ${debug_builddir} && @LN_S@ $? . || true) ;\\\n-\tfi ;\\\n-\t$(STAMP) stamp-debug\n+\t@-mkdir -p ${debug_builddir}\n+\t@-cd ${debug_builddir} && $(LN_S) $? . 2>/dev/null\n+\t@$(STAMP) stamp-debug\n \n stamp-parallel: ${parallel_headers}\n-\t@if [ ! -d \"${parallel_builddir}\" ]; then \\\n-\t  mkdir -p ${parallel_builddir} ;\\\n-\tfi ;\\\n-\tif [ ! -f stamp-parallel ]; then \\\n-\t  (cd ${parallel_builddir} && @LN_S@ $? . || true) ;\\\n-\tfi ;\\\n-\t$(STAMP) stamp-parallel\n+\t@-mkdir -p ${parallel_builddir}\n+\t@-cd ${parallel_builddir} && $(LN_S) $? . 2>/dev/null\n+\t@$(STAMP) stamp-parallel\n \n stamp-${host_alias}:\n-\t@if [ ! -d ${host_builddir} ]; then \\\n-\t  mkdir -p ${host_builddir} ;\\\n-\tfi ;\\\n-\t$(STAMP) stamp-${host_alias}\n+\t@-mkdir -p ${host_builddir}\n+\t@$(STAMP) stamp-${host_alias}\n \n # Host includes static.\n # XXX Missing dependency info for {host_headers_extra}\n stamp-host: ${host_headers} ${host_headers_noinst} stamp-${host_alias}\n-\t@if [ ! -f stamp-host ]; then \\\n-\t  (cd ${host_builddir} ;\\\n+\t@cd ${host_builddir} && {\\\n \t  $(LN_S) ${host_headers} . || true ;\\\n \t  $(LN_S) ${glibcxx_srcdir}/$(BASIC_FILE_H) basic_file.h || true ;\\\n \t  $(LN_S) ${glibcxx_srcdir}/$(ALLOCATOR_H) c++allocator.h || true ;\\\n@@ -1031,8 +986,8 @@ stamp-host: ${host_headers} ${host_headers_noinst} stamp-${host_alias}\n \t  $(LN_S) ${glibcxx_srcdir}/$(CLOCALE_INTERNAL_H) . || true ;\\\n \t  $(LN_S) ${glibcxx_srcdir}/$(COMPATIBILITY_H) . || true ;\\\n \t  $(LN_S) ${glibcxx_srcdir}/$(CMESSAGES_H) messages_members.h || true ;\\\n-\t  $(LN_S) ${glibcxx_srcdir}/$(CTIME_H) time_members.h || true);\\\n-\tfi ;\\\n+\t  $(LN_S) ${glibcxx_srcdir}/$(CTIME_H) time_members.h || true;\\\n+\t} 2>/dev/null\n \t$(STAMP) stamp-host\n \n # Host includes dynamic."}, {"sha": "88c976ab71daceff972e2f22d5c1fce9ea91d01d", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 47, "deletions": 91, "changes": 138, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d", "patch": "@@ -49,6 +49,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n+\t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/proginstall.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n \t$(top_srcdir)/../config/unwind_ipinfo.m4 \\\n@@ -1260,72 +1261,46 @@ uninstall-am: uninstall-info-am\n # Here are the rules for building the headers\n all-local: ${allstamped} ${allcreated}\n \n-# This rule is slightly different, in that we must change the name of the\n-# local file from std_foo.h to foo.\n+# Ignore errors from 'mkdir -p' to avoid parallel make failure on\n+# systems with broken mkdir.  Call mkdir unconditionally because\n+# it is just as cheap to avoid going through the shell.\n+# Ignore errors from $(LN_S) because the links may already exist.\n stamp-std: ${std_headers}\n-\t@if [ ! -d \"${std_builddir}\" ]; then \\\n-\t  mkdir -p ${std_builddir} ;\\\n-\tfi ;\\\n-\tif [ ! -f stamp-std ]; then \\\n-\t  (cd ${std_builddir} && $(LN_S) $? . || true) ;\\\n-\tfi ;\\\n-\t$(STAMP) stamp-std\n+\t@-mkdir -p ${std_builddir}\n+\t@-cd ${std_builddir} && $(LN_S) $? . 2>/dev/null\n+\t@$(STAMP) stamp-std\n \n stamp-bits: ${bits_headers}\n-\t@if [ ! -d \"${bits_builddir}\" ]; then \\\n-\t  mkdir -p ${bits_builddir} ;\\\n-\tfi ;\\\n-\tif [ ! -f stamp-bits ]; then \\\n-\t  (cd ${bits_builddir} && $(LN_S) $? . || true) ;\\\n-\tfi ;\\\n-\t$(STAMP) stamp-bits\n-\n-stamp-c_base: ${c_base_headers} \n-\t@if [ ! -d \"${c_base_builddir}\" ]; then \\\n-\t  mkdir -p ${c_base_builddir} ;\\\n-\tfi ;\\\n-\tif [ ! -f stamp-c_base ]; then \\\n-\t  (cd ${c_base_builddir} && $(LN_S) $? . || true) ;\\\n-\tfi ;\\\n-\t$(STAMP) stamp-c_base\n+\t@-mkdir -p ${bits_builddir}\n+\t@-cd ${bits_builddir} && $(LN_S) $? . 2>/dev/null\n+\t@$(STAMP) stamp-bits\n+\n+stamp-c_base: ${c_base_headers}\n+\t@-mkdir -p ${c_base_builddir}\n+\t@-cd ${c_base_builddir} && $(LN_S) $? . 2>/dev/null\n+\t@$(STAMP) stamp-c_base\n \n stamp-c_base_extra: ${c_base_headers_extra}\n-\t@if [ ! -d \"${bits_builddir}\" ]; then \\\n-\t  mkdir -p ${bits_builddir} ;\\\n-\tfi ;\\\n-\tif [ ! -f stamp-c_base_extra ]; then \\\n-\t  (cd ${bits_builddir} && $(LN_S) $? . || true) ;\\\n-\tfi ;\\\n-\t$(STAMP) stamp-c_base_extra\n+\t@-mkdir -p ${bits_builddir}\n+\t@-cd ${bits_builddir} && $(LN_S) $? . 2>/dev/null\n+\t@$(STAMP) stamp-c_base_extra\n \n stamp-c_compatibility: ${c_compatibility_headers_extra}\n-\t@if [ ! -d \"${c_compatibility_builddir}\" ]; then \\\n-\t  mkdir -p ${c_compatibility_builddir} ;\\\n-\tfi ;\\\n-\tif [ ! -f stamp-c_compatibility ]; then \\\n-\t  if [ ! -z \"${c_compatibility_headers_extra}\" ]; then \\\n-\t    (cd ${c_compatibility_builddir} && $(LN_S) $? . || true) ;\\\n-\t  fi ;\\\n-\tfi ;\\\n-\t$(STAMP) stamp-c_compatibility\n+\t@-mkdir -p ${c_compatibility_builddir}\n+\t@-if [ ! -z \"${c_compatibility_headers_extra}\" ]; then \\\n+\t  cd ${c_compatibility_builddir} && $(LN_S) $? . 2>/dev/null ;\\\n+\tfi\n+\t@$(STAMP) stamp-c_compatibility\n \n stamp-backward: ${backward_headers}\n-\t@if [ ! -d \"${backward_builddir}\" ]; then \\\n-\t  mkdir -p ${backward_builddir} ;\\\n-\tfi ;\\\n-\tif [ ! -f stamp-backward ]; then \\\n-\t  (cd ${backward_builddir} && $(LN_S) $? . || true) ;\\\n-\tfi ;\\\n-\t$(STAMP) stamp-backward\n+\t@-mkdir -p ${backward_builddir}\n+\t@-cd ${backward_builddir} && $(LN_S) $? . 2>/dev/null\n+\t@$(STAMP) stamp-backward\n \n stamp-ext: ${ext_headers}\n-\t@if [ ! -d \"${ext_builddir}\" ]; then \\\n-\t    mkdir -p ${ext_builddir} ;\\\n-\tfi ;\\\n-\tif [ ! -f stamp-ext ]; then \\\n-\t  (cd ${ext_builddir} && $(LN_S) $? . || true) ;\\\n-\tfi ;\\\n-\t$(STAMP) stamp-ext\n+\t@-mkdir -p ${ext_builddir}\n+\t@-cd ${ext_builddir} && $(LN_S) $? . 2>/dev/null\n+\t@$(STAMP) stamp-ext\n \n # Have to deal with nested include directories, gah! Strip off source\n # directory before making the link.\n@@ -1379,52 +1354,33 @@ stamp-pb:\n \t$(STAMP) stamp-pb\n \n stamp-tr1: ${tr1_headers}\n-\t@if [ ! -d \"${tr1_builddir}\" ]; then \\\n-\t    mkdir -p ${tr1_builddir} ;\\\n-\tfi ;\\\n-\tif [ ! -f stamp-tr1 ]; then \\\n-\t  (cd ${tr1_builddir} && $(LN_S) $? . || true) ;\\\n-\tfi ;\\\n-\t$(STAMP) stamp-tr1\n+\t@-mkdir -p ${tr1_builddir}\n+\t@-cd ${tr1_builddir} && $(LN_S) $? . 2>/dev/null\n+\t@$(STAMP) stamp-tr1\n \n stamp-tr1-impl: ${tr1_impl_headers}\n-\t@if [ ! -d \"${tr1_impl_builddir}\" ]; then \\\n-\t    mkdir -p ${tr1_impl_builddir} ;\\\n-\tfi ;\\\n-\tif [ ! -f stamp-tr1-impl ]; then \\\n-\t  (cd ${tr1_impl_builddir} && $(LN_S) $? . || true) ;\\\n-\tfi ;\\\n-\t$(STAMP) stamp-tr1-impl\n+\t@-mkdir -p ${tr1_impl_builddir}\n+\t@-cd ${tr1_impl_builddir} && $(LN_S) $? . 2>/dev/null\n+\t@$(STAMP) stamp-tr1-impl\n \n stamp-debug: ${debug_headers}\n-\t@if [ ! -d \"${debug_builddir}\" ]; then \\\n-\t  mkdir -p ${debug_builddir} ;\\\n-\tfi ;\\\n-\tif [ ! -f stamp-debug ]; then \\\n-\t  (cd ${debug_builddir} && @LN_S@ $? . || true) ;\\\n-\tfi ;\\\n-\t$(STAMP) stamp-debug\n+\t@-mkdir -p ${debug_builddir}\n+\t@-cd ${debug_builddir} && $(LN_S) $? . 2>/dev/null\n+\t@$(STAMP) stamp-debug\n \n stamp-parallel: ${parallel_headers}\n-\t@if [ ! -d \"${parallel_builddir}\" ]; then \\\n-\t  mkdir -p ${parallel_builddir} ;\\\n-\tfi ;\\\n-\tif [ ! -f stamp-parallel ]; then \\\n-\t  (cd ${parallel_builddir} && @LN_S@ $? . || true) ;\\\n-\tfi ;\\\n-\t$(STAMP) stamp-parallel\n+\t@-mkdir -p ${parallel_builddir}\n+\t@-cd ${parallel_builddir} && $(LN_S) $? . 2>/dev/null\n+\t@$(STAMP) stamp-parallel\n \n stamp-${host_alias}:\n-\t@if [ ! -d ${host_builddir} ]; then \\\n-\t  mkdir -p ${host_builddir} ;\\\n-\tfi ;\\\n-\t$(STAMP) stamp-${host_alias}\n+\t@-mkdir -p ${host_builddir}\n+\t@$(STAMP) stamp-${host_alias}\n \n # Host includes static.\n # XXX Missing dependency info for {host_headers_extra}\n stamp-host: ${host_headers} ${host_headers_noinst} stamp-${host_alias}\n-\t@if [ ! -f stamp-host ]; then \\\n-\t  (cd ${host_builddir} ;\\\n+\t@cd ${host_builddir} && {\\\n \t  $(LN_S) ${host_headers} . || true ;\\\n \t  $(LN_S) ${glibcxx_srcdir}/$(BASIC_FILE_H) basic_file.h || true ;\\\n \t  $(LN_S) ${glibcxx_srcdir}/$(ALLOCATOR_H) c++allocator.h || true ;\\\n@@ -1433,8 +1389,8 @@ stamp-host: ${host_headers} ${host_headers_noinst} stamp-${host_alias}\n \t  $(LN_S) ${glibcxx_srcdir}/$(CLOCALE_INTERNAL_H) . || true ;\\\n \t  $(LN_S) ${glibcxx_srcdir}/$(COMPATIBILITY_H) . || true ;\\\n \t  $(LN_S) ${glibcxx_srcdir}/$(CMESSAGES_H) messages_members.h || true ;\\\n-\t  $(LN_S) ${glibcxx_srcdir}/$(CTIME_H) time_members.h || true);\\\n-\tfi ;\\\n+\t  $(LN_S) ${glibcxx_srcdir}/$(CTIME_H) time_members.h || true;\\\n+\t} 2>/dev/null\n \t$(STAMP) stamp-host\n \n # Host includes dynamic."}, {"sha": "1db093b15ccb0dc38554814696f9300298835d12", "filename": "libstdc++-v3/libmath/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in?ref=ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d", "patch": "@@ -49,6 +49,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n+\t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/proginstall.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n \t$(top_srcdir)/../config/unwind_ipinfo.m4 \\"}, {"sha": "76e34de03bfc5a3f5828c396f433f6f84fd02030", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d", "patch": "@@ -51,6 +51,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n+\t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/proginstall.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n \t$(top_srcdir)/../config/unwind_ipinfo.m4 \\"}, {"sha": "c79788dac38ce9127bb7ef63f733c1cdc5f3d670", "filename": "libstdc++-v3/po/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpo%2FMakefile.in?ref=ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d", "patch": "@@ -49,6 +49,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n+\t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/proginstall.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n \t$(top_srcdir)/../config/unwind_ipinfo.m4 \\"}, {"sha": "492c8907ced788f41295a243b6f9551221337a38", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d", "patch": "@@ -50,6 +50,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n+\t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/proginstall.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n \t$(top_srcdir)/../config/unwind_ipinfo.m4 \\"}, {"sha": "c029ced7612a7e0ed926f66f1d521dae75c337b2", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=ef5f59f6395ae2db6c02c8bed4dad9a3dd8c563d", "patch": "@@ -49,6 +49,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n+\t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/proginstall.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n \t$(top_srcdir)/../config/unwind_ipinfo.m4 \\"}]}