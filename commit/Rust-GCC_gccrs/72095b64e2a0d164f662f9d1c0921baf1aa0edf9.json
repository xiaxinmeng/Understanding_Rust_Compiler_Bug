{"sha": "72095b64e2a0d164f662f9d1c0921baf1aa0edf9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzIwOTViNjRlMmEwZDE2NGY2NjJmOWQxYzA5MjFiYWYxYWEwZWRmOQ==", "commit": {"author": {"name": "Kelley Cook", "email": "kcook@gcc.gnu.org", "date": "2005-06-16T12:13:34Z"}, "committer": {"name": "R. Kelley Cook", "email": "kcook@gcc.gnu.org", "date": "2005-06-16T12:13:34Z"}, "message": "Makefile.am (libgcj_la_SOURCES): Define without conditional sources.\n\n2005-06-16  Kelley Cook  <kcook@gcc.gnu.org>\n\n\t* Makefile.am (libgcj_la_SOURCES): Define without conditional sources.\n\t(if USING_BOEHMGC): Directly append libgcj_la_SOURCES.\n\t(if USING_NOGC, SUPPLY_BACKTRACE, USING_POSIX_PLATFORM,\n\tUSING_WIN32_PLATFORM, USING_DARWIN_CRT, USING_POSIX_THREADS,\n\tUSING_WIN32_THREADS, USING_NO_THREADS): Likewise.\n\t* Makefile.in: Regenerate.\n\nFrom-SVN: r101083", "tree": {"sha": "9001bc04806a806ffa42322544c596832b6a9fdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9001bc04806a806ffa42322544c596832b6a9fdc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72095b64e2a0d164f662f9d1c0921baf1aa0edf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72095b64e2a0d164f662f9d1c0921baf1aa0edf9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72095b64e2a0d164f662f9d1c0921baf1aa0edf9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72095b64e2a0d164f662f9d1c0921baf1aa0edf9/comments", "author": null, "committer": null, "parents": [{"sha": "5e2d947ce84b1a8baa2252c5ff04b9b3931b3893", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e2d947ce84b1a8baa2252c5ff04b9b3931b3893", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e2d947ce84b1a8baa2252c5ff04b9b3931b3893"}], "stats": {"total": 153, "additions": 61, "deletions": 92}, "files": [{"sha": "24fb79a63f04ac9e550225df9e5a74f115ff2b15", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72095b64e2a0d164f662f9d1c0921baf1aa0edf9/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72095b64e2a0d164f662f9d1c0921baf1aa0edf9/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=72095b64e2a0d164f662f9d1c0921baf1aa0edf9", "patch": "@@ -1,3 +1,12 @@\n+2005-06-16  Kelley Cook  <kcook@gcc.gnu.org>\n+\n+\t* Makefile.am (libgcj_la_SOURCES): Define without conditional sources.\n+\t(if USING_BOEHMGC): Directly append libgcj_la_SOURCES.\n+\t(if USING_NOGC, SUPPLY_BACKTRACE, USING_POSIX_PLATFORM,\n+\tUSING_WIN32_PLATFORM, USING_DARWIN_CRT, USING_POSIX_THREADS,\n+\tUSING_WIN32_THREADS, USING_NO_THREADS): Likewise.\n+\t* Makefile.in: Regenerate.\n+\n 2005-06-15  Kelley Cook  <kcook@gcc.gnu.org>\n \n \t* configure.ac (USING_ECOS_PLATFORM): Remove and merge into..."}, {"sha": "44e3eba75d107c0f27410148a45909899c9b7fff", "filename": "libjava/Makefile.am", "status": "modified", "additions": 37, "deletions": 65, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72095b64e2a0d164f662f9d1c0921baf1aa0edf9/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72095b64e2a0d164f662f9d1c0921baf1aa0edf9/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=72095b64e2a0d164f662f9d1c0921baf1aa0edf9", "patch": "@@ -7,72 +7,13 @@ ACLOCAL_AMFLAGS = -I . -I ../config\n # May be used by various substitution variables.\n gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n \n-## Garbage collector conditionals.\n-if USING_BOEHMGC\n-BOEHMGC_SRC = boehm.cc\n-else\n-BOEHMGC_SRC =\n-endif\n-\n-if USING_NOGC\n-NOGC_SRC = nogc.cc\n-else\n-NOGC_SRC =\n-endif\n-\n-## Broken backtrace conditional.\n-if SUPPLY_BACKTRACE\n-BACKTRACE_SRC = sysdep/dwarf2-backtrace.cc\n-else\n-BACKTRACE_SRC =\n-endif\n-\n-## Conditionals for platform-specific helper functions.\n-if USING_POSIX_PLATFORM\n-POSIX_PLATFORM_SRC = posix.cc\n-else\n-POSIX_PLATFORM_SRC =\n-endif\n-\n-if USING_WIN32_PLATFORM\n-WIN32_PLATFORM_SRC = win32.cc\n-else\n-WIN32_PLATFORM_SRC =\n-endif\n-\n-## Conditionals for platform-specific thread support.\n-if USING_POSIX_THREADS\n-POSIX_THREAD_SRC = posix-threads.cc\n-else\n-POSIX_THREAD_SRC =\n-endif\n-\n-if USING_WIN32_THREADS\n-WIN32_THREAD_SRC = win32-threads.cc\n-else\n-WIN32_THREAD_SRC =\n-endif\n-\n-if USING_NO_THREADS\n-NO_THREAD_SRC = no-threads.cc\n-else\n-NO_THREAD_SRC =\n-endif\n-\n ## Testsuite conditional.\n if TESTSUBDIR\n SUBDIRS = $(DIRLTDL) testsuite gcj include external\n else\n SUBDIRS = $(DIRLTDL) gcj include external\n endif\n \n-## Darwin uses the jcr section, but doesn't use crtstuff.\n-if USING_DARWIN_CRT\n-DARWIN_CRT_SRC = darwin.cc\n-else\n-DARWIN_CRT_SRC = \n-endif\n-\n # write_entries_to_file - writes each entry in a list\n # to the specified file. Each entry is written individually\n # to accomodate systems with severe command-line-length\n@@ -302,12 +243,43 @@ libgij_la_LDFLAGS = -rpath $(toolexeclibdir) \\\n \n libgcj_la_SOURCES = prims.cc jni.cc exception.cc stacktrace.cc \\\n \tlink.cc defineclass.cc interpret.cc verify.cc \\\n-\t$(nat_source_files) $(math_c_source_files) \\\n-\t$(BOEHMGC_SRC) $(NOGC_SRC) \\\n-\t$(BACKTRACE_SRC) \\\n-\t$(POSIX_PLATFORM_SRC) $(WIN32_PLATFORM_SRC) \\\n-\t$(DARWIN_CRT_SRC) \\\n-\t$(POSIX_THREAD_SRC) $(WIN32_THREAD_SRC) $(NO_THREAD_SRC)\n+\t$(nat_source_files) $(math_c_source_files)\n+\n+if USING_BOEHMGC\n+libgcj_la_SOURCES += boehm.cc\n+endif\n+\n+if USING_NOGC\n+libgcj_la_SOURCES += nogc.cc\n+endif\n+\n+if SUPPLY_BACKTRACE\n+libgcj_la_SOURCES += sysdep/dwarf2-backtrace.cc\n+endif\n+\n+if USING_POSIX_PLATFORM\n+libgcj_la_SOURCES += posix.cc\n+endif\n+\n+if USING_WIN32_PLATFORM\n+libgcj_la_SOURCES += win32.cc\n+endif\n+\n+if USING_DARWIN_CRT\n+libgcj_la_SOURCES += darwin.cc\n+endif\n+\n+if USING_POSIX_THREADS\n+libgcj_la_SOURCES += posix-threads.cc\n+endif\n+\n+if USING_WIN32_THREADS\n+libgcj_la_SOURCES += win32-threads.cc\n+endif\n+\n+if USING_NO_THREADS\n+libgcj_la_SOURCES += no-threads.cc\n+endif\n \n ## Objects from C++ sources in subdirs.\n nat_files = $(nat_source_files:.cc=.lo)"}, {"sha": "21acd7f7a5e3e3118289807016e0b7517f3e4766", "filename": "libjava/Makefile.in", "status": "modified", "additions": 15, "deletions": 27, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72095b64e2a0d164f662f9d1c0921baf1aa0edf9/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72095b64e2a0d164f662f9d1c0921baf1aa0edf9/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=72095b64e2a0d164f662f9d1c0921baf1aa0edf9", "patch": "@@ -45,6 +45,15 @@ target_triplet = @target@\n @NATIVE_TRUE@bin_PROGRAMS = jv-convert$(EXEEXT) gij$(EXEEXT) \\\n @NATIVE_TRUE@\tgrmic$(EXEEXT) grmiregistry$(EXEEXT) \\\n @NATIVE_TRUE@\tgcj-dbtool$(EXEEXT)\n+@USING_BOEHMGC_TRUE@am__append_1 = boehm.cc\n+@USING_NOGC_TRUE@am__append_2 = nogc.cc\n+@SUPPLY_BACKTRACE_TRUE@am__append_3 = sysdep/dwarf2-backtrace.cc\n+@USING_POSIX_PLATFORM_TRUE@am__append_4 = posix.cc\n+@USING_WIN32_PLATFORM_TRUE@am__append_5 = win32.cc\n+@USING_DARWIN_CRT_TRUE@am__append_6 = darwin.cc\n+@USING_POSIX_THREADS_TRUE@am__append_7 = posix-threads.cc\n+@USING_WIN32_THREADS_TRUE@am__append_8 = win32-threads.cc\n+@USING_NO_THREADS_TRUE@am__append_9 = no-threads.cc\n @MAINTAINER_MODE_TRUE@@NATIVE_TRUE@noinst_PROGRAMS =  \\\n @MAINTAINER_MODE_TRUE@@NATIVE_TRUE@\tgen-from-JIS$(EXEEXT)\n DIST_COMMON = README $(am__configure_deps) $(srcdir)/../compile \\\n@@ -654,26 +663,8 @@ ACLOCAL_AMFLAGS = -I . -I ../config\n \n # May be used by various substitution variables.\n gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n-@USING_BOEHMGC_FALSE@BOEHMGC_SRC = \n-@USING_BOEHMGC_TRUE@BOEHMGC_SRC = boehm.cc\n-@USING_NOGC_FALSE@NOGC_SRC = \n-@USING_NOGC_TRUE@NOGC_SRC = nogc.cc\n-@SUPPLY_BACKTRACE_FALSE@BACKTRACE_SRC = \n-@SUPPLY_BACKTRACE_TRUE@BACKTRACE_SRC = sysdep/dwarf2-backtrace.cc\n-@USING_POSIX_PLATFORM_FALSE@POSIX_PLATFORM_SRC = \n-@USING_POSIX_PLATFORM_TRUE@POSIX_PLATFORM_SRC = posix.cc\n-@USING_WIN32_PLATFORM_FALSE@WIN32_PLATFORM_SRC = \n-@USING_WIN32_PLATFORM_TRUE@WIN32_PLATFORM_SRC = win32.cc\n-@USING_POSIX_THREADS_FALSE@POSIX_THREAD_SRC = \n-@USING_POSIX_THREADS_TRUE@POSIX_THREAD_SRC = posix-threads.cc\n-@USING_WIN32_THREADS_FALSE@WIN32_THREAD_SRC = \n-@USING_WIN32_THREADS_TRUE@WIN32_THREAD_SRC = win32-threads.cc\n-@USING_NO_THREADS_FALSE@NO_THREAD_SRC = \n-@USING_NO_THREADS_TRUE@NO_THREAD_SRC = no-threads.cc\n @TESTSUBDIR_FALSE@SUBDIRS = $(DIRLTDL) gcj include external\n @TESTSUBDIR_TRUE@SUBDIRS = $(DIRLTDL) testsuite gcj include external\n-@USING_DARWIN_CRT_FALSE@DARWIN_CRT_SRC = \n-@USING_DARWIN_CRT_TRUE@DARWIN_CRT_SRC = darwin.cc\n \n # write_entries_to_file - writes each entry in a list\n # to the specified file. Each entry is written individually\n@@ -791,15 +782,12 @@ libgij_la_LIBADD = -L$(here)/.libs libgcj.la\n libgij_la_LDFLAGS = -rpath $(toolexeclibdir) \\\n         -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(LIBGCJ_LD_SYMBOLIC)\n \n-libgcj_la_SOURCES = prims.cc jni.cc exception.cc stacktrace.cc \\\n-\tlink.cc defineclass.cc interpret.cc verify.cc \\\n-\t$(nat_source_files) $(math_c_source_files) \\\n-\t$(BOEHMGC_SRC) $(NOGC_SRC) \\\n-\t$(BACKTRACE_SRC) \\\n-\t$(POSIX_PLATFORM_SRC) $(WIN32_PLATFORM_SRC) \\\n-\t$(DARWIN_CRT_SRC) \\\n-\t$(POSIX_THREAD_SRC) $(WIN32_THREAD_SRC) $(NO_THREAD_SRC)\n-\n+libgcj_la_SOURCES = prims.cc jni.cc exception.cc stacktrace.cc link.cc \\\n+\tdefineclass.cc interpret.cc verify.cc $(nat_source_files) \\\n+\t$(math_c_source_files) $(am__append_1) $(am__append_2) \\\n+\t$(am__append_3) $(am__append_4) $(am__append_5) \\\n+\t$(am__append_6) $(am__append_7) $(am__append_8) \\\n+\t$(am__append_9)\n nat_files = $(nat_source_files:.cc=.lo)\n xlib_nat_files = $(xlib_nat_source_files:.cc=.lo)\n "}]}