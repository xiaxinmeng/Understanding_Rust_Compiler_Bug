{"sha": "b19003d87989d1b480762acc56eb65851cbea91f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjE5MDAzZDg3OTg5ZDFiNDgwNzYyYWNjNTZlYjY1ODUxY2JlYTkxZg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-08-12T23:02:25Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-08-12T23:02:25Z"}, "message": "(attribute \"type\"): Add new type, \"branch\".\n\n(attribute \"length\"): New attribute; put on all insns that don't have default\nlength.\n(branch patterns): If conditional branch won't reach, take conditional branch\naround an unconditional branch.\n\n(plus): Split (plus (COMPARISON FOO ...) ...) at FOO.\n\nFrom-SVN: r5148", "tree": {"sha": "60972c51ff0e7aaa57f02fca1ad865e5d5da408b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60972c51ff0e7aaa57f02fca1ad865e5d5da408b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b19003d87989d1b480762acc56eb65851cbea91f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b19003d87989d1b480762acc56eb65851cbea91f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b19003d87989d1b480762acc56eb65851cbea91f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b19003d87989d1b480762acc56eb65851cbea91f/comments", "author": null, "committer": null, "parents": [{"sha": "967d1506d5c209c3a83160dc2f775cc4fef982eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/967d1506d5c209c3a83160dc2f775cc4fef982eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/967d1506d5c209c3a83160dc2f775cc4fef982eb"}], "stats": {"total": 395, "additions": 278, "deletions": 117}, "files": [{"sha": "5de6f206eb6e37c4701cb19160bf0fe0248d83be", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 278, "deletions": 117, "changes": 395, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b19003d87989d1b480762acc56eb65851cbea91f/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b19003d87989d1b480762acc56eb65851cbea91f/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=b19003d87989d1b480762acc56eb65851cbea91f", "patch": "@@ -22,9 +22,20 @@\n \f\n ;; Define an insn type attribute.  This is used in function unit delay\n ;; computations.\n-(define_attr \"type\" \"load,integer,fp,compare,delayed_compare,fpcompare,mtlr\"\n+(define_attr \"type\" \"load,integer,fp,compare,delayed_compare,fpcompare,mtlr,branch\"\n   (const_string \"integer\"))\n \n+;; Length (in bytes).\n+(define_attr \"length\" \"\"\n+  (if_then_else (eq_attr \"type\" \"branch\")\n+\t\t(if_then_else (and (ge (minus (pc) (match_dup 0))\n+\t\t\t\t       (const_int -32768))\n+\t\t\t\t   (lt (minus (pc) (match_dup 0))\n+\t\t\t\t       (const_int 32767)))\n+\t\t\t      (const_int 8)\n+\t\t\t      (const_int 12))\n+\t\t(const_int 4)))\n+\n ;; Memory delivers its result in two cycles.\n (define_function_unit \"memory\" 1 0 (eq_attr \"type\" \"load\") 2 0)\n \n@@ -433,7 +444,8 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=&r\")\n \t(ffs:SI (match_operand:SI 1 \"register_operand\" \"r\")))]\n   \"\"\n-  \"neg %0,%1\\;and %0,%0,%1\\;cntlz %0,%0\\;sfi %0,%0,32\")\n+  \"neg %0,%1\\;and %0,%0,%1\\;cntlz %0,%0\\;sfi %0,%0,32\"\n+  [(set_attr \"length\" \"16\")])\n \n (define_insn \"mulsi3\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n@@ -521,7 +533,8 @@\n \t(div:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t(match_operand:SI 2 \"const_int_operand\" \"N\")))]\n   \"exact_log2 (INTVAL (operands[2])) >= 0\"\n-  \"srai %0,%1,%p2\\;aze %0,%0\")\n+  \"srai %0,%1,%p2\\;aze %0,%0\"\n+  [(set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x\")\n@@ -530,7 +543,8 @@\n    (clobber (match_scratch:SI 3 \"=r\"))]\n   \"exact_log2 (INTVAL (operands[2])) >= 0\"\n   \"srai %3,%1,%p2\\;aze. %3,%3\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x\")\n@@ -540,7 +554,8 @@\n \t(div:SI (match_dup 1) (match_dup 2)))]\n   \"exact_log2 (INTVAL (operands[2])) >= 0\"\n   \"srai %0,%1,%p2\\;aze. %0,%0\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n@@ -667,7 +682,7 @@\n    andil. %0,%1,%b2\n    andiu. %0,%1,%u2\n    rlinm. %0,%1,0,%m2,%M2\"\n-  [(set_attr \"type\" \"compare,compare,compare,delayed_compare\")]) \n+  [(set_attr \"type\" \"compare,compare,compare,delayed_compare\")])\n \n ;; Take a AND with a constant that cannot be done in a single insn and try to\n ;; split it into two insns.  This does not verify that the insns are valid\n@@ -1287,7 +1302,8 @@\n   \"\"\n   \"@\n    sle %0,%1,%2\n-   sli %0,%1,%h2\")\n+   sli %0,%1,%h2\"\n+  [(set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x\")\n@@ -1984,7 +2000,8 @@\n   \"\"\n   \"@\n    a %L0,%L1,%L2\\;ae %0,%1,%2\n-   ai %L0,%L1,%2\\;a%G2e %0,%1\")\n+   ai %L0,%L1,%2\\;a%G2e %0,%1\"\n+  [(set_attr \"length\" \"8\")])\n \n (define_insn \"subdi3\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n@@ -1993,21 +2010,24 @@\n   \"\"\n   \"@\n    sf %L0,%L2,%L1\\;sfe %0,%2,%1\n-   sfi %L0,%L2,%1\\;sf%G1e %0,%2\")\n+   sfi %L0,%L2,%1\\;sf%G1e %0,%2\"\n+  [(set_attr \"length\" \"8\")])\n \n (define_insn \"negdi2\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n \t(neg:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r\")))]\n   \"\"\n-  \"sfi %L0,%L1,0\\;sfze %0,%1\")\n+  \"sfi %L0,%L1,0\\;sfze %0,%1\"\n+  [(set_attr \"length\" \"8\")])\n \n (define_insn \"mulsidi3\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n \t(mult:DI (sign_extend:DI (match_operand:SI 1 \"gpc_reg_operand\" \"r\"))\n \t\t (sign_extend:DI (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))))\n    (clobber (match_scratch:SI 3 \"=q\"))]\n   \"\"\n-  \"mul %0,%1,%2\\;mfmq %L0\")\n+  \"mul %0,%1,%2\\;mfmq %L0\"\n+  [(set_attr \"length\" \"8\")])\n \n ;; If operands 0 and 2 are in the same register, we have a problem.  But\n ;; operands 0 and 1 (the usual case) can be in the same register.  That's\n@@ -2022,7 +2042,8 @@\n    sli %0,%L1,%h2\\;cal %L0,0(0)\n    sl%I2q %L0,%L1,%h2\\;sll%I2q %0,%1,%h2\n    sl%I2q %L0,%L1,%h2\\;sll%I2q %0,%1,%h2\n-   sl%I2q %L0,%L1,%h2\\;sll%I2q %0,%1,%h2\")\n+   sl%I2q %L0,%L1,%h2\\;sll%I2q %0,%1,%h2\"\n+  [(set_attr \"length\" \"8\")])\n \n (define_insn \"lshrdi3\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=&r,r,r,&r\")\n@@ -2034,7 +2055,8 @@\n    cal %0,0(0)\\;s%A2i %L0,%1,%h2\n    sr%I2q %0,%1,%h2\\;srl%I2q %L0,%L1,%h2\n    sr%I2q %0,%1,%h2\\;srl%I2q %L0,%L1,%h2\n-   sr%I2q %0,%1,%h2\\;srl%I2q %L0,%L1,%h2\")\n+   sr%I2q %0,%1,%h2\\;srl%I2q %L0,%L1,%h2\"\n+  [(set_attr \"length\" \"8\")])\n \n ;; Shift by a variable amount is too complex to be worth open-coding.  We\n ;; just handle shifts by constants.\n@@ -2058,7 +2080,8 @@\n   \"\"\n   \"@\n    srai %0,%1,31\\;srai %L0,%1,%h2\n-   sraiq %0,%1,%h2\\;srliq %L0,%L1,%h2\")\n+   sraiq %0,%1,%h2\\;srliq %L0,%L1,%h2\"\n+  [(set_attr \"length\" \"8\")])\n \f\n ;; Now define ways of moving data around.\n ;;\n@@ -2235,7 +2258,8 @@\n    ai %0,%1,0\n    l%U1%X1 %0,%1\n    st%U0%U1 %1,%0\"\n-  [(set_attr \"type\" \"*,*,*,compare,*,*,load,*\")])\n+  [(set_attr \"type\" \"*,*,*,compare,*,*,load,*\")\n+   (set_attr \"length\" \"*,*,12,*,8,*,*,*\")])\n \f\n ;; For floating-point, we normally deal with the floating-point registers.\n ;; The sole exception is that parameter passing can produce floating-point\n@@ -2351,7 +2375,8 @@\n    fmr %0,%1\n    lfs%U1%X1 %0,%1\n    frsp %1,%1\\;stfs%U0%X0 %1,%0\"\n-  [(set_attr \"type\" \"fp,load,*\")])\n+  [(set_attr \"type\" \"fp,load,*\")\n+   (set_attr \"length\" \"*,*,8\")])\n \f\n (define_expand \"movdf\"\n   [(set (match_operand:DF 0 \"nonimmediate_operand\" \"\")\n@@ -2457,7 +2482,8 @@\n   \"@\n    #\n    l %0,%1\\;l %L0,%L1\"\n-  [(set_attr \"type\" \"*,load\")])\n+  [(set_attr \"type\" \"*,load\")\n+   (set_attr \"length\" \"*,8\")])\n \n (define_split\n   [(set (match_operand:DF 0 \"gpc_reg_operand\" \"\")\n@@ -2535,7 +2561,8 @@\n       return \\\"st%U0 %1,%0\\;st %L1,%L0\\\";\n     }\n }\"\n-  [(set_attr \"type\" \"*,load,*\")])\n+  [(set_attr \"type\" \"*,load,*\")\n+   (set_attr \"length\" \"8\")])\n \f\n ;; TImode is similar, except that we usually want to compute the address into\n ;; a register and use lsi/stsi (the exception is during reload).  MQ is also\n@@ -2616,7 +2643,8 @@\n \treturn \\\"l%U1 %0,%1\\;l %L0,%L1\\;l %Y0,%Y1\\;l %Z0,%Z1\\\";\n     }\n }\"\n-  [(set_attr \"type\" \"*,load,load,*,*\")])\n+  [(set_attr \"type\" \"*,load,load,*,*\")\n+   (set_attr \"length\" \"*,16,16,*,16\")])\n \f\n (define_expand \"load_multiple\"\n   [(match_par_dup 3 [(set (match_operand:SI 0 \"\" \"\")\n@@ -2663,7 +2691,8 @@\n   /* We have to handle the case where the pseudo used to contain the address\n      is assigned to one of the output registers.  In that case, do the\n      lsi, but then load the correct value.  This is a bit of a mess, but is\n-     the best we can do.  */\n+     the best we can do.\n+     We set the length attribute to the maximum possible size (8 bytes).  */\n   static char result[100];\n   char newload[40];\n   int i;\n@@ -2681,8 +2710,10 @@\n \n   return result;\n }\"\n-  [(set_attr \"type\" \"load\")])\n+  [(set_attr \"type\" \"load\")\n+   (set_attr \"length\" \"8\")])\n \f\n+\n (define_expand \"store_multiple\"\n   [(match_par_dup 3 [(set (match_operand:SI 0 \"\" \"\")\n \t\t\t  (match_operand:SI 1 \"\" \"\"))\n@@ -3059,7 +3090,8 @@\n   \"\"\n   \"@\n    brl\\;l 2,20(1)\n-   bl %z0\\;cror %.,%.,%.\")\n+   bl %z0\\;cror %.,%.,%.\"\n+  [(set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n   [(set (match_operand 0 \"\" \"=fg\")\n@@ -3077,7 +3109,8 @@\n   \"\"\n   \"@\n    brl\\;l 2,20(1)\n-   bl %z1\\;cror %.,%.,%.\")\n+   bl %z1\\;cror %.,%.,%.\"\n+  [(set_attr \"length\" \"8\")])\n \n ;; Call subroutine returning any type.\n \n@@ -3566,7 +3599,8 @@\n \t\t\t   [(match_operand 2 \"cc_reg_operand\" \"y\")\n \t\t\t    (const_int 0)]))]\n   \"\"\n-  \"%D1mfcr %0\\;rlinm %0,%0,%J1,31,31\")\n+  \"%D1mfcr %0\\;rlinm %0,%0,%J1,31,31\"\n+  [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x\")\n@@ -3578,7 +3612,8 @@\n \t(match_op_dup 1 [(match_dup 2) (const_int 0)]))]\n   \"\"\n   \"%D1mfcr %3\\;rlinm. %3,%3,%J1,30,31\"\n-  [(set_attr \"type\" \"delayed_compare\")])\n+  [(set_attr \"type\" \"delayed_compare\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n@@ -3602,7 +3637,8 @@\n   operands[5] = gen_rtx (CONST_INT, VOIDmode, put_bit);\n \n   return \\\"%D1mfcr %0\\;rlinm %0,%0,%4,%5,%5\\\";\n-}\")\n+}\"\n+ [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x\")\n@@ -3632,7 +3668,8 @@\n \n   return \\\"%D1mfcr %4\\;rlinm. %4,%4,%5,%6,%6\\\";\n }\"\n-  [(set_attr \"type\" \"delayed_compare\")])\n+  [(set_attr \"type\" \"delayed_compare\")\n+   (set_attr \"length\" \"12\")])\n \n ;; If we are comparing the result of two comparisons, this can be done\n ;; using creqv or crxor.\n@@ -3663,7 +3700,8 @@\n     return \\\"%C1%C3crxor %E0,%j1,%j3\\\";\n   else\n     return \\\"%C1%C3creqv %E0,%j1,%j3\\\";\n-}\")\n+}\"\n+  [(set_attr \"length\" \"12\")])\n \n ;; There is a 3 cycle delay between consecutive mfcr instructions\n ;; so it is useful to combine 2 scc instructions to use only one mfcr.\n@@ -3678,7 +3716,8 @@\n \t\t\t   [(match_operand 5 \"cc_reg_operand\" \"y\")\n \t\t\t    (const_int 0)]))]\n    \"REGNO (operands[2]) != REGNO (operands[5])\"\n-   \"%D1%D4mfcr %3\\;rlinm %0,%3,%J1,31,31\\;rlinm %3,%3,%J4,31,31\")\n+   \"%D1%D4mfcr %3\\;rlinm %0,%3,%J1,31,31\\;rlinm %3,%3,%J4,31,31\"\n+   [(set_attr \"length\" \"20\")])\n \n ;; There are some scc insns that can be done directly, without a compare.\n ;; These are faster because they don't involve the communications between\n@@ -3705,7 +3744,8 @@\n    sfi %3,%1,0\\;ae %0,%3,%1\n    xoril %0,%1,%b2\\;sfi %3,%0,0\\;ae %0,%3,%0\n    xoriu %0,%1,%u2\\;sfi %3,%0,0\\;ae %0,%3,%0\n-   sfi %0,%1,%2\\;sfi %3,%0,0\\;ae %0,%3,%0\")\n+   sfi %0,%1,%2\\;sfi %3,%0,0\\;ae %0,%3,%0\"\n+  [(set_attr \"length\" \"12,8,12,12,12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,x,x,x,x\")\n@@ -3723,7 +3763,23 @@\n    xoril %0,%1,%b2\\;sfi %3,%0,0\\;ae. %0,%3,%0\n    xoriu %0,%1,%u2\\;sfi %3,%0,0\\;ae. %0,%3,%0\n    sfi %0,%1,%2\\;sfi %3,%0,0\\;ae. %0,%3,%0\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"12,8,12,12,12\")])\n+\n+;; We have insns of the form shown by the first define_insn below.  If\n+;; there is something inside the comparison operation, we must split it.\n+(define_split\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n+\t(plus:SI (match_operator 1 \"comparison_operator\"\n+\t\t\t\t [(match_operand:SI 2 \"\" \"\")\n+\t\t\t\t  (match_operand:SI 3\n+\t\t\t\t\t\t    \"reg_or_cint_operand\" \"\")])\n+\t\t (match_operand:SI 4 \"gpc_reg_operand\" \"\")))\n+   (clobber (match_operand:SI 5 \"register_operand\" \"\"))]\n+  \"! gpc_reg_operand (operands[2], SImode)\"\n+  [(set (match_dup 5) (match_dup 2))\n+   (set (match_dup 2) (plus:SI (match_op_dup 1 [(match_dup 2) (match_dup 3)])\n+\t\t\t       (match_dup 4)))])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r,r,r\")\n@@ -3737,7 +3793,8 @@\n    sfi %4,%1,0\\;aze %0,%3\n    xoril %4,%1,%b2\\;sfi %4,%4,0\\;aze %0,%3\n    xoriu %4,%1,%u2\\;sfi %4,%4,0\\;aze %0,%3\n-   sfi %4,%1,%2\\;sfi %4,%4,0\\;aze %0,%3\")\n+   sfi %4,%1,%2\\;sfi %4,%4,0\\;aze %0,%3\"\n+  [(set_attr \"length\" \"12,8,12,12,12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,x,x,x\")\n@@ -3755,7 +3812,8 @@\n    xoril %4,%1,%b2\\;sfi %4,%4,0\\;aze. %4,%3\n    xoriu %4,%1,%u2\\;sfi %4,%4,0\\;aze. %4,%3\n    sfi %4,%1,%2\\;sfi %4,%4,0\\;aze. %4,%3\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"12,8,12,12,12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 5 \"cc_reg_operand\" \"=x,x,x,x,x\")\n@@ -3775,7 +3833,8 @@\n    xoril %4,%1,%b2\\;sfi %4,%4,0\\;aze. %0,%3\n    xoriu %4,%1,%u2\\;sfi %4,%4,0\\;aze. %0,%3\n    sfi %4,%1,%2\\;sfi %4,%4,0\\;aze. %0,%3\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"12,8,12,12,12\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r,r,r\")\n@@ -3787,7 +3846,8 @@\n    ai %0,%1,-1\\;sfe %0,%0,%0\n    xoril %0,%1,%b2\\;ai %0,%0,-1\\;sfe %0,%0,%0\n    xoriu %0,%1,%u2\\;ai %0,%0,-1\\;sfe %0,%0,%0\n-   sfi %0,%1,%2\\;ai %0,%0,-1\\;sfe %0,%0,%0\")\n+   sfi %0,%1,%2\\;ai %0,%0,-1\\;sfe %0,%0,%0\"\n+   [(set_attr \"length\" \"12,8,12,12,12\")])\n \n ;; This is what (plus (ne X (const_int 0)) Y) looks like.\n (define_insn \"\"\n@@ -3798,7 +3858,8 @@\n \t\t (match_operand:SI 2 \"gpc_reg_operand\" \"r\")))\n    (clobber (match_scratch:SI 3 \"=&r\"))]\n   \"\"\n-  \"ai %3,%1,-1\\;aze %0,%2\")\n+  \"ai %3,%1,-1\\;aze %0,%2\"\n+  [(set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x\")\n@@ -3811,7 +3872,8 @@\n    (clobber (match_scratch:SI 3 \"=&r\"))]\n   \"\"\n   \"ai %3,%1,-1\\;aze. %3,%2\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x\")\n@@ -3827,7 +3889,8 @@\n    (clobber (match_scratch:SI 3 \"=&r\"))]\n   \"\"\n   \"ai %3,%1,-1\\;aze. %0,%2\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n@@ -3837,7 +3900,8 @@\n   \"\"\n   \"@\n    doz %3,%2,%1\\;sfi %0,%3,0\\;ae %0,%0,%3\n-   ai %0,%1,-1\\;aze %0,%0\\;sri %0,%0,31\")\n+   ai %0,%1,-1\\;aze %0,%0\\;sri %0,%0,31\"\n+  [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,x\")\n@@ -3852,7 +3916,8 @@\n   \"@\n    doz %3,%2,%1\\;sfi %0,%3,0\\;ae. %0,%0,%3\n    ai %0,%1,-1\\;aze %0,%0\\;sri. %0,%0,31\"\n-  [(set_attr \"type\" \"delayed_compare,compare\")])\n+  [(set_attr \"type\" \"delayed_compare,compare\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n@@ -3863,7 +3928,8 @@\n   \"\"\n   \"@\n    doz %4,%2,%1\\;sfi %4,%4,0\\;aze %0,%3\n-   srai %4,%1,31\\;sf %4,%1,%4\\;aze %0,%3\")\n+   srai %4,%1,31\\;sf %4,%1,%4\\;aze %0,%3\"\n+  [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x\")\n@@ -3877,7 +3943,8 @@\n   \"@\n    doz %4,%2,%1\\;sfi %4,%4,0\\;aze. %4,%3\n    srai %4,%1,31\\;sf %4,%1,%4\\;aze. %4,%3\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 5 \"cc_reg_operand\" \"=x,x\")\n@@ -3893,7 +3960,8 @@\n   \"@\n    doz %4,%2,%1\\;sfi %4,%4,0\\;aze. %0,%3\n    srai %4,%1,31\\;sf %4,%1,%4\\;aze. %0,%3\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n@@ -3902,14 +3970,16 @@\n   \"\"\n   \"@\n    doz %0,%2,%1\\;ai %0,%0,-1\\;sfe %0,%0,%0\n-   ai %0,%1,-1\\;aze %0,%0\\;srai %0,%0,31\")\n+   ai %0,%1,-1\\;aze %0,%0\\;srai %0,%0,31\"\n+  [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(leu:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t(match_operand:SI 2 \"reg_or_short_operand\" \"rI\")))]\n   \"\"\n-  \"sf%I2 %0,%1,%2\\;cal %0,0(0)\\;ae %0,%0,%0\")\n+  \"sf%I2 %0,%1,%2\\;cal %0,0(0)\\;ae %0,%0,%0\"\n+  [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x\")\n@@ -3921,7 +3991,8 @@\n \t(leu:SI (match_dup 1) (match_dup 2)))]\n    \"\"\n   \"sf%I2 %0,%1,%2\\;cal %0,0(0)\\;ae. %0,%0,%0\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n@@ -3930,7 +4001,8 @@\n \t\t (match_operand:SI 3 \"gpc_reg_operand\" \"r\")))\n    (clobber (match_scratch:SI 4 \"=&r\"))]\n   \"\"\n-  \"sf%I2 %4,%1,%2\\;aze %0,%3\")\n+  \"sf%I2 %4,%1,%2\\;aze %0,%3\"\n+  [(set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x\")\n@@ -3942,7 +4014,8 @@\n    (clobber (match_scratch:SI 4 \"=&r\"))]\n   \"\"\n   \"sf%I2 %4,%1,%2\\;aze. %4,%3\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 5 \"cc_reg_operand\" \"=x\")\n@@ -3956,14 +4029,16 @@\n    (clobber (match_scratch:SI 4 \"=&r\"))]\n   \"\"\n   \"sf%I2 %4,%1,%2\\;aze. %0,%3\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(neg:SI (leu:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t\t(match_operand:SI 2 \"reg_or_short_operand\" \"rI\"))))]\n   \"\"\n-  \"sf%I2 %0,%1,%2\\;sfe %0,%0,%0\\;nand %0,%0,%0\")\n+  \"sf%I2 %0,%1,%2\\;sfe %0,%0,%0\\;nand %0,%0,%0\"\n+   [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n@@ -3973,7 +4048,8 @@\n \t\t(match_operand:SI 3 \"gpc_reg_operand\" \"r\")))\n    (clobber (match_scratch:SI 4 \"=&r\"))]\n   \"\"\n-  \"sf%I2 %4,%1,%2\\;sfe %4,%4,%4\\;andc %0,%3,%4\")\n+  \"sf%I2 %4,%1,%2\\;sfe %4,%4,%4\\;andc %0,%3,%4\"\n+  [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x\")\n@@ -3986,7 +4062,8 @@\n    (clobber (match_scratch:SI 4 \"=&r\"))]\n   \"\"\n   \"sf%I2 %4,%1,%2\\;sfe %4,%4,%4\\;andc. %4,%3,%4\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 5 \"cc_reg_operand\" \"=x\")\n@@ -4001,14 +4078,16 @@\n    (clobber (match_scratch:SI 4 \"=&r\"))]\n   \"\"\n   \"sf%I2 %4,%1,%2\\;sfe %4,%4,%4\\;andc. %0,%3,%4\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(lt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t       (match_operand:SI 2 \"reg_or_short_operand\" \"rI\")))]\n   \"\"\n-  \"doz%I2 %0,%1,%2\\;nabs %0,%0\\;sri %0,%0,31\")\n+  \"doz%I2 %0,%1,%2\\;nabs %0,%0\\;sri %0,%0,31\"\n+   [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 3 \"cc_reg_operand\" \"=x\")\n@@ -4020,7 +4099,8 @@\n \t(lt:SI (match_dup 1) (match_dup 2)))]\n   \"\"\n   \"doz%I2 %0,%1,%2\\;nabs %0,%0\\;sri. %0,%0,31\"\n-  [(set_attr \"type\" \"delayed_compare\")])\n+  [(set_attr \"type\" \"delayed_compare\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n@@ -4029,7 +4109,8 @@\n \t\t (match_operand:SI 3 \"gpc_reg_operand\" \"r\")))\n    (clobber (match_scratch:SI 4 \"=&r\"))]\n   \"\"\n-  \"doz%I2 %4,%1,%2\\;ai %4,%4,-1\\;aze %0,%3\")\n+  \"doz%I2 %4,%1,%2\\;ai %4,%4,-1\\;aze %0,%3\"\n+  [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"cc_reg_operand\" \"=x\")\n@@ -4041,7 +4122,8 @@\n    (clobber (match_scratch:SI 4 \"=&r\"))]\n   \"\"\n   \"doz%I2 %4,%1,%2\\;ai %4,%4,-1\\;aze. %4,%3\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 5 \"cc_reg_operand\" \"=x\")\n@@ -4055,14 +4137,16 @@\n    (clobber (match_scratch:SI 4 \"=&r\"))]\n   \"\"\n   \"doz%I2 %4,%1,%2\\;ai %4,%4,-1\\;aze. %0,%3\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(neg:SI (lt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t       (match_operand:SI 2 \"reg_or_short_operand\" \"rI\"))))]\n   \"\"\n-  \"doz%I2 %0,%1,%2\\;nabs %0,%0\\;srai %0,%0,31\")\n+  \"doz%I2 %0,%1,%2\\;nabs %0,%0\\;srai %0,%0,31\"\n+  [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n@@ -4071,7 +4155,8 @@\n   \"\"\n   \"@\n    sf %0,%2,%1\\;sfe %0,%0,%0\\;neg %0,%0\n-   ai %0,%1,%n2\\;sfe %0,%0,%0\\;neg %0,%0\")\n+   ai %0,%1,%n2\\;sfe %0,%0,%0\\;neg %0,%0\"\n+  [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x\")\n@@ -4085,7 +4170,8 @@\n   \"@\n    sf %0,%2,%1\\;sfe %0,%0,%0\\;neg. %0,%0\n    ai %0,%1,%n2\\;sfe %0,%0,%0\\;neg. %0,%0\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n@@ -4098,7 +4184,8 @@\n   sf %4,%2,%1\\;sfe %4,%4,%4\\;sf%I3 %0,%4,%3\n   sf %4,%2,%1\\;sfe %4,%4,%4\\;sf%I3 %0,%4,%3\n   ai %4,%1,%n2\\;sfe %4,%4,%4\\;sf%I3 %0,%4,%3\n-  ai %4,%1,%n2\\;sfe %4,%4,%4\\;sf%I3 %0,%4,%3\")\n+  ai %4,%1,%n2\\;sfe %4,%4,%4\\;sf%I3 %0,%4,%3\"\n+ [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,x,x\")\n@@ -4114,7 +4201,8 @@\n    sf %4,%2,%1\\;sfe %4,%4,%4\\;sf%I3. %4,%4,%3\n    ai %4,%1,%n2\\;sfe %4,%4,%4\\;sf%I3. %4,%4,%3\n    ai %4,%1,%n2\\;sfe %4,%4,%4\\;sf%I3. %4,%4,%3\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 5 \"cc_reg_operand\" \"=x,x,x,x\")\n@@ -4132,7 +4220,8 @@\n    sf %4,%2,%1\\;sfe %4,%4,%4\\;sf%I3. %0,%4,%3\n    ai %4,%1,%n2\\;sfe %4,%4,%4\\;sf%I3. %0,%4,%3\n    ai %4,%1,%n2\\;sfe %4,%4,%4\\;sf%I3. %0,%4,%3\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n@@ -4141,15 +4230,17 @@\n   \"\"\n   \"@\n    sf %0,%2,%1\\;sfe %0,%0,%0\n-   ai %0,%1,%n2\\;sfe %0,%0,%0\")\n+   ai %0,%1,%n2\\;sfe %0,%0,%0\"\n+  [(set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(ge:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t       (match_operand:SI 2 \"reg_or_short_operand\" \"rI\")))\n    (clobber (match_scratch:SI 3 \"=r\"))]\n   \"\"\n-  \"doz%I2 %3,%1,%2\\;sfi %0,%3,0\\;ae %0,%0,%3\")\n+  \"doz%I2 %3,%1,%2\\;sfi %0,%3,0\\;ae %0,%0,%3\"\n+   [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x\")\n@@ -4162,7 +4253,8 @@\n    (clobber (match_scratch:SI 3 \"=r\"))]\n   \"\"\n   \"doz%I2 %3,%1,%2\\;sfi %0,%3,0\\;ae. %0,%0,%3\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n@@ -4171,7 +4263,8 @@\n \t\t (match_operand:SI 3 \"gpc_reg_operand\" \"r\")))\n    (clobber (match_scratch:SI 4 \"=&r\"))]\n   \"\"\n-  \"doz%I2 %4,%1,%2\\;sfi %4,%4,0\\;aze %0,%3\")\n+  \"doz%I2 %4,%1,%2\\;sfi %4,%4,0\\;aze %0,%3\"\n+  [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x\")\n@@ -4183,7 +4276,8 @@\n    (clobber (match_scratch:SI 4 \"=&r\"))]\n   \"\"\n   \"doz%I2 %4,%1,%2\\;sfi %4,%4,0\\;aze. %4,%3\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 5 \"cc_reg_operand\" \"=x\")\n@@ -4197,14 +4291,16 @@\n    (clobber (match_scratch:SI 4 \"=&r\"))]\n   \"\"\n   \"doz%I2 %4,%1,%2\\;sfi %4,%4,0\\;aze. %0,%3\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(neg:SI (ge:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t       (match_operand:SI 2 \"reg_or_short_operand\" \"rI\"))))]\n   \"\"\n-  \"doz%I2 %0,%1,%2\\;ai %0,%0,-1\\;sfe %0,%0,%0\")\n+  \"doz%I2 %0,%1,%2\\;ai %0,%0,-1\\;sfe %0,%0,%0\"\n+  [(set_attr \"length\" \"12\")])\n \n ;; This is (and (neg (ge X (const_int 0))) Y).\n (define_insn \"\"\n@@ -4216,7 +4312,8 @@\n \t\t(match_operand:SI 2 \"gpc_reg_operand\" \"r\")))\n    (clobber (match_scratch:SI 3 \"=&r\"))]\n   \"\"\n-  \"srai %3,%1,31\\;andc %0,%2,%3\")\n+  \"srai %3,%1,31\\;andc %0,%2,%3\"\n+  [(set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x\")\n@@ -4230,7 +4327,8 @@\n    (clobber (match_scratch:SI 3 \"=&r\"))]\n   \"\"\n   \"srai %3,%1,31\\;andc. %3,%2,%3\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x\")\n@@ -4248,7 +4346,8 @@\n    (clobber (match_scratch:SI 3 \"=&r\"))]\n   \"\"\n   \"srai %3,%1,31\\;andc. %0,%2,%3\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n@@ -4257,7 +4356,8 @@\n   \"\"\n   \"@\n    sf %0,%2,%1\\;cal %0,0(0)\\;ae %0,%0,%0\n-   ai %0,%1,%n2\\;cal %0,0(0)\\;ae %0,%0,%0\")\n+   ai %0,%1,%n2\\;cal %0,0(0)\\;ae %0,%0,%0\"\n+  [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x\")\n@@ -4271,7 +4371,8 @@\n   \"@\n    sf %0,%2,%1\\;cal %0,0(0)\\;ae. %0,%0,%0\n    ai %0,%1,%n2\\;cal %0,0(0)\\;ae. %0,%0,%0\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n@@ -4282,7 +4383,8 @@\n   \"\"\n   \"@\n    sf %4,%2,%1\\;aze %0,%3\n-   ai %4,%1,%n2\\;aze %0,%3\")\n+   ai %4,%1,%n2\\;aze %0,%3\"\n+  [(set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x\")\n@@ -4296,7 +4398,8 @@\n   \"@\n    sf %4,%2,%1\\;aze. %4,%3\n    ai %4,%1,%n2\\;aze. %4,%3\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 5 \"cc_reg_operand\" \"=x,x\")\n@@ -4312,7 +4415,8 @@\n   \"@\n    sf %4,%2,%1\\;aze. %0,%3\n    ai %4,%1,%n2\\;aze. %4,%3\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n@@ -4321,7 +4425,8 @@\n   \"\"\n   \"@\n    sf %0,%2,%1\\;sfe %0,%0,%0\\;nand %0,%0,%0\n-   sfi %0,%1,-1\\;a%I2 %0,%0,%2\\;sfe %0,%0,%0\")\n+   sfi %0,%1,-1\\;a%I2 %0,%0,%2\\;sfe %0,%0,%0\"\n+  [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n@@ -4333,7 +4438,8 @@\n   \"\"\n   \"@\n    sf %4,%2,%1\\;sfe %4,%4,%4\\;andc %0,%3,%4\n-   ai %4,%1,%n2\\;sfe %4,%4,%4\\;andc %0,%3,%4\")\n+   ai %4,%1,%n2\\;sfe %4,%4,%4\\;andc %0,%3,%4\"\n+  [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x\")\n@@ -4348,7 +4454,8 @@\n   \"@\n    sf %4,%2,%1\\;sfe %4,%4,%4\\;andc. %4,%3,%4\n    ai %4,%1,%n2\\;sfe %4,%4,%4\\;andc. %4,%3,%4\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 5 \"cc_reg_operand\" \"=x,x\")\n@@ -4365,14 +4472,16 @@\n   \"@\n    sf %4,%2,%1\\;sfe %4,%4,%4\\;andc. %0,%3,%4\n    ai %4,%1,%n2\\;sfe %4,%4,%4\\;andc. %0,%3,%4\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(gt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t       (const_int 0)))]\n   \"\"\n-  \"sfi %0,%1,0\\;ame %0,%0\\;sri %0,%0,31\")\n+  \"sfi %0,%1,0\\;ame %0,%0\\;sri %0,%0,31\"\n+  [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 2 \"cc_reg_operand\" \"=x\")\n@@ -4384,14 +4493,16 @@\n \t(gt:SI (match_dup 1) (const_int 0)))]\n   \"\"\n   \"sfi %0,%1,0\\;ame %0,%0\\;sri. %0,%0,31\"\n-  [(set_attr \"type\" \"delayed_compare\")])\n+  [(set_attr \"type\" \"delayed_compare\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(gt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t       (match_operand:SI 2 \"reg_or_short_operand\" \"r\")))]\n   \"\"\n-  \"doz %0,%2,%1\\;nabs %0,%0\\;sri %0,%0,31\")\n+  \"doz %0,%2,%1\\;nabs %0,%0\\;sri %0,%0,31\"\n+  [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x\")\n@@ -4403,7 +4514,8 @@\n \t(gt:SI (match_dup 1) (match_dup 2)))]\n   \"\"\n   \"doz %0,%2,%1\\;nabs %0,%0\\;sri. %0,%0,31\"\n-  [(set_attr \"type\" \"delayed_compare\")])\n+  [(set_attr \"type\" \"delayed_compare\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n@@ -4412,7 +4524,8 @@\n \t\t (match_operand:SI 2 \"gpc_reg_operand\" \"r\")))\n    (clobber (match_scratch:SI 3 \"=&r\"))]\n   \"\"\n-  \"a %3,%1,%1\\;sfe %3,%1,%3\\;aze %0,%2\")\n+  \"a %3,%1,%1\\;sfe %3,%1,%3\\;aze %0,%2\"\n+  [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x\")\n@@ -4424,7 +4537,8 @@\n    (clobber (match_scratch:SI 3 \"=&r\"))]\n   \"\"\n   \"a %3,%1,%1\\;sfe %3,%1,%3\\;aze. %0,%2\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x\")\n@@ -4438,7 +4552,8 @@\n    (clobber (match_scratch:SI 3 \"=&r\"))]\n   \"\"\n   \"a %3,%1,%1\\;sfe %3,%1,%3\\;aze. %3,%2\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n@@ -4447,7 +4562,8 @@\n \t\t (match_operand:SI 3 \"gpc_reg_operand\" \"r\")))\n    (clobber (match_scratch:SI 4 \"=&r\"))]\n   \"\"\n-  \"doz %4,%2,%1\\;ai %4,%4,-1\\;aze %0,%3\")\n+  \"doz %4,%2,%1\\;ai %4,%4,-1\\;aze %0,%3\"\n+  [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x\")\n@@ -4459,7 +4575,8 @@\n    (clobber (match_scratch:SI 4 \"=&r\"))]\n   \"\"\n   \"doz %4,%2,%1\\;ai %4,%4,-1\\;aze. %4,%3\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 5 \"cc_reg_operand\" \"=x\")\n@@ -4473,28 +4590,32 @@\n    (clobber (match_scratch:SI 4 \"=&r\"))]\n   \"\"\n   \"doz %4,%2,%1\\;ai %4,%4,-1\\;aze. %0,%3\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(neg:SI (gt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t       (const_int 0))))]\n   \"\"\n-  \"sfi %0,%1,0\\;ame %0,%0\\;srai %0,%0,31\")\n+  \"sfi %0,%1,0\\;ame %0,%0\\;srai %0,%0,31\"\n+  [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(neg:SI (gt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t       (match_operand:SI 2 \"reg_or_short_operand\" \"r\"))))]\n   \"\"\n-  \"doz %0,%2,%1\\;nabs %0,%0\\;srai %0,%0,31\")\n+  \"doz %0,%2,%1\\;nabs %0,%0\\;srai %0,%0,31\"\n+  [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(gtu:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t(match_operand:SI 2 \"reg_or_short_operand\" \"rI\")))]\n   \"\"\n-  \"sf%I2 %0,%1,%2\\;sfe %0,%0,%0\\;neg %0,%0\")\n+  \"sf%I2 %0,%1,%2\\;sfe %0,%0,%0\\;neg %0,%0\"\n+  [(set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x\")\n@@ -4506,7 +4627,8 @@\n \t(gtu:SI (match_dup 1) (match_dup 2)))]\n   \"\"\n   \"sf%I2 %0,%1,%2\\;sfe %0,%0,%0\\;neg. %0,%0\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r\")\n@@ -4518,7 +4640,8 @@\n   \"@\n    ai %4,%1,%k2\\;aze %0,%3\n    sf%I2 %4,%1,%2\\;sfe %4,%4,%4\\;sf%I3 %0,%4,%3\n-   sf%I2 %4,%1,%2\\;sfe %4,%4,%4\\;sf%I3 %0,%4,%3\")\n+   sf%I2 %4,%1,%2\\;sfe %4,%4,%4\\;sf%I3 %0,%4,%3\"\n+  [(set_attr \"length\" \"8,12,12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,x\")\n@@ -4533,7 +4656,8 @@\n    ai %4,%1,%k2\\;aze. %0,%3\n    sf%I2 %4,%1,%2\\;sfe %4,%4,%4\\;sf%I3. %0,%4,%3\n    sf%I2 %4,%1,%2\\;sfe %4,%4,%4\\;sf%I3. %0,%4,%3\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"8,12,12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 5 \"cc_reg_operand\" \"=x,x,x\")\n@@ -4550,14 +4674,16 @@\n    ai %4,%1,%k2\\;aze. %0,%3\n    sf%I2 %4,%1,%2\\;sfe %4,%4,%4\\;sf%I3. %0,%4,%3\n    sf%I2 %4,%1,%2\\;sfe %4,%4,%4\\;sf%I3. %0,%4,%3\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"8,12,12\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(neg:SI (gtu:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t\t(match_operand:SI 2 \"reg_or_short_operand\" \"rI\"))))]\n   \"\"\n-  \"sf%I2 %0,%1,%2\\;sfe %0,%0,%0\")\n+  \"sf%I2 %0,%1,%2\\;sfe %0,%0,%0\"\n+  [(set_attr \"length\" \"8\")])\n \f\n ;; Define both directions of branch and return.  If we need a reload\n ;; register, we'd rather use CR0 since it is much easier to copy a\n@@ -4572,7 +4698,15 @@\n \t\t      (label_ref (match_operand 0 \"\" \"\"))\n \t\t      (pc)))]\n   \"\"\n-  \"%C1bc %t1,%j1,%0\")\n+  \"*\n+{\n+  if (get_attr_length (insn) == 8)\n+    return \\\"%C1bc %t1,%j1,%l0\\\";\n+  else\n+    return \\\"%C1bc %T1,%j1,$+8\\;b %l0\\\";\n+}\"\n+  [(set_attr \"type\" \"branch\")])\n+\n \n (define_insn \"\"\n   [(set (pc)\n@@ -4583,7 +4717,8 @@\n \t\t      (return)\n \t\t      (pc)))]\n   \"direct_return ()\"\n-  \"%C0bcr %t0,%j0\")\n+  \"%C0bcr %t0,%j0\"\n+  [(set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n   [(set (pc)\n@@ -4594,7 +4729,14 @@\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))]\n   \"\"\n-  \"%C1bc %T1,%j1,%0\")\n+  \"*\n+{\n+  if (get_attr_length (insn) == 8)\n+    return \\\"%C1bc %T1,%j1,%l0\\\";\n+  else\n+    return \\\"%C1bc %t1,%j1,$+8\\;b %l0\\\";\n+}\"\n+  [(set_attr \"type\" \"branch\")])\n \n (define_insn \"\"\n   [(set (pc)\n@@ -4605,7 +4747,8 @@\n \t\t      (pc)\n \t\t      (return)))]\n   \"direct_return ()\"\n-  \"%C0bcr %T0,%j0\")\n+  \"%C0bcr %T0,%j0\"\n+  [(set_attr \"length\" \"8\")])\n \n ;; Unconditional branch and return.\n \n@@ -4681,10 +4824,16 @@\n    (clobber (match_scratch:CC 3 \"=X,&x,&x\"))\n    (clobber (match_scratch:SI 4 \"=X,X,r\"))]\n   \"\"\n-  \"@\n-   bdn %l2\n-   #\n-   #\")\n+  \"*\n+{\n+  if (which_alternative == 1)\n+    return \\\"#\\\";\n+  else if (get_attr_length (insn) == 8)\n+    return \\\"bdn %l2\\\";\n+  else\n+    return \\\"bdz $+8\\;b %l2\\\";\n+}\"\n+  [(set_attr \"type\" \"branch\")])\n \t\t\t       \n ;; Similar, but we can use GE since we have a REG_NONNEG.\n (define_insn \"\"\n@@ -4698,10 +4847,16 @@\n    (clobber (match_scratch:CC 3 \"=X,&x,&X\"))\n    (clobber (match_scratch:SI 4 \"=X,X,r\"))]\n   \"find_reg_note (insn, REG_NONNEG, 0)\"\n-  \"@\n-   bdn %l2\n-   #\n-   #\")\n+  \"*\n+{\n+  if (which_alternative == 1)\n+    return \\\"#\\\";\n+  else if (get_attr_length (insn) == 8)\n+    return \\\"bdn %l2\\\";\n+  else\n+    return \\\"bdz $+8\\;b %l2\\\";\n+}\"\n+  [(set_attr \"type\" \"branch\")])\n \t\t\t       \n (define_insn \"\"\n   [(set (pc)\n@@ -4714,10 +4869,16 @@\n    (clobber (match_scratch:CC 3 \"=X,&x,&x\"))\n    (clobber (match_scratch:SI 4 \"=X,X,r\"))]\n   \"\"\n-  \"@\n-   bdz %l2\n-   #\n-   #\")\n+  \"*\n+{\n+  if (which_alternative == 1)\n+    return \\\"#\\\";\n+  else if (get_attr_length (insn) == 8)\n+    return \\\"bdz %l2\\\";\n+  else\n+    return \\\"bdn $+8\\;b %l2\\\";\n+}\"\n+  [(set_attr \"type\" \"branch\")])\n \n (define_split\n   [(set (pc)"}]}