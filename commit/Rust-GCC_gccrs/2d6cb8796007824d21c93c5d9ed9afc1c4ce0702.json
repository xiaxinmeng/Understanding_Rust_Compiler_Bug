{"sha": "2d6cb8796007824d21c93c5d9ed9afc1c4ce0702", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ2Y2I4Nzk2MDA3ODI0ZDIxYzkzYzVkOWVkOWFmYzFjNGNlMDcwMg==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-03-02T13:48:03Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-03-02T13:48:03Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r377", "tree": {"sha": "8e3cac2b07828a471fba928042498d2e45cae5b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e3cac2b07828a471fba928042498d2e45cae5b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d6cb8796007824d21c93c5d9ed9afc1c4ce0702", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d6cb8796007824d21c93c5d9ed9afc1c4ce0702", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d6cb8796007824d21c93c5d9ed9afc1c4ce0702", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d6cb8796007824d21c93c5d9ed9afc1c4ce0702/comments", "author": null, "committer": null, "parents": [{"sha": "c5d555ca2f928d4797bb52e1c3eb5f2e566e1636", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5d555ca2f928d4797bb52e1c3eb5f2e566e1636", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5d555ca2f928d4797bb52e1c3eb5f2e566e1636"}], "stats": {"total": 38, "additions": 26, "deletions": 12}, "files": [{"sha": "8ba569ce88538c7978cf18b4e1cb0e1cd38e3fd0", "filename": "gcc/config/m88k/m88k.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d6cb8796007824d21c93c5d9ed9afc1c4ce0702/gcc%2Fconfig%2Fm88k%2Fm88k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d6cb8796007824d21c93c5d9ed9afc1c4ce0702/gcc%2Fconfig%2Fm88k%2Fm88k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.c?ref=2d6cb8796007824d21c93c5d9ed9afc1c4ce0702", "patch": "@@ -47,7 +47,7 @@ extern char *ctime ();\n extern int flag_traditional;\n extern FILE *asm_out_file;\n \n-static char out_sccs_id[] = \"@(#)m88k.c\t1.96.5.2 06 Feb 1992 10:02:20\";\n+static char out_sccs_id[] = \"@(#)m88k.c\t2.0.2.1 28 Feb 1992 12:36:54\";\n static char tm_sccs_id [] = TM_SCCS_ID;\n \n char *m88k_pound_sign = \"\";\t/* Either # for SVR4 or empty for SVR3 */\n@@ -63,6 +63,8 @@ int m88k_case_index;\n rtx m88k_compare_reg;\t\t/* cmp output pseudo register */\n rtx m88k_compare_op0;\t\t/* cmpsi operand 0 */\n rtx m88k_compare_op1;\t\t/* cmpsi operand 1 */\n+\n+enum attr_cpu m88k_cpu;\t\t/* target cpu */\n \f\n /* Determine what instructions are needed to manufacture the integer VALUE\n    in the given MODE.  */\n@@ -2129,10 +2131,11 @@ m88k_debugger_offset (reg, offset)\n     offset -= m88k_stack_size;\n   else if (reg != arg_pointer_rtx)\n     {\n+#if (MONITOR_GCC & 0x10) /* Watch for suspicious symbolic locations.  */\n       if (! (GET_CODE (reg) == REG\n \t     && REGNO (reg) >= FIRST_PSEUDO_REGISTER))\n-\t/* @@ For now, I'd like to know if this happens.  */\n \twarning (\"Internal gcc error: Can't express symbolic location\");\n+#endif\n       return 0;\n     }\n "}, {"sha": "f0eca726eb438c9d539a45c0038a5279ff6bf228", "filename": "gcc/config/m88k/m88k.h", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d6cb8796007824d21c93c5d9ed9afc1c4ce0702/gcc%2Fconfig%2Fm88k%2Fm88k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d6cb8796007824d21c93c5d9ed9afc1c4ce0702/gcc%2Fconfig%2Fm88k%2Fm88k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.h?ref=2d6cb8796007824d21c93c5d9ed9afc1c4ce0702", "patch": "@@ -95,6 +95,8 @@ extern struct rtx_def *m88k_compare_reg;\n extern struct rtx_def *m88k_compare_op0;\n extern struct rtx_def *m88k_compare_op1;\n \n+extern enum attr_cpu m88k_cpu;\n+\n extern int null_epilogue ();\n extern int integer_ok_for_set ();\n extern int m88k_debugger_offset ();\n@@ -202,9 +204,9 @@ extern char * reg_names[];\n /* Print subsidiary information on the compiler version in use.\n    Redefined in m88kv4.h, and m88kluna.h.  */\n #define VERSION_INFO1\t\"88open OCS/BCS, \"\n-#define VERSION_INFO2\t\"12 Feb 1992\"\n+#define VERSION_INFO2\t\"28 Feb 1992\"\n #define VERSION_STRING\tversion_string\n-#define\tTM_SCCS_ID\t\"@(#)m88k.h\t1.96.5.5 12 Feb 1992 12:59:25\"\n+#define\tTM_SCCS_ID\t\"@(#)m88k.h\t2.0.2.1 28 Feb 1992 12:37:41\"\n \n /* Run-time compilation parameters selecting different hardware subsets.  */\n \n@@ -302,6 +304,9 @@ extern char * reg_names[];\n     if ((target_flags & MASK_88000) == 0)\t\t\t\t     \\\n       target_flags |= CPU_DEFAULT;\t\t\t\t\t     \\\n \t\t\t\t\t\t\t\t\t     \\\n+    m88k_cpu = (TARGET_88000 ? CPU_M88000\t\t\t\t     \\\n+\t\t: (TARGET_88100 ? CPU_M88100 : CPU_M88110));\t\t     \\\n+\t\t\t\t\t\t\t\t\t     \\\n     if (TARGET_BIG_PIC)\t\t\t\t\t\t\t     \\\n       flag_pic = 2;\t\t\t\t\t\t\t     \\\n \t\t\t\t\t\t\t\t\t     \\"}, {"sha": "3e3036f726fb7e0ea3879f2edf66940ccdeae85e", "filename": "gcc/config/m88k/m88k.md", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d6cb8796007824d21c93c5d9ed9afc1c4ce0702/gcc%2Fconfig%2Fm88k%2Fm88k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d6cb8796007824d21c93c5d9ed9afc1c4ce0702/gcc%2Fconfig%2Fm88k%2Fm88k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.md?ref=2d6cb8796007824d21c93c5d9ed9afc1c4ce0702", "patch": "@@ -28,11 +28,15 @@\n (define_expand \"m88k_sccs_id\"\n   [(match_operand:SI 0 \"\" \"\")]\n   \"\"\n-  \"{ static char sccs_id[] = \\\"@(#)m88k.md\t1.96.4.3 1/14/92 09:46:15\\\";\n+  \"{ static char sccs_id[] = \\\"@(#)m88k.md\t2.0.2.1 28 Feb 1992 12:38:31\\\";\n      FAIL; }\")\n \f\n ;; Attribute specifications\n \n+; Target CPU.\n+(define_attr \"cpu\" \"m88000,m88100,m88110\"\n+  (symbol_ref \"m88k_cpu\"))\n+\n ; Type of each instruction.  Default is arithmetic.\n ; I'd like to write the list as this, but genattrtab won't accept it.\n ;\n@@ -642,14 +646,11 @@\n ;; The actual compare instructions.\n \n (define_insn \"\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=r,r\")\n-\t(compare:CC (match_operand:SI 1 \"register_operand\" \"rO,I\")\n-\t\t    (match_operand:SI 2 \"arith_operand\" \"rI,r\")))]\n+  [(set (match_operand:CC 0 \"register_operand\" \"=r\")\n+\t(compare:CC (match_operand:SI 1 \"register_operand\" \"rO\")\n+\t\t    (match_operand:SI 2 \"arith_operand\" \"rI\")))]\n   \"\"\n-  \"@\n-   cmp %0,%r1,%2\n-   cmp %0,%2,%1\\;xor.c %0,%#r0,%0\"\n-  [(set_attr \"type\" \"arith,marith\")])\n+  \"cmp %0,%r1,%2\")\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"register_operand\" \"=r,r\")"}, {"sha": "b059a3aa499f3b212b3c433eca5998e7c89c09a7", "filename": "gcc/config/vax/vax.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d6cb8796007824d21c93c5d9ed9afc1c4ce0702/gcc%2Fconfig%2Fvax%2Fvax.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d6cb8796007824d21c93c5d9ed9afc1c4ce0702/gcc%2Fconfig%2Fvax%2Fvax.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.c?ref=2d6cb8796007824d21c93c5d9ed9afc1c4ce0702", "patch": "@@ -152,6 +152,11 @@ print_operand_address (file, addr)\n \t  reg1 = XEXP (addr, 1);\n \t  addr = XEXP (addr, 0);\n \t}\n+      else if (GET_CODE (XEXP (addr, 0)) == REG)\n+\t{\n+\t  reg1 = XEXP (addr, 0);\n+\t  addr = XEXP (addr, 1);\n+\t}\n       else\n \tabort ();\n "}]}