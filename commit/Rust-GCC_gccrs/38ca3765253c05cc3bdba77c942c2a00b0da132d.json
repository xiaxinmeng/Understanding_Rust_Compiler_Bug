{"sha": "38ca3765253c05cc3bdba77c942c2a00b0da132d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzhjYTM3NjUyNTNjMDVjYzNiZGJhNzdjOTQyYzJhMDBiMGRhMTMyZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2007-03-14T21:03:59Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-03-14T21:03:59Z"}, "message": "configure.ac (HAVE_AS_IX86_SAHF): On x86 targets check whether the configured assembler supports the sahf mnemonic.\n\n        * configure.ac (HAVE_AS_IX86_SAHF): On x86 targets check whether\n        the configured assembler supports the sahf mnemonic.\n        * configure: Regenerate.\n        * config.in: Regenerate.\n\n        * config/i386/i386.md (x86_sahf_1): Depending on HAVE_AS_IX86_SAHF,\n        emit \"sahf\" or \".byte\\t0x9e\" as asm template.\n\nFrom-SVN: r122931", "tree": {"sha": "607098977428b569ac568220d0c2c564dc2232f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/607098977428b569ac568220d0c2c564dc2232f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38ca3765253c05cc3bdba77c942c2a00b0da132d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38ca3765253c05cc3bdba77c942c2a00b0da132d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38ca3765253c05cc3bdba77c942c2a00b0da132d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38ca3765253c05cc3bdba77c942c2a00b0da132d/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e9f646295d8d233b95d43a60cf2e596f38469c3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9f646295d8d233b95d43a60cf2e596f38469c3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9f646295d8d233b95d43a60cf2e596f38469c3e"}], "stats": {"total": 57, "additions": 56, "deletions": 1}, "files": [{"sha": "3cb33283abaddbec644ee8fd8ab02e1df0fe6aa8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38ca3765253c05cc3bdba77c942c2a00b0da132d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38ca3765253c05cc3bdba77c942c2a00b0da132d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=38ca3765253c05cc3bdba77c942c2a00b0da132d", "patch": "@@ -1,3 +1,13 @@\n+2007-03-14  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* configure.ac (HAVE_AS_IX86_SAHF): On x86 targets check whether\n+\tthe configured assembler supports the sahf mnemonic.\n+\t* configure: Regenerate.\n+\t* config.in: Regenerate.\n+\n+\t* config/i386/i386.md (x86_sahf_1): Depending on HAVE_AS_IX86_SAHF,\n+\temit \"sahf\" or \".byte\\t0x9e\" as asm template.\n+\n 2007-03-14  Michael Meissner  <michael.meissner@amd.com>\n \n \tPR 31018"}, {"sha": "69f7e9e65b8ff6330dd8c4cb4e69c3189b1de852", "filename": "gcc/config.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38ca3765253c05cc3bdba77c942c2a00b0da132d/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38ca3765253c05cc3bdba77c942c2a00b0da132d/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=38ca3765253c05cc3bdba77c942c2a00b0da132d", "patch": "@@ -228,6 +228,12 @@\n #endif\n \n \n+/* Define if your assembler supports the sahf mnemonic. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_AS_IX86_SAHF\n+#endif\n+\n+\n /* Define if your assembler supports the lituse_jsrdirect relocation. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_AS_JSRDIRECT_RELOCS"}, {"sha": "4d3120dff8659b43b959cc05d1c7692cdaec3f66", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38ca3765253c05cc3bdba77c942c2a00b0da132d/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38ca3765253c05cc3bdba77c942c2a00b0da132d/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=38ca3765253c05cc3bdba77c942c2a00b0da132d", "patch": "@@ -988,7 +988,7 @@\n \t(unspec:CC [(match_operand:HI 0 \"register_operand\" \"a\")]\n \t\t   UNSPEC_SAHF))]\n   \"TARGET_SAHF\"\n-  \"sahf\"\n+  \"* return HAVE_AS_IX86_SAHF ? \\\"sahf\\\" : \\\".byte\\t0x9e\\\";\"\n   [(set_attr \"length\" \"1\")\n    (set_attr \"athlon_decode\" \"vector\")\n    (set_attr \"amdfam10_decode\" \"direct\")"}, {"sha": "de3f6289b9e6991e01fe09422ee8a7fd8cba0845", "filename": "gcc/configure", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38ca3765253c05cc3bdba77c942c2a00b0da132d/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38ca3765253c05cc3bdba77c942c2a00b0da132d/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=38ca3765253c05cc3bdba77c942c2a00b0da132d", "patch": "@@ -15235,6 +15235,39 @@ cat >>confdefs.h <<\\_ACEOF\n #define HAVE_AS_IX86_FFREEP 1\n _ACEOF\n \n+fi\n+\n+    echo \"$as_me:$LINENO: checking assembler for sahf mnemonic\" >&5\n+echo $ECHO_N \"checking assembler for sahf mnemonic... $ECHO_C\" >&6\n+if test \"${gcc_cv_as_ix86_sahf+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  gcc_cv_as_ix86_sahf=no\n+  if test x$gcc_cv_as != x; then\n+    echo 'sahf' > conftest.s\n+    if { ac_try='$gcc_cv_as  -o conftest.o conftest.s >&5'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }\n+    then\n+\tgcc_cv_as_ix86_sahf=yes\n+    else\n+      echo \"configure: failed program was\" >&5\n+      cat conftest.s >&5\n+    fi\n+    rm -f conftest.o conftest.s\n+  fi\n+fi\n+echo \"$as_me:$LINENO: result: $gcc_cv_as_ix86_sahf\" >&5\n+echo \"${ECHO_T}$gcc_cv_as_ix86_sahf\" >&6\n+if test $gcc_cv_as_ix86_sahf = yes; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAVE_AS_IX86_SAHF 1\n+_ACEOF\n+\n fi\n \n     echo \"$as_me:$LINENO: checking assembler for different section symbol subtraction\" >&5"}, {"sha": "18134cae8fbbb0d71cbe17f2bbcfcb5c2f7800e8", "filename": "gcc/configure.ac", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38ca3765253c05cc3bdba77c942c2a00b0da132d/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38ca3765253c05cc3bdba77c942c2a00b0da132d/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=38ca3765253c05cc3bdba77c942c2a00b0da132d", "patch": "@@ -2808,6 +2808,12 @@ foo:\tnop\n       [AC_DEFINE(HAVE_AS_IX86_FFREEP, 1,\n         [Define if your assembler supports the ffreep mnemonic.])])\n \n+    gcc_GAS_CHECK_FEATURE([sahf mnemonic],\n+      gcc_cv_as_ix86_sahf,,,\n+      [sahf],,\n+      [AC_DEFINE(HAVE_AS_IX86_SAHF, 1,\n+        [Define if your assembler supports the sahf mnemonic.])])\n+\n     gcc_GAS_CHECK_FEATURE([different section symbol subtraction],\n       gcc_cv_as_ix86_diff_sect_delta,,,\n       [.section .rodata"}]}