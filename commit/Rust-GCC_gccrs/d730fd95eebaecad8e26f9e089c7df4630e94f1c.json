{"sha": "d730fd95eebaecad8e26f9e089c7df4630e94f1c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDczMGZkOTVlZWJhZWNhZDhlMjZmOWUwODljN2RmNDYzMGU5NGYxYw==", "commit": {"author": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2020-05-01T07:04:01Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2020-05-01T15:18:47Z"}, "message": "gcc: Enable bits for sanitizer support on FreeBSD x86_64\n\nThis patch add the necessary bits to suport libasan on FreeBSD x86_64.\n\ngcc\n\t* config/i386/i386.h: Define a new macro: SUBTARGET_SHADOW_OFFSET.\n\t* config/i386/i386.c (ix86_asan_shadow_offset): Use this macro.\n\t* config/i386/darwin.h: Override the SUBTARGET_SHADOW_OFFSET macro.\n\t* config/i386/freebsd.h: Likewise.\n\t* config/freebsd.h (LIBASAN_EARLY_SPEC): Define.\n\tLIBTSAN_EARLY_SPEC): Likewise. (LIBLSAN_EARLY_SPEC): Likewise.\n\nlibsanitizer:\n\n\t* configure.tgt: Add x86_64- and i?86-*-freebsd* targets.", "tree": {"sha": "8cf46989a075ad91f0be9d2eb137882a5c3a9d0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8cf46989a075ad91f0be9d2eb137882a5c3a9d0a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d730fd95eebaecad8e26f9e089c7df4630e94f1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d730fd95eebaecad8e26f9e089c7df4630e94f1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d730fd95eebaecad8e26f9e089c7df4630e94f1c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d730fd95eebaecad8e26f9e089c7df4630e94f1c/comments", "author": null, "committer": null, "parents": [{"sha": "bf1dde9790d304188b10228c24a448fa454ed7b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf1dde9790d304188b10228c24a448fa454ed7b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf1dde9790d304188b10228c24a448fa454ed7b0"}], "stats": {"total": 56, "additions": 53, "deletions": 3}, "files": [{"sha": "5a0a82128a8be6802449ee6b842fe94ad1f90e08", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d730fd95eebaecad8e26f9e089c7df4630e94f1c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d730fd95eebaecad8e26f9e089c7df4630e94f1c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d730fd95eebaecad8e26f9e089c7df4630e94f1c", "patch": "@@ -1,3 +1,12 @@\n+2020-05-01  Andreas Tobler  <andreast@gcc.gnu.org>\n+\n+\t* config/i386/i386.h: Define a new macro: SUBTARGET_SHADOW_OFFSET.\n+\t* config/i386/i386.c (ix86_asan_shadow_offset): Use this macro.\n+\t* config/i386/darwin.h: Override the SUBTARGET_SHADOW_OFFSET macro.\n+\t* config/i386/freebsd.h: Likewise.\n+\t* config/freebsd.h (LIBASAN_EARLY_SPEC): Define.\n+\tLIBTSAN_EARLY_SPEC): Likewise. (LIBLSAN_EARLY_SPEC): Likewise.\n+\n 2020-04-30  Alexandre Oliva <oliva@adacore.com>\n \n \t* doc/sourcebuild.texi (Effective-Target Keywords): Document"}, {"sha": "4b5140bae0220408aea679fbb608c751af29c247", "filename": "gcc/config/freebsd.h", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d730fd95eebaecad8e26f9e089c7df4630e94f1c/gcc%2Fconfig%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d730fd95eebaecad8e26f9e089c7df4630e94f1c/gcc%2Fconfig%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffreebsd.h?ref=d730fd95eebaecad8e26f9e089c7df4630e94f1c", "patch": "@@ -62,6 +62,27 @@ along with GCC; see the file COPYING3.  If not see\n #define USE_LD_AS_NEEDED 1\n #endif\n \n+/* Link -lasan early on the command line.  For -static-libasan, don't link\n+   it for -shared link, the executable should be compiled with -static-libasan\n+   in that case, and for executable link with --{,no-}whole-archive around\n+   it to force everything into the executable.  And similarly for -ltsan\n+   and -llsan.  */\n+#if defined(HAVE_LD_STATIC_DYNAMIC)\n+#undef LIBASAN_EARLY_SPEC\n+#define LIBASAN_EARLY_SPEC \"%{!shared:libasan_preinit%O%s} \" \\\n+  \"%{static-libasan:%{!shared:\" \\\n+  LD_STATIC_OPTION \" --whole-archive -lasan --no-whole-archive \" \\\n+  LD_DYNAMIC_OPTION \"}}%{!static-libasan:-lasan -lpthread}\"\n+#undef LIBTSAN_EARLY_SPEC\n+#define LIBTSAN_EARLY_SPEC \"%{static-libtsan:%{!shared:\" \\\n+  LD_STATIC_OPTION \" --whole-archive -ltsan --no-whole-archive \" \\\n+  LD_DYNAMIC_OPTION \"}}%{!static-libtsan:-ltsan -lpthread}\"\n+#undef LIBLSAN_EARLY_SPEC\n+#define LIBLSAN_EARLY_SPEC \"%{static-liblsan:%{!shared:\" \\\n+  LD_STATIC_OPTION \" --whole-archive -llsan --no-whole-archive \" \\\n+  LD_DYNAMIC_OPTION \"}}%{!static-liblsan:-llsan -lpthread}\"\n+#endif\n+\n /************************[  Target stuff  ]***********************************/\n \n /* All FreeBSD Architectures support the ELF object file format.  */"}, {"sha": "cff9a8c6b01e6105773df8b7afbee580b2e9cdea", "filename": "gcc/config/i386/darwin.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d730fd95eebaecad8e26f9e089c7df4630e94f1c/gcc%2Fconfig%2Fi386%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d730fd95eebaecad8e26f9e089c7df4630e94f1c/gcc%2Fconfig%2Fi386%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdarwin.h?ref=d730fd95eebaecad8e26f9e089c7df4630e94f1c", "patch": "@@ -347,6 +347,12 @@ along with GCC; see the file COPYING3.  If not see\n #define SUBTARGET_INIT_BUILTINS\t\t\t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     ix86_builtins[(int) IX86_BUILTIN_CFSTRING]\t\t\t\t\\\n+\n+/* Define the shadow offset for asan.  */\n+#undef SUBTARGET_SHADOW_OFFSET\n+#define SUBTARGET_SHADOW_OFFSET\t\\\n+  (TARGET_LP64 ? HOST_WIDE_INT_1 << 44 : HOST_WIDE_INT_1 << 29)\n+\n       = darwin_init_cfstring_builtins ((unsigned) (IX86_BUILTIN_CFSTRING)); \\\n     darwin_rename_builtins ();\t\t\t\t\t\t\\\n   } while(0)"}, {"sha": "9d66602142e06b6893569ff259f7181d9cca714d", "filename": "gcc/config/i386/freebsd.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d730fd95eebaecad8e26f9e089c7df4630e94f1c/gcc%2Fconfig%2Fi386%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d730fd95eebaecad8e26f9e089c7df4630e94f1c/gcc%2Fconfig%2Fi386%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ffreebsd.h?ref=d730fd95eebaecad8e26f9e089c7df4630e94f1c", "patch": "@@ -129,3 +129,7 @@ along with GCC; see the file COPYING3.  If not see\n \n #define TARGET_ASM_FILE_END file_end_indicate_exec_stack\n \n+/* Define the shadow offsets for asan.  */\n+#undef SUBTARGET_SHADOW_OFFSET\n+#define SUBTARGET_SHADOW_OFFSET\t\\\n+  (TARGET_LP64 ? HOST_WIDE_INT_1 << 46 : HOST_WIDE_INT_1 << 30)"}, {"sha": "c4a538ed0c8e901fd0b44b74f0c425821d24bdad", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d730fd95eebaecad8e26f9e089c7df4630e94f1c/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d730fd95eebaecad8e26f9e089c7df4630e94f1c/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=d730fd95eebaecad8e26f9e089c7df4630e94f1c", "patch": "@@ -1397,9 +1397,7 @@ ix86_legitimate_combined_insn (rtx_insn *insn)\n static unsigned HOST_WIDE_INT\n ix86_asan_shadow_offset (void)\n {\n-  return TARGET_LP64 ? (TARGET_MACHO ? (HOST_WIDE_INT_1 << 44)\n-\t\t\t\t     : HOST_WIDE_INT_C (0x7fff8000))\n-\t\t     : (HOST_WIDE_INT_1 << 29);\n+  return SUBTARGET_SHADOW_OFFSET;\n }\n \f\n /* Argument support functions.  */"}, {"sha": "08245f643225690a0cbc84f6bd45b663dc26e2c7", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d730fd95eebaecad8e26f9e089c7df4630e94f1c/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d730fd95eebaecad8e26f9e089c7df4630e94f1c/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=d730fd95eebaecad8e26f9e089c7df4630e94f1c", "patch": "@@ -1321,6 +1321,13 @@ extern const char *host_detect_local_cpu (int argc, const char **argv);\n #define SUBTARGET_FRAME_POINTER_REQUIRED 0\n #endif\n \n+/* Define the shadow offset for asan. Other OS's can override in the\n+   respective tm.h files.  */\n+#ifndef SUBTARGET_SHADOW_OFFSET\n+#define SUBTARGET_SHADOW_OFFSET\t    \\\n+  (TARGET_LP64 ? HOST_WIDE_INT_C (0x7fff8000) : HOST_WIDE_INT_1 << 29)\n+#endif\n+\n /* Make sure we can access arbitrary call frames.  */\n #define SETUP_FRAME_ADDRESSES()  ix86_setup_frame_addresses ()\n "}, {"sha": "134018503c324fe1fc219988cbc65b05a3f97f99", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d730fd95eebaecad8e26f9e089c7df4630e94f1c/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d730fd95eebaecad8e26f9e089c7df4630e94f1c/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=d730fd95eebaecad8e26f9e089c7df4630e94f1c", "patch": "@@ -1,3 +1,6 @@\n+2020-05-01  Andreas Tobler  <andreast@gcc.gnu.org>\n+\n+\t* configure.tgt: Add x86_64- and i?86-*-freebsd* targets.\n \n 2020-05-01  Andreas Tobler  <andreast@gcc.gnu.org>\n "}, {"sha": "52503f1a880ba08b515b8a429ac44a262873f74b", "filename": "libsanitizer/configure.tgt", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d730fd95eebaecad8e26f9e089c7df4630e94f1c/libsanitizer%2Fconfigure.tgt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d730fd95eebaecad8e26f9e089c7df4630e94f1c/libsanitizer%2Fconfigure.tgt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure.tgt?ref=d730fd95eebaecad8e26f9e089c7df4630e94f1c", "patch": "@@ -22,6 +22,8 @@\n TSAN_TARGET_DEPENDENT_OBJECTS=\n SANITIZER_COMMON_TARGET_DEPENDENT_OBJECTS=\n case \"${target}\" in\n+  x86_64-*-freebsd* | i?86-*-freebsd*)\n+\t;;\n   x86_64-*-linux* | i?86-*-linux*)\n \tif test x$ac_cv_sizeof_void_p = x8; then\n \t\tTSAN_SUPPORTED=yes"}]}