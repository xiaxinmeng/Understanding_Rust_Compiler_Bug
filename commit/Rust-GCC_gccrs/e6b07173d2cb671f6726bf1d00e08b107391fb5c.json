{"sha": "e6b07173d2cb671f6726bf1d00e08b107391fb5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTZiMDcxNzNkMmNiNjcxZjY3MjZiZjFkMDBlMDhiMTA3MzkxZmI1Yw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-02-05T15:51:13Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2017-02-05T15:51:13Z"}, "message": "re PR bootstrap/78985 (profiledbootstrap failure by -Wuninitialized)\n\n\tPR bootstrap/78985\n\t* config/s390/s390.c (s390_gimplify_va_arg): Initialize local\n\tvariable to NULL.\n\t(print_operand_address): Initialize a struct to zero.\n\nFrom-SVN: r245195", "tree": {"sha": "312546b6bbe6620c5aeff5195be479195ff57d97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/312546b6bbe6620c5aeff5195be479195ff57d97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6b07173d2cb671f6726bf1d00e08b107391fb5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6b07173d2cb671f6726bf1d00e08b107391fb5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6b07173d2cb671f6726bf1d00e08b107391fb5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6b07173d2cb671f6726bf1d00e08b107391fb5c/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "139d4065e80d9141a23cf84d8b31fc9ee7c5d8c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/139d4065e80d9141a23cf84d8b31fc9ee7c5d8c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/139d4065e80d9141a23cf84d8b31fc9ee7c5d8c3"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "22a8102f2991b90a31284bc21421b1444d242413", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6b07173d2cb671f6726bf1d00e08b107391fb5c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6b07173d2cb671f6726bf1d00e08b107391fb5c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e6b07173d2cb671f6726bf1d00e08b107391fb5c", "patch": "@@ -1,3 +1,10 @@\n+2017-02-05  Martin Liska  <mliska@suse.cz>\n+\n+\tPR bootstrap/78985\n+\t* config/s390/s390.c (s390_gimplify_va_arg): Initialize local\n+\tvariable to NULL.\n+\t(print_operand_address): Initialize a struct to zero.\n+\n 2017-02-05  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* doc/extend.texi (x86 specific memory model extensions for"}, {"sha": "b7b93accae894b53a4730fd1f03f87a44be2658b", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6b07173d2cb671f6726bf1d00e08b107391fb5c/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6b07173d2cb671f6726bf1d00e08b107391fb5c/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=e6b07173d2cb671f6726bf1d00e08b107391fb5c", "patch": "@@ -7347,6 +7347,7 @@ void\n print_operand_address (FILE *file, rtx addr)\n {\n   struct s390_address ad;\n+  memset (&ad, 0, sizeof (s390_address));\n \n   if (s390_loadrelative_operand_p (addr, NULL, NULL))\n     {\n@@ -12195,7 +12196,7 @@ s390_gimplify_va_arg (tree valist, tree type, gimple_seq *pre_p,\n   tree f_gpr, f_fpr, f_ovf, f_sav;\n   tree gpr, fpr, ovf, sav, reg, t, u;\n   int indirect_p, size, n_reg, sav_ofs, sav_scale, max_reg;\n-  tree lab_false, lab_over;\n+  tree lab_false, lab_over = NULL_TREE;\n   tree addr = create_tmp_var (ptr_type_node, \"addr\");\n   bool left_align_p; /* How a value < UNITS_PER_LONG is aligned within\n \t\t\ta stack slot.  */"}]}