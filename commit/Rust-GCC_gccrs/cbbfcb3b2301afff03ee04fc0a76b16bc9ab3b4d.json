{"sha": "cbbfcb3b2301afff03ee04fc0a76b16bc9ab3b4d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2JiZmNiM2IyMzAxYWZmZjAzZWUwNGZjMGE3NmIxNmJjOWFiM2I0ZA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-08-04T20:47:45Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-08-04T20:47:45Z"}, "message": "Warning fixes:\n\n\t* builtins.c (expand_builtin_memcmp, expand_builtin_strcmp): Wrap\n\tprototypes in macro HAVE_cmpstrsi.\n\n\t* cpplib.c (cpp_get_token): Remove unused label `op3'.\n\n\t* emit-rtl.c (operand_subword): Remove unused variable\n\t`bits_per_word'.\n\n\t* rtl.c (shallow_copy_rtx): Remove unused variable `format_ptr'.\n\n\t* tree.c (chainon): Wrap variable `t2' in macro ENABLE_CHECKING.\n\nFrom-SVN: r28514", "tree": {"sha": "ec50149b27e3358c107ee3fce7dc644eba2b0acc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec50149b27e3358c107ee3fce7dc644eba2b0acc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cbbfcb3b2301afff03ee04fc0a76b16bc9ab3b4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbbfcb3b2301afff03ee04fc0a76b16bc9ab3b4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbbfcb3b2301afff03ee04fc0a76b16bc9ab3b4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbbfcb3b2301afff03ee04fc0a76b16bc9ab3b4d/comments", "author": null, "committer": null, "parents": [{"sha": "e88e3c0bf663344a642f0ebbd49483b9590411ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e88e3c0bf663344a642f0ebbd49483b9590411ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e88e3c0bf663344a642f0ebbd49483b9590411ef"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "0ae4eacebb38d42d0a4b56eff1369810a79b7412", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbbfcb3b2301afff03ee04fc0a76b16bc9ab3b4d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbbfcb3b2301afff03ee04fc0a76b16bc9ab3b4d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cbbfcb3b2301afff03ee04fc0a76b16bc9ab3b4d", "patch": "@@ -1,3 +1,17 @@\n+Wed Aug  4 16:39:24 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* builtins.c (expand_builtin_memcmp, expand_builtin_strcmp): Wrap\n+\tprototypes in macro HAVE_cmpstrsi.\n+\n+\t* cpplib.c (cpp_get_token): Remove unused label `op3'.\n+\n+\t* emit-rtl.c (operand_subword): Remove unused variable\n+\t`bits_per_word'.\n+\n+\t* rtl.c (shallow_copy_rtx): Remove unused variable `format_ptr'.\n+\n+\t* tree.c (chainon): Wrap variable `t2' in macro ENABLE_CHECKING.\n+\n Wed Aug  4 13:29:23 1999  Zack Weinberg  <zack@bitmover.com>\n \n \t* cpphash.c (macroexpand): Delete leading whitespace when arg"}, {"sha": "9f2b81643b0c39bc9b82bec24dac81dbfaf3a651", "filename": "gcc/builtins.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbbfcb3b2301afff03ee04fc0a76b16bc9ab3b4d/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbbfcb3b2301afff03ee04fc0a76b16bc9ab3b4d/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=cbbfcb3b2301afff03ee04fc0a76b16bc9ab3b4d", "patch": "@@ -78,8 +78,10 @@ static rtx expand_builtin_next_arg\tPROTO((tree));\n static rtx expand_builtin_va_start\tPROTO((int, tree));\n static rtx expand_builtin_va_end\tPROTO((tree));\n static rtx expand_builtin_va_copy\tPROTO((tree));\n+#ifdef HAVE_cmpstrsi\n static rtx expand_builtin_memcmp\tPROTO((tree, tree, rtx));\n static rtx expand_builtin_strcmp\tPROTO((tree, rtx));\n+#endif\n static rtx expand_builtin_memcpy\tPROTO((tree));\n static rtx expand_builtin_strcpy\tPROTO((tree));\n static rtx expand_builtin_memset\tPROTO((tree));"}, {"sha": "f2fadf28b03236a273902634d3fa178ddf8a8231", "filename": "gcc/cpplib.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbbfcb3b2301afff03ee04fc0a76b16bc9ab3b4d/gcc%2Fcpplib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbbfcb3b2301afff03ee04fc0a76b16bc9ab3b4d/gcc%2Fcpplib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.c?ref=cbbfcb3b2301afff03ee04fc0a76b16bc9ab3b4d", "patch": "@@ -2205,7 +2205,6 @@ cpp_get_token (pfile)\n \t      if (opts->cplusplus && PEEKN (1) == '*')\n \t\t{\n \t\t  /* In C++, there's a ->* operator.  */\n-\t\top3:\n \t\t  token = CPP_OTHER;\n \t\t  pfile->only_seen_white = 0;\n \t\t  CPP_RESERVE (pfile, 4);"}, {"sha": "7d20d751e10542d7d9897f9f63ce18a616fa827f", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbbfcb3b2301afff03ee04fc0a76b16bc9ab3b4d/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbbfcb3b2301afff03ee04fc0a76b16bc9ab3b4d/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=cbbfcb3b2301afff03ee04fc0a76b16bc9ab3b4d", "patch": "@@ -1195,7 +1195,6 @@ operand_subword (op, i, validate_address, mode)\n {\n   HOST_WIDE_INT val;\n   int size_ratio = HOST_BITS_PER_WIDE_INT / BITS_PER_WORD;\n-  int bits_per_word = BITS_PER_WORD;\n \n   if (mode == VOIDmode)\n     mode = GET_MODE (op);"}, {"sha": "668e92fea90a8bdddc82f5b0399a584245527243", "filename": "gcc/rtl.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbbfcb3b2301afff03ee04fc0a76b16bc9ab3b4d/gcc%2Frtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbbfcb3b2301afff03ee04fc0a76b16bc9ab3b4d/gcc%2Frtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.c?ref=cbbfcb3b2301afff03ee04fc0a76b16bc9ab3b4d", "patch": "@@ -495,7 +495,6 @@ shallow_copy_rtx (orig)\n      rtx orig;\n {\n   register int i;\n-  register char *format_ptr;\n   register RTX_CODE code = GET_CODE (orig);\n   register rtx copy = rtx_alloc (code);\n "}, {"sha": "9ab2fea4f5478ca0b4a980e7216ad8b57773c647", "filename": "gcc/tree.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbbfcb3b2301afff03ee04fc0a76b16bc9ab3b4d/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbbfcb3b2301afff03ee04fc0a76b16bc9ab3b4d/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=cbbfcb3b2301afff03ee04fc0a76b16bc9ab3b4d", "patch": "@@ -1950,7 +1950,9 @@ chainon (op1, op2)\n   if (op1)\n     {\n       register tree t1;\n+#ifdef ENABLE_CHECKING\n       register tree t2;\n+#endif\n \n       for (t1 = op1; TREE_CHAIN (t1); t1 = TREE_CHAIN (t1))\n \t;"}]}