{"sha": "bf5b295c6ae0da86f24a4646d0552d3b5ce8bbb3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY1YjI5NWM2YWUwZGE4NmYyNGE0NjQ2ZDA1NTJkM2I1Y2U4YmJiMw==", "commit": {"author": {"name": "David Ayers", "email": "d.ayers@inode.at", "date": "2005-12-15T16:46:17Z"}, "committer": {"name": "David Ayers", "email": "ayers@gcc.gnu.org", "date": "2005-12-15T16:46:17Z"}, "message": "re PR libobjc/14382 ([libobjc] Calling +initialize on a per category basis)\n\n2005-12-15  David Ayers  <d.ayers@inode.at>\n\n\tPR libobjc/14382\n\t* README (+load,+initialize): Fix documentation to reflect\n\tintended and implemented semantics for +load and +initialize.\n\nFrom-SVN: r108584", "tree": {"sha": "16c60e929c53e436e23b2c78fdaee6226742efbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16c60e929c53e436e23b2c78fdaee6226742efbe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf5b295c6ae0da86f24a4646d0552d3b5ce8bbb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf5b295c6ae0da86f24a4646d0552d3b5ce8bbb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf5b295c6ae0da86f24a4646d0552d3b5ce8bbb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf5b295c6ae0da86f24a4646d0552d3b5ce8bbb3/comments", "author": null, "committer": null, "parents": [{"sha": "e6add59b161628111dff015502f88d6459927493", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6add59b161628111dff015502f88d6459927493", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6add59b161628111dff015502f88d6459927493"}], "stats": {"total": 31, "additions": 22, "deletions": 9}, "files": [{"sha": "3ac957d3baf24996e4deb529c7cde7b5cf640cba", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf5b295c6ae0da86f24a4646d0552d3b5ce8bbb3/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf5b295c6ae0da86f24a4646d0552d3b5ce8bbb3/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=bf5b295c6ae0da86f24a4646d0552d3b5ce8bbb3", "patch": "@@ -1,3 +1,9 @@\n+2005-12-15  David Ayers  <d.ayers@inode.at>\n+\n+\tPR libobjc/14382\n+\t* README (+load,+initialize): Fix documentation to reflect\n+\tintended and implemented semantics for +load and +initialize.\n+\t\n 2005-12-12  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \t* encoding.c (TYPE_FIELDS): Fix to skip over just _C_STRUCT_B and"}, {"sha": "093116fd594eb4e95deab220368cfc7fd1c59304", "filename": "libobjc/README", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf5b295c6ae0da86f24a4646d0552d3b5ce8bbb3/libobjc%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf5b295c6ae0da86f24a4646d0552d3b5ce8bbb3/libobjc%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FREADME?ref=bf5b295c6ae0da86f24a4646d0552d3b5ce8bbb3", "patch": "@@ -39,19 +39,26 @@ adopts it -- it is not enough to inherit them.  The flag\n `-Wprotocols' is the default which requires them defined.\n \n \n++load\n+===========\n+This method, if defined, is called for each class and category\n+implementation when the class is loaded into the runtime.  This method\n+is not inherited, and is thus not called for a subclass that doesn't\n+define it itself.  Thus, each +load method is called exactly once by\n+the runtime.  The runtime invocation of this method is thread safe.\n+\n+\n +initialize \n ===========\n \n This method, if defined, is called before any other instance or class\n-methods of that particular class.  This method is not inherited, and\n-is thus not called as initializer for a subclass that doesn't define\n-it itself.  Thus, each +initialize method is called exactly once (or\n-never if no methods of that particular class is never called).\n-Besides this, it is allowed to have several +initialize methods, one\n-for each category.  The order in which these (multiple methods) are\n-called is not well defined.  I am not completely certain what the\n-semantics of this method is for other implementations, but this is\n-how it works for GNU Objective C.\n+methods of that particular class.  For the GNU runtime, this method is \n+not inherited, and is thus not called as initializer for a subclass that \n+doesn't define it itself.  Thus, each +initialize method is called exactly \n+once by the runtime (or never if no methods of that particular class is \n+never called).  It is wise to guard against multiple invocations anyway \n+to remain portable with the NeXT runtime.  The runtime invocation of \n+this method is thread safe.\n \n \n Passivation/Activation/Typedstreams"}]}