{"sha": "3de4ac6d80c8ae24b58586003aded178d7ec8453", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2RlNGFjNmQ4MGM4YWUyNGI1ODU4NjAwM2FkZWQxNzhkN2VjODQ1Mw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2017-06-04T17:27:22Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2017-06-04T17:27:22Z"}, "message": "re PR c/80919 (ICE: Segmentation fault with -Wall when printing address of size 0 array)\n\n\tPR c/80919\n\t* c-format.c (matching_type_p): Return false if any of the types\n\trequires structural equality.\n\n\t* gcc.dg/format/pr80919.c: New test.\n\nFrom-SVN: r248860", "tree": {"sha": "6ba4790c15c824ab581b92a674b84f3d2c013668", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ba4790c15c824ab581b92a674b84f3d2c013668"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3de4ac6d80c8ae24b58586003aded178d7ec8453", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3de4ac6d80c8ae24b58586003aded178d7ec8453", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3de4ac6d80c8ae24b58586003aded178d7ec8453", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3de4ac6d80c8ae24b58586003aded178d7ec8453/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1bfb5860cf635ac4226cd6355360da77b2ba90a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bfb5860cf635ac4226cd6355360da77b2ba90a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bfb5860cf635ac4226cd6355360da77b2ba90a2"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "97335e89b35c8be7ddb8ad571bf682872c559c2a", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3de4ac6d80c8ae24b58586003aded178d7ec8453/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3de4ac6d80c8ae24b58586003aded178d7ec8453/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=3de4ac6d80c8ae24b58586003aded178d7ec8453", "patch": "@@ -1,3 +1,9 @@\n+2017-06-04  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/80919\n+\t* c-format.c (matching_type_p): Return false if any of the types\n+\trequires structural equality.\n+\n 2017-06-02  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/80892"}, {"sha": "732339b9b5eb5ffd3f0ef9dd9e080618fc0a731d", "filename": "gcc/c-family/c-format.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3de4ac6d80c8ae24b58586003aded178d7ec8453/gcc%2Fc-family%2Fc-format.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3de4ac6d80c8ae24b58586003aded178d7ec8453/gcc%2Fc-family%2Fc-format.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-format.c?ref=3de4ac6d80c8ae24b58586003aded178d7ec8453", "patch": "@@ -3278,6 +3278,12 @@ matching_type_p (tree spec_type, tree arg_type)\n   gcc_assert (spec_type);\n   gcc_assert (arg_type);\n \n+  /* If any of the types requires structural equality, we can't compare\n+     their canonical types.  */\n+  if (TYPE_STRUCTURAL_EQUALITY_P (spec_type)\n+      || TYPE_STRUCTURAL_EQUALITY_P (arg_type))\n+    return false;\n+\n   spec_type = TYPE_CANONICAL (spec_type);\n   arg_type = TYPE_CANONICAL (arg_type);\n "}, {"sha": "bfadad536014157c4503b34024ca02f326d10bdc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3de4ac6d80c8ae24b58586003aded178d7ec8453/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3de4ac6d80c8ae24b58586003aded178d7ec8453/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3de4ac6d80c8ae24b58586003aded178d7ec8453", "patch": "@@ -1,3 +1,8 @@\n+2017-06-04  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/80919\n+\t* gcc.dg/format/pr80919.c: New test.\n+\n 2017-06-02  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/80892"}, {"sha": "510c2e4e6c9c37cf25817f3717e50c839c6e6829", "filename": "gcc/testsuite/gcc.dg/format/pr80919.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3de4ac6d80c8ae24b58586003aded178d7ec8453/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fpr80919.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3de4ac6d80c8ae24b58586003aded178d7ec8453/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fpr80919.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fpr80919.c?ref=3de4ac6d80c8ae24b58586003aded178d7ec8453", "patch": "@@ -0,0 +1,16 @@\n+/* PR c/80919 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wall\" } */\n+\n+void\n+fn (void)\n+{\n+  int a[0];\n+  __builtin_printf(\"%d\\n\", &a); /* { dg-warning \"expects argument of type\" } */\n+  __builtin_printf(\"%i\\n\", &a); /* { dg-warning \"expects argument of type\" } */\n+\n+  __builtin_printf(\"%o\\n\", &a); /* { dg-warning \"expects argument of type\" } */\n+  __builtin_printf(\"%u\\n\", &a); /* { dg-warning \"expects argument of type\" } */\n+  __builtin_printf(\"%x\\n\", &a); /* { dg-warning \"expects argument of type\" } */\n+  __builtin_printf(\"%X\\n\", &a); /* { dg-warning \"expects argument of type\" } */\n+}"}]}