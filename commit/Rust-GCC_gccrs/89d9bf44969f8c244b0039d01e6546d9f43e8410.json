{"sha": "89d9bf44969f8c244b0039d01e6546d9f43e8410", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODlkOWJmNDQ5NjlmOGMyNDRiMDAzOWQwMWU2NTQ2ZDlmNDNlODQxMA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2018-11-14T19:30:47Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2018-11-14T19:30:47Z"}, "message": "[debug/88006] -fdebug-types-section gives undefined ref\n\nhttps://gcc.gnu.org/ml/gcc-patches/2018-11/msg01280.html\n\tPR debug/88006\n\tPR debug/87462\n\t* dwarf2out.c (dwarf2out_finish): Apply resolve_addr to comdat\n\ttype list.\n\n\t* g++.dg/debug/dwarf2/pr87462.C: New.\n\t* g++.dg/debug/dwarf2/pr88006.C: New.\n\nFrom-SVN: r266158", "tree": {"sha": "e24c92c7c661777a9703651f7a7e01ba10c13acd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e24c92c7c661777a9703651f7a7e01ba10c13acd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89d9bf44969f8c244b0039d01e6546d9f43e8410", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89d9bf44969f8c244b0039d01e6546d9f43e8410", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89d9bf44969f8c244b0039d01e6546d9f43e8410", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89d9bf44969f8c244b0039d01e6546d9f43e8410/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1ded030b85ae26a11a062505786b6701d9ef588f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ded030b85ae26a11a062505786b6701d9ef588f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ded030b85ae26a11a062505786b6701d9ef588f"}], "stats": {"total": 75, "additions": 75, "deletions": 0}, "files": [{"sha": "0bb3b84439bddef84c668e5c962c9749692e8e23", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89d9bf44969f8c244b0039d01e6546d9f43e8410/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89d9bf44969f8c244b0039d01e6546d9f43e8410/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=89d9bf44969f8c244b0039d01e6546d9f43e8410", "patch": "@@ -1,3 +1,10 @@\n+2018-11-14  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR debug/88006\n+\tPR debug/87462\n+\t* dwarf2out.c (dwarf2out_finish): Apply resolve_addr to comdat\n+\ttype list.\n+\n 2018-11-14  David Malcolm  <dmalcolm@redhat.com>\n \n \t* Makefile.in (CFLAGS-optinfo-emit-json.o): Add $(ZLIBINC)."}, {"sha": "aba8843498111fcc755d51005d9befc90a1e8e0c", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89d9bf44969f8c244b0039d01e6546d9f43e8410/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89d9bf44969f8c244b0039d01e6546d9f43e8410/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=89d9bf44969f8c244b0039d01e6546d9f43e8410", "patch": "@@ -31182,6 +31182,8 @@ dwarf2out_finish (const char *filename)\n     FOR_EACH_CHILD (die, c, gcc_assert (! c->die_mark));\n   }\n #endif\n+  for (ctnode = comdat_type_list; ctnode != NULL; ctnode = ctnode->next)\n+    resolve_addr (ctnode->root_die);\n   resolve_addr (comp_unit_die ());\n   move_marked_base_types ();\n "}, {"sha": "9d52f14fc00e1b46f645e31a12c0916093c5cf07", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89d9bf44969f8c244b0039d01e6546d9f43e8410/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89d9bf44969f8c244b0039d01e6546d9f43e8410/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=89d9bf44969f8c244b0039d01e6546d9f43e8410", "patch": "@@ -1,3 +1,10 @@\n+2018-11-14  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR debug/88006\n+\tPR debug/87462\n+\t* g++.dg/debug/dwarf2/pr87462.C: New.\n+\t* g++.dg/debug/dwarf2/pr88006.C: New.\n+\n 2018-11-14  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* g++.dg/cpp0x/nsdmi-union6.C: Test locations too."}, {"sha": "bfbaad0c4138c11ef6b3ce3c15a5b495bb826dee", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/pr87462.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89d9bf44969f8c244b0039d01e6546d9f43e8410/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr87462.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89d9bf44969f8c244b0039d01e6546d9f43e8410/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr87462.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr87462.C?ref=89d9bf44969f8c244b0039d01e6546d9f43e8410", "patch": "@@ -0,0 +1,20 @@\n+// { dg-additional-options \"-dA -std=gnu++17 -gdwarf-4 -O1 -fdebug-types-section\" }\n+// reject .pseudo label, but \"label\" is ok.\n+// { dg-final { scan-assembler-not \"\\[^L\\\"\\]_ZN5Test18testFuncEv\" } }\n+// undefined ref to _ZN5Test18testFuncEv\n+\n+class Test1 {\n+public:\n+  static int testFunc() { return 1; }\n+};\n+\n+template <typename T,\n+          T (*funcImpl)()>\n+class TestWrapper {\n+public:\n+  static T func() __attribute((noinline)) { return (*funcImpl)(); } \n+};\n+\n+int main() {\n+  return TestWrapper<int, &Test1::testFunc>::func();\n+}"}, {"sha": "86584e177639af4069a04d2a4a0e0a207e02e5d5", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/pr88006.C", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89d9bf44969f8c244b0039d01e6546d9f43e8410/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr88006.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89d9bf44969f8c244b0039d01e6546d9f43e8410/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr88006.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr88006.C?ref=89d9bf44969f8c244b0039d01e6546d9f43e8410", "patch": "@@ -0,0 +1,39 @@\n+// { dg-additional-options \"-dA -std=gnu++17 -gdwarf-4 -O1 -fdebug-types-section\" }\n+// reject .pseudo label, but \"label\" is ok.\n+// { dg-final { scan-assembler-not \"\\[^\\\"\\]_ZN3Foo4mfunEv\" } }\n+// undefined ref to _ZN3Foo4mfunEv\n+\n+struct Foo {\n+  void mfun () {}\n+};\n+\n+struct A { static constexpr bool Value = false; };\n+\n+template <bool> struct B { typedef int Type; };\n+\n+class Arg\n+{\n+  template <typename Unused> struct Local : A {};\n+\n+public:\n+  template <typename Init, typename = typename B<Local<Init>::Value>::Type>\n+  Arg (Init) {}\n+};\n+\n+class Lambda {\n+  static constexpr int Unused = 0;\n+    \n+public:\n+  Lambda (Arg);\n+};\n+\n+// Generated ref to Foo::mfun in the type die of an instantiation of this\n+template <void (Foo::*unused)()> struct Callable {};\n+\n+class I {\n+  I() : lamb ([this] {}) {}\n+\n+  Lambda lamb;\n+\n+  Callable<&Foo::mfun> bm;\n+};"}]}