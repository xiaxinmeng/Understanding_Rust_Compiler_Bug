{"sha": "1f452424313d538719899bead8608ba567e05041", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY0NTI0MjQzMTNkNTM4NzE5ODk5YmVhZDg2MDhiYTU2N2UwNTA0MQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2005-12-30T23:57:30Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-12-30T23:57:30Z"}, "message": "tree-outof-ssa.c (_elim_graph): Change the type of STACK to VEC(int,heap).\n\n\t* tree-outof-ssa.c (_elim_graph): Change the type of STACK to\n\tVEC(int,heap).\n\t(new_elim_graph, delete_elim_graph, elim_forward,\n\teliminate_phi): Use the VEC API on STACK.\n\nFrom-SVN: r109182", "tree": {"sha": "552dfeddfb88c26ea64400843d4c7e4598f0a949", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/552dfeddfb88c26ea64400843d4c7e4598f0a949"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f452424313d538719899bead8608ba567e05041", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f452424313d538719899bead8608ba567e05041", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f452424313d538719899bead8608ba567e05041", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f452424313d538719899bead8608ba567e05041/comments", "author": null, "committer": null, "parents": [{"sha": "c90186eb1a6524b144a0268f75e5bb197d18c4be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c90186eb1a6524b144a0268f75e5bb197d18c4be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c90186eb1a6524b144a0268f75e5bb197d18c4be"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "76a237dd638f9cbad616f1c0f61c9866fd860fa0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f452424313d538719899bead8608ba567e05041/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f452424313d538719899bead8608ba567e05041/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1f452424313d538719899bead8608ba567e05041", "patch": "@@ -1,3 +1,10 @@\n+2005-12-30  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* tree-outof-ssa.c (_elim_graph): Change the type of STACK to\n+\tVEC(int,heap).\n+\t(new_elim_graph, delete_elim_graph, elim_forward,\n+\teliminate_phi): Use the VEC API on STACK.\n+\n 2005-12-29  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* tree.h (VALUE_HANDLE_VUSES): New."}, {"sha": "6431b457bb7f4e6aa7f4a4e0984a2c82771d1556", "filename": "gcc/tree-outof-ssa.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f452424313d538719899bead8608ba567e05041/gcc%2Ftree-outof-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f452424313d538719899bead8608ba567e05041/gcc%2Ftree-outof-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-outof-ssa.c?ref=1f452424313d538719899bead8608ba567e05041", "patch": "@@ -91,7 +91,7 @@ typedef struct _elim_graph {\n   sbitmap visited;\n \n   /* Stack for visited nodes.  */\n-  varray_type stack;\n+  VEC(int,heap) *stack;\n   \n   /* The variable partition map.  */\n   var_map map;\n@@ -224,7 +224,7 @@ new_elim_graph (int size)\n   g->nodes = VEC_alloc (tree, heap, 30);\n   g->const_copies = VEC_alloc (tree, heap, 20);\n   g->edge_list = VEC_alloc (int, heap, 20);\n-  VARRAY_INT_INIT (g->stack, 30, \" Elimination Stack\");\n+  g->stack = VEC_alloc (int, heap, 30);\n   \n   g->visited = sbitmap_alloc (size);\n \n@@ -248,6 +248,7 @@ static inline void\n delete_elim_graph (elim_graph g)\n {\n   sbitmap_free (g->visited);\n+  VEC_free (int, heap, g->stack);\n   VEC_free (int, heap, g->edge_list);\n   VEC_free (tree, heap, g->const_copies);\n   VEC_free (tree, heap, g->nodes);\n@@ -418,7 +419,7 @@ elim_forward (elim_graph g, int T)\n       if (!TEST_BIT (g->visited, S))\n         elim_forward (g, S);\n     });\n-  VARRAY_PUSH_INT (g->stack, T);\n+  VEC_safe_push (int, heap, g->stack, T);\n }\n \n \n@@ -514,7 +515,7 @@ eliminate_phi (edge e, elim_graph g)\n       tree var;\n \n       sbitmap_zero (g->visited);\n-      VARRAY_POP_ALL (g->stack);\n+      VEC_truncate (int, g->stack, 0);\n \n       for (x = 0; VEC_iterate (tree, g->nodes, x, var); x++)\n         {\n@@ -524,10 +525,9 @@ eliminate_phi (edge e, elim_graph g)\n \t}\n        \n       sbitmap_zero (g->visited);\n-      while (VARRAY_ACTIVE_SIZE (g->stack) > 0)\n+      while (VEC_length (int, g->stack) > 0)\n \t{\n-\t  x = VARRAY_TOP_INT (g->stack);\n-\t  VARRAY_POP (g->stack);\n+\t  x = VEC_pop (int, g->stack);\n \t  if (!TEST_BIT (g->visited, x))\n \t    elim_create (g, x);\n \t}"}]}