{"sha": "c03cae4e066066278c8435c409829a9bf851e49f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzAzY2FlNGUwNjYwNjYyNzhjODQzNWM0MDk4MjlhOWJmODUxZTQ5Zg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-07-07T09:45:43Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-07-12T10:18:37Z"}, "message": "Display the number of components BB vectorized\n\nThis amends the optimization message printed when a basic-block\npart is vectorized to mention the number of SLP graph entries.\nThis helps when debugging vectorization differences and we end up\nmerging SLP instances for costing purposes.\n\n2021-07-07  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vect-slp.c (vect_slp_region): Show the number of\n\tSLP graph entries in the optimization message.\n\n\t* g++.dg/vect/slp-pr87105.cc: Adjust.\n\t* gcc.dg/vect/bb-slp-pr54400.c: Likewise.", "tree": {"sha": "7fb6c39ee94a9d625ac7452fd11c64bff4ef960d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7fb6c39ee94a9d625ac7452fd11c64bff4ef960d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c03cae4e066066278c8435c409829a9bf851e49f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c03cae4e066066278c8435c409829a9bf851e49f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c03cae4e066066278c8435c409829a9bf851e49f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c03cae4e066066278c8435c409829a9bf851e49f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92343e0ba4d47f21ae20ffcb83d736bdbc15dae0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92343e0ba4d47f21ae20ffcb83d736bdbc15dae0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92343e0ba4d47f21ae20ffcb83d736bdbc15dae0"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "451a117e2d285900c694139151e5a45267776f9f", "filename": "gcc/testsuite/g++.dg/vect/slp-pr87105.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c03cae4e066066278c8435c409829a9bf851e49f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fslp-pr87105.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c03cae4e066066278c8435c409829a9bf851e49f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fslp-pr87105.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fslp-pr87105.cc?ref=c03cae4e066066278c8435c409829a9bf851e49f", "patch": "@@ -99,7 +99,7 @@ void quadBoundingBoxA(const Point bez[3], Box& bBox) noexcept {\n \n // We should have if-converted everything down to straight-line code\n // { dg-final { scan-tree-dump-times \"<bb \\[0-9\\]+>\" 1 \"slp2\" } }\n-// { dg-final { scan-tree-dump-times \"basic block part vectorized\" 1 \"slp2\" { xfail { { ! vect_element_align } && { ! vect_hw_misalign } } } } }\n+// { dg-final { scan-tree-dump-times \"optimized: basic block part\" 1 \"slp2\" { xfail { { ! vect_element_align } && { ! vect_hw_misalign } } } } }\n // It's a bit awkward to detect that all stores were vectorized but the\n // following more or less does the trick\n // { dg-final { scan-tree-dump \"vect_\\[^\\r\\m\\]* = MIN\" \"slp2\" { xfail { { ! vect_element_align } && { ! vect_hw_misalign } } } } }"}, {"sha": "7c46fa0e4640ff670f9724a88664b2d250bd7dd6", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-pr54400.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c03cae4e066066278c8435c409829a9bf851e49f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pr54400.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c03cae4e066066278c8435c409829a9bf851e49f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pr54400.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pr54400.c?ref=c03cae4e066066278c8435c409829a9bf851e49f", "patch": "@@ -39,5 +39,5 @@ main ()\n }\n \n /* We are lacking an effective target for .REDUC_PLUS support.  */\n-/* { dg-final { scan-tree-dump-times \"basic block part vectorized\" 3 \"slp2\" { target x86_64-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"optimized: basic block part\" 3 \"slp2\" { target x86_64-*-* } } } */\n /* { dg-final { scan-tree-dump-not \" = VEC_PERM_EXPR\" \"slp2\" { target x86_64-*-* } } } */"}, {"sha": "cd002b3fb7c1b8d0092aedd4a90b9f2004154c13", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c03cae4e066066278c8435c409829a9bf851e49f/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c03cae4e066066278c8435c409829a9bf851e49f/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=c03cae4e066066278c8435c409829a9bf851e49f", "patch": "@@ -5827,12 +5827,16 @@ vect_slp_region (vec<basic_block> bbs, vec<data_reference_p> datarefs,\n \t\t  if (GET_MODE_SIZE\n \t\t\t(bb_vinfo->vector_mode).is_constant (&bytes))\n \t\t    dump_printf_loc (MSG_OPTIMIZED_LOCATIONS, vect_location,\n-\t\t\t\t     \"basic block part vectorized using %wu \"\n-\t\t\t\t     \"byte vectors\\n\", bytes);\n+\t\t\t\t     \"basic block part with %u components \"\n+\t\t\t\t     \"vectorized using %wu byte vectors\\n\",\n+\t\t\t\t     instance->subgraph_entries.length (),\n+\t\t\t\t     bytes);\n \t\t  else\n \t\t    dump_printf_loc (MSG_OPTIMIZED_LOCATIONS, vect_location,\n-\t\t\t\t     \"basic block part vectorized using \"\n-\t\t\t\t     \"variable length vectors\\n\");\n+\t\t\t\t     \"basic block part with %u components \"\n+\t\t\t\t     \"vectorized using variable length \"\n+\t\t\t\t     \"vectors\\n\",\n+\t\t\t\t     instance->subgraph_entries.length ());\n \t\t}\n \t    }\n \t}"}]}