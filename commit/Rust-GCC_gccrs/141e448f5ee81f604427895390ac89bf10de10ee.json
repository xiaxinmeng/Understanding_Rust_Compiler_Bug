{"sha": "141e448f5ee81f604427895390ac89bf10de10ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQxZTQ0OGY1ZWU4MWY2MDQ0Mjc4OTUzOTBhYzg5YmYxMGRlMTBlZQ==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2008-04-08T06:54:31Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-04-08T06:54:31Z"}, "message": "prj-util.adb (Executable_Of): New String parameter Language.\n\n2008-04-08  Vincent Celier  <celier@adacore.com>\n\n\t* prj-util.adb (Executable_Of): New String parameter Language. When\n\tAda_Main is False and Language is not empty, attempt to remove the body\n\tsuffix or the spec suffix of the language to get the base of the\n\texecutable file name.\n\t(Put): New Boolean parameter Lower_Case, defauilted to False. When\n\tLower_Case is True, put the value in lower case in the name list.\n\t(Executable_Of): If there is no executable suffix in the configuration,\n\tthen do not modify Executable_Extension_On_Target.\n\n\t* prj-util.ads (Executable_Of): New String parameter Language,\n\tdefaulted to the empty string.\n\t(Put): New Boolean parameter Lower_Case, defauilted to False\n\nFrom-SVN: r134046", "tree": {"sha": "be12c0cf554cc428146a9dca2a49d9394edbddc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be12c0cf554cc428146a9dca2a49d9394edbddc2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/141e448f5ee81f604427895390ac89bf10de10ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/141e448f5ee81f604427895390ac89bf10de10ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/141e448f5ee81f604427895390ac89bf10de10ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/141e448f5ee81f604427895390ac89bf10de10ee/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8bc65441c9f414aceba4877a593f3e25733aa02b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bc65441c9f414aceba4877a593f3e25733aa02b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bc65441c9f414aceba4877a593f3e25733aa02b"}], "stats": {"total": 138, "additions": 102, "deletions": 36}, "files": [{"sha": "2f953a3601831355c9a527229148de674d87e9db", "filename": "gcc/ada/prj-util.adb", "status": "modified", "additions": 90, "deletions": 31, "changes": 121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/141e448f5ee81f604427895390ac89bf10de10ee/gcc%2Fada%2Fprj-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/141e448f5ee81f604427895390ac89bf10de10ee/gcc%2Fada%2Fprj-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-util.adb?ref=141e448f5ee81f604427895390ac89bf10de10ee", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -109,7 +109,8 @@ package body Prj.Util is\n       In_Tree  : Project_Tree_Ref;\n       Main     : File_Name_Type;\n       Index    : Int;\n-      Ada_Main : Boolean := True) return File_Name_Type\n+      Ada_Main : Boolean := True;\n+      Language : String := \"\") return File_Name_Type\n    is\n       pragma Assert (Project /= No_Project);\n \n@@ -136,13 +137,55 @@ package body Prj.Util is\n \n       Naming : constant Naming_Data := In_Tree.Projects.Table (Project).Naming;\n \n-      Body_Suffix : constant String :=\n-                      Body_Suffix_Of (In_Tree, \"ada\", Naming);\n+      Spec_Suffix : Name_Id := No_Name;\n+      Body_Suffix : Name_Id := No_Name;\n \n-      Spec_Suffix : constant String :=\n-                      Spec_Suffix_Of (In_Tree, \"ada\", Naming);\n+      Spec_Suffix_Length : Natural := 0;\n+      Body_Suffix_Length : Natural := 0;\n+\n+      procedure Get_Suffixes\n+        (B_Suffix : String;\n+         S_Suffix : String);\n+      --  Get the non empty suffixes in variables Spec_Suffix and Body_Suffix\n+\n+      ------------------\n+      -- Get_Suffixes --\n+      ------------------\n+\n+      procedure Get_Suffixes\n+        (B_Suffix : String;\n+         S_Suffix : String)\n+      is\n+      begin\n+         if B_Suffix'Length > 0 then\n+            Name_Len := B_Suffix'Length;\n+            Name_Buffer (1 .. Name_Len) := B_Suffix;\n+            Body_Suffix := Name_Find;\n+            Body_Suffix_Length := B_Suffix'Length;\n+         end if;\n+\n+         if S_Suffix'Length > 0 then\n+            Name_Len := S_Suffix'Length;\n+            Name_Buffer (1 .. Name_Len) := S_Suffix;\n+            Spec_Suffix := Name_Find;\n+            Spec_Suffix_Length := S_Suffix'Length;\n+         end if;\n+      end Get_Suffixes;\n+\n+   --  Start of processing for Executable_Of\n \n    begin\n+      if Ada_Main then\n+         Get_Suffixes\n+           (B_Suffix => Body_Suffix_Of (In_Tree, \"ada\", Naming),\n+            S_Suffix => Spec_Suffix_Of (In_Tree, \"ada\", Naming));\n+\n+      elsif Language /= \"\" then\n+         Get_Suffixes\n+           (B_Suffix => Body_Suffix_Of (In_Tree, Language, Naming),\n+            S_Suffix => Spec_Suffix_Of (In_Tree, Language, Naming));\n+      end if;\n+\n       if Builder_Package /= No_Package then\n          if Get_Mode = Multi_Language then\n             Executable_Suffix_Name :=\n@@ -176,21 +219,21 @@ package body Prj.Util is\n                Truncated : Boolean := False;\n \n             begin\n-               if Last > Body_Suffix'Length\n-                  and then Name (Last - Body_Suffix'Length + 1 .. Last) =\n-                                                                  Body_Suffix\n+               if Last > Natural (Length_Of_Name (Body_Suffix))\n+                 and then Name (Last - Body_Suffix_Length + 1 .. Last) =\n+                            Get_Name_String (Body_Suffix)\n                then\n                   Truncated := True;\n-                  Last := Last - Body_Suffix'Length;\n+                  Last := Last - Body_Suffix_Length;\n                end if;\n \n                if not Truncated\n-                 and then Last > Spec_Suffix'Length\n-                 and then Name (Last - Spec_Suffix'Length + 1 .. Last) =\n-                                                                 Spec_Suffix\n+                 and then Last > Spec_Suffix_Length\n+                 and then Name (Last - Spec_Suffix_Length + 1 .. Last) =\n+                            Get_Name_String (Spec_Suffix)\n                then\n                   Truncated := True;\n-                  Last := Last - Spec_Suffix'Length;\n+                  Last := Last - Spec_Suffix_Length;\n                end if;\n \n                if Truncated then\n@@ -238,21 +281,24 @@ package body Prj.Util is\n       --  otherwise remove any suffix ('.' followed by other characters), if\n       --  there is one.\n \n-      if Ada_Main and then Name_Len > Body_Suffix'Length\n-         and then Name_Buffer (Name_Len - Body_Suffix'Length + 1 .. Name_Len) =\n-                    Body_Suffix\n+      if Body_Suffix /= No_Name\n+         and then Name_Len > Body_Suffix_Length\n+         and then Name_Buffer (Name_Len - Body_Suffix_Length + 1 .. Name_Len) =\n+                    Get_Name_String (Body_Suffix)\n       then\n          --  Found the body termination, remove it\n \n-         Name_Len := Name_Len - Body_Suffix'Length;\n+         Name_Len := Name_Len - Body_Suffix_Length;\n \n-      elsif Ada_Main and then Name_Len > Spec_Suffix'Length\n-         and then Name_Buffer (Name_Len - Spec_Suffix'Length + 1 .. Name_Len) =\n-                    Spec_Suffix\n+      elsif Spec_Suffix /= No_Name\n+            and then Name_Len > Spec_Suffix_Length\n+            and then\n+              Name_Buffer (Name_Len - Spec_Suffix_Length + 1 .. Name_Len) =\n+                Get_Name_String (Spec_Suffix)\n       then\n          --  Found the spec termination, remove it\n \n-         Name_Len := Name_Len - Spec_Suffix'Length;\n+         Name_Len := Name_Len - Spec_Suffix_Length;\n \n       else\n          --  Remove any suffix, if there is one\n@@ -284,8 +330,13 @@ package body Prj.Util is\n             Result     : File_Name_Type;\n \n          begin\n-            Executable_Extension_On_Target :=\n-              In_Tree.Projects.Table (Project).Config.Executable_Suffix;\n+            if In_Tree.Projects.Table (Project).Config.Executable_Suffix /=\n+              No_Name\n+            then\n+               Executable_Extension_On_Target :=\n+                 In_Tree.Projects.Table (Project).Config.Executable_Suffix;\n+            end if;\n+\n             Result := Executable_Name (Name_Find);\n             Executable_Extension_On_Target := Saved_EEOT;\n             return Result;\n@@ -418,31 +469,39 @@ package body Prj.Util is\n    ---------\n \n    procedure Put\n-     (Into_List : in out Name_List_Index;\n-      From_List : String_List_Id;\n-      In_Tree   : Project_Tree_Ref)\n+     (Into_List  : in out Name_List_Index;\n+      From_List  : String_List_Id;\n+      In_Tree    : Project_Tree_Ref;\n+      Lower_Case : Boolean := False)\n    is\n       Current_Name : Name_List_Index;\n       List         : String_List_Id;\n       Element      : String_Element;\n       Last         : Name_List_Index :=\n                        Name_List_Table.Last (In_Tree.Name_Lists);\n+      Value        : Name_Id;\n \n    begin\n       Current_Name := Into_List;\n-      while Current_Name /= No_Name_List and then\n-            In_Tree.Name_Lists.Table (Current_Name).Next /= No_Name_List\n+      while Current_Name /= No_Name_List\n+        and then In_Tree.Name_Lists.Table (Current_Name).Next /= No_Name_List\n       loop\n          Current_Name := In_Tree.Name_Lists.Table (Current_Name).Next;\n       end loop;\n \n       List := From_List;\n       while List /= Nil_String loop\n          Element := In_Tree.String_Elements.Table (List);\n+         Value := Element.Value;\n+\n+         if Lower_Case then\n+            Get_Name_String (Value);\n+            To_Lower (Name_Buffer (1 .. Name_Len));\n+            Value := Name_Find;\n+         end if;\n \n          Name_List_Table.Append\n-           (In_Tree.Name_Lists,\n-            (Name => Element.Value, Next => No_Name_List));\n+           (In_Tree.Name_Lists, (Name => Value, Next => No_Name_List));\n \n          Last := Last + 1;\n "}, {"sha": "e2a9558e5ebc8e845b4508db69e181a3b871cd08", "filename": "gcc/ada/prj-util.ads", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/141e448f5ee81f604427895390ac89bf10de10ee/gcc%2Fada%2Fprj-util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/141e448f5ee81f604427895390ac89bf10de10ee/gcc%2Fada%2Fprj-util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-util.ads?ref=141e448f5ee81f604427895390ac89bf10de10ee", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -27,23 +27,30 @@\n \n package Prj.Util is\n \n+   --  ??? throughout this spec, parameters are not well enough documented\n+\n    function Executable_Of\n      (Project  : Project_Id;\n       In_Tree  : Project_Tree_Ref;\n       Main     : File_Name_Type;\n       Index    : Int;\n-      Ada_Main : Boolean := True) return File_Name_Type;\n+      Ada_Main : Boolean := True;\n+      Language : String := \"\") return File_Name_Type;\n    --  Return the value of the attribute Builder'Executable for file Main in\n    --  the project Project, if it exists. If there is no attribute Executable\n    --  for Main, remove the suffix from Main; then, if the attribute\n    --  Executable_Suffix is specified, add this suffix, otherwise add the\n    --  standard executable suffix for the platform.\n+   --  What is Ada_Main???\n+   --  What is Language???\n \n    procedure Put\n-     (Into_List : in out Name_List_Index;\n-      From_List : String_List_Id;\n-      In_Tree   : Project_Tree_Ref);\n+     (Into_List  : in out Name_List_Index;\n+      From_List  : String_List_Id;\n+      In_Tree    : Project_Tree_Ref;\n+      Lower_Case : Boolean := False);\n    --  Append a name list to a string list\n+   --  Describe parameters???\n \n    procedure Duplicate\n      (This    : in out Name_List_Index;"}]}