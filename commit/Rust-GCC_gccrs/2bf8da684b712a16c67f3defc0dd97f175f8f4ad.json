{"sha": "2bf8da684b712a16c67f3defc0dd97f175f8f4ad", "node_id": "C_kwDOANBUbNoAKDJiZjhkYTY4NGI3MTJhMTZjNjdmM2RlZmMwZGQ5N2YxNzVmOGY0YWQ", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-01-26T21:07:29Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-01-26T21:07:29Z"}, "message": "rs6000: Fix up #include <immintrin.h> or <x86gprintrin.h> [PR104239]\n\nr12-4717-g7d37abedf58d66 added immintrin.h and x86gprintrin.h headers\nto rs6000, these headers are on x86 standalone headers that various\nprograms include directly rather than including them through\n<x86intrin.h>.\nUnfortunately, for that change the bmiintrin.h and bmi2intrin.h\nheaders haven't been adjusted, so the effect is that if one includes them\n(without including also x86intrin.h first) #error will trigger.\nFurthermore, when including such headers conditionally as some real-world\npackages do, this means a regression.\n\nThe following patch fixes it and matches what the x86 bmi{,2}intrin.h\nheaders do.\n\n2022-01-26  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/104239\n\t* config/rs6000/bmiintrin.h: Test _X86GPRINTRIN_H_INCLUDED instead of\n\t_X86INTRIN_H_INCLUDED and adjust #error wording.\n\t* config/rs6000/bmi2intrin.h: Likewise.\n\n\t* gcc.target/powerpc/pr104239-1.c: New test.\n\t* gcc.target/powerpc/pr104239-2.c: New test.", "tree": {"sha": "0c20e1a6cc8944636839141b3c94521937c4c35d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c20e1a6cc8944636839141b3c94521937c4c35d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2bf8da684b712a16c67f3defc0dd97f175f8f4ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bf8da684b712a16c67f3defc0dd97f175f8f4ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bf8da684b712a16c67f3defc0dd97f175f8f4ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bf8da684b712a16c67f3defc0dd97f175f8f4ad/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9bf217920457f2e2d46b601f24721780a20a031b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bf217920457f2e2d46b601f24721780a20a031b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bf217920457f2e2d46b601f24721780a20a031b"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "931a61d749f12586b2838855c5aa55cbb3d1cd7d", "filename": "gcc/config/rs6000/bmi2intrin.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bf8da684b712a16c67f3defc0dd97f175f8f4ad/gcc%2Fconfig%2Frs6000%2Fbmi2intrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bf8da684b712a16c67f3defc0dd97f175f8f4ad/gcc%2Fconfig%2Frs6000%2Fbmi2intrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fbmi2intrin.h?ref=2bf8da684b712a16c67f3defc0dd97f175f8f4ad", "patch": "@@ -29,8 +29,8 @@\n    standard C or GNU C extensions, which are more portable and better\n    optimized across multiple targets.  */\n \n-#if !defined _X86INTRIN_H_INCLUDED\n-# error \"Never use <bmi2intrin.h> directly; include <x86intrin.h> instead.\"\n+#if !defined _X86GPRINTRIN_H_INCLUDED\n+# error \"Never use <bmi2intrin.h> directly; include <x86gprintrin.h> instead.\"\n #endif\n \n #ifndef _BMI2INTRIN_H_INCLUDED"}, {"sha": "76cbc4724aa56e6cc02a4c44e0ce194064944c31", "filename": "gcc/config/rs6000/bmiintrin.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bf8da684b712a16c67f3defc0dd97f175f8f4ad/gcc%2Fconfig%2Frs6000%2Fbmiintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bf8da684b712a16c67f3defc0dd97f175f8f4ad/gcc%2Fconfig%2Frs6000%2Fbmiintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fbmiintrin.h?ref=2bf8da684b712a16c67f3defc0dd97f175f8f4ad", "patch": "@@ -29,8 +29,8 @@\n    standard C or GNU C extensions, which are more portable and better\n    optimized across multiple targets.  */\n \n-#if !defined _X86INTRIN_H_INCLUDED\n-# error \"Never use <bmiintrin.h> directly; include <x86intrin.h> instead.\"\n+#if !defined _X86GPRINTRIN_H_INCLUDED\n+# error \"Never use <bmiintrin.h> directly; include <x86gprintrin.h> instead.\"\n #endif\n \n #ifndef _BMIINTRIN_H_INCLUDED"}, {"sha": "eacdedd5c38c4b8ae2a3dfd595872df658028455", "filename": "gcc/testsuite/gcc.target/powerpc/pr104239-1.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bf8da684b712a16c67f3defc0dd97f175f8f4ad/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr104239-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bf8da684b712a16c67f3defc0dd97f175f8f4ad/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr104239-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr104239-1.c?ref=2bf8da684b712a16c67f3defc0dd97f175f8f4ad", "patch": "@@ -0,0 +1,10 @@\n+/* PR target/104239 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mdejagnu-cpu=power8 -DNO_WARN_X86_INTRINSICS\" } */\n+/* { dg-require-effective-target powerpc_p8vector_ok } */\n+\n+#if __has_include(<immintrin.h>)\n+#include <immintrin.h>\n+#endif\n+\n+int i;"}, {"sha": "1bf316f970152a0f3ee20b669e971080a2a9dcc7", "filename": "gcc/testsuite/gcc.target/powerpc/pr104239-2.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bf8da684b712a16c67f3defc0dd97f175f8f4ad/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr104239-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bf8da684b712a16c67f3defc0dd97f175f8f4ad/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr104239-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr104239-2.c?ref=2bf8da684b712a16c67f3defc0dd97f175f8f4ad", "patch": "@@ -0,0 +1,10 @@\n+/* PR target/104239 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mdejagnu-cpu=power8 -DNO_WARN_X86_INTRINSICS\" } */\n+/* { dg-require-effective-target powerpc_p8vector_ok } */\n+\n+#if __has_include(<x86gprintrin.h>)\n+#include <x86gprintrin.h>\n+#endif\n+\n+int i;"}]}