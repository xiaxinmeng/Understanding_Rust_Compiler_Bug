{"sha": "76aa42d2663180d0eda360689a42040ac7ec92bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZhYTQyZDI2NjMxODBkMGVkYTM2MDY4OWE0MjA0MGFjN2VjOTJiZA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2011-05-27T22:46:11Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-05-27T22:46:11Z"}, "message": "Change export code to use the backend interface.\n\n\t* go-backend.c: Include \"output.h\".\n\t(go_write_export_data): New function.\n\t* go-c.h (go_write_export_data): Declare.\n\t* Make-lang.in (go/go-backend.o): Depend on output.h.\n\t(go/export.o): Depend on $(GO_C_H).  Do not depend on\n\t$(MACHMODE_H), output.h, or $(TARGET_H).\n\nFrom-SVN: r174366", "tree": {"sha": "dbd080404d65f3dde4d423621c09556b357bc027", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbd080404d65f3dde4d423621c09556b357bc027"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76aa42d2663180d0eda360689a42040ac7ec92bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76aa42d2663180d0eda360689a42040ac7ec92bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76aa42d2663180d0eda360689a42040ac7ec92bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76aa42d2663180d0eda360689a42040ac7ec92bd/comments", "author": null, "committer": null, "parents": [{"sha": "d112944143e99e9a99a78b43cdd60dc940c0209f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d112944143e99e9a99a78b43cdd60dc940c0209f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d112944143e99e9a99a78b43cdd60dc940c0209f"}], "stats": {"total": 68, "additions": 36, "deletions": 32}, "files": [{"sha": "5df1e050b8748f8d2fabe17f0dde48aa8dae9e55", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76aa42d2663180d0eda360689a42040ac7ec92bd/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76aa42d2663180d0eda360689a42040ac7ec92bd/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=76aa42d2663180d0eda360689a42040ac7ec92bd", "patch": "@@ -1,3 +1,12 @@\n+2011-05-27  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-backend.c: Include \"output.h\".\n+\t(go_write_export_data): New function.\n+\t* go-c.h (go_write_export_data): Declare.\n+\t* Make-lang.in (go/go-backend.o): Depend on output.h.\n+\t(go/export.o): Depend on $(GO_C_H).  Do not depend on\n+\t$(MACHMODE_H), output.h, or $(TARGET_H).\n+\n 2011-05-24  Joseph Myers  <joseph@codesourcery.com>\n \n \t* Make-lang.in (GCCGO_OBJS): Remove prefix.o."}, {"sha": "ef5dc753d0a1ca215438e30466250055c5c49482", "filename": "gcc/go/Make-lang.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76aa42d2663180d0eda360689a42040ac7ec92bd/gcc%2Fgo%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76aa42d2663180d0eda360689a42040ac7ec92bd/gcc%2Fgo%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FMake-lang.in?ref=76aa42d2663180d0eda360689a42040ac7ec92bd", "patch": "@@ -224,7 +224,7 @@ GO_IMPORT_H = go/gofrontend/import.h go/gofrontend/export.h\n GO_RUNTIME_H = go/gofrontend/runtime.h go/gofrontend/runtime.def\n \n go/go-backend.o: go/go-backend.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-\t$(TM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(TARGET_H)\n+\t$(TM_H) $(RTL_H) $(TREE_H) $(TM_P_H) output.h $(TARGET_H)\n \n go/go-lang.o: go/go-lang.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(OPTS_H) \\\n \t\t$(TREE_H) $(GIMPLE_H) $(GGC_H) $(TOPLEV_H) debug.h options.h \\\n@@ -248,8 +248,8 @@ go/%.o: go/gofrontend/%.cc\n go/dataflow.o: go/gofrontend/dataflow.cc $(GO_SYSTEM_H) $(GO_GOGO_H) \\\n \t$(GO_EXPRESSIONS_H) $(GO_STATEMENTS_H) go/gofrontend/dataflow.h\n go/export.o: go/gofrontend/export.cc $(GO_SYSTEM_H) \\\n-\t$(srcdir)/../include/sha1.h $(MACHMODE_H) output.h $(TARGET_H) \\\n-\t$(GO_GOGO_H) $(GO_TYPES_H) $(GO_STATEMENTS_H) go/gofrontend/export.h\n+\t$(srcdir)/../include/sha1.h $(GO_C_H) $(GO_GOGO_H) $(GO_TYPES_H) \\\n+\t$(GO_STATEMENTS_H) go/gofrontend/export.h\n go/expressions.o: go/gofrontend/expressions.cc $(GO_SYSTEM_H) $(TOPLEV_H) \\\n \tintl.h $(TREE_H) $(GIMPLE_H) tree-iterator.h convert.h $(REAL_H) \\\n \trealmpfr.h $(GO_C_H) $(GO_GOGO_H) $(GO_TYPES_H) \\"}, {"sha": "60a97db7df4e295ce7f391d33c67d2897773bed1", "filename": "gcc/go/go-backend.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76aa42d2663180d0eda360689a42040ac7ec92bd/gcc%2Fgo%2Fgo-backend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76aa42d2663180d0eda360689a42040ac7ec92bd/gcc%2Fgo%2Fgo-backend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-backend.c?ref=76aa42d2663180d0eda360689a42040ac7ec92bd", "patch": "@@ -24,6 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"rtl.h\"\n #include \"tree.h\"\n #include \"tm_p.h\"\n+#include \"output.h\"\n #include \"target.h\"\n \n #include \"go-c.h\"\n@@ -91,3 +92,21 @@ go_imported_unsafe (void)\n   /* Let the backend know that the options have changed.  */\n   targetm.override_options_after_change ();\n }\n+\n+/* This is called by the Go frontend proper to add data to the\n+   .go_export section.  */\n+\n+void\n+go_write_export_data (const char *bytes, unsigned int size)\n+{\n+  static section* sec;\n+\n+  if (sec == NULL)\n+    {\n+      gcc_assert (targetm.have_named_sections);\n+      sec = get_section (\".go_export\", SECTION_DEBUG, NULL);\n+    }\n+\n+  switch_to_section (sec);\n+  assemble_string (bytes, size);\n+}"}, {"sha": "f70f1ad6ccf656e574b480066e277264b601f54b", "filename": "gcc/go/go-c.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76aa42d2663180d0eda360689a42040ac7ec92bd/gcc%2Fgo%2Fgo-c.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76aa42d2663180d0eda360689a42040ac7ec92bd/gcc%2Fgo%2Fgo-c.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-c.h?ref=76aa42d2663180d0eda360689a42040ac7ec92bd", "patch": "@@ -66,6 +66,8 @@ extern void go_trampoline_info (unsigned int *size, unsigned int *alignment);\n \n extern void go_imported_unsafe (void);\n \n+extern void go_write_export_data (const char *, unsigned int);\n+\n #if defined(__cplusplus) && !defined(ENABLE_BUILD_WITH_CXX)\n } /* End extern \"C\".  */\n #endif"}, {"sha": "48088adddd3374862032ffe8a9ab2e429f6cc9e4", "filename": "gcc/go/gofrontend/export.cc", "status": "modified", "additions": 3, "deletions": 24, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76aa42d2663180d0eda360689a42040ac7ec92bd/gcc%2Fgo%2Fgofrontend%2Fexport.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76aa42d2663180d0eda360689a42040ac7ec92bd/gcc%2Fgo%2Fgofrontend%2Fexport.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexport.cc?ref=76aa42d2663180d0eda360689a42040ac7ec92bd", "patch": "@@ -5,20 +5,10 @@\n // license that can be found in the LICENSE file.\n \n #include \"go-system.h\"\n-#include \"sha1.h\"\n-\n-#ifndef ENABLE_BUILD_WITH_CXX\n-extern \"C\"\n-{\n-#endif\n \n-#include \"machmode.h\"\n-#include \"output.h\"\n-#include \"target.h\"\n+#include \"sha1.h\"\n \n-#ifndef ENABLE_BUILD_WITH_CXX\n-}\n-#endif\n+#include \"go-c.h\"\n \n #include \"gogo.h\"\n #include \"types.h\"\n@@ -416,7 +406,6 @@ Export::Stream::write_checksum(const std::string& s)\n // Class Stream_to_section.\n \n Stream_to_section::Stream_to_section()\n-  : section_(NULL)\n {\n }\n \n@@ -425,15 +414,5 @@ Stream_to_section::Stream_to_section()\n void\n Stream_to_section::do_write(const char* bytes, size_t length)\n {\n-  section* sec = (section*) this->section_;\n-  if (sec == NULL)\n-    {\n-      go_assert(targetm.have_named_sections);\n-\n-      sec = get_section(\".go_export\", SECTION_DEBUG, NULL);\n-      this->section_ = (void*) sec;\n-    }\n-\n-  switch_to_section(sec);\n-  assemble_string(bytes, length);\n+  go_write_export_data (bytes, length);\n }"}, {"sha": "ef249779303da9dd6ecc258884d654634b3275c2", "filename": "gcc/go/gofrontend/export.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76aa42d2663180d0eda360689a42040ac7ec92bd/gcc%2Fgo%2Fgofrontend%2Fexport.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76aa42d2663180d0eda360689a42040ac7ec92bd/gcc%2Fgo%2Fgofrontend%2Fexport.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexport.h?ref=76aa42d2663180d0eda360689a42040ac7ec92bd", "patch": "@@ -179,11 +179,6 @@ class Stream_to_section : public Export::Stream\n  protected:\n   void\n   do_write(const char*, size_t);\n-\n- private:\n-  // The section we are writing to; this is really union section\n-  // defined in output.h.\n-  void* section_;\n };\n \n #endif // !defined(GO_EXPORT_H)"}]}