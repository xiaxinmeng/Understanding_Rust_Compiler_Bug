{"sha": "7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZmNmJkYjcyNzhmY2Q2NmIwZTJmMWQzOGVkOWEzMTczMzQ0OWY3OA==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2017-10-19T08:11:26Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2017-10-19T08:11:26Z"}, "message": "Add dg-require-stack-size\n\n2017-10-19  Tom de Vries  <tom@codesourcery.com>\n\n\t* lib/target-supports-dg.exp (dg-require-stack-size): New proc.\n\t* gcc.c-torture/execute/20030209-1.c: Use dg-require-stack-size.\n\t* gcc.c-torture/execute/20040805-1.c: Same.\n\t* gcc.c-torture/execute/920410-1.c: Same.\n\t* gcc.c-torture/execute/921113-1.c: Same.\n\t* gcc.c-torture/execute/921208-2.c: Same.\n\t* gcc.c-torture/execute/comp-goto-1.c: Same.\n\t* gcc.c-torture/execute/pr20621-1.c: Same.\n\t* gcc.c-torture/execute/pr28982b.c: Same.\n\t* gcc.dg/tree-prof/comp-goto-1.c: Same.\n\n\t* doc/sourcebuild.texi (Test Directives, Variants of\n\tdg-require-support): Add dg-require-stack-size.\n\nFrom-SVN: r253882", "tree": {"sha": "a3876c73b1a3ecb25b40b3cb3ac624d1932c1b44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3876c73b1a3ecb25b40b3cb3ac624d1932c1b44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78/comments", "author": null, "committer": null, "parents": [{"sha": "439d2350251a050f4d00ae4af1d2dff5c569d52e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/439d2350251a050f4d00ae4af1d2dff5c569d52e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/439d2350251a050f4d00ae4af1d2dff5c569d52e"}], "stats": {"total": 102, "additions": 50, "deletions": 52}, "files": [{"sha": "91a291702256c4721dcdc7cdb5ada61f98afc508", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78", "patch": "@@ -1,3 +1,8 @@\n+2017-10-19  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* doc/sourcebuild.texi (Test Directives, Variants of\n+\tdg-require-support): Add dg-require-stack-size.\n+\n 2017-10-19  Martin Liska  <mliska@suse.cz>\n \n \tPR sanitizer/82517"}, {"sha": "7d6d4a381a63d87e0c6b4746537cbc5feeae2d32", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78", "patch": "@@ -2358,6 +2358,9 @@ Skip the test if the target does not support the @code{-fstack-check}\n option.  If @var{check} is @code{\"\"}, support for @code{-fstack-check}\n is checked, for @code{-fstack-check=(\"@var{check}\")} otherwise.\n \n+@item dg-require-stack-size @var{size}\n+Skip the test if the target does not support a stack size of @var{size}.\n+\n @item dg-require-visibility @var{vis}\n Skip the test if the target does not support the @code{visibility} attribute.\n If @var{vis} is @code{\"\"}, support for @code{visibility(\"hidden\")} is"}, {"sha": "f48860adb3b9a7a5180c169fd0cf37b709fa5731", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78", "patch": "@@ -1,3 +1,16 @@\n+2017-10-19  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* lib/target-supports-dg.exp (dg-require-stack-size): New proc.\n+\t* gcc.c-torture/execute/20030209-1.c: Use dg-require-stack-size.\n+\t* gcc.c-torture/execute/20040805-1.c: Same.\n+\t* gcc.c-torture/execute/920410-1.c: Same.\n+\t* gcc.c-torture/execute/921113-1.c: Same.\n+\t* gcc.c-torture/execute/921208-2.c: Same.\n+\t* gcc.c-torture/execute/comp-goto-1.c: Same.\n+\t* gcc.c-torture/execute/pr20621-1.c: Same.\n+\t* gcc.c-torture/execute/pr28982b.c: Same.\n+\t* gcc.dg/tree-prof/comp-goto-1.c: Same.\n+\n 2017-10-19  Martin Liska  <mliska@suse.cz>\n \n \tPR sanitizer/82517"}, {"sha": "52f71ec35433cf8ea8672a3a220cb87c5bd91b99", "filename": "gcc/testsuite/gcc.c-torture/execute/20030209-1.c", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030209-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030209-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030209-1.c?ref=7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78", "patch": "@@ -1,12 +1,5 @@\n-/* { dg-add-options stack_size } */\n+/* { dg-require-stack-size \"8*100*100\" } */\n \n-#ifdef STACK_SIZE\n-#if STACK_SIZE < 8*100*100\n-#define SKIP\n-#endif\n-#endif\n-\n-#ifndef SKIP\n double x[100][100];\n int main ()\n {\n@@ -18,10 +11,3 @@ int main ()\n     abort ();\n   exit (0);\n }\n-#else\n-int\n-main ()\n-{\n-  exit (0);\n-}\n-#endif"}, {"sha": "f31109266b1488da93404ca60b393cf673fdc1a1", "filename": "gcc/testsuite/gcc.c-torture/execute/20040805-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040805-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040805-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040805-1.c?ref=7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78", "patch": "@@ -1,6 +1,6 @@\n-/* { dg-add-options stack_size } */\n+/* { dg-require-stack-size \"0x12000\" } */\n \n-#if __INT_MAX__ < 32768 || (defined(STACK_SIZE) && STACK_SIZE < 0x12000)\n+#if __INT_MAX__ < 32768\n int main () { exit (0); }\n #else\n int a[2] = { 2, 3 };"}, {"sha": "daeff5e39904d22fa4fb6d8fdac03005046eb746", "filename": "gcc/testsuite/gcc.c-torture/execute/920410-1.c", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920410-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920410-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920410-1.c?ref=7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78", "patch": "@@ -1,8 +1,4 @@\n-/* { dg-add-options stack_size } */\n+/* { dg-require-stack-size \"40000 * 4 + 256\" } */\n \n-#define STACK_REQUIREMENT (40000 * 4 + 256)\n-#if defined (STACK_SIZE) && STACK_SIZE < STACK_REQUIREMENT\n-main () { exit (0); }\n-#else\n main(){int d[40000];d[0]=0;exit(0);}\n-#endif\n+"}, {"sha": "824e69f04c4d2f828247b4e639d0eb05d1132934", "filename": "gcc/testsuite/gcc.c-torture/execute/921113-1.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F921113-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F921113-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F921113-1.c?ref=7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-add-options stack_size } */\n-\n-#define STACK_REQUIREMENT (128 * 128 * 4 + 1024)\n-#if defined (STACK_SIZE) && STACK_SIZE < STACK_REQUIREMENT\n-main () { exit (0); }\n-#else\n+/* { dg-require-stack-size \"128 * 128 * 4 + 1024\" } */\n \n typedef struct {\n   float wsx;\n@@ -62,4 +57,3 @@ main()\n   exit(0);\n }\n \n-#endif"}, {"sha": "01e14f8cffea12811e081586805d47ee616ffe20", "filename": "gcc/testsuite/gcc.c-torture/execute/921208-2.c", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F921208-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F921208-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F921208-2.c?ref=7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78", "patch": "@@ -1,10 +1,5 @@\n /* { dg-require-effective-target untyped_assembly } */\n-/* { dg-add-options stack_size } */\n-\n-#define STACK_REQUIREMENT (100000 * 4 + 1024)\n-#if defined (STACK_SIZE) && STACK_SIZE < STACK_REQUIREMENT\n-main () { exit (0); }\n-#else\n+/* { dg-require-stack-size \"100000 * 4 + 1024\" } */\n \n g(){}\n \n@@ -25,5 +20,3 @@ main ()\n   f();\n   exit(0);\n }\n-\n-#endif"}, {"sha": "4379fe70e9ceb5270effe4f5d6d0658b7558c17a", "filename": "gcc/testsuite/gcc.c-torture/execute/comp-goto-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcomp-goto-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcomp-goto-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcomp-goto-1.c?ref=7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78", "patch": "@@ -1,9 +1,9 @@\n /* { dg-require-effective-target label_values } */\n-/* { dg-add-options stack_size } */\n+/* { dg-require-stack-size \"4000\" } */\n \n #include <stdlib.h>\n \n-#if (!defined(STACK_SIZE) || STACK_SIZE >= 4000) && __INT_MAX__ >= 2147483647\n+#if __INT_MAX__ >= 2147483647\n typedef unsigned int uint32;\n typedef signed int sint32;\n "}, {"sha": "b2a9785cd6f2162ad843a57b42ff5f3de0f0903a", "filename": "gcc/testsuite/gcc.c-torture/execute/pr20621-1.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr20621-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr20621-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr20621-1.c?ref=7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78", "patch": "@@ -1,12 +1,9 @@\n-/* { dg-add-options stack_size } */\n+/* { dg-require-stack-size \"0x10000\" } */\n \n /* When generating o32 MIPS PIC, main's $gp save slot was out of range\n    of a single load instruction.  */\n struct big { int i[sizeof (int) >= 4 && sizeof (void *) >= 4 ? 0x4000 : 4]; };\n struct big gb;\n int foo (struct big b, int x) { return b.i[x]; }\n-#if defined(STACK_SIZE) && STACK_SIZE <= 0x10000\n-int main (void) { return 0; }\n-#else\n int main (void) { return foo (gb, 0) + foo (gb, 1); }\n-#endif\n+"}, {"sha": "b68fa9a705143a6701a826e55a31dd02f4c3addf", "filename": "gcc/testsuite/gcc.c-torture/execute/pr28982b.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr28982b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr28982b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr28982b.c?ref=7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78", "patch": "@@ -1,11 +1,8 @@\n-/* { dg-add-options stack_size } */\n+/* { dg-require-stack-size \"0x80100\" } */\n \n /* Like pr28982a.c, but with the spill slots outside the range of\n    a single sp-based load on ARM.  This test tests for cases where\n    the addresses in the base and index reloads require further reloads.  */\n-#if defined(STACK_SIZE) && STACK_SIZE <= 0x80100\n-int main (void) { return 0; }\n-#else\n #define NITER 4\n #define NVARS 20\n #define MULTI(X) \\\n@@ -57,4 +54,3 @@ main (void)\n       return 1;\n   return 0;\n }\n-#endif"}, {"sha": "baed1e3fa78a0042dce6667f44c3a16477f8ba15", "filename": "gcc/testsuite/gcc.dg/tree-prof/comp-goto-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fcomp-goto-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fcomp-goto-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fcomp-goto-1.c?ref=7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78", "patch": "@@ -1,11 +1,11 @@\n /* { dg-require-effective-target freorder } */\n /* { dg-require-effective-target label_values } */\n /* { dg-options \"-O2 -freorder-blocks-and-partition\" } */\n-/* { dg-add-options stack_size } */\n+/* { dg-require-stack-size \"4000\" } */\n \n #include <stdlib.h>\n \n-#if (!defined(STACK_SIZE) || STACK_SIZE >= 4000) && __INT_MAX__ >= 2147483647\n+#if __INT_MAX__ >= 2147483647\n typedef unsigned int uint32;\n typedef signed int sint32;\n "}, {"sha": "6080421fa9e700801a20e793985bbca5d47c009d", "filename": "gcc/testsuite/lib/target-supports-dg.exp", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78/gcc%2Ftestsuite%2Flib%2Ftarget-supports-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78/gcc%2Ftestsuite%2Flib%2Ftarget-supports-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports-dg.exp?ref=7ff6bdb7278fcd66b0e2f1d38ed9a31733449f78", "patch": "@@ -180,6 +180,21 @@ proc dg-require-iconv { args } {\n     }\n }\n \n+# If this target does not have sufficient stack size, skip this test.\n+\n+proc dg-require-stack-size { args } {\n+    if { ![is-effective-target stack_size] } {\n+\treturn\n+    }\n+    \n+    set stack_size [dg-effective-target-value stack_size]\n+    set required [expr [lindex $args 1]]\n+    if { $stack_size < $required } {\n+\tupvar dg-do-what dg-do-what\n+        set dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n+    }\n+}\n+\n # If this target does not support named sections skip this test.\n \n proc dg-require-named-sections { args } {"}]}