{"sha": "a5dfb4eee245afa9d56800bf36e0fdad91858b60", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVkZmI0ZWVlMjQ1YWZhOWQ1NjgwMGJmMzZlMGZkYWQ5MTg1OGI2MA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-16T12:38:04Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-16T12:38:04Z"}, "message": "(recorded_label_ref): New variable.\n\n(insert): Set instead of cse_jumps_altered.\n(cse_main): Initialize it and return 1 if nonzero at end.\n\nFrom-SVN: r10368", "tree": {"sha": "95ed3ea29cdf9b77bb9efa5f60c431baf2aa6535", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95ed3ea29cdf9b77bb9efa5f60c431baf2aa6535"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5dfb4eee245afa9d56800bf36e0fdad91858b60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5dfb4eee245afa9d56800bf36e0fdad91858b60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5dfb4eee245afa9d56800bf36e0fdad91858b60", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5dfb4eee245afa9d56800bf36e0fdad91858b60/comments", "author": null, "committer": null, "parents": [{"sha": "10fa1ee2964c5eab62cc4f803c40881b6b8a2745", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10fa1ee2964c5eab62cc4f803c40881b6b8a2745", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10fa1ee2964c5eab62cc4f803c40881b6b8a2745"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "6aa0fad1458a38c8c023c316c1cd19a5b5de741f", "filename": "gcc/cse.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5dfb4eee245afa9d56800bf36e0fdad91858b60/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5dfb4eee245afa9d56800bf36e0fdad91858b60/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=a5dfb4eee245afa9d56800bf36e0fdad91858b60", "patch": "@@ -343,6 +343,11 @@ static int max_uid;\n \n static int cse_jumps_altered;\n \n+/* Nonzero if we put a LABEL_REF into the hash table.  Since we may have put\n+   it into an INSN without a REG_LABEL, we have to rerun jump after CSE\n+   to put in the note.  */\n+static int recorded_label_ref;\n+\n /* canon_hash stores 1 in do_not_record\n    if it notices a reference to CC0, PC, or some other volatile\n    subexpression.  */\n@@ -1287,14 +1292,11 @@ insert (x, classp, hash, mode)\n \t    SET_HARD_REG_BIT (hard_regs_in_table, i);\n     }\n \n-  /* If X is a label, show we are altering jumps.  We don't KNOW\n-     we are, but we might be putting it into a insn which would\n-     then need a new REG_LABEL note.  Be conservative and say\n-     we alter jumps here; we usually will in this case anyway.  */\n+  /* If X is a label, show we recorded it.  */\n   if (GET_CODE (x) == LABEL_REF\n       || (GET_CODE (x) == CONST && GET_CODE (XEXP (x, 0)) == PLUS\n \t  && GET_CODE (XEXP (XEXP (x, 0), 0)) == LABEL_REF))\n-    cse_jumps_altered = 1;\n+    recorded_label_ref = 1;\n \n   /* Put an element for X into the right hash bucket.  */\n \n@@ -8215,6 +8217,7 @@ cse_main (f, nregs, after_loop, file)\n   register int i;\n \n   cse_jumps_altered = 0;\n+  recorded_label_ref = 0;\n   constant_pool_entries_cost = 0;\n   val.path_size = 0;\n \n@@ -8370,7 +8373,7 @@ cse_main (f, nregs, after_loop, file)\n   if (max_elements_made < n_elements_made)\n     max_elements_made = n_elements_made;\n \n-  return cse_jumps_altered;\n+  return cse_jumps_altered || recorded_label_ref;\n }\n \n /* Process a single basic block.  FROM and TO and the limits of the basic"}]}