{"sha": "ac8345a525674204550c7a9f5cbb3deec7467d6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM4MzQ1YTUyNTY3NDIwNDU1MGM3YTlmNWNiYjNkZWVjNzQ2N2Q2ZA==", "commit": {"author": {"name": "Andrew Burgess", "email": "aburgess@broadcom.com", "date": "2014-06-11T10:57:27Z"}, "committer": {"name": "Pedro Alves", "email": "palves@gcc.gnu.org", "date": "2014-06-11T10:57:27Z"}, "message": "Delete temporary string within demangler even in failure cases.\n\nA call to demangle_template might allocate storage within a temporary\nstring even if the call to demangle_template eventually returns\nfailure.\n\nThis will never cause the demangler to crash, but does leak memory, as\na result I've not added any tests for this.\n\nCalling string_delete is safe, even if nothing is allocated into the\nstring, the string is initialised with string_init, so we know the\ninternal pointers are NULL.\n\nlibiberty/ChangeLog\n\n\t* cplus-dem.c (do_type): Call string_delete even if the call to\n\tdemangle_template fails.\n\nFrom-SVN: r211449", "tree": {"sha": "4d52113401587f99e543f605783372eabe76714c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d52113401587f99e543f605783372eabe76714c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac8345a525674204550c7a9f5cbb3deec7467d6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac8345a525674204550c7a9f5cbb3deec7467d6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac8345a525674204550c7a9f5cbb3deec7467d6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac8345a525674204550c7a9f5cbb3deec7467d6d/comments", "author": null, "committer": null, "parents": [{"sha": "b785e0b8753dee45572f0ab735bb8752a3a888b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b785e0b8753dee45572f0ab735bb8752a3a888b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b785e0b8753dee45572f0ab735bb8752a3a888b0"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "ddd96cce82a267204910e94224966e9fa4626118", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac8345a525674204550c7a9f5cbb3deec7467d6d/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac8345a525674204550c7a9f5cbb3deec7467d6d/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=ac8345a525674204550c7a9f5cbb3deec7467d6d", "patch": "@@ -1,3 +1,8 @@\n+2014-06-11  Andrew Burgess  <aburgess@broadcom.com>\n+\n+\t* cplus-dem.c (do_type): Call string_delete even if the call to\n+\tdemangle_template fails.\n+\n 2014-06-01  Ray Donnelly  <mingw.android@gmail.com>\n \n \t* pex-win32.c (argv_to_cmdline): Don't quote"}, {"sha": "52767cc8fde1254d1c6bca78ee4aa7e6589975f6", "filename": "libiberty/cplus-dem.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac8345a525674204550c7a9f5cbb3deec7467d6d/libiberty%2Fcplus-dem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac8345a525674204550c7a9f5cbb3deec7467d6d/libiberty%2Fcplus-dem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcplus-dem.c?ref=ac8345a525674204550c7a9f5cbb3deec7467d6d", "patch": "@@ -3663,7 +3663,10 @@ do_type (struct work_stuff *work, const char **mangled, string *result)\n \t\t    string_delete (&temp);\n \t\t  }\n \t\telse\n-\t\t  break;\n+\t\t  {\n+\t\t    string_delete (&temp);\n+\t\t    break;\n+\t\t  }\n \t      }\n \t    else if (**mangled == 'Q')\n \t      {"}]}