{"sha": "3bccbef63effa37329f489a8ac71d8b7214e09b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JjY2JlZjYzZWZmYTM3MzI5ZjQ4OWE4YWM3MWQ4YjcyMTRlMDliMg==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@cygnus.co.uk", "date": "1999-07-29T18:09:33Z"}, "committer": {"name": "Bernd Schmidt", "email": "crux@gcc.gnu.org", "date": "1999-07-29T18:09:33Z"}, "message": "Fix a cross toolchain build problem\n\nFrom-SVN: r28339", "tree": {"sha": "9dcb9a955143d72661959f0daa46ce6c9309b6b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9dcb9a955143d72661959f0daa46ce6c9309b6b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bccbef63effa37329f489a8ac71d8b7214e09b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bccbef63effa37329f489a8ac71d8b7214e09b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bccbef63effa37329f489a8ac71d8b7214e09b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bccbef63effa37329f489a8ac71d8b7214e09b2/comments", "author": null, "committer": null, "parents": [{"sha": "7d505b82b3b82f5c731f4337c0bf643810634585", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d505b82b3b82f5c731f4337c0bf643810634585", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d505b82b3b82f5c731f4337c0bf643810634585"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "b1e443879ebb26a2f2a6d26d676c4d44d9d169b6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bccbef63effa37329f489a8ac71d8b7214e09b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bccbef63effa37329f489a8ac71d8b7214e09b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3bccbef63effa37329f489a8ac71d8b7214e09b2", "patch": "@@ -1,3 +1,9 @@\n+Thu Jul 29 19:01:58 1999  Bernd Schmidt  <bernds@cygnus.co.uk>\n+\n+\t* arm.h (Hint): Delete macro.\n+\tSubstitute HOST_WIDE_INT for Hint in some prototypes.\n+\t* arm.c: Substitute HOST_WIDE_INT for Hint in one prototype.\n+\n Thu Jul 29 09:21:42 1999  Nick Clifton  <nickc@cygnus.com>\n \n \t* builtins.c (expand_builtin_setjmp): Use force_operand to"}, {"sha": "ec2dfb1a9b2e88ea9e33e52c0521a9c211a5c857", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bccbef63effa37329f489a8ac71d8b7214e09b2/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bccbef63effa37329f489a8ac71d8b7214e09b2/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=3bccbef63effa37329f489a8ac71d8b7214e09b2", "patch": "@@ -68,7 +68,7 @@ static int function_really_clobbers_lr PROTO ((rtx));\n static void emit_multi_reg_push PROTO ((int));\n static void emit_sfm PROTO ((int, int));\n static enum arm_cond_code get_arm_condition_code PROTO ((rtx));\n-static int const_ok_for_op RTX_CODE_PROTO ((Hint, Rcode));\n+static int const_ok_for_op RTX_CODE_PROTO ((HOST_WIDE_INT, Rcode));\n \n /* True if we are currently building a constant table. */\n int making_const_table;"}, {"sha": "05a8cd0518a906c451952e4b340847d18a16f8a8", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bccbef63effa37329f489a8ac71d8b7214e09b2/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bccbef63effa37329f489a8ac71d8b7214e09b2/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=3bccbef63effa37329f489a8ac71d8b7214e09b2", "patch": "@@ -2208,7 +2208,6 @@ struct rtx_def;\n #include \"hwint.h\"\n #endif\n \n-#define Hint HOST_WIDE_INT\n \n #ifndef HAVE_MACHINE_MODES\n #include \"machmode.h\"\n@@ -2226,8 +2225,9 @@ struct rtx_def;\n \n void   arm_override_options PROTO ((void));\n int    use_return_insn PROTO ((int));\n-int    const_ok_for_arm PROTO ((Hint));\n-int    arm_split_constant RTX_CODE_PROTO ((Rcode, Mmode, Hint, Rtx, Rtx, int));\n+int    const_ok_for_arm PROTO ((HOST_WIDE_INT));\n+int    arm_split_constant RTX_CODE_PROTO ((Rcode, Mmode, HOST_WIDE_INT, Rtx,\n+\t\t\t\t\t   Rtx, int));\n Rcode  arm_canonicalize_comparison RTX_CODE_PROTO ((Rcode,  Rtx *));\n int    arm_return_in_memory PROTO ((Tree));\n int    legitimate_pic_operand_p PROTO ((Rtx));\n@@ -2268,9 +2268,11 @@ Rcode  minmax_code PROTO ((Rtx));\n int    adjacent_mem_locations PROTO ((Rtx, Rtx));\n int    load_multiple_operation PROTO ((Rtx, Mmode));\n int    store_multiple_operation PROTO ((Rtx, Mmode));\n-int    load_multiple_sequence PROTO ((Rtx *, int, int *, int *, Hint *));\n+int    load_multiple_sequence PROTO ((Rtx *, int, int *, int *,\n+\t\t\t\t      HOST_WIDE_INT *));\n char * emit_ldm_seq PROTO ((Rtx *, int));\n-int    store_multiple_sequence PROTO ((Rtx *, int, int *, int *, Hint *));\n+int    store_multiple_sequence PROTO ((Rtx *, int, int *, int *,\n+\t\t\t\t       HOST_WIDE_INT *));\n char * emit_stm_seq PROTO ((Rtx *, int));\n int    arm_valid_machine_decl_attribute PROTO ((Tree, Tree, Tree));\n Rtx    arm_gen_load_multiple PROTO ((int, int, Rtx, int, int, int, int, int));"}]}