{"sha": "cba5e7468d7c7a7f212da37db2e1de55641df5d3", "node_id": "C_kwDOANBUbNoAKGNiYTVlNzQ2OGQ3YzdhN2YyMTJkYTM3ZGIyZTFkZTU1NjQxZGY1ZDM", "commit": {"author": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-05-15T13:23:50Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2023-06-08T12:32:34Z"}, "message": "expand: Add procmacro loading function\n\nAdd a function to load a shared object procmacro and retrieve the list\nof available procedural macros.\n\ngcc/rust/ChangeLog:\n\n\t* Make-lang.in: Add rust-proc-macro object to list.\n\t* expand/rust-proc-macro.cc: New file.\n\t* expand/rust-proc-macro.h: New file.\n\nSigned-off-by: Pierre-Emmanuel Patry <pierre-emmanuel.patry@embecosm.com>", "tree": {"sha": "7863eeac2233dc72c96e9bc0bf1e2a99ab6bcdba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7863eeac2233dc72c96e9bc0bf1e2a99ab6bcdba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cba5e7468d7c7a7f212da37db2e1de55641df5d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cba5e7468d7c7a7f212da37db2e1de55641df5d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cba5e7468d7c7a7f212da37db2e1de55641df5d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cba5e7468d7c7a7f212da37db2e1de55641df5d3/comments", "author": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eace2796ddcd1465087400ced4736e8be630cbe9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eace2796ddcd1465087400ced4736e8be630cbe9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eace2796ddcd1465087400ced4736e8be630cbe9"}], "stats": {"total": 99, "additions": 99, "deletions": 0}, "files": [{"sha": "a6245d49c4fd45eb3f406594ae05b4e1fa19fede", "filename": "gcc/rust/Make-lang.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cba5e7468d7c7a7f212da37db2e1de55641df5d3/gcc%2Frust%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cba5e7468d7c7a7f212da37db2e1de55641df5d3/gcc%2Frust%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2FMake-lang.in?ref=cba5e7468d7c7a7f212da37db2e1de55641df5d3", "patch": "@@ -91,6 +91,7 @@ GRS_OBJS = \\\n \trust/rust-derive.o \\\n \trust/rust-derive-clone.o \\\n \trust/rust-derive-copy.o \\\n+\trust/rust-proc-macro.o \\\n     rust/rust-macro-invoc-lexer.o \\\n     rust/rust-macro-substitute-ctx.o \\\n     rust/rust-macro-builtins.o \\"}, {"sha": "22744cb547d2c913b94e0ee84cbfb3cd18dba98c", "filename": "gcc/rust/expand/rust-proc-macro.cc", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cba5e7468d7c7a7f212da37db2e1de55641df5d3/gcc%2Frust%2Fexpand%2Frust-proc-macro.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cba5e7468d7c7a7f212da37db2e1de55641df5d3/gcc%2Frust%2Fexpand%2Frust-proc-macro.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fexpand%2Frust-proc-macro.cc?ref=cba5e7468d7c7a7f212da37db2e1de55641df5d3", "patch": "@@ -0,0 +1,64 @@\n+// This file is part of GCC.\n+\n+// GCC is free software; you can redistribute it and/or modify it under\n+// the terms of the GNU General Public License as published by the Free\n+// Software Foundation; either version 3, or (at your option) any later\n+// version.\n+\n+// GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+// WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+// for more details.\n+\n+// You should have received a copy of the GNU General Public License\n+// along with GCC; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include \"rust-diagnostics.h\"\n+#include \"rust-proc-macro.h\"\n+#ifndef _WIN32\n+#include <dlfcn.h>\n+#endif\n+\n+namespace Rust {\n+\n+const std::string PROC_MACRO_DECL_PREFIX = \"__gccrs_proc_macro_decls_\";\n+\n+const ProcMacro::ProcmacroArray *\n+load_macros_array (std::string path)\n+{\n+#ifndef _WIN32\n+  void *handle = dlopen (path.c_str (), RTLD_LAZY | RTLD_LOCAL);\n+  // We're leaking the handle since we can't ever unload it\n+  if (!handle)\n+    {\n+      rust_debug (\"Error whilst opening procedural macro: %s\", dlerror ());\n+      return nullptr;\n+    }\n+\n+  // FIXME: Add CrateStableId handling, right now all versions may be loaded,\n+  // even incompatible ones.\n+  return *reinterpret_cast<const ProcMacro::ProcmacroArray **> (\n+    dlsym (handle, PROC_MACRO_DECL_PREFIX.c_str ()));\n+#else\n+  rust_sorry_at (Location (),\n+\t\t \"Procedural macros are not yet supported on windows host\");\n+  gcc_unreachable ();\n+#endif\n+}\n+\n+const std::vector<ProcMacro::Procmacro>\n+load_macros (std::string path)\n+{\n+  const ProcMacro::ProcmacroArray *array = load_macros_array (path);\n+  // Did not load the proc macro\n+  if (array == nullptr)\n+    gcc_unreachable ();\n+\n+  rust_debug (\"Found %lu procedural macros\", array->length);\n+\n+  return std::vector<ProcMacro::Procmacro> (array->macros,\n+\t\t\t\t\t    array->macros + array->length);\n+}\n+\n+} // namespace Rust"}, {"sha": "779d3c70fbc0223efd3ee27a21a6648e7dbdceb2", "filename": "gcc/rust/expand/rust-proc-macro.h", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cba5e7468d7c7a7f212da37db2e1de55641df5d3/gcc%2Frust%2Fexpand%2Frust-proc-macro.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cba5e7468d7c7a7f212da37db2e1de55641df5d3/gcc%2Frust%2Fexpand%2Frust-proc-macro.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fexpand%2Frust-proc-macro.h?ref=cba5e7468d7c7a7f212da37db2e1de55641df5d3", "patch": "@@ -0,0 +1,34 @@\n+// This file is part of GCC.\n+\n+// GCC is free software; you can redistribute it and/or modify it under\n+// the terms of the GNU General Public License as published by the Free\n+// Software Foundation; either version 3, or (at your option) any later\n+// version.\n+\n+// GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+// WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+// for more details.\n+\n+// You should have received a copy of the GNU General Public License\n+// along with GCC; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#ifndef RUST_PROC_MACRO_H\n+#define RUST_PROC_MACRO_H\n+\n+#include \"libproc_macro/proc_macro.h\"\n+\n+namespace Rust {\n+\n+/**\n+ * Load a procedural macro library and return a pointer to it's entrypoint.\n+ *\n+ * @param The path to the shared object file to load.\n+ */\n+const std::vector<ProcMacro::Procmacro>\n+load_macros (std::string path);\n+\n+} // namespace Rust\n+\n+#endif /* ! RUST_PROC_MACRO_H */"}]}