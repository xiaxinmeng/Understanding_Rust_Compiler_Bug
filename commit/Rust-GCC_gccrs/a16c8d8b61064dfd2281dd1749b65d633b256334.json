{"sha": "a16c8d8b61064dfd2281dd1749b65d633b256334", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE2YzhkOGI2MTA2NGRmZDIyODFkZDE3NDliNjVkNjMzYjI1NjMzNA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2017-04-19T08:05:36Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-04-19T08:05:36Z"}, "message": "predicates.md (input_operand): Add comment.\n\n\t* config/sparc/predicates.md (input_operand): Add comment.  Return\n\ttrue for any memory operand when LRA is in progress.\n\t* config/sparc/sparc.c (sparc_expand_move): Minor formatting fix.\n\nCo-Authored-By: Jeff Law <law@redhat.com>\nCo-Authored-By: Vladimir Makarov <vmakarov@redhat.com>\n\nFrom-SVN: r246989", "tree": {"sha": "68e54b58e4f052d68cd42f002630869f03876722", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68e54b58e4f052d68cd42f002630869f03876722"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a16c8d8b61064dfd2281dd1749b65d633b256334", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a16c8d8b61064dfd2281dd1749b65d633b256334", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a16c8d8b61064dfd2281dd1749b65d633b256334", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a16c8d8b61064dfd2281dd1749b65d633b256334/comments", "author": null, "committer": null, "parents": [{"sha": "6143c99823d855df4b855dc6ebf697310fa1dc8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6143c99823d855df4b855dc6ebf697310fa1dc8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6143c99823d855df4b855dc6ebf697310fa1dc8a"}], "stats": {"total": 40, "additions": 36, "deletions": 4}, "files": [{"sha": "d52db8a36095c6bd634ca003a4ced82f0d2d0723", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a16c8d8b61064dfd2281dd1749b65d633b256334/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a16c8d8b61064dfd2281dd1749b65d633b256334/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a16c8d8b61064dfd2281dd1749b65d633b256334", "patch": "@@ -1,3 +1,10 @@\n+2017-04-19  Eric Botcazou  <ebotcazou@adacore.com>\n+            Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\t* config/sparc/predicates.md (input_operand): Add comment.  Return\n+\ttrue for any memory operand when LRA is in progress.\n+\t* config/sparc/sparc.c (sparc_expand_move): Minor formatting fix.\n+\n 2017-04-18  Jeff Law  <law@redhat.com>\n \n \tPR target/74563"}, {"sha": "951933efb3936446cbe11127db8e8d01bfb868a6", "filename": "gcc/config/sparc/predicates.md", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a16c8d8b61064dfd2281dd1749b65d633b256334/gcc%2Fconfig%2Fsparc%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a16c8d8b61064dfd2281dd1749b65d633b256334/gcc%2Fconfig%2Fsparc%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fpredicates.md?ref=a16c8d8b61064dfd2281dd1749b65d633b256334", "patch": "@@ -373,6 +373,7 @@\n   if (TARGET_ARCH32 && mode == DImode && GET_CODE (op) == CONST_INT)\n     return true;\n \n+  /* Allow FP constants to be built in integer registers.  */\n   if (mclass == MODE_FLOAT && GET_CODE (op) == CONST_DOUBLE)\n     return true;\n \n@@ -388,7 +389,14 @@\n \n   /* Check for valid MEM forms.  */\n   if (GET_CODE (op) == MEM)\n-    return memory_address_p (mode, XEXP (op, 0));\n+    {\n+      /* Except when LRA is precisely working hard to make them valid\n+\t and relying entirely on the constraints.  */\n+      if (lra_in_progress)\n+\treturn true;\n+\n+      return memory_address_p (mode, XEXP (op, 0));\n+    }\n \n   return false;\n })"}, {"sha": "8277496964acf2f954c187c3c23a2ca1796fc34b", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a16c8d8b61064dfd2281dd1749b65d633b256334/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a16c8d8b61064dfd2281dd1749b65d633b256334/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=a16c8d8b61064dfd2281dd1749b65d633b256334", "patch": "@@ -1911,9 +1911,8 @@ sparc_expand_move (machine_mode mode, rtx *operands)\n \t  /* We are able to build any SF constant in integer registers\n \t     with at most 2 instructions.  */\n \t  && (mode == SFmode\n-\t      /* And any DF constant in integer registers.  */\n-\t      || (mode == DFmode\n-\t\t  && ! can_create_pseudo_p ())))\n+\t      /* And any DF constant in integer registers if needed.  */\n+\t      || (mode == DFmode && !can_create_pseudo_p ())))\n \treturn false;\n \n       operands[1] = force_const_mem (mode, operands[1]);"}, {"sha": "8f2cfffd9996a0eb90ec18f582cc36ddbea3305d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a16c8d8b61064dfd2281dd1749b65d633b256334/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a16c8d8b61064dfd2281dd1749b65d633b256334/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a16c8d8b61064dfd2281dd1749b65d633b256334", "patch": "@@ -1,3 +1,8 @@\n+2017-04-19  Eric Botcazou  <ebotcazou@adacore.com>\n+            Jeff Law  <law@redhat.com>\n+\n+\t* gcc.c-torture/compile/20170419-1.c: New test.\n+\n 2017-04-19  Tom de Vries  <tom@codesourcery.com>\n \n \tPR testsuite/80221"}, {"sha": "c16a5ea2af4bd058bd23fd10ee9aaa4157f0103d", "filename": "gcc/testsuite/gcc.c-torture/compile/20170419-1.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a16c8d8b61064dfd2281dd1749b65d633b256334/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20170419-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a16c8d8b61064dfd2281dd1749b65d633b256334/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20170419-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20170419-1.c?ref=a16c8d8b61064dfd2281dd1749b65d633b256334", "patch": "@@ -0,0 +1,13 @@\n+extern int __fpclassifyd (double x);\n+\n+double fdim (double x, double y)\n+{\n+   int c = __fpclassifyd (x);\n+   if (c == 0)\n+     return (x);\n+   if (__fpclassifyd (y) == 0)\n+     return (y);\n+   if (c == 1)\n+     return (__builtin_huge_val ());\n+   return x > y ? x - y : 0.0;\n+}"}]}