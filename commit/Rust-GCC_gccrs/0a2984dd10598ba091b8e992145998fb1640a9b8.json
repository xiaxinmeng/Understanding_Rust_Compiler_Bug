{"sha": "0a2984dd10598ba091b8e992145998fb1640a9b8", "node_id": "C_kwDOANBUbNoAKDBhMjk4NGRkMTA1OThiYTA5MWI4ZTk5MjE0NTk5OGZiMTY0MGE5Yjg", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2022-10-27T00:23:42Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2022-10-28T00:12:57Z"}, "message": "runtime: use _libgo_off_t_type when calling C mmap\n\nThe last argument to the C mmap function is type off_t, not uintptr.\nOn some 32-bit systems, off_t is larger than uintptr.\n\nBased on patch by S\u00f6ren Tempel.\n\nReviewed-on: https://go-review.googlesource.com/c/gofrontend/+/445735", "tree": {"sha": "a2975255a183f1a29d1b864c8c82d10516ca10b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2975255a183f1a29d1b864c8c82d10516ca10b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a2984dd10598ba091b8e992145998fb1640a9b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a2984dd10598ba091b8e992145998fb1640a9b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a2984dd10598ba091b8e992145998fb1640a9b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a2984dd10598ba091b8e992145998fb1640a9b8/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc01cfa96786ba94077e45c475768f38592e63cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc01cfa96786ba94077e45c475768f38592e63cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc01cfa96786ba94077e45c475768f38592e63cf"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "7e531c3f90b826fa476937b2c8a7e8300285a8e1", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a2984dd10598ba091b8e992145998fb1640a9b8/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a2984dd10598ba091b8e992145998fb1640a9b8/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=0a2984dd10598ba091b8e992145998fb1640a9b8", "patch": "@@ -1,4 +1,4 @@\n-6c188108858e3ae8c8ea8e4cc55427d8cf01bbc8\n+5e658f4659c551330ea68f5667e4f951b218f32d\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "1e84f4f5c561558c8bb17b45c46069e9f42b838a", "filename": "libgo/go/runtime/mem_gccgo.go", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a2984dd10598ba091b8e992145998fb1640a9b8/libgo%2Fgo%2Fruntime%2Fmem_gccgo.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a2984dd10598ba091b8e992145998fb1640a9b8/libgo%2Fgo%2Fruntime%2Fmem_gccgo.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fmem_gccgo.go?ref=0a2984dd10598ba091b8e992145998fb1640a9b8", "patch": "@@ -15,7 +15,7 @@ import (\n //go:linkname sysFree\n \n //extern mmap\n-func sysMmap(addr unsafe.Pointer, n uintptr, prot, flags, fd int32, off uintptr) unsafe.Pointer\n+func sysMmap(addr unsafe.Pointer, n uintptr, prot, flags, fd int32, off _libgo_off_t_type) unsafe.Pointer\n \n //extern munmap\n func munmap(addr unsafe.Pointer, length uintptr) int32\n@@ -38,7 +38,7 @@ func init() {\n }\n \n func mmap(addr unsafe.Pointer, n uintptr, prot, flags, fd int32, off uintptr) (unsafe.Pointer, int) {\n-\tp := sysMmap(addr, n, prot, flags, fd, off)\n+\tp := sysMmap(addr, n, prot, flags, fd, _libgo_off_t_type(off))\n \tif uintptr(p) == _MAP_FAILED {\n \t\treturn nil, errno()\n \t}\n@@ -47,6 +47,7 @@ func mmap(addr unsafe.Pointer, n uintptr, prot, flags, fd int32, off uintptr) (u\n \n // Don't split the stack as this method may be invoked without a valid G, which\n // prevents us from allocating more stack.\n+//\n //go:nosplit\n func sysAlloc(n uintptr, sysStat *sysMemStat) unsafe.Pointer {\n \tp, err := mmap(nil, n, _PROT_READ|_PROT_WRITE, _MAP_ANON|_MAP_PRIVATE, mmapFD, 0)\n@@ -165,6 +166,7 @@ func sysHugePage(v unsafe.Pointer, n uintptr) {\n \n // Don't split the stack as this function may be invoked without a valid G,\n // which prevents us from allocating more stack.\n+//\n //go:nosplit\n func sysFree(v unsafe.Pointer, n uintptr, sysStat *sysMemStat) {\n \tsysStat.add(-int64(n))"}]}