{"sha": "663c725aa25da254c55873810c801526ae1af836", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjYzYzcyNWFhMjVkYTI1NGM1NTg3MzgxMGM4MDE1MjZhZTFhZjgzNg==", "commit": {"author": {"name": "Sergey Shalnov", "email": "Sergey.Shalnov@intel.com", "date": "2017-12-01T06:40:27Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2017-12-01T06:40:27Z"}, "message": "Fix movdi_internal to return MODE_TI with AVX512\n\ngcc/\n\t* config/i386/i386.md: Fix AVX512 register width in AVX512 instruction.\n\nFrom-SVN: r255293", "tree": {"sha": "62d5fa3996da7495c4b0c3e22428c34c0aa624d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62d5fa3996da7495c4b0c3e22428c34c0aa624d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/663c725aa25da254c55873810c801526ae1af836", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/663c725aa25da254c55873810c801526ae1af836", "html_url": "https://github.com/Rust-GCC/gccrs/commit/663c725aa25da254c55873810c801526ae1af836", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/663c725aa25da254c55873810c801526ae1af836/comments", "author": {"login": "shssf", "id": 19515906, "node_id": "MDQ6VXNlcjE5NTE1OTA2", "avatar_url": "https://avatars.githubusercontent.com/u/19515906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shssf", "html_url": "https://github.com/shssf", "followers_url": "https://api.github.com/users/shssf/followers", "following_url": "https://api.github.com/users/shssf/following{/other_user}", "gists_url": "https://api.github.com/users/shssf/gists{/gist_id}", "starred_url": "https://api.github.com/users/shssf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shssf/subscriptions", "organizations_url": "https://api.github.com/users/shssf/orgs", "repos_url": "https://api.github.com/users/shssf/repos", "events_url": "https://api.github.com/users/shssf/events{/privacy}", "received_events_url": "https://api.github.com/users/shssf/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bddb9bb1c7c4b7c7973ddde13c4f52121db923ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bddb9bb1c7c4b7c7973ddde13c4f52121db923ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bddb9bb1c7c4b7c7973ddde13c4f52121db923ea"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "e38b73f6bc0e97d3c1c3a55920095c43de523a48", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/663c725aa25da254c55873810c801526ae1af836/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/663c725aa25da254c55873810c801526ae1af836/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=663c725aa25da254c55873810c801526ae1af836", "patch": "@@ -1,3 +1,7 @@\n+2017-12-01  Sergey Shalnov  <Sergey.Shalnov@intel.com>\n+\n+\t* config/i386/i386.md: Fix AVX512 register width in AVX512 instruction.\n+\n 2017-12-01  Sergey Shalnov  <Sergey.Shalnov@intel.com>\n \n \t* config/i386/i386.c (standard_sse_constant_opcode): Fix wrong form for"}, {"sha": "b4d73dbfd0d14852041f6b9c60833e3292587bad", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/663c725aa25da254c55873810c801526ae1af836/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/663c725aa25da254c55873810c801526ae1af836/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=663c725aa25da254c55873810c801526ae1af836", "patch": "@@ -2254,10 +2254,13 @@\n \t      && (GENERAL_REG_P (operands[0]) || GENERAL_REG_P (operands[1])))\n \t    return \"%vmovd\\t{%1, %0|%0, %1}\";\n \t  return \"%vmovq\\t{%1, %0|%0, %1}\";\n+\n \tcase MODE_TI:\n+\t  /* Handle AVX512 registers set.  */\n+\t  if (EXT_REX_SSE_REG_P (operands[0])\n+\t      || EXT_REX_SSE_REG_P (operands[1]))\n+\t    return \"vmovdqa64\\t{%1, %0|%0, %1}\";\n \t  return \"%vmovdqa\\t{%1, %0|%0, %1}\";\n-\tcase MODE_XI:\n-\t  return \"vmovdqa64\\t{%g1, %g0|%g0, %g1}\";\n \n \tcase MODE_V2SF:\n \t  gcc_assert (!TARGET_AVX);\n@@ -2349,7 +2352,7 @@\n \t    (eq_attr \"alternative\" \"12,13\")\n \t      (cond [(ior (match_operand 0 \"ext_sse_reg_operand\")\n \t\t\t  (match_operand 1 \"ext_sse_reg_operand\"))\n-\t\t       (const_string \"XI\")\n+\t\t       (const_string \"TI\")\n \t\t     (ior (not (match_test \"TARGET_SSE2\"))\n \t\t\t  (match_test \"TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL\"))\n \t\t       (const_string \"V4SF\")"}]}