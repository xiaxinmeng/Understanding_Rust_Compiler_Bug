{"sha": "22afca66941ba7e13b60a59ee183c9dbaa7e2127", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjJhZmNhNjY5NDFiYTdlMTNiNjBhNTllZTE4M2M5ZGJhYTdlMjEyNw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-21T22:01:02Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-21T22:01:02Z"}, "message": "Fix race condition in test case.\n\nBrought over from master repository.\n\nFrom-SVN: r169106", "tree": {"sha": "721640bea663ce25474d9d8f3da56fd476bf5b34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/721640bea663ce25474d9d8f3da56fd476bf5b34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22afca66941ba7e13b60a59ee183c9dbaa7e2127", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22afca66941ba7e13b60a59ee183c9dbaa7e2127", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22afca66941ba7e13b60a59ee183c9dbaa7e2127", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22afca66941ba7e13b60a59ee183c9dbaa7e2127/comments", "author": null, "committer": null, "parents": [{"sha": "95cc031fd89f7e05a2653ec098105e29817ed6ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95cc031fd89f7e05a2653ec098105e29817ed6ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95cc031fd89f7e05a2653ec098105e29817ed6ea"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "0c1a6251899db108e02d1c20dda48844fda3b093", "filename": "libgo/go/net/dnsname_test.go", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22afca66941ba7e13b60a59ee183c9dbaa7e2127/libgo%2Fgo%2Fnet%2Fdnsname_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22afca66941ba7e13b60a59ee183c9dbaa7e2127/libgo%2Fgo%2Fnet%2Fdnsname_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fdnsname_test.go?ref=22afca66941ba7e13b60a59ee183c9dbaa7e2127", "patch": "@@ -27,7 +27,7 @@ var tests = []testCase{\n \t{\"a.b..com\", false},\n }\n \n-func getTestCases(ch chan<- *testCase) {\n+func getTestCases(ch chan<- testCase) {\n \tdefer close(ch)\n \tvar char59 = \"\"\n \tvar char63 = \"\"\n@@ -39,17 +39,17 @@ func getTestCases(ch chan<- *testCase) {\n \tchar64 = char63 + \"a\"\n \n \tfor _, tc := range tests {\n-\t\tch <- &tc\n+\t\tch <- tc\n \t}\n \n-\tch <- &testCase{char63 + \".com\", true}\n-\tch <- &testCase{char64 + \".com\", false}\n+\tch <- testCase{char63 + \".com\", true}\n+\tch <- testCase{char64 + \".com\", false}\n \t// 255 char name is fine:\n-\tch <- &testCase{char59 + \".\" + char63 + \".\" + char63 + \".\" +\n+\tch <- testCase{char59 + \".\" + char63 + \".\" + char63 + \".\" +\n \t\tchar63 + \".com\",\n \t\ttrue}\n \t// 256 char name is bad:\n-\tch <- &testCase{char59 + \"a.\" + char63 + \".\" + char63 + \".\" +\n+\tch <- testCase{char59 + \"a.\" + char63 + \".\" + char63 + \".\" +\n \t\tchar63 + \".com\",\n \t\tfalse}\n }\n@@ -58,7 +58,7 @@ func TestDNSNames(t *testing.T) {\n \tif runtime.GOOS == \"windows\" {\n \t\treturn\n \t}\n-\tch := make(chan *testCase)\n+\tch := make(chan testCase)\n \tgo getTestCases(ch)\n \tfor tc := range ch {\n \t\tif isDomainName(tc.name) != tc.result {"}]}