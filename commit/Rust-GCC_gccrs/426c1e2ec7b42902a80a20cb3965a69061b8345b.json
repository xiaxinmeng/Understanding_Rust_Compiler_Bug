{"sha": "426c1e2ec7b42902a80a20cb3965a69061b8345b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI2YzFlMmVjN2I0MjkwMmE4MGEyMGNiMzk2NWE2OTA2MWI4MzQ1Yg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-03-13T15:55:07Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-03-13T15:55:07Z"}, "message": "PR c++/84798 - ICE with auto in abstract function declarator.\n\n\t* parser.c (cp_parser_parameter_declaration_clause): Check\n\tparser->default_arg_ok_p.\n\nFrom-SVN: r258493", "tree": {"sha": "9bf6a0902709e286b6f0fc18edb549616545fbea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9bf6a0902709e286b6f0fc18edb549616545fbea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/426c1e2ec7b42902a80a20cb3965a69061b8345b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/426c1e2ec7b42902a80a20cb3965a69061b8345b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/426c1e2ec7b42902a80a20cb3965a69061b8345b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/426c1e2ec7b42902a80a20cb3965a69061b8345b/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f99309b288733c88d5369af11a6c11dcc307ff49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f99309b288733c88d5369af11a6c11dcc307ff49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f99309b288733c88d5369af11a6c11dcc307ff49"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "d480c1bafba0c9de77bac149d6108d9836cf1a7a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/426c1e2ec7b42902a80a20cb3965a69061b8345b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/426c1e2ec7b42902a80a20cb3965a69061b8345b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=426c1e2ec7b42902a80a20cb3965a69061b8345b", "patch": "@@ -1,3 +1,9 @@\n+2018-03-13  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/84798 - ICE with auto in abstract function declarator.\n+\t* parser.c (cp_parser_parameter_declaration_clause): Check\n+\tparser->default_arg_ok_p.\n+\n 2018-03-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/84808"}, {"sha": "8e8ebceb0d584cd65996c87011fc1b2720744258", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/426c1e2ec7b42902a80a20cb3965a69061b8345b/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/426c1e2ec7b42902a80a20cb3965a69061b8345b/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=426c1e2ec7b42902a80a20cb3965a69061b8345b", "patch": "@@ -21198,7 +21198,10 @@ cp_parser_parameter_declaration_clause (cp_parser* parser)\n \n   if (!processing_specialization\n       && !processing_template_parmlist\n-      && !processing_explicit_instantiation)\n+      && !processing_explicit_instantiation\n+      /* default_arg_ok_p tracks whether this is a parameter-clause for an\n+         actual function or a random abstract declarator.  */\n+      && parser->default_arg_ok_p)\n     if (!current_function_decl\n \t|| (current_class_type && LAMBDA_TYPE_P (current_class_type)))\n       parser->auto_is_implicit_function_template_parm_p = true;"}, {"sha": "dfb08336b53ca3fa4bdec55d6e898dbf4fbf73bd", "filename": "gcc/testsuite/g++.dg/cpp0x/auto51.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/426c1e2ec7b42902a80a20cb3965a69061b8345b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto51.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/426c1e2ec7b42902a80a20cb3965a69061b8345b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto51.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto51.C?ref=426c1e2ec7b42902a80a20cb3965a69061b8345b", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/84798\n+// { dg-do compile { target c++11 } }\n+\n+template<typename T>\n+struct S {\n+    static constexpr T value = 0;\n+};\n+\n+constexpr auto x = S<void(*)(auto)>::value; // { dg-error \"auto\" }"}, {"sha": "2ae21ed1147b49765fd0bafac0179cbd64ac7a1d", "filename": "gcc/testsuite/g++.dg/cpp1y/pr60393.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/426c1e2ec7b42902a80a20cb3965a69061b8345b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr60393.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/426c1e2ec7b42902a80a20cb3965a69061b8345b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr60393.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr60393.C?ref=426c1e2ec7b42902a80a20cb3965a69061b8345b", "patch": "@@ -1,8 +1,7 @@\n // PR c++/60393\n // { dg-do compile { target c++14 } }\n-// { dg-options \"\" }\n \n-void (*f)(auto) + 0; // { dg-error \"expected\" }\n+void (*f)(auto) + 0; // { dg-error \"auto|expected\" }\n \n struct A\n {"}]}