{"sha": "254a0760a191f53494e0416dadf9607c71b1844f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU0YTA3NjBhMTkxZjUzNDk0ZTA0MTZkYWRmOTYwN2M3MWIxODQ0Zg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2013-11-05T13:21:36Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2013-11-05T13:21:36Z"}, "message": "i386.c (ix86_float_exceptions_rounding_supported_p): New function.\n\n\t* config/i386/i386.c (ix86_float_exceptions_rounding_supported_p):\n\tNew function.\n\t(TARGET_FLOAT_EXCEPTIONS_ROUNDING_SUPPORTED_P): Define.\n\nc-family:\n\t* c-cppbuiltin.c (cpp_iec_559_value): Test\n\tflag_excess_precision_cmdline not flag_excess_precision.\n\nFrom-SVN: r204390", "tree": {"sha": "effb5cf317fbada14a48899a247e85e16f7325b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/effb5cf317fbada14a48899a247e85e16f7325b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/254a0760a191f53494e0416dadf9607c71b1844f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/254a0760a191f53494e0416dadf9607c71b1844f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/254a0760a191f53494e0416dadf9607c71b1844f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/254a0760a191f53494e0416dadf9607c71b1844f/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4de9c53f028bdf64e1be92fd380ec06d34cf27f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4de9c53f028bdf64e1be92fd380ec06d34cf27f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4de9c53f028bdf64e1be92fd380ec06d34cf27f8"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "514b97e0059d563b606996a20315d3fe3d495b55", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254a0760a191f53494e0416dadf9607c71b1844f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254a0760a191f53494e0416dadf9607c71b1844f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=254a0760a191f53494e0416dadf9607c71b1844f", "patch": "@@ -1,3 +1,9 @@\n+2013-11-05  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/i386/i386.c (ix86_float_exceptions_rounding_supported_p):\n+\tNew function.\n+\t(TARGET_FLOAT_EXCEPTIONS_ROUNDING_SUPPORTED_P): Define.\n+\n 2013-11-05  Marc Glisse  <marc.glisse@inria.fr>\n \n \tPR tree-optimization/58958"}, {"sha": "2de4c39f404fd400f2e1858109268774bc88eead", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254a0760a191f53494e0416dadf9607c71b1844f/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254a0760a191f53494e0416dadf9607c71b1844f/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=254a0760a191f53494e0416dadf9607c71b1844f", "patch": "@@ -1,3 +1,8 @@\n+2013-11-05  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* c-cppbuiltin.c (cpp_iec_559_value): Test\n+\tflag_excess_precision_cmdline not flag_excess_precision.\n+\n 2013-11-05  Tobias Burnus  <burnus@net-b.de>\n \n \t* c.opt (fopenmp-simd): New option."}, {"sha": "61a124c509c557ff48e0b1f5694ed772c37e9cc9", "filename": "gcc/c-family/c-cppbuiltin.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254a0760a191f53494e0416dadf9607c71b1844f/gcc%2Fc-family%2Fc-cppbuiltin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254a0760a191f53494e0416dadf9607c71b1844f/gcc%2Fc-family%2Fc-cppbuiltin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-cppbuiltin.c?ref=254a0760a191f53494e0416dadf9607c71b1844f", "patch": "@@ -734,7 +734,7 @@ cpp_iec_559_value (void)\n   if (flag_iso\n       && !c_dialect_cxx ()\n       && TARGET_FLT_EVAL_METHOD != 0\n-      && flag_excess_precision != EXCESS_PRECISION_STANDARD)\n+      && flag_excess_precision_cmdline != EXCESS_PRECISION_STANDARD)\n     ret = 0;\n \n   /* Various options are contrary to IEEE 754 semantics.  */"}, {"sha": "771fabe6dc5898c4abb4a2a0e0d0d0e9b83893a8", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254a0760a191f53494e0416dadf9607c71b1844f/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254a0760a191f53494e0416dadf9607c71b1844f/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=254a0760a191f53494e0416dadf9607c71b1844f", "patch": "@@ -43519,6 +43519,18 @@ ix86_memmodel_check (unsigned HOST_WIDE_INT val)\n   return val;\n }\n \n+/* Implement TARGET_FLOAT_EXCEPTIONS_ROUNDING_SUPPORTED_P.  */\n+\n+static bool\n+ix86_float_exceptions_rounding_supported_p (void)\n+{\n+  /* For x87 floating point with standard excess precision handling,\n+     there is no adddf3 pattern (since x87 floating point only has\n+     XFmode operations) so the default hook implementation gets this\n+     wrong.  */\n+  return TARGET_80387 || TARGET_SSE_MATH;\n+}\n+\n /* Initialize the GCC target structure.  */\n #undef TARGET_RETURN_IN_MEMORY\n #define TARGET_RETURN_IN_MEMORY ix86_return_in_memory\n@@ -43895,6 +43907,10 @@ ix86_memmodel_check (unsigned HOST_WIDE_INT val)\n #undef TARGET_SPILL_CLASS\n #define TARGET_SPILL_CLASS ix86_spill_class\n \n+#undef TARGET_FLOAT_EXCEPTIONS_ROUNDING_SUPPORTED_P\n+#define TARGET_FLOAT_EXCEPTIONS_ROUNDING_SUPPORTED_P \\\n+  ix86_float_exceptions_rounding_supported_p\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n #include \"gt-i386.h\""}]}