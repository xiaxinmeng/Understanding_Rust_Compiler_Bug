{"sha": "9a1cb58a99604cf6291b86b20f0f9773065afab6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWExY2I1OGE5OTYwNGNmNjI5MWI4NmIyMGYwZjk3NzMwNjVhZmFiNg==", "commit": {"author": {"name": "Meador Inge", "email": "meadori@codesourcery.com", "date": "2012-03-27T18:08:13Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-03-27T18:08:13Z"}, "message": "re PR c++/52672 (internal compiler error: in cxx_eval_indirect_ref, at cp/semantics.c:6766)\n\n\tPR c++/52672\n\t* gcc/cp/semantics.c (cxx_fold_indirect_ref): Don't attempt to fold\n\tstripped child trees that are not pointer types.\n\nFrom-SVN: r185890", "tree": {"sha": "02c9c91b4157634c7cd25912a6d58695aaf6e28c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02c9c91b4157634c7cd25912a6d58695aaf6e28c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a1cb58a99604cf6291b86b20f0f9773065afab6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a1cb58a99604cf6291b86b20f0f9773065afab6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a1cb58a99604cf6291b86b20f0f9773065afab6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a1cb58a99604cf6291b86b20f0f9773065afab6/comments", "author": {"login": "meadori", "id": 296965, "node_id": "MDQ6VXNlcjI5Njk2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/296965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meadori", "html_url": "https://github.com/meadori", "followers_url": "https://api.github.com/users/meadori/followers", "following_url": "https://api.github.com/users/meadori/following{/other_user}", "gists_url": "https://api.github.com/users/meadori/gists{/gist_id}", "starred_url": "https://api.github.com/users/meadori/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meadori/subscriptions", "organizations_url": "https://api.github.com/users/meadori/orgs", "repos_url": "https://api.github.com/users/meadori/repos", "events_url": "https://api.github.com/users/meadori/events{/privacy}", "received_events_url": "https://api.github.com/users/meadori/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ab7ea426a359564da2edf11914782528e381aa9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab7ea426a359564da2edf11914782528e381aa9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab7ea426a359564da2edf11914782528e381aa9a"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "0d9be4fa49d2fbc4bd73a920c03e8f54092a7f47", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a1cb58a99604cf6291b86b20f0f9773065afab6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a1cb58a99604cf6291b86b20f0f9773065afab6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9a1cb58a99604cf6291b86b20f0f9773065afab6", "patch": "@@ -1,3 +1,9 @@\n+2012-03-27  Meador Inge  <meadori@codesourcery.com>\n+\n+\tPR c++/52672\n+\t* semantics.c (cxx_fold_indirect_ref): Don't attempt to fold\n+\tstripped child trees that are not pointer types.\n+\n 2012-03-21  Jason Merrill  <jason@redhat.com>\n \n \tImplement return type deduction for normal functions with -std=c++1y."}, {"sha": "65b771f1ee2ab5cf28d037e45f35f1435e38c000", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a1cb58a99604cf6291b86b20f0f9773065afab6/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a1cb58a99604cf6291b86b20f0f9773065afab6/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=9a1cb58a99604cf6291b86b20f0f9773065afab6", "patch": "@@ -7202,7 +7202,8 @@ cxx_fold_indirect_ref (location_t loc, tree type, tree op0, bool *empty_base)\n   sub = op0;\n   STRIP_NOPS (sub);\n   subtype = TREE_TYPE (sub);\n-  gcc_assert (POINTER_TYPE_P (subtype));\n+  if (!POINTER_TYPE_P (subtype))\n+    return NULL_TREE;\n \n   if (TREE_CODE (sub) == ADDR_EXPR)\n     {"}, {"sha": "9c69953e65c778615250e2080b1dcbceb35f4432", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a1cb58a99604cf6291b86b20f0f9773065afab6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a1cb58a99604cf6291b86b20f0f9773065afab6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9a1cb58a99604cf6291b86b20f0f9773065afab6", "patch": "@@ -1,3 +1,8 @@\n+2012-03-27  Meador Inge  <meadori@codesourcery.com>\n+\n+\tPR c++/52672\n+\t* g++.dg/cpp0x/constexpr-52672.C: New testcase.\n+\n 2012-03-27  Mike Stump  <mikestump@comcast.net>\n \n \tPR target/52665"}, {"sha": "9f878780c7ce8816e26879eb9258365acff7b552", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-52672.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a1cb58a99604cf6291b86b20f0f9773065afab6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-52672.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a1cb58a99604cf6291b86b20f0f9773065afab6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-52672.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-52672.C?ref=9a1cb58a99604cf6291b86b20f0f9773065afab6", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/52672\n+// { dg-do compile }\n+// { dg-options \"-std=c++11\" }\n+\n+typedef unsigned long * ul_ptr;\n+constexpr unsigned long a = *((ul_ptr)0x0); // { dg-error \"\" }\n+constexpr unsigned long b = *((ul_ptr)(*((ul_ptr)0x0))); // { dg-error \"\" }\n+constexpr unsigned long c = *((ul_ptr)*((ul_ptr)(*((ul_ptr)0x0)))); // { dg-error \"\" }"}]}