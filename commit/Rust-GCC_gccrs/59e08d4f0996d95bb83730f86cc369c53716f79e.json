{"sha": "59e08d4f0996d95bb83730f86cc369c53716f79e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTllMDhkNGYwOTk2ZDk1YmI4MzczMGY4NmNjMzY5YzUzNzE2Zjc5ZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-08-20T18:50:13Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-08-20T18:50:13Z"}, "message": "* config/sparc/sparc.h (MAX_FIXED_MODE_SIZE): Define.\n\nFrom-SVN: r190540", "tree": {"sha": "41e521e283dd7806c721d720877fba138a2280aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41e521e283dd7806c721d720877fba138a2280aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59e08d4f0996d95bb83730f86cc369c53716f79e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59e08d4f0996d95bb83730f86cc369c53716f79e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59e08d4f0996d95bb83730f86cc369c53716f79e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59e08d4f0996d95bb83730f86cc369c53716f79e/comments", "author": null, "committer": null, "parents": [{"sha": "d952d7ad3121f9119b1b842efcd884233854c599", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d952d7ad3121f9119b1b842efcd884233854c599", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d952d7ad3121f9119b1b842efcd884233854c599"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "0bec6d278224e15960efae4eae61e0078b42aa87", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59e08d4f0996d95bb83730f86cc369c53716f79e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59e08d4f0996d95bb83730f86cc369c53716f79e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=59e08d4f0996d95bb83730f86cc369c53716f79e", "patch": "@@ -1,3 +1,7 @@\n+2012-08-20  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* config/sparc/sparc.h (MAX_FIXED_MODE_SIZE): Define.\n+\n 2012-08-20  Patrick Marlier  <patrick.marlier@gmail.com>\n \n \tPR middle-end/53992\n@@ -137,7 +141,6 @@\n \t* simplify-rtx.c (simplify_binary_operation_1): Optimize shuffle of\n \ta concatenation.\n \n-\n 2012-08-17  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* stor-layout.c (compute_record_mode): Replace\n@@ -179,8 +182,7 @@\n \t* configure.ac: Add libintl.h to AC_CHECK_HEADERS list.\n \t* config.in: Regenerate.\n \t* configure: Regenerate.\n-\t* intl.h: Always include libintl.h if HAVE_LIBINTL_H is\n-\tset.\n+\t* intl.h: Always include libintl.h if HAVE_LIBINTL_H is set.\n \n 2012-08-17  Richard Guenther  <rguenther@suse.de>\n \n@@ -637,7 +639,6 @@\n \t    Julian Brown  <julian@codesourcery.com>\n \t    MIPS Technologies, Inc.\n \n-\tgcc/\n \t* config/mips/mips.md (dspmac, dspmacsat, accext, accmod, dspalu)\n \t(dspalusat): Add insn types.\n \t* config/mips/mips-dsp.md (add<DSPV:mode>3)"}, {"sha": "8f86100071683b5d6b964113d308bcb117ca3bde", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59e08d4f0996d95bb83730f86cc369c53716f79e/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59e08d4f0996d95bb83730f86cc369c53716f79e/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=59e08d4f0996d95bb83730f86cc369c53716f79e", "patch": "@@ -475,7 +475,6 @@ extern enum cmodel sparc_cmodel;\n #endif\n \n /* Now define the sizes of the C data types.  */\n-\n #define SHORT_TYPE_SIZE\t\t16\n #define INT_TYPE_SIZE\t\t32\n #define LONG_TYPE_SIZE\t\t(TARGET_ARCH64 ? 64 : 32)\n@@ -512,7 +511,6 @@ extern enum cmodel sparc_cmodel;\n #define SPARC_STACK_BOUNDARY_HACK (TARGET_ARCH64 && TARGET_STACK_BIAS)\n \n /* ALIGN FRAMES on double word boundaries */\n-\n #define SPARC_STACK_ALIGN(LOC) \\\n   (TARGET_ARCH64 ? (((LOC)+15) & ~15) : (((LOC)+7) & ~7))\n \n@@ -551,6 +549,10 @@ extern enum cmodel sparc_cmodel;\n      : MAX ((COMPUTED), (SPECIFIED)))\t\t\t\\\n    :  MAX ((COMPUTED), (SPECIFIED)))\n \n+/* An integer expression for the size in bits of the largest integer machine\n+   mode that should actually be used.  We allow pairs of registers.  */\n+#define MAX_FIXED_MODE_SIZE GET_MODE_BITSIZE (TARGET_ARCH64 ? TImode : DImode)\n+\n /* We need 2 words, so we can save the stack pointer and the return register\n    of the function containing a non-local goto target.  */\n #define STACK_SAVEAREA_MODE(LEVEL) \\"}]}