{"sha": "455c3d2efc053a95adc2a7e594aa7e1180887d3b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU1YzNkMmVmYzA1M2E5NWFkYzJhN2U1OTRhYTdlMTE4MDg4N2QzYg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2020-10-12T21:55:40Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gnu.org", "date": "2020-10-12T21:55:40Z"}, "message": "mathfn_built_in_type case type fix\n\nMartin Li\u0161ka reported warnings about type mismatches in the cases in\nthe recently-introduced mathfn_built_in_type.  This patch adjusts the\nmacros to use the combined_fn enumerators rather than the\n(currently same-numbered) built_in_function ones.\n\nfor  gcc/ChangeLog\n\n\t* builtins.c (mathfn_built_in_type): Use CFN_ enumerators.", "tree": {"sha": "d944c0f64984bd00a1fbb122dab460b3d7001457", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d944c0f64984bd00a1fbb122dab460b3d7001457"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/455c3d2efc053a95adc2a7e594aa7e1180887d3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/455c3d2efc053a95adc2a7e594aa7e1180887d3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/455c3d2efc053a95adc2a7e594aa7e1180887d3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/455c3d2efc053a95adc2a7e594aa7e1180887d3b/comments", "author": null, "committer": null, "parents": [{"sha": "db36e78ca183563fe72aee0f26bb3bead6898556", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db36e78ca183563fe72aee0f26bb3bead6898556", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db36e78ca183563fe72aee0f26bb3bead6898556"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "3f799e54d5fe650bef08e0734adf0369c72e762f", "filename": "gcc/builtins.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/455c3d2efc053a95adc2a7e594aa7e1180887d3b/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/455c3d2efc053a95adc2a7e594aa7e1180887d3b/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=455c3d2efc053a95adc2a7e594aa7e1180887d3b", "patch": "@@ -2451,37 +2451,37 @@ tree\n mathfn_built_in_type (combined_fn fn)\n {\n #define CASE_MATHFN(MATHFN)\t\t\t\\\n-  case BUILT_IN_##MATHFN:\t\t\t\\\n+  case CFN_BUILT_IN_##MATHFN:\t\t\t\\\n     return double_type_node;\t\t\t\\\n-  case BUILT_IN_##MATHFN##F:\t\t\t\\\n+  case CFN_BUILT_IN_##MATHFN##F:\t\t\\\n     return float_type_node;\t\t\t\\\n-  case BUILT_IN_##MATHFN##L:\t\t\t\\\n+  case CFN_BUILT_IN_##MATHFN##L:\t\t\\\n     return long_double_type_node;\n \n #define CASE_MATHFN_FLOATN(MATHFN)\t\t\\\n   CASE_MATHFN(MATHFN)\t\t\t\t\\\n-  case BUILT_IN_##MATHFN##F16:\t\t\t\\\n+  case CFN_BUILT_IN_##MATHFN##F16:\t\t\\\n     return float16_type_node;\t\t\t\\\n-  case BUILT_IN_##MATHFN##F32:\t\t\t\\\n+  case CFN_BUILT_IN_##MATHFN##F32:\t\t\\\n     return float32_type_node;\t\t\t\\\n-  case BUILT_IN_##MATHFN##F64:\t\t\t\\\n+  case CFN_BUILT_IN_##MATHFN##F64:\t\t\\\n     return float64_type_node;\t\t\t\\\n-  case BUILT_IN_##MATHFN##F128:\t\t\t\\\n+  case CFN_BUILT_IN_##MATHFN##F128:\t\t\\\n     return float128_type_node;\t\t\t\\\n-  case BUILT_IN_##MATHFN##F32X:\t\t\t\\\n+  case CFN_BUILT_IN_##MATHFN##F32X:\t\t\\\n     return float32x_type_node;\t\t\t\\\n-  case BUILT_IN_##MATHFN##F64X:\t\t\t\\\n+  case CFN_BUILT_IN_##MATHFN##F64X:\t\t\\\n     return float64x_type_node;\t\t\t\\\n-  case BUILT_IN_##MATHFN##F128X:\t\t\\\n+  case CFN_BUILT_IN_##MATHFN##F128X:\t\t\\\n     return float128x_type_node;\n \n /* Similar to above, but appends _R after any F/L suffix.  */\n #define CASE_MATHFN_REENT(MATHFN) \\\n-  case BUILT_IN_##MATHFN##_R:\t\t\t\\\n+  case CFN_BUILT_IN_##MATHFN##_R:\t\t\\\n     return double_type_node;\t\t\t\\\n-  case BUILT_IN_##MATHFN##F_R:\t\t\t\\\n+  case CFN_BUILT_IN_##MATHFN##F_R:\t\t\\\n     return float_type_node;\t\t\t\\\n-  case BUILT_IN_##MATHFN##L_R:\t\t\t\\\n+  case CFN_BUILT_IN_##MATHFN##L_R:\t\t\\\n     return long_double_type_node;\n \n   switch (fn)"}]}