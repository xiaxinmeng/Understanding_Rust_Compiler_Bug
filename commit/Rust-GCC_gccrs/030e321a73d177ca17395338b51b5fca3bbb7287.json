{"sha": "030e321a73d177ca17395338b51b5fca3bbb7287", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDMwZTMyMWE3M2QxNzdjYTE3Mzk1MzM4YjUxYjVmY2EzYmJiNzI4Nw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-07-31T14:06:59Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-07-31T14:06:59Z"}, "message": "re PR tree-optimization/61964 (krb5 database propagation enters infinite loop; reduced test case)\n\n2014-07-31  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/61964\n\t* tree-ssa-tail-merge.c (gimple_equal_p): Handle non-SSA LHS solely\n\tby structural equality.\n\n\t* gcc.dg/torture/pr61964.c: New testcase.\n\nFrom-SVN: r213375", "tree": {"sha": "81038ed146f57d6b2a17d7be8279c14eedd828b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81038ed146f57d6b2a17d7be8279c14eedd828b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/030e321a73d177ca17395338b51b5fca3bbb7287", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/030e321a73d177ca17395338b51b5fca3bbb7287", "html_url": "https://github.com/Rust-GCC/gccrs/commit/030e321a73d177ca17395338b51b5fca3bbb7287", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/030e321a73d177ca17395338b51b5fca3bbb7287/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5cb7516dca5acba3d3c4205bb4ce0f5e338015ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cb7516dca5acba3d3c4205bb4ce0f5e338015ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cb7516dca5acba3d3c4205bb4ce0f5e338015ad"}], "stats": {"total": 58, "additions": 47, "deletions": 11}, "files": [{"sha": "f75f34682eb1ccea2a71234d5acfa35da3af085c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030e321a73d177ca17395338b51b5fca3bbb7287/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030e321a73d177ca17395338b51b5fca3bbb7287/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=030e321a73d177ca17395338b51b5fca3bbb7287", "patch": "@@ -1,3 +1,9 @@\n+2014-07-31  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/61964\n+\t* tree-ssa-tail-merge.c (gimple_equal_p): Handle non-SSA LHS solely\n+\tby structural equality.\n+\n 2014-07-31  Yury Gribov  <y.gribov@samsung.com>\n \n \t* doc/cpp.texi (__SANITIZE_ADDRESS__): Updated description."}, {"sha": "1619d00dc815d835a6a17772a7c9817232cf06b4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030e321a73d177ca17395338b51b5fca3bbb7287/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030e321a73d177ca17395338b51b5fca3bbb7287/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=030e321a73d177ca17395338b51b5fca3bbb7287", "patch": "@@ -1,3 +1,8 @@\n+2014-07-31  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/61964\n+\t* gcc.dg/torture/pr61964.c: New testcase.\n+\n 2014-07-31  Marc Glisse  <marc.glisse@inria.fr>\n \n \tPR c++/60517"}, {"sha": "a03cfdc37bd33c430de7a52ea4b3d73e8a66eaa9", "filename": "gcc/testsuite/gcc.dg/torture/pr61964.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030e321a73d177ca17395338b51b5fca3bbb7287/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr61964.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030e321a73d177ca17395338b51b5fca3bbb7287/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr61964.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr61964.c?ref=030e321a73d177ca17395338b51b5fca3bbb7287", "patch": "@@ -0,0 +1,33 @@\n+/* { dg-do run } */\n+\n+extern void abort (void);\n+\n+struct node { struct node *next, *prev; } node;\n+struct head { struct node *first; } heads[5];\n+int k = 2;\n+struct head *head = &heads[2];\n+\n+static int __attribute__((noinline))\n+foo()\n+{\n+  node.prev = (void *)head;\n+  head->first = &node;\n+\n+  struct node *n = head->first;\n+  struct head *h = &heads[k];\n+\n+  if (n->prev == (void *)h)\n+    h->first = n->next;\n+  else\n+    n->prev->next = n->next;\n+\n+  n->next = h->first;\n+  return n->next == &node;\n+}\n+\n+int main()\n+{\n+  if (foo ())\n+    abort ();\n+  return 0;\n+}"}, {"sha": "4296c77c1ef69b24e89e6822696bb4f5f8e5dc66", "filename": "gcc/tree-ssa-tail-merge.c", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030e321a73d177ca17395338b51b5fca3bbb7287/gcc%2Ftree-ssa-tail-merge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030e321a73d177ca17395338b51b5fca3bbb7287/gcc%2Ftree-ssa-tail-merge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-tail-merge.c?ref=030e321a73d177ca17395338b51b5fca3bbb7287", "patch": "@@ -1161,17 +1161,9 @@ gimple_equal_p (same_succ same_succ, gimple s1, gimple s2)\n       lhs2 = gimple_get_lhs (s2);\n       if (TREE_CODE (lhs1) != SSA_NAME\n \t  && TREE_CODE (lhs2) != SSA_NAME)\n-\t{\n-\t  /* If the vdef is the same, it's the same statement.  */\n-\t  if (vn_valueize (gimple_vdef (s1))\n-\t      == vn_valueize (gimple_vdef (s2)))\n-\t    return true;\n-\n-\t  /* Test for structural equality.  */\n-\t  return (operand_equal_p (lhs1, lhs2, 0)\n-\t\t  && gimple_operand_equal_value_p (gimple_assign_rhs1 (s1),\n-\t\t\t\t\t\t   gimple_assign_rhs1 (s2)));\n-\t}\n+\treturn (operand_equal_p (lhs1, lhs2, 0)\n+\t\t&& gimple_operand_equal_value_p (gimple_assign_rhs1 (s1),\n+\t\t\t\t\t\t gimple_assign_rhs1 (s2)));\n       else if (TREE_CODE (lhs1) == SSA_NAME\n \t       && TREE_CODE (lhs2) == SSA_NAME)\n \treturn vn_valueize (lhs1) == vn_valueize (lhs2);"}]}