{"sha": "2010d0783d695583e72d0f412278caf4be041776", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjAxMGQwNzgzZDY5NTU4M2U3MmQwZjQxMjI3OGNhZjRiZTA0MTc3Ng==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-01T15:41:01Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-01T15:41:01Z"}, "message": "[multiple changes]\n\n2011-08-01  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb (Fully_Conformant_Expressions): handle quantified\n\texpressions.\n\n2011-08-01  Arnaud Charlet  <charlet@adacore.com>\n\n\t* sem_ch8.adb: Minor code editing.\n\t* s-vxwext.adb: Remove trailing space.\n\t* freeze.adb, freeze.ads, errout.ads, erroutc.adb: Fix GPLv3 header for\n\tconsistency with other files.\n\n2011-08-01  Thomas Quinot  <quinot@adacore.com>\n\n\t* s-auxdec.ads, s-auxdec-vms_64.ads: Minor reformatting.\n\n2011-08-01  Ed Schonberg  <schonberg@adacore.com>\n\n\t* par-ch10.adb: reject parameterized expressions as compilation unit.\n\t* sem_ch4.adb: handle properly conditional expression with overloaded\n\tthen_clause and no else_clause.\n\n2011-08-01  Tristan Gingold  <gingold@adacore.com>\n\n\t* s-parame-vms-alpha.ads, s-parame-vms-ia64.ads: Redeclare C_Address\n\tlike done by System.Aux_DEC.\n\t* env.c (__gnat_setenv) [VMS]: Put logicals into LNM$PROCESS table.\n\nFrom-SVN: r177050", "tree": {"sha": "550db9ff8d0612f31d17865aa56eb329d677f905", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/550db9ff8d0612f31d17865aa56eb329d677f905"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2010d0783d695583e72d0f412278caf4be041776", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2010d0783d695583e72d0f412278caf4be041776", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2010d0783d695583e72d0f412278caf4be041776", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2010d0783d695583e72d0f412278caf4be041776/comments", "author": null, "committer": null, "parents": [{"sha": "f2c308fa3f227cc7b46aa2d1250043aeeaef7ee6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2c308fa3f227cc7b46aa2d1250043aeeaef7ee6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2c308fa3f227cc7b46aa2d1250043aeeaef7ee6"}], "stats": {"total": 229, "additions": 151, "deletions": 78}, "files": [{"sha": "b3e29a1a8470428b1013f1ac4e30beac34cb67b0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2010d0783d695583e72d0f412278caf4be041776/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2010d0783d695583e72d0f412278caf4be041776/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2010d0783d695583e72d0f412278caf4be041776", "patch": "@@ -1,3 +1,31 @@\n+2011-08-01  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Fully_Conformant_Expressions): handle quantified\n+\texpressions.\n+\n+2011-08-01  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* sem_ch8.adb: Minor code editing.\n+\t* s-vxwext.adb: Remove trailing space.\n+\t* freeze.adb, freeze.ads, errout.ads, erroutc.adb: Fix GPLv3 header for\n+\tconsistency with other files.\n+\n+2011-08-01  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* s-auxdec.ads, s-auxdec-vms_64.ads: Minor reformatting.\n+\n+2011-08-01  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* par-ch10.adb: reject parameterized expressions as compilation unit.\n+\t* sem_ch4.adb: handle properly conditional expression with overloaded\n+\tthen_clause and no else_clause.\n+\n+2011-08-01  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* s-parame-vms-alpha.ads, s-parame-vms-ia64.ads: Redeclare C_Address\n+\tlike done by System.Aux_DEC.\n+\t* env.c (__gnat_setenv) [VMS]: Put logicals into LNM$PROCESS table.\n+\n 2011-08-01  Yannick Moy  <moy@adacore.com>\n \n \t* par-endh.adb (Check_End): issue a syntax error in SPARK mode for"}, {"sha": "dc18e4e6a21730fc7ade8bd00778b3e9dbaab050", "filename": "gcc/ada/env.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2010d0783d695583e72d0f412278caf4be041776/gcc%2Fada%2Fenv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2010d0783d695583e72d0f412278caf4be041776/gcc%2Fada%2Fenv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fenv.c?ref=2010d0783d695583e72d0f412278caf4be041776", "patch": "@@ -111,8 +111,7 @@ __gnat_setenv (char *name, char *value)\n {\n #if defined (VMS)\n   struct dsc$descriptor_s name_desc;\n-  /* Put in JOB table for now, so that the project stuff at least works.  */\n-  $DESCRIPTOR (table_desc, \"LNM$JOB\");\n+  $DESCRIPTOR (table_desc, \"LNM$PROCESS\");\n   char *host_pathspec = value;\n   char *copy_pathspec;\n   int num_dirs_in_pathspec = 1;"}, {"sha": "e9ddb7e3e87526f84df59fa875db8ff2c84c9bfc", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2010d0783d695583e72d0f412278caf4be041776/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2010d0783d695583e72d0f412278caf4be041776/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=2010d0783d695583e72d0f412278caf4be041776", "patch": "@@ -13,11 +13,10 @@\n -- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n -- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n -- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License along  --\n--- with this program; see file COPYING3.  If not see                        --\n--- <http://www.gnu.org/licenses/>.                                          --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT; see file COPYING3.  If not, go to --\n+-- http://www.gnu.org/licenses for a complete copy of the license.          --\n --                                                                          --\n -- GNAT was originally developed  by the GNAT team at  New York University. --\n -- Extensive contributions were provided by Ada Core Technologies Inc.      --"}, {"sha": "4c450f61084ff783b9831b9f06332980445a5436", "filename": "gcc/ada/erroutc.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2010d0783d695583e72d0f412278caf4be041776/gcc%2Fada%2Ferroutc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2010d0783d695583e72d0f412278caf4be041776/gcc%2Fada%2Ferroutc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.adb?ref=2010d0783d695583e72d0f412278caf4be041776", "patch": "@@ -13,11 +13,10 @@\n -- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n -- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n -- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License along  --\n--- with this program; see file COPYING3.  If not see                        --\n--- <http://www.gnu.org/licenses/>.                                          --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT; see file COPYING3.  If not, go to --\n+-- http://www.gnu.org/licenses for a complete copy of the license.          --\n --                                                                          --\n -- GNAT was originally developed  by the GNAT team at  New York University. --\n -- Extensive contributions were provided by Ada Core Technologies Inc.      --"}, {"sha": "c84468536de4d6e00f3a16df62f296f514f858a4", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2010d0783d695583e72d0f412278caf4be041776/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2010d0783d695583e72d0f412278caf4be041776/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=2010d0783d695583e72d0f412278caf4be041776", "patch": "@@ -13,11 +13,10 @@\n -- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n -- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n -- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License along  --\n--- with this program; see file COPYING3.  If not see                        --\n--- <http://www.gnu.org/licenses/>.                                          --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT; see file COPYING3.  If not, go to --\n+-- http://www.gnu.org/licenses for a complete copy of the license.          --\n --                                                                          --\n -- GNAT was originally developed  by the GNAT team at  New York University. --\n -- Extensive contributions were provided by Ada Core Technologies Inc.      --"}, {"sha": "5ecce680736b0e1e7022cbbe26c5868386cd9dfd", "filename": "gcc/ada/freeze.ads", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2010d0783d695583e72d0f412278caf4be041776/gcc%2Fada%2Ffreeze.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2010d0783d695583e72d0f412278caf4be041776/gcc%2Fada%2Ffreeze.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.ads?ref=2010d0783d695583e72d0f412278caf4be041776", "patch": "@@ -13,11 +13,10 @@\n -- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n -- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n -- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License along  --\n--- with this program; see file COPYING3.  If not see                        --\n--- <http://www.gnu.org/licenses/>.                                          --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT; see file COPYING3.  If not, go to --\n+-- http://www.gnu.org/licenses for a complete copy of the license.          --\n --                                                                          --\n -- GNAT was originally developed  by the GNAT team at  New York University. --\n -- Extensive contributions were provided by Ada Core Technologies Inc.      --"}, {"sha": "47e4fdb7d7e59b76c8312f9ae7d34ab334a81e01", "filename": "gcc/ada/par-ch10.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2010d0783d695583e72d0f412278caf4be041776/gcc%2Fada%2Fpar-ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2010d0783d695583e72d0f412278caf4be041776/gcc%2Fada%2Fpar-ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch10.adb?ref=2010d0783d695583e72d0f412278caf4be041776", "patch": "@@ -563,6 +563,11 @@ package body Ch10 is\n          then\n             Name_Node := Defining_Unit_Name (Unit_Node);\n \n+         elsif Nkind (Unit_Node) = N_Parameterized_Expression then\n+            Error_Msg_SP\n+              (\"parameterized expression cannot be used as compilation unit\");\n+            return Comp_Unit_Node;\n+\n          --  Anything else is a serious error, abandon scan\n \n          else"}, {"sha": "ea0720dfdb431c83064ff3f1c890e2c8ac1fd5fc", "filename": "gcc/ada/s-auxdec-vms_64.ads", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2010d0783d695583e72d0f412278caf4be041776/gcc%2Fada%2Fs-auxdec-vms_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2010d0783d695583e72d0f412278caf4be041776/gcc%2Fada%2Fs-auxdec-vms_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-auxdec-vms_64.ads?ref=2010d0783d695583e72d0f412278caf4be041776", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1996-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -285,9 +285,9 @@ package System.Aux_DEC is\n    pragma Import (Intrinsic, Import_Address);\n    pragma Import (Intrinsic, Import_Largest_Value);\n \n-   --  For the following declarations, note that the declaration without\n-   --  a Retry_Count parameter means to retry infinitely. A value of zero\n-   --  for the Retry_Count parameter means do not retry.\n+   --  For the following declarations, note that the declaration without a\n+   --  Retry_Count parameter means to retry infinitely. A value of zero for\n+   --  the Retry_Count parameter means do not retry.\n \n    --  Interlocked-instruction procedures\n \n@@ -303,8 +303,7 @@ package System.Aux_DEC is\n       Value : Short_Integer;\n    end record;\n \n-   for Aligned_Word'Alignment use\n-     Integer'Min (2, Standard'Maximum_Alignment);\n+   for Aligned_Word'Alignment use Integer'Min (2, Standard'Maximum_Alignment);\n \n    procedure Clear_Interlocked\n      (Bit          : in out Boolean;\n@@ -337,9 +336,9 @@ package System.Aux_DEC is\n    for Aligned_Long_Integer'Alignment use\n      Integer'Min (8, Standard'Maximum_Alignment);\n \n-   --  For the following declarations, note that the declaration without\n-   --  a Retry_Count parameter mean to retry infinitely. A value of zero\n-   --  for the Retry_Count means do not retry.\n+   --  For the following declarations, note that the declaration without a\n+   --  Retry_Count parameter mean to retry infinitely. A value of zero for\n+   --  the Retry_Count means do not retry.\n \n    procedure Add_Atomic\n      (To           : in out Aligned_Integer;\n@@ -407,12 +406,11 @@ package System.Aux_DEC is\n       Old_Value    : out Long_Integer;\n       Success_Flag : out Boolean);\n \n-   type Insq_Status is\n-     (Fail_No_Lock, OK_Not_First, OK_First);\n+   type Insq_Status is (Fail_No_Lock, OK_Not_First, OK_First);\n \n    for Insq_Status use\n      (Fail_No_Lock => -1,\n-      OK_Not_First => 0,\n+      OK_Not_First =>  0,\n       OK_First     => +1);\n \n    type Remq_Status is (\n@@ -423,7 +421,7 @@ package System.Aux_DEC is\n \n    for Remq_Status use\n      (Fail_No_Lock   => -1,\n-      Fail_Was_Empty => 0,\n+      Fail_Was_Empty =>  0,\n       OK_Not_Empty   => +1,\n       OK_Empty       => +2);\n \n@@ -453,7 +451,7 @@ private\n    No_Addr      : constant Address := Null_Address;\n \n    --  An AST_Handler value is from a typing point of view simply a pointer\n-   --  to a procedure taking a single 64bit parameter. However, this\n+   --  to a procedure taking a single 64 bit parameter. However, this\n    --  is a bit misleading, because the data that this pointer references is\n    --  highly stylized. See body of System.AST_Handling for full details.\n "}, {"sha": "53937aa9889175d51af3d22eb6a621bb5bb3a900", "filename": "gcc/ada/s-auxdec.ads", "status": "modified", "additions": 19, "deletions": 22, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2010d0783d695583e72d0f412278caf4be041776/gcc%2Fada%2Fs-auxdec.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2010d0783d695583e72d0f412278caf4be041776/gcc%2Fada%2Fs-auxdec.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-auxdec.ads?ref=2010d0783d695583e72d0f412278caf4be041776", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1996-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -41,14 +41,13 @@ package System.Aux_DEC is\n    pragma Preelaborate;\n \n    subtype Short_Address is Address;\n-   --  In some versions of System.Aux_DEC, notably that for VMS on the\n-   --  ia64, there are two address types (64-bit and 32-bit), and the\n-   --  name Short_Address is used for the short address form. To avoid\n-   --  difficulties (in regression tests and elsewhere) with units that\n-   --  reference Short_Address, it is provided for other targets as a\n-   --  synonym for the normal Address type, and, as in the case where\n-   --  the lengths are different, Address and Short_Address can be\n-   --  freely inter-converted.\n+   --  In some versions of System.Aux_DEC, notably that for VMS on IA64, there\n+   --  are two address types (64-bit and 32-bit), and the name Short_Address\n+   --  is used for the short address form. To avoid difficulties (in regression\n+   --  tests and elsewhere) with units that reference Short_Address, it is\n+   --  provided for other targets as a synonym for the normal Address type,\n+   --  and, as in the case where the lengths are different, Address and\n+   --  Short_Address can be freely inter-converted.\n \n    type Integer_8  is range -2 **  (8 - 1) .. +2 **  (8 - 1) - 1;\n    for Integer_8'Size  use  8;\n@@ -272,9 +271,9 @@ package System.Aux_DEC is\n    pragma Import (Intrinsic, Import_Address);\n    pragma Import (Intrinsic, Import_Largest_Value);\n \n-   --  For the following declarations, note that the declaration without\n-   --  a Retry_Count parameter means to retry infinitely. A value of zero\n-   --  for the Retry_Count parameter means do not retry.\n+   --  For the following declarations, note that the declaration without a\n+   --  Retry_Count parameter means to retry infinitely. A value of zero for\n+   --  the Retry_Count parameter means do not retry.\n \n    --  Interlocked-instruction procedures\n \n@@ -290,8 +289,7 @@ package System.Aux_DEC is\n       Value : Short_Integer;\n    end record;\n \n-   for Aligned_Word'Alignment use\n-     Integer'Min (2, Standard'Maximum_Alignment);\n+   for Aligned_Word'Alignment use Integer'Min (2, Standard'Maximum_Alignment);\n \n    procedure Clear_Interlocked\n      (Bit          : in out Boolean;\n@@ -324,9 +322,9 @@ package System.Aux_DEC is\n    for Aligned_Long_Integer'Alignment use\n      Integer'Min (8, Standard'Maximum_Alignment);\n \n-   --  For the following declarations, note that the declaration without\n-   --  a Retry_Count parameter mean to retry infinitely. A value of zero\n-   --  for the Retry_Count means do not retry.\n+   --  For the following declarations, note that the declaration without a\n+   --  Retry_Count parameter mean to retry infinitely. A value of zero for\n+   --  the Retry_Count means do not retry.\n \n    procedure Add_Atomic\n      (To           : in out Aligned_Integer;\n@@ -394,12 +392,11 @@ package System.Aux_DEC is\n       Old_Value    : out Long_Integer;\n       Success_Flag : out Boolean);\n \n-   type Insq_Status is\n-     (Fail_No_Lock, OK_Not_First, OK_First);\n+   type Insq_Status is (Fail_No_Lock, OK_Not_First, OK_First);\n \n    for Insq_Status use\n      (Fail_No_Lock => -1,\n-      OK_Not_First => 0,\n+      OK_Not_First =>  0,\n       OK_First     => +1);\n \n    type Remq_Status is (\n@@ -410,7 +407,7 @@ package System.Aux_DEC is\n \n    for Remq_Status use\n      (Fail_No_Lock   => -1,\n-      Fail_Was_Empty => 0,\n+      Fail_Was_Empty =>  0,\n       OK_Not_Empty   => +1,\n       OK_Empty       => +2);\n \n@@ -440,7 +437,7 @@ private\n    No_Addr      : constant Address := Null_Address;\n \n    --  An AST_Handler value is from a typing point of view simply a pointer\n-   --  to a procedure taking a single 64bit parameter. However, this\n+   --  to a procedure taking a single 64 bit parameter. However, this\n    --  is a bit misleading, because the data that this pointer references is\n    --  highly stylized. See body of System.AST_Handling for full details.\n "}, {"sha": "7799dc1e8b8f5645565cfd4d82af1977a61d9ecc", "filename": "gcc/ada/s-parame-vms-alpha.ads", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2010d0783d695583e72d0f412278caf4be041776/gcc%2Fada%2Fs-parame-vms-alpha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2010d0783d695583e72d0f412278caf4be041776/gcc%2Fada%2Fs-parame-vms-alpha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-vms-alpha.ads?ref=2010d0783d695583e72d0f412278caf4be041776", "patch": "@@ -46,8 +46,6 @@\n --  Note: do not introduce any pragma Inline statements into this unit, since\n --  otherwise the relinking and rebinding capability would be deactivated.\n \n-with System.Aux_DEC;\n-\n package System.Parameters is\n    pragma Pure;\n \n@@ -113,10 +111,13 @@ package System.Parameters is\n    --  of all targets. For example, in OpenVMS long /= Long_Integer.\n \n    ptr_bits  : constant := 32;\n-   subtype C_Address is System.Short_Address;\n-   --  Number of bits in Interaces.C pointers, normally a standard address,\n+   subtype C_Address is System.Address\n+     range -2 ** (ptr_bits - 1) .. 2 ** (ptr_bits - 1) - 1;\n+   for C_Address'Object_Size use ptr_bits;\n+   --  Number of bits in Interfaces.C pointers, normally a standard address,\n    --  except on 64-bit VMS where they are 32-bit addresses, for compatibility\n-   --  with legacy code.\n+   --  with legacy code. System.Aux_DEC.Short_Address can't be used because of\n+   --  elaboration circularity.\n \n    C_Malloc_Linkname : constant String := \"__gnat_malloc32\";\n    --  Name of runtime function used to allocate such a pointer"}, {"sha": "89c49ba7bea858fc5f4777e8141d4683d3dc94d7", "filename": "gcc/ada/s-parame-vms-ia64.ads", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2010d0783d695583e72d0f412278caf4be041776/gcc%2Fada%2Fs-parame-vms-ia64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2010d0783d695583e72d0f412278caf4be041776/gcc%2Fada%2Fs-parame-vms-ia64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-vms-ia64.ads?ref=2010d0783d695583e72d0f412278caf4be041776", "patch": "@@ -46,8 +46,6 @@\n --  Note: do not introduce any pragma Inline statements into this unit, since\n --  otherwise the relinking and rebinding capability would be deactivated.\n \n-with System.Aux_DEC;\n-\n package System.Parameters is\n    pragma Pure;\n \n@@ -113,10 +111,14 @@ package System.Parameters is\n    --  of all targets. For example, in OpenVMS long /= Long_Integer.\n \n    ptr_bits  : constant := 32;\n-   subtype C_Address is System.Short_Address;\n+   subtype C_Address is System.Address\n+     range -2 ** (ptr_bits - 1) .. 2 ** (ptr_bits - 1) - 1;\n+   for C_Address'Object_Size use ptr_bits;\n    --  Number of bits in Interaces.C pointers, normally a standard address,\n    --  except on 64-bit VMS where they are 32-bit addresses, for compatibility\n    --  with legacy code.\n+   --  System.Aux_DEC.Short_Address can't be used because of elaboration\n+   --  circularity.\n \n    C_Malloc_Linkname : constant String := \"__gnat_malloc32\";\n    --  Name of runtime function used to allocate such a pointer"}, {"sha": "cfc65da62b67df0ddd85d5577685f86911e13b80", "filename": "gcc/ada/s-vxwext.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2010d0783d695583e72d0f412278caf4be041776/gcc%2Fada%2Fs-vxwext.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2010d0783d695583e72d0f412278caf4be041776/gcc%2Fada%2Fs-vxwext.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vxwext.adb?ref=2010d0783d695583e72d0f412278caf4be041776", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                   B o d y                                --\n --                                                                          --\n---           Copyright (C) 2009-2010, Free Software Foundation, Inc.        --  \n+--           Copyright (C) 2009-2010, Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "76a308dd06f8f30ada776b77ebc3f8735a08677a", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2010d0783d695583e72d0f412278caf4be041776/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2010d0783d695583e72d0f412278caf4be041776/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=2010d0783d695583e72d0f412278caf4be041776", "patch": "@@ -1495,19 +1495,23 @@ package body Sem_Ch4 is\n          begin\n             Set_Etype (N, Any_Type);\n             Get_First_Interp (Then_Expr, I, It);\n-            while Present (It.Nam) loop\n+            if No (Else_Expr) then\n+               --  if no else_expression the conditional must be boolean.\n \n-               --  For each possible interpretation of the Then Expression,\n-               --  add it only if the else expression has a compatible type.\n+               Set_Etype (N, Standard_Boolean);\n+            else\n+               while Present (It.Nam) loop\n \n-               --  Is this right if Else_Expr is empty?\n+                  --  For each possible intepretation of the Then Expression,\n+                  --  add it only if the else expression has a compatible type.\n \n-               if Has_Compatible_Type (Else_Expr, It.Typ) then\n-                  Add_One_Interp (N, It.Typ, It.Typ);\n-               end if;\n+                  if Has_Compatible_Type (Else_Expr, It.Typ) then\n+                     Add_One_Interp (N, It.Typ, It.Typ);\n+                  end if;\n \n-               Get_Next_Interp (I, It);\n-            end loop;\n+                  Get_Next_Interp (I, It);\n+               end loop;\n+            end if;\n          end;\n       end if;\n    end Analyze_Conditional_Expression;"}, {"sha": "a49f9973917bc1430b5ef09d33f01fc358919152", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2010d0783d695583e72d0f412278caf4be041776/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2010d0783d695583e72d0f412278caf4be041776/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=2010d0783d695583e72d0f412278caf4be041776", "patch": "@@ -6685,6 +6685,50 @@ package body Sem_Ch6 is\n                    and then\n                  FCE (Expression (E1), Expression (E2));\n \n+            when N_Quantified_Expression =>\n+               if not FCE (Condition (E1), Condition (E2)) then\n+                  return False;\n+               end if;\n+\n+               if Present (Loop_Parameter_Specification (E1))\n+                 and then Present (Loop_Parameter_Specification (E2))\n+               then\n+                  declare\n+                     L1 : constant Node_Id :=\n+                       Loop_Parameter_Specification (E1);\n+                     L2 : constant Node_Id :=\n+                       Loop_Parameter_Specification (E2);\n+\n+                  begin\n+                     return\n+                       Reverse_Present (L1) = Reverse_Present (L2)\n+                         and then\n+                           FCE (Defining_Identifier (L1),\n+                                Defining_Identifier (L2))\n+                         and then\n+                           FCE (Discrete_Subtype_Definition (L1),\n+                                Discrete_Subtype_Definition (L2));\n+                  end;\n+\n+               else   --  quantified expression with an iterator\n+                  declare\n+                     I1 : constant Node_Id := Iterator_Specification (E1);\n+                     I2 : constant Node_Id := Iterator_Specification (E2);\n+\n+                  begin\n+                     return\n+                       FCE (Defining_Identifier (I1),\n+                            Defining_Identifier (I2))\n+                       and then\n+                         Of_Present (I1) = Of_Present (I2)\n+                       and then\n+                         Reverse_Present (I1) = Reverse_Present (I2)\n+                       and then FCE (Name (I1), Name (I2))\n+                       and then FCE (Subtype_Indication (I1),\n+                                      Subtype_Indication (I2));\n+                  end;\n+               end if;\n+\n             when N_Range =>\n                return\n                  FCE (Low_Bound (E1), Low_Bound (E2))"}, {"sha": "852888c17d35c24f763e2a0df7b8b8ce0971f446", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2010d0783d695583e72d0f412278caf4be041776/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2010d0783d695583e72d0f412278caf4be041776/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=2010d0783d695583e72d0f412278caf4be041776", "patch": "@@ -6299,8 +6299,7 @@ package body Sem_Ch8 is\n          pragma Assert (not Scope_Stack.Table (J).Is_Active_Stack_Base);\n       end loop;\n \n-      pragma Assert (False);  --  unreachable\n-      raise Program_Error;\n+      raise Program_Error;    --  unreachable\n    end Has_Loop_In_Inner_Open_Scopes;\n \n    --------------------"}]}