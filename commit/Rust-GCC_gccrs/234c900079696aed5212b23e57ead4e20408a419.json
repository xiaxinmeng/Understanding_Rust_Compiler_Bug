{"sha": "234c900079696aed5212b23e57ead4e20408a419", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM0YzkwMDA3OTY5NmFlZDUyMTJiMjNlNTdlYWQ0ZTIwNDA4YTQxOQ==", "commit": {"author": {"name": "Alan Hayward", "email": "alan.hayward@arm.com", "date": "2018-08-06T15:33:00Z"}, "committer": {"name": "Alan Hayward", "email": "alahay01@gcc.gnu.org", "date": "2018-08-06T15:33:00Z"}, "message": "Enable clobber high for tls descs on Aarch64\n\ngcc/\n\t* config/aarch64/aarch64.md: Add clobber highs to tls_desc.\n\ngcc/testsuite/\n\t* gcc.target/aarch64/sve/tls_preserve_1.c: New test.\n\t* gcc.target/aarch64/sve/tls_preserve_2.c: New test.\n\t* gcc.target/aarch64/sve/tls_preserve_3.c: New test.\n\nFrom-SVN: r263337", "tree": {"sha": "1a66d23fcd0e98c1378738e8e7bb74a1d76ae4be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a66d23fcd0e98c1378738e8e7bb74a1d76ae4be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/234c900079696aed5212b23e57ead4e20408a419", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/234c900079696aed5212b23e57ead4e20408a419", "html_url": "https://github.com/Rust-GCC/gccrs/commit/234c900079696aed5212b23e57ead4e20408a419", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/234c900079696aed5212b23e57ead4e20408a419/comments", "author": {"login": "a74nh", "id": 4146708, "node_id": "MDQ6VXNlcjQxNDY3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a74nh", "html_url": "https://github.com/a74nh", "followers_url": "https://api.github.com/users/a74nh/followers", "following_url": "https://api.github.com/users/a74nh/following{/other_user}", "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}", "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions", "organizations_url": "https://api.github.com/users/a74nh/orgs", "repos_url": "https://api.github.com/users/a74nh/repos", "events_url": "https://api.github.com/users/a74nh/events{/privacy}", "received_events_url": "https://api.github.com/users/a74nh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8eed4721de54c66953af83791db19d75dd23bce8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eed4721de54c66953af83791db19d75dd23bce8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8eed4721de54c66953af83791db19d75dd23bce8"}], "stats": {"total": 146, "additions": 134, "deletions": 12}, "files": [{"sha": "05bd803a93458679ef4e8ae7109bf63ff586ce8a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/234c900079696aed5212b23e57ead4e20408a419/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/234c900079696aed5212b23e57ead4e20408a419/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=234c900079696aed5212b23e57ead4e20408a419", "patch": "@@ -1,3 +1,7 @@\n+2018-08-06  Alan Hayward  <alan.hayward@arm.com>\n+\n+\t* config/aarch64/aarch64.md: Add clobber highs to tls_desc.\n+\n 2018-08-06  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \t* config/s390/s390.c (s390_loop_unroll_adjust): Prevent small"}, {"sha": "8035856258e1530d2ea61cdb41e5d3e0ec48a465", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 57, "deletions": 12, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/234c900079696aed5212b23e57ead4e20408a419/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/234c900079696aed5212b23e57ead4e20408a419/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=234c900079696aed5212b23e57ead4e20408a419", "patch": "@@ -57,14 +57,36 @@\n     (LR_REGNUM\t\t30)\n     (SP_REGNUM\t\t31)\n     (V0_REGNUM\t\t32)\n+    (V1_REGNUM\t\t33)\n+    (V2_REGNUM\t\t34)\n+    (V3_REGNUM\t\t35)\n     (V4_REGNUM\t\t36)\n+    (V5_REGNUM\t\t37)\n+    (V6_REGNUM\t\t38)\n+    (V7_REGNUM\t\t39)\n     (V8_REGNUM\t\t40)\n+    (V9_REGNUM\t\t41)\n+    (V10_REGNUM\t\t42)\n+    (V11_REGNUM\t\t43)\n     (V12_REGNUM\t\t44)\n+    (V13_REGNUM\t\t45)\n+    (V14_REGNUM\t\t46)\n     (V15_REGNUM\t\t47)\n     (V16_REGNUM\t\t48)\n+    (V17_REGNUM\t\t49)\n+    (V18_REGNUM\t\t50)\n+    (V19_REGNUM\t\t51)\n     (V20_REGNUM\t\t52)\n+    (V21_REGNUM\t\t53)\n+    (V22_REGNUM\t\t54)\n+    (V23_REGNUM\t\t55)\n     (V24_REGNUM\t\t56)\n+    (V25_REGNUM\t\t57)\n+    (V26_REGNUM\t\t58)\n+    (V27_REGNUM\t\t59)\n     (V28_REGNUM\t\t60)\n+    (V29_REGNUM\t\t61)\n+    (V30_REGNUM\t\t62)\n     (V31_REGNUM\t\t63)\n     (LAST_SAVED_REGNUM\t63)\n     (SFP_REGNUM\t\t64)\n@@ -6313,24 +6335,47 @@\n   [(set_attr \"type\" \"call\")\n    (set_attr \"length\" \"16\")])\n \n-;; For SVE, model tlsdesc calls as clobbering all vector and predicate\n-;; registers, on top of the usual R0 and LR.  In reality the calls\n-;; preserve the low 128 bits of the vector registers, but we don't\n-;; yet have a way of representing that in the instruction pattern.\n+;; For SVE, model tlsdesc calls as clobbering the lower 128 bits of\n+;; all vector registers, and clobber all predicate registers, on\n+;; top of the usual R0 and LR.\n (define_insn \"tlsdesc_small_sve_<mode>\"\n   [(set (reg:PTR R0_REGNUM)\n         (unspec:PTR [(match_operand 0 \"aarch64_valid_symref\" \"S\")]\n \t\t    UNSPEC_TLSDESC))\n    (clobber (reg:DI LR_REGNUM))\n    (clobber (reg:CC CC_REGNUM))\n-   (clobber (reg:XI V0_REGNUM))\n-   (clobber (reg:XI V4_REGNUM))\n-   (clobber (reg:XI V8_REGNUM))\n-   (clobber (reg:XI V12_REGNUM))\n-   (clobber (reg:XI V16_REGNUM))\n-   (clobber (reg:XI V20_REGNUM))\n-   (clobber (reg:XI V24_REGNUM))\n-   (clobber (reg:XI V28_REGNUM))\n+   (clobber_high (reg:TI V0_REGNUM))\n+   (clobber_high (reg:TI V1_REGNUM))\n+   (clobber_high (reg:TI V2_REGNUM))\n+   (clobber_high (reg:TI V3_REGNUM))\n+   (clobber_high (reg:TI V4_REGNUM))\n+   (clobber_high (reg:TI V5_REGNUM))\n+   (clobber_high (reg:TI V6_REGNUM))\n+   (clobber_high (reg:TI V7_REGNUM))\n+   (clobber_high (reg:TI V8_REGNUM))\n+   (clobber_high (reg:TI V9_REGNUM))\n+   (clobber_high (reg:TI V10_REGNUM))\n+   (clobber_high (reg:TI V11_REGNUM))\n+   (clobber_high (reg:TI V12_REGNUM))\n+   (clobber_high (reg:TI V13_REGNUM))\n+   (clobber_high (reg:TI V14_REGNUM))\n+   (clobber_high (reg:TI V15_REGNUM))\n+   (clobber_high (reg:TI V16_REGNUM))\n+   (clobber_high (reg:TI V17_REGNUM))\n+   (clobber_high (reg:TI V18_REGNUM))\n+   (clobber_high (reg:TI V19_REGNUM))\n+   (clobber_high (reg:TI V20_REGNUM))\n+   (clobber_high (reg:TI V21_REGNUM))\n+   (clobber_high (reg:TI V22_REGNUM))\n+   (clobber_high (reg:TI V23_REGNUM))\n+   (clobber_high (reg:TI V24_REGNUM))\n+   (clobber_high (reg:TI V25_REGNUM))\n+   (clobber_high (reg:TI V26_REGNUM))\n+   (clobber_high (reg:TI V27_REGNUM))\n+   (clobber_high (reg:TI V28_REGNUM))\n+   (clobber_high (reg:TI V29_REGNUM))\n+   (clobber_high (reg:TI V30_REGNUM))\n+   (clobber_high (reg:TI V31_REGNUM))\n    (clobber (reg:VNx2BI P0_REGNUM))\n    (clobber (reg:VNx2BI P1_REGNUM))\n    (clobber (reg:VNx2BI P2_REGNUM))"}, {"sha": "321f59b10ffdd0c87548fab89f4e8a4d77d25652", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/234c900079696aed5212b23e57ead4e20408a419/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/234c900079696aed5212b23e57ead4e20408a419/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=234c900079696aed5212b23e57ead4e20408a419", "patch": "@@ -1,3 +1,9 @@\n+2018-08-06  Alan Hayward  <alan.hayward@arm.com>\n+\n+\t* gcc.target/aarch64/sve/tls_preserve_1.c: New test.\n+\t* gcc.target/aarch64/sve/tls_preserve_2.c: New test.\n+\t* gcc.target/aarch64/sve/tls_preserve_3.c: New test.\n+\n 2018-08-06  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \t* gcc.target/s390/nomemloopunroll-1.c: New test."}, {"sha": "c9ee14de15d88ca7af9a9aef9bf87acda2e48ed6", "filename": "gcc/testsuite/gcc.target/aarch64/sve/tls_preserve_1.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/234c900079696aed5212b23e57ead4e20408a419/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Ftls_preserve_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/234c900079696aed5212b23e57ead4e20408a419/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Ftls_preserve_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Ftls_preserve_1.c?ref=234c900079696aed5212b23e57ead4e20408a419", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -fpic\" } */\n+\n+/* Clobber highs do not need to be spilled around tls usage.  */\n+\n+typedef float v4si __attribute__ ((vector_size (16)));\n+\n+__thread v4si tx;\n+\n+v4si foo (v4si a, v4si b, v4si c)\n+{\n+  v4si y;\n+\n+  y = a + tx + b + c;\n+\n+  return y + 7;\n+}\n+\n+/* { dg-final { scan-assembler-not {\\tst[rp]\\t[dqv]} } } */"}, {"sha": "37bd47034c240a12b801ed0855f3df443acbced9", "filename": "gcc/testsuite/gcc.target/aarch64/sve/tls_preserve_2.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/234c900079696aed5212b23e57ead4e20408a419/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Ftls_preserve_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/234c900079696aed5212b23e57ead4e20408a419/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Ftls_preserve_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Ftls_preserve_2.c?ref=234c900079696aed5212b23e57ead4e20408a419", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -fpic -msve-vector-bits=256 -fno-schedule-insns\" } */\n+\n+/* Clobber highs must be spilled around tls usage.  */\n+\n+typedef float v8si __attribute__ ((vector_size (32)));\n+\n+__thread v8si tx;\n+\n+v8si foo (v8si a, v8si b, v8si c)\n+{\n+  v8si y;\n+\n+  /* There is nothing stopping the compiler from making the tls call before\n+     loading the input variables off the stack.  However, there appears to\n+     be no way in C of enforcing this.  Thankfully the compiler doesn't\n+     do this reordering.  */\n+\n+  y = a + tx + b + c;\n+\n+  return y + 7;\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tstr\\tz[0-9]+,} 3 } } */\n\\ No newline at end of file"}, {"sha": "162ece69f6ccf42487f9433256b755eef26d45ec", "filename": "gcc/testsuite/gcc.target/aarch64/sve/tls_preserve_3.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/234c900079696aed5212b23e57ead4e20408a419/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Ftls_preserve_3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/234c900079696aed5212b23e57ead4e20408a419/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Ftls_preserve_3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Ftls_preserve_3.c?ref=234c900079696aed5212b23e57ead4e20408a419", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -fpic -msve-vector-bits=512 -fno-schedule-insns\" } */\n+\n+/* Clobber highs must be spilled around tls usage.  */\n+\n+typedef float v16si __attribute__ ((vector_size (64)));\n+\n+__thread v16si tx;\n+\n+v16si foo (v16si a, v16si b, v16si c)\n+{\n+  v16si y;\n+\n+  /* There is nothing stopping the compiler from making the tls call before\n+     loading the input variables off the stack.  However, there appears to\n+     be no way in C of enforcing this.  Thankfully the compiler doesn't\n+     do this reordering.  */\n+\n+  y = a + tx + b + c;\n+\n+  return y + 7;\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tstr\\tz[0-9]+,} 3 } } */"}]}