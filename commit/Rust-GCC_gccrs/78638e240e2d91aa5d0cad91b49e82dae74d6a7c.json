{"sha": "78638e240e2d91aa5d0cad91b49e82dae74d6a7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg2MzhlMjQwZTJkOTFhYTVkMGNhZDkxYjQ5ZTgyZGFlNzRkNmE3Yw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-04-16T18:06:34Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-04-16T18:06:34Z"}, "message": "class.c (finish_struct): Remove unused variable.\n\n\t* class.c (finish_struct): Remove unused variable.\n\t(pushclass): Likewise.\n\t(invalidate_class_lookup_cache): Likewise.\n\t* cp-tree.def (TYPENAME_TYPE): Improve documentation.\n\t* decl.c (build_typename_type): Make sure TYPENAME_TYPE_FULLNAME\n\tdoesn't get obliterated.\n\t(make_typename_type): Handle template classes correctly.\n\nFrom-SVN: r26507", "tree": {"sha": "96f46bb5c5b9a1ba431ad60b014954d8bb972fad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96f46bb5c5b9a1ba431ad60b014954d8bb972fad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78638e240e2d91aa5d0cad91b49e82dae74d6a7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78638e240e2d91aa5d0cad91b49e82dae74d6a7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78638e240e2d91aa5d0cad91b49e82dae74d6a7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78638e240e2d91aa5d0cad91b49e82dae74d6a7c/comments", "author": null, "committer": null, "parents": [{"sha": "4d1bb6125f6d292168dd258afc4d907e1118de2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d1bb6125f6d292168dd258afc4d907e1118de2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d1bb6125f6d292168dd258afc4d907e1118de2b"}], "stats": {"total": 54, "additions": 46, "deletions": 8}, "files": [{"sha": "67cc7e1f019f249d2436e81002ab0a618c9696b5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78638e240e2d91aa5d0cad91b49e82dae74d6a7c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78638e240e2d91aa5d0cad91b49e82dae74d6a7c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=78638e240e2d91aa5d0cad91b49e82dae74d6a7c", "patch": "@@ -1,5 +1,13 @@\n 1999-04-16  Mark Mitchell  <mark@codesourcery.com>\n \n+\t* class.c (finish_struct): Remove unused variable.\n+\t(pushclass): Likewise.\n+\t(invalidate_class_lookup_cache): Likewise.\n+\t* cp-tree.def (TYPENAME_TYPE): Improve documentation.\n+\t* decl.c (build_typename_type): Make sure TYPENAME_TYPE_FULLNAME\n+\tdoesn't get obliterated.\n+\t(make_typename_type): Handle template classes correctly.\n+\n \t* cp-tree.h (TREE_NONLOCAL_FLAG): Remove.\n \t(storetags): Declare.\n \t* class.c (finish_struct): Don't use TREE_NONLOCAL_FLAG."}, {"sha": "ac762b5b64b99b730724c30e6b707a3df8587c00", "filename": "gcc/cp/class.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78638e240e2d91aa5d0cad91b49e82dae74d6a7c/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78638e240e2d91aa5d0cad91b49e82dae74d6a7c/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=78638e240e2d91aa5d0cad91b49e82dae74d6a7c", "patch": "@@ -4160,7 +4160,6 @@ finish_struct (t, attributes, warn_anon)\n      int warn_anon;\n {\n   tree name = TYPE_NAME (t);\n-  tree x;\n \n   if (TREE_CODE (name) == TYPE_DECL)\n     {\n@@ -4481,8 +4480,6 @@ pushclass (type, modify)\n \n   if (modify)\n     {\n-      tree tags;\n-\n       if (type != previous_class_type || current_class_depth > 1)\n \tpush_class_decls (type);\n       else\n@@ -4519,7 +4516,6 @@ pushclass (type, modify)\n void\n invalidate_class_lookup_cache ()\n {\n-  tree tags = CLASSTYPE_TAGS (previous_class_type);\n   tree t;\n   \n   /* This code can be seen as a cache miss.  When we've cached a"}, {"sha": "da0f1642fd85a9822935bf815d57f350e4171bde", "filename": "gcc/cp/cp-tree.def", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78638e240e2d91aa5d0cad91b49e82dae74d6a7c/gcc%2Fcp%2Fcp-tree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78638e240e2d91aa5d0cad91b49e82dae74d6a7c/gcc%2Fcp%2Fcp-tree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.def?ref=78638e240e2d91aa5d0cad91b49e82dae74d6a7c", "patch": "@@ -144,9 +144,11 @@ DEFTREECODE (TEMPLATE_TYPE_PARM, \"template_type_parm\", 't', 0)\n DEFTREECODE (TEMPLATE_TEMPLATE_PARM, \"template_template_parm\", 't', 0)\n \n /* A type designated by `typename T::t'.  TYPE_CONTEXT is `T',\n-   TYPE_NAME is a TYPE_DECL for `t'.  If TREE_TYPE is present, this\n-   type was generated by the implicit typename extension, and the\n-   TREE_TYPE is a _TYPE from a baseclass of `T'.  */\n+   TYPE_NAME is an IDENTIFIER_NODE for `t'.  If the type was named via\n+   template-id, TYPENAME_TYPE_FULLNAME will hold the TEMPLATE_ID_EXPR.\n+   If TREE_TYPE is present, this type was generated by the implicit\n+   typename extension, and the TREE_TYPE is a _TYPE from a baseclass\n+   of `T'.  */\n DEFTREECODE (TYPENAME_TYPE, \"typename_type\", 't', 0)\n \n /* A type designated by `__typeof (expr)'.  TYPE_FIELDS is the"}, {"sha": "5730719c89b449a31e225cd7186afa04b97e804c", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78638e240e2d91aa5d0cad91b49e82dae74d6a7c/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78638e240e2d91aa5d0cad91b49e82dae74d6a7c/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=78638e240e2d91aa5d0cad91b49e82dae74d6a7c", "patch": "@@ -5302,6 +5302,11 @@ build_typename_type (context, name, fullname, base_type)\n \t\t\t   &typename_compare))\n     fatal (\"virtual memory exhausted\");\n \n+  /* The FULLNAME needs to exist for the life of the hash table, i.e.,\n+     for the entire compilation.  */\n+  if (!TREE_PERMANENT (fullname))\n+    fullname = copy_to_permanent (fullname);\n+\n   /* Build the TYPENAME_TYPE.  */\n   t = make_lang_type (TYPENAME_TYPE);\n   TYPE_CONTEXT (t) = FROB_CONTEXT (context);\n@@ -5341,7 +5346,17 @@ make_typename_type (context, name)\n   tree fullname;\n \n   if (TREE_CODE_CLASS (TREE_CODE (name)) == 't')\n-    name = TYPE_IDENTIFIER (name);\n+    {\n+      if (!(TYPE_LANG_SPECIFIC (name) \n+\t    && (CLASSTYPE_IS_TEMPLATE (name) \n+\t\t|| CLASSTYPE_USE_TEMPLATE (name))))\n+\tname = TYPE_IDENTIFIER (name);\n+      else\n+\t/* Create a TEMPLATE_ID_EXPR for the type.  */\n+\tname = build_nt (TEMPLATE_ID_EXPR,\n+\t\t\t CLASSTYPE_TI_TEMPLATE (name),\n+\t\t\t CLASSTYPE_TI_ARGS (name));\n+    }\n   else if (TREE_CODE (name) == TYPE_DECL)\n     name = DECL_NAME (name);\n "}, {"sha": "86a82df65cb08059e078fad9312c3a2c47815fb3", "filename": "gcc/testsuite/g++.old-deja/g++.pt/typename22.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78638e240e2d91aa5d0cad91b49e82dae74d6a7c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78638e240e2d91aa5d0cad91b49e82dae74d6a7c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename22.C?ref=78638e240e2d91aa5d0cad91b49e82dae74d6a7c", "patch": "@@ -0,0 +1,17 @@\n+// Build don't link:\n+// Origin: Mark Mitchell <mark@codesourcery.com>\n+\n+template <class T>\n+struct S {\n+  template <class U>\n+  struct I { \n+    typedef U X;\n+\n+    X f();\n+  };\n+};\n+\n+\n+template <class T>\n+template <class U>\n+typename S<T>::I<U>::X S<T>::I<U>::f() {}"}]}