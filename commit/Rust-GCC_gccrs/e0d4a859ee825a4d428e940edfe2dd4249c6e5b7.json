{"sha": "e0d4a859ee825a4d428e940edfe2dd4249c6e5b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTBkNGE4NTllZTgyNWE0ZDQyOGU5NDBlZGZlMmRkNDI0OWM2ZTViNw==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2004-04-28T13:24:30Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-04-28T13:24:30Z"}, "message": "* config/arm/lib1funcs.asm: Recognize armv5tej and armv6.\n\nFrom-SVN: r81246", "tree": {"sha": "4eb155dd27c59f6721e27ee56600e72905e1eb8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4eb155dd27c59f6721e27ee56600e72905e1eb8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0d4a859ee825a4d428e940edfe2dd4249c6e5b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0d4a859ee825a4d428e940edfe2dd4249c6e5b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0d4a859ee825a4d428e940edfe2dd4249c6e5b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0d4a859ee825a4d428e940edfe2dd4249c6e5b7/comments", "author": null, "committer": null, "parents": [{"sha": "c470d7c9d35a8554371de7ba3c9a93bd2b41f07a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c470d7c9d35a8554371de7ba3c9a93bd2b41f07a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c470d7c9d35a8554371de7ba3c9a93bd2b41f07a"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "c4132f33a5d6bdf465cf0236de479acdc55d47a7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0d4a859ee825a4d428e940edfe2dd4249c6e5b7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0d4a859ee825a4d428e940edfe2dd4249c6e5b7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e0d4a859ee825a4d428e940edfe2dd4249c6e5b7", "patch": "@@ -1,3 +1,7 @@\n+2004-04-28  Paul Brook  <paul@codesourcery.com>\n+\n+\t* config/arm/lib1funcs.asm: Recognize armv5tej and armv6.\n+\n 2004-04-28  Josef Zlomek  <zlomekj@suse.cz>\n \n \t* var-tracking.c (variable_different_p): Add a parameter"}, {"sha": "7174ed343ad415ba13272c044688fd54ede35336", "filename": "gcc/config/arm/lib1funcs.asm", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0d4a859ee825a4d428e940edfe2dd4249c6e5b7/gcc%2Fconfig%2Farm%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0d4a859ee825a4d428e940edfe2dd4249c6e5b7/gcc%2Fconfig%2Farm%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flib1funcs.asm?ref=e0d4a859ee825a4d428e940edfe2dd4249c6e5b7", "patch": "@@ -74,11 +74,17 @@ Boston, MA 02111-1307, USA.  */\n #endif\n \t\n #if defined(__ARM_ARCH_5__) || defined(__ARM_ARCH_5T__) \\\n-\t|| defined(__ARM_ARCH_5TE__)\n+\t|| defined(__ARM_ARCH_5E__) || defined(__ARM_ARCH_5TE__) \\\n+\t|| defined(__ARM_ARCH_5TEJ__)\n # undef __ARM_ARCH__\n # define __ARM_ARCH__ 5\n #endif\n \n+#if defined(__ARM_ARCH_6__) || defined(__ARM_ARCH_6J__)\n+# undef __ARM_ARCH__\n+# define __ARM_ARCH__ 6\n+#endif\n+\n /* How to return from a function call depends on the architecture variant.  */\n \n #ifdef __APCS_26__\n@@ -876,7 +882,11 @@ LSYM(Lover12):\n \t\t\n /* Do not build the interworking functions when the target architecture does \n    not support Thumb instructions.  (This can be a multilib option).  */\n-#if defined L_call_via_rX && (defined __ARM_ARCH_4T__ || defined __ARM_ARCH_5T__ || defined __ARM_ARCH_5TE__)\n+#if defined __ARM_ARCH_4T__ || defined __ARM_ARCH_5T__\\\n+      || defined __ARM_ARCH_5TE__ || defined __ARM_ARCH_5TEJ__ \\\n+      || __ARM_ARCH__ >= 6\n+\n+#if defined L_call_via_rX\n \n /* These labels & instructions are used by the Arm/Thumb interworking code. \n    The address of function to be called is loaded into a register and then \n@@ -914,10 +924,8 @@ LSYM(Lover12):\n \tcall_via lr\n \n #endif /* L_call_via_rX */\n-/* ------------------------------------------------------------------------ */\n-/* Do not build the interworking functions when the target architecture does \n-   not support Thumb instructions.  (This can be a multilib option).  */\n-#if defined L_interwork_call_via_rX && (defined __ARM_ARCH_4T__ || defined __ARM_ARCH_5T__ || defined __ARM_ARCH_5TE__)\n+\n+#if defined L_interwork_call_via_rX\n \n /* These labels & instructions are used by the Arm/Thumb interworking code,\n    when the target address is in an unknown instruction set.  The address \n@@ -993,6 +1001,7 @@ LSYM(Lchange_\\register):\n \tSIZE\t(_interwork_call_via_lr)\n \t\n #endif /* L_interwork_call_via_rX */\n+#endif /* Arch supports thumb.  */\n \n #include \"ieee754-df.S\"\n #include \"ieee754-sf.S\""}]}