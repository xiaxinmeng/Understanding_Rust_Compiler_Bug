{"sha": "2aacf3c3fc05f89c772053a0c5eed704fba89891", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFhY2YzYzNmYzA1Zjg5Yzc3MjA1M2EwYzVlZWQ3MDRmYmE4OTg5MQ==", "commit": {"author": {"name": "Ira Rosen", "email": "ira.rosen@linaro.org", "date": "2011-08-05T11:12:28Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2011-08-05T11:12:28Z"}, "message": "tree-vect-loop.c (vect_create_epilog_for_reduction): Use the result of multiple results reduction when...\n\n\n        * tree-vect-loop.c (vect_create_epilog_for_reduction): Use the\n        result of multiple results reduction when extracting the final\n        value using scalar code.\n\nFrom-SVN: r177426", "tree": {"sha": "af67a85952b097ffc3a4c5afe1537a89a4c1d535", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af67a85952b097ffc3a4c5afe1537a89a4c1d535"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2aacf3c3fc05f89c772053a0c5eed704fba89891", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aacf3c3fc05f89c772053a0c5eed704fba89891", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2aacf3c3fc05f89c772053a0c5eed704fba89891", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aacf3c3fc05f89c772053a0c5eed704fba89891/comments", "author": null, "committer": null, "parents": [{"sha": "0f36b2dafd0b61c7b473be85bc1ff85bf730a88a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f36b2dafd0b61c7b473be85bc1ff85bf730a88a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f36b2dafd0b61c7b473be85bc1ff85bf730a88a"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "0087f0553851f6d51ab706573292a392de66b2c7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aacf3c3fc05f89c772053a0c5eed704fba89891/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aacf3c3fc05f89c772053a0c5eed704fba89891/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2aacf3c3fc05f89c772053a0c5eed704fba89891", "patch": "@@ -1,3 +1,9 @@\n+2011-08-05  Ira Rosen  <ira.rosen@linaro.org>\n+\n+\t* tree-vect-loop.c (vect_create_epilog_for_reduction): Use the\n+\tresult of multiple results reduction when extracting the final\n+\tvalue using scalar code.\n+\n 2011-08-05  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/49984"}, {"sha": "afd03f28ff1ef036f4f72bf1adfed37120052756", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aacf3c3fc05f89c772053a0c5eed704fba89891/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aacf3c3fc05f89c772053a0c5eed704fba89891/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=2aacf3c3fc05f89c772053a0c5eed704fba89891", "patch": "@@ -3706,13 +3706,13 @@ vect_create_epilog_for_reduction (VEC (tree, heap) *vect_defs, gimple stmt,\n     {\n       tree first_vect = PHI_RESULT (VEC_index (gimple, new_phis, 0));\n       tree tmp;\n+      gimple new_vec_stmt = NULL;\n \n       vec_dest = vect_create_destination_var (scalar_dest, vectype);\n       for (k = 1; k < VEC_length (gimple, new_phis); k++)\n         {\n           gimple next_phi = VEC_index (gimple, new_phis, k);\n           tree second_vect = PHI_RESULT (next_phi);\n-          gimple new_vec_stmt;\n \n           tmp = build2 (code, vectype,  first_vect, second_vect);\n           new_vec_stmt = gimple_build_assign (vec_dest, tmp);\n@@ -3722,6 +3722,11 @@ vect_create_epilog_for_reduction (VEC (tree, heap) *vect_defs, gimple stmt,\n         }\n \n       new_phi_result = first_vect;\n+      if (new_vec_stmt)\n+        {\n+          VEC_truncate (gimple, new_phis, 0);\n+          VEC_safe_push (gimple, heap, new_phis, new_vec_stmt);\n+        }\n     }\n   else\n     new_phi_result = PHI_RESULT (VEC_index (gimple, new_phis, 0));\n@@ -3832,7 +3837,10 @@ vect_create_epilog_for_reduction (VEC (tree, heap) *vect_defs, gimple stmt,\n           vec_size_in_bits = tree_low_cst (TYPE_SIZE (vectype), 1);\n           FOR_EACH_VEC_ELT (gimple, new_phis, i, new_phi)\n             {\n-              vec_temp = PHI_RESULT (new_phi);\n+              if (gimple_code (new_phi) == GIMPLE_PHI)\n+                vec_temp = PHI_RESULT (new_phi);\n+              else\n+                vec_temp = gimple_assign_lhs (new_phi);\n               rhs = build3 (BIT_FIELD_REF, scalar_type, vec_temp, bitsize,\n                             bitsize_zero_node);\n               epilog_stmt = gimple_build_assign (new_scalar_dest, rhs);"}]}