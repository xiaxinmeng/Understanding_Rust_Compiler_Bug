{"sha": "6aa489b4704c3405534f1ebb0aece04af0a102e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFhNDg5YjQ3MDRjMzQwNTUzNGYxZWJiMGFlY2UwNGFmMGExMDJlMA==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@cygnus.com", "date": "1999-03-24T15:47:29Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "1999-03-24T15:47:29Z"}, "message": "Accept both 'model' and '__model__' as attribute names.\n\nRef: CR 100400-990301-CR-1\n\nFrom-SVN: r25948", "tree": {"sha": "6379f07851f0c1e536864e3be9ce87acbb15486d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6379f07851f0c1e536864e3be9ce87acbb15486d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6aa489b4704c3405534f1ebb0aece04af0a102e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aa489b4704c3405534f1ebb0aece04af0a102e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6aa489b4704c3405534f1ebb0aece04af0a102e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aa489b4704c3405534f1ebb0aece04af0a102e0/comments", "author": null, "committer": null, "parents": [{"sha": "d676f55c3262b3e6b0acf76733a0e6d43736a037", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d676f55c3262b3e6b0acf76733a0e6d43736a037", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d676f55c3262b3e6b0acf76733a0e6d43736a037"}], "stats": {"total": 82, "additions": 54, "deletions": 28}, "files": [{"sha": "45e7ddbb7c1acb43ff6a9a168cdedff0c1185d1c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aa489b4704c3405534f1ebb0aece04af0a102e0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aa489b4704c3405534f1ebb0aece04af0a102e0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6aa489b4704c3405534f1ebb0aece04af0a102e0", "patch": "@@ -1,3 +1,10 @@\n+Wed Mar 24 15:44:12 1999  Nick Clifton  <nickc@cygnus.com>\n+\n+\t* config/m32r/m32r.c (init_idents): Accept both NAME and __NAME__\n+\tversions of attribute names and values.\n+\t(m32r_valid_machine_decl_attribute): Ditto.\n+\t(m32r_encode_section_info): Ditto.\n+\n Wed Mar 24 21:42:15 1999  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* reload1.c (choose_reload_regs): If output-reloading for a"}, {"sha": "ddc052b365bb3ecb709e0cc3916747c0d89b69e1", "filename": "gcc/config/m32r/m32r.c", "status": "modified", "additions": 47, "deletions": 28, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aa489b4704c3405534f1ebb0aece04af0a102e0/gcc%2Fconfig%2Fm32r%2Fm32r.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aa489b4704c3405534f1ebb0aece04af0a102e0/gcc%2Fconfig%2Fm32r%2Fm32r.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.c?ref=6aa489b4704c3405534f1ebb0aece04af0a102e0", "patch": "@@ -190,25 +190,6 @@ init_reg_tables ()\n     }\n }\n \f\n-static tree interrupt_ident;\n-static tree model_ident;\n-static tree small_ident;\n-static tree medium_ident;\n-static tree large_ident;\n-\n-static void\n-init_idents ()\n-{\n-  if (interrupt_ident == 0)\n-    {\n-      interrupt_ident = get_identifier (\"interrupt\");\n-      model_ident = get_identifier (\"model\");\n-      small_ident = get_identifier (\"small\");\n-      medium_ident = get_identifier (\"medium\");\n-      large_ident = get_identifier (\"large\");\n-    }\n-}\n-\n /* M32R specific attribute support.\n \n    interrupt - for interrupt functions\n@@ -222,6 +203,35 @@ init_idents ()\n \tGrep for MODEL in m32r.h for more info.\n */\n \n+static tree interrupt_ident1;\n+static tree interrupt_ident2;\n+static tree model_ident1;\n+static tree model_ident2;\n+static tree small_ident1;\n+static tree small_ident2;\n+static tree medium_ident1;\n+static tree medium_ident2;\n+static tree large_ident1;\n+static tree large_ident2;\n+\n+static void\n+init_idents PROTO ((void))\n+{\n+  if (interrupt_ident1 == 0)\n+    {\n+      interrupt_ident1 = get_identifier (\"interrupt\");\n+      interrupt_ident2 = get_identifier (\"__interrupt__\");\n+      model_ident1 = get_identifier (\"model\");\n+      model_ident2 = get_identifier (\"__model__\");\n+      small_ident1 = get_identifier (\"small\");\n+      small_ident2 = get_identifier (\"__small__\");\n+      medium_ident1 = get_identifier (\"medium\");\n+      medium_ident2 = get_identifier (\"__medium__\");\n+      large_ident1 = get_identifier (\"large\");\n+      large_ident2 = get_identifier (\"__large__\");\n+    }\n+}\n+\n /* Return nonzero if IDENTIFIER is a valid decl attribute.  */\n \n int\n@@ -233,15 +243,20 @@ m32r_valid_machine_decl_attribute (type, attributes, identifier, args)\n {\n   init_idents ();\n \n-  if (identifier == interrupt_ident\n+  if ((identifier == interrupt_ident1\n+       || identifier == interrupt_ident2)\n       && list_length (args) == 0)\n     return 1;\n \n-  if (identifier == model_ident\n+  if ((identifier == model_ident1\n+       || identifier == model_ident2)\n       && list_length (args) == 1\n-      && (TREE_VALUE (args) == small_ident\n-\t  || TREE_VALUE (args) == medium_ident\n-\t  || TREE_VALUE (args) == large_ident))\n+      && (TREE_VALUE (args) == small_ident1\n+\t  || TREE_VALUE (args) == small_ident2\n+\t  || TREE_VALUE (args) == medium_ident1\n+\t  || TREE_VALUE (args) == medium_ident2\n+\t  || TREE_VALUE (args) == large_ident1\n+\t  || TREE_VALUE (args) == large_ident2))\n     return 1;\n \n   return 0;\n@@ -380,13 +395,17 @@ m32r_encode_section_info (decl)\n     {\n       if (model)\n \t{\n-\t  init_idents ();\n+\t  tree id;\n \t  \n-\t  if (TREE_VALUE (TREE_VALUE (model)) == small_ident)\n+\t  init_idents ();\n+\n+\t  id = TREE_VALUE (TREE_VALUE (model));\n+\n+\t  if (id == small_ident1 || id == small_ident2)\n \t    ; /* don't mark the symbol specially */\n-\t  else if (TREE_VALUE (TREE_VALUE (model)) == medium_ident)\n+\t  else if (id == medium_ident1 || id == medium_ident2)\n \t    prefix = MEDIUM_FLAG_CHAR;\n-\t  else if (TREE_VALUE (TREE_VALUE (model)) == large_ident)\n+\t  else if (id == large_ident1 || id == large_ident2)\n \t    prefix = LARGE_FLAG_CHAR;\n \t  else\n \t    abort (); /* shouldn't happen */"}]}