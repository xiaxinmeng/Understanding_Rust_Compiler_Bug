{"sha": "d7636f5609dc4325d145b82adc9dd977d079303e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc2MzZmNTYwOWRjNDMyNWQxNDViODJhZGM5ZGQ5NzdkMDc5MzAzZQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2014-03-26T02:07:51Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2014-03-26T02:07:51Z"}, "message": "ipa-pure-const.c (propagate_pure_const, [...]): Do not modify inline clones.\n\n\n\t* ipa-pure-const.c (propagate_pure_const, propagate_nothrow):\n\tDo not modify inline clones.\n\nFrom-SVN: r208830", "tree": {"sha": "a2b60ef4958f24b0256b22bcdd66580cdd34cf97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2b60ef4958f24b0256b22bcdd66580cdd34cf97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7636f5609dc4325d145b82adc9dd977d079303e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7636f5609dc4325d145b82adc9dd977d079303e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7636f5609dc4325d145b82adc9dd977d079303e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7636f5609dc4325d145b82adc9dd977d079303e/comments", "author": null, "committer": null, "parents": [{"sha": "72731c33b191d41a6ada3fa45ffaf4415c671253", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72731c33b191d41a6ada3fa45ffaf4415c671253", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72731c33b191d41a6ada3fa45ffaf4415c671253"}], "stats": {"total": 77, "additions": 46, "deletions": 31}, "files": [{"sha": "bc74777659b538310f177e963850423e2d44133f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7636f5609dc4325d145b82adc9dd977d079303e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7636f5609dc4325d145b82adc9dd977d079303e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d7636f5609dc4325d145b82adc9dd977d079303e", "patch": "@@ -1,3 +1,8 @@\n+2014-03-25  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* ipa-pure-const.c (propagate_pure_const, propagate_nothrow):\n+\tDo not modify inline clones.\n+\n 2014-03-25  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/i386/i386.md (general_sext_operand): New mode attr."}, {"sha": "7d35880996503f1ba44590c6862876cf67428f72", "filename": "gcc/ipa-pure-const.c", "status": "modified", "additions": 41, "deletions": 31, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7636f5609dc4325d145b82adc9dd977d079303e/gcc%2Fipa-pure-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7636f5609dc4325d145b82adc9dd977d079303e/gcc%2Fipa-pure-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-pure-const.c?ref=d7636f5609dc4325d145b82adc9dd977d079303e", "patch": "@@ -1327,35 +1327,39 @@ propagate_pure_const (void)\n \t  w_l->pure_const_state = this_state;\n \t  w_l->looping = this_looping;\n \n-\t  switch (this_state)\n-\t    {\n-\t    case IPA_CONST:\n-\t      if (!TREE_READONLY (w->decl))\n-\t\t{\n-\t\t  warn_function_const (w->decl, !this_looping);\n-\t\t  if (dump_file)\n-\t\t    fprintf (dump_file, \"Function found to be %sconst: %s\\n\",\n-\t\t\t     this_looping ? \"looping \" : \"\",\n-\t\t\t     w->name ());\n-\t\t}\n-\t      cgraph_set_const_flag (w, true, this_looping);\n-\t      break;\n+\t  /* Inline clones share declaration with their offline copies;\n+\t     do not modify their declarations since the offline copy may\n+\t     be different.  */\n+\t  if (!w->global.inlined_to)\n+\t    switch (this_state)\n+\t      {\n+\t      case IPA_CONST:\n+\t\tif (!TREE_READONLY (w->decl))\n+\t\t  {\n+\t\t    warn_function_const (w->decl, !this_looping);\n+\t\t    if (dump_file)\n+\t\t      fprintf (dump_file, \"Function found to be %sconst: %s\\n\",\n+\t\t\t       this_looping ? \"looping \" : \"\",\n+\t\t\t       w->name ());\n+\t\t  }\n+\t\tcgraph_set_const_flag (w, true, this_looping);\n+\t\tbreak;\n \n-\t    case IPA_PURE:\n-\t      if (!DECL_PURE_P (w->decl))\n-\t\t{\n-\t\t  warn_function_pure (w->decl, !this_looping);\n-\t\t  if (dump_file)\n-\t\t    fprintf (dump_file, \"Function found to be %spure: %s\\n\",\n-\t\t\t     this_looping ? \"looping \" : \"\",\n-\t\t\t     w->name ());\n-\t\t}\n-\t      cgraph_set_pure_flag (w, true, this_looping);\n-\t      break;\n+\t      case IPA_PURE:\n+\t\tif (!DECL_PURE_P (w->decl))\n+\t\t  {\n+\t\t    warn_function_pure (w->decl, !this_looping);\n+\t\t    if (dump_file)\n+\t\t      fprintf (dump_file, \"Function found to be %spure: %s\\n\",\n+\t\t\t       this_looping ? \"looping \" : \"\",\n+\t\t\t       w->name ());\n+\t\t  }\n+\t\tcgraph_set_pure_flag (w, true, this_looping);\n+\t\tbreak;\n \n-\t    default:\n-\t      break;\n-\t    }\n+\t      default:\n+\t\tbreak;\n+\t      }\n \t  w_info = (struct ipa_dfs_info *) w->aux;\n \t  w = w_info->next_cycle;\n \t}\n@@ -1448,10 +1452,16 @@ propagate_nothrow (void)\n \t  funct_state w_l = get_function_state (w);\n \t  if (!can_throw && !TREE_NOTHROW (w->decl))\n \t    {\n-\t      cgraph_set_nothrow_flag (w, true);\n-\t      if (dump_file)\n-\t\tfprintf (dump_file, \"Function found to be nothrow: %s\\n\",\n-\t\t\t w->name ());\n+\t      /* Inline clones share declaration with their offline copies;\n+\t\t do not modify their declarations since the offline copy may\n+\t\t be different.  */\n+\t      if (!w->global.inlined_to)\n+\t\t{\n+\t\t  cgraph_set_nothrow_flag (w, true);\n+\t\t  if (dump_file)\n+\t\t    fprintf (dump_file, \"Function found to be nothrow: %s\\n\",\n+\t\t\t     w->name ());\n+\t\t}\n \t    }\n \t  else if (can_throw && !TREE_NOTHROW (w->decl))\n \t    w_l->can_throw = true;"}]}