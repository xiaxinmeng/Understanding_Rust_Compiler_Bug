{"sha": "c4abe01049ca7fc5d86d08f8c7a919db2b7f00b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzRhYmUwMTA0OWNhN2ZjNWQ4NmQwOGY4YzdhOTE5ZGIyYjdmMDBiNw==", "commit": {"author": {"name": "Erik Edelmann", "email": "erik.edelmann@iki.fi", "date": "2005-09-13T21:46:04Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2005-09-13T21:46:04Z"}, "message": "re PR fortran/17740 (ICE in gfc_trans_arrayfunc_assign, at fortran/trans-expr.c:2011)\n\n\n2005-09-13  Erik Edelmann  <erik.edelmann@iki.fi>\nfortran/\n\tPR fortran/17740\n\t* trans-expr.c (gfc_trans_arrayfunc_assign): Check value\n\tof attr.elemental for specific function instead of generic name.\ntestsuite/\n\tPR fortran/17740\n\t* gfortran.dg/generic_4.f90: New test.\n\nFrom-SVN: r104240", "tree": {"sha": "4d89ead8b7896517c25621bfc25e00ec034886c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d89ead8b7896517c25621bfc25e00ec034886c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4abe01049ca7fc5d86d08f8c7a919db2b7f00b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4abe01049ca7fc5d86d08f8c7a919db2b7f00b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4abe01049ca7fc5d86d08f8c7a919db2b7f00b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4abe01049ca7fc5d86d08f8c7a919db2b7f00b7/comments", "author": null, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "282c3fdc47dafe3bead2991d54e8a31d409e119d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/282c3fdc47dafe3bead2991d54e8a31d409e119d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/282c3fdc47dafe3bead2991d54e8a31d409e119d"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "9bde936ebc842f89bee0e03c3ddef1d1d15ca716", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4abe01049ca7fc5d86d08f8c7a919db2b7f00b7/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4abe01049ca7fc5d86d08f8c7a919db2b7f00b7/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c4abe01049ca7fc5d86d08f8c7a919db2b7f00b7", "patch": "@@ -1,3 +1,9 @@\n+2005-09-13  Erik Edelmann  <erik.edelmann@iki.fi>\n+\n+\tPR fortran/17740\n+\t* trans-expr.c (gfc_trans_arrayfunc_assign): Check value\n+\tof attr.elemental for specific function instead of generic name.\n+\n 2005-09-13  Richard Sandiford  <richard@codesourcery.com>\n \n \tPR fortran/18899"}, {"sha": "913f7e659191fd952cb4e5c38fc70b1b4aebc4e8", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4abe01049ca7fc5d86d08f8c7a919db2b7f00b7/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4abe01049ca7fc5d86d08f8c7a919db2b7f00b7/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=c4abe01049ca7fc5d86d08f8c7a919db2b7f00b7", "patch": "@@ -2573,7 +2573,8 @@ gfc_trans_arrayfunc_assign (gfc_expr * expr1, gfc_expr * expr2)\n     return NULL;\n \n   /* Elemental functions don't need a temporary anyway.  */\n-  if (expr2->symtree->n.sym->attr.elemental)\n+  if (expr2->value.function.esym != NULL\n+      && expr2->value.function.esym->attr.elemental)\n     return NULL;\n \n   /* Fail if EXPR1 can't be expressed as a descriptor.  */"}, {"sha": "512fccbe4ebb12998d6ccb192b9e681546eefd0a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4abe01049ca7fc5d86d08f8c7a919db2b7f00b7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4abe01049ca7fc5d86d08f8c7a919db2b7f00b7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c4abe01049ca7fc5d86d08f8c7a919db2b7f00b7", "patch": "@@ -1,3 +1,8 @@\n+2005-09-13  Erik Edelmann  <erik.edelmann@iki.fi>\n+\n+\tPR fortran/17740\n+\t* gfortran.dg/generic_4.f90: New test.\n+\n 2005-09-13  Bastian Blank <waldi@debian.org>\n \n \tPR c++/16171"}, {"sha": "62bc569a21c269b43b4e6c036d32a9739f93fb57", "filename": "gcc/testsuite/gfortran.dg/generic_4.f90", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4abe01049ca7fc5d86d08f8c7a919db2b7f00b7/gcc%2Ftestsuite%2Fgfortran.dg%2Fgeneric_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4abe01049ca7fc5d86d08f8c7a919db2b7f00b7/gcc%2Ftestsuite%2Fgfortran.dg%2Fgeneric_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgeneric_4.f90?ref=c4abe01049ca7fc5d86d08f8c7a919db2b7f00b7", "patch": "@@ -0,0 +1,28 @@\n+! { dg-do run }\n+! reduced testcase from PR 17740\n+module FOO\n+\n+  interface BAR\n+     module procedure BAR2\n+  end interface\n+\n+contains\n+\n+  elemental integer function BAR2(X)\n+    integer, intent(in) :: X\n+    BAR2 = X\n+  end function\n+\n+  subroutine BAZ(y,z)\n+    integer :: Y(3), Z(3)\n+    Z = BAR(Y)\n+  end subroutine\n+\n+end module\n+\n+use foo\n+integer :: y(3), z(3)\n+y = (/1,2,3/)\n+call baz(y,z)\n+if (any (y /= z)) call abort ()\n+end"}]}