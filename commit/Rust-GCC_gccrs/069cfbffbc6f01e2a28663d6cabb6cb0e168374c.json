{"sha": "069cfbffbc6f01e2a28663d6cabb6cb0e168374c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDY5Y2ZiZmZiYzZmMDFlMmEyODY2M2Q2Y2FiYjZjYjBlMTY4Mzc0Yw==", "commit": {"author": {"name": "Martin v. L\u00f6wis", "email": "loewis@informatik.hu-berlin.de", "date": "2000-04-11T06:01:53Z"}, "committer": {"name": "Martin v. L\u00f6wis", "email": "loewis@gcc.gnu.org", "date": "2000-04-11T06:01:53Z"}, "message": "extend.texi (-fthis-is-variable): Undocument.\n\n\t* extend.texi (-fthis-is-variable): Undocument.\n\t* flags.h (warn_template_debugging): Remove declaration.\n\t* gcc.1 (-fall-virtual, -fenum-int-equiv, -fthis-is-variable,\n\t-Wenum-clash, -Wtemplate-debugging): Undocument.\n\t* cp/tree.h (HAVE_TEMPLATES): Remove definition.\n\t* cp/lang-options.h (-fthis-is-variable): Remove documentation.\n\nFrom-SVN: r33071", "tree": {"sha": "b4da72120e7a8b02b91e4cee359759c4bfa2635d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4da72120e7a8b02b91e4cee359759c4bfa2635d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/069cfbffbc6f01e2a28663d6cabb6cb0e168374c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/069cfbffbc6f01e2a28663d6cabb6cb0e168374c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/069cfbffbc6f01e2a28663d6cabb6cb0e168374c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/069cfbffbc6f01e2a28663d6cabb6cb0e168374c/comments", "author": null, "committer": null, "parents": [{"sha": "f78c041b7c296432fde6d5a274a5da168e41f74b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f78c041b7c296432fde6d5a274a5da168e41f74b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f78c041b7c296432fde6d5a274a5da168e41f74b"}], "stats": {"total": 103, "additions": 16, "deletions": 87}, "files": [{"sha": "cb48e72e1b9f90179afddec1cb7d80c2aaec9d8e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/069cfbffbc6f01e2a28663d6cabb6cb0e168374c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/069cfbffbc6f01e2a28663d6cabb6cb0e168374c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=069cfbffbc6f01e2a28663d6cabb6cb0e168374c", "patch": "@@ -1,3 +1,10 @@\n+2000-04-11  Martin v. L\ufffdwis  <loewis@informatik.hu-berlin.de>\n+\n+\t* extend.texi (-fthis-is-variable): Undocument.\n+\t* flags.h (warn_template_debugging): Remove declaration.\n+\t* gcc.1 (-fall-virtual, -fenum-int-equiv, -fthis-is-variable,\n+\t-Wenum-clash, -Wtemplate-debugging): Undocument.\n+\n 2000-04-10  Nick Clifton  <nickc@cygnus.com>\n \n \t* config/arm/arm.h (HOST_INT): New macro: Declare a HOST_WIDE_INT"}, {"sha": "7a86ae082187ab22d26142af7f9c518a93e98abf", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/069cfbffbc6f01e2a28663d6cabb6cb0e168374c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/069cfbffbc6f01e2a28663d6cabb6cb0e168374c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=069cfbffbc6f01e2a28663d6cabb6cb0e168374c", "patch": "@@ -1,3 +1,8 @@\n+2000-04-11  Martin v. L\ufffdwis  <loewis@informatik.hu-berlin.de>\n+\n+\t* tree.h (HAVE_TEMPLATES): Remove definition.\n+\t* lang-options.h (-fthis-is-variable): Remove documentation.\n+\n 2000-04-10  Jason Merrill  <jason@casey.cygnus.com>\n \n \t* class.c (instantiate_type): Handle object-relative template-id."}, {"sha": "242da74783bb364ad396ef49478abc1e184922e7", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/069cfbffbc6f01e2a28663d6cabb6cb0e168374c/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/069cfbffbc6f01e2a28663d6cabb6cb0e168374c/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=069cfbffbc6f01e2a28663d6cabb6cb0e168374c", "patch": "@@ -396,10 +396,6 @@ struct tree_srcloc\n   int linenum;\n };\n \n-/* To identify to the debug emitters if it should pay attention to the\n-   flag `-Wtemplate-debugging'.  */\n-#define HAVE_TEMPLATES 1\n-\n /* Macros for access to language-specific slots in an identifier.  */\n \n #define IDENTIFIER_NAMESPACE_BINDINGS(NODE)\t\\"}, {"sha": "55db204249602cc3e7f62e8ab9bdb22b4898fd06", "filename": "gcc/cp/lang-options.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/069cfbffbc6f01e2a28663d6cabb6cb0e168374c/gcc%2Fcp%2Flang-options.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/069cfbffbc6f01e2a28663d6cabb6cb0e168374c/gcc%2Fcp%2Flang-options.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flang-options.h?ref=069cfbffbc6f01e2a28663d6cabb6cb0e168374c", "patch": "@@ -100,7 +100,7 @@ DEFINE_LANG_NAME (\"C++\")\n   { \"-fstrict-prototype\", \"\" },\n   { \"-fno-strict-prototype\", \"Do not assume that empty prototype means no args\" },\n   { \"-ftemplate-depth-\", \"Specify maximum template instantiation depth\"},\n-  { \"-fthis-is-variable\", \"Make 'this' not be type '* const'\"  },\n+  { \"-fthis-is-variable\", \"\"  },\n   { \"-fno-this-is-variable\", \"\" },\n   { \"-fuse-cxa-atexit\", \"Use __cxa_atexit to register destructors.\" },\n   { \"-fno-use-cxa-atexit\", \"\" },"}, {"sha": "1569b675979e37c8e98e435884763dbd94823931", "filename": "gcc/extend.texi", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/069cfbffbc6f01e2a28663d6cabb6cb0e168374c/gcc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/069cfbffbc6f01e2a28663d6cabb6cb0e168374c/gcc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fextend.texi?ref=069cfbffbc6f01e2a28663d6cabb6cb0e168374c", "patch": "@@ -1,4 +1,4 @@\n-@c Copyright (C) 1988,89,92,93,94,96,98, 99 Free Software Foundation, Inc.\n+@c Copyright (C) 1988,89,92,93,94,96,98,99,2000 Free Software Foundation, Inc.\n @c This is part of the GCC manual.\n @c For copying conditions, see the file gcc.texi.\n \n@@ -3225,13 +3225,6 @@ cases, the feature might be gone already.\n While the list below is not exhaustive, it documents some of the options\n that are now deprecated:\n \n-@table @code\n-@item -fthis-is-variable\n-In early versions of C++, assignment to this could be used to implement\n-application-defined memory allocation. Now, allocation functions\n-(@samp{operator new}) are the standard-conforming way to achieve the\n-same effect.\n-\n @item -fexternal-templates\n @itemx -falt-external-templates\n These are two of the many ways for g++ to implement template"}, {"sha": "3ed4a31ff46a0cf7c19cc3e63c556bf306e98bdb", "filename": "gcc/flags.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/069cfbffbc6f01e2a28663d6cabb6cb0e168374c/gcc%2Fflags.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/069cfbffbc6f01e2a28663d6cabb6cb0e168374c/gcc%2Fflags.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflags.h?ref=069cfbffbc6f01e2a28663d6cabb6cb0e168374c", "patch": "@@ -114,11 +114,6 @@ extern int warn_return_type;\n \n extern int warn_cast_align;\n \n-/* Nonzero means warn that dbx info for template class methods isn't fully\n-   supported yet.  */\n-\n-extern int warn_template_debugging;\n-\n /* Nonzero means warn about any identifiers that match in the first N\n    characters.  The value N is in `id_clash_len'.  */\n "}, {"sha": "d9543fa6edc538101ca2004f1c8fded36301761a", "filename": "gcc/gcc.1", "status": "modified", "additions": 2, "deletions": 69, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/069cfbffbc6f01e2a28663d6cabb6cb0e168374c/gcc%2Fgcc.1", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/069cfbffbc6f01e2a28663d6cabb6cb0e168374c/gcc%2Fgcc.1", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.1?ref=069cfbffbc6f01e2a28663d6cabb6cb0e168374c", "patch": "@@ -1,4 +1,4 @@\n-.\\\" Copyright (c) 1991, 1992, 1993, 1994 Free Software Foundation    -*-Text-*-\n+.\\\" Copyright (c) 1991, 1992, 1993, 1994, 2000 Free Software Foundation    -*-Text-*-\n .\\\" See section COPYING for conditions for redistribution\n .\\\"\n .\\\" Set up \\*(lq, \\*(rq if -man hasn't already set it up.\n@@ -20,7 +20,7 @@\n .if n .sp\n .if t .sp 0.4\n ..\n-.Id $Id: gcc.1,v 1.12 1999/10/22 02:32:26 law Exp $\n+.Id $Id: gcc.1,v 1.13 1999/11/02 10:23:46 law Exp $\n .TH GCC 1 \"\\*(Dt\" \"GNU Tools\" \"GNU Tools\"\n .SH NAME\n gcc, g++ \\- GNU project C and C++ Compiler (gcc-2.96)\n@@ -150,10 +150,8 @@ in the following sections.\n .TP\n .B Language Options\n \\-ansi\n-\\-fall\\-virtual\n \\-fcond\\-mismatch\n \\-fdollars\\-in\\-identifiers\n-\\-fenum\\-int\\-equiv\n \\-fexternal\\-templates\n \\-fno\\-asm\n \\-fno\\-builtin\n@@ -164,7 +162,6 @@ in the following sections.\n \\-fno\\-strict\\-prototype\n \\-fsigned\\-bitfields\n \\-fsigned\\-char\n-\\-fthis\\-is\\-variable\n \\-funsigned\\-bitfields\n \\-funsigned\\-char\n \\-fwritable\\-strings\n@@ -185,7 +182,6 @@ in the following sections.\n \\-Wchar\\-subscript\n \\-Wcomment\n \\-Wconversion\n-\\-Wenum\\-clash\n \\-Werror\n \\-Wformat\n .RI \\-Wid\\-clash\\- len\n@@ -206,7 +202,6 @@ in the following sections.\n \\-Wshadow\n \\-Wstrict\\-prototypes\n \\-Wswitch\n-\\-Wtemplate\\-debugging\n \\-Wtraditional\n \\-Wtrigraphs\n \\-Wuninitialized\n@@ -836,14 +831,6 @@ Attempt to support some aspects of traditional C compilers.\n For details, see the GNU C Manual; the duplicate list here\n has been deleted so that we won't get complaints when it\n is out of date.\n-.Sp\n-But one note about C++ programs only (not C).  `\\|\\c\n-.B \\-traditional\\c\n-\\&\\|' has one additional effect for C++: assignment to\n-.B this\n-is permitted.  This is the same as the effect of `\\|\\c\n-.B \\-fthis\\-is\\-variable\\c\n-\\&\\|'.\n .TP\n .B \\-traditional\\-cpp\n Attempt to support some aspects of traditional C preprocessors.\n@@ -866,17 +853,6 @@ Permit the use of `\\|\\c\n \\&\\|' by default on some target systems\n but not others.)\n .TP\n-.B \\-fenum\\-int\\-equiv\n-Permit implicit conversion of \\c\n-.B int\\c\n-\\& to enumeration types (C++\n-only).  Normally GNU C++ allows conversion of \\c\n-.B enum\\c\n-\\& to \\c\n-.B int\\c\n-\\&,\n-but not the other way around.\n-.TP\n .B \\-fexternal\\-templates\n Produce smaller code for template declarations, by generating only a\n single copy of each template function where it is defined (C++ only).\n@@ -902,41 +878,10 @@ Conversely, when you compile using the default option\n \\&\\|', all template instantiations are\n explicitly internal.\n .TP\n-.B \\-fall\\-virtual\n-Treat all possible member functions as virtual, implicitly.  All\n-member functions (except for constructor functions and\n-.B new\n-or\n-.B delete\n-member operators) are treated as virtual functions of the class where\n-they appear.\n-.Sp\n-This does not mean that all calls to these member functions will be\n-made through the internal table of virtual functions.  Under some\n-circumstances, the compiler can determine that a call to a given\n-virtual function can be made directly; in these cases the calls are\n-direct in any case.\n-.TP\n .B \\-fcond\\-mismatch\n Allow conditional expressions with mismatched types in the second and\n third arguments.  The value of such an expression is void.\n .TP\n-.B \\-fthis\\-is\\-variable\n-Permit assignment to \\c\n-.B this\\c\n-\\& (C++ only).  The incorporation of\n-user-defined free store management into C++ has made assignment to\n-`\\|\\c\n-.B this\\c\n-\\&\\|' an anachronism.  Therefore, by default it is invalid to\n-assign to \\c\n-.B this\\c\n-\\& within a class member function.  However, for\n-backwards compatibility, you can make it valid with\n-`\\|\\c\n-.B \\-fthis-is-variable\\c\n-\\&\\|'.\n-.TP\n .B \\-funsigned\\-char\n Let the type \\c\n .B char\\c\n@@ -1863,10 +1808,6 @@ Some spurious warnings can be avoided if you declare as\n .B \\-Wparentheses\n Warn if parentheses are omitted in certain contexts.\n .TP\n-.B \\-Wtemplate\\-debugging\n-When using templates in a C++ program, warn if debugging is not yet\n-fully available (C++ only).\n-.TP\n .B \\-Wall\n All of the above `\\|\\c\n .B \\-W\\c\n@@ -1995,14 +1936,6 @@ header files.\n Warn if anything is declared more than once in the same scope, even in\n cases where multiple declaration is valid and changes nothing.\n .TP\n-.B \\-Wnested-externs\n-Warn if an \\c\n-.B extern\\c\n-\\& declaration is encountered within an function.\n-.TP\n-.B \\-Wenum\\-clash\n-Warn about conversion between different enumeration types (C++ only).\n-.TP\n .B \\-Wlong-long\n Warn if\n .B long long \\c"}]}