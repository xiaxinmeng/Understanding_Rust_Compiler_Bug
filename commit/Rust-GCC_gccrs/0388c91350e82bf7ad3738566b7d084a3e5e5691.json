{"sha": "0388c91350e82bf7ad3738566b7d084a3e5e5691", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM4OGM5MTM1MGU4MmJmN2FkMzczODU2NmI3ZDA4NGEzZTVlNTY5MQ==", "commit": {"author": {"name": "Ulrich Drepper", "email": "drepper@gmail.com", "date": "2013-03-04T16:24:58Z"}, "committer": {"name": "Ulrich Drepper", "email": "drepper@gcc.gnu.org", "date": "2013-03-04T16:24:58Z"}, "message": "Fix and optimize von_mises_distribution class.\n\nFrom-SVN: r196436", "tree": {"sha": "a8571b02b28ae402687c0df4ce4ec791559ec26b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8571b02b28ae402687c0df4ce4ec791559ec26b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0388c91350e82bf7ad3738566b7d084a3e5e5691", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0388c91350e82bf7ad3738566b7d084a3e5e5691", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0388c91350e82bf7ad3738566b7d084a3e5e5691", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0388c91350e82bf7ad3738566b7d084a3e5e5691/comments", "author": {"login": "drepper", "id": 2918631, "node_id": "MDQ6VXNlcjI5MTg2MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/2918631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drepper", "html_url": "https://github.com/drepper", "followers_url": "https://api.github.com/users/drepper/followers", "following_url": "https://api.github.com/users/drepper/following{/other_user}", "gists_url": "https://api.github.com/users/drepper/gists{/gist_id}", "starred_url": "https://api.github.com/users/drepper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drepper/subscriptions", "organizations_url": "https://api.github.com/users/drepper/orgs", "repos_url": "https://api.github.com/users/drepper/repos", "events_url": "https://api.github.com/users/drepper/events{/privacy}", "received_events_url": "https://api.github.com/users/drepper/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "91c4e421067811331f49352160047fa6bf221583", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91c4e421067811331f49352160047fa6bf221583", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91c4e421067811331f49352160047fa6bf221583"}], "stats": {"total": 33, "additions": 20, "deletions": 13}, "files": [{"sha": "4068530f8f522a9026af04a0306c6962e0f7c6cf", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0388c91350e82bf7ad3738566b7d084a3e5e5691/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0388c91350e82bf7ad3738566b7d084a3e5e5691/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0388c91350e82bf7ad3738566b7d084a3e5e5691", "patch": "@@ -1,3 +1,10 @@\n+2013-03-04  Ulrich Drepper  <drepper@gmail.com>\n+\n+\t* include/ext/random (__gnu_cxx::von_mises_distribution<>):\n+\tOptimize generation function by pulling computation of __r into the\n+\tconstructor for param_type.  Also compare _M_mu in operator==.\n+\tFix comment.\n+\n 2013-03-02  Ulrich Drepper  <drepper@gmail.com>\n \n \tAdd triangular and von Mises distributions."}, {"sha": "7af3130087e7926cf07057bb2cec35ff2a6bcee3", "filename": "libstdc++-v3/include/ext/random", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0388c91350e82bf7ad3738566b7d084a3e5e5691/libstdc%2B%2B-v3%2Finclude%2Fext%2Frandom", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0388c91350e82bf7ad3738566b7d084a3e5e5691/libstdc%2B%2B-v3%2Finclude%2Fext%2Frandom", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Frandom?ref=0388c91350e82bf7ad3738566b7d084a3e5e5691", "patch": "@@ -2621,6 +2621,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t  const _RealType __pi = __gnu_cxx::__math_constants<_RealType>::__pi;\n \t  _GLIBCXX_DEBUG_ASSERT(_M_mu >= -__pi && _M_mu <= __pi);\n \t  _GLIBCXX_DEBUG_ASSERT(_M_kappa >= _RealType(0));\n+\n+\t  auto __tau = std::sqrt(_RealType(4) * _M_kappa * _M_kappa\n+\t\t\t\t + _RealType(1)) + _RealType(1);\n+\t  auto __rho = ((__tau - std::sqrt(_RealType(2) * __tau))\n+\t\t\t/ (_RealType(2) * _M_kappa));\n+\t  _M_r = (_RealType(1) + __rho * __rho) / (_RealType(2) * __rho);\n \t}\n \n \t_RealType\n@@ -2633,16 +2639,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n \tfriend bool\n \toperator==(const param_type& __p1, const param_type& __p2)\n-\t{ return __p1._M_kappa == __p2._M_kappa; }\n+\t{ return (__p1._M_mu == __p2._M_mu\n+\t\t  && __p1._M_kappa == __p2._M_kappa); }\n \n       private:\n-\n \t_RealType _M_mu;\n \t_RealType _M_kappa;\n+\t_RealType _M_r;\n       };\n \n       /**\n-       * @brief Constructs a beta distribution with parameters\n+       * @brief Constructs a von Mises distribution with parameters\n        * @f$\\mu@f$ and @f$\\kappa@f$.\n        */\n       explicit\n@@ -2727,20 +2734,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t    = __gnu_cxx::__math_constants<result_type>::__pi;\n \t  std::__detail::_Adaptor<_UniformRandomNumberGenerator, result_type>\n \t    __aurng(__urng);\n-\t  result_type __tau = (std::sqrt(result_type(4) * this->kappa()\n-\t\t\t\t\t * this->kappa() + result_type(1))\n-\t\t\t       + result_type(1));\n-\t  result_type __rho = ((__tau - std::sqrt(result_type(2) * __tau))\n-\t\t\t       / (result_type(2) * this->kappa()));\n-\t  result_type __r = ((result_type(1) + __rho * __rho)\n-\t\t\t     / (result_type(2) * __rho));\n \n \t  result_type __f;\n \t  while (1)\n \t    {\n \t      result_type __rnd = std::cos(__pi * __aurng());\n-\t      __f = (result_type(1) + __r * __rnd) / (__r + __rnd);\n-\t      result_type __c = this->kappa() * (__r - __f);\n+\t      __f = (result_type(1) + __p._M_r * __rnd) / (__p._M_r + __rnd);\n+\t      result_type __c = __p._M_kappa * (__p._M_r - __f);\n \n \t      result_type __rnd2 = __aurng();\n \t      if (__c * (result_type(2) - __c) > __rnd2)\n@@ -2756,7 +2756,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t  if (__aurng() < result_type(0.5))\n \t    __res = -__res;\n #endif\n-\t  __res += this->mu();\n+\t  __res += __p._M_mu;\n \t  if (__res > __pi)\n \t    __res -= result_type(2) * __pi;\n \t  else if (__res < -__pi)"}]}