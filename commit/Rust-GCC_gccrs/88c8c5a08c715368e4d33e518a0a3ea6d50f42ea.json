{"sha": "88c8c5a08c715368e4d33e518a0a3ea6d50f42ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhjOGM1YTA4YzcxNTM2OGU0ZDMzZTUxOGEwYTNlYTZkNTBmNDJlYQ==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2018-11-16T00:50:41Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2018-11-16T00:50:41Z"}, "message": "re PR c++/25759 (Documentation not clear, attribute packed on class in C++)\n\n2018-11-15  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tPR c++/25759\n\n\tgcc/\n\t* doc/extend.texi (Common Type Attributes): Make it explicit\n\tthat attribute \"packed\" can apply to C++ classes.\n\nFrom-SVN: r266199", "tree": {"sha": "783a04f23346465b64d2394d7115270a80124e4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/783a04f23346465b64d2394d7115270a80124e4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88c8c5a08c715368e4d33e518a0a3ea6d50f42ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88c8c5a08c715368e4d33e518a0a3ea6d50f42ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88c8c5a08c715368e4d33e518a0a3ea6d50f42ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88c8c5a08c715368e4d33e518a0a3ea6d50f42ea/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e6c6b1793baedc77291ac0b7fb1e438b389a387e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6c6b1793baedc77291ac0b7fb1e438b389a387e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6c6b1793baedc77291ac0b7fb1e438b389a387e"}], "stats": {"total": 28, "additions": 17, "deletions": 11}, "files": [{"sha": "48e230c63e28a8aa602860137c2d25fc767bed70", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88c8c5a08c715368e4d33e518a0a3ea6d50f42ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88c8c5a08c715368e4d33e518a0a3ea6d50f42ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=88c8c5a08c715368e4d33e518a0a3ea6d50f42ea", "patch": "@@ -1,3 +1,9 @@\n+2018-11-15  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\tPR c++/25759\n+\t* doc/extend.texi (Common Type Attributes): Make it explicit\n+\tthat attribute \"packed\" can apply to C++ classes.\n+\n 2018-11-15  Martin Sebor  <msebor@redhat.com>\n \n \tPR c++/87541"}, {"sha": "2d00d67fcd72be808b79fcb125e10b2a6bef8079", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88c8c5a08c715368e4d33e518a0a3ea6d50f42ea/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88c8c5a08c715368e4d33e518a0a3ea6d50f42ea/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=88c8c5a08c715368e4d33e518a0a3ea6d50f42ea", "patch": "@@ -7314,17 +7314,16 @@ or @code{__pointer__} for the mode used to represent pointers.\n \n @item packed\n @cindex @code{packed} type attribute\n-This attribute, attached to @code{struct} or @code{union} type\n-definition, specifies that each member (other than zero-width bit-fields)\n-of the structure or union is placed to minimize the memory required.  When\n-attached to an @code{enum} definition, it indicates that the smallest\n-integral type should be used.\n+This attribute, attached to @code{struct}, @code{union}, or C++ @code{class}\n+type definition, specifies that each of its members (other than zero-width\n+bit-fields) is placed to minimize the memory required.  This is equivalent\n+to specifying the @code{packed} attribute on each of the members.\n \n @opindex fshort-enums\n-Specifying the @code{packed} attribute for @code{struct} and @code{union}\n-types is equivalent to specifying the @code{packed} attribute on each\n-of the structure or union members.  Specifying the @option{-fshort-enums}\n-flag on the command line is equivalent to specifying the @code{packed}\n+When attached to an @code{enum} definition, the @code{packed} attribute\n+indicates that the smallest integral type should be used.\n+Specifying the @option{-fshort-enums} flag on the command line\n+is equivalent to specifying the @code{packed}\n attribute on all @code{enum} definitions.\n \n In the following example @code{struct my_packed_struct}'s members are\n@@ -7348,8 +7347,9 @@ struct __attribute__ ((__packed__)) my_packed_struct\n @end smallexample\n \n You may only specify the @code{packed} attribute attribute on the definition\n-of an @code{enum}, @code{struct} or @code{union}, not on a @code{typedef}\n-that does not also define the enumerated type, structure or union.\n+of an @code{enum}, @code{struct}, @code{union}, or @code{class}, \n+not on a @code{typedef} that does not also define the enumerated type,\n+structure, union, or class.\n \n @item scalar_storage_order (\"@var{endianness}\")\n @cindex @code{scalar_storage_order} type attribute"}]}