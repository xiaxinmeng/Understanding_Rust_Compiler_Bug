{"sha": "89d65e2d2f2d5d2aa3e2e4c02f4ad5b80e241c46", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODlkNjVlMmQyZjJkNWQyYWEzZTJlNGMwMmY0YWQ1YjgwZTI0MWM0Ng==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-11-04T00:05:51Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-11-04T00:05:51Z"}, "message": "trans-intrinsic.c (gfc_conv_intrinsic_minmaxloc): Don't calculate offset twice in generated code.\n\n\t* trans-intrinsic.c (gfc_conv_intrinsic_minmaxloc): Don't calculate\n\toffset twice in generated code.\n\nFrom-SVN: r180907", "tree": {"sha": "ada356a6255e3327556733b0a19098ecf2b94162", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ada356a6255e3327556733b0a19098ecf2b94162"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89d65e2d2f2d5d2aa3e2e4c02f4ad5b80e241c46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89d65e2d2f2d5d2aa3e2e4c02f4ad5b80e241c46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89d65e2d2f2d5d2aa3e2e4c02f4ad5b80e241c46", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89d65e2d2f2d5d2aa3e2e4c02f4ad5b80e241c46/comments", "author": null, "committer": null, "parents": [{"sha": "fafcf9e64bf502ca628d43f1531e7c39352fb9d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fafcf9e64bf502ca628d43f1531e7c39352fb9d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fafcf9e64bf502ca628d43f1531e7c39352fb9d0"}], "stats": {"total": 33, "additions": 13, "deletions": 20}, "files": [{"sha": "07eff72a87df6274b74cacf5440d18b1336bd2aa", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89d65e2d2f2d5d2aa3e2e4c02f4ad5b80e241c46/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89d65e2d2f2d5d2aa3e2e4c02f4ad5b80e241c46/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=89d65e2d2f2d5d2aa3e2e4c02f4ad5b80e241c46", "patch": "@@ -1,3 +1,8 @@\n+2011-11-04  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* trans-intrinsic.c (gfc_conv_intrinsic_minmaxloc): Don't calculate\n+\toffset twice in generated code.\n+\n 2011-11-04  Mikael Morin  <mikael@gcc.gnu.org>\n \n \t* trans-expr.c (gfc_conv_procedure_call): Handle temporaries for"}, {"sha": "ee162eac6e5ca819c2c3b11833508767b961e165", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 8, "deletions": 20, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89d65e2d2f2d5d2aa3e2e4c02f4ad5b80e241c46/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89d65e2d2f2d5d2aa3e2e4c02f4ad5b80e241c46/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=89d65e2d2f2d5d2aa3e2e4c02f4ad5b80e241c46", "patch": "@@ -3090,6 +3090,14 @@ gfc_conv_intrinsic_minmaxloc (gfc_se * se, gfc_expr * expr, enum tree_code op)\n       TREE_USED (lab2) = 1;\n     }\n \n+  /* An offset must be added to the loop\n+     counter to obtain the required position.  */\n+  gcc_assert (loop.from[0]);\n+\n+  tmp = fold_build2_loc (input_location, MINUS_EXPR, gfc_array_index_type,\n+\t\t\t gfc_index_one_node, loop.from[0]);\n+  gfc_add_modify (&loop.pre, offset, tmp);\n+\n   gfc_mark_ss_chain_used (arrayss, 1);\n   if (maskss)\n     gfc_mark_ss_chain_used (maskss, 1);\n@@ -3123,16 +3131,6 @@ gfc_conv_intrinsic_minmaxloc (gfc_se * se, gfc_expr * expr, enum tree_code op)\n   /* Assign the value to the limit...  */\n   gfc_add_modify (&ifblock, limit, arrayse.expr);\n \n-  /* Remember where we are.  An offset must be added to the loop\n-     counter to obtain the required position.  */\n-  if (loop.from[0])\n-    tmp = fold_build2_loc (input_location, MINUS_EXPR, gfc_array_index_type,\n-\t\t\t   gfc_index_one_node, loop.from[0]);\n-  else\n-    tmp = gfc_index_one_node;\n-\n-  gfc_add_modify (&block, offset, tmp);\n-\n   if (nonempty == NULL && HONOR_NANS (DECL_MODE (limit)))\n     {\n       stmtblock_t ifblock2;\n@@ -3232,16 +3230,6 @@ gfc_conv_intrinsic_minmaxloc (gfc_se * se, gfc_expr * expr, enum tree_code op)\n       /* Assign the value to the limit...  */\n       gfc_add_modify (&ifblock, limit, arrayse.expr);\n \n-      /* Remember where we are.  An offset must be added to the loop\n-\t counter to obtain the required position.  */\n-      if (loop.from[0])\n-\ttmp = fold_build2_loc (input_location, MINUS_EXPR, gfc_array_index_type,\n-\t\t\t       gfc_index_one_node, loop.from[0]);\n-      else\n-\ttmp = gfc_index_one_node;\n-\n-      gfc_add_modify (&block, offset, tmp);\n-\n       tmp = fold_build2_loc (input_location, PLUS_EXPR, TREE_TYPE (pos),\n \t\t\t     loop.loopvar[0], offset);\n       gfc_add_modify (&ifblock, pos, tmp);"}]}