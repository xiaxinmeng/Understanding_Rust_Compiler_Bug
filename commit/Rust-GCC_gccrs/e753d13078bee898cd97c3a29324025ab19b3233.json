{"sha": "e753d13078bee898cd97c3a29324025ab19b3233", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTc1M2QxMzA3OGJlZTg5OGNkOTdjM2EyOTMyNDAyNWFiMTliMzIzMw==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2006-08-29T03:23:04Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2006-08-29T03:23:04Z"}, "message": "Fix white spaces.\n\nFrom-SVN: r116550", "tree": {"sha": "5fdc323738374a1ff04ca09c108dada055d11ef8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5fdc323738374a1ff04ca09c108dada055d11ef8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e753d13078bee898cd97c3a29324025ab19b3233", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e753d13078bee898cd97c3a29324025ab19b3233", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e753d13078bee898cd97c3a29324025ab19b3233", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e753d13078bee898cd97c3a29324025ab19b3233/comments", "author": null, "committer": null, "parents": [{"sha": "6b039c7bae7fdca42b7339a8638215ec2799b0a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b039c7bae7fdca42b7339a8638215ec2799b0a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b039c7bae7fdca42b7339a8638215ec2799b0a4"}], "stats": {"total": 145, "additions": 73, "deletions": 72}, "files": [{"sha": "bec73d619ff080bbb30ef537e7a1b8df266742f2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 31, "deletions": 31, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e753d13078bee898cd97c3a29324025ab19b3233/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e753d13078bee898cd97c3a29324025ab19b3233/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e753d13078bee898cd97c3a29324025ab19b3233", "patch": "@@ -244,7 +244,7 @@\n \tto happen before the lhs is possibly cleared.\n \t\n 2006-08-21  Mark Shinwell  <shinwell@codesourcery.com>\n- \n+\n \t* config/arm/pr-support.c (__gnu_unwind_execute): Insert \" + 1\" in\n \tnecessary places to pass the correct \"number of registers\" values\n \tto _Unwind_VRS_Pop.\n@@ -293,7 +293,7 @@\n \n \tPR target/28648 c:\n \t* tree.c (handle_dll_attribute): Return early if not a\n-   \tvar or function decl.\n+\tvar or function decl.\n \n 2006-08-18  Joseph Myers  <joseph@codesourcery.com>\n \n@@ -587,9 +587,9 @@\n \n 2006-08-07  Victor Kaplansky <victork@il.ibm.com>\n \n-        PR tree-optimization/26969\n-        * tree-vect-analyze.c (vect_analyze_loop_form): Add check of latch\n-         with an empty list of PHIs.\n+\tPR tree-optimization/26969\n+\t* tree-vect-analyze.c (vect_analyze_loop_form): Add check of latch\n+\twith an empty list of PHIs.\n \n 2006-08-06  Paolo Bonzini  <bonzini@gnu.org>\n \n@@ -659,19 +659,19 @@\n \n 2006-08-03  Dorit Nuzman  <dorit@il.ibm.com>\n \n-        PR tree-optimization/27770\n-        * tree-vectorizer.h (get_vectype_for_scalar_type): Function\n-        declaration removed (moved to tree-flow.h).\n-        (vect_can_force_dr_alignment_p): Likewise.\n-        * tree-flow.h (get_vectype_for_scalar_type): New function declaration\n-        (moved from tree-vectorizer.h).\n-        (vect_can_force_dr_alignment_p): Likewise.\n-        * tree-vectorizer.c (vect_print_dump_info): Allow calling this function\n-        from outside the vectorizer - in particular from cgraph stage.\n-        * tree-vect-analyze.c (vect_compute_data_ref_alignment): Don't increase\n-        the alignment of global arrays when -fsection-anchors is enabled.\n-        * cgraphunit.c (cgraph_increase_alignment): New function.\n-        (cgraph_optimize): Call cgraph_increase_alignment.\n+\tPR tree-optimization/27770\n+\t* tree-vectorizer.h (get_vectype_for_scalar_type): Function\n+\tdeclaration removed (moved to tree-flow.h).\n+\t(vect_can_force_dr_alignment_p): Likewise.\n+\t* tree-flow.h (get_vectype_for_scalar_type): New function declaration\n+\t(moved from tree-vectorizer.h).\n+\t(vect_can_force_dr_alignment_p): Likewise.\n+\t* tree-vectorizer.c (vect_print_dump_info): Allow calling this function\n+\tfrom outside the vectorizer - in particular from cgraph stage.\n+\t* tree-vect-analyze.c (vect_compute_data_ref_alignment): Don't increase\n+\tthe alignment of global arrays when -fsection-anchors is enabled.\n+\t* cgraphunit.c (cgraph_increase_alignment): New function.\n+\t(cgraph_optimize): Call cgraph_increase_alignment.\n \n 2006-08-03  David Edelsohn  <edelsohn@gnu.org>\n \n@@ -946,7 +946,7 @@\n 2006-07-21  Danny Smith  <dannysmith@users.sourceforge.net>\n \n \tPR target/28427\n-        * config/i386/cygming.h (MAX_OFILE_ALIGNMENT): Define.\n+\t* config/i386/cygming.h (MAX_OFILE_ALIGNMENT): Define.\n \n 2006-07-20  Eric Christopher  <echristo@apple.com>\n \n@@ -1017,10 +1017,10 @@\n \n 2006-07-18  Paolo Bonzini  <bonzini@gnu.org>\n \n-        * configure: Regenerate.\n-        * Makefile.in (build_libsubdir): New configure substitution\n-        (build_libobjdir): New variable.\n-        (BUILD_LIBIBERTY): Use it.\n+\t* configure: Regenerate.\n+\t* Makefile.in (build_libsubdir): New configure substitution\n+\t(build_libobjdir): New variable.\n+\t(BUILD_LIBIBERTY): Use it.\n \n 2006-07-18  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n@@ -2307,9 +2307,9 @@\n 2006-06-05  Dorit Nuzman  <dorit@il.ibm.com>\n \t    Victor Kaplansky  <victork@il.ibm.com>\n \n-        PR tree-optimization/26360\n-        * tree-vectorizer.c (destroy_loop_vec_info): Remove (dead) pattern\n-        stmts.\n+\tPR tree-optimization/26360\n+\t* tree-vectorizer.c (destroy_loop_vec_info): Remove (dead) pattern\n+\tstmts.\n \n 2006-06-04  Roger Sayle  <roger@eyesopen.com>\n \t    Andrew Pinski  <pinskia@physics.uc.edu>\n@@ -8489,7 +8489,7 @@\n \t* recog.c (reg_fits_class_p): If cl is NO_REGS, return 0 immediately.\n \t* doc/md.texi: Document new constraint-definition mechanism and the\n \tC interface it provides.  Remove references to old mechanism\n- \telsewhere in the document.\n+\telsewhere in the document.\n \t(Machine Constraints): Use pathnames relative to gcc directory,\n \ti.e. config/ARCH/FILE.  Change i386 section to refer to\n \tconfig/i386/predicates.md; update that section to match docstrings.\n@@ -9744,7 +9744,7 @@\n \t* c.opt (-Wwrite-strings): Declare variable warn_write_strings.\n \tClarify documentation.\n \t* c-common.h (warn_write_strings): Remove.\n- \t* c-common.c (warn_write_strings): Likewise.\n+\t* c-common.c (warn_write_strings): Likewise.\n \t* c-opts.c (c_common_init_options): Enable -Wwrite-strings by\n \tdefault for C++.\n \n@@ -10182,9 +10182,9 @@\n \tPR c++/26140\n \tRevert\n \t2006-01-30  Richard Guenther  <rguenther@suse.de>\n- \tPR c++/23372\n- \t* gimplify.c (gimplify_target_expr): Handle easy cases\n- \twithout creating a temporary.\n+\tPR c++/23372\n+\t* gimplify.c (gimplify_target_expr): Handle easy cases\n+\twithout creating a temporary.\n \n 2006-02-07  Pete Steinmetz  <steinmtz@us.ibm.com>\n "}, {"sha": "f16a80171f286fabbf0f0c5f6d92c7551615132b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 42, "deletions": 41, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e753d13078bee898cd97c3a29324025ab19b3233/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e753d13078bee898cd97c3a29324025ab19b3233/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e753d13078bee898cd97c3a29324025ab19b3233", "patch": "@@ -19,9 +19,9 @@\n \t\n 2006-08-27  Lee Millward  <lee.millward@codesourcery.com>\n \n-        PR c++/26573\n-        * class.c (check_field_decls): Don't issue error about\n-        local classes containing static data members.\n+\tPR c++/26573\n+\t* class.c (check_field_decls): Don't issue error about\n+\tlocal classes containing static data members.\n \t\n 2006-08-26  Joseph S. Myers  <joseph@codesourcery.com>\n \n@@ -34,19 +34,19 @@\n \n 2006-08-26  Lee Millward  <lee.millward@codesourcery.com>\n \n-        PR c++/28736\n-        PR c++/28737\n-        PR c++/28738\n-        * pt.c (process_template_parm): Store invalid template\n-        parameters as a TREE_LIST with a TREE_VALUE of error_mark_node.\n-        (push_inline_template_parms_recursive): Check for template\n-        parameters having a TREE_VALUE of error_mark_node rather than\n-        check the parameter itself.\n-        (mangle_class_name_for_template): Likewise.\n-        (comp_template_parms): When comparing the individual template\n-        parameters, return 1 if either is error_mark_node.\n-        (current_template_args): Robustify.\n-        (redeclare_class_template): Likewise.\n+\tPR c++/28736\n+\tPR c++/28737\n+\tPR c++/28738\n+\t* pt.c (process_template_parm): Store invalid template\n+\tparameters as a TREE_LIST with a TREE_VALUE of error_mark_node.\n+\t(push_inline_template_parms_recursive): Check for template\n+\tparameters having a TREE_VALUE of error_mark_node rather than\n+\tcheck the parameter itself.\n+\t(mangle_class_name_for_template): Likewise.\n+\t(comp_template_parms): When comparing the individual template\n+\tparameters, return 1 if either is error_mark_node.\n+\t(current_template_args): Robustify.\n+\t(redeclare_class_template): Likewise.\n \t\n 2006-08-26  Mark Mitchell  <mark@codesourcery.com>\n \n@@ -465,7 +465,7 @@\n \t* method.c (locate_copy): Check for non_reference\n \treturning error_mark_node.\n \n-        PR c++/28260\n+\tPR c++/28260\n \t* decl.c (duplicate_decls): Return error_mark_node\n \ton ambiguous declaration.\n \t\n@@ -1423,8 +1423,8 @@\n \n 2006-03-22  Jason Merrill  <jason@redhat.com>\n \n-        * name-lookup.c (push_namespace_with_attribs): Only apply hidden\n-        visibility to anonymous namespaces if HAVE_GAS_HIDDEN.\n+\t* name-lookup.c (push_namespace_with_attribs): Only apply hidden\n+\tvisibility to anonymous namespaces if HAVE_GAS_HIDDEN.\n \n 2006-03-21  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -1685,7 +1685,7 @@\n \t\tbad_decls list.\n \t\t(decl_jump_unsafe): Check for error_mark_node types.\n \t\t(check_goto): Don't check cdtor_label.  Don't use identify_goto.\n-                * semantics.c (finish_return_stmt): Do check_omp_return before\n+\t\t* semantics.c (finish_return_stmt): Do check_omp_return before\n \t\tconverting to cdtor_label goto.\n \n \t2005-10-21  Richard Henderson  <rth@redhat.com>\n@@ -1808,7 +1808,8 @@\n \t\t* cp-tree.h (OMP_ATOMIC_DEPENDENT_P, OMP_ATOMIC_CODE): New.\n \t\t(finish_omp_clauses, finish_omp_for, finish_omp_atomic): New.\n \t\t* parser.c (cp_parser_omp_clause_copyin): Remove.\n-\t\t(cp_parser_omp_all_clauses): Use cp_parser_omp_var_list instead.                Call finish_omp_clauses.\n+\t\t(cp_parser_omp_all_clauses): Use cp_parser_omp_var_list instead.\n+\t\tCall finish_omp_clauses.\n \t\t(cp_parser_omp_clause_if): Don't do error checking here.\n \t\t(cp_parser_omp_clause_num_threads): Likewise.\n \t\t(cp_parser_omp_clause_schedule): Likewise.\n@@ -2130,31 +2131,31 @@\n \n 2006-02-03  Lee Millward  <lee.millward@gmail.com>\n \n-       * typeck.c (string_conv_p): Pass appropiate\n-       OPT_Wxxxx values when calling warning().\n-       (build_array_ref, cxx_mark_addressable): Likewise.\n-       (check_return_expr): Likewise.\n+\t* typeck.c (string_conv_p): Pass appropiate\n+\tOPT_Wxxxx values when calling warning().\n+\t(build_array_ref, cxx_mark_addressable): Likewise.\n+\t(check_return_expr): Likewise.\n \n-       * init.c (perform_member_init): Likewise.\n-       (sort_mem_initializers, emit_mem_initializers): Likewise.\n+\t* init.c (perform_member_init): Likewise.\n+\t(sort_mem_initializers, emit_mem_initializers): Likewise.\n \n-       * class.c (check_field_decls): Likewise.\n-       (warn_about_ambiguous_bases): Likewise.\n+\t* class.c (check_field_decls): Likewise.\n+\t(warn_about_ambiguous_bases): Likewise.\n \n-       * decl.c (pop_label, poplevel): Likewise.\n-       (duplicate_decls, grok_op_properties): Likewise.\n-       (start_preparsed_function, finish_function): Likewise.\n+\t* decl.c (pop_label, poplevel): Likewise.\n+\t(duplicate_decls, grok_op_properties): Likewise.\n+\t(start_preparsed_function, finish_function): Likewise.\n \n-       * name-lookup.c (pushdecl_maybe_friend): Likewise.\n-       (pushdecl_maybe_friend): Likewise.\n+\t* name-lookup.c (pushdecl_maybe_friend): Likewise.\n+\t(pushdecl_maybe_friend): Likewise.\n \n-       * parser.c (cp_parser_warn_min_max): Likewise.\n-       (cp_parser_cast_expression): Likewise.\n+\t* parser.c (cp_parser_warn_min_max): Likewise.\n+\t(cp_parser_cast_expression): Likewise.\n \n-       * method.c (lazily_declare_fn): Likewise.\n-       * cvt.c (convert_to_void): Likewise.\n-       * mangle.c (finish_mangling): Likewise.\n-       * cp-gimplify.c (gimplify_expr_stmt): Likewise.\n+\t* method.c (lazily_declare_fn): Likewise.\n+\t* cvt.c (convert_to_void): Likewise.\n+\t* mangle.c (finish_mangling): Likewise.\n+\t* cp-gimplify.c (gimplify_expr_stmt): Likewise.\n \n 2006-02-03  Mark Mitchell  <mark@codesourcery.com>\n \n@@ -2738,7 +2739,7 @@\n \n 2005-12-06  Aldy Hernandez  <aldyh@redhat.com>\n \n-       PR C++/24138\n+\tPR C++/24138\n \t* decl.c (reshape_init_array_1): Handle max_index of -1.\n \n 2005-12-06  Roger Sayle  <roger@eyesopen.com>"}]}