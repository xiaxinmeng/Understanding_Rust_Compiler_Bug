{"sha": "41a21e1d8b4bf5ed02dd953d8059c6c311f89edf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFhMjFlMWQ4YjRiZjVlZDAyZGQ5NTNkODA1OWM2YzMxMWY4OWVkZg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2004-08-25T19:35:05Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2004-08-25T19:35:05Z"}, "message": "mips.md (reg): Renamed mode attribute from ccreg.\n\n\t* config/mips/mips.md (reg): Renamed mode attribute from ccreg.\n\t(*mov*_on_*): Adjust accordingly.  Add an explicit MOVECC: prefix.\n\nFrom-SVN: r86568", "tree": {"sha": "9b22d3c5afc51dca6943396ae9f4aa210508f6d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b22d3c5afc51dca6943396ae9f4aa210508f6d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41a21e1d8b4bf5ed02dd953d8059c6c311f89edf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41a21e1d8b4bf5ed02dd953d8059c6c311f89edf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41a21e1d8b4bf5ed02dd953d8059c6c311f89edf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41a21e1d8b4bf5ed02dd953d8059c6c311f89edf/comments", "author": null, "committer": null, "parents": [{"sha": "837869a5bd0279f0f6ce2a1b529c539ce70e7bd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/837869a5bd0279f0f6ce2a1b529c539ce70e7bd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/837869a5bd0279f0f6ce2a1b529c539ce70e7bd6"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "d75e804f61ad0aacc3e01835386768fb2e4ceb52", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41a21e1d8b4bf5ed02dd953d8059c6c311f89edf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41a21e1d8b4bf5ed02dd953d8059c6c311f89edf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=41a21e1d8b4bf5ed02dd953d8059c6c311f89edf", "patch": "@@ -1,3 +1,8 @@\n+2004-08-25  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* config/mips/mips.md (reg): Renamed mode attribute from ccreg.\n+\t(*mov*_on_*): Adjust accordingly.  Add an explicit MOVECC: prefix.\n+\n 2004-08-25  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/mips/mips.md (any_shift): New code macro."}, {"sha": "12d0a59a2894c4a51b528fddf8c0a45258488448", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41a21e1d8b4bf5ed02dd953d8059c6c311f89edf/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41a21e1d8b4bf5ed02dd953d8059c6c311f89edf/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=41a21e1d8b4bf5ed02dd953d8059c6c311f89edf", "patch": "@@ -310,9 +310,9 @@\n ;; field but the equivalent daddiu has only a 5-bit field.\n (define_mode_attr si8_di5 [(SI \"8\") (DI \"5\")])\n \n-;; In MOVECC templates, this attribute gives the constraint to use\n-;; for the condition register.\n-(define_mode_attr ccreg [(SI \"d\") (DI \"d\") (CC \"z\")])\n+;; This attribute gives the best constraint to use for registers of\n+;; a given mode.\n+(define_mode_attr reg [(SI \"d\") (DI \"d\") (CC \"z\")])\n \n ;; This code macro allows all branch instructions to be generated from\n ;; a single define_expand template.\n@@ -5688,7 +5688,7 @@ beq\\t%2,%.,1b\\;\\\n   [(set (match_operand:GPR 0 \"register_operand\" \"=d,d\")\n \t(if_then_else:GPR\n \t (match_operator:MOVECC 4 \"equality_operator\"\n-\t\t[(match_operand:MOVECC 1 \"register_operand\" \"<ccreg>,<ccreg>\")\n+\t\t[(match_operand:MOVECC 1 \"register_operand\" \"<MOVECC:reg>,<MOVECC:reg>\")\n \t\t (const_int 0)])\n \t (match_operand:GPR 2 \"reg_or_0_operand\" \"dJ,0\")\n \t (match_operand:GPR 3 \"reg_or_0_operand\" \"0,dJ\")))]\n@@ -5703,7 +5703,7 @@ beq\\t%2,%.,1b\\;\\\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n \t(if_then_else:SF\n \t (match_operator:MOVECC 4 \"equality_operator\"\n-\t\t[(match_operand:MOVECC 1 \"register_operand\" \"<ccreg>,<ccreg>\")\n+\t\t[(match_operand:MOVECC 1 \"register_operand\" \"<MOVECC:reg>,<MOVECC:reg>\")\n \t\t (const_int 0)])\n \t (match_operand:SF 2 \"register_operand\" \"f,0\")\n \t (match_operand:SF 3 \"register_operand\" \"0,f\")))]\n@@ -5718,7 +5718,7 @@ beq\\t%2,%.,1b\\;\\\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n \t(if_then_else:DF\n \t (match_operator:MOVECC 4 \"equality_operator\"\n-\t\t[(match_operand:MOVECC 1 \"register_operand\" \"<ccreg>,<ccreg>\")\n+\t\t[(match_operand:MOVECC 1 \"register_operand\" \"<MOVECC:reg>,<MOVECC:reg>\")\n \t\t (const_int 0)])\n \t (match_operand:DF 2 \"register_operand\" \"f,0\")\n \t (match_operand:DF 3 \"register_operand\" \"0,f\")))]"}]}