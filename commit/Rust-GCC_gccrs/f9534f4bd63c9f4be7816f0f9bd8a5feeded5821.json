{"sha": "f9534f4bd63c9f4be7816f0f9bd8a5feeded5821", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjk1MzRmNGJkNjNjOWY0YmU3ODE2ZjBmOWJkOGE1ZmVlZGVkNTgyMQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-07-23T08:13:21Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-23T08:13:21Z"}, "message": "[Ada] Minor tweak to -gnatR output\n\nThis makes sure that the numbers present in the -gnatR output are\nprinted in decimal format in all cases, since the hexadecimal format is\nnot compatible with the JSON syntax.\n\n2019-07-23  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* repinfo.adb (List_Component_Layout): Pass Decimal to UI_Write.\n\t(Write_Val): Likewise.\n\nFrom-SVN: r273723", "tree": {"sha": "1ab1609054c47242f22390ce0dc993f5d614854a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ab1609054c47242f22390ce0dc993f5d614854a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9534f4bd63c9f4be7816f0f9bd8a5feeded5821", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9534f4bd63c9f4be7816f0f9bd8a5feeded5821", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9534f4bd63c9f4be7816f0f9bd8a5feeded5821", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9534f4bd63c9f4be7816f0f9bd8a5feeded5821/comments", "author": null, "committer": null, "parents": [{"sha": "c910db716273c381b4e2f36f3d04c6e480876b63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c910db716273c381b4e2f36f3d04c6e480876b63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c910db716273c381b4e2f36f3d04c6e480876b63"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "445e70e8a469e40d36d9e64f6934ac8d23ad428b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9534f4bd63c9f4be7816f0f9bd8a5feeded5821/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9534f4bd63c9f4be7816f0f9bd8a5feeded5821/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f9534f4bd63c9f4be7816f0f9bd8a5feeded5821", "patch": "@@ -1,3 +1,8 @@\n+2019-07-23  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* repinfo.adb (List_Component_Layout): Pass Decimal to UI_Write.\n+\t(Write_Val): Likewise.\n+\n 2019-07-23  Ed Schonberg  <schonberg@adacore.com>\n \n \t* aspects.ads: New table Operational_Aspect, used to distinguish"}, {"sha": "77b5c21c346088c772725b24730e53966d3ac45e", "filename": "gcc/ada/repinfo.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9534f4bd63c9f4be7816f0f9bd8a5feeded5821/gcc%2Fada%2Frepinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9534f4bd63c9f4be7816f0f9bd8a5feeded5821/gcc%2Fada%2Frepinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.adb?ref=f9534f4bd63c9f4be7816f0f9bd8a5feeded5821", "patch": "@@ -1150,7 +1150,7 @@ package body Repinfo is\n             if Ekind (Ent) = E_Discriminant then\n                Spaces (Indent);\n                Write_Str (\"      \"\"discriminant\"\": \");\n-               UI_Write (Discriminant_Number (Ent));\n+               UI_Write (Discriminant_Number (Ent), Decimal);\n                Write_Line (\",\");\n             end if;\n             Spaces (Indent);\n@@ -1181,7 +1181,7 @@ package body Repinfo is\n             Spaces (Max_Spos_Length - 2);\n \n             if Starting_Position /= Uint_0 then\n-               UI_Write (Starting_Position);\n+               UI_Write (Starting_Position, Decimal);\n                Write_Str (\" + \");\n             end if;\n \n@@ -1205,7 +1205,7 @@ package body Repinfo is\n             Sbit := Sbit - SSU;\n          end if;\n \n-         UI_Write (Sbit);\n+         UI_Write (Sbit, Decimal);\n \n          if List_Representation_Info_To_JSON then\n             Write_Line (\", \");\n@@ -1227,13 +1227,13 @@ package body Repinfo is\n             Lbit := Sbit + Esiz - 1;\n \n             if List_Representation_Info_To_JSON then\n-               UI_Write (Esiz);\n+               UI_Write (Esiz, Decimal);\n             else\n                if Lbit >= 0 and then Lbit < 10 then\n                   Write_Char (' ');\n                end if;\n \n-               UI_Write (Lbit);\n+               UI_Write (Lbit, Decimal);\n             end if;\n \n          --  The test for Esize (Ent) not Uint_0 here is an annoying special\n@@ -2414,7 +2414,7 @@ package body Repinfo is\n          end if;\n \n       else\n-         UI_Write (Val);\n+         UI_Write (Val, Decimal);\n       end if;\n    end Write_Val;\n "}]}