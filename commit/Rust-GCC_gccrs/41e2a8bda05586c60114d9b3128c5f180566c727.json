{"sha": "41e2a8bda05586c60114d9b3128c5f180566c727", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFlMmE4YmRhMDU1ODZjNjAxMTRkOWIzMTI4YzVmMTgwNTY2YzcyNw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-31T20:59:35Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-31T20:59:35Z"}, "message": "(ASM_OUTPUT_DOUBLE, ASM_OUTPUT_FLOAT):\n\nUse new REAL_VALUE... macros.\n(ASM_OUTPUT_FLOAT_OPERAND, ASM_OUTPUT_DOUBLE_OPERAND): Likewise.\n\nFrom-SVN: r3965", "tree": {"sha": "957a9b6471e741b62bee91b8801d28c0394386c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/957a9b6471e741b62bee91b8801d28c0394386c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41e2a8bda05586c60114d9b3128c5f180566c727", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41e2a8bda05586c60114d9b3128c5f180566c727", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41e2a8bda05586c60114d9b3128c5f180566c727", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41e2a8bda05586c60114d9b3128c5f180566c727/comments", "author": null, "committer": null, "parents": [{"sha": "4179196a15c43513e08544ff61486134c4b9abd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4179196a15c43513e08544ff61486134c4b9abd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4179196a15c43513e08544ff61486134c4b9abd2"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "af19441de799abdf79761032d113782f452ffbf5", "filename": "gcc/config/m68k/altos3068.h", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41e2a8bda05586c60114d9b3128c5f180566c727/gcc%2Fconfig%2Fm68k%2Faltos3068.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41e2a8bda05586c60114d9b3128c5f180566c727/gcc%2Fconfig%2Fm68k%2Faltos3068.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Faltos3068.h?ref=41e2a8bda05586c60114d9b3128c5f180566c727", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  Altos 3068 68020 version.\n-   Copyright (C) 1988,1989 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1989, 1993 Free Software Foundation, Inc.\n \n Written by Jyrki Kuoppala <jkp@cs.hut.fi>\n Last modified: Mon Mar  6 22:47:58 1989\n@@ -78,22 +78,34 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n /* This is how to output an assembler line defining a `double' constant.  */\n \n #undef ASM_OUTPUT_DOUBLE\n-#define ASM_OUTPUT_DOUBLE(FILE,VALUE)                    \\\n-     fprintf (FILE, \"\\t.double 0r%.20e\\n\", (VALUE))\n+#define ASM_OUTPUT_DOUBLE(FILE,VALUE)\t\t\t\\\n+  do { char dstr[30];\t\t\t\t\t\\\n+       REAL_VALUE_TO_DECIMAL (VALUE, \"%.20e\", dstr);\t\\\n+       fprintf (FILE, \"\\t.double 0r%s\\n\", dstr);\t\\\n+     } while (0)\n \n /* This is how to output an assembler line defining a `float' constant.  */\n \n #undef ASM_OUTPUT_FLOAT\n #define ASM_OUTPUT_FLOAT(FILE,VALUE)                    \\\n-     fprintf (FILE, \"\\t.single 0r%.20e\\n\", (VALUE))\n+  do { char dstr[30];\t\t\t\t\t\\\n+       REAL_VALUE_TO_DECIMAL (VALUE, \"%.20e\", dstr);\t\\\n+       fprintf (FILE, \"\\t.single 0r%s\\n\", dstr);\t\\\n+     } while (0)\n \n #undef ASM_OUTPUT_FLOAT_OPERAND\n-#define ASM_OUTPUT_FLOAT_OPERAND(FILE,VALUE)                \\\n-     fprintf (FILE, \"#0r%.9g\", (VALUE))\n+#define ASM_OUTPUT_FLOAT_OPERAND(CODE,FILE,VALUE)\t\\\n+  do { char dstr[30];\t\t\t\t\t\\\n+       REAL_VALUE_TO_DECIMAL (VALUE, \"%.9g\", dstr);\t\\\n+       fprintf (FILE, \"#0r%s\", dstr);\t\t\t\\\n+     } while (0)\n \n #undef ASM_OUTPUT_DOUBLE_OPERAND\n-#define ASM_OUTPUT_DOUBLE_OPERAND(FILE,VALUE)                \\\n-     fprintf (FILE, \"#0r%.20g\", (VALUE))\n+#define ASM_OUTPUT_DOUBLE_OPERAND(FILE,VALUE)\t\t\\\n+  do { char dstr[30];\t\t\t\t\t\\\n+       REAL_VALUE_TO_DECIMAL (VALUE, \"%.20g\", dstr);\t\\\n+       fprintf (FILE, \"#0r%s\", dstr);\t\t\t\\\n+     } while (0)\n \n /* Return pointer values in both d0 and a0.  */\n "}]}