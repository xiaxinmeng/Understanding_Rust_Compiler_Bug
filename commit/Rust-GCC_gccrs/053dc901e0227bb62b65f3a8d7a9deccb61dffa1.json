{"sha": "053dc901e0227bb62b65f3a8d7a9deccb61dffa1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDUzZGM5MDFlMDIyN2JiNjJiNjVmM2E4ZDdhOWRlY2NiNjFkZmZhMQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-20T12:39:21Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-20T12:39:21Z"}, "message": "Fill up {,un}compression stats for ZSTD in LTO.\n\n\t* lto-compress.c (lto_compression_zstd): Fill up\n\tnum_compressed_il_bytes.\n\t(lto_uncompression_zstd): Likewise for num_uncompressed_il_bytes here.", "tree": {"sha": "73353923f5b83cb69e151cc844f7f2c545c40acd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73353923f5b83cb69e151cc844f7f2c545c40acd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/053dc901e0227bb62b65f3a8d7a9deccb61dffa1", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl7FJPkACgkQTcGC3A+n\nN4V82wf9EdtpwSMxU17N+C6uuxg8K8214CSQf019AdbLqxtKPZQ+R8p6pcJ+6UGd\nhwXWasi9Y9WQYoKdeq9CHpND2tzIxXrVQexhz+gMXGCtzQH41mxdIt8KVvu2O5r2\nx31mjf/iEnPyzQZEWp3X3aTwJy3Q51JSTayF7ZRRDMynFmkruT9Kes4Wn+gQlH/S\nAn+Cnf/9fC18EgXRyXejEzX6D2QVkBfEQ9rrodCkdaeQQtsIL+8vSyPTD6ko3LXt\nooe6ZsZQuNSvFzTqOj/OOOWnHpRz1dh3448AEKUd4Vr7+o+Al6HjgKlpehMXgxM7\nFRHfa973cyzknqhor69dJnyEWW7wVA==\n=elK6\n-----END PGP SIGNATURE-----", "payload": "tree 73353923f5b83cb69e151cc844f7f2c545c40acd\nparent 0b0ad7d0d0584b4668eb4fb148cfe988fdd88224\nauthor Martin Liska <mliska@suse.cz> 1589978361 +0200\ncommitter Martin Liska <mliska@suse.cz> 1589978361 +0200\n\nFill up {,un}compression stats for ZSTD in LTO.\n\n\t* lto-compress.c (lto_compression_zstd): Fill up\n\tnum_compressed_il_bytes.\n\t(lto_uncompression_zstd): Likewise for num_uncompressed_il_bytes here.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/053dc901e0227bb62b65f3a8d7a9deccb61dffa1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/053dc901e0227bb62b65f3a8d7a9deccb61dffa1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/053dc901e0227bb62b65f3a8d7a9deccb61dffa1/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b0ad7d0d0584b4668eb4fb148cfe988fdd88224", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b0ad7d0d0584b4668eb4fb148cfe988fdd88224", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b0ad7d0d0584b4668eb4fb148cfe988fdd88224"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "2fe9f0dfdf58e6180497373c043084cba7f597d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/053dc901e0227bb62b65f3a8d7a9deccb61dffa1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/053dc901e0227bb62b65f3a8d7a9deccb61dffa1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=053dc901e0227bb62b65f3a8d7a9deccb61dffa1", "patch": "@@ -1,3 +1,9 @@\n+2020-05-20  Martin Liska  <mliska@suse.cz>\n+\n+\t* lto-compress.c (lto_compression_zstd): Fill up\n+\tnum_compressed_il_bytes.\n+\t(lto_uncompression_zstd): Likewise for num_uncompressed_il_bytes here.\n+\n 2020-05-20  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/95219"}, {"sha": "d19338b396a39bae12a72664f9900ee0e19599b4", "filename": "gcc/lto-compress.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/053dc901e0227bb62b65f3a8d7a9deccb61dffa1/gcc%2Flto-compress.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/053dc901e0227bb62b65f3a8d7a9deccb61dffa1/gcc%2Flto-compress.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-compress.c?ref=053dc901e0227bb62b65f3a8d7a9deccb61dffa1", "patch": "@@ -141,6 +141,7 @@ lto_compression_zstd (struct lto_compression_stream *stream)\n   if (ZSTD_isError (csize))\n     internal_error (\"compressed stream: %s\", ZSTD_getErrorName (csize));\n \n+  lto_stats.num_compressed_il_bytes += csize;\n   stream->callback (outbuf, csize, NULL);\n \n   lto_destroy_compression_stream (stream);\n@@ -169,6 +170,7 @@ lto_uncompression_zstd (struct lto_compression_stream *stream)\n   if (ZSTD_isError (dsize))\n     internal_error (\"decompressed stream: %s\", ZSTD_getErrorName (dsize));\n \n+  lto_stats.num_uncompressed_il_bytes += dsize;\n   stream->callback (outbuf, dsize, stream->opaque);\n \n   lto_destroy_compression_stream (stream);"}]}