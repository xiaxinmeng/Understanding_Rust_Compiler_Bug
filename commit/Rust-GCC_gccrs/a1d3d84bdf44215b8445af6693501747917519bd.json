{"sha": "a1d3d84bdf44215b8445af6693501747917519bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFkM2Q4NGJkZjQ0MjE1Yjg0NDVhZjY2OTM1MDE3NDc5MTc1MTliZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2012-03-14T08:32:51Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-03-14T08:32:51Z"}, "message": "Revert:\n\n\t2012-03-14  Uros Bizjak  <ubizjak@gmail.com>\n\n\t* config/i386/predicates.md (constant_call_address_operand): Declare\n\tas special predicate.  Update all uses.\n\nFrom-SVN: r185376", "tree": {"sha": "60a02fd45ccb348533a9f51c1eec0ee356561248", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60a02fd45ccb348533a9f51c1eec0ee356561248"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1d3d84bdf44215b8445af6693501747917519bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1d3d84bdf44215b8445af6693501747917519bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1d3d84bdf44215b8445af6693501747917519bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1d3d84bdf44215b8445af6693501747917519bd/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "717a5c6206ec637b71fb1e8f27c1c26c70eb91ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/717a5c6206ec637b71fb1e8f27c1c26c70eb91ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/717a5c6206ec637b71fb1e8f27c1c26c70eb91ce"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "88fc5425d9557292fe064484bc339f11c4184b3c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1d3d84bdf44215b8445af6693501747917519bd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1d3d84bdf44215b8445af6693501747917519bd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a1d3d84bdf44215b8445af6693501747917519bd", "patch": "@@ -1,3 +1,11 @@\n+2012-03-14  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tRevert:\n+\t2012-03-14  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/predicates.md (constant_call_address_operand): Declare\n+\tas special predicate.  Update all uses.\n+\n 2012-03-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/52577"}, {"sha": "4c766484ecf79060936f9396e9273d15fe7e5a72", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1d3d84bdf44215b8445af6693501747917519bd/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1d3d84bdf44215b8445af6693501747917519bd/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=a1d3d84bdf44215b8445af6693501747917519bd", "patch": "@@ -500,7 +500,7 @@\n        (match_test \"op == ix86_tls_module_base ()\")))\n \n ;; Test for a pc-relative call operand\n-(define_special_predicate \"constant_call_address_operand\"\n+(define_predicate \"constant_call_address_operand\"\n   (match_code \"symbol_ref\")\n {\n   if (ix86_cmodel == CM_LARGE || ix86_cmodel == CM_LARGE_PIC)\n@@ -573,14 +573,16 @@\n ;; Test for a valid operand for a call instruction.\n ;; Allow constant call address operands in Pmode only.\n (define_special_predicate \"call_insn_operand\"\n-  (ior (match_operand 0 \"constant_call_address_operand\")\n+  (ior (match_test \"constant_call_address_operand\n+\t\t     (op, mode == VOIDmode ? mode : Pmode)\")\n        (match_operand 0 \"call_register_no_elim_operand\")\n        (and (not (match_test \"TARGET_X32\"))\n \t    (match_operand 0 \"memory_operand\"))))\n \n ;; Similarly, but for tail calls, in which we cannot allow memory references.\n (define_special_predicate \"sibcall_insn_operand\"\n-  (ior (match_operand 0 \"constant_call_address_operand\")\n+  (ior (match_test \"constant_call_address_operand\n+\t\t     (op, mode == VOIDmode ? mode : Pmode)\")\n        (match_operand 0 \"register_no_elim_operand\")))\n \n ;; Match exactly zero."}]}