{"sha": "f2d6ca5081ba8fb31b5d03545f45cce12ac67b3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJkNmNhNTA4MWJhOGZiMzFiNWQwMzU0NWY0NWNjZTEyYWM2N2IzZg==", "commit": {"author": {"name": "Adam Nemet", "email": "anemet@caviumnetworks.com", "date": "2008-08-01T01:18:16Z"}, "committer": {"name": "Adam Nemet", "email": "nemet@gcc.gnu.org", "date": "2008-08-01T01:18:16Z"}, "message": "config.gcc (mipsisa64*-*-linux*): New configuration.\n\n\t* config.gcc (mipsisa64*-*-linux*): New configuration.  Set ISA\n\tto MIPS64r2 for mipsisa64r2*.\n\t* config/mips/mips.h (GENERATE_MIPS16E): Update comment.\n\t(ISA_MIPS64R2): New macro.\n\t(TARGET_CPU_CPP_BUILTINS, MULTILIB_ISA_DEFAULT): Handle it.\n\t(ISA_HAS_64BIT_REGS, ISA_HAS_MUL3, ISA_HAS_FP_CONDMOVE,\n\tISA_HAS_8CC, ISA_HAS_FP4, ISA_HAS_PAIRED_SINGLE,\n\tISA_HAS_MADD_MSUB, ISA_HAS_NMADD4_NMSUB4, ISA_HAS_CLZ_CLO,\n\tISA_HAS_ROR, ISA_HAS_PREFETCH, ISA_HAS_PREFETCHX, ISA_HAS_SEB_SEH,\n\tISA_HAS_EXT_INS, ISA_HAS_MXHC1, ISA_HAS_HILO_INTERLOCKS,\n\tISA_HAS_SYNCI, MIN_FPRS_PER_FMT): Return true for ISA_MIPS64R2.\n\t(MIPS_ISA_LEVEL_SPEC, ASM_SPEC, LINK_SPEC): Handle -mips64r2.\n\t(TARGET_LOONGSON_2E, TARGET_LOONGSON_2F, TARGET_LOONGSON_2EF):\n\tMove up to keep list alphabetically sorted.\n\t(TUNE_20KC, TUNE_24K, TUNE_74K, TUNE_LOONGSON_2EF): Likewise.\n\t* config/mips/mips.c (mips_cpu_info_table): Add default MIPS64r2\n\tprocessor.\n\t* doc/invoke.texi (MIPS Options): Add -mips64r2.\n\t(-march=@var{arch}): Add mips64r2.\n\ntestsuite/\n\n\t* gcc.target/mips/ext-1.c: New test.\n\nFrom-SVN: r138448", "tree": {"sha": "14f707859af1f88b8b32e8fbfb3ce2f7e2e92e4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14f707859af1f88b8b32e8fbfb3ce2f7e2e92e4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2d6ca5081ba8fb31b5d03545f45cce12ac67b3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2d6ca5081ba8fb31b5d03545f45cce12ac67b3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2d6ca5081ba8fb31b5d03545f45cce12ac67b3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2d6ca5081ba8fb31b5d03545f45cce12ac67b3f/comments", "author": null, "committer": null, "parents": [{"sha": "24f9c418761c378444d3bf32a9fe68e328ddf458", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24f9c418761c378444d3bf32a9fe68e328ddf458", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24f9c418761c378444d3bf32a9fe68e328ddf458"}], "stats": {"total": 157, "additions": 121, "deletions": 36}, "files": [{"sha": "8d21c791d38a7d039a159dd7b30abc67f5fb09f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2d6ca5081ba8fb31b5d03545f45cce12ac67b3f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2d6ca5081ba8fb31b5d03545f45cce12ac67b3f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f2d6ca5081ba8fb31b5d03545f45cce12ac67b3f", "patch": "@@ -1,3 +1,25 @@\n+2008-07-31  Adam Nemet  <anemet@caviumnetworks.com>\n+\n+\t* config.gcc (mipsisa64r2*-*-linux*): New configuration.  Set ISA\n+\tto MIPS64r2.\n+\t* config/mips/mips.h (GENERATE_MIPS16E): Update comment.\n+\t(ISA_MIPS64R2): New macro.\n+\t(TARGET_CPU_CPP_BUILTINS, MULTILIB_ISA_DEFAULT): Handle it.\n+\t(ISA_HAS_64BIT_REGS, ISA_HAS_MUL3, ISA_HAS_FP_CONDMOVE,\n+\tISA_HAS_8CC, ISA_HAS_FP4, ISA_HAS_PAIRED_SINGLE,\n+\tISA_HAS_MADD_MSUB, ISA_HAS_NMADD4_NMSUB4, ISA_HAS_CLZ_CLO,\n+\tISA_HAS_ROR, ISA_HAS_PREFETCH, ISA_HAS_PREFETCHX, ISA_HAS_SEB_SEH,\n+\tISA_HAS_EXT_INS, ISA_HAS_MXHC1, ISA_HAS_HILO_INTERLOCKS,\n+\tISA_HAS_SYNCI, MIN_FPRS_PER_FMT): Return true for ISA_MIPS64R2.\n+\t(MIPS_ISA_LEVEL_SPEC, ASM_SPEC, LINK_SPEC): Handle -mips64r2.\n+\t(TARGET_LOONGSON_2E, TARGET_LOONGSON_2F, TARGET_LOONGSON_2EF):\n+\tMove up to keep list alphabetically sorted.\n+\t(TUNE_20KC, TUNE_24K, TUNE_74K, TUNE_LOONGSON_2EF): Likewise.\n+\t* config/mips/mips.c (mips_cpu_info_table): Add default MIPS64r2\n+\tprocessor.\n+\t* doc/invoke.texi (MIPS Options): Add -mips64r2.\n+\t(-march=@var{arch}): Add mips64r2.\n+\n 2008-07-31  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/darwin.h (MAIN_STACK_BOUNDARY): Define to 128."}, {"sha": "a2aa4242f80108b7a03de08301d20b0a9d6ecb7d", "filename": "gcc/config.gcc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2d6ca5081ba8fb31b5d03545f45cce12ac67b3f/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2d6ca5081ba8fb31b5d03545f45cce12ac67b3f/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=f2d6ca5081ba8fb31b5d03545f45cce12ac67b3f", "patch": "@@ -1542,7 +1542,7 @@ mips*-*-netbsd*)\t\t\t# NetBSD/mips, either endian.\n \ttarget_cpu_default=\"MASK_ABICALLS\"\n \ttm_file=\"elfos.h ${tm_file} mips/elf.h netbsd.h netbsd-elf.h mips/netbsd.h\"\n \t;;\n-mips64*-*-linux*)\n+mips64*-*-linux* | mipsisa64*-*-linux*)\n \ttm_file=\"dbxelf.h elfos.h svr4.h linux.h ${tm_file} mips/linux.h mips/linux64.h\"\n \ttmake_file=\"${tmake_file} mips/t-linux64\"\n \ttm_defines=\"${tm_defines} MIPS_ABI_DEFAULT=ABI_N32\"\n@@ -1551,6 +1551,9 @@ mips64*-*-linux*)\n \t\t\ttm_file=\"${tm_file} mips/st.h\"\n \t\t\ttmake_file=\"${tmake_file} mips/t-st\"\n \t\t\t;;\n+\t\tmipsisa64r2*-*-linux*)\n+\t\t\ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=65\"\n+\t\t\t;;\n \tesac\n \tgnu_ld=yes\n \tgas=yes"}, {"sha": "c4006c2f616d25e58cade03010029e76e8cda0e8", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2d6ca5081ba8fb31b5d03545f45cce12ac67b3f/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2d6ca5081ba8fb31b5d03545f45cce12ac67b3f/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=f2d6ca5081ba8fb31b5d03545f45cce12ac67b3f", "patch": "@@ -565,6 +565,8 @@ static const struct mips_cpu_info mips_cpu_info_table[] = {\n   { \"mips32\", PROCESSOR_4KC, 32, PTF_AVOID_BRANCHLIKELY },\n   { \"mips32r2\", PROCESSOR_M4K, 33, PTF_AVOID_BRANCHLIKELY },\n   { \"mips64\", PROCESSOR_5KC, 64, PTF_AVOID_BRANCHLIKELY },\n+  /* ??? For now just tune the generic MIPS64r2 for 5KC as well.   */\n+  { \"mips64r2\", PROCESSOR_5KC, 65, PTF_AVOID_BRANCHLIKELY },\n \n   /* MIPS I processors.  */\n   { \"r3000\", PROCESSOR_R3000, 1, 0 },"}, {"sha": "f5fc2e642ef7bc659b9c75d8f41fce5e19226101", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 64, "deletions": 33, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2d6ca5081ba8fb31b5d03545f45cce12ac67b3f/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2d6ca5081ba8fb31b5d03545f45cce12ac67b3f/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=f2d6ca5081ba8fb31b5d03545f45cce12ac67b3f", "patch": "@@ -204,7 +204,7 @@ enum mips_code_readable_setting {\n \n /* Generate mips16 code */\n #define TARGET_MIPS16\t\t((target_flags & MASK_MIPS16) != 0)\n-/* Generate mips16e code. Default 16bit ASE for mips32/mips32r2/mips64 */\n+/* Generate mips16e code. Default 16bit ASE for mips32* and mips64* */\n #define GENERATE_MIPS16E\t(TARGET_MIPS16 && mips_isa >= 32)\n /* Generate mips16e register save/restore sequences.  */\n #define GENERATE_MIPS16E_SAVE_RESTORE (GENERATE_MIPS16E && mips_abi == ABI_32)\n@@ -227,8 +227,12 @@ enum mips_code_readable_setting {\n #define ISA_MIPS32\t\t    (mips_isa == 32)\n #define ISA_MIPS32R2\t\t    (mips_isa == 33)\n #define ISA_MIPS64                  (mips_isa == 64)\n+#define ISA_MIPS64R2\t\t    (mips_isa == 65)\n \n /* Architecture target defines.  */\n+#define TARGET_LOONGSON_2E          (mips_arch == PROCESSOR_LOONGSON_2E)\n+#define TARGET_LOONGSON_2F          (mips_arch == PROCESSOR_LOONGSON_2F)\n+#define TARGET_LOONGSON_2EF         (TARGET_LOONGSON_2E || TARGET_LOONGSON_2F)\n #define TARGET_MIPS3900             (mips_arch == PROCESSOR_R3900)\n #define TARGET_MIPS4000             (mips_arch == PROCESSOR_R4000)\n #define TARGET_MIPS4120             (mips_arch == PROCESSOR_R4120)\n@@ -240,11 +244,18 @@ enum mips_code_readable_setting {\n #define TARGET_SB1                  (mips_arch == PROCESSOR_SB1\t\t\\\n \t\t\t\t     || mips_arch == PROCESSOR_SB1A)\n #define TARGET_SR71K                (mips_arch == PROCESSOR_SR71000)\n-#define TARGET_LOONGSON_2E          (mips_arch == PROCESSOR_LOONGSON_2E)\n-#define TARGET_LOONGSON_2F          (mips_arch == PROCESSOR_LOONGSON_2F)\n-#define TARGET_LOONGSON_2EF         (TARGET_LOONGSON_2E || TARGET_LOONGSON_2F)\n \n /* Scheduling target defines.  */\n+#define TUNE_20KC\t\t    (mips_tune == PROCESSOR_20KC)\n+#define TUNE_24K\t\t    (mips_tune == PROCESSOR_24KC\t\\\n+\t\t\t\t     || mips_tune == PROCESSOR_24KF2_1\t\\\n+\t\t\t\t     || mips_tune == PROCESSOR_24KF1_1)\n+#define TUNE_74K                    (mips_tune == PROCESSOR_74KC\t\\\n+\t\t\t\t     || mips_tune == PROCESSOR_74KF2_1\t\\\n+\t\t\t\t     || mips_tune == PROCESSOR_74KF1_1  \\\n+\t\t\t\t     || mips_tune == PROCESSOR_74KF3_2)\n+#define TUNE_LOONGSON_2EF           (mips_tune == PROCESSOR_LOONGSON_2E\t\\\n+\t\t\t\t     || mips_tune == PROCESSOR_LOONGSON_2F)\n #define TUNE_MIPS3000               (mips_tune == PROCESSOR_R3000)\n #define TUNE_MIPS3900               (mips_tune == PROCESSOR_R3900)\n #define TUNE_MIPS4000               (mips_tune == PROCESSOR_R4000)\n@@ -258,16 +269,6 @@ enum mips_code_readable_setting {\n #define TUNE_MIPS9000               (mips_tune == PROCESSOR_R9000)\n #define TUNE_SB1                    (mips_tune == PROCESSOR_SB1\t\t\\\n \t\t\t\t     || mips_tune == PROCESSOR_SB1A)\n-#define TUNE_24K\t\t    (mips_tune == PROCESSOR_24KC\t\\\n-\t\t\t\t     || mips_tune == PROCESSOR_24KF2_1\t\\\n-\t\t\t\t     || mips_tune == PROCESSOR_24KF1_1)\n-#define TUNE_74K                    (mips_tune == PROCESSOR_74KC\t\\\n-\t\t\t\t     || mips_tune == PROCESSOR_74KF2_1\t\\\n-\t\t\t\t     || mips_tune == PROCESSOR_74KF1_1  \\\n-\t\t\t\t     || mips_tune == PROCESSOR_74KF3_2)\n-#define TUNE_20KC\t\t    (mips_tune == PROCESSOR_20KC)\n-#define TUNE_LOONGSON_2EF           (mips_tune == PROCESSOR_LOONGSON_2E\t\\\n-\t\t\t\t     || mips_tune == PROCESSOR_LOONGSON_2F)\n \n /* Whether vector modes and intrinsics for ST Microelectronics\n    Loongson-2E/2F processors should be enabled.  In o32 pairs of\n@@ -451,6 +452,12 @@ enum mips_code_readable_setting {\n \t  builtin_define (\"__mips=64\");\t\t\t\t\t\\\n \t  builtin_define (\"__mips_isa_rev=1\");\t\t\t\t\\\n \t  builtin_define (\"_MIPS_ISA=_MIPS_ISA_MIPS64\");\t\t\\\n+\t}\t\t\t\t\t\t\t\t\\\n+      else if (ISA_MIPS64R2)\t\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\t\\\n+\t  builtin_define (\"__mips=64\");\t\t\t\t\t\\\n+\t  builtin_define (\"__mips_isa_rev=2\");\t\t\t\t\\\n+\t  builtin_define (\"_MIPS_ISA=_MIPS_ISA_MIPS64\");\t\t\\\n \t}\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n       switch (mips_abi)\t\t\t\t\t\t\t\\\n@@ -619,7 +626,11 @@ enum mips_code_readable_setting {\n #              if MIPS_ISA_DEFAULT == 64\n #                define MULTILIB_ISA_DEFAULT \"mips64\"\n #              else\n-#                define MULTILIB_ISA_DEFAULT \"mips1\"\n+#\t\t if MIPS_ISA_DEFAULT == 65\n+#\t\t   define MULTILIB_ISA_DEFAULT \"mips64r2\"\n+#\t         else\n+#                  define MULTILIB_ISA_DEFAULT \"mips1\"\n+#\t\t endif\n #              endif\n #            endif\n #          endif\n@@ -670,6 +681,7 @@ enum mips_code_readable_setting {\n      %{march=mips32r2|march=m4k|march=4ke*|march=4ksd|march=24k* \\\n        |march=34k*|march=74k*: -mips32r2} \\\n      %{march=mips64|march=5k*|march=20k*|march=sb1*|march=sr71000: -mips64} \\\n+     %{march=mips64r2: -mips64r2} \\\n      %{!march=*: -\" MULTILIB_ISA_DEFAULT \"}}\"\n \n /* A spec that infers a -mhard-float or -msoft-float setting from an\n@@ -726,7 +738,8 @@ enum mips_code_readable_setting {\n /* ISA has instructions for managing 64-bit fp and gp regs (e.g. mips3).  */\n #define ISA_HAS_64BIT_REGS\t(ISA_MIPS3\t\t\t\t\\\n \t\t\t\t || ISA_MIPS4\t\t\t\t\\\n-\t\t\t\t || ISA_MIPS64)\n+\t\t\t\t || ISA_MIPS64\t\t\t\t\\\n+\t\t\t\t || ISA_MIPS64R2)\n \n /* ISA has branch likely instructions (e.g. mips2).  */\n /* Disable branchlikely for tx39 until compare rewrite.  They haven't\n@@ -742,15 +755,17 @@ enum mips_code_readable_setting {\n \t\t\t\t  || TARGET_MAD\t\t\t\t\\\n \t\t\t\t  || ISA_MIPS32\t\t\t\t\\\n \t\t\t\t  || ISA_MIPS32R2\t\t\t\\\n-\t\t\t\t  || ISA_MIPS64)\t\t\t\\\n+\t\t\t\t  || ISA_MIPS64\t\t\t\t\\\n+\t\t\t\t  || ISA_MIPS64R2)\t\t\t\\\n \t\t\t\t && !TARGET_MIPS16)\n \n /* ISA has the floating-point conditional move instructions introduced\n    in mips4.  */\n #define ISA_HAS_FP_CONDMOVE\t((ISA_MIPS4\t\t\t\t\\\n \t\t\t\t  || ISA_MIPS32\t\t\t\t\\\n \t\t\t\t  || ISA_MIPS32R2\t\t\t\\\n-\t\t\t\t  || ISA_MIPS64)\t\t\t\\\n+\t\t\t\t  || ISA_MIPS64\t\t\t\t\\\n+\t\t\t\t  || ISA_MIPS64R2)\t\t\t\\\n \t\t\t\t && !TARGET_MIPS5500\t\t\t\\\n \t\t\t\t && !TARGET_MIPS16)\n \n@@ -766,18 +781,20 @@ enum mips_code_readable_setting {\n #define ISA_HAS_8CC\t\t(ISA_MIPS4\t\t\t\t\\\n \t\t\t\t || ISA_MIPS32\t\t\t\t\\\n \t\t\t\t || ISA_MIPS32R2\t\t\t\\\n-\t\t\t\t || ISA_MIPS64)\n+\t\t\t\t || ISA_MIPS64\t\t\t\t\\\n+\t\t\t\t || ISA_MIPS64R2)\n \n /* This is a catch all for other mips4 instructions: indexed load, the\n    FP madd and msub instructions, and the FP recip and recip sqrt\n    instructions.  */\n #define ISA_HAS_FP4\t\t((ISA_MIPS4\t\t\t\t\\\n \t\t\t\t  || (ISA_MIPS32R2 && TARGET_FLOAT64)   \\\n-\t\t\t\t  || ISA_MIPS64)\t\t\t\\\n+\t\t\t\t  || ISA_MIPS64\t\t\t\t\\\n+\t\t\t\t  || ISA_MIPS64R2)\t\t\t\\\n \t\t\t\t && !TARGET_MIPS16)\n \n /* ISA has paired-single instructions.  */\n-#define ISA_HAS_PAIRED_SINGLE\t(ISA_MIPS32R2 || ISA_MIPS64)\n+#define ISA_HAS_PAIRED_SINGLE\t(ISA_MIPS32R2 || ISA_MIPS64 || ISA_MIPS64R2)\n \n /* ISA has conditional trap instructions.  */\n #define ISA_HAS_COND_TRAP\t(!ISA_MIPS1\t\t\t\t\\\n@@ -786,7 +803,8 @@ enum mips_code_readable_setting {\n /* ISA has integer multiply-accumulate instructions, madd and msub.  */\n #define ISA_HAS_MADD_MSUB\t((ISA_MIPS32\t\t\t\t\\\n \t\t\t\t  || ISA_MIPS32R2\t\t\t\\\n-\t\t\t\t  || ISA_MIPS64)\t\t\t\\\n+\t\t\t\t  || ISA_MIPS64\t\t\t\t\\\n+\t\t\t\t  || ISA_MIPS64R2)\t\t\t\\\n \t\t\t\t && !TARGET_MIPS16)\n \n /* Integer multiply-accumulate instructions should be generated.  */\n@@ -803,7 +821,8 @@ enum mips_code_readable_setting {\n #define ISA_HAS_NMADD4_NMSUB4(MODE)\t\t\t\t\t\\\n \t\t\t\t((ISA_MIPS4\t\t\t\t\\\n \t\t\t\t  || (ISA_MIPS32R2 && (MODE) == V2SFmode) \\\n-\t\t\t\t  || ISA_MIPS64)\t\t\t\\\n+\t\t\t\t  || ISA_MIPS64\t\t\t\t\\\n+\t\t\t\t  || ISA_MIPS64R2)\t\t\t\\\n \t\t\t\t && (!TARGET_MIPS5400 || TARGET_MAD)\t\\\n \t\t\t\t && !TARGET_MIPS16)\n \n@@ -815,7 +834,8 @@ enum mips_code_readable_setting {\n /* ISA has count leading zeroes/ones instruction (not implemented).  */\n #define ISA_HAS_CLZ_CLO\t\t((ISA_MIPS32\t\t\t\t\\\n \t\t\t\t  || ISA_MIPS32R2\t\t\t\\\n-\t\t\t\t  || ISA_MIPS64)\t\t\t\\\n+\t\t\t\t  || ISA_MIPS64\t\t\t\t\\\n+\t\t\t\t  || ISA_MIPS64R2)\t\t\t\\\n \t\t\t\t && !TARGET_MIPS16)\n \n /* ISA has three operand multiply instructions that put\n@@ -855,6 +875,7 @@ enum mips_code_readable_setting {\n \n /* ISA has the \"ror\" (rotate right) instructions.  */\n #define ISA_HAS_ROR\t\t((ISA_MIPS32R2\t\t\t\t\\\n+\t\t\t\t  || ISA_MIPS64R2\t\t\t\\\n \t\t\t\t  || TARGET_MIPS5400\t\t\t\\\n \t\t\t\t  || TARGET_MIPS5500\t\t\t\\\n \t\t\t\t  || TARGET_SR71K\t\t\t\\\n@@ -865,7 +886,8 @@ enum mips_code_readable_setting {\n #define ISA_HAS_PREFETCH\t((ISA_MIPS4\t\t\t\t\\\n \t\t\t\t  || ISA_MIPS32\t\t\t\t\\\n \t\t\t\t  || ISA_MIPS32R2\t\t\t\\\n-\t\t\t\t  || ISA_MIPS64)\t\t\t\\\n+\t\t\t\t  || ISA_MIPS64\t\t\t\t\\\n+\t\t\t\t  || ISA_MIPS64R2)\t\t\t\\\n \t\t\t\t && !TARGET_MIPS16)\n \n /* ISA has data indexed prefetch instructions.  This controls use of\n@@ -874,7 +896,8 @@ enum mips_code_readable_setting {\n    enabled.)  */\n #define ISA_HAS_PREFETCHX\t((ISA_MIPS4\t\t\t\t\\\n \t\t\t\t  || ISA_MIPS32R2\t\t\t\\\n-\t\t\t\t  || ISA_MIPS64)\t\t\t\\\n+\t\t\t\t  || ISA_MIPS64\t\t\t\t\\\n+\t\t\t\t  || ISA_MIPS64R2)\t\t\t\\\n \t\t\t\t && !TARGET_MIPS16)\n \n /* True if trunc.w.s and trunc.w.d are real (not synthetic)\n@@ -883,15 +906,19 @@ enum mips_code_readable_setting {\n #define ISA_HAS_TRUNC_W\t\t(!ISA_MIPS1)\n \n /* ISA includes the MIPS32r2 seb and seh instructions.  */\n-#define ISA_HAS_SEB_SEH\t\t(ISA_MIPS32R2\t\t\t\t\\\n+#define ISA_HAS_SEB_SEH\t\t((ISA_MIPS32R2\t\t\\\n+\t\t\t\t  || ISA_MIPS64R2)\t\\\n \t\t\t\t && !TARGET_MIPS16)\n \n /* ISA includes the MIPS32/64 rev 2 ext and ins instructions.  */\n-#define ISA_HAS_EXT_INS\t\t(ISA_MIPS32R2\t\t\t\t\\\n+#define ISA_HAS_EXT_INS\t\t((ISA_MIPS32R2\t\t\\\n+\t\t\t\t  || ISA_MIPS64R2)\t\\\n \t\t\t\t && !TARGET_MIPS16)\n \n /* ISA has instructions for accessing top part of 64-bit fp regs.  */\n-#define ISA_HAS_MXHC1\t\t(TARGET_FLOAT64 && ISA_MIPS32R2)\n+#define ISA_HAS_MXHC1\t\t(TARGET_FLOAT64\t\t\\\n+\t\t\t\t && (ISA_MIPS32R2\t\\\n+\t\t\t\t     || ISA_MIPS64R2))\n \n /* ISA has lwxs instruction (load w/scaled index address.  */\n #define ISA_HAS_LWXS\t\t(TARGET_SMARTMIPS && !TARGET_MIPS16)\n@@ -932,11 +959,14 @@ enum mips_code_readable_setting {\n #define ISA_HAS_HILO_INTERLOCKS\t(ISA_MIPS32\t\t\t\t\\\n \t\t\t\t || ISA_MIPS32R2\t\t\t\\\n \t\t\t\t || ISA_MIPS64\t\t\t\t\\\n+\t\t\t\t || ISA_MIPS64R2\t\t\t\\\n \t\t\t\t || TARGET_MIPS5500\t\t\t\\\n \t\t\t\t || TARGET_LOONGSON_2EF)\n \n /* ISA includes synci, jr.hb and jalr.hb.  */\n-#define ISA_HAS_SYNCI (ISA_MIPS32R2 && !TARGET_MIPS16)\n+#define ISA_HAS_SYNCI ((ISA_MIPS32R2\t\t\\\n+\t\t\t|| ISA_MIPS64R2)\t\\\n+\t\t       && !TARGET_MIPS16)\n \n /* ISA includes sync.  */\n #define ISA_HAS_SYNC ((mips_isa >= 2 || TARGET_MIPS3900) && !TARGET_MIPS16)\n@@ -1033,7 +1063,7 @@ enum mips_code_readable_setting {\n #undef ASM_SPEC\n #define ASM_SPEC \"\\\n %{G*} %(endian_spec) %{mips1} %{mips2} %{mips3} %{mips4} \\\n-%{mips32} %{mips32r2} %{mips64} \\\n+%{mips32*} %{mips64*} \\\n %{mips16} %{mno-mips16:-no-mips16} \\\n %{mips3d} %{mno-mips3d:-no-mips3d} \\\n %{mdmx} %{mno-mdmx:-no-mdmx} \\\n@@ -1059,7 +1089,7 @@ enum mips_code_readable_setting {\n #ifndef LINK_SPEC\n #define LINK_SPEC \"\\\n %(endian_spec) \\\n-%{G*} %{mips1} %{mips2} %{mips3} %{mips4} %{mips32} %{mips32r2} %{mips64} \\\n+%{G*} %{mips1} %{mips2} %{mips3} %{mips4} %{mips32*} %{mips64*} \\\n %{bestGnum} %{shared} %{non_shared}\"\n #endif  /* LINK_SPEC defined */\n \n@@ -1214,7 +1244,8 @@ enum mips_code_readable_setting {\n /* The number of consecutive floating-point registers needed to store the\n    smallest format supported by the FPU.  */\n #define MIN_FPRS_PER_FMT \\\n-  (ISA_MIPS32 || ISA_MIPS32R2 || ISA_MIPS64 ? 1 : MAX_FPRS_PER_FMT) \n+  (ISA_MIPS32 || ISA_MIPS32R2 || ISA_MIPS64 || ISA_MIPS64R2 \\\n+   ? 1 : MAX_FPRS_PER_FMT)\n \n /* The largest size of value that can be held in floating-point\n    registers and moved with a single instruction.  */"}, {"sha": "c2495b32aec070d17b1628baeb4b84cc7948bfcc", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2d6ca5081ba8fb31b5d03545f45cce12ac67b3f/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2d6ca5081ba8fb31b5d03545f45cce12ac67b3f/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=f2d6ca5081ba8fb31b5d03545f45cce12ac67b3f", "patch": "@@ -629,7 +629,8 @@ Objective-C and Objective-C++ Dialects}.\n \n @emph{MIPS Options}\n @gccoptlist{-EL  -EB  -march=@var{arch}  -mtune=@var{arch} @gol\n--mips1  -mips2  -mips3  -mips4  -mips32  -mips32r2  -mips64 @gol\n+-mips1  -mips2  -mips3  -mips4  -mips32  -mips32r2 @gol\n+-mips64  -mips64r2 @gol\n -mips16  -mno-mips16  -mflip-mips16 @gol\n -minterlink-mips16  -mno-interlink-mips16 @gol\n -mabi=@var{abi}  -mabicalls  -mno-abicalls @gol\n@@ -11963,7 +11964,7 @@ Generate code that will run on @var{arch}, which can be the name of a\n generic MIPS ISA, or the name of a particular processor.\n The ISA names are:\n @samp{mips1}, @samp{mips2}, @samp{mips3}, @samp{mips4},\n-@samp{mips32}, @samp{mips32r2}, and @samp{mips64}.\n+@samp{mips32}, @samp{mips32r2}, @samp{mips64} and @samp{mips64r2}.\n The processor names are:\n @samp{4kc}, @samp{4km}, @samp{4kp}, @samp{4ksc},\n @samp{4kec}, @samp{4kem}, @samp{4kep}, @samp{4ksd},\n@@ -12065,6 +12066,10 @@ Equivalent to @samp{-march=mips32r2}.\n @opindex mips64\n Equivalent to @samp{-march=mips64}.\n \n+@item -mips64r2\n+@opindex mips64r2\n+Equivalent to @samp{-march=mips64r2}.\n+\n @item -mips16\n @itemx -mno-mips16\n @opindex mips16"}, {"sha": "6f9210d833660a3a1e5d497142e3b498942247c2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2d6ca5081ba8fb31b5d03545f45cce12ac67b3f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2d6ca5081ba8fb31b5d03545f45cce12ac67b3f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f2d6ca5081ba8fb31b5d03545f45cce12ac67b3f", "patch": "@@ -1,3 +1,7 @@\n+2008-07-31  Adam Nemet  <anemet@caviumnetworks.com>\n+\n+\t* gcc.target/mips/ext-1.c: New test.\n+\n 2008-07-31  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/discr10.ad[sb]: New test."}, {"sha": "1cd111d5e33f3257f94c4b6b77af8d11313509bd", "filename": "gcc/testsuite/gcc.target/mips/ext-1.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2d6ca5081ba8fb31b5d03545f45cce12ac67b3f/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fext-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2d6ca5081ba8fb31b5d03545f45cce12ac67b3f/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fext-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fext-1.c?ref=f2d6ca5081ba8fb31b5d03545f45cce12ac67b3f", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-mips-options \"-O -mips64r2\" } */\n+/* { dg-final { scan-assembler \"\\tdext\\t\" } } */\n+/* { dg-final { scan-assembler-not \"and\" } } */\n+\n+struct\n+{\n+  unsigned long long a:9;\n+  unsigned long long d:35;\n+  unsigned long long e:10;\n+  unsigned long long f:10;\n+} t;\n+\n+NOMIPS16 unsigned long long\n+f (void)\n+{\n+   return t.d;\n+}"}]}