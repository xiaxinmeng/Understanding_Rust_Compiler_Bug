{"sha": "c76b1db623ae94949458510830ef89d0cd0dd158", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzc2YjFkYjYyM2FlOTQ5NDk0NTg1MTA4MzBlZjg5ZDBjZDBkZDE1OA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2012-11-10T18:54:58Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2012-11-10T18:54:58Z"}, "message": "Compile pr55247.c with -mno-sse -mno-mmx\n\n\t* gcc.target/i386/pr55247.c: Require maybe_x32 target.  Add\n\t-mno-sse -mno-mmx to dg-options.  Reformat.\n\nFrom-SVN: r193394", "tree": {"sha": "1ea83be8c2f92549b86f23cbdc3d08a335e48aed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ea83be8c2f92549b86f23cbdc3d08a335e48aed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c76b1db623ae94949458510830ef89d0cd0dd158", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c76b1db623ae94949458510830ef89d0cd0dd158", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c76b1db623ae94949458510830ef89d0cd0dd158", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c76b1db623ae94949458510830ef89d0cd0dd158/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "01a88d3557518085b013f14551f641a7dbddf25c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01a88d3557518085b013f14551f641a7dbddf25c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01a88d3557518085b013f14551f641a7dbddf25c"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "c472765f130777447df5abf44234c1bf5f3b8b31", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c76b1db623ae94949458510830ef89d0cd0dd158/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c76b1db623ae94949458510830ef89d0cd0dd158/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c76b1db623ae94949458510830ef89d0cd0dd158", "patch": "@@ -1,3 +1,8 @@\n+2012-11-10  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* gcc.target/i386/pr55247.c: Require maybe_x32 target.  Add\n+\t-mno-sse -mno-mmx to dg-options.  Reformat.\n+\n 2012-11-10  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* c-c++-common/scal-to-vec2.c: Ignore non-standard ABI message."}, {"sha": "6259ea4f7d09f3e4ffd05138412f20808e72ad8f", "filename": "gcc/testsuite/gcc.target/i386/pr55247.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c76b1db623ae94949458510830ef89d0cd0dd158/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr55247.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c76b1db623ae94949458510830ef89d0cd0dd158/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr55247.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr55247.c?ref=c76b1db623ae94949458510830ef89d0cd0dd158", "patch": "@@ -1,8 +1,8 @@\n /* { dg-do compile { target { ! { ia32 } } } } */\n-/* { dg-options \"-O2 -mx32 -maddress-mode=long -mno-sse\" } */\n+/* { dg-require-effective-target maybe_x32 } */\n+/* { dg-options \"-O2 -mno-sse -mno-mmx -mx32 -maddress-mode=long\" } */\n \n typedef unsigned int uint32_t;\n-typedef unsigned int uintptr_t;\n typedef uint32_t Elf32_Word;\n typedef uint32_t Elf32_Addr;\n typedef struct {\n@@ -16,23 +16,20 @@ typedef struct {\n }\n Elf32_Rela;\n typedef struct {\n-  union     {\n+  union {\n     Elf32_Addr d_ptr;\n   }\n   d_un;\n } Elf32_Dyn;\n struct link_map   {\n   Elf32_Dyn *l_info[34];\n };\n-typedef struct link_map *lookup_t;\n extern void symbind32 (Elf32_Sym *);\n void\n _dl_profile_fixup (struct link_map *l, Elf32_Word reloc_arg)\n {\n-  const Elf32_Sym *const symtab  = (const void *) (l)->l_info[6]->d_un.d_ptr;\n-  const Elf32_Rela *const reloc  = (const void *) ((l)->l_info[23]->d_un.d_ptr + reloc_arg * sizeof (Elf32_Rela));\n-  const Elf32_Sym *refsym = &symtab[((reloc->r_info) >> 8)];\n-  const Elf32_Sym *defsym = refsym;\n-  Elf32_Sym sym = *defsym;\n+  const Elf32_Sym *const symtab  = (const void *) l->l_info[6]->d_un.d_ptr;\n+  const Elf32_Rela *const reloc  = (const void *) (l->l_info[23]->d_un.d_ptr + reloc_arg * sizeof (Elf32_Rela));\n+  Elf32_Sym sym = symtab[(reloc->r_info) >> 8];\n   symbind32 (&sym);\n }"}]}