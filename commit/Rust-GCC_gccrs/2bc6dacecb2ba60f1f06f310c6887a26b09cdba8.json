{"sha": "2bc6dacecb2ba60f1f06f310c6887a26b09cdba8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJjNmRhY2VjYjJiYTYwZjFmMDZmMzEwYzY4ODdhMjZiMDljZGJhOA==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-05-26T00:16:41Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-05-26T00:16:41Z"}, "message": "Daily bump.", "tree": {"sha": "8647de62827b198bad5b0adb21f7bab1fc3a1c2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8647de62827b198bad5b0adb21f7bab1fc3a1c2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2bc6dacecb2ba60f1f06f310c6887a26b09cdba8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bc6dacecb2ba60f1f06f310c6887a26b09cdba8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bc6dacecb2ba60f1f06f310c6887a26b09cdba8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bc6dacecb2ba60f1f06f310c6887a26b09cdba8/comments", "author": null, "committer": null, "parents": [{"sha": "a6e94287d31525b3ad0963ad22a92e9f3dbcd3cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6e94287d31525b3ad0963ad22a92e9f3dbcd3cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6e94287d31525b3ad0963ad22a92e9f3dbcd3cf"}], "stats": {"total": 429, "additions": 428, "deletions": 1}, "files": [{"sha": "c0228cba26e155981092861a8155226d01e9bc22", "filename": "c++tools/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bc6dacecb2ba60f1f06f310c6887a26b09cdba8/c%2B%2Btools%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bc6dacecb2ba60f1f06f310c6887a26b09cdba8/c%2B%2Btools%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2FChangeLog?ref=2bc6dacecb2ba60f1f06f310c6887a26b09cdba8", "patch": "@@ -1,3 +1,22 @@\n+2021-05-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR bootstrap/100731\n+\t* server.cc: Include <cstdlib>.\n+\n+2021-05-25  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* configure.ac (--enable-maintainer-mode): Fix typo and weird syntax.\n+\t* configure: Regenerate.\n+\n+2021-05-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* Makefile.in: Update copyright year.\n+\t* configure.ac: Likewise.\n+\t* resolver.cc: Likewise.\n+\t* resolver.h: Likewise.\n+\t* server.cc: Likewise.\n+\t(print_version): Update copyright notice date.\n+\n 2021-05-10  Martin Liska  <mliska@suse.cz>\n \n \t* Makefile.in: Include also ../gcc folder."}, {"sha": "a07fc192f33d5cc7104933a4f1e97a14b419f5b9", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bc6dacecb2ba60f1f06f310c6887a26b09cdba8/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bc6dacecb2ba60f1f06f310c6887a26b09cdba8/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=2bc6dacecb2ba60f1f06f310c6887a26b09cdba8", "patch": "@@ -1,3 +1,7 @@\n+2021-05-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* update-copyright.py: Add c++tools.\n+\n 2021-05-24  Martin Liska  <mliska@suse.cz>\n \n \t* gcc-changelog/git_commit.py: Add note that ChangeLog entries"}, {"sha": "897c70440c9d9a276fa2a4baec2b84427799a4da", "filename": "gcc/ChangeLog", "status": "modified", "additions": 294, "deletions": 0, "changes": 294, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bc6dacecb2ba60f1f06f310c6887a26b09cdba8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bc6dacecb2ba60f1f06f310c6887a26b09cdba8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2bc6dacecb2ba60f1f06f310c6887a26b09cdba8", "patch": "@@ -1,3 +1,297 @@\n+2021-05-25  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* gimple-range-gori.cc (class logical_stmt_cache): Delete\n+\t(logical_stmt_cache::logical_stmt_cache ): Delete.\n+\t(logical_stmt_cache::~logical_stmt_cache): Delete.\n+\t(logical_stmt_cache::cache_entry::dump): Delete.\n+\t(logical_stmt_cache::get_range): Delete.\n+\t(logical_stmt_cache::cached_name ): Delete.\n+\t(logical_stmt_cache::same_cached_name): Delete.\n+\t(logical_stmt_cache::cacheable_p): Delete.\n+\t(logical_stmt_cache::slot_diagnostics ): Delete.\n+\t(logical_stmt_cache::dump): Delete.\n+\t(gori_compute_cache::gori_compute_cache): Delete.\n+\t(gori_compute_cache::~gori_compute_cache): Delete.\n+\t(gori_compute_cache::compute_operand_range): Delete.\n+\t(gori_compute_cache::cache_stmt): Delete.\n+\t* gimple-range-gori.h (gori_compute::compute_operand_range): Remove\n+\tvirtual.\n+\t(class gori_compute_cache): Delete.\n+\n+2021-05-25  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* gimple-range.cc (fold_using_range::range_of_range_op): Use m_gori\n+\tintead of m_cache.\n+\t(fold_using_range::range_of_address): Adjust.\n+\t(fold_using_range::range_of_phi): Adjust.\n+\t* gimple-range.h (class fur_source): Adjust.\n+\t(fur_source::fur_source): Adjust.\n+\n+2021-05-25  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* gimple-range-gori.cc (gori_compute::expr_range_at_stmt): Rename\n+\tfrom expr_range_in_bb and adjust.\n+\t(gori_compute::compute_name_range_op): Adjust.\n+\t(gori_compute::optimize_logical_operands): Adjust.\n+\t(gori_compute::compute_logical_operands_in_chain): Adjust.\n+\t(gori_compute::compute_operand1_range): Adjust.\n+\t(gori_compute::compute_operand2_range): Adjust.\n+\t(ori_compute_cache::cache_stmt): Adjust.\n+\t* gimple-range-gori.h (gori_compute): Rename prototype.\n+\n+2021-05-25  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* gimple-range.cc (gimple_ranger::range_of_expr): Non-null should be\n+\tchecked only after range_of_stmt, not range_on_entry.\n+\t(gimple_ranger::range_on_entry): Check for non-null in any\n+\tpredecessor block, if it is not already non-null.\n+\t(gimple_ranger::range_on_exit): DOnt check for non-null after\n+\trange on entry call.\n+\t(gimple_ranger::dump_bb): New.  Split from dump.\n+\t(gimple_ranger::dump): Adjust.\n+\t* gimple-range.h (class gimple_ranger): Adjust.\n+\n+2021-05-25  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* gimple-range-cache.cc (struct range_timestamp): Delete.\n+\t(class temporal_cache): Adjust.\n+\t(temporal_cache::get_timestamp): Delete.\n+\t(temporal_cache::set_dependency): Delete.\n+\t(temporal_cache::temporal_value): Adjust.\n+\t(temporal_cache::current_p): Take dependencies as params.\n+\t(temporal_cache::set_timestamp): Adjust.\n+\t(temporal_cache::set_always_current): Adjust.\n+\t(ranger_cache::get_non_stale_global_range): Adjust.\n+\t(ranger_cache::register_dependency): Delete.\n+\t* gimple-range-cache.h (class range_cache): Adjust.\n+\n+2021-05-25  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* gimple-range-gori.cc (range_def_chain::range_def_chain): init\n+\tbitmap obstack.\n+\t(range_def_chain::~range_def_chain): Dispose of obstack rather than\n+\teach individual bitmap.\n+\t(range_def_chain::set_import): New.\n+\t(range_def_chain::get_imports): New.\n+\t(range_def_chain::chain_import_p): New.\n+\t(range_def_chain::register_dependency): Rename from build_def_chain\n+\tand set imports.\n+\t(range_def_chain::def_chain_in_bitmap_p): New.\n+\t(range_def_chain::add_def_chain_to_bitmap): New.\n+\t(range_def_chain::has_def_chain): Just check first depenedence.\n+\t(range_def_chain::get_def_chain): Process imports, use generic\n+\tregister_dependency routine.\n+\t(range_def_chain::dump): New.\n+\t(gori_map::gori_map): Allocate import list.\n+\t(gori_map::~gori_map): Release imports.\n+\t(gori_map::exports): Check for past allocated block size.\n+\t(gori_map::imports): New.\n+\t(gori_map::def_chain_in_export_p): Delete.\n+\t(gori_map::is_import_p): New.\n+\t(gori_map::maybe_add_gori): Handle imports.\n+\t(gori_map::dump): Adjust output, add imports.\n+\t(gori_compute::has_edge_range_p): Remove def_chain_in_export call.\n+\t(gori_export_iterator::gori_export_iterator): New.\n+\t(gori_export_iterator::next): New.\n+\t(gori_export_iterator::get_name): New.\n+\t* gimple-range-gori.h (range_def_chain): Add imports and direct\n+\tdependecies via struct rdc.\n+\t(range_def_chain::depend1): New.\n+\t(range_def_chain::depend2): New.\n+\t(class gori_map): Adjust.\n+\t(FOR_EACH_GORI_IMPORT_NAME): New.\n+\t(FOR_EACH_GORI_EXPORT_NAME): New.\n+\t(class gori_export_iterator): New.\n+\n+2021-05-25  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* gimple-range-cache.cc (ranger_cache::ranger_cache):  Move initial\n+\texport cache filling to here.\n+\t* gimple-range-gori.cc (gori_compute::gori_compute) : From Here.\n+\n+2021-05-25  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* gimple-range-gori.cc (range_def_chain): Move to gimple-range-gori.h.\n+\t(gori_map): Move to gimple-range-gori.h.\n+\t(gori_compute::gori_compute): Adjust.\n+\t(gori_compute::~gori_compute): Delete.\n+\t(gori_compute::compute_operand_range_switch): Adjust.\n+\t(gori_compute::compute_operand_range): Adjust.\n+\t(gori_compute::compute_logical_operands): Adjust.\n+\t(gori_compute::has_edge_range_p ): Adjust.\n+\t(gori_compute::set_range_invariant): Delete.\n+\t(gori_compute::dump): Adjust.\n+\t(gori_compute::outgoing_edge_range_p): Adjust.\n+\t* gimple-range-gori.h (class range_def_chain): Relocate here.\n+\t(class gori_map): Relocate here.\n+\t(class gori_compute): Inherit from gori_map, and adjust.\n+\n+2021-05-25  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* value-range.cc (range_tests_legacy): Use\n+\tbuild_nonstandard_integer_type instead of int and short.\n+\n+2021-05-25  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gimplify.c (gimplify_decl_expr): Clear TREE_READONLY on the DECL\n+\twhen really creating an initialization statement for it.\n+\n+2021-05-25  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* tree-inline.c (setup_one_parameter): Fix thinko in new condition.\n+\n+2021-05-25  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\t* config/riscv/riscv.h (ASM_SPEC): Pass -mno-relax.\n+\n+2021-05-25  Martin Liska  <mliska@suse.cz>\n+\n+\tPR tree-optimization/92860\n+\tPR target/99592\n+\t* optc-save-gen.awk: Remove exceptions.\n+\n+2021-05-25  Martin Liska  <mliska@suse.cz>\n+\n+\t* asan.h (sanitize_coverage_p): New function.\n+\t* doc/extend.texi: Document it.\n+\t* fold-const.c (fold_range_test): Use sanitize_flags_p\n+\tinstead of flag_sanitize_coverage.\n+\t(fold_truth_andor): Likewise.\n+\t* sancov.c: Likewise.\n+\t* tree-ssa-ifcombine.c (ifcombine_ifandif): Likewise.\n+\t* ipa-inline.c (sanitize_attrs_match_for_inline_p): Handle\n+\t-fsanitize-coverage when inlining.\n+\n+2021-05-25  Cooper Qu  <cooper.qu@linux.alibaba.com>\n+\n+\t* config/csky/csky-modes.def : Fix copyright.\n+\n+2021-05-25  Cooper Qu  <cooper.qu@linux.alibaba.com>\n+\n+\t* config/csky/csky-modes.def : Amend copyright.\n+\t* config/csky/csky_insn_fpuv2.md : Likewise.\n+\t* config/csky/csky_insn_fpuv3.md : Likewise.\n+\n+2021-05-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/100727\n+\t* calls.c (initialize_argument_information): Explicitely test\n+\tfor WITH_SIZE_EXPR.\n+\t* gimple-expr.c (mark_addressable): Skip outer WITH_SIZE_EXPR.\n+\n+2021-05-25  Geng Qi  <gengqi@linux.alibaba.com>\n+\n+\t* config/csky/csky.h (FRAME_POINTER_REGNUM): Use\n+\tHARD_FRAME_POINTER_REGNUM and FRAME_POINTER_REGNUM instead of\n+\tthe signle definition. The signle definition may not work well\n+\tat simplify_subreg_regno().\n+\t(HARD_FRAME_POINTER_REGNUM): New.\n+\t(ELIMINABLE_REGS): Add for HARD_FRAME_POINTER_REGNUM.\n+\t* config/csky/csky.c (get_csky_live_regs, csky_can_eliminate,\n+\tcsky_initial_elimination_offset, csky_expand_prologue,\n+\tcsky_expand_epilogue): Add for HARD_FRAME_POINTER_REGNUM.\n+\n+2021-05-25  Geng Qi  <gengqi@linux.alibaba.com>\n+\n+\t* config/csky/csky.c (csky_option_override):\n+\tInit csky_arch_isa_features[] in advance, so TARGET_DSP\n+\tand TARGET_DIV can be set well.\n+\n+2021-05-25  Geng Qi  <gengqi@linux.alibaba.com>\n+\n+\t* config/csky/constraints.md (\"l\", \"h\"): Delete.\n+\t* config/csky/csky.h (reg_class, REG_CLASS_NAMES,\n+\tREG_CLASS_CONTENTS):  Delete LO_REGS and HI_REGS.\n+\t* config/csky/csky.c (regno_reg_classm,\n+\tcsky_secondary_reload, csky_register_move_cost):\n+\tUse HILO_REGS instead of LO_REGS and HI_REGS.\n+\n+2021-05-25  Geng Qi  <gengqi@linux.alibaba.com>\n+\n+\t* config/csky/constraints.md (\"W\"): New constriant for mem operand\n+\twith base reg, index register.\n+\t(\"Q\"): Renamed and modified \"csky_valid_fpuv2_mem_operand\" to\n+\t\"csky_valid_mem_constraint_operand\" to deal with both \"Q\" and \"W\"\n+\tconstraint.\n+\t(\"Dv\"): New constraint for const double value that can be used at\n+\tfmovi instruction.\n+\t* config/csky/csky-modes.def (HFmode): New mode.\n+\t* config/csky/csky-protos.h (csky_valid_fpuv2_mem_operand): Rename\n+\tto \"csky_valid_mem_constraint_operand\" and support new constraint\n+\t\"W\".\n+\t(csky_get_movedouble_length): New.\n+\t(fpuv3_output_move): New.\n+\t(fpuv3_const_double): New.\n+\t* config/csky/csky.c (csky_option_override): New arch CK860 with fpv3.\n+\t(decompose_csky_address): Refine.\n+\t(csky_print_operand): New \"CONST_DOUBLE\" operand.\n+\t(csky_output_move): Support fpv3 instructions.\n+\t(csky_get_movedouble_length): New.\n+\t(fpuv3_output_move): New.\n+\t(fpuv3_const_double): New.\n+\t(csky_emit_compare): Cover float comparsion.\n+\t(csky_emit_compare_float): Refine.\n+\t(csky_vaild_fpuv2_mem_operand): Rename to\n+\t\"csky_valid_mem_constraint_operand\" and support new constraint \"W\".\n+\t(ck860_rtx_costs): New.\n+\t(csky_rtx_costs): Add the cost calculation of CK860.\n+\t(regno_reg_class): New vregs for fpuv3.\n+\t(csky_dbx_regno): Likewise.\n+\t(csky_cpu_cpp_builtins): New builtin macro for fpuv3.\n+\t(csky_conditional_register_usage): Suporrot fpuv3.\n+\t(csky_dwarf_register_span): Suporrot fpuv3.\n+\t(csky_init_builtins, csky_mangle_type): Support \"__fp16\" type.\n+\t(ck810_legitimate_index_p): Support fp16.\n+\t* config/csky/csky.h (TARGET_TLS): ADD CK860.\n+\t(CSKY_VREG_P, CSKY_VREG_LO_P, CSKY_VREG_HI_P): Support fpuv3.\n+\t(TARGET_SINGLE_FPU): Support fpuv3.\n+\t(TARGET_SUPPORT_FPV3): New.\n+\t(FIRST_PSEUDO_REGISTER): Change to 202 to hold the new fpuv3 registers.\n+\t(FIXED_REGISTERS, CALL_REALLY_USED_REGISTERS, REGISTER_NAMES,\n+\t REG_CLASS_CONTENTS): Support fpuv3.\n+\t* config/csky/csky.md (movsf): Move to cksy_insn_fpu.md and refine.\n+\t(csky_movsf_fpv2): Likewise.\n+\t(ck801_movsf): Likewise.\n+\t(csky_movsf): Likewise.\n+\t(movdf): Likewise.\n+\t(csky_movdf_fpv2): Likewise.\n+\t(ck801_movdf): Likewise.\n+\t(csky_movdf): Likewise.\n+\t(movsicc): Refine. Use \"comparison_operatior\" instead of\n+\t\"ordered_comparison_operatior\".\n+\t(addsicc): Likewise.\n+\t(CSKY_FIRST_VFP3_REGNUM, CSKY_LAST_VFP3_REGNUM): New constant.\n+\t(call_value_internal_vh): New.\n+\t* config/csky/csky_cores.def (CK860): New arch and cpu.\n+\t(fpv3_hf): New.\n+\t(fpv3_hsf): New.\n+\t(fpv3_sdf): New.\n+\t(fpv3): New.\n+\t* config/csky/csky_insn_fpu.md: Refactor. Separate all float patterns\n+\tinto emit-patterns and match-patterns, remain the emit-patterns here,\n+\tand move the match-patterns to csky_insn_fpuv2.md or\n+\tcsky_insn_fpuv3.md.\n+\t* config/csky/csky_insn_fpuv2.md: New file for fpuv2 instructions.\n+\t* config/csky/csky_insn_fpuv3.md: New file and new patterns for fpuv3\n+\tisntructions.\n+\t* config/csky/csky_isa.def (fcr): New.\n+\t(fpv3_hi): New.\n+\t(fpv3_hf): New.\n+\t(fpv3_sf): New.\n+\t(fpv3_df): New.\n+\t(CK860): New definition for ck860.\n+\t* config/csky/csky_tables.opt (ck860): New processors ck860,\n+\tck860f. And new arch ck860.\n+\t(fpv3_hf): New.\n+\t(fpv3_hsf): New.\n+\t(fpv3_hdf): New.\n+\t(fpv3): New.\n+\t* config/csky/predicates.md (csky_float_comparsion_operator): Delete\n+\t\"geu\", \"gtu\", \"leu\", \"ltu\", which will never appear at float comparison.\n+\t* config/csky/t-csky-elf: Support 860.\n+\t* config/csky/t-csky-linux: Likewise.\n+\t* doc/md.texi: Add \"Q\" and \"W\" constraints for C-SKY.\n+\n 2021-05-24  Aaron Sawdey  <acsawdey@linux.ibm.com>\n \n \t* config/rs6000/genfusion.pl (gen_logical_addsubf): Refactor to"}, {"sha": "f3c7e4f1551912c4684a3eb37126a1f66176b634", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bc6dacecb2ba60f1f06f310c6887a26b09cdba8/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bc6dacecb2ba60f1f06f310c6887a26b09cdba8/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=2bc6dacecb2ba60f1f06f310c6887a26b09cdba8", "patch": "@@ -1 +1 @@\n-20210525\n+20210526"}, {"sha": "14a8c589867e0eabdba70af121135d66a473eb7c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bc6dacecb2ba60f1f06f310c6887a26b09cdba8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bc6dacecb2ba60f1f06f310c6887a26b09cdba8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2bc6dacecb2ba60f1f06f310c6887a26b09cdba8", "patch": "@@ -1,3 +1,7 @@\n+2021-05-25  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/share/conf.py: Fix Sphinx 4.0.x error.\n+\n 2021-05-21  Piotr Trojanek  <trojanek@adacore.com>\n \n \t* gcc-interface/trans.c (Raise_Error_to_gnu): Add an assertion."}, {"sha": "28544c752ed103fbf0623b7f12bb10c875ef22b5", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bc6dacecb2ba60f1f06f310c6887a26b09cdba8/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bc6dacecb2ba60f1f06f310c6887a26b09cdba8/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=2bc6dacecb2ba60f1f06f310c6887a26b09cdba8", "patch": "@@ -1,3 +1,23 @@\n+2021-05-25  Martin Liska  <mliska@suse.cz>\n+\n+\tPR tree-optimization/92860\n+\tPR target/99592\n+\t* c-attribs.c (handle_optimize_attribute): Save target node\n+\tbefore calling parse_optimize_options and save it in case\n+\tit changes.\n+\t* c-pragma.c (handle_pragma_target): Similarly for pragma.\n+\t(handle_pragma_pop_options): Likewise here.\n+\n+2021-05-25  Martin Liska  <mliska@suse.cz>\n+\n+\t* c-attribs.c (handle_no_sanitize_coverage_attribute): New.\n+\n+2021-05-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/99928\n+\t* c-omp.c (c_omp_split_clauses): Copy reduction to teams when teams is\n+\tcombined with simd and not with taskloop or for.\n+\n 2021-05-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/99928"}, {"sha": "1cbd043f0890bad776f6fb302cca95b739a64fb8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bc6dacecb2ba60f1f06f310c6887a26b09cdba8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bc6dacecb2ba60f1f06f310c6887a26b09cdba8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2bc6dacecb2ba60f1f06f310c6887a26b09cdba8", "patch": "@@ -1,3 +1,10 @@\n+2021-05-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/100666\n+\t* call.c (convert_arg_to_ellipsis): For expressions with NULLPTR_TYPE\n+\tand side-effects, temporarily disable -Wunused-result warning when\n+\tbuilding COMPOUND_EXPR.\n+\n 2021-05-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/99928"}, {"sha": "b30db1c55f54bac30b2e509f3f92843d9a791642", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bc6dacecb2ba60f1f06f310c6887a26b09cdba8/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bc6dacecb2ba60f1f06f310c6887a26b09cdba8/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2bc6dacecb2ba60f1f06f310c6887a26b09cdba8", "patch": "@@ -1,3 +1,9 @@\n+2021-05-25  Tobias Burnus  <tobias@codesourcery.com>\n+\t    Johannes Nendwich  <a08727063@unet.univie.ac.at>\n+\n+\t* intrinsic.texi (GERROR, GETARGS, GETLOG, NORM2, PARITY, RANDOM_INIT,\n+\tRANDOM_NUMBER): Fix typos and copy'n'paste errors.\n+\n 2021-05-24  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR fortran/86470"}, {"sha": "72d4f5879a6243f9a358e1fa69cfa233db119807", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bc6dacecb2ba60f1f06f310c6887a26b09cdba8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bc6dacecb2ba60f1f06f310c6887a26b09cdba8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2bc6dacecb2ba60f1f06f310c6887a26b09cdba8", "patch": "@@ -1,3 +1,65 @@\n+2021-05-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/100666\n+\t* g++.dg/cpp1z/nodiscard8.C: New test.\n+\t* g++.dg/cpp1z/nodiscard9.C: New test.\n+\n+2021-05-25  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc.dg/sancov/attribute.c: New test.\n+\n+2021-05-25  Cooper Qu  <cooper.qu@linux.alibaba.com>\n+\n+\t* gcc.target/csky/fpuv3/fpuv3.exp : Amend copyright.\n+\n+2021-05-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/99928\n+\t* c-c++-common/gomp/pr99928-8.c: Remove xfails from omp teams r21 and\n+\tr28 checks.\n+\t* c-c++-common/gomp/pr99928-9.c: Likewise.\n+\t* c-c++-common/gomp/pr99928-10.c: Likewise.\n+\n+2021-05-25  Geng Qi  <gengqi@linux.alibaba.com>\n+\n+\t* gcc.target/csky/fpuv3/fpuv3.exp: New.\n+\t* gcc.target/csky/fpuv3/fpv3_div.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_fadd.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_fdtos.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_fftoi_rm.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_fftoi_rz.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_fhtos.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_fitof.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_fmov.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_fmovi.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_fmula.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_fmuls.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_fneg.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_fnmula.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_fnmuls.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_fstod.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_fstoh.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_fsub.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_fxtof.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_h.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_hs.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_hsz.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_hz.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_ls.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_lsz.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_lt.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_ltz.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_max.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_min.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_mul.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_mula.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_muls.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_ne.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_nez.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_recip.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_sqrt.c: New.\n+\t* gcc.target/csky/fpuv3/fpv3_unordered.c: New.\n+\n 2021-05-24  Aaron Sawdey  <acsawdey@linux.ibm.com>\n \n \t* gcc.target/powerpc/fusion-p10-logadd.c: New file."}, {"sha": "accd3df13fff54953dbfd12b866f44f728d3ea9c", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bc6dacecb2ba60f1f06f310c6887a26b09cdba8/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bc6dacecb2ba60f1f06f310c6887a26b09cdba8/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=2bc6dacecb2ba60f1f06f310c6887a26b09cdba8", "patch": "@@ -1,3 +1,8 @@\n+2021-05-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/99928\n+\t* testsuite/libgomp.c-c++-common/reduction-17.c: New test.\n+\n 2021-05-24  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR fortran/86470"}, {"sha": "b027ed7272e50e0b483917448103c0c8ec738ca1", "filename": "liboffloadmic/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bc6dacecb2ba60f1f06f310c6887a26b09cdba8/liboffloadmic%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bc6dacecb2ba60f1f06f310c6887a26b09cdba8/liboffloadmic%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/liboffloadmic%2FChangeLog?ref=2bc6dacecb2ba60f1f06f310c6887a26b09cdba8", "patch": "@@ -1,3 +1,9 @@\n+2021-05-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR libgomp/100747\n+\t* configure: Make executable.\n+\t* plugin/configure: Likewise.\n+\n 2021-01-05  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n \n \t* configure: Re-generate."}]}