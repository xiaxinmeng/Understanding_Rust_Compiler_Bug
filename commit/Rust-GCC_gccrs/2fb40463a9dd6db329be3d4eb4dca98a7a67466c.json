{"sha": "2fb40463a9dd6db329be3d4eb4dca98a7a67466c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZiNDA0NjNhOWRkNmRiMzI5YmUzZDRlYjRkY2E5OGE3YTY3NDY2Yw==", "commit": {"author": {"name": "Will Schmidt", "email": "will_schmidt@vnet.ibm.com", "date": "2017-08-09T21:28:39Z"}, "committer": {"name": "Will Schmidt", "email": "willschm@gcc.gnu.org", "date": "2017-08-09T21:28:39Z"}, "message": "rs6000.c (rs6000_option_override_internal): Add blurb to indicate when early gimple folding has been disabled.\n\n[gcc]\n\n        2017-08-09  Will Schmidt  <will_schmidt@vnet.ibm.com>\n\n        * config/rs6000/rs6000.c (rs6000_option_override_internal): Add blurb\n        to indicate when early gimple folding has been disabled.\n        (rs6000_gimple_fold_builtin): Add debug content.\n        (rs6000_invalid_builtin): Fix whitespace.\n        (rs6000_expand_builtin): Fix whitespace.\n        * config/rs6000/rs6000.opt: Add option for -mfold-gimple.\n\nFrom-SVN: r251007", "tree": {"sha": "b2074b6b2d631962b9f47104a896ad6bec269a91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2074b6b2d631962b9f47104a896ad6bec269a91"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fb40463a9dd6db329be3d4eb4dca98a7a67466c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fb40463a9dd6db329be3d4eb4dca98a7a67466c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fb40463a9dd6db329be3d4eb4dca98a7a67466c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fb40463a9dd6db329be3d4eb4dca98a7a67466c/comments", "author": {"login": "willschm", "id": 44359, "node_id": "MDQ6VXNlcjQ0MzU5", "avatar_url": "https://avatars.githubusercontent.com/u/44359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willschm", "html_url": "https://github.com/willschm", "followers_url": "https://api.github.com/users/willschm/followers", "following_url": "https://api.github.com/users/willschm/following{/other_user}", "gists_url": "https://api.github.com/users/willschm/gists{/gist_id}", "starred_url": "https://api.github.com/users/willschm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willschm/subscriptions", "organizations_url": "https://api.github.com/users/willschm/orgs", "repos_url": "https://api.github.com/users/willschm/repos", "events_url": "https://api.github.com/users/willschm/events{/privacy}", "received_events_url": "https://api.github.com/users/willschm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "19eec7ac5f73e7fc9eee97438bd5cbdcd07072c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19eec7ac5f73e7fc9eee97438bd5cbdcd07072c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19eec7ac5f73e7fc9eee97438bd5cbdcd07072c2"}], "stats": {"total": 44, "additions": 39, "deletions": 5}, "files": [{"sha": "251b0f6ac03df761908b6341a258344204504cff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb40463a9dd6db329be3d4eb4dca98a7a67466c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb40463a9dd6db329be3d4eb4dca98a7a67466c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2fb40463a9dd6db329be3d4eb4dca98a7a67466c", "patch": "@@ -1,3 +1,12 @@\n+2017-08-09  Will Schmidt  <will_schmidt@vnet.ibm.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_option_override_internal): Add blurb\n+\tto indicate when early gimple folding has been disabled.\n+\t(rs6000_gimple_fold_builtin): Add debug content.\n+\t(rs6000_invalid_builtin): Fix whitespace.\n+\t(rs6000_expand_builtin): Fix whitespace.\n+\t* config/rs6000/rs6000.opt: Add option for -mfold-gimple.\n+\n 2017-08-09  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR target/80938"}, {"sha": "74158cdd07539398447e684dfb985a7c2770477e", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 26, "deletions": 5, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb40463a9dd6db329be3d4eb4dca98a7a67466c/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb40463a9dd6db329be3d4eb4dca98a7a67466c/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=2fb40463a9dd6db329be3d4eb4dca98a7a67466c", "patch": "@@ -4182,6 +4182,10 @@ rs6000_option_override_internal (bool global_init_p)\n       rs6000_altivec_element_order = 0;\n     }\n \n+  if (!rs6000_fold_gimple)\n+     fprintf (stderr,\n+\t      \"gimple folding of rs6000 builtins has been disabled.\\n\");\n+\n   /* Add some warnings for VSX.  */\n   if (TARGET_VSX)\n     {\n@@ -16054,7 +16058,7 @@ paired_expand_predicate_builtin (enum insn_code icode, tree exp, rtx target)\n static void\n rs6000_invalid_builtin (enum rs6000_builtins fncode)\n {\n-  size_t uns_fncode = (size_t)fncode;\n+  size_t uns_fncode = (size_t) fncode;\n   const char *name = rs6000_builtin_info[uns_fncode].name;\n   HOST_WIDE_INT fnmask = rs6000_builtin_info[uns_fncode].mask;\n \n@@ -16159,6 +16163,20 @@ rs6000_gimple_fold_builtin (gimple_stmt_iterator *gsi)\n     = (enum rs6000_builtins) DECL_FUNCTION_CODE (fndecl);\n   tree arg0, arg1, lhs;\n \n+  size_t uns_fncode = (size_t) fn_code;\n+  enum insn_code icode = rs6000_builtin_info[uns_fncode].icode;\n+  const char *fn_name1 = rs6000_builtin_info[uns_fncode].name;\n+  const char *fn_name2 = (icode != CODE_FOR_nothing)\n+\t\t\t  ? get_insn_name ((int) icode)\n+\t\t\t  : \"nothing\";\n+\n+  if (TARGET_DEBUG_BUILTIN)\n+      fprintf (stderr, \"rs6000_gimple_fold_builtin %d %s %s\\n\",\n+\t       fn_code, fn_name1, fn_name2);\n+\n+  if (!rs6000_fold_gimple)\n+    return false;\n+\n   /* Generic solution to prevent gimple folding of code without a LHS.  */\n   if (!gimple_call_lhs (stmt))\n     return false;\n@@ -16518,6 +16536,9 @@ rs6000_gimple_fold_builtin (gimple_stmt_iterator *gsi)\n \treturn true;\n       }\n     default:\n+\tif (TARGET_DEBUG_BUILTIN)\n+\t   fprintf (stderr, \"gimple builtin intrinsic not matched:%d %s %s\\n\",\n+\t\t    fn_code, fn_name1, fn_name2);\n       break;\n     }\n \n@@ -16550,9 +16571,9 @@ rs6000_expand_builtin (tree exp, rtx target, rtx subtarget ATTRIBUTE_UNUSED,\n     {\n       enum insn_code icode = rs6000_builtin_info[uns_fcode].icode;\n       const char *name1 = rs6000_builtin_info[uns_fcode].name;\n-      const char *name2 = ((icode != CODE_FOR_nothing)\n-\t\t\t   ? get_insn_name ((int)icode)\n-\t\t\t   : \"nothing\");\n+      const char *name2 = (icode != CODE_FOR_nothing)\n+\t\t\t   ? get_insn_name ((int) icode)\n+\t\t\t   : \"nothing\";\n       const char *name3;\n \n       switch (rs6000_builtin_info[uns_fcode].attr & RS6000_BTC_TYPE_MASK)\n@@ -16571,7 +16592,7 @@ rs6000_expand_builtin (tree exp, rtx target, rtx subtarget ATTRIBUTE_UNUSED,\n       fprintf (stderr,\n \t       \"rs6000_expand_builtin, %s (%d), insn = %s (%d), type=%s%s\\n\",\n \t       (name1) ? name1 : \"---\", fcode,\n-\t       (name2) ? name2 : \"---\", (int)icode,\n+\t       (name2) ? name2 : \"---\", (int) icode,\n \t       name3,\n \t       func_valid_p ? \"\" : \", not valid\");\n     }\t     "}, {"sha": "1ee84cb4dc5ab3290b14892319e00512bd3eea3d", "filename": "gcc/config/rs6000/rs6000.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb40463a9dd6db329be3d4eb4dca98a7a67466c/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb40463a9dd6db329be3d4eb4dca98a7a67466c/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.opt?ref=2fb40463a9dd6db329be3d4eb4dca98a7a67466c", "patch": "@@ -148,6 +148,10 @@ maltivec=be\n Target Report RejectNegative Var(rs6000_altivec_element_order, 2)\n Generate AltiVec instructions using big-endian element order.\n \n+mfold-gimple\n+Target Report Var(rs6000_fold_gimple) Init(1)\n+Enable early gimple folding of builtins.\n+\n mhard-dfp\n Target Report Mask(DFP) Var(rs6000_isa_flags)\n Use decimal floating point instructions."}]}