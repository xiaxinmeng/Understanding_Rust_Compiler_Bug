{"sha": "89cf554bda49808feef769fad6dd62fef6223bdf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODljZjU1NGJkYTQ5ODA4ZmVlZjc2OWZhZDZkZDYyZmVmNjIyM2JkZg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-02-12T17:47:31Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-02-12T17:47:31Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r309", "tree": {"sha": "cabe61b312f399456ece9dd212455dcf1bcc5b2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cabe61b312f399456ece9dd212455dcf1bcc5b2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89cf554bda49808feef769fad6dd62fef6223bdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89cf554bda49808feef769fad6dd62fef6223bdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89cf554bda49808feef769fad6dd62fef6223bdf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89cf554bda49808feef769fad6dd62fef6223bdf/comments", "author": null, "committer": null, "parents": [{"sha": "c5986054c2acb06abd63bcb10a859ea4bda2607f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5986054c2acb06abd63bcb10a859ea4bda2607f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5986054c2acb06abd63bcb10a859ea4bda2607f"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "ce693ed4c2d7597a16bda0266af2bcf93e54ec48", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89cf554bda49808feef769fad6dd62fef6223bdf/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89cf554bda49808feef769fad6dd62fef6223bdf/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=89cf554bda49808feef769fad6dd62fef6223bdf", "patch": "@@ -477,7 +477,7 @@ __udivmoddi4 (n, d, rp)\n #endif\n \n #ifdef L_divdi3\n-unsigned long long __udivmoddi4();\n+unsigned long long __udivmoddi4 ();\n long long\n __divdi3 (u, v)\n      long long u, v;\n@@ -505,7 +505,7 @@ __divdi3 (u, v)\n #endif\n \n #ifdef L_moddi3\n-unsigned long long __udivmoddi4();\n+unsigned long long __udivmoddi4 ();\n long long\n __moddi3 (u, v)\n      long long u, v;\n@@ -532,7 +532,7 @@ __moddi3 (u, v)\n #endif\n \n #ifdef L_umoddi3\n-unsigned long long __udivmoddi4();\n+unsigned long long __udivmoddi4 ();\n unsigned long long\n __umoddi3 (u, v)\n      unsigned long long u, v;\n@@ -546,7 +546,7 @@ __umoddi3 (u, v)\n #endif\n \n #ifdef L_udivdi3\n-unsigned long long __udivmoddi4();\n+unsigned long long __udivmoddi4 ();\n unsigned long long\n __udivdi3 (n, d)\n      unsigned long long n, d;\n@@ -1230,6 +1230,9 @@ __enable_execute_stack ()\n void\n __do_global_dtors ()\n {\n+#ifdef DO_GLOBAL_DTORS_BODY\n+  DO_GLOBAL_DTORS_BODY;\n+#else\n   int nptrs = *(int *)__DTOR_LIST__;\n   int i;\n \n@@ -1245,6 +1248,7 @@ __do_global_dtors ()\n   /* GNU LD format.  */\n   for (i = nptrs; i >= 1; i--)\n     __DTOR_LIST__[i] ();\n+#endif\n }\n \n #ifndef INIT_SECTION_ASM_OP"}]}