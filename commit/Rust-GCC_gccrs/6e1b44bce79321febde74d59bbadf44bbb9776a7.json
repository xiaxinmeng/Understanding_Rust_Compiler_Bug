{"sha": "6e1b44bce79321febde74d59bbadf44bbb9776a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmUxYjQ0YmNlNzkzMjFmZWJkZTc0ZDU5YmJhZGY0NGJiYjk3NzZhNw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2000-11-22T23:53:03Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-11-22T23:53:03Z"}, "message": "mangle.c (mangle_conv_op_name_for_type): Don't use `__op' prefix.\n\n\t* mangle.c (mangle_conv_op_name_for_type): Don't use `__op'\n\tprefix.\n\nFrom-SVN: r37678", "tree": {"sha": "47df32fdb771da038d9188aff5ddc47d0f82c3af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47df32fdb771da038d9188aff5ddc47d0f82c3af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e1b44bce79321febde74d59bbadf44bbb9776a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e1b44bce79321febde74d59bbadf44bbb9776a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e1b44bce79321febde74d59bbadf44bbb9776a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e1b44bce79321febde74d59bbadf44bbb9776a7/comments", "author": null, "committer": null, "parents": [{"sha": "dc60a41bed4d2f2c9cce085af2ee57d62865f30d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc60a41bed4d2f2c9cce085af2ee57d62865f30d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc60a41bed4d2f2c9cce085af2ee57d62865f30d"}], "stats": {"total": 26, "additions": 10, "deletions": 16}, "files": [{"sha": "bbc26de627459e4a53a8097292115cc404f2c4f8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e1b44bce79321febde74d59bbadf44bbb9776a7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e1b44bce79321febde74d59bbadf44bbb9776a7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6e1b44bce79321febde74d59bbadf44bbb9776a7", "patch": "@@ -1,5 +1,8 @@\n 2000-11-22  Mark Mitchell  <mark@codesourcery.com>\n \n+\t* mangle.c (mangle_conv_op_name_for_type): Don't use `__op'\n+\tprefix.\n+\n \t* pt.c (do_decl_instantiate): Explicitly clone constructors and\n \tdestructors that haven't already been cloned.\n "}, {"sha": "33eeefc447af7b10db4db91e10ff7ee19e2ae261", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e1b44bce79321febde74d59bbadf44bbb9776a7/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e1b44bce79321febde74d59bbadf44bbb9776a7/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=6e1b44bce79321febde74d59bbadf44bbb9776a7", "patch": "@@ -2226,15 +2226,7 @@ mangle_thunk (fn_decl, offset, vcall_offset)\n \n /* Return an identifier for the mangled unqualified name for a\n    conversion operator to TYPE.  This mangling is not specified by the\n-   ABI spec; it is only used internally.\n-\n-   For compatibility with existing conversion operator mechanisms,\n-   the mangled form is `__op<type>' where <type> is the mangled\n-   representation of TYPE.  \n-\n-   FIXME: Though identifiers with starting with __op are reserved for\n-   the implementation, it would eventually be nice to use inaccessible\n-   names for these operators.  */\n+   ABI spec; it is only used internally.  */\n \n tree\n mangle_conv_op_name_for_type (type)\n@@ -2245,10 +2237,10 @@ mangle_conv_op_name_for_type (type)\n   /* Build the mangling for TYPE.  */\n   const char *mangled_type = mangle_type_string (type);\n   /* Allocate a temporary buffer for the complete name.  */\n-  char *op_name = (char *) xmalloc (strlen (OPERATOR_TYPENAME_FORMAT) \n+  char *op_name = (char *) xmalloc (strlen (\"operator \") \n \t\t\t\t    + strlen (mangled_type) + 1);\n   /* Assemble the mangling.  */\n-  strcpy (op_name, OPERATOR_TYPENAME_FORMAT);\n+  strcpy (op_name, \"operator \");\n   strcat (op_name, mangled_type);\n   /* Find or create an identifier.  */\n   identifier = get_identifier (op_name);"}, {"sha": "c0c953a0539a7f73b6055e97f2e97002a193aaf5", "filename": "gcc/testsuite/g++.old-deja/g++.ext/pretty2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e1b44bce79321febde74d59bbadf44bbb9776a7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fpretty2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e1b44bce79321febde74d59bbadf44bbb9776a7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fpretty2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fpretty2.C?ref=6e1b44bce79321febde74d59bbadf44bbb9776a7", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 1999 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 21 Nov 1999 <nathan@acm.org>\n \n // make sure __FUNCTION__ and __PRETTY_FUNCTION__ work in member functions\n@@ -67,7 +67,7 @@ X::operator int ()\n   printf (\"__FUNCTION__ %s\\n\", function);\n   printf (\"__PRETTY_FUNCTION__ %s\\n\", pretty);\n   \n-  if (strcmp (function, \"__opi\"))\n+  if (strcmp (function, \"operator i\"))\n     bad = true;\n   if (strcmp (pretty, \"X::operator int()\"))\n     bad = true;"}, {"sha": "c37be1c27785aa19cd451b87b3e083bb06dcc528", "filename": "gcc/testsuite/g++.old-deja/g++.other/decl4.C", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e1b44bce79321febde74d59bbadf44bbb9776a7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdecl4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e1b44bce79321febde74d59bbadf44bbb9776a7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdecl4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdecl4.C?ref=6e1b44bce79321febde74d59bbadf44bbb9776a7", "patch": "@@ -1,9 +1,8 @@\n // Build don't link:\n-// crash test - XFAIL *-*-*\n \n // Reported by Harri Porten <porten@tu-harburg.de>\n // Simplified for testsuite by Alexandre Oliva\n \n struct foo { operator long double(); };\n-int bar(int __opr); // gets bogus error - XFAIL *-*-*\n-int bar(int __ope); // gets bogus error - XFAIL *-*-*\n+int bar(int __opr);\n+int bar(int __ope);"}]}