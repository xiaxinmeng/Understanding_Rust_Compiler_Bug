{"sha": "d30e98b54d6a5124bb48b10b593e264f048d38aa", "node_id": "C_kwDOANBUbNoAKGQzMGU5OGI1NGQ2YTUxMjRiYjQ4YjEwYjU5M2UyNjRmMDQ4ZDM4YWE", "commit": {"author": {"name": "Torbj\u00f6rn SVENSSON", "email": "torbjorn.svensson@foss.st.com", "date": "2022-10-27T16:03:15Z"}, "committer": {"name": "Torbj\u00f6rn SVENSSON", "email": "torbjorn.svensson@foss.st.com", "date": "2022-11-28T15:49:31Z"}, "message": "c++: Allow module name to be a single letter on Windows\n\nOn Windows, the ':' character is special and when the module name is\na single character, like 'A', then the flatname would be (for\nexample) 'A:Foo'. On Windows, 'A:Foo' is treated as an absolute\npath by the module loader and is likely not found.\n\nWithout this patch, the test case pr98944_c.C fails with:\n\nIn module imported at /src/gcc/testsuite/g++.dg/modules/pr98944_b.C:7:1,\nof module A:Foo, imported at /src/gcc/testsuite/g++.dg/modules/pr98944_c.C:7:\nA:Internals: error: header module expected, module 'A:Internals' found\nA:Internals: error: failed to read compiled module: Bad file data\nA:Internals: note: compiled module file is 'gcm.cache/A-Internals.gcm'\nIn module imported at /src/gcc/testsuite/g++.dg/modules/pr98944_c.C:7:8:\nA:Foo: error: failed to read compiled module: Bad import dependency\nA:Foo: note: compiled module file is 'gcm.cache/A-Foo.gcm'\nA:Foo: fatal error: returning to the gate for a mechanical issue\ncompilation terminated.\n\ngcc/cp/ChangeLog:\n\n\t* module.cc: On Windows, 'A:Foo' is supposed to be a module\n\tand not a path.\n\nCo-Authored-By: Yvan ROUX <yvan.roux@foss.st.com>\nSigned-off-by: Torbj\u00f6rn SVENSSON <torbjorn.svensson@foss.st.com>", "tree": {"sha": "1d9bb677eada9c7d4ffe2ca86fd4fd71fc796535", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d9bb677eada9c7d4ffe2ca86fd4fd71fc796535"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d30e98b54d6a5124bb48b10b593e264f048d38aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d30e98b54d6a5124bb48b10b593e264f048d38aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d30e98b54d6a5124bb48b10b593e264f048d38aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d30e98b54d6a5124bb48b10b593e264f048d38aa/comments", "author": null, "committer": null, "parents": [{"sha": "c775e2b81fca39f366040d423e3e44f4abecf753", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c775e2b81fca39f366040d423e3e44f4abecf753", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c775e2b81fca39f366040d423e3e44f4abecf753"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "7133009dba50f82e3112cade7e71ce384b36c1ed", "filename": "gcc/cp/module.cc", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d30e98b54d6a5124bb48b10b593e264f048d38aa/gcc%2Fcp%2Fmodule.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d30e98b54d6a5124bb48b10b593e264f048d38aa/gcc%2Fcp%2Fmodule.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmodule.cc?ref=d30e98b54d6a5124bb48b10b593e264f048d38aa", "patch": "@@ -13987,7 +13987,15 @@ get_module (tree name, module_state *parent, bool partition)\n static module_state *\n get_module (const char *ptr)\n {\n-  if (ptr[0] == '.' ? IS_DIR_SEPARATOR (ptr[1]) : IS_ABSOLUTE_PATH (ptr))\n+  /* On DOS based file systems, there is an ambiguity with A:B which can be\n+     interpreted as a module Module:Partition or Drive:PATH.  Interpret strings\n+     which clearly starts as pathnames as header-names and everything else is\n+     treated as a (possibly malformed) named moduled.  */\n+  if (IS_DIR_SEPARATOR (ptr[ptr[0] == '.']) // ./FOO or /FOO\n+#if HAVE_DOS_BASED_FILE_SYSTEM\n+      || (HAS_DRIVE_SPEC (ptr) && IS_DIR_SEPARATOR (ptr[2])) // A:/FOO\n+#endif\n+      || false)\n     /* A header name.  */\n     return get_module (build_string (strlen (ptr), ptr));\n "}]}