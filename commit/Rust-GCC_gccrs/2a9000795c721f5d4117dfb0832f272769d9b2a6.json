{"sha": "2a9000795c721f5d4117dfb0832f272769d9b2a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE5MDAwNzk1YzcyMWY1ZDQxMTdkZmIwODMyZjI3Mjc2OWQ5YjJhNg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-09-20T11:08:35Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-09-20T11:08:35Z"}, "message": "re PR tree-optimization/82264 (ICE in vn_phi_lookup at gcc/tree-ssa-sccvn.c:3125)\n\n2017-09-20  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/82264\n\t* tree-ssa-sccvn.c (vn_phi_eq): Use safe_dyn_cast to check\n\tfor GIMPLE_CONDs.\n\t(vn_phi_lookup): Likewise.\n\t(vn_phi_insert): Likewise.\n\n\t* gcc.dg/torture/pr82264.c: New testcase.\n\nFrom-SVN: r253005", "tree": {"sha": "1f4ea118b3a2c957c8a13e23975c5adbde54f8b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f4ea118b3a2c957c8a13e23975c5adbde54f8b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a9000795c721f5d4117dfb0832f272769d9b2a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a9000795c721f5d4117dfb0832f272769d9b2a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a9000795c721f5d4117dfb0832f272769d9b2a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a9000795c721f5d4117dfb0832f272769d9b2a6/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "88272c019414e6558db9c6c72053415fa88e0b5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88272c019414e6558db9c6c72053415fa88e0b5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88272c019414e6558db9c6c72053415fa88e0b5e"}], "stats": {"total": 51, "additions": 41, "deletions": 10}, "files": [{"sha": "15b1095f1d12b71fa690ffd58607841026348622", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a9000795c721f5d4117dfb0832f272769d9b2a6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a9000795c721f5d4117dfb0832f272769d9b2a6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2a9000795c721f5d4117dfb0832f272769d9b2a6", "patch": "@@ -1,3 +1,11 @@\n+2017-09-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/82264\n+\t* tree-ssa-sccvn.c (vn_phi_eq): Use safe_dyn_cast to check\n+\tfor GIMPLE_CONDs.\n+\t(vn_phi_lookup): Likewise.\n+\t(vn_phi_insert): Likewise.\n+\n 2017-09-20  Jakub Jelinek  <jakub@redhat.com>\n \n \t* dwarf2out.c (tree_add_const_value_attribute): For INTEGER_CST"}, {"sha": "da107c34b3d705122a48427402c3e847599478db", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a9000795c721f5d4117dfb0832f272769d9b2a6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a9000795c721f5d4117dfb0832f272769d9b2a6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2a9000795c721f5d4117dfb0832f272769d9b2a6", "patch": "@@ -1,3 +1,8 @@\n+2017-09-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/82264\n+\t* gcc.dg/torture/pr82264.c: New testcase.\n+\n 2017-09-20  Jakub Jelinek  <jakub@redhat.com>\n \n \t* g++.dg/debug/dwarf2/template-params-13.C: New test."}, {"sha": "2bc03674ccd16f515ef35ccc071f036d21bc947b", "filename": "gcc/testsuite/gcc.dg/torture/pr82264.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a9000795c721f5d4117dfb0832f272769d9b2a6/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr82264.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a9000795c721f5d4117dfb0832f272769d9b2a6/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr82264.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr82264.c?ref=2a9000795c721f5d4117dfb0832f272769d9b2a6", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+\n+char a;\n+int c;\n+unsigned b ();\n+unsigned\n+setjmp ()\n+{\n+}\n+static void\n+d ()\n+{\n+  if (b ())\n+    c = 3;\n+}\n+void\n+e ()\n+{\n+  d ();\n+  a && ({ setjmp (); });\n+}"}, {"sha": "ca78e2d97cf6bcaf027fbf6180d7a8ca5b48cd8d", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a9000795c721f5d4117dfb0832f272769d9b2a6/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a9000795c721f5d4117dfb0832f272769d9b2a6/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=2a9000795c721f5d4117dfb0832f272769d9b2a6", "patch": "@@ -3028,16 +3028,13 @@ vn_phi_eq (const_vn_phi_t const vp1, const_vn_phi_t const vp2)\n \t      return false;\n \n \t    /* Verify the controlling stmt is the same.  */\n-\t    gimple *last1 = last_stmt (idom1);\n-\t    gimple *last2 = last_stmt (idom2);\n-\t    if (gimple_code (last1) != GIMPLE_COND\n-\t\t|| gimple_code (last2) != GIMPLE_COND)\n+\t    gcond *last1 = safe_dyn_cast <gcond *> (last_stmt (idom1));\n+\t    gcond *last2 = safe_dyn_cast <gcond *> (last_stmt (idom2));\n+\t    if (! last1 || ! last2)\n \t      return false;\n \t    bool inverted_p;\n-\t    if (! cond_stmts_equal_p (as_a <gcond *> (last1),\n-\t\t\t\t      vp1->cclhs, vp1->ccrhs,\n-\t\t\t\t      as_a <gcond *> (last2),\n-\t\t\t\t      vp2->cclhs, vp2->ccrhs,\n+\t    if (! cond_stmts_equal_p (last1, vp1->cclhs, vp1->ccrhs,\n+\t\t\t\t      last2, vp2->cclhs, vp2->ccrhs,\n \t\t\t\t      &inverted_p))\n \t      return false;\n \n@@ -3122,7 +3119,7 @@ vn_phi_lookup (gimple *phi)\n   vp1.ccrhs = NULL_TREE;\n   basic_block idom1 = get_immediate_dominator (CDI_DOMINATORS, vp1.block);\n   if (EDGE_COUNT (idom1->succs) == 2)\n-    if (gcond *last1 = dyn_cast <gcond *> (last_stmt (idom1)))\n+    if (gcond *last1 = safe_dyn_cast <gcond *> (last_stmt (idom1)))\n       {\n \tvp1.cclhs = vn_valueize (gimple_cond_lhs (last1));\n \tvp1.ccrhs = vn_valueize (gimple_cond_rhs (last1));\n@@ -3168,7 +3165,7 @@ vn_phi_insert (gimple *phi, tree result)\n   vp1->ccrhs = NULL_TREE;\n   basic_block idom1 = get_immediate_dominator (CDI_DOMINATORS, vp1->block);\n   if (EDGE_COUNT (idom1->succs) == 2)\n-    if (gcond *last1 = dyn_cast <gcond *> (last_stmt (idom1)))\n+    if (gcond *last1 = safe_dyn_cast <gcond *> (last_stmt (idom1)))\n       {\n \tvp1->cclhs = vn_valueize (gimple_cond_lhs (last1));\n \tvp1->ccrhs = vn_valueize (gimple_cond_rhs (last1));"}]}