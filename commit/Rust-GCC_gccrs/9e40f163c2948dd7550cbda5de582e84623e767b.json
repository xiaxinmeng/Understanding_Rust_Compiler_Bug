{"sha": "9e40f163c2948dd7550cbda5de582e84623e767b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU0MGYxNjNjMjk0OGRkNzU1MGNiZGE1ZGU1ODJlODQ2MjNlNzY3Yg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-07-08T07:47:39Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-07-08T07:47:39Z"}, "message": "[multiple changes]\n\n2013-07-08  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_ch8.adb (Save_Scope_Stack): Adding documentation.\n\t(Restore_Scope_Stack): Remove the elements of the list when the\n\tvisibility of each entity is restored.\n\n2013-07-08  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch9.adb, sem.ads, sem_util.adb: Minor reformatting.\n\nFrom-SVN: r200756", "tree": {"sha": "69e24bf84cd90dc2f3e2b0d30abf8f6fd73e23e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69e24bf84cd90dc2f3e2b0d30abf8f6fd73e23e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e40f163c2948dd7550cbda5de582e84623e767b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e40f163c2948dd7550cbda5de582e84623e767b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e40f163c2948dd7550cbda5de582e84623e767b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e40f163c2948dd7550cbda5de582e84623e767b/comments", "author": null, "committer": null, "parents": [{"sha": "85f6a831a631b643880fe66e480af0c0b465ba9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85f6a831a631b643880fe66e480af0c0b465ba9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85f6a831a631b643880fe66e480af0c0b465ba9f"}], "stats": {"total": 63, "additions": 50, "deletions": 13}, "files": [{"sha": "c7f9f39a178dcad03fa6327fa0a7dce32db8c245", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e40f163c2948dd7550cbda5de582e84623e767b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e40f163c2948dd7550cbda5de582e84623e767b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9e40f163c2948dd7550cbda5de582e84623e767b", "patch": "@@ -1,3 +1,13 @@\n+2013-07-08  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_ch8.adb (Save_Scope_Stack): Adding documentation.\n+\t(Restore_Scope_Stack): Remove the elements of the list when the\n+\tvisibility of each entity is restored.\n+\n+2013-07-08  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch9.adb, sem.ads, sem_util.adb: Minor reformatting.\n+\n 2013-07-08  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch8.adb, sem_ch8.ads: Minor reformatting."}, {"sha": "59c5b2d62ce5604c7d10a45318cb7bf622f05f79", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e40f163c2948dd7550cbda5de582e84623e767b/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e40f163c2948dd7550cbda5de582e84623e767b/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=9e40f163c2948dd7550cbda5de582e84623e767b", "patch": "@@ -3347,7 +3347,7 @@ package body Exp_Ch9 is\n             if Known_Static_Esize (Comp_Type) then\n                Typ_Size := UI_To_Int (Esize (Comp_Type));\n \n-            --  If the Esize (Object_Size) is unknown at compile-time, look at\n+            --  If the Esize (Object_Size) is unknown at compile time, look at\n             --  the RM_Size (Value_Size) since it may have been set by an\n             --  explicit representation clause.\n "}, {"sha": "57d5d9110580a79ff9e0fd582816576c12fc706b", "filename": "gcc/ada/sem.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e40f163c2948dd7550cbda5de582e84623e767b/gcc%2Fada%2Fsem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e40f163c2948dd7550cbda5de582e84623e767b/gcc%2Fada%2Fsem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.ads?ref=9e40f163c2948dd7550cbda5de582e84623e767b", "patch": "@@ -562,7 +562,7 @@ package Sem is\n    --  Note: for integer and real literals, the analyzer sets the flag to\n    --  indicate that the result is a static expression. If the expander\n    --  generates a literal that does NOT correspond to a static expression,\n-   --  e.g. by folding an expression whose value is known at compile-time,\n+   --  e.g. by folding an expression whose value is known at compile time,\n    --  but is not technically static, then the caller should reset the\n    --  Is_Static_Expression flag after analyzing but before resolving.\n    --"}, {"sha": "c5d2e9925d2f5936392d4bc2be36a46728c43e04", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 36, "deletions": 8, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e40f163c2948dd7550cbda5de582e84623e767b/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e40f163c2948dd7550cbda5de582e84623e767b/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=9e40f163c2948dd7550cbda5de582e84623e767b", "patch": "@@ -7662,16 +7662,18 @@ package body Sem_Ch8 is\n       Elmt    : Elmt_Id;\n \n    begin\n-      --  Restore visibility of previous scope stack, if any\n+      --  Restore visibility of previous scope stack, if any, using the list\n+      --  we saved (we use Remove, since this list will not be used again).\n \n-      --  Should use Remove_Elmt, so that elements can be reused ???\n-\n-      Elmt := First_Elmt (List);\n-      while Present (Elmt) loop\n+      loop\n+         Elmt := Last_Elmt (List);\n+         exit when Elmt = No_Elmt;\n          Set_Is_Immediately_Visible (Node (Elmt));\n-         Next_Elmt (Elmt);\n+         Remove_Last_Elmt (List);\n       end loop;\n \n+      --  Restore use clauses\n+\n       if SS_Last >= Scope_Stack.First\n         and then Scope_Stack.Table (SS_Last).Entity /= Standard_Standard\n         and then Handle_Use\n@@ -7684,6 +7686,34 @@ package body Sem_Ch8 is\n    -- Save_Scope_Stack --\n    ----------------------\n \n+   --  Save_Scope_Stack/Restore_Scope_Stack were originally designed to avoid\n+   --  consuming any memory. That is, Save_Scope_Stack took care of removing\n+   --  from immediate visibility entities and Restore_Scope_Stack took care\n+   --  of restoring their visibility analyzing the context of each entity. The\n+   --  problem of such approach is that it was fragile and caused unexpected\n+   --  visibility problems, and indeed one test was found where there was a\n+   --  real problem.\n+\n+   --  Furthermore, the following experiment was carried out:\n+\n+   --    - Save_Scope_Stack was modified to store in an Elist1 all those\n+   --      entities whose attribute Is_Immediately_Visible is modified\n+   --      from True to False.\n+\n+   --    - Restore_Scope_Stack was modified to store in another Elist2\n+   --      all the entities whose attribute Is_Immediately_Visible is\n+   --      modified from False to True.\n+\n+   --    - Extra code was added to verify that all the elements of Elist1\n+   --      are found in Elist2\n+\n+   --  This test show that there may be more occurrences of this problem which\n+   --  have not yet been detected. As a result, we replaced that approach by\n+   --  the current one in which Save_Scope_Stack returns the list of entities\n+   --  whose visibility is changed, and that list is passed to Restore_Scope\n+   --  Stack to undo that change. This approach is simpler and safer, although\n+   --  it consumes more memory.\n+\n    function Save_Scope_Stack (Handle_Use : Boolean := True) return Elist_Id is\n       Result  : constant Elist_Id := New_Elmt_List;\n       E       : Entity_Id;\n@@ -7698,8 +7728,6 @@ package body Sem_Ch8 is\n       -- Remove_From_Visibility --\n       ----------------------------\n \n-      --  Need comment on why we do this instead of old approach???\n-\n       procedure Remove_From_Visibility (E : Entity_Id) is\n       begin\n          if Is_Immediately_Visible (E) then"}, {"sha": "623d3c4f8e87e44eda7f856bb619f8113a0e6039", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e40f163c2948dd7550cbda5de582e84623e767b/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e40f163c2948dd7550cbda5de582e84623e767b/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=9e40f163c2948dd7550cbda5de582e84623e767b", "patch": "@@ -14144,9 +14144,8 @@ package body Sem_Util is\n       if Known_Static_Esize (Typ) then\n          Size := UI_To_Int (Esize (Typ));\n \n-      --  If the Esize (Object_Size) is unknown at compile-time, look at the\n-      --  RM_Size (Value_Size) since it may have been set by an explicit rep\n-      --  item.\n+      --  If the Esize (Object_Size) is unknown at compile time, look at the\n+      --  RM_Size (Value_Size) which may have been set by an explicit rep item.\n \n       elsif Known_Static_RM_Size (Typ) then\n          Size := UI_To_Int (RM_Size (Typ));"}]}