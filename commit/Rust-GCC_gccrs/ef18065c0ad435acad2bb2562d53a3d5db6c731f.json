{"sha": "ef18065c0ad435acad2bb2562d53a3d5db6c731f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWYxODA2NWMwYWQ0MzVhY2FkMmJiMjU2MmQ1M2EzZDVkYjZjNzMxZg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@cygnus.com", "date": "1998-11-18T17:52:45Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1998-11-18T17:52:45Z"}, "message": "Fix memory corruption probelem in reload.\n\n\t* reload.c (find_reloads_address_part): If have a CONST_INT, create\n\ta new one before passing it to force_const_mem.\n\nFrom-SVN: r23698", "tree": {"sha": "f539ac17b4d4edc798e64ba1abc5ce4cbdee69f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f539ac17b4d4edc798e64ba1abc5ce4cbdee69f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef18065c0ad435acad2bb2562d53a3d5db6c731f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef18065c0ad435acad2bb2562d53a3d5db6c731f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef18065c0ad435acad2bb2562d53a3d5db6c731f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef18065c0ad435acad2bb2562d53a3d5db6c731f/comments", "author": null, "committer": null, "parents": [{"sha": "10352226d401ad4958b61bb3124309b387320711", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10352226d401ad4958b61bb3124309b387320711", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10352226d401ad4958b61bb3124309b387320711"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "bcc3614c81bf183260c1d2acb27f6405b02195a6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef18065c0ad435acad2bb2562d53a3d5db6c731f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef18065c0ad435acad2bb2562d53a3d5db6c731f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ef18065c0ad435acad2bb2562d53a3d5db6c731f", "patch": "@@ -1,5 +1,8 @@\n Wed Nov 18 16:31:28 1998  Jim Wilson  <wilson@cygnus.com>\n \n+\t* reload.c (find_reloads_address_part): If have a CONST_INT, create\n+\ta new one before passing it to force_const_mem.\n+\n \t* reload.c (find_reloads_toplev): Pass &x instead of NULL_PTR in\n \tfind_reloads_address call.\n "}, {"sha": "9e59eba19834bf2c15be8df732ac3141299b7337", "filename": "gcc/reload.c", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef18065c0ad435acad2bb2562d53a3d5db6c731f/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef18065c0ad435acad2bb2562d53a3d5db6c731f/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=ef18065c0ad435acad2bb2562d53a3d5db6c731f", "patch": "@@ -5517,7 +5517,20 @@ find_reloads_address_part (x, loc, class, mode, opnum, type, ind_levels)\n       && (! LEGITIMATE_CONSTANT_P (x)\n \t  || PREFERRED_RELOAD_CLASS (x, class) == NO_REGS))\n     {\n-      rtx tem = x = force_const_mem (mode, x);\n+      rtx tem;\n+\n+      /* If this is a CONST_INT, it could have been created by a\n+\t plus_constant call in eliminate_regs, which means it may be\n+\t on the reload_obstack.  reload_obstack will be freed later, so\n+\t we can't allow such RTL to be put in the constant pool.  There\n+\t is code in force_const_mem to check for this case, but it doesn't\n+\t work because we have already popped off the reload_obstack, so\n+\t rtl_obstack == saveable_obstack is true at this point.  */\n+      if (GET_CODE (x) == CONST_INT)\n+\ttem = x = force_const_mem (mode, GEN_INT (INTVAL (x)));\n+      else\n+\ttem = x = force_const_mem (mode, x);\n+\n       find_reloads_address (mode, &tem, XEXP (tem, 0), &XEXP (tem, 0),\n \t\t\t    opnum, type, ind_levels, 0);\n     }\n@@ -5527,7 +5540,13 @@ find_reloads_address_part (x, loc, class, mode, opnum, type, ind_levels)\n \t   && (! LEGITIMATE_CONSTANT_P (XEXP (x, 1))\n \t       || PREFERRED_RELOAD_CLASS (XEXP (x, 1), class) == NO_REGS))\n     {\n-      rtx tem = force_const_mem (GET_MODE (x), XEXP (x, 1));\n+      rtx tem;\n+\n+      /* See comment above.  */\n+      if (GET_CODE (XEXP (x, 1)) == CONST_INT)\n+\ttem = force_const_mem (GET_MODE (x), GEN_INT (INTVAL (XEXP (x, 1))));\n+      else\n+\ttem = force_const_mem (GET_MODE (x), XEXP (x, 1));\n \n       x = gen_rtx_PLUS (GET_MODE (x), XEXP (x, 0), tem);\n       find_reloads_address (mode, &tem, XEXP (tem, 0), &XEXP (tem, 0),"}]}