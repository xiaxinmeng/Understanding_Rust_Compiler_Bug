{"sha": "4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJiOWM3YjllZDJkZGMyMTkxNWZkNDFmY2FjMmJkMGI3NzYwOWM3Yw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-09-10T15:09:33Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-09-10T15:09:33Z"}, "message": "[multiple changes]\n\n2013-09-10  Robert Dewar  <dewar@adacore.com>\n\n\t* switch-c.adb: Diagnose -gnatc given after -gnatRm.\n\t* gnat_ugn.texi: Add documentation for -gnatRm.\n\t* usage.adb: Minor reorganization (put style entries in proper\n\torder) Document -gnatRm switch.\n\t* sinfo.ads: Minor comment fix.\n\n2013-09-10  Sergey Rybin  <rybin@adacore.com frybin>\n\n\t* tree_io.ads: Update ASIS_Version_Number.\n\n2013-09-10  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb (Access_Subprogram_Declaration): Check whether the\n\tdesignated type can appear in a parameterless call.\n\t* sem_ch4.adb (Analyze_Call): Do not insert an explicit dereference\n\tin the case of an indirect call through an access function that\n\treturns an array type.\n\t(Analyze_One_Call): Handle properly legal parameterless calls\n\twhose result is indexed, in constructs of the for F.all (I)\n\t* sem_ch6.ads (May_Need_Actuals): Make public, for use on access\n\tto subprogram types.\n\t* sem_res.adb (Resolve_Call): If the call is indirect, there is\n\tno entity to set on the name in the call.\n\nFrom-SVN: r202461", "tree": {"sha": "d84e0f24984fb57d8df8e6e6cf11bfab406ce96c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d84e0f24984fb57d8df8e6e6cf11bfab406ce96c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c/comments", "author": null, "committer": null, "parents": [{"sha": "cdcf1c7ae29ef372a214904575aad282171285ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdcf1c7ae29ef372a214904575aad282171285ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdcf1c7ae29ef372a214904575aad282171285ff"}], "stats": {"total": 126, "additions": 107, "deletions": 19}, "files": [{"sha": "5af322e667ba565d5a1446f41369feb2b089c1e4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c", "patch": "@@ -1,3 +1,29 @@\n+2013-09-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* switch-c.adb: Diagnose -gnatc given after -gnatRm.\n+\t* gnat_ugn.texi: Add documentation for -gnatRm.\n+\t* usage.adb: Minor reorganization (put style entries in proper\n+\torder) Document -gnatRm switch.\n+\t* sinfo.ads: Minor comment fix.\n+\n+2013-09-10  Sergey Rybin  <rybin@adacore.com frybin>\n+\n+\t* tree_io.ads: Update ASIS_Version_Number.\n+\n+2013-09-10  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Access_Subprogram_Declaration): Check whether the\n+\tdesignated type can appear in a parameterless call.\n+\t* sem_ch4.adb (Analyze_Call): Do not insert an explicit dereference\n+\tin the case of an indirect call through an access function that\n+\treturns an array type.\n+\t(Analyze_One_Call): Handle properly legal parameterless calls\n+\twhose result is indexed, in constructs of the for F.all (I)\n+\t* sem_ch6.ads (May_Need_Actuals): Make public, for use on access\n+\tto subprogram types.\n+\t* sem_res.adb (Resolve_Call): If the call is indirect, there is\n+\tno entity to set on the name in the call.\n+\n 2013-09-10  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* aspects.adb: Add entries in the Has_Aspect_Specifications_Flag"}, {"sha": "40ffc35dacdaa330b1e5ff75540c578aca809489", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c", "patch": "@@ -4013,6 +4013,10 @@ been given, since these two switches are not compatible. It is also not allowed\n if a previous @code{-gnatc} switch has been given, since we must be generating\n code to be able to determine representation information.\n \n+@item ^-gnatRm[s]^/REPRESENTATION_INFO^\n+Output convention and parameter passing mechanisms for all subprograms.\n+This form is also incompatible with the use of @code{-gnatc}.\n+\n @item -gnats\n @cindex @option{-gnats} (@command{gcc})\n Syntax check only.\n@@ -7277,6 +7281,11 @@ discriminant. See source files @file{repinfo.ads/adb} in the\n output. If the switch is followed by an s (e.g.@: @option{-gnatR2s}), then\n the output is to a file with the name @file{^file.rep^file_REP^} where\n file is the name of the corresponding source file.\n+\n+@item -gnatRm[s]\n+This form of the switch controls output of subprogram conventions\n+and parameter passing mechanisms for all subprograms. A following\n+@code{s} means output to a file as described above.\n @end ifclear\n @ifset vms\n @item /REPRESENTATION_INFO\n@@ -7300,7 +7309,14 @@ If _FILE is added at the end of an option\n (e.g.@: @option{/REPRESENTATION_INFO=ARRAYS_FILE}),\n then the output is to a file with the name @file{file_REP} where\n file is the name of the corresponding source file.\n+\n+@item /REPRESENTATION_INFO=MECHANISMS\n+This qualifier form controls output of subprogram conventions\n+and parameter passing mechanisms for all subprograms. It is\n+possible to append _FILE as described above to cause information\n+to be written to a file.\n @end ifset\n+\n Note that it is possible for record components to have zero size. In\n this case, the component clause uses an obvious extension of permitted\n Ada syntax, for example @code{at 0 range 0 .. -1}."}, {"sha": "f515dc7860515cd8b84fa65b2c79ed35be9be9cd", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c", "patch": "@@ -861,7 +861,7 @@ package Opt is\n \n    List_Representation_Info_To_File : Boolean := False;\n    --  GNAT\n-   --  Set true by -gnatRs switch. Causes information from -gnatR/1/2/3 to be\n+   --  Set true by -gnatRs switch. Causes information from -gnatR/1/2/3/m to be\n    --  written to file.rep (where file is the name of the source file) instead\n    --  of stdout. For example, if file x.adb is compiled using -gnatR2s then\n    --  representation info is written to x.adb.ref."}, {"sha": "b3f99c4aeb628009b4c0cbb69e1eb296b0082c22", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c", "patch": "@@ -1256,6 +1256,11 @@ package body Sem_Ch3 is\n          end loop;\n       end if;\n \n+      --  Check whether an indirect call without actuals may be possible. This\n+      --  is used when resolving calls whose result is then indexed.\n+\n+      May_Need_Actuals (Desig_Type);\n+\n       --  If the return type is incomplete, this is legal as long as the type\n       --  is declared in the current scope and will be completed in it (rather\n       --  than being part of limited view)."}, {"sha": "5a43a8df2a32fd5c33577dfec1f45328390684bd", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c", "patch": "@@ -1037,6 +1037,9 @@ package body Sem_Ch4 is\n          --  function that returns a pointer_to_procedure which is the entity\n          --  being called. Finally, F (X) may be a call to a parameterless\n          --  function that returns a pointer to a function with parameters.\n+         --  Note that if F return an access to subprogram whose designated\n+         --  type is an array, F (X) cannot be interpreted as an indirect call\n+         --  through the result of the call to F.\n \n          elsif Is_Access_Type (Etype (Nam))\n            and then Ekind (Designated_Type (Etype (Nam))) = E_Subprogram_Type\n@@ -1047,6 +1050,8 @@ package body Sem_Ch4 is\n                   (Nkind (Parent (N)) /= N_Explicit_Dereference\n                      and then Is_Entity_Name (Nam)\n                      and then No (First_Formal (Entity (Nam)))\n+                     and then not\n+                       Is_Array_Type (Etype (Designated_Type (Etype (Nam))))\n                      and then Present (Actuals)))\n          then\n             Nam_Ent := Designated_Type (Etype (Nam));\n@@ -2998,7 +3003,9 @@ package body Sem_Ch4 is\n          return;\n       end if;\n \n-      --  An indexing requires at least one actual\n+      --  An indexing requires at least one actual.The name of the call cannot\n+      --  be an implicit indirect call, so it cannot be a generated explicit\n+      --  dereference.\n \n       if not Is_Empty_List (Actuals)\n         and then\n@@ -3007,7 +3014,11 @@ package body Sem_Ch4 is\n               (Needs_One_Actual (Nam)\n                  and then Present (Next_Actual (First (Actuals)))))\n       then\n-         if Is_Array_Type (Subp_Type) then\n+         if Is_Array_Type (Subp_Type)\n+           and then\n+            (Nkind (Name (N)) /= N_Explicit_Dereference\n+              or else Comes_From_Source (Name (N)))\n+         then\n             Is_Indexed := Try_Indexed_Call (N, Nam, Subp_Type, Must_Skip);\n \n          elsif Is_Access_Type (Subp_Type)\n@@ -3046,9 +3057,14 @@ package body Sem_Ch4 is\n       if not Norm_OK then\n \n          --  If an indirect call is a possible interpretation, indicate\n-         --  success to the caller.\n+         --  success to the caller. This may be an indecing of an explicit\n+         --  dereference of a call that returns an access type (see above).\n \n-         if Is_Indirect then\n+         if Is_Indirect\n+           or else (Is_Indexed\n+                     and then Nkind (Name (N)) = N_Explicit_Dereference\n+                     and then Comes_From_Source (Name (N)))\n+         then\n             Success := True;\n             return;\n "}, {"sha": "e4ad78b841982bbfe7f9262f1fc5d0e07be94dbf", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c", "patch": "@@ -211,10 +211,6 @@ package body Sem_Ch6 is\n    --  Create the declaration for an inequality operator that is implicitly\n    --  created by a user-defined equality operator that yields a boolean.\n \n-   procedure May_Need_Actuals (Fun : Entity_Id);\n-   --  Flag functions that can be called without parameters, i.e. those that\n-   --  have no parameters, or those for which defaults exist for all parameters\n-\n    procedure Process_PPCs\n      (N       : Node_Id;\n       Spec_Id : Entity_Id;"}, {"sha": "d967c017ae05da353ff14a01dbf2568ab70eaa44", "filename": "gcc/ada/sem_ch6.ads", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c/gcc%2Fada%2Fsem_ch6.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c/gcc%2Fada%2Fsem_ch6.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.ads?ref=4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c", "patch": "@@ -234,6 +234,13 @@ package Sem_Ch6 is\n    --  E is the entity for a subprogram or generic subprogram spec. This call\n    --  lists all inherited Pre/Post aspects if List_Inherited_Pre_Post is True.\n \n+   procedure May_Need_Actuals (Fun : Entity_Id);\n+   --  Flag functions that can be called without parameters, i.e. those that\n+   --  have no parameters, or those for which defaults exist for all parameters\n+   --  Used for subprogram declarations and for access subprogram declarations,\n+   --  where they apply to the anonymous designated type. On return the flag\n+   --  Set_Needs_No_Actuals is set appropriately in Fun.\n+\n    function Mode_Conformant (New_Id, Old_Id : Entity_Id) return Boolean;\n    --  Determine whether two callable entities (subprograms, entries,\n    --  literals) are mode conformant (RM 6.3.1(15))"}, {"sha": "387e06f31db0afc9119f1fe295c619c924be96bf", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c", "patch": "@@ -5460,7 +5460,13 @@ package body Sem_Res is\n                  (\"cannot disambiguate function call and indexing\", N);\n             else\n                New_Subp := Relocate_Node (Subp);\n-               Set_Entity (Subp, Nam);\n+\n+               --  The called entity may be an explicit dereference, in which\n+               --  case there is no entity to set.\n+\n+               if Nkind (New_Subp) /= N_Explicit_Dereference then\n+                  Set_Entity (Subp, Nam);\n+               end if;\n \n                if (Is_Array_Type (Ret_Type)\n                     and then Component_Type (Ret_Type) /= Any_Type)"}, {"sha": "37a6e14373fe47767acb99e87522b6f998c3bb2f", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c", "patch": "@@ -7076,7 +7076,7 @@ package Sinfo is\n       --  Pre_Post_Conditions contains a collection of pragmas that correspond\n       --  to pre- and postconditions associated with an entry or a subprogram.\n       --  The pragmas can either come from source or be the byproduct of aspect\n-      --  expansion. The ordering in the list is of LIFO fashion.\n+      --  expansion. The ordering in the list is in LIFO fashion.\n \n       --  Note that there might be multiple preconditions or postconditions\n       --  in this list, either because they come from separate pragmas in the\n@@ -7085,12 +7085,12 @@ package Sinfo is\n \n       --  Contract_Test_Cases contains a collection of pragmas that correspond\n       --  to aspects/pragmas Contract_Cases and Test_Case. The ordering in the\n-      --  list is of LIFO fashion.\n+      --  list is in LIFO fashion.\n \n       --  Classifications contains pragmas that either categorize subprogram\n       --  inputs and outputs or establish dependencies between them. Currently\n       --  pragmas Depends and Global are stored in this list. The ordering is\n-      --  of LIFO fashion.\n+      --  in LIFO fashion.\n \n       -------------------\n       -- Expanded_Name --"}, {"sha": "34d5b0887b20681b651af33f7c4084538598a971", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c", "patch": "@@ -312,7 +312,9 @@ package body Switch.C is\n \n                --  Not allowed if previous -gnatR given\n \n-               if List_Representation_Info /= 0 then\n+               if List_Representation_Info /= 0\n+                 or else List_Representation_Info_Mechanisms\n+               then\n                   Osint.Fail\n                     (\"-gnatc not allowed since -gnatR given previously\");\n                end if;"}, {"sha": "bab7f9e6a4a97676eecd27d6d1a6b9f681a36074", "filename": "gcc/ada/tree_io.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c/gcc%2Fada%2Ftree_io.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c/gcc%2Fada%2Ftree_io.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftree_io.ads?ref=4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c", "patch": "@@ -47,7 +47,7 @@ package Tree_IO is\n    Tree_Format_Error : exception;\n    --  Raised if a format error is detected in the input file\n \n-   ASIS_Version_Number : constant := 32;\n+   ASIS_Version_Number : constant := 33;\n    --  ASIS Version. This is used to check for consistency between the compiler\n    --  used to generate trees and an ASIS application that is reading the\n    --  trees. It must be incremented whenever a change is made to the tree\n@@ -62,6 +62,8 @@ package Tree_IO is\n    --  31  Remove read/write of Debug_Pragmas_Disabled/Debug_Pragmas_Enabled\n    --  32  Change the way entities are changed through Next_Entity field in\n    --      the hierarchy of child units\n+   --  33  Add copying subtrees for rewriting infix calls of operator\n+   --      functions for the corresponding original nodes.\n \n    procedure Tree_Read_Initialize (Desc : File_Descriptor);\n    --  Called to initialize reading of a tree file. This call must be made"}, {"sha": "ffcd7246905b2a0924973ee94b191161e40a76ce", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c", "patch": "@@ -381,7 +381,8 @@ begin\n    --  Lines for -gnatR switch\n \n    Write_Switch_Char (\"R?\");\n-   Write_Line (\"List rep info (?=0/1/2/3 for none/types/all/variable)\");\n+   Write_Line\n+     (\"List rep info (?=0/1/2/3/m for none/types/all/variable/mechanisms)\");\n    Write_Switch_Char (\"R?s\");\n    Write_Line (\"List rep info to file.rep instead of standard output\");\n \n@@ -626,8 +627,8 @@ begin\n    Write_Line (\"        l    check reference manual layout\");\n    Write_Line (\"        Lnn  check max nest level < nn \");\n    Write_Line (\"        m    check line length <= 79 characters\");\n-   Write_Line (\"        n    check casing of package Standard identifiers\");\n    Write_Line (\"        Mnn  check line length <= nn characters\");\n+   Write_Line (\"        n    check casing of package Standard identifiers\");\n    Write_Line (\"        N    turn off all checks\");\n    Write_Line (\"        o    check subprogram bodies in alphabetical order\");\n    Write_Line (\"        O    check overriding indicators\");"}, {"sha": "f92788af69b892ac8e7d6f57384578fc0ff2e9d4", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=4bb9c7b9ed2ddc21915fd41fcac2bd0b77609c7c", "patch": "@@ -2299,7 +2299,11 @@ package VMS_Data is\n                                             \"SYMBOLIC \"                    &\n                                                \"-gnatR3 \"                  &\n                                             \"SYMBOLIC_FILE \"               &\n-                                               \"-gnatR3s\";\n+                                               \"-gnatR3s \"                 &\n+                                            \"MECHANISMS \"                  &\n+                                               \"-gnatRm \"                  &\n+                                            \"MECHANISMS_FILE \"             &\n+                                               \"-gnatRms\";\n    --        /NOREPRESENTATION_INFO (D)\n    --        /REPRESENTATION_INFO[=(keyword[,...])]\n    --\n@@ -2330,6 +2334,13 @@ package VMS_Data is\n    --                        with the name 'file_rep' where 'file' is the name\n    --                        of the corresponding source file.\n    --\n+   --        MECHANISMS      List convention and argument passing mechanisms\n+   --                        for all subprograms\n+   --\n+   --        MECHANISMS_FILE Similar to MECHANISMS, but the output is to a file\n+   --                        with the name 'file_rep' where file is the name\n+   --                        of the corresponding source file.\n+   --\n    --        DEFAULT         Equivalent to ARRAYS.\n \n    S_GCC_RepinfX : aliased constant S := \"/NOREPRESENTATION_INFO \"         &\n@@ -2491,7 +2502,7 @@ package VMS_Data is\n                                             \"XTRA_PARENS \"                 &\n                                                \"-gnaty-x \"                 &\n                                             \"NOXTRA_PARENS \"               &\n-                                               \"-gnaty-x \";\n+                                               \"-gnaty-x\";\n    --        /NOSTYLE_CHECKS (D)\n    --        /STYLE_CHECKS[=(keyword,[...])]\n    --"}]}