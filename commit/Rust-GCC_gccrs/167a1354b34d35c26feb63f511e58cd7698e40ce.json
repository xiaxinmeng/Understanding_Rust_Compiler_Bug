{"sha": "167a1354b34d35c26feb63f511e58cd7698e40ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTY3YTEzNTRiMzRkMzVjMjZmZWI2M2Y1MTFlNThjZDc2OThlNDBjZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2004-11-22T18:32:26Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-11-22T18:32:26Z"}, "message": "* config/sparc/sparc.c (mem_min_alignment): Check MEM_ALIGN.\n\nFrom-SVN: r91021", "tree": {"sha": "af0f69e325352ab0ca5136544bfcb88d1dfa0d4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af0f69e325352ab0ca5136544bfcb88d1dfa0d4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/167a1354b34d35c26feb63f511e58cd7698e40ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/167a1354b34d35c26feb63f511e58cd7698e40ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/167a1354b34d35c26feb63f511e58cd7698e40ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/167a1354b34d35c26feb63f511e58cd7698e40ce/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4e596a097d6d14a5f03ec8d8c2b9ae0a84e9f958", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e596a097d6d14a5f03ec8d8c2b9ae0a84e9f958", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e596a097d6d14a5f03ec8d8c2b9ae0a84e9f958"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "3f81dc7f3eb98055159734ec150a0346f44f035f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/167a1354b34d35c26feb63f511e58cd7698e40ce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/167a1354b34d35c26feb63f511e58cd7698e40ce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=167a1354b34d35c26feb63f511e58cd7698e40ce", "patch": "@@ -1,3 +1,7 @@\n+2004-11-22  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* config/sparc/sparc.c (mem_min_alignment): Check MEM_ALIGN.\n+\n 2004-11-22  David Edelsohn  <edelsohn@gnu.org>\n \n \t* config/rs6000/power4.md: Remove delay between dispatch and issue"}, {"sha": "dcacae20d4b7a594af10f0cf0cf14cd787bc080a", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/167a1354b34d35c26feb63f511e58cd7698e40ce/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/167a1354b34d35c26feb63f511e58cd7698e40ce/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=167a1354b34d35c26feb63f511e58cd7698e40ce", "patch": "@@ -3983,6 +3983,12 @@ mem_min_alignment (rtx mem, int desired)\n   if (GET_CODE (mem) != MEM)\n     return 0;\n \n+  /* Obviously...  */\n+  if (MEM_ALIGN (mem) / BITS_PER_UNIT >= (unsigned)desired)\n+    return 1;\n+\n+  /* ??? The rest of the function predates MEM_ALIGN so\n+     there is probably a bit of redundancy.  */\n   addr = XEXP (mem, 0);\n   base = offset = NULL_RTX;\n   if (GET_CODE (addr) == PLUS)"}]}