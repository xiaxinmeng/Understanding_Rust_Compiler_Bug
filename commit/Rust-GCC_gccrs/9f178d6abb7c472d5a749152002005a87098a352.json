{"sha": "9f178d6abb7c472d5a749152002005a87098a352", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWYxNzhkNmFiYjdjNDcyZDVhNzQ5MTUyMDAyMDA1YTg3MDk4YTM1Mg==", "commit": {"author": {"name": "Charles Baylis", "email": "charles.baylis@linaro.org", "date": "2013-12-19T16:54:16Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2013-12-19T16:54:16Z"}, "message": "re PR target/59142 (internal compiler error while compiling OpenCV 2.4.7)\n\n2013-12-19  Charles Baylis  <charles.baylis@linaro.org>\n\n\tPR target/59142\n\tgcc/\n\t* config/arm/arm-ldmstm.ml: Use low_register_operand for Thumb\n\tpatterns.\n\t* config/arm/ldmstm.md: Regenerate.\n\nFrom-SVN: r206125", "tree": {"sha": "20c3ced122c1f525c6a23c6c32622ca2b37cb170", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20c3ced122c1f525c6a23c6c32622ca2b37cb170"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f178d6abb7c472d5a749152002005a87098a352", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f178d6abb7c472d5a749152002005a87098a352", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f178d6abb7c472d5a749152002005a87098a352", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f178d6abb7c472d5a749152002005a87098a352/comments", "author": null, "committer": null, "parents": [{"sha": "0315864862b264c7f7dbb8fcc66aadc2e563f195", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0315864862b264c7f7dbb8fcc66aadc2e563f195", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0315864862b264c7f7dbb8fcc66aadc2e563f195"}], "stats": {"total": 72, "additions": 41, "deletions": 31}, "files": [{"sha": "7786c661797cceccdd95cc029574e5ad7bc06a09", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f178d6abb7c472d5a749152002005a87098a352/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f178d6abb7c472d5a749152002005a87098a352/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f178d6abb7c472d5a749152002005a87098a352", "patch": "@@ -1,8 +1,15 @@\n 2013-12-19  Charles Baylis  <charles.baylis@linaro.org>\n \n \tPR target/59142\n-\t* arm/predicates.md (arm_hard_general_register_operand): New\n-\tpredicate.\n+\t* config/arm/arm-ldmstm.ml: Use low_register_operand for Thumb\n+\tpatterns.\n+\t* config/arm/ldmstm.md: Regenerate.\n+\n+2013-12-19  Charles Baylis  <charles.baylis@linaro.org>\n+\n+\tPR target/59142\n+\t* config/arm/predicates.md (arm_hard_general_register_operand):\n+\tNew predicate.\n \t(arm_hard_register_operand): Remove.\n \t* config/arm/arm-ldmstm.ml: Use arm_hard_general_register_operand\n \tfor all patterns."}, {"sha": "682aa2c8ee30b742a2ddbb82de8b362093b9b120", "filename": "gcc/config/arm/arm-ldmstm.ml", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f178d6abb7c472d5a749152002005a87098a352/gcc%2Fconfig%2Farm%2Farm-ldmstm.ml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f178d6abb7c472d5a749152002005a87098a352/gcc%2Fconfig%2Farm%2Farm-ldmstm.ml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-ldmstm.ml?ref=9f178d6abb7c472d5a749152002005a87098a352", "patch": "@@ -67,10 +67,13 @@ let destreg nregs first op_type thumb =\n     Printf.sprintf (\"(match_operand:SI %d \\\"s_register_operand\\\" \\\"%s%s\\\")\")\n       (nregs + 1) (inout_constr op_type) (constr thumb)\n \n+let reg_predicate thumb =\n+  if thumb then \"low_register_operand\" else \"arm_hard_general_register_operand\"\n+\n let write_ldm_set thumb nregs offset opnr first =\n   let indent = \"     \" in\n   Printf.printf \"%s\" (if first then \"    [\" else indent);\n-  Printf.printf \"(set (match_operand:SI %d \\\"arm_hard_general_register_operand\\\" \\\"\\\")\\n\" opnr;\n+  Printf.printf \"(set (match_operand:SI %d \\\"%s\\\" \\\"\\\")\\n\" opnr (reg_predicate thumb);\n   Printf.printf \"%s     (mem:SI \" indent;\n   begin if offset != 0 then Printf.printf \"(plus:SI \" end;\n   Printf.printf \"%s\" (destreg nregs first IN thumb);\n@@ -84,7 +87,7 @@ let write_stm_set thumb nregs offset opnr first =\n   begin if offset != 0 then Printf.printf \"(plus:SI \" end;\n   Printf.printf \"%s\" (destreg nregs first IN thumb);\n   begin if offset != 0 then Printf.printf \" (const_int %d))\" offset end;\n-  Printf.printf \")\\n%s     (match_operand:SI %d \\\"arm_hard_general_register_operand\\\" \\\"\\\"))\" indent opnr \n+  Printf.printf \")\\n%s     (match_operand:SI %d \\\"%s\\\" \\\"\\\"))\" indent opnr (reg_predicate thumb)\n \n let write_ldm_peep_set extra_indent nregs opnr first =\n   let indent = \"   \" ^ extra_indent in"}, {"sha": "6e3c5d15a04daa21f88262cd054d18434b8a47fd", "filename": "gcc/config/arm/ldmstm.md", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f178d6abb7c472d5a749152002005a87098a352/gcc%2Fconfig%2Farm%2Fldmstm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f178d6abb7c472d5a749152002005a87098a352/gcc%2Fconfig%2Farm%2Fldmstm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fldmstm.md?ref=9f178d6abb7c472d5a749152002005a87098a352", "patch": "@@ -42,15 +42,15 @@\n \n (define_insn \"*thumb_ldm4_ia\"\n   [(match_parallel 0 \"load_multiple_operation\"\n-    [(set (match_operand:SI 1 \"arm_hard_general_register_operand\" \"\")\n+    [(set (match_operand:SI 1 \"low_register_operand\" \"\")\n           (mem:SI (match_operand:SI 5 \"s_register_operand\" \"l\")))\n-     (set (match_operand:SI 2 \"arm_hard_general_register_operand\" \"\")\n+     (set (match_operand:SI 2 \"low_register_operand\" \"\")\n           (mem:SI (plus:SI (match_dup 5)\n                   (const_int 4))))\n-     (set (match_operand:SI 3 \"arm_hard_general_register_operand\" \"\")\n+     (set (match_operand:SI 3 \"low_register_operand\" \"\")\n           (mem:SI (plus:SI (match_dup 5)\n                   (const_int 8))))\n-     (set (match_operand:SI 4 \"arm_hard_general_register_operand\" \"\")\n+     (set (match_operand:SI 4 \"low_register_operand\" \"\")\n           (mem:SI (plus:SI (match_dup 5)\n                   (const_int 12))))])]\n   \"TARGET_THUMB1 && XVECLEN (operands[0], 0) == 4\"\n@@ -82,15 +82,15 @@\n   [(match_parallel 0 \"load_multiple_operation\"\n     [(set (match_operand:SI 5 \"s_register_operand\" \"+&l\")\n           (plus:SI (match_dup 5) (const_int 16)))\n-     (set (match_operand:SI 1 \"arm_hard_general_register_operand\" \"\")\n+     (set (match_operand:SI 1 \"low_register_operand\" \"\")\n           (mem:SI (match_dup 5)))\n-     (set (match_operand:SI 2 \"arm_hard_general_register_operand\" \"\")\n+     (set (match_operand:SI 2 \"low_register_operand\" \"\")\n           (mem:SI (plus:SI (match_dup 5)\n                   (const_int 4))))\n-     (set (match_operand:SI 3 \"arm_hard_general_register_operand\" \"\")\n+     (set (match_operand:SI 3 \"low_register_operand\" \"\")\n           (mem:SI (plus:SI (match_dup 5)\n                   (const_int 8))))\n-     (set (match_operand:SI 4 \"arm_hard_general_register_operand\" \"\")\n+     (set (match_operand:SI 4 \"low_register_operand\" \"\")\n           (mem:SI (plus:SI (match_dup 5)\n                   (const_int 12))))])]\n   \"TARGET_THUMB1 && XVECLEN (operands[0], 0) == 5\"\n@@ -136,13 +136,13 @@\n     [(set (match_operand:SI 5 \"s_register_operand\" \"+&l\")\n           (plus:SI (match_dup 5) (const_int 16)))\n      (set (mem:SI (match_dup 5))\n-          (match_operand:SI 1 \"arm_hard_general_register_operand\" \"\"))\n+          (match_operand:SI 1 \"low_register_operand\" \"\"))\n      (set (mem:SI (plus:SI (match_dup 5) (const_int 4)))\n-          (match_operand:SI 2 \"arm_hard_general_register_operand\" \"\"))\n+          (match_operand:SI 2 \"low_register_operand\" \"\"))\n      (set (mem:SI (plus:SI (match_dup 5) (const_int 8)))\n-          (match_operand:SI 3 \"arm_hard_general_register_operand\" \"\"))\n+          (match_operand:SI 3 \"low_register_operand\" \"\"))\n      (set (mem:SI (plus:SI (match_dup 5) (const_int 12)))\n-          (match_operand:SI 4 \"arm_hard_general_register_operand\" \"\"))])]\n+          (match_operand:SI 4 \"low_register_operand\" \"\"))])]\n   \"TARGET_THUMB1 && XVECLEN (operands[0], 0) == 5\"\n   \"stm%(ia%)\\t%5!, {%1, %2, %3, %4}\"\n   [(set_attr \"type\" \"store4\")])\n@@ -490,12 +490,12 @@\n \n (define_insn \"*thumb_ldm3_ia\"\n   [(match_parallel 0 \"load_multiple_operation\"\n-    [(set (match_operand:SI 1 \"arm_hard_general_register_operand\" \"\")\n+    [(set (match_operand:SI 1 \"low_register_operand\" \"\")\n           (mem:SI (match_operand:SI 4 \"s_register_operand\" \"l\")))\n-     (set (match_operand:SI 2 \"arm_hard_general_register_operand\" \"\")\n+     (set (match_operand:SI 2 \"low_register_operand\" \"\")\n           (mem:SI (plus:SI (match_dup 4)\n                   (const_int 4))))\n-     (set (match_operand:SI 3 \"arm_hard_general_register_operand\" \"\")\n+     (set (match_operand:SI 3 \"low_register_operand\" \"\")\n           (mem:SI (plus:SI (match_dup 4)\n                   (const_int 8))))])]\n   \"TARGET_THUMB1 && XVECLEN (operands[0], 0) == 3\"\n@@ -524,12 +524,12 @@\n   [(match_parallel 0 \"load_multiple_operation\"\n     [(set (match_operand:SI 4 \"s_register_operand\" \"+&l\")\n           (plus:SI (match_dup 4) (const_int 12)))\n-     (set (match_operand:SI 1 \"arm_hard_general_register_operand\" \"\")\n+     (set (match_operand:SI 1 \"low_register_operand\" \"\")\n           (mem:SI (match_dup 4)))\n-     (set (match_operand:SI 2 \"arm_hard_general_register_operand\" \"\")\n+     (set (match_operand:SI 2 \"low_register_operand\" \"\")\n           (mem:SI (plus:SI (match_dup 4)\n                   (const_int 4))))\n-     (set (match_operand:SI 3 \"arm_hard_general_register_operand\" \"\")\n+     (set (match_operand:SI 3 \"low_register_operand\" \"\")\n           (mem:SI (plus:SI (match_dup 4)\n                   (const_int 8))))])]\n   \"TARGET_THUMB1 && XVECLEN (operands[0], 0) == 4\"\n@@ -571,11 +571,11 @@\n     [(set (match_operand:SI 4 \"s_register_operand\" \"+&l\")\n           (plus:SI (match_dup 4) (const_int 12)))\n      (set (mem:SI (match_dup 4))\n-          (match_operand:SI 1 \"arm_hard_general_register_operand\" \"\"))\n+          (match_operand:SI 1 \"low_register_operand\" \"\"))\n      (set (mem:SI (plus:SI (match_dup 4) (const_int 4)))\n-          (match_operand:SI 2 \"arm_hard_general_register_operand\" \"\"))\n+          (match_operand:SI 2 \"low_register_operand\" \"\"))\n      (set (mem:SI (plus:SI (match_dup 4) (const_int 8)))\n-          (match_operand:SI 3 \"arm_hard_general_register_operand\" \"\"))])]\n+          (match_operand:SI 3 \"low_register_operand\" \"\"))])]\n   \"TARGET_THUMB1 && XVECLEN (operands[0], 0) == 4\"\n   \"stm%(ia%)\\t%4!, {%1, %2, %3}\"\n   [(set_attr \"type\" \"store3\")])\n@@ -876,9 +876,9 @@\n \n (define_insn \"*thumb_ldm2_ia\"\n   [(match_parallel 0 \"load_multiple_operation\"\n-    [(set (match_operand:SI 1 \"arm_hard_general_register_operand\" \"\")\n+    [(set (match_operand:SI 1 \"low_register_operand\" \"\")\n           (mem:SI (match_operand:SI 3 \"s_register_operand\" \"l\")))\n-     (set (match_operand:SI 2 \"arm_hard_general_register_operand\" \"\")\n+     (set (match_operand:SI 2 \"low_register_operand\" \"\")\n           (mem:SI (plus:SI (match_dup 3)\n                   (const_int 4))))])]\n   \"TARGET_THUMB1 && XVECLEN (operands[0], 0) == 2\"\n@@ -904,9 +904,9 @@\n   [(match_parallel 0 \"load_multiple_operation\"\n     [(set (match_operand:SI 3 \"s_register_operand\" \"+&l\")\n           (plus:SI (match_dup 3) (const_int 8)))\n-     (set (match_operand:SI 1 \"arm_hard_general_register_operand\" \"\")\n+     (set (match_operand:SI 1 \"low_register_operand\" \"\")\n           (mem:SI (match_dup 3)))\n-     (set (match_operand:SI 2 \"arm_hard_general_register_operand\" \"\")\n+     (set (match_operand:SI 2 \"low_register_operand\" \"\")\n           (mem:SI (plus:SI (match_dup 3)\n                   (const_int 4))))])]\n   \"TARGET_THUMB1 && XVECLEN (operands[0], 0) == 3\"\n@@ -944,9 +944,9 @@\n     [(set (match_operand:SI 3 \"s_register_operand\" \"+&l\")\n           (plus:SI (match_dup 3) (const_int 8)))\n      (set (mem:SI (match_dup 3))\n-          (match_operand:SI 1 \"arm_hard_general_register_operand\" \"\"))\n+          (match_operand:SI 1 \"low_register_operand\" \"\"))\n      (set (mem:SI (plus:SI (match_dup 3) (const_int 4)))\n-          (match_operand:SI 2 \"arm_hard_general_register_operand\" \"\"))])]\n+          (match_operand:SI 2 \"low_register_operand\" \"\"))])]\n   \"TARGET_THUMB1 && XVECLEN (operands[0], 0) == 3\"\n   \"stm%(ia%)\\t%3!, {%1, %2}\"\n   [(set_attr \"type\" \"store2\")])"}]}