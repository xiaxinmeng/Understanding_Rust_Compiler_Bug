{"sha": "443aa7d5764a1786880bf6d10f522f5e3cfe2795", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQzYWE3ZDU3NjRhMTc4Njg4MGJmNmQxMGY1MjJmNWUzY2ZlMjc5NQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-08-29T11:40:47Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-08-29T11:40:47Z"}, "message": "re PR middle-end/37236 (ICE: in mark_operand_necessary, at tree-ssa-dce.c:242)\n\n2008-08-29  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/37236\n\t* tree-ssa-structalias.c (intra_create_variable_infos): Mark\n\tPARAM_NOALIAS tags with is_heapvar.\n\t* tree-ssa-operands.c (access_can_touch_variable): Offset\n\tbased tests do not apply for heapvars.  Fix offset test.\n\n\t* gfortran.fortran-torture/compile/pr37236.f: New testcase.\n\nFrom-SVN: r139763", "tree": {"sha": "dc8788bf2f2b7a8da7c763095a173b0fd86a9e23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc8788bf2f2b7a8da7c763095a173b0fd86a9e23"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/443aa7d5764a1786880bf6d10f522f5e3cfe2795", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/443aa7d5764a1786880bf6d10f522f5e3cfe2795", "html_url": "https://github.com/Rust-GCC/gccrs/commit/443aa7d5764a1786880bf6d10f522f5e3cfe2795", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/443aa7d5764a1786880bf6d10f522f5e3cfe2795/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fcbe056b117ca90358096b0dc75b0072a5722580", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcbe056b117ca90358096b0dc75b0072a5722580", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcbe056b117ca90358096b0dc75b0072a5722580"}], "stats": {"total": 139, "additions": 118, "deletions": 21}, "files": [{"sha": "87290dccf119e5781fc40a0f148b60264302eae4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/443aa7d5764a1786880bf6d10f522f5e3cfe2795/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/443aa7d5764a1786880bf6d10f522f5e3cfe2795/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=443aa7d5764a1786880bf6d10f522f5e3cfe2795", "patch": "@@ -1,3 +1,11 @@\n+2008-08-29  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/37236\n+\t* tree-ssa-structalias.c (intra_create_variable_infos): Mark\n+\tPARAM_NOALIAS tags with is_heapvar.\n+\t* tree-ssa-operands.c (access_can_touch_variable): Offset\n+\tbased tests do not apply for heapvars.  Fix offset test.\n+\n 2008-08-29  Jan Hubicka  <jh@suse.cz>\n \n \t* doc/invoke.texi (-fipa-cp): Enabled by default at -O2/-Os/-O3"}, {"sha": "d33671917d55919179ee657f87bc6e117e41cb9b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/443aa7d5764a1786880bf6d10f522f5e3cfe2795/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/443aa7d5764a1786880bf6d10f522f5e3cfe2795/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=443aa7d5764a1786880bf6d10f522f5e3cfe2795", "patch": "@@ -1,3 +1,8 @@\n+2008-08-29  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/37236\n+\t* gfortran.fortran-torture/compile/pr37236.f: New testcase.\n+\n 2008-08-29  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/37207"}, {"sha": "8f7cc3695680581d3ac2eb5562c131659f622770", "filename": "gcc/testsuite/gfortran.fortran-torture/compile/pr37236.f", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/443aa7d5764a1786880bf6d10f522f5e3cfe2795/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fpr37236.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/443aa7d5764a1786880bf6d10f522f5e3cfe2795/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fpr37236.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fpr37236.f?ref=443aa7d5764a1786880bf6d10f522f5e3cfe2795", "patch": "@@ -0,0 +1,82 @@\n+C\n+      SUBROUTINE FFTRC  (A,N,X,IWK,WK)\n+C                                  SPECIFICATIONS FOR ARGUMENTS\n+      INTEGER            N,IWK(1)\n+      REAL*8             A(N),WK(1)\n+      COMPLEX*16         X(1)\n+C                                  SPECIFICATIONS FOR LOCAL VARIABLES\n+      INTEGER            ND2P1,ND2,I,MTWO,M,IMAX,ND4,NP2,K,NMK,J\n+      REAL*8             RPI,ZERO,ONE,HALF,THETA,TP,G(2),B(2),Z(2),AI,\n+     1                   AR\n+      COMPLEX*16         XIMAG,ALPH,BETA,GAM,S1,ZD\n+      EQUIVALENCE        (GAM,G(1)),(ALPH,B(1)),(Z(1),AR),(Z(2),AI),\n+     1                   (ZD,Z(1))\n+      DATA               ZERO/0.0D0/,HALF/0.5D0/,ONE/1.0D0/,IMAX/24/\n+      DATA               RPI/3.141592653589793D0/\n+C                                  FIRST EXECUTABLE STATEMENT\n+      IF (N .NE. 2) GO TO 5\n+C                                  N EQUAL TO 2\n+      ZD = DCMPLX(A(1),A(2))\n+      THETA = AR\n+      TP = AI\n+      X(2) = DCMPLX(THETA-TP,ZERO)\n+      X(1) = DCMPLX(THETA+TP,ZERO)\n+      GO TO 9005\n+    5 CONTINUE\n+C                                  N GREATER THAN 2\n+      ND2 = N/2\n+      ND2P1 = ND2+1\n+C                                  MOVE A TO X\n+      J = 1\n+      DO 6 I=1,ND2\n+         X(I) = DCMPLX(A(J),A(J+1))\n+         J = J+2\n+    6 CONTINUE\n+C                                  COMPUTE THE CENTER COEFFICIENT\n+      GAM = DCMPLX(ZERO,ZERO)\n+      DO 10 I=1,ND2\n+         GAM = GAM + X(I)\n+   10 CONTINUE\n+      TP = G(1)-G(2)\n+      GAM = DCMPLX(TP,ZERO)\n+C                                  DETERMINE THE SMALLEST M SUCH THAT\n+C                                  N IS LESS THAN OR EQUAL TO 2**M\n+      MTWO = 2\n+      M = 1\n+      DO 15 I=1,IMAX\n+         IF (ND2 .LE. MTWO) GO TO 20\n+         MTWO = MTWO+MTWO\n+         M = M+1\n+   15 CONTINUE\n+   20 IF (ND2 .EQ. MTWO) GO TO 25\n+C                                  N IS NOT A POWER OF TWO, CALL FFTCC\n+      CALL FFTCC (X,ND2,IWK,WK)\n+      GO TO 30\n+C                                  N IS A POWER OF TWO, CALL FFT2C\n+   25 CALL FFT2C (X,M,IWK)\n+   30 ALPH = X(1)\n+      X(1) = B(1) + B(2)\n+      ND4 = (ND2+1)/2\n+      IF (ND4 .LT. 2) GO TO 40\n+      NP2 = ND2 + 2\n+      THETA = RPI/ND2\n+      TP = THETA\n+      XIMAG = DCMPLX(ZERO,ONE)\n+C                                  DECOMPOSE THE COMPLEX VECTOR X\n+C                                  INTO THE COMPONENTS OF THE TRANSFORM\n+C                                  OF THE INPUT DATA.\n+      DO 35 K = 2,ND4\n+         NMK = NP2 - K\n+         S1 = DCONJG(X(NMK))\n+         ALPH = X(K) + S1\n+         BETA = XIMAG*(S1-X(K))\n+         S1 = DCMPLX(DCOS(THETA),DSIN(THETA))\n+         X(K) = (ALPH+BETA*S1)*HALF\n+         X(NMK) = DCONJG(ALPH-BETA*S1)*HALF\n+         THETA = THETA + TP\n+   35 CONTINUE\n+   40 CONTINUE\n+      X(ND2P1) = GAM\n+ 9005 RETURN\n+      END\n+"}, {"sha": "801d2debabbc886c33a358929c2bef9e095ce604", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 22, "deletions": 21, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/443aa7d5764a1786880bf6d10f522f5e3cfe2795/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/443aa7d5764a1786880bf6d10f522f5e3cfe2795/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=443aa7d5764a1786880bf6d10f522f5e3cfe2795", "patch": "@@ -1247,26 +1247,26 @@ access_can_touch_variable (tree ref, tree alias, HOST_WIDE_INT offset,\n      D.874_2 = (*my_char_ref_1)[1]{lb: 1 sz: 1};\n   */\n   if (ref \n-\t   && flag_strict_aliasing\n-\t   && TREE_CODE (ref) != INDIRECT_REF\n-\t   && !MTAG_P (alias)\n-\t   && base\n-\t   && (TREE_CODE (base) != INDIRECT_REF\n-\t       || TREE_CODE (TREE_TYPE (base)) != UNION_TYPE)\n-\t   && (TREE_CODE (base) != INDIRECT_REF\n-\t       || TREE_CODE (ref) != ARRAY_REF\n-\t       || offset != 0\n-\t       || (DECL_SIZE (alias)\n-\t\t   && TREE_CODE (DECL_SIZE (alias)) == INTEGER_CST\n-\t\t   && size != -1\n-\t\t   && (unsigned HOST_WIDE_INT)size\n-\t\t      != TREE_INT_CST_LOW (DECL_SIZE (alias))))\n-\t   && !AGGREGATE_TYPE_P (TREE_TYPE (alias))\n-\t   && TREE_CODE (TREE_TYPE (alias)) != COMPLEX_TYPE\n-\t   && !var_ann (alias)->is_heapvar\n-\t   /* When the struct has may_alias attached to it, we need not to\n-\t      return true.  */\n-\t   && get_alias_set (base))\n+      && flag_strict_aliasing\n+      && TREE_CODE (ref) != INDIRECT_REF\n+      && !MTAG_P (alias)\n+      && base\n+      && (TREE_CODE (base) != INDIRECT_REF\n+\t  || TREE_CODE (TREE_TYPE (base)) != UNION_TYPE)\n+      && (TREE_CODE (base) != INDIRECT_REF\n+\t  || TREE_CODE (ref) != ARRAY_REF\n+\t  || offset != 0\n+\t  || (DECL_SIZE (alias)\n+\t      && TREE_CODE (DECL_SIZE (alias)) == INTEGER_CST\n+\t      && size != -1\n+\t      && (unsigned HOST_WIDE_INT)size\n+\t      != TREE_INT_CST_LOW (DECL_SIZE (alias))))\n+      && !AGGREGATE_TYPE_P (TREE_TYPE (alias))\n+      && TREE_CODE (TREE_TYPE (alias)) != COMPLEX_TYPE\n+      && !var_ann (alias)->is_heapvar\n+      /* When the struct has may_alias attached to it, we need not to\n+\t return true.  */\n+      && get_alias_set (base))\n     {\n #ifdef ACCESS_DEBUGGING\n       fprintf (stderr, \"Access to \");\n@@ -1285,11 +1285,12 @@ access_can_touch_variable (tree ref, tree alias, HOST_WIDE_INT offset,\n \t   && flag_strict_aliasing\n \t   && TREE_CODE (ref) != INDIRECT_REF\n \t   && !MTAG_P (alias)\n+\t   && !var_ann (alias)->is_heapvar\n \t   && !POINTER_TYPE_P (TREE_TYPE (alias))\n \t   && offsetgtz\n \t   && DECL_SIZE (alias)\n \t   && TREE_CODE (DECL_SIZE (alias)) == INTEGER_CST\n-\t   && uoffset > TREE_INT_CST_LOW (DECL_SIZE (alias)))\n+\t   && uoffset >= TREE_INT_CST_LOW (DECL_SIZE (alias)))\n     {\n #ifdef ACCESS_DEBUGGING\n       fprintf (stderr, \"Access to \");"}, {"sha": "db0912abe8a283f225ee34f5c116c1da154317b7", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/443aa7d5764a1786880bf6d10f522f5e3cfe2795/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/443aa7d5764a1786880bf6d10f522f5e3cfe2795/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=443aa7d5764a1786880bf6d10f522f5e3cfe2795", "patch": "@@ -4551,6 +4551,7 @@ intra_create_variable_infos (void)\n \t      heapvar_insert (t, heapvar);\n \n \t      ann = get_var_ann (heapvar);\n+\t      ann->is_heapvar = 1;\n \t      if (flag_argument_noalias == 1)\n \t\tann->noalias_state = NO_ALIAS;\n \t      else if (flag_argument_noalias == 2)"}]}