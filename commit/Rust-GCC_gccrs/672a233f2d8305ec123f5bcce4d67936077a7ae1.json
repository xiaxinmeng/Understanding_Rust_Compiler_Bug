{"sha": "672a233f2d8305ec123f5bcce4d67936077a7ae1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjcyYTIzM2YyZDgzMDVlYzEyM2Y1YmNjZTRkNjc5MzYwNzdhN2FlMQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@cygnus.com", "date": "1998-07-06T23:03:02Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-07-06T23:03:02Z"}, "message": "cygwin32.h: Add some declaration of external functions.\n\n\ufffd\n\t* i386/cygwin32.h: Add some declaration of external functions.\n \t(ASM_DECLARE_FUNCTION_NAME): Define.\n\t(ASM_OUTPUT_EXTERNAL, ASM_OUTPUT_EXTERNAL_LIBCALL): Define.\n\t(ASM_FILE_END): Define.\n\t* i386/winnt.c (i386_pe_declare_function_type): New function.\n\t(struct extern_list, extern_head): Define.\n\t(i386_pe_record_external_function): New function.\n\t(i386_pe_asm_file_end): New function.\n\nCo-Authored-By: Jeffrey A Law <law@cygnus.com>\n\nFrom-SVN: r20976", "tree": {"sha": "d3755821a0532ed7e3136fb96afb4d7b56f8fdcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3755821a0532ed7e3136fb96afb4d7b56f8fdcb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/672a233f2d8305ec123f5bcce4d67936077a7ae1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/672a233f2d8305ec123f5bcce4d67936077a7ae1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/672a233f2d8305ec123f5bcce4d67936077a7ae1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/672a233f2d8305ec123f5bcce4d67936077a7ae1/comments", "author": null, "committer": null, "parents": [{"sha": "b294ca3876dd7469827b0fcf4b542c79565c3cee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b294ca3876dd7469827b0fcf4b542c79565c3cee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b294ca3876dd7469827b0fcf4b542c79565c3cee"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "73f591740e06034e995a4c480c7e7f9a7f6688a3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/672a233f2d8305ec123f5bcce4d67936077a7ae1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/672a233f2d8305ec123f5bcce4d67936077a7ae1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=672a233f2d8305ec123f5bcce4d67936077a7ae1", "patch": "@@ -52,6 +52,16 @@ Mon Jul  6 22:14:31 1998  Richard Henderson  (rth@cygnus.com)\n Mon Jul  6 22:09:32 1998  Ian Lance Taylor  <ian@cygnus.com>\n \t\t\t  Jeff Law\t    <law@cygnus.com>\n \n+\n+\t* i386/cygwin32.h: Add some declaration of external functions.\n+ \t(ASM_DECLARE_FUNCTION_NAME): Define.\n+\t(ASM_OUTPUT_EXTERNAL, ASM_OUTPUT_EXTERNAL_LIBCALL): Define.\n+\t(ASM_FILE_END): Define.\n+\t* i386/winnt.c (i386_pe_declare_function_type): New function.\n+\t(struct extern_list, extern_head): Define.\n+\t(i386_pe_record_external_function): New function.\n+\t(i386_pe_asm_file_end): New function.\n+\n \t* cpplib.c (cpp_options_init): Initialize cplusplus_comments to 1,\n \tmatching July 18, 1995 change to cccp.c.  If -traditional then\n \tdisable cplusplus_comments."}, {"sha": "1677422af9119fd84322103bc44e37e2fbeab6ce", "filename": "gcc/config/i386/cygwin32.h", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/672a233f2d8305ec123f5bcce4d67936077a7ae1/gcc%2Fconfig%2Fi386%2Fcygwin32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/672a233f2d8305ec123f5bcce4d67936077a7ae1/gcc%2Fconfig%2Fi386%2Fcygwin32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin32.h?ref=672a233f2d8305ec123f5bcce4d67936077a7ae1", "patch": "@@ -224,6 +224,36 @@ do {\t\t\t\t\t\t\t\t\\\n \t     ? \"discard\" : \"same_size\");\t\t\t\\\n } while (0)\n \n+/* Write the extra assembler code needed to declare a function\n+   properly.  If we are generating SDB debugging information, this\n+   will happen automatically, so we only need to handle other cases.  */\n+#define ASM_DECLARE_FUNCTION_NAME(FILE, NAME, DECL)\t\t\t\\\n+  do\t\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      if (write_symbols != SDB_DEBUG)\t\t\t\t\t\\\n+\ti386_pe_declare_function_type (FILE, NAME, TREE_PUBLIC (DECL));\t\\\n+      ASM_OUTPUT_LABEL (FILE, NAME);\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  while (0)\n+\n+/* Add an external function to the list of functions to be declared at\n+   the end of the file.  */\n+#define ASM_OUTPUT_EXTERNAL(FILE, DECL, NAME)\t\t\t\t\\\n+  do\t\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      if (TREE_CODE (DECL) == FUNCTION_DECL)\t\t\t\t\\\n+\ti386_pe_record_external_function (NAME);\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  while (0)\n+\n+/* Declare the type properly for any external libcall.  */\n+#define ASM_OUTPUT_EXTERNAL_LIBCALL(FILE, FUN) \\\n+  i386_pe_declare_function_type (FILE, XSTR (FUN, 0), 1)\n+\n+/* Output function declarations at the end of the file.  */\n+#define ASM_FILE_END(FILE) \\\n+  i386_pe_asm_file_end (FILE)\n+\n #undef ASM_COMMENT_START\n #define ASM_COMMENT_START \" #\"\n \n@@ -232,3 +262,23 @@ do {\t\t\t\t\t\t\t\t\\\n \n /* Don't assume anything about the header files. */\n #define NO_IMPLICIT_EXTERN_C\n+\n+/* External function declarations.  */\n+\n+#ifndef PROTO\n+#if defined (USE_PROTOTYPES) ? USE_PROTOTYPES : defined (__STDC__)\n+#define PROTO(ARGS) ARGS\n+#else\n+#define PROTO(ARGS) ()\n+#endif\n+#endif\n+\n+#ifdef BUFSIZE\t\t/* stdio.h has been included, ok to use FILE * */\n+#define STDIO_PROTO(ARGS) PROTO(ARGS)\n+#else\n+#define STDIO_PROTO(ARGS) ()\n+#endif\n+\n+extern void i386_pe_record_external_function PROTO((char *));\n+extern void i386_pe_declare_function_type STDIO_PROTO((FILE *, char *, int));\n+extern void i386_pe_asm_file_end STDIO_PROTO((FILE *));"}]}