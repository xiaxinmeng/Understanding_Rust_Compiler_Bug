{"sha": "42f4e23992487ecacba70575bf88af11288f557f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJmNGUyMzk5MjQ4N2VjYWNiYTcwNTc1YmY4OGFmMTEyODhmNTU3Zg==", "commit": {"author": {"name": "Sebastian Huber", "email": "sebastian.huber@embedded-brains.de", "date": "2021-01-14T18:09:36Z"}, "committer": {"name": "Sebastian Huber", "email": "sebastian.huber@embedded-brains.de", "date": "2021-01-16T16:54:27Z"}, "message": "nios2: Add -mcustom-fpu-cfg=fph2\n\nThe new -mcustom-fpu-cfg=fph2 option variant is useful to build a\nmultilib for the \"Nios II Floating Point Hardware 2 Component\":\n\nhttps://www.intel.com/content/dam/www/programmable/us/en/pdfs/literature/ug/ug_nios2_custom_instruction.pdf\n\nDirectly using the corresponding -mcustom-insn=N options for this\nfloating-point unit leads to a combinatorial explosion in the potential\ncount of multilibs which may break the build.\n\ngcc/\n\n\t* config/nios2/nios2.c (NIOS2_FPU_CONFIG_NUM): Adjust value.\n\t(nios2_init_fpu_configs): Provide register values for new\n\t-mcustom-fpu-cfg=fph2 option variant.\n\t* doc/invoke.texi (-mcustom-fpu-cfg=fph2): Document new option\n\tvariant.", "tree": {"sha": "272c0dae757db0c4932f9c61f9721b257b3e6313", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/272c0dae757db0c4932f9c61f9721b257b3e6313"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42f4e23992487ecacba70575bf88af11288f557f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42f4e23992487ecacba70575bf88af11288f557f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42f4e23992487ecacba70575bf88af11288f557f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42f4e23992487ecacba70575bf88af11288f557f/comments", "author": {"login": "sebhub", "id": 932056, "node_id": "MDQ6VXNlcjkzMjA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/932056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebhub", "html_url": "https://github.com/sebhub", "followers_url": "https://api.github.com/users/sebhub/followers", "following_url": "https://api.github.com/users/sebhub/following{/other_user}", "gists_url": "https://api.github.com/users/sebhub/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebhub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebhub/subscriptions", "organizations_url": "https://api.github.com/users/sebhub/orgs", "repos_url": "https://api.github.com/users/sebhub/repos", "events_url": "https://api.github.com/users/sebhub/events{/privacy}", "received_events_url": "https://api.github.com/users/sebhub/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sebhub", "id": 932056, "node_id": "MDQ6VXNlcjkzMjA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/932056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebhub", "html_url": "https://github.com/sebhub", "followers_url": "https://api.github.com/users/sebhub/followers", "following_url": "https://api.github.com/users/sebhub/following{/other_user}", "gists_url": "https://api.github.com/users/sebhub/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebhub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebhub/subscriptions", "organizations_url": "https://api.github.com/users/sebhub/orgs", "repos_url": "https://api.github.com/users/sebhub/repos", "events_url": "https://api.github.com/users/sebhub/events{/privacy}", "received_events_url": "https://api.github.com/users/sebhub/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e02426ba0cc4f97ed347f963a6409b32c3c0c88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e02426ba0cc4f97ed347f963a6409b32c3c0c88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e02426ba0cc4f97ed347f963a6409b32c3c0c88"}], "stats": {"total": 51, "additions": 50, "deletions": 1}, "files": [{"sha": "3ff4ff1bfd29c85f6b6b776c9ec51a1d55b238b3", "filename": "gcc/config/nios2/nios2.c", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f4e23992487ecacba70575bf88af11288f557f/gcc%2Fconfig%2Fnios2%2Fnios2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f4e23992487ecacba70575bf88af11288f557f/gcc%2Fconfig%2Fnios2%2Fnios2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnios2%2Fnios2.c?ref=42f4e23992487ecacba70575bf88af11288f557f", "patch": "@@ -1208,7 +1208,7 @@ struct nios2_fpu_config\n   int code[n2fpu_code_num];\n };\n \n-#define NIOS2_FPU_CONFIG_NUM 3\n+#define NIOS2_FPU_CONFIG_NUM 4\n static struct nios2_fpu_config custom_fpu_config[NIOS2_FPU_CONFIG_NUM];\n \n static void\n@@ -1252,6 +1252,27 @@ nios2_init_fpu_configs (void)\n   cfg->code[n2fpu_fsubs]   = 254;\n   cfg->code[n2fpu_fdivs]   = 255;\n \n+  NEXT_FPU_CONFIG;\n+  cfg->name = \"fph2\";\n+  cfg->code[n2fpu_fabss]   = 224;\n+  cfg->code[n2fpu_fnegs]   = 225;\n+  cfg->code[n2fpu_fcmpnes] = 226;\n+  cfg->code[n2fpu_fcmpeqs] = 227;\n+  cfg->code[n2fpu_fcmpges] = 228;\n+  cfg->code[n2fpu_fcmpgts] = 229;\n+  cfg->code[n2fpu_fcmples] = 230;\n+  cfg->code[n2fpu_fcmplts] = 231;\n+  cfg->code[n2fpu_fmaxs]   = 232;\n+  cfg->code[n2fpu_fmins]   = 233;\n+  cfg->code[n2fpu_round]   = 248;\n+  cfg->code[n2fpu_fixsi]   = 249;\n+  cfg->code[n2fpu_floatis] = 250;\n+  cfg->code[n2fpu_fsqrts]  = 251;\n+  cfg->code[n2fpu_fmuls]   = 252;\n+  cfg->code[n2fpu_fadds]   = 253;\n+  cfg->code[n2fpu_fsubs]   = 254;\n+  cfg->code[n2fpu_fdivs]   = 255;\n+\n #undef NEXT_FPU_CONFIG\n   gcc_assert (i == NIOS2_FPU_CONFIG_NUM);\n }"}, {"sha": "3f30230b0c244245e23e29ea409277528cfc390c", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f4e23992487ecacba70575bf88af11288f557f/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f4e23992487ecacba70575bf88af11288f557f/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=42f4e23992487ecacba70575bf88af11288f557f", "patch": "@@ -26121,6 +26121,26 @@ Currently, the following sets are defined:\n -mcustom-fdivs=255 @gol\n -fsingle-precision-constant}\n \n+@option{-mcustom-fpu-cfg=fph2} is equivalent to:\n+@gccoptlist{-mcustom-fabss=224 @gol\n+-mcustom-fnegs=225 @gol\n+-mcustom-fcmpnes=226 @gol\n+-mcustom-fcmpeqs=227 @gol\n+-mcustom-fcmpges=228 @gol\n+-mcustom-fcmpgts=229 @gol\n+-mcustom-fcmples=230 @gol\n+-mcustom-fcmplts=231 @gol\n+-mcustom-fmaxs=232 @gol\n+-mcustom-fmins=233 @gol\n+-mcustom-round=248 @gol\n+-mcustom-fixsi=249 @gol\n+-mcustom-floatis=250 @gol\n+-mcustom-fsqrts=251 @gol\n+-mcustom-fmuls=252 @gol\n+-mcustom-fadds=253 @gol\n+-mcustom-fsubs=254 @gol\n+-mcustom-fdivs=255 @gol}\n+\n Custom instruction assignments given by individual\n @option{-mcustom-@var{insn}=} options override those given by\n @option{-mcustom-fpu-cfg=}, regardless of the\n@@ -26131,6 +26151,14 @@ configuration by using the @code{target(\"custom-fpu-cfg=@var{name}\")}\n function attribute (@pxref{Function Attributes})\n or pragma (@pxref{Function Specific Option Pragmas}).\n \n+The name @var{fph2} is an abbreviation for @emph{Nios II Floating Point\n+Hardware 2 Component}.  Please note that the custom instructions enabled by\n+@option{-mcustom-fmins=233} and @option{-mcustom-fmaxs=234} are only generated\n+if @option{-ffinite-math-only} is specified.  The custom instruction enabled by\n+@option{-mcustom-round=248} is only generated if @option{-fno-math-errno} is\n+specified.  In contrast to the other configurations,\n+@option{-fsingle-precision-constant} is not set.\n+\n @end table\n \n These additional @samp{-m} options are available for the Altera Nios II"}]}