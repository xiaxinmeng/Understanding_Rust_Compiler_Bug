{"sha": "efa5449a094d3887e124d400ff0410af2c745b2d", "node_id": "C_kwDOANBUbNoAKGVmYTU0NDlhMDk0ZDM4ODdlMTI0ZDQwMGZmMDQxMGFmMmM3NDViMmQ", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2021-09-25T17:50:52Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2021-09-30T13:07:19Z"}, "message": "libphobos: Give _Unwind_Exception an alignment that best resembles __attribute__((aligned))\n\nFor interoperability with C++ EH, the alignment should match, otherwise\nD may not be able to intercept exceptions thrown from C++.\n\nlibphobos/ChangeLog:\n\n\t* libdruntime/gcc/unwind/generic.d (__aligned__): Define.\n\t(_Unwind_Exception): Align struct to __aligned__.", "tree": {"sha": "4d063fa0150fe3888801c3776ca111df26f06e18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d063fa0150fe3888801c3776ca111df26f06e18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efa5449a094d3887e124d400ff0410af2c745b2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efa5449a094d3887e124d400ff0410af2c745b2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efa5449a094d3887e124d400ff0410af2c745b2d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efa5449a094d3887e124d400ff0410af2c745b2d/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d46a29d919058fb383d19fe35c234fab58286f71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d46a29d919058fb383d19fe35c234fab58286f71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d46a29d919058fb383d19fe35c234fab58286f71"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "68ddd1d5410c7532602ffeb7df2ee50be75f739f", "filename": "libphobos/libdruntime/gcc/unwind/generic.d", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efa5449a094d3887e124d400ff0410af2c745b2d/libphobos%2Flibdruntime%2Fgcc%2Funwind%2Fgeneric.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efa5449a094d3887e124d400ff0410af2c745b2d/libphobos%2Flibdruntime%2Fgcc%2Funwind%2Fgeneric.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fgcc%2Funwind%2Fgeneric.d?ref=efa5449a094d3887e124d400ff0410af2c745b2d", "patch": "@@ -123,7 +123,27 @@ enum : _Unwind_Reason_Code\n // @@@ The IA-64 ABI says that this structure must be double-word aligned.\n // Taking that literally does not make much sense generically.  Instead we\n // provide the maximum alignment required by any type for the machine.\n-struct _Unwind_Exception\n+     version (ARM)      private enum __aligned__ = 8;\n+else version (AArch64)  private enum __aligned__ = 16;\n+else version (HPPA)     private enum __aligned__ = 8;\n+else version (HPPA64)   private enum __aligned__ = 16;\n+else version (MIPS_N32) private enum __aligned__ = 16;\n+else version (MIPS_N64) private enum __aligned__ = 16;\n+else version (MIPS32)   private enum __aligned__ = 8;\n+else version (MIPS64)   private enum __aligned__ = 8;\n+else version (PPC)      private enum __aligned__ = 16;\n+else version (PPC64)    private enum __aligned__ = 16;\n+else version (RISCV32)  private enum __aligned__ = 16;\n+else version (RISCV64)  private enum __aligned__ = 16;\n+else version (S390)     private enum __aligned__ = 8;\n+else version (SPARC)    private enum __aligned__ = 8;\n+else version (SPARC64)  private enum __aligned__ = 16;\n+else version (SystemZ)  private enum __aligned__ = 8;\n+else version (X86)      private enum __aligned__ = 16;\n+else version (X86_64)   private enum __aligned__ = 16;\n+else static assert( false, \"Platform not supported.\");\n+\n+align(__aligned__) struct _Unwind_Exception\n {\n     _Unwind_Exception_Class exception_class;\n     _Unwind_Exception_Cleanup_Fn exception_cleanup;"}]}