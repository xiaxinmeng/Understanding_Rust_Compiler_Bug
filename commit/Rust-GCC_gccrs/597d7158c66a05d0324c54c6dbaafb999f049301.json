{"sha": "597d7158c66a05d0324c54c6dbaafb999f049301", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk3ZDcxNThjNjZhMDVkMDMyNGM1NGM2ZGJhYWZiOTk5ZjA0OTMwMQ==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2008-08-22T12:12:04Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-22T12:12:04Z"}, "message": "exp_aggr.adb (Static_Array_Aggregate): When a static array aggregate with a range is transformed into a positional...\n\n2008-08-22  Gary Dismukes  <dismukes@adacore.com>\n\n\t* exp_aggr.adb (Static_Array_Aggregate): When a static array aggregate\n\twith a range is transformed into a positional aggregate, any copied\n\tcomponent literals should be marked Is_Static_Expression.\n\n\t* sem_eval.adb (Compile_Time_Known_Value): Don't treat null literals as\n\tnot being known at at compile time when Configurable_Run_Time_Mode is\n\ttrue.\n\nFrom-SVN: r139442", "tree": {"sha": "4849789b8ace1f34480f9bbcc843de37354fce31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4849789b8ace1f34480f9bbcc843de37354fce31"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/597d7158c66a05d0324c54c6dbaafb999f049301", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/597d7158c66a05d0324c54c6dbaafb999f049301", "html_url": "https://github.com/Rust-GCC/gccrs/commit/597d7158c66a05d0324c54c6dbaafb999f049301", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/597d7158c66a05d0324c54c6dbaafb999f049301/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5f0085c780dc6269ecbe30618db58ba75ca24df1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f0085c780dc6269ecbe30618db58ba75ca24df1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f0085c780dc6269ecbe30618db58ba75ca24df1"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "e8b1e732e2bc153e75027a1571823e54f32fedea", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/597d7158c66a05d0324c54c6dbaafb999f049301/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/597d7158c66a05d0324c54c6dbaafb999f049301/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=597d7158c66a05d0324c54c6dbaafb999f049301", "patch": "@@ -6442,6 +6442,12 @@ package body Exp_Aggr is\n                   Append_To\n                     (Expressions (Agg), New_Copy (Expression (Expr)));\n                   Set_Etype (Last (Expressions (Agg)), Component_Type (Typ));\n+\n+                  --  Integer literals should always be marked as static\n+\n+                  if Nkind (Expression (Expr)) = N_Integer_Literal then\n+                     Set_Is_Static_Expression (Last (Expressions (Agg)));\n+                  end if;\n                end loop;\n \n                Set_Aggregate_Bounds (Agg, Bounds);"}, {"sha": "3e90538c3b69ae4457f5d6d87de2c55e430cbce7", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/597d7158c66a05d0324c54c6dbaafb999f049301/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/597d7158c66a05d0324c54c6dbaafb999f049301/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=597d7158c66a05d0324c54c6dbaafb999f049301", "patch": "@@ -998,14 +998,17 @@ package body Sem_Eval is\n          return False;\n       end if;\n \n-      --  If this is not a static expression and we are in configurable run\n-      --  time mode, then we consider it not known at compile time. This\n-      --  avoids anomalies where whether something is permitted with a given\n-      --  configurable run-time library depends on how good the compiler is\n-      --  at optimizing and knowing that things are constant when they\n-      --  are non-static.\n-\n-      if Configurable_Run_Time_Mode and then not Is_Static_Expression (Op) then\n+      --  If this is not a static expression or a null literal, and we are in\n+      --  configurable run-time mode, then we consider it not known at compile\n+      --  time. This avoids anomalies where whether something is allowed with a\n+      --  given configurable run-time library depends on how good the compiler\n+      --  is at optimizing and knowing that things are constant when they are\n+      --  nonstatic.\n+\n+      if Configurable_Run_Time_Mode\n+        and then K /= N_Null\n+        and then not Is_Static_Expression (Op)\n+      then\n          return False;\n       end if;\n "}]}