{"sha": "cd2c00bef35a04a929de9405d50a6c94ff88b8fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2QyYzAwYmVmMzVhMDRhOTI5ZGU5NDA1ZDUwYTZjOTRmZjg4YjhmYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-06-01T20:37:20Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-06-01T20:37:20Z"}, "message": "pt.c (build_non_dependent_expr): Remove special handling of REFERENCE_REF_P.\n\n\t* pt.c (build_non_dependent_expr): Remove special handling of\n\tREFERENCE_REF_P.\n\nFrom-SVN: r174545", "tree": {"sha": "5ac5b98310854dc7ce0cd17b24fbda806be57372", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ac5b98310854dc7ce0cd17b24fbda806be57372"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd2c00bef35a04a929de9405d50a6c94ff88b8fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd2c00bef35a04a929de9405d50a6c94ff88b8fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd2c00bef35a04a929de9405d50a6c94ff88b8fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd2c00bef35a04a929de9405d50a6c94ff88b8fc/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "072339477c2005943492579576764494b07f1f06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/072339477c2005943492579576764494b07f1f06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/072339477c2005943492579576764494b07f1f06"}], "stats": {"total": 9, "additions": 3, "deletions": 6}, "files": [{"sha": "b53331d5da1bdc0a4c2616eaf1b0fdb8e861a840", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd2c00bef35a04a929de9405d50a6c94ff88b8fc/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd2c00bef35a04a929de9405d50a6c94ff88b8fc/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cd2c00bef35a04a929de9405d50a6c94ff88b8fc", "patch": "@@ -1,5 +1,8 @@\n 2011-06-01  Jason Merrill  <jason@redhat.com>\n \n+\t* pt.c (build_non_dependent_expr): Remove special handling of\n+\tREFERENCE_REF_P.\n+\n \tPR c++/44175\n \t* pt.c (template_args_equal): Handle one arg being NULL_TREE.\n \t(deduction_tsubst_fntype): Handle excessive non-infinite recursion."}, {"sha": "c9557770ccc1bc97e63fe8cb284fc806cd8f5b40", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd2c00bef35a04a929de9405d50a6c94ff88b8fc/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd2c00bef35a04a929de9405d50a6c94ff88b8fc/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=cd2c00bef35a04a929de9405d50a6c94ff88b8fc", "patch": "@@ -19189,12 +19189,6 @@ build_non_dependent_expr (tree expr)\n \t\t   TREE_OPERAND (expr, 0),\n \t\t   build_non_dependent_expr (TREE_OPERAND (expr, 1)));\n \n-  /* Keep dereferences outside the NON_DEPENDENT_EXPR so lvalue_kind\n-     doesn't need to look inside.  */\n-  if (REFERENCE_REF_P (expr))\n-    return convert_from_reference (build_non_dependent_expr\n-\t\t\t\t   (TREE_OPERAND (expr, 0)));\n-\n   /* If the type is unknown, it can't really be non-dependent */\n   gcc_assert (TREE_TYPE (expr) != unknown_type_node);\n "}]}