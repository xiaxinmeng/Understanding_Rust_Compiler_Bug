{"sha": "20643f5032f7f3c11a233861e05f8efb4059e9dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjA2NDNmNTAzMmY3ZjNjMTFhMjMzODYxZTA1ZjhlZmI0MDU5ZTlkZA==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-06-11T09:19:02Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-06-11T09:19:02Z"}, "message": "[Ada] Missing predicate function body for derived type in nested package\n\nThis patch fixes a bug in the construction of predicate functions.  For a\nderived type, we must ensure that the parent type is already frozen so that its\npredicate function has been constructed already. This is necessary if the\nparent is declared in a nested package and its own freeze point has not been\nreached when the derived type is frozen by a local object declaration.\n\n2018-06-11  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch13.adb (Build_Predicate_Functions): For a derived type, ensure\n\tthat its parent is already frozen so that its predicate function, if\n\tany, has already been constructed.\n\ngcc/testsuite/\n\n\t* gnat.dg/predicate1.adb: New testcase.\n\nFrom-SVN: r261422", "tree": {"sha": "baa878b90794ed360933fdeb99521c2938fdfc33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/baa878b90794ed360933fdeb99521c2938fdfc33"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20643f5032f7f3c11a233861e05f8efb4059e9dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20643f5032f7f3c11a233861e05f8efb4059e9dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20643f5032f7f3c11a233861e05f8efb4059e9dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20643f5032f7f3c11a233861e05f8efb4059e9dd/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "577b1ab4b158ba501df6c6b721b83043fc26cbff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/577b1ab4b158ba501df6c6b721b83043fc26cbff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/577b1ab4b158ba501df6c6b721b83043fc26cbff"}], "stats": {"total": 66, "additions": 65, "deletions": 1}, "files": [{"sha": "2393bfaa0c601d714b9cf4ef12b5d0924eccb390", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20643f5032f7f3c11a233861e05f8efb4059e9dd/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20643f5032f7f3c11a233861e05f8efb4059e9dd/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=20643f5032f7f3c11a233861e05f8efb4059e9dd", "patch": "@@ -1,3 +1,9 @@\n+2018-06-11  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch13.adb (Build_Predicate_Functions): For a derived type, ensure\n+\tthat its parent is already frozen so that its predicate function, if\n+\tany, has already been constructed.\n+\n 2018-06-11  Yannick Moy  <moy@adacore.com>\n \n \t* sem_prag.adb (Check_Mode_Restriction_In_Enclosing_Context): Adapt for"}, {"sha": "ad9e9a140c96097cc1589189323aa9706e53f857", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20643f5032f7f3c11a233861e05f8efb4059e9dd/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20643f5032f7f3c11a233861e05f8efb4059e9dd/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=20643f5032f7f3c11a233861e05f8efb4059e9dd", "patch": "@@ -11114,13 +11114,27 @@ package body Sem_Ch13 is\n \n       --  If we have a type with predicates, build predicate function. This is\n       --  not needed in the generic case, nor within TSS subprograms and other\n-      --  predefined primitives.\n+      --  predefined primitives. For a derived type, ensure that the parent\n+      --  type is already frozen so that its predicate function has been\n+      --  constructed already. This is necessary if the parent is declared\n+      --  in a nested package and its own freeze point has not been reached.\n \n       if Is_Type (E)\n         and then Nongeneric_Case\n         and then not Within_Internal_Subprogram\n         and then Has_Predicates (E)\n       then\n+         declare\n+            Atyp : constant Entity_Id := Nearest_Ancestor (E);\n+         begin\n+            if Present (Atyp)\n+              and then Has_Predicates (Atyp)\n+              and then not Is_Frozen (Atyp)\n+            then\n+               Freeze_Before (N, Atyp);\n+            end if;\n+         end;\n+\n          Build_Predicate_Functions (E, N);\n       end if;\n "}, {"sha": "7d088a1322cfadfc6efddd3e49dabd99f361bf8c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20643f5032f7f3c11a233861e05f8efb4059e9dd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20643f5032f7f3c11a233861e05f8efb4059e9dd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=20643f5032f7f3c11a233861e05f8efb4059e9dd", "patch": "@@ -1,3 +1,7 @@\n+2018-06-11  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* gnat.dg/predicate1.adb: New testcase.\n+\n 2018-06-11  Yannick Moy  <moy@adacore.com>\n \n \t* gnat.dg/spark1.adb, gnat.dg/spark1.ads: New testcase."}, {"sha": "47b4dbf47b97a04cd13a873dd945256ce0c4ae1a", "filename": "gcc/testsuite/gnat.dg/predicate1.adb", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20643f5032f7f3c11a233861e05f8efb4059e9dd/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20643f5032f7f3c11a233861e05f8efb4059e9dd/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate1.adb?ref=20643f5032f7f3c11a233861e05f8efb4059e9dd", "patch": "@@ -0,0 +1,40 @@\n+--  { dg-do run }\n+--  { dg-options \"-gnata\" }\n+\n+procedure Predicate1 with SPARK_Mode is\n+    type R is record\n+       F : Integer;\n+    end record;\n+\n+    package Nested is\n+       subtype S is R with Predicate => S.F = 42;\n+       procedure P (X : in out S) is null;\n+\n+       type T is private;\n+       procedure P (X : in out T) is null;\n+    private\n+       type T is new S;\n+    end Nested;\n+\n+    X : Nested.T;\n+    Y : Nested.S;\n+\n+    X_Uninitialized : Boolean := False;\n+    Y_Uninitialized : Boolean := False;\n+begin\n+   begin\n+      Nested.P (X);\n+   exception\n+      when others => X_Uninitialized := True;\n+   end;\n+\n+   begin\n+      Nested.P (Y);\n+   exception\n+      when others => Y_Uninitialized := True;\n+   end;\n+\n+   if not X_Uninitialized or else not Y_Uninitialized then\n+      raise Program_Error;\n+   end if;\n+end Predicate1;"}]}