{"sha": "a7d00e71ed47b501b43db412023c96e7053493f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdkMDBlNzFlZDQ3YjUwMWI0M2RiNDEyMDIzYzk2ZTcwNTM0OTNmNg==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-08-11T20:28:54Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-08-11T20:28:54Z"}, "message": "Do not translate out-of-SSA close phi nodes that can be analyzed with scev.\n\n2010-07-20  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-sese-to-poly.c (rewrite_close_phi_out_of_ssa): Add an\n\textra parameter for the region.  Call scev_analyzable_p.\n\t(rewrite_reductions_out_of_ssa): Update call to\n\trewrite_close_phi_out_of_ssa.\n\t(rewrite_cross_bb_phi_deps): Same.\n\t(rewrite_commutative_reductions_out_of_ssa_loop): Add an extra\n\tparameter for the region.  Call scev_analyzable_p.\n\t(rewrite_commutative_reductions_out_of_ssa): Update call to\n\trewrite_commutative_reductions_out_of_ssa_loop.\n\nFrom-SVN: r163151", "tree": {"sha": "69346cb311ec9e67f54310031ee76d485456dc9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69346cb311ec9e67f54310031ee76d485456dc9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7d00e71ed47b501b43db412023c96e7053493f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7d00e71ed47b501b43db412023c96e7053493f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7d00e71ed47b501b43db412023c96e7053493f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7d00e71ed47b501b43db412023c96e7053493f6/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5df5f257f5abd41d8554f769d763f0521d374f8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5df5f257f5abd41d8554f769d763f0521d374f8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5df5f257f5abd41d8554f769d763f0521d374f8a"}], "stats": {"total": 48, "additions": 41, "deletions": 7}, "files": [{"sha": "0362142e7602d53dff18bea95469a56abfbdb8ee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7d00e71ed47b501b43db412023c96e7053493f6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7d00e71ed47b501b43db412023c96e7053493f6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a7d00e71ed47b501b43db412023c96e7053493f6", "patch": "@@ -1,3 +1,15 @@\n+2010-08-02  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-sese-to-poly.c (rewrite_close_phi_out_of_ssa): Add an\n+\textra parameter for the region.  Call scev_analyzable_p.\n+\t(rewrite_reductions_out_of_ssa): Update call to\n+\trewrite_close_phi_out_of_ssa.\n+\t(rewrite_cross_bb_phi_deps): Same.\n+\t(rewrite_commutative_reductions_out_of_ssa_loop): Add an extra\n+\tparameter for the region.  Call scev_analyzable_p.\n+\t(rewrite_commutative_reductions_out_of_ssa): Update call to\n+\trewrite_commutative_reductions_out_of_ssa_loop.\n+\n 2010-08-02  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* sese.c (rename_uses): Call unshare_expr before force_gimple_operand."}, {"sha": "24c88d59169789ca3fdc942e6401ba7561fa0fed", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7d00e71ed47b501b43db412023c96e7053493f6/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7d00e71ed47b501b43db412023c96e7053493f6/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=a7d00e71ed47b501b43db412023c96e7053493f6", "patch": "@@ -1,3 +1,15 @@\n+2010-07-20  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-sese-to-poly.c (rewrite_close_phi_out_of_ssa): Add an\n+\textra parameter for the region.  Call scev_analyzable_p.\n+\t(rewrite_reductions_out_of_ssa): Update call to\n+\trewrite_close_phi_out_of_ssa.\n+\t(rewrite_cross_bb_phi_deps): Same.\n+\t(rewrite_commutative_reductions_out_of_ssa_loop): Add an extra\n+\tparameter for the region.  Call scev_analyzable_p.\n+\t(rewrite_commutative_reductions_out_of_ssa): Update call to\n+\trewrite_commutative_reductions_out_of_ssa_loop.\n+\n 2010-07-20  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* gcc.dg/tree-ssa/pr20742.c: New."}, {"sha": "81b2dc250aa2687d144ab99747e70bd28dbe8b6a", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7d00e71ed47b501b43db412023c96e7053493f6/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7d00e71ed47b501b43db412023c96e7053493f6/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=a7d00e71ed47b501b43db412023c96e7053493f6", "patch": "@@ -2186,7 +2186,7 @@ scalar_close_phi_node_p (gimple phi)\n    dimension array for it.  */\n \n static void\n-rewrite_close_phi_out_of_ssa (gimple_stmt_iterator *psi)\n+rewrite_close_phi_out_of_ssa (gimple_stmt_iterator *psi, sese region)\n {\n   gimple phi = gsi_stmt (*psi);\n   tree res = gimple_phi_result (phi);\n@@ -2201,6 +2201,14 @@ rewrite_close_phi_out_of_ssa (gimple_stmt_iterator *psi)\n      before Graphite: see canonicalize_loop_closed_ssa_form.  */\n   gcc_assert (gimple_phi_num_args (phi) == 1);\n \n+  /* If res is scev analyzable, it is safe to ignore the close phi\n+     node: it will be code generated in the out of Graphite pass.  */\n+  if (scev_analyzable_p (res, region))\n+    {\n+      gsi_next (psi);\n+      return;\n+    }\n+\n   /* The phi node can be a non close phi node, when its argument is\n      invariant, or when it is defined in the same loop as the phi node.  */\n   if (is_gimple_min_invariant (arg)\n@@ -2321,7 +2329,7 @@ rewrite_reductions_out_of_ssa (scop_p scop)\n \t    rewrite_degenerate_phi (&psi);\n \n \t  else if (scalar_close_phi_node_p (phi))\n-\t    rewrite_close_phi_out_of_ssa (&psi);\n+\t    rewrite_close_phi_out_of_ssa (&psi, region);\n \n \t  else if (reduction_phi_p (region, &psi))\n \t    rewrite_phi_out_of_ssa (&psi);\n@@ -2386,7 +2394,7 @@ rewrite_cross_bb_phi_deps (sese region, gimple_stmt_iterator gsi)\n \tgimple_stmt_iterator psi = gsi_for_stmt (use_stmt);\n \n \tif (scalar_close_phi_node_p (gsi_stmt (psi)))\n-\t  rewrite_close_phi_out_of_ssa (&psi);\n+\t  rewrite_close_phi_out_of_ssa (&psi, region);\n \telse\n \t  rewrite_phi_out_of_ssa (&psi);\n       }\n@@ -2871,7 +2879,8 @@ rewrite_commutative_reductions_out_of_ssa_close_phi (gimple close_phi,\n \n static void\n rewrite_commutative_reductions_out_of_ssa_loop (loop_p loop,\n-\t\t\t\t\t\tsbitmap reductions)\n+\t\t\t\t\t\tsbitmap reductions,\n+\t\t\t\t\t\tsese region)\n {\n   gimple_stmt_iterator gsi;\n   edge exit = single_exit (loop);\n@@ -2880,8 +2889,9 @@ rewrite_commutative_reductions_out_of_ssa_loop (loop_p loop,\n     return;\n \n   for (gsi = gsi_start_phis (exit->dest); !gsi_end_p (gsi); gsi_next (&gsi))\n-    rewrite_commutative_reductions_out_of_ssa_close_phi (gsi_stmt (gsi),\n-\t\t\t\t\t\t\t reductions);\n+    if (!scev_analyzable_p (gimple_phi_result (gsi_stmt (gsi)), region))\n+      rewrite_commutative_reductions_out_of_ssa_close_phi (gsi_stmt (gsi),\n+\t\t\t\t\t\t\t   reductions);\n }\n \n /* Rewrites all the commutative reductions from SCOP out of SSA.  */\n@@ -2897,7 +2907,7 @@ rewrite_commutative_reductions_out_of_ssa (sese region, sbitmap reductions)\n \n   FOR_EACH_LOOP (li, loop, 0)\n     if (loop_in_sese_p (loop, region))\n-      rewrite_commutative_reductions_out_of_ssa_loop (loop, reductions);\n+      rewrite_commutative_reductions_out_of_ssa_loop (loop, reductions, region);\n \n   gsi_commit_edge_inserts ();\n   update_ssa (TODO_update_ssa);"}]}