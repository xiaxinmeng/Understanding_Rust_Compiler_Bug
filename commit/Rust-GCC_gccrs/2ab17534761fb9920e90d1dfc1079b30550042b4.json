{"sha": "2ab17534761fb9920e90d1dfc1079b30550042b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFiMTc1MzQ3NjFmYjk5MjBlOTBkMWRmYzEwNzliMzA1NTAwNDJiNA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-14T19:10:02Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-14T19:10:02Z"}, "message": "libgo/syscalls: Finish Solaris code.\n\nMostly from Rainer Orth.\n\nFrom-SVN: r168814", "tree": {"sha": "528482bff43b946901fb79cf6bbb777e32be345e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/528482bff43b946901fb79cf6bbb777e32be345e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ab17534761fb9920e90d1dfc1079b30550042b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ab17534761fb9920e90d1dfc1079b30550042b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ab17534761fb9920e90d1dfc1079b30550042b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ab17534761fb9920e90d1dfc1079b30550042b4/comments", "author": null, "committer": null, "parents": [{"sha": "cbabf03f9adf676894146561ba8bfeb7b7f15912", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbabf03f9adf676894146561ba8bfeb7b7f15912", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbabf03f9adf676894146561ba8bfeb7b7f15912"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "15d22561507ae94f0da1ffe2d598c351476f2787", "filename": "libgo/syscalls/syscall_solaris_amd64.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ab17534761fb9920e90d1dfc1079b30550042b4/libgo%2Fsyscalls%2Fsyscall_solaris_amd64.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ab17534761fb9920e90d1dfc1079b30550042b4/libgo%2Fsyscalls%2Fsyscall_solaris_amd64.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fsyscalls%2Fsyscall_solaris_amd64.go?ref=2ab17534761fb9920e90d1dfc1079b30550042b4", "patch": "@@ -13,7 +13,7 @@ import \"unsafe\"\n \n // 64-bit ptrace(3C) doesn't exist\n func libc_ptrace(request int, pid Pid_t, addr uintptr, data *byte) int {\n-\terrno := ENOSYS\n+\tSetErrno(ENOSYS)\n \treturn -1\n }\n "}, {"sha": "0be60b92967c889a15d9dd19086ce47d2d569160", "filename": "libgo/syscalls/syscall_solaris_sparc.go", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ab17534761fb9920e90d1dfc1079b30550042b4/libgo%2Fsyscalls%2Fsyscall_solaris_sparc.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ab17534761fb9920e90d1dfc1079b30550042b4/libgo%2Fsyscalls%2Fsyscall_solaris_sparc.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fsyscalls%2Fsyscall_solaris_sparc.go?ref=2ab17534761fb9920e90d1dfc1079b30550042b4", "patch": "@@ -1,7 +1,17 @@\n-// syscall_solaris_sparc.go -- Solaris SPARC specific support\n+// syscall_solaris_sparc.go -- Solaris/SPARC specific support\n \n // Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n package syscall\n+\n+import \"unsafe\"\n+\n+// FIXME: ptrace(3C) has this, but exec.go expects the next.\n+//func libc_ptrace(request int, pid Pid_t, addr int, data int) int __asm__ (\"ptrace\")\n+\n+func libc_ptrace(request int, pid Pid_t, addr uintptr, data *byte) int __asm__ (\"ptrace\")\n+\n+var dummy *byte\n+const sizeofPtr uintptr = uintptr(unsafe.Sizeof(dummy))"}, {"sha": "81e2010cd132508962fd6bf085bb8a4752c13c49", "filename": "libgo/syscalls/syscall_solaris_sparc64.go", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ab17534761fb9920e90d1dfc1079b30550042b4/libgo%2Fsyscalls%2Fsyscall_solaris_sparc64.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ab17534761fb9920e90d1dfc1079b30550042b4/libgo%2Fsyscalls%2Fsyscall_solaris_sparc64.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fsyscalls%2Fsyscall_solaris_sparc64.go?ref=2ab17534761fb9920e90d1dfc1079b30550042b4", "patch": "@@ -1,7 +1,21 @@\n-// syscall_solaris_v9.go -- Solaris sparc9v specific support\n+// syscall_solaris_sparc64.go -- Solaris/SPARCV9 specific support\n \n // Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n package syscall\n+\n+import \"unsafe\"\n+\n+// FIXME: ptrace(3C) has this, but exec.go expects the next.\n+//func libc_ptrace(request int, pid Pid_t, addr int, data int) int __asm__ (\"ptrace\")\n+\n+// 64-bit ptrace(3C) doesn't exist\n+func libc_ptrace(request int, pid Pid_t, addr uintptr, data *byte) int {\n+\tSetErrno(ENOSYS)\n+\treturn -1\n+}\n+\n+var dummy *byte\n+const sizeofPtr uintptr = uintptr(unsafe.Sizeof(dummy))"}]}