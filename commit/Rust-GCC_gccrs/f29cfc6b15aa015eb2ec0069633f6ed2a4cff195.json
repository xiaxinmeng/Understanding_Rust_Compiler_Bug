{"sha": "f29cfc6b15aa015eb2ec0069633f6ed2a4cff195", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI5Y2ZjNmIxNWFhMDE1ZWIyZWMwMDY5NjMzZjZlZDJhNGNmZjE5NQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2018-09-26T07:36:45Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2018-09-26T07:36:45Z"}, "message": "arm.c (arm_reorg): Skip Thumb reorg pass for thunks.\n\n\t* config/arm/arm.c (arm_reorg): Skip Thumb reorg pass for thunks.\n\t(arm32_output_mi_thunk): Deal with long calls.\n\nFrom-SVN: r264595", "tree": {"sha": "1bf405533a1a1311a53a999c18dc1c141744acbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1bf405533a1a1311a53a999c18dc1c141744acbe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f29cfc6b15aa015eb2ec0069633f6ed2a4cff195", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f29cfc6b15aa015eb2ec0069633f6ed2a4cff195", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f29cfc6b15aa015eb2ec0069633f6ed2a4cff195", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f29cfc6b15aa015eb2ec0069633f6ed2a4cff195/comments", "author": null, "committer": null, "parents": [{"sha": "392047f92ad5d7c388fe42dfaa1c72c8cc1996ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/392047f92ad5d7c388fe42dfaa1c72c8cc1996ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/392047f92ad5d7c388fe42dfaa1c72c8cc1996ec"}], "stats": {"total": 66, "additions": 64, "deletions": 2}, "files": [{"sha": "4f606d35373ded6c4c74637214fe31a66f52ebe6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f29cfc6b15aa015eb2ec0069633f6ed2a4cff195/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f29cfc6b15aa015eb2ec0069633f6ed2a4cff195/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f29cfc6b15aa015eb2ec0069633f6ed2a4cff195", "patch": "@@ -1,3 +1,8 @@\n+2018-09-26  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* config/arm/arm.c (arm_reorg): Skip Thumb reorg pass for thunks.\n+\t(arm32_output_mi_thunk): Deal with long calls.\n+\n 2018-09-26  Richard Biener  <rguenther@suse.de>\n \n \tPR debug/87428"}, {"sha": "c6e3f7954fb414834674717c976e69650df6076e", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f29cfc6b15aa015eb2ec0069633f6ed2a4cff195/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f29cfc6b15aa015eb2ec0069633f6ed2a4cff195/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=f29cfc6b15aa015eb2ec0069633f6ed2a4cff195", "patch": "@@ -17647,7 +17647,11 @@ arm_reorg (void)\n \n   if (use_cmse)\n     cmse_nonsecure_call_clear_caller_saved ();\n-  if (TARGET_THUMB1)\n+\n+  /* We cannot run the Thumb passes for thunks because there is no CFG.  */\n+  if (cfun->is_thunk)\n+    ;\n+  else if (TARGET_THUMB1)\n     thumb1_reorg ();\n   else if (TARGET_THUMB2)\n     thumb2_reorg ();\n@@ -26721,6 +26725,8 @@ static void\n arm32_output_mi_thunk (FILE *file, tree, HOST_WIDE_INT delta,\n \t\t       HOST_WIDE_INT vcall_offset, tree function)\n {\n+  const bool long_call_p = arm_is_long_call_p (function);\n+\n   /* On ARM, this_regno is R0 or R1 depending on\n      whether the function returns an aggregate or not.\n   */\n@@ -26758,9 +26764,22 @@ arm32_output_mi_thunk (FILE *file, tree, HOST_WIDE_INT delta,\n       TREE_USED (function) = 1;\n     }\n   rtx funexp = XEXP (DECL_RTL (function), 0);\n+  if (long_call_p)\n+    {\n+      emit_move_insn (temp, funexp);\n+      funexp = temp;\n+    }\n   funexp = gen_rtx_MEM (FUNCTION_MODE, funexp);\n-  rtx_insn * insn = emit_call_insn (gen_sibcall (funexp, const0_rtx, NULL_RTX));\n+  rtx_insn *insn = emit_call_insn (gen_sibcall (funexp, const0_rtx, NULL_RTX));\n   SIBLING_CALL_P (insn) = 1;\n+  emit_barrier ();\n+\n+  /* Indirect calls require a bit of fixup in PIC mode.  */\n+  if (long_call_p)\n+    {\n+      split_all_insns_noflow ();\n+      arm_reorg ();\n+    }\n \n   insn = get_insns ();\n   shorten_branches (insn);"}, {"sha": "60b23ba33d355fad11b0c9a329d0621d32251558", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f29cfc6b15aa015eb2ec0069633f6ed2a4cff195/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f29cfc6b15aa015eb2ec0069633f6ed2a4cff195/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f29cfc6b15aa015eb2ec0069633f6ed2a4cff195", "patch": "@@ -1,3 +1,10 @@\n+2018-09-26  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* g++.dg/other/vthunk1.C: Rename to...\n+\t* g++.dg/other/thunk1.C: ...this.\n+\t* g++.dg/other/thunk2a.C: New test.\n+\t* g++.dg/other/thunk2b.C: Likewise.\n+\n 2018-09-25  Jim Wilson  <jimw@sifive.com>\n \n \t* gcc.target/riscv/weak-1.c: New."}, {"sha": "90165628b4510a0a441406d9d155b780a04130d0", "filename": "gcc/testsuite/g++.dg/other/thunk1.C", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f29cfc6b15aa015eb2ec0069633f6ed2a4cff195/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fthunk1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f29cfc6b15aa015eb2ec0069633f6ed2a4cff195/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fthunk1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fthunk1.C?ref=f29cfc6b15aa015eb2ec0069633f6ed2a4cff195", "previous_filename": "gcc/testsuite/g++.dg/other/vthunk1.C"}, {"sha": "8e5ebd4960df758fa77ff08b019e104870f36b45", "filename": "gcc/testsuite/g++.dg/other/thunk2a.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f29cfc6b15aa015eb2ec0069633f6ed2a4cff195/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fthunk2a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f29cfc6b15aa015eb2ec0069633f6ed2a4cff195/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fthunk2a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fthunk2a.C?ref=f29cfc6b15aa015eb2ec0069633f6ed2a4cff195", "patch": "@@ -0,0 +1,15 @@\n+// { dg-do compile { target arm*-*-* } }\n+// { dg-options \"-mlong-calls -ffunction-sections\" }\n+\n+class a {\n+public:\n+  virtual ~a();\n+};\n+\n+class b : virtual a {};\n+\n+class c : b {\n+  ~c();\n+};\n+\n+c::~c() {}"}, {"sha": "c8f4570923d8bde71547dd343de45edc0efeb2c7", "filename": "gcc/testsuite/g++.dg/other/thunk2b.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f29cfc6b15aa015eb2ec0069633f6ed2a4cff195/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fthunk2b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f29cfc6b15aa015eb2ec0069633f6ed2a4cff195/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fthunk2b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fthunk2b.C?ref=f29cfc6b15aa015eb2ec0069633f6ed2a4cff195", "patch": "@@ -0,0 +1,16 @@\n+// { dg-do compile { target arm*-*-* } }\n+// { dg-options \"-mlong-calls -ffunction-sections\" }\n+// { dg-additional-options \"-fPIC\" { target fpic } }\n+\n+class a {\n+public:\n+  virtual ~a();\n+};\n+\n+class b : virtual a {};\n+\n+class c : b {\n+  ~c();\n+};\n+\n+c::~c() {}"}]}