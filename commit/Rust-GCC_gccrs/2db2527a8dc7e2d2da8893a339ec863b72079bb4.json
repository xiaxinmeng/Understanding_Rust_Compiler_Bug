{"sha": "2db2527a8dc7e2d2da8893a339ec863b72079bb4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRiMjUyN2E4ZGM3ZTJkMmRhODg5M2EzMzllYzg2M2I3MjA3OWJiNA==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-01-16T17:56:38Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-05T12:17:48Z"}, "message": "[Ada] Use Is_Incomplete_Type instead of a low-level Ekind test\n\n2020-06-05  Piotr Trojanek  <trojanek@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch3.adb, sem_ch8.adb, sem_util.adb: Use Is_Incomplete_Type\n\tto make the code easier to read.", "tree": {"sha": "2d816a11f020f093a40d78432b7e65bb4666574b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d816a11f020f093a40d78432b7e65bb4666574b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2db2527a8dc7e2d2da8893a339ec863b72079bb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2db2527a8dc7e2d2da8893a339ec863b72079bb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2db2527a8dc7e2d2da8893a339ec863b72079bb4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2db2527a8dc7e2d2da8893a339ec863b72079bb4/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50554999f23127a962ef17f1ea06961a09811f75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50554999f23127a962ef17f1ea06961a09811f75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50554999f23127a962ef17f1ea06961a09811f75"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "1b1448c6d388effcd9dc74e61694e3d6602f9fb7", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2db2527a8dc7e2d2da8893a339ec863b72079bb4/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2db2527a8dc7e2d2da8893a339ec863b72079bb4/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=2db2527a8dc7e2d2da8893a339ec863b72079bb4", "patch": "@@ -5524,7 +5524,7 @@ package body Exp_Ch3 is\n          --  limited-with'ed package, we need to use the nonlimited view in\n          --  case it has tasks.\n \n-         if Ekind (Desig_Typ) in Incomplete_Kind\n+         if Is_Incomplete_Type (Desig_Typ)\n            and then Present (Non_Limited_View (Desig_Typ))\n          then\n             Desig_Typ := Non_Limited_View (Desig_Typ);"}, {"sha": "36c952081719fce3f0494d79c6ad721c3d3793ef", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2db2527a8dc7e2d2da8893a339ec863b72079bb4/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2db2527a8dc7e2d2da8893a339ec863b72079bb4/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=2db2527a8dc7e2d2da8893a339ec863b72079bb4", "patch": "@@ -8021,7 +8021,7 @@ package body Sem_Ch8 is\n             --  limited-with clauses\n \n             if From_Limited_With (T_Name)\n-              and then Ekind (T_Name) in Incomplete_Kind\n+              and then Is_Incomplete_Type (T_Name)\n               and then Present (Non_Limited_View (T_Name))\n               and then Is_Interface (Non_Limited_View (T_Name))\n             then"}, {"sha": "16a60448f9e2cd2e18375f23d04d932a6ddccb76", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2db2527a8dc7e2d2da8893a339ec863b72079bb4/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2db2527a8dc7e2d2da8893a339ec863b72079bb4/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=2db2527a8dc7e2d2da8893a339ec863b72079bb4", "patch": "@@ -13126,7 +13126,7 @@ package body Sem_Util is\n             Ent : Entity_Id := First_Entity (Limited_View (Scope (Typ)));\n          begin\n             while Present (Ent) loop\n-               if Ekind (Ent) in Incomplete_Kind\n+               if Is_Incomplete_Type (Ent)\n                  and then Non_Limited_View (Ent) = Typ\n                then\n                   return Ent;"}]}