{"sha": "c778968339afd140380a46edbade054667c7dce2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzc3ODk2ODMzOWFmZDE0MDM4MGE0NmVkYmFkZTA1NDY2N2M3ZGNlMg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2021-03-31T18:34:01Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2021-03-31T18:34:01Z"}, "message": "gimple-fold: Recompute ADDR_EXPR flags after folding a TMR [PR98268]\n\nThe gimple verifier picked up that an ADDR_EXPR of a MEM_REF was not\nmarked TREE_CONSTANT even though the address was in fact invariant.\nThis came from folding a &TARGET_MEM_REF with constant operands to\na &MEM_REF; &TARGET_MEM_REF is never treated as TREE_CONSTANT\nbut &MEM_REF can be.\n\ngcc/\n\tPR tree-optimization/98268\n\t* gimple-fold.c (maybe_canonicalize_mem_ref_addr): Call\n\trecompute_tree_invariant_for_addr_expr after successfully\n\tfolding a TARGET_MEM_REF that occurs inside an ADDR_EXPR.\n\ngcc/testsuite/\n\tPR tree-optimization/98268\n\t* gcc.target/aarch64/sve/pr98268-1.c: New test.\n\t* gcc.target/aarch64/sve/pr98268-2.c: Likewise.", "tree": {"sha": "e6d75a82dea4daa295a0fb3d5821df7bb876c42d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6d75a82dea4daa295a0fb3d5821df7bb876c42d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c778968339afd140380a46edbade054667c7dce2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c778968339afd140380a46edbade054667c7dce2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c778968339afd140380a46edbade054667c7dce2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c778968339afd140380a46edbade054667c7dce2/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5c7accfb56a7347008f629be4c7344dd849b1b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5c7accfb56a7347008f629be4c7344dd849b1b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5c7accfb56a7347008f629be4c7344dd849b1b1"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "9e6683dbac919eaf3d4fb7f3a77e7336cc71cb15", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c778968339afd140380a46edbade054667c7dce2/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c778968339afd140380a46edbade054667c7dce2/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=c778968339afd140380a46edbade054667c7dce2", "patch": "@@ -5877,6 +5877,8 @@ maybe_canonicalize_mem_ref_addr (tree *t, bool is_debug = false)\n       if (tem)\n \t{\n \t  *t = tem;\n+\t  if (TREE_CODE (*orig_t) == ADDR_EXPR)\n+\t    recompute_tree_invariant_for_addr_expr (*orig_t);\n \t  res = true;\n \t}\n     }"}, {"sha": "fdbe55e0b4efb6770c331fdb86eaa0a075d5dfea", "filename": "gcc/testsuite/gcc.target/aarch64/sve/pr98268-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c778968339afd140380a46edbade054667c7dce2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpr98268-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c778968339afd140380a46edbade054667c7dce2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpr98268-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpr98268-1.c?ref=c778968339afd140380a46edbade054667c7dce2", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do link } */\n+/* { dg-options \"-flto -O -ftree-vectorize --param=aarch64-autovec-preference=3\" } */\n+/* { dg-additional-sources \"pr98268-2.c\" } */\n+\n+short d, e;\n+void f(char, long*);\n+int main() {\n+  long x;\n+  f(-114, &x);\n+  return d == e;\n+}"}, {"sha": "de3b05d5e154070215f951ac26ee7facecbedf94", "filename": "gcc/testsuite/gcc.target/aarch64/sve/pr98268-2.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c778968339afd140380a46edbade054667c7dce2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpr98268-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c778968339afd140380a46edbade054667c7dce2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpr98268-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpr98268-2.c?ref=c778968339afd140380a46edbade054667c7dce2", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -ftree-vectorize --param=aarch64-autovec-preference=3\" } */\n+\n+extern short d[], e[];\n+void f(char a, long *b) {\n+  for (int c = 0; c < a - 12; c++) {\n+    d[c] = b[c];\n+    e[c] = 0;\n+  }\n+}"}]}