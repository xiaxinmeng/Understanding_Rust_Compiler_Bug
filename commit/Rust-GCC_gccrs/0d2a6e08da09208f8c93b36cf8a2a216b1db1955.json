{"sha": "0d2a6e08da09208f8c93b36cf8a2a216b1db1955", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQyYTZlMDhkYTA5MjA4ZjhjOTNiMzZjZjhhMmEyMTZiMWRiMTk1NQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-12-02T10:13:05Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-12-02T10:13:05Z"}, "message": "re PR middle-end/38343 (ice for legal code with -O2)\n\n\tPR middle-end/38343\n\t* builtins.c (expand_builtin_mempcpy_args): Handle COMPOUND_EXPRs\n\tpotentially returned from folding memcpy.\n\t(expand_builtin_stpcpy_args): Similarly for folding strcpy.\n\t(fold_builtin_2): Handle BUILT_IN_STPCPY if result is ignored.\n\n\t* gcc.c-torture/compile/pr38343.c: New test.\n\nFrom-SVN: r142348", "tree": {"sha": "3c0d9842ad0f29acf2ac2c76dae29e4a695facf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c0d9842ad0f29acf2ac2c76dae29e4a695facf4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d2a6e08da09208f8c93b36cf8a2a216b1db1955", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d2a6e08da09208f8c93b36cf8a2a216b1db1955", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d2a6e08da09208f8c93b36cf8a2a216b1db1955", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d2a6e08da09208f8c93b36cf8a2a216b1db1955/comments", "author": null, "committer": null, "parents": [{"sha": "bfb139b409e012903a3faf0c6934792cc7d2a838", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfb139b409e012903a3faf0c6934792cc7d2a838", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfb139b409e012903a3faf0c6934792cc7d2a838"}], "stats": {"total": 70, "additions": 57, "deletions": 13}, "files": [{"sha": "928a0aa7ce367a76ce4fc38fc34b10f09850de53", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d2a6e08da09208f8c93b36cf8a2a216b1db1955/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d2a6e08da09208f8c93b36cf8a2a216b1db1955/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0d2a6e08da09208f8c93b36cf8a2a216b1db1955", "patch": "@@ -1,4 +1,12 @@\n-2008-12-02  Danny Smith   <dannysmith@users.sourceforge.net>\n+2008-12-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/38343\n+\t* builtins.c (expand_builtin_mempcpy_args): Handle COMPOUND_EXPRs\n+\tpotentially returned from folding memcpy.\n+\t(expand_builtin_stpcpy_args): Similarly for folding strcpy.\n+\t(fold_builtin_2): Handle BUILT_IN_STPCPY if result is ignored.\n+\n+2008-12-02  Danny Smith  <dannysmith@users.sourceforge.net>\n \n         PR target/38054\n \t* config/i386/winnt.c (i386_pe_encode_section_info): Condition stdcall"}, {"sha": "34066675873b4b57953dbaa6f54d09ab226d7c6d", "filename": "gcc/builtins.c", "status": "modified", "additions": 31, "deletions": 12, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d2a6e08da09208f8c93b36cf8a2a216b1db1955/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d2a6e08da09208f8c93b36cf8a2a216b1db1955/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=0d2a6e08da09208f8c93b36cf8a2a216b1db1955", "patch": "@@ -3406,7 +3406,7 @@ expand_builtin_memcpy (tree exp, rtx target, enum machine_mode mode)\n    stpcpy.  */\n \n static rtx\n-expand_builtin_mempcpy(tree exp, rtx target, enum machine_mode mode)\n+expand_builtin_mempcpy (tree exp, rtx target, enum machine_mode mode)\n {\n   if (!validate_arglist (exp,\n  \t\t\t POINTER_TYPE, POINTER_TYPE, INTEGER_TYPE, VOID_TYPE))\n@@ -3433,15 +3433,18 @@ expand_builtin_mempcpy_args (tree dest, tree src, tree len, tree type,\n \t\t\t     rtx target, enum machine_mode mode, int endp)\n {\n     /* If return value is ignored, transform mempcpy into memcpy.  */\n-  if (target == const0_rtx)\n+  if (target == const0_rtx && implicit_built_in_decls[BUILT_IN_MEMCPY])\n     {\n       tree fn = implicit_built_in_decls[BUILT_IN_MEMCPY];\n+      tree result = build_call_expr (fn, 3, dest, src, len);\n \n-      if (!fn)\n-\treturn NULL_RTX;\n-\n-      return expand_expr (build_call_expr (fn, 3, dest, src, len),\n-\t\t\t  target, mode, EXPAND_NORMAL);\n+      while (TREE_CODE (result) == COMPOUND_EXPR)\n+\t{\n+\t  expand_expr (TREE_OPERAND (result, 0), const0_rtx, VOIDmode,\n+\t\t       EXPAND_NORMAL);\n+\t  result = TREE_OPERAND (result, 1);\n+\t}\n+      return expand_expr (result, target, mode, EXPAND_NORMAL);\n     }\n   else\n     {\n@@ -3707,14 +3710,19 @@ expand_builtin_stpcpy (tree exp, rtx target, enum machine_mode mode)\n   src = CALL_EXPR_ARG (exp, 1);\n \n   /* If return value is ignored, transform stpcpy into strcpy.  */\n-  if (target == const0_rtx)\n+  if (target == const0_rtx && implicit_built_in_decls[BUILT_IN_STRCPY])\n     {\n       tree fn = implicit_built_in_decls[BUILT_IN_STRCPY];\n-      if (!fn)\n-\treturn NULL_RTX;\n+      tree result = build_call_expr (fn, 2, dst, src);\n \n-      return expand_expr (build_call_expr (fn, 2, dst, src),\n-  \t\t\t  target, mode, EXPAND_NORMAL);\n+      STRIP_NOPS (result);\n+      while (TREE_CODE (result) == COMPOUND_EXPR)\n+\t{\n+\t  expand_expr (TREE_OPERAND (result, 0), const0_rtx, VOIDmode,\n+\t\t       EXPAND_NORMAL);\n+\t  result = TREE_OPERAND (result, 1);\n+\t}\n+      return expand_expr (result, target, mode, EXPAND_NORMAL);\n     }\n   else\n     {\n@@ -10463,6 +10471,17 @@ fold_builtin_2 (tree fndecl, tree arg0, tree arg1, bool ignore)\n     case BUILT_IN_STRCPY:\n       return fold_builtin_strcpy (fndecl, arg0, arg1, NULL_TREE);\n \n+    case BUILT_IN_STPCPY:\n+      if (ignore)\n+\t{\n+\t  tree fn = implicit_built_in_decls[BUILT_IN_STRCPY];\n+\t  if (!fn)\n+\t    break;\n+\n+\t  return build_call_expr (fn, 2, arg0, arg1);\n+\t}\n+      break;\n+\n     case BUILT_IN_STRCMP:\n       return fold_builtin_strcmp (arg0, arg1);\n "}, {"sha": "ad317b7820ab6f9de73776f6eb9285dbaedb927e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d2a6e08da09208f8c93b36cf8a2a216b1db1955/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d2a6e08da09208f8c93b36cf8a2a216b1db1955/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0d2a6e08da09208f8c93b36cf8a2a216b1db1955", "patch": "@@ -1,3 +1,8 @@\n+2008-12-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/38343\n+\t* gcc.c-torture/compile/pr38343.c: New test.\n+\n 2008-12-01  Janis Johnson  <janis187@us.ibm.com>\n \n \t* gcc.target/powerpc/pr18096-1.c: Adjust location of expected error."}, {"sha": "589ba33a255af6c8cd75939c53ceab7c6be9830a", "filename": "gcc/testsuite/gcc.c-torture/compile/pr38343.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d2a6e08da09208f8c93b36cf8a2a216b1db1955/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr38343.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d2a6e08da09208f8c93b36cf8a2a216b1db1955/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr38343.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr38343.c?ref=0d2a6e08da09208f8c93b36cf8a2a216b1db1955", "patch": "@@ -0,0 +1,12 @@\n+/* PR middle-end/38343 */\n+\n+static struct A\n+{\n+  char f[6];\n+} a[] = { {\"01000\"} };\n+\n+void\n+foo (void)\n+{\n+  __builtin_stpcpy (a[0].f, \"S0022\");\n+}"}]}