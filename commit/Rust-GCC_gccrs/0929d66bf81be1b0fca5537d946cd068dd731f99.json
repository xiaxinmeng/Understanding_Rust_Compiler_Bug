{"sha": "0929d66bf81be1b0fca5537d946cd068dd731f99", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDkyOWQ2NmJmODFiZTFiMGZjYTU1MzdkOTQ2Y2QwNjhkZDczMWY5OQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-19T11:51:22Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-19T11:51:22Z"}, "message": "[multiple changes]\n\n2017-01-19  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch4.ads, sem_ch4.adb (Try_Object_Operation): Make subprogram\n\tpublic, for use elsewhere.\n\t* sem_ch6.adb (Analyze_Procedure_Call): In SPARK_Mode and within\n\tan Inlined_body, recognize a call that uses object notation\n\tand has not been rewritten as a regular call because regular\n\texpansion has not taken place.\n\n2017-01-19  Bob Duff  <duff@adacore.com>\n\n\t* checks.adb (Apply_Type_Conversion_Checks): Disable small optimization\n\tin case of generic formal discrete types, because it causes crashes in\n\tthe compiler when built with assertions on.\n\nFrom-SVN: r244620", "tree": {"sha": "27e5a6435029e91ddba30a57d86b60a06a5b3912", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27e5a6435029e91ddba30a57d86b60a06a5b3912"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0929d66bf81be1b0fca5537d946cd068dd731f99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0929d66bf81be1b0fca5537d946cd068dd731f99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0929d66bf81be1b0fca5537d946cd068dd731f99", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0929d66bf81be1b0fca5537d946cd068dd731f99/comments", "author": null, "committer": null, "parents": [{"sha": "c63a2ad68bc0704fc2926badc46f3ccd952dbbb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c63a2ad68bc0704fc2926badc46f3ccd952dbbb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c63a2ad68bc0704fc2926badc46f3ccd952dbbb9"}], "stats": {"total": 78, "additions": 60, "deletions": 18}, "files": [{"sha": "5eda55755dfbea9c65274cc0abe731a89270e191", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0929d66bf81be1b0fca5537d946cd068dd731f99/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0929d66bf81be1b0fca5537d946cd068dd731f99/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0929d66bf81be1b0fca5537d946cd068dd731f99", "patch": "@@ -1,3 +1,18 @@\n+2017-01-19  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch4.ads, sem_ch4.adb (Try_Object_Operation): Make subprogram\n+\tpublic, for use elsewhere.\n+\t* sem_ch6.adb (Analyze_Procedure_Call): In SPARK_Mode and within\n+\tan Inlined_body, recognize a call that uses object notation\n+\tand has not been rewritten as a regular call because regular\n+\texpansion has not taken place.\n+\n+2017-01-19  Bob Duff  <duff@adacore.com>\n+\n+\t* checks.adb (Apply_Type_Conversion_Checks): Disable small optimization\n+\tin case of generic formal discrete types, because it causes crashes in\n+\tthe compiler when built with assertions on.\n+\n 2017-01-19  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* lib-xref-spark_specific.adb, sem_util.adb, sem_util.ads,"}, {"sha": "1e2231b3615ff12edabb709ff21f3a94e0c61961", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0929d66bf81be1b0fca5537d946cd068dd731f99/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0929d66bf81be1b0fca5537d946cd068dd731f99/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=0929d66bf81be1b0fca5537d946cd068dd731f99", "patch": "@@ -3391,14 +3391,17 @@ package body Checks is\n               and then not Float_To_Int\n             then\n                --  A small optimization: the attribute 'Pos applied to an\n-               --  enumeration type has a known range, even though its type\n-               --  is Universal_Integer. So in numeric conversions it is\n-               --  usually within range of the target integer type. Use the\n-               --  static bounds of the base types to check.\n+               --  enumeration type has a known range, even though its type is\n+               --  Universal_Integer. So in numeric conversions it is usually\n+               --  within range of the target integer type. Use the static\n+               --  bounds of the base types to check. Disable this optimization\n+               --  in case of a generic formal discrete type, because we don't\n+               --  necessarily know the upper bound yet.\n \n                if Nkind (Expr) = N_Attribute_Reference\n                  and then Attribute_Name (Expr) = Name_Pos\n                  and then Is_Enumeration_Type (Etype (Prefix (Expr)))\n+                 and then not Is_Generic_Type (Etype (Prefix (Expr)))\n                  and then Is_Integer_Type (Target_Type)\n                then\n                   declare"}, {"sha": "56da406186704fb5de299981d6eca7fa71dacdb1", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0929d66bf81be1b0fca5537d946cd068dd731f99/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0929d66bf81be1b0fca5537d946cd068dd731f99/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=0929d66bf81be1b0fca5537d946cd068dd731f99", "patch": "@@ -323,18 +323,6 @@ package body Sem_Ch4 is\n    --  subprogram, and the call F (X) interpreted as F.all (X). In this case\n    --  the call may be overloaded with both interpretations.\n \n-   function Try_Object_Operation\n-     (N            : Node_Id;\n-      CW_Test_Only : Boolean := False) return Boolean;\n-   --  Ada 2005 (AI-252): Support the object.operation notation. If node N\n-   --  is a call in this notation, it is transformed into a normal subprogram\n-   --  call where the prefix is a parameter, and True is returned. If node\n-   --  N is not of this form, it is unchanged, and False is returned. If\n-   --  CW_Test_Only is true then N is an N_Selected_Component node which\n-   --  is part of a call to an entry or procedure of a tagged concurrent\n-   --  type and this routine is invoked to search for class-wide subprograms\n-   --  conflicting with the target entity.\n-\n    procedure wpo (T : Entity_Id);\n    pragma Warnings (Off, wpo);\n    --  Used for debugging: obtain list of primitive operations even if"}, {"sha": "a6105c1d5f137a57a2a2b1c757ded78f57bd7d4b", "filename": "gcc/ada/sem_ch4.ads", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0929d66bf81be1b0fca5537d946cd068dd731f99/gcc%2Fada%2Fsem_ch4.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0929d66bf81be1b0fca5537d946cd068dd731f99/gcc%2Fada%2Fsem_ch4.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.ads?ref=0929d66bf81be1b0fca5537d946cd068dd731f99", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -64,4 +64,16 @@ package Sem_Ch4  is\n    --  The resolution of the construct requires some semantic information\n    --  on the prefix and the indexes.\n \n+   function Try_Object_Operation\n+     (N            : Node_Id;\n+      CW_Test_Only : Boolean := False) return Boolean;\n+   --  Ada 2005 (AI-252): Support the object.operation notation. If node N\n+   --  is a call in this notation, it is transformed into a normal subprogram\n+   --  call where the prefix is a parameter, and True is returned. If node\n+   --  N is not of this form, it is unchanged, and False is returned. If\n+   --  CW_Test_Only is true then N is an N_Selected_Component node which\n+   --  is part of a call to an entry or procedure of a tagged concurrent\n+   --  type and this routine is invoked to search for class-wide subprograms\n+   --  conflicting with the target entity.\n+\n end Sem_Ch4;"}, {"sha": "6e4818d6e3eb21e866d4f12144577ff68fb12a2e", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0929d66bf81be1b0fca5537d946cd068dd731f99/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0929d66bf81be1b0fca5537d946cd068dd731f99/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=0929d66bf81be1b0fca5537d946cd068dd731f99", "patch": "@@ -1711,7 +1711,31 @@ package body Sem_Ch6 is\n                                                        E_Function,\n                                                        E_Procedure)\n       then\n-         Analyze_Call_And_Resolve;\n+         --  When front-end inlining is enabled, as with SPARK_Mode, a call\n+         --  in prefix notation may still be missing its controlling argument,\n+         --  so perform the transformation now.\n+\n+         if SPARK_Mode = On and then In_Inlined_Body then\n+            declare\n+               Subp : constant Entity_Id := Entity (Selector_Name (P));\n+               Typ  : constant Entity_Id := Etype (Prefix (P));\n+\n+            begin\n+               if Is_Tagged_Type (Typ)\n+                 and then Present (First_Formal (Subp))\n+                 and then Etype (First_Formal (Subp)) = Typ\n+                 and then Try_Object_Operation (P)\n+               then\n+                  return;\n+\n+               else\n+                  Analyze_Call_And_Resolve;\n+               end if;\n+            end;\n+\n+         else\n+            Analyze_Call_And_Resolve;\n+         end if;\n \n       elsif Nkind (P) = N_Selected_Component\n         and then Ekind (Entity (Selector_Name (P))) = E_Entry_Family"}]}