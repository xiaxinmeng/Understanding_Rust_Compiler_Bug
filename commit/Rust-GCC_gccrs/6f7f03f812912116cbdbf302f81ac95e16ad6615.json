{"sha": "6f7f03f812912116cbdbf302f81ac95e16ad6615", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY3ZjAzZjgxMjkxMjExNmNiZGJmMzAyZjgxYWM5NWUxNmFkNjYxNQ==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1994-06-15T02:32:05Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1994-06-15T02:32:05Z"}, "message": "(cmplsrcb_operand): New predicate.\n\nFrom-SVN: r7477", "tree": {"sha": "4b06a15e5eb6eb2e0f072b1577fc54de14c86091", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b06a15e5eb6eb2e0f072b1577fc54de14c86091"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f7f03f812912116cbdbf302f81ac95e16ad6615", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f7f03f812912116cbdbf302f81ac95e16ad6615", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f7f03f812912116cbdbf302f81ac95e16ad6615", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f7f03f812912116cbdbf302f81ac95e16ad6615/comments", "author": null, "committer": null, "parents": [{"sha": "fe006562ba9dac8f0d5aefd4f05fd592efd22534", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe006562ba9dac8f0d5aefd4f05fd592efd22534", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe006562ba9dac8f0d5aefd4f05fd592efd22534"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "4c9784111b1bb81e9d641cd4c8c67e09d0a3bbda", "filename": "gcc/config/a29k/a29k.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f7f03f812912116cbdbf302f81ac95e16ad6615/gcc%2Fconfig%2Fa29k%2Fa29k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f7f03f812912116cbdbf302f81ac95e16ad6615/gcc%2Fconfig%2Fa29k%2Fa29k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fa29k%2Fa29k.c?ref=6f7f03f812912116cbdbf302f81ac95e16ad6615", "patch": "@@ -282,6 +282,22 @@ srcb_operand (op, mode)\n   return gpc_reg_operand (op, mode);\n }\n \n+int\n+cmplsrcb_operand (op, mode)\n+      register rtx op;\n+      enum machine_mode mode;\n+{\n+  if (GET_CODE (op) == CONST_INT\n+      && (mode == QImode\n+\t  || (INTVAL (op) & 0xffffff00) == 0xffffff00))\n+    return 1;\n+\n+  if (GET_MODE (op) != mode && mode != VOIDmode)\n+    return 0;\n+\n+  return gpc_reg_operand (op, mode);\n+}\n+\n /* Return 1 if OP is either an immediate or a general register.  This is used\n    for the input operand of mtsr/mtrsim.  */\n "}]}