{"sha": "eb83e2d7f0f746bf64276ebb3931b20ae0cd7398", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWI4M2UyZDdmMGY3NDZiZjY0Mjc2ZWJiMzkzMWIyMGFlMGNkNzM5OA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-04T21:15:26Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-04T21:15:26Z"}, "message": "Don't crash if tuple init redefines non-variable.\n\nFrom-SVN: r168484", "tree": {"sha": "fa876fbc35a8a9da0c569dcc86d12331cb6fe42c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa876fbc35a8a9da0c569dcc86d12331cb6fe42c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb83e2d7f0f746bf64276ebb3931b20ae0cd7398", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb83e2d7f0f746bf64276ebb3931b20ae0cd7398", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb83e2d7f0f746bf64276ebb3931b20ae0cd7398", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb83e2d7f0f746bf64276ebb3931b20ae0cd7398/comments", "author": null, "committer": null, "parents": [{"sha": "1ed36e906f6cf62a4d4dad1c8989257eb97f5566", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ed36e906f6cf62a4d4dad1c8989257eb97f5566", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ed36e906f6cf62a4d4dad1c8989257eb97f5566"}], "stats": {"total": 30, "additions": 24, "deletions": 6}, "files": [{"sha": "9e62583f6c67a1b731f2ee12860285e2a3d73d7f", "filename": "gcc/go/gofrontend/parse.cc", "status": "modified", "additions": 24, "deletions": 6, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb83e2d7f0f746bf64276ebb3931b20ae0cd7398/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb83e2d7f0f746bf64276ebb3931b20ae0cd7398/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fparse.cc?ref=eb83e2d7f0f746bf64276ebb3931b20ae0cd7398", "patch": "@@ -1655,9 +1655,15 @@ Parse::init_vars_from_map(const Typed_identifier_list* vars, Type* type,\n   if (!this->gogo_->in_global_scope())\n     this->gogo_->add_statement(s);\n   else if (!val_no->is_sink())\n-    val_no->var_value()->add_preinit_statement(s);\n+    {\n+      if (val_no->is_variable())\n+\tval_no->var_value()->add_preinit_statement(s);\n+    }\n   else if (!no->is_sink())\n-    no->var_value()->add_preinit_statement(s);\n+    {\n+      if (no->is_variable())\n+\tno->var_value()->add_preinit_statement(s);\n+    }\n   else\n     {\n       // Execute the map index expression just so that we can fail if\n@@ -1716,9 +1722,15 @@ Parse::init_vars_from_receive(const Typed_identifier_list* vars, Type* type,\n   if (!this->gogo_->in_global_scope())\n     this->gogo_->add_statement(s);\n   else if (!val_no->is_sink())\n-    val_no->var_value()->add_preinit_statement(s);\n+    {\n+      if (val_no->is_variable())\n+\tval_no->var_value()->add_preinit_statement(s);\n+    }\n   else if (!no->is_sink())\n-    no->var_value()->add_preinit_statement(s);\n+    {\n+      if (no->is_variable())\n+\tno->var_value()->add_preinit_statement(s);\n+    }\n   else\n     {\n       Named_object* dummy = this->create_dummy_global(Type::lookup_bool_type(),\n@@ -1776,9 +1788,15 @@ Parse::init_vars_from_type_guard(const Typed_identifier_list* vars,\n   if (!this->gogo_->in_global_scope())\n     this->gogo_->add_statement(s);\n   else if (!val_no->is_sink())\n-    val_no->var_value()->add_preinit_statement(s);\n+    {\n+      if (val_no->is_variable())\n+\tval_no->var_value()->add_preinit_statement(s);\n+    }\n   else if (!no->is_sink())\n-    no->var_value()->add_preinit_statement(s);\n+    {\n+      if (no->is_variable())\n+\tno->var_value()->add_preinit_statement(s);\n+    }\n   else\n     {\n       Named_object* dummy = this->create_dummy_global(type, NULL, location);"}]}