{"sha": "5b37159fcab6712970305bad6ecea7928b86ab63", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWIzNzE1OWZjYWI2NzEyOTcwMzA1YmFkNmVjZWE3OTI4Yjg2YWI2Mw==", "commit": {"author": {"name": "Will Schmidt", "email": "will_schmidt@vnet.ibm.com", "date": "2017-08-22T15:40:23Z"}, "committer": {"name": "Will Schmidt", "email": "willschm@gcc.gnu.org", "date": "2017-08-22T15:40:23Z"}, "message": "fold-vec-sums-int.c: New.\n\n[gcc/testsuite]\n\n2017-08-22  Will Schmidt  <will_schmidt@vnet.ibm.com>\n\n\t* gcc.target/powerpc/fold-vec-sums-int.c: New.\n\nFrom-SVN: r251281", "tree": {"sha": "f333acc40c978717fb5cdd26f167fa858a251ffb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f333acc40c978717fb5cdd26f167fa858a251ffb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b37159fcab6712970305bad6ecea7928b86ab63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b37159fcab6712970305bad6ecea7928b86ab63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b37159fcab6712970305bad6ecea7928b86ab63", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b37159fcab6712970305bad6ecea7928b86ab63/comments", "author": {"login": "willschm", "id": 44359, "node_id": "MDQ6VXNlcjQ0MzU5", "avatar_url": "https://avatars.githubusercontent.com/u/44359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willschm", "html_url": "https://github.com/willschm", "followers_url": "https://api.github.com/users/willschm/followers", "following_url": "https://api.github.com/users/willschm/following{/other_user}", "gists_url": "https://api.github.com/users/willschm/gists{/gist_id}", "starred_url": "https://api.github.com/users/willschm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willschm/subscriptions", "organizations_url": "https://api.github.com/users/willschm/orgs", "repos_url": "https://api.github.com/users/willschm/repos", "events_url": "https://api.github.com/users/willschm/events{/privacy}", "received_events_url": "https://api.github.com/users/willschm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0db8ddfcb660397bab428ce0d271967d24c23177", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0db8ddfcb660397bab428ce0d271967d24c23177", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0db8ddfcb660397bab428ce0d271967d24c23177"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "45a2ac0abf7be007283c5beeece37305898014a1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b37159fcab6712970305bad6ecea7928b86ab63/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b37159fcab6712970305bad6ecea7928b86ab63/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5b37159fcab6712970305bad6ecea7928b86ab63", "patch": "@@ -1,3 +1,7 @@\n+2017-08-22  Will Schmidt  <will_schmidt@vnet.ibm.com>\n+\n+\t* gcc.target/powerpc/fold-vec-sums-int.c: New.\n+\n 2017-08-22  Jeff Law  <law@redhat.com>\n \n \tPR tree-optimization/81741"}, {"sha": "e1047facbffa69e9bb05e8d3b6e4a4e718b7dfa8", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-sums-int.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b37159fcab6712970305bad6ecea7928b86ab63/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-sums-int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b37159fcab6712970305bad6ecea7928b86ab63/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-sums-int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-sums-int.c?ref=5b37159fcab6712970305bad6ecea7928b86ab63", "patch": "@@ -0,0 +1,16 @@\n+/* Verify that overloaded built-ins for vec_sums with int\n+   inputs produce the right code.  */\n+\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_altivec_ok } */\n+/* { dg-options \"-maltivec -O2\" } */\n+\n+#include <altivec.h>\n+\n+vector signed int\n+test_vec_sums (vector signed int vsi2, vector signed int vsi3)\n+{\n+  return vec_sums (vsi2, vsi3);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vsumsws\" 1 } } */"}]}