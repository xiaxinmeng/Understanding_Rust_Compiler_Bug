{"sha": "4b1716079db6646bd77967bb383d2da1e375694f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGIxNzE2MDc5ZGI2NjQ2YmQ3Nzk2N2JiMzgzZDJkYTFlMzc1Njk0Zg==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2019-01-03T15:08:15Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2019-01-03T15:08:15Z"}, "message": "[nvptx] Add early-out cases in nvptx_goacc_validate_dims\n\nAdd early-out cases for for oacc_min_dims_p and routine_p in\nnvptx_goacc_validate_dims, allowing simplification of the rest of the\nfunction.\n\n2019-01-03  Tom de Vries  <tdevries@suse.de>\n\n\t* config/nvptx/nvptx.c (nvptx_goacc_validate_dims_1): Add early-out\n\tcases for oacc_min_dims_p and routine_p.  Add asserts for\n\toacc_default_dims_p and offload_region_p.\n\nFrom-SVN: r267556", "tree": {"sha": "e2034a6fbcfc6a09276f9f8eed81d93e18b03caf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2034a6fbcfc6a09276f9f8eed81d93e18b03caf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b1716079db6646bd77967bb383d2da1e375694f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b1716079db6646bd77967bb383d2da1e375694f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b1716079db6646bd77967bb383d2da1e375694f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b1716079db6646bd77967bb383d2da1e375694f/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5f57c8f347352a8c9fd8cfbf253a545f272850d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f57c8f347352a8c9fd8cfbf253a545f272850d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f57c8f347352a8c9fd8cfbf253a545f272850d6"}], "stats": {"total": 68, "additions": 56, "deletions": 12}, "files": [{"sha": "fc6c4f0bdf449789887726b095a50ff567c968d1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1716079db6646bd77967bb383d2da1e375694f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1716079db6646bd77967bb383d2da1e375694f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4b1716079db6646bd77967bb383d2da1e375694f", "patch": "@@ -1,3 +1,9 @@\n+2019-01-03  Tom de Vries  <tdevries@suse.de>\n+\n+\t* config/nvptx/nvptx.c (nvptx_goacc_validate_dims_1): Add early-out\n+\tcases for oacc_min_dims_p and routine_p.  Add asserts for\n+\toacc_default_dims_p and offload_region_p.\n+\n 2019-01-03  Tom de Vries  <tdevries@suse.de>\n \n \t* config/nvptx/nvptx.c (nvptx_goacc_validate_dims_1): New function,"}, {"sha": "009341975882d8a20a05f57f51725d95585d1109", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 50, "deletions": 12, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1716079db6646bd77967bb383d2da1e375694f/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1716079db6646bd77967bb383d2da1e375694f/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=4b1716079db6646bd77967bb383d2da1e375694f", "patch": "@@ -5254,19 +5254,57 @@ nvptx_goacc_validate_dims_1 (tree decl, int dims[], int fn_level)\n       dims[GOMP_DIM_GANG] = fn_level > GOMP_DIM_GANG ? 1 : 0;\n     }\n \n-  /* The vector size must be 32, unless this is a SEQ routine.  */\n-  if ((offload_region_p || oacc_default_dims_p\n-       || (routine_p && !routine_seq_p))\n-      && dims[GOMP_DIM_VECTOR] >= 0\n+  if (oacc_min_dims_p)\n+    {\n+      gcc_assert (dims[GOMP_DIM_VECTOR] == 1);\n+      gcc_assert (dims[GOMP_DIM_WORKER] == 1);\n+      gcc_assert (dims[GOMP_DIM_GANG] == 1);\n+\n+      dims[GOMP_DIM_VECTOR] = PTX_WARP_SIZE;\n+      return;\n+    }\n+\n+  if (routine_p)\n+    {\n+      if (!routine_seq_p)\n+\tdims[GOMP_DIM_VECTOR] = PTX_WARP_SIZE;\n+\n+      return;\n+    }\n+\n+  if (oacc_default_dims_p)\n+    {\n+      /* -1  : not set\n+\t  0  : set at runtime, f.i. -fopenacc-dims=-\n+         >= 1: set at compile time, f.i. -fopenacc-dims=1.  */\n+      gcc_assert (dims[GOMP_DIM_VECTOR] >= -1);\n+      gcc_assert (dims[GOMP_DIM_WORKER] >= -1);\n+      gcc_assert (dims[GOMP_DIM_GANG] >= -1);\n+\n+      /* But -fopenacc-dims=- is not yet supported on trunk.  */\n+      gcc_assert (dims[GOMP_DIM_VECTOR] != 0);\n+      gcc_assert (dims[GOMP_DIM_WORKER] != 0);\n+      gcc_assert (dims[GOMP_DIM_GANG] != 0);\n+    }\n+\n+  if (offload_region_p)\n+    {\n+      /* -1   : not set\n+\t  0   : set using variable, f.i. num_gangs (n)\n+\t  >= 1: set using constant, f.i. num_gangs (1).  */\n+      gcc_assert (dims[GOMP_DIM_VECTOR] >= -1);\n+      gcc_assert (dims[GOMP_DIM_WORKER] >= -1);\n+      gcc_assert (dims[GOMP_DIM_GANG] >= -1);\n+    }\n+\n+  if (dims[GOMP_DIM_VECTOR] >= 0\n       && dims[GOMP_DIM_VECTOR] != PTX_VECTOR_LENGTH)\n     {\n-      if ((offload_region_p || oacc_default_dims_p)\n-\t  && dims[GOMP_DIM_VECTOR] >= 0)\n-\twarning_at (decl ? DECL_SOURCE_LOCATION (decl) : UNKNOWN_LOCATION, 0,\n-\t\t    dims[GOMP_DIM_VECTOR]\n-\t\t    ? G_(\"using vector_length (%d), ignoring %d\")\n-\t\t    : G_(\"using vector_length (%d), ignoring runtime setting\"),\n-\t\t    PTX_VECTOR_LENGTH, dims[GOMP_DIM_VECTOR]);\n+      warning_at (decl ? DECL_SOURCE_LOCATION (decl) : UNKNOWN_LOCATION, 0,\n+\t\t  dims[GOMP_DIM_VECTOR]\n+\t\t  ? G_(\"using vector_length (%d), ignoring %d\")\n+\t\t  : G_(\"using vector_length (%d), ignoring runtime setting\"),\n+\t\t  PTX_VECTOR_LENGTH, dims[GOMP_DIM_VECTOR]);\n       dims[GOMP_DIM_VECTOR] = PTX_VECTOR_LENGTH;\n     }\n \n@@ -5279,7 +5317,7 @@ nvptx_goacc_validate_dims_1 (tree decl, int dims[], int fn_level)\n       dims[GOMP_DIM_WORKER] = PTX_WORKER_LENGTH;\n     }\n \n-  if (oacc_default_dims_p || oacc_min_dims_p)\n+  if (oacc_default_dims_p)\n     {\n       dims[GOMP_DIM_VECTOR] = PTX_VECTOR_LENGTH;\n       if (dims[GOMP_DIM_WORKER] < 0)"}]}