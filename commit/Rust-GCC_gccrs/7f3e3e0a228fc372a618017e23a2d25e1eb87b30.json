{"sha": "7f3e3e0a228fc372a618017e23a2d25e1eb87b30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2YzZTNlMGEyMjhmYzM3MmE2MTgwMTdlMjNhMmQyNWUxZWI4N2IzMA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2001-06-13T01:14:42Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-06-13T01:14:42Z"}, "message": "fpos.h (fpos::operator-): Don't return reference, return original, non-modified version.\n\n\n2001-06-12  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/bits/fpos.h (fpos::operator-): Don't return reference,\n\treturn original, non-modified version.\n\t(fpos::operator+): Same.\n\nFrom-SVN: r43287", "tree": {"sha": "2e387f3d89622e54a095fc0d367c189d125b68e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e387f3d89622e54a095fc0d367c189d125b68e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f3e3e0a228fc372a618017e23a2d25e1eb87b30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f3e3e0a228fc372a618017e23a2d25e1eb87b30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f3e3e0a228fc372a618017e23a2d25e1eb87b30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f3e3e0a228fc372a618017e23a2d25e1eb87b30/comments", "author": null, "committer": null, "parents": [{"sha": "695ac33fac9774cee59b6ce8cb20406339e3e54c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/695ac33fac9774cee59b6ce8cb20406339e3e54c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/695ac33fac9774cee59b6ce8cb20406339e3e54c"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "ddc78e701d3cc2c14415b759fb7b2870aa0b7464", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f3e3e0a228fc372a618017e23a2d25e1eb87b30/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f3e3e0a228fc372a618017e23a2d25e1eb87b30/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7f3e3e0a228fc372a618017e23a2d25e1eb87b30", "patch": "@@ -1,3 +1,9 @@\n+2001-06-12  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/bits/fpos.h (fpos::operator-): Don't return reference,\n+\treturn original, non-modified version.\n+\t(fpos::operator+): Same.\n+\n 2001-06-12  Loren J. Rittle  <ljrittle@acm.org>\n \n \tlibstdc++/2071\n@@ -32,7 +38,7 @@\n \t* config/os/solaris/solaris2.7/bits/os_defines.h\n \t(_GLIBCPP_AVOID_FSEEK): Likewise.\n \n-2001-06-12   Benjamin Kosnik  <bkoz@redhat.com>\n+2001-06-12  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* acinclude.m4 (GLIBCPP_CHECK_COMPILER_VERSION): Change to\n \tAC_TRY_COMPILE, so that the built compiler is checked, and"}, {"sha": "86eb5c38e4915cec3773d0d1014a57f4f2640ef7", "filename": "libstdc++-v3/include/bits/fpos.h", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f3e3e0a228fc372a618017e23a2d25e1eb87b30/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffpos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f3e3e0a228fc372a618017e23a2d25e1eb87b30/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffpos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffpos.h?ref=7f3e3e0a228fc372a618017e23a2d25e1eb87b30", "patch": "@@ -52,8 +52,8 @@ namespace std\n       typedef _StateT __state_type;\n \n     private:\n-      __state_type \t_M_st;\n       streamoff \t_M_off;\n+      __state_type \t_M_st;\n \n     public:\n       __state_type\n@@ -64,10 +64,10 @@ namespace std\n \n       // NB: The standard defines only the implicit copy ctor and the\n       // previous two members.  The rest is a \"conforming extension\".\n-      fpos(): _M_st(__state_type()), _M_off(streamoff()) { }\n+      fpos(): _M_off(streamoff()), _M_st(__state_type()) { }\n \n       fpos(streamoff __off, __state_type __st = __state_type())\n-      : _M_st(__st), _M_off(__off) { }\n+      :  _M_off(__off), _M_st(__st) { }\n \n       operator streamoff() const { return _M_off; }\n \n@@ -77,18 +77,20 @@ namespace std\n       fpos& \n       operator-=(streamoff __off) { _M_off -= __off; return *this; }\n \n-      fpos& \n+      fpos \n       operator+(streamoff __off) \n       { \n-\tfpos t(*this); \n-\treturn t += __off; \n+\tfpos __t(*this); \n+\t__t += __off;\n+\treturn __t;\n       }\n \n-      fpos&      \n+      fpos      \n       operator-(streamoff __off) \n       { \n-\tfpos t(*this); \n-\treturn t -= __off; \n+\tfpos __t(*this); \n+\t__t -= __off; \n+\treturn __t;\n       }\n \n       bool  "}]}