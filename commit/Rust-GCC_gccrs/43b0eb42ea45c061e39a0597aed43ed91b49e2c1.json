{"sha": "43b0eb42ea45c061e39a0597aed43ed91b49e2c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNiMGViNDJlYTQ1YzA2MWUzOWEwNTk3YWVkNDNlZDkxYjQ5ZTJjMQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-01-30T20:37:09Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-01-30T20:37:09Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r254", "tree": {"sha": "578fa8508cd6c30b1f9ef459015ca4e9385bd718", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/578fa8508cd6c30b1f9ef459015ca4e9385bd718"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43b0eb42ea45c061e39a0597aed43ed91b49e2c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43b0eb42ea45c061e39a0597aed43ed91b49e2c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43b0eb42ea45c061e39a0597aed43ed91b49e2c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43b0eb42ea45c061e39a0597aed43ed91b49e2c1/comments", "author": null, "committer": null, "parents": [{"sha": "f22f5fa078be07534aac477e8ac01ce4e044a3b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f22f5fa078be07534aac477e8ac01ce4e044a3b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f22f5fa078be07534aac477e8ac01ce4e044a3b3"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "e670fe195260a220d4dbc1fa82699420355d9c33", "filename": "gcc/ginclude/stdarg.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43b0eb42ea45c061e39a0597aed43ed91b49e2c1/gcc%2Fginclude%2Fstdarg.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43b0eb42ea45c061e39a0597aed43ed91b49e2c1/gcc%2Fginclude%2Fstdarg.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fstdarg.h?ref=43b0eb42ea45c061e39a0597aed43ed91b49e2c1", "patch": "@@ -12,6 +12,12 @@\n #ifdef __i860__\n #include \"va-i860.h\"\n #else\n+#ifdef __hp9000s800__\n+#include \"va-hp800.h\"\n+#else\n+#ifdef __mips__\n+#include \"va-mips.h\"\n+#else\n \n /* The macro _VA_LIST_ is the same thing used by this file in Ultrix.  */\n #ifndef _VA_LIST_\n@@ -45,6 +51,8 @@ void va_end (va_list);\t\t/* Defined in libgcc.a */\n  (AP += __va_rounded_size (TYPE),\t\t\t\t\t\\\n   *((TYPE *) (AP - __va_rounded_size (TYPE))))\n \n+#endif /* not mips */\n+#endif /* not hp9000s800 */\n #endif /* not i860 */\n #endif /* not m88k */\n #endif /* _STDARG_H */"}, {"sha": "ffa03fb28675c7c856ab50cf62049b90c6f32c4b", "filename": "gcc/ginclude/va-mips.h", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43b0eb42ea45c061e39a0597aed43ed91b49e2c1/gcc%2Fginclude%2Fva-mips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43b0eb42ea45c061e39a0597aed43ed91b49e2c1/gcc%2Fginclude%2Fva-mips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fva-mips.h?ref=43b0eb42ea45c061e39a0597aed43ed91b49e2c1", "patch": "@@ -28,15 +28,25 @@\n typedef char * __va___list;\n #endif\n \n+#define __va_rounded_size(TYPE)  \\\n+  (((sizeof (TYPE) + sizeof (int) - 1) / sizeof (int)) * sizeof (int))\n+\n+#ifdef _STDARG_H\n+#define va_start(AP, LASTARG) \t\t\t\t\t\t\\\n+ (AP = ((char *) &(LASTARG) + __va_rounded_size (LASTARG)))\n+#else\n #define va_start(AP)  AP = (char *) &__builtin_va_alist\n+#endif\n+\n #define va_end(AP)\n \n #ifdef lint\t/* complains about constant in conditional context */\n #define va_arg(list, mode) ((mode *)(list += sizeof(mode)))[-1]\n \n #else\t\t/* !lint */\n-#define va_arg(AP, mode) ((mode *)(AP = \\\n-\t(char *) (sizeof(mode) > 4 ? ((int)AP + 2*8 - 1) & -8 \\\n-\t\t\t\t   : ((int)AP + 2*4 - 1) & -4)))[-1]\n+#define va_arg(AP, mode)\t\t\t\t\t\t\\\n+  ((mode *)(AP = (char *) (__alignof(mode) > 4\t\t\t\t\\\n+\t\t\t\t? ((int)AP + 2*8 - 1) & -8\t\t\\\n+\t\t\t\t: ((int)AP + 2*4 - 1) & -4)))[-1]\n #endif\t\t/* lint */\n "}]}