{"sha": "c3be340eb67fff7ef353d37bd02898f295ea0ef1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNiZTM0MGViNjdmZmY3ZWYzNTNkMzdiZDAyODk4ZjI5NWVhMGVmMQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-07-17T13:18:47Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-07-17T13:18:47Z"}, "message": "PR libstdc++/86450 use -Wabi=2 and simplify -Werror use\n\nUse -Wabi=2 to fix warnings about -Wabi having no effect on its own.\nThis requires suppressing two warnings in src/c++11/debug.cc which do\nnot affect the library ABI.\n\nPreviously libstdc++ defaulted to --enable-werror but the -Werror flag\nwas not actually added unless --enable-maintainer-mode was used. This is\nnot documented and not the expected behaviour. This removes any special\ntreatment for maintainer-mode, makes -Werror depend directly on\n--enable-werror, and changes the default to --enable-werror=no.\n\n\tPR libstdc++/86450\n\t* acinclude.m4 (GLIBCXX_CHECK_COMPILER_FEATURES): Don't define WERROR.\n\t(GLIBCXX_EXPORT_FLAGS): Use -Wabi=2 instead of -Wabi.\n\t* configure: Regenerate.\n\t* configure.ac: Change GLIBCXX_ENABLE_WERROR default to \"no\".\n\t* doc/Makefile.in: Regenerate.\n\t* fragment.am: Set WERROR_FLAG to -Werror instead of $(WERROR).\n\t* include/Makefile.in: Regenerate.\n\t* libsupc++/Makefile.in: Regenerate.\n\t* po/Makefile.in: Regenerate.\n\t* python/Makefile.in: Regenerate.\n\t* src/Makefile.in: Regenerate.\n\t* src/c++11/Makefile.in: Regenerate.\n\t* src/c++11/debug.cc: Use diagnostic pragmas to suppress warnings\n\tfrom -Wabi=2 that don't affect exported symbols.\n\t* src/c++98/Makefile.in: Regenerate.\n\t* src/filesystem/Makefile.in: Regenerate.\n\t* testsuite/Makefile.in: Regenerate.\n\nFrom-SVN: r262824", "tree": {"sha": "dbe147238a4363d6bfb653ac455c00499375f299", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbe147238a4363d6bfb653ac455c00499375f299"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3be340eb67fff7ef353d37bd02898f295ea0ef1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3be340eb67fff7ef353d37bd02898f295ea0ef1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3be340eb67fff7ef353d37bd02898f295ea0ef1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3be340eb67fff7ef353d37bd02898f295ea0ef1/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79a88477ad431b7368b98f80f91077177383012d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79a88477ad431b7368b98f80f91077177383012d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79a88477ad431b7368b98f80f91077177383012d"}], "stats": {"total": 146, "additions": 55, "deletions": 91}, "files": [{"sha": "4345d299deda986689a2d9a097d0bbe4239fb07f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c3be340eb67fff7ef353d37bd02898f295ea0ef1", "patch": "@@ -1,5 +1,24 @@\n 2018-07-17  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tPR libstdc++/86450\n+\t* acinclude.m4 (GLIBCXX_CHECK_COMPILER_FEATURES): Don't define WERROR.\n+\t(GLIBCXX_EXPORT_FLAGS): Use -Wabi=2 instead of -Wabi.\n+\t* configure: Regenerate.\n+\t* configure.ac: Change GLIBCXX_ENABLE_WERROR default to \"no\".\n+\t* doc/Makefile.in: Regenerate.\n+\t* fragment.am: Set WERROR_FLAG to -Werror instead of $(WERROR).\n+\t* include/Makefile.in: Regenerate.\n+\t* libsupc++/Makefile.in: Regenerate.\n+\t* po/Makefile.in: Regenerate.\n+\t* python/Makefile.in: Regenerate.\n+\t* src/Makefile.in: Regenerate.\n+\t* src/c++11/Makefile.in: Regenerate.\n+\t* src/c++11/debug.cc: Use diagnostic pragmas to suppress warnings\n+\tfrom -Wabi=2 that don't affect exported symbols.\n+\t* src/c++98/Makefile.in: Regenerate.\n+\t* src/filesystem/Makefile.in: Regenerate.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n \t* src/c++11/compatibility-thread-c++0x.cc [_GLIBCXX_SHARED]\n \t(_Async_state_common::_M_join): Simplify use of std::call_once and\n \tcorresponding explicit instantiation."}, {"sha": "f24f5d8803b78cdbb99fcbe168b2ad23f6bcbde0", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=c3be340eb67fff7ef353d37bd02898f295ea0ef1", "patch": "@@ -232,7 +232,6 @@ VTV_CXXFLAGS = @VTV_CXXFLAGS@\n VTV_CXXLINKFLAGS = @VTV_CXXLINKFLAGS@\n VTV_PCH_CXXFLAGS = @VTV_PCH_CXXFLAGS@\n WARN_FLAGS = @WARN_FLAGS@\n-WERROR = @WERROR@\n XMLLINT = @XMLLINT@\n XSLTPROC = @XSLTPROC@\n XSL_STYLE_DIR = @XSL_STYLE_DIR@\n@@ -328,7 +327,7 @@ STAMP = echo timestamp >\n toolexecdir = $(glibcxx_toolexecdir)\n toolexeclibdir = $(glibcxx_toolexeclibdir)\n @ENABLE_WERROR_FALSE@WERROR_FLAG = \n-@ENABLE_WERROR_TRUE@WERROR_FLAG = $(WERROR)\n+@ENABLE_WERROR_TRUE@WERROR_FLAG = -Werror\n @ENABLE_EXTERN_TEMPLATE_FALSE@XTEMPLATE_FLAGS = \n @ENABLE_EXTERN_TEMPLATE_TRUE@XTEMPLATE_FLAGS = -fno-implicit-templates\n "}, {"sha": "bbf3c8df3e1cb0dac6dd3a1a9fa9bc8bf5adc421", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=c3be340eb67fff7ef353d37bd02898f295ea0ef1", "patch": "@@ -140,13 +140,6 @@ AC_DEFUN([GLIBCXX_CHECK_COMPILER_FEATURES], [\n   ac_test_CXXFLAGS=\"${CXXFLAGS+set}\"\n   ac_save_CXXFLAGS=\"$CXXFLAGS\"\n \n-  # Check for maintainer-mode bits.\n-  if test x\"$USE_MAINTAINER_MODE\" = xno; then\n-    WERROR=''\n-  else\n-    WERROR='-Werror'\n-  fi\n-\n   # Check for -ffunction-sections -fdata-sections\n   AC_MSG_CHECKING([for g++ that supports -ffunction-sections -fdata-sections])\n   CXXFLAGS='-g -Werror -ffunction-sections -fdata-sections'\n@@ -163,7 +156,6 @@ AC_DEFUN([GLIBCXX_CHECK_COMPILER_FEATURES], [\n   AC_MSG_RESULT($ac_fdsections)\n \n   AC_LANG_RESTORE\n-  AC_SUBST(WERROR)\n   AC_SUBST(SECTION_FLAGS)\n ])\n \n@@ -733,7 +725,7 @@ AC_DEFUN([GLIBCXX_EXPORT_FLAGS], [\n   # OPTIMIZE_CXXFLAGS = -O3 -fstrict-aliasing -fvtable-gc\n   AC_SUBST(OPTIMIZE_CXXFLAGS)\n \n-  WARN_FLAGS='-Wall -Wextra -Wwrite-strings -Wcast-qual -Wabi'\n+  WARN_FLAGS=\"-Wall -Wextra -Wwrite-strings -Wcast-qual -Wabi=2\"\n   AC_SUBST(WARN_FLAGS)\n ])\n "}, {"sha": "101dcd9cb7cbf8722e3f1e00211cd41ad633eb20", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 16, "deletions": 57, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=c3be340eb67fff7ef353d37bd02898f295ea0ef1", "patch": "@@ -728,7 +728,6 @@ BASIC_FILE_CC\n BASIC_FILE_H\n CSTDIO_H\n SECTION_FLAGS\n-WERROR\n ENABLE_FLOAT128_FALSE\n ENABLE_FLOAT128_TRUE\n thread_header\n@@ -1582,7 +1581,7 @@ Optional Features:\n                           memory [default=no]\n   --enable-extern-template\n                           enable extern template [default=yes]\n-  --enable-werror         turns on -Werror [default=yes]\n+  --enable-werror         turns on -Werror [default=no]\n   --enable-vtable-verify  enable vtable verify [default=no]\n   --enable-libstdcxx-time[=KIND]\n                           use KIND for check type [default=auto]\n@@ -11608,7 +11607,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11611 \"configure\"\n+#line 11610 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11714,7 +11713,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11717 \"configure\"\n+#line 11716 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12885,20 +12884,20 @@ if test -z \"$aix_libpath\"; then aix_libpath=\"/usr/lib:/lib\"; fi\n \t      prelink_cmds_CXX='tpldir=Template.dir~\n \t\trm -rf $tpldir~\n \t\t$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n-\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | $NL2SP`\"'\n+\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n \t      old_archive_cmds_CXX='tpldir=Template.dir~\n \t\trm -rf $tpldir~\n \t\t$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n-\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | $NL2SP`~\n+\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n \t\t$RANLIB $oldlib'\n \t      archive_cmds_CXX='tpldir=Template.dir~\n \t\trm -rf $tpldir~\n \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n \t      archive_expsym_cmds_CXX='tpldir=Template.dir~\n \t\trm -rf $tpldir~\n \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n+\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n \t      ;;\n \t    *) # Version 6 and above use weak symbols\n \t      archive_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n@@ -15400,7 +15399,7 @@ $as_echo \"$glibcxx_cv_atomic_long_long\" >&6; }\n   # Fake what AC_TRY_COMPILE does.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15403 \"configure\"\n+#line 15402 \"configure\"\n int main()\n {\n   typedef bool atomic_type;\n@@ -15435,7 +15434,7 @@ $as_echo \"$glibcxx_cv_atomic_bool\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15438 \"configure\"\n+#line 15437 \"configure\"\n int main()\n {\n   typedef short atomic_type;\n@@ -15470,7 +15469,7 @@ $as_echo \"$glibcxx_cv_atomic_short\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15473 \"configure\"\n+#line 15472 \"configure\"\n int main()\n {\n   // NB: _Atomic_word not necessarily int.\n@@ -15506,7 +15505,7 @@ $as_echo \"$glibcxx_cv_atomic_int\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15509 \"configure\"\n+#line 15508 \"configure\"\n int main()\n {\n   typedef long long atomic_type;\n@@ -15587,7 +15586,7 @@ $as_echo \"$as_me: WARNING: Performance of certain classes will degrade as a resu\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15590 \"configure\"\n+#line 15589 \"configure\"\n int main()\n {\n   _Decimal32 d1;\n@@ -15629,7 +15628,7 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15632 \"configure\"\n+#line 15631 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };\n@@ -15663,7 +15662,7 @@ $as_echo \"$enable_int128\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15666 \"configure\"\n+#line 15665 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };\n@@ -15720,13 +15719,6 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n   ac_test_CXXFLAGS=\"${CXXFLAGS+set}\"\n   ac_save_CXXFLAGS=\"$CXXFLAGS\"\n \n-  # Check for maintainer-mode bits.\n-  if test x\"$USE_MAINTAINER_MODE\" = xno; then\n-    WERROR=''\n-  else\n-    WERROR='-Werror'\n-  fi\n-\n   # Check for -ffunction-sections -fdata-sections\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for g++ that supports -ffunction-sections -fdata-sections\" >&5\n $as_echo_n \"checking for g++ that supports -ffunction-sections -fdata-sections... \" >&6; }\n@@ -15769,7 +15761,6 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n-\n # Enable all the variable C++ runtime options that don't require linking.\n \n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for underlying I/O to use\" >&5\n@@ -18104,7 +18095,7 @@ if test \"${enable_werror+set}\" = set; then :\n       esac\n \n else\n-  enable_werror=yes\n+  enable_werror=no\n fi\n \n \n@@ -29055,13 +29046,6 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n   ac_test_CXXFLAGS=\"${CXXFLAGS+set}\"\n   ac_save_CXXFLAGS=\"$CXXFLAGS\"\n \n-  # Check for maintainer-mode bits.\n-  if test x\"$USE_MAINTAINER_MODE\" = xno; then\n-    WERROR=''\n-  else\n-    WERROR='-Werror'\n-  fi\n-\n   # Check for -ffunction-sections -fdata-sections\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for g++ that supports -ffunction-sections -fdata-sections\" >&5\n $as_echo_n \"checking for g++ that supports -ffunction-sections -fdata-sections... \" >&6; }\n@@ -29104,7 +29088,6 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n-\n   # If we're not using GNU ld, then there's no point in even trying these\n   # tests.  Check for that first.  We should have already tested for gld\n   # by now (in libtool), but require it now just to be safe...\n@@ -35049,13 +35032,6 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n   ac_test_CXXFLAGS=\"${CXXFLAGS+set}\"\n   ac_save_CXXFLAGS=\"$CXXFLAGS\"\n \n-  # Check for maintainer-mode bits.\n-  if test x\"$USE_MAINTAINER_MODE\" = xno; then\n-    WERROR=''\n-  else\n-    WERROR='-Werror'\n-  fi\n-\n   # Check for -ffunction-sections -fdata-sections\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for g++ that supports -ffunction-sections -fdata-sections\" >&5\n $as_echo_n \"checking for g++ that supports -ffunction-sections -fdata-sections... \" >&6; }\n@@ -35098,7 +35074,6 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n-\n   # If we're not using GNU ld, then there's no point in even trying these\n   # tests.  Check for that first.  We should have already tested for gld\n   # by now (in libtool), but require it now just to be safe...\n@@ -53809,13 +53784,6 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n   ac_test_CXXFLAGS=\"${CXXFLAGS+set}\"\n   ac_save_CXXFLAGS=\"$CXXFLAGS\"\n \n-  # Check for maintainer-mode bits.\n-  if test x\"$USE_MAINTAINER_MODE\" = xno; then\n-    WERROR=''\n-  else\n-    WERROR='-Werror'\n-  fi\n-\n   # Check for -ffunction-sections -fdata-sections\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for g++ that supports -ffunction-sections -fdata-sections\" >&5\n $as_echo_n \"checking for g++ that supports -ffunction-sections -fdata-sections... \" >&6; }\n@@ -53858,7 +53826,6 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n-\n   # If we're not using GNU ld, then there's no point in even trying these\n   # tests.  Check for that first.  We should have already tested for gld\n   # by now (in libtool), but require it now just to be safe...\n@@ -66510,13 +66477,6 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n   ac_test_CXXFLAGS=\"${CXXFLAGS+set}\"\n   ac_save_CXXFLAGS=\"$CXXFLAGS\"\n \n-  # Check for maintainer-mode bits.\n-  if test x\"$USE_MAINTAINER_MODE\" = xno; then\n-    WERROR=''\n-  else\n-    WERROR='-Werror'\n-  fi\n-\n   # Check for -ffunction-sections -fdata-sections\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for g++ that supports -ffunction-sections -fdata-sections\" >&5\n $as_echo_n \"checking for g++ that supports -ffunction-sections -fdata-sections... \" >&6; }\n@@ -66559,7 +66519,6 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n-\n   # If we're not using GNU ld, then there's no point in even trying these\n   # tests.  Check for that first.  We should have already tested for gld\n   # by now (in libtool), but require it now just to be safe...\n@@ -81846,7 +81805,7 @@ $as_echo \"$gxx_include_dir\" >&6; }\n   # OPTIMIZE_CXXFLAGS = -O3 -fstrict-aliasing -fvtable-gc\n \n \n-  WARN_FLAGS='-Wall -Wextra -Wwrite-strings -Wcast-qual -Wabi'\n+  WARN_FLAGS=\"-Wall -Wextra -Wwrite-strings -Wcast-qual -Wabi=2\"\n \n \n "}, {"sha": "1e0a33fb3eada70a93c9b1ecb34cc36b4e3aaaa9", "filename": "libstdc++-v3/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.ac?ref=c3be340eb67fff7ef353d37bd02898f295ea0ef1", "patch": "@@ -175,7 +175,7 @@ GLIBCXX_ENABLE_CXX_FLAGS\n GLIBCXX_ENABLE_FULLY_DYNAMIC_STRING([no])\n GLIBCXX_ENABLE_EXTERN_TEMPLATE([yes])\n GLIBCXX_ENABLE_PYTHON\n-GLIBCXX_ENABLE_WERROR([yes])\n+GLIBCXX_ENABLE_WERROR([no])\n GLIBCXX_ENABLE_VTABLE_VERIFY([no])\n \n # Checks for operating systems support that doesn't require linking."}, {"sha": "c19f7bdf340d9d53ae5ceb6762109936907c9d39", "filename": "libstdc++-v3/doc/Makefile.in", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in?ref=c3be340eb67fff7ef353d37bd02898f295ea0ef1", "patch": "@@ -204,7 +204,6 @@ VTV_CXXFLAGS = @VTV_CXXFLAGS@\n VTV_CXXLINKFLAGS = @VTV_CXXLINKFLAGS@\n VTV_PCH_CXXFLAGS = @VTV_PCH_CXXFLAGS@\n WARN_FLAGS = @WARN_FLAGS@\n-WERROR = @WERROR@\n \n # Validate existing XML structure.\n XMLLINT = xmllint\n@@ -310,7 +309,7 @@ STAMP = echo timestamp >\n toolexecdir = $(glibcxx_toolexecdir)\n toolexeclibdir = $(glibcxx_toolexeclibdir)\n @ENABLE_WERROR_FALSE@WERROR_FLAG = \n-@ENABLE_WERROR_TRUE@WERROR_FLAG = $(WERROR)\n+@ENABLE_WERROR_TRUE@WERROR_FLAG = -Werror\n @ENABLE_EXTERN_TEMPLATE_FALSE@XTEMPLATE_FLAGS = \n @ENABLE_EXTERN_TEMPLATE_TRUE@XTEMPLATE_FLAGS = -fno-implicit-templates\n "}, {"sha": "216c572fc60e43e35859f47c48e742e0c7729bfc", "filename": "libstdc++-v3/fragment.am", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2Ffragment.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2Ffragment.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ffragment.am?ref=c3be340eb67fff7ef353d37bd02898f295ea0ef1", "patch": "@@ -14,9 +14,9 @@ toolexecdir = $(glibcxx_toolexecdir)\n toolexeclibdir = $(glibcxx_toolexeclibdir)\n \n if ENABLE_WERROR\n-WERROR_FLAG=$(WERROR)\n+WERROR_FLAG = -Werror\n else\n-WERROR_FLAG=\n+WERROR_FLAG =\n endif\n \n if ENABLE_EXTERN_TEMPLATE"}, {"sha": "ff3249e346ea3e813bb82229be0be069ab3cae9f", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=c3be340eb67fff7ef353d37bd02898f295ea0ef1", "patch": "@@ -204,7 +204,6 @@ VTV_CXXFLAGS = @VTV_CXXFLAGS@\n VTV_CXXLINKFLAGS = @VTV_CXXLINKFLAGS@\n VTV_PCH_CXXFLAGS = @VTV_PCH_CXXFLAGS@\n WARN_FLAGS = @WARN_FLAGS@\n-WERROR = @WERROR@\n XMLLINT = @XMLLINT@\n XSLTPROC = @XSLTPROC@\n XSL_STYLE_DIR = @XSL_STYLE_DIR@\n@@ -300,7 +299,7 @@ STAMP = echo timestamp >\n toolexecdir = $(glibcxx_toolexecdir)\n toolexeclibdir = $(glibcxx_toolexeclibdir)\n @ENABLE_WERROR_FALSE@WERROR_FLAG = \n-@ENABLE_WERROR_TRUE@WERROR_FLAG = $(WERROR)\n+@ENABLE_WERROR_TRUE@WERROR_FLAG = -Werror\n @ENABLE_EXTERN_TEMPLATE_FALSE@XTEMPLATE_FLAGS = \n @ENABLE_EXTERN_TEMPLATE_TRUE@XTEMPLATE_FLAGS = -fno-implicit-templates\n "}, {"sha": "1e63bab6a09bfebf941e2a2f84605f2bcdc8a3fc", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=c3be340eb67fff7ef353d37bd02898f295ea0ef1", "patch": "@@ -277,7 +277,6 @@ VTV_CXXFLAGS = @VTV_CXXFLAGS@\n VTV_CXXLINKFLAGS = @VTV_CXXLINKFLAGS@\n VTV_PCH_CXXFLAGS = @VTV_PCH_CXXFLAGS@\n WARN_FLAGS = @WARN_FLAGS@\n-WERROR = @WERROR@\n XMLLINT = @XMLLINT@\n XSLTPROC = @XSLTPROC@\n XSL_STYLE_DIR = @XSL_STYLE_DIR@\n@@ -373,7 +372,7 @@ STAMP = echo timestamp >\n toolexecdir = $(glibcxx_toolexecdir)\n toolexeclibdir = $(glibcxx_toolexeclibdir)\n @ENABLE_WERROR_FALSE@WERROR_FLAG = \n-@ENABLE_WERROR_TRUE@WERROR_FLAG = $(WERROR)\n+@ENABLE_WERROR_TRUE@WERROR_FLAG = -Werror\n @ENABLE_EXTERN_TEMPLATE_FALSE@XTEMPLATE_FLAGS = \n @ENABLE_EXTERN_TEMPLATE_TRUE@XTEMPLATE_FLAGS = -fno-implicit-templates\n "}, {"sha": "1f0ac5bf526318157bed6d1a2f5d4f03b640c8b7", "filename": "libstdc++-v3/po/Makefile.in", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpo%2FMakefile.in?ref=c3be340eb67fff7ef353d37bd02898f295ea0ef1", "patch": "@@ -204,7 +204,6 @@ VTV_CXXFLAGS = @VTV_CXXFLAGS@\n VTV_CXXLINKFLAGS = @VTV_CXXLINKFLAGS@\n VTV_PCH_CXXFLAGS = @VTV_PCH_CXXFLAGS@\n WARN_FLAGS = @WARN_FLAGS@\n-WERROR = @WERROR@\n XMLLINT = @XMLLINT@\n XSLTPROC = @XSLTPROC@\n XSL_STYLE_DIR = @XSL_STYLE_DIR@\n@@ -300,7 +299,7 @@ STAMP = echo timestamp >\n toolexecdir = $(glibcxx_toolexecdir)\n toolexeclibdir = $(glibcxx_toolexeclibdir)\n @ENABLE_WERROR_FALSE@WERROR_FLAG = \n-@ENABLE_WERROR_TRUE@WERROR_FLAG = $(WERROR)\n+@ENABLE_WERROR_TRUE@WERROR_FLAG = -Werror\n @ENABLE_EXTERN_TEMPLATE_FALSE@XTEMPLATE_FLAGS = \n @ENABLE_EXTERN_TEMPLATE_TRUE@XTEMPLATE_FLAGS = -fno-implicit-templates\n "}, {"sha": "f033a0589faf12815ab87408733e56deb76e8258", "filename": "libstdc++-v3/python/Makefile.in", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2Fpython%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2Fpython%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2FMakefile.in?ref=c3be340eb67fff7ef353d37bd02898f295ea0ef1", "patch": "@@ -234,7 +234,6 @@ VTV_CXXFLAGS = @VTV_CXXFLAGS@\n VTV_CXXLINKFLAGS = @VTV_CXXLINKFLAGS@\n VTV_PCH_CXXFLAGS = @VTV_PCH_CXXFLAGS@\n WARN_FLAGS = @WARN_FLAGS@\n-WERROR = @WERROR@\n XMLLINT = @XMLLINT@\n XSLTPROC = @XSLTPROC@\n XSL_STYLE_DIR = @XSL_STYLE_DIR@\n@@ -330,7 +329,7 @@ STAMP = echo timestamp >\n toolexecdir = $(glibcxx_toolexecdir)\n toolexeclibdir = $(glibcxx_toolexeclibdir)\n @ENABLE_WERROR_FALSE@WERROR_FLAG = \n-@ENABLE_WERROR_TRUE@WERROR_FLAG = $(WERROR)\n+@ENABLE_WERROR_TRUE@WERROR_FLAG = -Werror\n @ENABLE_EXTERN_TEMPLATE_FALSE@XTEMPLATE_FLAGS = \n @ENABLE_EXTERN_TEMPLATE_TRUE@XTEMPLATE_FLAGS = -fno-implicit-templates\n "}, {"sha": "d427ed539da4a9e15379030add041dbd18667e05", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=c3be340eb67fff7ef353d37bd02898f295ea0ef1", "patch": "@@ -267,7 +267,6 @@ VTV_CXXFLAGS = @VTV_CXXFLAGS@\n VTV_CXXLINKFLAGS = @VTV_CXXLINKFLAGS@\n VTV_PCH_CXXFLAGS = @VTV_PCH_CXXFLAGS@\n WARN_FLAGS = @WARN_FLAGS@\n-WERROR = @WERROR@\n XMLLINT = @XMLLINT@\n XSLTPROC = @XSLTPROC@\n XSL_STYLE_DIR = @XSL_STYLE_DIR@\n@@ -363,7 +362,7 @@ STAMP = echo timestamp >\n toolexecdir = $(glibcxx_toolexecdir)\n toolexeclibdir = $(glibcxx_toolexeclibdir)\n @ENABLE_WERROR_FALSE@WERROR_FLAG = \n-@ENABLE_WERROR_TRUE@WERROR_FLAG = $(WERROR)\n+@ENABLE_WERROR_TRUE@WERROR_FLAG = -Werror\n @ENABLE_EXTERN_TEMPLATE_FALSE@XTEMPLATE_FLAGS = \n @ENABLE_EXTERN_TEMPLATE_TRUE@XTEMPLATE_FLAGS = -fno-implicit-templates\n "}, {"sha": "d4c4b72a1aea98292bec7a6d2880797b4cf48fbf", "filename": "libstdc++-v3/src/c++11/Makefile.in", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in?ref=c3be340eb67fff7ef353d37bd02898f295ea0ef1", "patch": "@@ -242,7 +242,6 @@ VTV_CXXFLAGS = @VTV_CXXFLAGS@\n VTV_CXXLINKFLAGS = @VTV_CXXLINKFLAGS@\n VTV_PCH_CXXFLAGS = @VTV_PCH_CXXFLAGS@\n WARN_FLAGS = @WARN_FLAGS@\n-WERROR = @WERROR@\n XMLLINT = @XMLLINT@\n XSLTPROC = @XSLTPROC@\n XSL_STYLE_DIR = @XSL_STYLE_DIR@\n@@ -338,7 +337,7 @@ STAMP = echo timestamp >\n toolexecdir = $(glibcxx_toolexecdir)\n toolexeclibdir = $(glibcxx_toolexeclibdir)\n @ENABLE_WERROR_FALSE@WERROR_FLAG = \n-@ENABLE_WERROR_TRUE@WERROR_FLAG = $(WERROR)\n+@ENABLE_WERROR_TRUE@WERROR_FLAG = -Werror\n @ENABLE_EXTERN_TEMPLATE_FALSE@XTEMPLATE_FLAGS = \n @ENABLE_EXTERN_TEMPLATE_TRUE@XTEMPLATE_FLAGS = -fno-implicit-templates\n "}, {"sha": "88fe889dd6afd6b07e41f74e94ca726485826671", "filename": "libstdc++-v3/src/c++11/debug.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fdebug.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fdebug.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fdebug.cc?ref=c3be340eb67fff7ef353d37bd02898f295ea0ef1", "patch": "@@ -66,6 +66,10 @@ namespace\n     return __gnu_internal::get_mutex(index);\n   }\n \n+#pragma GCC diagnostic push\n+// Suppress -Wabi=2 warnings due to PR c++/51322 mangling change\n+#pragma GCC diagnostic warning \"-Wabi=6\"\n+\n   void\n   swap_its(__gnu_debug::_Safe_sequence_base& __lhs,\n \t   __gnu_debug::_Safe_iterator_base*& __lhs_its,\n@@ -90,6 +94,7 @@ namespace\n     swap_its(__lhs, __lhs._M_const_iterators,\n \t     __rhs, __rhs._M_const_iterators);\n   }\n+#pragma GCC diagnostic pop\n \n   template<typename _Action>\n     void"}, {"sha": "33f2ac0f87a8c5ee689c4d1fb83920cc1adef9f4", "filename": "libstdc++-v3/src/c++98/Makefile.in", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in?ref=c3be340eb67fff7ef353d37bd02898f295ea0ef1", "patch": "@@ -238,7 +238,6 @@ VTV_CXXFLAGS = @VTV_CXXFLAGS@\n VTV_CXXLINKFLAGS = @VTV_CXXLINKFLAGS@\n VTV_PCH_CXXFLAGS = @VTV_PCH_CXXFLAGS@\n WARN_FLAGS = @WARN_FLAGS@\n-WERROR = @WERROR@\n XMLLINT = @XMLLINT@\n XSLTPROC = @XSLTPROC@\n XSL_STYLE_DIR = @XSL_STYLE_DIR@\n@@ -334,7 +333,7 @@ STAMP = echo timestamp >\n toolexecdir = $(glibcxx_toolexecdir)\n toolexeclibdir = $(glibcxx_toolexeclibdir)\n @ENABLE_WERROR_FALSE@WERROR_FLAG = \n-@ENABLE_WERROR_TRUE@WERROR_FLAG = $(WERROR)\n+@ENABLE_WERROR_TRUE@WERROR_FLAG = -Werror\n @ENABLE_EXTERN_TEMPLATE_FALSE@XTEMPLATE_FLAGS = \n @ENABLE_EXTERN_TEMPLATE_TRUE@XTEMPLATE_FLAGS = -fno-implicit-templates\n "}, {"sha": "e38115afecc420d32b80189cc08f45a552c260f9", "filename": "libstdc++-v3/src/filesystem/Makefile.in", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2FMakefile.in?ref=c3be340eb67fff7ef353d37bd02898f295ea0ef1", "patch": "@@ -248,7 +248,6 @@ VTV_CXXFLAGS = @VTV_CXXFLAGS@\n VTV_CXXLINKFLAGS = @VTV_CXXLINKFLAGS@\n VTV_PCH_CXXFLAGS = @VTV_PCH_CXXFLAGS@\n WARN_FLAGS = @WARN_FLAGS@\n-WERROR = @WERROR@\n XMLLINT = @XMLLINT@\n XSLTPROC = @XSLTPROC@\n XSL_STYLE_DIR = @XSL_STYLE_DIR@\n@@ -344,7 +343,7 @@ STAMP = echo timestamp >\n toolexecdir = $(glibcxx_toolexecdir)\n toolexeclibdir = $(glibcxx_toolexeclibdir)\n @ENABLE_WERROR_FALSE@WERROR_FLAG = \n-@ENABLE_WERROR_TRUE@WERROR_FLAG = $(WERROR)\n+@ENABLE_WERROR_TRUE@WERROR_FLAG = -Werror\n @ENABLE_EXTERN_TEMPLATE_FALSE@XTEMPLATE_FLAGS = \n @ENABLE_EXTERN_TEMPLATE_TRUE@XTEMPLATE_FLAGS = -fno-implicit-templates\n "}, {"sha": "8f40961da839f4c5321033c72d2feeede13c5564", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3be340eb67fff7ef353d37bd02898f295ea0ef1/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=c3be340eb67fff7ef353d37bd02898f295ea0ef1", "patch": "@@ -204,7 +204,6 @@ VTV_CXXFLAGS = @VTV_CXXFLAGS@\n VTV_CXXLINKFLAGS = @VTV_CXXLINKFLAGS@\n VTV_PCH_CXXFLAGS = @VTV_PCH_CXXFLAGS@\n WARN_FLAGS = @WARN_FLAGS@\n-WERROR = @WERROR@\n XMLLINT = @XMLLINT@\n XSLTPROC = @XSLTPROC@\n XSL_STYLE_DIR = @XSL_STYLE_DIR@\n@@ -303,7 +302,7 @@ STAMP = echo timestamp >\n toolexecdir = $(glibcxx_toolexecdir)\n toolexeclibdir = $(glibcxx_toolexeclibdir)\n @ENABLE_WERROR_FALSE@WERROR_FLAG = \n-@ENABLE_WERROR_TRUE@WERROR_FLAG = $(WERROR)\n+@ENABLE_WERROR_TRUE@WERROR_FLAG = -Werror\n @ENABLE_EXTERN_TEMPLATE_FALSE@XTEMPLATE_FLAGS = \n @ENABLE_EXTERN_TEMPLATE_TRUE@XTEMPLATE_FLAGS = -fno-implicit-templates\n "}]}