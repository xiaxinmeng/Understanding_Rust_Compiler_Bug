{"sha": "380ed5edab18c7e4091f392032d858e0b9882625", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzgwZWQ1ZWRhYjE4YzdlNDA5MWYzOTIwMzJkODU4ZTBiOTg4MjYyNQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2011-06-11T15:08:04Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2011-06-11T15:08:04Z"}, "message": "ipa-prop.c (ipa_make_edge_direct_to_target): Fix code setting varying args.\n\n\t* ipa-prop.c (ipa_make_edge_direct_to_target): Fix code setting varying args.\n\t(ipa_update_after_lto_read): Likewise.\n\t(ipa_write_node_info): Do not sream call_with_var_arguments.\n\t(ipa_read_node_info): Likewise.\n\nFrom-SVN: r174955", "tree": {"sha": "e6f5f518f2d323fcf62cbaeac287642ac9b6a280", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6f5f518f2d323fcf62cbaeac287642ac9b6a280"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/380ed5edab18c7e4091f392032d858e0b9882625", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/380ed5edab18c7e4091f392032d858e0b9882625", "html_url": "https://github.com/Rust-GCC/gccrs/commit/380ed5edab18c7e4091f392032d858e0b9882625", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/380ed5edab18c7e4091f392032d858e0b9882625/comments", "author": null, "committer": null, "parents": [{"sha": "00cfc36357ed0e8be5be113d191b0789cd48020c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00cfc36357ed0e8be5be113d191b0789cd48020c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00cfc36357ed0e8be5be113d191b0789cd48020c"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "5ee257f676845c51dafd8dcbf0bdc568b9c8daf6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/380ed5edab18c7e4091f392032d858e0b9882625/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/380ed5edab18c7e4091f392032d858e0b9882625/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=380ed5edab18c7e4091f392032d858e0b9882625", "patch": "@@ -1,3 +1,10 @@\n+2011-06-11  Jan Hubicka  <jh@suse.cz>\n+\n+\t* ipa-prop.c (ipa_make_edge_direct_to_target): Fix code setting varying args.\n+\t(ipa_update_after_lto_read): Likewise.\n+\t(ipa_write_node_info): Do not sream call_with_var_arguments.\n+\t(ipa_read_node_info): Likewise.\n+\n 2011-06-11  Jan Hubicka  <jh@suse.cz>\n \n \t* ipa.c (cgraph_comdat_can_be_unshared_p): Fix pasto."}, {"sha": "6873c9ed9b886edc467f0d9eee7c64a3d51a8821", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/380ed5edab18c7e4091f392032d858e0b9882625/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/380ed5edab18c7e4091f392032d858e0b9882625/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=380ed5edab18c7e4091f392032d858e0b9882625", "patch": "@@ -1719,6 +1719,7 @@ ipa_make_edge_direct_to_target (struct cgraph_edge *ie, tree target, tree delta)\n \t  fprintf (dump_file, \"\\n\");\n \t}\n     }\n+  callee = cgraph_function_or_thunk_node (callee, NULL);\n \n   if (ipa_get_cs_argument_count (IPA_EDGE_REF (ie))\n       != ipa_get_param_count (IPA_NODE_REF (callee)))\n@@ -2815,7 +2816,6 @@ ipa_write_node_info (struct output_block *ob, struct cgraph_node *node)\n   lto_output_uleb128_stream (ob->main_stream, node_ref);\n \n   bp = bitpack_create (ob->main_stream);\n-  bp_pack_value (&bp, info->called_with_var_arguments, 1);\n   gcc_assert (info->uses_analysis_done\n \t      || ipa_get_param_count (info) == 0);\n   gcc_assert (!info->node_enqueued);\n@@ -2858,7 +2858,6 @@ ipa_read_node_info (struct lto_input_block *ib, struct cgraph_node *node,\n   ipa_initialize_node_params (node);\n \n   bp = lto_input_bitpack (ib);\n-  info->called_with_var_arguments = bp_unpack_value (&bp, 1);\n   if (ipa_get_param_count (info) != 0)\n     info->uses_analysis_done = true;\n   info->node_enqueued = false;\n@@ -3015,9 +3014,12 @@ ipa_update_after_lto_read (void)\n     if (node->analyzed)\n       for (cs = node->callees; cs; cs = cs->next_callee)\n \t{\n+\t  struct cgraph_node *callee;\n+\n+\t  callee = cgraph_function_or_thunk_node (cs->callee, NULL);\n \t  if (ipa_get_cs_argument_count (IPA_EDGE_REF (cs))\n-\t      != ipa_get_param_count (IPA_NODE_REF (cs->callee)))\n-\t    ipa_set_called_with_variable_arg (IPA_NODE_REF (cs->callee));\n+\t      != ipa_get_param_count (IPA_NODE_REF (callee)))\n+\t    ipa_set_called_with_variable_arg (IPA_NODE_REF (callee));\n \t}\n }\n "}]}