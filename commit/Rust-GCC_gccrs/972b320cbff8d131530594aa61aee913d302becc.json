{"sha": "972b320cbff8d131530594aa61aee913d302becc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTcyYjMyMGNiZmY4ZDEzMTUzMDU5NGFhNjFhZWU5MTNkMzAyYmVjYw==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "1998-10-14T20:50:40Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-10-14T20:50:40Z"}, "message": "combine.c (combine_instructions): When finished, call init_recog.\n\n8\n\t* combine.c (combine_instructions): When finished, call init_recog.\n\t* regmove.c (optimize_reg_copy_3): Reject volatile MEMs.\n\nFrom-SVN: r23094", "tree": {"sha": "1a00d9684ead61aa00dcd814be10ad013fbfd710", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a00d9684ead61aa00dcd814be10ad013fbfd710"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/972b320cbff8d131530594aa61aee913d302becc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/972b320cbff8d131530594aa61aee913d302becc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/972b320cbff8d131530594aa61aee913d302becc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/972b320cbff8d131530594aa61aee913d302becc/comments", "author": null, "committer": null, "parents": [{"sha": "b1966eeb0b2d7999bc68ecf9af2a098bb40818cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1966eeb0b2d7999bc68ecf9af2a098bb40818cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1966eeb0b2d7999bc68ecf9af2a098bb40818cb"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "f355abc0600a24994e5b3bb078e028df22d0c663", "filename": "gcc/combine.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/972b320cbff8d131530594aa61aee913d302becc/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/972b320cbff8d131530594aa61aee913d302becc/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=972b320cbff8d131530594aa61aee913d302becc", "patch": "@@ -674,6 +674,9 @@ combine_instructions (f, nregs)\n   total_successes += combine_successes;\n \n   nonzero_sign_valid = 0;\n+\n+  /* Make recognizer allow volatile MEMs again.  */\n+  init_recog ();\n }\n \n /* Wipe the reg_last_xxx arrays in preparation for another pass.  */"}, {"sha": "55dd3f352c3b984584ab5a0fcbf4a4ea790d666c", "filename": "gcc/regmove.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/972b320cbff8d131530594aa61aee913d302becc/gcc%2Fregmove.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/972b320cbff8d131530594aa61aee913d302becc/gcc%2Fregmove.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregmove.c?ref=972b320cbff8d131530594aa61aee913d302becc", "patch": "@@ -553,6 +553,11 @@ optimize_reg_copy_3 (insn, dest, src)\n       || SET_DEST (set) != src_reg)\n     return;\n \n+  /* Be conserative: although this optimization is also valid for\n+     volatile memory references, that could cause trouble in later passes.  */\n+  if (MEM_VOLATILE_P (SET_SRC (set)))\n+    return;\n+\n   /* Do not use a SUBREG to truncate from one mode to another if truncation\n      is not a nop.  */\n   if (GET_MODE_BITSIZE (GET_MODE (src_reg)) <= GET_MODE_BITSIZE (GET_MODE (src))"}]}