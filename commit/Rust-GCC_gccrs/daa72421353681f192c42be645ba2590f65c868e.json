{"sha": "daa72421353681f192c42be645ba2590f65c868e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGFhNzI0MjEzNTM2ODFmMTkyYzQyYmU2NDViYTI1OTBmNjVjODY4ZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-09-17T10:38:31Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-09-17T10:38:31Z"}, "message": "[multiple changes]\n\n2009-09-17  Bob Duff  <duff@adacore.com>\n\n\t* gnat_rm.texi, s-oscons-tmplt.c: Minor typo\n\n2009-09-17  Emmanuel Briot  <briot@adacore.com>\n\n\t* gnatcmd.adb, prj-proc.adb, make.adb, prj-ext.adb, prj-ext.ads,\n\tmakeutl.adb, makeutl.ads, clean.adb, prj-pars.adb, prj-pars.ads,\n\tprj-conf.adb, prj-conf.ads, prj-tree.adb, prj-tree.ads, prj-proc.ads,\n\tprj-nmsc.ads (Add, Value_Of, Reset): new parameter Tree.\n\tScenario variables are now specific to each project tree loaded in\n\tmemory.\n\tCode clean ups.\n\n2009-09-17  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_disp.adb (Make_DT): Remove wrong line of code that was\n\tundocumented and probably added by mistake.\n\nFrom-SVN: r151792", "tree": {"sha": "49238d52872cb62ea7b3b2ed01b0bb7f1bcb4397", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49238d52872cb62ea7b3b2ed01b0bb7f1bcb4397"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/daa72421353681f192c42be645ba2590f65c868e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daa72421353681f192c42be645ba2590f65c868e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/daa72421353681f192c42be645ba2590f65c868e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daa72421353681f192c42be645ba2590f65c868e/comments", "author": null, "committer": null, "parents": [{"sha": "15ac3c72db8333d4a63e43949121e5d7f7c2fb78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15ac3c72db8333d4a63e43949121e5d7f7c2fb78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15ac3c72db8333d4a63e43949121e5d7f7c2fb78"}], "stats": {"total": 322, "additions": 220, "deletions": 102}, "files": [{"sha": "f908caf69f8b444867bf1d4ad8470847bb4096a2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=daa72421353681f192c42be645ba2590f65c868e", "patch": "@@ -1,3 +1,22 @@\n+2009-09-17  Bob Duff  <duff@adacore.com>\n+\n+\t* gnat_rm.texi, s-oscons-tmplt.c: Minor typo\n+\n+2009-09-17  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* gnatcmd.adb, prj-proc.adb, make.adb, prj-ext.adb, prj-ext.ads,\n+\tmakeutl.adb, makeutl.ads, clean.adb, prj-pars.adb, prj-pars.ads,\n+\tprj-conf.adb, prj-conf.ads, prj-tree.adb, prj-tree.ads, prj-proc.ads,\n+\tprj-nmsc.ads (Add, Value_Of, Reset): new parameter Tree.\n+\tScenario variables are now specific to each project tree loaded in\n+\tmemory.\n+\tCode clean ups.\n+\n+2009-09-17  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_disp.adb (Make_DT): Remove wrong line of code that was\n+\tundocumented and probably added by mistake.\n+\n 2009-09-16  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (Attribute_to_gnu) <Attr_Size>: Strip"}, {"sha": "a113e6bc8448b0bb60fa512843e20d03c8290719", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=daa72421353681f192c42be645ba2590f65c868e", "patch": "@@ -35,6 +35,7 @@ with Prj;      use Prj;\n with Prj.Env;\n with Prj.Ext;\n with Prj.Pars;\n+with Prj.Tree; use Prj.Tree;\n with Prj.Util; use Prj.Util;\n with Snames;\n with Switch;   use Switch;\n@@ -90,7 +91,7 @@ package body Clean is\n \n    Project_File_Name : String_Access := null;\n \n-   Project_Tree : constant Prj.Project_Tree_Ref := new Prj.Project_Tree_Data;\n+   Project_Node_Tree : Project_Node_Tree_Ref;\n \n    Main_Project : Prj.Project_Id := Prj.No_Project;\n \n@@ -1402,6 +1403,7 @@ package body Clean is\n          Prj.Pars.Parse\n            (Project           => Main_Project,\n             In_Tree           => Project_Tree,\n+            In_Node_Tree      => Project_Node_Tree,\n             Project_File_Name => Project_File_Name.all,\n             Flags             => Gnatmake_Flags,\n             Packages_To_Check => Packages_To_Check_By_Gnatmake);\n@@ -1556,6 +1558,10 @@ package body Clean is\n          Csets.Initialize;\n          Namet.Initialize;\n          Snames.Initialize;\n+\n+         Project_Node_Tree := new Project_Node_Tree_Data;\n+         Prj.Tree.Initialize (Project_Node_Tree);\n+\n          Prj.Initialize (Project_Tree);\n \n          --  Check if the platform is VMS and, if it is, change some variables\n@@ -1873,7 +1879,8 @@ package body Clean is\n \n                            if OK then\n                               Prj.Ext.Add\n-                                (External_Name =>\n+                                (Project_Node_Tree,\n+                                 External_Name =>\n                                    Ext_Asgn (Start .. Equal_Pos - 1),\n                                  Value         =>\n                                    Ext_Asgn (Equal_Pos + 1 .. Stop));"}, {"sha": "00fd9f22e70eb7d6e649dc7d59a51fe30f7ea730", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=daa72421353681f192c42be645ba2590f65c868e", "patch": "@@ -5140,9 +5140,8 @@ package body Exp_Disp is\n \n             exit when Parent_Typ = Current_Typ;\n \n-            if Is_CPP_Class (Parent_Typ)\n-              or else Is_Interface (Typ)\n-            then\n+            if Is_CPP_Class (Parent_Typ) then\n+\n                --  The tags defined in the C++ side will be inherited when\n                --  the object is constructed (Exp_Ch3.Build_Init_Procedure)\n "}, {"sha": "e25400d09fc2102261a7450fd46ba24b34d90204", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=daa72421353681f192c42be645ba2590f65c868e", "patch": "@@ -7733,11 +7733,11 @@ Followed.\n In addition to the implementation dependent pragmas and attributes, and\n the implementation advice, there are a number of other Ada features\n that are potentially implementation dependent.  These are mentioned\n-throughout the Ada Reference Manual, and are summarized in annex M@.\n+throughout the Ada Reference Manual, and are summarized in Annex M@.\n \n A requirement for conforming Ada compilers is that they provide\n documentation describing how the implementation deals with each of these\n-issues.  In this chapter, you will find each point in annex M listed\n+issues.  In this chapter, you will find each point in Annex M listed\n followed by a description in italic font of how GNAT\n @c SGI info:\n @ignore"}, {"sha": "d3f74c075dce7bce56c9a2ed438dd13c1a0fbf55", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=daa72421353681f192c42be645ba2590f65c868e", "patch": "@@ -26,7 +26,7 @@\n with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n \n with Csets;\n-with Makeutl;\n+with Makeutl;  use Makeutl;\n with MLib.Tgt; use MLib.Tgt;\n with MLib.Utl;\n with MLib.Fil;\n@@ -38,6 +38,7 @@ with Prj;      use Prj;\n with Prj.Env;\n with Prj.Ext;  use Prj.Ext;\n with Prj.Pars;\n+with Prj.Tree; use Prj.Tree;\n with Prj.Util; use Prj.Util;\n with Sinput.P;\n with Snames;   use Snames;\n@@ -57,7 +58,7 @@ with GNAT.OS_Lib;             use GNAT.OS_Lib;\n with VMS_Conv;                use VMS_Conv;\n \n procedure GNATCmd is\n-   Project_Tree      : constant Project_Tree_Ref := new Project_Tree_Data;\n+   Project_Node_Tree : Project_Node_Tree_Ref;\n    Project_File      : String_Access;\n    Project           : Prj.Project_Id;\n    Current_Verbosity : Prj.Verbosity := Prj.Default;\n@@ -1268,6 +1269,9 @@ begin\n \n    Snames.Initialize;\n \n+   Project_Node_Tree := new Project_Node_Tree_Data;\n+   Prj.Tree.Initialize (Project_Node_Tree);\n+\n    Prj.Initialize (Project_Tree);\n \n    Last_Switches.Init;\n@@ -1694,7 +1698,8 @@ begin\n                      begin\n                         if Equal_Pos >= Argv'First + 3 and then\n                           Equal_Pos /= Argv'Last then\n-                           Add (External_Name =>\n+                           Add (Project_Node_Tree,\n+                                External_Name =>\n                                   Argv (Argv'First + 2 .. Equal_Pos - 1),\n                                 Value => Argv (Equal_Pos + 1 .. Argv'Last));\n                         else\n@@ -1753,6 +1758,7 @@ begin\n          Prj.Pars.Parse\n            (Project           => Project,\n             In_Tree           => Project_Tree,\n+            In_Node_Tree      => Project_Node_Tree,\n             Project_File_Name => Project_File.all,\n             Flags             => Gnatmake_Flags,\n             Packages_To_Check => Packages_To_Check);\n@@ -2114,7 +2120,7 @@ begin\n             --  arguments.\n \n             for J in 1 .. Last_Switches.Last loop\n-               Test_If_Relative_Path\n+               GNATCmd.Test_If_Relative_Path\n                  (Last_Switches.Table (J), Current_Work_Dir);\n             end loop;\n \n@@ -2124,7 +2130,7 @@ begin\n                Project_Dir : constant String := Name_Buffer (1 .. Name_Len);\n             begin\n                for J in 1 .. First_Switches.Last loop\n-                  Test_If_Relative_Path\n+                  GNATCmd.Test_If_Relative_Path\n                     (First_Switches.Table (J), Project_Dir);\n                end loop;\n             end;"}, {"sha": "5471c971e6cd3f224d93e9220f54730d1e2c79d7", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 75, "deletions": 38, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=daa72421353681f192c42be645ba2590f65c868e", "patch": "@@ -49,10 +49,16 @@ with Prj;      use Prj;\n with Prj.Com;\n with Prj.Env;\n with Prj.Pars;\n+with Prj.Tree; use Prj.Tree;\n with Prj.Util;\n with SFN_Scan;\n with Sinput.P;\n with Snames;   use Snames;\n+\n+pragma Warnings (Off);\n+with System.HTable;\n+pragma Warnings (On);\n+\n with Switch;   use Switch;\n with Switch.M; use Switch.M;\n with Targparm; use Targparm;\n@@ -68,8 +74,6 @@ with GNAT.Dynamic_HTables;      use GNAT.Dynamic_HTables;\n with GNAT.Case_Util;            use GNAT.Case_Util;\n with GNAT.OS_Lib;               use GNAT.OS_Lib;\n \n-with System.HTable;\n-\n package body Make is\n \n    use ASCII;\n@@ -640,7 +644,7 @@ package body Make is\n    --  directory of the ultimate extending project. If it is not, we ignore\n    --  the fact that this ALI file is read-only.\n \n-   procedure Process_Multilib;\n+   procedure Process_Multilib (Project_Node_Tree : Project_Node_Tree_Ref);\n    --  Add appropriate --RTS argument to handle multilib\n \n    ----------------------------------------------------\n@@ -710,7 +714,8 @@ package body Make is\n       File_Name                        : String;\n       Index                            : Int;\n       Program                          : Make_Program_Type;\n-      Unknown_Switches_To_The_Compiler : Boolean := True);\n+      Unknown_Switches_To_The_Compiler : Boolean := True;\n+      Project_Node_Tree                : Project_Node_Tree_Ref);\n    procedure Add_Switch\n      (S             : String_Access;\n       Program       : Make_Program_Type;\n@@ -998,7 +1003,7 @@ package body Make is\n    --  during a compilation are also transitively included in the W section\n    --  of the originally compiled file.\n \n-   procedure Initialize;\n+   procedure Initialize (Project_Node_Tree : out Project_Node_Tree_Ref);\n    --  Performs default and package initialization. Therefore,\n    --  Compile_Sources can be called by an external unit.\n \n@@ -1010,8 +1015,13 @@ package body Make is\n    --  Args must have a lower bound of 1. Success indicates if the link\n    --  succeeded or not.\n \n-   procedure Scan_Make_Arg (Argv : String; And_Save : Boolean);\n-   --  Scan make arguments. Argv is a single argument to be processed\n+   procedure Scan_Make_Arg\n+     (Project_Node_Tree : Project_Node_Tree_Ref;\n+      Argv              : String;\n+      And_Save          : Boolean);\n+   --  Scan make arguments. Argv is a single argument to be processed.\n+   --  Project_Node_Tree will be used to initialize external references. It\n+   --  must have been initialized.\n \n    -------------------\n    -- Add_Arguments --\n@@ -1233,7 +1243,8 @@ package body Make is\n       File_Name                        : String;\n       Index                            : Int;\n       Program                          : Make_Program_Type;\n-      Unknown_Switches_To_The_Compiler : Boolean := True)\n+      Unknown_Switches_To_The_Compiler : Boolean := True;\n+      Project_Node_Tree                : Project_Node_Tree_Ref)\n    is\n       Switches    : Variable_Value;\n       Switch_List : String_List_Id;\n@@ -1274,7 +1285,8 @@ package body Make is\n                         Write_Line (Argv);\n                      end if;\n \n-                     Scan_Make_Arg (Argv, And_Save => False);\n+                     Scan_Make_Arg\n+                       (Project_Node_Tree, Argv, And_Save => False);\n \n                      if not Gnatmake_Switch_Found\n                        and then not Switch_May_Be_Passed_To_The_Compiler\n@@ -4019,6 +4031,8 @@ package body Make is\n       Mapping_Path : Path_Name_Type := No_Path;\n       --  The path name of the mapping file\n \n+      Project_Node_Tree : Project_Node_Tree_Ref;\n+\n       Discard : Boolean;\n       pragma Warnings (Off, Discard);\n \n@@ -4366,7 +4380,7 @@ package body Make is\n \n       Obsoleted.Reset;\n \n-      Make.Initialize;\n+      Make.Initialize (Project_Node_Tree);\n \n       Bind_Shared := No_Shared_Switch'Access;\n       Link_With_Shared_Libgcc := No_Shared_Libgcc_Switch'Access;\n@@ -4845,7 +4859,8 @@ package body Make is\n                   end if;\n \n                   Add_Switches\n-                    (File_Name                        => Main_Unit_File_Name,\n+                    (Project_Node_Tree                => Project_Node_Tree,\n+                     File_Name                        => Main_Unit_File_Name,\n                      Index                            => Main_Index,\n                      The_Package                      => Builder_Package,\n                      Program                          => None,\n@@ -4900,7 +4915,8 @@ package body Make is\n                         end if;\n \n                         Add_Switches\n-                          (File_Name                        => \" \",\n+                          (Project_Node_Tree              => Project_Node_Tree,\n+                           File_Name                        => \" \",\n                            Index                            => 0,\n                            The_Package                      => Builder_Package,\n                            Program                          => None,\n@@ -4916,7 +4932,8 @@ package body Make is\n                         end if;\n \n                         Add_Switches\n-                          (File_Name   => \" \",\n+                          (Project_Node_Tree => Project_Node_Tree,\n+                           File_Name   => \" \",\n                            Index       => 0,\n                            The_Package => Builder_Package,\n                            Program     => None);\n@@ -5007,10 +5024,11 @@ package body Make is\n                end if;\n \n                Add_Switches\n-                 (File_Name   => Main_Unit_File_Name,\n-                  Index       => Main_Index,\n-                  The_Package => Binder_Package,\n-                  Program     => Binder);\n+                 (Project_Node_Tree => Project_Node_Tree,\n+                  File_Name         => Main_Unit_File_Name,\n+                  Index             => Main_Index,\n+                  The_Package       => Binder_Package,\n+                  Program           => Binder);\n             end if;\n \n             --  Add linker switches from the project file for the first main\n@@ -5023,10 +5041,11 @@ package body Make is\n                end if;\n \n                Add_Switches\n-                 (File_Name   => Main_Unit_File_Name,\n-                  Index       => Main_Index,\n-                  The_Package => Linker_Package,\n-                  Program     => Linker);\n+                 (Project_Node_Tree => Project_Node_Tree,\n+                  File_Name         => Main_Unit_File_Name,\n+                  Index             => Main_Index,\n+                  The_Package       => Linker_Package,\n+                  Program           => Linker);\n             end if;\n          end;\n       end if;\n@@ -6310,10 +6329,11 @@ package body Make is\n                      end if;\n \n                      Add_Switches\n-                       (File_Name   => Main_Unit_File_Name,\n-                        Index       => Main_Index,\n-                        The_Package => Binder_Package,\n-                        Program     => Binder);\n+                       (Project_Node_Tree => Project_Node_Tree,\n+                        File_Name         => Main_Unit_File_Name,\n+                        Index             => Main_Index,\n+                        The_Package       => Binder_Package,\n+                        Program           => Binder);\n                   end if;\n \n                   --  Add linker switches from the project file for this main,\n@@ -6327,10 +6347,11 @@ package body Make is\n                      end if;\n \n                      Add_Switches\n-                       (File_Name   => Main_Unit_File_Name,\n-                        Index       => Main_Index,\n-                        The_Package => Linker_Package,\n-                        Program     => Linker);\n+                       (Project_Node_Tree => Project_Node_Tree,\n+                        File_Name         => Main_Unit_File_Name,\n+                        Index             => Main_Index,\n+                        The_Package       => Linker_Package,\n+                        Program           => Linker);\n                   end if;\n \n                   --  As we are using a project file, for relative paths we add\n@@ -6521,14 +6542,21 @@ package body Make is\n    -- Initialize --\n    ----------------\n \n-   procedure Initialize is\n+   procedure Initialize (Project_Node_Tree : out Project_Node_Tree_Ref) is\n \n       procedure Check_Version_And_Help is\n          new Check_Version_And_Help_G (Makeusg);\n \n       --  Start of processing for Initialize\n \n    begin\n+      --  Prepare the project's tree, since this is used to hold external\n+      --  references, project path and other attributes that can be impacted by\n+      --  the command line switches\n+\n+      Project_Node_Tree := new Project_Node_Tree_Data;\n+      Prj.Tree.Initialize (Project_Node_Tree);\n+\n       --  Override default initialization of Check_Object_Consistency since\n       --  this is normally False for GNATBIND, but is True for GNATMAKE since\n       --  we do not need to check source consistency again once GNATMAKE has\n@@ -6611,11 +6639,12 @@ package body Make is\n       --  do not include --version or --help.\n \n       Scan_Args : for Next_Arg in 1 .. Argument_Count loop\n-         Scan_Make_Arg (Argument (Next_Arg), And_Save => True);\n+         Scan_Make_Arg\n+           (Project_Node_Tree, Argument (Next_Arg), And_Save => True);\n       end loop Scan_Args;\n \n       if N_M_Switch > 0 and RTS_Specified = null then\n-         Process_Multilib;\n+         Process_Multilib (Project_Node_Tree);\n       end if;\n \n       if Commands_To_Stdout then\n@@ -6700,7 +6729,8 @@ package body Make is\n             In_Tree           => Project_Tree,\n             Project_File_Name => Project_File_Name.all,\n             Packages_To_Check => Packages_To_Check_By_Gnatmake,\n-            Flags             => Gnatmake_Flags);\n+            Flags             => Gnatmake_Flags,\n+            In_Node_Tree      => Project_Node_Tree);\n \n          --  The parsing of project files may have changed the current output\n \n@@ -7281,7 +7311,9 @@ package body Make is\n    -- Process_Multilib --\n    ----------------------\n \n-   procedure Process_Multilib is\n+   procedure Process_Multilib\n+     (Project_Node_Tree : Project_Node_Tree_Ref)\n+   is\n       Output_FD         : File_Descriptor;\n       Output_Name       : String_Access;\n       Arg_Index         : Natural := 0;\n@@ -7382,8 +7414,9 @@ package body Make is\n \n       --  Otherwise add -margs --RTS=output\n \n-      Scan_Make_Arg (\"-margs\", And_Save => True);\n-      Scan_Make_Arg (\"--RTS=\" & Line (1 .. N_Read), And_Save => True);\n+      Scan_Make_Arg (Project_Node_Tree, \"-margs\", And_Save => True);\n+      Scan_Make_Arg\n+        (Project_Node_Tree, \"--RTS=\" & Line (1 .. N_Read), And_Save => True);\n    end Process_Multilib;\n \n    -----------------------------\n@@ -7485,7 +7518,11 @@ package body Make is\n    -- Scan_Make_Arg --\n    -------------------\n \n-   procedure Scan_Make_Arg (Argv : String; And_Save : Boolean) is\n+   procedure Scan_Make_Arg\n+     (Project_Node_Tree : Project_Node_Tree_Ref;\n+      Argv              : String;\n+      And_Save          : Boolean)\n+   is\n       Success : Boolean;\n \n    begin\n@@ -8001,7 +8038,7 @@ package body Make is\n          --  -Xext=val  (External assignment)\n \n          elsif Argv (2) = 'X'\n-           and then Is_External_Assignment (Argv)\n+           and then Is_External_Assignment (Project_Node_Tree, Argv)\n          then\n             --  Is_External_Assignment has side effects\n             --  when it returns True;"}, {"sha": "9caf9c4231dafe677edd648c7aa28f521bc5ef94", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=daa72421353681f192c42be645ba2590f65c868e", "patch": "@@ -447,7 +447,10 @@ package body Makeutl is\n    -- Is_External_Assignment --\n    ----------------------------\n \n-   function Is_External_Assignment (Argv : String) return Boolean is\n+   function Is_External_Assignment\n+     (Tree : Prj.Tree.Project_Node_Tree_Ref;\n+      Argv : String) return Boolean\n+   is\n       Start     : Positive := 3;\n       Finish    : Natural := Argv'Last;\n       Equal_Pos : Natural;\n@@ -478,7 +481,8 @@ package body Makeutl is\n          return False;\n       else\n          Prj.Ext.Add\n-           (External_Name => Argv (Start .. Equal_Pos - 1),\n+           (Tree          => Tree,\n+            External_Name => Argv (Start .. Equal_Pos - 1),\n             Value         => Argv (Equal_Pos + 1 .. Finish));\n          return True;\n       end if;"}, {"sha": "95114f07c9afc14ea7f5344ccda0a53d1a6ceafc", "filename": "gcc/ada/makeutl.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fmakeutl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fmakeutl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.ads?ref=daa72421353681f192c42be645ba2590f65c868e", "patch": "@@ -28,6 +28,7 @@ with Namet; use Namet;\n with Opt;\n with Osint;\n with Prj;   use Prj;\n+with Prj.Tree;\n with Types; use Types;\n \n with GNAT.OS_Lib; use GNAT.OS_Lib;\n@@ -83,7 +84,9 @@ package Makeutl is\n    --  source files are still associated with the same units). Return True\n    --  if everything is still valid\n \n-   function Is_External_Assignment (Argv : String) return Boolean;\n+   function Is_External_Assignment\n+     (Tree : Prj.Tree.Project_Node_Tree_Ref;\n+      Argv : String) return Boolean;\n    --  Verify that an external assignment switch is syntactically correct\n    --\n    --  Correct forms are:"}, {"sha": "5783a530c12e881ff99ea442da178428eff8ecf9", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=daa72421353681f192c42be645ba2590f65c868e", "patch": "@@ -1000,7 +1000,6 @@ package body Prj.Conf is\n    begin\n       --  Parse the user project tree\n \n-      Prj.Tree.Initialize (Project_Node_Tree);\n       Prj.Initialize (Project_Tree);\n \n       Main_Project      := No_Project;"}, {"sha": "82b8dc34726db55c3d7a523bd5ba17332b216ecc", "filename": "gcc/ada/prj-conf.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fprj-conf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fprj-conf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.ads?ref=daa72421353681f192c42be645ba2590f65c868e", "patch": "@@ -59,6 +59,10 @@ package Prj.Conf is\n    --  Find the main configuration project and parse the project tree rooted at\n    --  this configuration project.\n    --\n+   --  Project_Node_Tree must have been initialized first (and possibly the\n+   --  value for external references and project path should also have been\n+   --  set).\n+   --\n    --  If the processing fails, Main_Project is set to No_Project. If the error\n    --  happend while parsing the project itself (ie creating the tree),\n    --  User_Project_Node is also set to Empty_Node."}, {"sha": "8bdc1101719ab3c14ca598189af79cb510ca7e18", "filename": "gcc/ada/prj-ext.adb", "status": "modified", "additions": 18, "deletions": 25, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fprj-ext.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fprj-ext.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-ext.adb?ref=daa72421353681f192c42be645ba2590f65c868e", "patch": "@@ -26,11 +26,10 @@\n with Hostparm;\n with Makeutl;  use Makeutl;\n with Osint;    use Osint;\n+with Prj.Tree; use Prj.Tree;\n with Sdefault;\n with Table;\n \n-with GNAT.HTable;\n-\n package body Prj.Ext is\n \n    Ada_Project_Path : constant String := \"ADA_PROJECT_PATH\";\n@@ -52,19 +51,6 @@ package body Prj.Ext is\n    procedure Initialize_Project_Path;\n    --  Initialize Current_Project_Path\n \n-   package Htable is new GNAT.HTable.Simple_HTable\n-     (Header_Num => Header_Num,\n-      Element    => Name_Id,\n-      No_Element => No_Name,\n-      Key        => Name_Id,\n-      Hash       => Hash,\n-      Equal      => \"=\");\n-   --  External references are stored in this hash table, either by procedure\n-   --  Add (directly or through a call to function Check) or by function\n-   --  Value_Of when an environment variable is found non empty. Value_Of\n-   --  first for external reference in this table, before checking the\n-   --  environment. Htable is emptied (reset) by procedure Reset.\n-\n    package Search_Directories is new Table.Table\n      (Table_Component_Type => Name_Id,\n       Table_Index_Type     => Natural,\n@@ -79,7 +65,8 @@ package body Prj.Ext is\n    ---------\n \n    procedure Add\n-     (External_Name : String;\n+     (Tree          : Prj.Tree.Project_Node_Tree_Ref;\n+      External_Name : String;\n       Value         : String)\n    is\n       The_Key   : Name_Id;\n@@ -92,7 +79,7 @@ package body Prj.Ext is\n       Name_Buffer (1 .. Name_Len) := External_Name;\n       Canonical_Case_File_Name (Name_Buffer (1 .. Name_Len));\n       The_Key := Name_Find;\n-      Htable.Set (The_Key, The_Value);\n+      Name_To_Name_HTable.Set (Tree.External_References, The_Key, The_Value);\n    end Add;\n \n    -----------\n@@ -110,16 +97,19 @@ package body Prj.Ext is\n    -- Check --\n    -----------\n \n-   function Check (Declaration : String) return Boolean is\n+   function Check\n+     (Tree        : Prj.Tree.Project_Node_Tree_Ref;\n+      Declaration : String) return Boolean is\n    begin\n       for Equal_Pos in Declaration'Range loop\n          if Declaration (Equal_Pos) = '=' then\n             exit when Equal_Pos = Declaration'First;\n             exit when Equal_Pos = Declaration'Last;\n             Add\n-              (External_Name =>\n+              (Tree          => Tree,\n+               External_Name =>\n                  Declaration (Declaration'First .. Equal_Pos - 1),\n-               Value =>\n+               Value         =>\n                  Declaration (Equal_Pos + 1 .. Declaration'Last));\n             return True;\n          end if;\n@@ -294,9 +284,9 @@ package body Prj.Ext is\n    -- Reset --\n    -----------\n \n-   procedure Reset is\n+   procedure Reset (Tree : Prj.Tree.Project_Node_Tree_Ref) is\n    begin\n-      Htable.Reset;\n+      Name_To_Name_HTable.Reset (Tree.External_References);\n    end Reset;\n \n    ----------------------\n@@ -314,7 +304,8 @@ package body Prj.Ext is\n    --------------\n \n    function Value_Of\n-     (External_Name : Name_Id;\n+     (Tree          : Prj.Tree.Project_Node_Tree_Ref;\n+      External_Name : Name_Id;\n       With_Default  : Name_Id := No_Name)\n       return          Name_Id\n    is\n@@ -325,7 +316,8 @@ package body Prj.Ext is\n       Canonical_Case_File_Name (Name);\n       Name_Len := Name'Length;\n       Name_Buffer (1 .. Name_Len) := Name;\n-      The_Value := Htable.Get (Name_Find);\n+      The_Value :=\n+        Name_To_Name_HTable.Get (Tree.External_References, Name_Find);\n \n       if The_Value /= No_Name then\n          return The_Value;\n@@ -341,7 +333,8 @@ package body Prj.Ext is\n             Name_Len := Env_Value'Length;\n             Name_Buffer (1 .. Name_Len) := Env_Value.all;\n             The_Value := Name_Find;\n-            Htable.Set (External_Name, The_Value);\n+            Name_To_Name_HTable.Set\n+              (Tree.External_References, External_Name, The_Value);\n             Free (Env_Value);\n             return The_Value;\n "}, {"sha": "cb9ecb72d7b7639516ac9810d8c2072d93e32f64", "filename": "gcc/ada/prj-ext.ads", "status": "modified", "additions": 25, "deletions": 5, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fprj-ext.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fprj-ext.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-ext.ads?ref=daa72421353681f192c42be645ba2590f65c868e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2000-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,8 +26,14 @@\n --  Subprograms to set, get and cache external references, to be used as\n --  External functions in project files.\n \n+with Prj.Tree;\n+\n package Prj.Ext is\n \n+   ------------------\n+   -- Project Path --\n+   ------------------\n+\n    Gpr_Project_Path : constant String := \"GPR_PROJECT_PATH\";\n    --  Name of primary env. variable that contain path name(s) of directories\n    --  where project files may reside.\n@@ -48,22 +54,36 @@ package Prj.Ext is\n    --  always start with the current directory (\".\") and the path separators\n    --  should be the correct ones for the platform.\n \n+   -------------------------\n+   -- External References --\n+   -------------------------\n+   --  External references influence the way a project tree is processed (in\n+   --  particular they provide the values for the typed string variables that\n+   --  are then used in case constructions).\n+   --  External references are project-tree specific, so that when multiple\n+   --  trees are loaded in parallel we can have different scenarios (or even\n+   --  load the same tree twice and see different views of it).\n+\n    procedure Add\n-     (External_Name : String;\n+     (Tree          : Prj.Tree.Project_Node_Tree_Ref;\n+      External_Name : String;\n       Value         : String);\n    --  Add an external reference (or modify an existing one)\n \n    function Value_Of\n-     (External_Name : Name_Id;\n+     (Tree          : Prj.Tree.Project_Node_Tree_Ref;\n+      External_Name : Name_Id;\n       With_Default  : Name_Id := No_Name)\n       return          Name_Id;\n    --  Get the value of an external reference, and cache it for future uses\n \n-   function Check (Declaration : String) return Boolean;\n+   function Check\n+     (Tree        : Prj.Tree.Project_Node_Tree_Ref;\n+      Declaration : String) return Boolean;\n    --  Check that an external declaration <external>=<value> is correct.\n    --  If it is correct, the external reference is Added.\n \n-   procedure Reset;\n+   procedure Reset (Tree : Prj.Tree.Project_Node_Tree_Ref);\n    --  Clear the internal data structure that stores the external references\n    --  and free any allocated memory.\n "}, {"sha": "c69084f99ff804f810b2e5e797ab4a2bedd2fb73", "filename": "gcc/ada/prj-nmsc.ads", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fprj-nmsc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fprj-nmsc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.ads?ref=daa72421353681f192c42be645ba2590f65c868e", "patch": "@@ -33,11 +33,10 @@ private package Prj.Nmsc is\n       Flags        : Processing_Flags);\n    --  Perform consistency and semantic checks on all the projects in the tree.\n    --  This procedure interprets the various case statements in the project\n-   --  based on the current environment variables (the \"scenario\"). After\n-   --  checking the validity of the naming scheme, it searches for all the\n-   --  source files of the project. The result of this procedure is a filled-in\n-   --  data structure for Project_Id which contains all the information about\n-   --  the project. This information is only valid while the scenario variables\n-   --  are preserved.\n+   --  based on the current external references. After checking the validity of\n+   --  the naming scheme, it searches for all the source files of the project.\n+   --  The result of this procedure is a filled-in data structure for\n+   --  Project_Id which contains all the information about the project. This\n+   --  information is only valid while the external references are preserved.\n \n end Prj.Nmsc;"}, {"sha": "a2b1c42ecc608d3dc121e1d4b1a4392beb38023a", "filename": "gcc/ada/prj-pars.adb", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fprj-pars.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fprj-pars.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-pars.adb?ref=daa72421353681f192c42be645ba2590f65c868e", "patch": "@@ -45,18 +45,21 @@ package body Prj.Pars is\n       Project_File_Name : String;\n       Packages_To_Check : String_List_Access := All_Packages;\n       Flags             : Processing_Flags;\n-      Reset_Tree        : Boolean := True)\n+      Reset_Tree        : Boolean := True;\n+      In_Node_Tree      : Prj.Tree.Project_Node_Tree_Ref := null)\n    is\n       Project_Node      : Project_Node_Id := Empty_Node;\n       The_Project       : Project_Id      := No_Project;\n       Success           : Boolean         := True;\n       Current_Dir       : constant String := Get_Current_Dir;\n-      Project_Node_Tree : Prj.Tree.Project_Node_Tree_Ref;\n+      Project_Node_Tree : Prj.Tree.Project_Node_Tree_Ref := In_Node_Tree;\n       Automatically_Generated : Boolean;\n       Config_File_Path        : String_Access;\n    begin\n-      Project_Node_Tree := new Project_Node_Tree_Data;\n-      Prj.Tree.Initialize (Project_Node_Tree);\n+      if Project_Node_Tree = null then\n+         Project_Node_Tree := new Project_Node_Tree_Data;\n+         Prj.Tree.Initialize (Project_Node_Tree);\n+      end if;\n \n       --  Parse the main project file into a tree\n "}, {"sha": "4e7d4808d4a074168b61cfea11619a3138d36051", "filename": "gcc/ada/prj-pars.ads", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fprj-pars.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fprj-pars.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-pars.ads?ref=daa72421353681f192c42be645ba2590f65c868e", "patch": "@@ -25,6 +25,8 @@\n \n --  General wrapper for the parsing of project files\n \n+with Prj.Tree;\n+\n package Prj.Pars is\n \n    procedure Set_Verbosity (To : Verbosity);\n@@ -36,26 +38,31 @@ package Prj.Pars is\n       Project_File_Name : String;\n       Packages_To_Check : String_List_Access := All_Packages;\n       Flags             : Processing_Flags;\n-      Reset_Tree        : Boolean := True);\n+      Reset_Tree        : Boolean := True;\n+      In_Node_Tree      : Prj.Tree.Project_Node_Tree_Ref := null);\n    --  Parse and process a project files and all its imported project files, in\n    --  the project tree In_Tree.\n    --  All the project files are parsed (through Prj.Tree) to create a tree in\n    --  memory. That tree is then processed (through Prj.Proc) to create a\n-   --  expanded representation of the tree based on the current scenario\n-   --  variables. This function is only a convenient wrapper over other\n+   --  expanded representation of the tree based on the current external\n+   --  references. This function is only a convenient wrapper over other\n    --  services provided in the Prj.* package hierarchy.\n    --\n    --  If parsing is successful, Project is the project ID of the root project\n    --  file; otherwise, Project_Id is set to No_Project. Project_Node_Tree is\n    --  set to the tree (unprocessed) representation of the project file. This\n    --  tree is permanently correct, whereas Project will need to be recomputed\n-   --  if the scenario variables change.\n+   --  if the external references change.\n    --\n    --  Packages_To_Check indicates the packages where any unknown attribute\n    --  produces an error. For other packages, an unknown attribute produces a\n    --  warning.\n    --\n    --  When Reset_Tree is True, all the project data are removed from the\n    --  project table before processing.\n+   --\n+   --  In_Node_Tree (if given) must have been Initialized. The main reason to\n+   --  pass an existing tree, is to pass the external references that will then\n+   --  be used to process the tree.\n \n end Prj.Pars;"}, {"sha": "839034835ff6e56ed91c6cd0d7c39dc7bc1e606e", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=daa72421353681f192c42be645ba2590f65c868e", "patch": "@@ -1041,7 +1041,8 @@ package body Prj.Proc is\n                      end if;\n                   end if;\n \n-                  Value := Prj.Ext.Value_Of (Name, Default);\n+                  Value := Prj.Ext.Value_Of\n+                    (From_Project_Node_Tree, Name, Default);\n \n                   if Value = No_Name then\n                      if not Quiet_Output then"}, {"sha": "4257c9004f82ef91f0bb3e767eb10a3aef391907", "filename": "gcc/ada/prj-proc.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fprj-proc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fprj-proc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.ads?ref=daa72421353681f192c42be645ba2590f65c868e", "patch": "@@ -40,7 +40,7 @@ package Prj.Proc is\n       Flags                  : Prj.Processing_Flags;\n       Reset_Tree             : Boolean := True);\n    --  Process a project tree (ie the direct resulting of parsing a .gpr file)\n-   --  based on the current scenario variables.\n+   --  based on the current external references.\n    --\n    --  The result of this phase_1 is a partial project tree (Project) where\n    --  only a few fields have been initialized (in particular the list of"}, {"sha": "4823a988d6c4909c45f1a1c561f7c09e8db76ad0", "filename": "gcc/ada/prj-tree.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fprj-tree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fprj-tree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.adb?ref=daa72421353681f192c42be645ba2590f65c868e", "patch": "@@ -983,6 +983,10 @@ package body Prj.Tree is\n    begin\n       Project_Node_Table.Init (Tree.Project_Nodes);\n       Projects_Htable.Reset (Tree.Projects_HT);\n+\n+      --  Do not reset the external references, in case we are reloading a\n+      --  project, since we want to preserve the current environment\n+      --  Name_To_Name_HTable.Reset (Tree.External_References);\n    end Initialize;\n \n    ----------"}, {"sha": "991dbff0c1e8c696b38d935cc94b4984023ea49d", "filename": "gcc/ada/prj-tree.ads", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fprj-tree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fprj-tree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.ads?ref=daa72421353681f192c42be645ba2590f65c868e", "patch": "@@ -1001,7 +1001,6 @@ package Prj.Tree is\n    package Tree_Private_Part is\n \n       --  This is conceptually in the private part\n-\n       --  However, for efficiency, some packages are accessing it directly\n \n       type Project_Node_Record is record\n@@ -1371,9 +1370,23 @@ package Prj.Tree is\n \n    end Tree_Private_Part;\n \n+   package Name_To_Name_HTable is new GNAT.Dynamic_HTables.Simple_HTable\n+     (Header_Num => Header_Num,\n+      Element    => Name_Id,\n+      No_Element => No_Name,\n+      Key        => Name_Id,\n+      Hash       => Hash,\n+      Equal      => \"=\");\n+\n    type Project_Node_Tree_Data is record\n       Project_Nodes : Tree_Private_Part.Project_Node_Table.Instance;\n       Projects_HT   : Tree_Private_Part.Projects_Htable.Instance;\n+\n+      External_References : Name_To_Name_HTable.Instance;\n+      --  External references are stored in this hash table (and manipulated\n+      --  through subprogrames in prj-ext.ads). External references are\n+      --  project-tree specific so that one can load the same tree twice but\n+      --  have two views of it, for instance.\n    end record;\n    --  The data for a project node tree\n "}, {"sha": "c1075d6812618c6338531454f0977b40ea58b7c2", "filename": "gcc/ada/s-oscons-tmplt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fs-oscons-tmplt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa72421353681f192c42be645ba2590f65c868e/gcc%2Fada%2Fs-oscons-tmplt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-oscons-tmplt.c?ref=daa72421353681f192c42be645ba2590f65c868e", "patch": "@@ -58,7 +58,7 @@ pragma Style_Checks (\"M32766\");\n  **  s-oscons-tmpl.s.\n  **\n  **  The default one assumes that the template can be compiled by the newly-\n- **  build cross compiler. It uses markup produced in the (pseudo-)assembly\n+ **  built cross compiler. It uses markup produced in the (pseudo-)assembly\n  **  listing:\n  **\n  **     xgcc -DTARGET=\\\"$target\\\" -C -E s-oscons-tmplt.c > s-oscons-tmplt.i"}]}