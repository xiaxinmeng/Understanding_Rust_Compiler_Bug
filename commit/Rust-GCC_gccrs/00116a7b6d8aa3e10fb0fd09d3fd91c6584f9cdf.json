{"sha": "00116a7b6d8aa3e10fb0fd09d3fd91c6584f9cdf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDAxMTZhN2I2ZDhhYTNlMTBmYjBmZDA5ZDNmZDkxYzY1ODRmOWNkZg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1998-07-16T00:22:41Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-07-16T00:22:41Z"}, "message": "loop.c (emit_iv_add_mult): Scan the entire insn list generated for the sequence, recording base values.\n\n8\n        * loop.c (emit_iv_add_mult): Scan the entire insn list generated\n        for the sequence, recording base values.\n\nFrom-SVN: r21208", "tree": {"sha": "7eae3c99f56b81f2c11a070c986c22daf8052e0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7eae3c99f56b81f2c11a070c986c22daf8052e0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00116a7b6d8aa3e10fb0fd09d3fd91c6584f9cdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00116a7b6d8aa3e10fb0fd09d3fd91c6584f9cdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00116a7b6d8aa3e10fb0fd09d3fd91c6584f9cdf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00116a7b6d8aa3e10fb0fd09d3fd91c6584f9cdf/comments", "author": null, "committer": null, "parents": [{"sha": "a2d926467cb9f64ba8dc049e073103b6c13f4931", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2d926467cb9f64ba8dc049e073103b6c13f4931", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2d926467cb9f64ba8dc049e073103b6c13f4931"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "0171741e22b7ac07ea4b8ec40ad893f6a479ea70", "filename": "gcc/loop.c", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00116a7b6d8aa3e10fb0fd09d3fd91c6584f9cdf/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00116a7b6d8aa3e10fb0fd09d3fd91c6584f9cdf/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=00116a7b6d8aa3e10fb0fd09d3fd91c6584f9cdf", "patch": "@@ -6005,7 +6005,23 @@ emit_iv_add_mult (b, m, a, reg, insert_before)\n \n   emit_insn_before (seq, insert_before);\n \n-  record_base_value (REGNO (reg), b, 0);\n+  /* It is entirely possible that the expansion created lots of new \n+     registers.  Iterate over the sequence we just created and \n+     record them all.  */\n+\n+  if (GET_CODE (seq) == SEQUENCE)\n+    {\n+      int i;\n+      for (i = 0; i < XVECLEN (seq, 0); ++i)\n+\t{\n+\t  rtx set = single_set (XVECEXP (seq, 0, i));\n+\t  if (set && GET_CODE (SET_DEST (set)) == REG)\n+\t    record_base_value (REGNO (SET_DEST (set)), SET_SRC (set), 0);\n+\t}\n+    }\n+  else if (GET_CODE (seq) == SET\n+\t   && GET_CODE (SET_DEST (seq)) == REG)\n+    record_base_value (REGNO (SET_DEST (seq)), SET_SRC (seq), 0);\n }\n \f\n /* Test whether A * B can be computed without"}]}