{"sha": "ae46a823a786d2489740e628f8067d3f4fd76169", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU0NmE4MjNhNzg2ZDI0ODk3NDBlNjI4ZjgwNjdkM2Y0ZmQ3NjE2OQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2009-02-21T02:18:01Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2009-02-21T02:18:01Z"}, "message": "arm.c (arm_gimplify_va_arg_expr): Update prototype to take gimple_seq * arguments.\n\n\t* config/arm/arm.c (arm_gimplify_va_arg_expr): Update prototype to\n\ttake gimple_seq * arguments.\n\t(arm_mangle_type): Use CONST_CAST_TREE on type argument passed to\n\ttypes_compatible_p langhook.\n\nFrom-SVN: r144344", "tree": {"sha": "c33efa8611a4bf30102a57dbbe33f3407bec8fbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c33efa8611a4bf30102a57dbbe33f3407bec8fbc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae46a823a786d2489740e628f8067d3f4fd76169", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae46a823a786d2489740e628f8067d3f4fd76169", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae46a823a786d2489740e628f8067d3f4fd76169", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae46a823a786d2489740e628f8067d3f4fd76169/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b9daa7e60b0ccfd2bc99748b4362c6773bcc378", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b9daa7e60b0ccfd2bc99748b4362c6773bcc378", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b9daa7e60b0ccfd2bc99748b4362c6773bcc378"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "1bcc3b1d3a6b5a8b036cccb9f8e59843cc140d4e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46a823a786d2489740e628f8067d3f4fd76169/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46a823a786d2489740e628f8067d3f4fd76169/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae46a823a786d2489740e628f8067d3f4fd76169", "patch": "@@ -1,3 +1,10 @@\n+2009-02-21  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/arm/arm.c (arm_gimplify_va_arg_expr): Update prototype to\n+\ttake gimple_seq * arguments.\n+\t(arm_mangle_type): Use CONST_CAST_TREE on type argument passed to\n+\ttypes_compatible_p langhook.\n+\n 2009-02-20  Mark Mitchell  <mark@codesourcery.com>\n             Joseph Myers  <joseph@codesourcery.com>\n "}, {"sha": "c25fc29e411ee574d7f785277039c88c3388fddb", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae46a823a786d2489740e628f8067d3f4fd76169/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae46a823a786d2489740e628f8067d3f4fd76169/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=ae46a823a786d2489740e628f8067d3f4fd76169", "patch": "@@ -188,7 +188,7 @@ static bool arm_cxx_use_aeabi_atexit (void);\n static void arm_init_libfuncs (void);\n static tree arm_build_builtin_va_list (void);\n static void arm_expand_builtin_va_start (tree, rtx);\n-static tree arm_gimplify_va_arg_expr (tree, tree, tree *, tree *);\n+static tree arm_gimplify_va_arg_expr (tree, tree, gimple_seq *, gimple_seq *);\n static bool arm_handle_option (size_t, const char *, int);\n static void arm_target_help (void);\n static unsigned HOST_WIDE_INT arm_shift_truncation_mask (enum machine_mode);\n@@ -1004,8 +1004,8 @@ arm_expand_builtin_va_start (tree valist, rtx nextarg)\n \n /* Implement TARGET_GIMPLIFY_VA_ARG_EXPR.  */\n static tree\n-arm_gimplify_va_arg_expr (tree valist, tree type, tree *pre_p, \n-\t\t\t  tree *post_p)\n+arm_gimplify_va_arg_expr (tree valist, tree type, gimple_seq *pre_p, \n+\t\t\t  gimple_seq *post_p)\n {\n   valist = arm_extract_valist_ptr (valist);\n   return std_gimplify_va_arg_expr (valist, type, pre_p, post_p);\n@@ -19606,7 +19606,7 @@ arm_mangle_type (const_tree type)\n   /* The ARM ABI documents (10th October 2008) say that \"__va_list\"\n      has to be managled as if it is in the \"std\" namespace.  */\n   if (TARGET_AAPCS_BASED \n-      && lang_hooks.types_compatible_p (type, va_list_type))\n+      && lang_hooks.types_compatible_p (CONST_CAST_TREE (type), va_list_type))\n     {\n       static bool warned;\n       if (!warned && warn_psabi)"}]}