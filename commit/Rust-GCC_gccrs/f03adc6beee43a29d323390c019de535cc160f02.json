{"sha": "f03adc6beee43a29d323390c019de535cc160f02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjAzYWRjNmJlZWU0M2EyOWQzMjMzOTBjMDE5ZGU1MzVjYzE2MGYwMg==", "commit": {"author": {"name": "Giovanni Bajo", "email": "giovannibajo@gcc.gnu.org", "date": "2004-07-21T00:13:41Z"}, "committer": {"name": "Giovanni Bajo", "email": "giovannibajo@gcc.gnu.org", "date": "2004-07-21T00:13:41Z"}, "message": "re PR c++/14497 (Accepts invalid specialization of member template missing \"template<>\")\n\n\tPR c++/14497\n\t* pt.c (check_explicit_specialization): Remove extension to accept\n\tspecializations without template headers. Fall-through to normal\n\tprocessing.\n\n\tPR c++/14497\n\t* g++.dg/template/spec16.C: New test.\n\t* g++.old-deja/g++.robertl/eb118.C: Remove.\n\nFrom-SVN: r84983", "tree": {"sha": "ab6927d50b5ba33b98710d1bbf22759f6b059905", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab6927d50b5ba33b98710d1bbf22759f6b059905"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f03adc6beee43a29d323390c019de535cc160f02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f03adc6beee43a29d323390c019de535cc160f02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f03adc6beee43a29d323390c019de535cc160f02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f03adc6beee43a29d323390c019de535cc160f02/comments", "author": {"login": "rasky", "id": 1014109, "node_id": "MDQ6VXNlcjEwMTQxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1014109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasky", "html_url": "https://github.com/rasky", "followers_url": "https://api.github.com/users/rasky/followers", "following_url": "https://api.github.com/users/rasky/following{/other_user}", "gists_url": "https://api.github.com/users/rasky/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasky/subscriptions", "organizations_url": "https://api.github.com/users/rasky/orgs", "repos_url": "https://api.github.com/users/rasky/repos", "events_url": "https://api.github.com/users/rasky/events{/privacy}", "received_events_url": "https://api.github.com/users/rasky/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rasky", "id": 1014109, "node_id": "MDQ6VXNlcjEwMTQxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1014109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasky", "html_url": "https://github.com/rasky", "followers_url": "https://api.github.com/users/rasky/followers", "following_url": "https://api.github.com/users/rasky/following{/other_user}", "gists_url": "https://api.github.com/users/rasky/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasky/subscriptions", "organizations_url": "https://api.github.com/users/rasky/orgs", "repos_url": "https://api.github.com/users/rasky/repos", "events_url": "https://api.github.com/users/rasky/events{/privacy}", "received_events_url": "https://api.github.com/users/rasky/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fe7b6549e1d588e3b0ae4015d61080bac3dbf37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fe7b6549e1d588e3b0ae4015d61080bac3dbf37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fe7b6549e1d588e3b0ae4015d61080bac3dbf37"}], "stats": {"total": 103, "additions": 34, "deletions": 69}, "files": [{"sha": "ddc310696167b0c3c94aa70dac8cd84f38f11d10", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f03adc6beee43a29d323390c019de535cc160f02/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f03adc6beee43a29d323390c019de535cc160f02/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f03adc6beee43a29d323390c019de535cc160f02", "patch": "@@ -1,3 +1,10 @@\n+2004-07-21  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n+\n+\tPR c++/14497\n+\t* pt.c (check_explicit_specialization): Remove extension to accept\n+\tspecializations without template headers. Fall-through to normal\n+\tprocessing.\n+\n 2004-07-21  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n \n \tPR c++/509"}, {"sha": "b30bd5772b83e01812132c6e3dacb6e4eeebf08b", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 10, "deletions": 29, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f03adc6beee43a29d323390c019de535cc160f02/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f03adc6beee43a29d323390c019de535cc160f02/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=f03adc6beee43a29d323390c019de535cc160f02", "patch": "@@ -1688,9 +1688,16 @@ check_explicit_specialization (tree declarator,\n       break;\n \n     case tsk_excessive_parms:\n-      error (\"too many template parameter lists in declaration of `%D'\", \n-\t\tdecl);\n-      return error_mark_node;\n+    case tsk_insufficient_parms:\n+      if (tsk == tsk_excessive_parms)\n+        error (\"too many template parameter lists in declaration of `%D'\",\n+\t       decl);\n+      else if (template_header_count)\n+\terror(\"too few template parameter lists in declaration of `%D'\",\n+\t      decl);\n+      else\n+\terror(\"explicit specialization of `%D' must be introduced by \"\r\n+\t      \"`template <>'\", decl);\r\n \n       /* Fall through.  */\n     case tsk_expl_spec:\n@@ -1700,32 +1707,6 @@ check_explicit_specialization (tree declarator,\n       else\n \tspecialization = 1;\n       break;\n-     \n-    case tsk_insufficient_parms:\n-      if (template_header_count)\n-\t{\n-\t  error(\"too few template parameter lists in declaration of `%D'\", \n-\t\t   decl);\n-\t  return decl;\n-\t}\n-      else if (ctype != NULL_TREE\n-\t       && !TYPE_BEING_DEFINED (ctype)\n-\t       && CLASSTYPE_TEMPLATE_INSTANTIATION (ctype)\n-\t       && !is_friend)\n-\t{\n-\t  /* For backwards compatibility, we accept:\n-\n-\t       template <class T> struct S { void f(); };\n-\t       void S<int>::f() {} // Missing template <>\n-\n-\t     That used to be valid C++.  */\n-\t  if (pedantic)\n-\t    pedwarn\n-\t      (\"explicit specialization not preceded by `template <>'\");\n-\t  specialization = 1;\n-\t  SET_DECL_TEMPLATE_SPECIALIZATION (decl);\n-\t}\n-      break;\n \n     case tsk_template:\n       if (TREE_CODE (declarator) == TEMPLATE_ID_EXPR)"}, {"sha": "eb1a3410ea5a8162e33f94ae240fe297f2e07baf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f03adc6beee43a29d323390c019de535cc160f02/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f03adc6beee43a29d323390c019de535cc160f02/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f03adc6beee43a29d323390c019de535cc160f02", "patch": "@@ -1,3 +1,9 @@\n+2004-07-21  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n+\n+\tPR c++/14497\n+\t* g++.dg/template/spec16.C: New test.\n+\t* g++.old-deja/g++.robertl/eb118.C: Remove.\n+\n 2004-07-21  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n \n \tPR c++/509"}, {"sha": "c5bd5a95426e8088e581af0f33b4a4a1f1bea590", "filename": "gcc/testsuite/g++.dg/template/spec16.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f03adc6beee43a29d323390c019de535cc160f02/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f03adc6beee43a29d323390c019de535cc160f02/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec16.C?ref=f03adc6beee43a29d323390c019de535cc160f02", "patch": "@@ -0,0 +1,11 @@\n+// { dg-do compile }\n+// Contributed by Giovanni Bajo <giovannibajo at gcc dot gnu dot org>\n+// PR c++/14497: Reject specialization without template headers\n+\n+template <int N>  \n+struct A { \n+  template<int M> void B () ; \n+}; \n+\n+void A<0>::B<0>() {    // { dg-error \"explicit specialization\" }\n+} "}, {"sha": "723e85333464491210bc9aa10f6aef07fa5cd734", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb118.C", "status": "removed", "additions": 0, "deletions": 40, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fe7b6549e1d588e3b0ae4015d61080bac3dbf37/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb118.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fe7b6549e1d588e3b0ae4015d61080bac3dbf37/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb118.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb118.C?ref=5fe7b6549e1d588e3b0ae4015d61080bac3dbf37", "patch": "@@ -1,40 +0,0 @@\n-// { dg-do run  }\n-// { dg-options \"\" }\n-// Test for obsolete specialization syntax.  Turn off -pedantic.\n-\n-#include <iostream>\n-#include <typeinfo>\n-\n-template <typename T>\n-class A {\n-public:\n-  void test ();\n-};\n-\n-template <typename T>\n-void\n-A<T>::test(){\n-  std::cerr << \"test for \" << typeid(*this).name() << std::endl;\n-}\n-// Specialization declaration\n-template <> \n-void                           \n-A<double>::test();\n-\n-// Specialization definition\n-void\n-A<double>::test(){\n-  std::cerr << \"specialization for \" << typeid(*this).name() << std::endl;\n-}\n-\n-\n-int\n-main(){\n-  A<int> ai;\n-  A<double> ad;\n-  ai.test();\n-  ad.test();\n-  return 0;\n-}\n-\n-"}]}