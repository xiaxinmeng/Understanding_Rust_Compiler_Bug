{"sha": "7ae4d8d4214508d400e28845b773e775ddbb7ac3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FlNGQ4ZDQyMTQ1MDhkNDAwZTI4ODQ1Yjc3M2U3NzVkZGJiN2FjMw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-01-22T22:49:06Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-01-22T22:49:06Z"}, "message": "genopinit.c (optabs): Use smin/smax for floating point too.\n\n        * genopinit.c (optabs): Use smin/smax for floating point too.\n        * doc/md.texi: Update to match.  Clarify that floating point\n        results are undefined for +0/-0 and NaN.\n        * doc/rtl.texi: Likewise.\n        * rtl.def (SMIN, SMAX): Likewise\n        * tree.def (MIN_EXPR, MAX_EXPR): Likewise.\n\n        * config/alpha/alpha.md (smaxdf3, smindf3, smaxsf3, sminsf3): Add\n        leading 's' to the name.\n        * config/ia64/ia64.md (smaxsf3, sminsf3, smaxdf3, smindf3,\n        smaxxf3, sminxf3): Likewise.\n        * config/rs6000/rs6000.md (smaxdf3, smindf3, smaxsf3, sminsf3):\n        Likewise.\n\nFrom-SVN: r94083", "tree": {"sha": "44a7d07f7a98f7ff87b2faa87658e1de80d69f42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44a7d07f7a98f7ff87b2faa87658e1de80d69f42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ae4d8d4214508d400e28845b773e775ddbb7ac3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ae4d8d4214508d400e28845b773e775ddbb7ac3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ae4d8d4214508d400e28845b773e775ddbb7ac3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ae4d8d4214508d400e28845b773e775ddbb7ac3/comments", "author": null, "committer": null, "parents": [{"sha": "190607885a2178612dcd3faefcb4a6e31d7c91cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/190607885a2178612dcd3faefcb4a6e31d7c91cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/190607885a2178612dcd3faefcb4a6e31d7c91cb"}], "stats": {"total": 69, "additions": 36, "deletions": 33}, "files": [{"sha": "a8f28a2f1acb026d62338373c1a18ce00f4ab309", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ae4d8d4214508d400e28845b773e775ddbb7ac3/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ae4d8d4214508d400e28845b773e775ddbb7ac3/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=7ae4d8d4214508d400e28845b773e775ddbb7ac3", "patch": "@@ -3737,7 +3737,7 @@\n    fcmov%D3 %R4,%R5,%0\"\n   [(set_attr \"type\" \"fcmov\")])\n \n-(define_expand \"maxdf3\"\n+(define_expand \"smaxdf3\"\n   [(set (match_dup 3)\n \t(le:DF (match_operand:DF 1 \"reg_or_0_operand\" \"\")\n \t       (match_operand:DF 2 \"reg_or_0_operand\" \"\")))\n@@ -3750,7 +3750,7 @@\n   operands[4] = CONST0_RTX (DFmode);\n })\n \n-(define_expand \"mindf3\"\n+(define_expand \"smindf3\"\n   [(set (match_dup 3)\n \t(lt:DF (match_operand:DF 1 \"reg_or_0_operand\" \"\")\n \t       (match_operand:DF 2 \"reg_or_0_operand\" \"\")))\n@@ -3763,7 +3763,7 @@\n   operands[4] = CONST0_RTX (DFmode);\n })\n \n-(define_expand \"maxsf3\"\n+(define_expand \"smaxsf3\"\n   [(set (match_dup 3)\n \t(le:DF (float_extend:DF (match_operand:SF 1 \"reg_or_0_operand\" \"\"))\n \t       (float_extend:DF (match_operand:SF 2 \"reg_or_0_operand\" \"\"))))\n@@ -3776,7 +3776,7 @@\n   operands[4] = CONST0_RTX (DFmode);\n })\n \n-(define_expand \"minsf3\"\n+(define_expand \"sminsf3\"\n   [(set (match_dup 3)\n \t(lt:DF (float_extend:DF (match_operand:SF 1 \"reg_or_0_operand\" \"\"))\n \t       (float_extend:DF (match_operand:SF 2 \"reg_or_0_operand\" \"\"))))"}, {"sha": "90b1cc59921335b03fdb629f80e21d4e74f98342", "filename": "gcc/config/ia64/ia64.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ae4d8d4214508d400e28845b773e775ddbb7ac3/gcc%2Fconfig%2Fia64%2Fia64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ae4d8d4214508d400e28845b773e775ddbb7ac3/gcc%2Fconfig%2Fia64%2Fia64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.md?ref=7ae4d8d4214508d400e28845b773e775ddbb7ac3", "patch": "@@ -2586,15 +2586,15 @@\n   \"fnegabs %0 = %1\"\n   [(set_attr \"itanium_class\" \"fmisc\")])\n \n-(define_insn \"minsf3\"\n+(define_insn \"sminsf3\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(smin:SF (match_operand:SF 1 \"fr_register_operand\" \"f\")\n \t\t (match_operand:SF 2 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n   \"fmin %0 = %1, %F2\"\n   [(set_attr \"itanium_class\" \"fmisc\")])\n \n-(define_insn \"maxsf3\"\n+(define_insn \"smaxsf3\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(smax:SF (match_operand:SF 1 \"fr_register_operand\" \"f\")\n \t\t (match_operand:SF 2 \"fr_reg_or_fp01_operand\" \"fG\")))]\n@@ -3000,15 +3000,15 @@\n   \"fnegabs %0 = %1\"\n   [(set_attr \"itanium_class\" \"fmisc\")])\n \n-(define_insn \"mindf3\"\n+(define_insn \"smindf3\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(smin:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n \t\t (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n   \"fmin %0 = %1, %F2\"\n   [(set_attr \"itanium_class\" \"fmisc\")])\n \n-(define_insn \"maxdf3\"\n+(define_insn \"smaxdf3\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(smax:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n \t\t (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\")))]\n@@ -3556,15 +3556,15 @@\n   \"fnegabs %0 = %F1\"\n   [(set_attr \"itanium_class\" \"fmisc\")])\n \n-(define_insn \"minxf3\"\n+(define_insn \"sminxf3\"\n   [(set (match_operand:XF 0 \"fr_register_operand\" \"=f\")\n \t(smin:XF (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n \t\t (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\")))]\n   \"\"\n   \"fmin %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmisc\")])\n \n-(define_insn \"maxxf3\"\n+(define_insn \"smaxxf3\"\n   [(set (match_operand:XF 0 \"fr_register_operand\" \"=f\")\n \t(smax:XF (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n \t\t (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\")))]"}, {"sha": "988dc4b8a978c1dd3836ebf5b582594a2d511cdf", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ae4d8d4214508d400e28845b773e775ddbb7ac3/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ae4d8d4214508d400e28845b773e775ddbb7ac3/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=7ae4d8d4214508d400e28845b773e775ddbb7ac3", "patch": "@@ -4709,7 +4709,7 @@\n ;; fsel instruction and some auxiliary computations.  Then we just have a\n ;; single DEFINE_INSN for fsel and the define_splits to make them if made by\n ;; combine.\n-(define_expand \"maxsf3\"\n+(define_expand \"smaxsf3\"\n   [(set (match_operand:SF 0 \"gpc_reg_operand\" \"\")\n \t(if_then_else:SF (ge (match_operand:SF 1 \"gpc_reg_operand\" \"\")\n \t\t\t     (match_operand:SF 2 \"gpc_reg_operand\" \"\"))\n@@ -4718,7 +4718,7 @@\n   \"TARGET_PPC_GFXOPT && TARGET_HARD_FLOAT && TARGET_FPRS && !flag_trapping_math\"\n   \"{ rs6000_emit_minmax (operands[0], SMAX, operands[1], operands[2]); DONE;}\")\n \n-(define_expand \"minsf3\"\n+(define_expand \"sminsf3\"\n   [(set (match_operand:SF 0 \"gpc_reg_operand\" \"\")\n \t(if_then_else:SF (ge (match_operand:SF 1 \"gpc_reg_operand\" \"\")\n \t\t\t     (match_operand:SF 2 \"gpc_reg_operand\" \"\"))\n@@ -4983,7 +4983,7 @@\n ;; The conditional move instructions allow us to perform max and min\n ;; operations even when\n \n-(define_expand \"maxdf3\"\n+(define_expand \"smaxdf3\"\n   [(set (match_operand:DF 0 \"gpc_reg_operand\" \"\")\n \t(if_then_else:DF (ge (match_operand:DF 1 \"gpc_reg_operand\" \"\")\n \t\t\t     (match_operand:DF 2 \"gpc_reg_operand\" \"\"))\n@@ -4992,7 +4992,7 @@\n   \"TARGET_PPC_GFXOPT && TARGET_HARD_FLOAT && TARGET_FPRS && !flag_trapping_math\"\n   \"{ rs6000_emit_minmax (operands[0], SMAX, operands[1], operands[2]); DONE;}\")\n \n-(define_expand \"mindf3\"\n+(define_expand \"smindf3\"\n   [(set (match_operand:DF 0 \"gpc_reg_operand\" \"\")\n \t(if_then_else:DF (ge (match_operand:DF 1 \"gpc_reg_operand\" \"\")\n \t\t\t     (match_operand:DF 2 \"gpc_reg_operand\" \"\"))"}, {"sha": "1f321a377c80bb4145d43fdff9a5b91c5c9d0add", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ae4d8d4214508d400e28845b773e775ddbb7ac3/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ae4d8d4214508d400e28845b773e775ddbb7ac3/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=7ae4d8d4214508d400e28845b773e775ddbb7ac3", "patch": "@@ -2834,25 +2834,24 @@ means of constraints requiring operands 1 and 0 to be the same location.\n @cindex @code{udiv@var{m}3} instruction pattern\n @cindex @code{mod@var{m}3} instruction pattern\n @cindex @code{umod@var{m}3} instruction pattern\n-@cindex @code{smin@var{m}3} instruction pattern\n-@cindex @code{smax@var{m}3} instruction pattern\n @cindex @code{umin@var{m}3} instruction pattern\n @cindex @code{umax@var{m}3} instruction pattern\n @cindex @code{and@var{m}3} instruction pattern\n @cindex @code{ior@var{m}3} instruction pattern\n @cindex @code{xor@var{m}3} instruction pattern\n @item @samp{sub@var{m}3}, @samp{mul@var{m}3}\n-@itemx @samp{div@var{m}3}, @samp{udiv@var{m}3}, @samp{mod@var{m}3}, @samp{umod@var{m}3}\n-@itemx @samp{smin@var{m}3}, @samp{smax@var{m}3}, @samp{umin@var{m}3}, @samp{umax@var{m}3}\n+@itemx @samp{div@var{m}3}, @samp{udiv@var{m}3}\n+@itemx @samp{mod@var{m}3}, @samp{umod@var{m}3}\n+@itemx @samp{umin@var{m}3}, @samp{umax@var{m}3}\n @itemx @samp{and@var{m}3}, @samp{ior@var{m}3}, @samp{xor@var{m}3}\n Similar, for other arithmetic operations.\n+\n @cindex @code{min@var{m}3} instruction pattern\n @cindex @code{max@var{m}3} instruction pattern\n-@itemx @samp{min@var{m}3}, @samp{max@var{m}3}\n-Floating point min and max operations.  If both operands are zeros,\n-or if either operand is NaN, then it is unspecified which of the two\n-operands is returned as the result.\n-\n+@item @samp{smin@var{m}3}, @samp{smax@var{m}3}\n+Signed minimum and maximum operations.  When used with floating point,\n+if both operands are zeros, or if either operand is @code{NaN}, then\n+it is unspecified which of the two operands is returned as the result.\n \n @cindex @code{mulhisi3} instruction pattern\n @item @samp{mulhisi3}"}, {"sha": "1244c74c92e01af959e78933b1fd3459d06fc2a9", "filename": "gcc/doc/rtl.texi", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ae4d8d4214508d400e28845b773e775ddbb7ac3/gcc%2Fdoc%2Frtl.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ae4d8d4214508d400e28845b773e775ddbb7ac3/gcc%2Fdoc%2Frtl.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Frtl.texi?ref=7ae4d8d4214508d400e28845b773e775ddbb7ac3", "patch": "@@ -1887,7 +1887,10 @@ the quotient.\n @item (smin:@var{m} @var{x} @var{y})\n @itemx (smax:@var{m} @var{x} @var{y})\n Represents the smaller (for @code{smin}) or larger (for @code{smax}) of\n-@var{x} and @var{y}, interpreted as signed integers in mode @var{m}.\n+@var{x} and @var{y}, interpreted as signed values in mode @var{m}.\n+When used with floating point, if both operands are zeros, or if either\n+operand is @code{NaN}, then it is unspecified which of the two operands\n+is returned as the result.\n \n @findex umin\n @findex umax"}, {"sha": "61f039328d58e44d2f37debe4da3010ac845c9e1", "filename": "gcc/genopinit.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ae4d8d4214508d400e28845b773e775ddbb7ac3/gcc%2Fgenopinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ae4d8d4214508d400e28845b773e775ddbb7ac3/gcc%2Fgenopinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenopinit.c?ref=7ae4d8d4214508d400e28845b773e775ddbb7ac3", "patch": "@@ -1,6 +1,6 @@\n /* Generate code to initialize optabs from machine description.\n    Copyright (C) 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,\n-   2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n+   2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -102,10 +102,8 @@ static const char * const optabs[] =\n   \"lshr_optab->handlers[$A].insn_code = CODE_FOR_$(lshr$a3$)\",\n   \"rotl_optab->handlers[$A].insn_code = CODE_FOR_$(rotl$a3$)\",\n   \"rotr_optab->handlers[$A].insn_code = CODE_FOR_$(rotr$a3$)\",\n-  \"smin_optab->handlers[$A].insn_code = CODE_FOR_$(smin$I$a3$)\",\n-  \"smin_optab->handlers[$A].insn_code = CODE_FOR_$(min$F$a3$)\",\n-  \"smax_optab->handlers[$A].insn_code = CODE_FOR_$(smax$I$a3$)\",\n-  \"smax_optab->handlers[$A].insn_code = CODE_FOR_$(max$F$a3$)\",\n+  \"smin_optab->handlers[$A].insn_code = CODE_FOR_$(smin$a3$)\",\n+  \"smax_optab->handlers[$A].insn_code = CODE_FOR_$(smax$a3$)\",\n   \"umin_optab->handlers[$A].insn_code = CODE_FOR_$(umin$I$a3$)\",\n   \"umax_optab->handlers[$A].insn_code = CODE_FOR_$(umax$I$a3$)\",\n   \"pow_optab->handlers[$A].insn_code = CODE_FOR_$(pow$a3$)\","}, {"sha": "8acb0f40b269d5f5efebde88493be460219135a7", "filename": "gcc/rtl.def", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ae4d8d4214508d400e28845b773e775ddbb7ac3/gcc%2Frtl.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ae4d8d4214508d400e28845b773e775ddbb7ac3/gcc%2Frtl.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.def?ref=7ae4d8d4214508d400e28845b773e775ddbb7ac3", "patch": "@@ -444,11 +444,8 @@ DEF_RTL_EXPR(UMOD, \"umod\", \"ee\", RTX_BIN_ARITH)\n \n /* Bitwise operations.  */\n DEF_RTL_EXPR(AND, \"and\", \"ee\", RTX_COMM_ARITH)\n-\n DEF_RTL_EXPR(IOR, \"ior\", \"ee\", RTX_COMM_ARITH)\n-\n DEF_RTL_EXPR(XOR, \"xor\", \"ee\", RTX_COMM_ARITH)\n-\n DEF_RTL_EXPR(NOT, \"not\", \"e\", RTX_UNARY)\n \n /* Operand:\n@@ -462,7 +459,10 @@ DEF_RTL_EXPR(ROTATERT, \"rotatert\", \"ee\", RTX_BIN_ARITH) /* rotate right */\n \n /* Minimum and maximum values of two operands.  We need both signed and\n    unsigned forms.  (We cannot use MIN for SMIN because it conflicts\n-   with a macro of the same name.) */\n+   with a macro of the same name.)   The signed variants should be used\n+   with floating point.  Further, if both operands are zeros, or if either\n+   operand is NaN, then it is unspecified which of the two operands is\n+   returned as the result.  */\n \n DEF_RTL_EXPR(SMIN, \"smin\", \"ee\", RTX_COMM_ARITH)\n DEF_RTL_EXPR(SMAX, \"smax\", \"ee\", RTX_COMM_ARITH)"}, {"sha": "370250dc616c054ef69882cd7b340fa05eda3c0b", "filename": "gcc/tree.def", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ae4d8d4214508d400e28845b773e775ddbb7ac3/gcc%2Ftree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ae4d8d4214508d400e28845b773e775ddbb7ac3/gcc%2Ftree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.def?ref=7ae4d8d4214508d400e28845b773e775ddbb7ac3", "patch": "@@ -650,6 +650,9 @@ DEFTREECODE (FLOAT_EXPR, \"float_expr\", tcc_unary, 1)\n /* Unary negation.  */\n DEFTREECODE (NEGATE_EXPR, \"negate_expr\", tcc_unary, 1)\n \n+/* Minimum and maximum values.  When used with floating point, if both\n+   operands are zeros, or if either operand is NaN, then it is unspecified\n+   which of the two operands is returned as the result.  */\n DEFTREECODE (MIN_EXPR, \"min_expr\", tcc_binary, 2)\n DEFTREECODE (MAX_EXPR, \"max_expr\", tcc_binary, 2)\n "}]}