{"sha": "ef4add8e543091083b1a30350b653968e7c58ab2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY0YWRkOGU1NDMwOTEwODNiMWEzMDM1MGI2NTM5NjhlN2M1OGFiMg==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2019-10-02T10:57:54Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2019-10-02T10:57:54Z"}, "message": "Support OpenMP's use_device_addr in Fortran\n\n        gcc/fortran/\n\t* dump-parse-tree.c (show_omp_clauses): Handle OMP_LIST_USE_DEVICE_ADDR.\n\t* gfortran.h (enum): Add OMP_LIST_USE_DEVICE_ADDR.\n\t* openmp.c (omp_mask1): Likewise.\n\t(gfc_match_omp_clauses): Match 'use_device_addr'.\n\t(OMP_TARGET_DATA_CLAUSES): Add OMP_LIST_USE_DEVICE_ADDR.\n\t(resolve_omp_clauses): Add it; add is_device_ptr checks.\n\n        gcc/testsuite/\n\t* gfortran.dg/gomp/is_device_ptr-1.f90: New.\n\nFrom-SVN: r276449", "tree": {"sha": "025615ae48c75d5713717f7c8b914b2c628cbc4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/025615ae48c75d5713717f7c8b914b2c628cbc4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef4add8e543091083b1a30350b653968e7c58ab2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef4add8e543091083b1a30350b653968e7c58ab2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef4add8e543091083b1a30350b653968e7c58ab2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef4add8e543091083b1a30350b653968e7c58ab2/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fc1a202ca60def4894f2deeda8ae184527ee897e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc1a202ca60def4894f2deeda8ae184527ee897e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc1a202ca60def4894f2deeda8ae184527ee897e"}], "stats": {"total": 72, "additions": 69, "deletions": 3}, "files": [{"sha": "8d7a2cf4c26c4468d6b940e7030dca75f3462a27", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef4add8e543091083b1a30350b653968e7c58ab2/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef4add8e543091083b1a30350b653968e7c58ab2/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ef4add8e543091083b1a30350b653968e7c58ab2", "patch": "@@ -1,3 +1,12 @@\n+2019-10-02  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* dump-parse-tree.c (show_omp_clauses): Handle OMP_LIST_USE_DEVICE_ADDR.\n+\t* gfortran.h (enum): Add OMP_LIST_USE_DEVICE_ADDR.\n+\t* openmp.c (omp_mask1): Likewise.\n+\t(gfc_match_omp_clauses): Match 'use_device_addr'.\n+\t(OMP_TARGET_DATA_CLAUSES): Add OMP_LIST_USE_DEVICE_ADDR.\n+\t(resolve_omp_clauses): Add it; add is_device_ptr checks.\n+\n 2019-10-02  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* openmp.c (gfc_match_omp_clauses): Show a clause-parsing"}, {"sha": "9d7b26f5f6a16ccb29e029c8e0f8a351262c6aac", "filename": "gcc/fortran/dump-parse-tree.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef4add8e543091083b1a30350b653968e7c58ab2/gcc%2Ffortran%2Fdump-parse-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef4add8e543091083b1a30350b653968e7c58ab2/gcc%2Ffortran%2Fdump-parse-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdump-parse-tree.c?ref=ef4add8e543091083b1a30350b653968e7c58ab2", "patch": "@@ -1507,6 +1507,7 @@ show_omp_clauses (gfc_omp_clauses *omp_clauses)\n \t  case OMP_LIST_CACHE: type = \"CACHE\"; break;\n \t  case OMP_LIST_IS_DEVICE_PTR: type = \"IS_DEVICE_PTR\"; break;\n \t  case OMP_LIST_USE_DEVICE_PTR: type = \"USE_DEVICE_PTR\"; break;\n+\t  case OMP_LIST_USE_DEVICE_ADDR: type = \"USE_DEVICE_ADDR\"; break;\n \t  default:\n \t    gcc_unreachable ();\n \t  }"}, {"sha": "a70978bf49be43853991905f27b31857bc77f0a8", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef4add8e543091083b1a30350b653968e7c58ab2/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef4add8e543091083b1a30350b653968e7c58ab2/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=ef4add8e543091083b1a30350b653968e7c58ab2", "patch": "@@ -1263,6 +1263,7 @@ enum\n   OMP_LIST_CACHE,\n   OMP_LIST_IS_DEVICE_PTR,\n   OMP_LIST_USE_DEVICE_PTR,\n+  OMP_LIST_USE_DEVICE_ADDR,\n   OMP_LIST_NUM\n };\n "}, {"sha": "7df7384c187ab5a1564eb94970993e54efca31f9", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 27, "deletions": 3, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef4add8e543091083b1a30350b653968e7c58ab2/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef4add8e543091083b1a30350b653968e7c58ab2/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=ef4add8e543091083b1a30350b653968e7c58ab2", "patch": "@@ -780,6 +780,7 @@ enum omp_mask1\n   OMP_CLAUSE_SIMD,\n   OMP_CLAUSE_THREADS,\n   OMP_CLAUSE_USE_DEVICE_PTR,\n+  OMP_CLAUSE_USE_DEVICE_ADDR,  /* Actually, OpenMP 5.0.  */\n   OMP_CLAUSE_NOWAIT,\n   /* This must come last.  */\n   OMP_MASK1_LAST\n@@ -1849,6 +1850,11 @@ gfc_match_omp_clauses (gfc_omp_clauses **cp, const omp_mask mask,\n \t\t   (\"use_device_ptr (\",\n \t\t    &c->lists[OMP_LIST_USE_DEVICE_PTR], false) == MATCH_YES)\n \t    continue;\n+\t  if ((mask & OMP_CLAUSE_USE_DEVICE_ADDR)\n+\t      && gfc_match_omp_variable_list\n+\t\t   (\"use_device_addr (\",\n+\t\t    &c->lists[OMP_LIST_USE_DEVICE_ADDR], false) == MATCH_YES)\n+\t    continue;\n \t  break;\n \tcase 'v':\n \t  /* VECTOR_LENGTH must be matched before VECTOR, because the latter\n@@ -2479,7 +2485,7 @@ gfc_match_oacc_routine (void)\n    | OMP_CLAUSE_IS_DEVICE_PTR)\n #define OMP_TARGET_DATA_CLAUSES \\\n   (omp_mask (OMP_CLAUSE_DEVICE) | OMP_CLAUSE_MAP | OMP_CLAUSE_IF\t\\\n-   | OMP_CLAUSE_USE_DEVICE_PTR)\n+   | OMP_CLAUSE_USE_DEVICE_PTR | OMP_CLAUSE_USE_DEVICE_ADDR)\n #define OMP_TARGET_ENTER_DATA_CLAUSES \\\n   (omp_mask (OMP_CLAUSE_DEVICE) | OMP_CLAUSE_MAP | OMP_CLAUSE_IF\t\\\n    | OMP_CLAUSE_DEPEND | OMP_CLAUSE_NOWAIT)\n@@ -4008,7 +4014,7 @@ resolve_omp_clauses (gfc_code *code, gfc_omp_clauses *omp_clauses,\n     = { \"PRIVATE\", \"FIRSTPRIVATE\", \"LASTPRIVATE\", \"COPYPRIVATE\", \"SHARED\",\n \t\"COPYIN\", \"UNIFORM\", \"ALIGNED\", \"LINEAR\", \"DEPEND\", \"MAP\",\n \t\"TO\", \"FROM\", \"REDUCTION\", \"DEVICE_RESIDENT\", \"LINK\", \"USE_DEVICE\",\n-\t\"CACHE\", \"IS_DEVICE_PTR\", \"USE_DEVICE_PTR\" };\n+\t\"CACHE\", \"IS_DEVICE_PTR\", \"USE_DEVICE_PTR\", \"USE_DEVICE_ADDR\" };\n \n   if (omp_clauses == NULL)\n     return;\n@@ -4565,8 +4571,26 @@ resolve_omp_clauses (gfc_code *code, gfc_omp_clauses *omp_clauses,\n \t\t}\n \t    break;\n \t  case OMP_LIST_IS_DEVICE_PTR:\n+\t    if (!n->sym->attr.dummy)\n+\t      gfc_error (\"Non-dummy object %qs in %s clause at %L\",\n+\t\t\t n->sym->name, name, &n->where);\n+\t    if (n->sym->attr.allocatable\n+\t\t|| (n->sym->ts.type == BT_CLASS\n+\t\t    && CLASS_DATA (n->sym)->attr.allocatable))\n+\t      gfc_error (\"ALLOCATABLE object %qs in %s clause at %L\",\n+\t\t\t n->sym->name, name, &n->where);\n+\t    if (n->sym->attr.pointer\n+\t\t|| (n->sym->ts.type == BT_CLASS\n+\t\t    && CLASS_DATA (n->sym)->attr.pointer))\n+\t      gfc_error (\"POINTER object %qs in %s clause at %L\",\n+\t\t\t n->sym->name, name, &n->where);\n+\t    if (n->sym->attr.value)\n+\t      gfc_error (\"VALUE object %qs in %s clause at %L\",\n+\t\t\t n->sym->name, name, &n->where);\n+\t    break;\n \t  case OMP_LIST_USE_DEVICE_PTR:\n-\t    /* FIXME: Handle these.  */\n+\t  case OMP_LIST_USE_DEVICE_ADDR:\n+\t    /* FIXME: Handle OMP_LIST_USE_DEVICE_PTR.  */\n \t    break;\n \t  default:\n \t    for (; n != NULL; n = n->next)"}, {"sha": "86b8f73f895f56261d5ae2658fd105c1e6998503", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef4add8e543091083b1a30350b653968e7c58ab2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef4add8e543091083b1a30350b653968e7c58ab2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ef4add8e543091083b1a30350b653968e7c58ab2", "patch": "@@ -1,3 +1,7 @@\n+2019-10-02  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* gfortran.dg/gomp/is_device_ptr-1.f90: New.\n+\n 2019-10-02  Richard Biener  <rguenther@suse.de>\n \n \tPR c++/91606"}, {"sha": "0eeca0ee23a83a39b689549a40f7d672ce9fe4ed", "filename": "gcc/testsuite/gfortran.dg/gomp/is_device_ptr-1.f90", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef4add8e543091083b1a30350b653968e7c58ab2/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fis_device_ptr-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef4add8e543091083b1a30350b653968e7c58ab2/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fis_device_ptr-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fis_device_ptr-1.f90?ref=ef4add8e543091083b1a30350b653968e7c58ab2", "patch": "@@ -0,0 +1,27 @@\n+! { dg-do compile }\n+subroutine test(b,c,d)\n+  implicit none\n+  integer, value, target :: b\n+  integer, pointer :: c\n+  integer, allocatable, target :: d\n+\n+  integer, target :: a(5)\n+\n+  !$omp target is_device_ptr(a) ! { dg-error \"Non-dummy object .a. in IS_DEVICE_PTR clause\" }\n+  !$omp end target\n+\n+  !$omp target is_device_ptr(b) ! { dg-error \"VALUE object .b. in IS_DEVICE_PTR clause\" }\n+  !$omp end target\n+\n+  !$omp target is_device_ptr(c) ! { dg-error \"POINTER object .c. in IS_DEVICE_PTR clause\" }\n+  !$omp end target\n+\n+  !$omp target is_device_ptr(d) ! { dg-error \"ALLOCATABLE object .d. in IS_DEVICE_PTR clause\" }\n+  !$omp end target\n+\n+  !$omp target data map(a) use_device_addr(a)  ! Should be okay\n+  !$omp end target data\n+\n+  !$omp target data map(c) use_device_ptr(c)  ! Should be okay\n+  !$omp end target data\n+end subroutine test"}]}