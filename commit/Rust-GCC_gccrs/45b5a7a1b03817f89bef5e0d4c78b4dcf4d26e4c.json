{"sha": "45b5a7a1b03817f89bef5e0d4c78b4dcf4d26e4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDViNWE3YTFiMDM4MTdmODliZWY1ZTBkNGM3OGI0ZGNmNGQyNmU0Yw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2005-11-15T14:05:17Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-11-15T14:05:17Z"}, "message": "xgnatugn.adb: Replace invalid membership test by 'Valid\n\n2005-11-14  Robert Dewar  <dewar@adacore.com>\n\n\t* xgnatugn.adb: Replace invalid membership test by 'Valid\n\nFrom-SVN: r107013", "tree": {"sha": "5eaa75d0e7710635a02b9b8396403c0c6e514975", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5eaa75d0e7710635a02b9b8396403c0c6e514975"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45b5a7a1b03817f89bef5e0d4c78b4dcf4d26e4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45b5a7a1b03817f89bef5e0d4c78b4dcf4d26e4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45b5a7a1b03817f89bef5e0d4c78b4dcf4d26e4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45b5a7a1b03817f89bef5e0d4c78b4dcf4d26e4c/comments", "author": null, "committer": null, "parents": [{"sha": "1c9e0120eb6386e36415a0e3c9f6d962f09879a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c9e0120eb6386e36415a0e3c9f6d962f09879a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c9e0120eb6386e36415a0e3c9f6d962f09879a2"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "a7e90ffde9820443c00484db931b931ae5fe5de1", "filename": "gcc/ada/xgnatugn.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b5a7a1b03817f89bef5e0d4c78b4dcf4d26e4c/gcc%2Fada%2Fxgnatugn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b5a7a1b03817f89bef5e0d4c78b4dcf4d26e4c/gcc%2Fada%2Fxgnatugn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxgnatugn.adb?ref=45b5a7a1b03817f89bef5e0d4c78b4dcf4d26e4c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2003-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2003-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -180,8 +180,8 @@ procedure Xgnatugn is\n    Target : Target_Type;\n    --  The Target variable is initialized using the command line\n \n-   Valid_Characters : constant Character_Set\n-     := To_Set (Span => (' ',  '~'));\n+   Valid_Characters : constant Character_Set :=\n+                        To_Set (Span => (' ',  '~'));\n    --  This array controls which characters are permitted in the input\n    --  file (after line breaks have been removed). Valid characters\n    --  are all printable ASCII characters and the space character.\n@@ -748,7 +748,7 @@ procedure Xgnatugn is\n \n                      else\n \n-                        --  Extend Seq to cover the current (known) word.\n+                        --  Extend Seq to cover the current (known) word\n \n                         Seq.Last := Token.Span.Last;\n                         Next_Token;\n@@ -1045,7 +1045,7 @@ procedure Xgnatugn is\n \n             if (not Have_Conditional) or (Flag in Edition_Type) then\n \n-               --  The ordinary case.\n+               --  The ordinary case\n \n                if not Currently_Excluding then\n                   Put_Line (Output_File, Rewritten);\n@@ -1068,7 +1068,7 @@ procedure Xgnatugn is\n       --  case).\n \n       procedure Add (Extension, Replacement : String);\n-      --  Adds an extension with a custom replacement.\n+      --  Adds an extension with a custom replacement\n \n       ---------\n       -- Add --\n@@ -1294,7 +1294,7 @@ begin\n       begin\n          Target := Flag_Type'Value (Argument (1));\n \n-         if Target not in Target_Type then\n+         if not Target'Valid then\n             Valid_Command_Line := False;\n          end if;\n "}]}