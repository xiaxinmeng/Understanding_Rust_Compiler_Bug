{"sha": "c87ac7e8f700f24e213a54f4f0f6852bdd392bf4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg3YWM3ZThmNzAwZjI0ZTIxM2E1NGY0ZjBmNjg1MmJkZDM5MmJmNA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2005-04-15T03:09:50Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2005-04-15T03:09:50Z"}, "message": "re PR middle-end/20739 (ICE in gimplify_addr_expr)\n\ngcc/ChangeLog:\nPR middle-end/20739\n* gimplify.c (gimplify_addr_expr): Compensate for removal of\ne.g. cv-qualification conversions.\ngcc/testsuite/ChangeLog:\nPR middle-end/20739\n* gcc.dg/tree-ssa/pr20739.c: New test.\n\nFrom-SVN: r98167", "tree": {"sha": "8ddc3fce146e31931ab600c4c4208ee2f443eb04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ddc3fce146e31931ab600c4c4208ee2f443eb04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c87ac7e8f700f24e213a54f4f0f6852bdd392bf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c87ac7e8f700f24e213a54f4f0f6852bdd392bf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c87ac7e8f700f24e213a54f4f0f6852bdd392bf4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c87ac7e8f700f24e213a54f4f0f6852bdd392bf4/comments", "author": null, "committer": null, "parents": [{"sha": "03ae9e88584d82978e290cfde2dde9dd81acab2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03ae9e88584d82978e290cfde2dde9dd81acab2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03ae9e88584d82978e290cfde2dde9dd81acab2b"}], "stats": {"total": 44, "additions": 41, "deletions": 3}, "files": [{"sha": "f06d0597ba544b6f0dc7ef206ed07d8e5f688a7a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c87ac7e8f700f24e213a54f4f0f6852bdd392bf4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c87ac7e8f700f24e213a54f4f0f6852bdd392bf4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c87ac7e8f700f24e213a54f4f0f6852bdd392bf4", "patch": "@@ -1,3 +1,9 @@\n+2005-04-15  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR middle-end/20739\n+\t* gimplify.c (gimplify_addr_expr): Compensate for removal of\n+\te.g. cv-qualification conversions.\n+\n 2005-04-14  Mike Stump  <mrs@apple.com>\n \n \t* config/darwin-c.c (framework_construct_pathname): We must"}, {"sha": "5eb1d49bd1ce043035012eb5ad4332fcec959900", "filename": "gcc/gimplify.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c87ac7e8f700f24e213a54f4f0f6852bdd392bf4/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c87ac7e8f700f24e213a54f4f0f6852bdd392bf4/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=c87ac7e8f700f24e213a54f4f0f6852bdd392bf4", "patch": "@@ -3229,6 +3229,9 @@ gimplify_addr_expr (tree *expr_p, tree *pre_p, tree *post_p)\n \t builtins like __builtin_va_end).  */\n       /* Caution: the silent array decomposition semantics we allow for\n \t ADDR_EXPR means we can't always discard the pair.  */\n+      /* Gimplification of the ADDR_EXPR operand may drop\n+\t cv-qualification conversions, so make sure we add them if\n+\t needed.  */\n       {\n \ttree op00 = TREE_OPERAND (op0, 0);\n \ttree t_expr = TREE_TYPE (expr);\n@@ -3238,9 +3241,9 @@ gimplify_addr_expr (tree *expr_p, tree *pre_p, tree *post_p)\n \t  {\n #ifdef ENABLE_CHECKING\n \t    tree t_op0 = TREE_TYPE (op0);\n-\t    gcc_assert (TREE_CODE (t_op0) == ARRAY_TYPE\n-\t\t\t&& POINTER_TYPE_P (t_expr)\n-\t\t\t&& cpt_same_type (TREE_TYPE (t_op0),\n+\t    gcc_assert (POINTER_TYPE_P (t_expr)\n+\t\t\t&& cpt_same_type (TREE_CODE (t_op0) == ARRAY_TYPE\n+\t\t\t\t\t  ? TREE_TYPE (t_op0) : t_op0,\n \t\t\t\t\t  TREE_TYPE (t_expr))\n \t\t\t&& POINTER_TYPE_P (t_op00)\n \t\t\t&& cpt_same_type (t_op0, TREE_TYPE (t_op00)));"}, {"sha": "5d78e17783dd7496880882b933e80539e8ee6f48", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c87ac7e8f700f24e213a54f4f0f6852bdd392bf4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c87ac7e8f700f24e213a54f4f0f6852bdd392bf4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c87ac7e8f700f24e213a54f4f0f6852bdd392bf4", "patch": "@@ -1,3 +1,8 @@\n+2005-04-15  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR middle-end/20739\n+\t* gcc.dg/tree-ssa/pr20739.c: New test.\n+\n 2005-04-14  Mike Stump  <mrs@apple.com>\n \n \t* gcc.dg/Foundation.framework/empty: New."}, {"sha": "c1e7b58e38543532f4d200193dc1767f9a654dd7", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr20739.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c87ac7e8f700f24e213a54f4f0f6852bdd392bf4/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr20739.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c87ac7e8f700f24e213a54f4f0f6852bdd392bf4/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr20739.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr20739.c?ref=c87ac7e8f700f24e213a54f4f0f6852bdd392bf4", "patch": "@@ -0,0 +1,24 @@\n+/* PR middle-end/20739 */\n+\n+/* dg-do compile */\n+/* dg-options \"-O\" */\n+\n+/* We used to fail to compile this because gimplification dropped the\n+   conversion that added the const qualifier to the sub-expression\n+   involving baz, and then immediately noticed and reported its\n+   absence.  */\n+\n+typedef struct \n+{ \n+    char chars[5]; \n+} \n+baz_t; \n+ \n+extern baz_t * baz; \n+ \n+extern void foo (baz_t); \n+int \n+bar (const baz_t * ls) \n+{ \n+    foo (ls == 0 ? *(&baz[0]) : *ls); \n+}"}]}