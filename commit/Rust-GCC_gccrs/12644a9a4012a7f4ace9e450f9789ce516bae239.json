{"sha": "12644a9a4012a7f4ace9e450f9789ce516bae239", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI2NDRhOWE0MDEyYTdmNGFjZTllNDUwZjk3ODljZTUxNmJhZTIzOQ==", "commit": {"author": {"name": "Toon Moene", "email": "toon@moene.indiv.nluug.nl", "date": "2000-07-08T22:29:17Z"}, "committer": {"name": "Toon Moene", "email": "toon@gcc.gnu.org", "date": "2000-07-08T22:29:17Z"}, "message": "fold-const.c (extract_muldiv): Check whether c divides op1 exactly if operation is not multiplication.\n\n2000-07-08  Toon Moene  <toon@moene.indiv.nluug.nl>\n\n\t* fold-const.c (extract_muldiv) case PLUS_EXPR, MINUS_EXPR:\n\tCheck whether c divides op1 exactly if operation is not\n\tmultiplication.\n\nFrom-SVN: r34928", "tree": {"sha": "4e8a395bcb26470d8d7782b47aa3d952357f7d74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e8a395bcb26470d8d7782b47aa3d952357f7d74"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12644a9a4012a7f4ace9e450f9789ce516bae239", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12644a9a4012a7f4ace9e450f9789ce516bae239", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12644a9a4012a7f4ace9e450f9789ce516bae239", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12644a9a4012a7f4ace9e450f9789ce516bae239/comments", "author": null, "committer": null, "parents": [{"sha": "0ac76ad9eb17dd98b6008d083aa31442cbfa0410", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ac76ad9eb17dd98b6008d083aa31442cbfa0410", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ac76ad9eb17dd98b6008d083aa31442cbfa0410"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "4d33224b012dca9349435a804927c1d535e51151", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12644a9a4012a7f4ace9e450f9789ce516bae239/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12644a9a4012a7f4ace9e450f9789ce516bae239/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=12644a9a4012a7f4ace9e450f9789ce516bae239", "patch": "@@ -1,3 +1,9 @@\n+2000-07-08  Toon Moene  <toon@moene.indiv.nluug.nl>\n+\n+\t* fold-const.c (extract_muldiv) case PLUS_EXPR, MINUS_EXPR:\n+\tCheck whether c divides op1 exactly if operation is not\n+\tmultiplication.\n+\n 2000-07-08  Richard Henderson  <rth@cygnus.com>\n \n         * final.c (final): Do not abort when reg-stack introduces"}, {"sha": "26ac5d27a7e56f1b56c86102e426908d1bfbae7c", "filename": "gcc/fold-const.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12644a9a4012a7f4ace9e450f9789ce516bae239/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12644a9a4012a7f4ace9e450f9789ce516bae239/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=12644a9a4012a7f4ace9e450f9789ce516bae239", "patch": "@@ -4501,10 +4501,17 @@ extract_muldiv (t, c, code, wide_type)\n \t    break;\n \t}\n \n-      /* Now do the operation and verify it doesn't overflow.  */\n-      op1 = const_binop (code, convert (ctype, op1), convert (ctype, c), 0);\n-      if (op1 == 0 || TREE_OVERFLOW (op1))\n-\tbreak;\n+      /* If it's a multiply or a division/modulus operation of a multiple\n+         of our constant, do the operation and verify it doesn't overflow.  */\n+      if (code == MULT_EXPR\n+\t  || integer_zerop (const_binop (TRUNC_MOD_EXPR, op1, c, 0)))\n+        {\n+          op1 = const_binop (code, convert (ctype, op1), convert (ctype, c), 0);\n+          if (op1 == 0 || TREE_OVERFLOW (op1))\n+            break;\n+        }\n+      else\n+        break;\n \n       /* If we have an unsigned type is not a sizetype, we cannot widen\n \t the operation since it will change the result if the original"}]}