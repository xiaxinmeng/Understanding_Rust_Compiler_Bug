{"sha": "86620d2d5fd57d0f7696dd74635f38248515c014", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY2MjBkMmQ1ZmQ1N2QwZjc2OTZkZDc0NjM1ZjM4MjQ4NTE1YzAxNA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-03-03T01:39:25Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-03-03T01:39:25Z"}, "message": "Don't crash on erroneous void initializer in temporary statement.\n\nFrom-SVN: r170635", "tree": {"sha": "d592470510d93d3a22a612787d0b639183650d92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d592470510d93d3a22a612787d0b639183650d92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86620d2d5fd57d0f7696dd74635f38248515c014", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86620d2d5fd57d0f7696dd74635f38248515c014", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86620d2d5fd57d0f7696dd74635f38248515c014", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86620d2d5fd57d0f7696dd74635f38248515c014/comments", "author": null, "committer": null, "parents": [{"sha": "deed2020853b84c7bc74611ae7299cca5f2b63c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/deed2020853b84c7bc74611ae7299cca5f2b63c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/deed2020853b84c7bc74611ae7299cca5f2b63c8"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "f8f54c4dcd704c5d4f8e822a95d0a4b82ff83840", "filename": "gcc/go/gofrontend/statements.cc", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86620d2d5fd57d0f7696dd74635f38248515c014/gcc%2Fgo%2Fgofrontend%2Fstatements.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86620d2d5fd57d0f7696dd74635f38248515c014/gcc%2Fgo%2Fgofrontend%2Fstatements.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fstatements.cc?ref=86620d2d5fd57d0f7696dd74635f38248515c014", "patch": "@@ -391,7 +391,10 @@ Temporary_statement::do_get_tree(Translate_context* context)\n {\n   gcc_assert(this->decl_ == NULL_TREE);\n   tree type_tree = this->type()->get_tree(context->gogo());\n-  if (type_tree == error_mark_node)\n+  tree init_tree = (this->init_ == NULL\n+\t\t    ? NULL_TREE\n+\t\t    : this->init_->get_tree(context));\n+  if (type_tree == error_mark_node || init_tree == error_mark_node)\n     {\n       this->decl_ = error_mark_node;\n       return error_mark_node;\n@@ -423,11 +426,10 @@ Temporary_statement::do_get_tree(Translate_context* context)\n \n       this->decl_ = decl;\n     }\n-  if (this->init_ != NULL)\n+  if (init_tree != NULL_TREE)\n     DECL_INITIAL(this->decl_) =\n       Expression::convert_for_assignment(context, this->type(),\n-\t\t\t\t\t this->init_->type(),\n-\t\t\t\t\t this->init_->get_tree(context),\n+\t\t\t\t\t this->init_->type(), init_tree,\n \t\t\t\t\t this->location());\n   if (this->is_address_taken_)\n     TREE_ADDRESSABLE(this->decl_) = 1;"}]}