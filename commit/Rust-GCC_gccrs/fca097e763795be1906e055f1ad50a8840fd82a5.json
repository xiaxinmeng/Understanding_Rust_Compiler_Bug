{"sha": "fca097e763795be1906e055f1ad50a8840fd82a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmNhMDk3ZTc2Mzc5NWJlMTkwNmUwNTVmMWFkNTBhODg0MGZkODJhNQ==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2001-03-14T23:14:10Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2001-03-14T23:14:10Z"}, "message": "i960.c (i960_function_prologue): Compute size of frame according to number of registers actually saved there.\n\n* config/i960/i960.c (i960_function_prologue): Compute size of\nframe according to number of registers actually saved there.\n\nCo-Authored-By: Vladimir Makarov <vmakarov@redhat.com>\n\nFrom-SVN: r40477", "tree": {"sha": "73cfce3b6d4bd981ae23a45cba37ce75f9c1ea56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73cfce3b6d4bd981ae23a45cba37ce75f9c1ea56"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fca097e763795be1906e055f1ad50a8840fd82a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fca097e763795be1906e055f1ad50a8840fd82a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fca097e763795be1906e055f1ad50a8840fd82a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fca097e763795be1906e055f1ad50a8840fd82a5/comments", "author": null, "committer": null, "parents": [{"sha": "e9c0bd54ae88e23cb896678df3d0cf6efc079f3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9c0bd54ae88e23cb896678df3d0cf6efc079f3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9c0bd54ae88e23cb896678df3d0cf6efc079f3d"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "c426cb6a14061ba54a44b37ccd1bdd8bad09a19f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fca097e763795be1906e055f1ad50a8840fd82a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fca097e763795be1906e055f1ad50a8840fd82a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fca097e763795be1906e055f1ad50a8840fd82a5", "patch": "@@ -1,3 +1,9 @@\n+2001-03-14  DJ Delorie  <dj@redhat.com>\n+\t    Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\t* config/i960/i960.c (i960_function_prologue): Compute size of\n+\tframe according to number of registers actually saved there.\n+\n 2001-03-14  Richard Henderson  <rth@redhat.com>\n \n \t* expr.c (emit_move_insn_1): Fix else if around #endif."}, {"sha": "1f885fe68b15a7782eb6b3bea2637ff2edd8a291", "filename": "gcc/config/i960/i960.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fca097e763795be1906e055f1ad50a8840fd82a5/gcc%2Fconfig%2Fi960%2Fi960.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fca097e763795be1906e055f1ad50a8840fd82a5/gcc%2Fconfig%2Fi960%2Fi960.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Fi960.c?ref=fca097e763795be1906e055f1ad50a8840fd82a5", "patch": "@@ -1474,7 +1474,7 @@ i960_function_prologue (file, size)\n \tlnw = i960_split_reg_group (l, lnw, g->length);\n     }\n \n-  actual_fsize = compute_frame_size (size);\n+  actual_fsize = compute_frame_size (size) + 4 * n_remaining_saved_regs;\n #if 0\n   /* ??? The 1.2.1 compiler does this also.  This is meant to round the frame\n      size up to the nearest multiple of 16.  I don't know whether this is\n@@ -1526,7 +1526,7 @@ i960_function_prologue (file, size)\n \n   /* Take hardware register save area created by the call instruction\n      into account, but store them before the argument block area.  */\n-  lvar_size = actual_fsize - compute_frame_size (0) - n_saved_regs * 4;\n+  lvar_size = actual_fsize - compute_frame_size (0) - n_remaining_saved_regs * 4;\n   offset = STARTING_FRAME_OFFSET + lvar_size;\n   /* Save registers on stack if needed.  */\n   /* ??? Is it worth to use the same algorithm as one for saving"}]}