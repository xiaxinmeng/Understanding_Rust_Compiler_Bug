{"sha": "58b047a8de5482a9e111e67b8802072fdc6e5d76", "node_id": "C_kwDOANBUbNoAKDU4YjA0N2E4ZGU1NDgyYTllMTExZTY3Yjg4MDIwNzJmZGM2ZTVkNzY", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2023-04-07T19:50:40Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas_schwinge@mentor.com", "date": "2023-04-07T19:50:40Z"}, "message": "Merge commit '320dc51c2d9969f644885cc1afa0d8a924f0ab87' into HEAD [#1540]", "tree": {"sha": "209286fc3ab5c78ef4541131b663a53813d98806", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/209286fc3ab5c78ef4541131b663a53813d98806"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58b047a8de5482a9e111e67b8802072fdc6e5d76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58b047a8de5482a9e111e67b8802072fdc6e5d76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58b047a8de5482a9e111e67b8802072fdc6e5d76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58b047a8de5482a9e111e67b8802072fdc6e5d76/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1dcdf61f9e9706284db0f47da8783cfb841316a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dcdf61f9e9706284db0f47da8783cfb841316a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1dcdf61f9e9706284db0f47da8783cfb841316a6"}, {"sha": "320dc51c2d9969f644885cc1afa0d8a924f0ab87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/320dc51c2d9969f644885cc1afa0d8a924f0ab87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/320dc51c2d9969f644885cc1afa0d8a924f0ab87"}], "stats": {"total": 153, "additions": 112, "deletions": 41}, "files": [{"sha": "50bcc523fd2b2aa7e267985d3cce9040dadf74a3", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -582,6 +582,10 @@ Wcast-align=strict\n Common Var(warn_cast_align,2) Warning\n Warn about pointer casts which increase alignment.\n \n+Wcomplain-wrong-lang\n+Common Var(warn_complain_wrong_lang) Init(1) Warning\n+Complain when a command-line option is valid, but not applicable to the current front end.\n+\n Wcpp\n Common Var(warn_cpp) Init(1) Warning\n Warn when a #warning directive is encountered."}, {"sha": "a7ec1a99385a7f59b15f95007b96605a29a4d321", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -343,6 +343,7 @@ Objective-C and Objective-C++ Dialects}.\n -Wcast-align  -Wcast-align=strict  -Wcast-function-type  -Wcast-qual  @gol\n -Wchar-subscripts @gol\n -Wclobbered  -Wcomment @gol\n+-Wno-complain-wrong-lang @gol\n -Wconversion  -Wno-coverage-mismatch  -Wno-cpp @gol\n -Wdangling-else  -Wdangling-pointer  -Wdangling-pointer=@var{n}  @gol\n -Wdate-time @gol\n@@ -8944,6 +8945,25 @@ programs.\n Warn for variables that might be changed by @code{longjmp} or\n @code{vfork}.  This warning is also enabled by @option{-Wextra}.\n \n+@item -Wno-complain-wrong-lang\n+@opindex Wcomplain-wrong-lang\n+@opindex Wno-complain-wrong-lang\n+By default, language front ends complain when a command-line option is\n+valid, but not applicable to that front end.\n+This may be disabled with @option{-Wno-complain-wrong-lang},\n+which is mostly useful when invoking a single compiler driver for\n+multiple source files written in different languages, for example:\n+\n+@smallexample\n+$ g++ -fno-rtti a.cc b.f90\n+@end smallexample\n+\n+The driver @file{g++} invokes the C++ front end to compile @file{a.cc}\n+and the Fortran front end to compile @file{b.f90}.\n+The latter front end diagnoses\n+@samp{f951: Warning: command-line option '-fno-rtti' is valid for C++/D/ObjC++ but not for Fortran},\n+which may be disabled with @option{-Wno-complain-wrong-lang}.\n+\n @item -Wconversion\n @opindex Wconversion\n @opindex Wno-conversion"}, {"sha": "23ddcaa3b55d028982b4ec07b3bd33eca7963ef7", "filename": "gcc/opts-common.cc", "status": "modified", "additions": 36, "deletions": 10, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Fopts-common.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Fopts-common.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts-common.cc?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -1112,7 +1112,8 @@ cancel_option (int opt_idx, int next_opt_idx, int orig_next_opt_idx)\n   return false;\n }\n \n-/* Filter out options canceled by the ones after them.  */\n+/* Filter out options canceled by the ones after them, and related\n+   rearrangement.  */\n \n static void\n prune_options (struct cl_decoded_option **decoded_options,\n@@ -1125,6 +1126,8 @@ prune_options (struct cl_decoded_option **decoded_options,\n     = XNEWVEC (struct cl_decoded_option, old_decoded_options_count);\n   unsigned int i;\n   const struct cl_option *option;\n+  unsigned int options_to_prepend = 0;\n+  unsigned int Wcomplain_wrong_lang_idx = 0;\n   unsigned int fdiagnostics_color_idx = 0;\n \n   /* Remove arguments which are negated by others after them.  */\n@@ -1146,8 +1149,17 @@ prune_options (struct cl_decoded_option **decoded_options,\n \tcase OPT_SPECIAL_input_file:\n \t  goto keep;\n \n-\t/* Do not save OPT_fdiagnostics_color_, just remember the last one.  */\n+\t/* Do not handle the following yet, just remember the last one.  */\n+\tcase OPT_Wcomplain_wrong_lang:\n+\t  gcc_checking_assert (i != 0);\n+\t  if (Wcomplain_wrong_lang_idx == 0)\n+\t    ++options_to_prepend;\n+\t  Wcomplain_wrong_lang_idx = i;\n+\t  continue;\n \tcase OPT_fdiagnostics_color_:\n+\t  gcc_checking_assert (i != 0);\n+\t  if (fdiagnostics_color_idx == 0)\n+\t    ++options_to_prepend;\n \t  fdiagnostics_color_idx = i;\n \t  continue;\n \n@@ -1191,15 +1203,29 @@ prune_options (struct cl_decoded_option **decoded_options,\n \t}\n     }\n \n-  if (fdiagnostics_color_idx >= 1)\n+  /* For those not yet handled, put (only) the last at a front position after\n+     'argv[0]', so they can take effect immediately.  */\n+  if (options_to_prepend)\n     {\n-      /* We put the last -fdiagnostics-color= at the first position\n-\t after argv[0] so it can take effect immediately.  */\n-      memmove (new_decoded_options + 2, new_decoded_options + 1,\n-\t       sizeof (struct cl_decoded_option) \n-\t       * (new_decoded_options_count - 1));\n-      new_decoded_options[1] = old_decoded_options[fdiagnostics_color_idx];\n-      new_decoded_options_count++;\n+      const unsigned int argv_0 = 1;\n+      memmove (new_decoded_options + argv_0 + options_to_prepend,\n+\t       new_decoded_options + argv_0,\n+\t       sizeof (struct cl_decoded_option)\n+\t       * (new_decoded_options_count - argv_0));\n+      unsigned int options_prepended = 0;\n+      if (Wcomplain_wrong_lang_idx != 0)\n+\t{\n+\t  new_decoded_options[argv_0 + options_prepended++]\n+\t    = old_decoded_options[Wcomplain_wrong_lang_idx];\n+\t  new_decoded_options_count++;\n+\t}\n+      if (fdiagnostics_color_idx != 0)\n+\t{\n+\t  new_decoded_options[argv_0 + options_prepended++]\n+\t    = old_decoded_options[fdiagnostics_color_idx];\n+\t  new_decoded_options_count++;\n+\t}\n+      gcc_checking_assert (options_to_prepend == options_prepended);\n     }\n \n   free (old_decoded_options);"}, {"sha": "b7bba23a3235f7d04b88d88b674bacd23c12940d", "filename": "gcc/opts-global.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Fopts-global.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Fopts-global.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts-global.cc?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -91,6 +91,9 @@ complain_wrong_lang (const struct cl_decoded_option *decoded,\n   char *ok_langs = NULL, *bad_lang = NULL;\n   unsigned int opt_flags = option->flags;\n \n+  if (!warn_complain_wrong_lang)\n+    return;\n+\n   if (!lang_hooks.complain_wrong_lang_p (option))\n     return;\n "}, {"sha": "6d67f8d5519b35ddde2ea9cda672379e7474132f", "filename": "gcc/testsuite/g++.dg/abi/empty12.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty12.C?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -2,7 +2,7 @@\n // { dg-do run { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } }\n // { dg-options \"-Wabi=11 -x c\" }\n // { dg-additional-sources \"empty12a.c\" }\n-// { dg-prune-output \"command-line option\" }\n+// { dg-additional-options -Wno-complain-wrong-lang }\n \n #include \"empty12.h\"\n extern \"C\" void fun(struct dummy, struct foo);"}, {"sha": "47f1d7367a4221fe8a26c27cc44c4de86ba0b4c9", "filename": "gcc/testsuite/g++.dg/abi/empty13.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty13.C?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -2,7 +2,7 @@\n // { dg-do run { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } }\n // { dg-options \"-x c -fabi-version=11\" }\n // { dg-additional-sources \"empty13a.c\" }\n-// { dg-prune-output \"command-line option\" }\n+// { dg-additional-options -Wno-complain-wrong-lang }\n \n #include \"empty13.h\"\n extern \"C\" void fun(struct dummy, struct foo);"}, {"sha": "8881bebf87b1d6c7dc8fd08df85e2d10fb675d70", "filename": "gcc/testsuite/g++.dg/abi/empty14.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty14.C?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -2,7 +2,7 @@\n // { dg-do run { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } }\n // { dg-options \"-Wabi=11 -x c\" }\n // { dg-additional-sources \"empty14a.c\" }\n-// { dg-prune-output \"command-line option\" }\n+// { dg-additional-options -Wno-complain-wrong-lang }\n \n #include \"empty14.h\"\n extern \"C\" void fun(struct dummy, struct foo);"}, {"sha": "2474911c5bb1c34c5cd25cb1e71998a47134c775", "filename": "gcc/testsuite/g++.dg/abi/empty15.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty15.C?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -2,7 +2,7 @@\n // { dg-do run { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } }\n // { dg-options \"-Wabi=11 -x c\" }\n // { dg-additional-sources \"empty15a.c\" }\n-// { dg-prune-output \"command-line option\" }\n+// { dg-additional-options -Wno-complain-wrong-lang }\n \n #include \"empty15.h\"\n extern \"C\" void fun(struct dummy, struct foo);"}, {"sha": "6db82a25620cc70a8c44d29774d6de45a9bbeb08", "filename": "gcc/testsuite/g++.dg/abi/empty16.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty16.C?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -2,7 +2,7 @@\n // { dg-do run { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } }\n // { dg-options \"-Wabi=11 -x c\" }\n // { dg-additional-sources \"empty16a.c\" }\n-// { dg-prune-output \"command-line option\" }\n+// { dg-additional-options -Wno-complain-wrong-lang }\n \n #include \"empty16.h\"\n extern \"C\" void fun(struct dummy, struct foo);"}, {"sha": "26f3d774715d6a519647e7faeb728b17f24aeaa5", "filename": "gcc/testsuite/g++.dg/abi/empty17.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty17.C?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -2,7 +2,7 @@\n // { dg-do run { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } }\n // { dg-options \"-Wabi=11 -x c\" }\n // { dg-additional-sources \"empty17a.c\" }\n-// { dg-prune-output \"command-line option\" }\n+// { dg-additional-options -Wno-complain-wrong-lang }\n \n #include \"empty17.h\"\n extern \"C\" void fun(struct dummy, struct foo);"}, {"sha": "02e41cad394b23c51e00ea6b19ea1b66cae34f6b", "filename": "gcc/testsuite/g++.dg/abi/empty18.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty18.C?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -2,7 +2,7 @@\n // { dg-do run { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } }\n // { dg-options \"-Wabi=11 -x c\" }\n // { dg-additional-sources \"empty18a.c\" }\n-// { dg-prune-output \"command-line option\" }\n+// { dg-additional-options -Wno-complain-wrong-lang }\n \n #include \"empty18.h\"\n extern \"C\" void fun(struct dummy, struct foo);"}, {"sha": "89b92f11469b333addf6dbe4ef5e623f8f81b4cf", "filename": "gcc/testsuite/g++.dg/abi/empty19.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty19.C?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -2,7 +2,7 @@\n // { dg-do run { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } }\n // { dg-options \"-Wabi=11 -x c\" }\n // { dg-additional-sources \"empty19a.c\" }\n-// { dg-prune-output \"command-line option\" }\n+// { dg-additional-options -Wno-complain-wrong-lang }\n \n #include \"empty19.h\"\n extern \"C\" void fun(struct dummy, struct foo);"}, {"sha": "1502ea01d12cdc15f5351d16de876216bb8ab272", "filename": "gcc/testsuite/g++.dg/abi/empty22.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty22.C?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -2,7 +2,7 @@\n // { dg-do run { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } }\n // { dg-options \"-Wabi=11 -x c\" }\n // { dg-additional-sources \"empty22a.c\" }\n-// { dg-prune-output \"command-line option\" }\n+// { dg-additional-options -Wno-complain-wrong-lang }\n \n #include \"empty22.h\"\n extern \"C\" void fun(struct dummy, struct foo);"}, {"sha": "bfbaa837760caee06d2e92290dcdf9b55e1a52eb", "filename": "gcc/testsuite/g++.dg/abi/empty25.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty25.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty25.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty25.C?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -2,7 +2,7 @@\n // { dg-do run { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } }\n // { dg-options \"-Wabi=11 -x c\" }\n // { dg-additional-sources \"empty25a.c\" }\n-// { dg-prune-output \"command-line option\" }\n+// { dg-additional-options -Wno-complain-wrong-lang }\n \n #include \"empty25.h\"\n extern \"C\" void fun(struct dummy, struct foo);"}, {"sha": "3a27bf69b15183bb769a3902adaa12778579def1", "filename": "gcc/testsuite/g++.dg/abi/empty26.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty26.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty26.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty26.C?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -2,7 +2,7 @@\n // { dg-do run { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } }\n // { dg-options \"-Wabi=11 -x c\" }\n // { dg-additional-sources \"empty26a.c\" }\n-// { dg-prune-output \"command-line option\" }\n+// { dg-additional-options -Wno-complain-wrong-lang }\n \n #include \"empty26.h\"\n extern \"C\" void fun(struct dummy, struct foo);"}, {"sha": "71016e05abfd4419f5986cfcf059bb16d94efadd", "filename": "gcc/testsuite/gcc.dg/Wcomplain-wrong-lang-1.c", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fgcc.dg%2FWcomplain-wrong-lang-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fgcc.dg%2FWcomplain-wrong-lang-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWcomplain-wrong-lang-1.c?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -0,0 +1,2 @@\n+/* { dg-options -Wctad-maybe-unsupported } and '-Wcomplain-wrong-lang' enabled by default:\n+   { dg-warning {command-line option '-Wctad-maybe-unsupported' is valid for C\\+\\+/ObjC\\+\\+ but not for C} {} { target *-*-* } 0 } */"}, {"sha": "ba2192dd2eae66a9a8d86a9411e894e10f9516b1", "filename": "gcc/testsuite/gcc.dg/Wcomplain-wrong-lang-2.c", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fgcc.dg%2FWcomplain-wrong-lang-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fgcc.dg%2FWcomplain-wrong-lang-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWcomplain-wrong-lang-2.c?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -0,0 +1,2 @@\n+/* { dg-options {-Wcomplain-wrong-lang -Wctad-maybe-unsupported} }\n+   { dg-warning {command-line option '-Wctad-maybe-unsupported' is valid for C\\+\\+/ObjC\\+\\+ but not for C} {} { target *-*-* } 0 } */"}, {"sha": "36bf748e53f4b7e06c0dc91fab237130cf4a23c7", "filename": "gcc/testsuite/gcc.dg/Wcomplain-wrong-lang-3.c", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fgcc.dg%2FWcomplain-wrong-lang-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fgcc.dg%2FWcomplain-wrong-lang-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWcomplain-wrong-lang-3.c?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -0,0 +1,2 @@\n+/* { dg-options {-Wctad-maybe-unsupported -Wno-complain-wrong-lang} }\n+   { dg-bogus {command-line option '-Wctad-maybe-unsupported' is valid for C\\+\\+/ObjC\\+\\+ but not for C} {} { target *-*-* } 0 } */"}, {"sha": "af185f86fd63cc1f8320c7e28a60cfead7922960", "filename": "gcc/testsuite/gcc.dg/Wcomplain-wrong-lang-4.c", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fgcc.dg%2FWcomplain-wrong-lang-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fgcc.dg%2FWcomplain-wrong-lang-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWcomplain-wrong-lang-4.c?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -0,0 +1,2 @@\n+/* { dg-options {-Wno-complain-wrong-lang -Wctad-maybe-unsupported} }\n+   { dg-bogus {command-line option '-Wctad-maybe-unsupported' is valid for C\\+\\+/ObjC\\+\\+ but not for C} {} { target *-*-* } 0 } */"}, {"sha": "dc0a42c6295a8699b9688e19927201ef49d33a65", "filename": "gcc/testsuite/gcc.dg/Wcomplain-wrong-lang-5.c", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fgcc.dg%2FWcomplain-wrong-lang-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fgcc.dg%2FWcomplain-wrong-lang-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWcomplain-wrong-lang-5.c?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -0,0 +1,2 @@\n+/* { dg-options {-Wcomplain-wrong-lang -Wctad-maybe-unsupported -Wno-complain-wrong-lang} }\n+   { dg-bogus {command-line option '-Wctad-maybe-unsupported' is valid for C\\+\\+/ObjC\\+\\+ but not for C} {} { target *-*-* } 0 } */"}, {"sha": "d638dbbef252bc8a291cd67983e71280ca714f7a", "filename": "gcc/testsuite/gfortran.dg/bind-c-contiguous-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind-c-contiguous-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind-c-contiguous-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind-c-contiguous-1.f90?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -1,7 +1,7 @@\n ! { dg-do run }\n ! { dg-additional-sources bind-c-contiguous-1.c }\n ! { dg-additional-options \"-fcheck=all\" }\n-! { dg-prune-output \"command-line option '-fcheck=.*' is valid for Fortran but not for C\" }\n+! { dg-additional-options -Wno-complain-wrong-lang }\n \n ! Fortran demands that with bind(C), the callee ensure that for\n ! * 'contiguous'"}, {"sha": "591c5a7146e7d282d8431f8c8620ac24d2363aee", "filename": "gcc/testsuite/gfortran.dg/bind-c-contiguous-4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind-c-contiguous-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind-c-contiguous-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind-c-contiguous-4.f90?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -4,7 +4,7 @@\n !\n ! { dg-additional-sources bind-c-contiguous-4.c }\n ! { dg-additional-options \"-fcheck=all\" }\n-! { dg-prune-output \"command-line option '-fcheck=.*' is valid for Fortran but not for C\" }\n+! { dg-additional-options -Wno-complain-wrong-lang }\n \n ! Fortran demands that with bind(C), the callee ensure that for\n ! * 'contiguous'"}, {"sha": "58d9a98d5149c0d34b04e730e321bb59e0e585eb", "filename": "gcc/testsuite/gfortran.dg/bind-c-contiguous-5.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind-c-contiguous-5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind-c-contiguous-5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind-c-contiguous-5.f90?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -1,7 +1,7 @@\n ! { dg-do run }\n ! { dg-additional-sources bind-c-contiguous-5.c }\n ! { dg-additional-options \"-fcheck=all\" }\n-! { dg-prune-output \"command-line option '-fcheck=.*' is valid for Fortran but not for C\" }\n+! { dg-additional-options -Wno-complain-wrong-lang }\n !  ---- Same as bind-c-contiguous-1.f90 - but with kind=4 characters\n ! Fortran demands that with bind(C), the callee ensure that for\n ! * 'contiguous'"}, {"sha": "839e5a62191f659832848e238e70a32c68f54f81", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -59,6 +59,10 @@ proc check_compile {basename type contents args} {\n     } else {\n \tset options \"\"\n     }\n+    # Silence \"command-line option [...] is valid for [...] but not for [...]\"\n+    # that we may easily run into here, if more than one language is involved.\n+    lappend options additional_flags=-Wno-complain-wrong-lang\n+\n     switch -glob -- $contents {\n \t\"*/\\\\* Assembly*\" { set src ${basename}[pid].S }\n \t\"*! Fortran*\" { set src ${basename}[pid].f90 }"}, {"sha": "834a2d259326c48abb8ba2bfd65823340f640e76", "filename": "libgomp/testsuite/libgomp.fortran/alloc-10.f90", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-10.f90?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -1,5 +1,6 @@\n ! { dg-additional-sources alloc-7.c }\n-! { dg-prune-output \"command-line option '-fintrinsic-modules-path=.*' is valid for Fortran but not for C\" }\n+! { dg-additional-options -Wno-complain-wrong-lang }\n+\n module m\n   use omp_lib\n   use iso_c_binding"}, {"sha": "e85e2faa11e1750c170f2945d3c06d07d187c7eb", "filename": "libgomp/testsuite/libgomp.fortran/alloc-11.f90", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-11.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-11.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-11.f90?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -1,5 +1,6 @@\n ! { dg-additional-sources alloc-7.c }\n-! { dg-prune-output \"command-line option '-fintrinsic-modules-path=.*' is valid for Fortran but not for C\" }\n+! { dg-additional-options -Wno-complain-wrong-lang }\n+\n module m\n   use omp_lib\n   use iso_c_binding"}, {"sha": "8ef40ffcbba7df284d1f50b5cb5f92ad45195bbf", "filename": "libgomp/testsuite/libgomp.fortran/alloc-7.f90", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-7.f90?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -1,5 +1,6 @@\n ! { dg-additional-sources alloc-7.c }\n-! { dg-prune-output \"command-line option '-fintrinsic-modules-path=.*' is valid for Fortran but not for C\" }\n+! { dg-additional-options -Wno-complain-wrong-lang }\n+\n module m\n   use omp_lib\n   use iso_c_binding"}, {"sha": "4a1c6a75a4a662973cc96724cdbb4fe5ed4d00cf", "filename": "libgomp/testsuite/libgomp.fortran/alloc-9.f90", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-9.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-9.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-9.f90?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -1,5 +1,6 @@\n ! { dg-additional-sources alloc-7.c }\n-! { dg-prune-output \"command-line option '-fintrinsic-modules-path=.*' is valid for Fortran but not for C\" }\n+! { dg-additional-options -Wno-complain-wrong-lang }\n+\n module m\n   use omp_lib\n   use iso_c_binding"}, {"sha": "c10820e1402219022243ea729c83704e34cd46ed", "filename": "libgomp/testsuite/libgomp.fortran/allocate-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocate-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocate-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocate-1.f90?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -1,6 +1,6 @@\n ! { dg-do run }\n ! { dg-additional-sources allocate-1.c }\n-! { dg-prune-output \"command-line option '-fintrinsic-modules-path=.*' is valid for Fortran but not for C\" }\n+! { dg-additional-options -Wno-complain-wrong-lang }\n \n module m\n   use omp_lib"}, {"sha": "35b47e93ac2d6fcc2563915dbe9c3b2bcfe6adff", "filename": "libgomp/testsuite/libgomp.fortran/depend-4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-4.f90?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -1,7 +1,7 @@\n ! { dg-additional-options \"-fdump-tree-gimple\" }\n !\n ! { dg-additional-sources my-usleep.c }\n-! { dg-prune-output \"command-line option '-fintrinsic-modules-path=.*' is valid for Fortran but not for C\" }\n+! { dg-additional-options -Wno-complain-wrong-lang }\n !\n ! Ensure that 'depend(...: var)' and 'depobj(...) depend(...: var)'\n ! depend on the same variable when 'var' is a pointer"}, {"sha": "7c3f29745cb86fbf0158951537e4b0412b3846d8", "filename": "libgomp/testsuite/libgomp.fortran/depend-5.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-5.f90?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -1,5 +1,5 @@\n ! { dg-additional-sources my-usleep.c }\n-! { dg-prune-output \"command-line option '-fintrinsic-modules-path=.*' is valid for Fortran but not for C\" }\n+! { dg-additional-options -Wno-complain-wrong-lang }\n \n module m\n   implicit none"}, {"sha": "bb085f21fd76a0cabd3b2268ca42f28f10b025fc", "filename": "libgomp/testsuite/libgomp.fortran/depend-6.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-6.f90?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -1,5 +1,5 @@\n ! { dg-additional-sources my-usleep.c }\n-! { dg-prune-output \"command-line option '-fintrinsic-modules-path=.*' is valid for Fortran but not for C\" }\n+! { dg-additional-options -Wno-complain-wrong-lang }\n \n module m\n   use omp_lib"}, {"sha": "86e310c440c5d52ccf0b4a2aa39d386e682c4cd7", "filename": "libgomp/testsuite/libgomp.fortran/depend-7.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-7.f90?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -1,5 +1,5 @@\n ! { dg-additional-sources my-usleep.c }\n-! { dg-prune-output \"command-line option '-fintrinsic-modules-path=.*' is valid for Fortran but not for C\" }\n+! { dg-additional-options -Wno-complain-wrong-lang }\n \n program main\n   implicit none"}, {"sha": "6953b592095f9f47ebbe0d7d9f6db136721b50e1", "filename": "libgomp/testsuite/libgomp.fortran/depend-inoutset-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-inoutset-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-inoutset-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-inoutset-1.f90?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -1,5 +1,5 @@\n ! { dg-additional-sources my-usleep.c }\n-! { dg-prune-output \"command-line option '-fintrinsic-modules-path=.*' is valid for Fortran but not for C\" }\n+! { dg-additional-options -Wno-complain-wrong-lang }\n \n program main\n   use omp_lib"}, {"sha": "fcc7f51f4da85e096fedb7e9362f3a0ca4162ba8", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/declare_target-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-1.f90?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -1,6 +1,6 @@\n ! { dg-do run }\n ! { dg-additional-sources ../on_device_arch.c }\n-! { dg-prune-output \"command-line option '-fintrinsic-modules-path=.*' is valid for Fortran but not for C\" }\n+! { dg-additional-options -Wno-complain-wrong-lang }\n \n module e_53_1_mod\n   integer :: THRESHOLD = 20"}, {"sha": "d43d9abecd398209975a7a0c923a4649b0b7b79d", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/declare_target-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-2.f90?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -1,6 +1,6 @@\n ! { dg-do run }\n ! { dg-additional-sources ../on_device_arch.c }\n-! { dg-prune-output \"command-line option '-fintrinsic-modules-path=.*' is valid for Fortran but not for C\" }\n+! { dg-additional-options -Wno-complain-wrong-lang }\n \n program e_53_2\n   !$omp declare target (fib)"}, {"sha": "35a030ec6665e3b03aa3729d7a9db0a9120aa353", "filename": "libgomp/testsuite/libgomp.fortran/order-reproducible-1.f90", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/libgomp%2Ftestsuite%2Flibgomp.fortran%2Forder-reproducible-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/libgomp%2Ftestsuite%2Flibgomp.fortran%2Forder-reproducible-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Forder-reproducible-1.f90?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -1,5 +1,6 @@\n ! { dg-additional-sources my-usleep.c }\n-! { dg-prune-output \"command-line option '-fintrinsic-modules-path=.*' is valid for Fortran but not for C\" }\n+! { dg-additional-options -Wno-complain-wrong-lang }\n+\n program main\n   implicit none\n   interface"}, {"sha": "c88825173c3e7083cd33557895c6391464997d81", "filename": "libgomp/testsuite/libgomp.fortran/order-reproducible-2.f90", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/libgomp%2Ftestsuite%2Flibgomp.fortran%2Forder-reproducible-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/libgomp%2Ftestsuite%2Flibgomp.fortran%2Forder-reproducible-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Forder-reproducible-2.f90?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -1,5 +1,6 @@\n ! { dg-additional-sources my-usleep.c }\n-! { dg-prune-output \"command-line option '-fintrinsic-modules-path=.*' is valid for Fortran but not for C\" }\n+! { dg-additional-options -Wno-complain-wrong-lang }\n+\n program main\n   implicit none\n   interface"}, {"sha": "b2c476fd6a6b219281b7f4dee2b02ef9734ecb34", "filename": "libgomp/testsuite/libgomp.fortran/task-detach-6.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask-detach-6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask-detach-6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask-detach-6.f90?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -1,7 +1,5 @@\n ! { dg-do run }\n \n-  ! { dg-prune-output \"command-line option '-fintrinsic-modules-path=.*' is valid for Fortran but not for C\" }\n-\n ! Test tasks with detach clause on an offload device.  Each device\n ! thread spawns off a chain of tasks, that can then be executed by\n ! any available thread."}, {"sha": "178a66d6f79f91fcac00209a6c3905d7a801a57e", "filename": "libgomp/testsuite/libgomp.oacc-fortran/parallel-dims.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b047a8de5482a9e111e67b8802072fdc6e5d76/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fparallel-dims.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b047a8de5482a9e111e67b8802072fdc6e5d76/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fparallel-dims.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fparallel-dims.f90?ref=58b047a8de5482a9e111e67b8802072fdc6e5d76", "patch": "@@ -2,8 +2,8 @@\n ! vector_length.\n \n ! { dg-additional-sources parallel-dims-aux.c }\n+! { dg-additional-options -Wno-complain-wrong-lang }\n ! { dg-do run }\n-! { dg-prune-output \"command-line option '-fintrinsic-modules-path=.*' is valid for Fortran but not for C\" }\n \n ! { dg-additional-options \"-DEXPENSIVE\" { target run_expensive_tests } }\n ! { dg-additional-options \"-cpp\" }"}]}