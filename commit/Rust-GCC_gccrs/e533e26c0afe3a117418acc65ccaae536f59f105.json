{"sha": "e533e26c0afe3a117418acc65ccaae536f59f105", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTUzM2UyNmMwYWZlM2ExMTc0MThhY2M2NWNjYWFlNTM2ZjU5ZjEwNQ==", "commit": {"author": {"name": "Wilco Dijkstra", "email": "wdijkstr@arm.com", "date": "2014-09-12T09:29:16Z"}, "committer": {"name": "Jiong Wang", "email": "jiwang@gcc.gnu.org", "date": "2014-09-12T09:29:16Z"}, "message": "[Ree] Ensure inserted copy don't change the number of hard registers\n\n2014-09-12  Wilco Dijkstra  <wilco.dijkstra@arm.com>\n\n  gcc/\n    * ree.c (combine_reaching_defs): Ensure inserted copy don't change the\n    number of hard registers.\n\nFrom-SVN: r215205", "tree": {"sha": "7d0f63c269288ae9656953b28230f8b047a3d065", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d0f63c269288ae9656953b28230f8b047a3d065"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e533e26c0afe3a117418acc65ccaae536f59f105", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e533e26c0afe3a117418acc65ccaae536f59f105", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e533e26c0afe3a117418acc65ccaae536f59f105", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e533e26c0afe3a117418acc65ccaae536f59f105/comments", "author": null, "committer": null, "parents": [{"sha": "6ead0238de25faf67f38a61ac5cacde8125d9fa2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ead0238de25faf67f38a61ac5cacde8125d9fa2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ead0238de25faf67f38a61ac5cacde8125d9fa2"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "4d43c393d30f71fd4dc98c2906eacb47bc5c16d6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e533e26c0afe3a117418acc65ccaae536f59f105/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e533e26c0afe3a117418acc65ccaae536f59f105/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e533e26c0afe3a117418acc65ccaae536f59f105", "patch": "@@ -1,3 +1,8 @@\n+2014-09-12  Wilco Dijkstra  <wilco.dijkstra@arm.com>\n+\n+\t* gcc/ree.c (combine_reaching_defs): Ensure inserted copy don't change\n+\tthe number of hard registers.\n+\n 2014-09-12  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n \t    Anna Tikhonova  <anna.tikhonova@intel.com>"}, {"sha": "a58f114df830c86262e64a64cd20981edcb1cbe6", "filename": "gcc/ree.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e533e26c0afe3a117418acc65ccaae536f59f105/gcc%2Free.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e533e26c0afe3a117418acc65ccaae536f59f105/gcc%2Free.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Free.c?ref=e533e26c0afe3a117418acc65ccaae536f59f105", "patch": "@@ -743,6 +743,14 @@ combine_reaching_defs (ext_cand *cand, const_rtx set_pat, ext_state *state)\n       if (!SCALAR_INT_MODE_P (GET_MODE (SET_DEST (PATTERN (cand->insn)))))\n \treturn false;\n \n+      enum machine_mode dst_mode = GET_MODE (SET_DEST (PATTERN (cand->insn)));\n+      rtx src_reg = get_extended_src_reg (SET_SRC (PATTERN (cand->insn)));\n+\n+      /* Ensure the number of hard registers of the copy match.  */\n+      if (HARD_REGNO_NREGS (REGNO (src_reg), dst_mode)\n+\t  != HARD_REGNO_NREGS (REGNO (src_reg), GET_MODE (src_reg)))\n+\treturn false;\n+\n       /* There's only one reaching def.  */\n       rtx_insn *def_insn = state->defs_list[0];\n \n@@ -792,7 +800,7 @@ combine_reaching_defs (ext_cand *cand, const_rtx set_pat, ext_state *state)\n       start_sequence ();\n       rtx pat = PATTERN (cand->insn);\n       rtx new_dst = gen_rtx_REG (GET_MODE (SET_DEST (pat)),\n-                                 REGNO (XEXP (SET_SRC (pat), 0)));\n+                                 REGNO (get_extended_src_reg (SET_SRC (pat))));\n       rtx new_src = gen_rtx_REG (GET_MODE (SET_DEST (pat)),\n                                  REGNO (SET_DEST (pat)));\n       emit_move_insn (new_dst, new_src);"}]}