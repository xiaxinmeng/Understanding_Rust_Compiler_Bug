{"sha": "4c6a897328a8f500dba1470273bd657791ee47c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM2YTg5NzMyOGE4ZjUwMGRiYTE0NzAyNzNiZDY1Nzc5MWVlNDdjNg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "2000-05-09T01:51:59Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-05-09T01:51:59Z"}, "message": "expr.c (build_jni_stub): Cache the result of _Jv_LookupJNIMethod.\n\n\t* expr.c (build_jni_stub): Cache the result of\n\t_Jv_LookupJNIMethod.\n\nFrom-SVN: r33786", "tree": {"sha": "d7ea94ce23ff98760b30bdc5876fc8b1e3052ba7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7ea94ce23ff98760b30bdc5876fc8b1e3052ba7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c6a897328a8f500dba1470273bd657791ee47c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c6a897328a8f500dba1470273bd657791ee47c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c6a897328a8f500dba1470273bd657791ee47c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c6a897328a8f500dba1470273bd657791ee47c6/comments", "author": null, "committer": null, "parents": [{"sha": "209bbe34b3c541273c81346df020613a7cfde615", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/209bbe34b3c541273c81346df020613a7cfde615", "html_url": "https://github.com/Rust-GCC/gccrs/commit/209bbe34b3c541273c81346df020613a7cfde615"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "0fc8b70c314e64d27f1c6c64beb9cdf04dac5134", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c6a897328a8f500dba1470273bd657791ee47c6/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c6a897328a8f500dba1470273bd657791ee47c6/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=4c6a897328a8f500dba1470273bd657791ee47c6", "patch": "@@ -1,3 +1,8 @@\n+2000-05-08  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* expr.c (build_jni_stub): Cache the result of\n+\t_Jv_LookupJNIMethod.\n+\n 2000-05-05  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* decl.c (predef_filenames_size): Now 7."}, {"sha": "b417bac3d3bc91329637a92d7ab2886b736580db", "filename": "gcc/java/expr.c", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c6a897328a8f500dba1470273bd657791ee47c6/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c6a897328a8f500dba1470273bd657791ee47c6/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=4c6a897328a8f500dba1470273bd657791ee47c6", "patch": "@@ -1855,6 +1855,7 @@ build_jni_stub (method)\n   tree jni_func_type, tem;\n   tree env_var, res_var = NULL_TREE, block;\n   tree method_args, res_type;\n+  tree meth_var;\n \n   tree klass = DECL_CONTEXT (method);\n   int from_class = ! CLASS_FROM_SOURCE_P (klass);\n@@ -1867,13 +1868,25 @@ build_jni_stub (method)\n   DECL_EXTERNAL (method) = 0;\n \n   env_var = build_decl (VAR_DECL, get_identifier (\"env\"), ptr_type_node);\n+  DECL_CONTEXT (env_var) = method;\n+\n   if (TREE_TYPE (TREE_TYPE (method)) != void_type_node)\n     {\n       res_var = build_decl (VAR_DECL, get_identifier (\"res\"),\n \t\t\t    TREE_TYPE (TREE_TYPE (method)));\n+      DECL_CONTEXT (res_var) = method;\n       TREE_CHAIN (env_var) = res_var;\n     }\n \n+  push_obstacks (&permanent_obstack, &permanent_obstack);\n+  meth_var = build_decl (VAR_DECL, get_identifier (\"meth\"), ptr_type_node);\n+  TREE_STATIC (meth_var) = 1;\n+  TREE_PUBLIC (meth_var) = 0;\n+  DECL_EXTERNAL (meth_var) = 0;\n+  make_decl_rtl (meth_var, NULL, 0);\n+  meth_var = pushdecl_top_level (meth_var);\n+  pop_obstacks ();\n+\n   /* One strange way that the front ends are different is that they\n      store arguments differently.  */\n   if (from_class)\n@@ -1936,9 +1949,13 @@ build_jni_stub (method)\n     = build_pointer_type (build_function_type (TREE_TYPE (TREE_TYPE (method)),\n \t\t\t\t\t       arg_types));\n \n-  jnifunc = build (CALL_EXPR, ptr_type_node,\n-\t\t   build_address_of (soft_lookupjnimethod_node),\n-\t\t   lookup_arg, NULL_TREE);\n+  jnifunc = build (COND_EXPR, ptr_type_node,\n+\t\t   meth_var, meth_var,\n+\t\t   build (MODIFY_EXPR, ptr_type_node,\n+\t\t\t  meth_var,\n+\t\t\t  build (CALL_EXPR, ptr_type_node,\n+\t\t\t\t build_address_of (soft_lookupjnimethod_node),\n+\t\t\t\t lookup_arg, NULL_TREE)));\n \n   /* Now we make the actual JNI call via the resulting function\n      pointer.    */\n@@ -2003,7 +2020,6 @@ build_jni_stub (method)\n   return block;\n }\n \n-\n /* Expand an operation to extract from or store into a field.\n    IS_STATIC is 1 iff the field is static.\n    IS_PUTTING is 1 for putting into a field;  0 for getting from the field."}]}