{"sha": "a2b33cc36b5a722130092adeb0b7225adcf35133", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJiMzNjYzM2YjVhNzIyMTMwMDkyYWRlYjBiNzIyNWFkY2YzNTEzMw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-02-15T09:54:52Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-02-15T09:54:52Z"}, "message": "re PR tree-optimization/60183 (phiprop creates invalid code)\n\n2014-02-15  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/60183\n\t* tree-ssa-phiprop.c (propagate_with_phi): Avoid speculating\n\tloads.\n\t(tree_ssa_phiprop): Calculate and free post-dominators.\n\n\t* gcc.dg/torture/pr60183.c: New testcase.\n\nFrom-SVN: r207797", "tree": {"sha": "7a30553f9d64251395dbf70303ce151ece8c2cce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a30553f9d64251395dbf70303ce151ece8c2cce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2b33cc36b5a722130092adeb0b7225adcf35133", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2b33cc36b5a722130092adeb0b7225adcf35133", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2b33cc36b5a722130092adeb0b7225adcf35133", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2b33cc36b5a722130092adeb0b7225adcf35133/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cd7734ca9e744ca6155e87c1f11dd4293c46b937", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd7734ca9e744ca6155e87c1f11dd4293c46b937", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd7734ca9e744ca6155e87c1f11dd4293c46b937"}], "stats": {"total": 59, "additions": 59, "deletions": 0}, "files": [{"sha": "6d2331baa2ac1db038e06e7d12c10bf59ee3f576", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2b33cc36b5a722130092adeb0b7225adcf35133/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2b33cc36b5a722130092adeb0b7225adcf35133/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a2b33cc36b5a722130092adeb0b7225adcf35133", "patch": "@@ -1,3 +1,10 @@\n+2014-02-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/60183\n+\t* tree-ssa-phiprop.c (propagate_with_phi): Avoid speculating\n+\tloads.\n+\t(tree_ssa_phiprop): Calculate and free post-dominators.\n+\n 2014-02-14  Jeff Law  <law@redhat.com>\n \n \tPR rtl-optimization/60131"}, {"sha": "0891251b590f2b5f546236f98c7a2e6f550d69d5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2b33cc36b5a722130092adeb0b7225adcf35133/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2b33cc36b5a722130092adeb0b7225adcf35133/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a2b33cc36b5a722130092adeb0b7225adcf35133", "patch": "@@ -1,3 +1,8 @@\n+2014-02-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/60183\n+\t* gcc.dg/torture/pr60183.c: New testcase.\n+\n 2014-02-14  Jeff Law  <law@redhat.com>\n \n \tPR rtl-optimization/60131"}, {"sha": "d37b4b80aba77a221b6fc186c2a04a08f6cf794c", "filename": "gcc/testsuite/gcc.dg/torture/pr60183.c", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2b33cc36b5a722130092adeb0b7225adcf35133/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr60183.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2b33cc36b5a722130092adeb0b7225adcf35133/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr60183.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr60183.c?ref=a2b33cc36b5a722130092adeb0b7225adcf35133", "patch": "@@ -0,0 +1,38 @@\n+/* { dg-do run } */\n+\n+/* Large so an out-of-bound read will crash.  */\n+unsigned char c[0x30001] = { 1 };\n+int j = 2;\n+\n+static void\n+foo (unsigned long *x, unsigned char *y)\n+{\n+  int i;\n+  unsigned long w = x[0];\n+  for (i = 0; i < j; i++)\n+    {\n+      w += *y;\n+      y += 0x10000;\n+      w += *y;\n+      y += 0x10000;\n+    }\n+  x[1] = w;\n+}\n+\n+__attribute__ ((noinline, noclone)) void\n+bar (unsigned long *x)\n+{\n+  foo (x, c);\n+}\n+\n+int\n+main ()\n+{\n+  unsigned long a[2] = { 0, -1UL };\n+  asm volatile (\"\"::\"r\" (c):\"memory\");\n+  c[0] = 0;\n+  bar (a);\n+  if (a[1] != 0)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "4d66c12a6062f13ec1fa9b7100774d7193d7f16b", "filename": "gcc/tree-ssa-phiprop.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2b33cc36b5a722130092adeb0b7225adcf35133/gcc%2Ftree-ssa-phiprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2b33cc36b5a722130092adeb0b7225adcf35133/gcc%2Ftree-ssa-phiprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiprop.c?ref=a2b33cc36b5a722130092adeb0b7225adcf35133", "patch": "@@ -309,6 +309,12 @@ propagate_with_phi (basic_block bb, gimple phi, struct phiprop_d *phivn,\n       gimple def_stmt;\n       tree vuse;\n \n+      /* Only replace loads in blocks that post-dominate the PHI node.  That\n+         makes sure we don't end up speculating loads.  */\n+      if (!dominated_by_p (CDI_POST_DOMINATORS,\n+\t\t\t   bb, gimple_bb (use_stmt)))\n+\tcontinue;\n+         \n       /* Check whether this is a load of *ptr.  */\n       if (!(is_gimple_assign (use_stmt)\n \t    && TREE_CODE (gimple_assign_lhs (use_stmt)) == SSA_NAME\n@@ -380,6 +386,7 @@ tree_ssa_phiprop (void)\n   size_t n;\n \n   calculate_dominance_info (CDI_DOMINATORS);\n+  calculate_dominance_info (CDI_POST_DOMINATORS);\n \n   n = num_ssa_names;\n   phivn = XCNEWVEC (struct phiprop_d, n);\n@@ -397,6 +404,8 @@ tree_ssa_phiprop (void)\n   bbs.release ();\n   free (phivn);\n \n+  free_dominance_info (CDI_POST_DOMINATORS);\n+\n   return 0;\n }\n "}]}