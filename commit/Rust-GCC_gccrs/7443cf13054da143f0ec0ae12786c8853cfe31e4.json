{"sha": "7443cf13054da143f0ec0ae12786c8853cfe31e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ0M2NmMTMwNTRkYTE0M2YwZWMwYWUxMjc4NmM4ODUzY2ZlMzFlNA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2016-01-06T20:13:19Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2016-01-06T20:13:19Z"}, "message": "C: fix reported range of invalid unary dereference.\n\ngcc/c/ChangeLog:\n\t* c-parser.c (c_parser_unary_expression): For dereferences, build\n\ta combined location before calling build_indirect_ref, so that\n\terror reports cover the full range, manually updating the c_expr\n\tsrc_range.\n\ngcc/testsuite/ChangeLog:\n\t* gcc.dg/bad-dereference.c: New test case.\n\nFrom-SVN: r232110", "tree": {"sha": "dbe7927ebc9954a5c99d1f6d0a4d18f340e3a3d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbe7927ebc9954a5c99d1f6d0a4d18f340e3a3d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7443cf13054da143f0ec0ae12786c8853cfe31e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7443cf13054da143f0ec0ae12786c8853cfe31e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7443cf13054da143f0ec0ae12786c8853cfe31e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7443cf13054da143f0ec0ae12786c8853cfe31e4/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "329289313c67f0ce8db19746e5c6d2601e853b3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/329289313c67f0ce8db19746e5c6d2601e853b3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/329289313c67f0ce8db19746e5c6d2601e853b3b"}], "stats": {"total": 55, "additions": 47, "deletions": 8}, "files": [{"sha": "f8bac2d4e4b1b5b7ba1e99f51bfc846e0f7a91ea", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7443cf13054da143f0ec0ae12786c8853cfe31e4/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7443cf13054da143f0ec0ae12786c8853cfe31e4/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=7443cf13054da143f0ec0ae12786c8853cfe31e4", "patch": "@@ -1,3 +1,10 @@\n+2016-01-06  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* c-parser.c (c_parser_unary_expression): For dereferences, build\n+\ta combined location before calling build_indirect_ref, so that\n+\terror reports cover the full range, manually updating the c_expr\n+\tsrc_range.\n+\n 2016-01-06  Marek Polacek  <polacek@redhat.com>\n \n \tPR sanitizer/69099"}, {"sha": "a0e0052156c6bc930750e14103ba2ddc61253488", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7443cf13054da143f0ec0ae12786c8853cfe31e4/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7443cf13054da143f0ec0ae12786c8853cfe31e4/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=7443cf13054da143f0ec0ae12786c8853cfe31e4", "patch": "@@ -6759,14 +6759,18 @@ c_parser_unary_expression (c_parser *parser)\n       mark_exp_read (op.value);\n       return parser_build_unary_op (op_loc, ADDR_EXPR, op);\n     case CPP_MULT:\n-      c_parser_consume_token (parser);\n-      exp_loc = c_parser_peek_token (parser)->location;\n-      op = c_parser_cast_expression (parser, NULL);\n-      finish = op.get_finish ();\n-      op = convert_lvalue_to_rvalue (exp_loc, op, true, true);\n-      ret.value = build_indirect_ref (op_loc, op.value, RO_UNARY_STAR);\n-      set_c_expr_source_range (&ret, op_loc, finish);\n-      return ret;\n+      {\n+\tc_parser_consume_token (parser);\n+\texp_loc = c_parser_peek_token (parser)->location;\n+\top = c_parser_cast_expression (parser, NULL);\n+\tfinish = op.get_finish ();\n+\top = convert_lvalue_to_rvalue (exp_loc, op, true, true);\n+\tlocation_t combined_loc = make_location (op_loc, op_loc, finish);\n+\tret.value = build_indirect_ref (combined_loc, op.value, RO_UNARY_STAR);\n+\tret.src_range.m_start = op_loc;\n+\tret.src_range.m_finish = finish;\n+\treturn ret;\n+      }\n     case CPP_PLUS:\n       if (!c_dialect_objc () && !in_system_header_at (input_location))\n \twarning_at (op_loc,"}, {"sha": "e3a742a27833cc7d22e2a8e7800578db72596263", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7443cf13054da143f0ec0ae12786c8853cfe31e4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7443cf13054da143f0ec0ae12786c8853cfe31e4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7443cf13054da143f0ec0ae12786c8853cfe31e4", "patch": "@@ -1,3 +1,7 @@\n+2016-01-06  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* gcc.dg/bad-dereference.c: New test case.\n+\n 2015-01-06  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* gcc.target/powerpc/p9-lxvx-stxvx-3.c: New test."}, {"sha": "5f8188dbccd8a191d774c37060d1a132765fa25c", "filename": "gcc/testsuite/gcc.dg/bad-dereference.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7443cf13054da143f0ec0ae12786c8853cfe31e4/gcc%2Ftestsuite%2Fgcc.dg%2Fbad-dereference.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7443cf13054da143f0ec0ae12786c8853cfe31e4/gcc%2Ftestsuite%2Fgcc.dg%2Fbad-dereference.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbad-dereference.c?ref=7443cf13054da143f0ec0ae12786c8853cfe31e4", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-options \"-fdiagnostics-show-caret\" } */\n+\n+struct foo\n+{\n+  int x;\n+};\n+\n+int test_1 (struct foo some_f)\n+{\n+  return *some_f.x; /* { dg-error \"invalid type argument of unary ... .have .int..\" } */\n+/* { dg-begin-multiline-output \"\" }\n+   return *some_f.x;\n+          ^~~~~~~~~\n+   { dg-end-multiline-output \"\" } */\n+}\n+\n+int test_2 (struct foo some_f)\n+{\n+  return *some_f; /* { dg-error \"invalid type argument of unary ... .have .struct foo..\" } */\n+/* { dg-begin-multiline-output \"\" }\n+   return *some_f;\n+          ^~~~~~~\n+   { dg-end-multiline-output \"\" } */\n+}"}]}