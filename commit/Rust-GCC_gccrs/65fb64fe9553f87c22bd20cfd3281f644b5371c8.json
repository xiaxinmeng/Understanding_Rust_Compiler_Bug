{"sha": "65fb64fe9553f87c22bd20cfd3281f644b5371c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjVmYjY0ZmU5NTUzZjg3YzIyYmQyMGNmZDMyODFmNjQ0YjUzNzFjOA==", "commit": {"author": {"name": "Stephane Carrez", "email": "stcarrez@nerim.fr", "date": "2003-03-02T20:19:20Z"}, "committer": {"name": "Stephane Carrez", "email": "ciceron@gcc.gnu.org", "date": "2003-03-02T20:19:20Z"}, "message": "m68hc11.md (\"mulqi3\"): Allow address register to avoid reload problems; define split for it.\n\n\t* config/m68hc11/m68hc11.md (\"mulqi3\"): Allow address register to\n\tavoid reload problems; define split for it.\n\nFrom-SVN: r63680", "tree": {"sha": "0c4e8b058dde725a0fc8f99633620b4cd51e24e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c4e8b058dde725a0fc8f99633620b4cd51e24e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65fb64fe9553f87c22bd20cfd3281f644b5371c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65fb64fe9553f87c22bd20cfd3281f644b5371c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65fb64fe9553f87c22bd20cfd3281f644b5371c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65fb64fe9553f87c22bd20cfd3281f644b5371c8/comments", "author": null, "committer": null, "parents": [{"sha": "68dfecb392dce24ed12d735a354d9f1d205deb9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68dfecb392dce24ed12d735a354d9f1d205deb9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68dfecb392dce24ed12d735a354d9f1d205deb9e"}], "stats": {"total": 36, "additions": 33, "deletions": 3}, "files": [{"sha": "f63a647fa356819b85f7dd428737e3a760ceae6c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65fb64fe9553f87c22bd20cfd3281f644b5371c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65fb64fe9553f87c22bd20cfd3281f644b5371c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=65fb64fe9553f87c22bd20cfd3281f644b5371c8", "patch": "@@ -1,3 +1,8 @@\n+2003-03-02  Stephane Carrez  <stcarrez@nerim.fr>\n+\n+\t* config/m68hc11/m68hc11.md (\"mulqi3\"): Allow address register to\n+\tavoid reload problems; define split for it.\n+\n 2003-03-02  Stephane Carrez  <stcarrez@nerim.fr>\n \n \t* config/m68hc11/m68hc11.c (m68hc11_shift_operator): New function."}, {"sha": "4841aebf003e1fbd675c43b53fffe4b52296cf69", "filename": "gcc/config/m68hc11/m68hc11.md", "status": "modified", "additions": 28, "deletions": 3, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65fb64fe9553f87c22bd20cfd3281f644b5371c8/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65fb64fe9553f87c22bd20cfd3281f644b5371c8/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md?ref=65fb64fe9553f87c22bd20cfd3281f644b5371c8", "patch": "@@ -2894,12 +2894,15 @@\n }\")\n \n (define_insn \"mulqi3\"\n-  [(set (match_operand:QI 0 \"register_operand\" \"=d\")\n-        (mult:QI (match_operand:QI 1 \"nonimmediate_operand\" \"dum\")\n-\t\t (match_operand:QI 2 \"nonimmediate_operand\" \"dum\")))]\n+  [(set (match_operand:QI 0 \"register_operand\" \"=d,*x,*y\")\n+        (mult:QI (match_operand:QI 1 \"nonimmediate_operand\" \"%dum,0,0\")\n+\t\t (match_operand:QI 2 \"general_operand\" \"dium,*xium,*yium\")))]\n   \"\"\n   \"*\n {\n+  if (A_REG_P (operands[0]))\n+    return \\\"#\\\";\n+\n   if (D_REG_P (operands[1]) && D_REG_P (operands[2]))\n     {\n       output_asm_insn (\\\"tba\\\", operands);\n@@ -2925,6 +2928,28 @@\n   return \\\"mul\\\";\n }\")\n \n+(define_split\n+  [(set (match_operand:QI 0 \"hard_addr_reg_operand\" \"\")\n+        (mult:QI (match_operand:QI 1 \"general_operand\" \"\")\n+\t\t (match_operand:QI 2 \"general_operand\" \"\")))]\n+  \"z_replacement_completed == 2\"\n+  [(parallel [(set (reg:HI D_REGNUM) (match_dup 3))\n+\t      (set (match_dup 3) (reg:HI D_REGNUM))])\n+   (set (reg:QI D_REGNUM) (mult:QI (match_dup 5) (match_dup 6)))\n+   (parallel [(set (reg:HI D_REGNUM) (match_dup 3))\n+              (set (match_dup 3) (reg:HI D_REGNUM))])]\n+  \"\n+   operands[3] = gen_rtx (REG, HImode, REGNO (operands[0]));\n+   if (A_REG_P (operands[1]))\n+     operands[5] = gen_rtx (REG, QImode, HARD_D_REGNUM);\n+   else\n+     operands[5] = operands[1];\n+   if (A_REG_P (operands[2]))\n+     operands[6] = gen_rtx (REG, QImode, HARD_D_REGNUM);\n+   else\n+     operands[6] = operands[2];\n+  \")\n+\n (define_insn \"mulqihi3\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=d,d\")\n         (mult:HI (sign_extend:HI"}]}