{"sha": "4e42f6ebf483452015c3d102c6ac45741fceb87b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGU0MmY2ZWJmNDgzNDUyMDE1YzNkMTAyYzZhYzQ1NzQxZmNlYjg3Yg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-12-16T13:37:17Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-12-16T14:33:26Z"}, "message": "libcody: Fix build for older GCC versions\n\nBefore CWG DR 1955 the controlling expression for an #elif must be\nsyntactically correct, meaning this won't compile with C++11 compilers\nsuch as gcc 4.8:\n\nThe solution is to define __has_include(X) as 0 for compilers that don't\nsupport it.\n\nThe second problem is that when <source_location> is found, it is used\nwithout the std:: qualification.\n\nlibcody/ChangeLog:\n\n\t* internal.hh: Define fallback macros for __has_builtin and\n\t__has_include. Use __has_builtin for __builtin_FILE and\n\t__builtin_LINE. Define alias for std::source_location.", "tree": {"sha": "254d33a20c5edd31118eca2f64b70f549ec2f7a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/254d33a20c5edd31118eca2f64b70f549ec2f7a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e42f6ebf483452015c3d102c6ac45741fceb87b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e42f6ebf483452015c3d102c6ac45741fceb87b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e42f6ebf483452015c3d102c6ac45741fceb87b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e42f6ebf483452015c3d102c6ac45741fceb87b/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96d9670e88333d8896a5d2f2bb0403c1e2ad19ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96d9670e88333d8896a5d2f2bb0403c1e2ad19ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96d9670e88333d8896a5d2f2bb0403c1e2ad19ab"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "87673f566575b1b896a446663b0cfb21e2a7b75d", "filename": "libcody/internal.hh", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e42f6ebf483452015c3d102c6ac45741fceb87b/libcody%2Finternal.hh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e42f6ebf483452015c3d102c6ac45741fceb87b/libcody%2Finternal.hh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Finternal.hh?ref=4e42f6ebf483452015c3d102c6ac45741fceb87b", "patch": "@@ -4,14 +4,23 @@\n \n #include \"cody.hh\"\n \n+#ifndef __has_builtin\n+#define __has_builtin(X) 0\n+#endif\n+#ifndef __has_include\n+#define __has_include(X) 0\n+#endif\n+\n // C++\n-#if __GNUC__ >= 10\n+#if __has_builtin(__builtin_FILE) && __has_builtin(__builtin_LINE)\n #define CODY_LOC_BUILTIN 1\n-#elif !defined (__has_include)\n #elif __has_include (<source_location>)\n #include <source_location>\n+#ifdef __cpp_lib_source_location\n #define CODY_LOC_SOURCE 1\n #endif\n+#endif\n+\n // C\n #include <cstdio>\n \n@@ -44,6 +53,8 @@ public:\n   }\n \n #if !CODY_LOC_BUILTIN && CODY_LOC_SOURCE\n+  using source_location = std::source_location;\n+\n   constexpr Location (source_location loc = source_location::current ())\n     : Location (loc.file (), loc.line ())\n   {"}]}