{"sha": "5dc5d13c708ac848d6e30e22546ca2062732bd57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRjNWQxM2M3MDhhYzg0OGQ2ZTMwZTIyNTQ2Y2EyMDYyNzMyYmQ1Nw==", "commit": {"author": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@users.sourceforge.net", "date": "2003-05-03T11:58:17Z"}, "committer": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@gcc.gnu.org", "date": "2003-05-03T11:58:17Z"}, "message": "PR c++/9364, c++/10553, c++/10586\n\n\tPR c++/9364, c++/10553, c++/10586\n\t* decl.c (make_typename_type): Don't crash on illegal code.\n\n\t* g++.dg/parse/typename4.C: New test.\n\t* g++.dg/parse/typename5.C: Likewise.\n\nFrom-SVN: r66424", "tree": {"sha": "b893f0428bd352d3c90aa934e3f96d8e3104ce5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b893f0428bd352d3c90aa934e3f96d8e3104ce5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5dc5d13c708ac848d6e30e22546ca2062732bd57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dc5d13c708ac848d6e30e22546ca2062732bd57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dc5d13c708ac848d6e30e22546ca2062732bd57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dc5d13c708ac848d6e30e22546ca2062732bd57/comments", "author": null, "committer": null, "parents": [{"sha": "82a98427a9d2ab2a8ec9b09f8c91069ef21bd82d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82a98427a9d2ab2a8ec9b09f8c91069ef21bd82d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82a98427a9d2ab2a8ec9b09f8c91069ef21bd82d"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "07e5a655a4c9972162601bc659a1eb6a27b8771a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc5d13c708ac848d6e30e22546ca2062732bd57/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc5d13c708ac848d6e30e22546ca2062732bd57/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5dc5d13c708ac848d6e30e22546ca2062732bd57", "patch": "@@ -1,3 +1,8 @@\n+2003-05-03  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/9364, c++/10553, c++/10586\n+\t* decl.c (make_typename_type): Don't crash on illegal code.\n+\n 2003-05-03  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* class.c (finish_struct): Use location_t and input_location"}, {"sha": "6cbcd3f9c4b51de08d0358c705d4cbc4a9aada57", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc5d13c708ac848d6e30e22546ca2062732bd57/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc5d13c708ac848d6e30e22546ca2062732bd57/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=5dc5d13c708ac848d6e30e22546ca2062732bd57", "patch": "@@ -5418,6 +5418,11 @@ make_typename_type (tree context, tree name, tsubst_flags_t complain)\n {\n   tree fullname;\n \n+  if (name == error_mark_node\n+      || context == NULL_TREE\n+      || context == error_mark_node)\n+    return error_mark_node;\n+\n   if (TYPE_P (name))\n     {\n       if (!(TYPE_LANG_SPECIFIC (name)"}, {"sha": "3109c7556144a6e3fcca849420865af10615fbc5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc5d13c708ac848d6e30e22546ca2062732bd57/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc5d13c708ac848d6e30e22546ca2062732bd57/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5dc5d13c708ac848d6e30e22546ca2062732bd57", "patch": "@@ -1,3 +1,9 @@\n+2003-05-03  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/9364, c++/10553, c++/10586\n+\t* g++.dg/parse/typename4.C: New test.\n+\t* g++.dg/parse/typename5.C: Likewise.\n+\n 2003-05-03  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* gcc.c-torture/compile/20030503-1.c: New test."}, {"sha": "529889df60c92da20464dbdca32798272e4b0675", "filename": "gcc/testsuite/g++.dg/parse/typename4.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc5d13c708ac848d6e30e22546ca2062732bd57/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypename4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc5d13c708ac848d6e30e22546ca2062732bd57/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypename4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypename4.C?ref=5dc5d13c708ac848d6e30e22546ca2062732bd57", "patch": "@@ -0,0 +1,7 @@\n+// { dg-do compile }\n+\n+// Origin: Christian Ehrhardt <ehrhardt@mathematik.uni-ulm.de>\n+\n+// PR c++/9364: ICE processing typename with name error.\n+\n+void find(typename int&); // { dg-error \"typename|void|expected\" }"}, {"sha": "70a2814a44f11eefdea0d0585df345ed34dba5cd", "filename": "gcc/testsuite/g++.dg/parse/typename5.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc5d13c708ac848d6e30e22546ca2062732bd57/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypename5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc5d13c708ac848d6e30e22546ca2062732bd57/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypename5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypename5.C?ref=5dc5d13c708ac848d6e30e22546ca2062732bd57", "patch": "@@ -0,0 +1,12 @@\n+// { dg-do compile }\n+\n+// Origin: Volker Reichelt <reichelt@igpm.rwth-aachen.de>\n+\n+// PR c++/10553: ICE processing typename with context error.\n+\n+template <typename> struct A {};\n+\n+template <typename> struct B\n+{\n+    typedef A<typename X::Y> C; // { dg-error \"not a class-name|invalid|no type\" }\n+};"}]}