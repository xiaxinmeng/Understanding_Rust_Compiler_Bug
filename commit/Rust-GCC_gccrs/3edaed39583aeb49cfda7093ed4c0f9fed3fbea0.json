{"sha": "3edaed39583aeb49cfda7093ed4c0f9fed3fbea0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2VkYWVkMzk1ODNhZWI0OWNmZGE3MDkzZWQ0YzBmOWZlZDNmYmVhMA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-11-29T13:04:56Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-11-29T13:04:56Z"}, "message": "Don't pass booleans as mask types to simd clones (PR 92710)\n\nIn this PR we assigned a vector mask type to the result of a comparison\nand then tried to pass that mask type to a simd clone, which expected\na normal (non-mask) type instead.\n\nThis patch simply punts on call arguments that have a mask type.\nA better fix would be to pattern-match the comparison to a COND_EXPR,\nlike we would if the comparison was stored to memory, but doing that\nisn't gcc 9 or 10 material.\n\nNote that this doesn't affect x86_64-linux-gnu because the ABI promotes\nbool arguments to ints.\n\n2019-11-29  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\tPR tree-optimization/92710\n\t* tree-vect-stmts.c (vectorizable_simd_clone_call): Reject\n\tvector mask arguments.\n\ngcc/testsuite/\n\tPR tree-optimization/92710\n\t* gcc.dg/vect/pr92710.c: New test.\n\nFrom-SVN: r278839", "tree": {"sha": "e2a753ac0800cdc6722db8b3154fe7f9779f1e3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2a753ac0800cdc6722db8b3154fe7f9779f1e3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3edaed39583aeb49cfda7093ed4c0f9fed3fbea0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3edaed39583aeb49cfda7093ed4c0f9fed3fbea0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3edaed39583aeb49cfda7093ed4c0f9fed3fbea0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3edaed39583aeb49cfda7093ed4c0f9fed3fbea0/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "337b04a4464eb2638c51e3608aa68511357a8189", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/337b04a4464eb2638c51e3608aa68511357a8189", "html_url": "https://github.com/Rust-GCC/gccrs/commit/337b04a4464eb2638c51e3608aa68511357a8189"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "c2d27921ca834be65caa328a35e445610f51fa1c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3edaed39583aeb49cfda7093ed4c0f9fed3fbea0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3edaed39583aeb49cfda7093ed4c0f9fed3fbea0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3edaed39583aeb49cfda7093ed4c0f9fed3fbea0", "patch": "@@ -1,3 +1,9 @@\n+2019-11-29  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/92710\n+\t* tree-vect-stmts.c (vectorizable_simd_clone_call): Reject\n+\tvector mask arguments.\n+\n 2019-11-29  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* profile-count.c (profile_count::to_cgraph_frequency,"}, {"sha": "aa3a347ee1420a95194cd5edf6b5cee5cb94c563", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3edaed39583aeb49cfda7093ed4c0f9fed3fbea0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3edaed39583aeb49cfda7093ed4c0f9fed3fbea0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3edaed39583aeb49cfda7093ed4c0f9fed3fbea0", "patch": "@@ -1,3 +1,8 @@\n+2019-11-29  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/92710\n+\t* gcc.dg/vect/pr92710.c: New test.\n+\n 2019-11-29 Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR ipa/84963"}, {"sha": "2986d4ce06a6ddb08f2789e7ca4fb951244a9aeb", "filename": "gcc/testsuite/gcc.dg/vect/pr92710.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3edaed39583aeb49cfda7093ed4c0f9fed3fbea0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr92710.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3edaed39583aeb49cfda7093ed4c0f9fed3fbea0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr92710.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr92710.c?ref=3edaed39583aeb49cfda7093ed4c0f9fed3fbea0", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-fopenmp-simd\" } */\n+\n+#pragma omp declare simd\n+_Bool foo (_Bool) __attribute__((const));\n+\n+void\n+f (_Bool *restrict x, char *restrict y, char *restrict z)\n+{\n+  for (int i = 0; i < 128; ++i)\n+    x[i] = foo (y[i] == z[i]);\n+}"}, {"sha": "d5f8031b408f51957598fa76e21fb47593b1d679", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3edaed39583aeb49cfda7093ed4c0f9fed3fbea0/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3edaed39583aeb49cfda7093ed4c0f9fed3fbea0/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=3edaed39583aeb49cfda7093ed4c0f9fed3fbea0", "patch": "@@ -3925,7 +3925,16 @@ vectorizable_simd_clone_call (stmt_vec_info stmt_info,\n \t  || thisarginfo.dt == vect_external_def)\n \tgcc_assert (thisarginfo.vectype == NULL_TREE);\n       else\n-\tgcc_assert (thisarginfo.vectype != NULL_TREE);\n+\t{\n+\t  gcc_assert (thisarginfo.vectype != NULL_TREE);\n+\t  if (VECTOR_BOOLEAN_TYPE_P (thisarginfo.vectype))\n+\t    {\n+\t      if (dump_enabled_p ())\n+\t\tdump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n+\t\t\t\t \"vector mask arguments are not supported\\n\");\n+\t      return false;\n+\t    }\n+\t}\n \n       /* For linear arguments, the analyze phase should have saved\n \t the base and step in STMT_VINFO_SIMD_CLONE_INFO.  */"}]}