{"sha": "7eae8eb2b14e45981c040b77fcdbb477572c0403", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VhZThlYjJiMTRlNDU5ODFjMDQwYjc3ZmNkYmI0Nzc1NzJjMDQwMw==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@redhat.com", "date": "2004-09-17T18:42:51Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2004-09-17T18:42:51Z"}, "message": "re PR tree-optimization/17273 (ICE in get_indirect_ref_operands)\n\n\n\tPR tree-optimization/17273\n\t* tree-ssa.c (replace_immediate_uses): Call fold_stmt if the\n\treplacement is a constant.\n\ntestsuite/ChangeLog\n\n\tPR tree-optimization/17273\n\t* gcc.c-torture/compile/pr17273.c: New test.\n\nFrom-SVN: r87662", "tree": {"sha": "27e1b430d361c79a35303c66e5546cdc110af717", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27e1b430d361c79a35303c66e5546cdc110af717"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7eae8eb2b14e45981c040b77fcdbb477572c0403", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eae8eb2b14e45981c040b77fcdbb477572c0403", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7eae8eb2b14e45981c040b77fcdbb477572c0403", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eae8eb2b14e45981c040b77fcdbb477572c0403/comments", "author": null, "committer": null, "parents": [{"sha": "98c3a782774396163f6bcacf91515131e3abe375", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98c3a782774396163f6bcacf91515131e3abe375", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98c3a782774396163f6bcacf91515131e3abe375"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "2f32b50233dbceb9caaa02609160fb166aa509b1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eae8eb2b14e45981c040b77fcdbb477572c0403/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eae8eb2b14e45981c040b77fcdbb477572c0403/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7eae8eb2b14e45981c040b77fcdbb477572c0403", "patch": "@@ -1,3 +1,9 @@\n+2004-09-17  Diego Novillo  <dnovillo@redhat.com>\n+\n+\tPR tree-optimization/17273\n+\t* tree-ssa.c (replace_immediate_uses): Call fold_stmt if the\n+\treplacement is a constant.\n+\n 2004-09-17  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* c-tree.h (enum c_typespec_keyword): New."}, {"sha": "1eda48d7e44131e9e9db52f5d84ceb4fee01bc35", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eae8eb2b14e45981c040b77fcdbb477572c0403/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eae8eb2b14e45981c040b77fcdbb477572c0403/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7eae8eb2b14e45981c040b77fcdbb477572c0403", "patch": "@@ -1,3 +1,8 @@\n+2004-09-17  Diego Novillo  <dnovillo@redhat.com>\n+\n+\tPR tree-optimization/17273\n+\t* gcc.c-torture/compile/pr17273.c: New test.\n+\n 2004-09-17  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* gcc.dg/declspec-4.c, gcc.dg/declspec-5.c, gcc.dg/declspec-6.c:"}, {"sha": "42d318ef69ff03b1019e6e51d9ad911c2e62191e", "filename": "gcc/testsuite/gcc.c-torture/compile/pr17273.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eae8eb2b14e45981c040b77fcdbb477572c0403/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr17273.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eae8eb2b14e45981c040b77fcdbb477572c0403/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr17273.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr17273.c?ref=7eae8eb2b14e45981c040b77fcdbb477572c0403", "patch": "@@ -0,0 +1,22 @@\n+struct A { int i; };\n+struct B { struct A a; };\n+\n+void f(struct A*, struct A*);\n+#define bool _Bool\n+\n+void bar(bool b)\n+{\n+  struct B * D1601;\n+  struct A D1576;\n+  struct A * D1593;\n+  struct B * D1592;\n+  struct B D1575;\n+\n+  D1575 = (struct B){};\n+\n+  if (b) D1592 = &D1575; else D1592 = &D1575;\n+\n+  D1593 = &D1592->a; // <-- we are prograting &D1575 into here.\n+  D1576 = (struct A){};\n+  f (D1593, &D1576);\n+}"}, {"sha": "f79466da38a006513b26d276c7337613492676a8", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eae8eb2b14e45981c040b77fcdbb477572c0403/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eae8eb2b14e45981c040b77fcdbb477572c0403/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=7eae8eb2b14e45981c040b77fcdbb477572c0403", "patch": "@@ -1018,6 +1018,25 @@ replace_immediate_uses (tree var, tree repl)\n \t      propagate_value (use_p, repl);\n \t}\n \n+      /* FIXME.  If REPL is a constant, we need to fold STMT.\n+\t However, fold_stmt wants a pointer to the statement, because\n+\t it may happen that it needs to replace the whole statement\n+\t with a new expression.  Since the current def-use machinery\n+\t does not return pointers to statements, we call fold_stmt\n+\t with the address of a local temporary, if that call changes\n+\t the temporary then we fall on our swords.\n+\n+\t Note that all this will become unnecessary soon.  This\n+\t pass is being replaced with a proper copy propagation pass\n+\t for 4.1 (dnovillo, 2004-09-17).  */\n+      if (TREE_CODE (repl) != SSA_NAME)\n+\t{\n+\t  tree tmp = stmt;\n+\t  fold_stmt (&tmp);\n+\t  if (tmp != stmt)\n+\t    abort ();\n+\t}\n+\n       /* If REPL is a pointer, it may have different memory tags associated\n \t with it.  For instance, VAR may have had a name tag while REPL\n \t only had a type tag.  In these cases, the virtual operands (if"}]}