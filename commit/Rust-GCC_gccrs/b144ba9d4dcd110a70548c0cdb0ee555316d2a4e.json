{"sha": "b144ba9d4dcd110a70548c0cdb0ee555316d2a4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjE0NGJhOWQ0ZGNkMTEwYTcwNTQ4YzBjZGIwZWU1NTUzMTZkMmE0ZQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-07-02T12:30:38Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-07-02T12:30:38Z"}, "message": "df-problems.c (df_kill_notes): Do not collect dead notes.\n\n\t* df-problems.c (df_kill_notes): Do not collect dead  notes.\n\t(df_set_note): Just call add_reg_note.\n\t(df_set_unused_notes_for_mw, df_set_dead_notes_for_mw,\n\tdf_create_unused_note): Do not deal with lists of old notes.\n\t(df_note_bb_compute): Likewise.\n\nFrom-SVN: r161708", "tree": {"sha": "8f65065ac49bba94492d88fcb130216bba52af95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f65065ac49bba94492d88fcb130216bba52af95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b144ba9d4dcd110a70548c0cdb0ee555316d2a4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b144ba9d4dcd110a70548c0cdb0ee555316d2a4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b144ba9d4dcd110a70548c0cdb0ee555316d2a4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b144ba9d4dcd110a70548c0cdb0ee555316d2a4e/comments", "author": null, "committer": null, "parents": [{"sha": "fca821b51c6cf7367d78251644e39ee370eb38c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fca821b51c6cf7367d78251644e39ee370eb38c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fca821b51c6cf7367d78251644e39ee370eb38c3"}], "stats": {"total": 136, "additions": 46, "deletions": 90}, "files": [{"sha": "84ec1058633fe2455a361b3bbe735a15fd8b072a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b144ba9d4dcd110a70548c0cdb0ee555316d2a4e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b144ba9d4dcd110a70548c0cdb0ee555316d2a4e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b144ba9d4dcd110a70548c0cdb0ee555316d2a4e", "patch": "@@ -1,3 +1,11 @@\n+2010-07-02  Jan Hubicka  <jh@suse.cz>\n+\n+\t* df-problems.c (df_kill_notes): Do not collect dead  notes.\n+\t(df_set_note): Just call add_reg_note.\n+\t(df_set_unused_notes_for_mw, df_set_dead_notes_for_mw,\n+\tdf_create_unused_note): Do not deal with lists of old notes.\n+\t(df_note_bb_compute): Likewise.\n+\n 2010-07-02  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-structalias.c (find_func_aliases): Handle"}, {"sha": "3b3f4262503b31e5d0ccc972b63eb621c5b95134", "filename": "gcc/df-problems.c", "status": "modified", "additions": 38, "deletions": 90, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b144ba9d4dcd110a70548c0cdb0ee555316d2a4e/gcc%2Fdf-problems.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b144ba9d4dcd110a70548c0cdb0ee555316d2a4e/gcc%2Fdf-problems.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-problems.c?ref=b144ba9d4dcd110a70548c0cdb0ee555316d2a4e", "patch": "@@ -3050,12 +3050,10 @@ df_ignore_stack_reg (int regno ATTRIBUTE_UNUSED)\n    them to OLD_DEAD_NOTES and OLD_UNUSED_NOTES.  */\n \n static void\n-df_kill_notes (rtx insn, rtx *old_dead_notes, rtx *old_unused_notes)\n+df_kill_notes (rtx insn)\n {\n   rtx *pprev = &REG_NOTES (insn);\n   rtx link = *pprev;\n-  rtx dead = NULL;\n-  rtx unused = NULL;\n \n   while (link)\n     {\n@@ -3075,8 +3073,7 @@ df_kill_notes (rtx insn, rtx *old_dead_notes, rtx *old_unused_notes)\n #ifdef REG_DEAD_DEBUGGING\n \t      df_print_note (\"deleting: \", insn, link);\n #endif\n-\t      XEXP (link, 1) = dead;\n-\t      dead = link;\n+\t      free_EXPR_LIST_node (link);\n \t      *pprev = link = next;\n \t    }\n \t  break;\n@@ -3095,8 +3092,7 @@ df_kill_notes (rtx insn, rtx *old_dead_notes, rtx *old_unused_notes)\n #ifdef REG_DEAD_DEBUGGING\n \t      df_print_note (\"deleting: \", insn, link);\n #endif\n-\t      XEXP (link, 1) = unused;\n-\t      unused = link;\n+\t      free_EXPR_LIST_node (link);\n \t      *pprev = link = next;\n \t    }\n \t  break;\n@@ -3107,43 +3103,16 @@ df_kill_notes (rtx insn, rtx *old_dead_notes, rtx *old_unused_notes)\n \t  break;\n \t}\n     }\n-\n-  *old_dead_notes = dead;\n-  *old_unused_notes = unused;\n }\n \n \n-/* Set a NOTE_TYPE note for REG in INSN.  Try to pull it from the OLD\n-   list, otherwise create a new one.  */\n+/* Set a NOTE_TYPE note for REG in INSN.  */\n \n-static inline rtx\n-df_set_note (enum reg_note note_type, rtx insn, rtx old, rtx reg)\n+static inline void\n+df_set_note (enum reg_note note_type, rtx insn, rtx reg)\n {\n-  rtx curr = old;\n-  rtx prev = NULL;\n-\n-  gcc_assert (!DEBUG_INSN_P (insn));\n-\n-  while (curr)\n-    if (XEXP (curr, 0) == reg)\n-      {\n-\tif (prev)\n-\t  XEXP (prev, 1) = XEXP (curr, 1);\n-\telse\n-\t  old = XEXP (curr, 1);\n-\tXEXP (curr, 1) = REG_NOTES (insn);\n-\tREG_NOTES (insn) = curr;\n-\treturn old;\n-      }\n-    else\n-      {\n-\tprev = curr;\n-\tcurr = XEXP (curr, 1);\n-      }\n-\n-  /* Did not find the note.  */\n+  gcc_checking_assert (!DEBUG_INSN_P (insn));\n   add_reg_note (insn, note_type, reg);\n-  return old;\n }\n \n /* A subroutine of df_set_unused_notes_for_mw, with a selection of its\n@@ -3179,8 +3148,8 @@ df_whole_mw_reg_unused_p (struct df_mw_hardreg *mws,\n    instruction.\n */\n \n-static rtx\n-df_set_unused_notes_for_mw (rtx insn, rtx old, struct df_mw_hardreg *mws,\n+static void\n+df_set_unused_notes_for_mw (rtx insn, struct df_mw_hardreg *mws,\n \t\t\t    bitmap live, bitmap do_not_gen,\n \t\t\t    bitmap artificial_uses)\n {\n@@ -3195,7 +3164,7 @@ df_set_unused_notes_for_mw (rtx insn, rtx old, struct df_mw_hardreg *mws,\n   if (df_whole_mw_reg_unused_p (mws, live, artificial_uses))\n     {\n       unsigned int regno = mws->start_regno;\n-      old = df_set_note (REG_UNUSED, insn, old, mws->mw_reg);\n+      df_set_note (REG_UNUSED, insn, mws->mw_reg);\n \n #ifdef REG_DEAD_DEBUGGING\n       df_print_note (\"adding 1: \", insn, REG_NOTES (insn));\n@@ -3209,14 +3178,13 @@ df_set_unused_notes_for_mw (rtx insn, rtx old, struct df_mw_hardreg *mws,\n \tif (!bitmap_bit_p (live, r)\n \t    && !bitmap_bit_p (artificial_uses, r))\n \t  {\n-\t    old = df_set_note (REG_UNUSED, insn, old, regno_reg_rtx[r]);\n+\t    df_set_note (REG_UNUSED, insn, regno_reg_rtx[r]);\n #ifdef REG_DEAD_DEBUGGING\n \t    df_print_note (\"adding 2: \", insn, REG_NOTES (insn));\n #endif\n \t  }\n \tbitmap_set_bit (do_not_gen, r);\n       }\n-  return old;\n }\n \n \n@@ -3253,8 +3221,8 @@ df_whole_mw_reg_dead_p (struct df_mw_hardreg *mws,\n    from being set if the instruction both reads and writes the\n    register.  */\n \n-static rtx\n-df_set_dead_notes_for_mw (rtx insn, rtx old, struct df_mw_hardreg *mws,\n+static void\n+df_set_dead_notes_for_mw (rtx insn, struct df_mw_hardreg *mws,\n \t\t\t  bitmap live, bitmap do_not_gen,\n \t\t\t  bitmap artificial_uses, bool *added_notes_p)\n {\n@@ -3282,9 +3250,9 @@ df_set_dead_notes_for_mw (rtx insn, rtx old, struct df_mw_hardreg *mws,\n       if (is_debug)\n \t{\n \t  *added_notes_p = true;\n-\t  return old;\n+\t  return;\n \t}\n-      old = df_set_note (REG_DEAD, insn, old, mws->mw_reg);\n+      df_set_note (REG_DEAD, insn, mws->mw_reg);\n #ifdef REG_DEAD_DEBUGGING\n       df_print_note (\"adding 1: \", insn, REG_NOTES (insn));\n #endif\n@@ -3299,23 +3267,23 @@ df_set_dead_notes_for_mw (rtx insn, rtx old, struct df_mw_hardreg *mws,\n \t    if (is_debug)\n \t      {\n \t\t*added_notes_p = true;\n-\t\treturn old;\n+\t\treturn;\n \t      }\n-\t    old = df_set_note (REG_DEAD, insn, old, regno_reg_rtx[r]);\n+\t    df_set_note (REG_DEAD, insn, regno_reg_rtx[r]);\n #ifdef REG_DEAD_DEBUGGING\n \t    df_print_note (\"adding 2: \", insn, REG_NOTES (insn));\n #endif\n \t  }\n     }\n-  return old;\n+  return;\n }\n \n \n /* Create a REG_UNUSED note if necessary for DEF in INSN updating\n    LIVE.  Do not generate notes for registers in ARTIFICIAL_USES.  */\n \n-static rtx\n-df_create_unused_note (rtx insn, rtx old, df_ref def,\n+static void\n+df_create_unused_note (rtx insn, df_ref def,\n \t\t       bitmap live, bitmap artificial_uses)\n {\n   unsigned int dregno = DF_REF_REGNO (def);\n@@ -3335,13 +3303,13 @@ df_create_unused_note (rtx insn, rtx old, df_ref def,\n     {\n       rtx reg = (DF_REF_LOC (def))\n                 ? *DF_REF_REAL_LOC (def): DF_REF_REG (def);\n-      old = df_set_note (REG_UNUSED, insn, old, reg);\n+      df_set_note (REG_UNUSED, insn, reg);\n #ifdef REG_DEAD_DEBUGGING\n       df_print_note (\"adding 3: \", insn, REG_NOTES (insn));\n #endif\n     }\n \n-  return old;\n+  return;\n }\n \n /* Node of a linked list of uses of dead REGs in debug insns.  */\n@@ -3564,8 +3532,6 @@ df_note_bb_compute (unsigned int bb_index,\n     {\n       unsigned int uid = INSN_UID (insn);\n       struct df_mw_hardreg **mws_rec;\n-      rtx old_dead_notes;\n-      rtx old_unused_notes;\n       int debug_insn;\n \n       if (!INSN_P (insn))\n@@ -3574,7 +3540,7 @@ df_note_bb_compute (unsigned int bb_index,\n       debug_insn = DEBUG_INSN_P (insn);\n \n       bitmap_clear (do_not_gen);\n-      df_kill_notes (insn, &old_dead_notes, &old_unused_notes);\n+      df_kill_notes (insn);\n \n       /* Process the defs.  */\n       if (CALL_P (insn))\n@@ -3594,10 +3560,9 @@ df_note_bb_compute (unsigned int bb_index,\n \t      struct df_mw_hardreg *mws = *mws_rec;\n \t      if ((DF_MWS_REG_DEF_P (mws))\n \t\t  && !df_ignore_stack_reg (mws->start_regno))\n-\t\told_unused_notes\n-\t\t  = df_set_unused_notes_for_mw (insn, old_unused_notes,\n-\t\t\t\t\t\tmws, live, do_not_gen,\n-\t\t\t\t\t\tartificial_uses);\n+\t      df_set_unused_notes_for_mw (insn,\n+\t\t\t\t\t  mws, live, do_not_gen,\n+\t\t\t\t\t  artificial_uses);\n \t      mws_rec++;\n \t    }\n \n@@ -3609,9 +3574,8 @@ df_note_bb_compute (unsigned int bb_index,\n \t      unsigned int dregno = DF_REF_REGNO (def);\n \t      if (!DF_REF_FLAGS_IS_SET (def, DF_REF_MUST_CLOBBER | DF_REF_MAY_CLOBBER))\n \t\t{\n-\t\t  old_unused_notes\n-\t\t    = df_create_unused_note (insn, old_unused_notes,\n-\t\t\t\t\t     def, live, artificial_uses);\n+\t\t  df_create_unused_note (insn,\n+\t\t\t\t\t def, live, artificial_uses);\n \t\t  bitmap_set_bit (do_not_gen, dregno);\n \t\t}\n \n@@ -3627,20 +3591,18 @@ df_note_bb_compute (unsigned int bb_index,\n \t    {\n \t      struct df_mw_hardreg *mws = *mws_rec;\n \t      if (DF_MWS_REG_DEF_P (mws))\n-\t\told_unused_notes\n-\t\t  = df_set_unused_notes_for_mw (insn, old_unused_notes,\n-\t\t\t\t\t\tmws, live, do_not_gen,\n-\t\t\t\t\t\tartificial_uses);\n+\t\tdf_set_unused_notes_for_mw (insn,\n+\t\t\t\t\t    mws, live, do_not_gen,\n+\t\t\t\t\t    artificial_uses);\n \t      mws_rec++;\n \t    }\n \n \t  for (def_rec = DF_INSN_UID_DEFS (uid); *def_rec; def_rec++)\n \t    {\n \t      df_ref def = *def_rec;\n \t      unsigned int dregno = DF_REF_REGNO (def);\n-\t      old_unused_notes\n-\t\t= df_create_unused_note (insn, old_unused_notes,\n-\t\t\t\t\t def, live, artificial_uses);\n+\t      df_create_unused_note (insn,\n+\t\t\t\t     def, live, artificial_uses);\n \n \t      if (!DF_REF_FLAGS_IS_SET (def, DF_REF_MUST_CLOBBER | DF_REF_MAY_CLOBBER))\n \t\tbitmap_set_bit (do_not_gen, dregno);\n@@ -3660,11 +3622,10 @@ df_note_bb_compute (unsigned int bb_index,\n \t    {\n \t      bool really_add_notes = debug_insn != 0;\n \n-\t      old_dead_notes\n-\t\t= df_set_dead_notes_for_mw (insn, old_dead_notes,\n-\t\t\t\t\t    mws, live, do_not_gen,\n-\t\t\t\t\t    artificial_uses,\n-\t\t\t\t\t    &really_add_notes);\n+\t      df_set_dead_notes_for_mw (insn,\n+\t\t\t\t\tmws, live, do_not_gen,\n+\t\t\t\t\tartificial_uses,\n+\t\t\t\t\t&really_add_notes);\n \n \t      if (really_add_notes)\n \t\tdebug_insn = -1;\n@@ -3706,7 +3667,7 @@ df_note_bb_compute (unsigned int bb_index,\n \t\t{\n \t\t  rtx reg = (DF_REF_LOC (use))\n                             ? *DF_REF_REAL_LOC (use) : DF_REF_REG (use);\n-\t\t  old_dead_notes = df_set_note (REG_DEAD, insn, old_dead_notes, reg);\n+\t\t  df_set_note (REG_DEAD, insn, reg);\n \n #ifdef REG_DEAD_DEBUGGING\n \t\t  df_print_note (\"adding 4: \", insn, REG_NOTES (insn));\n@@ -3717,19 +3678,6 @@ df_note_bb_compute (unsigned int bb_index,\n \t    }\n \t}\n \n-      while (old_unused_notes)\n-\t{\n-\t  rtx next = XEXP (old_unused_notes, 1);\n-\t  free_EXPR_LIST_node (old_unused_notes);\n-\t  old_unused_notes = next;\n-\t}\n-      while (old_dead_notes)\n-\t{\n-\t  rtx next = XEXP (old_dead_notes, 1);\n-\t  free_EXPR_LIST_node (old_dead_notes);\n-\t  old_dead_notes = next;\n-\t}\n-\n       if (debug_insn == -1)\n \t{\n \t  /* ??? We could probably do better here, replacing dead"}]}