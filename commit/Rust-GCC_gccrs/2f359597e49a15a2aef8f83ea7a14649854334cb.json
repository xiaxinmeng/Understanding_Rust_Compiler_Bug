{"sha": "2f359597e49a15a2aef8f83ea7a14649854334cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmYzNTk1OTdlNDlhMTVhMmFlZjhmODNlYTdhMTQ2NDk4NTQzMzRjYg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2021-01-06T00:17:10Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2021-01-07T21:19:29Z"}, "message": "c++: Fix thinko in auto return type checking [PR98441]\n\nThis fixes a thinko in my r11-2085 patch: when I said \"But only give the\n!late_return_type errors when funcdecl_p, to accept e.g. auto (*fp)() = f;\nin C++11\" I should've done this, otherwise we give bogus errors mentioning\n\"function with trailing return type\" when there is none.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/98441\n\t* decl.c (grokdeclarator): Move the !funcdecl_p check inside the\n\t!late_return_type block.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/98441\n\t* g++.dg/cpp0x/auto55.C: New test.", "tree": {"sha": "b68dbb6ee06ac4adb412fa526bc0d06a21a7e9ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b68dbb6ee06ac4adb412fa526bc0d06a21a7e9ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f359597e49a15a2aef8f83ea7a14649854334cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f359597e49a15a2aef8f83ea7a14649854334cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f359597e49a15a2aef8f83ea7a14649854334cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f359597e49a15a2aef8f83ea7a14649854334cb/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c59b8a93cf4784e3e3137416a3d32a1ecc8e00b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c59b8a93cf4784e3e3137416a3d32a1ecc8e00b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c59b8a93cf4784e3e3137416a3d32a1ecc8e00b"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "1a114a2e2d095725bf1a3624279550dd08722613", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f359597e49a15a2aef8f83ea7a14649854334cb/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f359597e49a15a2aef8f83ea7a14649854334cb/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=2f359597e49a15a2aef8f83ea7a14649854334cb", "patch": "@@ -12241,10 +12241,12 @@ grokdeclarator (const cp_declarator *declarator,\n \t    tree late_return_type = declarator->u.function.late_return_type;\n \t    if (tree auto_node = type_uses_auto (type))\n \t      {\n-\t\tif (!late_return_type && funcdecl_p)\n+\t\tif (!late_return_type)\n \t\t  {\n-\t\t    if (current_class_type\n-\t\t\t&& LAMBDA_TYPE_P (current_class_type))\n+\t\t    if (!funcdecl_p)\n+\t\t      /* auto (*fp)() = f; is OK.  */;\n+\t\t    else if (current_class_type\n+\t\t\t     && LAMBDA_TYPE_P (current_class_type))\n \t\t      /* OK for C++11 lambdas.  */;\n \t\t    else if (cxx_dialect < cxx14)\n \t\t      {"}, {"sha": "5bd32ac890db2dfab065f44766529818c8160bb8", "filename": "gcc/testsuite/g++.dg/cpp0x/auto55.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f359597e49a15a2aef8f83ea7a14649854334cb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto55.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f359597e49a15a2aef8f83ea7a14649854334cb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto55.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto55.C?ref=2f359597e49a15a2aef8f83ea7a14649854334cb", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/98441\n+// { dg-do compile { target c++11 } }\n+\n+struct a {\n+    int& mfn();\n+};\n+\n+void fn()\n+{\n+    int&  (a::*myvar1)(void) = &a::mfn;\n+    auto& (a::*myvar2)(void) = &a::mfn;\n+    auto  (a::*myvar3)(void) = &a::mfn;\n+}"}]}