{"sha": "a39f6bb0fde140468e20eb65d0462ff03d984421", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTM5ZjZiYjBmZGUxNDA0NjhlMjBlYjY1ZDA0NjJmZjAzZDk4NDQyMQ==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@cygnus.com", "date": "1998-10-16T11:03:50Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "1998-10-16T11:03:50Z"}, "message": "Add --help documentation for ARM specific command line switches\n\nFrom-SVN: r23130", "tree": {"sha": "11e71e0fbfb5fdf4bba39a56110489ce704bfe53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11e71e0fbfb5fdf4bba39a56110489ce704bfe53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a39f6bb0fde140468e20eb65d0462ff03d984421", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a39f6bb0fde140468e20eb65d0462ff03d984421", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a39f6bb0fde140468e20eb65d0462ff03d984421", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a39f6bb0fde140468e20eb65d0462ff03d984421/comments", "author": null, "committer": null, "parents": [{"sha": "c2861502f7a27cdbfa704f4495fe2e14b586dea7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2861502f7a27cdbfa704f4495fe2e14b586dea7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2861502f7a27cdbfa704f4495fe2e14b586dea7"}], "stats": {"total": 39, "additions": 22, "deletions": 17}, "files": [{"sha": "0a2918802a6933e65ab49843978b09f5e8f7a221", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a39f6bb0fde140468e20eb65d0462ff03d984421/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a39f6bb0fde140468e20eb65d0462ff03d984421/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a39f6bb0fde140468e20eb65d0462ff03d984421", "patch": "@@ -1,3 +1,8 @@\n+Fri Oct 16 10:47:53 1998  Nick Clifton  <nickc@cygnus.com>\n+\n+\t* config/arm/arm.h (TARGET_SWITCHES): Add --help documentation.\n+\t(TARGET_OPTIONS): Add --help documentation.\n+\n Fri Oct 16 11:49:01 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* rtl.h (sets_cc0_p): Revert Oct 14 ATTRIBUTE_NORETURN change."}, {"sha": "c9127e747cbd2c80ce95ca8a0f799dc831824df2", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a39f6bb0fde140468e20eb65d0462ff03d984421/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a39f6bb0fde140468e20eb65d0462ff03d984421/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=a39f6bb0fde140468e20eb65d0462ff03d984421", "patch": "@@ -332,42 +332,42 @@ extern char *target_fp_name;\n #define TARGET_SWITCHES  \t\t\t\t\\\n {                         \t\t\t\t\\\n   {\"apcs\",\t\t\tARM_FLAG_APCS_FRAME},\t\\\n-  {\"apcs-frame\",\t\tARM_FLAG_APCS_FRAME},\t\\\n+  {\"apcs-frame\",\t\tARM_FLAG_APCS_FRAME, \"Generate APCS conformant stack frames\" },\t\\\n   {\"no-apcs-frame\",\t       -ARM_FLAG_APCS_FRAME},\t\\\n   {\"poke-function-name\",\tARM_FLAG_POKE},\t\t\\\n   {\"fpe\",\t\t\tARM_FLAG_FPE},\t\t\\\n   {\"6\",\t\t\t\tARM_FLAG_ARM6},\t\t\\\n   {\"2\",\t\t\t\tARM_FLAG_ARM3},\t\t\\\n   {\"3\",\t\t\t\tARM_FLAG_ARM3},\t\t\\\n-  {\"apcs-32\",\t\t\tARM_FLAG_APCS_32},\t\\\n-  {\"apcs-26\",\t\t       -ARM_FLAG_APCS_32},\t\\\n+  {\"apcs-32\",\t\t\tARM_FLAG_APCS_32, \"Use the 32bit version of the APCS\" },\t\\\n+  {\"apcs-26\",\t\t       -ARM_FLAG_APCS_32, \"Use the 26bit version of the APCS\" },\t\\\n   {\"apcs-stack-check\",\t\tARM_FLAG_APCS_STACK},\t\\\n   {\"no-apcs-stack-check\",      -ARM_FLAG_APCS_STACK},\t\\\n-  {\"apcs-float\",\t\tARM_FLAG_APCS_FLOAT},\t\\\n+  {\"apcs-float\",\t\tARM_FLAG_APCS_FLOAT, \"Pass FP arguments in FP registers\" },\t\\\n   {\"no-apcs-float\",\t       -ARM_FLAG_APCS_FLOAT},\t\\\n-  {\"apcs-reentrant\",\t\tARM_FLAG_APCS_REENT},\t\\\n+  {\"apcs-reentrant\",\t\tARM_FLAG_APCS_REENT, \"Generate re-entrant, PIC code\" },\t\\\n   {\"no-apcs-reentrant\",\t       -ARM_FLAG_APCS_REENT},\t\\\n-  {\"short-load-bytes\",\t\tARM_FLAG_SHORT_BYTE},\t\\\n+  {\"short-load-bytes\",\t\tARM_FLAG_SHORT_BYTE, \"Load shorts a byte at a time\" },\t\\\n   {\"no-short-load-bytes\",      -ARM_FLAG_SHORT_BYTE},\t\\\n-  {\"short-load-words\",\t       -ARM_FLAG_SHORT_BYTE},\t\\\n+  {\"short-load-words\",\t       -ARM_FLAG_SHORT_BYTE, \"Load words a byte at a time\" },\t\\\n   {\"no-short-load-words\",\tARM_FLAG_SHORT_BYTE},\t\\\n-  {\"soft-float\",\t\tARM_FLAG_SOFT_FLOAT},\t\\\n-  {\"hard-float\",\t       -ARM_FLAG_SOFT_FLOAT},\t\\\n-  {\"big-endian\",\t\tARM_FLAG_BIG_END},\t\\\n-  {\"little-endian\",\t       -ARM_FLAG_BIG_END},\t\\\n-  {\"thumb-interwork\",\t\tARM_FLAG_THUMB},\t\\\n+  {\"soft-float\",\t\tARM_FLAG_SOFT_FLOAT, \"Use library calls to perform FP operations\" },\t\\\n+  {\"hard-float\",\t       -ARM_FLAG_SOFT_FLOAT, \"Use hardware floating point instructions\" },\t\\\n+  {\"big-endian\",\t\tARM_FLAG_BIG_END, \"Assume target CPU is configured as big endian\" },\t\\\n+  {\"little-endian\",\t       -ARM_FLAG_BIG_END, \"Assume target CPU is configured as little endian\" },\t\\\n+  {\"words-little-endian\",       ARM_FLAG_LITTLE_WORDS, \"Assume big endian bytes, little endian words\" },\t\\\n+  {\"thumb-interwork\",\t\tARM_FLAG_THUMB, \"Support calls between THUMB and ARM instructions sets\" },\t\\\n   {\"no-thumb-interwork\",       -ARM_FLAG_THUMB},\t\\\n-  {\"words-little-endian\",       ARM_FLAG_LITTLE_WORDS},\t\\\n   SUBTARGET_SWITCHES\t\t\t\t\t\\\n   {\"\",\t\t\t\tTARGET_DEFAULT }\t\\\n }\n \n #define TARGET_OPTIONS\t\t\t\\\n {\t\t\t\t\t\\\n-  {\"cpu=\",  &arm_select[1].string},\t\\\n-  {\"arch=\", &arm_select[2].string},\t\\\n-  {\"tune=\", &arm_select[3].string},\t\\\n-  {\"fp=\",   &target_fp_name}\t\t\\\n+  {\"cpu=\",  & arm_select[1].string, \"Specify the name of the target CPU\" },\t\\\n+  {\"arch=\", & arm_select[2].string, \"Specify the name of the target architecture\" }, \\\n+  {\"tune=\", & arm_select[3].string},\t\\\n+  {\"fp=\",   & target_fp_name, \"Specify the version of the floating point emulator\"} \\\n }\n \n /* arm_select[0] is reserved for the default cpu.  */"}]}