{"sha": "7ee1f872ca6effdc4bb5bdb229ff1f53b89e9385", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VlMWY4NzJjYTZlZmZkYzRiYjViZGIyMjlmZjFmNTNiODllOTM4NQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2018-04-26T15:21:09Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2018-04-26T15:21:09Z"}, "message": "* loop-invariant.c (may_assign_reg_p): Return false for frame pointer.\n\nFrom-SVN: r259683", "tree": {"sha": "c5ee16213b94233b8839722176d5b11fe7d89b08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5ee16213b94233b8839722176d5b11fe7d89b08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ee1f872ca6effdc4bb5bdb229ff1f53b89e9385", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ee1f872ca6effdc4bb5bdb229ff1f53b89e9385", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ee1f872ca6effdc4bb5bdb229ff1f53b89e9385", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ee1f872ca6effdc4bb5bdb229ff1f53b89e9385/comments", "author": null, "committer": null, "parents": [{"sha": "b1ea83878ef38b1dd22c042349ec4c1bcf48240e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1ea83878ef38b1dd22c042349ec4c1bcf48240e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1ea83878ef38b1dd22c042349ec4c1bcf48240e"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "431201358a3b85268f2477ab0cff1f36a6c50842", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee1f872ca6effdc4bb5bdb229ff1f53b89e9385/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee1f872ca6effdc4bb5bdb229ff1f53b89e9385/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7ee1f872ca6effdc4bb5bdb229ff1f53b89e9385", "patch": "@@ -1,3 +1,7 @@\n+2018-04-26  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* loop-invariant.c (may_assign_reg_p): Return false for frame pointer.\n+\n 2018-04-26  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (\"isa\" attribute): Add x64_sse2."}, {"sha": "e3b2eda1695d6b80202ced7c23847a39ee4a3aa3", "filename": "gcc/loop-invariant.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee1f872ca6effdc4bb5bdb229ff1f53b89e9385/gcc%2Floop-invariant.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee1f872ca6effdc4bb5bdb229ff1f53b89e9385/gcc%2Floop-invariant.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-invariant.c?ref=7ee1f872ca6effdc4bb5bdb229ff1f53b89e9385", "patch": "@@ -660,6 +660,9 @@ may_assign_reg_p (rtx x)\n   return (GET_MODE (x) != VOIDmode\n \t  && GET_MODE (x) != BLKmode\n \t  && can_copy_p (GET_MODE (x))\n+\t  /* Do not mess with the frame pointer adjustments that can\n+\t     be generated e.g. by expand_builtin_setjmp_receiver.  */\n+\t  && x != frame_pointer_rtx\n \t  && (!REG_P (x)\n \t      || !HARD_REGISTER_P (x)\n \t      || REGNO_REG_CLASS (REGNO (x)) != NO_REGS));"}, {"sha": "0e0332513ef29477a78682cf718636e8d39b82f1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee1f872ca6effdc4bb5bdb229ff1f53b89e9385/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee1f872ca6effdc4bb5bdb229ff1f53b89e9385/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7ee1f872ca6effdc4bb5bdb229ff1f53b89e9385", "patch": "@@ -1,3 +1,7 @@\n+2018-04-26  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/loop_optimization24.adb: New test.\n+\n 2018-04-26  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/85116"}, {"sha": "641d28ed97c3bf34282deef898454325bae46668", "filename": "gcc/testsuite/gnat.dg/loop_optimization24.adb", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee1f872ca6effdc4bb5bdb229ff1f53b89e9385/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization24.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee1f872ca6effdc4bb5bdb229ff1f53b89e9385/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization24.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization24.adb?ref=7ee1f872ca6effdc4bb5bdb229ff1f53b89e9385", "patch": "@@ -0,0 +1,35 @@\n+-- { dg-do run }\r\n+-- { dg-options \"-O\" }\r\n+\r\n+procedure Loop_Optimization24 is\r\n+\r\n+   procedure Callback is\r\n+   begin\r\n+      raise Constraint_Error;\r\n+   end;\r\n+\r\n+   type Thread_Name_Ptr is access constant String;\r\n+   type Callback_Ptr is access procedure;\r\n+\r\n+   type Callback_Information is record\r\n+      Name : Thread_Name_Ptr;\r\n+      Proc : Callback_Ptr;\r\n+   end record;\r\n+      \r\n+   type Callback_List is array (Positive range <>) of Callback_Information;\r\n+\r\n+   Cbs : Callback_List\r\n+     := (1 => (Proc => Callback'access, name => new String'(\"Callback\")),\r\n+         2 => (Proc => Callback'access, name => new String'(\"Callback\")));\r\n+\r\n+begin\r\n+   for Index in Cbs'Range loop\r\n+      begin\r\n+         if Cbs(Index).proc /= null then\r\n+            Cbs(Index).proc.all;\r\n+         end if;\r\n+      exception\r\n+         when Constraint_Error => null;\r\n+      end;\r\n+   end loop;\r\n+end;\r"}]}