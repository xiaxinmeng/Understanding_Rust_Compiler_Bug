{"sha": "f5d3e93f974899f1fde4b015e925d25b908a666d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjVkM2U5M2Y5NzQ4OTlmMWZkZTRiMDE1ZTkyNWQyNWI5MDhhNjY2ZA==", "commit": {"author": {"name": "Greg Bumgardner", "email": "bumgard@roguewave.com", "date": "2001-02-17T17:51:45Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-02-17T17:51:45Z"}, "message": "std_ostream.h: Replaced usage of _Traits::_S_eos() with _CharT() as per section 17.2.2.1.3.\n\n\n2001-02-16  Greg Bumgardner <bumgard@roguewave.com>\n\n\tlibstdc++/1734\n        * include/bits/std_ostream.h: Replaced usage of\n        _Traits::_S_eos() with _CharT() as per section 17.2.2.1.3.\n        * include/bits/char_traits.h: Removed non-standard\n        methods that cannot be used elsewhere.\n\n\tlibstdc++/1885\n        * include/bits/basic_ios.h: Uncommented #include of\n        bits/basic_ios.tcc\n\n\tlibstdc++/1897\n        * include/bits/codecvt.h: See next...\n        * include/bits/fstream.tcc: See next...\n        * include/bits/ostream.tcc: Add __extension__\n        to variable-length arrays.\n\n\tlibstdc++/1967\n        * include/bits/localefwd.h: Changed int counter type to size_t.\n\n\tlibstdc++/1968\n        * include/bits/std_fstream.h: Added typedef for __ctype_type.\n\nFrom-SVN: r39802", "tree": {"sha": "b133e82fcf2e96957914cf1597c56b161b8b285b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b133e82fcf2e96957914cf1597c56b161b8b285b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5d3e93f974899f1fde4b015e925d25b908a666d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5d3e93f974899f1fde4b015e925d25b908a666d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5d3e93f974899f1fde4b015e925d25b908a666d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5d3e93f974899f1fde4b015e925d25b908a666d/comments", "author": null, "committer": null, "parents": [{"sha": "6483cbecc479c7adde5b2c348e1211c57730d0fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6483cbecc479c7adde5b2c348e1211c57730d0fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6483cbecc479c7adde5b2c348e1211c57730d0fc"}], "stats": {"total": 85, "additions": 48, "deletions": 37}, "files": [{"sha": "6203763a16d9595623a00027aa574ef1fc849396", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5d3e93f974899f1fde4b015e925d25b908a666d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5d3e93f974899f1fde4b015e925d25b908a666d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f5d3e93f974899f1fde4b015e925d25b908a666d", "patch": "@@ -1,3 +1,27 @@\n+2001-02-16  Greg Bumgardner <bumgard@roguewave.com>\n+\n+\tlibstdc++/1734\n+        * include/bits/std_ostream.h: Replaced usage of\n+        _Traits::_S_eos() with _CharT() as per section 17.2.2.1.3.  \n+        * include/bits/char_traits.h: Removed non-standard\n+        methods that cannot be used elsewhere.  \n+\t\n+\tlibstdc++/1885\n+        * include/bits/basic_ios.h: Uncommented #include of\n+        bits/basic_ios.tcc \n+\t\n+\tlibstdc++/1897\n+        * include/bits/codecvt.h: See next...\n+        * include/bits/fstream.tcc: See next...\n+        * include/bits/ostream.tcc: Add __extension__ \n+        to variable-length arrays.  \n+\t\n+\tlibstdc++/1967\n+        * include/bits/localefwd.h: Changed int counter type to size_t.\n+\n+\tlibstdc++/1968\n+        * include/bits/std_fstream.h: Added typedef for __ctype_type.\n+\n 2001-02-16  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/21_strings/char_traits.cc: Move to ..."}, {"sha": "d03e656b29e5f0bb49cc32fa242705e529120b96", "filename": "libstdc++-v3/include/bits/basic_ios.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5d3e93f974899f1fde4b015e925d25b908a666d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5d3e93f974899f1fde4b015e925d25b908a666d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h?ref=f5d3e93f974899f1fde4b015e925d25b908a666d", "patch": "@@ -31,6 +31,7 @@\n #define _CPP_BITS_BASICIOS_H 1\n \n #include <bits/sbuf_iter.h>\n+#include <bits/locale_facets.h>\n \n namespace std {\n \n@@ -205,7 +206,7 @@ namespace std {\n \n #ifdef _GLIBCPP_NO_TEMPLATE_EXPORT\n # define export\n-//#include <bits/basic_ios.tcc>\n+#include <bits/basic_ios.tcc>\n #endif\n \n #endif /* _CPP_BITS_BASICIOS_H */\n@@ -214,3 +215,6 @@ namespace std {\n \n \n \n+\n+\n+"}, {"sha": "d4178c286a91537135166941db0d166f4b5fcb84", "filename": "libstdc++-v3/include/bits/basic_ios.tcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5d3e93f974899f1fde4b015e925d25b908a666d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5d3e93f974899f1fde4b015e925d25b908a666d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.tcc?ref=f5d3e93f974899f1fde4b015e925d25b908a666d", "patch": "@@ -1,6 +1,6 @@\n // basic_ios locale and locale-related member functions -*- C++ -*-\n \n-// Copyright (C) 1999 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2001 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the"}, {"sha": "43dee93fcb25bd29892d201b3de4b241f2f290c4", "filename": "libstdc++-v3/include/bits/char_traits.h", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5d3e93f974899f1fde4b015e925d25b908a666d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5d3e93f974899f1fde4b015e925d25b908a666d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h?ref=f5d3e93f974899f1fde4b015e925d25b908a666d", "patch": "@@ -130,15 +130,9 @@ namespace std {\n       eq_int_type(const int_type& __c1, const int_type& __c2)\n       { return __c1 == __c2; }\n \n-      static state_type \n-      _S_get_state(const pos_type& __pos) { return __pos.state(); }\n-\n       static int_type \n       eof() { return static_cast<int_type>(-1); }\n \n-      static int_type \n-      _S_eos() { return char_type(); }\n-\n       static int_type \n       not_eof(const int_type& __c)\n       { return eq_int_type(__c, eof()) ? int_type(0) : __c; }\n@@ -205,15 +199,9 @@ namespace std {\n       eq_int_type(const int_type& __c1, const int_type& __c2)\n       { return __c1 == __c2; }\n \n-      static state_type \n-      _S_get_state(const pos_type& __pos) { return __pos.state(); }\n-\n       static int_type \n       eof() { return static_cast<int_type>(EOF); }\n \n-      static int_type \n-      _S_eos() { return char_type(); }\n-\n       static int_type \n       not_eof(const int_type& __c)\n       { return (__c == eof()) ? 0 : __c; }\n@@ -276,15 +264,9 @@ namespace std {\n       eq_int_type(const int_type& __c1, const int_type& __c2)\n       { return __c1 == __c2; }\n \n-      static state_type \n-      _S_get_state(const pos_type& __pos) { return __pos.state(); }\n-\n       static int_type \n       eof() { return static_cast<int_type>(WEOF); }\n \n-      static int_type \n-      _S_eos() { return char_type(); }\n-\n       static int_type \n       not_eof(const int_type& __c)\n       { return eq_int_type(__c, eof()) ? 0 : __c; }"}, {"sha": "a02310276c668e63339a0277130fc063047f8972", "filename": "libstdc++-v3/include/bits/codecvt.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5d3e93f974899f1fde4b015e925d25b908a666d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcodecvt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5d3e93f974899f1fde4b015e925d25b908a666d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcodecvt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcodecvt.h?ref=f5d3e93f974899f1fde4b015e925d25b908a666d", "patch": "@@ -1,6 +1,6 @@\n // Locale support (codecvt) -*- C++ -*-\n \n-// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2001 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -417,7 +417,7 @@\n \t  if (__int_bom)\n \t    {\t  \n \t      size_t __size = __from_end - __from;\n-\t      intern_type __cfixed[__size + 1];\n+\t      __extension__ intern_type __cfixed[__size + 1];\n \t      __cfixed[0] = static_cast<intern_type>(__int_bom);\n \t      char_traits<intern_type>::copy(__cfixed + 1, __from, __size);\n \t      __cfrom = reinterpret_cast<char*>(__cfixed);\n@@ -522,7 +522,7 @@\n \t  if (__ext_bom)\n \t    {\t  \n \t      size_t __size = __from_end - __from;\n-\t      extern_type __cfixed[__size + 1];\n+\t      __extension__ extern_type __cfixed[__size + 1];\n \t      __cfixed[0] = static_cast<extern_type>(__ext_bom);\n \t      char_traits<extern_type>::copy(__cfixed + 1, __from, __size);\n \t      __cfrom = reinterpret_cast<char*>(__cfixed);"}, {"sha": "be31be06635993dca56c1b65761c92f719e09aa8", "filename": "libstdc++-v3/include/bits/fstream.tcc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5d3e93f974899f1fde4b015e925d25b908a666d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5d3e93f974899f1fde4b015e925d25b908a666d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc?ref=f5d3e93f974899f1fde4b015e925d25b908a666d", "patch": "@@ -262,7 +262,7 @@ namespace std\n \t      // Part one: (Re)fill external buf (_M_file->_IO_*) from\n \t      // external byte sequence (whatever physical byte sink or\n \t      // FILE actually is.)\n-\t      char_type __conv_buf[_M_buf_size];\n+\t      __extension__ char_type __conv_buf[_M_buf_size];\n \t      streamsize __size = _M_file->xsgetn(__conv_buf, _M_buf_size);\n \t      \n \t      // Part two: (Re)fill internal buf contents from external buf.\n@@ -436,7 +436,7 @@ namespace std\n \t  // stack. Convert internal buffer plus __c (ie,\n \t  // \"pending sequence\") to temporary conversion buffer.\n \t  int __plen = _M_out_end - _M_out_beg;\n-\t  char_type __pbuf[__plen + 1];\t      \n+\t  __extension__ char_type __pbuf[__plen + 1];\t      \n \t  traits_type::copy(__pbuf, this->pbase(), __plen);\n \t  if (!__testeof)\n \t    {\n@@ -445,7 +445,7 @@ namespace std\n \t    }\n \n \t  char_type* __pend;\n-\t  char __conv_buf[__plen];\n+\t  __extension__ char __conv_buf[__plen];\n \t  char* __conv_end;\n \t  _M_state_beg = _M_state_cur;\n "}, {"sha": "d15afd9e9f9e4b08d184a0c80d0397b7984f21e7", "filename": "libstdc++-v3/include/bits/localefwd.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5d3e93f974899f1fde4b015e925d25b908a666d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocalefwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5d3e93f974899f1fde4b015e925d25b908a666d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocalefwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocalefwd.h?ref=f5d3e93f974899f1fde4b015e925d25b908a666d", "patch": "@@ -397,7 +397,7 @@ namespace std\n     {\n       _M_impl = new _Impl(*__other._M_impl, 1);\n       _M_impl->_M_install_facet(&_Facet::id, __f);\n-      for (int __i = 0; __i < _S_num_categories; ++__i)\n+      for (size_t __i = 0; __i < _S_num_categories; ++__i)\n \t_M_impl->_M_names[__i] = \"*\";\n     }\n "}, {"sha": "77bce2616da4bf1d60c9bd1cf941856bc7739513", "filename": "libstdc++-v3/include/bits/ostream.tcc", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5d3e93f974899f1fde4b015e925d25b908a666d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5d3e93f974899f1fde4b015e925d25b908a666d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc?ref=f5d3e93f974899f1fde4b015e925d25b908a666d", "patch": "@@ -417,7 +417,7 @@ namespace std {\n       typedef typename traits_type::int_type int_type;\n       \n       int_type __plen = static_cast<size_t>(__newlen - __oldlen); \n-      char_type __pads[__plen];\n+      __extension__ char_type __pads[__plen];\n       traits_type::assign(__pads, __plen, __ios.fill()); \n \n       char_type* __beg;\n@@ -496,7 +496,7 @@ namespace std {\n \t{\n \t  try {\n \t    streamsize __w = __out.width();\n-\t    _CharT __pads[__w];\n+\t    __extension__ _CharT __pads[__w];\n \t    __pads[0] = __c;\n \t    streamsize __len = 1;\n \t    if (__w > __len)\n@@ -529,7 +529,7 @@ namespace std {\n \t{\n \t  try {\n \t    streamsize __w = __out.width();\n-\t    char __pads[__w + 1];\n+\t    __extension__ char __pads[__w + 1];\n \t    __pads[0] = __c;\n \t    streamsize __len = 1;\n \t    if (__w > __len)\n@@ -596,15 +596,15 @@ namespace std {\n       if (__cerb)\n \t{\n \t  size_t __clen = __ctraits_type::length(__s);\n-\t  _CharT __ws[__clen + 1];\n+\t  __extension__ _CharT __ws[__clen + 1];\n \t  for (size_t  __i = 0; __i <= __clen; ++__i)\n \t    __ws[__i] = __out.widen(__s[__i]);\n \t  _CharT* __str = __ws;\n \t  \n \t  try {\n \t    streamsize __len = static_cast<streamsize>(__clen);\n \t    streamsize __w = __out.width();\n-\t    _CharT __pads[__w];\n+\t    __extension__ _CharT __pads[__w];\n \n \t    if (__w > __len)\n \t      {\n@@ -637,7 +637,7 @@ namespace std {\n \t{\n \t  try {\n \t    streamsize __w = __out.width();\n-\t    char __pads[__w];\n+\t    __extension__ char __pads[__w];\n \t    streamsize __len = static_cast<streamsize>(_Traits::length(__s));\n \t    if (__w > __len)\n \t      {"}, {"sha": "0860650a4b1def23819c57c4b05af1c861c14720", "filename": "libstdc++-v3/include/bits/std_fstream.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5d3e93f974899f1fde4b015e925d25b908a666d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_fstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5d3e93f974899f1fde4b015e925d25b908a666d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_fstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_fstream.h?ref=f5d3e93f974899f1fde4b015e925d25b908a666d", "patch": "@@ -1,6 +1,6 @@\n // File based streams -*- C++ -*-\n \n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -60,7 +60,8 @@ namespace std {\n       typedef typename traits_type::state_type          __state_type;\n       typedef codecvt<char_type, char, __state_type>    __codecvt_type;\n       typedef typename __codecvt_type::result \t        __res_type;\n-      \n+      typedef ctype<char_type>                          __ctype_type;\n+\n       friend class ios_base; // For sync_with_stdio.\n \n     private:"}, {"sha": "bec1f15e40541184a4d05921a21e3878e5b5098a", "filename": "libstdc++-v3/include/bits/std_ostream.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5d3e93f974899f1fde4b015e925d25b908a666d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_ostream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5d3e93f974899f1fde4b015e925d25b908a666d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_ostream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_ostream.h?ref=f5d3e93f974899f1fde4b015e925d25b908a666d", "patch": "@@ -1,6 +1,6 @@\n // Output streams -*- C++ -*-\n \n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -262,7 +262,7 @@ namespace std {\n   template<typename _CharT, typename _Traits>\n     basic_ostream<_CharT, _Traits>& \n     ends(basic_ostream<_CharT, _Traits>& __os)\n-    { return __os.put(_Traits::_S_eos()); }\n+    { return __os.put(_CharT()); }\n   \n   template<typename _CharT, typename _Traits>\n     basic_ostream<_CharT, _Traits>& "}]}