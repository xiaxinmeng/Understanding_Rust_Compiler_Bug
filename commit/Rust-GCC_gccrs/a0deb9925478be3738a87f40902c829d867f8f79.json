{"sha": "a0deb9925478be3738a87f40902c829d867f8f79", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBkZWI5OTI1NDc4YmUzNzM4YTg3ZjQwOTAyYzgyOWQ4NjdmOGY3OQ==", "commit": {"author": {"name": "Pekka J\u00e4\u00e4skel\u00e4inen", "email": "pekka.jaaskelainen@parmance.com", "date": "2017-02-01T10:06:13Z"}, "committer": {"name": "Pekka J\u00e4\u00e4skel\u00e4inen", "email": "visit0r@gcc.gnu.org", "date": "2017-02-01T10:06:13Z"}, "message": "re PR other/79250 (brig/brigfrontend/brig-to-generic.cc: two small problems)\n\n* brigfrontend/brig-code-entry-handler.cc: fix address\nexpressions which refer only to offset 0, but nothing else.\n* brigfrontend/brig-lane-inst-handler.cc: fix\nactivelanepermute_b64 HSAIL instruction.\n* brigfrontend/brig-to-generic.cc: remove useless c_str()\ncall. Add missing va_end (). Fix PR79250\n\nFrom-SVN: r245084", "tree": {"sha": "f25d50266cf54a08e2d280228d14be91fbd045b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f25d50266cf54a08e2d280228d14be91fbd045b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0deb9925478be3738a87f40902c829d867f8f79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0deb9925478be3738a87f40902c829d867f8f79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0deb9925478be3738a87f40902c829d867f8f79", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0deb9925478be3738a87f40902c829d867f8f79/comments", "author": {"login": "pjaaskel", "id": 1652632, "node_id": "MDQ6VXNlcjE2NTI2MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/1652632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjaaskel", "html_url": "https://github.com/pjaaskel", "followers_url": "https://api.github.com/users/pjaaskel/followers", "following_url": "https://api.github.com/users/pjaaskel/following{/other_user}", "gists_url": "https://api.github.com/users/pjaaskel/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjaaskel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjaaskel/subscriptions", "organizations_url": "https://api.github.com/users/pjaaskel/orgs", "repos_url": "https://api.github.com/users/pjaaskel/repos", "events_url": "https://api.github.com/users/pjaaskel/events{/privacy}", "received_events_url": "https://api.github.com/users/pjaaskel/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "405a740640530a3c93ef68089cb185083e4df890", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/405a740640530a3c93ef68089cb185083e4df890", "html_url": "https://github.com/Rust-GCC/gccrs/commit/405a740640530a3c93ef68089cb185083e4df890"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "9f9a27eb6f42c4f749b529fdfbee2b435e91ad9b", "filename": "gcc/brig/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0deb9925478be3738a87f40902c829d867f8f79/gcc%2Fbrig%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0deb9925478be3738a87f40902c829d867f8f79/gcc%2Fbrig%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbrig%2FChangeLog?ref=a0deb9925478be3738a87f40902c829d867f8f79", "patch": "@@ -1,3 +1,12 @@\n+2016-02-01  Pekka J\u00e4\u00e4skel\u00e4inen  <pekka.jaaskelainen@parmance.com>\n+\n+\t* brigfrontend/brig-code-entry-handler.cc: fix address\n+\texpressions which refer only to offset 0, but nothing else.\n+\t* brigfrontend/brig-lane-inst-handler.cc: fix\n+\tactivelanepermute_b64 HSAIL instruction.\n+\t* brigfrontend/brig-to-generic.cc: remove useless c_str()\n+\tcall. Add missing va_end (). Fix PR79250.\n+\n 2017-01-30  Jakub Jelinek  <jakub@redhat.com>\n \n \t* brigfrontend/brig-code-entry-handler.cc"}, {"sha": "08e49f994a049b2a8477d15638777a594653a0e4", "filename": "gcc/brig/brigfrontend/brig-code-entry-handler.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0deb9925478be3738a87f40902c829d867f8f79/gcc%2Fbrig%2Fbrigfrontend%2Fbrig-code-entry-handler.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0deb9925478be3738a87f40902c829d867f8f79/gcc%2Fbrig%2Fbrigfrontend%2Fbrig-code-entry-handler.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbrig%2Fbrigfrontend%2Fbrig-code-entry-handler.cc?ref=a0deb9925478be3738a87f40902c829d867f8f79", "patch": "@@ -456,9 +456,13 @@ brig_code_entry_handler::build_address_operand\n \n   /* We might have two const offsets in case of group or private arrays\n      which have the first offset to the incoming group/private pointer\n-     arg, and the second one an offset to it.  */\n+     arg, and the second one an offset to it. It's also legal to have\n+     a reference with a zero constant offset but no symbol.  I've seen\n+     codes that reference kernarg segment like this.  Thus, if at this\n+     point there is no address expression at all we assume it's an\n+     access to offset 0. */\n   uint64_t offs = gccbrig_to_uint64_t (addr_operand.offset);\n-  if (offs > 0)\n+  if (offs > 0 || addr == NULL_TREE)\n     {\n       tree const_offset_2 = build_int_cst (size_type_node, offs);\n       if (addr == NULL_TREE)"}, {"sha": "c81ee6adefcd28df3e26ebaa7e91d7e5adc2086e", "filename": "gcc/brig/brigfrontend/brig-lane-inst-handler.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0deb9925478be3738a87f40902c829d867f8f79/gcc%2Fbrig%2Fbrigfrontend%2Fbrig-lane-inst-handler.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0deb9925478be3738a87f40902c829d867f8f79/gcc%2Fbrig%2Fbrigfrontend%2Fbrig-lane-inst-handler.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbrig%2Fbrigfrontend%2Fbrig-lane-inst-handler.cc?ref=a0deb9925478be3738a87f40902c829d867f8f79", "patch": "@@ -71,7 +71,8 @@ brig_lane_inst_handler::operator () (const BrigBase *base)\n \t itself or 'identity' in case use_identity is 1.  */\n \n       tree cmp = build2 (EQ_EXPR, uint32_type_node,\n-\t\t\t build_int_cstu (uint32_type_node, 1), use_identity);\n+\t\t\t build_int_cstu (TREE_TYPE (use_identity), 1),\n+\t\t\t use_identity);\n \n       expr = build3 (COND_EXPR, TREE_TYPE (src), cmp, identity, src);\n     }"}, {"sha": "d113bdcacf5696ddb7c2e85b124366e4e5e64903", "filename": "gcc/brig/brigfrontend/brig-to-generic.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0deb9925478be3738a87f40902c829d867f8f79/gcc%2Fbrig%2Fbrigfrontend%2Fbrig-to-generic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0deb9925478be3738a87f40902c829d867f8f79/gcc%2Fbrig%2Fbrigfrontend%2Fbrig-to-generic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbrig%2Fbrigfrontend%2Fbrig-to-generic.cc?ref=a0deb9925478be3738a87f40902c829d867f8f79", "patch": "@@ -351,7 +351,7 @@ brig_to_generic::add_global_variable (const std::string &name, tree var_decl)\n \n   std::string host_def_var_name\n     = std::string (PHSA_HOST_DEF_PTR_PREFIX) + name;\n-  tree host_def_var = global_variable (host_def_var_name.c_str ());\n+  tree host_def_var = global_variable (host_def_var_name);\n   if (host_def_var == NULL_TREE)\n     return;\n \n@@ -681,6 +681,7 @@ call_builtin (tree pdecl, int nargs, tree rettype, ...)\n \t{\n \t  delete[] types;\n \t  delete[] args;\n+\t  va_end (ap);\n \t  return error_mark_node;\n \t}\n     }"}]}