{"sha": "e8ff5196a89bdd14deca4ecb5d07d60cfd081b11", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThmZjUxOTZhODliZGQxNGRlY2E0ZWNiNWQwN2Q2MGNmZDA4MWIxMQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-11-05T20:27:22Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-11-05T20:27:22Z"}, "message": "c.opt (-Wdate-time): New option\n\n2013-11-05  Tobias Burnus  <burnus@net-b.de>\n\ngcc/c-family/\n        * c.opt (-Wdate-time): New option\n        * c-opts.c (sanitize_cpp_opts): Pass on to libcpp.\n\ngcc/\n        * doc/invoke.texi (-Wdate-time): Document.\n\ngcc/fortran\n        * lang.opt (-Wdate-time): New option\n        * cpp.c (gfc_cpp_option_data): Add warn_date_time.\n        (gfc_cpp_init_options, gfc_cpp_handle_option,\n        gfc_cpp_post_options): Handle it and pass on to libcpp.\n\ngcc/testsuite/\n        * g++.dg/warn/wdate-time.C: New.\n        * gcc.dg/wdate-time.c: New.\n        * gfortran.dg/wdate-time.F90: New.\n\nlibcpp/\n        * include/cpplib.h (CPP_W_DATE_TIME): Added.\n        (cpp_options): Add warn_date_time.\n        * init.c (cpp_create_reader): Init it.\n        * macro.c (_cpp_builtin_macro_text): Warn when\n        __DATE__/__TIME__/__TIMESTAMP__ is used.\n\nFrom-SVN: r204420", "tree": {"sha": "61e37f9572a53a1c03ae93e5c3d39f8427a2be96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61e37f9572a53a1c03ae93e5c3d39f8427a2be96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/comments", "author": null, "committer": null, "parents": [{"sha": "df1c87913c623004b0ecf24ea37874d9addaa8c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df1c87913c623004b0ecf24ea37874d9addaa8c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df1c87913c623004b0ecf24ea37874d9addaa8c9"}], "stats": {"total": 88, "additions": 85, "deletions": 3}, "files": [{"sha": "66de2f9aff855bc7d16accf84a412da504acb028", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e8ff5196a89bdd14deca4ecb5d07d60cfd081b11", "patch": "@@ -1,3 +1,7 @@\n+2013-11-05  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* doc/invoke.texi (-Wdate-time): Document.\n+\n 2013-11-05  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* double-int.c (lshift_double, rshift_double): Remove"}, {"sha": "68929521087b463f4aeee76defbb7051610e8e3d", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=e8ff5196a89bdd14deca4ecb5d07d60cfd081b11", "patch": "@@ -1,3 +1,8 @@\n+2013-11-05  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* c.opt (-Wdate-time): New option\n+\t* c-opts.c (sanitize_cpp_opts): Pass on to libcpp.\n+\n 2013-11-05  Joseph Myers  <joseph@codesourcery.com>\n \n \t* c-cppbuiltin.c (cpp_iec_559_value): Test"}, {"sha": "2de5425e65473dbe303fcef8bf6392b1371478ee", "filename": "gcc/c-family/c-opts.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/gcc%2Fc-family%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/gcc%2Fc-family%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-opts.c?ref=e8ff5196a89bdd14deca4ecb5d07d60cfd081b11", "patch": "@@ -1198,6 +1198,7 @@ sanitize_cpp_opts (void)\n \n   cpp_opts->unsigned_char = !flag_signed_char;\n   cpp_opts->stdc_0_in_system_headers = STDC_0_IN_SYSTEM_HEADERS;\n+  cpp_opts->warn_date_time = cpp_warn_date_time;\n \n   /* Wlong-long is disabled by default. It is enabled by:\n       [-Wpedantic | -Wtraditional] -std=[gnu|c]++98 ; or"}, {"sha": "46391fa496c767f81b5ac1f5b14988179698f3ea", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=e8ff5196a89bdd14deca4ecb5d07d60cfd081b11", "patch": "@@ -640,6 +640,10 @@ Wpragmas\n C ObjC C++ ObjC++ Var(warn_pragmas) Init(1) Warning\n Warn about misuses of pragmas\n \n+Wdate-time\n+Common Var(cpp_warn_date_time) Warning\n+Warn about __TIME__, __DATE__ and __TIMESTAMP__ usage\n+\n Wproperty-assign-default\n ObjC ObjC++ Var(warn_property_assign_default) Init(1) Warning\n Warn if a property for an Objective-C object has no assign semantics specified"}, {"sha": "863e518b96fd32b172e2e8964fb1a090d1e2fa76", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=e8ff5196a89bdd14deca4ecb5d07d60cfd081b11", "patch": "@@ -240,7 +240,7 @@ Objective-C and Objective-C++ Dialects}.\n -Wno-attributes -Wno-builtin-macro-redefined @gol\n -Wc++-compat -Wc++11-compat -Wcast-align  -Wcast-qual  @gol\n -Wchar-subscripts -Wclobbered  -Wcomment -Wconditionally-supported  @gol\n--Wconversion -Wcoverage-mismatch  -Wdelete-incomplete -Wno-cpp  @gol\n+-Wconversion -Wcoverage-mismatch -Wdate-time -Wdelete-incomplete -Wno-cpp  @gol\n -Wno-deprecated -Wno-deprecated-declarations -Wdisabled-optimization  @gol\n -Wno-div-by-zero -Wdouble-promotion -Wempty-body  -Wenum-compare @gol\n -Wno-endif-labels -Werror  -Werror=* @gol\n@@ -4526,6 +4526,13 @@ types. @option{-Wconversion-null} is enabled by default.\n Warn when a literal '0' is used as null pointer constant.  This can\n be useful to facilitate the conversion to @code{nullptr} in C++11.\n \n+@item -Wdate-time\n+@opindex Wdate-time\n+@opindex Wno-date-time\n+Warn when macros @code{__TIME__}, @code{__DATE__} or @code{__TIMESTAMP__}\n+are encountered as they might prevent bit-wise-identical reproducable\n+compilations.\n+\n @item -Wdelete-incomplete @r{(C++ and Objective-C++ only)}\n @opindex Wdelete-incomplete\n @opindex Wno-delete-incomplete"}, {"sha": "155a65372614d1457a8594d17afb46f6a323b1eb", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e8ff5196a89bdd14deca4ecb5d07d60cfd081b11", "patch": "@@ -1,3 +1,10 @@\n+2013-11-05  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* lang.opt (-Wdate-time): New option\n+\t* cpp.c (gfc_cpp_option_data): Add warn_date_time.\n+\t(gfc_cpp_init_options, gfc_cpp_handle_option,\n+\tgfc_cpp_post_options): Handle it and pass on to libcpp.\n+\n 2013-11-05  Steven G. Kargl <kargl@gcc.gnu.org>\n \n \tPR fortran/58989"}, {"sha": "8417ddca163404953b05d8d8ba0586673756c5d4", "filename": "gcc/fortran/cpp.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/gcc%2Ffortran%2Fcpp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/gcc%2Ffortran%2Fcpp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcpp.c?ref=e8ff5196a89bdd14deca4ecb5d07d60cfd081b11", "patch": "@@ -100,6 +100,7 @@ struct gfc_cpp_option_data\n   const char *deps_filename_user;       /* -MF <arg> */\n   int deps_missing_are_generated;       /* -MG */\n   int deps_phony;                       /* -MP */\n+  int warn_date_time;                   /* -Wdate-time */\n \n   const char *multilib;                 /* -imultilib <dir>  */\n   const char *prefix;                   /* -iprefix <dir>  */\n@@ -262,6 +263,7 @@ gfc_cpp_init_options (unsigned int decoded_options_count,\n   gfc_cpp_option.no_predefined = 0;\n   gfc_cpp_option.standard_include_paths = 1;\n   gfc_cpp_option.verbose = 0;\n+  gfc_cpp_option.warn_date_time = 0;\n   gfc_cpp_option.deps = 0;\n   gfc_cpp_option.deps_skip_system = 0;\n   gfc_cpp_option.deps_phony = 0;\n@@ -359,6 +361,9 @@ gfc_cpp_handle_option (size_t scode, const char *arg, int value ATTRIBUTE_UNUSED\n       gfc_cpp_option.verbose = value;\n       break;\n \n+    case OPT_Wdate_time:\n+      gfc_cpp_option.warn_date_time = value;\n+\n     case OPT_A:\n     case OPT_D:\n     case OPT_U:\n@@ -469,6 +474,7 @@ gfc_cpp_post_options (void)\n   cpp_option->discard_comments_in_macro_exp = gfc_cpp_option.discard_comments_in_macro_exp;\n   cpp_option->print_include_names = gfc_cpp_option.print_include_names;\n   cpp_option->preprocessed = gfc_option.flag_preprocessed;\n+  cpp_option->warn_date_time = gfc_cpp_option.warn_date_time;\n \n   if (gfc_cpp_makedep ())\n     {"}, {"sha": "5e09cbd1459223c71044256e2e35d30eaca6d735", "filename": "gcc/fortran/lang.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/gcc%2Ffortran%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/gcc%2Ffortran%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flang.opt?ref=e8ff5196a89bdd14deca4ecb5d07d60cfd081b11", "patch": "@@ -213,6 +213,10 @@ Wc-binding-type\n Fortran Warning\n Warn if the type of a variable might be not interoperable with C\n \n+Wdate-time\n+Fortran\n+; Documented in C\n+\n Wcharacter-truncation\n Fortran Warning\n Warn about truncated character expressions"}, {"sha": "9b5a538e6f725bd5457bab58da7702f3bddf3222", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e8ff5196a89bdd14deca4ecb5d07d60cfd081b11", "patch": "@@ -1,3 +1,9 @@\n+2013-11-05  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* g++.dg/warn/wdate-time.C: New.\n+\t* gcc.dg/wdate-time.c: New.\n+\t* gfortran.dg/wdate-time.F90: New.\n+\n 2013-11-05  Steven G. Kargl <kargl@gcc.gnu.org>\n \n \tPR fortran/58989"}, {"sha": "040dd995c2e382ce9640efb7841aacc6df592d7b", "filename": "gcc/testsuite/g++.dg/warn/wdate-time.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fwdate-time.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fwdate-time.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fwdate-time.C?ref=e8ff5196a89bdd14deca4ecb5d07d60cfd081b11", "patch": "@@ -0,0 +1,6 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wdate-time\" } */\n+\n+const char time[] = __TIME__;  /* { dg-warning \"might prevent reproduce builds\" }  */\n+const char date[] = __DATE__;  /* { dg-warning \"might prevent reproduce builds\" }  */\n+const char timestamp[] = __TIMESTAMP__;  /* { dg-warning \"might prevent reproduce builds\" }  */"}, {"sha": "040dd995c2e382ce9640efb7841aacc6df592d7b", "filename": "gcc/testsuite/gcc.dg/wdate-time.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/gcc%2Ftestsuite%2Fgcc.dg%2Fwdate-time.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/gcc%2Ftestsuite%2Fgcc.dg%2Fwdate-time.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fwdate-time.c?ref=e8ff5196a89bdd14deca4ecb5d07d60cfd081b11", "patch": "@@ -0,0 +1,6 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wdate-time\" } */\n+\n+const char time[] = __TIME__;  /* { dg-warning \"might prevent reproduce builds\" }  */\n+const char date[] = __DATE__;  /* { dg-warning \"might prevent reproduce builds\" }  */\n+const char timestamp[] = __TIMESTAMP__;  /* { dg-warning \"might prevent reproduce builds\" }  */"}, {"sha": "f3a4f46c0b2238ccc198c8163a94ace6785fd23d", "filename": "gcc/testsuite/gfortran.dg/wdate-time.F90", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/gcc%2Ftestsuite%2Fgfortran.dg%2Fwdate-time.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/gcc%2Ftestsuite%2Fgfortran.dg%2Fwdate-time.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fwdate-time.F90?ref=e8ff5196a89bdd14deca4ecb5d07d60cfd081b11", "patch": "@@ -0,0 +1,6 @@\n+! { dg-do compile }\n+! { dg-options \"-Wdate-time\" }\n+print *, __TIMESTAMP__  ! { dg-warning \"might prevent reproduce builds\" }\n+print *, __TIME__  ! { dg-warning \"might prevent reproduce builds\" }\n+print *, __DATE__  ! { dg-warning \"might prevent reproduce builds\" }\n+end"}, {"sha": "670affd90e763c55811d520e50e01adb3ed48dd1", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=e8ff5196a89bdd14deca4ecb5d07d60cfd081b11", "patch": "@@ -1,6 +1,14 @@\n+2013-11-05  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* include/cpplib.h (CPP_W_DATE_TIME): Added.\n+\t(cpp_options): Add warn_date_time.\n+\t* init.c (cpp_create_reader): Init it.\n+\t* macro.c (_cpp_builtin_macro_text): Warn when\n+\t__DATE__/__TIME__/__TIMESTAMP__ is used.\n+\n 2013-10-31  Edward Smith-Rowland  <3dw4rd@verizon.net>\n \n-        Implement C++14 digit separators.\n+\tImplement C++14 digit separators.\n \t* include/cpplib.h (cpp_options): Add digit_separators flag.\n \t* internal.h (DIGIT_SEP(c)): New macro.\n \t* expr.c (cpp_classify_number): Check improper placement of digit sep;"}, {"sha": "02927d4c6cbe826664de373a4715148609720dc2", "filename": "libcpp/include/cpplib.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/libcpp%2Finclude%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/libcpp%2Finclude%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finclude%2Fcpplib.h?ref=e8ff5196a89bdd14deca4ecb5d07d60cfd081b11", "patch": "@@ -337,6 +337,9 @@ struct cpp_options\n   /* Nonzero means warn if slash-star appears in a comment.  */\n   unsigned char warn_comments;\n \n+  /* Nonzero means to warn about __DATA__, __TIME__ and __TIMESTAMP__ usage.   */\n+  unsigned char warn_date_time;\n+\n   /* Nonzero means warn if a user-supplied include directory does not\n      exist.  */\n   unsigned char warn_missing_include_dirs;\n@@ -925,7 +928,8 @@ enum {\n   CPP_W_NORMALIZE,\n   CPP_W_INVALID_PCH,\n   CPP_W_WARNING_DIRECTIVE,\n-  CPP_W_LITERAL_SUFFIX\n+  CPP_W_LITERAL_SUFFIX,\n+  CPP_W_DATE_TIME\n };\n \n /* Output a diagnostic of some kind.  */"}, {"sha": "67444301590b503a19c3965be7e4131b990b49cc", "filename": "libcpp/init.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/libcpp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/libcpp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finit.c?ref=e8ff5196a89bdd14deca4ecb5d07d60cfd081b11", "patch": "@@ -193,6 +193,7 @@ cpp_create_reader (enum c_lang lang, cpp_hash_table *table,\n   CPP_OPTION (pfile, canonical_system_headers)\n       = ENABLE_CANONICAL_SYSTEM_HEADERS;\n   CPP_OPTION (pfile, ext_numeric_literals) = 1;\n+  CPP_OPTION (pfile, warn_date_time) = 0;\n \n   /* Default CPP arithmetic to something sensible for the host for the\n      benefit of dumb users like fix-header.  */"}, {"sha": "3a1728d66636f4e9c4958fd5220bac41df650aec", "filename": "libcpp/macro.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/libcpp%2Fmacro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ff5196a89bdd14deca4ecb5d07d60cfd081b11/libcpp%2Fmacro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fmacro.c?ref=e8ff5196a89bdd14deca4ecb5d07d60cfd081b11", "patch": "@@ -232,6 +232,10 @@ _cpp_builtin_macro_text (cpp_reader *pfile, cpp_hashnode *node)\n \n     case BT_TIMESTAMP:\n       {\n+\tif (CPP_OPTION (pfile, warn_date_time))\n+\t  cpp_warning (pfile, CPP_W_DATE_TIME, \"Macro \\\"%s\\\" might prevent \"\n+\t\t       \"reproduce builds\", NODE_NAME (node));\n+\n \tcpp_buffer *pbuffer = cpp_get_buffer (pfile);\n \tif (pbuffer->timestamp == NULL)\n \t  {\n@@ -325,6 +329,9 @@ _cpp_builtin_macro_text (cpp_reader *pfile, cpp_hashnode *node)\n \n     case BT_DATE:\n     case BT_TIME:\n+      if (CPP_OPTION (pfile, warn_date_time))\n+\tcpp_warning (pfile, CPP_W_DATE_TIME, \"Macro \\\"%s\\\" might prevent \"\n+\t\t     \"reproduce builds\", NODE_NAME (node));\n       if (pfile->date == NULL)\n \t{\n \t  /* Allocate __DATE__ and __TIME__ strings from permanent"}]}