{"sha": "cc2ccbcedd20d4d800b5e1a79c98f2c3ad6c9bf2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2MyY2NiY2VkZDIwZDRkODAwYjVlMWE3OWM5OGYyYzNhZDZjOWJmMg==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds_cb1@t-online.de", "date": "2019-11-24T13:08:27Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2019-11-24T13:08:27Z"}, "message": "Fix ix86 rtx costs for the pr30315 testcase (PR target/30315)\n\n\t* config/i386/i386.c (ix86_rtx_costs): Handle care of a PLUS in a\n\tCOMPARE, representing an overflow detection.\n\nFrom-SVN: r278654", "tree": {"sha": "b259e841ea59fe7572ca4902447d6abfa60aeb94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b259e841ea59fe7572ca4902447d6abfa60aeb94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc2ccbcedd20d4d800b5e1a79c98f2c3ad6c9bf2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc2ccbcedd20d4d800b5e1a79c98f2c3ad6c9bf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc2ccbcedd20d4d800b5e1a79c98f2c3ad6c9bf2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc2ccbcedd20d4d800b5e1a79c98f2c3ad6c9bf2/comments", "author": {"login": "bernds", "id": 92527, "node_id": "MDQ6VXNlcjkyNTI3", "avatar_url": "https://avatars.githubusercontent.com/u/92527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernds", "html_url": "https://github.com/bernds", "followers_url": "https://api.github.com/users/bernds/followers", "following_url": "https://api.github.com/users/bernds/following{/other_user}", "gists_url": "https://api.github.com/users/bernds/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernds/subscriptions", "organizations_url": "https://api.github.com/users/bernds/orgs", "repos_url": "https://api.github.com/users/bernds/repos", "events_url": "https://api.github.com/users/bernds/events{/privacy}", "received_events_url": "https://api.github.com/users/bernds/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "74bc2a43ce3708829a6aeb0a10e27bc5b753f8ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74bc2a43ce3708829a6aeb0a10e27bc5b753f8ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74bc2a43ce3708829a6aeb0a10e27bc5b753f8ce"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "cd4b96d7697d3ed2e0b9f35eb0d8b5e0c4bb2cd8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc2ccbcedd20d4d800b5e1a79c98f2c3ad6c9bf2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc2ccbcedd20d4d800b5e1a79c98f2c3ad6c9bf2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cc2ccbcedd20d4d800b5e1a79c98f2c3ad6c9bf2", "patch": "@@ -1,3 +1,8 @@\n+2019-11-24  Bernd Schmidt  <bernds_cb1@t-online.de>\n+\n+\t* config/i386/i386.c (ix86_rtx_costs): Handle care of a PLUS in a\n+\tCOMPARE, representing an overflow detection.\n+\n 2019-11-23  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* cif-code.def (MAX_INLINE_INSNS_SINGLE_O2_LIMIT): Remove."}, {"sha": "04cbbd532c0d7df8288e87555696bc32477beeca", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc2ccbcedd20d4d800b5e1a79c98f2c3ad6c9bf2/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc2ccbcedd20d4d800b5e1a79c98f2c3ad6c9bf2/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=cc2ccbcedd20d4d800b5e1a79c98f2c3ad6c9bf2", "patch": "@@ -19501,6 +19501,15 @@ ix86_rtx_costs (rtx x, machine_mode mode, int outer_code_i, int opno,\n \t  return true;\n \t}\n \n+      if (GET_CODE (XEXP (x, 0)) == PLUS\n+\t  && rtx_equal_p (XEXP (XEXP (x, 0), 0), XEXP (x, 1)))\n+\t{\n+\t  /* This is an overflow detection, count it as a normal compare.  */\n+\t  *total = rtx_cost (XEXP (x, 0), GET_MODE (XEXP (x, 0)),\n+\t\t\t     COMPARE, 0, speed);\n+\t  return true;\n+\t}\n+\n       /* The embedded comparison operand is completely free.  */\n       if (!general_operand (XEXP (x, 0), GET_MODE (XEXP (x, 0)))\n \t  && XEXP (x, 1) == const0_rtx)"}]}