{"sha": "261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjYxZTViOWU2YTBhOTc3MDBkM2UwYjZiYmYwYzljZmYyZDE4NTM4Ng==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2004-05-18T03:27:57Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2004-05-18T03:27:57Z"}, "message": "[multiple changes]\n\n\n2004-05-17  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* testsuite/testsuite_hooks.h (__gnu_test::conversion): New class.\n\t* testsuite/23_containers/deque/14340.cc: New.\n\t* testsuite/23_containers/list/14340.cc: New.\n\t* testsuite/23_containers/map/14340.cc: New.\n\t* testsuite/23_containers/multimap/14340.cc: New.\n\t* testsuite/23_containers/multiset/14340.cc: New.\n\t* testsuite/23_containers/set/14340.cc: New.\n\t* testsuite/23_containers/vector/14340.cc: New.\n\n2004-05-17  Douglas Gregor   <gregod@cs.rpi.edu>\n\n\tPR libstdc++/14340\n\t* include/debug/safe_iterator.h (_Safe_iterator converting\n\tconstructor): Only allow declaration to instantiate when the\n\tincoming _Safe_iterator has exactly the right iterator type.\n\nFrom-SVN: r81970", "tree": {"sha": "4a0820b77b1ca2936bfaad93db204a507ced96e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a0820b77b1ca2936bfaad93db204a507ced96e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386", "html_url": "https://github.com/Rust-GCC/gccrs/commit/261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386/comments", "author": null, "committer": null, "parents": [{"sha": "85b87c94afe309afc7be3fa3e5ad6e303affe2ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85b87c94afe309afc7be3fa3e5ad6e303affe2ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85b87c94afe309afc7be3fa3e5ad6e303affe2ea"}], "stats": {"total": 342, "additions": 340, "deletions": 2}, "files": [{"sha": "cbd68c15071edbc77582a66677321b10739f24fe", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386", "patch": "@@ -1,3 +1,21 @@\n+2004-05-17  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* testsuite/testsuite_hooks.h (__gnu_test::conversion): New class.\n+\t* testsuite/23_containers/deque/14340.cc: New.\n+\t* testsuite/23_containers/list/14340.cc: New.\n+\t* testsuite/23_containers/map/14340.cc: New.\n+\t* testsuite/23_containers/multimap/14340.cc: New.\n+\t* testsuite/23_containers/multiset/14340.cc: New.\n+\t* testsuite/23_containers/set/14340.cc: New.\n+\t* testsuite/23_containers/vector/14340.cc: New.\n+\n+2004-05-17  Douglas Gregor   <gregod@cs.rpi.edu>\n+\n+\tPR libstdc++/14340 \n+\t* include/debug/safe_iterator.h (_Safe_iterator converting \n+\tconstructor): Only allow declaration to instantiate when the \n+\tincoming _Safe_iterator has exactly the right iterator type.\n+\n 2004-05-17  Jonathan Wakely  <redi@gcc.gnu.org>\n \n \t* include/bits/boost_concept_check.h: Fix old attribute syntax."}, {"sha": "8a4123af69441431db0c8ac4d26f0d4ceb50f261", "filename": "libstdc++-v3/include/debug/safe_iterator.h", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_iterator.h?ref=261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386", "patch": "@@ -35,6 +35,7 @@\n #include <debug/debug.h>\n #include <debug/formatter.h>\n #include <debug/safe_base.h>\n+#include <bits/cpp_type_traits.h>\n \n namespace __gnu_debug\n {\n@@ -88,6 +89,7 @@ namespace __gnu_debug\n       typedef iterator_traits<_Iterator> _Traits;\n \n     public:\n+      typedef _Iterator                           _Base_iterator;\n       typedef typename _Traits::iterator_category iterator_category;\n       typedef typename _Traits::value_type        value_type;\n       typedef typename _Traits::difference_type   difference_type;\n@@ -132,7 +134,13 @@ namespace __gnu_debug\n        *  @pre @p x is not singular\n       */\n       template<typename _MutableIterator>\n-        _Safe_iterator(const _Safe_iterator<_MutableIterator, _Sequence>& __x)\n+        _Safe_iterator(\n+          const _Safe_iterator<_MutableIterator,\n+          typename std::__enable_if<\n+                     _Sequence,\n+                     (std::__are_same<_MutableIterator,\n+                      typename _Sequence::iterator::_Base_iterator>::_M_type)\n+                   >::_M_type>& __x)\n \t: _Safe_iterator_base(__x, _M_constant()), _M_current(__x.base())\n         {\n \t  _GLIBCXX_DEBUG_VERIFY(!__x._M_singular(),"}, {"sha": "1e1c302856e6ce1eb427d4ed7cf5d9278f68c51f", "filename": "libstdc++-v3/testsuite/23_containers/deque/14340.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2F14340.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2F14340.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2F14340.cc?ref=261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386", "patch": "@@ -0,0 +1,42 @@\n+// -*- C++ -*-\n+\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <testsuite_hooks.h>\n+#include <deque>\n+\n+// { dg-options \"-D_GLIBCXX_DEBUG\" }\n+// { dg-do compile }\n+\n+// libstdc++/14340\n+int main()\n+{\n+  typedef std::deque<int> container;\n+  __gnu_test::conversion<container>::iterator_to_const_iterator();\n+  return 0;\n+}"}, {"sha": "3d2b369ea885ff37f2e2f99a2d20bb2a174fc01f", "filename": "libstdc++-v3/testsuite/23_containers/list/14340.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2F14340.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2F14340.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2F14340.cc?ref=261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386", "patch": "@@ -0,0 +1,42 @@\n+// -*- C++ -*-\n+\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <testsuite_hooks.h>\n+#include <list>\n+\n+// { dg-options \"-D_GLIBCXX_DEBUG\" }\n+// { dg-do compile }\n+\n+// libstdc++/14340\n+int main()\n+{\n+  typedef std::list<int> container;\n+  __gnu_test::conversion<container>::iterator_to_const_iterator();\n+  return 0;\n+}"}, {"sha": "8f01440f244d39178099822ef2eea290686f792b", "filename": "libstdc++-v3/testsuite/23_containers/map/14340.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2F14340.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2F14340.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2F14340.cc?ref=261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386", "patch": "@@ -0,0 +1,42 @@\n+// -*- C++ -*-\n+\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <testsuite_hooks.h>\n+#include <map>\n+\n+// { dg-options \"-D_GLIBCXX_DEBUG\" }\n+// { dg-do compile }\n+\n+// libstdc++/14340\n+int main()\n+{\n+  typedef std::map<int, int> container;\n+  __gnu_test::conversion<container>::iterator_to_const_iterator();\n+  return 0;\n+}"}, {"sha": "f119796b039592481ca16452f664bc1b6e41d43b", "filename": "libstdc++-v3/testsuite/23_containers/multimap/14340.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2F14340.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2F14340.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2F14340.cc?ref=261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386", "patch": "@@ -0,0 +1,42 @@\n+// -*- C++ -*-\n+\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <testsuite_hooks.h>\n+#include <map>\n+\n+// { dg-options \"-D_GLIBCXX_DEBUG\" }\n+// { dg-do compile }\n+\n+// libstdc++/14340\n+int main()\n+{\n+  typedef std::multimap<int, int> container;\n+  __gnu_test::conversion<container>::iterator_to_const_iterator();\n+  return 0;\n+}"}, {"sha": "354c5153edf45da95f45915b616f2af7898099eb", "filename": "libstdc++-v3/testsuite/23_containers/multiset/14340.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2F14340.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2F14340.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2F14340.cc?ref=261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386", "patch": "@@ -0,0 +1,42 @@\n+// -*- C++ -*-\n+\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <testsuite_hooks.h>\n+#include <set>\n+\n+// { dg-options \"-D_GLIBCXX_DEBUG\" }\n+// { dg-do compile }\n+\n+// libstdc++/14340\n+int main()\n+{\n+  typedef std::multiset<int, int> container;\n+  __gnu_test::conversion<container>::iterator_to_const_iterator();\n+  return 0;\n+}"}, {"sha": "b24fb4c73e8bb83069584545c99565fc8f1ca0bd", "filename": "libstdc++-v3/testsuite/23_containers/set/14340.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2F14340.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2F14340.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2F14340.cc?ref=261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386", "patch": "@@ -0,0 +1,42 @@\n+// -*- C++ -*-\n+\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <testsuite_hooks.h>\n+#include <set>\n+\n+// { dg-options \"-D_GLIBCXX_DEBUG\" }\n+// { dg-do compile }\n+\n+// libstdc++/14340\n+int main()\n+{\n+  typedef std::set<int, int> container;\n+  __gnu_test::conversion<container>::iterator_to_const_iterator();\n+  return 0;\n+}"}, {"sha": "c81408633f5d1d34637465fe1c3e7bed506c5ea1", "filename": "libstdc++-v3/testsuite/23_containers/vector/14340.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2F14340.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2F14340.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2F14340.cc?ref=261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386", "patch": "@@ -0,0 +1,42 @@\n+// -*- C++ -*-\n+\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <testsuite_hooks.h>\n+#include <vector>\n+\n+// { dg-options \"-D_GLIBCXX_DEBUG\" }\n+// { dg-do compile }\n+\n+// libstdc++/14340\n+int main()\n+{\n+  typedef std::vector<int> container;\n+  __gnu_test::conversion<container>::iterator_to_const_iterator();\n+  return 0;\n+}"}, {"sha": "daa44232ae4d91ec649bd1b143972de516fa0030", "filename": "libstdc++-v3/testsuite/testsuite_hooks.h", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.h?ref=261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386", "patch": "@@ -1,7 +1,7 @@\n // -*- C++ -*-\n // Utility subroutines for the C++ library testsuite. \n //\n-// Copyright (C) 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -340,6 +340,24 @@ namespace __gnu_test\n   inline bool\n   operator==(const copy_tracker& lhs, const copy_tracker& rhs)\n   { return lhs.id() == rhs.id(); }\n+\n+  // Class for checking required type conversions, implicit and\n+  // explicit for given library data structures. \n+  template<typename _Container>\n+    struct conversion\n+    {\n+      typedef typename _Container::const_iterator const_iterator;\n+      \n+      // Implicit conversion iterator to const_iterator.\n+      static const_iterator\n+      iterator_to_const_iterator()\n+      {\n+\t_Container v;\n+\tconst_iterator it = v.begin();\n+\tconst_iterator end = v.end();\n+\treturn it == end ? v.end() : it;\n+      }\n+    };\n } // namespace __gnu_test\n \n namespace std"}]}