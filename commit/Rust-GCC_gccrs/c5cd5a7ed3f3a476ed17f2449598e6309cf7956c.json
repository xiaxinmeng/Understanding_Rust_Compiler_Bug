{"sha": "c5cd5a7ed3f3a476ed17f2449598e6309cf7956c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzVjZDVhN2VkM2YzYTQ3NmVkMTdmMjQ0OTU5OGU2MzA5Y2Y3OTU2Yw==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2012-10-28T20:02:59Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2012-10-28T20:02:59Z"}, "message": "rtl.h (struct rtx_def): Add a comment for member unchanging.\n\n2012-10-28  Vladimir Makarov  <vmakarov@redhat.com>\n\n\t* rtl.h (struct rtx_def): Add a comment for member unchanging.\n\t* lra-int.h (LRA_TEMP_CLOBBER_P): New macro.\n\t(lra_hard_reg_substitution): Rename to lra_final_code_change.\n\t* lra-constraints.c (match_reload): Mark temporary clobbers.\n\t* lra-spill.c (lra_hard_reg_substitution): Rename to\n\tlra_final_code_change.  Remove temporary clobbers.\n\t* lra.c (lra): Rename to lra_final_code_change.\n\nFrom-SVN: r192897", "tree": {"sha": "888f79b5020c2fcd4c6a06b52d30340a3f6cfc2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/888f79b5020c2fcd4c6a06b52d30340a3f6cfc2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5cd5a7ed3f3a476ed17f2449598e6309cf7956c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5cd5a7ed3f3a476ed17f2449598e6309cf7956c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5cd5a7ed3f3a476ed17f2449598e6309cf7956c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5cd5a7ed3f3a476ed17f2449598e6309cf7956c/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "57bf28eab7d3b708b52d4d3f52b0f42966945b8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57bf28eab7d3b708b52d4d3f52b0f42966945b8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57bf28eab7d3b708b52d4d3f52b0f42966945b8d"}], "stats": {"total": 49, "additions": 39, "deletions": 10}, "files": [{"sha": "e3119c22a52da5d8cf59002ea0ecd4af92acb00e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5cd5a7ed3f3a476ed17f2449598e6309cf7956c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5cd5a7ed3f3a476ed17f2449598e6309cf7956c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c5cd5a7ed3f3a476ed17f2449598e6309cf7956c", "patch": "@@ -1,3 +1,13 @@\n+2012-10-28  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\t* rtl.h (struct rtx_def): Add a comment for member unchanging.\n+\t* lra-int.h (LRA_TEMP_CLOBBER_P): New macro.\n+\t(lra_hard_reg_substitution): Rename to lra_final_code_change.\n+\t* lra-constraints.c (match_reload): Mark temporary clobbers.\n+\t* lra-spill.c (lra_hard_reg_substitution): Rename to\n+\tlra_final_code_change.  Remove temporary clobbers.\n+\t* lra.c (lra): Rename to lra_final_code_change.\n+\n 2012-10-28  Jan Hubicka  <jh@suse.cz>\n \n \t* gcc.dg/ipa/inlinehint-3.c: New testcase."}, {"sha": "4b3dbc01ec30e4646e96ec04a30cb0662bbee2d7", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5cd5a7ed3f3a476ed17f2449598e6309cf7956c/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5cd5a7ed3f3a476ed17f2449598e6309cf7956c/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=c5cd5a7ed3f3a476ed17f2449598e6309cf7956c", "patch": "@@ -663,7 +663,7 @@ match_reload (signed char out, signed char *ins, enum reg_class goal_class,\n \t      rtx *before, rtx *after)\n {\n   int i, in;\n-  rtx new_in_reg, new_out_reg, reg;\n+  rtx new_in_reg, new_out_reg, reg, clobber;\n   enum machine_mode inmode, outmode;\n   rtx in_rtx = *curr_id->operand_loc[ins[0]];\n   rtx out_rtx = *curr_id->operand_loc[out];\n@@ -694,8 +694,10 @@ match_reload (signed char out, signed char *ins, enum reg_class goal_class,\n \t    new_in_reg = gen_rtx_SUBREG (inmode, reg, 0);\n \t  /* NEW_IN_REG is non-paradoxical subreg.  We don't want\n \t     NEW_OUT_REG living above.  We add clobber clause for\n-\t     this.  */\n-\t  emit_clobber (new_out_reg);\n+\t     this.  This is just a temporary clobber.  We can remove\n+\t     it at the end of LRA work.  */\n+\t  clobber = emit_clobber (new_out_reg);\n+\t  LRA_TEMP_CLOBBER_P (PATTERN (clobber)) = 1;\n \t}\n     }\n   else"}, {"sha": "8a9865087d084528de69e13a1ac57465e7807dfe", "filename": "gcc/lra-int.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5cd5a7ed3f3a476ed17f2449598e6309cf7956c/gcc%2Flra-int.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5cd5a7ed3f3a476ed17f2449598e6309cf7956c/gcc%2Flra-int.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-int.h?ref=c5cd5a7ed3f3a476ed17f2449598e6309cf7956c", "patch": "@@ -241,6 +241,10 @@ struct lra_insn_recog_data\n \n typedef struct lra_insn_recog_data *lra_insn_recog_data_t;\n \n+/* Whether the clobber is used temporary in LRA.  */\n+#define LRA_TEMP_CLOBBER_P(x) \\\n+  (RTL_FLAG_CHECK1 (\"TEMP_CLOBBER_P\", (x), CLOBBER)->unchanging)\n+\n /* lra.c: */\n \n extern FILE *lra_dump_file;\n@@ -346,7 +350,7 @@ extern bool lra_coalesce (void);\n \n extern bool lra_need_for_spills_p (void);\n extern void lra_spill (void);\n-extern void lra_hard_reg_substitution (void);\n+extern void lra_final_code_change (void);\n \n \n /* lra-elimination.c: */"}, {"sha": "af21c480f7771f3e4b61fe2ac39f77e98cc53bda", "filename": "gcc/lra-spills.c", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5cd5a7ed3f3a476ed17f2449598e6309cf7956c/gcc%2Flra-spills.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5cd5a7ed3f3a476ed17f2449598e6309cf7956c/gcc%2Flra-spills.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-spills.c?ref=c5cd5a7ed3f3a476ed17f2449598e6309cf7956c", "patch": "@@ -614,23 +614,35 @@ alter_subregs (rtx *loc, bool final_p)\n }\n \n /* Final change of pseudos got hard registers into the corresponding\n-   hard registers.  */\n+   hard registers and removing temporary clobbers.  */\n void\n-lra_hard_reg_substitution (void)\n+lra_final_code_change (void)\n {\n   int i, hard_regno;\n   basic_block bb;\n-  rtx insn;\n+  rtx insn, curr;\n   int max_regno = max_reg_num ();\n \n   for (i = FIRST_PSEUDO_REGISTER; i < max_regno; i++)\n     if (lra_reg_info[i].nrefs != 0\n \t&& (hard_regno = lra_get_regno_hard_regno (i)) >= 0)\n       SET_REGNO (regno_reg_rtx[i], hard_regno);\n   FOR_EACH_BB (bb)\n-    FOR_BB_INSNS (bb, insn)\n+    FOR_BB_INSNS_SAFE (bb, insn, curr)\n       if (INSN_P (insn))\n \t{\n+\t  rtx pat = PATTERN (insn);\n+\n+\t  if (GET_CODE (pat) == CLOBBER && LRA_TEMP_CLOBBER_P (pat))\n+\t    {\n+\t      /* Remove clobbers temporarily created in LRA.  We don't\n+\t\t need them anymore and don't want to waste compiler\n+\t\t time processing them in a few subsequent passes.  */\n+\t      lra_invalidate_insn_data (insn);\n+\t      remove_insn (insn);\n+\t      continue;\n+\t    }\n+\n \t  lra_insn_recog_data_t id = lra_get_insn_recog_data (insn);\n \t  bool insn_change_p = false;\n "}, {"sha": "9c4e5bf5cfed0a6a19433d616dae8ac819fafdc3", "filename": "gcc/lra.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5cd5a7ed3f3a476ed17f2449598e6309cf7956c/gcc%2Flra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5cd5a7ed3f3a476ed17f2449598e6309cf7956c/gcc%2Flra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra.c?ref=c5cd5a7ed3f3a476ed17f2449598e6309cf7956c", "patch": "@@ -2334,7 +2334,7 @@ lra (FILE *f)\n     }\n   restore_scratches ();\n   lra_eliminate (true);\n-  lra_hard_reg_substitution ();\n+  lra_final_code_change ();\n   lra_in_progress = 0;\n   lra_clear_live_ranges ();\n   lra_live_ranges_finish ();"}, {"sha": "4ee27d99cfec485dd5373932b820dcda5cb28d63", "filename": "gcc/rtl.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5cd5a7ed3f3a476ed17f2449598e6309cf7956c/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5cd5a7ed3f3a476ed17f2449598e6309cf7956c/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=c5cd5a7ed3f3a476ed17f2449598e6309cf7956c", "patch": "@@ -283,7 +283,8 @@ struct GTY((chain_next (\"RTX_NEXT (&%h)\"),\n      1 in a NOTE, or EXPR_LIST for a const call.\n      1 in a JUMP_INSN of an annulling branch.\n      1 in a CONCAT is VAL_EXPR_IS_CLOBBERED in var-tracking.c.\n-     1 in a preserved VALUE is PRESERVED_VALUE_P in cselib.c.  */\n+     1 in a preserved VALUE is PRESERVED_VALUE_P in cselib.c.\n+     1 in a clobber temporarily created for LRA.  */\n   unsigned int unchanging : 1;\n   /* 1 in a MEM or ASM_OPERANDS expression if the memory reference is volatile.\n      1 in an INSN, CALL_INSN, JUMP_INSN, CODE_LABEL, BARRIER, or NOTE"}]}