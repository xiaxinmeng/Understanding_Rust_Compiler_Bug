{"sha": "c0b6224a6e147ba90d7df5dc9d556f42d0bf6a28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBiNjIyNGE2ZTE0N2JhOTBkN2RmNWRjOWQ1NTZmNDJkMGJmNmEyOA==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@codesourcery.com", "date": "2011-07-11T19:41:11Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2011-07-11T19:41:11Z"}, "message": "genautomata.c (add_arc): Return void.\n\n\t* genautomata.c (add_arc): Return void.  All callers changed.\n\t(make_automaton): Remove dead code.\n\nFrom-SVN: r176179", "tree": {"sha": "9d9bebce97e923e842aa0827ab7a9f3ffe3fa7d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d9bebce97e923e842aa0827ab7a9f3ffe3fa7d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0b6224a6e147ba90d7df5dc9d556f42d0bf6a28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0b6224a6e147ba90d7df5dc9d556f42d0bf6a28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0b6224a6e147ba90d7df5dc9d556f42d0bf6a28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0b6224a6e147ba90d7df5dc9d556f42d0bf6a28/comments", "author": null, "committer": null, "parents": [{"sha": "7263c6d715f45580abda86e3617804524d28853b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7263c6d715f45580abda86e3617804524d28853b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7263c6d715f45580abda86e3617804524d28853b"}], "stats": {"total": 25, "additions": 10, "deletions": 15}, "files": [{"sha": "7fb19da7596981a43ab7e345cc5719b5c1c873f5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0b6224a6e147ba90d7df5dc9d556f42d0bf6a28/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0b6224a6e147ba90d7df5dc9d556f42d0bf6a28/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c0b6224a6e147ba90d7df5dc9d556f42d0bf6a28", "patch": "@@ -1,3 +1,8 @@\n+2011-07-11  Bernd Schmidt  <bernds@codesourcery.com>\n+\n+\t* genautomata.c (add_arc): Return void.  All callers changed.\n+\t(make_automaton): Remove dead code.\n+\n 2011-07-11  Richard Henderson  <rth@redhat.com>\n \n \t* dwarf2cfi.c (DW_STACK_POINTER_REGNUM): New."}, {"sha": "71809661592f703d2c3440582a8c4de2bf700d74", "filename": "gcc/genautomata.c", "status": "modified", "additions": 5, "deletions": 15, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0b6224a6e147ba90d7df5dc9d556f42d0bf6a28/gcc%2Fgenautomata.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0b6224a6e147ba90d7df5dc9d556f42d0bf6a28/gcc%2Fgenautomata.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenautomata.c?ref=c0b6224a6e147ba90d7df5dc9d556f42d0bf6a28", "patch": "@@ -3908,16 +3908,16 @@ find_arc (state_t from_state, state_t to_state, ainsn_t insn)\n   return NULL;\n }\n \n-/* The function adds arc from FROM_STATE to TO_STATE marked by AINSN.\n-   The function returns added arc (or already existing arc).  */\n-static arc_t\n+/* The function adds arc from FROM_STATE to TO_STATE marked by AINSN,\n+   unless such an arc already exists.  */\n+static void\n add_arc (state_t from_state, state_t to_state, ainsn_t ainsn)\n {\n   arc_t new_arc;\n \n   new_arc = find_arc (from_state, to_state, ainsn);\n   if (new_arc != NULL)\n-    return new_arc;\n+    return;\n   if (first_free_arc == NULL)\n     {\n #ifndef NDEBUG\n@@ -3940,7 +3940,6 @@ add_arc (state_t from_state, state_t to_state, ainsn_t ainsn)\n   from_state->first_out_arc = new_arc;\n   from_state->num_out_arcs++;\n   new_arc->next_arc_marked_by_insn = NULL;\n-  return new_arc;\n }\n \n /* The function returns the first arc starting from STATE.  */\n@@ -5464,7 +5463,6 @@ make_automaton (automaton_t automaton)\n   state_t start_state;\n   state_t state2;\n   ainsn_t advance_cycle_ainsn;\n-  arc_t added_arc;\n   VEC(state_t, heap) *state_stack = VEC_alloc(state_t, heap, 150);\n   int states_n;\n   reserv_sets_t reservs_matter = form_reservs_matter (automaton);\n@@ -5489,7 +5487,6 @@ make_automaton (automaton_t automaton)\n               {\n \t\t/* We process alt_states in the same order as they are\n                    present in the description.  */\n-\t\tadded_arc = NULL;\n                 for (alt_state = ainsn->alt_states;\n                      alt_state != NULL;\n                      alt_state = alt_state->next_alt_state)\n@@ -5507,18 +5504,11 @@ make_automaton (automaton_t automaton)\n \t\t\t    if (progress_flag && states_n % 100 == 0)\n \t\t\t      fprintf (stderr, \".\");\n                           }\n-\t\t\tadded_arc = add_arc (state, state2, ainsn);\n+\t\t\tadd_arc (state, state2, ainsn);\n \t\t\tif (!ndfa_flag)\n \t\t\t  break;\n                       }\n                   }\n-\t\tif (!ndfa_flag && added_arc != NULL)\n-\t\t  {\n-\t\t    for (alt_state = ainsn->alt_states;\n-\t\t\t alt_state != NULL;\n-\t\t\t alt_state = alt_state->next_alt_state)\n-\t\t      state2 = alt_state->state;\n-\t\t  }\n               }\n             else\n               advance_cycle_ainsn = ainsn;"}]}