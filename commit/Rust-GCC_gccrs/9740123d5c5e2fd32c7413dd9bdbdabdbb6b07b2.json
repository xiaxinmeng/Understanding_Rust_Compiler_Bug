{"sha": "9740123d5c5e2fd32c7413dd9bdbdabdbb6b07b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc0MDEyM2Q1YzVlMmZkMzJjNzQxM2RkOWJkYmRhYmRiYjZiMDdiMg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-03-11T18:12:30Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-03-11T18:12:30Z"}, "message": "(jump_optimize): When handle a USE insn before an unconditional jump...\n\n(jump_optimize): When handle a USE insn before an\nunconditional jump, disable the optimization if the USE is the\nonly insn in the loop.\n\nFrom-SVN: r11512", "tree": {"sha": "2a53ff3f2d6ce490d198c0c9e372b9b4f35979bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a53ff3f2d6ce490d198c0c9e372b9b4f35979bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9740123d5c5e2fd32c7413dd9bdbdabdbb6b07b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9740123d5c5e2fd32c7413dd9bdbdabdbb6b07b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9740123d5c5e2fd32c7413dd9bdbdabdbb6b07b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9740123d5c5e2fd32c7413dd9bdbdabdbb6b07b2/comments", "author": null, "committer": null, "parents": [{"sha": "8319988283e6855de0b07f30c76c2bb06f583ee8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8319988283e6855de0b07f30c76c2bb06f583ee8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8319988283e6855de0b07f30c76c2bb06f583ee8"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "2b9218a776302076a0f92d2a9a33d2e9fd721558", "filename": "gcc/jump.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9740123d5c5e2fd32c7413dd9bdbdabdbb6b07b2/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9740123d5c5e2fd32c7413dd9bdbdabdbb6b07b2/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=9740123d5c5e2fd32c7413dd9bdbdabdbb6b07b2", "patch": "@@ -682,7 +682,15 @@ jump_optimize (f, cross_jump, noop_moves, after_regscan)\n \t      && (temp1 = prev_nonnote_insn (JUMP_LABEL (insn))) != 0\n \t      && (GET_CODE (temp1) == BARRIER\n \t\t  || (GET_CODE (temp1) == INSN\n-\t\t      && rtx_equal_p (PATTERN (temp), PATTERN (temp1)))))\n+\t\t      && rtx_equal_p (PATTERN (temp), PATTERN (temp1))))\n+\t      /* Don't do this optimization if we have a loop containing only\n+\t\t the USE instruction, and the loop start label has a usage\n+\t\t count of 1.  This is because we will redo this optimization\n+\t\t everytime through the outer loop, and jump opt will never\n+\t\t exit.  */\n+\t      && ! ((temp2 = prev_nonnote_insn (temp)) != 0\n+\t\t    && temp2 == JUMP_LABEL (insn)\n+\t\t    && LABEL_NUSES (temp2) == 1))\n \t    {\n \t      if (GET_CODE (temp1) == BARRIER)\n \t\t{"}]}