{"sha": "a3abe41c30c8f779e203452a0b31a33b825565c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTNhYmU0MWMzMGM4Zjc3OWUyMDM0NTJhMGIzMWEzM2I4MjU1NjVjNw==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-11-24T23:29:41Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-11-24T23:29:41Z"}, "message": "cppbuiltin.c (define_builtin_macros_for_type_sizes): Define __FLOAT_WORD_ORDER__ according to FLOAT_WORDS_BIG_ENDIAN.\n\ngcc/\n\t* cppbuiltin.c (define_builtin_macros_for_type_sizes): Define\n\t__FLOAT_WORD_ORDER__ according to FLOAT_WORDS_BIG_ENDIAN.\n\t* config/dfp-bit.h (LIBGCC2_FLOAT_WORDS_BIG_ENDIAN): Delete.\n\t* doc/cpp.texi (__FLOAT_WORD_ORDER__): Document.\n\t* system.h (LIBGCC2_FLOAT_WORDS_BIG_ENDIAN): Poison.\n\nlibgcc/\n\t* config/libbid/bid_conf.h (BID_BIG_ENDIAN): Define in terms of\n\t__FLOAT_WORD_ORDER__.\n\t* config/libbid/bid_gcc_intrinsics.h (LIBGCC2_FLOAT_WORDS_BIG_ENDIAN):\n\tDelete.\n\nlibdecnumber/\n\t* dconfig.h (LIBGCC2_FLOAT_WORDS_BIG_ENDIAN): Delete.\n\t(WORDS_BIG_ENDIAN): Define based on value of __FLOAT_WORD_ORDER__.\n\nFrom-SVN: r167129", "tree": {"sha": "f82e67116455c990ac9fdc580e1af29b8e486995", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f82e67116455c990ac9fdc580e1af29b8e486995"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3abe41c30c8f779e203452a0b31a33b825565c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3abe41c30c8f779e203452a0b31a33b825565c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3abe41c30c8f779e203452a0b31a33b825565c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3abe41c30c8f779e203452a0b31a33b825565c7/comments", "author": null, "committer": null, "parents": [{"sha": "fb9041eab317593ef2d1b38b2258d17e5e17bb6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb9041eab317593ef2d1b38b2258d17e5e17bb6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb9041eab317593ef2d1b38b2258d17e5e17bb6c"}], "stats": {"total": 164, "additions": 133, "deletions": 31}, "files": [{"sha": "85ff5a9a44c16c5497a3064304419a3c62e46ebc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a3abe41c30c8f779e203452a0b31a33b825565c7", "patch": "@@ -1,3 +1,11 @@\n+2010-11-24  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* cppbuiltin.c (define_builtin_macros_for_type_sizes): Define\n+\t__FLOAT_WORD_ORDER__ according to FLOAT_WORDS_BIG_ENDIAN.\n+\t* config/dfp-bit.h (LIBGCC2_FLOAT_WORDS_BIG_ENDIAN): Delete.\n+\t* doc/cpp.texi (__FLOAT_WORD_ORDER__): Document.\n+\t* system.h (LIBGCC2_FLOAT_WORDS_BIG_ENDIAN): Poison.\n+\n 2010-11-24  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/46519"}, {"sha": "c1ee3777aabc3eec5476aca431c163f34ee1f75f", "filename": "gcc/config/dfp-bit.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Fconfig%2Fdfp-bit.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Fconfig%2Fdfp-bit.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdfp-bit.h?ref=a3abe41c30c8f779e203452a0b31a33b825565c7", "patch": "@@ -33,11 +33,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"coretypes.h\"\n #include \"tm.h\"\n \n-#ifndef LIBGCC2_FLOAT_WORDS_BIG_ENDIAN\n-#define LIBGCC2_FLOAT_WORDS_BIG_ENDIAN \\\n-  (__BYTE_ORDER__ != __ORDER_LITTLE_ENDIAN__)\n-#endif\n-\n #ifndef LIBGCC2_LONG_DOUBLE_TYPE_SIZE\n #define LIBGCC2_LONG_DOUBLE_TYPE_SIZE LONG_DOUBLE_TYPE_SIZE\n #endif"}, {"sha": "a32350175a82a7e91f999ef0f6291d1aa431a370", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=a3abe41c30c8f779e203452a0b31a33b825565c7", "patch": "@@ -5639,6 +5639,9 @@ extern tree cxx_omp_clause_dtor\t\t\t(tree, tree);\n extern void cxx_omp_finish_clause\t\t(tree);\n extern bool cxx_omp_privatize_by_reference\t(const_tree);\n \n+/* in name-lookup.c */\n+extern void suggest_alternatives_for (tree);\n+\n /* -- end of C++ */\n \n #endif /* ! GCC_CP_TREE_H */"}, {"sha": "de45efe37d48e8bbcef2effdec5d8326eabd6f82", "filename": "gcc/cp/error.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=a3abe41c30c8f779e203452a0b31a33b825565c7", "patch": "@@ -1700,6 +1700,7 @@ dump_expr (tree t, int flags)\n     case NAMESPACE_DECL:\n     case LABEL_DECL:\n     case OVERLOAD:\n+    case TYPE_DECL:\n     case IDENTIFIER_NODE:\n       dump_decl (t, (flags & ~TFF_DECL_SPECIFIERS) | TFF_NO_FUNCTION_ARGUMENTS);\n       break;"}, {"sha": "9c6be413835b8cd3aaacefbc952c1efde345b3cc", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=a3abe41c30c8f779e203452a0b31a33b825565c7", "patch": "@@ -450,7 +450,10 @@ unqualified_name_lookup_error (tree name)\n   else\n     {\n       if (!objc_diagnose_private_ivar (name))\n-        error (\"%qD was not declared in this scope\", name);\n+\t{\n+\t  error (\"%qD was not declared in this scope\", name);\n+\t  suggest_alternatives_for (name);\n+\t}\n       /* Prevent repeated error messages by creating a VAR_DECL with\n \t this NAME in the innermost block scope.  */\n       if (current_function_decl)"}, {"sha": "0ee80e4d1408c746370f75f356a84c8f18d9da3b", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=a3abe41c30c8f779e203452a0b31a33b825565c7", "patch": "@@ -30,8 +30,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"timevar.h\"\n #include \"toplev.h\"\n #include \"diagnostic-core.h\"\n+#include \"intl.h\"\n #include \"debug.h\"\n #include \"c-family/c-pragma.h\"\n+#include \"params.h\"\n \n /* The bindings for a particular name in a particular scope.  */\n \n@@ -3917,6 +3919,73 @@ remove_hidden_names (tree fns)\n   return fns;\n }\n \n+/* Suggest alternatives for NAME, an IDENTIFIER_NODE for which name\n+   lookup failed.  Search through all available namespaces and print out\n+   possible candidates.  */\n+\n+void\n+suggest_alternatives_for (tree name)\n+{\n+  VEC(tree,heap) *candidates = NULL;\n+  VEC(tree,heap) *namespaces_to_search = NULL;\n+  int max_to_search = PARAM_VALUE (CXX_MAX_NAMESPACES_FOR_DIAGNOSTIC_HELP);\n+  int n_searched = 0;\n+  char *spaces;\n+  const char *str;\n+  tree t;\n+  unsigned ix;\n+\n+  VEC_safe_push (tree, heap, namespaces_to_search, global_namespace);\n+\n+  while (!VEC_empty (tree, namespaces_to_search)\n+\t && n_searched < max_to_search)\n+    {\n+      tree scope = VEC_pop (tree, namespaces_to_search);\n+      struct scope_binding binding = EMPTY_SCOPE_BINDING;\n+      struct cp_binding_level *level = NAMESPACE_LEVEL (scope);\n+\n+      /* Look in this namespace.  */\n+      qualified_lookup_using_namespace (name, scope, &binding, 0);\n+\n+      n_searched++;\n+\n+      if (binding.value)\n+\tVEC_safe_push (tree, heap, candidates, binding.value);\n+\n+      /* Add child namespaces.  */\n+      for (t = level->namespaces; t; t = DECL_CHAIN (t))\n+\tVEC_safe_push (tree, heap, namespaces_to_search, t);\n+    }\n+\n+  /* If we stopped before we could examine all namespaces, inform the\n+     user.  Do this even if we don't have any candidates, since there\n+     might be more candidates further down that we weren't able to\n+     find.  */\n+  if (n_searched >= max_to_search)\n+    inform (input_location,\n+\t    \"maximum limit of %d namespaces searched for %qE\",\n+\t    max_to_search, name);\n+\n+  /* Nothing useful to report.  */\n+  if (VEC_empty (tree, candidates))\n+    return;\n+\n+  str = (VEC_length(tree, candidates) > 1\n+\t ? _(\"suggested alternatives:\")\n+\t : _(\"suggested alternative:\"));\n+  spaces = NULL;\n+\n+  FOR_EACH_VEC_ELT (tree, candidates, ix, t)\n+    {\n+      inform (input_location, \"%s %qE\", (spaces ? spaces : str), t);\n+      spaces = spaces ? spaces : get_spaces (str);\n+    }\n+\n+  VEC_free (tree, heap, candidates);\n+  VEC_free (tree, heap, namespaces_to_search);\n+  free (spaces);\n+}\n+\n /* Unscoped lookup of a global: iterate over current namespaces,\n    considering using-directives.  */\n "}, {"sha": "ee00de5d4682b62b38928b81e644b9459b89b090", "filename": "gcc/cppbuiltin.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Fcppbuiltin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Fcppbuiltin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppbuiltin.c?ref=a3abe41c30c8f779e203452a0b31a33b825565c7", "patch": "@@ -157,6 +157,11 @@ define_builtin_macros_for_type_sizes (cpp_reader *pfile)\n       cpp_define (pfile, \"__BYTE_ORDER__=__ORDER_PDP_ENDIAN__\");\n     }\n \n+  cpp_define_formatted (pfile, \"__FLOAT_WORD_ORDER__=%s\",\n+                        (FLOAT_WORDS_BIG_ENDIAN\n+                         ? \"__ORDER_BIG_ENDIAN__\"\n+                         : \"__ORDER_LITTLE_ENDIAN__\"));\n+\n   /* ptr_type_node can't be used here since ptr_mode is only set when\n      toplev calls backend_init which is not done with -E switch.  */\n   cpp_define_formatted (pfile, \"__SIZEOF_POINTER__=%d\","}, {"sha": "7d78d1213aed55cec1d91da1144c896dfb7ad5fa", "filename": "gcc/doc/cpp.texi", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Fdoc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Fdoc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcpp.texi?ref=a3abe41c30c8f779e203452a0b31a33b825565c7", "patch": "@@ -2289,6 +2289,11 @@ You should use these macros for testing like this:\n #if __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__\n @end smallexample\n \n+@item __FLOAT_WORD_ORDER__\n+@code{__FLOAT_WORD_ORDER__} is defined to one of the values\n+@code{__ORDER_LITTLE_ENDIAN__} or @code{__ORDER_BIG_ENDIAN__} to reflect\n+the layout of the words of multi-word floating-point quantities.\n+\n @item __DEPRECATED\n This macro is defined, with value 1, when compiling a C++ source file\n with warnings about deprecated constructs enabled.  These warnings are"}, {"sha": "fcb66ce92e6549bec81e16317138c0dc1d7cf7a4", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=a3abe41c30c8f779e203452a0b31a33b825565c7", "patch": "@@ -1932,7 +1932,6 @@ lto_fixup_tree (tree *tp, int *walk_subtrees, void *data)\n \t{\n \t  /* walk_tree only handles TREE_OPERANDs. Do the rest here.  */\n \t  lto_fixup_common (t, data);\n-\t  LTO_FIXUP_SUBTREE (t->exp.block);\n \t  *walk_subtrees = 1;\n \t}\n       else"}, {"sha": "2ea00137b2b36d72a9d1a08e0f820b6bf373f95c", "filename": "gcc/params.def", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=a3abe41c30c8f779e203452a0b31a33b825565c7", "patch": "@@ -855,6 +855,15 @@ DEFPARAM (MIN_PARTITION_SIZE,\n \t  \"lto-min-partition\",\n \t  \"Size of minimal paritition for WHOPR (in estimated instructions)\",\n \t  1000, 0, 0)\n+\n+/* Diagnostic parameters.  */\n+\n+DEFPARAM (CXX_MAX_NAMESPACES_FOR_DIAGNOSTIC_HELP,\n+\t  \"cxx-max-namespaces-for-diagnostic-help\",\n+\t  \"Maximum number of namespaces to search for alternatives when \"\n+\t  \"name lookup fails\",\n+\t  1000, 0, 0)\n+\n /*\n Local variables:\n mode:c"}, {"sha": "2f02ae381582d7403e8d9a8c614f440decf42ec3", "filename": "gcc/reload1.c", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=a3abe41c30c8f779e203452a0b31a33b825565c7", "patch": "@@ -6600,17 +6600,6 @@ choose_reload_regs (struct insn_chain *chain)\n \t      && (rld[r].nregs == max_group_size\n \t\t  || ! reg_classes_intersect_p (rld[r].rclass, group_class)))\n \t    search_equiv = rld[r].in;\n-\t  /* If this is an output reload from a simple move insn, look\n-\t     if an equivalence for the input is available.  */\n-\t  else if (inheritance && rld[r].in == 0 && rld[r].out != 0)\n-\t    {\n-\t      rtx set = single_set (insn);\n-\n-\t      if (set\n-\t\t  && rtx_equal_p (rld[r].out, SET_DEST (set))\n-\t\t  && CONSTANT_P (SET_SRC (set)))\n-\t\tsearch_equiv = SET_SRC (set);\n-\t    }\n \n \t  if (search_equiv)\n \t    {"}, {"sha": "fbeab0fd7a6d814aaee065f423daac302e8ff7ff", "filename": "gcc/system.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=a3abe41c30c8f779e203452a0b31a33b825565c7", "patch": "@@ -800,7 +800,8 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n \tTARGET_HANDLE_OFAST TARGET_OPTION_OPTIMIZATION\n \n /* Hooks into libgcc2.  */\n- #pragma GCC poison LIBGCC2_DOUBLE_TYPE_SIZE LIBGCC2_WORDS_BIG_ENDIAN\n+ #pragma GCC poison LIBGCC2_DOUBLE_TYPE_SIZE LIBGCC2_WORDS_BIG_ENDIAN \\\n+   LIBGCC2_FLOAT_WORDS_BIG_ENDIAN\n \n /* Miscellaneous macros that are no longer used.  */\n  #pragma GCC poison USE_MAPPED_LOCATION"}, {"sha": "a9ebce0417ff9b1585d098e63ab45c9205fea772", "filename": "gcc/testsuite/g++.dg/ext/builtin3.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin3.C?ref=a3abe41c30c8f779e203452a0b31a33b825565c7", "patch": "@@ -10,4 +10,5 @@ extern \"C\" int printf(char*, ...);\n \n void foo() {\n   printf(\"abc\"); \t\t// { dg-error \"not declared\" }\n+  // { dg-message \"note\" \"suggested alternative\" { target *-*-* } 12 }\n }"}, {"sha": "3b34ee394dd2052dec429613addc0eb8b6d9e690", "filename": "gcc/testsuite/g++.dg/lookup/error1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ferror1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ferror1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ferror1.C?ref=a3abe41c30c8f779e203452a0b31a33b825565c7", "patch": "@@ -4,6 +4,7 @@\n \n namespace N { int i; }\n void foo() { i; }   // { dg-error \"not declared\" }\n+  // { dg-message \"note\" \"suggested alternative\" { target *-*-* } 6 }\n \n using namespace N;\n void bar() { i; }"}, {"sha": "bc1dc8cb73d7dcb4ed2a0ec93e4f9af46f8fe94a", "filename": "gcc/testsuite/g++.dg/lookup/koenig5.C", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fkoenig5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fkoenig5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fkoenig5.C?ref=a3abe41c30c8f779e203452a0b31a33b825565c7", "patch": "@@ -32,15 +32,18 @@ void g (N::A *a, M::B *b, O::C *c)\n   One (a); // ok\n   One (a, b); // ok\n   One (b); // { dg-error \"not declared\" }\n+  // { dg-message \"note\" \"suggested alternative\" { target *-*-* } 34 }\n \n   Two (c); // ok\n   Two (a, c); // ok\n   Two (a); // { dg-error \"not declared\" }\n+  // { dg-message \"note\" \"suggested alternative\" { target *-*-* } 39 }\n   Two (a, a); // error masked by earlier error\n   Two (b); // error masked by earlier error\n   Two (a, b); // error masked by earlier error\n   \n   Three (b); // ok\n   Three (a, b); // ok\n   Three (a); // { dg-error \"not declared\" }\n+  // { dg-message \"note\" \"suggested alternative\" { target *-*-* } 47 }\n }"}, {"sha": "be0be6936f017edebf983ceb9064942dd99a62cb", "filename": "gcc/testsuite/g++.dg/overload/koenig1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fkoenig1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fkoenig1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fkoenig1.C?ref=a3abe41c30c8f779e203452a0b31a33b825565c7", "patch": "@@ -14,5 +14,6 @@ void g ()\n   B *bp;\n   N::A *ap;\n   f (bp);\t\t\t// { dg-error \"not declared\" }\n+  // { dg-message \"note\" \"suggested alternative\" { target *-*-* } 16 }\n   f (ap);\n }"}, {"sha": "48fc7fafd8ec0288636338f41ddbd48ae87f5212", "filename": "gcc/testsuite/g++.dg/parse/decl-specifier-1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdecl-specifier-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdecl-specifier-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdecl-specifier-1.C?ref=a3abe41c30c8f779e203452a0b31a33b825565c7", "patch": "@@ -13,4 +13,5 @@ N::X X;                           // { dg-error \"\" \"\" }\n int main()\n {\n     return sizeof(X);             // { dg-error \"\" \"\" }\n+    // { dg-message \"note\" \"suggested alternative\" { target *-*-* } 15 }\n }"}, {"sha": "2f60f0c94e26e6d8ff29c8a41070d9c923caabcf", "filename": "gcc/testsuite/g++.dg/template/static10.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fstatic10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fstatic10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fstatic10.C?ref=a3abe41c30c8f779e203452a0b31a33b825565c7", "patch": "@@ -20,4 +20,5 @@ namespace std\n {\n   template<> void\n   vector<int, allocator<int> >::swap(vector<int, allocator<int> >&) { } // { dg-error \"\" }\n+  // { dg-message \"note\" \"suggested alternative\" { target *-*-* } 22 }\n }"}, {"sha": "f13da047cb93ab22884ede5fc6a13c5945d53fa0", "filename": "gcc/testsuite/g++.old-deja/g++.mike/ns5.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fns5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fns5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fns5.C?ref=a3abe41c30c8f779e203452a0b31a33b825565c7", "patch": "@@ -4,3 +4,4 @@ namespace A {\n }\n \n int j = i;\t\t// { dg-error \"\" } \n+  // { dg-message \"note\" \"suggested alternative\" { target *-*-* } 6 }"}, {"sha": "31a71dd35f1ae21810c4d2758b4c71bf29406f73", "filename": "gcc/testsuite/g++.old-deja/g++.mike/ns7.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fns7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fns7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fns7.C?ref=a3abe41c30c8f779e203452a0b31a33b825565c7", "patch": "@@ -6,4 +6,5 @@ namespace A {\n \n namespace B {\n   int j = i;\t// { dg-error \"\" } \n+  // { dg-message \"note\" \"suggested alternative\" { target *-*-* } 8 }\n }"}, {"sha": "67b781dd8cfba12925dc1e242f4168d4fee7d751", "filename": "gcc/testsuite/g++.old-deja/g++.ns/koenig5.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fkoenig5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fkoenig5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fkoenig5.C?ref=a3abe41c30c8f779e203452a0b31a33b825565c7", "patch": "@@ -15,4 +15,5 @@ void g()\n \t\t\t // foo variable first, and therefore do not\n \t\t\t // perform argument-dependent lookup.\n   bar(new X);            // { dg-error \"not declared\" }\n+  // { dg-message \"note\" \"suggested alternative\" { target *-*-* } 17 }\n }"}, {"sha": "f246639d4f4a77b1212e6e31fe282172ff35b802", "filename": "gcc/testsuite/g++.old-deja/g++.ns/koenig9.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fkoenig9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fkoenig9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fkoenig9.C?ref=a3abe41c30c8f779e203452a0b31a33b825565c7", "patch": "@@ -10,4 +10,5 @@ void foo(const char*,...);\n inline void\n bar() {\n   foo(\"\",count);    //  { dg-error \"\" } multiple overloaded count functions\n+  // { dg-message \"note\" \"suggested alternative\" { target *-*-* } 12 }\n }"}, {"sha": "20e49bc7b7d1afa86303d60dbc0b984bf8362923", "filename": "gcc/testsuite/g++.old-deja/g++.other/lineno5.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flineno5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3abe41c30c8f779e203452a0b31a33b825565c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flineno5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flineno5.C?ref=a3abe41c30c8f779e203452a0b31a33b825565c7", "patch": "@@ -16,4 +16,5 @@ namespace tmp {\n class A {\n   public:\n   int kaka(tmp::B = b);\t\t// { dg-error \"\" } no b in scope\n+  // { dg-message \"note\" \"suggested alternative\" { target *-*-* } 18 }\n };"}, {"sha": "101cda9e37cc9b17a18b7a8b5151724de0982fa7", "filename": "libdecnumber/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3abe41c30c8f779e203452a0b31a33b825565c7/libdecnumber%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3abe41c30c8f779e203452a0b31a33b825565c7/libdecnumber%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2FChangeLog?ref=a3abe41c30c8f779e203452a0b31a33b825565c7", "patch": "@@ -1,3 +1,8 @@\n+2010-11-24  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* dconfig.h (LIBGCC2_FLOAT_WORDS_BIG_ENDIAN): Delete.\n+\t(WORDS_BIG_ENDIAN): Define based on value of __FLOAT_WORD_ORDER__.\n+\n 2010-10-23  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* dconfig.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete."}, {"sha": "503cb61e02d9708a4808e7c2806cdf971b9b7ac5", "filename": "libdecnumber/dconfig.h", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3abe41c30c8f779e203452a0b31a33b825565c7/libdecnumber%2Fdconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3abe41c30c8f779e203452a0b31a33b825565c7/libdecnumber%2Fdconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2Fdconfig.h?ref=a3abe41c30c8f779e203452a0b31a33b825565c7", "patch": "@@ -28,12 +28,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"coretypes.h\"\n #include \"tm.h\"\n \n-#ifndef LIBGCC2_FLOAT_WORDS_BIG_ENDIAN\n-#define LIBGCC2_FLOAT_WORDS_BIG_ENDIAN \\\n-  (__BYTE_ORDER__ != __ORDER_LITTLE_ENDIAN__)\n-#endif\n-\n-#if LIBGCC2_FLOAT_WORDS_BIG_ENDIAN\n+#if __FLOAT_WORD_ORDER__ == __ORDER_BIG_ENDIAN__\n #define WORDS_BIGENDIAN 1\n #endif\n "}, {"sha": "0e31d98d5e30c1e31318ae41ea39692cb2062cc5", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3abe41c30c8f779e203452a0b31a33b825565c7/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3abe41c30c8f779e203452a0b31a33b825565c7/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=a3abe41c30c8f779e203452a0b31a33b825565c7", "patch": "@@ -1,3 +1,10 @@\n+2010-11-24  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* config/libbid/bid_conf.h (BID_BIG_ENDIAN): Define in terms of\n+\t__FLOAT_WORD_ORDER__.\n+\t* config/libbid/bid_gcc_intrinsics.h (LIBGCC2_FLOAT_WORDS_BIG_ENDIAN):\n+\tDelete.\n+\n 2010-11-20  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \tPR other/46202"}, {"sha": "93e60edb08af81399110219bd302b7e3f724b8b6", "filename": "libgcc/config/libbid/bid_conf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3abe41c30c8f779e203452a0b31a33b825565c7/libgcc%2Fconfig%2Flibbid%2Fbid_conf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3abe41c30c8f779e203452a0b31a33b825565c7/libgcc%2Fconfig%2Flibbid%2Fbid_conf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Flibbid%2Fbid_conf.h?ref=a3abe41c30c8f779e203452a0b31a33b825565c7", "patch": "@@ -516,7 +516,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #endif\n \n #ifndef BID_BIG_ENDIAN\n-#define BID_BIG_ENDIAN LIBGCC2_FLOAT_WORDS_BIG_ENDIAN\n+#define BID_BIG_ENDIAN __FLOAT_WORD_ORDER__ == __ORDER_BIG_ENDIAN__\n #endif\n \n #ifndef BID_THREAD"}, {"sha": "7d65705a4ddda369e2193996a299fdff28a0138a", "filename": "libgcc/config/libbid/bid_gcc_intrinsics.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3abe41c30c8f779e203452a0b31a33b825565c7/libgcc%2Fconfig%2Flibbid%2Fbid_gcc_intrinsics.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3abe41c30c8f779e203452a0b31a33b825565c7/libgcc%2Fconfig%2Flibbid%2Fbid_gcc_intrinsics.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Flibbid%2Fbid_gcc_intrinsics.h?ref=a3abe41c30c8f779e203452a0b31a33b825565c7", "patch": "@@ -30,11 +30,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"coretypes.h\"\n #include \"tm.h\"\n \n-#ifndef LIBGCC2_FLOAT_WORDS_BIG_ENDIAN\n-#define LIBGCC2_FLOAT_WORDS_BIG_ENDIAN \\\n-  (__BYTE_ORDER__ != __ORDER_LITTLE_ENDIAN__)\n-#endif\n-\n #ifndef LIBGCC2_LONG_DOUBLE_TYPE_SIZE\n #define LIBGCC2_LONG_DOUBLE_TYPE_SIZE LONG_DOUBLE_TYPE_SIZE\n #endif"}]}