{"sha": "e332b68d76a8ce6b16439e235d5013a1182a22a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTMzMmI2OGQ3NmE4Y2U2YjE2NDM5ZTIzNWQ1MDEzYTExODJhMjJhOQ==", "commit": {"author": {"name": "Steve Kargl", "email": "kargls@comcast.net", "date": "2004-05-18T11:09:29Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2004-05-18T11:09:29Z"}, "message": "arith.c (gfc_int2complex): Fix incorrect range checking.\n\n2004-05-17  Steve Kargl  <kargls@comcast.net>\n\n* arith.c (gfc_int2complex): Fix incorrect range checking.\n\nFrom-SVN: r81985", "tree": {"sha": "ccfe841e4c3572a4e4528debf2d21322c1eceefb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ccfe841e4c3572a4e4528debf2d21322c1eceefb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e332b68d76a8ce6b16439e235d5013a1182a22a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e332b68d76a8ce6b16439e235d5013a1182a22a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e332b68d76a8ce6b16439e235d5013a1182a22a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e332b68d76a8ce6b16439e235d5013a1182a22a9/comments", "author": null, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e72f28d00a920022fd3beeb291075ebb06ed82fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e72f28d00a920022fd3beeb291075ebb06ed82fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e72f28d00a920022fd3beeb291075ebb06ed82fd"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "2cfe50d13142d2c1272b4501766ea8861d4b8b0b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e332b68d76a8ce6b16439e235d5013a1182a22a9/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e332b68d76a8ce6b16439e235d5013a1182a22a9/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e332b68d76a8ce6b16439e235d5013a1182a22a9", "patch": "@@ -1,3 +1,7 @@\n+2004-05-17  Steve Kargl  <kargls@comcast.net>\n+\n+\t* arith.c (gfc_int2complex): Fix incorrect range checking.\n+\n 2004-05-18  Paul Brook  <paul@codesourcery.com>\n \n \tPR fortran/13930"}, {"sha": "4c036aef586dddfbdd9edfafbfa306d93cf05595", "filename": "gcc/fortran/arith.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e332b68d76a8ce6b16439e235d5013a1182a22a9/gcc%2Ffortran%2Farith.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e332b68d76a8ce6b16439e235d5013a1182a22a9/gcc%2Ffortran%2Farith.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Farith.c?ref=e332b68d76a8ce6b16439e235d5013a1182a22a9", "patch": "@@ -2595,7 +2595,7 @@ gfc_int2complex (gfc_expr * src, int kind)\n   mpf_set_z (result->value.complex.r, src->value.integer);\n   mpf_set_ui (result->value.complex.i, 0);\n \n-  if ((rc = gfc_check_real_range (result->value.complex.i, kind)) != ARITH_OK)\n+  if ((rc = gfc_check_real_range (result->value.complex.r, kind)) != ARITH_OK)\n     {\n       arith_error (rc, &src->ts, &result->ts, &src->where);\n       gfc_free_expr (result);"}]}