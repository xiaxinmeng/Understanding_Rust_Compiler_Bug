{"sha": "377d876f816bd79423c8092b058bc6eadf0f21ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc3ZDg3NmY4MTZiZDc5NDIzYzgwOTJiMDU4YmM2ZWFkZjBmMjFlZg==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@au.ibm.com", "date": "2006-10-25T22:58:27Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2006-10-25T22:58:27Z"}, "message": "strlen.c: Do not use strcpy.\n\n\t* gcc.c-torture/execute/builtins/strlen.c: Do not use strcpy.\n\tCopy the strings manually, as strcpy may call strlen.\n\nFrom-SVN: r118045", "tree": {"sha": "ead8385d2a1ae56a3a329acc46673c5f3a8402b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ead8385d2a1ae56a3a329acc46673c5f3a8402b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/377d876f816bd79423c8092b058bc6eadf0f21ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/377d876f816bd79423c8092b058bc6eadf0f21ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/377d876f816bd79423c8092b058bc6eadf0f21ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/377d876f816bd79423c8092b058bc6eadf0f21ef/comments", "author": null, "committer": null, "parents": [{"sha": "6db63df90f0937dd1d263763ed39e29d370f8a05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6db63df90f0937dd1d263763ed39e29d370f8a05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6db63df90f0937dd1d263763ed39e29d370f8a05"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "c9d9df92a916ca4b3645fa69f90ab139f7fff17e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/377d876f816bd79423c8092b058bc6eadf0f21ef/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/377d876f816bd79423c8092b058bc6eadf0f21ef/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=377d876f816bd79423c8092b058bc6eadf0f21ef", "patch": "@@ -1,3 +1,8 @@\n+2006-10-26  Ben Elliston  <bje@au.ibm.com>\n+\n+\t* gcc.c-torture/execute/builtins/strlen.c: Do not use strcpy.\n+\tCopy the strings manually, as strcpy may call strlen.\n+\n 2006-10-25  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* gcc.dg/torture/builtin-math-2.c (TESTIT): Use new helper macro."}, {"sha": "3d84c61fd4cb6320252a7e3ebd7d7bbe08b882f7", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/strlen.c", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/377d876f816bd79423c8092b058bc6eadf0f21ef/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrlen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/377d876f816bd79423c8092b058bc6eadf0f21ef/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrlen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrlen.c?ref=377d876f816bd79423c8092b058bc6eadf0f21ef", "patch": "@@ -8,7 +8,14 @@\n    Additional tests written by Roger Sayle, 11/02/2001:\n    Ensure all builtin strlen comparisons against zero are optimized\n    and perform correctly. The multiple calls to strcpy are to prevent\n-   the potentially \"pure\" strlen calls from being removed by CSE. */\n+   the potentially \"pure\" strlen calls from being removed by CSE.\n+\n+   Modifed by Ben Elliston, 2006-10-25:\n+   The multiple calls to strcpy that Roger mentions above are\n+   problematic on systems where strcpy is implemented using strlen\n+   (which this test overrides to call abort).  So, rather than use\n+   strcpy, we perform the identical operations using array indexing\n+   and char assignments.  */\n \n extern void abort (void);\n extern __SIZE_TYPE__ strlen (const char *);\n@@ -33,27 +40,27 @@ main_test(void)\n     abort ();\n \n   ptr = str;\n-  strcpy (ptr, \"nts\");\n+  ptr[0] = 'n'; ptr[1] = 't'; ptr[2] = 's'; ptr[3] = '\\0';\n   if (strlen (ptr) == 0)\n     abort ();\n \n-  strcpy (ptr, \"nts\");\n+  ptr[0] = 'n'; ptr[1] = 't'; ptr[2] = 's'; ptr[3] = '\\0';\n   if (strlen (ptr) < 1)\n     abort ();\n \n-  strcpy (ptr, \"nts\");\n+  ptr[0] = 'n'; ptr[1] = 't'; ptr[2] = 's'; ptr[3] = '\\0';\n   if (strlen (ptr) <= 0)\n     abort ();\n \n-  strcpy (ptr, \"nts\");\n+  ptr[0] = 'n'; ptr[1] = 't'; ptr[2] = 's'; ptr[3] = '\\0';\n   if (strlen (ptr+3) != 0)\n     abort ();\n \n-  strcpy (ptr, \"nts\");\n+  ptr[0] = 'n'; ptr[1] = 't'; ptr[2] = 's'; ptr[3] = '\\0';\n   if (strlen (ptr+3) > 0)\n     abort ();\n \n-  strcpy (ptr, \"nts\");\n+  ptr[0] = 'n'; ptr[1] = 't'; ptr[2] = 's'; ptr[3] = '\\0';\n   if (strlen (str+3) >= 1)\n     abort ();\n "}]}