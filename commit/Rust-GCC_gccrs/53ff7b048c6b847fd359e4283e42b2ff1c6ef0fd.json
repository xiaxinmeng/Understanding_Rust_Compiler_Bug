{"sha": "53ff7b048c6b847fd359e4283e42b2ff1c6ef0fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNmZjdiMDQ4YzZiODQ3ZmQzNTllNDI4M2U0MmIyZmYxYzZlZjBmZA==", "commit": {"author": {"name": "Ed Falis", "email": "falis@adacore.com", "date": "2007-04-06T09:25:39Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-04-06T09:25:39Z"}, "message": "s-carun8.adb, [...] (Compare_Array_?8): modify so that last full word is no longer compared twice.\n\n2007-04-06  Ed Falis  <falis@adacore.com>\n\n\t* s-carun8.adb, s-carsi8.adb (Compare_Array_?8): modify so that last\n\tfull word is no longer compared twice.\n\nFrom-SVN: r123591", "tree": {"sha": "ffd298491c26ecc0ea2814874a7e7bb7d829ae24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ffd298491c26ecc0ea2814874a7e7bb7d829ae24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53ff7b048c6b847fd359e4283e42b2ff1c6ef0fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53ff7b048c6b847fd359e4283e42b2ff1c6ef0fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53ff7b048c6b847fd359e4283e42b2ff1c6ef0fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53ff7b048c6b847fd359e4283e42b2ff1c6ef0fd/comments", "author": null, "committer": null, "parents": [{"sha": "a9a5b8acd29597692a4df9323f790da0d7506c76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9a5b8acd29597692a4df9323f790da0d7506c76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9a5b8acd29597692a4df9323f790da0d7506c76"}], "stats": {"total": 44, "additions": 24, "deletions": 20}, "files": [{"sha": "e890927707ba41431a5a49fad261c9f8c4f098b5", "filename": "gcc/ada/s-carsi8.adb", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53ff7b048c6b847fd359e4283e42b2ff1c6ef0fd/gcc%2Fada%2Fs-carsi8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53ff7b048c6b847fd359e4283e42b2ff1c6ef0fd/gcc%2Fada%2Fs-carsi8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-carsi8.adb?ref=53ff7b048c6b847fd359e4283e42b2ff1c6ef0fd", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2002-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2002-2006 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -80,13 +80,15 @@ package body System.Compare_Array_Signed_8 is\n       --  Here we can go by words\n \n       declare\n-         LeftP  : constant Big_Words_Ptr := To_Big_Words (Left);\n-         RightP : constant Big_Words_Ptr := To_Big_Words (Right);\n-         Clen4  : constant Natural       := Compare_Len / 4 - 1;\n-         Clen4F : constant Natural       := Clen4 * 4;\n+         LeftP                   : constant Big_Words_Ptr :=\n+                                     To_Big_Words (Left);\n+         RightP                  : constant Big_Words_Ptr :=\n+                                     To_Big_Words (Right);\n+         Words_To_Compare        : constant Natural := Compare_Len / 4;\n+         Bytes_Compared_As_Words : constant Natural := Words_To_Compare * 4;\n \n       begin\n-         for J in 0 .. Clen4 loop\n+         for J in 0 .. Words_To_Compare - 1 loop\n             if LeftP (J) /= RightP (J) then\n                return Compare_Array_S8_Unaligned\n                         (AddA (Left,  Address (4 * J)),\n@@ -96,10 +98,10 @@ package body System.Compare_Array_Signed_8 is\n          end loop;\n \n          return Compare_Array_S8_Unaligned\n-                  (AddA (Left,  Address (Clen4F)),\n-                   AddA (Right, Address (Clen4F)),\n-                   Left_Len  - Clen4F,\n-                   Right_Len - Clen4F);\n+                  (AddA (Left,  Address (Bytes_Compared_As_Words)),\n+                   AddA (Right, Address (Bytes_Compared_As_Words)),\n+                   Left_Len  - Bytes_Compared_As_Words,\n+                   Right_Len - Bytes_Compared_As_Words);\n       end;\n    end Compare_Array_S8;\n "}, {"sha": "6699e532f85cbf2c62757d07c5985c3938841db3", "filename": "gcc/ada/s-carun8.adb", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53ff7b048c6b847fd359e4283e42b2ff1c6ef0fd/gcc%2Fada%2Fs-carun8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53ff7b048c6b847fd359e4283e42b2ff1c6ef0fd/gcc%2Fada%2Fs-carun8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-carun8.adb?ref=53ff7b048c6b847fd359e4283e42b2ff1c6ef0fd", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2002-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2002-2006 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -79,13 +79,15 @@ package body System.Compare_Array_Unsigned_8 is\n       --  Here we can go by words\n \n       declare\n-         LeftP  : constant Big_Words_Ptr := To_Big_Words (Left);\n-         RightP : constant Big_Words_Ptr := To_Big_Words (Right);\n-         Clen4  : constant Natural       := Compare_Len / 4 - 1;\n-         Clen4F : constant Natural       := Clen4 * 4;\n+         LeftP                   : constant Big_Words_Ptr :=\n+                                     To_Big_Words (Left);\n+         RightP                  : constant Big_Words_Ptr :=\n+                                     To_Big_Words (Right);\n+         Words_To_Compare        : constant Natural := Compare_Len / 4;\n+         Bytes_Compared_As_Words : constant Natural := Words_To_Compare * 4;\n \n       begin\n-         for J in 0 .. Clen4 loop\n+         for J in 0 .. Words_To_Compare - 1 loop\n             if LeftP (J) /= RightP (J) then\n                return Compare_Array_U8_Unaligned\n                         (AddA (Left,  Address (4 * J)),\n@@ -95,10 +97,10 @@ package body System.Compare_Array_Unsigned_8 is\n          end loop;\n \n          return Compare_Array_U8_Unaligned\n-                  (AddA (Left,  Address (Clen4F)),\n-                   AddA (Right, Address (Clen4F)),\n-                   Left_Len  - Clen4F,\n-                   Right_Len - Clen4F);\n+                  (AddA (Left,  Address (Bytes_Compared_As_Words)),\n+                   AddA (Right, Address (Bytes_Compared_As_Words)),\n+                   Left_Len  - Bytes_Compared_As_Words,\n+                   Right_Len - Bytes_Compared_As_Words);\n       end;\n    end Compare_Array_U8;\n "}]}