{"sha": "9718bc4b03c1a94f7cf64860bbc828aa53c56234", "node_id": "C_kwDOANBUbNoAKDk3MThiYzRiMDNjMWE5NGY3Y2Y2NDg2MGJiYzgyOGFhNTNjNTYyMzQ", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-01-22T22:11:54Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-01-23T03:18:42Z"}, "message": "c++: array temporary at file scope [PR104182]\n\nThis is the same issue as PR104031, but that patch doesn't fix this\ntestcase because in this case, current_function_decl isn't set when we get\nto cp_genericize_target_expr.  But there seems to be no need for\nis_local_temp to check for function scope; !TREE_STATIC should be enough.\n\n\tPR c++/104182\n\ngcc/cp/ChangeLog:\n\n\t* cp-gimplify.cc (cp_genericize_target_expr): Make sure nothing\n\thas set DECL_INITIAL on a TARGET_EXPR slot.\n\t* tree.cc (is_local_temp): Don't check DECL_CONTEXT.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/cpp0x/initlist127.C: New test.", "tree": {"sha": "afb8867506fec1386ffb86456536924737a562b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/afb8867506fec1386ffb86456536924737a562b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9718bc4b03c1a94f7cf64860bbc828aa53c56234", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9718bc4b03c1a94f7cf64860bbc828aa53c56234", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9718bc4b03c1a94f7cf64860bbc828aa53c56234", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9718bc4b03c1a94f7cf64860bbc828aa53c56234/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "053bcc97f4a59e3f2811b8a1edf60fd733a580a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/053bcc97f4a59e3f2811b8a1edf60fd733a580a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/053bcc97f4a59e3f2811b8a1edf60fd733a580a0"}], "stats": {"total": 48, "additions": 41, "deletions": 7}, "files": [{"sha": "d1c653c5fda808ab775c5b94f754788921c28601", "filename": "gcc/cp/cp-gimplify.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9718bc4b03c1a94f7cf64860bbc828aa53c56234/gcc%2Fcp%2Fcp-gimplify.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9718bc4b03c1a94f7cf64860bbc828aa53c56234/gcc%2Fcp%2Fcp-gimplify.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.cc?ref=9718bc4b03c1a94f7cf64860bbc828aa53c56234", "patch": "@@ -931,13 +931,9 @@ static void\n cp_genericize_target_expr (tree *stmt_p)\n {\n   tree slot = TARGET_EXPR_SLOT (*stmt_p);\n-  /* If TARGET_EXPR is created for some global var initializer, the slot\n-     will have NULL and so is_local_temp will return false for it.  If\n-     this is a ssdf, set DECL_CONTEXT now.  */\n-  if (DECL_CONTEXT (slot) == NULL_TREE)\n-    DECL_CONTEXT (slot) = current_function_decl;\n   cp_genericize_init (&TARGET_EXPR_INITIAL (*stmt_p),\n \t\t      TARGET_EXPR_INITIAL (*stmt_p), slot);\n+  gcc_assert (!DECL_INITIAL (slot));\n }\n \n /* Genericization context.  */"}, {"sha": "5d453e497170fe3c9fbfed7f436e9c14f9703806", "filename": "gcc/cp/tree.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9718bc4b03c1a94f7cf64860bbc828aa53c56234/gcc%2Fcp%2Ftree.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9718bc4b03c1a94f7cf64860bbc828aa53c56234/gcc%2Fcp%2Ftree.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.cc?ref=9718bc4b03c1a94f7cf64860bbc828aa53c56234", "patch": "@@ -557,8 +557,7 @@ bool\n is_local_temp (tree decl)\n {\n   return (VAR_P (decl) && DECL_ARTIFICIAL (decl)\n-\t  && !TREE_STATIC (decl)\n-\t  && DECL_FUNCTION_SCOPE_P (decl));\n+\t  && !TREE_STATIC (decl));\n }\n \n /* Set various status flags when building an AGGR_INIT_EXPR object T.  */"}, {"sha": "ebe5924bbf94d4cd8c1173cd5b0c051ee5c8738d", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist127.C", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9718bc4b03c1a94f7cf64860bbc828aa53c56234/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist127.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9718bc4b03c1a94f7cf64860bbc828aa53c56234/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist127.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist127.C?ref=9718bc4b03c1a94f7cf64860bbc828aa53c56234", "patch": "@@ -0,0 +1,39 @@\n+// PR c++/104182\n+// { dg-do run { target c++11 } }\n+\n+#include <initializer_list>\n+\n+int b;\n+\n+struct stringy {\n+  const char *p;\n+  stringy(const char *p): p(p) { ++b; }\n+  const char& operator[](int i) const { return p[i]; }\n+  ~stringy() { --b; }\n+};\n+\n+struct S\n+{\n+  int A;\n+  stringy B;\n+};\n+\n+struct veccy {\n+  S s;\n+  veccy (const std::initializer_list<S> &l): s(*l.begin()) {}\n+  const S& operator[](int i) const { return s; }\n+};\n+\n+struct V\n+{\n+  veccy v;\n+};\n+\n+static const V v{ { { { 237, \"2\" } } } };\n+\n+int main()\n+{\n+  if (v.v[0].A != 237 || v.v[0].B[0] != '2')\n+    __builtin_abort();\n+  return 0;\n+}"}]}