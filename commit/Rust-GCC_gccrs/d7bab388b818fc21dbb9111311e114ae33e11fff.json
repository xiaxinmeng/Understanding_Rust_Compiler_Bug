{"sha": "d7bab388b818fc21dbb9111311e114ae33e11fff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdiYWIzODhiODE4ZmMyMWRiYjkxMTEzMTFlMTE0YWUzM2UxMWZmZg==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-12-18T16:52:17Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-12-18T16:52:17Z"}, "message": "libstdc++: Fix build failure due to missing <langinfo.h> [PR98374]\n\nThis should fix a build failure on Windows which lacks <langinfo.h>,\nfrom which we use nl_langinfo() to obtain the radix character of the\ncurrent locale.  (We can't use the more portable localeconv() from\n<clocale> to obtain the radix character of the current locale here\nbecause it's not thread-safe, unfortunately.)\n\nThis change means that on Windows and other such platforms, we'll just\nalways assume the radix character used by printf is '.' when formatting\na long double through it.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/98374\n\t* src/c++17/floating_to_chars.cc: Guard include of <langinfo.h>\n\twith __has_include.\n\t(__floating_to_chars_precision) [!defined(RADIXCHAR)]: Don't\n\tattempt to obtain the radix character of the current locale,\n\tjust assume it's '.'.", "tree": {"sha": "abbd0e59977691d8178e2eab58f72ee38ef30bde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/abbd0e59977691d8178e2eab58f72ee38ef30bde"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7bab388b818fc21dbb9111311e114ae33e11fff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7bab388b818fc21dbb9111311e114ae33e11fff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7bab388b818fc21dbb9111311e114ae33e11fff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7bab388b818fc21dbb9111311e114ae33e11fff/comments", "author": null, "committer": null, "parents": [{"sha": "266d74647567e610cc6fd6fccb7db31081f538e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/266d74647567e610cc6fd6fccb7db31081f538e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/266d74647567e610cc6fd6fccb7db31081f538e2"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "6470fbb0b95f51ff82588f471c7a337f858da82e", "filename": "libstdc++-v3/src/c++17/floating_to_chars.cc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7bab388b818fc21dbb9111311e114ae33e11fff/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffloating_to_chars.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7bab388b818fc21dbb9111311e114ae33e11fff/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffloating_to_chars.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffloating_to_chars.cc?ref=d7bab388b818fc21dbb9111311e114ae33e11fff", "patch": "@@ -33,7 +33,9 @@\n #include <cmath>\n #include <cstdio>\n #include <cstring>\n-#include <langinfo.h>\n+#if __has_include(<langinfo.h>)\n+# include <langinfo.h> // for nl_langinfo\n+#endif\n #include <optional>\n #include <string_view>\n #include <type_traits>\n@@ -1113,6 +1115,7 @@ template<typename T>\n \t// to handle a radix point that's different from '.'.\n \tchar radix[6] = {'.', '\\0', '\\0', '\\0', '\\0', '\\0'};\n \tif (effective_precision > 0)\n+#ifdef RADIXCHAR\n \t  // ???: Can nl_langinfo() ever return null?\n \t  if (const char* const radix_ptr = nl_langinfo(RADIXCHAR))\n \t    {\n@@ -1121,6 +1124,7 @@ template<typename T>\n \t      // UTF-8 character) wide.\n \t      __glibcxx_assert(radix[4] == '\\0');\n \t    }\n+#endif\n \n \t// Compute straightforward upper bounds on the output length.\n \tint output_length_upper_bound;"}]}