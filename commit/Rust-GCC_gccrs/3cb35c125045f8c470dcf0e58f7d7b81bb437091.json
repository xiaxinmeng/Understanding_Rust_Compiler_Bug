{"sha": "3cb35c125045f8c470dcf0e58f7d7b81bb437091", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2NiMzVjMTI1MDQ1ZjhjNDcwZGNmMGU1OGY3ZDdiODFiYjQzNzA5MQ==", "commit": {"author": {"name": "Changpeng Fang", "email": "changpeng.fang@amd.com", "date": "2010-08-12T22:18:32Z"}, "committer": {"name": "Changpeng Fang", "email": "cfang@gcc.gnu.org", "date": "2010-08-12T22:18:32Z"}, "message": "pr45241 give up dot_prod pattern searching if stmt is outside the loop.\n\n\t* tree-vect-patterns.c (vect_recog_dot_prod_pattern): Give\n\tup dot_prod pattern searching if a stmt is outside the loop.\n\n\t* gcc.dg/vect/no-tree-pre-pr45241.c: New.\n\nFrom-SVN: r163207", "tree": {"sha": "272cdeba51c3ef614b9354e283c5f3383c30e8c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/272cdeba51c3ef614b9354e283c5f3383c30e8c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3cb35c125045f8c470dcf0e58f7d7b81bb437091", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cb35c125045f8c470dcf0e58f7d7b81bb437091", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cb35c125045f8c470dcf0e58f7d7b81bb437091", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cb35c125045f8c470dcf0e58f7d7b81bb437091/comments", "author": {"login": "changpeng", "id": 4239661, "node_id": "MDQ6VXNlcjQyMzk2NjE=", "avatar_url": "https://avatars.githubusercontent.com/u/4239661?v=4", "gravatar_id": "", "url": "https://api.github.com/users/changpeng", "html_url": "https://github.com/changpeng", "followers_url": "https://api.github.com/users/changpeng/followers", "following_url": "https://api.github.com/users/changpeng/following{/other_user}", "gists_url": "https://api.github.com/users/changpeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/changpeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/changpeng/subscriptions", "organizations_url": "https://api.github.com/users/changpeng/orgs", "repos_url": "https://api.github.com/users/changpeng/repos", "events_url": "https://api.github.com/users/changpeng/events{/privacy}", "received_events_url": "https://api.github.com/users/changpeng/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "95718cf89d773741e7b8cc876104b5b6483c1399", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95718cf89d773741e7b8cc876104b5b6483c1399", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95718cf89d773741e7b8cc876104b5b6483c1399"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "e5d92f01ec786a1dbb7253c26fc0d9bed3763b10", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cb35c125045f8c470dcf0e58f7d7b81bb437091/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cb35c125045f8c470dcf0e58f7d7b81bb437091/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3cb35c125045f8c470dcf0e58f7d7b81bb437091", "patch": "@@ -1,3 +1,8 @@\n+2010-08-12  Changpeng Fang  <changpeng.fang@amd.com>\n+\n+\t* tree-vect-patterns.c (vect_recog_dot_prod_pattern): Give\n+\tup dot_prod pattern searching if a stmt is outside the loop.\n+\n 2010-08-12  H.J. Lu  <hongjiu.lu@intel.com>\n \t    Uros Bizjak  <ubizjak@gmail.com>\n "}, {"sha": "e0a2b96e6dc48f45f3530069ef4c5da445210eb7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cb35c125045f8c470dcf0e58f7d7b81bb437091/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cb35c125045f8c470dcf0e58f7d7b81bb437091/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3cb35c125045f8c470dcf0e58f7d7b81bb437091", "patch": "@@ -1,3 +1,8 @@\n+2010-08-12  Changpeng Fang  <changpeng.fang@amd.com>\n+\n+\tPR tree-optimization/45241\n+\t* gcc.dg/vect/no-tree-pre-pr45241.c: New test.\n+\n 2010-08-12  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.target/i386/pr40906-1.c: Add -fno-asynchronous-unwind-tables"}, {"sha": "289a930cd7babfb9ee09311f3f63c66f9072a679", "filename": "gcc/testsuite/gcc.dg/vect/no-tree-pre-pr45241.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cb35c125045f8c470dcf0e58f7d7b81bb437091/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-tree-pre-pr45241.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cb35c125045f8c470dcf0e58f7d7b81bb437091/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-tree-pre-pr45241.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-tree-pre-pr45241.c?ref=3cb35c125045f8c470dcf0e58f7d7b81bb437091", "patch": "@@ -0,0 +1,20 @@\n+/* PR tree-optimization/45241 */\n+/* { dg-do compile } */\n+/* { dg-options \"-ftree-vectorize\" } */\n+\n+int\n+foo (short x)\n+{\n+  short i, y;\n+  int sum;\n+\n+  for (i = 0; i < x; i++)\n+    y = x * i;\n+\n+  for (i = x; i > 0; i--)\n+    sum += y;\n+\n+  return sum;\n+}\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "19df13f63a427abaeb7864a6b734edf0812743f4", "filename": "gcc/tree-vect-patterns.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cb35c125045f8c470dcf0e58f7d7b81bb437091/gcc%2Ftree-vect-patterns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cb35c125045f8c470dcf0e58f7d7b81bb437091/gcc%2Ftree-vect-patterns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-patterns.c?ref=3cb35c125045f8c470dcf0e58f7d7b81bb437091", "patch": "@@ -255,6 +255,11 @@ vect_recog_dot_prod_pattern (gimple last_stmt, tree *type_in, tree *type_out)\n \n   prod_type = half_type;\n   stmt = SSA_NAME_DEF_STMT (oprnd0);\n+\n+  /* It could not be the dot_prod pattern if the stmt is outside the loop.  */\n+  if (!flow_bb_inside_loop_p (loop, gimple_bb (stmt)))\n+    return NULL;\n+\n   /* FORNOW.  Can continue analyzing the def-use chain when this stmt in a phi\n      inside the loop (in case we are analyzing an outer-loop).  */\n   if (!is_gimple_assign (stmt))"}]}