{"sha": "f04cbc3f1767def988ac8191d8c104d804e0faa0", "node_id": "C_kwDOANBUbNoAKGYwNGNiYzNmMTc2N2RlZjk4OGFjODE5MWQ4YzEwNGQ4MDRlMGZhYTA", "commit": {"author": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-04-24T15:14:35Z"}, "committer": {"name": "CohenArthur", "email": "arthur.cohen@embecosm.com", "date": "2023-05-05T07:41:24Z"}, "message": "libproc_macro: Add helpers to construct Procmacro\n\nAdd some helper functions to create Procmacro tagged unions.\n\nChangeLog:\n\n\t* libgrust/libproc_macro/proc_macro.cc (Procmacro::make_derive):\n\tAdd custom derive macro constructor.\n\t(Procmacro::make_attribute): Add attribute macro constructor.\n\t(Procmacro::make_bang): Add bang macro constructor.\n\t* libgrust/libproc_macro/proc_macro.h (struct Procmacro):\n\tAdd helper function prototypes.\n\nSigned-off-by: Pierre-Emmanuel Patry <pierre-emmanuel.patry@embecosm.com>", "tree": {"sha": "6de784f1e85c81e5c801b76b9d8c71175e41d3e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6de784f1e85c81e5c801b76b9d8c71175e41d3e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f04cbc3f1767def988ac8191d8c104d804e0faa0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f04cbc3f1767def988ac8191d8c104d804e0faa0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f04cbc3f1767def988ac8191d8c104d804e0faa0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f04cbc3f1767def988ac8191d8c104d804e0faa0/comments", "author": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e1489810862efafe7d8d4a06d1d9eb25e0eccb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e1489810862efafe7d8d4a06d1d9eb25e0eccb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e1489810862efafe7d8d4a06d1d9eb25e0eccb3"}], "stats": {"total": 43, "additions": 39, "deletions": 4}, "files": [{"sha": "2e50f0afb01a05221e19aa82900a837566198b16", "filename": "libgrust/libproc_macro/proc_macro.cc", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f04cbc3f1767def988ac8191d8c104d804e0faa0/libgrust%2Flibproc_macro%2Fproc_macro.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f04cbc3f1767def988ac8191d8c104d804e0faa0/libgrust%2Flibproc_macro%2Fproc_macro.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgrust%2Flibproc_macro%2Fproc_macro.cc?ref=f04cbc3f1767def988ac8191d8c104d804e0faa0", "patch": "@@ -21,3 +21,32 @@\n // <http://www.gnu.org/licenses/>.\n \n #include \"proc_macro.h\"\n+\n+namespace ProcMacro {\n+\n+Procmacro\n+Procmacro::make_derive (const char *trait_name, const char **attributes,\n+\t\t\tstd::uint64_t size, CustomDeriveMacro macro)\n+{\n+  ProcmacroPayload payload;\n+  payload.custom_derive = {trait_name, attributes, size, macro};\n+  return {CUSTOM_DERIVE, payload};\n+}\n+\n+Procmacro\n+Procmacro::make_attribute (const char *name, AttributeMacro macro)\n+{\n+  ProcmacroPayload payload;\n+  payload.attribute = {name, macro};\n+  return {ATTR, payload};\n+}\n+\n+Procmacro\n+Procmacro::make_bang (const char *name, BangMacro macro)\n+{\n+  ProcmacroPayload payload;\n+  payload.bang = {name, macro};\n+  return {BANG, payload};\n+}\n+\n+} // namespace ProcMacro"}, {"sha": "3022203a5dd59628724312d625d351f1136ea3ae", "filename": "libgrust/libproc_macro/proc_macro.h", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f04cbc3f1767def988ac8191d8c104d804e0faa0/libgrust%2Flibproc_macro%2Fproc_macro.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f04cbc3f1767def988ac8191d8c104d804e0faa0/libgrust%2Flibproc_macro%2Fproc_macro.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgrust%2Flibproc_macro%2Fproc_macro.h?ref=f04cbc3f1767def988ac8191d8c104d804e0faa0", "patch": "@@ -42,23 +42,23 @@ using BangMacro = TokenStream (*) (TokenStream);\n struct CustomDerivePayload\n {\n   // TODO: UTF-8 function name\n-  char *trait_name;\n+  const char *trait_name;\n   // TODO: UTF-8 attributes\n-  char **attributes;\n+  const char **attributes;\n   std::uint64_t attr_size;\n   CustomDeriveMacro macro;\n };\n \n struct AttrPayload\n {\n   // TODO: UTF-8 function name\n-  char *name;\n+  const char *name;\n   AttributeMacro macro;\n };\n \n struct BangPayload\n {\n-  char *name;\n+  const char *name;\n   BangMacro macro;\n };\n }\n@@ -81,6 +81,12 @@ struct Procmacro\n {\n   ProcmacroTag tag;\n   ProcmacroPayload payload;\n+\n+public:\n+  Procmacro make_derive (const char *trait_name, const char **attribute,\n+\t\t\t std::uint64_t size, CustomDeriveMacro macro);\n+  Procmacro make_attribute (const char *name, AttributeMacro macro);\n+  Procmacro make_bang (const char *name, BangMacro macro);\n };\n \n } // namespace ProcMacro"}]}