{"sha": "3dd808fe94257bf7e8af0f30efa8ed5f510fe66b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2RkODA4ZmU5NDI1N2JmN2U4YWYwZjMwZWZhOGVkNWY1MTBmZTY2Yg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2012-08-26T13:49:44Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2012-08-26T13:49:44Z"}, "message": "re PR libstdc++/54297 ([C++11] Segmentation fault with std::async and released shared state)\n\n\tPR libstdc++/54297\n\t* src/c++11/future.cc (~_Async_state_common): Move to...\n\t* src/c++11/compatibility-thread-c++0x.cc (~_Async_state_common):\n\tHere.\n\t(_GLIBCXX_ABI_COMPAT_ASYNC): Rename to _GLIBCXX_ASYNC_ABI_COMPAT.\n\t* include/std/future (_GLIBCXX_ABI_COMPAT_ASYNC): Likewise.\n\nFrom-SVN: r190685", "tree": {"sha": "611c35e7951e71a49d98fe263dfdb80f2693037a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/611c35e7951e71a49d98fe263dfdb80f2693037a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3dd808fe94257bf7e8af0f30efa8ed5f510fe66b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dd808fe94257bf7e8af0f30efa8ed5f510fe66b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3dd808fe94257bf7e8af0f30efa8ed5f510fe66b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dd808fe94257bf7e8af0f30efa8ed5f510fe66b/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14fbeb6cf196102bea8cc203559b7172678dece0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14fbeb6cf196102bea8cc203559b7172678dece0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14fbeb6cf196102bea8cc203559b7172678dece0"}], "stats": {"total": 49, "additions": 36, "deletions": 13}, "files": [{"sha": "88b4848c2cb0d2feac2510c6e799d32699496cde", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dd808fe94257bf7e8af0f30efa8ed5f510fe66b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dd808fe94257bf7e8af0f30efa8ed5f510fe66b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3dd808fe94257bf7e8af0f30efa8ed5f510fe66b", "patch": "@@ -1,3 +1,12 @@\n+2012-08-26  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\tPR libstdc++/54297\n+\t* src/c++11/future.cc (~_Async_state_common): Move to...\n+\t* src/c++11/compatibility-thread-c++0x.cc (~_Async_state_common):\n+\tHere.\n+\t(_GLIBCXX_ABI_COMPAT_ASYNC): Rename to _GLIBCXX_ASYNC_ABI_COMPAT.\n+\t* include/std/future (_GLIBCXX_ABI_COMPAT_ASYNC): Likewise.\n+\n 2012-08-26  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \t    Geoff Romer  <gromer@google.com>\n "}, {"sha": "9568192e5c4af373d46a74267e327408ad84b2de", "filename": "libstdc++-v3/include/std/future", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dd808fe94257bf7e8af0f30efa8ed5f510fe66b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffuture", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dd808fe94257bf7e8af0f30efa8ed5f510fe66b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffuture", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffuture?ref=3dd808fe94257bf7e8af0f30efa8ed5f510fe66b", "patch": "@@ -1427,7 +1427,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   class __future_base::_Async_state_common : public __future_base::_State_base\n   {\n   protected:\n-#if defined(_GLIBCXX_HAVE_TLS) && defined(_GLIBCXX_ABI_COMPAT_ASYNC)\n+#ifdef _GLIBCXX_ASYNC_ABI_COMPAT\n     ~_Async_state_common();\n #else\n     ~_Async_state_common() = default;"}, {"sha": "e5c7eec419e8d39966a31b0159307d087d628647", "filename": "libstdc++-v3/src/c++11/compatibility-thread-c++0x.cc", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dd808fe94257bf7e8af0f30efa8ed5f510fe66b/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-thread-c%2B%2B0x.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dd808fe94257bf7e8af0f30efa8ed5f510fe66b/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-thread-c%2B%2B0x.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-thread-c%2B%2B0x.cc?ref=3dd808fe94257bf7e8af0f30efa8ed5f510fe66b", "patch": "@@ -22,11 +22,16 @@\n // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n // <http://www.gnu.org/licenses/>.\n \n+#include <bits/c++config.h>\n+#if defined(_GLIBCXX_HAVE_TLS) && defined(PIC)\n+#define _GLIBCXX_ASYNC_ABI_COMPAT\n+#endif\n+\n #include <future>\n #include <mutex>\n \n #ifndef __GXX_EXPERIMENTAL_CXX0X__\n-# error \"compatibility-c++0x.cc must be compiled with -std=gnu++0x\"\n+# error \"compatibility-thread-c++0x.cc must be compiled with -std=gnu++0x\"\n #endif\n \n #define _GLIBCXX_ASM_SYMVER(cur, old, version) \\\n@@ -70,3 +75,23 @@ _GLIBCXX_ASM_SYMVER(_ZN9__gnu_cxx11try_to_lockE, _ZSt11try_to_lock, GLIBCXX_3.4.\n \n #endif\n #endif // _GLIBCXX_HAS_GTHREADS && _GLIBCXX_USE_C99_STDINT_TR1\n+\n+\n+// XXX GLIBCXX_ABI Deprecated\n+// gcc-4.7.0\n+// <future> export changes\n+#if defined(_GLIBCXX_HAS_GTHREADS) && defined(_GLIBCXX_USE_C99_STDINT_TR1) \\\n+  && (ATOMIC_INT_LOCK_FREE > 1)\n+#if defined(_GLIBCXX_HAVE_TLS) && defined(PIC)\n+namespace std _GLIBCXX_VISIBILITY(default)\n+{\n+_GLIBCXX_BEGIN_NAMESPACE_VERSION\n+  __future_base::_Async_state_common::~_Async_state_common() { _M_join(); }\n+\n+  // Explicit instantiation due to -fno-implicit-instantiation.\n+  template void call_once(once_flag&, void (thread::*&&)(), reference_wrapper<thread>&&);\n+  template _Bind_simple_helper<void (thread::*)(), reference_wrapper<thread>>::__type __bind_simple(void (thread::*&&)(), reference_wrapper<thread>&&);\n+_GLIBCXX_END_NAMESPACE_VERSION\n+} // namespace std\n+#endif\n+#endif // _GLIBCXX_HAS_GTHREADS && _GLIBCXX_USE_C99_STDINT_TR1"}, {"sha": "05525372618146d4c403cc693668926509bfc27e", "filename": "libstdc++-v3/src/c++11/future.cc", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dd808fe94257bf7e8af0f30efa8ed5f510fe66b/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Ffuture.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dd808fe94257bf7e8af0f30efa8ed5f510fe66b/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Ffuture.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Ffuture.cc?ref=3dd808fe94257bf7e8af0f30efa8ed5f510fe66b", "patch": "@@ -22,8 +22,6 @@\n // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n // <http://www.gnu.org/licenses/>.\n \n-#define _GLIBCXX_ABI_COMPAT_ASYNC\n-\n #include <future>\n \n namespace\n@@ -86,15 +84,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   __future_base::_Result_base::~_Result_base() = default;\n \n   __future_base::_State_base::~_State_base() = default;\n-\n-#ifdef _GLIBCXX_HAVE_TLS\n-  // Exported for compatibility with ABI version 3.4.17\n-  __future_base::_Async_state_common::~_Async_state_common() { _M_join(); }\n-\n-  // Explicit instantiation due to -fno-implicit-instantiation.\n-  template void call_once(once_flag&, void (thread::*&&)(), reference_wrapper<thread>&&);\n-  template _Bind_simple_helper<void (thread::*)(), reference_wrapper<thread>>::__type __bind_simple(void (thread::*&&)(), reference_wrapper<thread>&&);\n-#endif\n #endif\n \n _GLIBCXX_END_NAMESPACE_VERSION"}]}