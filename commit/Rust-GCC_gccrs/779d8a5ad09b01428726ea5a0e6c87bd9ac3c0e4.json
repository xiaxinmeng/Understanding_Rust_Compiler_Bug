{"sha": "779d8a5ad09b01428726ea5a0e6c87bd9ac3c0e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc5ZDhhNWFkMDliMDE0Mjg3MjZlYTVhMGU2Yzg3YmQ5YWMzYzBlNA==", "commit": {"author": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2018-09-24T19:26:04Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2018-09-24T19:26:04Z"}, "message": "cp-tree.h (build_noexcept_spec, [...]): Adjust declarations.\n\n\t* cp-tree.h (build_noexcept_spec, add_exception_specifier): Adjust\n\tdeclarations.\n\t* except.c (build_noexcept_spec): Change the type of the complain\n\tparameter to tsubst_flags_t.\n\t* typeck2.c (add_exception_specifier): Likewise.\n\nFrom-SVN: r264543", "tree": {"sha": "90ae1d01dbde7fc5e25b6c629af5bf2d9b0b94f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90ae1d01dbde7fc5e25b6c629af5bf2d9b0b94f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/779d8a5ad09b01428726ea5a0e6c87bd9ac3c0e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/779d8a5ad09b01428726ea5a0e6c87bd9ac3c0e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/779d8a5ad09b01428726ea5a0e6c87bd9ac3c0e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/779d8a5ad09b01428726ea5a0e6c87bd9ac3c0e4/comments", "author": null, "committer": null, "parents": [{"sha": "06ff274feb26fd569fd167225d29479f5b974c45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06ff274feb26fd569fd167225d29479f5b974c45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06ff274feb26fd569fd167225d29479f5b974c45"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "efbdad83966ff94f4c558d397f10405322a86ccc", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/779d8a5ad09b01428726ea5a0e6c87bd9ac3c0e4/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/779d8a5ad09b01428726ea5a0e6c87bd9ac3c0e4/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=779d8a5ad09b01428726ea5a0e6c87bd9ac3c0e4", "patch": "@@ -6461,7 +6461,7 @@ extern void perform_deferred_noexcept_checks\t(void);\n extern bool nothrow_spec_p\t\t\t(const_tree);\n extern bool type_noexcept_p\t\t\t(const_tree);\n extern bool type_throw_all_p\t\t\t(const_tree);\n-extern tree build_noexcept_spec\t\t\t(tree, int);\n+extern tree build_noexcept_spec\t\t\t(tree, tsubst_flags_t);\n extern void choose_personality_routine\t\t(enum languages);\n extern tree build_must_not_throw_expr\t\t(tree,tree);\n extern tree eh_type_info\t\t\t(tree);\n@@ -7415,7 +7415,7 @@ extern tree build_x_arrow\t\t\t(location_t, tree,\n \t\t\t\t\t\t tsubst_flags_t);\n extern tree build_m_component_ref\t\t(tree, tree, tsubst_flags_t);\n extern tree build_functional_cast\t\t(tree, tree, tsubst_flags_t);\n-extern tree add_exception_specifier\t\t(tree, tree, int);\n+extern tree add_exception_specifier\t\t(tree, tree, tsubst_flags_t);\n extern tree merge_exception_specifiers\t\t(tree, tree);\n \n /* in mangle.c */"}, {"sha": "3449b59b3cc0fa05f8bbb0af6345146e957ad4f2", "filename": "gcc/cp/except.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/779d8a5ad09b01428726ea5a0e6c87bd9ac3c0e4/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/779d8a5ad09b01428726ea5a0e6c87bd9ac3c0e4/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=779d8a5ad09b01428726ea5a0e6c87bd9ac3c0e4", "patch": "@@ -1187,7 +1187,7 @@ type_throw_all_p (const_tree type)\n    constant-expression of EXPR.  COMPLAIN is as for tsubst.  */\n \n tree\n-build_noexcept_spec (tree expr, int complain)\n+build_noexcept_spec (tree expr, tsubst_flags_t complain)\n {\n   /* This isn't part of the signature, so don't bother trying to evaluate\n      it until instantiation.  */"}, {"sha": "fec1db00ca4c5588155e2e4e52534c3baf52449a", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/779d8a5ad09b01428726ea5a0e6c87bd9ac3c0e4/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/779d8a5ad09b01428726ea5a0e6c87bd9ac3c0e4/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=779d8a5ad09b01428726ea5a0e6c87bd9ac3c0e4", "patch": "@@ -2215,7 +2215,7 @@ build_functional_cast (tree exp, tree parms, tsubst_flags_t complain)\n    know what we're doing.  */\n \n tree\n-add_exception_specifier (tree list, tree spec, int complain)\n+add_exception_specifier (tree list, tree spec, tsubst_flags_t complain)\n {\n   bool ok;\n   tree core = spec;"}]}