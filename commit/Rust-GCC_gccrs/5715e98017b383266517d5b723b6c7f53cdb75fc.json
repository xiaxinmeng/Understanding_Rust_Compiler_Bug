{"sha": "5715e98017b383266517d5b723b6c7f53cdb75fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTcxNWU5ODAxN2IzODMyNjY1MTdkNWI3MjNiNmM3ZjUzY2RiNzVmYw==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2016-12-09T19:56:02Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2016-12-09T19:56:02Z"}, "message": "rs6000-passes.def: New file.\n\n2016-12-09  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* config/rs6000/rs6000-passes.def: New file.\n\t* config/rs6000/rs6000-protos.h: Declare make_pass_analyze_swaps.\n\t* config/rs6000/rs6000.c (rs6000_option_override): Remove\n\tregistration of machine-specific passes.\n\t(pass_analyze_swaps::clone): New function.\n\t* config/rs6000/t-rs6000: Define PASSES_EXTRA.\n\nFrom-SVN: r243504", "tree": {"sha": "4d2d7eccf4d6cb7a05bc001fee4cc7b4f0dfd0e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d2d7eccf4d6cb7a05bc001fee4cc7b4f0dfd0e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5715e98017b383266517d5b723b6c7f53cdb75fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5715e98017b383266517d5b723b6c7f53cdb75fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5715e98017b383266517d5b723b6c7f53cdb75fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5715e98017b383266517d5b723b6c7f53cdb75fc/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "46c0848272468db3d6f9a7ed0666331359cd1b49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46c0848272468db3d6f9a7ed0666331359cd1b49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46c0848272468db3d6f9a7ed0666331359cd1b49"}], "stats": {"total": 58, "additions": 49, "deletions": 9}, "files": [{"sha": "8595b5763f210ee5773e6deab913c5e4308c7f52", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5715e98017b383266517d5b723b6c7f53cdb75fc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5715e98017b383266517d5b723b6c7f53cdb75fc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5715e98017b383266517d5b723b6c7f53cdb75fc", "patch": "@@ -1,3 +1,12 @@\n+2016-12-09  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* config/rs6000/rs6000-passes.def: New file.\n+\t* config/rs6000/rs6000-protos.h: Declare make_pass_analyze_swaps.\n+\t* config/rs6000/rs6000.c (rs6000_option_override): Remove\n+\tregistration of machine-specific passes.\n+\t(pass_analyze_swaps::clone): New function.\n+\t* config/rs6000/t-rs6000: Define PASSES_EXTRA.\n+\n 2016-12-09  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \n \tPR ipa/78721"}, {"sha": "19e7c330fd032b9bbee12d9899d45d65a484148e", "filename": "gcc/config/rs6000/rs6000-passes.def", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5715e98017b383266517d5b723b6c7f53cdb75fc/gcc%2Fconfig%2Frs6000%2Frs6000-passes.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5715e98017b383266517d5b723b6c7f53cdb75fc/gcc%2Fconfig%2Frs6000%2Frs6000-passes.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-passes.def?ref=5715e98017b383266517d5b723b6c7f53cdb75fc", "patch": "@@ -0,0 +1,27 @@\n+/* Description of target passes for rs6000\n+   Copyright (C) 2016 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+/*\n+   Macros that can be used in this file:\n+   INSERT_PASS_AFTER (PASS, INSTANCE, TGT_PASS)\n+   INSERT_PASS_BEFORE (PASS, INSTANCE, TGT_PASS)\n+   REPLACE_PASS (PASS, INSTANCE, TGT_PASS)\n+ */\n+\n+  INSERT_PASS_BEFORE (pass_cse, 1, pass_analyze_swaps);"}, {"sha": "1aa89663e0abda8d24134cfdaaf623d2086a39dc", "filename": "gcc/config/rs6000/rs6000-protos.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5715e98017b383266517d5b723b6c7f53cdb75fc/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5715e98017b383266517d5b723b6c7f53cdb75fc/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h?ref=5715e98017b383266517d5b723b6c7f53cdb75fc", "patch": "@@ -258,4 +258,11 @@ extern unsigned char rs6000_class_max_nregs[][LIM_REG_CLASSES];\n extern unsigned char rs6000_hard_regno_nregs[][FIRST_PSEUDO_REGISTER];\n \n extern bool rs6000_linux_float_exceptions_rounding_supported_p (void);\n+\n+/* Pass management.  */\n+namespace gcc { class context; }\n+class rtl_opt_pass;\n+\n+extern rtl_opt_pass *make_pass_analyze_swaps (gcc::context *);\n+\n #endif  /* rs6000-protos.h */"}, {"sha": "55e9548f7669046d008f543397a784e32eb0e8ac", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5715e98017b383266517d5b723b6c7f53cdb75fc/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5715e98017b383266517d5b723b6c7f53cdb75fc/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=5715e98017b383266517d5b723b6c7f53cdb75fc", "patch": "@@ -5203,15 +5203,6 @@ static void\n rs6000_option_override (void)\n {\n   (void) rs6000_option_override_internal (true);\n-\n-  /* Register machine-specific passes.  This needs to be done at start-up.\n-     It's convenient to do it here (like i386 does).  */\n-  opt_pass *pass_analyze_swaps = make_pass_analyze_swaps (g);\n-\n-  struct register_pass_info analyze_swaps_info\n-    = { pass_analyze_swaps, \"cse1\", 1, PASS_POS_INSERT_BEFORE };\n-\n-  register_pass (&analyze_swaps_info);\n }\n \n \f\n@@ -41865,6 +41856,11 @@ class pass_analyze_swaps : public rtl_opt_pass\n       return rs6000_analyze_swaps (fun);\n     }\n \n+  opt_pass *clone ()\n+    {\n+      return new pass_analyze_swaps (m_ctxt);\n+    }\n+\n }; // class pass_analyze_swaps\n \n rtl_opt_pass *"}, {"sha": "17369f4087e00c5d00bf8f00df8cb115b8921e3a", "filename": "gcc/config/rs6000/t-rs6000", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5715e98017b383266517d5b723b6c7f53cdb75fc/gcc%2Fconfig%2Frs6000%2Ft-rs6000", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5715e98017b383266517d5b723b6c7f53cdb75fc/gcc%2Fconfig%2Frs6000%2Ft-rs6000", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-rs6000?ref=5715e98017b383266517d5b723b6c7f53cdb75fc", "patch": "@@ -20,6 +20,7 @@\n \n TM_H += $(srcdir)/config/rs6000/rs6000-builtin.def\n TM_H += $(srcdir)/config/rs6000/rs6000-cpus.def\n+PASSES_EXTRA += $(srcdir)/config/rs6000/rs6000-passes.def\n \n rs6000-c.o: $(srcdir)/config/rs6000/rs6000-c.c\n \t$(COMPILE) $<"}]}