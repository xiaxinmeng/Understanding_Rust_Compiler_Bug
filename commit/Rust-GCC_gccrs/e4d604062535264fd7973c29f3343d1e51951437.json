{"sha": "e4d604062535264fd7973c29f3343d1e51951437", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRkNjA0MDYyNTM1MjY0ZmQ3OTczYzI5ZjMzNDNkMWU1MTk1MTQzNw==", "commit": {"author": {"name": "Dominik Vogt", "email": "vogt@linux.vnet.ibm.com", "date": "2016-12-12T18:23:48Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2016-12-12T18:23:48Z"}, "message": "combine: Handle mode expanding zero_extracts in change_zero_ext.\n\nExample:\n\n  (zero_extract:DI (reg:SI)\n                   (const_int 24)\n                   (const_int 0))\n\n-->\n\n  (and:DI (subreg:DI (lshiftrt:SI (reg:SI) (const_int 8))\n                     0)\n          (const_int 16777215))\n\n\n2016-12-12  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n\n\t* combine.c (change_zero_ext): Handle mode expanding zero_extracts.\n\nFrom-SVN: r243578", "tree": {"sha": "f19df662420b0b99493ed5e8ac17f7c073c29095", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f19df662420b0b99493ed5e8ac17f7c073c29095"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4d604062535264fd7973c29f3343d1e51951437", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4d604062535264fd7973c29f3343d1e51951437", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4d604062535264fd7973c29f3343d1e51951437", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4d604062535264fd7973c29f3343d1e51951437/comments", "author": {"login": "vogtd", "id": 9690100, "node_id": "MDQ6VXNlcjk2OTAxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/9690100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vogtd", "html_url": "https://github.com/vogtd", "followers_url": "https://api.github.com/users/vogtd/followers", "following_url": "https://api.github.com/users/vogtd/following{/other_user}", "gists_url": "https://api.github.com/users/vogtd/gists{/gist_id}", "starred_url": "https://api.github.com/users/vogtd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vogtd/subscriptions", "organizations_url": "https://api.github.com/users/vogtd/orgs", "repos_url": "https://api.github.com/users/vogtd/repos", "events_url": "https://api.github.com/users/vogtd/events{/privacy}", "received_events_url": "https://api.github.com/users/vogtd/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fe366b87159c5ac790045b3e578993d5be6bbdfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe366b87159c5ac790045b3e578993d5be6bbdfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe366b87159c5ac790045b3e578993d5be6bbdfb"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "d0ae5c6d4678e73e62ea294f2cc231ac0a25d535", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4d604062535264fd7973c29f3343d1e51951437/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4d604062535264fd7973c29f3343d1e51951437/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e4d604062535264fd7973c29f3343d1e51951437", "patch": "@@ -1,3 +1,7 @@\n+2016-12-12  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n+\n+\t* combine.c (change_zero_ext): Handle mode expanding zero_extracts.\n+\n 2016-12-12  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/78738"}, {"sha": "19851a2f64cd65cc24494602213f213b13f30b35", "filename": "gcc/combine.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4d604062535264fd7973c29f3343d1e51951437/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4d604062535264fd7973c29f3343d1e51951437/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=e4d604062535264fd7973c29f3343d1e51951437", "patch": "@@ -11237,18 +11237,24 @@ change_zero_ext (rtx pat)\n       if (GET_CODE (x) == ZERO_EXTRACT\n \t  && CONST_INT_P (XEXP (x, 1))\n \t  && CONST_INT_P (XEXP (x, 2))\n-\t  && GET_MODE (XEXP (x, 0)) == mode)\n+\t  && GET_MODE (XEXP (x, 0)) != VOIDmode\n+\t  && GET_MODE_PRECISION (GET_MODE (XEXP (x, 0)))\n+\t      <= GET_MODE_PRECISION (mode))\n \t{\n+\t  machine_mode inner_mode = GET_MODE (XEXP (x, 0));\n+\n \t  size = INTVAL (XEXP (x, 1));\n \n \t  int start = INTVAL (XEXP (x, 2));\n \t  if (BITS_BIG_ENDIAN)\n-\t    start = GET_MODE_PRECISION (mode) - size - start;\n+\t    start = GET_MODE_PRECISION (inner_mode) - size - start;\n \n \t  if (start)\n-\t    x = gen_rtx_LSHIFTRT (mode, XEXP (x, 0), GEN_INT (start));\n+\t    x = gen_rtx_LSHIFTRT (inner_mode, XEXP (x, 0), GEN_INT (start));\n \t  else\n \t    x = XEXP (x, 0);\n+\t  if (mode != inner_mode)\n+\t    x = gen_lowpart_SUBREG (mode, x);\n \t}\n       else if (GET_CODE (x) == ZERO_EXTEND\n \t       && SCALAR_INT_MODE_P (mode)"}]}