{"sha": "88a781e84cdb96003e34195199488855af79c278", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhhNzgxZTg0Y2RiOTYwMDNlMzQxOTUxOTk0ODg4NTVhZjc5YzI3OA==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1995-04-28T01:11:28Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1995-04-28T01:11:28Z"}, "message": "(common_type): Call lookup_attribute instead of value_member.\n\nFrom-SVN: r9524", "tree": {"sha": "5a5cc2809985c4d437ca49ef1746b30f93c24d3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a5cc2809985c4d437ca49ef1746b30f93c24d3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88a781e84cdb96003e34195199488855af79c278", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88a781e84cdb96003e34195199488855af79c278", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88a781e84cdb96003e34195199488855af79c278", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88a781e84cdb96003e34195199488855af79c278/comments", "author": null, "committer": null, "parents": [{"sha": "d56d506a929ba73dcdb2dcae48e70abacac78f12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d56d506a929ba73dcdb2dcae48e70abacac78f12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d56d506a929ba73dcdb2dcae48e70abacac78f12"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "30d6679f6fc67dd847842cc337de9b01443f2bef", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88a781e84cdb96003e34195199488855af79c278/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88a781e84cdb96003e34195199488855af79c278/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=88a781e84cdb96003e34195199488855af79c278", "patch": "@@ -209,14 +209,15 @@ common_type (t1, t2)\n \t  attributes = a2;\n        else\n \t{\n-\t  /* Pick the longest list, and hang on the other\n-\t     list.  */\n+\t  /* Pick the longest list, and hang on the other list.  */\n+\t  /* ??? For the moment we punt on the issue of attrs with args.  */\n \t\n \t  if (list_length (a1) < list_length (a2))\n \t     attributes = a2, a2 = a1;\n \n \t  for (; a2; a2 = TREE_CHAIN (a2))\n-\t     if (!value_member (attributes, a2))\n+\t    if (lookup_attribute (IDENTIFIER_POINTER (TREE_PURPOSE (a2)),\n+\t\t\t\t  attributes) == NULL_TREE)\n \t      {\n \t\ta1 = copy_node (a2);\n \t\tTREE_CHAIN (a1) = attributes;"}]}