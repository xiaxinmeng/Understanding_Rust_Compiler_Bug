{"sha": "0164e59835de81d758fd4c56248ad7a46435fbfa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE2NGU1OTgzNWRlODFkNzU4ZmQ0YzU2MjQ4YWQ3YTQ2NDM1ZmJmYQ==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2020-06-22T21:27:18Z"}, "committer": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2020-06-22T21:31:48Z"}, "message": "build: Use -include instead of conditional include.\n\nAutomake and GNU Make both use the endif keyword, which conflicts and\nelicits an error for matching if/ifdef and endif.\n\nThis patch changes the conditional include to use \"-include\" to prevent\na warning about a possible empty tmake_file.\n\nlibgomp/ChangeLog\n\n2020-06-22  David Edelsohn  <dje.gcc@gmail.com>\n\n\t* Makefile.am: Use -include.\n\t* Makefile.in: Regenerate.\n\nlibatomic/ChangeLog\n\n2020-06-22  David Edelsohn  <dje.gcc@gmail.com>\n\n\t* Makefile.am: Use -include.\n\t* Makefile.in: Regenerate.\n\nlibstdc++-v3/ChangeLog\n\n2020-06-22  David Edelsohn  <dje.gcc@gmail.com>\n\n\t* Makefile.am: Use -include.\n\t* Makefile.in: Regenerate.\n\nlibgfortran/ChangeLog\n\n2020-06-22  David Edelsohn  <dje.gcc@gmail.com>\n\n\t* Makefile.am: Use -include.\n\t* Makefile.in: Regenerate.", "tree": {"sha": "5f33fcb2b515b2ad7f2aeda7c50322d502936ee8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f33fcb2b515b2ad7f2aeda7c50322d502936ee8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0164e59835de81d758fd4c56248ad7a46435fbfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0164e59835de81d758fd4c56248ad7a46435fbfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0164e59835de81d758fd4c56248ad7a46435fbfa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0164e59835de81d758fd4c56248ad7a46435fbfa/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67f6ef3b3804a0ddc6926e992f6020ed95e11ea6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67f6ef3b3804a0ddc6926e992f6020ed95e11ea6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67f6ef3b3804a0ddc6926e992f6020ed95e11ea6"}], "stats": {"total": 32, "additions": 8, "deletions": 24}, "files": [{"sha": "f540d59992b9b6b666ba31e1ca818f536d80b54e", "filename": "libatomic/Makefile.am", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0164e59835de81d758fd4c56248ad7a46435fbfa/libatomic%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0164e59835de81d758fd4c56248ad7a46435fbfa/libatomic%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2FMakefile.am?ref=0164e59835de81d758fd4c56248ad7a46435fbfa", "patch": "@@ -154,8 +154,6 @@ all-multi: $(libatomic_la_LIBADD)\n \t$(MULTIDO) $(AM_MAKEFLAGS) DO=all multi-do # $(MAKE)\n \n # target overrides\n-ifneq ($(tmake_file),)\n-include $(tmake_file)\n-endif\n+-include $(tmake_file)\n \n include $(top_srcdir)/../multilib.am"}, {"sha": "0a51bd55f01fee1419722ace0d24d17b90a39fbf", "filename": "libatomic/Makefile.in", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0164e59835de81d758fd4c56248ad7a46435fbfa/libatomic%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0164e59835de81d758fd4c56248ad7a46435fbfa/libatomic%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2FMakefile.in?ref=0164e59835de81d758fd4c56248ad7a46435fbfa", "patch": "@@ -864,9 +864,7 @@ all-multi: $(libatomic_la_LIBADD)\n \t$(MULTIDO) $(AM_MAKEFLAGS) DO=all multi-do # $(MAKE)\n \n # target overrides\n-ifneq ($(tmake_file),)\n-include $(tmake_file)\n-endif\n+-include $(tmake_file)\n \n # GNU Make needs to see an explicit $(MAKE) variable in the command it\n # runs to enable its job server during parallel builds.  Hence the"}, {"sha": "36b204e1aa31dcd8a47cb3a4b61f4ec48ce13d9f", "filename": "libgfortran/Makefile.am", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0164e59835de81d758fd4c56248ad7a46435fbfa/libgfortran%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0164e59835de81d758fd4c56248ad7a46435fbfa/libgfortran%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.am?ref=0164e59835de81d758fd4c56248ad7a46435fbfa", "patch": "@@ -1237,8 +1237,6 @@ endif\n EXTRA_DIST = $(m4_files)\n \n # target overrides\n-ifneq ($(tmake_file),)\n-include $(tmake_file)\n-endif\n+-include $(tmake_file)\n \n include $(top_srcdir)/../multilib.am"}, {"sha": "fe063e7ff91ed061b8be1d6e0eb75aa7535770e5", "filename": "libgfortran/Makefile.in", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0164e59835de81d758fd4c56248ad7a46435fbfa/libgfortran%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0164e59835de81d758fd4c56248ad7a46435fbfa/libgfortran%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.in?ref=0164e59835de81d758fd4c56248ad7a46435fbfa", "patch": "@@ -7192,9 +7192,7 @@ fpu-target.inc: fpu-target.h $(srcdir)/libgfortran.h\n @MAINTAINER_MODE_TRUE@\t$(M4) -Dfile=$@ -I$(srcdir)/m4 misc_specifics.m4 > $@\n \n # target overrides\n-ifneq ($(tmake_file),)\n-include $(tmake_file)\n-endif\n+-include $(tmake_file)\n \n # GNU Make needs to see an explicit $(MAKE) variable in the command it\n # runs to enable its job server during parallel builds.  Hence the"}, {"sha": "586c930a4d7a98faa81ad1260ff03ac553069317", "filename": "libgomp/Makefile.am", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0164e59835de81d758fd4c56248ad7a46435fbfa/libgomp%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0164e59835de81d758fd4c56248ad7a46435fbfa/libgomp%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FMakefile.am?ref=0164e59835de81d758fd4c56248ad7a46435fbfa", "patch": "@@ -142,8 +142,6 @@ CLEANFILES = $(STAMP_GENINSRC) $(STAMP_BUILD_INFO)\n MAINTAINERCLEANFILES = $(srcdir)/libgomp.info\n \n # target overrides\n-ifneq ($(tmake_file),)\n-include $(tmake_file)\n-endif\n+-include $(tmake_file)\n \n include $(top_srcdir)/../multilib.am"}, {"sha": "b570a942cff5ca73204dc1463b4568c6d76ffdad", "filename": "libgomp/Makefile.in", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0164e59835de81d758fd4c56248ad7a46435fbfa/libgomp%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0164e59835de81d758fd4c56248ad7a46435fbfa/libgomp%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FMakefile.in?ref=0164e59835de81d758fd4c56248ad7a46435fbfa", "patch": "@@ -1440,9 +1440,7 @@ stamp-build-info: libgomp.texi\n \t@touch $@\n \n # target overrides\n-ifneq ($(tmake_file),)\n-include $(tmake_file)\n-endif\n+-include $(tmake_file)\n \n # GNU Make needs to see an explicit $(MAKE) variable in the command it\n # runs to enable its job server during parallel builds.  Hence the"}, {"sha": "f11a13d274d5afe24e825ec24cc8a74f813e1c23", "filename": "libstdc++-v3/Makefile.am", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0164e59835de81d758fd4c56248ad7a46435fbfa/libstdc%2B%2B-v3%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0164e59835de81d758fd4c56248ad7a46435fbfa/libstdc%2B%2B-v3%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.am?ref=0164e59835de81d758fd4c56248ad7a46435fbfa", "patch": "@@ -174,8 +174,6 @@ AM_MAKEFLAGS = \\\n FLAGS_TO_PASS = $(AM_MAKEFLAGS)\n \n # target overrides\n-ifneq ($(tmake_file),)\n-include $(tmake_file)\n-endif\n+-include $(tmake_file)\n \n include $(top_srcdir)/../multilib.am"}, {"sha": "f52872487708ab0fb61b8420e7d29aaa2e54fe7d", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0164e59835de81d758fd4c56248ad7a46435fbfa/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0164e59835de81d758fd4c56248ad7a46435fbfa/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=0164e59835de81d758fd4c56248ad7a46435fbfa", "patch": "@@ -819,9 +819,7 @@ install-dvi:\n TAGS: tags-recursive $(LISP)\n \n # target overrides\n-ifneq ($(tmake_file),)\n-include $(tmake_file)\n-endif\n+-include $(tmake_file)\n \n # GNU Make needs to see an explicit $(MAKE) variable in the command it\n # runs to enable its job server during parallel builds.  Hence the"}]}