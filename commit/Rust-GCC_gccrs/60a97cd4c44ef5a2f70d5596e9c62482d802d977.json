{"sha": "60a97cd4c44ef5a2f70d5596e9c62482d802d977", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBhOTdjZDRjNDRlZjVhMmY3MGQ1NTk2ZTljNjI0ODJkODAyZDk3Nw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-07-09T18:36:15Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-07-09T18:36:15Z"}, "message": "* c-lang.c (start_cdtor): Remove extra parameter from start_function.\n\nFrom-SVN: r43865", "tree": {"sha": "1b598b0d4c60b5ef73a47997321e02687768f080", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b598b0d4c60b5ef73a47997321e02687768f080"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60a97cd4c44ef5a2f70d5596e9c62482d802d977", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60a97cd4c44ef5a2f70d5596e9c62482d802d977", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60a97cd4c44ef5a2f70d5596e9c62482d802d977", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60a97cd4c44ef5a2f70d5596e9c62482d802d977/comments", "author": null, "committer": null, "parents": [{"sha": "053a35af653f47c7fa2d8addc2a37714446e9948", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/053a35af653f47c7fa2d8addc2a37714446e9948", "html_url": "https://github.com/Rust-GCC/gccrs/commit/053a35af653f47c7fa2d8addc2a37714446e9948"}], "stats": {"total": 143, "additions": 88, "deletions": 55}, "files": [{"sha": "6a0bbc41780133913680eb6d116ebb6a8b2793f1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 87, "deletions": 54, "changes": 141, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60a97cd4c44ef5a2f70d5596e9c62482d802d977/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60a97cd4c44ef5a2f70d5596e9c62482d802d977/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=60a97cd4c44ef5a2f70d5596e9c62482d802d977", "patch": "@@ -1,3 +1,37 @@\n+Mon Jul  9 06:41:07 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* c-lang.c (start_cdtor): Remove extra parameter from start_function.\n+\n+\t* emit-rtl.c (adjust_address_nv, replace_equiv_address_nv): New fcns.\n+\t(operand_subword): Use them.\n+\t(change_address_1): Renamed from change_address; new arg VALIDATE.\n+\t* expr.h: Reflect above changes; change_address now macro.\n+\t* alias.c (canon_rtx): Use replace_equiv_address_nv instead of\n+\tmaking MEM.\n+\t* cselib.c (add_mem_for_addr): Likewise.\n+\t* expr.c (protect_from_queue, emit_move_insn_1): Likewise.\n+\t* regmove.c (try_apply_stack_adjustment): Likewise.\n+\t* reload.c (push_reload, make_memloc): Likewise.\n+\t* reload1.c (eliminate_regs): Likewise.\n+\t* simplify-rtx.c (simplify_replace_rtx): Likewise.\n+\t* caller-save.c (setup_save_areas): Use adjust_address_nv instead of\n+\tadjust_addess.\n+\t* combine.c (make_extraction, simplify_shift_const): Likewise.\n+\t(gen_lowpart_for_combine): Likewise.\n+\t* cse.c (gen_lowpart_if_possible): Likewise.\n+\t* function.c (fixup_var_refs_1, purge_addressof_1): Likewise.\n+\t* expr.c (expand_expr, case COMPONENT_REF): Likewise.\n+\t* optabs.c (gen_move_insn): Likewise.\n+\t* reload1.c (alter_reg): Likewise.\n+\t* simplify-rtx.c (simplify_subreg): Likewise.\n+\t* stmt.c (expand_anon_union_decl): Likewise.\n+\t* recog.c (validate_replace_rtx_1): Likewise.\n+\t(expr.h): Include.\n+\t* Makefile.in (recog.o): Add $(EXPR_H).\n+\t* explow.c (stabilize): Call replace_equiv_address.\n+\t* expr.c (move_by_pieces_1, store_by_pieces_2): Likewise.\n+\t* final.c (alter_subreg): OFFSET is HOST_WIDE_INT.\n+\n 2001-07-03  Andrew Haley  <aph@redhat.com>\n \n \t* expmed.c (store_fixed_bit_field): Don't use a mode bigger than\n@@ -18,50 +52,49 @@\n \t* doc/tm.texi: Document TARGET_ASM_FUNCTION_END_PROLOGUE,\n \tTARGET_ASM_FUNCTION_BEGIN_EPILOGUE, TARGET_ASM_OPEN_PAREN and\n \tTARGET_ASM_CLOSE_PAREN.\n-config:\n-\t* i386/i386.c (TARGET_ASM_OPEN_PAREN, TARGET_ASM_CLOSE_PAREN):\n+\t* config/i386/i386.c (TARGET_ASM_OPEN_PAREN, TARGET_ASM_CLOSE_PAREN):\n \tOverride.\n-\t* pdp11/pdp11.c (TARGET_ASM_OPEN_PAREN, TARGET_ASM_CLOSE_PAREN):\n+\t* config/pdp11/pdp11.c (TARGET_ASM_OPEN_PAREN, TARGET_ASM_CLOSE_PAREN):\n \tOverride.\n-\t* 1750a/1750a.h (ASM_OPEN_PAREN, ASM_CLOSE_PAREN): Remove.\n-\t* a29k/a29k.h: Similarly.\n-\t* alpha/alpha.h: Similarly.\n-\t* arc/arc.h: Similarly.\n-\t* arm/aof.h: Similarly.\n-\t* arm/aout.h: Similarly.\n-\t* avr/avr.h: Similarly.\n-\t* c4x/c4x.h: Similarly.\n-\t* clipper/clipper.h: Similarly.\n-\t* convex/convex.h: Similarly.\n-\t* d30v/d30v.h: Similarly.\n-\t* dsp16xx/dsp16xx.h: Similarly.\n-\t* elxsi/elxsi.h: Similarly.\n-\t* fr30/fr30.h: Similarly.\n-\t* h8300/h8300.h: Similarly.\n-\t* i370/i370.h: Similarly.\n-\t* i386/i386.h: Similarly.\n-\t* i860/i860.h: Similarly.\n-\t* i960/i960.h: Similarly.\n-\t* ia64/ia64.h: Similarly.\n-\t* m32r/m32r.h: Similarly.\n-\t* m68hc11/m68hc11.h: Similarly.\n-\t* m68k/m68k.h: Similarly.\n-\t* m88k/m88k.h: Similarly.\n-\t* mcore/mcore.h: Similarly.\n-\t* mips/mips.h: Similarly.\n-\t* mn10200/mn10200.h: Similarly.\n-\t* mn10300/mn10300.h: Similarly.\n-\t* ns32k/ns32k.h: Similarly.\n-\t* pa/pa.h: Similarly.\n-\t* pdp11/pdp11.h: Similarly.\n-\t* pj/pj.h: Similarly.\n-\t* romp/romp.h: Similarly.\n-\t* rs6000/rs6000.h: Similarly.\n-\t* sh/sh.h: Similarly.\n-\t* sparc/sparc.h: Similarly.\n-\t* v850/v850.h: Similarly.\n-\t* vax/vax.h: Similarly.\n-\t* we32k/we32k.h: Similarly.\n+\t* config/1750a/1750a.h (ASM_OPEN_PAREN, ASM_CLOSE_PAREN): Remove.\n+\t* config/a29k/a29k.h: Similarly.\n+\t* config/alpha/alpha.h: Similarly.\n+\t* config/arc/arc.h: Similarly.\n+\t* config/arm/aof.h: Similarly.\n+\t* config/arm/aout.h: Similarly.\n+\t* config/avr/avr.h: Similarly.\n+\t* config/c4x/c4x.h: Similarly.\n+\t* config/clipper/clipper.h: Similarly.\n+\t* config/convex/convex.h: Similarly.\n+\t* config/d30v/d30v.h: Similarly.\n+\t* config/dsp16xx/dsp16xx.h: Similarly.\n+\t* config/elxsi/elxsi.h: Similarly.\n+\t* config/fr30/fr30.h: Similarly.\n+\t* config/h8300/h8300.h: Similarly.\n+\t* config/i370/i370.h: Similarly.\n+\t* config/i386/i386.h: Similarly.\n+\t* config/i860/i860.h: Similarly.\n+\t* config/i960/i960.h: Similarly.\n+\t* config/ia64/ia64.h: Similarly.\n+\t* config/m32r/m32r.h: Similarly.\n+\t* config/m68hc11/m68hc11.h: Similarly.\n+\t* config/m68k/m68k.h: Similarly.\n+\t* config/m88k/m88k.h: Similarly.\n+\t* config/mcore/mcore.h: Similarly.\n+\t* config/mips/mips.h: Similarly.\n+\t* config/mn10200/mn10200.h: Similarly.\n+\t* config/mn10300/mn10300.h: Similarly.\n+\t* config/ns32k/ns32k.h: Similarly.\n+\t* config/pa/pa.h: Similarly.\n+\t* config/pdp11/pdp11.h: Similarly.\n+\t* config/pj/pj.h: Similarly.\n+\t* config/romp/romp.h: Similarly.\n+\t* config/rs6000/rs6000.h: Similarly.\n+\t* config/sh/sh.h: Similarly.\n+\t* config/sparc/sparc.h: Similarly.\n+\t* config/v850/v850.h: Similarly.\n+\t* config/vax/vax.h: Similarly.\n+\t* config/we32k/we32k.h: Similarly.\n \n 2001-07-09  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n@@ -153,25 +186,25 @@ config:\n \t(TARGET_ASM_OUT): Update.\n \t* target.h (struct gcc_target): New members function_end_prologue\n \tand function_begin_epilogue.\n-config:\n-\t* 1750/1750.h (ASM_OUTPUT_FUNNAM): Delete as unused.\n-\t* alpha/alpha-protos.h (output_end_prologue): Delete.\n-\t* alpha/alpha.c (output_end_prologue): Rename to\n+\t* config/1750/1750.h (ASM_OUTPUT_FUNNAM): Delete as unused.\n+\t* config/alpha/alpha-protos.h (output_end_prologue): Delete.\n+\t* config/alpha/alpha.c (output_end_prologue): Rename to\n \talpha_output_function_end_prologue.  Use in target struct\n \tand make static.\n-\t* alpha/alpha.h (FUNCTION_END_PROLOGUE): Delete.\n-\t* ia64/ia64-protos.h (ia64_output_end_prologue): Delete.\n-\t* ia64/ia64.c (ia64_output_end_prologue): Rename to\n+\t* config/alpha/alpha.h (FUNCTION_END_PROLOGUE): Delete.\n+\t* config/ia64/ia64-protos.h (ia64_output_end_prologue): Delete.\n+\t* config/ia64/ia64.c (ia64_output_end_prologue): Rename to\n \tia64_output_function_end_prologue.  Use in target struct\n \tand make static.\n \t(ia64_function_prologue, ia64_funciton_epilogue): Rename\n \tmistyped prototypes.\n-\t* ia64/ia64.h (FUNCTION_END_PROLOGUE): Delete.\n-\t* m88k/m88k-protos.h (m88k_end_prologue, m88k_begin_epilogue): Delete.\n-\t* m88k/m88k.c (m88k_end_prologue, m88k_begin_epilogue): Rename\n+\t* config/ia64/ia64.h (FUNCTION_END_PROLOGUE): Delete.\n+\t* config/m88k/m88k-protos.h (m88k_end_prologue, m88k_begin_epilogue):\n+\tDelete.\n+\t* config/m88k/m88k.c (m88k_end_prologue, m88k_begin_epilogue): Rename\n \tan use in target struct, make static.\n-\t* ia64/ia64.h (FUNCTION_END_PROLOGUE, FUNCTION_BEGIN_EPILOGUE): Delete.\n-\n+\t* config/ia64/ia64.h (FUNCTION_END_PROLOGUE, FUNCTION_BEGIN_EPILOGUE):\n+\tDelete.\n \n 2001-07-08  Richard Henderson  <rth@redhat.com>\n "}, {"sha": "3abce8a4955129d376a3569949db119c12be51ab", "filename": "gcc/c-lang.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60a97cd4c44ef5a2f70d5596e9c62482d802d977/gcc%2Fc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60a97cd4c44ef5a2f70d5596e9c62482d802d977/gcc%2Fc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lang.c?ref=60a97cd4c44ef5a2f70d5596e9c62482d802d977", "patch": "@@ -187,7 +187,7 @@ start_cdtor (method_type)\n \t\t  build_nt (CALL_EXPR, fnname,\n \t\t\t    tree_cons (NULL_TREE, NULL_TREE, void_list_node_1),\n \t\t\t    NULL_TREE),\n-\t\t  NULL_TREE, NULL_TREE);\n+\t\t  NULL_TREE);\n   store_parm_decls ();\n \n   current_function_cannot_inline"}]}