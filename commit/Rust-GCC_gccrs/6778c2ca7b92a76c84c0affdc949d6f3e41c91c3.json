{"sha": "6778c2ca7b92a76c84c0affdc949d6f3e41c91c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njc3OGMyY2E3YjkyYTc2Yzg0YzBhZmZkYzk0OWQ2ZjNlNDFjOTFjMw==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2018-06-11T09:17:13Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-06-11T09:17:13Z"}, "message": "[Ada] Minor reformatting\n\n2018-06-11  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch11.adb, exp_unst.adb, inline.adb, sem_ch12.adb, sem_util.adb:\n\tMinor reformatting.\n\t* sinfo.ads: Fix a typo.\n\nFrom-SVN: r261403", "tree": {"sha": "c61cb861c2d9ef8c0af913a2c78d71350b2555ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c61cb861c2d9ef8c0af913a2c78d71350b2555ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6778c2ca7b92a76c84c0affdc949d6f3e41c91c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6778c2ca7b92a76c84c0affdc949d6f3e41c91c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6778c2ca7b92a76c84c0affdc949d6f3e41c91c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6778c2ca7b92a76c84c0affdc949d6f3e41c91c3/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d1ec7de559b75ece7e49da5415426f755916d34f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1ec7de559b75ece7e49da5415426f755916d34f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1ec7de559b75ece7e49da5415426f755916d34f"}], "stats": {"total": 89, "additions": 51, "deletions": 38}, "files": [{"sha": "481f64b133340525b116ea976eac1622e9a92ae5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6778c2ca7b92a76c84c0affdc949d6f3e41c91c3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6778c2ca7b92a76c84c0affdc949d6f3e41c91c3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6778c2ca7b92a76c84c0affdc949d6f3e41c91c3", "patch": "@@ -1,3 +1,9 @@\n+2018-06-11  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch11.adb, exp_unst.adb, inline.adb, sem_ch12.adb, sem_util.adb:\n+\tMinor reformatting.\n+\t* sinfo.ads: Fix a typo.\n+\n 2018-06-11  Ed Schonberg  <schonberg@adacore.com>\n \n \t* inline.adb (Expand_Inlined_Call): If no optimization level is"}, {"sha": "da95b71e55898af3cae4b12bbd1d3592416e3f88", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6778c2ca7b92a76c84c0affdc949d6f3e41c91c3/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6778c2ca7b92a76c84c0affdc949d6f3e41c91c3/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=6778c2ca7b92a76c84c0affdc949d6f3e41c91c3", "patch": "@@ -913,8 +913,8 @@ package body Exp_Ch11 is\n             Cond := Condition (Raise_S);\n \n             --  The only other possibility is a node that is or used to be a\n-            --  simple raise statement. Note that the string expression in\n-            --  the original Raise statement is ignored.\n+            --  simple raise statement. Note that the string expression in the\n+            --  original Raise statement is ignored.\n \n          else\n             Orig := Original_Node (Raise_S);"}, {"sha": "3899de31c3ff881ce5bf20800a6738a992a63f0d", "filename": "gcc/ada/exp_unst.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6778c2ca7b92a76c84c0affdc949d6f3e41c91c3/gcc%2Fada%2Fexp_unst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6778c2ca7b92a76c84c0affdc949d6f3e41c91c3/gcc%2Fada%2Fexp_unst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.adb?ref=6778c2ca7b92a76c84c0affdc949d6f3e41c91c3", "patch": "@@ -1194,8 +1194,8 @@ package body Exp_Unst is\n                Decl : Node_Id;\n \n             begin\n-               --  Subprograms declared in tasks and protected types\n-               --  are reachable and cannot be eliminated.\n+               --  Subprograms declared in tasks and protected types are\n+               --  reachable and cannot be eliminated.\n \n                if In_Synchronized_Unit (STJ.Ent) then\n                   STJ.Reachable := True;"}, {"sha": "4a3e122ddbe28d6c9f650ebd24139dde4e1caaac", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 27, "deletions": 25, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6778c2ca7b92a76c84c0affdc949d6f3e41c91c3/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6778c2ca7b92a76c84c0affdc949d6f3e41c91c3/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=6778c2ca7b92a76c84c0affdc949d6f3e41c91c3", "patch": "@@ -2269,28 +2269,39 @@ package body Inline is\n      Subp      : Entity_Id;\n      Orig_Subp : Entity_Id)\n    is\n-      Loc           : constant Source_Ptr := Sloc (N);\n-      Is_Predef     : constant Boolean :=\n-                        Is_Predefined_Unit (Get_Source_Unit (Subp));\n-      Orig_Bod      : constant Node_Id :=\n+      Decls     : constant List_Id    := New_List;\n+      Is_Predef : constant Boolean    :=\n+                    Is_Predefined_Unit (Get_Source_Unit (Subp));\n+      Loc       : constant Source_Ptr := Sloc (N);\n+      Orig_Bod  : constant Node_Id    :=\n                     Body_To_Inline (Unit_Declaration_Node (Subp));\n+\n       Uses_Back_End : constant Boolean :=\n-                         Back_End_Inlining and then Optimization_Level > 0;\n+                        Back_End_Inlining and then Optimization_Level > 0;\n       --  The back-end expansion is used if the target supports back-end\n       --  inlining and some level of optimixation is required; otherwise\n       --  the inlining takes place fully as a tree expansion.\n \n       Blk      : Node_Id;\n       Decl     : Node_Id;\n-      Decls    : constant List_Id := New_List;\n-      Exit_Lab : Entity_Id        := Empty;\n+      Exit_Lab : Entity_Id := Empty;\n       F        : Entity_Id;\n       A        : Node_Id;\n-      Lab_Decl : Node_Id          := Empty;\n+      Lab_Decl : Node_Id   := Empty;\n       Lab_Id   : Node_Id;\n       New_A    : Node_Id;\n-      Num_Ret  : Nat              := 0;\n+      Num_Ret  : Nat       := 0;\n       Ret_Type : Entity_Id;\n+      Temp     : Entity_Id;\n+      Temp_Typ : Entity_Id;\n+\n+      Is_Unc      : Boolean;\n+      Is_Unc_Decl : Boolean;\n+      --  If the type returned by the function is unconstrained and the call\n+      --  can be inlined, special processing is required.\n+\n+      Return_Object : Entity_Id := Empty;\n+      --  Entity in declaration in an extended_return_statement\n \n       Targ : Node_Id := Empty;\n       --  The target of the call. If context is an assignment statement then\n@@ -2300,17 +2311,6 @@ package body Inline is\n       Targ1 : Node_Id := Empty;\n       --  A separate target used when the return type is unconstrained\n \n-      Temp     : Entity_Id;\n-      Temp_Typ : Entity_Id;\n-\n-      Return_Object : Entity_Id := Empty;\n-      --  Entity in declaration in an extended_return_statement\n-\n-      Is_Unc      : Boolean;\n-      Is_Unc_Decl : Boolean;\n-      --  If the type returned by the function is unconstrained and the call\n-      --  can be inlined, special processing is required.\n-\n       procedure Declare_Postconditions_Result;\n       --  When generating C code, declare _Result, which may be used in the\n       --  inlined _Postconditions procedure to verify the return value.\n@@ -2963,20 +2963,22 @@ package body Inline is\n                begin\n                   First_Decl := First (Declarations (Blk));\n \n-                  --  If the body is a single extended return statement,\n-                  --  the resulting block is a nested block.\n+                  --  If the body is a single extended return statement,the\n+                  --  resulting block is a nested block.\n \n                   if No (First_Decl) then\n-                        First_Decl := First\n-                          (Statements (Handled_Statement_Sequence (Blk)));\n+                     First_Decl :=\n+                       First (Statements (Handled_Statement_Sequence (Blk)));\n \n                      if Nkind (First_Decl) = N_Block_Statement then\n                         First_Decl := First (Declarations (First_Decl));\n                      end if;\n                   end if;\n \n+                  --  No front-end inlining possible\n+\n                   if Nkind (First_Decl) /= N_Object_Declaration then\n-                     return;  --  No front-end inlining possible,\n+                     return;\n                   end if;\n \n                   if Nkind (Parent (N)) /= N_Assignment_Statement then"}, {"sha": "246d9eb9dc089c82f1bf627159ecdc63cb8c68f4", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6778c2ca7b92a76c84c0affdc949d6f3e41c91c3/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6778c2ca7b92a76c84c0affdc949d6f3e41c91c3/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=6778c2ca7b92a76c84c0affdc949d6f3e41c91c3", "patch": "@@ -9533,7 +9533,7 @@ package body Sem_Ch12 is\n                --  the corresponding private part.\n \n                if Parent (List_Containing (Get_Unit_Instantiation_Node (Par)))\n-                  = Parent (List_Containing (N))\n+                    = Parent (List_Containing (N))\n                  and then Sloc (Freeze_Node (Par)) < Sloc (N)\n                then\n                   Insert_Freeze_Node_For_Instance (N, F_Node);"}, {"sha": "3902d6eb80655cf458b1f7fac00fdd35f0db56cc", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6778c2ca7b92a76c84c0affdc949d6f3e41c91c3/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6778c2ca7b92a76c84c0affdc949d6f3e41c91c3/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=6778c2ca7b92a76c84c0affdc949d6f3e41c91c3", "patch": "@@ -8334,13 +8334,18 @@ package body Sem_Util is\n       --  Search for the equality primitive; return Empty if the primitive is\n       --  not found.\n \n+      ------------------\n+      -- Find_Eq_Prim --\n+      ------------------\n+\n       function Find_Eq_Prim (Prims_List : Elist_Id) return Entity_Id is\n-         Prim_E : Elmt_Id := First_Elmt (Prims_List);\n-         Prim   : Entity_Id;\n+         Prim      : Entity_Id;\n+         Prim_Elmt : Elmt_Id;\n \n       begin\n-         while Present (Prim_E) loop\n-            Prim := Node (Prim_E);\n+         Prim_Elmt := First_Elmt (Prims_List);\n+         while Present (Prim_Elmt) loop\n+            Prim := Node (Prim_Elmt);\n \n             --  Locate primitive equality with the right signature\n \n@@ -8352,16 +8357,16 @@ package body Sem_Util is\n                return Prim;\n             end if;\n \n-            Next_Elmt (Prim_E);\n+            Next_Elmt (Prim_Elmt);\n          end loop;\n \n          return Empty;\n       end Find_Eq_Prim;\n \n       --  Local Variables\n \n-      Full_Type : Entity_Id;\n       Eq_Prim   : Entity_Id;\n+      Full_Type : Entity_Id;\n \n    --  Start of processing for Find_Primitive_Eq\n \n@@ -19320,7 +19325,7 @@ package body Sem_Util is\n    begin\n       --  No marker needs to be created when switch -gnatH (legacy elaboration\n       --  checking mode enabled) is in effect because the legacy ABE mechanism\n-      --  does use markers.\n+      --  does not use markers.\n \n       if Legacy_Elaboration_Checks then\n          return False;"}, {"sha": "22d71955d7e4ec2614fbd5c6480781d00b587482", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6778c2ca7b92a76c84c0affdc949d6f3e41c91c3/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6778c2ca7b92a76c84c0affdc949d6f3e41c91c3/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=6778c2ca7b92a76c84c0affdc949d6f3e41c91c3", "patch": "@@ -2371,7 +2371,7 @@ package Sinfo is\n \n    --  Split_PPC (Flag17)\n    --    When a Pre or Post aspect specification is processed, it is broken\n-   --    into AND THEN sections. The left most section has Split_PPC set to\n+   --    into AND THEN sections. The leftmost section has Split_PPC set to\n    --    False, indicating that it is the original specification (e.g. for\n    --    posting errors). For other sections, Split_PPC is set to True.\n    --    This flag is set in both the N_Aspect_Specification node itself,"}]}