{"sha": "c91f3ac1ffe401c1fee4506347ad602cf49b032e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzkxZjNhYzFmZmU0MDFjMWZlZTQ1MDYzNDdhZDYwMmNmNDliMDMyZQ==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2014-10-24T11:46:04Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2014-10-24T11:46:04Z"}, "message": "cmp_fp_op.inc: New file.\n\n2014-10-24  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* gcc.target/aarch64/advsimd-intrinsics/cmp_fp_op.inc: New file.\n\t* gcc.target/aarch64/advsimd-intrinsics/vcage.c: Likewise.\n\t* gcc.target/aarch64/advsimd-intrinsics/vcagt.c: Likewise.\n\t* gcc.target/aarch64/advsimd-intrinsics/vcale.c: Likewise.\n\t* gcc.target/aarch64/advsimd-intrinsics/vcalt.c: Likewise.\n\nFrom-SVN: r216645", "tree": {"sha": "54a0017829f36eecff2741b10686e2fe468b6806", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54a0017829f36eecff2741b10686e2fe468b6806"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c91f3ac1ffe401c1fee4506347ad602cf49b032e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c91f3ac1ffe401c1fee4506347ad602cf49b032e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c91f3ac1ffe401c1fee4506347ad602cf49b032e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c91f3ac1ffe401c1fee4506347ad602cf49b032e/comments", "author": null, "committer": null, "parents": [{"sha": "ed9f6694fa25f5ddaa1d0d11a3d191615cec2b55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed9f6694fa25f5ddaa1d0d11a3d191615cec2b55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed9f6694fa25f5ddaa1d0d11a3d191615cec2b55"}], "stats": {"total": 284, "additions": 284, "deletions": 0}, "files": [{"sha": "3b30d5dcbef90e530432719552163c516bd5f0d9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91f3ac1ffe401c1fee4506347ad602cf49b032e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91f3ac1ffe401c1fee4506347ad602cf49b032e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c91f3ac1ffe401c1fee4506347ad602cf49b032e", "patch": "@@ -1,3 +1,11 @@\n+2014-10-24  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/cmp_fp_op.inc: New file.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vcage.c: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vcagt.c: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vcale.c: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vcalt.c: Likewise.\n+\n 2014-10-24  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/cmp_op.inc: New file."}, {"sha": "33451d7e61056490779198cb5aa3d2727d23d213", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/cmp_fp_op.inc", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91f3ac1ffe401c1fee4506347ad602cf49b032e/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fcmp_fp_op.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91f3ac1ffe401c1fee4506347ad602cf49b032e/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fcmp_fp_op.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fcmp_fp_op.inc?ref=c91f3ac1ffe401c1fee4506347ad602cf49b032e", "patch": "@@ -0,0 +1,75 @@\n+/* Template file for the validation of comparison operator with\n+   floating-point support.\n+\n+   This file is meant to be included by the relevant test files, which\n+   have to define the intrinsic family to test. If a given intrinsic\n+   supports variants which are not supported by all the other\n+   operators, these can be tested by providing a definition for\n+   EXTRA_TESTS.  */\n+\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+/* Additional expected results declaration, they are initialized in\n+   each test file.  */\n+extern ARRAY(expected2, uint, 32, 2);\n+extern ARRAY(expected2, uint, 32, 4);\n+\n+#define FNNAME1(NAME) exec_ ## NAME\n+#define FNNAME(NAME) FNNAME1(NAME)\n+\n+void FNNAME (INSN_NAME) (void)\n+{\n+  /* Basic test: y=vcomp(x1,x2), then store the result.  */\n+#define TEST_VCOMP1(INSN, Q, T1, T2, T3, W, N)\t\t\t\t\\\n+  VECT_VAR(vector_res, T3, W, N) =\t\t\t\t\t\\\n+    INSN##Q##_##T2##W(VECT_VAR(vector, T1, W, N),\t\t\t\\\n+\t\t      VECT_VAR(vector2, T1, W, N));\t\t\t\\\n+  vst1##Q##_u##W(VECT_VAR(result, T3, W, N), VECT_VAR(vector_res, T3, W, N))\n+\n+#define TEST_VCOMP(INSN, Q, T1, T2, T3, W, N)\t\t\t\t\\\n+  TEST_VCOMP1(INSN, Q, T1, T2, T3, W, N)\n+\n+  DECL_VARIABLE(vector, float, 32, 2);\n+  DECL_VARIABLE(vector, float, 32, 4);\n+  DECL_VARIABLE(vector2, float, 32, 2);\n+  DECL_VARIABLE(vector2, float, 32, 4);\n+  DECL_VARIABLE(vector_res, uint, 32, 2);\n+  DECL_VARIABLE(vector_res, uint, 32, 4);\n+\n+  clean_results ();\n+\n+  /* Initialize input \"vector\" from \"buffer\".  */\n+  VLOAD(vector, buffer, , float, f, 32, 2);\n+  VLOAD(vector, buffer, q, float, f, 32, 4);\n+\n+  /* Choose init value arbitrarily, will be used for vector\n+     comparison.  */\n+  VDUP(vector2, , float, f, 32, 2, -16.0f);\n+  VDUP(vector2, q, float, f, 32, 4, -14.0f);\n+\n+  /* Apply operator named INSN_NAME.  */\n+  TEST_VCOMP(INSN_NAME, , float, f, uint, 32, 2);\n+  CHECK(TEST_MSG, uint, 32, 2, PRIx32, expected, \"\");\n+\n+  TEST_VCOMP(INSN_NAME, q, float, f, uint, 32, 4);\n+  CHECK(TEST_MSG, uint, 32, 4, PRIx32, expected, \"\");\n+\n+  /* Test again, with different input values.  */\n+  VDUP(vector2, , float, f, 32, 2, -10.0f);\n+  VDUP(vector2, q, float, f, 32, 4, 10.0f);\n+\n+  TEST_VCOMP(INSN_NAME, , float, f, uint, 32, 2);\n+  CHECK(TEST_MSG, uint, 32, 2, PRIx32, expected2, \"\");\n+\n+  TEST_VCOMP(INSN_NAME, q, float, f, uint, 32, 4);\n+  CHECK(TEST_MSG, uint, 32, 4, PRIx32, expected2,\"\");\n+}\n+\n+int main (void)\n+{\n+  FNNAME (INSN_NAME) ();\n+\n+  return 0;\n+}"}, {"sha": "219d03f858afe1e9c6a4dd4223aa3280bd420b8f", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vcage.c", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91f3ac1ffe401c1fee4506347ad602cf49b032e/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcage.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91f3ac1ffe401c1fee4506347ad602cf49b032e/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcage.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcage.c?ref=c91f3ac1ffe401c1fee4506347ad602cf49b032e", "patch": "@@ -0,0 +1,52 @@\n+#define INSN_NAME vcage\n+#define TEST_MSG \"VCAGE/VCAGEQ\"\n+\n+#include \"cmp_fp_op.inc\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,int,8,8) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t       0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,int,16,4) [] = { 0x333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,int,32,2) [] = { 0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected,int,64,1) [] = { 0x3333333333333333 };\n+VECT_VAR_DECL(expected,uint,8,8) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,uint,16,4) [] = { 0x333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,uint,32,2) [] = { 0xffffffff, 0x0 };\n+VECT_VAR_DECL(expected,uint,64,1) [] = { 0x3333333333333333 };\n+VECT_VAR_DECL(expected,poly,8,8) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,poly,16,4) [] = { 0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,hfloat,32,2) [] = { 0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected,int,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,int,16,8) [] = { 0x333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t0x333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,int,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected,int,64,2) [] = { 0x3333333333333333,\n+\t\t\t\t\t0x3333333333333333 };\n+VECT_VAR_DECL(expected,uint,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,uint,16,8) [] = { 0x333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t 0x333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,uint,32,4) [] = { 0xffffffff, 0xffffffff,\n+\t\t\t\t\t 0xffffffff, 0x0 };\n+VECT_VAR_DECL(expected,uint,64,2) [] = { 0x3333333333333333,\n+\t\t\t\t\t 0x3333333333333333 };\n+VECT_VAR_DECL(expected,poly,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,poly,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t 0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,hfloat,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t   0x33333333, 0x33333333 };\n+\n+VECT_VAR_DECL(expected2,uint,32,2) [] = { 0xffffffff, 0xffffffff };\n+VECT_VAR_DECL(expected2,uint,32,4) [] = { 0xffffffff, 0xffffffff,\n+\t\t\t\t\t  0xffffffff, 0xffffffff };"}, {"sha": "ed62c8530932d0c6bc4533eaf36a2e8bbe6b0158", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vcagt.c", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91f3ac1ffe401c1fee4506347ad602cf49b032e/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcagt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91f3ac1ffe401c1fee4506347ad602cf49b032e/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcagt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcagt.c?ref=c91f3ac1ffe401c1fee4506347ad602cf49b032e", "patch": "@@ -0,0 +1,51 @@\n+#define INSN_NAME vcagt\n+#define TEST_MSG \"VCAGT/VCAGTQ\"\n+\n+#include \"cmp_fp_op.inc\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,int,8,8) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t       0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,int,16,4) [] = { 0x333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,int,32,2) [] = { 0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected,int,64,1) [] = { 0x3333333333333333 };\n+VECT_VAR_DECL(expected,uint,8,8) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,uint,16,4) [] = { 0x333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,uint,32,2) [] = { 0x0, 0x0 };\n+VECT_VAR_DECL(expected,uint,64,1) [] = { 0x3333333333333333 };\n+VECT_VAR_DECL(expected,poly,8,8) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,poly,16,4) [] = { 0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,hfloat,32,2) [] = { 0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected,int,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,int,16,8) [] = { 0x333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t0x333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,int,32,4) [] = { 0xffffffff, 0xffffffff, 0x0, 0x0 };\n+VECT_VAR_DECL(expected,int,64,2) [] = { 0x3333333333333333,\n+\t\t\t\t\t0x3333333333333333 };\n+VECT_VAR_DECL(expected,uint,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,uint,16,8) [] = { 0x333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t 0x333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,uint,32,4) [] = { 0xffffffff, 0xffffffff,\n+\t\t\t\t\t 0x0, 0x0 };\n+VECT_VAR_DECL(expected,uint,64,2) [] = { 0x3333333333333333,\n+\t\t\t\t\t 0x3333333333333333 };\n+VECT_VAR_DECL(expected,poly,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,poly,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t 0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,hfloat,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t   0x33333333, 0x33333333 };\n+\n+VECT_VAR_DECL(expected2,uint,32,2) [] = { 0xffffffff, 0xffffffff };\n+VECT_VAR_DECL(expected2,uint,32,4) [] = { 0xffffffff, 0xffffffff,\n+\t\t\t\t\t  0xffffffff, 0xffffffff };"}, {"sha": "cc83a395f89251e1bd2327980e6f2abf5a5fd6db", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vcale.c", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91f3ac1ffe401c1fee4506347ad602cf49b032e/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcale.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91f3ac1ffe401c1fee4506347ad602cf49b032e/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcale.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcale.c?ref=c91f3ac1ffe401c1fee4506347ad602cf49b032e", "patch": "@@ -0,0 +1,49 @@\n+#define INSN_NAME vcale\n+#define TEST_MSG \"VCALE/VCALEQ\"\n+\n+#include \"cmp_fp_op.inc\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,int,8,8) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t       0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,int,16,4) [] = { 0x333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,int,32,2) [] = { 0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected,int,64,1) [] = { 0x3333333333333333 };\n+VECT_VAR_DECL(expected,uint,8,8) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,uint,16,4) [] = { 0x333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,uint,32,2) [] = { 0xffffffff, 0xffffffff };\n+VECT_VAR_DECL(expected,uint,64,1) [] = { 0x3333333333333333 };\n+VECT_VAR_DECL(expected,poly,8,8) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,poly,16,4) [] = { 0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,hfloat,32,2) [] = { 0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected,int,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,int,16,8) [] = { 0x333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t0x333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,int,32,4) [] = { 0xffffffff, 0xffffffff, 0x0, 0x0 };\n+VECT_VAR_DECL(expected,int,64,2) [] = { 0x3333333333333333,\n+\t\t\t\t\t0x3333333333333333 };\n+VECT_VAR_DECL(expected,uint,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,uint,16,8) [] = { 0x333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t 0x333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,uint,32,4) [] = { 0x0, 0x0, 0xffffffff, 0xffffffff };\n+VECT_VAR_DECL(expected,uint,64,2) [] = { 0x3333333333333333,\n+\t\t\t\t\t 0x3333333333333333 };\n+VECT_VAR_DECL(expected,poly,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,poly,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t 0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,hfloat,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t   0x33333333, 0x33333333 };\n+\n+VECT_VAR_DECL(expected2,uint,32,2) [] = { 0x0, 0x0 };\n+VECT_VAR_DECL(expected2,uint,32,4) [] = { 0x0, 0x0, 0x0, 0x0 };"}, {"sha": "a60536e0df5f4efa55a923ed825ea8100ece1f4f", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vcalt.c", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91f3ac1ffe401c1fee4506347ad602cf49b032e/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcalt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91f3ac1ffe401c1fee4506347ad602cf49b032e/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcalt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcalt.c?ref=c91f3ac1ffe401c1fee4506347ad602cf49b032e", "patch": "@@ -0,0 +1,49 @@\n+#define INSN_NAME vcalt\n+#define TEST_MSG \"VCALT/VCALTQ\"\n+\n+#include \"cmp_fp_op.inc\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,int,8,8) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t       0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,int,16,4) [] = { 0x333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,int,32,2) [] = { 0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected,int,64,1) [] = { 0x3333333333333333 };\n+VECT_VAR_DECL(expected,uint,8,8) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,uint,16,4) [] = { 0x333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,uint,32,2) [] = { 0x0, 0xffffffff };\n+VECT_VAR_DECL(expected,uint,64,1) [] = { 0x3333333333333333 };\n+VECT_VAR_DECL(expected,poly,8,8) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,poly,16,4) [] = { 0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,hfloat,32,2) [] = { 0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected,int,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,int,16,8) [] = { 0x333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t0x333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,int,32,4) [] = { 0xffffffff, 0xffffffff, 0x0, 0x0 };\n+VECT_VAR_DECL(expected,int,64,2) [] = { 0x3333333333333333,\n+\t\t\t\t\t0x3333333333333333 };\n+VECT_VAR_DECL(expected,uint,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,uint,16,8) [] = { 0x333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t 0x333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,uint,32,4) [] = { 0x0, 0x0, 0x0, 0xffffffff };\n+VECT_VAR_DECL(expected,uint,64,2) [] = { 0x3333333333333333,\n+\t\t\t\t\t 0x3333333333333333 };\n+VECT_VAR_DECL(expected,poly,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,poly,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t 0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,hfloat,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t   0x33333333, 0x33333333 };\n+\n+VECT_VAR_DECL(expected2,uint,32,2) [] = { 0x0, 0x0 };\n+VECT_VAR_DECL(expected2,uint,32,4) [] = { 0x0, 0x0, 0x0, 0x0 };"}]}