{"sha": "0f85303509461f48131fcd3c34d1c159b6771dd1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY4NTMwMzUwOTQ2MWY0ODEzMWZjZDNjMzRkMWMxNTliNjc3MWRkMQ==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2011-08-02T15:07:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T15:07:10Z"}, "message": "cstand.adb (Create_Standard): sets Is_In_ALFA component of standard types.\n\n2011-08-02  Yannick Moy  <moy@adacore.com>\n\n\t* cstand.adb (Create_Standard): sets Is_In_ALFA component of standard\n\ttypes.\n\t* einfo.adb, einfo.ads (Is_In_ALFA): add flag for all entities\n\t(Is_In_ALFA, Set_Is_In_ALFA): new subprograms to access flag Is_In_ALFA\n\t* sem_ch3.adb\n\t(Analyze_Object_Declaration): set Is_In_ALFA flag for objects\n\t(Constrain_Enumeration): set Is_In_ALFA flag for enumeration subtypes\n\t(Constrain_Integer): set Is_In_ALFA flag for integer subtypes\n\t(Enumeration_Type_Declaration): set Is_In_ALFA flag for enumeration\n\ttypes.\n\t(Set_Scalar_Range_For_Subtype): unset Is_In_ALFA flag for subtypes with\n\tnon-static range.\n\t* sem_ch6.adb (Analyze_Return_Type): unset Is_In_ALFA flag for\n\tfunctions whose return type is not in ALFA.\n\t(Analyze_Subprogram_Specification): set Is_In_ALFA flag for subprogram\n\tspecifications.\n\t(Process_Formals): unset Is_In_ALFA flag for subprograms if a\n\tparameter's type is not in ALFA.\n\t* stand.ads (Standard_Type_Is_In_ALFA): array defines which standard\n\ttypes are in ALFA.\n\nFrom-SVN: r177174", "tree": {"sha": "087f4f1beb010168ffcc29e64e612c8fb6af80e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/087f4f1beb010168ffcc29e64e612c8fb6af80e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f85303509461f48131fcd3c34d1c159b6771dd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f85303509461f48131fcd3c34d1c159b6771dd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f85303509461f48131fcd3c34d1c159b6771dd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f85303509461f48131fcd3c34d1c159b6771dd1/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d2b10647195d645708ad8cfc09fa0adf4a394224", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2b10647195d645708ad8cfc09fa0adf4a394224", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2b10647195d645708ad8cfc09fa0adf4a394224"}], "stats": {"total": 170, "additions": 154, "deletions": 16}, "files": [{"sha": "d9c354fbb72a879a7bd5bfd72c24fa6f23d1e581", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f85303509461f48131fcd3c34d1c159b6771dd1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f85303509461f48131fcd3c34d1c159b6771dd1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0f85303509461f48131fcd3c34d1c159b6771dd1", "patch": "@@ -1,3 +1,26 @@\n+2011-08-02  Yannick Moy  <moy@adacore.com>\n+\n+\t* cstand.adb (Create_Standard): sets Is_In_ALFA component of standard\n+\ttypes.\n+\t* einfo.adb, einfo.ads (Is_In_ALFA): add flag for all entities\n+\t(Is_In_ALFA, Set_Is_In_ALFA): new subprograms to access flag Is_In_ALFA\n+\t* sem_ch3.adb\n+\t(Analyze_Object_Declaration): set Is_In_ALFA flag for objects\n+\t(Constrain_Enumeration): set Is_In_ALFA flag for enumeration subtypes\n+\t(Constrain_Integer): set Is_In_ALFA flag for integer subtypes\n+\t(Enumeration_Type_Declaration): set Is_In_ALFA flag for enumeration\n+\ttypes.\n+\t(Set_Scalar_Range_For_Subtype): unset Is_In_ALFA flag for subtypes with\n+\tnon-static range.\n+\t* sem_ch6.adb (Analyze_Return_Type): unset Is_In_ALFA flag for\n+\tfunctions whose return type is not in ALFA.\n+\t(Analyze_Subprogram_Specification): set Is_In_ALFA flag for subprogram\n+\tspecifications.\n+\t(Process_Formals): unset Is_In_ALFA flag for subprograms if a\n+\tparameter's type is not in ALFA.\n+\t* stand.ads (Standard_Type_Is_In_ALFA): array defines which standard\n+\ttypes are in ALFA.\n+\n 2011-08-02  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch6 (Analyze_Expression_Function): treat the function as"}, {"sha": "64ec043618464c171a6b797569918ecf705cfb0c", "filename": "gcc/ada/cstand.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f85303509461f48131fcd3c34d1c159b6771dd1/gcc%2Fada%2Fcstand.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f85303509461f48131fcd3c34d1c159b6771dd1/gcc%2Fada%2Fcstand.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstand.adb?ref=0f85303509461f48131fcd3c34d1c159b6771dd1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -570,6 +570,10 @@ package body CStand is\n             Decl := New_Node (N_Full_Type_Declaration, Stloc);\n          end if;\n \n+         if Standard_Type_Is_In_ALFA (S) then\n+            Set_Is_In_ALFA (Standard_Entity (S));\n+         end if;\n+\n          Set_Is_Frozen (Standard_Entity (S));\n          Set_Is_Public (Standard_Entity (S));\n          Set_Defining_Identifier (Decl, Standard_Entity (S));"}, {"sha": "062e1fd445d0ba377843fa33bd34c10cc87cfcc3", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f85303509461f48131fcd3c34d1c159b6771dd1/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f85303509461f48131fcd3c34d1c159b6771dd1/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=0f85303509461f48131fcd3c34d1c159b6771dd1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -408,6 +408,7 @@ package body Einfo is\n    --    Is_Compilation_Unit             Flag149\n    --    Has_Pragma_Elaborate_Body       Flag150\n \n+   --    Is_In_ALFA                      Flag151\n    --    Entry_Accepted                  Flag152\n    --    Is_Obsolescent                  Flag153\n    --    Has_Per_Object_Constraint       Flag154\n@@ -517,7 +518,6 @@ package body Einfo is\n    --    Is_Safe_To_Reevaluate           Flag249\n    --    Has_Predicates                  Flag250\n \n-   --    (unused)                        Flag151\n    --    (unused)                        Flag251\n    --    (unused)                        Flag252\n    --    (unused)                        Flag253\n@@ -1844,6 +1844,11 @@ package body Einfo is\n       return Flag24 (Id);\n    end Is_Imported;\n \n+   function Is_In_ALFA (Id : E) return B is\n+   begin\n+      return Flag151 (Id);\n+   end Is_In_ALFA;\n+\n    function Is_Inlined (Id : E) return B is\n    begin\n       return Flag11 (Id);\n@@ -4332,6 +4337,11 @@ package body Einfo is\n       Set_Flag24 (Id, V);\n    end Set_Is_Imported;\n \n+   procedure Set_Is_In_ALFA (Id : E; V : B := True) is\n+   begin\n+      Set_Flag151 (Id, V);\n+   end Set_Is_In_ALFA;\n+\n    procedure Set_Is_Inlined (Id : E; V : B := True) is\n    begin\n       Set_Flag11 (Id, V);\n@@ -7476,6 +7486,7 @@ package body Einfo is\n       W (\"Is_Hidden_Open_Scope\",            Flag171 (Id));\n       W (\"Is_Immediately_Visible\",          Flag7   (Id));\n       W (\"Is_Imported\",                     Flag24  (Id));\n+      W (\"Is_In_ALFA\",                      Flag151 (Id));\n       W (\"Is_Inlined\",                      Flag11  (Id));\n       W (\"Is_Instantiated\",                 Flag126 (Id));\n       W (\"Is_Interface\",                    Flag186 (Id));"}, {"sha": "aa5b0e2961d65fea8faf49a5491ce6dece7815e5", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f85303509461f48131fcd3c34d1c159b6771dd1/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f85303509461f48131fcd3c34d1c159b6771dd1/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=0f85303509461f48131fcd3c34d1c159b6771dd1", "patch": "@@ -2270,6 +2270,11 @@ package Einfo is\n --    Is_Incomplete_Type (synthesized)\n --       Applies to all entities, true for incomplete types and subtypes\n \n+--    Is_In_ALFA (Flag151)\n+--       Present in all entities. Set for entities that belong to the ALFA\n+--       subset, which are eligible for formal verification through SPARK or\n+--       Why tool-sets.\n+\n --    Is_Inlined (Flag11)\n --       Present in all entities. Set for functions and procedures which are\n --       to be inlined. For subprograms created during expansion, this flag\n@@ -6135,6 +6140,7 @@ package Einfo is\n    function Is_Hidden_Open_Scope                (Id : E) return B;\n    function Is_Immediately_Visible              (Id : E) return B;\n    function Is_Imported                         (Id : E) return B;\n+   function Is_In_ALFA                          (Id : E) return B;\n    function Is_Inlined                          (Id : E) return B;\n    function Is_Interface                        (Id : E) return B;\n    function Is_Instantiated                     (Id : E) return B;\n@@ -6723,6 +6729,7 @@ package Einfo is\n    procedure Set_Is_Hidden_Open_Scope            (Id : E; V : B := True);\n    procedure Set_Is_Immediately_Visible          (Id : E; V : B := True);\n    procedure Set_Is_Imported                     (Id : E; V : B := True);\n+   procedure Set_Is_In_ALFA                      (Id : E; V : B := True);\n    procedure Set_Is_Inlined                      (Id : E; V : B := True);\n    procedure Set_Is_Interface                    (Id : E; V : B := True);\n    procedure Set_Is_Instantiated                 (Id : E; V : B := True);\n@@ -7440,6 +7447,7 @@ package Einfo is\n    pragma Inline (Is_Imported);\n    pragma Inline (Is_Incomplete_Or_Private_Type);\n    pragma Inline (Is_Incomplete_Type);\n+   pragma Inline (Is_In_ALFA);\n    pragma Inline (Is_Inlined);\n    pragma Inline (Is_Interface);\n    pragma Inline (Is_Instantiated);\n@@ -7854,6 +7862,7 @@ package Einfo is\n    pragma Inline (Set_Is_Hidden_Open_Scope);\n    pragma Inline (Set_Is_Immediately_Visible);\n    pragma Inline (Set_Is_Imported);\n+   pragma Inline (Set_Is_In_ALFA);\n    pragma Inline (Set_Is_Inlined);\n    pragma Inline (Set_Is_Interface);\n    pragma Inline (Set_Is_Instantiated);"}, {"sha": "afa0f85dd761b9c109e04c2b61b028e181b3bc9a", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 51, "deletions": 10, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f85303509461f48131fcd3c34d1c159b6771dd1/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f85303509461f48131fcd3c34d1c159b6771dd1/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=0f85303509461f48131fcd3c34d1c159b6771dd1", "patch": "@@ -3030,6 +3030,12 @@ package body Sem_Ch3 is\n \n       Act_T := T;\n \n+      --  The object is in ALFA if-and-only-if its type is in ALFA\n+\n+      if Is_In_ALFA (T) then\n+         Set_Is_In_ALFA (Id);\n+      end if;\n+\n       --  These checks should be performed before the initialization expression\n       --  is considered, so that the Object_Definition node is still the same\n       --  as in source code.\n@@ -3987,9 +3993,9 @@ package body Sem_Ch3 is\n \n       if Skip\n         or else (Present (Etype (Id))\n-                   and then (Is_Private_Type (Etype (Id))\n-                               or else Is_Task_Type (Etype (Id))\n-                               or else Is_Rewrite_Substitution (N)))\n+                  and then (Is_Private_Type (Etype (Id))\n+                             or else Is_Task_Type (Etype (Id))\n+                             or else Is_Rewrite_Substitution (N)))\n       then\n          null;\n \n@@ -4017,7 +4023,7 @@ package body Sem_Ch3 is\n \n       if Has_Predicates (T)\n         or else (Present (Ancestor_Subtype (T))\n-                   and then Has_Predicates (Ancestor_Subtype (T)))\n+                  and then Has_Predicates (Ancestor_Subtype (T)))\n       then\n          Set_Has_Predicates (Id);\n          Set_Has_Delayed_Freeze (Id);\n@@ -7914,11 +7920,11 @@ package body Sem_Ch3 is\n    begin\n       --  Set common attributes\n \n-      Set_Scope         (Derived_Type, Current_Scope);\n+      Set_Scope          (Derived_Type, Current_Scope);\n \n-      Set_Ekind         (Derived_Type, Ekind    (Parent_Base));\n-      Set_Etype         (Derived_Type,           Parent_Base);\n-      Set_Has_Task      (Derived_Type, Has_Task (Parent_Base));\n+      Set_Ekind          (Derived_Type, Ekind    (Parent_Base));\n+      Set_Etype          (Derived_Type,           Parent_Base);\n+      Set_Has_Task       (Derived_Type, Has_Task (Parent_Base));\n \n       Set_Size_Info      (Derived_Type,                 Parent_Type);\n       Set_RM_Size        (Derived_Type, RM_Size        (Parent_Type));\n@@ -11496,6 +11502,16 @@ package body Sem_Ch3 is\n       C : constant Node_Id   := Constraint (S);\n \n    begin\n+      --  By default, consider that the enumeration subtype is in ALFA if the\n+      --  entity of its subtype mark is in ALFA. This is reversed later if the\n+      --  range of the subtype is not static.\n+\n+      if Nkind (Original_Node (Parent (Def_Id))) = N_Subtype_Declaration\n+        and then Is_In_ALFA (T)\n+      then\n+         Set_Is_In_ALFA (Def_Id);\n+      end if;\n+\n       Set_Ekind (Def_Id, E_Enumeration_Subtype);\n \n       Set_First_Literal     (Def_Id, First_Literal (Base_Type (T)));\n@@ -11718,6 +11734,16 @@ package body Sem_Ch3 is\n       C : constant Node_Id   := Constraint (S);\n \n    begin\n+      --  By default, consider that the integer subtype is in ALFA if the\n+      --  entity of its subtype mark is in ALFA. This is reversed later if the\n+      --  range of the subtype is not static.\n+\n+      if Nkind (Original_Node (Parent (Def_Id))) = N_Subtype_Declaration\n+        and then Is_In_ALFA (T)\n+      then\n+         Set_Is_In_ALFA (Def_Id);\n+      end if;\n+\n       Set_Scalar_Range_For_Subtype (Def_Id, Range_Expression (C), T);\n \n       if Is_Modular_Integer_Type (T) then\n@@ -14469,6 +14495,12 @@ package body Sem_Ch3 is\n       Set_Enum_Esize      (T);\n       Set_Enum_Pos_To_Rep (T, Empty);\n \n+      --  Enumeration type is in ALFA only if it is not a character type\n+\n+      if not Is_Character_Type (T) then\n+         Set_Is_In_ALFA (T);\n+      end if;\n+\n       --  Set Discard_Names if configuration pragma set, or if there is\n       --  a parameterless pragma in the current declarative region\n \n@@ -17929,8 +17961,8 @@ package body Sem_Ch3 is\n \n       if Nkind (R) = N_Range then\n \n-         --  In SPARK/ALFA, all ranges should be static, with the exception of\n-         --  the discrete type definition of a loop parameter specification.\n+         --  In SPARK, all ranges should be static, with the exception of the\n+         --  discrete type definition of a loop parameter specification.\n \n          if not In_Iter_Schm\n            and then not Is_Static_Range (R)\n@@ -19387,6 +19419,14 @@ package body Sem_Ch3 is\n       Set_Ekind (Def_Id, E_Void);\n       Process_Range_Expr_In_Decl (R, Subt);\n       Set_Ekind (Def_Id, Kind);\n+\n+      --  In ALFA, all subtypes should have a static range\n+\n+      if Nkind (R) = N_Range\n+        and then not Is_Static_Range (R)\n+      then\n+         Set_Is_In_ALFA (Def_Id, False);\n+      end if;\n    end Set_Scalar_Range_For_Subtype;\n \n    --------------------------------------------------------\n@@ -19558,6 +19598,7 @@ package body Sem_Ch3 is\n       Set_Scalar_Range   (T, Def);\n       Set_RM_Size        (T, UI_From_Int (Minimum_Size (T)));\n       Set_Is_Constrained (T);\n+      Set_Is_In_ALFA     (T);\n    end Signed_Integer_Type_Declaration;\n \n end Sem_Ch3;"}, {"sha": "170533d83c44cf0c1c10579f25cc3d7f5f093bba", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f85303509461f48131fcd3c34d1c159b6771dd1/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f85303509461f48131fcd3c34d1c159b6771dd1/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=0f85303509461f48131fcd3c34d1c159b6771dd1", "patch": "@@ -1456,6 +1456,13 @@ package body Sem_Ch6 is\n             Typ := Entity (Result_Definition (N));\n             Set_Etype (Designator, Typ);\n \n+            --  If the result type of a subprogram is not in ALFA, then the\n+            --  subprogram is not in ALFA.\n+\n+            if not Is_In_ALFA (Typ) then\n+               Set_Is_In_ALFA (Designator, False);\n+            end if;\n+\n             --  Unconstrained array as result is not allowed in SPARK or ALFA\n \n             if Is_Array_Type (Typ)\n@@ -3106,6 +3113,11 @@ package body Sem_Ch6 is\n    --  Start of processing for Analyze_Subprogram_Specification\n \n    begin\n+      --  By default, consider that the subprogram spec is in ALFA. This is\n+      --  reversed later if some parameter or result is not in ALFA.\n+\n+      Set_Is_In_ALFA (Designator);\n+\n       --  User-defined operator is not allowed in SPARK or ALFA, except as\n       --  a renaming.\n \n@@ -8652,8 +8664,8 @@ package body Sem_Ch6 is\n       begin\n          return Is_Class_Wide_Type (Designated_Type (Etype (D)))\n            or else (Nkind (D) =  N_Attribute_Reference\n-                      and then Attribute_Name (D) = Name_Access\n-                      and then Is_Class_Wide_Type (Etype (Prefix (D))));\n+                     and then Attribute_Name (D) = Name_Access\n+                     and then Is_Class_Wide_Type (Etype (Prefix (D))));\n       end Is_Class_Wide_Default;\n \n    --  Start of processing for Process_Formals\n@@ -8828,6 +8840,16 @@ package body Sem_Ch6 is\n          end if;\n \n          Set_Etype (Formal, Formal_Type);\n+\n+         --  If the type of a subprogram's formal parameter is not in ALFA,\n+         --  then the subprogram is not in ALFA.\n+\n+         if Nkind (Parent (First (T))) in N_Subprogram_Specification\n+           and then not Is_In_ALFA (Formal_Type)\n+         then\n+            Set_Is_In_ALFA (Defining_Entity (Parent (First (T))), False);\n+         end if;\n+\n          Default := Expression (Param_Spec);\n \n          if Present (Default) then"}, {"sha": "40c51d06c03c4e975ec9a1da7e908d57782a4e02", "filename": "gcc/ada/stand.ads", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f85303509461f48131fcd3c34d1c159b6771dd1/gcc%2Fada%2Fstand.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f85303509461f48131fcd3c34d1c159b6771dd1/gcc%2Fada%2Fstand.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstand.ads?ref=0f85303509461f48131fcd3c34d1c159b6771dd1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -313,6 +313,34 @@ package Stand is\n    Boolean_Literals : array (Boolean) of Entity_Id;\n    --  Entities for the two boolean literals, used by the expander\n \n+   --  Standard types which are in ALFA are associated to True\n+   Standard_Type_Is_In_ALFA : array (S_Types) of Boolean :=\n+     (S_Boolean             => True,\n+\n+      S_Short_Short_Integer => True,\n+      S_Short_Integer       => True,\n+      S_Integer             => True,\n+      S_Long_Integer        => True,\n+      S_Long_Long_Integer   => True,\n+\n+      S_Natural             => True,\n+      S_Positive            => True,\n+\n+      S_Short_Float         => False,\n+      S_Float               => False,\n+      S_Long_Float          => False,\n+      S_Long_Long_Float     => False,\n+\n+      S_Character           => False,\n+      S_Wide_Character      => False,\n+      S_Wide_Wide_Character => False,\n+\n+      S_String              => False,\n+      S_Wide_String         => False,\n+      S_Wide_Wide_String    => False,\n+\n+      S_Duration            => False);\n+\n    -------------------------------------\n    -- Semantic Phase Special Entities --\n    -------------------------------------"}]}