{"sha": "118009c1e5e8d1bce7739f542347ddd994b664a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE4MDA5YzFlNWU4ZDFiY2U3NzM5ZjU0MjM0N2RkZDk5NGI2NjRhOA==", "commit": {"author": {"name": "Carl Love", "email": "cel@us.ibm.com", "date": "2017-07-12T15:10:21Z"}, "committer": {"name": "Carl Love", "email": "carll@gcc.gnu.org", "date": "2017-07-12T15:10:21Z"}, "message": "rs6000-c.c: Add support for built-in functions vector bool char vec_revb (vector bool char)...\n\ngcc/ChangeLog:\n\n2017-07-12  Carl Love  <cel@us.ibm.com>\n\n\t* config/rs6000/rs6000-c.c: Add support for built-in functions\n\tvector bool char vec_revb (vector bool char);\n\tvector bool short vec_revb (vector short char);\n\tvector bool int vec_revb (vector bool int);\n\tvector bool long long vec_revb (vector bool long long);\n\t* doc/extend.texi: Update the built-in documentation file for the\n\tnew built-in functions.\n\ngcc/testsuite/ChangeLog:\n\n2017-07-12  Carl Love  <cel@us.ibm.com>\n\n\t* gcc.target/powerpc/p9-xxbr-1.c (rev_bool_char, rev_bool_short,\n\trev_bool_int): Add test cases for builtins.\n\t* gcc.target/powerpc/p9-xxbr-2.c (rev_long_long, rev_ulong_ulong): Add\n\ttest cases for builtins.\n\nFrom-SVN: r250155", "tree": {"sha": "3ca61c69eb406299fe549002002db7bd27ceab04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ca61c69eb406299fe549002002db7bd27ceab04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/118009c1e5e8d1bce7739f542347ddd994b664a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/118009c1e5e8d1bce7739f542347ddd994b664a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/118009c1e5e8d1bce7739f542347ddd994b664a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/118009c1e5e8d1bce7739f542347ddd994b664a8/comments", "author": {"login": "carlelove", "id": 86435705, "node_id": "MDQ6VXNlcjg2NDM1NzA1", "avatar_url": "https://avatars.githubusercontent.com/u/86435705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlelove", "html_url": "https://github.com/carlelove", "followers_url": "https://api.github.com/users/carlelove/followers", "following_url": "https://api.github.com/users/carlelove/following{/other_user}", "gists_url": "https://api.github.com/users/carlelove/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlelove/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlelove/subscriptions", "organizations_url": "https://api.github.com/users/carlelove/orgs", "repos_url": "https://api.github.com/users/carlelove/repos", "events_url": "https://api.github.com/users/carlelove/events{/privacy}", "received_events_url": "https://api.github.com/users/carlelove/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5d7b8153b4b0a0f037d13bb9fdaae114b321c5c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d7b8153b4b0a0f037d13bb9fdaae114b321c5c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d7b8153b4b0a0f037d13bb9fdaae114b321c5c5"}], "stats": {"total": 65, "additions": 61, "deletions": 4}, "files": [{"sha": "c5803941b1a252b46330ba7f72c5200d76c55832", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118009c1e5e8d1bce7739f542347ddd994b664a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118009c1e5e8d1bce7739f542347ddd994b664a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=118009c1e5e8d1bce7739f542347ddd994b664a8", "patch": "@@ -1,3 +1,13 @@\n+2017-07-12  Carl Love  <cel@us.ibm.com>\n+\n+\t* config/rs6000/rs6000-c.c: Add support for built-in functions\n+\tvector bool char vec_revb (vector bool char);\n+\tvector bool short vec_revb (vector short char);\n+\tvector bool int vec_revb (vector bool int);\n+\tvector bool long long vec_revb (vector bool long long);\n+\t* doc/extend.texi: Update the built-in documentation file for the\n+\tnew built-in functions.\n+\n 2017-07-12  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* config/s390/s390.md: Remove movcc splitter."}, {"sha": "c7694425feb92551e5d1ca4917f4b8d75156c47b", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118009c1e5e8d1bce7739f542347ddd994b664a8/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118009c1e5e8d1bce7739f542347ddd994b664a8/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=118009c1e5e8d1bce7739f542347ddd994b664a8", "patch": "@@ -5524,6 +5524,8 @@ const struct altivec_builtin_types altivec_overloaded_builtins[] = {\n \n   { P9V_BUILTIN_VEC_REVB, P9V_BUILTIN_XXBRQ_V16QI,\n     RS6000_BTI_unsigned_V16QI, RS6000_BTI_unsigned_V16QI, 0, 0 },\n+  { P9V_BUILTIN_VEC_REVB, P9V_BUILTIN_XXBRQ_V16QI,\n+    RS6000_BTI_bool_V16QI, RS6000_BTI_bool_V16QI, 0, 0 },\n   { P9V_BUILTIN_VEC_REVB, P9V_BUILTIN_XXBRQ_V16QI,\n     RS6000_BTI_V16QI, RS6000_BTI_V16QI, 0, 0 },\n   { P9V_BUILTIN_VEC_REVB, P9V_BUILTIN_XXBRQ_V1TI,\n@@ -5536,12 +5538,16 @@ const struct altivec_builtin_types altivec_overloaded_builtins[] = {\n     RS6000_BTI_V2DI, RS6000_BTI_V2DI, 0, 0 },\n   { P9V_BUILTIN_VEC_REVB, P9V_BUILTIN_XXBRD_V2DF,\n     RS6000_BTI_V2DF, RS6000_BTI_V2DF, 0, 0 },\n+  { P9V_BUILTIN_VEC_REVB, P9V_BUILTIN_XXBRW_V4SI,\n+    RS6000_BTI_bool_V4SI, RS6000_BTI_bool_V4SI, 0, 0 },\n   { P9V_BUILTIN_VEC_REVB, P9V_BUILTIN_XXBRW_V4SI,\n     RS6000_BTI_unsigned_V4SI, RS6000_BTI_unsigned_V4SI, 0, 0 },\n   { P9V_BUILTIN_VEC_REVB, P9V_BUILTIN_XXBRW_V4SI,\n     RS6000_BTI_V4SI, RS6000_BTI_V4SI, 0, 0 },\n   { P9V_BUILTIN_VEC_REVB, P9V_BUILTIN_XXBRW_V4SF,\n     RS6000_BTI_V4SF, RS6000_BTI_V4SF, 0, 0 },\n+  { P9V_BUILTIN_VEC_REVB, P9V_BUILTIN_XXBRH_V8HI,\n+    RS6000_BTI_bool_V8HI, RS6000_BTI_bool_V8HI, 0, 0 },\n   { P9V_BUILTIN_VEC_REVB, P9V_BUILTIN_XXBRH_V8HI,\n     RS6000_BTI_unsigned_V8HI, RS6000_BTI_unsigned_V8HI, 0, 0 },\n   { P9V_BUILTIN_VEC_REVB, P9V_BUILTIN_XXBRH_V8HI,"}, {"sha": "530a82dd2c0083de0af064fe306cb07cade10611", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118009c1e5e8d1bce7739f542347ddd994b664a8/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118009c1e5e8d1bce7739f542347ddd994b664a8/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=118009c1e5e8d1bce7739f542347ddd994b664a8", "patch": "@@ -18510,13 +18510,17 @@ of each element.\n If the ISA 3.0 instruction set additions (@option{-mcpu=power9})\n are available:\n @smallexample\n+vector signed bool char vec_revb (vector signed char);\n vector signed char vec_revb (vector signed char);\n vector unsigned char vec_revb (vector unsigned char);\n+vector bool short vec_revb (vector bool short);\n vector short vec_revb (vector short);\n vector unsigned short vec_revb (vector unsigned short);\n+vector bool int vec_revb (vector bool int);\n vector int vec_revb (vector int);\n vector unsigned int vec_revb (vector unsigned int);\n vector float vec_revb (vector float);\n+vector bool long long vec_revb (vector bool long long);\n vector long long vec_revb (vector long long);\n vector unsigned long long vec_revb (vector unsigned long long);\n vector double vec_revb (vector double);"}, {"sha": "2afa99c044f35b7c3b9cca197431b3d666d9c7b3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118009c1e5e8d1bce7739f542347ddd994b664a8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118009c1e5e8d1bce7739f542347ddd994b664a8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=118009c1e5e8d1bce7739f542347ddd994b664a8", "patch": "@@ -1,3 +1,10 @@\n+2017-07-12  Carl Love  <cel@us.ibm.com>\n+\n+\t* gcc.target/powerpc/p9-xxbr-1.c (rev_bool_char, rev_bool_short,\n+\trev_bool_int): Add test cases for builtins.\n+\t* gcc.target/powerpc/p9-xxbr-2.c (rev_long_long, rev_ulong_ulong): Add\n+\ttest cases for builtins.\n+\n 2017-07-12  Carl Love  <cel@us.ibm.com>\n \n \t* gcc.target/powerpc/builtins-1-p9-runnable.c (dg-ddo run): Add"}, {"sha": "164f11f6ea3045eaa1e89ba6748d87f4213b124c", "filename": "gcc/testsuite/gcc.target/powerpc/p9-xxbr-1.c", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118009c1e5e8d1bce7739f542347ddd994b664a8/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp9-xxbr-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118009c1e5e8d1bce7739f542347ddd994b664a8/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp9-xxbr-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp9-xxbr-1.c?ref=118009c1e5e8d1bce7739f542347ddd994b664a8", "patch": "@@ -13,6 +13,12 @@ rev_char (vector char a)\n   return vec_revb (a);\t\t/* XXBRQ.  */\n }\n \n+vector bool char\n+rev_bool_char (vector bool char a)\n+{\n+  return vec_revb (a);\t\t/* XXBRQ.  */\n+}\n+\n vector signed char\n rev_schar (vector signed char a)\n {\n@@ -31,6 +37,12 @@ rev_short (vector short a)\n   return vec_revb (a);\t\t/* XXBRH.  */\n }\n \n+vector bool short\n+rev_bool_short (vector bool short a)\n+{\n+  return vec_revb (a);\t\t/* XXBRH.  */\n+}\n+\n vector unsigned short\n rev_ushort (vector unsigned short a)\n {\n@@ -43,6 +55,12 @@ rev_int (vector int a)\n   return vec_revb (a);\t\t/* XXBRW.  */\n }\n \n+vector bool int\n+rev_bool_int (vector bool int a)\n+{\n+  return vec_revb (a);\t\t/* XXBRW.  */\n+}\n+\n vector unsigned int\n rev_uint (vector unsigned int a)\n {\n@@ -62,6 +80,6 @@ rev_double (vector double a)\n }\n \n /* { dg-final { scan-assembler-times \"xxbrd\" 1 } } */\n-/* { dg-final { scan-assembler-times \"xxbrh\" 2 } } */\n-/* { dg-final { scan-assembler-times \"xxbrq\" 3 } } */\n-/* { dg-final { scan-assembler-times \"xxbrw\" 3 } } */\n+/* { dg-final { scan-assembler-times \"xxbrh\" 3 } } */\n+/* { dg-final { scan-assembler-times \"xxbrq\" 4 } } */\n+/* { dg-final { scan-assembler-times \"xxbrw\" 4 } } */"}, {"sha": "a4a19390d7be0066564ba490d15468a3233e4044", "filename": "gcc/testsuite/gcc.target/powerpc/p9-xxbr-2.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118009c1e5e8d1bce7739f542347ddd994b664a8/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp9-xxbr-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118009c1e5e8d1bce7739f542347ddd994b664a8/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp9-xxbr-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp9-xxbr-2.c?ref=118009c1e5e8d1bce7739f542347ddd994b664a8", "patch": "@@ -20,6 +20,18 @@ rev_ulong (vector unsigned long a)\n   return vec_revb (a);\t\t/* XXBRD.  */\n }\n \n+vector long long\n+rev_long_long (vector long long a)\n+{\n+  return vec_revb (a);\t\t/* XXBRD.  */\n+}\n+\n+vector unsigned long long\n+rev_ulong_ulong (vector unsigned long long a)\n+{\n+  return vec_revb (a);\t\t/* XXBRD.  */\n+}\n+\n vector __int128_t\n rev_int128 (vector __int128_t a)\n {\n@@ -32,5 +44,5 @@ rev_uint128 (vector __uint128_t a)\n   return vec_revb (a);\t\t/* XXBRQ.  */\n }\n \n-/* { dg-final { scan-assembler-times \"xxbrd\" 2 } } */\n+/* { dg-final { scan-assembler-times \"xxbrd\" 4 } } */\n /* { dg-final { scan-assembler-times \"xxbrq\" 2 } } */"}]}