{"sha": "48df93911ab1b71a533934419c320fe9102b5ec1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhkZjkzOTExYWIxYjcxYTUzMzkzNDQxOWMzMjBmZTkxMDJiNWVjMQ==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2019-07-21T20:15:00Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2019-07-21T20:15:00Z"}, "message": "[PPC] Fix bootstrap for non-SVR4 targets.\n\nThe recent change to move code into the new rs6000-call.c file is missing a\ndefault value for the TARGET_NO_PROTOTYPE value (which only affects targets\nthat don\u2019t include svr4.h).  Fixed by moving the fallback setting from\nrs6000.c (which has no uses now) to rs6000-call.c.\n\n2019-07-21  Iain Sandoe  <iain@sandoe.co.uk>\n\n\t* config/rs6000/rs6000.c (TARGET_NO_PROTOTYPE): Move from here...\n\t* config/rs6000/rs6000-call.c: ... to here.\n\nFrom-SVN: r273646", "tree": {"sha": "a1beaeeb2e487083de12ec35fc1e7b7895cf2d51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1beaeeb2e487083de12ec35fc1e7b7895cf2d51"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48df93911ab1b71a533934419c320fe9102b5ec1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48df93911ab1b71a533934419c320fe9102b5ec1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48df93911ab1b71a533934419c320fe9102b5ec1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48df93911ab1b71a533934419c320fe9102b5ec1/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c37b0163fe5307ab508489926114de9cf7e240c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c37b0163fe5307ab508489926114de9cf7e240c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c37b0163fe5307ab508489926114de9cf7e240c1"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "7f070e87f27061ca1e78ae65270348117527540e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48df93911ab1b71a533934419c320fe9102b5ec1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48df93911ab1b71a533934419c320fe9102b5ec1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=48df93911ab1b71a533934419c320fe9102b5ec1", "patch": "@@ -1,3 +1,8 @@\n+2019-07-21  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* config/rs6000/rs6000.c (TARGET_NO_PROTOTYPE): Move from here...\n+\t* config/rs6000/rs6000-call.c: ... to here.\n+\n 2019-07-20  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/predicates.md (offsettable_mem_operand): Allow volatile"}, {"sha": "2ef8c7f861e4772febbb47664033902c597ca0af", "filename": "gcc/config/rs6000/rs6000-call.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48df93911ab1b71a533934419c320fe9102b5ec1/gcc%2Fconfig%2Frs6000%2Frs6000-call.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48df93911ab1b71a533934419c320fe9102b5ec1/gcc%2Fconfig%2Frs6000%2Frs6000-call.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-call.c?ref=48df93911ab1b71a533934419c320fe9102b5ec1", "patch": "@@ -86,6 +86,10 @@\n # endif\n #endif\n \n+#ifndef TARGET_NO_PROTOTYPE\n+#define TARGET_NO_PROTOTYPE 0\n+#endif\n+\n struct builtin_description\n {\n   const HOST_WIDE_INT mask;"}, {"sha": "edd8f2b4df8b3edc64e558093996d3023c05e643", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48df93911ab1b71a533934419c320fe9102b5ec1/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48df93911ab1b71a533934419c320fe9102b5ec1/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=48df93911ab1b71a533934419c320fe9102b5ec1", "patch": "@@ -84,10 +84,6 @@\n /* This file should be included last.  */\n #include \"target-def.h\"\n \n-#ifndef TARGET_NO_PROTOTYPE\n-#define TARGET_NO_PROTOTYPE 0\n-#endif\n-\n   /* Set -mabi=ieeelongdouble on some old targets.  In the future, power server\n      systems will also set long double to be IEEE 128-bit.  AIX and Darwin\n      explicitly redefine TARGET_IEEEQUAD and TARGET_IEEEQUAD_DEFAULT to 0, so"}]}