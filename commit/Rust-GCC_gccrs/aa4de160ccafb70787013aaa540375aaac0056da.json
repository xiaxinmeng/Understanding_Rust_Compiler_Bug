{"sha": "aa4de160ccafb70787013aaa540375aaac0056da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE0ZGUxNjBjY2FmYjcwNzg3MDEzYWFhNTQwMzc1YWFhYzAwNTZkYQ==", "commit": {"author": {"name": "Bin Cheng", "email": "bin.cheng@arm.com", "date": "2017-07-28T14:55:49Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2017-07-28T14:55:49Z"}, "message": "tree-predcom.c (struct chain): New field init_seq.\n\n\t* tree-predcom.c (struct chain): New field init_seq.\n\t(release_chain): Release init_seq.\n\t(prepare_initializers_chain): Record intialization stmts in above\n\tfield.\n\t(insert_init_seqs): New function.\n\t(tree_predictive_commoning_loop): Call insert_init_seqs.\n\nFrom-SVN: r250666", "tree": {"sha": "4f3addcb36278c90de993717ebfab1dd576b524b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f3addcb36278c90de993717ebfab1dd576b524b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa4de160ccafb70787013aaa540375aaac0056da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa4de160ccafb70787013aaa540375aaac0056da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa4de160ccafb70787013aaa540375aaac0056da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa4de160ccafb70787013aaa540375aaac0056da/comments", "author": null, "committer": null, "parents": [{"sha": "67bb451dfbfbac87a1289ad4e9e38f7c2abf4d02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67bb451dfbfbac87a1289ad4e9e38f7c2abf4d02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67bb451dfbfbac87a1289ad4e9e38f7c2abf4d02"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "536340272795232429f04b664f26d4f274a61f58", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa4de160ccafb70787013aaa540375aaac0056da/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa4de160ccafb70787013aaa540375aaac0056da/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aa4de160ccafb70787013aaa540375aaac0056da", "patch": "@@ -1,3 +1,12 @@\n+2017-07-28  Bin Cheng  <bin.cheng@arm.com>\n+\n+\t* tree-predcom.c (struct chain): New field init_seq.\n+\t(release_chain): Release init_seq.\n+\t(prepare_initializers_chain): Record intialization stmts in above\n+\tfield.\n+\t(insert_init_seqs): New function.\n+\t(tree_predictive_commoning_loop): Call insert_init_seqs.\n+\n 2017-07-28  Bin Cheng  <bin.cheng@arm.com>\n \n \t* tree-predcom.c (determine_roots_comp): Skip trivial components."}, {"sha": "089d3c674a4197a4540879f04e489277c27560f0", "filename": "gcc/tree-predcom.c", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa4de160ccafb70787013aaa540375aaac0056da/gcc%2Ftree-predcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa4de160ccafb70787013aaa540375aaac0056da/gcc%2Ftree-predcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-predcom.c?ref=aa4de160ccafb70787013aaa540375aaac0056da", "patch": "@@ -294,6 +294,9 @@ typedef struct chain\n   /* Initializers for the variables.  */\n   vec<tree> inits;\n \n+  /* gimple stmts intializing the initial variables of the chain.  */\n+  gimple_seq init_seq;\n+\n   /* True if there is a use of a variable with the maximal distance\n      that comes after the root in the loop.  */\n   unsigned has_max_use_after : 1;\n@@ -511,6 +514,8 @@ release_chain (chain_p chain)\n   chain->refs.release ();\n   chain->vars.release ();\n   chain->inits.release ();\n+  if (chain->init_seq)\n+    gimple_seq_discard (chain->init_seq);\n \n   free (chain);\n }\n@@ -2457,7 +2462,7 @@ prepare_initializers_chain (struct loop *loop, chain_p chain)\n \t}\n \n       if (stmts)\n-\tgsi_insert_seq_on_edge_immediate (entry, stmts);\n+\tgimple_seq_add_seq_without_update (&chain->init_seq, stmts);\n \n       chain->inits[i] = init;\n     }\n@@ -2487,6 +2492,22 @@ prepare_initializers (struct loop *loop, vec<chain_p> chains)\n     }\n }\n \n+/* Insert all initializing gimple stmts into loop's entry edge.  */\n+\n+static void\n+insert_init_seqs (struct loop *loop, vec<chain_p> chains)\n+{\n+  unsigned i;\n+  edge entry = loop_preheader_edge (loop);\n+\n+  for (i = 0; i < chains.length (); ++i)\n+    if (chains[i]->init_seq)\n+      {\n+\tgsi_insert_seq_on_edge_immediate (entry, chains[i]->init_seq);\n+\tchains[i]->init_seq = NULL;\n+      }\n+}\n+\n /* Performs predictive commoning for LOOP.  Returns true if LOOP was\n    unrolled.  */\n \n@@ -2568,6 +2589,8 @@ tree_predictive_commoning_loop (struct loop *loop)\n   /* Try to combine the chains that are always worked with together.  */\n   try_combine_chains (&chains);\n \n+  insert_init_seqs (loop, chains);\n+\n   if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n       fprintf (dump_file, \"Before commoning:\\n\\n\");"}]}