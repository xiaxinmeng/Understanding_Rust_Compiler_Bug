{"sha": "29e86cb09c6ffe497456341864551b504c9a6f4f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjllODZjYjA5YzZmZmU0OTc0NTYzNDE4NjQ1NTFiNTA0YzlhNmY0Zg==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-03-31T19:41:11Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-03-31T19:41:11Z"}, "message": "re PR libfortran/31335 (Calls lstat(), stat() and fstat() in libgfortran should be protected by autoconf HAVE_{L,,F}STAT macros)\n\n\tPR libfortran/31335\n\t* intrinsics/stat.c: Only provide STAT and FSTAT library routines\n\tif stat() and fstat() library functions are available. When lstat()\n\tis not available, use stat() instead.\n\t* configure.ac: Add checks for stat, fstat and lstat.\n\t* configure: Regenerate.\n\t* config.h.in: Regenerate.\n\nFrom-SVN: r123388", "tree": {"sha": "bfeff7227b047cec60eb9fd962576f8748c6f8f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfeff7227b047cec60eb9fd962576f8748c6f8f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29e86cb09c6ffe497456341864551b504c9a6f4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29e86cb09c6ffe497456341864551b504c9a6f4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29e86cb09c6ffe497456341864551b504c9a6f4f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29e86cb09c6ffe497456341864551b504c9a6f4f/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f5faa7ceae547a56f1335e66a359c0a8063a182", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f5faa7ceae547a56f1335e66a359c0a8063a182", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f5faa7ceae547a56f1335e66a359c0a8063a182"}], "stats": {"total": 46, "additions": 41, "deletions": 5}, "files": [{"sha": "6b8f4f89da21e048dbd4f5ca3db437abaf83f13c", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e86cb09c6ffe497456341864551b504c9a6f4f/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e86cb09c6ffe497456341864551b504c9a6f4f/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=29e86cb09c6ffe497456341864551b504c9a6f4f", "patch": "@@ -1,3 +1,13 @@\n+2007-03-31  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR libfortran/31335\n+\t* intrinsics/stat.c: Only provide STAT and FSTAT library routines\n+\tif stat() and fstat() library functions are available. When lstat()\n+\tis not available, use stat() instead.\n+\t* configure.ac: Add checks for stat, fstat and lstat.\n+\t* configure: Regenerate.\n+\t* config.h.in: Regenerate.\n+\n 2007-03-27  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/31052"}, {"sha": "fc8e73c8d40f578bde73daafb5a335ee8356f363", "filename": "libgfortran/config.h.in", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e86cb09c6ffe497456341864551b504c9a6f4f/libgfortran%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e86cb09c6ffe497456341864551b504c9a6f4f/libgfortran%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig.h.in?ref=29e86cb09c6ffe497456341864551b504c9a6f4f", "patch": "@@ -378,6 +378,9 @@\n /* libm includes frexpl */\n #undef HAVE_FREXPL\n \n+/* Define to 1 if you have the `fstat' function. */\n+#undef HAVE_FSTAT\n+\n /* Define to 1 if you have the `ftruncate' function. */\n #undef HAVE_FTRUNCATE\n \n@@ -489,6 +492,9 @@\n /* libm includes logl */\n #undef HAVE_LOGL\n \n+/* Define to 1 if you have the `lstat' function. */\n+#undef HAVE_LSTAT\n+\n /* Define to 1 if you have the <math.h> header file. */\n #undef HAVE_MATH_H\n \n@@ -582,6 +588,9 @@\n /* libm includes sqrtl */\n #undef HAVE_SQRTL\n \n+/* Define to 1 if you have the `stat' function. */\n+#undef HAVE_STAT\n+\n /* Define to 1 if you have the <stddef.h> header file. */\n #undef HAVE_STDDEF_H\n "}, {"sha": "5cc0013bb788b09076d939476e626088f2f45fb9", "filename": "libgfortran/configure", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e86cb09c6ffe497456341864551b504c9a6f4f/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e86cb09c6ffe497456341864551b504c9a6f4f/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=29e86cb09c6ffe497456341864551b504c9a6f4f", "patch": "@@ -10511,7 +10511,10 @@ fi\n done\n \n \n-for ac_func in gettimeofday\n+\n+\n+\n+for ac_func in gettimeofday stat fstat lstat\n do\n as_ac_var=`echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n echo \"$as_me:$LINENO: checking for $ac_func\" >&5"}, {"sha": "c5fb8753f89ec40c9ba5f63340e833ea31f69608", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e86cb09c6ffe497456341864551b504c9a6f4f/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e86cb09c6ffe497456341864551b504c9a6f4f/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=29e86cb09c6ffe497456341864551b504c9a6f4f", "patch": "@@ -177,7 +177,7 @@ AC_CHECK_FUNCS(getrusage times mkstemp strtof strtold snprintf ftruncate chsize)\n AC_CHECK_FUNCS(chdir strerror getlogin gethostname kill link symlink perror)\n AC_CHECK_FUNCS(sleep time ttyname signal alarm ctime clock access fork execl)\n AC_CHECK_FUNCS(wait setmode execvp pipe dup2 close fdopen strcasestr getrlimit)\n-AC_CHECK_FUNCS(gettimeofday)\n+AC_CHECK_FUNCS(gettimeofday stat fstat lstat)\n \n # Check for glibc backtrace functions\n AC_CHECK_FUNCS(backtrace backtrace_symbols)"}, {"sha": "ce6524504049e06763c3e911bd7afed06e090d71", "filename": "libgfortran/intrinsics/stat.c", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e86cb09c6ffe497456341864551b504c9a6f4f/libgfortran%2Fintrinsics%2Fstat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e86cb09c6ffe497456341864551b504c9a6f4f/libgfortran%2Fintrinsics%2Fstat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fstat.c?ref=29e86cb09c6ffe497456341864551b504c9a6f4f", "patch": "@@ -49,6 +49,9 @@ Boston, MA 02110-1301, USA.  */\n \n #include <errno.h>\n \n+\n+#ifdef HAVE_STAT\n+\n /* SUBROUTINE STAT(FILE, SARRAY, STATUS)\n    CHARACTER(len=*), INTENT(IN) :: FILE\n    INTEGER, INTENT(OUT), :: SARRAY(13)\n@@ -88,9 +91,12 @@ stat_i4_sub_0 (char *name, gfc_array_i4 *sarray, GFC_INTEGER_4 *status,\n   memcpy (str, name, name_len);\n   str[name_len] = '\\0';\n \n+  /* On platforms that don't provide lstat(), we use stat() instead.  */\n+#ifdef HAVE_LSTAT\n   if (is_lstat)\n     val = lstat(str, &sb);\n   else\n+#endif\n     val = stat(str, &sb);\n \n   if (val == 0)\n@@ -204,9 +210,12 @@ stat_i8_sub_0 (char *name, gfc_array_i8 *sarray, GFC_INTEGER_8 *status,\n   memcpy (str, name, name_len);\n   str[name_len] = '\\0';\n \n+  /* On platforms that don't provide lstat(), we use stat() instead.  */\n+#ifdef HAVE_LSTAT\n   if (is_lstat)\n     val = lstat(str, &sb);\n   else\n+#endif\n     val = stat(str, &sb);\n \n   if (val == 0)\n@@ -319,13 +328,13 @@ stat_i8 (char *name, gfc_array_i8 *sarray, gfc_charlen_type name_len)\n }\n \n \n-/* SUBROUTINE STAT(FILE, SARRAY, STATUS)\n+/* SUBROUTINE LSTAT(FILE, SARRAY, STATUS)\n    CHARACTER(len=*), INTENT(IN) :: FILE\n    INTEGER, INTENT(OUT), :: SARRAY(13)\n    INTEGER, INTENT(OUT), OPTIONAL :: STATUS\n \n-   FUNCTION STAT(FILE, SARRAY)\n-   INTEGER STAT\n+   FUNCTION LSTAT(FILE, SARRAY)\n+   INTEGER LSTAT\n    CHARACTER(len=*), INTENT(IN) :: FILE\n    INTEGER, INTENT(OUT), :: SARRAY(13)  */\n \n@@ -351,7 +360,10 @@ lstat_i8 (char *name, gfc_array_i8 *sarray, gfc_charlen_type name_len)\n   return val;\n }\n \n+#endif\n+\n \n+#ifdef HAVE_FSTAT\n \n /* SUBROUTINE FSTAT(UNIT, SARRAY, STATUS)\n    INTEGER, INTENT(IN) :: UNIT\n@@ -546,3 +558,5 @@ fstat_i8 (GFC_INTEGER_8 *unit, gfc_array_i8 *sarray)\n   fstat_i8_sub (unit, sarray, &val);\n   return val;\n }\n+\n+#endif"}]}