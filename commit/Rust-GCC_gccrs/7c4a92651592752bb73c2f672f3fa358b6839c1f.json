{"sha": "7c4a92651592752bb73c2f672f3fa358b6839c1f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M0YTkyNjUxNTkyNzUyYmI3M2MyZjY3MmYzZmEzNThiNjgzOWMxZg==", "commit": {"author": {"name": "Kyle Galloway", "email": "kgallowa@redhat.com", "date": "2007-04-24T19:56:55Z"}, "committer": {"name": "Kyle Galloway", "email": "kgallowa@gcc.gnu.org", "date": "2007-04-24T19:56:55Z"}, "message": "2007-04-24  Kyle Galloway  <kgallowa@redhat.com>\n\n\t* gnu/classpath/jdwp/natVMVirtualMachine.java\n\t(getThreadStatus): Implement.\n\nFrom-SVN: r124117", "tree": {"sha": "81c3d6faf8e3fc9f0dc589548e6126cab0b8ae84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81c3d6faf8e3fc9f0dc589548e6126cab0b8ae84"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c4a92651592752bb73c2f672f3fa358b6839c1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c4a92651592752bb73c2f672f3fa358b6839c1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c4a92651592752bb73c2f672f3fa358b6839c1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c4a92651592752bb73c2f672f3fa358b6839c1f/comments", "author": null, "committer": null, "parents": [{"sha": "2d83f07035a5ca542ba42a858f39a94026b4f6ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d83f07035a5ca542ba42a858f39a94026b4f6ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d83f07035a5ca542ba42a858f39a94026b4f6ae"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "0596c8ac8be4005426692f134b660e36adb134a5", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c4a92651592752bb73c2f672f3fa358b6839c1f/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c4a92651592752bb73c2f672f3fa358b6839c1f/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=7c4a92651592752bb73c2f672f3fa358b6839c1f", "patch": "@@ -1,3 +1,8 @@\n+2007-04-24  Kyle Galloway  <kgallowa@redhat.com>\n+\n+\t* gnu/classpath/jdwp/natVMVirtualMachine.java\n+\t(getThreadStatus): Implement.\n+\n 2007-04-24  Keith Seitz  <keiths@redhat.com>\n \n \t* headers.txt (gnu/gcj/jvmti/Breakpoint.h)[DIRECT_THREADED]:"}, {"sha": "1dfc52995e05ec7d49c6e8e08418071c94ccd415", "filename": "libjava/gnu/classpath/jdwp/natVMVirtualMachine.cc", "status": "modified", "additions": 31, "deletions": 2, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c4a92651592752bb73c2f672f3fa358b6839c1f/libjava%2Fgnu%2Fclasspath%2Fjdwp%2FnatVMVirtualMachine.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c4a92651592752bb73c2f672f3fa358b6839c1f/libjava%2Fgnu%2Fclasspath%2Fjdwp%2FnatVMVirtualMachine.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2FnatVMVirtualMachine.cc?ref=7c4a92651592752bb73c2f672f3fa358b6839c1f", "patch": "@@ -31,6 +31,7 @@ details. */\n #include <gnu/classpath/jdwp/Jdwp.h>\n #include <gnu/classpath/jdwp/JdwpConstants$StepDepth.h>\n #include <gnu/classpath/jdwp/JdwpConstants$StepSize.h>\n+#include <gnu/classpath/jdwp/JdwpConstants$ThreadStatus.h>\n #include <gnu/classpath/jdwp/VMFrame.h>\n #include <gnu/classpath/jdwp/VMMethod.h>\n #include <gnu/classpath/jdwp/VMVirtualMachine.h>\n@@ -622,9 +623,37 @@ getFrameCount (Thread *thread)\n \n jint\n gnu::classpath::jdwp::VMVirtualMachine::\n-getThreadStatus (MAYBE_UNUSED Thread *thread)\n+getThreadStatus (Thread *thread)\n {\n-  return 0;\n+  jint thr_state, status;\n+  \n+  jvmtiError jerr = _jdwp_jvmtiEnv->GetThreadState (thread, &thr_state);\n+  if (jerr != JVMTI_ERROR_NONE)\n+    throw_jvmti_error (jerr);\n+  \n+  if (thr_state & JVMTI_THREAD_STATE_SLEEPING)\n+    status = gnu::classpath::jdwp::JdwpConstants$ThreadStatus::SLEEPING;\n+  else if (thr_state & JVMTI_THREAD_STATE_RUNNABLE)\n+    status = gnu::classpath::jdwp::JdwpConstants$ThreadStatus::RUNNING;\n+  else if (thr_state & JVMTI_THREAD_STATE_WAITING)\n+    {\n+      if (thr_state & (JVMTI_THREAD_STATE_IN_OBJECT_WAIT\n+                       | JVMTI_THREAD_STATE_BLOCKED_ON_MONITOR_ENTER))\n+        status = gnu::classpath::jdwp::JdwpConstants$ThreadStatus::MONITOR;\n+      else\n+        status = gnu::classpath::jdwp::JdwpConstants$ThreadStatus::WAIT;\n+    }\n+  else\n+    {\n+      // The thread is not SLEEPING, MONITOR, or WAIT.  It may, however, be\n+      // alive but not yet started.\n+      if (!(thr_state & (JVMTI_THREAD_STATE_ALIVE \n+                         | JVMTI_THREAD_STATE_TERMINATED)))\n+        status = gnu::classpath::jdwp::JdwpConstants$ThreadStatus::RUNNING;\n+      status = gnu::classpath::jdwp::JdwpConstants$ThreadStatus::ZOMBIE;     \n+    }   \n+\n+  return status;\n }\n \n java::util::ArrayList *"}]}