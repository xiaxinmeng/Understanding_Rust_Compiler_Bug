{"sha": "2588197b6c2175d7ef9f05a8636f58dfeab12b1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU4ODE5N2I2YzIxNzVkN2VmOWYwNWE4NjM2ZjU4ZGZlYWIxMmIxZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-01-16T11:32:34Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-01-16T11:36:22Z"}, "message": "contrib: Verify the id to be printed is ancestor of the corresponding remote release branch (or master), otherwise print nothing.\n\nThe monotonically increasing revision ids need to be globally unique, so they should\nonly identify commits that were committed to the upstream repo to its master or\nreleases/gcc-N branches.  The alias could print something even for private branches\nor vendor branches etc., but if such an identifier is then used publicly, it will\nrefer to something else.\n\n2020-01-16  Jakub Jelinek  <jakub@redhat.com>\n\n\t* gcc-git-customization.sh: Verify the id to be printed is ancestor of\n\tthe corresponding remote release branch (or master), otherwise print\n\tnothing.", "tree": {"sha": "612d55f562f3769a1e7cad25c59204cc451f7b2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/612d55f562f3769a1e7cad25c59204cc451f7b2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2588197b6c2175d7ef9f05a8636f58dfeab12b1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2588197b6c2175d7ef9f05a8636f58dfeab12b1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2588197b6c2175d7ef9f05a8636f58dfeab12b1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2588197b6c2175d7ef9f05a8636f58dfeab12b1d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7dff7699fd70d3b8c3e637818e18c86f93ccfec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7dff7699fd70d3b8c3e637818e18c86f93ccfec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7dff7699fd70d3b8c3e637818e18c86f93ccfec"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "4bda991c7c3bcd4e34f6e27e6a81fe23eeaaff6c", "filename": "contrib/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2588197b6c2175d7ef9f05a8636f58dfeab12b1d/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2588197b6c2175d7ef9f05a8636f58dfeab12b1d/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=2588197b6c2175d7ef9f05a8636f58dfeab12b1d", "patch": "@@ -1,3 +1,9 @@\n+2020-01-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc-git-customization.sh: Verify the id to be printed is ancestor of\n+\tthe corresponding remote release branch (or master), otherwise print\n+\tnothing.\n+\n 2020-01-15  Segher Boessenkool  <segher@kernel.crashing.org>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "0a6b3e528886a0a57530134ecee0dcdf5465ff9a", "filename": "contrib/gcc-git-customization.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2588197b6c2175d7ef9f05a8636f58dfeab12b1d/contrib%2Fgcc-git-customization.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2588197b6c2175d7ef9f05a8636f58dfeab12b1d/contrib%2Fgcc-git-customization.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-git-customization.sh?ref=2588197b6c2175d7ef9f05a8636f58dfeab12b1d", "patch": "@@ -22,7 +22,7 @@ git config alias.svn-rev '!f() { rev=$1; shift; git log --all --grep=\"From-SVN:\n \n # Add git commands to convert git commit to monotonically increasing revision number\n # and vice versa\n-git config alias.gcc-descr \\!\"f() { if test \\${1:-no} = --full; then r=\\$(git describe --all --abbrev=40 --match 'basepoints/gcc-[0-9]*' \\${2:-master} | sed -n 's,^\\\\(tags/\\\\)\\\\?basepoints/gcc-,r,p'); expr match \\${r:-no} '^r[0-9]\\\\+\\$' >/dev/null && r=\\${r}-0-g\\$(git rev-parse \\${2:-master}); test -n \\$r && echo \\${r}; else git describe --all --match 'basepoints/gcc-[0-9]*' \\${1:-master} | sed -n 's,^\\\\(tags/\\\\)\\\\?basepoints/gcc-\\\\([0-9]\\\\+\\\\)-\\\\([0-9]\\\\+\\\\)-g[0-9a-f]*\\$,r\\\\2-\\\\3,p;s,^\\\\(tags/\\\\)\\\\?basepoints/gcc-\\\\([0-9]\\\\+\\\\)\\$,r\\\\2-0,p'; fi; }; f\"\n+git config alias.gcc-descr \\!\"f() { if test \\${1:-no} = --full; then c=\\${2:-master}; r=\\$(git describe --all --abbrev=40 --match 'basepoints/gcc-[0-9]*' \\$c | sed -n 's,^\\\\(tags/\\\\)\\\\?basepoints/gcc-,r,p'); expr match \\${r:-no} '^r[0-9]\\\\+\\$' >/dev/null && r=\\${r}-0-g\\$(git rev-parse \\${2:-master}); else c=\\${1:-master}; r=\\$(git describe --all --match 'basepoints/gcc-[0-9]*' \\$c | sed -n 's,^\\\\(tags/\\\\)\\\\?basepoints/gcc-\\\\([0-9]\\\\+\\\\)-\\\\([0-9]\\\\+\\\\)-g[0-9a-f]*\\$,r\\\\2-\\\\3,p;s,^\\\\(tags/\\\\)\\\\?basepoints/gcc-\\\\([0-9]\\\\+\\\\)\\$,r\\\\2-0,p'); fi; if test -n \\$r; then o=\\$(git config --get gcc-config.upstream); rr=\\$(echo \\$r | sed -n 's,^r\\\\([0-9]\\\\+\\\\)-[0-9]\\\\+\\\\(-g[0-9a-f]\\\\+\\\\)\\\\?\\$,\\\\1,p'); if git rev-parse --verify --quiet \\${o:-origin}/releases/gcc-\\$rr >/dev/null; then m=releases/gcc-\\$rr; else m=master; fi; git merge-base --is-ancestor \\$c \\${o:-origin}/\\$m && \\echo \\${r}; fi; }; f\"\n git config alias.gcc-undescr \\!\"f() { o=\\$(git config --get gcc-config.upstream); r=\\$(echo \\$1 | sed -n 's,^r\\\\([0-9]\\\\+\\\\)-[0-9]\\\\+\\$,\\\\1,p'); n=\\$(echo \\$1 | sed -n 's,^r[0-9]\\\\+-\\\\([0-9]\\\\+\\\\)\\$,\\\\1,p'); test -z \\$r && echo Invalid id \\$1 && exit 1; h=\\$(git rev-parse --verify --quiet \\${o:-origin}/releases/gcc-\\$r); test -z \\$h && h=\\$(git rev-parse --verify --quiet \\${o:-origin}/master); p=\\$(git describe --all --match 'basepoints/gcc-'\\$r \\$h | sed -n 's,^\\\\(tags/\\\\)\\\\?basepoints/gcc-[0-9]\\\\+-\\\\([0-9]\\\\+\\\\)-g[0-9a-f]*\\$,\\\\2,p;s,^\\\\(tags/\\\\)\\\\?basepoints/gcc-[0-9]\\\\+\\$,0,p'); git rev-parse --verify \\$h~\\$(expr \\$p - \\$n); }; f\"\n \n # Make diff on MD files use \"(define\" as a function marker."}]}