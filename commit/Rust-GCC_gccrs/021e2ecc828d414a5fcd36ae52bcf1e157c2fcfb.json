{"sha": "021e2ecc828d414a5fcd36ae52bcf1e157c2fcfb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDIxZTJlY2M4MjhkNDE0YTVmY2QzNmFlNTJiY2YxZTE1N2MyZmNmYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2000-03-22T07:58:53Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2000-03-22T07:58:53Z"}, "message": "sparc.c (mem_min_alignment): If not optimizing...\n\n\t* config/sparc/sparc.c (mem_min_alignment): If not optimizing,\n\twe cannot be sure that if reload_completed base register will\n\tbe properly aligned.\n\nFrom-SVN: r32682", "tree": {"sha": "e0acda46287a4d17c3004e9588f96634a55b0abe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0acda46287a4d17c3004e9588f96634a55b0abe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/021e2ecc828d414a5fcd36ae52bcf1e157c2fcfb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/021e2ecc828d414a5fcd36ae52bcf1e157c2fcfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/021e2ecc828d414a5fcd36ae52bcf1e157c2fcfb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/021e2ecc828d414a5fcd36ae52bcf1e157c2fcfb/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1fa4609a03a54f4090e2c7a1624e8c07afbcb89b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fa4609a03a54f4090e2c7a1624e8c07afbcb89b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fa4609a03a54f4090e2c7a1624e8c07afbcb89b"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "cd24b1eaaf2512c4d2c8cc4484396faa67394c54", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/021e2ecc828d414a5fcd36ae52bcf1e157c2fcfb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/021e2ecc828d414a5fcd36ae52bcf1e157c2fcfb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=021e2ecc828d414a5fcd36ae52bcf1e157c2fcfb", "patch": "@@ -1,3 +1,9 @@\n+2000-03-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/sparc/sparc.c (mem_min_alignment): If not optimizing,\n+\twe cannot be sure that if reload_completed base register will\n+\tbe properly aligned.\n+\n 2000-03-21  Richard Henderson  <rth@cygnus.com>\n \n         * flow.c (delete_block): Fix typo last change."}, {"sha": "5a9c87b1f1e89931622610e2b9c3f2642b0d3dfc", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/021e2ecc828d414a5fcd36ae52bcf1e157c2fcfb/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/021e2ecc828d414a5fcd36ae52bcf1e157c2fcfb/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=021e2ecc828d414a5fcd36ae52bcf1e157c2fcfb", "patch": "@@ -2825,9 +2825,11 @@ mem_min_alignment (mem, desired)\n \t{\n \t  /* Check if the compiler has recorded some information\n \t     about the alignment of the base REG.  If reload has\n-\t     completed, we already matched with proper alignments.  */\n+\t     completed, we already matched with proper alignments.\n+\t     If not running global_alloc, reload might give us\n+\t     unaligned pointer to local stack though.  */\n \t  if (((cfun != 0 && REGNO_POINTER_ALIGN (regno) >= desired)\n-\t       || reload_completed)\n+\t       || (optimize && reload_completed))\n \t      && ((INTVAL (offset) & (desired - 1)) == 0))\n \t    return 1;\n \t}"}]}