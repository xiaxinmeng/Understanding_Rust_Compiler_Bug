{"sha": "71141b1bd537cc516e485c834c2d36abba3f4544", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzExNDFiMWJkNTM3Y2M1MTZlNDg1YzgzNGMyZDM2YWJiYTNmNDU0NA==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-07-30T02:06:41Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-07-30T02:06:41Z"}, "message": "c++: alias_ctad_tweaks and constrained dguide [PR95486]\n\nIn the below testcase, we're ICEing from alias_ctad_tweaks ultimately\nbecause the implied deduction guide for X's user-defined constructor\nalready has constraints associated with it.  We then carry over these\nconstraints to 'fprime', the overlying deduction guide for the alias\ntemplate Y, via tsubst_decl from alias_ctad_tweaks.  Later in\nalias_ctad_tweaks we call get_constraints followed by set_constraints\nwithout doing remove_constraints in between, which triggers the !found\nassert in set_constraints.\n\nThis patch fixes this issue by adding an intervening call to\nremove_constraints.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/95486\n\t* pt.c (alias_ctad_tweaks): Call remove_constraints before\n\tcalling set_constraints.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/95486\n\t* g++.dg/cpp2a/class-deduction-alias3.C: New test.", "tree": {"sha": "3a2a2dc206c084c9574823d7fa1bcf9115b95129", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a2a2dc206c084c9574823d7fa1bcf9115b95129"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71141b1bd537cc516e485c834c2d36abba3f4544", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71141b1bd537cc516e485c834c2d36abba3f4544", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71141b1bd537cc516e485c834c2d36abba3f4544", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71141b1bd537cc516e485c834c2d36abba3f4544/comments", "author": null, "committer": null, "parents": [{"sha": "f31dd9beb95f4beda1d2bd5c0526c42d0ce455c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f31dd9beb95f4beda1d2bd5c0526c42d0ce455c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f31dd9beb95f4beda1d2bd5c0526c42d0ce455c4"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "a7ab2bd28872737dd59f6ee58ae6795ec21265c6", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71141b1bd537cc516e485c834c2d36abba3f4544/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71141b1bd537cc516e485c834c2d36abba3f4544/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=71141b1bd537cc516e485c834c2d36abba3f4544", "patch": "@@ -28620,7 +28620,10 @@ alias_ctad_tweaks (tree tmpl, tree uguides)\n \t    }\n \n \t  if (ci)\n-\t    set_constraints (fprime, ci);\n+\t    {\n+\t      remove_constraints (fprime);\n+\t      set_constraints (fprime, ci);\n+\t    }\n \t}\n       else\n \t{"}, {"sha": "318d4c942ce5a590426525c242f2f34654b403f6", "filename": "gcc/testsuite/g++.dg/cpp2a/class-deduction-alias3.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71141b1bd537cc516e485c834c2d36abba3f4544/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fclass-deduction-alias3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71141b1bd537cc516e485c834c2d36abba3f4544/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fclass-deduction-alias3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fclass-deduction-alias3.C?ref=71141b1bd537cc516e485c834c2d36abba3f4544", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/95486\n+// { dg-do compile { target c++20 } }\n+\n+template<class T, class U>\n+struct X { X(U) requires __is_same(U, int) {} };\n+\n+template<class U>\n+using Y = X<void, U>;\n+\n+Y y{1};\n+Y z{'a'}; // { dg-error \"failed|no match\" }"}]}