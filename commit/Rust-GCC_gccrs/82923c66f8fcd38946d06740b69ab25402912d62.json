{"sha": "82923c66f8fcd38946d06740b69ab25402912d62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI5MjNjNjZmOGZjZDM4OTQ2ZDA2NzQwYjY5YWIyNTQwMjkxMmQ2Mg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-17T07:11:13Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-17T07:11:13Z"}, "message": "[multiple changes]\n\n2010-06-17  Thomas Quinot  <quinot@adacore.com>\n\n\t* put_scos.adb: Do not generate a blank line in SCOs when omitting the\n\tCP line for a disabled pragma.\n\n2010-06-17  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj-proc.adb, prj.adb, prj.ads (Check_Or_Set_Typed_Variable): New\n\tsubprogram.\n\t(Process_Declarative_Item): An invalid value in an typed variable\n\tdeclaration is no longer always fatal.\n\nFrom-SVN: r160875", "tree": {"sha": "c85c5d92c3cfe18e83913547baf5481b1eca8d2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c85c5d92c3cfe18e83913547baf5481b1eca8d2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82923c66f8fcd38946d06740b69ab25402912d62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82923c66f8fcd38946d06740b69ab25402912d62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82923c66f8fcd38946d06740b69ab25402912d62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82923c66f8fcd38946d06740b69ab25402912d62/comments", "author": null, "committer": null, "parents": [{"sha": "cfc3e933bd4c91d0d823c2e2b30a62d18f36d239", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfc3e933bd4c91d0d823c2e2b30a62d18f36d239", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfc3e933bd4c91d0d823c2e2b30a62d18f36d239"}], "stats": {"total": 191, "additions": 129, "deletions": 62}, "files": [{"sha": "46a50969500e9fe5133e3381c16f8b7a9023193a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82923c66f8fcd38946d06740b69ab25402912d62/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82923c66f8fcd38946d06740b69ab25402912d62/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=82923c66f8fcd38946d06740b69ab25402912d62", "patch": "@@ -1,3 +1,15 @@\n+2010-06-17  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* put_scos.adb: Do not generate a blank line in SCOs when omitting the\n+\tCP line for a disabled pragma.\n+\n+2010-06-17  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-proc.adb, prj.adb, prj.ads (Check_Or_Set_Typed_Variable): New\n+\tsubprogram.\n+\t(Process_Declarative_Item): An invalid value in an typed variable\n+\tdeclaration is no longer always fatal.\n+\n 2010-06-16  Arnaud Charlet  <charlet@adacore.com>\n \n \t* get_scos.adb, par_sco.adb, par_sco.ads, put_scos.adb, scos.adb,"}, {"sha": "57bfe51b30f8028b63297d20977d6c780289e2c9", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 96, "deletions": 54, "changes": 150, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82923c66f8fcd38946d06740b69ab25402912d62/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82923c66f8fcd38946d06740b69ab25402912d62/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=82923c66f8fcd38946d06740b69ab25402912d62", "patch": "@@ -1255,9 +1255,101 @@ package body Prj.Proc is\n       Pkg                    : Package_Id;\n       Item                   : Project_Node_Id)\n    is\n+      procedure Check_Or_Set_Typed_Variable\n+        (Value       : in out Variable_Value;\n+         Declaration : Project_Node_Id);\n+      --  Check whether Value is valid for this typed variable declaration. If\n+      --  it is an error, the behavior depends on the flags: either an error is\n+      --  reported, or a warning, or nothing. In the last two cases, the value\n+      --  of the variable is set to a valid value, replacing Value.\n+\n+      ---------------------------------\n+      -- Check_Or_Set_Typed_Variable --\n+      ---------------------------------\n+\n+      procedure Check_Or_Set_Typed_Variable\n+        (Value       : in out Variable_Value;\n+         Declaration : Project_Node_Id)\n+      is\n+         Loc : constant Source_Ptr :=\n+                 Location_Of (Declaration, From_Project_Node_Tree);\n+\n+         Reset_Value    : Boolean := False;\n+         Current_String : Project_Node_Id;\n+\n+      begin\n+         --  Report an error for an empty string\n+\n+         if Value.Value = Empty_String then\n+            Error_Msg_Name_1 := Name_Of (Declaration, From_Project_Node_Tree);\n+\n+            case Flags.Allow_Invalid_External is\n+               when Error =>\n+                  Error_Msg (Flags, \"no value defined for %%\", Loc, Project);\n+               when Warning =>\n+                  Reset_Value := True;\n+                  Error_Msg (Flags, \"?no value defined for %%\", Loc, Project);\n+               when Silent =>\n+                  Reset_Value := True;\n+            end case;\n+\n+         else\n+            --  Loop through all the valid strings for the\n+            --  string type and compare to the string value.\n+\n+            Current_String :=\n+              First_Literal_String\n+                (String_Type_Of (Declaration, From_Project_Node_Tree),\n+                 From_Project_Node_Tree);\n+            while Present (Current_String)\n+              and then String_Value_Of\n+                (Current_String, From_Project_Node_Tree) /= Value.Value\n+            loop\n+               Current_String :=\n+                 Next_Literal_String (Current_String, From_Project_Node_Tree);\n+            end loop;\n+\n+            --  Report error if string value is not one for the string type\n+\n+            if No (Current_String) then\n+               Error_Msg_Name_1 := Value.Value;\n+               Error_Msg_Name_2 :=\n+                 Name_Of (Declaration, From_Project_Node_Tree);\n+\n+               case Flags.Allow_Invalid_External is\n+                  when Error =>\n+                     Error_Msg\n+                       (Flags, \"value %% is illegal for typed string %%\",\n+                        Loc, Project);\n+                  when Warning =>\n+                     Error_Msg\n+                       (Flags, \"?value %% is illegal for typed string %%\",\n+                        Loc, Project);\n+                     Reset_Value := True;\n+                  when Silent =>\n+                     Reset_Value := True;\n+               end case;\n+            end if;\n+         end if;\n+\n+         if Reset_Value then\n+            Current_String :=\n+              First_Literal_String\n+                (String_Type_Of (Declaration, From_Project_Node_Tree),\n+                 From_Project_Node_Tree);\n+\n+            Value.Value := String_Value_Of\n+              (Current_String, From_Project_Node_Tree);\n+         end if;\n+      end Check_Or_Set_Typed_Variable;\n+\n+      --  Local variables\n+\n       Current_Declarative_Item : Project_Node_Id;\n       Current_Item             : Project_Node_Id;\n \n+   --  Start of processing for Process_Declarative_Items\n+\n    begin\n       --  Loop through declarative items\n \n@@ -1677,7 +1769,7 @@ package body Prj.Proc is\n \n                else\n                   declare\n-                     New_Value : constant Variable_Value :=\n+                     New_Value : Variable_Value :=\n                        Expression\n                          (Project                => Project,\n                           In_Tree                => In_Tree,\n@@ -1713,59 +1805,9 @@ package body Prj.Proc is\n                      if Kind_Of (Current_Item, From_Project_Node_Tree) =\n                           N_Typed_Variable_Declaration\n                      then\n-                        --  Report an error for an empty string\n-\n-                        if New_Value.Value = Empty_String then\n-                           Error_Msg_Name_1 :=\n-                             Name_Of (Current_Item, From_Project_Node_Tree);\n-                           Error_Msg\n-                             (Flags,\n-                              \"no value defined for %%\",\n-                              Location_Of\n-                                (Current_Item, From_Project_Node_Tree),\n-                              Project);\n-\n-                        else\n-                           declare\n-                              Current_String : Project_Node_Id;\n-\n-                           begin\n-                              --  Loop through all the valid strings for the\n-                              --  string type and compare to the string value.\n-\n-                              Current_String :=\n-                                First_Literal_String\n-                                  (String_Type_Of (Current_Item,\n-                                                   From_Project_Node_Tree),\n-                                                   From_Project_Node_Tree);\n-                              while Present (Current_String)\n-                                and then\n-                                  String_Value_Of\n-                                    (Current_String, From_Project_Node_Tree) /=\n-                                                               New_Value.Value\n-                              loop\n-                                 Current_String :=\n-                                   Next_Literal_String\n-                                     (Current_String, From_Project_Node_Tree);\n-                              end loop;\n-\n-                              --  Report an error if the string value is not\n-                              --  one for the string type.\n-\n-                              if No (Current_String) then\n-                                 Error_Msg_Name_1 := New_Value.Value;\n-                                 Error_Msg_Name_2 :=\n-                                   Name_Of\n-                                     (Current_Item, From_Project_Node_Tree);\n-                                 Error_Msg\n-                                   (Flags,\n-                                    \"value %% is illegal for typed string %%\",\n-                                    Location_Of\n-                                      (Current_Item, From_Project_Node_Tree),\n-                                    Project);\n-                              end if;\n-                           end;\n-                        end if;\n+                        Check_Or_Set_Typed_Variable\n+                          (Value       => New_Value,\n+                           Declaration => Current_Item);\n                      end if;\n \n                      --  Comment here ???"}, {"sha": "adfedce910b124289d388c7f71a3823a5b5ee5af", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82923c66f8fcd38946d06740b69ab25402912d62/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82923c66f8fcd38946d06740b69ab25402912d62/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=82923c66f8fcd38946d06740b69ab25402912d62", "patch": "@@ -1230,7 +1230,8 @@ package body Prj is\n       Allow_Duplicate_Basenames  : Boolean := True;\n       Compiler_Driver_Mandatory  : Boolean := False;\n       Error_On_Unknown_Language  : Boolean := True;\n-      Require_Obj_Dirs           : Error_Warning := Error)\n+      Require_Obj_Dirs           : Error_Warning := Error;\n+      Allow_Invalid_External     : Error_Warning := Error)\n       return Processing_Flags\n    is\n    begin\n@@ -1241,7 +1242,8 @@ package body Prj is\n          Allow_Duplicate_Basenames  => Allow_Duplicate_Basenames,\n          Error_On_Unknown_Language  => Error_On_Unknown_Language,\n          Compiler_Driver_Mandatory  => Compiler_Driver_Mandatory,\n-         Require_Obj_Dirs           => Require_Obj_Dirs);\n+         Require_Obj_Dirs           => Require_Obj_Dirs,\n+         Allow_Invalid_External     => Allow_Invalid_External);\n    end Create_Flags;\n \n    ------------"}, {"sha": "7571ad2458be54e78dd8c4d5fa9e73a23ff32136", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82923c66f8fcd38946d06740b69ab25402912d62/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82923c66f8fcd38946d06740b69ab25402912d62/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=82923c66f8fcd38946d06740b69ab25402912d62", "patch": "@@ -1452,7 +1452,8 @@ package Prj is\n       Allow_Duplicate_Basenames  : Boolean := True;\n       Compiler_Driver_Mandatory  : Boolean := False;\n       Error_On_Unknown_Language  : Boolean := True;\n-      Require_Obj_Dirs           : Error_Warning := Error)\n+      Require_Obj_Dirs           : Error_Warning := Error;\n+      Allow_Invalid_External     : Error_Warning := Error)\n       return Processing_Flags;\n    --  Function used to create Processing_Flags structure\n    --\n@@ -1481,6 +1482,10 @@ package Prj is\n    --  If Require_Obj_Dirs is true, then all object directories must exist\n    --  (possibly after they have been created automatically if the appropriate\n    --  switches were specified), or an error is raised.\n+   --\n+   --  If Allow_Invalid_External is Silent, then no error is reported when an\n+   --  invalid value is used for an external variable (and it doesn't match its\n+   --  type). Instead, the first possible value is used.\n \n    Gprbuild_Flags : constant Processing_Flags;\n    Gprclean_Flags : constant Processing_Flags;\n@@ -1589,6 +1594,7 @@ private\n       Compiler_Driver_Mandatory  : Boolean;\n       Error_On_Unknown_Language  : Boolean;\n       Require_Obj_Dirs           : Error_Warning;\n+      Allow_Invalid_External     : Error_Warning;\n    end record;\n \n    Gprbuild_Flags : constant Processing_Flags :=\n@@ -1598,7 +1604,8 @@ private\n       Allow_Duplicate_Basenames  => False,\n       Compiler_Driver_Mandatory  => True,\n       Error_On_Unknown_Language  => True,\n-      Require_Obj_Dirs           => Error);\n+      Require_Obj_Dirs           => Error,\n+      Allow_Invalid_External     => Error);\n \n    Gprclean_Flags : constant Processing_Flags :=\n      (Report_Error               => null,\n@@ -1607,7 +1614,8 @@ private\n       Allow_Duplicate_Basenames  => False,\n       Compiler_Driver_Mandatory  => True,\n       Error_On_Unknown_Language  => True,\n-      Require_Obj_Dirs           => Warning);\n+      Require_Obj_Dirs           => Warning,\n+      Allow_Invalid_External     => Error);\n \n    Gnatmake_Flags : constant Processing_Flags :=\n      (Report_Error               => null,\n@@ -1616,6 +1624,7 @@ private\n       Allow_Duplicate_Basenames  => False,\n       Compiler_Driver_Mandatory  => False,\n       Error_On_Unknown_Language  => False,\n-      Require_Obj_Dirs           => Error);\n+      Require_Obj_Dirs           => Error,\n+      Allow_Invalid_External     => Error);\n \n end Prj;"}, {"sha": "db608af2445de2035788b4a2aba7695b9a02f5dc", "filename": "gcc/ada/put_scos.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82923c66f8fcd38946d06740b69ab25402912d62/gcc%2Fada%2Fput_scos.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82923c66f8fcd38946d06740b69ab25402912d62/gcc%2Fada%2Fput_scos.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fput_scos.adb?ref=82923c66f8fcd38946d06740b69ab25402912d62", "patch": "@@ -134,6 +134,8 @@ begin\n                         end if;\n                      end loop;\n \n+                     Write_Info_Terminate;\n+\n                   --  Statement continuations should not occur since they\n                   --  are supposed to have been handled in the loop above.\n \n@@ -197,13 +199,13 @@ begin\n                               Start := Start + 1;\n                            end;\n                         end loop;\n+\n+                        Write_Info_Terminate;\n                      end if;\n \n                   when others =>\n                      raise Program_Error;\n                end case;\n-\n-               Write_Info_Terminate;\n             end Output_SCO_Line;\n \n             Start := Start + 1;"}]}