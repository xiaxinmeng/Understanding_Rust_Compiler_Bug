{"sha": "f4770271b2ece2193dae9fe3d8197b8d63d13ceb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQ3NzAyNzFiMmVjZTIxOTNkYWU5ZmUzZDgxOTdiOGQ2M2QxM2NlYg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-01-20T11:03:23Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-01-20T11:03:23Z"}, "message": "rtl.def (CONST_VECTOR): Use RTX_CONST_OBJ.\n\n        * rtl.def (CONST_VECTOR): Use RTX_CONST_OBJ.\n        * rtl.h (CONSTANT_P): Don't special case CONST_VECTOR.\n\nFrom-SVN: r93958", "tree": {"sha": "28f7b3fb7a40d2628e962c9cbcd19ff22b0ec006", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28f7b3fb7a40d2628e962c9cbcd19ff22b0ec006"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4770271b2ece2193dae9fe3d8197b8d63d13ceb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4770271b2ece2193dae9fe3d8197b8d63d13ceb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4770271b2ece2193dae9fe3d8197b8d63d13ceb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4770271b2ece2193dae9fe3d8197b8d63d13ceb/comments", "author": null, "committer": null, "parents": [{"sha": "b4bb3199a4c08f0a0d079ee230882a568f7adce3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4bb3199a4c08f0a0d079ee230882a568f7adce3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4bb3199a4c08f0a0d079ee230882a568f7adce3"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "c8cc63c48ecb014c5ed8a3025751e604f986098e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4770271b2ece2193dae9fe3d8197b8d63d13ceb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4770271b2ece2193dae9fe3d8197b8d63d13ceb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f4770271b2ece2193dae9fe3d8197b8d63d13ceb", "patch": "@@ -1,3 +1,8 @@\n+2005-01-20  Richard Henderson  <rth@redhat.com>\n+\n+\t* rtl.def (CONST_VECTOR): Use RTX_CONST_OBJ.\n+\t* rtl.h (CONSTANT_P): Don't special case CONST_VECTOR.\n+\n 2005-01-19  Richard Henderson  <rth@redhat.com>\n \n \tPR target/19350"}, {"sha": "8ef471f984589b41bca6815ee6b465d518371c36", "filename": "gcc/rtl.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4770271b2ece2193dae9fe3d8197b8d63d13ceb/gcc%2Frtl.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4770271b2ece2193dae9fe3d8197b8d63d13ceb/gcc%2Frtl.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.def?ref=f4770271b2ece2193dae9fe3d8197b8d63d13ceb", "patch": "@@ -315,7 +315,7 @@ DEF_RTL_EXPR(CONST_INT, \"const_int\", \"w\", RTX_CONST_OBJ)\n DEF_RTL_EXPR(CONST_DOUBLE, \"const_double\", CONST_DOUBLE_FORMAT, RTX_CONST_OBJ)\n \n /* Describes a vector constant.  */\n-DEF_RTL_EXPR(CONST_VECTOR, \"const_vector\", \"E\", RTX_EXTRA)\n+DEF_RTL_EXPR(CONST_VECTOR, \"const_vector\", \"E\", RTX_CONST_OBJ)\n \n /* String constant.  Used for attributes in machine descriptions and\n    for special cases in DWARF2 debug output.  NOT used for source-"}, {"sha": "3fe09630105e6fd498672c318a29b57eb22448c8", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4770271b2ece2193dae9fe3d8197b8d63d13ceb/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4770271b2ece2193dae9fe3d8197b8d63d13ceb/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=f4770271b2ece2193dae9fe3d8197b8d63d13ceb", "patch": "@@ -382,8 +382,7 @@ struct rtvec_def GTY(()) {\n /* 1 if X is a constant value that is an integer.  */\n \n #define CONSTANT_P(X)   \\\n-  (GET_RTX_CLASS (GET_CODE (X)) == RTX_CONST_OBJ\t\t\t\\\n-   || GET_CODE (X) == CONST_VECTOR)\n+  (GET_RTX_CLASS (GET_CODE (X)) == RTX_CONST_OBJ)\n \n /* 1 if X can be used to represent an object.  */\n #define OBJECT_P(X)\t\t\t\t\t\t\t\\"}]}