{"sha": "da86c81e6522f9b27cffd04f728e0edd937d09fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE4NmM4MWU2NTIyZjliMjdjZmZkMDRmNzI4ZTBlZGQ5MzdkMDlmYw==", "commit": {"author": {"name": "Peter Bergner", "email": "bergner@vnet.ibm.com", "date": "2018-02-09T16:32:37Z"}, "committer": {"name": "Peter Bergner", "email": "bergner@gcc.gnu.org", "date": "2018-02-09T16:32:37Z"}, "message": "re PR target/83926 (ICE during RTL pass: ira, in elimination_costs_in_insn, at reload1.c:3633)\n\ngcc/\n\tPR target/83926\n\t* config/rs6000/vsx.md (vsx_mul_v2di): Handle generating a 64-bit\n\tmultiply in 32-bit mode.\n\t(vsx_div_v2di): Handle generating a 64-bit signed divide in 32-bit mode.\n\t(vsx_udiv_v2di): Handle generating a 64-bit unsigned divide in 32-bit\n\tmode.\n\ngcc/testsuite/\n\tPR target/83926\n\t* gcc.target/powerpc/pr83926.c: New test.\n\t* gcc.target/powerpc/builtins-1-be.c: Filter out gimple folding disabled\n\tmessage.  Fix test for running in 32-bit mode.\n\nFrom-SVN: r257531", "tree": {"sha": "e435bddb6f077f09144e2a561818abd0302ba4b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e435bddb6f077f09144e2a561818abd0302ba4b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da86c81e6522f9b27cffd04f728e0edd937d09fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da86c81e6522f9b27cffd04f728e0edd937d09fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da86c81e6522f9b27cffd04f728e0edd937d09fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da86c81e6522f9b27cffd04f728e0edd937d09fc/comments", "author": {"login": "peter-bergner", "id": 17504345, "node_id": "MDQ6VXNlcjE3NTA0MzQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17504345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peter-bergner", "html_url": "https://github.com/peter-bergner", "followers_url": "https://api.github.com/users/peter-bergner/followers", "following_url": "https://api.github.com/users/peter-bergner/following{/other_user}", "gists_url": "https://api.github.com/users/peter-bergner/gists{/gist_id}", "starred_url": "https://api.github.com/users/peter-bergner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peter-bergner/subscriptions", "organizations_url": "https://api.github.com/users/peter-bergner/orgs", "repos_url": "https://api.github.com/users/peter-bergner/repos", "events_url": "https://api.github.com/users/peter-bergner/events{/privacy}", "received_events_url": "https://api.github.com/users/peter-bergner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cc60cad6155362fe0eca87937bccd75d9fca3ec6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc60cad6155362fe0eca87937bccd75d9fca3ec6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc60cad6155362fe0eca87937bccd75d9fca3ec6"}], "stats": {"total": 170, "additions": 133, "deletions": 37}, "files": [{"sha": "c42ffa648bc0a39369516054dba3c94787cfe6b7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da86c81e6522f9b27cffd04f728e0edd937d09fc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da86c81e6522f9b27cffd04f728e0edd937d09fc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=da86c81e6522f9b27cffd04f728e0edd937d09fc", "patch": "@@ -1,3 +1,12 @@\n+2018-02-09  Peter Bergner  <bergner@vnet.ibm.com>\n+\n+\tPR target/83926\n+\t* config/rs6000/vsx.md (vsx_mul_v2di): Handle generating a 64-bit\n+\tmultiply in 32-bit mode.\n+\t(vsx_div_v2di): Handle generating a 64-bit signed divide in 32-bit mode.\n+\t(vsx_udiv_v2di): Handle generating a 64-bit unsigned divide in 32-bit\n+\tmode.\n+\n 2018-02-09  Sebastian Perta  <sebastian.perta@renesas.com>\n \n \t* config/rx/constraints.md: added new constraint CALL_OP_SYMBOL_REF "}, {"sha": "86efdced2a8cbe5606516d0713202a6eac1dded2", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 58, "deletions": 6, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da86c81e6522f9b27cffd04f728e0edd937d09fc/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da86c81e6522f9b27cffd04f728e0edd937d09fc/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=da86c81e6522f9b27cffd04f728e0edd937d09fc", "patch": "@@ -1650,10 +1650,22 @@\n   rtx op5 = gen_reg_rtx (DImode);\n   emit_insn (gen_vsx_extract_v2di (op3, op1, GEN_INT (0)));\n   emit_insn (gen_vsx_extract_v2di (op4, op2, GEN_INT (0)));\n-  emit_insn (gen_muldi3 (op5, op3, op4));\n+  if (TARGET_POWERPC64)\n+    emit_insn (gen_muldi3 (op5, op3, op4));\n+  else\n+    {\n+      rtx ret = expand_mult (DImode, op3, op4, NULL, 0, false);\n+      emit_move_insn (op5, ret);\n+    }\n   emit_insn (gen_vsx_extract_v2di (op3, op1, GEN_INT (1)));\n   emit_insn (gen_vsx_extract_v2di (op4, op2, GEN_INT (1)));\n-  emit_insn (gen_muldi3 (op3, op3, op4));\n+  if (TARGET_POWERPC64)\n+    emit_insn (gen_muldi3 (op3, op3, op4));\n+  else\n+    {\n+      rtx ret = expand_mult (DImode, op3, op4, NULL, 0, false);\n+      emit_move_insn (op3, ret);\n+    }\n   emit_insn (gen_vsx_concat_v2di (op0, op5, op3));\n   DONE;\n }\"\n@@ -1688,10 +1700,30 @@\n   rtx op5 = gen_reg_rtx (DImode);\n   emit_insn (gen_vsx_extract_v2di (op3, op1, GEN_INT (0)));\n   emit_insn (gen_vsx_extract_v2di (op4, op2, GEN_INT (0)));\n-  emit_insn (gen_divdi3 (op5, op3, op4));\n+  if (TARGET_POWERPC64)\n+    emit_insn (gen_divdi3 (op5, op3, op4));\n+  else\n+    {\n+      rtx libfunc = optab_libfunc (sdiv_optab, DImode);\n+      rtx target = emit_library_call_value (libfunc,\n+\t\t\t\t\t    op5, LCT_NORMAL, DImode,\n+\t\t\t\t\t    op3, DImode,\n+\t\t\t\t\t    op4, DImode);\n+      emit_move_insn (op5, target);\n+    }\n   emit_insn (gen_vsx_extract_v2di (op3, op1, GEN_INT (1)));\n   emit_insn (gen_vsx_extract_v2di (op4, op2, GEN_INT (1)));\n-  emit_insn (gen_divdi3 (op3, op3, op4));\n+  if (TARGET_POWERPC64)\n+    emit_insn (gen_divdi3 (op3, op3, op4));\n+  else\n+    {\n+      rtx libfunc = optab_libfunc (sdiv_optab, DImode);\n+      rtx target = emit_library_call_value (libfunc,\n+\t\t\t\t\t    op3, LCT_NORMAL, DImode,\n+\t\t\t\t\t    op3, DImode,\n+\t\t\t\t\t    op4, DImode);\n+      emit_move_insn (op3, target);\n+    }\n   emit_insn (gen_vsx_concat_v2di (op0, op5, op3));\n   DONE;\n }\"\n@@ -1716,10 +1748,30 @@\n   rtx op5 = gen_reg_rtx (DImode);\n   emit_insn (gen_vsx_extract_v2di (op3, op1, GEN_INT (0)));\n   emit_insn (gen_vsx_extract_v2di (op4, op2, GEN_INT (0)));\n-  emit_insn (gen_udivdi3 (op5, op3, op4));\n+  if (TARGET_POWERPC64)\n+    emit_insn (gen_udivdi3 (op5, op3, op4));\n+  else\n+    {\n+      rtx libfunc = optab_libfunc (udiv_optab, DImode);\n+      rtx target = emit_library_call_value (libfunc,\n+\t\t\t\t\t    op5, LCT_NORMAL, DImode,\n+\t\t\t\t\t    op3, DImode,\n+\t\t\t\t\t    op4, DImode);\n+      emit_move_insn (op5, target);\n+    }\n   emit_insn (gen_vsx_extract_v2di (op3, op1, GEN_INT (1)));\n   emit_insn (gen_vsx_extract_v2di (op4, op2, GEN_INT (1)));\n-  emit_insn (gen_udivdi3 (op3, op3, op4));\n+  if (TARGET_POWERPC64)\n+    emit_insn (gen_udivdi3 (op3, op3, op4));\n+  else\n+    {\n+      rtx libfunc = optab_libfunc (udiv_optab, DImode);\n+      rtx target = emit_library_call_value (libfunc,\n+\t\t\t\t\t    op3, LCT_NORMAL, DImode,\n+\t\t\t\t\t    op3, DImode,\n+\t\t\t\t\t    op4, DImode);\n+      emit_move_insn (op3, target);\n+    }\n   emit_insn (gen_vsx_concat_v2di (op0, op5, op3));\n   DONE;\n }\""}, {"sha": "f381e22a9b9933dbdc64fb1113924666b3177505", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da86c81e6522f9b27cffd04f728e0edd937d09fc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da86c81e6522f9b27cffd04f728e0edd937d09fc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=da86c81e6522f9b27cffd04f728e0edd937d09fc", "patch": "@@ -1,3 +1,10 @@\n+2018-02-09  Peter Bergner  <bergner@vnet.ibm.com>\n+\n+\tPR target/83926\n+\t* gcc.target/powerpc/pr83926.c: New test.\n+\t* gcc.target/powerpc/builtins-1-be.c: Filter out gimple folding disabled\n+\tmessage.  Fix test for running in 32-bit mode.\n+\n 2018-02-09  Tamar Christina  <tamar.christina@arm.com>\n \n \tPR target/82641"}, {"sha": "fb807665535199020d27b421f4536b8201182939", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-1-be.c", "status": "modified", "additions": 37, "deletions": 31, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da86c81e6522f9b27cffd04f728e0edd937d09fc/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-1-be.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da86c81e6522f9b27cffd04f728e0edd937d09fc/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-1-be.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-1-be.c?ref=da86c81e6522f9b27cffd04f728e0edd937d09fc", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile { target { powerpc64-*-* } } } */\n /* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power8\" } } */\n-/* { dg-options \"-mcpu=power8 -O0 -mno-fold-gimple\" } */\n+/* { dg-options \"-mcpu=power8 -O0 -mno-fold-gimple -dp\" } */\n+/* { dg-prune-output \"gimple folding of rs6000 builtins has been disabled.\" } */\n \n /* Test that a number of newly added builtin overloads are accepted\n    by the compiler.  */\n@@ -22,10 +23,10 @@\n    vec_ctf    xvmuldp \n    vec_cts xvcvdpsxds, vctsxs\n    vec_ctu   xvcvdpuxds, vctuxs\n-   vec_div   divd, divdu\n+   vec_div   divd, divdu | __divdi3(), __udivdi3()\n    vec_mergel vmrghb, vmrghh, xxmrghw\n    vec_mergeh  xxmrglw, vmrglh\n-   vec_mul mulld\n+   vec_mul mulld | mullw, mulhwu\n    vec_nor xxlnor\n    vec_or xxlor\n    vec_packsu vpksdus\n@@ -36,34 +37,39 @@\n    vec_rsqrt  xvrsqrtesp\n    vec_rsqrte xvrsqrtesp  */\n \n-/* { dg-final { scan-assembler-times \"vcmpequd.\" 4 } } */\n-/* { dg-final { scan-assembler-times \"vcmpgtud.\" 8 } } */\n-/* { dg-final { scan-assembler-times \"xxland\" 29 } } */\n-/* { dg-final { scan-assembler-times \"vclzb\" 2 } } */\n-/* { dg-final { scan-assembler-times \"vclzb\" 2 } } */\n-/* { dg-final { scan-assembler-times \"vclzw\" 2 } } */\n-/* { dg-final { scan-assembler-times \"vclzh\" 2 } } */\n-/* { dg-final { scan-assembler-times \"xvcpsgnsp\" 1 } } */\n-/* { dg-final { scan-assembler-times \"xvmuldp\" 6 } } */\n-/* { dg-final { scan-assembler-times \"xvcvdpsxds\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vctsxs\" 1 } } */\n-/* { dg-final { scan-assembler-times \"xvcvdpuxds\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vctuxs\" 1 } } */\n-/* { dg-final { scan-assembler-times \"divd\" 4 } } */\n-/* { dg-final { scan-assembler-times \"divdu\" 2 } } */\n-/* { dg-final { scan-assembler-times \"vmrghb\" 0 } } */\n-/* { dg-final { scan-assembler-times \"vmrghh\" 3 } } */\n-/* { dg-final { scan-assembler-times \"xxmrghw\" 1 } } */\n-/* { dg-final { scan-assembler-times \"xxmrglw\" 4 } } */\n-/* { dg-final { scan-assembler-times \"vmrglh\" 4 } } */\n-/* { dg-final { scan-assembler-times \"mulld\" 4 } } */\n-/* { dg-final { scan-assembler-times \"xxlnor\" 19 } } */\n-/* { dg-final { scan-assembler-times \"xxlor\" 14 } } */\n-/* { dg-final { scan-assembler-times \"vpksdus\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vperm\" 2 } } */\n-/* { dg-final { scan-assembler-times \"xvrdpi\" 1 } } */\n-/* { dg-final { scan-assembler-times \"xxsel\" 6 } } */\n-/* { dg-final { scan-assembler-times \"xxlxor\" 6 } } */\n+/* { dg-final { scan-assembler-times {\\mvcmpequd\\M\\.} 4 } } */\n+/* { dg-final { scan-assembler-times {\\mvcmpgtud\\M\\.} 8 } } */\n+/* { dg-final { scan-assembler-times {\\mxxland\\M} 16 } } */\n+/* { dg-final { scan-assembler-times {\\mxxlandc\\M} 13 } } */\n+/* { dg-final { scan-assembler-times {\\mvclzb\\M} 2 } } */\n+/* { dg-final { scan-assembler-times {\\mvclzb\\M} 2 } } */\n+/* { dg-final { scan-assembler-times {\\mvclzw\\M} 2 } } */\n+/* { dg-final { scan-assembler-times {\\mvclzh\\M} 2 } } */\n+/* { dg-final { scan-assembler-times {\\mxvcpsgnsp\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mxvmuldp\\M} 6 } } */\n+/* { dg-final { scan-assembler-times {\\mxvcvdpsxds\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mvctsxs\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mxvcvdpuxds\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mvctuxs\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mvmrghb\\M} 0 } } */\n+/* { dg-final { scan-assembler-times {\\mvmrghh\\M} 3 } } */\n+/* { dg-final { scan-assembler-times {\\mxxmrghw\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mxxmrglw\\M} 4 } } */\n+/* { dg-final { scan-assembler-times {\\mvmrglh\\M} 4 } } */\n+/* { dg-final { scan-assembler-times {\\mxxlnor\\M} 6 } } */\n+/* { dg-final { scan-assembler-times {(?n)\\mxxlor\\M.*\\mboolv4si3_internal\\M} 6 } } */\n+/* { dg-final { scan-assembler-times {\\mvpksdus\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mvperm\\M} 2 } } */\n+/* { dg-final { scan-assembler-times {\\mxvrdpi\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mxxsel\\M} 6 } } */\n+/* { dg-final { scan-assembler-times {\\mxxlxor\\M} 6 } } */\n+/* { dg-final { scan-assembler-times {\\mdivd\\M} 2 { target lp64 } } } */\n+/* { dg-final { scan-assembler-times {\\mdivdu\\M} 2 { target lp64 } } } */\n+/* { dg-final { scan-assembler-times {\\mmulld\\M} 4 { target lp64 } } } */\n+/* { dg-final { scan-assembler-times {\\mbl __divdi3\\M} 2 { target ilp32 } } } */\n+/* { dg-final { scan-assembler-times {\\mbl __udivdi3\\M} 2 { target ilp32 } } } */\n+/* { dg-final { scan-assembler-times {\\mmullw\\M} 12 { target ilp32 } } } */\n+/* { dg-final { scan-assembler-times {\\mmulhwu\\M} 4 { target ilp32 } } } */\n \n /* The source code for the test is in builtins-1.h.  */\n #include \"builtins-1.h\""}, {"sha": "3188ade6f0b39f87adc7c92269fd4e1fd6d05231", "filename": "gcc/testsuite/gcc.target/powerpc/pr83926.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da86c81e6522f9b27cffd04f728e0edd937d09fc/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr83926.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da86c81e6522f9b27cffd04f728e0edd937d09fc/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr83926.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr83926.c?ref=da86c81e6522f9b27cffd04f728e0edd937d09fc", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile { target { powerpc*-*-* } } } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power8\" } } */\n+/* { dg-options \"-O2 -mcpu=power8 -mno-fold-gimple\" } */\n+\n+__attribute__ ((altivec(vector__))) long long\n+sdiv (__attribute__ ((altivec(vector__))) long long a,\n+      __attribute__ ((altivec(vector__))) long long b)\n+{\n+  return __builtin_vsx_div_2di (a, b);\n+}\n+__attribute__ ((altivec(vector__))) unsigned long long\n+udiv (__attribute__ ((altivec(vector__))) unsigned long long a,\n+      __attribute__ ((altivec(vector__))) unsigned long long b)\n+{\n+  return __builtin_vsx_udiv_2di (a, b);\n+}\n+__attribute__ ((altivec(vector__))) long long\n+smul (__attribute__ ((altivec(vector__))) long long a,\n+      __attribute__ ((altivec(vector__))) long long b)\n+{\n+  return __builtin_vsx_mul_2di (a, b);\n+}"}]}