{"sha": "ebaf3659632c0d5f45ca86593562c6c8367fda67", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWJhZjM2NTk2MzJjMGQ1ZjQ1Y2E4NjU5MzU2MmM2YzgzNjdmZGE2Nw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-06-03T13:22:59Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-06-03T13:22:59Z"}, "message": "Enforce allocator::value_type consistency for containers in C++2a\n\nIn previous standards it is undefined for a container and its allocator\nto have a different value_type. Libstdc++ has traditionally allowed it\nas an extension, automatically rebinding the allocator to the\ncontainer's value_type. Since GCC 8.1 that extension has been disabled\nfor C++11 and later when __STRICT_ANSI__ is defined (i.e. for\n-std=c++11, -std=c++14, -std=c++17 and -std=c++2a).\n\nSince the acceptance of P1463R1 into the C++2a draft an incorrect\nallocator::value_type now requires a diagnostic. This patch implements\nthat by enabling the static_assert for -std=gnu++2a as well.\n\n\t* doc/xml/manual/status_cxx2020.xml: Document P1463R1 status.\n\t* include/bits/forward_list.h [__cplusplus > 201703]: Enable\n\tallocator::value_type assertion for C++2a.\n\t* include/bits/hashtable.h: Likewise.\n\t* include/bits/stl_deque.h: Likewise.\n\t* include/bits/stl_list.h: Likewise.\n\t* include/bits/stl_map.h: Likewise.\n\t* include/bits/stl_multimap.h: Likewise.\n\t* include/bits/stl_multiset.h: Likewise.\n\t* include/bits/stl_set.h: Likewise.\n\t* include/bits/stl_vector.h: Likewise.\n\t* testsuite/23_containers/deque/48101-3_neg.cc: New test.\n\t* testsuite/23_containers/forward_list/48101-3_neg.cc: New test.\n\t* testsuite/23_containers/list/48101-3_neg.cc: New test.\n\t* testsuite/23_containers/map/48101-3_neg.cc: New test.\n\t* testsuite/23_containers/multimap/48101-3_neg.cc: New test.\n\t* testsuite/23_containers/multiset/48101-3_neg.cc: New test.\n\t* testsuite/23_containers/set/48101-3_neg.cc: New test.\n\t* testsuite/23_containers/unordered_map/48101-3_neg.cc: New test.\n\t* testsuite/23_containers/unordered_multimap/48101-3_neg.cc: New test.\n\t* testsuite/23_containers/unordered_multiset/48101-3_neg.cc: New test.\n\t* testsuite/23_containers/unordered_set/48101-3_neg.cc: New test.\n\t* testsuite/23_containers/vector/48101-3_neg.cc: New test.\n\nFrom-SVN: r271866", "tree": {"sha": "b6033cee18e89d7cf52bfa6413f4d1571226478d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6033cee18e89d7cf52bfa6413f4d1571226478d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ebaf3659632c0d5f45ca86593562c6c8367fda67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebaf3659632c0d5f45ca86593562c6c8367fda67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebaf3659632c0d5f45ca86593562c6c8367fda67", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebaf3659632c0d5f45ca86593562c6c8367fda67/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2b00d2ba461d6dafdeccf6d93828b349b5e7f76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2b00d2ba461d6dafdeccf6d93828b349b5e7f76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2b00d2ba461d6dafdeccf6d93828b349b5e7f76"}], "stats": {"total": 411, "additions": 402, "deletions": 9}, "files": [{"sha": "2fca1a36abf937ad73eaa076725a92786d6fd9db", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ebaf3659632c0d5f45ca86593562c6c8367fda67", "patch": "@@ -1,3 +1,29 @@\n+2019-06-03  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/xml/manual/status_cxx2020.xml: Document P1463R1 status.\n+\t* include/bits/forward_list.h [__cplusplus > 201703]: Enable\n+\tallocator::value_type assertion for C++2a.\n+\t* include/bits/hashtable.h: Likewise.\n+\t* include/bits/stl_deque.h: Likewise.\n+\t* include/bits/stl_list.h: Likewise.\n+\t* include/bits/stl_map.h: Likewise.\n+\t* include/bits/stl_multimap.h: Likewise.\n+\t* include/bits/stl_multiset.h: Likewise.\n+\t* include/bits/stl_set.h: Likewise.\n+\t* include/bits/stl_vector.h: Likewise.\n+\t* testsuite/23_containers/deque/48101-3_neg.cc: New test.\n+\t* testsuite/23_containers/forward_list/48101-3_neg.cc: New test.\n+\t* testsuite/23_containers/list/48101-3_neg.cc: New test.\n+\t* testsuite/23_containers/map/48101-3_neg.cc: New test.\n+\t* testsuite/23_containers/multimap/48101-3_neg.cc: New test.\n+\t* testsuite/23_containers/multiset/48101-3_neg.cc: New test.\n+\t* testsuite/23_containers/set/48101-3_neg.cc: New test.\n+\t* testsuite/23_containers/unordered_map/48101-3_neg.cc: New test.\n+\t* testsuite/23_containers/unordered_multimap/48101-3_neg.cc: New test.\n+\t* testsuite/23_containers/unordered_multiset/48101-3_neg.cc: New test.\n+\t* testsuite/23_containers/unordered_set/48101-3_neg.cc: New test.\n+\t* testsuite/23_containers/vector/48101-3_neg.cc: New test.\n+\n 2019-05-31  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* doc/xml/manual/allocator.xml: Move hoard.org back to http."}, {"sha": "4b0336931f49dc1d969ce1ef0670ee26180c1b5c", "filename": "libstdc++-v3/doc/xml/manual/status_cxx2020.xml", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2020.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2020.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2020.xml?ref=ebaf3659632c0d5f45ca86593562c6c8367fda67", "patch": "@@ -951,6 +951,21 @@ Feature-testing recommendations for C++</link>.\n       <entry align=\"center\"> 9.1 </entry>\n       <entry />\n     </row>\n+\n+    <row>\n+      <entry>\n+        Mandating the Standard Library:\n+        Clause 21 - Containers library\n+      </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1463r1.pdf\">\n+        P1463R1\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> 10 </entry>\n+      <entry/>\n+    </row>\n+\n   </tbody>\n </tgroup>\n </table>"}, {"sha": "e686283a43242ad876c428b652cddf6c9a3a8084", "filename": "libstdc++-v3/include/bits/forward_list.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h?ref=ebaf3659632c0d5f45ca86593562c6c8367fda67", "patch": "@@ -421,7 +421,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n     {\n       static_assert(is_same<typename remove_cv<_Tp>::type, _Tp>::value,\n \t  \"std::forward_list must have a non-const, non-volatile value_type\");\n-#ifdef __STRICT_ANSI__\n+#if __cplusplus > 201703L || defined __STRICT_ANSI__\n       static_assert(is_same<typename _Alloc::value_type, _Tp>::value,\n \t  \"std::forward_list must have the same value_type as its allocator\");\n #endif"}, {"sha": "384e39877f26673236059cf1e1524b605707c85e", "filename": "libstdc++-v3/include/bits/hashtable.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h?ref=ebaf3659632c0d5f45ca86593562c6c8367fda67", "patch": "@@ -188,7 +188,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     {\n       static_assert(is_same<typename remove_cv<_Value>::type, _Value>::value,\n \t  \"unordered container must have a non-const, non-volatile value_type\");\n-#ifdef __STRICT_ANSI__\n+#if __cplusplus > 201703L || defined __STRICT_ANSI__\n       static_assert(is_same<typename _Alloc::value_type, _Value>{},\n \t  \"unordered container must have the same value_type as its allocator\");\n #endif"}, {"sha": "ac76d681ff00625e1bbe67b82d64ecf1275a2111", "filename": "libstdc++-v3/include/bits/stl_deque.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h?ref=ebaf3659632c0d5f45ca86593562c6c8367fda67", "patch": "@@ -824,7 +824,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #if __cplusplus >= 201103L\n       static_assert(is_same<typename remove_cv<_Tp>::type, _Tp>::value,\n \t  \"std::deque must have a non-const, non-volatile value_type\");\n-# ifdef __STRICT_ANSI__\n+# if __cplusplus > 201703L || defined __STRICT_ANSI__\n       static_assert(is_same<typename _Alloc::value_type, _Tp>::value,\n \t  \"std::deque must have the same value_type as its allocator\");\n # endif"}, {"sha": "701982538dfe4d980b6b5865415d61bd07bca67a", "filename": "libstdc++-v3/include/bits/stl_list.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h?ref=ebaf3659632c0d5f45ca86593562c6c8367fda67", "patch": "@@ -563,7 +563,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n #if __cplusplus >= 201103L\n       static_assert(is_same<typename remove_cv<_Tp>::type, _Tp>::value,\n \t  \"std::list must have a non-const, non-volatile value_type\");\n-# ifdef __STRICT_ANSI__\n+# if __cplusplus > 201703L || defined __STRICT_ANSI__\n       static_assert(is_same<typename _Alloc::value_type, _Tp>::value,\n \t  \"std::list must have the same value_type as its allocator\");\n # endif"}, {"sha": "b1083d572d6a1f6462692b48131ac0a1aff2a492", "filename": "libstdc++-v3/include/bits/stl_map.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_map.h?ref=ebaf3659632c0d5f45ca86593562c6c8367fda67", "patch": "@@ -118,7 +118,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       __glibcxx_class_requires2(value_type, _Alloc_value_type, _SameTypeConcept)\n #endif\n \n-#if __cplusplus >= 201103L && defined(__STRICT_ANSI__)\n+#if __cplusplus > 201703L || defined __STRICT_ANSI__\n       static_assert(is_same<typename _Alloc::value_type, value_type>::value,\n \t  \"std::map must have the same value_type as its allocator\");\n #endif"}, {"sha": "bb4aece96bf61060d93832a3a3f81535043eac11", "filename": "libstdc++-v3/include/bits/stl_multimap.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multimap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multimap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multimap.h?ref=ebaf3659632c0d5f45ca86593562c6c8367fda67", "patch": "@@ -117,7 +117,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       __glibcxx_class_requires2(value_type, _Alloc_value_type, _SameTypeConcept)\n #endif\n \n-#if __cplusplus >= 201103L && defined(__STRICT_ANSI__)\n+#if __cplusplus > 201703L || defined __STRICT_ANSI__\n       static_assert(is_same<typename _Alloc::value_type, value_type>::value,\n \t  \"std::multimap must have the same value_type as its allocator\");\n #endif"}, {"sha": "96fa14e2afa08cda095381e3098fbdb0c539dcae", "filename": "libstdc++-v3/include/bits/stl_multiset.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multiset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multiset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multiset.h?ref=ebaf3659632c0d5f45ca86593562c6c8367fda67", "patch": "@@ -109,7 +109,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #if __cplusplus >= 201103L\n       static_assert(is_same<typename remove_cv<_Key>::type, _Key>::value,\n \t  \"std::multiset must have a non-const, non-volatile value_type\");\n-# ifdef __STRICT_ANSI__\n+# if __cplusplus > 201703L || defined __STRICT_ANSI__\n       static_assert(is_same<typename _Alloc::value_type, _Key>::value,\n \t  \"std::multiset must have the same value_type as its allocator\");\n # endif"}, {"sha": "279b9705d7881565e1ff828960251663da489638", "filename": "libstdc++-v3/include/bits/stl_set.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_set.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_set.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_set.h?ref=ebaf3659632c0d5f45ca86593562c6c8367fda67", "patch": "@@ -107,7 +107,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #if __cplusplus >= 201103L\n       static_assert(is_same<typename remove_cv<_Key>::type, _Key>::value,\n \t  \"std::set must have a non-const, non-volatile value_type\");\n-# ifdef __STRICT_ANSI__\n+# if __cplusplus > 201703L || defined __STRICT_ANSI__\n       static_assert(is_same<typename _Alloc::value_type, _Key>::value,\n \t  \"std::set must have the same value_type as its allocator\");\n # endif"}, {"sha": "d33e589498a9151fbb128a4ae9edb95b961f6bf0", "filename": "libstdc++-v3/include/bits/stl_vector.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h?ref=ebaf3659632c0d5f45ca86593562c6c8367fda67", "patch": "@@ -397,7 +397,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #if __cplusplus >= 201103L\n       static_assert(is_same<typename remove_cv<_Tp>::type, _Tp>::value,\n \t  \"std::vector must have a non-const, non-volatile value_type\");\n-# ifdef __STRICT_ANSI__\n+# if __cplusplus > 201703L || defined __STRICT_ANSI__\n       static_assert(is_same<typename _Alloc::value_type, _Tp>::value,\n \t  \"std::vector must have the same value_type as its allocator\");\n # endif"}, {"sha": "724b3de6a030c81b5bca1bdf78ba6538d59ce523", "filename": "libstdc++-v3/testsuite/23_containers/deque/48101-3_neg.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2F48101-3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2F48101-3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2F48101-3_neg.cc?ref=ebaf3659632c0d5f45ca86593562c6c8367fda67", "patch": "@@ -0,0 +1,29 @@\n+// Copyright (C) 2017-2019 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do compile { target c++2a } }\n+\n+#include <deque>\n+\n+void\n+test01()\n+{\n+  std::deque<int, std::allocator<long>> c;\n+}\n+\n+// { dg-error \"same value_type as its allocator\" \"\" { target *-*-* } 0 }"}, {"sha": "d0e56f59494d0a88a26ddc3e522a9d494a31436e", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/48101-3_neg.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2F48101-3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2F48101-3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2F48101-3_neg.cc?ref=ebaf3659632c0d5f45ca86593562c6c8367fda67", "patch": "@@ -0,0 +1,29 @@\n+// Copyright (C) 2017-2019 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do compile { target c++2a } }\n+\n+#include <forward_list>\n+\n+void\n+test01()\n+{\n+  std::forward_list<int, std::allocator<long>> c;\n+}\n+\n+// { dg-error \"same value_type as its allocator\" \"\" { target *-*-* } 0 }"}, {"sha": "ce32e9ced827dd67dff73a62d066f9e1dc5000c9", "filename": "libstdc++-v3/testsuite/23_containers/list/48101-3_neg.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2F48101-3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2F48101-3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2F48101-3_neg.cc?ref=ebaf3659632c0d5f45ca86593562c6c8367fda67", "patch": "@@ -0,0 +1,29 @@\n+// Copyright (C) 2017-2019 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do compile { target c++2a } }\n+\n+#include <list>\n+\n+void\n+test01()\n+{\n+  std::list<int, std::allocator<long>> c;\n+}\n+\n+// { dg-error \"same value_type as its allocator\" \"\" { target *-*-* } 0 }"}, {"sha": "dfce9c2179c72a0364725fa5cd4b5b35a3de6131", "filename": "libstdc++-v3/testsuite/23_containers/map/48101-3_neg.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2F48101-3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2F48101-3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2F48101-3_neg.cc?ref=ebaf3659632c0d5f45ca86593562c6c8367fda67", "patch": "@@ -0,0 +1,29 @@\n+// Copyright (C) 2017-2019 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do compile { target c++2a } }\n+\n+#include <map>\n+\n+void\n+test01()\n+{\n+  std::map<int, int, std::less<int>, std::allocator<int>> c;\n+}\n+\n+// { dg-error \"same value_type as its allocator\" \"\" { target *-*-* } 0 }"}, {"sha": "777694985483af6caf530b20c4067c843f284142", "filename": "libstdc++-v3/testsuite/23_containers/multimap/48101-3_neg.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2F48101-3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2F48101-3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2F48101-3_neg.cc?ref=ebaf3659632c0d5f45ca86593562c6c8367fda67", "patch": "@@ -0,0 +1,29 @@\n+// Copyright (C) 2017-2019 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do compile { target c++2a } }\n+\n+#include <map>\n+\n+void\n+test01()\n+{\n+  std::multimap<int, int, std::less<int>, std::allocator<int>> c;\n+}\n+\n+// { dg-error \"same value_type as its allocator\" \"\" { target *-*-* } 0 }"}, {"sha": "209a1d5deeb80eccba5a0b8cf5d29c0cf9d54b71", "filename": "libstdc++-v3/testsuite/23_containers/multiset/48101-3_neg.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2F48101-3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2F48101-3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2F48101-3_neg.cc?ref=ebaf3659632c0d5f45ca86593562c6c8367fda67", "patch": "@@ -0,0 +1,29 @@\n+// Copyright (C) 2017-2019 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do compile { target c++2a } }\n+\n+#include <set>\n+\n+void\n+test01()\n+{\n+  std::multiset<int, std::less<int>, std::allocator<long>> c;\n+}\n+\n+// { dg-error \"same value_type as its allocator\" \"\" { target *-*-* } 0 }"}, {"sha": "75777370a3a6f7c6e45e0008a7104763a8feee3f", "filename": "libstdc++-v3/testsuite/23_containers/set/48101-3_neg.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2F48101-3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2F48101-3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2F48101-3_neg.cc?ref=ebaf3659632c0d5f45ca86593562c6c8367fda67", "patch": "@@ -0,0 +1,29 @@\n+// Copyright (C) 2017-2019 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do compile { target c++2a } }\n+\n+#include <set>\n+\n+void\n+test01()\n+{\n+  std::set<int, std::less<int>, std::allocator<long>> c;\n+}\n+\n+// { dg-error \"same value_type as its allocator\" \"\" { target *-*-* } 0 }"}, {"sha": "98bcd8c755b6e858e9c08f2eaf6ee010f1e473a0", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/48101-3_neg.cc", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2F48101-3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2F48101-3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2F48101-3_neg.cc?ref=ebaf3659632c0d5f45ca86593562c6c8367fda67", "patch": "@@ -0,0 +1,30 @@\n+// Copyright (C) 2017-2019 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do compile { target c++2a } }\n+\n+#include <unordered_map>\n+\n+void\n+test01()\n+{\n+  using namespace std;\n+  unordered_map<int, int, hash<int>, equal_to<int>, allocator<long>> c;\n+}\n+\n+// { dg-error \"same value_type as its allocator\" \"\" { target *-*-* } 0 }"}, {"sha": "3bda27b835404864678edcf24feb355ce73622b2", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/48101-3_neg.cc", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2F48101-3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2F48101-3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2F48101-3_neg.cc?ref=ebaf3659632c0d5f45ca86593562c6c8367fda67", "patch": "@@ -0,0 +1,30 @@\n+// Copyright (C) 2017-2019 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do compile { target c++2a } }\n+\n+#include <unordered_map>\n+\n+void\n+test01()\n+{\n+  using namespace std;\n+  unordered_multimap<int, int, hash<int>, equal_to<int>, allocator<long>> c;\n+}\n+\n+// { dg-error \"same value_type as its allocator\" \"\" { target *-*-* } 0 }"}, {"sha": "620c9b703bd5d5c38e0ec52ae6a24352eabffd88", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/48101-3_neg.cc", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2F48101-3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2F48101-3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2F48101-3_neg.cc?ref=ebaf3659632c0d5f45ca86593562c6c8367fda67", "patch": "@@ -0,0 +1,30 @@\n+// Copyright (C) 2017-2019 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do compile { target c++2a } }\n+\n+#include <unordered_set>\n+\n+void\n+test01()\n+{\n+  using namespace std;\n+  unordered_multiset<int, hash<int>, equal_to<int>, allocator<long>> c;\n+}\n+\n+// { dg-error \"same value_type as its allocator\" \"\" { target *-*-* } 0 }"}, {"sha": "c226c5236f802a37e5191fa3df5e0d6d9577dec7", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/48101-3_neg.cc", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2F48101-3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2F48101-3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2F48101-3_neg.cc?ref=ebaf3659632c0d5f45ca86593562c6c8367fda67", "patch": "@@ -0,0 +1,30 @@\n+// Copyright (C) 2017-2019 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do compile { target c++2a } }\n+\n+#include <unordered_set>\n+\n+void\n+test01()\n+{\n+  using namespace std;\n+  unordered_set<int, hash<int>, equal_to<int>, allocator<long>> c;\n+}\n+\n+// { dg-error \"same value_type as its allocator\" \"\" { target *-*-* } 0 }"}, {"sha": "2317efa1516a4de5fb020da994794f61236d3d17", "filename": "libstdc++-v3/testsuite/23_containers/vector/48101-3_neg.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2F48101-3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebaf3659632c0d5f45ca86593562c6c8367fda67/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2F48101-3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2F48101-3_neg.cc?ref=ebaf3659632c0d5f45ca86593562c6c8367fda67", "patch": "@@ -0,0 +1,29 @@\n+// Copyright (C) 2017-2019 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do compile { target c++2a } }\n+\n+#include <vector>\n+\n+void\n+test01()\n+{\n+  std::vector<int, std::allocator<long>> c;\n+}\n+\n+// { dg-error \"same value_type as its allocator\" \"\" { target *-*-* } 0 }"}]}