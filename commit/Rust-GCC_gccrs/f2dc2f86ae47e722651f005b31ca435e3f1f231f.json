{"sha": "f2dc2f86ae47e722651f005b31ca435e3f1f231f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJkYzJmODZhZTQ3ZTcyMjY1MWYwMDViMzFjYTQzNWUzZjFmMjMxZg==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel1@de.ibm.com", "date": "2008-12-09T09:05:06Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2008-12-09T09:05:06Z"}, "message": "2008-12-09  Andreas Krebbel  <krebbel1@de.ibm.com>\n\n\t* config/s390/s390.md (movti, movdi_64, movdi_31,\n\t  *movsi_zarch, *movhi, *movqi, *mov<mode>_64, *mov<mode>_31,\n\t  *mov<mode>_64dfp, *mov<mode>_64, *mov<mode>_31, mov<mode>): Remove\n\t  Q->Q alternative.\n\t  (Integer->BLKmode splitter): Removed.\n\nFrom-SVN: r142583", "tree": {"sha": "1face0a3c7390f60e56249d05a21d74cebf08ead", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1face0a3c7390f60e56249d05a21d74cebf08ead"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2dc2f86ae47e722651f005b31ca435e3f1f231f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2dc2f86ae47e722651f005b31ca435e3f1f231f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2dc2f86ae47e722651f005b31ca435e3f1f231f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2dc2f86ae47e722651f005b31ca435e3f1f231f/comments", "author": null, "committer": null, "parents": [{"sha": "13a4e57765a90e8a4eea8f61874f85b9da15a47f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13a4e57765a90e8a4eea8f61874f85b9da15a47f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13a4e57765a90e8a4eea8f61874f85b9da15a47f"}], "stats": {"total": 181, "additions": 76, "deletions": 105}, "files": [{"sha": "b1a69935b015d40ca8dc5dfa90b6685203df8e35", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2dc2f86ae47e722651f005b31ca435e3f1f231f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2dc2f86ae47e722651f005b31ca435e3f1f231f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f2dc2f86ae47e722651f005b31ca435e3f1f231f", "patch": "@@ -1,3 +1,11 @@\n+2008-12-09  Andreas Krebbel  <krebbel1@de.ibm.com>\n+\n+\t* config/s390/s390.md (movti, movdi_64, movdi_31,\n+\t  *movsi_zarch, *movhi, *movqi, *mov<mode>_64, *mov<mode>_31,\n+\t  *mov<mode>_64dfp, *mov<mode>_64, *mov<mode>_31, mov<mode>): Remove\n+\t  Q->Q alternative.\n+\t  (Integer->BLKmode splitter): Removed.\n+\n 2008-12-08  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/alpha/alpha.c (alpha_set_memflags): Process memory"}, {"sha": "1691fdba0f59995a4396acbe3306d3ceb42ad37b", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 68, "deletions": 105, "changes": 173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2dc2f86ae47e722651f005b31ca435e3f1f231f/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2dc2f86ae47e722651f005b31ca435e3f1f231f/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=f2dc2f86ae47e722651f005b31ca435e3f1f231f", "patch": "@@ -1081,17 +1081,16 @@\n ;\n \n (define_insn \"movti\"\n-  [(set (match_operand:TI 0 \"nonimmediate_operand\" \"=d,QS,d,o,Q\")\n-        (match_operand:TI 1 \"general_operand\" \"QS,d,dPRT,d,Q\"))]\n+  [(set (match_operand:TI 0 \"nonimmediate_operand\" \"=d,QS,d,o\")\n+        (match_operand:TI 1 \"general_operand\" \"QS,d,dPRT,d\"))]\n   \"TARGET_64BIT\"\n   \"@\n    lmg\\t%0,%N0,%S1\n    stmg\\t%1,%N1,%S0\n    #\n-   #\n    #\"\n-  [(set_attr \"op_type\" \"RSY,RSY,*,*,SS\")\n-   (set_attr \"type\" \"lm,stm,*,*,*\")])\n+  [(set_attr \"op_type\" \"RSY,RSY,*,*\")\n+   (set_attr \"type\" \"lm,stm,*,*\")])\n \n (define_split\n   [(set (match_operand:TI 0 \"nonimmediate_operand\" \"\")\n@@ -1273,10 +1272,10 @@\n (define_insn \"*movdi_64\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\"\n                             \"=d,d,d,d,d,d,d,d,f,d,d,d,d,d,\n-                             RT,!*f,!*f,!*f,!R,!T,b,Q,d,t,Q,t,?Q\")\n+                             RT,!*f,!*f,!*f,!R,!T,b,Q,d,t,Q,t\")\n         (match_operand:DI 1 \"general_operand\"\n                             \"K,N0HD0,N1HD0,N2HD0,N3HD0,Os,N0SD0,N1SD0,d,f,L,b,d,RT,\n-                             d,*f,R,T,*f,*f,d,K,t,d,t,Q,?Q\"))]\n+                             d,*f,R,T,*f,*f,d,K,t,d,t,Q\"))]\n   \"TARGET_64BIT\"\n   \"@\n    lghi\\t%0,%h1\n@@ -1304,16 +1303,15 @@\n    #\n    #\n    stam\\t%1,%N1,%S0\n-   lam\\t%0,%N0,%S1\n-   #\"\n+   lam\\t%0,%N0,%S1\"\n   [(set_attr \"op_type\" \"RI,RI,RI,RI,RI,RIL,RIL,RIL,RRE,RRE,RXY,RIL,RRE,RXY,\n-                        RXY,RR,RX,RXY,RX,RXY,RIL,SIL,*,*,RS,RS,SS\")\n+                        RXY,RR,RX,RXY,RX,RXY,RIL,SIL,*,*,RS,RS\")\n    (set_attr \"type\" \"*,*,*,*,*,*,*,*,floaddf,floaddf,la,larl,lr,load,store,\n                      floaddf,floaddf,floaddf,fstoredf,fstoredf,larl,*,*,*,\n-                     *,*,*\")\n+                     *,*\")\n    (set_attr \"cpu_facility\" \"*,*,*,*,*,extimm,extimm,extimm,dfp,dfp,longdisp,\n                              z10,*,*,*,*,*,longdisp,*,longdisp,\n-                             z10,z10,*,*,*,*,*\")\n+                             z10,z10,*,*,*,*\")\n    (set_attr \"z10prop\" \"z10_fwd_A1,\n                         z10_fwd_E1,\n                         z10_fwd_E1,\n@@ -1339,7 +1337,6 @@\n                         *,\n                         *,\n                         *,\n-                        *,\n                         *\")\n ])\n \n@@ -1378,9 +1375,9 @@\n \n (define_insn \"*movdi_31\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\"\n-                            \"=d,d,Q,S,d   ,o,!*f,!*f,!*f,!R,!T,Q,d\")\n+                            \"=d,d,Q,S,d   ,o,!*f,!*f,!*f,!R,!T,d\")\n         (match_operand:DI 1 \"general_operand\"\n-                            \" Q,S,d,d,dPRT,d, *f,  R,  T,*f,*f,Q,b\"))]\n+                            \" Q,S,d,d,dPRT,d, *f,  R,  T,*f,*f,b\"))]\n   \"!TARGET_64BIT\"\n   \"@\n    lm\\t%0,%N0,%S1\n@@ -1394,11 +1391,10 @@\n    ldy\\t%0,%1\n    std\\t%1,%0\n    stdy\\t%1,%0\n-   #\n    #\"\n-  [(set_attr \"op_type\" \"RS,RSY,RS,RSY,*,*,RR,RX,RXY,RX,RXY,SS,*\")\n-   (set_attr \"type\" \"lm,lm,stm,stm,*,*,floaddf,floaddf,floaddf,fstoredf,fstoredf,*,*\")\n-   (set_attr \"cpu_facility\" \"*,*,*,*,*,*,*,*,*,*,*,*,z10\")])\n+  [(set_attr \"op_type\" \"RS,RSY,RS,RSY,*,*,RR,RX,RXY,RX,RXY,*\")\n+   (set_attr \"type\" \"lm,lm,stm,stm,*,*,floaddf,floaddf,floaddf,fstoredf,fstoredf,*\")\n+   (set_attr \"cpu_facility\" \"*,*,*,*,*,*,*,*,*,*,*,z10\")])\n \n ; For a load from a symbol ref we can use one of the target registers\n ; together with larl to load the address.\n@@ -1533,9 +1529,9 @@\n \n (define_insn \"*movsi_zarch\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\"\n-\t\t\t    \"=d,d,d,d,d,d,d,d,d,R,T,!*f,!*f,!*f,!R,!T,d,t,Q,b,Q,t,?Q\")\n+\t\t\t    \"=d,d,d,d,d,d,d,d,d,R,T,!*f,!*f,!*f,!R,!T,d,t,Q,b,Q,t\")\n         (match_operand:SI 1 \"general_operand\"\n-\t\t\t    \"K,N0HS0,N1HS0,Os,L,b,d,R,T,d,d,*f,R,T,*f,*f,t,d,t,d,K,Q,?Q\"))]\n+\t\t\t    \"K,N0HS0,N1HS0,Os,L,b,d,R,T,d,d,*f,R,T,*f,*f,t,d,t,d,K,Q\"))]\n   \"TARGET_ZARCH\"\n   \"@\n    lhi\\t%0,%h1\n@@ -1559,10 +1555,9 @@\n    stam\\t%1,%1,%S0\n    strl\\t%1,%0\n    mvhi\\t%0,%1\n-   lam\\t%0,%0,%S1\n-   #\"\n+   lam\\t%0,%0,%S1\"\n   [(set_attr \"op_type\" \"RI,RI,RI,RIL,RXY,RIL,RR,RX,RXY,RX,RXY,\n-                        RR,RX,RXY,RX,RXY,RRE,RRE,RS,RIL,SIL,RS,SS\")\n+                        RR,RX,RXY,RX,RXY,RRE,RRE,RS,RIL,SIL,RS\")\n    (set_attr \"type\" \"*,\n                      *,\n                      *,\n@@ -1584,10 +1579,9 @@\n                      *,\n                      larl,\n                      *,\n-                     *,\n                      *\")\n    (set_attr \"cpu_facility\" \"*,*,*,extimm,longdisp,z10,*,*,longdisp,*,longdisp,\n-                             *,*,longdisp,*,longdisp,*,*,*,z10,z10,*,*\")\n+                             *,*,longdisp,*,longdisp,*,*,*,z10,z10,*\")\n    (set_attr \"z10prop\" \"z10_fwd_A1,\n                         z10_fwd_E1,\n                         z10_fwd_E1,\n@@ -1609,12 +1603,11 @@\n                         *,\n                         z10_rec,\n                         z10_super,\n-                        *,\n                         *\")])\n \n (define_insn \"*movsi_esa\"\n-  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=d,d,d,R,!*f,!*f,!R,d,t,Q,t,?Q\")\n-        (match_operand:SI 1 \"general_operand\" \"K,d,R,d,*f,R,*f,t,d,t,Q,?Q\"))]\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=d,d,d,R,!*f,!*f,!R,d,t,Q,t\")\n+        (match_operand:SI 1 \"general_operand\" \"K,d,R,d,*f,R,*f,t,d,t,Q\"))]\n   \"!TARGET_ZARCH\"\n   \"@\n    lhi\\t%0,%h1\n@@ -1627,10 +1620,9 @@\n    ear\\t%0,%1\n    sar\\t%0,%1\n    stam\\t%1,%1,%S0\n-   lam\\t%0,%0,%S1\n-   #\"\n-  [(set_attr \"op_type\" \"RI,RR,RX,RX,RR,RX,RX,RRE,RRE,RS,RS,SS\")\n-   (set_attr \"type\" \"*,lr,load,store,floadsf,floadsf,fstoresf,*,*,*,*,*\")\n+   lam\\t%0,%0,%S1\"\n+  [(set_attr \"op_type\" \"RI,RR,RX,RX,RR,RX,RX,RRE,RRE,RS,RS\")\n+   (set_attr \"type\" \"*,lr,load,store,floadsf,floadsf,fstoresf,*,*,*,*\")\n    (set_attr \"z10prop\" \"z10_fwd_A1,\n                         z10_fr_E1,\n                         z10_fwd_A3,\n@@ -1641,7 +1633,6 @@\n                         z10_super_E1,\n                         z10_super,\n                         *,\n-                        *,\n                         *\")\n ])\n \n@@ -1752,8 +1743,8 @@\n })\n \n (define_insn \"*movhi\"\n-  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=d,d,d,d,d,R,T,b,Q,?Q\")\n-        (match_operand:HI 1 \"general_operand\"      \" d,n,R,T,b,d,d,d,K,?Q\"))]\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=d,d,d,d,d,R,T,b,Q\")\n+        (match_operand:HI 1 \"general_operand\"      \" d,n,R,T,b,d,d,d,K\"))]\n   \"\"\n   \"@\n    lr\\t%0,%1\n@@ -1764,11 +1755,10 @@\n    sth\\t%1,%0\n    sthy\\t%1,%0\n    sthrl\\t%1,%0\n-   mvhhi\\t%0,%1\n-   #\"\n-  [(set_attr \"op_type\"      \"RR,RI,RX,RXY,RIL,RX,RXY,RIL,SIL,SS\")\n-   (set_attr \"type\"         \"lr,*,*,*,larl,store,store,store,*,*\")\n-   (set_attr \"cpu_facility\" \"*,*,*,*,z10,*,*,z10,z10,*\")\n+   mvhhi\\t%0,%1\"\n+  [(set_attr \"op_type\"      \"RR,RI,RX,RXY,RIL,RX,RXY,RIL,SIL\")\n+   (set_attr \"type\"         \"lr,*,*,*,larl,store,store,store,*\")\n+   (set_attr \"cpu_facility\" \"*,*,*,*,z10,*,*,z10,z10\")\n    (set_attr \"z10prop\" \"z10_fr_E1,\n                        z10_fwd_A1,\n                        z10_super_E1,\n@@ -1777,8 +1767,7 @@\n                        z10_super,\n                        z10_rec,\n                        z10_rec,\n-                       z10_super,\n-                       *\")])\n+                       z10_super\")])\n \n (define_peephole2\n   [(set (match_operand:HI 0 \"register_operand\" \"\")\n@@ -1813,8 +1802,8 @@\n })\n \n (define_insn \"*movqi\"\n-  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=d,d,d,d,R,T,Q,S,?Q\")\n-        (match_operand:QI 1 \"general_operand\" \"d,n,R,T,d,d,n,n,?Q\"))]\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=d,d,d,d,R,T,Q,S\")\n+        (match_operand:QI 1 \"general_operand\" \"d,n,R,T,d,d,n,n\"))]\n   \"\"\n   \"@\n    lr\\t%0,%1\n@@ -1824,19 +1813,17 @@\n    stc\\t%1,%0\n    stcy\\t%1,%0\n    mvi\\t%S0,%b1\n-   mviy\\t%S0,%b1\n-   #\"\n-  [(set_attr \"op_type\" \"RR,RI,RX,RXY,RX,RXY,SI,SIY,SS\")\n-   (set_attr \"type\" \"lr,*,*,*,store,store,store,store,*\")\n+   mviy\\t%S0,%b1\"\n+  [(set_attr \"op_type\" \"RR,RI,RX,RXY,RX,RXY,SI,SIY\")\n+   (set_attr \"type\" \"lr,*,*,*,store,store,store,store\")\n    (set_attr \"z10prop\" \"z10_fr_E1,\n                         z10_fwd_A1,\n                         z10_super_E1,\n                         z10_super_E1,\n                         z10_super,\n                         z10_rec,\n                         z10_super,\n-                        z10_super,\n-                        *\")])\n+                        z10_super\")])\n \n (define_peephole2\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n@@ -1905,8 +1892,8 @@\n   \"\")\n \n (define_insn \"*mov<mode>_64\"\n-  [(set (match_operand:TD_TF 0 \"nonimmediate_operand\" \"=f,f,f,o, d,QS, d,o,Q\")\n-        (match_operand:TD_TF 1 \"general_operand\"      \" G,f,o,f,QS, d,dRT,d,Q\"))]\n+  [(set (match_operand:TD_TF 0 \"nonimmediate_operand\" \"=f,f,f,o, d,QS,  d,o\")\n+        (match_operand:TD_TF 1 \"general_operand\"      \" G,f,o,f,QS, d,dRT,d\"))]\n   \"TARGET_64BIT\"\n   \"@\n    lzxr\\t%0\n@@ -1916,23 +1903,21 @@\n    lmg\\t%0,%N0,%S1\n    stmg\\t%1,%N1,%S0\n    #\n-   #\n    #\"\n-  [(set_attr \"op_type\" \"RRE,RRE,*,*,RSY,RSY,*,*,*\")\n-   (set_attr \"type\"    \"fsimptf,fsimptf,*,*,lm,stm,*,*,*\")])\n+  [(set_attr \"op_type\" \"RRE,RRE,*,*,RSY,RSY,*,*\")\n+   (set_attr \"type\"    \"fsimptf,fsimptf,*,*,lm,stm,*,*\")])\n \n (define_insn \"*mov<mode>_31\"\n-  [(set (match_operand:TD_TF 0 \"nonimmediate_operand\" \"=f,f,f,o,Q\")\n-        (match_operand:TD_TF 1 \"general_operand\"      \" G,f,o,f,Q\"))]\n+  [(set (match_operand:TD_TF 0 \"nonimmediate_operand\" \"=f,f,f,o\")\n+        (match_operand:TD_TF 1 \"general_operand\"      \" G,f,o,f\"))]\n   \"!TARGET_64BIT\"\n   \"@\n    lzxr\\t%0\n    lxr\\t%0,%1\n    #\n-   #\n    #\"\n-  [(set_attr \"op_type\" \"RRE,RRE,*,*,*\")\n-   (set_attr \"type\"    \"fsimptf,fsimptf,*,*,*\")])\n+  [(set_attr \"op_type\" \"RRE,RRE,*,*\")\n+   (set_attr \"type\"    \"fsimptf,fsimptf,*,*\")])\n \n ; TFmode in GPRs splitters\n \n@@ -2023,9 +2008,9 @@\n \n (define_insn \"*mov<mode>_64dfp\"\n   [(set (match_operand:DD_DF 0 \"nonimmediate_operand\"\n-\t\t\t       \"=f,f,f,d,f,f,R,T,d,d,RT,?Q\")\n+\t\t\t       \"=f,f,f,d,f,f,R,T,d, d,RT\")\n         (match_operand:DD_DF 1 \"general_operand\"\n-\t\t\t       \"G,f,d,f,R,T,f,f,d,RT,d,?Q\"))]\n+\t\t\t       \" G,f,d,f,R,T,f,f,d,RT, d\"))]\n   \"TARGET_64BIT && TARGET_DFP\"\n   \"@\n    lzdr\\t%0\n@@ -2038,11 +2023,10 @@\n    stdy\\t%1,%0\n    lgr\\t%0,%1\n    lg\\t%0,%1\n-   stg\\t%1,%0\n-   #\"\n-  [(set_attr \"op_type\" \"RRE,RR,RRE,RRE,RX,RXY,RX,RXY,RRE,RXY,RXY,SS\")\n+   stg\\t%1,%0\"\n+  [(set_attr \"op_type\" \"RRE,RR,RRE,RRE,RX,RXY,RX,RXY,RRE,RXY,RXY\")\n    (set_attr \"type\" \"fsimpdf,floaddf,floaddf,floaddf,floaddf,floaddf,\n-                     fstoredf,fstoredf,lr,load,store,*\")\n+                     fstoredf,fstoredf,lr,load,store\")\n    (set_attr \"z10prop\" \"*,\n                         *,\n                         *,\n@@ -2053,13 +2037,12 @@\n                         *,\n                         z10_fr_E1,\n                         z10_fwd_A3,\n-                        z10_rec,\n-                        *\")\n+                        z10_rec\")\n ])\n \n (define_insn \"*mov<mode>_64\"\n-  [(set (match_operand:DD_DF 0 \"nonimmediate_operand\" \"=f,f,f,f,R,T,d, d,RT,?Q\")\n-        (match_operand:DD_DF 1 \"general_operand\"       \"G,f,R,T,f,f,d,RT, d,?Q\"))]\n+  [(set (match_operand:DD_DF 0 \"nonimmediate_operand\" \"=f,f,f,f,R,T,d, d,RT\")\n+        (match_operand:DD_DF 1 \"general_operand\"       \"G,f,R,T,f,f,d,RT, d\"))]\n   \"TARGET_64BIT\"\n   \"@\n    lzdr\\t%0\n@@ -2070,11 +2053,10 @@\n    stdy\\t%1,%0\n    lgr\\t%0,%1\n    lg\\t%0,%1\n-   stg\\t%1,%0\n-   #\"\n-  [(set_attr \"op_type\" \"RRE,RR,RX,RXY,RX,RXY,RRE,RXY,RXY,SS\")\n+   stg\\t%1,%0\"\n+  [(set_attr \"op_type\" \"RRE,RR,RX,RXY,RX,RXY,RRE,RXY,RXY\")\n    (set_attr \"type\" \"fsimp<mode>,fload<mode>,fload<mode>,fload<mode>,\n-                     fstore<mode>,fstore<mode>,lr,load,store,*\")\n+                     fstore<mode>,fstore<mode>,lr,load,store\")\n    (set_attr \"z10prop\" \"*,\n                         *,\n                         *,\n@@ -2083,14 +2065,13 @@\n                         *,\n                         z10_fr_E1,\n                         z10_fwd_A3,\n-                        z10_rec,\n-                        *\")])\n+                        z10_rec\")])\n \n (define_insn \"*mov<mode>_31\"\n   [(set (match_operand:DD_DF 0 \"nonimmediate_operand\"\n-                               \"=f,f,f,f,R,T,d,d,Q,S,   d,o,Q\")\n+                               \"=f,f,f,f,R,T,d,d,Q,S,   d,o\")\n         (match_operand:DD_DF 1 \"general_operand\"\n-                               \" G,f,R,T,f,f,Q,S,d,d,dPRT,d,Q\"))]\n+                               \" G,f,R,T,f,f,Q,S,d,d,dPRT,d\"))]\n   \"!TARGET_64BIT\"\n   \"@\n    lzdr\\t%0\n@@ -2104,11 +2085,10 @@\n    stm\\t%1,%N1,%S0\n    stmy\\t%1,%N1,%S0\n    #\n-   #\n    #\"\n-  [(set_attr \"op_type\" \"RRE,RR,RX,RXY,RX,RXY,RS,RSY,RS,RSY,*,*,SS\")\n+  [(set_attr \"op_type\" \"RRE,RR,RX,RXY,RX,RXY,RS,RSY,RS,RSY,*,*\")\n    (set_attr \"type\" \"fsimp<mode>,fload<mode>,fload<mode>,fload<mode>,\n-                     fstore<mode>,fstore<mode>,lm,lm,stm,stm,*,*,*\")])\n+                     fstore<mode>,fstore<mode>,lm,lm,stm,stm,*,*\")])\n \n (define_split\n   [(set (match_operand:DD_DF 0 \"nonimmediate_operand\" \"\")\n@@ -2157,9 +2137,9 @@\n \n (define_insn \"mov<mode>\"\n   [(set (match_operand:SD_SF 0 \"nonimmediate_operand\"\n-\t\t\t       \"=f,f,f,f,R,T,d,d,d,R,T,?Q\")\n+\t\t\t       \"=f,f,f,f,R,T,d,d,d,R,T\")\n         (match_operand:SD_SF 1 \"general_operand\"\n-\t\t\t       \" G,f,R,T,f,f,d,R,T,d,d,?Q\"))]\n+\t\t\t       \" G,f,R,T,f,f,d,R,T,d,d\"))]\n   \"\"\n   \"@\n    lzer\\t%0\n@@ -2172,11 +2152,10 @@\n    l\\t%0,%1\n    ly\\t%0,%1\n    st\\t%1,%0\n-   sty\\t%1,%0\n-   #\"\n-  [(set_attr \"op_type\" \"RRE,RR,RX,RXY,RX,RXY,RR,RX,RXY,RX,RXY,SS\")\n+   sty\\t%1,%0\"\n+  [(set_attr \"op_type\" \"RRE,RR,RX,RXY,RX,RXY,RR,RX,RXY,RX,RXY\")\n    (set_attr \"type\" \"fsimp<mode>,fload<mode>,fload<mode>,fload<mode>,\n-                     fstore<mode>,fstore<mode>,lr,load,load,store,store,*\")\n+                     fstore<mode>,fstore<mode>,lr,load,load,store,store\")\n    (set_attr \"z10prop\" \"*,\n                         *,\n                         *,\n@@ -2187,8 +2166,7 @@\n                         z10_fwd_A3,\n                         z10_fwd_A3,\n                         z10_super,\n-                        z10_rec,\n-                        *\")])\n+                        z10_rec\")])\n \n ;\n ; movcc instruction pattern\n@@ -2222,21 +2200,6 @@\n   \"mvc\\t%O0(%2,%R0),%S1\"\n   [(set_attr \"op_type\" \"SS\")])\n \n-(define_split\n-  [(set (match_operand 0 \"memory_operand\" \"\")\n-        (match_operand 1 \"memory_operand\" \"\"))]\n-  \"reload_completed\n-   && GET_MODE (operands[0]) == GET_MODE (operands[1])\n-   && GET_MODE_SIZE (GET_MODE (operands[0])) > 0\"\n-  [(parallel\n-    [(set (match_dup 0) (match_dup 1))\n-     (use (match_dup 2))])]\n-{\n-  operands[2] = GEN_INT (GET_MODE_SIZE (GET_MODE (operands[0])));\n-  operands[0] = adjust_address (operands[0], BLKmode, 0);\n-  operands[1] = adjust_address (operands[1], BLKmode, 0);\n-})\n-\n (define_peephole2\n   [(parallel\n     [(set (match_operand:BLK 0 \"memory_operand\" \"\")"}]}