{"sha": "100d81d443fd03ca6450907bf3eaa559b66a4801", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTAwZDgxZDQ0M2ZkMDNjYTY0NTA5MDdiZjNlYWE1NTliNjZhNDgwMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1997-12-12T09:23:52Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-12-12T09:23:52Z"}, "message": "except.c (call_get_eh_context): Don't mess with sequences.\n\n\t* except.c (call_get_eh_context): Don't mess with sequences.\n\t(emit_eh_context): Include the call in the sequence here.\n\nFrom-SVN: r17070", "tree": {"sha": "9c6a50ecaa05e76d829f19893062e3aebb202097", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c6a50ecaa05e76d829f19893062e3aebb202097"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/100d81d443fd03ca6450907bf3eaa559b66a4801", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/100d81d443fd03ca6450907bf3eaa559b66a4801", "html_url": "https://github.com/Rust-GCC/gccrs/commit/100d81d443fd03ca6450907bf3eaa559b66a4801", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/100d81d443fd03ca6450907bf3eaa559b66a4801/comments", "author": null, "committer": null, "parents": [{"sha": "cba734eaca0f49feea8b004ee28646f2b1ca16a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cba734eaca0f49feea8b004ee28646f2b1ca16a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cba734eaca0f49feea8b004ee28646f2b1ca16a5"}], "stats": {"total": 25, "additions": 10, "deletions": 15}, "files": [{"sha": "dcac2906451d1593ff24d9ffb1fb34f0bbc70adc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100d81d443fd03ca6450907bf3eaa559b66a4801/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100d81d443fd03ca6450907bf3eaa559b66a4801/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=100d81d443fd03ca6450907bf3eaa559b66a4801", "patch": "@@ -1,3 +1,8 @@\n+Fri Dec 12 01:19:48 1997  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* except.c (call_get_eh_context): Don't mess with sequences.\n+\t(emit_eh_context): Include the call in the sequence here.\n+\n 1997-12-11  Paul Eggert  <eggert@twinsun.com>\n \n \t* collect2.c (write_c_file_glob): Allocate initial frame object"}, {"sha": "dbba31b445bec79282792a5cfe419050b37dcb0b", "filename": "gcc/except.c", "status": "modified", "additions": 5, "deletions": 15, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100d81d443fd03ca6450907bf3eaa559b66a4801/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100d81d443fd03ca6450907bf3eaa559b66a4801/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=100d81d443fd03ca6450907bf3eaa559b66a4801", "patch": "@@ -707,15 +707,13 @@ add_partial_entry (handler)\n   pop_obstacks ();\n }\n \n-/* Emit code to get EH context to current function.  Should only be used\n-   by emit_eh_context.  */\n+/* Emit code to get EH context to current function.  */\n \n static rtx\n call_get_eh_context ()\n {\n   static tree fn;\n   tree expr;\n-  rtx ehc, reg, insns;\n \n   if (fn == NULL_TREE)\n     {\n@@ -741,16 +739,7 @@ call_get_eh_context ()\n \t\texpr, NULL_TREE, NULL_TREE);\n   TREE_SIDE_EFFECTS (expr) = 1;\n \n-  start_sequence ();\n-  ehc = expand_expr (expr, NULL_RTX, VOIDmode, 0);\n-  reg = copy_to_reg (ehc);\n-\n-  insns = get_insns ();\n-  end_sequence ();\n-\n-  emit_insns_before (insns, get_first_nonparm_insn ());\n-\n-  return reg;\n+  return copy_to_reg (expand_expr (expr, NULL_RTX, VOIDmode, 0));\n }\n \n /* Get a reference to the EH context.\n@@ -1678,11 +1667,12 @@ emit_eh_context ()\n \t  {\n \t    rtx insns;\n \t    \n-\t    /* If this is the first use insn, emit the call. */\n+\t    start_sequence ();\n+\n+\t    /* If this is the first use insn, emit the call here. */\n \t    if (ehc == 0)\n \t      ehc = call_get_eh_context ();\n \n-\t    start_sequence ();\n \t    emit_move_insn (XEXP (reg, 0), ehc);\n \t    insns = get_insns ();\n \t    end_sequence ();"}]}