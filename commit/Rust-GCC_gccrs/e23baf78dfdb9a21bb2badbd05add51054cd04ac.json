{"sha": "e23baf78dfdb9a21bb2badbd05add51054cd04ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTIzYmFmNzhkZmRiOWEyMWJiMmJhZGJkMDVhZGQ1MTA1NGNkMDRhYw==", "commit": {"author": {"name": "David Billinghurst", "email": "David.Billinghurst@riotinto.com", "date": "2002-01-21T12:48:38Z"}, "committer": {"name": "David Billinghurst", "email": "billingd@gcc.gnu.org", "date": "2002-01-21T12:48:38Z"}, "message": "prune.exp (prune_gcc_output): Prune \"At global scope\" messages\n\n2002-01-21  David.Billinghurst <David.Billinghurst@riotinto.com>\n\n\t* lib/prune.exp (prune_gcc_output): Prune \"At global scope\"\n\tmessages\n\t* g++.dg/other/deprecated.C: Remove dg-bogus comment for\n\t\"At global scope\" warning\n\t* g++.dg/ext/align1.C: Change cygwin test for alignment\n\tfrom db-bogus to dg-warning\n\nFrom-SVN: r49044", "tree": {"sha": "6d3d3883a2a8631bb0ce557381826287d51896ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d3d3883a2a8631bb0ce557381826287d51896ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e23baf78dfdb9a21bb2badbd05add51054cd04ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e23baf78dfdb9a21bb2badbd05add51054cd04ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e23baf78dfdb9a21bb2badbd05add51054cd04ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e23baf78dfdb9a21bb2badbd05add51054cd04ac/comments", "author": null, "committer": null, "parents": [{"sha": "93efb9de8ca9f0e76682e3b9356352ba89d2495f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93efb9de8ca9f0e76682e3b9356352ba89d2495f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93efb9de8ca9f0e76682e3b9356352ba89d2495f"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "9fd7c578d72f589c588e9a26cbed5ccca2adcbad", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e23baf78dfdb9a21bb2badbd05add51054cd04ac/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e23baf78dfdb9a21bb2badbd05add51054cd04ac/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e23baf78dfdb9a21bb2badbd05add51054cd04ac", "patch": "@@ -1,3 +1,12 @@\n+2002-01-21  David.Billinghurst <David.Billinghurst@riotinto.com>\n+\n+\t* lib/prune.exp (prune_gcc_output): Prune \"At global scope\"\n+\tmessages\n+\t* g++.dg/other/deprecated.C: Remove dg-bogus comment for\n+\t\"At global scope\" warning\n+\t* g++.dg/ext/align1.C: Change cygwin test for alignment\n+\tfrom db-bogus to dg-warning\n+\n 2002-01-21  Zack Weinberg  <zack@codesourcery.com>\n \n \t* g77.f-torture/compile/cpp2.F: New test."}, {"sha": "23dcf740128fb3a76cd38b53caa1f3d2bc855ba9", "filename": "gcc/testsuite/g++.dg/ext/align1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e23baf78dfdb9a21bb2badbd05add51054cd04ac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Falign1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e23baf78dfdb9a21bb2badbd05add51054cd04ac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Falign1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Falign1.C?ref=e23baf78dfdb9a21bb2badbd05add51054cd04ac", "patch": "@@ -8,10 +8,10 @@ typedef float at[4][4] __attribute__ ((aligned (64)));\n float dummy[4][4][15];\n \n static volatile at a1[15];\n-// { dg-bogus \"object file alignment\" \"\" { xfail i?86-pc-cygwin } 10 }\n+// { dg-warning \"object file alignment\" \"\" { target i?86-pc-cygwin } 10 }\n \n float f1 __attribute__ ((aligned (64)));\n-// { dg-bogus \"object file alignment\" \"\" { xfail i?86-pc-cygwin } 13 }\n+// { dg-warning \"object file alignment\" \"\" { target i?86-pc-cygwin } 13 }\n \n int main()\n {"}, {"sha": "40d9dba9c36ca7efa128cf360179e10a9c322cd8", "filename": "gcc/testsuite/g++.dg/other/deprecated.C", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e23baf78dfdb9a21bb2badbd05add51054cd04ac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdeprecated.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e23baf78dfdb9a21bb2badbd05add51054cd04ac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdeprecated.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdeprecated.C?ref=e23baf78dfdb9a21bb2badbd05add51054cd04ac", "patch": "@@ -1,7 +1,6 @@\n /* Test __attribute__ ((deprecated)) */\n /* { dg-do compile } */\n /* { dg-options \"-Wdeprecated-declarations -fmessage-length=0\" } */\n-/* { dg-bogus \"At global scope\" \"\" { xfail *-*-* } 0 } */\n \n #if 1\n typedef int INT1 __attribute__((deprecated));\n@@ -54,9 +53,9 @@ int func1()\n    int (*pf)() = f1;\t\t\t/* { dg-warning \"`f1' is deprecated\" \"\" } */\n \n    z = w + x + y + g1 + g2 + g3;\t/* { dg-warning \"`x' is deprecated\" \"\" } */\n-   \t\t\t\t\t/* { dg-warning \"`y' is deprecated\" \"\" { target *-*-* } 56 } */\n-   \t\t\t\t\t/* { dg-warning \"`g2' is deprecated\" \"\" { target *-*-* } 56 } */\n-   \t\t\t\t\t/* { dg-warning \"`g3' is deprecated\" \"\" { target *-*-* } 56 } */\n+   \t\t\t\t\t/* { dg-warning \"`y' is deprecated\" \"\" { target *-*-* } 55 } */\n+   \t\t\t\t\t/* { dg-warning \"`g2' is deprecated\" \"\" { target *-*-* } 55 } */\n+   \t\t\t\t\t/* { dg-warning \"`g3' is deprecated\" \"\" { target *-*-* } 55 } */\n    return f1(); \t\t\t/* { dg-warning \"`f1' is deprecated\" \"\" } */\n }\n \n@@ -72,7 +71,7 @@ int func2(S1 *p)\n   p->u1.field5 = g1 + p->field7;\n   p->u2.field9;\t\t\t\t/* { dg-warning \"`u2' is deprecated\" \"\" } */\n   return p->u1.field6 + p->field8;\t/* { dg-warning \"`field6' is deprecated\" \"\" } */\n-  \t\t\t\t\t/* { dg-warning \"`field8' is deprecated\" \"\" { target *-*-* } 74 } */\n+  \t\t\t\t\t/* { dg-warning \"`field8' is deprecated\" \"\" { target *-*-* } 73 } */\n }\n \n struct SS1 {"}, {"sha": "eb391c6a27958b1458aa564c171e6d3c7f2abefb", "filename": "gcc/testsuite/lib/prune.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e23baf78dfdb9a21bb2badbd05add51054cd04ac/gcc%2Ftestsuite%2Flib%2Fprune.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e23baf78dfdb9a21bb2badbd05add51054cd04ac/gcc%2Ftestsuite%2Flib%2Fprune.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fprune.exp?ref=e23baf78dfdb9a21bb2badbd05add51054cd04ac", "patch": "@@ -20,7 +20,7 @@ proc prune_gcc_output { text } {\n     #send_user \"Before:$text\\n\"\n \n     regsub -all \"(^|\\n)\\[^\\n\\]*: In (function|member|method|constructor|instantiation) \\[^\\n\\]*\" $text \"\" text\n-    regsub -all \"(^|\\n)\\[^\\n\\]*: At top level:\\[^\\n\\]*\" $text \"\" text\n+    regsub -all \"(^|\\n)\\[^\\n\\]*: At (top level|global scope):\\[^\\n\\]*\" $text \"\" text\n     regsub -all \"(^|\\n)collect2: ld returned \\[^\\n\\]*\" $text \"\" text\n     regsub -all \"(^|\\n)Please submit.*instructions\\[^\\n\\]*\" $text \"\" text\n "}]}