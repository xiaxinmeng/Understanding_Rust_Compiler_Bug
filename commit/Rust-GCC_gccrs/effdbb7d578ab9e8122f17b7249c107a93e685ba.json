{"sha": "effdbb7d578ab9e8122f17b7249c107a93e685ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZmZGJiN2Q1NzhhYjllODEyMmYxN2I3MjQ5YzEwN2E5M2U2ODViYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-29T14:00:06Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-29T14:00:06Z"}, "message": "[multiple changes]\n\n2014-07-29  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_rm.texi: Change theta to @ in documentation of aspect\n\tDimension_System.\n\n2014-07-29  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_attr.adb (Uneval_Old_Msg): Flags Uneval_Old_Accept/Warn\n\tare now on pragma.\n\t* sem_ch13.adb (Analyze_Aspect_Specifications): Remove setting\n\tof Uneval_Old_*\n\t* sem_prag.adb (Analyze_Pragma): Set Uneval_Old_* flags\n\t* sinfo.ads, sinfo.adb: Move Uneval_Old_Accept/Warn to N_Pragma node.\n\n2014-07-29  Javier Miranda  <miranda@adacore.com>\n\n\t* types.ads Update documentation on how to add new reason codes\n\tfor exceptions.\n\t(RT_Exception_Code): Keep values ordered by their\n\treason code.  Required by the .NET backend.\n\t(RT_CE_Exceptions): Subtype declaration removed.\n\t(RT_PE_Exceptions): Subtype declaration removed.\n\t(RT_SE_Exceptions): Subtype declaration removed.\n\t(Kind): New mapping table of RT_Exception_Codes.\n\t* exp_ch11.adb (Get_RT_Exception_Entity): Updated to use the\n\tnew mapping table.\n\t* tbuild.adb (Make_Raise_Storage_Error): Updated to use the new\n\tmapping table.\t(Make_Raise_Program_Error): Updated to use the\n\tnew mapping table.\n\t(Make_Raise_Storage_Error): Updated to use the new mapping table.\n\t* a-except.adb Keep Rcheck_CE_xxx entities ordered according to\n\ttheir reason code.\n\nFrom-SVN: r213194", "tree": {"sha": "4711b0c6c08e0a2d38a040380cfbf314c9bbe8e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4711b0c6c08e0a2d38a040380cfbf314c9bbe8e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/effdbb7d578ab9e8122f17b7249c107a93e685ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/effdbb7d578ab9e8122f17b7249c107a93e685ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/effdbb7d578ab9e8122f17b7249c107a93e685ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/effdbb7d578ab9e8122f17b7249c107a93e685ba/comments", "author": null, "committer": null, "parents": [{"sha": "09d67391ff9fa5a74a2bf727a50b5199b736fdb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09d67391ff9fa5a74a2bf727a50b5199b736fdb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09d67391ff9fa5a74a2bf727a50b5199b736fdb0"}], "stats": {"total": 349, "additions": 207, "deletions": 142}, "files": [{"sha": "7644f9ce21563e3c4ed48301fb524dc384e6be8b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/effdbb7d578ab9e8122f17b7249c107a93e685ba/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/effdbb7d578ab9e8122f17b7249c107a93e685ba/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=effdbb7d578ab9e8122f17b7249c107a93e685ba", "patch": "@@ -1,3 +1,36 @@\n+2014-07-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_rm.texi: Change theta to @ in documentation of aspect\n+\tDimension_System.\n+\n+2014-07-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_attr.adb (Uneval_Old_Msg): Flags Uneval_Old_Accept/Warn\n+\tare now on pragma.\n+\t* sem_ch13.adb (Analyze_Aspect_Specifications): Remove setting\n+\tof Uneval_Old_*\n+\t* sem_prag.adb (Analyze_Pragma): Set Uneval_Old_* flags\n+\t* sinfo.ads, sinfo.adb: Move Uneval_Old_Accept/Warn to N_Pragma node.\n+\n+2014-07-29  Javier Miranda  <miranda@adacore.com>\n+\n+\t* types.ads Update documentation on how to add new reason codes\n+\tfor exceptions.\n+\t(RT_Exception_Code): Keep values ordered by their\n+\treason code.  Required by the .NET backend.\n+\t(RT_CE_Exceptions): Subtype declaration removed.\n+\t(RT_PE_Exceptions): Subtype declaration removed.\n+\t(RT_SE_Exceptions): Subtype declaration removed.\n+\t(Kind): New mapping table of RT_Exception_Codes.\n+\t* exp_ch11.adb (Get_RT_Exception_Entity): Updated to use the\n+\tnew mapping table.\n+\t* tbuild.adb (Make_Raise_Storage_Error): Updated to use the new\n+\tmapping table.\t(Make_Raise_Program_Error): Updated to use the\n+\tnew mapping table.\n+\t(Make_Raise_Storage_Error): Updated to use the new mapping table.\n+\t* a-except.adb Keep Rcheck_CE_xxx entities ordered according to\n+\ttheir reason code.\n+\n 2014-07-29  Thomas Quinot  <quinot@adacore.com>\n \n \t* gnat_rm.texi: Document internal attributes used for PolyORB/DSA"}, {"sha": "2d496fb40b1c4c3c72008f5394a113d9340cbbf0", "filename": "gcc/ada/a-except.adb", "status": "modified", "additions": 56, "deletions": 60, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/effdbb7d578ab9e8122f17b7249c107a93e685ba/gcc%2Fada%2Fa-except.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/effdbb7d578ab9e8122f17b7249c107a93e685ba/gcc%2Fada%2Fa-except.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except.adb?ref=effdbb7d578ab9e8122f17b7249c107a93e685ba", "patch": "@@ -365,90 +365,86 @@ package body Ada.Exceptions is\n    --  the normal approach is to keep them in the same order as declarations\n    --  in Types.\n \n-   --  This section is an IMPORTANT EXCEPTION. It is essential that the\n-   --  routines in this section be declared in the same order as the Rmsg_xx\n-   --  constants in the following section. This is required by the .Net runtime\n-   --  which uses the exceptmsg.awk script to generate require exception data,\n-   --  and this script requires and expects that this ordering rule holds.\n+   --  This section is an IMPORTANT EXCEPTION. It is required by the .Net\n+   --  runtime that the routine Rcheck_PE_Finalize_Raise_Exception is at the\n+   --  end of the list (for reasons that are documented in the exceptmsg.awk\n+   --  script which takes care of generating the required exception data).\n \n-   --  The one exception is that Rcheck_PE_Finalize_Raise_Exception is at the\n-   --  end of the list (for reasons that are documented with this routine). The\n-   --  script (exceptmsg.awk) has this special exception built in.\n-\n-   procedure Rcheck_CE_Access_Check\n+   procedure Rcheck_CE_Access_Check                   -- 00\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_CE_Null_Access_Parameter\n+   procedure Rcheck_CE_Null_Access_Parameter          -- 01\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_CE_Discriminant_Check\n+   procedure Rcheck_CE_Discriminant_Check             -- 02\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_CE_Divide_By_Zero\n+   procedure Rcheck_CE_Divide_By_Zero                 -- 03\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_CE_Explicit_Raise\n+   procedure Rcheck_CE_Explicit_Raise                 -- 04\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_CE_Index_Check\n+   procedure Rcheck_CE_Index_Check                    -- 05\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_CE_Invalid_Data\n+   procedure Rcheck_CE_Invalid_Data                   -- 06\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_CE_Length_Check\n+   procedure Rcheck_CE_Length_Check                   -- 07\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_CE_Null_Exception_Id\n+   procedure Rcheck_CE_Null_Exception_Id              -- 08\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_CE_Null_Not_Allowed\n+   procedure Rcheck_CE_Null_Not_Allowed               -- 09\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_CE_Overflow_Check\n+   procedure Rcheck_CE_Overflow_Check                 -- 10\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_CE_Partition_Check\n+   procedure Rcheck_CE_Partition_Check                -- 11\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_CE_Range_Check\n+   procedure Rcheck_CE_Range_Check                    -- 12\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_CE_Tag_Check\n+   procedure Rcheck_CE_Tag_Check                      -- 13\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_PE_Access_Before_Elaboration\n+   procedure Rcheck_PE_Access_Before_Elaboration      -- 14\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_PE_Accessibility_Check\n+   procedure Rcheck_PE_Accessibility_Check            -- 15\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_PE_Address_Of_Intrinsic\n+   procedure Rcheck_PE_Address_Of_Intrinsic           -- 16\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_PE_Aliased_Parameters\n+   procedure Rcheck_PE_Aliased_Parameters             -- 17\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_PE_All_Guards_Closed\n+   procedure Rcheck_PE_All_Guards_Closed              -- 18\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_PE_Bad_Predicated_Generic_Type\n+   procedure Rcheck_PE_Bad_Predicated_Generic_Type    -- 19\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_PE_Current_Task_In_Entry_Body\n+   procedure Rcheck_PE_Current_Task_In_Entry_Body     -- 20\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_PE_Duplicated_Entry_Address\n+   procedure Rcheck_PE_Duplicated_Entry_Address       -- 21\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_PE_Explicit_Raise\n+   procedure Rcheck_PE_Explicit_Raise                 -- 22\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_PE_Implicit_Return\n+\n+   procedure Rcheck_PE_Implicit_Return                -- 24\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_PE_Misaligned_Address_Value\n+   procedure Rcheck_PE_Misaligned_Address_Value       -- 25\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_PE_Missing_Return\n+   procedure Rcheck_PE_Missing_Return                 -- 26\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_PE_Non_Transportable_Actual\n+   procedure Rcheck_PE_Overlaid_Controlled_Object     -- 27\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_PE_Overlaid_Controlled_Object\n+   procedure Rcheck_PE_Potentially_Blocking_Operation -- 28\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_PE_Potentially_Blocking_Operation\n+   procedure Rcheck_PE_Stubbed_Subprogram_Called      -- 29\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_PE_Stubbed_Subprogram_Called\n+   procedure Rcheck_PE_Unchecked_Union_Restriction    -- 30\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_PE_Unchecked_Union_Restriction\n+   procedure Rcheck_PE_Non_Transportable_Actual       -- 31\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_SE_Empty_Storage_Pool\n+   procedure Rcheck_SE_Empty_Storage_Pool             -- 32\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_SE_Explicit_Raise\n+   procedure Rcheck_SE_Explicit_Raise                 -- 33\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_SE_Infinite_Recursion\n+   procedure Rcheck_SE_Infinite_Recursion             -- 34\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_SE_Object_Too_Large\n+   procedure Rcheck_SE_Object_Too_Large               -- 35\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_PE_Stream_Operation_Not_Allowed\n+   procedure Rcheck_PE_Stream_Operation_Not_Allowed   -- 36\n      (File : System.Address; Line : Integer);\n \n-   procedure Rcheck_PE_Finalize_Raised_Exception\n+   procedure Rcheck_PE_Finalize_Raised_Exception      -- 23\n      (File : System.Address; Line : Integer);\n    --  This routine is separated out because it has quite different behavior\n    --  from the others. This is the \"finalize/adjust raised exception\". This\n@@ -1380,13 +1376,6 @@ package body Ada.Exceptions is\n       Raise_Program_Error_Msg (File, Line, Rmsg_26'Address);\n    end Rcheck_PE_Missing_Return;\n \n-   procedure Rcheck_PE_Non_Transportable_Actual\n-     (File : System.Address; Line : Integer)\n-   is\n-   begin\n-      Raise_Program_Error_Msg (File, Line, Rmsg_31'Address);\n-   end Rcheck_PE_Non_Transportable_Actual;\n-\n    procedure Rcheck_PE_Overlaid_Controlled_Object\n      (File : System.Address; Line : Integer)\n    is\n@@ -1401,13 +1390,6 @@ package body Ada.Exceptions is\n       Raise_Program_Error_Msg (File, Line, Rmsg_28'Address);\n    end Rcheck_PE_Potentially_Blocking_Operation;\n \n-   procedure Rcheck_PE_Stream_Operation_Not_Allowed\n-     (File : System.Address; Line : Integer)\n-   is\n-   begin\n-      Raise_Program_Error_Msg (File, Line, Rmsg_36'Address);\n-   end Rcheck_PE_Stream_Operation_Not_Allowed;\n-\n    procedure Rcheck_PE_Stubbed_Subprogram_Called\n      (File : System.Address; Line : Integer)\n    is\n@@ -1422,6 +1404,13 @@ package body Ada.Exceptions is\n       Raise_Program_Error_Msg (File, Line, Rmsg_30'Address);\n    end Rcheck_PE_Unchecked_Union_Restriction;\n \n+   procedure Rcheck_PE_Non_Transportable_Actual\n+     (File : System.Address; Line : Integer)\n+   is\n+   begin\n+      Raise_Program_Error_Msg (File, Line, Rmsg_31'Address);\n+   end Rcheck_PE_Non_Transportable_Actual;\n+\n    procedure Rcheck_SE_Empty_Storage_Pool\n      (File : System.Address; Line : Integer)\n    is\n@@ -1450,6 +1439,13 @@ package body Ada.Exceptions is\n       Raise_Storage_Error_Msg (File, Line, Rmsg_35'Address);\n    end Rcheck_SE_Object_Too_Large;\n \n+   procedure Rcheck_PE_Stream_Operation_Not_Allowed\n+     (File : System.Address; Line : Integer)\n+   is\n+   begin\n+      Raise_Program_Error_Msg (File, Line, Rmsg_36'Address);\n+   end Rcheck_PE_Stream_Operation_Not_Allowed;\n+\n    procedure Rcheck_PE_Finalize_Raised_Exception\n      (File : System.Address; Line : Integer)\n    is"}, {"sha": "819abcedd6c46ffedb0bc540aedc5930201860a6", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/effdbb7d578ab9e8122f17b7249c107a93e685ba/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/effdbb7d578ab9e8122f17b7249c107a93e685ba/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=effdbb7d578ab9e8122f17b7249c107a93e685ba", "patch": "@@ -2068,10 +2068,10 @@ package body Exp_Ch11 is\n \n    function Get_RT_Exception_Entity (R : RT_Exception_Code) return Entity_Id is\n    begin\n-      case R is\n-         when RT_CE_Exceptions => return Standard_Constraint_Error;\n-         when RT_PE_Exceptions => return Standard_Program_Error;\n-         when RT_SE_Exceptions => return Standard_Storage_Error;\n+      case Kind (R) is\n+         when CE_Reason => return Standard_Constraint_Error;\n+         when PE_Reason => return Standard_Program_Error;\n+         when SE_Reason => return Standard_Storage_Error;\n       end case;\n    end Get_RT_Exception_Entity;\n "}, {"sha": "658cb1e936ae486b4ca9076bfece61c91a501953", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/effdbb7d578ab9e8122f17b7249c107a93e685ba/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/effdbb7d578ab9e8122f17b7249c107a93e685ba/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=effdbb7d578ab9e8122f17b7249c107a93e685ba", "patch": "@@ -8246,19 +8246,22 @@ between values in different systems. The MKS system is characterized by the\n following aspect:\n \n @smallexample @c ada\n-   type Mks_Type is new Long_Long_Float\n-     with\n-      Dimension_System => (\n-        (Unit_Name => Meter,    Unit_Symbol => 'm',   Dim_Symbol => 'L'),\n-        (Unit_Name => Kilogram, Unit_Symbol => \"kg\",  Dim_Symbol => 'M'),\n-        (Unit_Name => Second,   Unit_Symbol => 's',   Dim_Symbol => 'T'),\n-        (Unit_Name => Ampere,   Unit_Symbol => 'A',   Dim_Symbol => 'I'),\n-        (Unit_Name => Kelvin,   Unit_Symbol => 'K',   Dim_Symbol => \"Theta\"),\n-        (Unit_Name => Mole,     Unit_Symbol => \"mol\", Dim_Symbol => 'N'),\n-        (Unit_Name => Candela,  Unit_Symbol => \"cd\",  Dim_Symbol => 'J'));\n+   type Mks_Type is new Long_Long_Float with\n+     Dimension_System => (\n+       (Unit_Name => Meter,    Unit_Symbol => 'm',   Dim_Symbol => 'L'),\n+       (Unit_Name => Kilogram, Unit_Symbol => \"kg\",  Dim_Symbol => 'M'),\n+       (Unit_Name => Second,   Unit_Symbol => 's',   Dim_Symbol => 'T'),\n+       (Unit_Name => Ampere,   Unit_Symbol => 'A',   Dim_Symbol => 'I'),\n+       (Unit_Name => Kelvin,   Unit_Symbol => 'K',   Dim_Symbol => '@'),\n+       (Unit_Name => Mole,     Unit_Symbol => \"mol\", Dim_Symbol => 'N'),\n+       (Unit_Name => Candela,  Unit_Symbol => \"cd\",  Dim_Symbol => 'J'));\n @end smallexample\n \n @noindent\n+Note that in the above type definition, we use the symbol @code{@@} to\n+represent a theta character (avoiding the use of extended Latin-1\n+characters in this context).\n+\n See section ``Performing Dimensionality Analysis in GNAT'' in the GNAT Users\n Guide for detailed examples of use of the dimension system.\n \n@@ -9325,13 +9328,13 @@ statically matching subtypes.\n @unnumberedsec Attribute Old\n @findex Old\n @noindent\n-In addition to the usage of Old defined in the Ada 2012 RM (usage\n+In addition to the usage of @code{Old} defined in the Ada 2012 RM (usage\n within @code{Post} aspect), GNAT also permits the use of this attribute\n in implementation defined pragmas @code{Postcondition},\n-@code{Loop_Entry}, and @code{Contract_Cases}. Also usages of\n+@code{Contract_Cases} and @code{Test_Case}. Also usages of\n @code{Old} which would be illegal according to the Ada 2012 RM\n definition are allowed under control of\n-implementation defined pragma @code{Allow_Unevaluated_Use_Of_Old}.\n+implementation defined pragma @code{Unevaluated_Use_Of_Old}.\n \n @node Attribute Passed_By_Reference\n @unnumberedsec Attribute Passed_By_Reference"}, {"sha": "f35170f08441051baa29574732eaa00c94df7e84", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/effdbb7d578ab9e8122f17b7249c107a93e685ba/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/effdbb7d578ab9e8122f17b7249c107a93e685ba/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=effdbb7d578ab9e8122f17b7249c107a93e685ba", "patch": "@@ -2276,7 +2276,7 @@ package body Sem_Attr is\n       --------------------\n \n       procedure Uneval_Old_Msg is\n-         Uneval_Old_Setting : Character := Opt.Uneval_Old;\n+         Uneval_Old_Setting : Character;\n          Prag               : Node_Id;\n \n       begin\n@@ -2293,18 +2293,20 @@ package body Sem_Attr is\n             exit when No (Prag) or else Nkind (Prag) = N_Pragma;\n          end loop;\n \n-         --  If we did not find the pragma, that's odd, just consider it a\n-         --  case where we use Opt.Uneval_Old for further processing. Perhaps\n-         --  this can come from some previous error.\n-\n-         if Present (Prag) and then From_Aspect_Specification (Prag) then\n-            if Uneval_Old_Accept (Corresponding_Aspect (Prag)) then\n+         if Present (Prag) then\n+            if Uneval_Old_Accept (Prag) then\n                Uneval_Old_Setting := 'A';\n-            elsif Uneval_Old_Warn (Corresponding_Aspect (Prag)) then\n+            elsif Uneval_Old_Warn (Prag) then\n                Uneval_Old_Setting := 'W';\n             else\n                Uneval_Old_Setting := 'E';\n             end if;\n+\n+         --  If we did not find the pragma, that's odd, just use the setting\n+         --  from Opt.Uneval_Old. Perhaps this is due to a previous error?\n+\n+         else\n+            Uneval_Old_Setting := Opt.Uneval_Old;\n          end if;\n \n          --  Processing depends on the setting of Uneval_Old"}, {"sha": "65103728e1c4e1cc01feb3aa5713e8bdb4bceaf7", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/effdbb7d578ab9e8122f17b7249c107a93e685ba/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/effdbb7d578ab9e8122f17b7249c107a93e685ba/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=effdbb7d578ab9e8122f17b7249c107a93e685ba", "patch": "@@ -1544,19 +1544,6 @@ package body Sem_Ch13 is\n             Set_Entity (Aspect, E);\n             Ent := New_Occurrence_Of (E, Sloc (Id));\n \n-            --  Capture setting of Opt.Uneval_Old\n-\n-            case Opt.Uneval_Old is\n-               when 'A' =>\n-                  Set_Uneval_Old_Accept (Aspect);\n-               when 'E' =>\n-                  null;\n-               when 'W' =>\n-                  Set_Uneval_Old_Warn (Aspect);\n-               when others =>\n-                  raise Program_Error;\n-            end case;\n-\n             --  Check for duplicate aspect. Note that the Comes_From_Source\n             --  test allows duplicate Pre/Post's that we generate internally\n             --  to escape being flagged here."}, {"sha": "dee225b544b74d321f1bf17da0fa253cd7c99216", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/effdbb7d578ab9e8122f17b7249c107a93e685ba/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/effdbb7d578ab9e8122f17b7249c107a93e685ba/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=effdbb7d578ab9e8122f17b7249c107a93e685ba", "patch": "@@ -10033,6 +10033,19 @@ package body Sem_Prag is\n       Prag_Id := Get_Pragma_Id (Pname);\n       Pname := Original_Aspect_Name (N);\n \n+      --  Capture setting of Opt.Uneval_Old\n+\n+      case Opt.Uneval_Old is\n+         when 'A' =>\n+            Set_Uneval_Old_Accept (N);\n+         when 'E' =>\n+            null;\n+         when 'W' =>\n+            Set_Uneval_Old_Warn (N);\n+         when others =>\n+            raise Program_Error;\n+      end case;\n+\n       --  Check applicable policy. We skip this if Is_Checked or Is_Ignored\n       --  is already set, indicating that we have already checked the policy\n       --  at the right point. This happens for example in the case of a pragma"}, {"sha": "19ccec407496af0abbdf2b6579a590a0483287a2", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/effdbb7d578ab9e8122f17b7249c107a93e685ba/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/effdbb7d578ab9e8122f17b7249c107a93e685ba/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=effdbb7d578ab9e8122f17b7249c107a93e685ba", "patch": "@@ -3168,15 +3168,15 @@ package body Sinfo is\n      (N : Node_Id) return Boolean is\n    begin\n       pragma Assert (False\n-        or else NT (N).Nkind = N_Aspect_Specification);\n-      return Flag13 (N);\n+        or else NT (N).Nkind = N_Pragma);\n+      return Flag7 (N);\n    end Uneval_Old_Accept;\n \n    function Uneval_Old_Warn\n      (N : Node_Id) return Boolean is\n    begin\n       pragma Assert (False\n-        or else NT (N).Nkind = N_Aspect_Specification);\n+        or else NT (N).Nkind = N_Pragma);\n       return Flag18 (N);\n    end Uneval_Old_Warn;\n \n@@ -6367,15 +6367,15 @@ package body Sinfo is\n      (N : Node_Id; Val : Boolean := True) is\n    begin\n       pragma Assert (False\n-        or else NT (N).Nkind = N_Aspect_Specification);\n-      Set_Flag13 (N, Val);\n+        or else NT (N).Nkind = N_Pragma);\n+      Set_Flag7 (N, Val);\n    end Set_Uneval_Old_Accept;\n \n    procedure Set_Uneval_Old_Warn\n      (N : Node_Id; Val : Boolean := True) is\n    begin\n       pragma Assert (False\n-        or else NT (N).Nkind = N_Aspect_Specification);\n+        or else NT (N).Nkind = N_Pragma);\n       Set_Flag18 (N, Val);\n    end Set_Uneval_Old_Warn;\n "}, {"sha": "41307a0e6243004dd9bb9d33572f0493062ee1a7", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 15, "deletions": 16, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/effdbb7d578ab9e8122f17b7249c107a93e685ba/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/effdbb7d578ab9e8122f17b7249c107a93e685ba/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=effdbb7d578ab9e8122f17b7249c107a93e685ba", "patch": "@@ -2098,20 +2098,19 @@ package Sinfo is\n    --    if there are no type support subprograms for the type or if the freeze\n    --    node is not for a type.\n \n-   --  Uneval_Old_Accept (Flag13-Sem)\n-   --    Present in N_Aspect_Specification nodes. Set if Opt.Uneval_Old is set\n-   --    to 'A' (accept) at the point where the aspect specification node is\n-   --    encountered. It is this setting that is relevant, rather than the\n-   --    setting at the point where a contract is finally analyzed after the\n-   --    usual delay till the freeze point.\n+   --  Uneval_Old_Accept (Flag7-Sem)\n+   --    Present in N_Pragma nodes. Set True if Opt.Uneval_Old is set to 'A'\n+   --    (accept) at the point where the pragma is encountered (including the\n+   --    case of a pragma generated from an aspect specification). It is this\n+   --    setting that is relevant, rather than the setting at the point where\n+   --    a contract is finally analyzed after the delay till the freeze point.\n \n    --  Uneval_Old_Warn (Flag18-Sem)\n-   --    Present in N_Aspect_Specification nodes. Set if Opt.Uneval_Old is set\n-   --    to 'W' (warn) at the point where the aspect specification node is\n-   --    encountered. It is this setting that is relevant, rather than the\n-   --    setting at the point where a contract is finally analyzed after the\n-   --    usual delay till the freeze point. If neither Uneval_Old_Accept nor\n-   --    Uneval_Old_Warn is set, then the default Error mode applies.\n+   --    Present in N_Pragma nodes. Set True if Opt.Uneval_Old is set to 'W'\n+   --    (warn) at the point where the pragma is encountered (including the\n+   --    case of a pragma generated from an aspect specification). It is this\n+   --    setting that is relevant, rather than the setting at the point where\n+   --    a contract is finally analyzed after the delay till the freeze point.\n \n    --  Unreferenced_In_Spec (Flag7-Sem)\n    --    Present in N_With_Clause nodes. Set if the with clause is on the\n@@ -2405,6 +2404,8 @@ package Sinfo is\n       --  Is_Checked (Flag11-Sem)\n       --  Import_Interface_Present (Flag16-Sem)\n       --  Split_PPC (Flag17) set if corresponding aspect had Split_PPC set\n+      --  Uneval_Old_Accept (Flag7-Sem)\n+      --  Uneval_Old_Warn (Flag18-Sem)\n \n       --  Note: we should have a section on what pragmas are passed on to\n       --  the back end to be processed. This section should note that pragma\n@@ -7145,12 +7146,10 @@ package Sinfo is\n       --  Class_Present (Flag6) Set if 'Class present\n       --  Is_Ignored (Flag9-Sem)\n       --  Is_Checked (Flag11-Sem)\n-      --  Uneval_Old_Accept (Flag13-Sem)\n       --  Is_Delayed_Aspect (Flag14-Sem)\n       --  Is_Disabled (Flag15-Sem)\n       --  Is_Boolean_Aspect (Flag16-Sem)\n       --  Split_PPC (Flag17) Set if split pre/post attribute\n-      --  Uneval_Old_Warn (Flag18-Sem)\n \n       --  Note: Aspect_Specification is an Ada 2012 feature\n \n@@ -9640,7 +9639,7 @@ package Sinfo is\n      (N : Node_Id) return Node_Id;    -- Node3\n \n    function Uneval_Old_Accept\n-     (N : Node_Id) return Boolean;    -- Flag13\n+     (N : Node_Id) return Boolean;    -- Flag7\n \n    function Uneval_Old_Warn\n      (N : Node_Id) return Boolean;    -- Flag18\n@@ -10663,7 +10662,7 @@ package Sinfo is\n      (N : Node_Id; Val : Node_Id);            -- Node3\n \n    procedure Set_Uneval_Old_Accept\n-     (N : Node_Id; Val : Boolean := True);    -- Flag13\n+     (N : Node_Id; Val : Boolean := True);    -- Flag7\n \n    procedure Set_Uneval_Old_Warn\n      (N : Node_Id; Val : Boolean := True);    -- Flag18"}, {"sha": "6b3a18df05a9fac101ecb8ba15337c68a746c4d8", "filename": "gcc/ada/tbuild.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/effdbb7d578ab9e8122f17b7249c107a93e685ba/gcc%2Fada%2Ftbuild.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/effdbb7d578ab9e8122f17b7249c107a93e685ba/gcc%2Fada%2Ftbuild.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftbuild.adb?ref=effdbb7d578ab9e8122f17b7249c107a93e685ba", "patch": "@@ -434,7 +434,7 @@ package body Tbuild is\n       Reason    : RT_Exception_Code) return Node_Id\n    is\n    begin\n-      pragma Assert (Reason in RT_CE_Exceptions);\n+      pragma Assert (Kind (Reason) = CE_Reason);\n       return\n         Make_Raise_Constraint_Error (Sloc,\n           Condition => Condition,\n@@ -451,7 +451,7 @@ package body Tbuild is\n       Reason    : RT_Exception_Code) return Node_Id\n    is\n    begin\n-      pragma Assert (Reason in RT_PE_Exceptions);\n+      pragma Assert (Kind (Reason) = PE_Reason);\n       return\n         Make_Raise_Program_Error (Sloc,\n           Condition => Condition,\n@@ -468,7 +468,7 @@ package body Tbuild is\n       Reason    : RT_Exception_Code) return Node_Id\n    is\n    begin\n-      pragma Assert (Reason in RT_SE_Exceptions);\n+      pragma Assert (Kind (Reason) = SE_Reason);\n       return\n         Make_Raise_Storage_Error (Sloc,\n           Condition => Condition,"}, {"sha": "c228740598277090f766b194bd18ff12ad5b44c1", "filename": "gcc/ada/types.ads", "status": "modified", "additions": 51, "deletions": 19, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/effdbb7d578ab9e8122f17b7249c107a93e685ba/gcc%2Fada%2Ftypes.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/effdbb7d578ab9e8122f17b7249c107a93e685ba/gcc%2Fada%2Ftypes.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.ads?ref=effdbb7d578ab9e8122f17b7249c107a93e685ba", "patch": "@@ -820,12 +820,12 @@ package Types is\n \n    --  To add a new code, you need to do the following:\n \n-   --    1. Modify the type and subtype declarations below appropriately,\n-   --       keeping things in alphabetical order.\n+   --    1. Assign a new number to the reason. Do not renumber existing codes,\n+   --       since this causes compatibility/bootstrap issues, and problems in\n+   --       the CIL/JVM backends. So always add the new code at the end of the\n+   --       list.\n \n-   --    2. Assign a new number to the reason. Do not renumber existing codes,\n-   --       this causes compatibility/bootstrap issues. So always add the new\n-   --       code at the end of the existing range.\n+   --    2. Update the contents of the array Kind\n \n    --    3. Modify the corresponding definitions in types.h, including the\n    --       definition of last_reason_code.\n@@ -873,31 +873,63 @@ package Types is\n       PE_Implicit_Return,                -- 24\n       PE_Misaligned_Address_Value,       -- 25\n       PE_Missing_Return,                 -- 26\n-      PE_Non_Transportable_Actual,       -- 31\n       PE_Overlaid_Controlled_Object,     -- 27\n       PE_Potentially_Blocking_Operation, -- 28\n-      PE_Stream_Operation_Not_Allowed,   -- 36\n       PE_Stubbed_Subprogram_Called,      -- 29\n       PE_Unchecked_Union_Restriction,    -- 30\n+      PE_Non_Transportable_Actual,       -- 31\n \n       SE_Empty_Storage_Pool,             -- 32\n       SE_Explicit_Raise,                 -- 33\n       SE_Infinite_Recursion,             -- 34\n-      SE_Object_Too_Large);              -- 35\n+      SE_Object_Too_Large,               -- 35\n+\n+      PE_Stream_Operation_Not_Allowed);  -- 36\n \n    Last_Reason_Code : constant := 36;\n    --  Last reason code\n \n-   subtype RT_CE_Exceptions is RT_Exception_Code range\n-     CE_Access_Check_Failed ..\n-     CE_Tag_Check_Failed;\n-\n-   subtype RT_PE_Exceptions is RT_Exception_Code range\n-     PE_Access_Before_Elaboration ..\n-     PE_Unchecked_Union_Restriction;\n-\n-   subtype RT_SE_Exceptions is RT_Exception_Code range\n-     SE_Empty_Storage_Pool ..\n-     SE_Object_Too_Large;\n+   type Reason_Kind is (CE_Reason, PE_Reason, SE_Reason);\n+\n+   Kind : array (RT_Exception_Code range <>) of Reason_Kind :=\n+     (CE_Access_Check_Failed            => CE_Reason,\n+      CE_Access_Parameter_Is_Null       => CE_Reason,\n+      CE_Discriminant_Check_Failed      => CE_Reason,\n+      CE_Divide_By_Zero                 => CE_Reason,\n+      CE_Explicit_Raise                 => CE_Reason,\n+      CE_Index_Check_Failed             => CE_Reason,\n+      CE_Invalid_Data                   => CE_Reason,\n+      CE_Length_Check_Failed            => CE_Reason,\n+      CE_Null_Exception_Id              => CE_Reason,\n+      CE_Null_Not_Allowed               => CE_Reason,\n+      CE_Overflow_Check_Failed          => CE_Reason,\n+      CE_Partition_Check_Failed         => CE_Reason,\n+      CE_Range_Check_Failed             => CE_Reason,\n+      CE_Tag_Check_Failed               => CE_Reason,\n+\n+      PE_Access_Before_Elaboration      => PE_Reason,\n+      PE_Accessibility_Check_Failed     => PE_Reason,\n+      PE_Address_Of_Intrinsic           => PE_Reason,\n+      PE_Aliased_Parameters             => PE_Reason,\n+      PE_All_Guards_Closed              => PE_Reason,\n+      PE_Bad_Predicated_Generic_Type    => PE_Reason,\n+      PE_Current_Task_In_Entry_Body     => PE_Reason,\n+      PE_Duplicated_Entry_Address       => PE_Reason,\n+      PE_Explicit_Raise                 => PE_Reason,\n+      PE_Finalize_Raised_Exception      => PE_Reason,\n+      PE_Implicit_Return                => PE_Reason,\n+      PE_Misaligned_Address_Value       => PE_Reason,\n+      PE_Missing_Return                 => PE_Reason,\n+      PE_Overlaid_Controlled_Object     => PE_Reason,\n+      PE_Potentially_Blocking_Operation => PE_Reason,\n+      PE_Stubbed_Subprogram_Called      => PE_Reason,\n+      PE_Unchecked_Union_Restriction    => PE_Reason,\n+      PE_Non_Transportable_Actual       => PE_Reason,\n+      PE_Stream_Operation_Not_Allowed   => PE_Reason,\n+\n+      SE_Empty_Storage_Pool             => SE_Reason,\n+      SE_Explicit_Raise                 => SE_Reason,\n+      SE_Infinite_Recursion             => SE_Reason,\n+      SE_Object_Too_Large               => SE_Reason);\n \n end Types;"}]}