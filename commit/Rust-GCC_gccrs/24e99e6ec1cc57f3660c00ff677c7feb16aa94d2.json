{"sha": "24e99e6ec1cc57f3660c00ff677c7feb16aa94d2", "node_id": "C_kwDOANBUbNoAKDI0ZTk5ZTZlYzFjYzU3ZjM2NjBjMDBmZjY3N2M3ZmViMTZhYTk0ZDI", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-10-22T21:23:06Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-10-22T21:48:57Z"}, "message": "Fortran: Avoid running into assert with -fcheck= + UBSAN\n\n\tPR fortran/92621\ngcc/fortran/\n\t* trans-expr.c (gfc_trans_assignment_1): Add STRIP_NOPS.\n\ngcc/testsuite/\n\t* gfortran.dg/bind-c-intent-out-2.f90: New test.", "tree": {"sha": "e8289755fc57f2a57dbbd94b2a2b2d5a6328f66b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8289755fc57f2a57dbbd94b2a2b2d5a6328f66b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24e99e6ec1cc57f3660c00ff677c7feb16aa94d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24e99e6ec1cc57f3660c00ff677c7feb16aa94d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24e99e6ec1cc57f3660c00ff677c7feb16aa94d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24e99e6ec1cc57f3660c00ff677c7feb16aa94d2/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa41680e481456917824e3794c526521b9520589", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa41680e481456917824e3794c526521b9520589", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa41680e481456917824e3794c526521b9520589"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "2d7f9e0fb91a7dc1a28609dce284ffff77aff90f", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e99e6ec1cc57f3660c00ff677c7feb16aa94d2/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e99e6ec1cc57f3660c00ff677c7feb16aa94d2/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=24e99e6ec1cc57f3660c00ff677c7feb16aa94d2", "patch": "@@ -11727,6 +11727,7 @@ gfc_trans_assignment_1 (gfc_expr * expr1, gfc_expr * expr2, bool init_flag,\n \n \t  tmp = INDIRECT_REF_P (lse.expr)\n \t      ? gfc_build_addr_expr (NULL_TREE, lse.expr) : lse.expr;\n+\t  STRIP_NOPS (tmp);\n \n \t  /* We should only get array references here.  */\n \t  gcc_assert (TREE_CODE (tmp) == POINTER_PLUS_EXPR"}, {"sha": "fe8f6060f1f72c6bd85fbc8ec4d21df558250464", "filename": "gcc/testsuite/gfortran.dg/bind-c-intent-out-2.f90", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e99e6ec1cc57f3660c00ff677c7feb16aa94d2/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind-c-intent-out-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e99e6ec1cc57f3660c00ff677c7feb16aa94d2/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind-c-intent-out-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind-c-intent-out-2.f90?ref=24e99e6ec1cc57f3660c00ff677c7feb16aa94d2", "patch": "@@ -0,0 +1,39 @@\n+! { dg-do run }\n+! { dg-additional-options \"-fsanitize=undefined -fcheck=all\" }\n+\n+! PR fortran/92621\n+\n+subroutine hello(val) bind(c)\n+  use, intrinsic :: iso_c_binding, only: c_int\n+\n+  implicit none\n+  \n+  integer(kind=c_int), allocatable, intent(out) :: val(:)\n+\n+  allocate(val(1))\n+  val = 2\n+  return\n+end subroutine hello\n+\n+program alloc_p\n+\n+  use, intrinsic :: iso_c_binding, only: c_int\n+\n+  implicit none\n+\n+  interface\n+    subroutine hello(val) bind(c)\n+      import :: c_int\n+      implicit none\n+      integer(kind=c_int), allocatable, intent(out) :: val(:)\n+    end subroutine hello\n+  end interface\n+\n+  integer(kind=c_int), allocatable :: a(:)\n+\n+  allocate(a(1))\n+  a = 1\n+  call hello(a)\n+  stop\n+\n+end program alloc_p"}]}