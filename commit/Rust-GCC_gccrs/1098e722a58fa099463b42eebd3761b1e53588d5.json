{"sha": "1098e722a58fa099463b42eebd3761b1e53588d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTA5OGU3MjJhNThmYTA5OTQ2M2I0MmVlYmQzNzYxYjFlNTM1ODhkNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-02-20T13:54:40Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-02-20T13:54:40Z"}, "message": "[multiple changes]\n\n2015-02-20  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_prag.adb: Minor comment clarification.\n\n2015-02-20  Olivier Hainque  <hainque@adacore.com>\n\n\t* g-allein.ads (vec_ctf, vec_vcsfx, vec_vcfux): Remove.\n\t* g-alleve.ads, g-alleva.adb (vcfux): Likewise.\n\t* g-alveop.ads (vec_vcfsx, vec_vcfux): Just rename the ll versions.\n\t(vec_ctf): Now renamings as well.\n\nFrom-SVN: r220857", "tree": {"sha": "5fdc59298fe22c7b94ee95b1dd51a55feb55bc92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5fdc59298fe22c7b94ee95b1dd51a55feb55bc92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1098e722a58fa099463b42eebd3761b1e53588d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1098e722a58fa099463b42eebd3761b1e53588d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1098e722a58fa099463b42eebd3761b1e53588d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1098e722a58fa099463b42eebd3761b1e53588d5/comments", "author": null, "committer": null, "parents": [{"sha": "b534f49ed624fc05812c551dac997bd0db78dcb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b534f49ed624fc05812c551dac997bd0db78dcb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b534f49ed624fc05812c551dac997bd0db78dcb4"}], "stats": {"total": 177, "additions": 61, "deletions": 116}, "files": [{"sha": "5d18df4fa762dc77959463d5f6a5bd20680deecc", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1098e722a58fa099463b42eebd3761b1e53588d5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1098e722a58fa099463b42eebd3761b1e53588d5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1098e722a58fa099463b42eebd3761b1e53588d5", "patch": "@@ -1,3 +1,14 @@\n+2015-02-20  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_prag.adb: Minor comment clarification.\n+\n+2015-02-20  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* g-allein.ads (vec_ctf, vec_vcsfx, vec_vcfux): Remove.\n+\t* g-alleve.ads, g-alleva.adb (vcfux): Likewise.\n+\t* g-alveop.ads (vec_vcfsx, vec_vcfux): Just rename the ll versions.\n+\t(vec_ctf): Now renamings as well.\n+\n 2015-02-20  Robert Dewar  <dewar@adacore.com>\n \n \t* switch-c.adb, bindgen.adb: Minor reformatting."}, {"sha": "3224c2cf01f4ad425f698fc02c3575e7a3f99945", "filename": "gcc/ada/g-allein.ads", "status": "modified", "additions": 1, "deletions": 53, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1098e722a58fa099463b42eebd3761b1e53588d5/gcc%2Fada%2Fg-allein.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1098e722a58fa099463b42eebd3761b1e53588d5/gcc%2Fada%2Fg-allein.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-allein.ads?ref=1098e722a58fa099463b42eebd3761b1e53588d5", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -54,58 +54,6 @@ package GNAT.Altivec.Low_Level_Interface is\n \n    use GNAT.Altivec.Vector_Types;\n \n-   -- vec_ctf --\n-\n-   function vec_ctf_vui_cint_r_vf\n-     (A : vector_unsigned_int;\n-      B : c_int) return vector_float;\n-\n-   pragma Import\n-     (LL_Altivec, vec_ctf_vui_cint_r_vf, \"__builtin_altivec_vcfux\");\n-\n-   function vec_ctf_vsi_cint_r_vf\n-     (A : vector_signed_int;\n-      B : c_int) return vector_float;\n-\n-   pragma Import\n-     (LL_Altivec, vec_ctf_vsi_cint_r_vf, \"__builtin_altivec_vcfsx\");\n-\n-   -- vec_vcfsx --\n-\n-   function vec_vcfsx_vsi_cint_r_vf\n-     (A : vector_signed_int;\n-      B : c_int) return vector_float;\n-\n-   pragma Import\n-     (LL_Altivec, vec_vcfsx_vsi_cint_r_vf, \"__builtin_altivec_vcfsx\");\n-\n-   -- vec_vcfux --\n-\n-   function vec_vcfux_vui_cint_r_vf\n-     (A : vector_unsigned_int;\n-      B : c_int) return vector_float;\n-\n-   pragma Import\n-     (LL_Altivec, vec_vcfux_vui_cint_r_vf, \"__builtin_altivec_vcfux\");\n-\n-   -- vec_cts --\n-\n-   function vec_cts_vf_cint_r_vsi\n-     (A : vector_float;\n-      B : c_int) return vector_signed_int;\n-\n-   pragma Import\n-     (LL_Altivec, vec_cts_vf_cint_r_vsi, \"__builtin_altivec_vctsxs\");\n-\n-   -- vec_ctu --\n-\n-   function vec_ctu_vf_cint_r_vui\n-     (A : vector_float;\n-      B : c_int) return vector_unsigned_int;\n-\n-   pragma Import\n-     (LL_Altivec, vec_ctu_vf_cint_r_vui, \"__builtin_altivec_vctuxs\");\n-\n    -- vec_dss --\n \n    procedure vec_dss_cint"}, {"sha": "962401d98856d41caf4481c8901fa2ea5dc8ef0b", "filename": "gcc/ada/g-alleve.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1098e722a58fa099463b42eebd3761b1e53588d5/gcc%2Fada%2Fg-alleve.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1098e722a58fa099463b42eebd3761b1e53588d5/gcc%2Fada%2Fg-alleve.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-alleve.adb?ref=1098e722a58fa099463b42eebd3761b1e53588d5", "patch": "@@ -7,7 +7,7 @@\n --                                 B o d y                                  --\n --                         (Soft Binding Version)                           --\n --                                                                          --\n---          Copyright (C) 2004-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2524,9 +2524,9 @@ package body GNAT.Altivec.Low_Level_Vectors is\n    -- vcfux --\n    -----------\n \n-   function vcfux (A : LL_VSI; B : c_int) return LL_VF is\n+   function vcfux (A : LL_VUI; B : c_int) return LL_VF is\n+      VA : constant VUI_View := To_View (A);\n       D  : VF_View;\n-      VA : constant VUI_View := To_View (To_LL_VUI (A));\n       K  : Vfloat_Range;\n \n    begin\n@@ -2588,7 +2588,7 @@ package body GNAT.Altivec.Low_Level_Vectors is\n    -- vctuxs --\n    ------------\n \n-   function vctuxs (A : LL_VF; B : c_int) return LL_VSI is\n+   function vctuxs (A : LL_VF; B : c_int) return LL_VUI is\n       VA : constant VF_View := To_View (A);\n       D  : VUI_View;\n       K  : Vfloat_Range;\n@@ -2602,7 +2602,7 @@ package body GNAT.Altivec.Low_Level_Vectors is\n             * F64 (2.0 ** Integer (B)));\n       end loop;\n \n-      return To_LL_VSI (To_Vector (D));\n+      return To_Vector (D);\n    end vctuxs;\n \n    ---------"}, {"sha": "66718c1732fcb64478eaa393328e023330f0954e", "filename": "gcc/ada/g-alleve.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1098e722a58fa099463b42eebd3761b1e53588d5/gcc%2Fada%2Fg-alleve.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1098e722a58fa099463b42eebd3761b1e53588d5/gcc%2Fada%2Fg-alleve.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-alleve.ads?ref=1098e722a58fa099463b42eebd3761b1e53588d5", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                         (Soft Binding Version)                           --\n --                                                                          --\n---          Copyright (C) 2004-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -111,11 +111,11 @@ package GNAT.Altivec.Low_Level_Vectors is\n    function vcmpgtsw (A : LL_VSI; B : LL_VSI) return LL_VSI;\n    function vcmpgtfp (A : LL_VF; B : LL_VF) return LL_VSI;\n \n-   function vcfux (A : LL_VSI; B : c_int) return LL_VF;\n+   function vcfux (A : LL_VUI; B : c_int) return LL_VF;\n    function vcfsx (A : LL_VSI; B : c_int) return LL_VF;\n \n    function vctsxs (A : LL_VF; B : c_int) return LL_VSI;\n-   function vctuxs (A : LL_VF; B : c_int) return LL_VSI;\n+   function vctuxs (A : LL_VF; B : c_int) return LL_VUI;\n \n    procedure dss (A : c_int);\n    procedure dssall;"}, {"sha": "6c9d8000512037df4e843d21819b11ad90841c30", "filename": "gcc/ada/g-alveop.ads", "status": "modified", "additions": 39, "deletions": 54, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1098e722a58fa099463b42eebd3761b1e53588d5/gcc%2Fada%2Fg-alveop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1098e722a58fa099463b42eebd3761b1e53588d5/gcc%2Fada%2Fg-alveop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-alveop.ads?ref=1098e722a58fa099463b42eebd3761b1e53588d5", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -34,17 +34,13 @@\n \n with GNAT.Altivec.Vector_Types;  use GNAT.Altivec.Vector_Types;\n with GNAT.Altivec.Low_Level_Interface;  use GNAT.Altivec.Low_Level_Interface;\n+with GNAT.Altivec.Low_Level_Vectors;\n \n package GNAT.Altivec.Vector_Operations is\n \n-   --  The vast majority of the operations exposed here are overloads over a\n-   --  much smaller set of low level primitives with type conversions around.\n-   --\n-   --  In some cases, a direct binding without any intermediate body is\n-   --  possible or even mandatory for technical reasons. What we provide\n-   --  here for such cases are renamings of straight imports exposed by\n-   --  Altivec.Low_Level_Interface.  See the comments in the private part for\n-   --  additional details.\n+   --  The vast majority of the operations exposed here are type conversion\n+   --  wrappers around a much smaller set of low level primitives, exposed by\n+   --  the Altivec.Low_Level_Interface package.\n \n    -------------------------------------------------------\n    -- [PIM-4.4 Generic and Specific AltiVec operations] --\n@@ -850,45 +846,33 @@ package GNAT.Altivec.Vector_Operations is\n      (A : vector_float;\n       B : vector_float) return vector_bool_int;\n \n-   -- vec_ctf --\n-\n-   function vec_ctf\n-     (A : vector_unsigned_int;\n-      B : c_int) return vector_float\n-   renames Low_Level_Interface.vec_ctf_vui_cint_r_vf;\n-\n-   function vec_ctf\n-     (A : vector_signed_int;\n-      B : c_int) return vector_float\n-   renames Low_Level_Interface.vec_ctf_vsi_cint_r_vf;\n-\n    -- vec_vcfsx --\n \n    function vec_vcfsx\n      (A : vector_signed_int;\n       B : c_int) return vector_float\n-   renames Low_Level_Interface.vec_vcfsx_vsi_cint_r_vf;\n+   renames Low_Level_Vectors.vcfsx;\n \n    -- vec_vcfux --\n \n    function vec_vcfux\n      (A : vector_unsigned_int;\n       B : c_int) return vector_float\n-   renames Low_Level_Interface.vec_vcfux_vui_cint_r_vf;\n+   renames Low_Level_Vectors.vcfux;\n \n-   -- vec_cts --\n+   -- vec_vctsxs --\n \n-   function vec_cts\n+   function vec_vctsxs\n      (A : vector_float;\n       B : c_int) return vector_signed_int\n-   renames Low_Level_Interface.vec_cts_vf_cint_r_vsi;\n+   renames Low_Level_Vectors.vctsxs;\n \n-   -- vec_ctu --\n+   -- vec_vctuxs --\n \n-   function vec_ctu\n+   function vec_vctuxs\n      (A : vector_float;\n       B : c_int) return vector_unsigned_int\n-   renames Low_Level_Interface.vec_ctu_vf_cint_r_vui;\n+   renames Low_Level_Vectors.vctuxs;\n \n    -- vec_dss --\n \n@@ -5825,6 +5809,32 @@ package GNAT.Altivec.Vector_Operations is\n    -- Straight overloads of routines aboves --\n    -------------------------------------------\n \n+   -- vec_ctf --\n+\n+   function vec_ctf\n+     (A : vector_unsigned_int;\n+      B : c_int) return vector_float\n+   renames vec_vcfux;\n+\n+   function vec_ctf\n+     (A : vector_signed_int;\n+      B : c_int) return vector_float\n+   renames vec_vcfsx;\n+\n+   -- vec_cts --\n+\n+   function vec_cts\n+     (A : vector_float;\n+      B : c_int) return vector_signed_int\n+   renames vec_vctsxs;\n+\n+   -- vec_ctu --\n+\n+   function vec_ctu\n+     (A : vector_float;\n+      B : c_int) return vector_unsigned_int\n+   renames vec_vctuxs;\n+\n    -- vec_vaddcuw --\n \n    function vec_vaddcuw\n@@ -6096,20 +6106,6 @@ package GNAT.Altivec.Vector_Operations is\n       B : vector_float) return vector_bool_int\n    renames vec_cmpge;\n \n-   -- vec_vctsxs --\n-\n-   function vec_vctsxs\n-     (A : vector_float;\n-      B : c_int) return vector_signed_int\n-   renames vec_cts;\n-\n-   -- vec_vctuxs --\n-\n-   function vec_vctuxs\n-     (A : vector_float;\n-      B : c_int) return vector_unsigned_int\n-   renames vec_ctu;\n-\n    -- vec_vexptefp --\n \n    function vec_vexptefp\n@@ -7868,17 +7864,6 @@ private\n    --         begin\n    --           return To_VBC (vcmpgtub (To_VSC (B), To_VSC (A)));\n    --         end vec_cmplt;\n-   --\n-   --  Conversely, a direct (without wrapper) binding is sometimes mandatory\n-   --  in the Hard binding case, because the corresponding low level code\n-   --  accept only literal values for some arguments. Inlined calls to the\n-   --  wrapper with proper arguments would be fine, but the wrapper body\n-   --  itself would not be compilable. These can of course also be used in the\n-   --  Soft binding, and so are naturally in this common unit.\n-   --\n-   --  Fortunately, the sets of operations for which a wrapper is required\n-   --  and the set of operations for which a wrapper would not be compilable\n-   --  do not intersect.\n \n    -----------------------------\n    -- Inlining considerations --"}, {"sha": "ec7292eae88d87474df1b142348becd540fe9988", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1098e722a58fa099463b42eebd3761b1e53588d5/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1098e722a58fa099463b42eebd3761b1e53588d5/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=1098e722a58fa099463b42eebd3761b1e53588d5", "patch": "@@ -15730,7 +15730,8 @@ package body Sem_Prag is\n                  (\"pragma% only allowed for private type\", Arg1);\n             end if;\n \n-            --  Not allowed for abstract type\n+            --  Not allowed for abstract type in the non-class case (it is\n+            --  allowed to use Invariant'Class for abstract types).\n \n             if Is_Abstract_Type (Typ) and then not Class_Present (N) then\n                Error_Pragma_Arg"}]}