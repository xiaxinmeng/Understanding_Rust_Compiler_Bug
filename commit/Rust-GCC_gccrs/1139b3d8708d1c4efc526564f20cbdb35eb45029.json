{"sha": "1139b3d8708d1c4efc526564f20cbdb35eb45029", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTEzOWIzZDg3MDhkMWM0ZWZjNTI2NTY0ZjIwY2JkYjM1ZWI0NTAyOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-05-23T02:18:33Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-05-23T02:18:33Z"}, "message": "cp-tree.def: Add SRCLOC.\n\n\t* cp-tree.def: Add SRCLOC.\n\t* cp-tree.h: Add struct tree_srcloc and accessor macros.\n\t* tree.c (build_srcloc, build_srcloc_here): New fns.\n\t* pt.c (add_pending_template): Use build_srcloc_here.\n\t(push_tinst_level): Update last_template_error_tick before erroring.\n\t(instantiate_decl): Restore lineno and input_filename before\n\tcalling add_pending_template.\n\t* decl2.c (finish_file): Set up lineno and input_filename for\n\tpending templates.\n\nFrom-SVN: r19967", "tree": {"sha": "de8ec1626af94687adb1a9f6d5f0bd2f954042f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de8ec1626af94687adb1a9f6d5f0bd2f954042f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1139b3d8708d1c4efc526564f20cbdb35eb45029", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1139b3d8708d1c4efc526564f20cbdb35eb45029", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1139b3d8708d1c4efc526564f20cbdb35eb45029", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1139b3d8708d1c4efc526564f20cbdb35eb45029/comments", "author": null, "committer": null, "parents": [{"sha": "62c154ed39c6410c39944a8b7f6feccddc2a2946", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62c154ed39c6410c39944a8b7f6feccddc2a2946", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62c154ed39c6410c39944a8b7f6feccddc2a2946"}], "stats": {"total": 58, "additions": 55, "deletions": 3}, "files": [{"sha": "341db452630604b594b8c76b90836b2bc3a6e248", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1139b3d8708d1c4efc526564f20cbdb35eb45029/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1139b3d8708d1c4efc526564f20cbdb35eb45029/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1139b3d8708d1c4efc526564f20cbdb35eb45029", "patch": "@@ -1,3 +1,15 @@\n+1998-05-23  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* cp-tree.def: Add SRCLOC.\n+\t* cp-tree.h: Add struct tree_srcloc and accessor macros.\n+\t* tree.c (build_srcloc, build_srcloc_here): New fns.\n+\t* pt.c (add_pending_template): Use build_srcloc_here.\n+\t(push_tinst_level): Update last_template_error_tick before erroring.\n+\t(instantiate_decl): Restore lineno and input_filename before \n+\tcalling add_pending_template.\n+\t* decl2.c (finish_file): Set up lineno and input_filename for\n+\tpending templates.\n+\n 1998-05-22  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* decl.c (lang_print_error_function): New fn.  "}, {"sha": "cad0a591420ed1ff9dab6859081e50acba29c0f4", "filename": "gcc/cp/cp-tree.def", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1139b3d8708d1c4efc526564f20cbdb35eb45029/gcc%2Fcp%2Fcp-tree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1139b3d8708d1c4efc526564f20cbdb35eb45029/gcc%2Fcp%2Fcp-tree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.def?ref=1139b3d8708d1c4efc526564f20cbdb35eb45029", "patch": "@@ -179,6 +179,9 @@ DEFTREECODE (OVERLOAD, \"overload\", 'x', 1)\n    tree structure.  */\n DEFTREECODE (WRAPPER, \"wrapper\", 'x', 1)\n \n+/* A node to remember a source position.  */\n+DEFTREECODE (SRCLOC, \"srcloc\", 'x', 2)\n+\n /* A whole bunch of tree codes for the initial, superficial parsing of\n    templates.  */\n DEFTREECODE (LOOKUP_EXPR, \"lookup_expr\", 'e', 2)"}, {"sha": "f12a82eb253c6e4c2a7c394d2a62fc9b3d34d643", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1139b3d8708d1c4efc526564f20cbdb35eb45029/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1139b3d8708d1c4efc526564f20cbdb35eb45029/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=1139b3d8708d1c4efc526564f20cbdb35eb45029", "patch": "@@ -166,6 +166,15 @@ struct tree_wrapper\n   } u;\n };\n \n+#define SRCLOC_FILE(NODE) (((struct tree_srcloc*)NODE)->filename)\n+#define SRCLOC_LINE(NODE) (((struct tree_srcloc*)NODE)->linenum)\n+struct tree_srcloc\n+{\n+  char common[sizeof (struct tree_common)];\n+  char *filename;\n+  int linenum;\n+};\n+\n /* To identify to the debug emitters if it should pay attention to the\n    flag `-Wtemplate-debugging'.  */\n #define HAVE_TEMPLATES 1\n@@ -2823,6 +2832,8 @@ extern tree make_temp_vec\t\t\tPROTO((int));\n extern tree build_ptr_wrapper\t\t\tPROTO((void *));\n extern tree build_expr_ptr_wrapper\t\tPROTO((void *));\n extern tree build_int_wrapper\t\t\tPROTO((int));\n+extern tree build_srcloc\t\t\tPROTO((char *, int));\n+extern tree build_srcloc_here\t\t\tPROTO((void));\n extern int varargs_function_p\t\t\tPROTO((tree));\n extern int really_overloaded_fn\t\t\tPROTO((tree));\n extern int cp_tree_equal\t\t\tPROTO((tree, tree));"}, {"sha": "2ad9bbe5f22ec2a70fa16ae1f49bc9735ee3cab8", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1139b3d8708d1c4efc526564f20cbdb35eb45029/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1139b3d8708d1c4efc526564f20cbdb35eb45029/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=1139b3d8708d1c4efc526564f20cbdb35eb45029", "patch": "@@ -3086,7 +3086,12 @@ finish_file ()\n \n   for (fnname = pending_templates; fnname; fnname = TREE_CHAIN (fnname))\n     {\n+      tree srcloc = TREE_PURPOSE (fnname);\n       tree decl = TREE_VALUE (fnname);\n+\n+      input_filename = SRCLOC_FILE (srcloc);\n+      lineno = SRCLOC_LINE (srcloc);\n+\n       if (TREE_CODE_CLASS (TREE_CODE (decl)) == 't')\n \t{\n \t  instantiate_class_template (decl);"}, {"sha": "d148e0dd93a59ece74e894f0a882286726048b6a", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1139b3d8708d1c4efc526564f20cbdb35eb45029/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1139b3d8708d1c4efc526564f20cbdb35eb45029/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=1139b3d8708d1c4efc526564f20cbdb35eb45029", "patch": "@@ -2775,7 +2775,7 @@ add_pending_template (d)\n     return;\n \n   *template_tail = perm_tree_cons\n-    (current_function_decl, d, NULL_TREE);\n+    (build_srcloc_here (), d, NULL_TREE);\n   template_tail = &TREE_CHAIN (*template_tail);\n   TI_PENDING_TEMPLATE_FLAG (ti) = 1;\n }\n@@ -3346,8 +3346,8 @@ print_template_context (err)\n       if (current_function_decl == p->decl)\n \t/* Avoid redundancy with the the \"In function\" line.  */;\n       else if (current_function_decl == NULL_TREE)\n-\tfprintf (stderr, \"In instantiation of `%s':\\n\",\n-\t\t decl_as_string (p->decl, 0));\n+\tfprintf (stderr, \"%s: In instantiation of `%s':\\n\",\n+\t\t file, decl_as_string (p->decl, 0));\n       else\n \tmy_friendly_abort (980521);\n \n@@ -3397,6 +3397,7 @@ push_tinst_level (d)\n       if (uses_template_parms (d))\n \treturn 0;\n \n+      last_template_error_tick = tinst_level_tick;\n       error (\"template instantiation depth exceeds maximum of %d\",\n \t     max_tinst_depth);\n       error (\" (use -ftemplate-depth-NN to increase the maximum)\");\n@@ -7127,6 +7128,9 @@ instantiate_decl (d)\n       || (! (TREE_CODE (d) == FUNCTION_DECL && DECL_INLINE (d) && nested)\n \t  && ! at_eof))\n     {\n+      lineno = line;\n+      input_filename = file;\n+\n       add_pending_template (d);\n       goto out;\n     }"}, {"sha": "ce601184d23a86d23de8887e688d024be1cb67b7", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1139b3d8708d1c4efc526564f20cbdb35eb45029/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1139b3d8708d1c4efc526564f20cbdb35eb45029/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=1139b3d8708d1c4efc526564f20cbdb35eb45029", "patch": "@@ -2267,6 +2267,23 @@ build_int_wrapper (i)\n   return t;\n }\n \n+tree\n+build_srcloc (file, line)\n+     char *file;\n+     int line;\n+{\n+  tree t = make_node (SRCLOC);\n+  SRCLOC_FILE (t) = file;\n+  SRCLOC_LINE (t) = line;\n+  return t;\n+}\n+\n+tree\n+build_srcloc_here ()\n+{\n+  return build_srcloc (input_filename, lineno);\n+}\n+\n void\n push_expression_obstack ()\n {"}]}