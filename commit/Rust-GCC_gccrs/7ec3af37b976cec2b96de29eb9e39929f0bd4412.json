{"sha": "7ec3af37b976cec2b96de29eb9e39929f0bd4412", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VjM2FmMzdiOTc2Y2VjMmI5NmRlMjllYjllMzk5MjlmMGJkNDQxMg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-01-08T19:43:11Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-01-08T19:43:11Z"}, "message": "[multiple changes]\n\n\n2003-01-08  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/Makefile.am (stamp-*): Add checks for existing stamps.\n\t* include/Makefile.in: Regenerate.\n\n\t* acinclude.m4 (GLIBCPP_ENABLE_DEBUG): Correct comment.\n\t* aclocal.m4: Regenerate.\n\n\t* configure.in: Don't add new multi-do rules every time the\n\tdirectory is reconfigured.\n\t* configure: Regenerate.\n\n2003-01-08  Brad Spencer  <spencer@infointeractive.com>\n            Nathan Myers  <ncm@cantrip.org>\n\n\t* src/Makefile.am (stamp-debug): Clean.\n\t* src/Makefile.in: Regenerate.\n\nFrom-SVN: r61052", "tree": {"sha": "74bfbc3c4b75c875cfd9bdb958a5f1862b04354d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74bfbc3c4b75c875cfd9bdb958a5f1862b04354d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ec3af37b976cec2b96de29eb9e39929f0bd4412", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ec3af37b976cec2b96de29eb9e39929f0bd4412", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ec3af37b976cec2b96de29eb9e39929f0bd4412", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ec3af37b976cec2b96de29eb9e39929f0bd4412/comments", "author": null, "committer": null, "parents": [{"sha": "11f6b45110134be43f0fbdaf7fa45691acbffbbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11f6b45110134be43f0fbdaf7fa45691acbffbbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11f6b45110134be43f0fbdaf7fa45691acbffbbb"}], "stats": {"total": 198, "additions": 121, "deletions": 77}, "files": [{"sha": "5236546bbda51799b7347d9149ecb9095e769f6e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ec3af37b976cec2b96de29eb9e39929f0bd4412/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ec3af37b976cec2b96de29eb9e39929f0bd4412/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7ec3af37b976cec2b96de29eb9e39929f0bd4412", "patch": "@@ -1,3 +1,21 @@\n+2003-01-08  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/Makefile.am (stamp-*): Add checks for existing stamps.\n+\t* include/Makefile.in: Regenerate.\n+\n+\t* acinclude.m4 (GLIBCPP_ENABLE_DEBUG): Correct comment.\n+\t* aclocal.m4: Regenerate.\n+\n+\t* configure.in: Don't add new multi-do rules every time the\n+\tdirectory is reconfigured.\n+\t* configure: Regenerate.\n+\t\n+2003-01-08  Brad Spencer  <spencer@infointeractive.com>\n+            Nathan Myers  <ncm@cantrip.org>\n+\t\n+\t* src/Makefile.am (stamp-debug): Clean.\n+\t* src/Makefile.in: Regenerate.\n+\t\n 2003-01-07  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/8707"}, {"sha": "e753fcc1caa541c129cfb7a52dea6780a908d5ab", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ec3af37b976cec2b96de29eb9e39929f0bd4412/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ec3af37b976cec2b96de29eb9e39929f0bd4412/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=7ec3af37b976cec2b96de29eb9e39929f0bd4412", "patch": "@@ -1067,7 +1067,7 @@ AC_DEFUN(GLIBCPP_ENABLE_DEBUG, [dnl\n define([GLIBCPP_ENABLE_DEBUG_DEFAULT], ifelse($1, yes, yes, no))dnl\n AC_ARG_ENABLE(debug,\n changequote(<<, >>)dnl\n-<<  --enable-debug          extra debugging, turn off optimization [default=>>GLIBCPP_ENABLE_DEBUG_DEFAULT],\n+<<  --enable-debug          build extra debug library [default=>>GLIBCPP_ENABLE_DEBUG_DEFAULT],\n changequote([, ])dnl\n [case \"${enableval}\" in\n  yes) enable_debug=yes ;;"}, {"sha": "6af4ccef737792580be10ccba028333a1022b60c", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ec3af37b976cec2b96de29eb9e39929f0bd4412/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ec3af37b976cec2b96de29eb9e39929f0bd4412/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=7ec3af37b976cec2b96de29eb9e39929f0bd4412", "patch": "@@ -1079,7 +1079,7 @@ AC_DEFUN(GLIBCPP_ENABLE_DEBUG, [dnl\n define([GLIBCPP_ENABLE_DEBUG_DEFAULT], ifelse($1, yes, yes, no))dnl\n AC_ARG_ENABLE(debug,\n changequote(<<, >>)dnl\n-<<  --enable-debug          extra debugging, turn off optimization [default=>>GLIBCPP_ENABLE_DEBUG_DEFAULT],\n+<<  --enable-debug          build extra debug library [default=>>GLIBCPP_ENABLE_DEBUG_DEFAULT],\n changequote([, ])dnl\n [case \"${enableval}\" in\n  yes) enable_debug=yes ;;"}, {"sha": "5794cba55e92cd0b0ede9a0781e823f4d9e98d3b", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ec3af37b976cec2b96de29eb9e39929f0bd4412/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ec3af37b976cec2b96de29eb9e39929f0bd4412/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=7ec3af37b976cec2b96de29eb9e39929f0bd4412", "patch": "@@ -61,7 +61,7 @@ ac_help=\"$ac_help\n   --enable-cxx-flags=FLAGS      pass compiler FLAGS when building library;\n                                   [default=]\"\n ac_help=\"$ac_help\n-  --enable-debug          extra debugging, turn off optimization [default=no]\"\n+  --enable-debug          build extra debug library [default=no]\"\n ac_help=\"$ac_help\n   --enable-debug-flags=FLAGS    pass compiler FLAGS when building debug\n \t                library;[default=none]\"\n@@ -24313,15 +24313,17 @@ CXX=\"${CXX}\"\n EOF\n cat >> $CONFIG_STATUS <<\\EOF\n test -z \"$CONFIG_HEADERS\" || echo timestamp > stamp-h\n-test -z \"$CONFIG_HEADERS\" || echo timestamp > stamp-h\n-if test -n \"$CONFIG_FILES\"; then\n- if test -n \"${with_build_subdir}\" || test -n \"${with_target_subdir}\"; then\n-    LD=\"${ORIGINAL_LD_FOR_MULTILIBS}\"\n-    ac_file=Makefile . ${glibcpp_basedir}/../config-ml.in\n-    grep '^MULTISUBDIR =' Makefile >> src/Makefile\n-    grep '^MULTISUBDIR =' Makefile >> libsupc++/Makefile\n-  fi\n-fi\n+ if ! test -f stamp-h; then\n+   test -z \"$CONFIG_HEADERS\" || echo timestamp > stamp-h\n+    if test -n \"$CONFIG_FILES\"; then\n+     if test -n \"${with_build_subdir}\" || test -n \"${with_target_subdir}\"; then\n+      LD=\"${ORIGINAL_LD_FOR_MULTILIBS}\"\n+      ac_file=Makefile . ${glibcpp_basedir}/../config-ml.in\n+      grep '^MULTISUBDIR =' Makefile >> src/Makefile\n+      grep '^MULTISUBDIR =' Makefile >> libsupc++/Makefile\n+     fi\n+    fi\n+   fi\n chmod +x mkcheck\n chmod +x testsuite_flags\n "}, {"sha": "0de1794c3e6fb076a24254d521be8f66eecf9e99", "filename": "libstdc++-v3/configure.in", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ec3af37b976cec2b96de29eb9e39929f0bd4412/libstdc%2B%2B-v3%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ec3af37b976cec2b96de29eb9e39929f0bd4412/libstdc%2B%2B-v3%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.in?ref=7ec3af37b976cec2b96de29eb9e39929f0bd4412", "patch": "@@ -474,15 +474,17 @@ AC_OUTPUT(Makefile \\\n     include/Makefile src/Makefile \\\n     libmath/Makefile libio/Makefile libsupc++/Makefile \\\n     po/Makefile testsuite/Makefile mkcheck testsuite_flags,\n-[test -z \"$CONFIG_HEADERS\" || echo timestamp > stamp-h\n-if test -n \"$CONFIG_FILES\"; then\n- if test -n \"${with_build_subdir}\" || test -n \"${with_target_subdir}\"; then\n-    LD=\"${ORIGINAL_LD_FOR_MULTILIBS}\"\n-    ac_file=Makefile . ${glibcpp_basedir}/../config-ml.in\n-    grep '^MULTISUBDIR =' Makefile >> src/Makefile\n-    grep '^MULTISUBDIR =' Makefile >> libsupc++/Makefile\n-  fi\n-fi\n+[ if ! test -f stamp-h; then\n+   test -z \"$CONFIG_HEADERS\" || echo timestamp > stamp-h\n+    if test -n \"$CONFIG_FILES\"; then\n+     if test -n \"${with_build_subdir}\" || test -n \"${with_target_subdir}\"; then\n+      LD=\"${ORIGINAL_LD_FOR_MULTILIBS}\"\n+      ac_file=Makefile . ${glibcpp_basedir}/../config-ml.in\n+      grep '^MULTISUBDIR =' Makefile >> src/Makefile\n+      grep '^MULTISUBDIR =' Makefile >> libsupc++/Makefile\n+     fi\n+    fi\n+   fi\n chmod +x mkcheck\n chmod +x testsuite_flags\n ],"}, {"sha": "ae755d21093e824ed605bf99f9105192ab1cc0bf", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 33, "deletions": 21, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ec3af37b976cec2b96de29eb9e39929f0bd4412/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ec3af37b976cec2b96de29eb9e39929f0bd4412/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=7ec3af37b976cec2b96de29eb9e39929f0bd4412", "patch": "@@ -1,6 +1,6 @@\n ## Makefile for the include subdirectory of the GNU C++ Standard library.\n ##\n-## Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n+## Copyright (C) 2001, 2002, 2003 Free Software Foundation, Inc.\n ##\n ## This file is part of the libstdc++ version 3 distribution.\n ## Process this file with automake to produce Makefile.in.\n@@ -349,18 +349,22 @@ stamp-std: ${std_headers}\n \t@if [ ! -d \"${std_builddir}\" ]; then \\\n \t  mkdir -p ${std_builddir} ;\\\n \tfi ;\\\n-\t(cd ${std_builddir} && for h in $?; do \\\n-\t  official_name=`echo $$h | sed -e 's,.*/std_,,' -e 's,\\.h$$,,'` ;\\\n-\t  @LN_S@ $$h ./$${official_name} || true ;\\\n-\tdone) ;\\\n-\techo `date` > stamp-std \n+\tif [ ! -f stamp-std ]; then \\\n+\t  (cd ${std_builddir} && for h in $?; do \\\n+\t    official_name=`echo $$h | sed -e 's,.*/std_,,' -e 's,\\.h$$,,'` ;\\\n+\t    @LN_S@ $$h ./$${official_name} || true ;\\\n+\t  done) ;\\\n+\t  echo `date` > stamp-std ;\\\n+\tfi\n \n stamp-bits: ${bits_headers}\n \t@if [ ! -d \"${bits_builddir}\" ]; then \\\n \t  mkdir -p ${bits_builddir} ;\\\n \tfi ;\\\n-\t(cd ${bits_builddir} && @LN_S@ $? . || true) ;\\\n-\techo `date` > stamp-bits\n+\tif [ ! -f stamp-bits ]; then \\\n+\t  (cd ${bits_builddir} && @LN_S@ $? . || true) ;\\\n+\t  echo `date` > stamp-bits ;\\\n+\tfi\n \n stamp-c_base: ${c_base_headers} ${c_base_headers_extra} \n \t@if [ ! -d \"${c_base_builddir}\" ]; then \\\n@@ -370,33 +374,41 @@ stamp-c_base: ${c_base_headers} ${c_base_headers_extra}\n \t  official_name=`echo $$h | sed -e 's,.*/std_,,' -e 's,\\.h$$,,'` ;\\\n \t  @LN_S@ $$h ./$${official_name} || true ;\\\n \tdone) ;\\\n-\tif [ ! -z \"${c_base_headers_extra}\" ]; then \\\n+\tif [ ! -f stamp-c_base ]; then \\\n+\t  if [ ! -z \"${c_base_headers_extra}\" ]; then \\\n \t  (cd ${bits_builddir} && @LN_S@ ${c_base_headers_extra}  . || true) ;\\\n-\tfi ;\\\n-\techo `date` > stamp-c_base\n+\t  fi ;\\\n+\t  echo `date` > stamp-c_base ;\\\n+\tfi\n \n stamp-c_compatibility: ${c_compatibility_headers_extra}\n \t@if [ ! -d \"${c_compatibility_builddir}\" ]; then \\\n \t  mkdir -p ${c_compatibility_builddir} ;\\\n \tfi ;\\\n-\tif [ ! -z \"${c_compatibility_headers_extra}\" ]; then \\\n-\t  (cd ${c_compatibility_builddir} && @LN_S@ $? . || true) ;\\\n-\tfi ;\\\n-\techo `date` > stamp-c_compatibility\n+\tif [ ! -f stamp-c_compatibility ]; then \\\n+\t  if [ ! -z \"${c_compatibility_headers_extra}\" ]; then \\\n+\t    (cd ${c_compatibility_builddir} && @LN_S@ $? . || true) ;\\\n+\t  fi ;\\\n+\t  echo `date` > stamp-c_compatibility ;\\\n+\tfi \n \n stamp-backward: ${backward_headers}\n \t@if [ ! -d \"${backward_builddir}\" ]; then \\\n \t  mkdir -p ${backward_builddir} ;\\\n \tfi ;\\\n-\t(cd ${backward_builddir} && @LN_S@ $? . || true) ;\\\n-\techo `date` > stamp-backward\n+\tif [ ! -f stamp-backward ]; then \\\n+\t  (cd ${backward_builddir} && @LN_S@ $? . || true) ;\\\n+\t  echo `date` > stamp-backward ;\\\n+\tfi\n \n stamp-ext: ${ext_headers}\n \t@if [ ! -d \"${ext_builddir}\" ]; then \\\n-\t  mkdir -p ${ext_builddir} ;\\\n+\t    mkdir -p ${ext_builddir} ;\\\n \tfi ;\\\n-\t(cd ${ext_builddir} && @LN_S@ $? . || true) ;\\\n-\techo `date` > stamp-ext\n+\tif [ ! -f stamp-ext ]; then \\\n+\t  (cd ${ext_builddir} && @LN_S@ $? . || true) ;\\\n+\t  echo `date` > stamp-ext ;\\\n+\tfi\n \n stamp-${target_alias}:\n \t@if [ ! -d ${target_builddir} ]; then \\\n@@ -500,7 +512,7 @@ install-data-local:\n \t  $(INSTALL_DATA) $${file} ${gxx_include_dir}/${target_builddir}; done\n \n # By adding these files here, automake will remove them for 'make clean'\n-#CLEANFILES = ${allstamps}\n+#CLEANFILES = ${allstamps} \n \n # Stop implicit '.o' make rules from ever stomping on extensionless\n # headers, in the improbable case where some foolish, crack-addled"}, {"sha": "eea491efe6314775991504f855a4aa32374ccfd1", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 32, "deletions": 20, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ec3af37b976cec2b96de29eb9e39929f0bd4412/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ec3af37b976cec2b96de29eb9e39929f0bd4412/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=7ec3af37b976cec2b96de29eb9e39929f0bd4412", "patch": "@@ -582,18 +582,22 @@ stamp-std: ${std_headers}\n \t@if [ ! -d \"${std_builddir}\" ]; then \\\n \t  mkdir -p ${std_builddir} ;\\\n \tfi ;\\\n-\t(cd ${std_builddir} && for h in $?; do \\\n-\t  official_name=`echo $$h | sed -e 's,.*/std_,,' -e 's,\\.h$$,,'` ;\\\n-\t  @LN_S@ $$h ./$${official_name} || true ;\\\n-\tdone) ;\\\n-\techo `date` > stamp-std \n+\tif [ ! -f stamp-std ]; then \\\n+\t  (cd ${std_builddir} && for h in $?; do \\\n+\t    official_name=`echo $$h | sed -e 's,.*/std_,,' -e 's,\\.h$$,,'` ;\\\n+\t    @LN_S@ $$h ./$${official_name} || true ;\\\n+\t  done) ;\\\n+\t  echo `date` > stamp-std ;\\\n+\tfi\n \n stamp-bits: ${bits_headers}\n \t@if [ ! -d \"${bits_builddir}\" ]; then \\\n \t  mkdir -p ${bits_builddir} ;\\\n \tfi ;\\\n-\t(cd ${bits_builddir} && @LN_S@ $? . || true) ;\\\n-\techo `date` > stamp-bits\n+\tif [ ! -f stamp-bits ]; then \\\n+\t  (cd ${bits_builddir} && @LN_S@ $? . || true) ;\\\n+\t  echo `date` > stamp-bits ;\\\n+\tfi\n \n stamp-c_base: ${c_base_headers} ${c_base_headers_extra} \n \t@if [ ! -d \"${c_base_builddir}\" ]; then \\\n@@ -603,33 +607,41 @@ stamp-c_base: ${c_base_headers} ${c_base_headers_extra}\n \t  official_name=`echo $$h | sed -e 's,.*/std_,,' -e 's,\\.h$$,,'` ;\\\n \t  @LN_S@ $$h ./$${official_name} || true ;\\\n \tdone) ;\\\n-\tif [ ! -z \"${c_base_headers_extra}\" ]; then \\\n+\tif [ ! -f stamp-c_base ]; then \\\n+\t  if [ ! -z \"${c_base_headers_extra}\" ]; then \\\n \t  (cd ${bits_builddir} && @LN_S@ ${c_base_headers_extra}  . || true) ;\\\n-\tfi ;\\\n-\techo `date` > stamp-c_base\n+\t  fi ;\\\n+\t  echo `date` > stamp-c_base ;\\\n+\tfi\n \n stamp-c_compatibility: ${c_compatibility_headers_extra}\n \t@if [ ! -d \"${c_compatibility_builddir}\" ]; then \\\n \t  mkdir -p ${c_compatibility_builddir} ;\\\n \tfi ;\\\n-\tif [ ! -z \"${c_compatibility_headers_extra}\" ]; then \\\n-\t  (cd ${c_compatibility_builddir} && @LN_S@ $? . || true) ;\\\n-\tfi ;\\\n-\techo `date` > stamp-c_compatibility\n+\tif [ ! -f stamp-c_compatibility ]; then \\\n+\t  if [ ! -z \"${c_compatibility_headers_extra}\" ]; then \\\n+\t    (cd ${c_compatibility_builddir} && @LN_S@ $? . || true) ;\\\n+\t  fi ;\\\n+\t  echo `date` > stamp-c_compatibility ;\\\n+\tfi \n \n stamp-backward: ${backward_headers}\n \t@if [ ! -d \"${backward_builddir}\" ]; then \\\n \t  mkdir -p ${backward_builddir} ;\\\n \tfi ;\\\n-\t(cd ${backward_builddir} && @LN_S@ $? . || true) ;\\\n-\techo `date` > stamp-backward\n+\tif [ ! -f stamp-backward ]; then \\\n+\t  (cd ${backward_builddir} && @LN_S@ $? . || true) ;\\\n+\t  echo `date` > stamp-backward ;\\\n+\tfi\n \n stamp-ext: ${ext_headers}\n \t@if [ ! -d \"${ext_builddir}\" ]; then \\\n-\t  mkdir -p ${ext_builddir} ;\\\n+\t    mkdir -p ${ext_builddir} ;\\\n \tfi ;\\\n-\t(cd ${ext_builddir} && @LN_S@ $? . || true) ;\\\n-\techo `date` > stamp-ext\n+\tif [ ! -f stamp-ext ]; then \\\n+\t  (cd ${ext_builddir} && @LN_S@ $? . || true) ;\\\n+\t  echo `date` > stamp-ext ;\\\n+\tfi\n \n stamp-${target_alias}:\n \t@if [ ! -d ${target_builddir} ]; then \\\n@@ -719,7 +731,7 @@ install-data-local:\n \t  $(INSTALL_DATA) $${file} ${gxx_include_dir}/${target_builddir}; done\n \n # By adding these files here, automake will remove them for 'make clean'\n-#CLEANFILES = ${allstamps}\n+#CLEANFILES = ${allstamps} \n \n # Stop implicit '.o' make rules from ever stomping on extensionless\n # headers, in the improbable case where some foolish, crack-addled"}, {"sha": "ee2affc3f45af137a22fc688b3228a8a63d86d5c", "filename": "libstdc++-v3/src/Makefile.am", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ec3af37b976cec2b96de29eb9e39929f0bd4412/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ec3af37b976cec2b96de29eb9e39929f0bd4412/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am?ref=7ec3af37b976cec2b96de29eb9e39929f0bd4412", "patch": "@@ -1,6 +1,6 @@\n ## Makefile for the src subdirectory of the GNU C++ Standard library.\n ##\n-## Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002\n+## Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003\n ## Free Software Foundation, Inc.\n ##\n ## This file is part of the libstdc++ version 3 distribution.\n@@ -239,13 +239,12 @@ stamp-debug:\n \tif test ! -d ${debugdir}; then \\\n \t  mkdir -p ${debugdir}; \\\n \t  (cd ${debugdir}; \\\n-\t  cp ../Makefile .; \\\n-\t  sed 's/top_builddir = ../top_builddir = ..\\/../g' \\\n-\t  < Makefile > temp.1; \\\n-\t  sed 's/all-local: build_debug/all-local:/g' < temp.1 > temp.2; \\\n-\t  sed 's/install-data-local: install_debug/install-data-local:/g' \\\n-\t  < temp.2 > temp.3; \\\n-          mv temp.3 Makefile) ; \\\n+\t  sed -e 's/top_builddir = \\.\\./top_builddir = ..\\/../' \\\n+\t      -e 's/srcdir = \\.\\./srcdir = ..\\/../' \\\n+\t      -e 's/glibcpp_basedir = \\.\\./glibcpp_basedir = ..\\/../' \\\n+\t      -e 's/all-local: build_debug/all-local:/' \\\n+\t      -e 's/install-data-local: install_debug/install-data-local:/' \\\n+\t  < ../Makefile > Makefile) ; \\\n \tfi; \\\n \techo `date` > stamp-debug; \n "}, {"sha": "a94408fbb1c050299e3fa04ccbee25d3a4b95574", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ec3af37b976cec2b96de29eb9e39929f0bd4412/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ec3af37b976cec2b96de29eb9e39929f0bd4412/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=7ec3af37b976cec2b96de29eb9e39929f0bd4412", "patch": "@@ -594,13 +594,12 @@ stamp-debug:\n \tif test ! -d ${debugdir}; then \\\n \t  mkdir -p ${debugdir}; \\\n \t  (cd ${debugdir}; \\\n-\t  cp ../Makefile .; \\\n-\t  sed 's/top_builddir = ../top_builddir = ..\\/../g' \\\n-\t  < Makefile > temp.1; \\\n-\t  sed 's/all-local: build_debug/all-local:/g' < temp.1 > temp.2; \\\n-\t  sed 's/install-data-local: install_debug/install-data-local:/g' \\\n-\t  < temp.2 > temp.3; \\\n-          mv temp.3 Makefile) ; \\\n+\t  sed -e 's/top_builddir = \\.\\./top_builddir = ..\\/../' \\\n+\t      -e 's/srcdir = \\.\\./srcdir = ..\\/../' \\\n+\t      -e 's/glibcpp_basedir = \\.\\./glibcpp_basedir = ..\\/../' \\\n+\t      -e 's/all-local: build_debug/all-local:/' \\\n+\t      -e 's/install-data-local: install_debug/install-data-local:/' \\\n+\t  < ../Makefile > Makefile) ; \\\n \tfi; \\\n \techo `date` > stamp-debug; \n "}]}