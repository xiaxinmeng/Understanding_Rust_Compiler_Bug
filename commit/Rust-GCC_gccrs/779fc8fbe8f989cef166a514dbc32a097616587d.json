{"sha": "779fc8fbe8f989cef166a514dbc32a097616587d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc5ZmM4ZmJlOGY5ODljZWYxNjZhNTE0ZGJjMzJhMDk3NjE2NTg3ZA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2015-01-17T21:08:39Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2015-01-17T21:08:39Z"}, "message": "rs6000.md (probe_stack): Delete.\n\n\t* config/rs6000/rs6000.md (probe_stack): Delete.\n\t(probe_stack_address): New.\n\nFrom-SVN: r219806", "tree": {"sha": "7a74d0fee247640030946ea82a2e9d8b60c300bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a74d0fee247640030946ea82a2e9d8b60c300bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/779fc8fbe8f989cef166a514dbc32a097616587d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/779fc8fbe8f989cef166a514dbc32a097616587d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/779fc8fbe8f989cef166a514dbc32a097616587d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/779fc8fbe8f989cef166a514dbc32a097616587d/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ffafb4f0392d2c52f1de8ae738dfa29f7afbdc3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffafb4f0392d2c52f1de8ae738dfa29f7afbdc3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffafb4f0392d2c52f1de8ae738dfa29f7afbdc3b"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "bee8ee2f0dcaa6bb515ea3656cfeb38345e98e4b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/779fc8fbe8f989cef166a514dbc32a097616587d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/779fc8fbe8f989cef166a514dbc32a097616587d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=779fc8fbe8f989cef166a514dbc32a097616587d", "patch": "@@ -1,3 +1,8 @@\n+2015-01-17  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.md (probe_stack): Delete.\n+\t(probe_stack_address): New.\n+\n 2015-01-17  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.c (rs6000_gimplify_va_arg): Use TARGET_32BIT"}, {"sha": "a55719039e3a8d28bf67d968797acbc726488a9a", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/779fc8fbe8f989cef166a514dbc32a097616587d/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/779fc8fbe8f989cef166a514dbc32a097616587d/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=779fc8fbe8f989cef166a514dbc32a097616587d", "patch": "@@ -11671,11 +11671,13 @@\n   \"\"\n   \"\")\n \n-(define_expand \"probe_stack\"\n-  [(set (match_operand 0 \"memory_operand\" \"=m\")\n-        (unspec [(const_int 0)] UNSPEC_PROBE_STACK))]\n+(define_expand \"probe_stack_address\"\n+  [(use (match_operand 0 \"address_operand\"))]\n   \"\"\n {\n+  operands[0] = gen_rtx_MEM (Pmode, operands[0]);\n+  MEM_VOLATILE_P (operands[0]) = 1;\n+\n   if (TARGET_64BIT)\n     emit_insn (gen_probe_stack_di (operands[0]));\n   else"}]}