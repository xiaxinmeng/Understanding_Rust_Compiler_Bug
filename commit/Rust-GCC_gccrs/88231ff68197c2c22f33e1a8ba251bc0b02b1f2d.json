{"sha": "88231ff68197c2c22f33e1a8ba251bc0b02b1f2d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODgyMzFmZjY4MTk3YzJjMjJmMzNlMWE4YmEyNTFiYzBiMDJiMWYyZA==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2012-05-08T15:21:50Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2012-05-08T15:21:50Z"}, "message": "re PR target/53272 (wrong condition-codes for strict-low-part destination and small-integer source)\n\n\tPR target/53272\n\t* gcc.dg/torture/pr53272-1.c, gcc.dg/torture/pr53272-2.c: New test.\n\nFrom-SVN: r187284", "tree": {"sha": "c0deb7c450a3c729140e94cf2194815a36529475", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0deb7c450a3c729140e94cf2194815a36529475"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88231ff68197c2c22f33e1a8ba251bc0b02b1f2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88231ff68197c2c22f33e1a8ba251bc0b02b1f2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88231ff68197c2c22f33e1a8ba251bc0b02b1f2d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88231ff68197c2c22f33e1a8ba251bc0b02b1f2d/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b3374f14937dbffb6a40e79200222b834ad41d02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3374f14937dbffb6a40e79200222b834ad41d02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3374f14937dbffb6a40e79200222b834ad41d02"}], "stats": {"total": 83, "additions": 83, "deletions": 0}, "files": [{"sha": "88e4cc887a0cd9e4740f994244e17cda1dcf171f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88231ff68197c2c22f33e1a8ba251bc0b02b1f2d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88231ff68197c2c22f33e1a8ba251bc0b02b1f2d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=88231ff68197c2c22f33e1a8ba251bc0b02b1f2d", "patch": "@@ -1,3 +1,8 @@\n+2012-05-08  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\tPR target/53272\n+\t* gcc.dg/torture/pr53272-1.c, gcc.dg/torture/pr53272-2.c: New test.\n+\n 2012-05-08  Richard Guenther  <rguenther@suse.de>\n \n \t* gcc.dg/fold-bitand-4.c: New testcase."}, {"sha": "a8fc91cb5b3d7f7be00fcfd47d3c5e8cbe2580de", "filename": "gcc/testsuite/gcc.dg/torture/pr53272-1.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88231ff68197c2c22f33e1a8ba251bc0b02b1f2d/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53272-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88231ff68197c2c22f33e1a8ba251bc0b02b1f2d/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53272-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53272-1.c?ref=88231ff68197c2c22f33e1a8ba251bc0b02b1f2d", "patch": "@@ -0,0 +1,39 @@\n+/* { dg-do run } */\n+/* { dg-additional-sources \"pr53272-2.c\" } */\n+struct rtc_class_ops {\n+ int (*f)(void *, unsigned int enabled);\n+};\n+\n+struct rtc_device\n+{\n+ void *owner;\n+ const struct rtc_class_ops *ops;\n+ int ops_lock;\n+};\n+\n+__attribute__ ((__noinline__, __noclone__))\n+extern int foo(void *);\n+__attribute__ ((__noinline__, __noclone__))\n+extern void foobar(void *);\n+\n+__attribute__ ((__noinline__, __noclone__))\n+int rtc_update_irq_enable(struct rtc_device *rtc, unsigned int enabled)\n+{\n+ int err;\n+ asm volatile (\"\");\n+\n+ err = foo(&rtc->ops_lock);\n+\n+ if (err)\n+  return err;\n+\n+ if (!rtc->ops)\n+  err = -19;\n+ else if (!rtc->ops->f)\n+  err = -22;\n+ else\n+  err = rtc->ops->f(rtc->owner, enabled);\n+\n+ foobar(&rtc->ops_lock);\n+ return err;\n+}"}, {"sha": "f5065a785b747daf0ce78f0a6a208f078b708e01", "filename": "gcc/testsuite/gcc.dg/torture/pr53272-2.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88231ff68197c2c22f33e1a8ba251bc0b02b1f2d/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53272-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88231ff68197c2c22f33e1a8ba251bc0b02b1f2d/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53272-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53272-2.c?ref=88231ff68197c2c22f33e1a8ba251bc0b02b1f2d", "patch": "@@ -0,0 +1,39 @@\n+__attribute__ ((__noinline__, __noclone__))\n+int foo(void *x)\n+{\n+  asm (\"\");\n+  return *(int *) x != 42;\n+}\n+\n+__attribute__ ((__noinline__, __noclone__))\n+void foobar(void *x)\n+{\n+  asm (\"\");\n+  if (foo(x))\n+    __builtin_abort();\n+}\n+\n+struct rtc_class_ops {\n+ int (*f)(void *, unsigned int enabled);\n+};\n+\n+struct rtc_device\n+{\n+ void *owner;\n+ struct rtc_class_ops *ops;\n+ int ops_lock;\n+};\n+\n+extern __attribute__ ((__noinline__, __noclone__))\n+int rtc_update_irq_enable(struct rtc_device *rtc, unsigned int);\n+\n+int main(void)\n+{\n+ struct rtc_class_ops ops = {(void *) 0};\n+  struct rtc_device dev1 = {0, &ops, 42};\n+\n+  if (rtc_update_irq_enable (&dev1, 1) != -22)\n+    __builtin_abort ();\n+\n+  __builtin_exit (0);\n+}"}]}