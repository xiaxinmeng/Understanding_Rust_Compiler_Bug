{"sha": "c6daece64782fd5f03f573b4633d1826794a9f8a", "node_id": "C_kwDOANBUbNoAKGM2ZGFlY2U2NDc4MmZkNWYwM2Y1NzNiNDYzM2QxODI2Nzk0YTlmOGE", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-02-17T14:27:52Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-02-18T08:08:07Z"}, "message": "array-values: Add location info", "tree": {"sha": "37c5647523f703f057d1f14884ff685d33958b3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37c5647523f703f057d1f14884ff685d33958b3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6daece64782fd5f03f573b4633d1826794a9f8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6daece64782fd5f03f573b4633d1826794a9f8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6daece64782fd5f03f573b4633d1826794a9f8a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6daece64782fd5f03f573b4633d1826794a9f8a/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "205a9cbf9e2c2940e6715fa69be89765af582d29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/205a9cbf9e2c2940e6715fa69be89765af582d29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/205a9cbf9e2c2940e6715fa69be89765af582d29"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "67ef92f8d3948c9573190a26652172d5f978ed66", "filename": "gcc/rust/ast/rust-expr.h", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6daece64782fd5f03f573b4633d1826794a9f8a/gcc%2Frust%2Fast%2Frust-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6daece64782fd5f03f573b4633d1826794a9f8a/gcc%2Frust%2Fast%2Frust-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-expr.h?ref=c6daece64782fd5f03f573b4633d1826794a9f8a", "patch": "@@ -953,12 +953,11 @@ class ArrayElems\n class ArrayElemsValues : public ArrayElems\n {\n   std::vector<std::unique_ptr<Expr> > values;\n-\n-  // TODO: should this store location data?\n+  Location locus;\n \n public:\n-  ArrayElemsValues (std::vector<std::unique_ptr<Expr> > elems)\n-    : ArrayElems (), values (std::move (elems))\n+  ArrayElemsValues (std::vector<std::unique_ptr<Expr> > elems, Location locus)\n+    : ArrayElems (), values (std::move (elems)), locus (locus)\n   {}\n \n   // copy constructor with vector clone"}, {"sha": "c4a508062a56d0f8773b3945ab8811a1bc0848be", "filename": "gcc/rust/parse/rust-parse-impl.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6daece64782fd5f03f573b4633d1826794a9f8a/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6daece64782fd5f03f573b4633d1826794a9f8a/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse-impl.h?ref=c6daece64782fd5f03f573b4633d1826794a9f8a", "patch": "@@ -8739,7 +8739,7 @@ Parser<ManagedTokenSource>::parse_array_expr (AST::AttrVec outer_attrs,\n \n       std::vector<std::unique_ptr<AST::Expr>> exprs;\n       auto array_elems\n-\t= Rust::make_unique<AST::ArrayElemsValues> (std::move (exprs));\n+\t= Rust::make_unique<AST::ArrayElemsValues> (std::move (exprs), locus);\n       return Rust::make_unique<AST::ArrayExpr> (std::move (array_elems),\n \t\t\t\t\t\tstd::move (inner_attrs),\n \t\t\t\t\t\tstd::move (outer_attrs), locus);\n@@ -8799,7 +8799,7 @@ Parser<ManagedTokenSource>::parse_array_expr (AST::AttrVec outer_attrs,\n \t  skip_token (RIGHT_SQUARE);\n \n \t  std::unique_ptr<AST::ArrayElemsValues> array_elems (\n-\t    new AST::ArrayElemsValues (std::move (exprs)));\n+\t    new AST::ArrayElemsValues (std::move (exprs), locus));\n \t  return std::unique_ptr<AST::ArrayExpr> (\n \t    new AST::ArrayExpr (std::move (array_elems),\n \t\t\t\tstd::move (inner_attrs),\n@@ -8841,7 +8841,7 @@ Parser<ManagedTokenSource>::parse_array_expr (AST::AttrVec outer_attrs,\n \t  exprs.shrink_to_fit ();\n \n \t  std::unique_ptr<AST::ArrayElemsValues> array_elems (\n-\t    new AST::ArrayElemsValues (std::move (exprs)));\n+\t    new AST::ArrayElemsValues (std::move (exprs), locus));\n \t  return std::unique_ptr<AST::ArrayExpr> (\n \t    new AST::ArrayExpr (std::move (array_elems),\n \t\t\t\tstd::move (inner_attrs),"}]}