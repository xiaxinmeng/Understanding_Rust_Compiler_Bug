{"sha": "9651cba4360ef7fbdff4f64faf9f650e1246a5c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY1MWNiYTQzNjBlZjdmYmRmZjRmNjRmYWY5ZjY1MGUxMjQ2YTVjMQ==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-10-26T00:16:21Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-10-26T00:16:21Z"}, "message": "Daily bump.", "tree": {"sha": "17bd88e9e6080593fddafc7ff509481099931327", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17bd88e9e6080593fddafc7ff509481099931327"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9651cba4360ef7fbdff4f64faf9f650e1246a5c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9651cba4360ef7fbdff4f64faf9f650e1246a5c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9651cba4360ef7fbdff4f64faf9f650e1246a5c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9651cba4360ef7fbdff4f64faf9f650e1246a5c1/comments", "author": null, "committer": null, "parents": [{"sha": "308e40331f9d2820f8286769b5fc764671187364", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/308e40331f9d2820f8286769b5fc764671187364", "html_url": "https://github.com/Rust-GCC/gccrs/commit/308e40331f9d2820f8286769b5fc764671187364"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "8f5453ef1e3c55d9004b32cef7ef7f00257c3ff2", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9651cba4360ef7fbdff4f64faf9f650e1246a5c1/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9651cba4360ef7fbdff4f64faf9f650e1246a5c1/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=9651cba4360ef7fbdff4f64faf9f650e1246a5c1", "patch": "@@ -1 +1 @@\n-20201025\n+20201026"}, {"sha": "0c8a5007a77542e98eea6f7f8ba4f1c8c52513ab", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9651cba4360ef7fbdff4f64faf9f650e1246a5c1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9651cba4360ef7fbdff4f64faf9f650e1246a5c1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9651cba4360ef7fbdff4f64faf9f650e1246a5c1", "patch": "@@ -1,3 +1,8 @@\n+2020-10-25  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* Makefile.rtl: Add GNATRTL_128BIT_PAIRS/OBJS for 64bit\n+\tPowerPC Darwin cases.\n+\n 2020-10-23  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* adaint.c: On Darwin platforms, define st_atim to"}, {"sha": "4890f4233b58cfb560e245919a26ed6478ac612f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9651cba4360ef7fbdff4f64faf9f650e1246a5c1/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9651cba4360ef7fbdff4f64faf9f650e1246a5c1/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=9651cba4360ef7fbdff4f64faf9f650e1246a5c1", "patch": "@@ -1,3 +1,25 @@\n+2020-10-25  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/97454\n+\t* gfortran.h (gfc_symbol): Add pass_as_value flag.\n+\t(gfc_copy_formal_args_intr): Add optional argument\n+\tcopy_type.\n+\t(gfc_get_intrinsic_function_symbol): Add prototype.\n+\t(gfc_find_intrinsic_symbol): Add prototype.\n+\t* intrinsic.c (gfc_get_intrinsic_function_symbol): New function.\n+\t(gfc_find_intrinsic_symbol): New function.\n+\t* symbol.c (gfc_copy_formal_args_intr): Add argument. Handle case\n+\twhere the type needs to be copied from the actual argument.\n+\t* trans-intrinsic.c (remove_empty_actual_arguments): New function.\n+\t(specific_intrinsic_symbol): New function.\n+\t(gfc_conv_intrinsic_funcall): Use it.\n+\t(strip_kind_from_actual): Adjust so that the expression pointer\n+\tis set to NULL.\n+\t(gfc_conv_intrinsic_minmaxloc): Likewise.\n+\t(gfc_conv_intrinsic_minmaxval): Adjust removal of dim.\n+\t* trans-types.c (gfc_sym_type): If sym->pass_as_value is set, do\n+\tnot pass by reference.\n+\n 2020-10-22  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* gfortran.h (enum gfc_omp_memorder): Add."}]}