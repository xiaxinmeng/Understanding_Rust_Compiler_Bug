{"sha": "ca78482dcdf0dc76fca1334673cd43f7108d8338", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2E3ODQ4MmRjZGYwZGM3NmZjYTEzMzQ2NzNjZDQzZjcxMDhkODMzOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-09-10T17:28:59Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-09-10T17:28:59Z"}, "message": "re PR ipa/61659 (Extra undefined symbol because of devirtualization)\n\n\tPR c++/61659\n\t* decl.c (grokfndecl): Don't set DECL_COMDAT on static inlines.\n\t(duplicate_decls, start_decl): Likewise.\n\t* pt.c (check_explicit_specialization): Likewise.\n\t(push_template_decl_real): Or static templates.\n\nFrom-SVN: r215134", "tree": {"sha": "b5d3bab44fd34ec4fd6249130ae736e4d7dd2b75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5d3bab44fd34ec4fd6249130ae736e4d7dd2b75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca78482dcdf0dc76fca1334673cd43f7108d8338", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca78482dcdf0dc76fca1334673cd43f7108d8338", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca78482dcdf0dc76fca1334673cd43f7108d8338", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca78482dcdf0dc76fca1334673cd43f7108d8338/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1c22488e18f254dde889e01c72f250be41b9227e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c22488e18f254dde889e01c72f250be41b9227e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c22488e18f254dde889e01c72f250be41b9227e"}], "stats": {"total": 42, "additions": 38, "deletions": 4}, "files": [{"sha": "565b940f0be9e544f3ad239a8c5144221536b244", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca78482dcdf0dc76fca1334673cd43f7108d8338/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca78482dcdf0dc76fca1334673cd43f7108d8338/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ca78482dcdf0dc76fca1334673cd43f7108d8338", "patch": "@@ -1,3 +1,11 @@\n+2014-09-10  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/61659\n+\t* decl.c (grokfndecl): Don't set DECL_COMDAT on static inlines.\n+\t(duplicate_decls, start_decl): Likewise.\n+\t* pt.c (check_explicit_specialization): Likewise.\n+\t(push_template_decl_real): Or static templates.\n+\n 2014-09-08  Jason Merrill  <jason@redhat.com>\n \n \t* typeck.c (build_class_member_access_expr): Move"}, {"sha": "6e195bb803d5859d53743fca705e4e7143a998ef", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca78482dcdf0dc76fca1334673cd43f7108d8338/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca78482dcdf0dc76fca1334673cd43f7108d8338/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=ca78482dcdf0dc76fca1334673cd43f7108d8338", "patch": "@@ -2215,7 +2215,8 @@ duplicate_decls (tree newdecl, tree olddecl, bool newdecl_is_friend)\n \t\t      olddecl);\n \n \t  SET_DECL_TEMPLATE_SPECIALIZATION (olddecl);\n-\t  DECL_COMDAT (newdecl) = DECL_DECLARED_INLINE_P (newdecl);\n+\t  DECL_COMDAT (newdecl) = (TREE_PUBLIC (newdecl)\n+\t\t\t\t   && DECL_DECLARED_INLINE_P (newdecl));\n \n \t  /* Don't propagate visibility from the template to the\n \t     specialization here.  We'll do that in determine_visibility if\n@@ -4718,7 +4719,8 @@ start_decl (const cp_declarator *declarator,\n \t{\n \t  SET_DECL_TEMPLATE_SPECIALIZATION (decl);\n \t  if (TREE_CODE (decl) == FUNCTION_DECL)\n-\t    DECL_COMDAT (decl) = DECL_DECLARED_INLINE_P (decl);\n+\t    DECL_COMDAT (decl) = (TREE_PUBLIC (decl)\n+\t\t\t\t  && DECL_DECLARED_INLINE_P (decl));\n \t  else\n \t    DECL_COMDAT (decl) = false;\n \n@@ -7699,7 +7701,8 @@ grokfndecl (tree ctype,\n   if (inlinep)\n     {\n       DECL_DECLARED_INLINE_P (decl) = 1;\n-      DECL_COMDAT (decl) = 1;\n+      if (publicp)\n+\tDECL_COMDAT (decl) = 1;\n     }\n   if (inlinep & 2)\n     DECL_DECLARED_CONSTEXPR_P (decl) = true;"}, {"sha": "3c9317883eeebd9f6d8b66b6624b95575cd206db", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca78482dcdf0dc76fca1334673cd43f7108d8338/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca78482dcdf0dc76fca1334673cd43f7108d8338/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=ca78482dcdf0dc76fca1334673cd43f7108d8338", "patch": "@@ -2813,7 +2813,8 @@ check_explicit_specialization (tree declarator,\n \t    SET_DECL_IMPLICIT_INSTANTIATION (decl);\n \t  else if (TREE_CODE (decl) == FUNCTION_DECL)\n \t    /* A specialization is not necessarily COMDAT.  */\n-\t    DECL_COMDAT (decl) = DECL_DECLARED_INLINE_P (decl);\n+\t    DECL_COMDAT (decl) = (TREE_PUBLIC (decl)\n+\t\t\t\t  && DECL_DECLARED_INLINE_P (decl));\n \t  else if (TREE_CODE (decl) == VAR_DECL)\n \t    DECL_COMDAT (decl) = false;\n \n@@ -5059,6 +5060,7 @@ template arguments to %qD do not match original template %qD\",\n \n   if (flag_implicit_templates\n       && !is_friend\n+      && TREE_PUBLIC (decl)\n       && VAR_OR_FUNCTION_DECL_P (decl))\n     /* Set DECL_COMDAT on template instantiations; if we force\n        them to be emitted by explicit instantiation or -frepo,"}, {"sha": "663643f3e9613c5943e47dfa6a18809570092ead", "filename": "gcc/testsuite/g++.dg/abi/no-weak1.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca78482dcdf0dc76fca1334673cd43f7108d8338/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fno-weak1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca78482dcdf0dc76fca1334673cd43f7108d8338/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fno-weak1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fno-weak1.C?ref=ca78482dcdf0dc76fca1334673cd43f7108d8338", "patch": "@@ -0,0 +1,21 @@\n+// { dg-options \"-fno-weak\" }\n+// { dg-final { scan-assembler \"local\\[ \\t\\]*_ZZL1fvE1i\" { target x86_64-*-*gnu } } }\n+// { dg-final { scan-assembler \"local\\[ \\t\\]*_ZZ1gIiEvvE1i\" { target x86_64-*-*gnu } } }\n+\n+static inline void f()\n+{\n+  static int i;\n+  ++i;\n+};\n+\n+template <class T> static void g()\n+{\n+  static int i;\n+  ++i;\n+}\n+\n+int main()\n+{\n+  f();\n+  g<int>();\n+}"}]}