{"sha": "0d8290959ecf2c5f1dd062e57782b5e91be0f8f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ4MjkwOTU5ZWNmMmM1ZjFkZDA2MmU1Nzc4MmI1ZTkxYmUwZjhmNg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-11-19T08:06:50Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-11-19T08:57:38Z"}, "message": "tree-optimization/97897 - complex lowering on abnormal edges\n\nThis fixes complex lowering to not put constants into abnormal\nedge PHI values by making sure abnormally used SSA names are\nVARYING in its propagation lattice.\n\n2020-11-19  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/97897\n\t* tree-complex.c (complex_propagate::visit_stmt): Make sure\n\tabnormally used SSA names are VARYING.\n\t(complex_propagate::visit_phi): Likewise.\n\t* tree-ssa.c (verify_phi_args): Verify PHI arguments on abnormal\n\tedges are SSA names.\n\n\t* gcc.dg/pr97897.c: New testcase.", "tree": {"sha": "be1ae52e391d9cd7ac8dc246f4bfc0f5da8e81ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be1ae52e391d9cd7ac8dc246f4bfc0f5da8e81ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d8290959ecf2c5f1dd062e57782b5e91be0f8f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d8290959ecf2c5f1dd062e57782b5e91be0f8f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d8290959ecf2c5f1dd062e57782b5e91be0f8f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d8290959ecf2c5f1dd062e57782b5e91be0f8f6/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50134189a434e638861f8bf27d5caab9622811c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50134189a434e638861f8bf27d5caab9622811c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50134189a434e638861f8bf27d5caab9622811c8"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "775f34ca767f4cf520fd4c556feda4321beaf7b0", "filename": "gcc/testsuite/gcc.dg/pr97897.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d8290959ecf2c5f1dd062e57782b5e91be0f8f6/gcc%2Ftestsuite%2Fgcc.dg%2Fpr97897.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d8290959ecf2c5f1dd062e57782b5e91be0f8f6/gcc%2Ftestsuite%2Fgcc.dg%2Fpr97897.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr97897.c?ref=0d8290959ecf2c5f1dd062e57782b5e91be0f8f6", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+\n+void h ();\n+void f () __attribute__ ((returns_twice));\n+void g (_Complex int a)\n+{\n+  f ();\n+  if (a != 0)\n+  {\n+    a = 0;\n+    h ();\n+  }\n+}"}, {"sha": "1cfb3e8d743f8eafc188fd08d08d5a548bc23b8a", "filename": "gcc/tree-complex.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d8290959ecf2c5f1dd062e57782b5e91be0f8f6/gcc%2Ftree-complex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d8290959ecf2c5f1dd062e57782b5e91be0f8f6/gcc%2Ftree-complex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-complex.c?ref=0d8290959ecf2c5f1dd062e57782b5e91be0f8f6", "patch": "@@ -318,7 +318,7 @@ complex_propagate::visit_stmt (gimple *stmt, edge *taken_edge_p ATTRIBUTE_UNUSED\n \n   lhs = gimple_get_lhs (stmt);\n   /* Skip anything but GIMPLE_ASSIGN and GIMPLE_CALL with a lhs.  */\n-  if (!lhs)\n+  if (!lhs || SSA_NAME_OCCURS_IN_ABNORMAL_PHI (lhs))\n     return SSA_PROP_VARYING;\n \n   /* These conditions should be satisfied due to the initial filter\n@@ -417,6 +417,9 @@ complex_propagate::visit_phi (gphi *phi)\n      set up in init_dont_simulate_again.  */\n   gcc_assert (TREE_CODE (TREE_TYPE (lhs)) == COMPLEX_TYPE);\n \n+  if (SSA_NAME_OCCURS_IN_ABNORMAL_PHI (lhs))\n+    return SSA_PROP_VARYING;\n+\n   /* We've set up the lattice values such that IOR neatly models PHI meet.  */\n   new_l = UNINITIALIZED;\n   for (i = gimple_phi_num_args (phi) - 1; i >= 0; --i)"}, {"sha": "b44361f824426f131d195b8d4de41741e64384dc", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d8290959ecf2c5f1dd062e57782b5e91be0f8f6/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d8290959ecf2c5f1dd062e57782b5e91be0f8f6/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=0d8290959ecf2c5f1dd062e57782b5e91be0f8f6", "patch": "@@ -987,6 +987,12 @@ verify_phi_args (gphi *phi, basic_block bb, basic_block *definition_block)\n \t  err = true;\n \t}\n \n+      if ((e->flags & EDGE_ABNORMAL) && TREE_CODE (op) != SSA_NAME)\n+\t{\n+\t  error (\"PHI argument on abnormal edge is not SSA_NAME\");\n+\t  err = true;\n+\t}\n+\n       if (TREE_CODE (op) == SSA_NAME)\n \t{\n \t  err = verify_ssa_name (op, virtual_operand_p (gimple_phi_result (phi)));"}]}