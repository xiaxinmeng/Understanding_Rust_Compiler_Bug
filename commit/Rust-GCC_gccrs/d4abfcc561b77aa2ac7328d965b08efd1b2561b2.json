{"sha": "d4abfcc561b77aa2ac7328d965b08efd1b2561b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDRhYmZjYzU2MWI3N2FhMmFjNzMyOGQ5NjViMDhlZmQxYjI1NjFiMg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-01-29T11:21:19Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-01-29T11:21:19Z"}, "message": "re PR middle-end/69547 (no-op array initializer emits an empty loop)\n\n2016-01-29  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/69547\n\t* tree-ssa-dce.c (mark_aliased_reaching_defs_necessary_1):\n\tDo not mark clobbers necessary.\n\t(mark_all_reaching_defs_necessary_1): Likewise.\n\n\t* g++.dg/tree-ssa/pr69547.C: New testcase.\n\nFrom-SVN: r232976", "tree": {"sha": "d41c277b595780348ce12b51329c77c3442d46d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d41c277b595780348ce12b51329c77c3442d46d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4abfcc561b77aa2ac7328d965b08efd1b2561b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4abfcc561b77aa2ac7328d965b08efd1b2561b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4abfcc561b77aa2ac7328d965b08efd1b2561b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4abfcc561b77aa2ac7328d965b08efd1b2561b2/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "16b77b321eb72c5e2e1ec3628c035df80bef8534", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16b77b321eb72c5e2e1ec3628c035df80bef8534", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16b77b321eb72c5e2e1ec3628c035df80bef8534"}], "stats": {"total": 33, "additions": 31, "deletions": 2}, "files": [{"sha": "3f5972c6664cc1f78d084fe4f5456f478dfd6fde", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4abfcc561b77aa2ac7328d965b08efd1b2561b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4abfcc561b77aa2ac7328d965b08efd1b2561b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d4abfcc561b77aa2ac7328d965b08efd1b2561b2", "patch": "@@ -1,3 +1,10 @@\n+2016-01-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/69547\n+\t* tree-ssa-dce.c (mark_aliased_reaching_defs_necessary_1):\n+\tDo not mark clobbers necessary.\n+\t(mark_all_reaching_defs_necessary_1): Likewise.\n+\n 2016-01-29  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n \n \t* config/s390/s390-c.c (s390_resolve_overloaded_builtin): Format"}, {"sha": "6b2ddbd961bc196a968fc1dd35a6c77cddfbd242", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4abfcc561b77aa2ac7328d965b08efd1b2561b2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4abfcc561b77aa2ac7328d965b08efd1b2561b2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d4abfcc561b77aa2ac7328d965b08efd1b2561b2", "patch": "@@ -1,3 +1,8 @@\n+2016-01-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/69547\n+\t* g++.dg/tree-ssa/pr69547.C: New testcase.\n+\n 2016-01-29  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/66869"}, {"sha": "30452340a5c261103b3e9c7b05ab27a134ce4354", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr69547.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4abfcc561b77aa2ac7328d965b08efd1b2561b2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr69547.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4abfcc561b77aa2ac7328d965b08efd1b2561b2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr69547.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr69547.C?ref=d4abfcc561b77aa2ac7328d965b08efd1b2561b2", "patch": "@@ -0,0 +1,15 @@\n+// { dg-do compile }\n+// { dg-options \"-O2 -fdump-tree-cddce1\" }\n+\n+struct A { A () { } };\n+\n+void foo (void*, int);\n+\n+void bar ()\n+{\n+  enum { N = 64 };\n+  A a [N];\n+  foo (&a, N);\n+}\n+\n+// { dg-final { scan-tree-dump-not \"if\" \"cddce1\" } }"}, {"sha": "75aaee97123d3677454c10bab328bd57d50e2b38", "filename": "gcc/tree-ssa-dce.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4abfcc561b77aa2ac7328d965b08efd1b2561b2/gcc%2Ftree-ssa-dce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4abfcc561b77aa2ac7328d965b08efd1b2561b2/gcc%2Ftree-ssa-dce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dce.c?ref=d4abfcc561b77aa2ac7328d965b08efd1b2561b2", "patch": "@@ -462,7 +462,8 @@ mark_aliased_reaching_defs_necessary_1 (ao_ref *ref, tree vdef, void *data)\n   gimple *def_stmt = SSA_NAME_DEF_STMT (vdef);\n \n   /* All stmts we visit are necessary.  */\n-  mark_operand_necessary (vdef);\n+  if (! gimple_clobber_p (def_stmt))\n+    mark_operand_necessary (vdef);\n \n   /* If the stmt lhs kills ref, then we can stop walking.  */\n   if (gimple_has_lhs (def_stmt)\n@@ -584,7 +585,8 @@ mark_all_reaching_defs_necessary_1 (ao_ref *ref ATTRIBUTE_UNUSED,\n \t  }\n     }\n \n-  mark_operand_necessary (vdef);\n+  if (! gimple_clobber_p (def_stmt))\n+    mark_operand_necessary (vdef);\n \n   return false;\n }"}]}