{"sha": "f6fe771af1d2a5ba617c75cff4fba0e3decf925e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZmZTc3MWFmMWQyYTViYTYxN2M3NWNmZjRmYmEwZTNkZWNmOTI1ZQ==", "commit": {"author": {"name": "Renlin Li", "email": "renlin.li@arm.com", "date": "2013-10-02T10:28:54Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2013-10-02T10:28:54Z"}, "message": "aarch64.c (aarch64_expand_prologue): Use plus_constant.\n\n2013-10-02  Renlin Li  <renlin.li@arm.com>\n\n\t* config/aarch64/aarch64.c (aarch64_expand_prologue): Use plus_constant.\n\t(aarch64_expand_epilogue): Likewise.\n\nFrom-SVN: r203108", "tree": {"sha": "c18be9d3e8780a398ea39a8262236e081f3c9bbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c18be9d3e8780a398ea39a8262236e081f3c9bbe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6fe771af1d2a5ba617c75cff4fba0e3decf925e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6fe771af1d2a5ba617c75cff4fba0e3decf925e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6fe771af1d2a5ba617c75cff4fba0e3decf925e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6fe771af1d2a5ba617c75cff4fba0e3decf925e/comments", "author": null, "committer": null, "parents": [{"sha": "0916f876074b952b3003300a273baa14e6dab8af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0916f876074b952b3003300a273baa14e6dab8af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0916f876074b952b3003300a273baa14e6dab8af"}], "stats": {"total": 31, "additions": 18, "deletions": 13}, "files": [{"sha": "70e8ba93071914ca94cff6dcbf73b7e870fa845d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6fe771af1d2a5ba617c75cff4fba0e3decf925e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6fe771af1d2a5ba617c75cff4fba0e3decf925e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f6fe771af1d2a5ba617c75cff4fba0e3decf925e", "patch": "@@ -1,3 +1,8 @@\n+2013-10-02  Renlin Li  <renlin.li@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_expand_prologue): Use plus_constant.\n+\t(aarch64_expand_epilogue): Likewise.\n+\n 2013-10-02  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \t    Yufeng Zhang  <yufeng.zhang@arm.com>\n "}, {"sha": "ff61cd4ab4ba2fc214fce56b70737bc445b71359", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6fe771af1d2a5ba617c75cff4fba0e3decf925e/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6fe771af1d2a5ba617c75cff4fba0e3decf925e/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=f6fe771af1d2a5ba617c75cff4fba0e3decf925e", "patch": "@@ -2066,9 +2066,9 @@ aarch64_expand_prologue (void)\n \t  emit_insn (gen_add2_insn (stack_pointer_rtx, op0));\n \t  aarch64_set_frame_expr (gen_rtx_SET\n \t\t\t\t  (Pmode, stack_pointer_rtx,\n-\t\t\t\t   gen_rtx_PLUS (Pmode,\n-\t\t\t\t\t\t stack_pointer_rtx,\n-\t\t\t\t\t\t GEN_INT (-frame_size))));\n+\t\t\t\t   plus_constant (Pmode,\n+\t\t\t\t\t\t  stack_pointer_rtx,\n+\t\t\t\t\t\t  -frame_size)));\n \t}\n       else if (frame_size > 0)\n \t{\n@@ -2152,9 +2152,9 @@ aarch64_expand_prologue (void)\n \t\t\t\t\t   GEN_INT (fp_offset)));\n \t  aarch64_set_frame_expr (gen_rtx_SET\n \t\t\t\t  (Pmode, hard_frame_pointer_rtx,\n-\t\t\t\t   gen_rtx_PLUS (Pmode,\n-\t\t\t\t\t\t stack_pointer_rtx,\n-\t\t\t\t\t\t GEN_INT (fp_offset))));\n+\t\t\t\t   plus_constant (Pmode,\n+\t\t\t\t\t\t  stack_pointer_rtx,\n+\t\t\t\t\t\t  fp_offset)));\n \t  RTX_FRAME_RELATED_P (insn) = 1;\n \t  insn = emit_insn (gen_stack_tie (stack_pointer_rtx,\n \t\t\t\t\t   hard_frame_pointer_rtx));\n@@ -2350,9 +2350,9 @@ aarch64_expand_epilogue (bool for_sibcall)\n \t  emit_insn (gen_add2_insn (stack_pointer_rtx, op0));\n \t  aarch64_set_frame_expr (gen_rtx_SET\n \t\t\t\t  (Pmode, stack_pointer_rtx,\n-\t\t\t\t   gen_rtx_PLUS (Pmode,\n-\t\t\t\t\t\t stack_pointer_rtx,\n-\t\t\t\t\t\t GEN_INT (frame_size))));\n+\t\t\t\t   plus_constant (Pmode,\n+\t\t\t\t\t\t  stack_pointer_rtx,\n+\t\t\t\t\t\t  frame_size)));\n \t}\n       else if (frame_size > 0)\n \t{\n@@ -2374,10 +2374,10 @@ aarch64_expand_epilogue (bool for_sibcall)\n \t    }\n \t}\n \n-      aarch64_set_frame_expr (gen_rtx_SET (Pmode, stack_pointer_rtx,\n-\t\t\t\t\t   gen_rtx_PLUS (Pmode,\n-\t\t\t\t\t\t\t stack_pointer_rtx,\n-\t\t\t\t\t\t\t GEN_INT (offset))));\n+        aarch64_set_frame_expr (gen_rtx_SET (Pmode, stack_pointer_rtx,\n+\t\t\t\t\t     plus_constant (Pmode,\n+\t\t\t\t\t\t\t    stack_pointer_rtx,\n+\t\t\t\t\t\t\t    offset)));\n     }\n \n   emit_use (gen_rtx_REG (DImode, LR_REGNUM));"}]}