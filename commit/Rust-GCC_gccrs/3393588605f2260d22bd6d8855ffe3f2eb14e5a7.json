{"sha": "3393588605f2260d22bd6d8855ffe3f2eb14e5a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM5MzU4ODYwNWYyMjYwZDIyYmQ2ZDg4NTVmZmUzZjJlYjE0ZTVhNw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-05-27T13:57:03Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-05-27T13:57:03Z"}, "message": "(svn add was forgotten)\n2007-05-27  Tobias Burnus  <burnus@net-b.de>\n\n        PR middle-end/32083\n        * gfortran.dg/transfer_simplify_3.f90: New.\n\nFrom-SVN: r125110", "tree": {"sha": "ca6746b0a397ff7674d84711fe39f2d08543ae4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca6746b0a397ff7674d84711fe39f2d08543ae4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3393588605f2260d22bd6d8855ffe3f2eb14e5a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3393588605f2260d22bd6d8855ffe3f2eb14e5a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3393588605f2260d22bd6d8855ffe3f2eb14e5a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3393588605f2260d22bd6d8855ffe3f2eb14e5a7/comments", "author": null, "committer": null, "parents": [{"sha": "fe67caf6297762ca40524e1efe2783c62585d811", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe67caf6297762ca40524e1efe2783c62585d811", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe67caf6297762ca40524e1efe2783c62585d811"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "43ca1972628f622b6f5b3e75adf901ecab185c65", "filename": "gcc/testsuite/gfortran.dg/transfer_simplify_3.f90", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3393588605f2260d22bd6d8855ffe3f2eb14e5a7/gcc%2Ftestsuite%2Fgfortran.dg%2Ftransfer_simplify_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3393588605f2260d22bd6d8855ffe3f2eb14e5a7/gcc%2Ftestsuite%2Fgfortran.dg%2Ftransfer_simplify_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftransfer_simplify_3.f90?ref=3393588605f2260d22bd6d8855ffe3f2eb14e5a7", "patch": "@@ -0,0 +1,53 @@\n+! { dg-do run }\n+! { dg-options \"-fno-range-check\" }\n+! PR fortran/32083\n+!\n+! Test transfers of +Inf and -Inf\n+! Testcase contributed by Jos de Kloe <kloedej@knmi.nl>\n+!\n+\n+PROGRAM TestInfinite\n+  IMPLICIT NONE\n+  integer, parameter :: i8_ = Selected_Int_Kind(18)  ! = integer*8\n+  integer, parameter :: r8_ = Selected_Real_Kind(15,307)  ! = real*8\n+\n+  integer(i8_), parameter :: bit_pattern_PosInf_i8_p = 9218868437227405312_i8_\n+  integer(i8_), parameter :: bit_pattern_NegInf_i8_p = -4503599627370496_i8_\n+\n+  integer(i8_) :: bit_pattern_PosInf_i8 = 9218868437227405312_i8_\n+  integer(i8_) :: bit_pattern_NegInf_i8 = -4503599627370496_i8_\n+\n+  integer(i8_) :: bit_pattern_PosInf_i8_hex\n+  integer(i8_) :: bit_pattern_NegInf_i8_hex\n+\n+  integer(i8_) :: i\n+  real(r8_)    :: r\n+\n+  data bit_pattern_PosInf_i8_hex /z'7FF0000000000000'/\n+  !data bit_pattern_NegInf_i8_hex /z'FFF0000000000000'/\n+  ! not portable, replaced by:\n+  bit_pattern_NegInf_i8_hex = ibset(bit_pattern_PosInf_i8_hex,63)\n+\n+  if (bit_pattern_NegInf_i8_hex /= bit_pattern_NegInf_i8) call abort()\n+  if (bit_pattern_PosInf_i8_hex /= bit_pattern_PosInf_i8) call abort()\n+\n+  r = transfer(bit_pattern_PosInf_i8,r)\n+  if (r /= 1.0_r8_/0.0_r8_) call abort()\n+  i = transfer(r,i)\n+  if (bit_pattern_PosInf_i8 /= i) call abort()  \n+\n+  r = transfer(bit_pattern_NegInf_i8,r)\n+  if (r /= -1.0_r8_/0.0_r8_) call abort()\n+  i = transfer(r,i)\n+  if (bit_pattern_NegInf_i8 /= i) call abort()\n+\n+  r = transfer(bit_pattern_PosInf_i8_p,r)\n+  if (r /= 1.0_r8_/0.0_r8_) call abort()\n+  i = transfer(r,i)\n+  if (bit_pattern_PosInf_i8_p /= i) call abort()\n+\n+  r = transfer(bit_pattern_NegInf_i8_p,r)\n+  if (r /= -1.0_r8_/0.0_r8_) call abort()\n+  i = transfer(r,i)\n+  if (bit_pattern_NegInf_i8_p /= i) call abort()\n+END PROGRAM TestInfinite"}]}