{"sha": "702ada3d9474db60c7447412f63f4247963e6357", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzAyYWRhM2Q5NDc0ZGI2MGM3NDQ3NDEyZjYzZjQyNDc5NjNlNjM1Nw==", "commit": {"author": {"name": "Douglas B Rupp", "email": "rupp@gnat.com", "date": "2002-08-15T19:59:29Z"}, "committer": {"name": "Douglas Rupp", "email": "rupp@gcc.gnu.org", "date": "2002-08-15T19:59:29Z"}, "message": "dbxout.c (dbx_debug_hooks): Update end_prologue, end_epilogue.\n\n\t* dbxout.c (dbx_debug_hooks): Update end_prologue, end_epilogue.\n\t(xcoff_debug_hooks): Update end_prologue.\n\t* debug.c (do_nothing_debug_hooks): Update end_prologue, end_epilogue.\n\t* debug.h (end_prologue): Add file arg.\n\t(end_epilogue): Add line and file args.\n\t(dwarf2out_end_epilogue): Add line and file args.\n\t(vmsdbgout_after_prologue): Remove.\n\t* dwarf2out.c (dwarf2out_end_epilogue): Add line and file args.\n\t(dwarf2_debug_hooks): Update end_prologue.\n\t* dwarfout.c (dwarfout_end_epilogue): Add line and file args.\n\t(dwarfout_end_prologue): Add file arg.\n\t* final.c (vmsdbgout_after_prologue): Remove\n\t(final_end_function): Update end_epilogue call.\n\t(final_scan_insn): Update end_prologue call.\n\t* sdbout.c (sdbout_end_epilogue): Add line and file args.\n\t(sdbout_end_prologue): Add file arg.\n\t(sdb_debug_hooks): Update end_prologue.\n\t(sdb_begin_prologue): Update sdbout_end_prologue call.\n\t* vmsdbgout.c (vmsdbg_debug_hooks): Add vmsdbgout_end_prologue,\n\tvmsdbgout_end_function.\n\t(vmsdbgout_end_prologue): New function renamed from\n\tvmsdbgout_after_prologue. Call vmsdbgout_source_line.\n\t(vmsdbgout_end_function): New function.\n\t(vmsdbgout_end_epilogue): Add line and file args. Call\n\tvmsdbgout_source_line.\n\t(write_pclines): Write only valid line numbers.\n\t(write_srccorr): Don't write source correlation records if 0 lines.\n\t* xcoffout.c (xcoffout_end_epilogue): Add line and file args.\n\nFrom-SVN: r56356", "tree": {"sha": "bdbae6da52e6f6fb59f194e9c2ee1f9c94af5c94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bdbae6da52e6f6fb59f194e9c2ee1f9c94af5c94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/702ada3d9474db60c7447412f63f4247963e6357", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/702ada3d9474db60c7447412f63f4247963e6357", "html_url": "https://github.com/Rust-GCC/gccrs/commit/702ada3d9474db60c7447412f63f4247963e6357", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/702ada3d9474db60c7447412f63f4247963e6357/comments", "author": null, "committer": null, "parents": [{"sha": "cb94b1559a2bad9dafd7e117127604d6076973b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb94b1559a2bad9dafd7e117127604d6076973b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb94b1559a2bad9dafd7e117127604d6076973b1"}], "stats": {"total": 245, "additions": 152, "deletions": 93}, "files": [{"sha": "7d618c39a5fda16a689be5ed155d2a680bc46e2e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/702ada3d9474db60c7447412f63f4247963e6357/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/702ada3d9474db60c7447412f63f4247963e6357/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=702ada3d9474db60c7447412f63f4247963e6357", "patch": "@@ -1,3 +1,34 @@\n+2002-08-15  Douglas B Rupp  <rupp@gnat.com>\n+\n+\t* dbxout.c (dbx_debug_hooks): Update end_prologue, end_epilogue.\n+\t(xcoff_debug_hooks): Update end_prologue.\n+\t* debug.c (do_nothing_debug_hooks): Update end_prologue, end_epilogue.\n+\t* debug.h (end_prologue): Add file arg.\n+\t(end_epilogue): Add line and file args.\n+\t(dwarf2out_end_epilogue): Add line and file args.\n+\t(vmsdbgout_after_prologue): Remove.\n+\t* dwarf2out.c (dwarf2out_end_epilogue): Add line and file args.\n+\t(dwarf2_debug_hooks): Update end_prologue.\n+\t* dwarfout.c (dwarfout_end_epilogue): Add line and file args.\n+\t(dwarfout_end_prologue): Add file arg.\n+\t* final.c (vmsdbgout_after_prologue): Remove\n+\t(final_end_function): Update end_epilogue call.\n+\t(final_scan_insn): Update end_prologue call.\n+\t* sdbout.c (sdbout_end_epilogue): Add line and file args.\n+\t(sdbout_end_prologue): Add file arg.\n+\t(sdb_debug_hooks): Update end_prologue.\n+\t(sdb_begin_prologue): Update sdbout_end_prologue call.\n+\t* vmsdbgout.c (vmsdbg_debug_hooks): Add vmsdbgout_end_prologue,\n+\tvmsdbgout_end_function.\n+\t(vmsdbgout_end_prologue): New function renamed from\n+\tvmsdbgout_after_prologue. Call vmsdbgout_source_line.\n+\t(vmsdbgout_end_function): New function.\n+\t(vmsdbgout_end_epilogue): Add line and file args. Call\n+\tvmsdbgout_source_line.\n+\t(write_pclines): Write only valid line numbers.\n+\t(write_srccorr): Don't write source correlation records if 0 lines.\n+\t* xcoffout.c (xcoffout_end_epilogue): Add line and file args.\n+\n 2002-08-15  Steve Ellcey  <sje@cup.hp.com>\n \n \t* gcc/unwind.h (_Unwind_Ptr): Make 64 bits on IA64 HP-UX."}, {"sha": "4e467739d246e96f7297c31f1dd80ef241fb254c", "filename": "gcc/dbxout.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/702ada3d9474db60c7447412f63f4247963e6357/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/702ada3d9474db60c7447412f63f4247963e6357/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=702ada3d9474db60c7447412f63f4247963e6357", "patch": "@@ -1,6 +1,6 @@\n /* Output dbx-format symbol table information from GNU compiler.\n    Copyright (C) 1987, 1988, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001 Free Software Foundation, Inc.\n+   1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -340,8 +340,8 @@ const struct gcc_debug_hooks dbx_debug_hooks =\n   debug_true_tree,\t\t/* ignore_block */\n   dbxout_source_line,\t\t/* source_line */\n   dbxout_source_line,\t\t/* begin_prologue: just output line info */\n-  debug_nothing_int,\t\t/* end_prologue */\n-  debug_nothing_void,\t\t/* end_epilogue */\n+  debug_nothing_int_charstar,\t/* end_prologue */\n+  debug_nothing_int_charstar,\t/* end_epilogue */\n #ifdef DBX_FUNCTION_FIRST\n   dbxout_begin_function,\n #else\n@@ -370,7 +370,7 @@ const struct gcc_debug_hooks xcoff_debug_hooks =\n   debug_true_tree,\t\t/* ignore_block */\n   xcoffout_source_line,\n   xcoffout_begin_prologue,\t/* begin_prologue */\n-  debug_nothing_int,\t\t/* end_prologue */\n+  debug_nothing_int_charstar,\t/* end_prologue */\n   xcoffout_end_epilogue,\n   debug_nothing_tree,\t\t/* begin_function */\n   xcoffout_end_function,"}, {"sha": "682f6ed1be30851296b51922d5e8d186dbe0b49a", "filename": "gcc/debug.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/702ada3d9474db60c7447412f63f4247963e6357/gcc%2Fdebug.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/702ada3d9474db60c7447412f63f4247963e6357/gcc%2Fdebug.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdebug.c?ref=702ada3d9474db60c7447412f63f4247963e6357", "patch": "@@ -33,8 +33,8 @@ const struct gcc_debug_hooks do_nothing_debug_hooks =\n   debug_true_tree,\t\t/* ignore_block */\n   debug_nothing_int_charstar,\t/* source_line */\n   debug_nothing_int_charstar,\t/* begin_prologue */\n-  debug_nothing_int,\t\t/* end_prologue */\n-  debug_nothing_void,\t\t/* end_epilogue */\n+  debug_nothing_int_charstar,\t/* end_prologue */\n+  debug_nothing_int_charstar,\t/* end_epilogue */\n   debug_nothing_tree,\t\t/* begin_function */\n   debug_nothing_int,\t\t/* end_function */\n   debug_nothing_tree,\t\t/* function_decl */"}, {"sha": "8b65567b5ab6c1df28495ee6b90d6d3edb63d2be", "filename": "gcc/debug.h", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/702ada3d9474db60c7447412f63f4247963e6357/gcc%2Fdebug.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/702ada3d9474db60c7447412f63f4247963e6357/gcc%2Fdebug.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdebug.h?ref=702ada3d9474db60c7447412f63f4247963e6357", "patch": "@@ -68,10 +68,10 @@ struct gcc_debug_hooks\n \n   /* Called at end of prologue code.  LINE is the first line in the\n      function.  */\n-  void (* end_prologue) PARAMS ((unsigned int line));\n+  void (* end_prologue) PARAMS ((unsigned int line, const char *file));\n \n   /* Record end of epilogue code.  */\n-  void (* end_epilogue) PARAMS ((void));\n+  void (* end_epilogue) PARAMS ((unsigned int line, const char *file));\n \n   /* Called at start of function DECL, before it is declared.  */\n   void (* begin_function) PARAMS ((tree decl));\n@@ -135,17 +135,11 @@ extern const struct gcc_debug_hooks vmsdbg_debug_hooks;\n /* Dwarf2 frame information.  */\n \n extern void dwarf2out_begin_prologue\tPARAMS ((unsigned int, const char *));\n-extern void dwarf2out_end_epilogue\tPARAMS ((void));\n+extern void dwarf2out_end_epilogue\tPARAMS ((unsigned int, const char *));\n extern void dwarf2out_frame_init\tPARAMS ((void));\n extern void dwarf2out_frame_finish\tPARAMS ((void));\n /* Decide whether we want to emit frame unwind information for the current\n    translation unit.  */\n extern int dwarf2out_do_frame\t\tPARAMS ((void));\n \n-/* When writing VMS debug info, output label after the prologue of the\n-   function.  */\n-extern void vmsdbgout_after_prologue\tPARAMS ((void));\n-\n-\n-\n #endif /* !GCC_DEBUG_H  */"}, {"sha": "4368fd379fe8aa4324e9be95e29ed05f157038c2", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/702ada3d9474db60c7447412f63f4247963e6357/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/702ada3d9474db60c7447412f63f4247963e6357/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=702ada3d9474db60c7447412f63f4247963e6357", "patch": "@@ -2131,7 +2131,9 @@ dwarf2out_begin_prologue (line, file)\n    been generated.  */\n \n void\n-dwarf2out_end_epilogue ()\n+dwarf2out_end_epilogue (line, file)\n+     unsigned int line ATTRIBUTE_UNUSED;\n+     const char *file ATTRIBUTE_UNUSED;\n {\n   dw_fde_ref fde;\n   char label[MAX_ARTIFICIAL_LABEL_BYTES];\n@@ -3106,7 +3108,7 @@ const struct gcc_debug_hooks dwarf2_debug_hooks =\n   dwarf2out_ignore_block,\n   dwarf2out_source_line,\n   dwarf2out_begin_prologue,\n-  debug_nothing_int,\t\t/* end_prologue */\n+  debug_nothing_int_charstar,\t/* end_prologue */\n   dwarf2out_end_epilogue,\n   debug_nothing_tree,\t\t/* begin_function */\n   debug_nothing_int,\t\t/* end_function */"}, {"sha": "5e621237bee122ec2510129886f9b81b89d9f782", "filename": "gcc/dwarfout.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/702ada3d9474db60c7447412f63f4247963e6357/gcc%2Fdwarfout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/702ada3d9474db60c7447412f63f4247963e6357/gcc%2Fdwarfout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarfout.c?ref=702ada3d9474db60c7447412f63f4247963e6357", "patch": "@@ -1,6 +1,6 @@\n /* Output Dwarf format symbol table information from the GNU C compiler.\n    Copyright (C) 1992, 1993, 1995, 1996, 1997, 1998, 2002,\n-   1999, 2000, 2001 Free Software Foundation, Inc.\n+   1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n    Contributed by Ron Guilmette (rfg@monkeys.com) of Network Computing Devices.\n \n This file is part of GCC.\n@@ -782,9 +782,9 @@ static void dwarfout_end_source_file\tPARAMS ((unsigned));\n static void dwarfout_end_source_file_check PARAMS ((unsigned));\n static void dwarfout_begin_block\tPARAMS ((unsigned, unsigned));\n static void dwarfout_end_block\t\tPARAMS ((unsigned, unsigned));\n-static void dwarfout_end_epilogue\tPARAMS ((void));\n+static void dwarfout_end_epilogue\tPARAMS ((unsigned int, const char *));\n static void dwarfout_source_line\tPARAMS ((unsigned int, const char *));\n-static void dwarfout_end_prologue\tPARAMS ((unsigned int));\n+static void dwarfout_end_prologue\tPARAMS ((unsigned int, const char *));\n static void dwarfout_end_function\tPARAMS ((unsigned int));\n static void dwarfout_function_decl\tPARAMS ((tree));\n static void dwarfout_global_decl\tPARAMS ((tree));\n@@ -5835,8 +5835,9 @@ dwarfout_end_block (line, blocknum)\n    to their home locations).  */\n \n static void\n-dwarfout_end_prologue (line)\n+dwarfout_end_prologue (line, file)\n      unsigned int line ATTRIBUTE_UNUSED;\n+     const char *file ATTRIBUTE_UNUSED;\n {\n   char label[MAX_ARTIFICIAL_LABEL_BYTES];\n \n@@ -5869,7 +5870,9 @@ dwarfout_end_function (line)\n    has been generated.\t*/\n \n static void\n-dwarfout_end_epilogue ()\n+dwarfout_end_epilogue (line, file)\n+     unsigned int line ATTRIBUTE_UNUSED;\n+     const char *file ATTRIBUTE_UNUSED;\n {\n   char label[MAX_ARTIFICIAL_LABEL_BYTES];\n "}, {"sha": "3ce6a13becf15d9d533517a8085c17c1563846f2", "filename": "gcc/final.c", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/702ada3d9474db60c7447412f63f4247963e6357/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/702ada3d9474db60c7447412f63f4247963e6357/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=702ada3d9474db60c7447412f63f4247963e6357", "patch": "@@ -1681,12 +1681,6 @@ final_start_function (first, file, optimize)\n   /* First output the function prologue: code to set up the stack frame.  */\n   (*targetm.asm_out.function_prologue) (file, get_frame_size ());\n \n-#ifdef VMS_DEBUGGING_INFO\n-  /* Output label after the prologue of the function.  */\n-  if (write_symbols == VMS_DEBUG || write_symbols == VMS_AND_DWARF2_DEBUG)\n-    vmsdbgout_after_prologue ();\n-#endif\n-\n   /* If the machine represents the prologue as RTL, the profiling code must\n      be emitted when NOTE_INSN_PROLOGUE_END is scanned.  */\n #ifdef HAVE_prologue\n@@ -1797,12 +1791,12 @@ final_end_function ()\n   (*targetm.asm_out.function_epilogue) (asm_out_file, get_frame_size ());\n \n   /* And debug output.  */\n-  (*debug_hooks->end_epilogue) ();\n+  (*debug_hooks->end_epilogue) (last_linenum, last_filename);\n \n #if defined (DWARF2_UNWIND_INFO)\n   if (write_symbols != DWARF2_DEBUG && write_symbols != VMS_AND_DWARF2_DEBUG\n       && dwarf2out_do_frame ())\n-    dwarf2out_end_epilogue ();\n+    dwarf2out_end_epilogue (last_linenum, last_filename);\n #endif\n }\n \f\n@@ -2061,7 +2055,7 @@ final_scan_insn (insn, file, optimize, prescan, nopeepholes)\n \n \tcase NOTE_INSN_FUNCTION_BEG:\n \t  app_disable ();\n-\t  (*debug_hooks->end_prologue) (last_linenum);\n+\t  (*debug_hooks->end_prologue) (last_linenum, last_filename);\n \t  break;\n \n \tcase NOTE_INSN_BLOCK_BEG:"}, {"sha": "9effe7851108a39abce04a3e2508e46cf03414d1", "filename": "gcc/sdbout.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/702ada3d9474db60c7447412f63f4247963e6357/gcc%2Fsdbout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/702ada3d9474db60c7447412f63f4247963e6357/gcc%2Fsdbout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsdbout.c?ref=702ada3d9474db60c7447412f63f4247963e6357", "patch": "@@ -102,12 +102,12 @@ static void sdbout_end_source_file\tPARAMS ((unsigned int));\n static void sdbout_begin_block\t\tPARAMS ((unsigned int, unsigned int));\n static void sdbout_end_block\t\tPARAMS ((unsigned int, unsigned int));\n static void sdbout_source_line\t\tPARAMS ((unsigned int, const char *));\n-static void sdbout_end_epilogue\t\tPARAMS ((void));\n+static void sdbout_end_epilogue\t\tPARAMS ((unsigned int, const char *));\n static void sdbout_global_decl\t\tPARAMS ((tree));\n #ifndef MIPS_DEBUGGING_INFO\n static void sdbout_begin_prologue\tPARAMS ((unsigned int, const char *));\n #endif\n-static void sdbout_end_prologue\t\tPARAMS ((unsigned int));\n+static void sdbout_end_prologue\t\tPARAMS ((unsigned int, const char *));\n static void sdbout_begin_function\tPARAMS ((tree));\n static void sdbout_end_function\t\tPARAMS ((unsigned int));\n static void sdbout_toplevel_data\tPARAMS ((tree));\n@@ -321,7 +321,7 @@ const struct gcc_debug_hooks sdb_debug_hooks =\n   sdbout_end_prologue,\t\t/* end_prologue */\n #else\n   sdbout_begin_prologue,\t/* begin_prologue */\n-  debug_nothing_int,\t\t/* end_prologue */\n+  debug_nothing_int_charstar,\t/* end_prologue */\n #endif\n   sdbout_end_epilogue,\t\t/* end_epilogue */\n   sdbout_begin_function,\t/* begin_function */\n@@ -1642,13 +1642,14 @@ sdbout_begin_prologue (line, file)\n      unsigned int line;\n      const char *file ATTRIBUTE_UNUSED;\n {\n-  sdbout_end_prologue (line);\n+  sdbout_end_prologue (line, file);\n }\n #endif\n \n static void\n-sdbout_end_prologue (line)\n+sdbout_end_prologue (line, file)\n      unsigned int line;\n+     const char *file ATTRIBUTE_UNUSED;\n {\n   sdb_begin_function_line = line - 1;\n   PUT_SDB_FUNCTION_START (line);\n@@ -1678,7 +1679,9 @@ sdbout_end_function (line)\n    Called after the epilogue is output.  */\n \n static void\n-sdbout_end_epilogue ()\n+sdbout_end_epilogue (line, file)\n+     unsigned int line ATTRIBUTE_UNUSED;\n+     const char *file ATTRIBUTE_UNUSED;\n {\n   const char *const name ATTRIBUTE_UNUSED\n     = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (current_function_decl));"}, {"sha": "6f322c0885883528b5f9892df3c25cacb4a34e55", "filename": "gcc/vmsdbgout.c", "status": "modified", "additions": 82, "deletions": 53, "changes": 135, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/702ada3d9474db60c7447412f63f4247963e6357/gcc%2Fvmsdbgout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/702ada3d9474db60c7447412f63f4247963e6357/gcc%2Fvmsdbgout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvmsdbgout.c?ref=702ada3d9474db60c7447412f63f4247963e6357", "patch": "@@ -156,7 +156,9 @@ static void vmsdbgout_end_block\t\tPARAMS ((unsigned int, unsigned int));\n static bool vmsdbgout_ignore_block\tPARAMS ((tree));\n static void vmsdbgout_source_line\tPARAMS ((unsigned int, const char *));\n static void vmsdbgout_begin_prologue\tPARAMS ((unsigned int, const char *));\n-static void vmsdbgout_end_epilogue\tPARAMS ((void));\n+static void vmsdbgout_end_prologue\tPARAMS ((unsigned int, const char *));\n+static void vmsdbgout_end_function\tPARAMS ((unsigned int));\n+static void vmsdbgout_end_epilogue\tPARAMS ((unsigned int, const char *));\n static void vmsdbgout_begin_function\tPARAMS ((tree));\n static void vmsdbgout_decl\t\tPARAMS ((tree));\n static void vmsdbgout_global_decl\tPARAMS ((tree));\n@@ -176,10 +178,10 @@ const struct gcc_debug_hooks vmsdbg_debug_hooks\n    vmsdbgout_ignore_block,\n    vmsdbgout_source_line,\n    vmsdbgout_begin_prologue,\n-   debug_nothing_int,\t\t/* end_prologue */\n-   vmsdbgout_end_epilogue,\t/* end_epilogue */\n-   vmsdbgout_begin_function,\t/* begin_function */\n-   debug_nothing_int,\t\t/* end_function */\n+   vmsdbgout_end_prologue,\n+   vmsdbgout_end_epilogue,\n+   vmsdbgout_begin_function,\n+   vmsdbgout_end_function,\n    vmsdbgout_decl,\n    vmsdbgout_global_decl,\n    debug_nothing_tree,\t\t/* deferred_inline_function */\n@@ -984,8 +986,8 @@ write_pclines (dosizeonly)\n   totsize += write_debug_data1 (pcline.dst_b_pcline_command,\n \t\t\t\t\"line_num (SET LINUM LONG)\", dosizeonly);\n \n-  sprintf (buff, \"line_num (%d)\", ln - 1);\n-  totsize += write_debug_data4 (ln - 1, buff, dosizeonly);\n+  sprintf (buff, \"line_num (%d)\", ln ? ln - 1 : 0);\n+  totsize += write_debug_data4 (ln ? ln - 1 : 0, buff, dosizeonly);\n \n   lastln = ln;\n   strcpy (lastlabel, TEXT_SECTION_ASM_OP);\n@@ -1184,62 +1186,66 @@ write_srccorr (fileid, file_info_entry, dosizeonly)\n   src_header.dst_a_source_corr_header.dst__header_type.dst_w_type\n     = DST_K_SOURCE;\n \n-  totsize += write_debug_header (&src_header.dst_a_source_corr_header,\n-\t\t\t\t \"source corr\", dosizeonly);\n-\n-  totsize += write_debug_data1 (src_command_sf.dst_b_src_command,\n-\t\t\t\t\"source_corr (src setfile)\", dosizeonly);\n-\n-  totsize += write_debug_data2\n-    (src_command_sf.dst_a_src_cmd_fields.dst_w_src_unsword,\n-     \"source_corr (fileid)\", dosizeonly);\n-\n-  totsize += write_debug_data1 (src_command_sr.dst_b_src_command,\n-\t\t\t\t\"source_corr (setrec)\", dosizeonly);\n-\n-  totsize += write_debug_data2\n-    (src_command_sr.dst_a_src_cmd_fields.dst_w_src_unsword,\n-     \"source_corr (recnum)\", dosizeonly);\n-\n-  totsize += write_debug_data1 (src_command_sl.dst_b_src_command,\n-\t\t\t\t\"source_corr (setlnum)\", dosizeonly);\n+  if (src_command_dl.dst_a_src_cmd_fields.dst_w_src_unsword)\n+    {\n+      totsize += write_debug_header (&src_header.dst_a_source_corr_header,\n+\t\t\t\t     \"source corr\", dosizeonly);\n \n-  totsize += write_debug_data4\n-    (src_command_sl.dst_a_src_cmd_fields.dst_l_src_unslong,\n-     \"source_corr (linenum)\", dosizeonly);\n+      totsize += write_debug_data1 (src_command_sf.dst_b_src_command,\n+\t\t\t\t    \"source_corr (src setfile)\", dosizeonly);\n \n-  totsize += write_debug_data1 (src_command_dl.dst_b_src_command,\n-\t\t\t\t\"source_corr (deflines)\", dosizeonly);\n+      totsize += write_debug_data2\n+\t(src_command_sf.dst_a_src_cmd_fields.dst_w_src_unsword,\n+\t \"source_corr (fileid)\", dosizeonly);\n \n-  sprintf (buff, \"source_corr (%d)\",\n-\t   src_command_dl.dst_a_src_cmd_fields.dst_w_src_unsword);\n-  totsize += write_debug_data2\n-    (src_command_dl.dst_a_src_cmd_fields.dst_w_src_unsword, buff, dosizeonly);\n+      totsize += write_debug_data1 (src_command_sr.dst_b_src_command,\n+\t\t\t\t    \"source_corr (setrec)\", dosizeonly);\n \n-  while (linesleft > 0)\n-    {\n-      src_header.dst_a_source_corr_header.dst__header_length.dst_w_length\n-\t= DST_K_SOURCE_CORR_HEADER_SIZE + 3 - 1;\n-      src_header.dst_a_source_corr_header.dst__header_type.dst_w_type\n-\t= DST_K_SOURCE;\n-      src_command_dl.dst_b_src_command = DST_K_SRC_DEFLINES_W;\n+      totsize += write_debug_data2\n+\t(src_command_sr.dst_a_src_cmd_fields.dst_w_src_unsword,\n+\t \"source_corr (recnum)\", dosizeonly);\n \n-      if (linesleft > 65534)\n-\tlinesleft = linesleft - 65534, linestodo = 65534;\n-      else\n-\tlinestodo = linesleft, linesleft = 0;\n+      totsize += write_debug_data1 (src_command_sl.dst_b_src_command,\n+\t\t\t\t    \"source_corr (setlnum)\", dosizeonly);\n \n-      src_command_dl.dst_a_src_cmd_fields.dst_w_src_unsword = linestodo;\n+      totsize += write_debug_data4\n+\t(src_command_sl.dst_a_src_cmd_fields.dst_l_src_unslong,\n+\t \"source_corr (linenum)\", dosizeonly);\n \n-      totsize += write_debug_header (&src_header.dst_a_source_corr_header,\n-\t\t\t\t     \"source corr\", dosizeonly);\n       totsize += write_debug_data1 (src_command_dl.dst_b_src_command,\n \t\t\t\t    \"source_corr (deflines)\", dosizeonly);\n+\n       sprintf (buff, \"source_corr (%d)\",\n \t       src_command_dl.dst_a_src_cmd_fields.dst_w_src_unsword);\n       totsize += write_debug_data2\n \t(src_command_dl.dst_a_src_cmd_fields.dst_w_src_unsword,\n \t buff, dosizeonly);\n+\n+      while (linesleft > 0)\n+\t{\n+\t  src_header.dst_a_source_corr_header.dst__header_length.dst_w_length\n+\t    = DST_K_SOURCE_CORR_HEADER_SIZE + 3 - 1;\n+\t  src_header.dst_a_source_corr_header.dst__header_type.dst_w_type\n+\t    = DST_K_SOURCE;\n+\t  src_command_dl.dst_b_src_command = DST_K_SRC_DEFLINES_W;\n+\n+\t  if (linesleft > 65534)\n+\t    linesleft = linesleft - 65534, linestodo = 65534;\n+\t  else\n+\t    linestodo = linesleft, linesleft = 0;\n+\n+\t  src_command_dl.dst_a_src_cmd_fields.dst_w_src_unsword = linestodo;\n+\n+\t  totsize += write_debug_header (&src_header.dst_a_source_corr_header,\n+\t\t\t\t\t \"source corr\", dosizeonly);\n+\t  totsize += write_debug_data1 (src_command_dl.dst_b_src_command,\n+\t\t\t\t\t\"source_corr (deflines)\", dosizeonly);\n+\t  sprintf (buff, \"source_corr (%d)\",\n+\t\t   src_command_dl.dst_a_src_cmd_fields.dst_w_src_unsword);\n+\t  totsize += write_debug_data2\n+\t    (src_command_dl.dst_a_src_cmd_fields.dst_w_src_unsword,\n+\t     buff, dosizeonly);\n+\t}\n     }\n \n   return totsize;\n@@ -1285,30 +1291,50 @@ vmsdbgout_begin_prologue (line, file)\n /* Output a marker (i.e. a label) for the beginning of a function, after\n    the prologue.  */\n \n-void\n-vmsdbgout_after_prologue ()\n+static void\n+vmsdbgout_end_prologue (line, file)\n+     unsigned int line;\n+     const char *file;\n {\n   char label[MAX_ARTIFICIAL_LABEL_BYTES];\n \n+  if (write_symbols == VMS_AND_DWARF2_DEBUG)\n+    (*dwarf2_debug_hooks.end_prologue) (line, file);\n+\n   if (debug_info_level > DINFO_LEVEL_TERSE)\n     {\n       ASM_GENERATE_INTERNAL_LABEL (label, FUNC_PROLOG_LABEL,\n \t\t\t\t   current_function_funcdef_no);\n       ASM_OUTPUT_LABEL (asm_out_file, label);\n+\n+      /* VMS PCA expects every PC range to correlate to some line and file */\n+      vmsdbgout_source_line (line, file);\n     }\n }\n \n+/* No output for VMS debug, but make obligatory call to Dwarf2 debug */\n+\n+static void\n+vmsdbgout_end_function (line)\n+     unsigned int line;\n+{\n+  if (write_symbols == VMS_AND_DWARF2_DEBUG)\n+    (*dwarf2_debug_hooks.end_function) (line);\n+}\n+\n /* Output a marker (i.e. a label) for the absolute end of the generated code\n    for a function definition.  This gets called *after* the epilogue code has\n    been generated.  */\n \n static void\n-vmsdbgout_end_epilogue ()\n+vmsdbgout_end_epilogue (line, file)\n+     unsigned int line;\n+     const char *file;\n {\n   char label[MAX_ARTIFICIAL_LABEL_BYTES];\n \n   if (write_symbols == VMS_AND_DWARF2_DEBUG)\n-    (*dwarf2_debug_hooks.end_epilogue) ();\n+    (*dwarf2_debug_hooks.end_epilogue) (line, file);\n \n   if (debug_info_level > DINFO_LEVEL_NONE)\n     {\n@@ -1317,6 +1343,9 @@ vmsdbgout_end_epilogue ()\n       ASM_GENERATE_INTERNAL_LABEL (label, FUNC_END_LABEL,\n \t\t\t\t   current_function_funcdef_no);\n       ASM_OUTPUT_LABEL (asm_out_file, label);\n+\n+      /* VMS PCA expects every PC range to correlate to some line and file */\n+      vmsdbgout_source_line (line, file);\n     }\n }\n "}, {"sha": "528bd7cf6c9806eb5029f7bfcf695ca96f25a05c", "filename": "gcc/xcoffout.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/702ada3d9474db60c7447412f63f4247963e6357/gcc%2Fxcoffout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/702ada3d9474db60c7447412f63f4247963e6357/gcc%2Fxcoffout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fxcoffout.c?ref=702ada3d9474db60c7447412f63f4247963e6357", "patch": "@@ -476,7 +476,9 @@ xcoffout_end_function (last_linenum)\n    Called after the epilogue is output.  */\n \n void\n-xcoffout_end_epilogue ()\n+xcoffout_end_epilogue (line, file)\n+     unsigned int line ATTRIBUTE_UNUSED;\n+     const char *file ATTRIBUTE_UNUSED;\n {\n   /* We need to pass the correct function size to .function, otherwise,\n      the xas assembler can't figure out the correct size for the function"}, {"sha": "afa7274dcc2f4f42ca8cbc7d755e2f41309ddf10", "filename": "gcc/xcoffout.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/702ada3d9474db60c7447412f63f4247963e6357/gcc%2Fxcoffout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/702ada3d9474db60c7447412f63f4247963e6357/gcc%2Fxcoffout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fxcoffout.h?ref=702ada3d9474db60c7447412f63f4247963e6357", "patch": "@@ -1,6 +1,6 @@\n /* XCOFF definitions.  These are needed in dbxout.c, final.c,\n    and xcoffout.h.\n-   Copyright (C) 1998, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 2000, 2002 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -202,7 +202,8 @@ extern int stab_to_sclass\t\t\tPARAMS ((int));\n extern void xcoffout_begin_prologue\t\tPARAMS ((unsigned int,\n \t\t\t\t\t\t\t const char *));\n extern void xcoffout_begin_block\t\tPARAMS ((unsigned, unsigned));\n-extern void xcoffout_end_epilogue\t\tPARAMS ((void));\n+extern void xcoffout_end_epilogue\t\tPARAMS ((unsigned int,\n+\t\t\t\t\t\t\t const char *));\n extern void xcoffout_end_function\t\tPARAMS ((unsigned int));\n extern void xcoffout_end_block\t\t\tPARAMS ((unsigned, unsigned));\n #endif /* BUFSIZ */"}]}