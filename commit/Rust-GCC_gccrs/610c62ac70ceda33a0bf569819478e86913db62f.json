{"sha": "610c62ac70ceda33a0bf569819478e86913db62f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjEwYzYyYWM3MGNlZGEzM2EwYmY1Njk4MTk0NzhlODY5MTNkYjYyZg==", "commit": {"author": {"name": "Brendan Kehoe", "email": "brendan@gcc.gnu.org", "date": "1996-12-07T16:53:42Z"}, "committer": {"name": "Brendan Kehoe", "email": "brendan@gcc.gnu.org", "date": "1996-12-07T16:53:42Z"}, "message": "Makefile.in (DRIVER_DEFINES): New macro, with the macro definitions for the driver.\n\n        * Makefile.in (DRIVER_DEFINES): New macro, with the macro\n        definitions for the driver.\n        (gcc.o): Make rule use $(DRIVER_DEFINES).\n        * gcc.c (process_command) [LANG_SPECIFIC_DRIVER]: Call\n        lang_specific_driver, passing along the addr of FATAL for errors\n        along with our ARGC and ARGV.\n\nFrom-SVN: r13222", "tree": {"sha": "ef5b48a7fc3e42e7a6b0e8852ce62593c45b4ff8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef5b48a7fc3e42e7a6b0e8852ce62593c45b4ff8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/610c62ac70ceda33a0bf569819478e86913db62f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/610c62ac70ceda33a0bf569819478e86913db62f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/610c62ac70ceda33a0bf569819478e86913db62f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/610c62ac70ceda33a0bf569819478e86913db62f/comments", "author": null, "committer": null, "parents": [{"sha": "86fda5667eafe38af457d9d20b29cc98b5176cf8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86fda5667eafe38af457d9d20b29cc98b5176cf8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86fda5667eafe38af457d9d20b29cc98b5176cf8"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "ff72925f39c9ad08487b4e26ff34e6bdabe923a7", "filename": "gcc/Makefile.in", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/610c62ac70ceda33a0bf569819478e86913db62f/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/610c62ac70ceda33a0bf569819478e86913db62f/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=610c62ac70ceda33a0bf569819478e86913db62f", "patch": "@@ -1206,13 +1206,15 @@ c-common.o : c-common.c $(CONFIG_H) $(TREE_H) c-tree.h c-lex.h flags.h\n \n # Language-independent files.\n \n-gcc.o: gcc.c $(CONFIG_H) multilib.h config.status $(lang_specs_files)\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+DRIVER_DEFINES = \\\n   -DSTANDARD_STARTFILE_PREFIX=\\\"$(libdir)/\\\" \\\n   -DSTANDARD_EXEC_PREFIX=\\\"$(libdir)/gcc-lib/\\\" \\\n   -DDEFAULT_TARGET_VERSION=\\\"$(version)\\\" \\\n   -DDEFAULT_TARGET_MACHINE=\\\"$(target_alias)\\\" \\\n-  -DTOOLDIR_BASE_PREFIX=\\\"$(exec_prefix)/\\\" \\\n+  -DTOOLDIR_BASE_PREFIX=\\\"$(exec_prefix)/\\\"\n+gcc.o: gcc.c $(CONFIG_H) multilib.h config.status $(lang_specs_files)\n+\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+  $(DRIVER_DEFINES) \\\n   -c `echo $(srcdir)/gcc.c | sed 's,^\\./,,'`\n \n dumpvers: dumpvers.c"}, {"sha": "876c8967edc2e42f65f273fb68d624ccdabf571b", "filename": "gcc/gcc.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/610c62ac70ceda33a0bf569819478e86913db62f/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/610c62ac70ceda33a0bf569819478e86913db62f/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=610c62ac70ceda33a0bf569819478e86913db62f", "patch": "@@ -2305,6 +2305,11 @@ process_command (argc, argv)\n   /* Convert new-style -- options to old-style.  */\n   translate_options (&argc, &argv);\n \n+#ifdef LANG_SPECIFIC_DRIVER\n+  /* Do language-specific adjustment/addition of flags.  */\n+  lang_specific_driver (&fatal, &argc, &argv);\n+#endif\n+\n   /* Scan argv twice.  Here, the first time, just count how many switches\n      there will be in their vector, and how many input files in theirs.\n      Here we also parse the switches that cc itself uses (e.g. -v).  */"}]}