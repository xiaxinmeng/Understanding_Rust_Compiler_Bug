{"sha": "aff3ce41c4abecead6d05a0422d912468d2c893c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZmM2NlNDFjNGFiZWNlYWQ2ZDA1YTA0MjJkOTEyNDY4ZDJjODkzYw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2018-10-18T12:34:13Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2018-10-18T12:34:13Z"}, "message": "Call simplify_gen_subreg to simplify subreg of vec_merge\n\nSimplify\n\t(subreg (vec_merge (X)\n\t\t\t   (vector)\n\t\t\t   (const_int ((1 << N) | M)))\n\t\t(N * sizeof (outermode)))\nto\n\t(subreg (X) (N * sizeof (outermode)))\n\n\t* simplify-rtx.c (simplify_subreg): Call simplify_gen_subreg\n\tto simplify subreg of vec_merge.\n\nFrom-SVN: r265267", "tree": {"sha": "1ea36513884c85291ccff09c1dcc32556eb845db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ea36513884c85291ccff09c1dcc32556eb845db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aff3ce41c4abecead6d05a0422d912468d2c893c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aff3ce41c4abecead6d05a0422d912468d2c893c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aff3ce41c4abecead6d05a0422d912468d2c893c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aff3ce41c4abecead6d05a0422d912468d2c893c/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "200045a924f5b3442950ab923070b23f5085b397", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/200045a924f5b3442950ab923070b23f5085b397", "html_url": "https://github.com/Rust-GCC/gccrs/commit/200045a924f5b3442950ab923070b23f5085b397"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "87519ad674ce74d3c6ec48e4f89dbd711278656e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aff3ce41c4abecead6d05a0422d912468d2c893c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aff3ce41c4abecead6d05a0422d912468d2c893c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aff3ce41c4abecead6d05a0422d912468d2c893c", "patch": "@@ -1,3 +1,8 @@\n+2018-10-18  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* simplify-rtx.c (simplify_subreg): Call simplify_gen_subreg\n+\tto simplify subreg of vec_merge.\n+\n 2018-10-18  Richard Biener  <rguenther@suse.de>\n \n \t* config/i386/i386.c: Fix costing of vector FMA."}, {"sha": "ccf92166356597fd43e9c85d333a83f4c4e40688", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aff3ce41c4abecead6d05a0422d912468d2c893c/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aff3ce41c4abecead6d05a0422d912468d2c893c/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=aff3ce41c4abecead6d05a0422d912468d2c893c", "patch": "@@ -6601,20 +6601,21 @@ simplify_subreg (machine_mode outermode, rtx op,\n       return NULL_RTX;\n     }\n \n-  /* Return X for\n-\t(subreg (vec_merge (vec_duplicate X)\n+  /* Simplify\n+\t(subreg (vec_merge (X)\n \t\t\t   (vector)\n \t\t\t   (const_int ((1 << N) | M)))\n-\t\t(N * sizeof (X)))\n+\t\t(N * sizeof (outermode)))\n+     to\n+\t(subreg (X) (N * sizeof (outermode)))\n    */\n   unsigned int idx;\n   if (constant_multiple_p (byte, GET_MODE_SIZE (outermode), &idx)\n       && GET_CODE (op) == VEC_MERGE\n-      && GET_CODE (XEXP (op, 0)) == VEC_DUPLICATE\n-      && GET_MODE (XEXP (XEXP (op, 0), 0)) == outermode\n+      && GET_MODE_INNER (innermode) == outermode\n       && CONST_INT_P (XEXP (op, 2))\n       && (UINTVAL (XEXP (op, 2)) & (HOST_WIDE_INT_1U << idx)) != 0)\n-    return XEXP (XEXP (op, 0), 0);\n+    return simplify_gen_subreg (outermode, XEXP (op, 0), innermode, byte);\n \n   /* A SUBREG resulting from a zero extension may fold to zero if\n      it extracts higher bits that the ZERO_EXTEND's source bits.  */"}]}