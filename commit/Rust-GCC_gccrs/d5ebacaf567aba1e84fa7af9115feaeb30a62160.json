{"sha": "d5ebacaf567aba1e84fa7af9115feaeb30a62160", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDVlYmFjYWY1NjdhYmExZTg0ZmE3YWY5MTE1ZmVhZWIzMGE2MjE2MA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-06-27T11:10:21Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-06-27T11:10:21Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1308", "tree": {"sha": "7185efb3a8a574fb31656d3afa6e80a15ae164e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7185efb3a8a574fb31656d3afa6e80a15ae164e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5ebacaf567aba1e84fa7af9115feaeb30a62160", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5ebacaf567aba1e84fa7af9115feaeb30a62160", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5ebacaf567aba1e84fa7af9115feaeb30a62160", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5ebacaf567aba1e84fa7af9115feaeb30a62160/comments", "author": null, "committer": null, "parents": [{"sha": "ad0e4f77912322c64c8e68d4627f7cd9aff793a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad0e4f77912322c64c8e68d4627f7cd9aff793a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad0e4f77912322c64c8e68d4627f7cd9aff793a7"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "a0ff3fefc1bc55cd456954d4b393bf9e418c7d9b", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5ebacaf567aba1e84fa7af9115feaeb30a62160/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5ebacaf567aba1e84fa7af9115feaeb30a62160/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=d5ebacaf567aba1e84fa7af9115feaeb30a62160", "patch": "@@ -840,11 +840,7 @@ make_node (code)\n   tree_node_sizes[(int)kind] += length;\n #endif\n \n-  TREE_TYPE (t) = 0;\n-  TREE_CHAIN (t) = 0;\n-  for (i = (length / sizeof (int)) - 1;\n-       i >= sizeof (struct tree_common) / sizeof (int) - 1;\n-       i--)\n+  for (i = (length / sizeof (int)) - 1; i >= 0; i--)\n     ((int *) t)[i] = 0;\n \n   TREE_SET_CODE (t, code);"}]}