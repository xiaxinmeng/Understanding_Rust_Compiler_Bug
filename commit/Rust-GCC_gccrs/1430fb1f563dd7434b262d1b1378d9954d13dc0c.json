{"sha": "1430fb1f563dd7434b262d1b1378d9954d13dc0c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQzMGZiMWY1NjNkZDc0MzRiMjYyZDFiMTM3OGQ5OTU0ZDEzZGMwYw==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2016-01-27T14:51:17Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2016-01-27T14:51:17Z"}, "message": "[PR 69355] Correct hole detection when total_scalarization fails\n\n2016-01-27  Martin Jambor  <mjambor@suse.cz>\n\n\tPR tree-optimization/69355\n\t* tree-sra.c (analyze_access_subtree): Correct hole detection when\n\ttotal_scalarization fails.\n\ntestsuite/\n\t* gcc.dg/tree-ssa/pr69355.c: New test.\n\nFrom-SVN: r232877", "tree": {"sha": "012821f0ad0170ef99cb15e2364a2a8648984a58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/012821f0ad0170ef99cb15e2364a2a8648984a58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1430fb1f563dd7434b262d1b1378d9954d13dc0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1430fb1f563dd7434b262d1b1378d9954d13dc0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1430fb1f563dd7434b262d1b1378d9954d13dc0c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1430fb1f563dd7434b262d1b1378d9954d13dc0c/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "95e3030cfa307191f87da77bb98b101f2ed88bec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95e3030cfa307191f87da77bb98b101f2ed88bec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95e3030cfa307191f87da77bb98b101f2ed88bec"}], "stats": {"total": 57, "additions": 56, "deletions": 1}, "files": [{"sha": "824c69c1859f6c4477986f06567b8370d85be2dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1430fb1f563dd7434b262d1b1378d9954d13dc0c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1430fb1f563dd7434b262d1b1378d9954d13dc0c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1430fb1f563dd7434b262d1b1378d9954d13dc0c", "patch": "@@ -1,3 +1,9 @@\n+2016-01-27  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/69355\n+\t* tree-sra.c (analyze_access_subtree): Correct hole detection when\n+\ttotal_scalarization fails.\n+\n 2016-01-27  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* config/rs6000/driver-rs6000.c (detect_processor_aix): Add"}, {"sha": "7dae86c1fe05ba4bfa4ae86be0d19c2a6e261958", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1430fb1f563dd7434b262d1b1378d9954d13dc0c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1430fb1f563dd7434b262d1b1378d9954d13dc0c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1430fb1f563dd7434b262d1b1378d9954d13dc0c", "patch": "@@ -1,3 +1,8 @@\n+2016-01-27  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/69355\n+\t* gcc.dg/tree-ssa/pr69355.c: New test.\n+\n 2016-01-27  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/69496"}, {"sha": "f515c211c99bdfa2865a05b30186957559fbfc39", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr69355.c", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1430fb1f563dd7434b262d1b1378d9954d13dc0c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr69355.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1430fb1f563dd7434b262d1b1378d9954d13dc0c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr69355.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr69355.c?ref=1430fb1f563dd7434b262d1b1378d9954d13dc0c", "patch": "@@ -0,0 +1,44 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O -fno-strict-aliasing\" } */\n+\n+struct S\n+{\n+  void *a;\n+  long double b;\n+};\n+\n+struct Z\n+{\n+  long long l;\n+  short s;\n+} __attribute__((packed));\n+\n+struct S __attribute__((noclone, noinline))\n+foo (void *v, struct Z *z)\n+{\n+  struct S t;\n+  t.a = v;\n+  *(struct Z *) &t.b = *z;\n+  return t;\n+}\n+\n+struct Z gz;\n+\n+int\n+main (int argc, char **argv)\n+{\n+  struct S s;\n+\n+  if (sizeof (long double) < sizeof (struct Z))\n+    return 0;\n+\n+  gz.l = 0xbeef;\n+  gz.s = 0xab;\n+\n+  s = foo ((void *) 0, &gz);\n+\n+  if ((((struct Z *) &s.b)->l != gz.l)\n+      || (((struct Z *) &s.b)->s != gz.s))\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "72157edd02e3235e57b786bbf460c94b0c52b2c5", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1430fb1f563dd7434b262d1b1378d9954d13dc0c/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1430fb1f563dd7434b262d1b1378d9954d13dc0c/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=1430fb1f563dd7434b262d1b1378d9954d13dc0c", "patch": "@@ -2421,7 +2421,7 @@ analyze_access_subtree (struct access *root, struct access *parent,\n \n       if (covered_to < limit)\n \thole = true;\n-      if (scalar)\n+      if (scalar || !allow_replacements)\n \troot->grp_total_scalarization = 0;\n     }\n "}]}