{"sha": "3ca8c9aea002945be6cc6164d3eee6e55acc1b67", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2NhOGM5YWVhMDAyOTQ1YmU2Y2M2MTY0ZDNlZWU2ZTU1YWNjMWI2Nw==", "commit": {"author": {"name": "Anthony Green", "email": "green@redhat.com", "date": "2000-09-06T02:13:28Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2000-09-06T02:13:28Z"}, "message": "jcf-io.c: Include zlib.h.\n\n2000-09-02  Anthony Green  <green@redhat.com>\n\n        * jcf-io.c: Include zlib.h.\n        (open_in_zip): Read compressed class file archives.\n        * zipfile.h (ZipDirectory): Add uncompressed_size and\n        compression_method fields.\n        * zextract.c (read_zip_archive): Collect file compression info.\n\nFrom-SVN: r36175", "tree": {"sha": "f11498ff99199cfd9ecb821a470faf66c9a566dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f11498ff99199cfd9ecb821a470faf66c9a566dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ca8c9aea002945be6cc6164d3eee6e55acc1b67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ca8c9aea002945be6cc6164d3eee6e55acc1b67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ca8c9aea002945be6cc6164d3eee6e55acc1b67", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ca8c9aea002945be6cc6164d3eee6e55acc1b67/comments", "author": {"login": "atgreen", "id": 89993, "node_id": "MDQ6VXNlcjg5OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/89993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atgreen", "html_url": "https://github.com/atgreen", "followers_url": "https://api.github.com/users/atgreen/followers", "following_url": "https://api.github.com/users/atgreen/following{/other_user}", "gists_url": "https://api.github.com/users/atgreen/gists{/gist_id}", "starred_url": "https://api.github.com/users/atgreen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atgreen/subscriptions", "organizations_url": "https://api.github.com/users/atgreen/orgs", "repos_url": "https://api.github.com/users/atgreen/repos", "events_url": "https://api.github.com/users/atgreen/events{/privacy}", "received_events_url": "https://api.github.com/users/atgreen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2a7ffc85e5eb9506241ee725324156bc3da9cf69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a7ffc85e5eb9506241ee725324156bc3da9cf69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a7ffc85e5eb9506241ee725324156bc3da9cf69"}], "stats": {"total": 65, "additions": 57, "deletions": 8}, "files": [{"sha": "f21e2a03286fbd1b9b47fe7d3951dfdb9b5f6fc1", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ca8c9aea002945be6cc6164d3eee6e55acc1b67/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ca8c9aea002945be6cc6164d3eee6e55acc1b67/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=3ca8c9aea002945be6cc6164d3eee6e55acc1b67", "patch": "@@ -1,3 +1,11 @@\n+2000-09-02  Anthony Green  <green@redhat.com>\n+\n+\t* jcf-io.c: Include zlib.h.\n+\t(open_in_zip): Read compressed class file archives.\n+\t* zipfile.h (ZipDirectory): Add uncompressed_size and\n+\tcompression_method fields.\n+\t* zextract.c (read_zip_archive): Collect file compression info.\n+\n 2000-08-07  Hans Boehm  <boehm@acm.org>\n \n \t* boehm.c (mark_reference_fields): Set marking bits for all words in"}, {"sha": "7bd4fe81afa5ce9228940c9df52c9d3622a3d292", "filename": "gcc/java/jcf-io.c", "status": "modified", "additions": 42, "deletions": 7, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ca8c9aea002945be6cc6164d3eee6e55acc1b67/gcc%2Fjava%2Fjcf-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ca8c9aea002945be6cc6164d3eee6e55acc1b67/gcc%2Fjava%2Fjcf-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-io.c?ref=3ca8c9aea002945be6cc6164d3eee6e55acc1b67", "patch": "@@ -30,6 +30,8 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"toplev.h\"\n #include \"java-tree.h\"\n \n+#include \"zlib.h\"\n+\n /* DOS brain-damage */\n #ifndef O_BINARY\n #define O_BINARY 0 /* MS-DOS brain-damage */\n@@ -149,13 +151,18 @@ DEFUN(open_in_zip, (jcf, zipfile, zipmember, is_system),\n   ZipDirectory *zipd;\n   int i, len;\n   ZipFile *zipf = opendir_in_zip (zipfile, is_system);\n+  z_stream d_stream; /* decompression stream */\n \n   if (zipf == NULL)\n     return -2;\n \n   if (!zipmember)\n     return 0;\n \n+  d_stream.zalloc = (alloc_func) 0;\n+  d_stream.zfree = (free_func) 0;\n+  d_stream.opaque = (voidpf) 0;\n+\n   len = strlen (zipmember);\n   \n   zipd = (struct ZipDirectory*) zipf->central_directory;\n@@ -165,17 +172,45 @@ DEFUN(open_in_zip, (jcf, zipfile, zipmember, is_system),\n \t  strncmp (ZIPDIR_FILENAME (zipd), zipmember, len) == 0)\n \t{\n \t  JCF_ZERO (jcf);\n-\t  jcf->buffer = ALLOC (zipd->size);\n-\t  jcf->buffer_end = jcf->buffer + zipd->size;\n-\t  jcf->read_ptr = jcf->buffer;\n-\t  jcf->read_end = jcf->buffer_end;\n+\n \t  jcf->filbuf = jcf_unexpected_eof;\n \t  jcf->filename = xstrdup (zipfile);\n \t  jcf->classname = xstrdup (zipmember);\n \t  jcf->zipd = (void *)zipd;\n-\t  if (lseek (zipf->fd, zipd->filestart, 0) < 0\n-\t      || read (zipf->fd, jcf->buffer, zipd->size) != zipd->size)\n-\t    return -2;\n+\n+\t  if (zipd->compression_method == Z_NO_COMPRESSION)\n+\t    {\n+\t      jcf->buffer = ALLOC (zipd->size);\n+\t      jcf->buffer_end = jcf->buffer + zipd->size;\n+\t      jcf->read_ptr = jcf->buffer;\n+\t      jcf->read_end = jcf->buffer_end;\n+\t      if (lseek (zipf->fd, zipd->filestart, 0) < 0\n+\t\t  || read (zipf->fd, jcf->buffer, zipd->size) != zipd->size)\n+\t        return -2;\n+\t    }\n+\t  else\n+\t    {\n+\t      char *buffer;\n+\t      jcf->buffer = ALLOC (zipd->uncompressed_size);\n+\t      d_stream.next_out = jcf->buffer;\n+\t      d_stream.avail_out = zipd->uncompressed_size;\n+\t      jcf->buffer_end = jcf->buffer + zipd->uncompressed_size;\n+\t      jcf->read_ptr = jcf->buffer;\n+\t      jcf->read_end = jcf->buffer_end;\n+\t      buffer = ALLOC (zipd->size);\n+\t      d_stream.next_in = buffer;\n+\t      d_stream.avail_in = zipd->size;\n+\t      if (lseek (zipf->fd, zipd->filestart, 0) < 0\n+\t\t  || read (zipf->fd, buffer, zipd->size) != zipd->size)\n+\t\treturn -2;\n+\t      /* Handle NO_HEADER using undocumented zlib feature.\n+                 This is a very common hack.  */\n+\t      inflateInit2 (&d_stream, -MAX_WBITS);\n+\t      inflate (&d_stream, Z_NO_FLUSH);\n+\t      inflateEnd (&d_stream);\n+\t      FREE (buffer);\n+\t    }\n+\n \t  return 0;\n \t}\n     }"}, {"sha": "f381f92c57f83b5bbba94b545d6e35d1e908315a", "filename": "gcc/java/zextract.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ca8c9aea002945be6cc6164d3eee6e55acc1b67/gcc%2Fjava%2Fzextract.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ca8c9aea002945be6cc6164d3eee6e55acc1b67/gcc%2Fjava%2Fzextract.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fzextract.c?ref=3ca8c9aea002945be6cc6164d3eee6e55acc1b67", "patch": "@@ -318,6 +318,8 @@ read_zip_archive (zipf)\n   for (i = 0; i < zipf->count; i++)\n     {\n       ZipDirectory *zipd = (ZipDirectory*)(dir_ptr + dir_last_pad);\n+      int compression_method = (int) dir_ptr[4+C_COMPRESSION_METHOD];\n+      long size = makelong (&dir_ptr[4+C_COMPRESSED_SIZE]);\n       long uncompressed_size = makelong (&dir_ptr[4+C_UNCOMPRESSED_SIZE]);\n       long filename_length = makeword (&dir_ptr[4+C_FILENAME_LENGTH]);\n       long extra_field_length = makeword (&dir_ptr[4+C_EXTRA_FIELD_LENGTH]);\n@@ -326,7 +328,9 @@ read_zip_archive (zipf)\n \treturn -1;\n \n       zipd->filename_length = filename_length;\n-      zipd->size = uncompressed_size;\n+      zipd->compression_method = compression_method;\n+      zipd->size = size;\n+      zipd->uncompressed_size = uncompressed_size;\n #ifdef __GNUC__\n #define DIR_ALIGN __alignof__(ZipDirectory)\n #else"}, {"sha": "172829cbd1cce50d1bc79468c3d06b6562e39e85", "filename": "gcc/java/zipfile.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ca8c9aea002945be6cc6164d3eee6e55acc1b67/gcc%2Fjava%2Fzipfile.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ca8c9aea002945be6cc6164d3eee6e55acc1b67/gcc%2Fjava%2Fzipfile.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fzipfile.h?ref=3ca8c9aea002945be6cc6164d3eee6e55acc1b67", "patch": "@@ -34,7 +34,9 @@ typedef struct ZipFile ZipFile;\n struct ZipDirectory {\n   int direntry_size;\n   int filename_offset;\n+  int compression_method;\n   long size; /* length of file */\n+  long uncompressed_size; /* length of uncompressed data */\n   long filestart;  /* start of file in archive */\n   long filename_length;\n   /* char mid_padding[...]; */"}]}