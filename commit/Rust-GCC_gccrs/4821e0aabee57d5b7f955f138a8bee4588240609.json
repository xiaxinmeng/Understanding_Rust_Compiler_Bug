{"sha": "4821e0aabee57d5b7f955f138a8bee4588240609", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDgyMWUwYWFiZWU1N2Q1YjdmOTU1ZjEzOGE4YmVlNDU4ODI0MDYwOQ==", "commit": {"author": {"name": "Jozef Lawrynowicz", "email": "jozef.l@mittosystems.com", "date": "2020-07-22T11:34:30Z"}, "committer": {"name": "Jozef Lawrynowicz", "email": "jozef.l@mittosystems.com", "date": "2020-07-22T11:34:46Z"}, "message": "expr: Allow scalar_int_mode target mode when converting a constant\n\nis_int_mode does not allow MODE_PARTIAL_INT modes, so convert_modes was\nnot allowing a constant value to be converted to a MODE_PARTIAL_INT for\nuse as operand 2 in patterns such as ashlpsi3. The constant had\nto be copied into a register before it could be used, but now can be\nused directly as an operand without any copying.\n\ngcc/ChangeLog:\n\n\t* expr.c (convert_modes): Allow a constant integer to be converted to\n\tany scalar int mode.", "tree": {"sha": "c0ddfb8f95fffac4ac6f967d819fb2cfceef2665", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0ddfb8f95fffac4ac6f967d819fb2cfceef2665"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4821e0aabee57d5b7f955f138a8bee4588240609", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4821e0aabee57d5b7f955f138a8bee4588240609", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4821e0aabee57d5b7f955f138a8bee4588240609", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4821e0aabee57d5b7f955f138a8bee4588240609/comments", "author": {"login": "jozefl-mitto", "id": 36524004, "node_id": "MDQ6VXNlcjM2NTI0MDA0", "avatar_url": "https://avatars.githubusercontent.com/u/36524004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jozefl-mitto", "html_url": "https://github.com/jozefl-mitto", "followers_url": "https://api.github.com/users/jozefl-mitto/followers", "following_url": "https://api.github.com/users/jozefl-mitto/following{/other_user}", "gists_url": "https://api.github.com/users/jozefl-mitto/gists{/gist_id}", "starred_url": "https://api.github.com/users/jozefl-mitto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jozefl-mitto/subscriptions", "organizations_url": "https://api.github.com/users/jozefl-mitto/orgs", "repos_url": "https://api.github.com/users/jozefl-mitto/repos", "events_url": "https://api.github.com/users/jozefl-mitto/events{/privacy}", "received_events_url": "https://api.github.com/users/jozefl-mitto/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jozefl-mitto", "id": 36524004, "node_id": "MDQ6VXNlcjM2NTI0MDA0", "avatar_url": "https://avatars.githubusercontent.com/u/36524004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jozefl-mitto", "html_url": "https://github.com/jozefl-mitto", "followers_url": "https://api.github.com/users/jozefl-mitto/followers", "following_url": "https://api.github.com/users/jozefl-mitto/following{/other_user}", "gists_url": "https://api.github.com/users/jozefl-mitto/gists{/gist_id}", "starred_url": "https://api.github.com/users/jozefl-mitto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jozefl-mitto/subscriptions", "organizations_url": "https://api.github.com/users/jozefl-mitto/orgs", "repos_url": "https://api.github.com/users/jozefl-mitto/repos", "events_url": "https://api.github.com/users/jozefl-mitto/events{/privacy}", "received_events_url": "https://api.github.com/users/jozefl-mitto/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ade6e7204ce4d179cd9fa4637ddee85ba1fa12d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ade6e7204ce4d179cd9fa4637ddee85ba1fa12d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ade6e7204ce4d179cd9fa4637ddee85ba1fa12d9"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "5db0a7a8565969386910e91991f29a0d8c641665", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4821e0aabee57d5b7f955f138a8bee4588240609/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4821e0aabee57d5b7f955f138a8bee4588240609/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=4821e0aabee57d5b7f955f138a8bee4588240609", "patch": "@@ -696,12 +696,12 @@ convert_modes (machine_mode mode, machine_mode oldmode, rtx x, int unsignedp)\n     return x;\n \n   if (CONST_SCALAR_INT_P (x)\n-      && is_int_mode (mode, &int_mode))\n+      && is_a <scalar_int_mode> (mode, &int_mode))\n     {\n       /* If the caller did not tell us the old mode, then there is not\n \t much to do with respect to canonicalization.  We have to\n \t assume that all the bits are significant.  */\n-      if (GET_MODE_CLASS (oldmode) != MODE_INT)\n+      if (!is_a <scalar_int_mode> (oldmode))\n \toldmode = MAX_MODE_INT;\n       wide_int w = wide_int::from (rtx_mode_t (x, oldmode),\n \t\t\t\t   GET_MODE_PRECISION (int_mode),"}]}