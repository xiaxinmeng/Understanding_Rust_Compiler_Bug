{"sha": "22c8aab31d78e9374b38bb216dce029317312729", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjJjOGFhYjMxZDc4ZTkzNzRiMzhiYjIxNmRjZTAyOTMxNzMxMjcyOQ==", "commit": {"author": {"name": "Ilya Tocar", "email": "ilya.tocar@intel.com", "date": "2014-02-26T09:31:15Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-02-26T09:31:15Z"}, "message": "predicates.md (const1256_operand): Remove.\n\ngcc/\n\t* common/config/i386/predicates.md (const1256_operand): Remove.\n\t(const2356_operand): New.\n\t(const_1_to_2_operand): Remove.\n\t* config/i386/sse.md (avx512pf_gatherpf<mode>sf): Change hint value.\n\t(*avx512pf_gatherpf<mode>sf_mask): Ditto.\n\t(*avx512pf_gatherpf<mode>sf): Ditto.\n\t(avx512pf_gatherpf<mode>df): Ditto.\n\t(*avx512pf_gatherpf<mode>df_mask): Ditto.\n\t(*avx512pf_gatherpf<mode>df): Ditto.\n\t(avx512pf_scatterpf<mode>sf): Ditto.\n\t(*avx512pf_scatterpf<mode>sf_mask): Ditto.\n\t(*avx512pf_scatterpf<mode>sf): Ditto.\n\t(avx512pf_scatterpf<mode>df): Ditto.\n\t(*avx512pf_scatterpf<mode>df_mask): Ditto.\n\t(*avx512pf_scatterpf<mode>df): Ditto.\n\t* common/config/i386/xmmintrin.h (_mm_hint): Add _MM_HINT_ET0.\n\ngcc/testsuite/\n\t* common/config/i386/predicates.md (const1256_operand): Remove.\n\t(const2356_operand): New.\n\t(const_1_to_2_operand): Remove.\n\t* config/i386/sse.md (avx512pf_gatherpf<mode>sf): Change hint value.\n\t(*avx512pf_gatherpf<mode>sf_mask): Ditto.\n\t(*avx512pf_gatherpf<mode>sf): Ditto.\n\t(avx512pf_gatherpf<mode>df): Ditto.\n\t(*avx512pf_gatherpf<mode>df_mask): Ditto.\n\t(*avx512pf_gatherpf<mode>df): Ditto.\n\t(avx512pf_scatterpf<mode>sf): Ditto.\n\t(*avx512pf_scatterpf<mode>sf_mask): Ditto.\n\t(*avx512pf_scatterpf<mode>sf): Ditto.\n\t(avx512pf_scatterpf<mode>df): Ditto.\n\t(*avx512pf_scatterpf<mode>df_mask): Ditto.\n\t(*avx512pf_scatterpf<mode>df): Ditto.\n\t* common/config/i386/xmmintrin.h (_mm_hint): Add _MM_HINT_ET0.\n\nFrom-SVN: r208169", "tree": {"sha": "7976fcf712b32183204b8bedda89406a1628020d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7976fcf712b32183204b8bedda89406a1628020d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22c8aab31d78e9374b38bb216dce029317312729", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22c8aab31d78e9374b38bb216dce029317312729", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22c8aab31d78e9374b38bb216dce029317312729", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22c8aab31d78e9374b38bb216dce029317312729/comments", "author": {"login": "TocarIP", "id": 16836375, "node_id": "MDQ6VXNlcjE2ODM2Mzc1", "avatar_url": "https://avatars.githubusercontent.com/u/16836375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TocarIP", "html_url": "https://github.com/TocarIP", "followers_url": "https://api.github.com/users/TocarIP/followers", "following_url": "https://api.github.com/users/TocarIP/following{/other_user}", "gists_url": "https://api.github.com/users/TocarIP/gists{/gist_id}", "starred_url": "https://api.github.com/users/TocarIP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TocarIP/subscriptions", "organizations_url": "https://api.github.com/users/TocarIP/orgs", "repos_url": "https://api.github.com/users/TocarIP/repos", "events_url": "https://api.github.com/users/TocarIP/events{/privacy}", "received_events_url": "https://api.github.com/users/TocarIP/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "260d3642789bc5299470745c064eea9daa1e258e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/260d3642789bc5299470745c064eea9daa1e258e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/260d3642789bc5299470745c064eea9daa1e258e"}], "stats": {"total": 204, "additions": 119, "deletions": 85}, "files": [{"sha": "1f5bd62a6bcfd2dd02314783c2a97c542cb6eb95", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22c8aab31d78e9374b38bb216dce029317312729/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22c8aab31d78e9374b38bb216dce029317312729/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=22c8aab31d78e9374b38bb216dce029317312729", "patch": "@@ -1,3 +1,22 @@\n+2014-02-25  Ilya Tocar  <ilya.tocar@intel.com>\n+\n+\t* common/config/i386/predicates.md (const1256_operand): Remove.\n+\t(const2356_operand): New.\n+\t(const_1_to_2_operand): Remove.\n+\t* config/i386/sse.md (avx512pf_gatherpf<mode>sf): Change hint value.\n+\t(*avx512pf_gatherpf<mode>sf_mask): Ditto.\n+\t(*avx512pf_gatherpf<mode>sf): Ditto.\n+\t(avx512pf_gatherpf<mode>df): Ditto.\n+\t(*avx512pf_gatherpf<mode>df_mask): Ditto.\n+\t(*avx512pf_gatherpf<mode>df): Ditto.\n+\t(avx512pf_scatterpf<mode>sf): Ditto.\n+\t(*avx512pf_scatterpf<mode>sf_mask): Ditto.\n+\t(*avx512pf_scatterpf<mode>sf): Ditto.\n+\t(avx512pf_scatterpf<mode>df): Ditto.\n+\t(*avx512pf_scatterpf<mode>df_mask): Ditto.\n+\t(*avx512pf_scatterpf<mode>df): Ditto.\n+\t* common/config/i386/xmmintrin.h (_mm_hint): Add _MM_HINT_ET0.\n+\n 2014-02-26  Ilya Tocar  <ilya.tocar@intel.com>\n \n \t* config/i386/avx512fintrin.h (_mm512_testn_epi32_mask),"}, {"sha": "70418f430227cbe710e4a8720dd39cd6970981f3", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=22c8aab31d78e9374b38bb216dce029317312729", "patch": "@@ -660,12 +660,12 @@\n   return i == 2 || i == 4 || i == 8;\n })\n \n-;; Match 1, 2, 5, or 6\n-(define_predicate \"const1256_operand\"\n+;; Match 2, 3, 5, or 6\n+(define_predicate \"const2356_operand\"\n   (match_code \"const_int\")\n {\n   HOST_WIDE_INT i = INTVAL (op);\n-  return i == 1 || i == 2 || i == 5 || i == 6;\n+  return i == 2 || i == 3 || i == 5 || i == 6;\n })\n \n ;; Match 1, 2, 4, or 8\n@@ -754,11 +754,6 @@\n   return val <= 255*8 && val % 8 == 0;\n })\n \n-;; Match 1 to 2.\n-(define_predicate \"const_1_to_2_operand\"\n-  (and (match_code \"const_int\")\n-       (match_test \"IN_RANGE (INTVAL (op), 1, 2)\")))\n-\n ;; Return true if OP is CONST_INT >= 1 and <= 31 (a valid operand\n ;; for shift & compare patterns, as shifting by 0 does not change flags).\n (define_predicate \"const_1_to_31_operand\""}, {"sha": "5775bc67c1e208bbb3c069fc9bd920732df0a94f", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=22c8aab31d78e9374b38bb216dce029317312729", "patch": "@@ -12508,7 +12508,7 @@\n \t  [(match_operand 2 \"vsib_address_operand\")\n \t   (match_operand:VI48_512 1 \"register_operand\")\n \t   (match_operand:SI 3 \"const1248_operand\")]))\n-      (match_operand:SI 4 \"const_1_to_2_operand\")]\n+      (match_operand:SI 4 \"const_2_to_3_operand\")]\n      UNSPEC_GATHER_PREFETCH)]\n   \"TARGET_AVX512PF\"\n {\n@@ -12526,13 +12526,13 @@\n \t    (match_operand:VI48_512 1 \"register_operand\" \"v\")\n \t    (match_operand:SI 3 \"const1248_operand\" \"n\")]\n \t   UNSPEC_VSIBADDR)])\n-      (match_operand:SI 4 \"const_1_to_2_operand\" \"n\")]\n+      (match_operand:SI 4 \"const_2_to_3_operand\" \"n\")]\n      UNSPEC_GATHER_PREFETCH)]\n   \"TARGET_AVX512PF\"\n {\n   switch (INTVAL (operands[4]))\n     {\n-    case 1:\n+    case 3:\n       return \"vgatherpf0<ssemodesuffix>ps\\t{%5%{%0%}|%5%{%0%}}\";\n     case 2:\n       return \"vgatherpf1<ssemodesuffix>ps\\t{%5%{%0%}|%5%{%0%}}\";\n@@ -12553,13 +12553,13 @@\n \t    (match_operand:VI48_512 0 \"register_operand\" \"v\")\n \t    (match_operand:SI 2 \"const1248_operand\" \"n\")]\n \t   UNSPEC_VSIBADDR)])\n-      (match_operand:SI 3 \"const_1_to_2_operand\" \"n\")]\n+      (match_operand:SI 3 \"const_2_to_3_operand\" \"n\")]\n      UNSPEC_GATHER_PREFETCH)]\n   \"TARGET_AVX512PF\"\n {\n   switch (INTVAL (operands[3]))\n     {\n-    case 1:\n+    case 3:\n       return \"vgatherpf0<ssemodesuffix>ps\\t{%4|%4}\";\n     case 2:\n       return \"vgatherpf1<ssemodesuffix>ps\\t{%4|%4}\";\n@@ -12580,7 +12580,7 @@\n \t  [(match_operand 2 \"vsib_address_operand\")\n \t   (match_operand:VI4_256_8_512 1 \"register_operand\")\n \t   (match_operand:SI 3 \"const1248_operand\")]))\n-      (match_operand:SI 4 \"const_1_to_2_operand\")]\n+      (match_operand:SI 4 \"const_2_to_3_operand\")]\n      UNSPEC_GATHER_PREFETCH)]\n   \"TARGET_AVX512PF\"\n {\n@@ -12598,13 +12598,13 @@\n \t    (match_operand:VI4_256_8_512 1 \"register_operand\" \"v\")\n \t    (match_operand:SI 3 \"const1248_operand\" \"n\")]\n \t   UNSPEC_VSIBADDR)])\n-      (match_operand:SI 4 \"const_1_to_2_operand\" \"n\")]\n+      (match_operand:SI 4 \"const_2_to_3_operand\" \"n\")]\n      UNSPEC_GATHER_PREFETCH)]\n   \"TARGET_AVX512PF\"\n {\n   switch (INTVAL (operands[4]))\n     {\n-    case 1:\n+    case 3:\n       return \"vgatherpf0<ssemodesuffix>pd\\t{%5%{%0%}|%5%{%0%}}\";\n     case 2:\n       return \"vgatherpf1<ssemodesuffix>pd\\t{%5%{%0%}|%5%{%0%}}\";\n@@ -12625,13 +12625,13 @@\n \t    (match_operand:VI4_256_8_512 0 \"register_operand\" \"v\")\n \t    (match_operand:SI 2 \"const1248_operand\" \"n\")]\n \t   UNSPEC_VSIBADDR)])\n-      (match_operand:SI 3 \"const_1_to_2_operand\" \"n\")]\n+      (match_operand:SI 3 \"const_2_to_3_operand\" \"n\")]\n      UNSPEC_GATHER_PREFETCH)]\n   \"TARGET_AVX512PF\"\n {\n   switch (INTVAL (operands[3]))\n     {\n-    case 1:\n+    case 3:\n       return \"vgatherpf0<ssemodesuffix>pd\\t{%4|%4}\";\n     case 2:\n       return \"vgatherpf1<ssemodesuffix>pd\\t{%4|%4}\";\n@@ -12652,7 +12652,7 @@\n \t  [(match_operand 2 \"vsib_address_operand\")\n \t   (match_operand:VI48_512 1 \"register_operand\")\n \t   (match_operand:SI 3 \"const1248_operand\")]))\n-      (match_operand:SI 4 \"const1256_operand\")]\n+      (match_operand:SI 4 \"const2356_operand\")]\n      UNSPEC_SCATTER_PREFETCH)]\n   \"TARGET_AVX512PF\"\n {\n@@ -12670,13 +12670,13 @@\n \t    (match_operand:VI48_512 1 \"register_operand\" \"v\")\n \t    (match_operand:SI 3 \"const1248_operand\" \"n\")]\n \t   UNSPEC_VSIBADDR)])\n-      (match_operand:SI 4 \"const1256_operand\" \"n\")]\n+      (match_operand:SI 4 \"const2356_operand\" \"n\")]\n      UNSPEC_SCATTER_PREFETCH)]\n   \"TARGET_AVX512PF\"\n {\n   switch (INTVAL (operands[4]))\n     {\n-    case 1:\n+    case 3:\n     case 5:\n       return \"vscatterpf0<ssemodesuffix>ps\\t{%5%{%0%}|%5%{%0%}}\";\n     case 2:\n@@ -12699,13 +12699,13 @@\n \t    (match_operand:VI48_512 0 \"register_operand\" \"v\")\n \t    (match_operand:SI 2 \"const1248_operand\" \"n\")]\n \t   UNSPEC_VSIBADDR)])\n-      (match_operand:SI 3 \"const1256_operand\" \"n\")]\n+      (match_operand:SI 3 \"const2356_operand\" \"n\")]\n      UNSPEC_SCATTER_PREFETCH)]\n   \"TARGET_AVX512PF\"\n {\n   switch (INTVAL (operands[3]))\n     {\n-    case 1:\n+    case 3:\n     case 5:\n       return \"vscatterpf0<ssemodesuffix>ps\\t{%4|%4}\";\n     case 2:\n@@ -12728,7 +12728,7 @@\n \t  [(match_operand 2 \"vsib_address_operand\")\n \t   (match_operand:VI4_256_8_512 1 \"register_operand\")\n \t   (match_operand:SI 3 \"const1248_operand\")]))\n-      (match_operand:SI 4 \"const1256_operand\")]\n+      (match_operand:SI 4 \"const2356_operand\")]\n      UNSPEC_SCATTER_PREFETCH)]\n   \"TARGET_AVX512PF\"\n {\n@@ -12746,13 +12746,13 @@\n \t    (match_operand:VI4_256_8_512 1 \"register_operand\" \"v\")\n \t    (match_operand:SI 3 \"const1248_operand\" \"n\")]\n \t   UNSPEC_VSIBADDR)])\n-      (match_operand:SI 4 \"const1256_operand\" \"n\")]\n+      (match_operand:SI 4 \"const2356_operand\" \"n\")]\n      UNSPEC_SCATTER_PREFETCH)]\n   \"TARGET_AVX512PF\"\n {\n   switch (INTVAL (operands[4]))\n     {\n-    case 1:\n+    case 3:\n     case 5:\n       return \"vscatterpf0<ssemodesuffix>pd\\t{%5%{%0%}|%5%{%0%}}\";\n     case 2:\n@@ -12775,13 +12775,13 @@\n \t    (match_operand:VI4_256_8_512 0 \"register_operand\" \"v\")\n \t    (match_operand:SI 2 \"const1248_operand\" \"n\")]\n \t   UNSPEC_VSIBADDR)])\n-      (match_operand:SI 3 \"const1256_operand\" \"n\")]\n+      (match_operand:SI 3 \"const2356_operand\" \"n\")]\n      UNSPEC_SCATTER_PREFETCH)]\n   \"TARGET_AVX512PF\"\n {\n   switch (INTVAL (operands[3]))\n     {\n-    case 1:\n+    case 3:\n     case 5:\n       return \"vscatterpf0<ssemodesuffix>pd\\t{%4|%4}\";\n     case 2:"}, {"sha": "5967d7ed1e61f0511bfac984f6891e3abf1c16c3", "filename": "gcc/config/i386/xmmintrin.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Fconfig%2Fi386%2Fxmmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Fconfig%2Fi386%2Fxmmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxmmintrin.h?ref=22c8aab31d78e9374b38bb216dce029317312729", "patch": "@@ -54,6 +54,7 @@ typedef float __v4sf __attribute__ ((__vector_size__ (16)));\n enum _mm_hint\n {\n   /* _MM_HINT_ET is _MM_HINT_T with set 3rd bit.  */\n+  _MM_HINT_ET0 = 5,\n   _MM_HINT_ET1 = 6,\n   _MM_HINT_T0 = 3,\n   _MM_HINT_T1 = 2,"}, {"sha": "48e2a1791fe8647915208d44b1a3656d761ec478", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=22c8aab31d78e9374b38bb216dce029317312729", "patch": "@@ -1,3 +1,22 @@\n+2014-02-26  Ilya Tocar  <ilya.tocar@intel.com>\n+\n+\t* common/config/i386/predicates.md (const1256_operand): Remove.\n+\t(const2356_operand): New.\n+\t(const_1_to_2_operand): Remove.\n+\t* config/i386/sse.md (avx512pf_gatherpf<mode>sf): Change hint value.\n+\t(*avx512pf_gatherpf<mode>sf_mask): Ditto.\n+\t(*avx512pf_gatherpf<mode>sf): Ditto.\n+\t(avx512pf_gatherpf<mode>df): Ditto.\n+\t(*avx512pf_gatherpf<mode>df_mask): Ditto.\n+\t(*avx512pf_gatherpf<mode>df): Ditto.\n+\t(avx512pf_scatterpf<mode>sf): Ditto.\n+\t(*avx512pf_scatterpf<mode>sf_mask): Ditto.\n+\t(*avx512pf_scatterpf<mode>sf): Ditto.\n+\t(avx512pf_scatterpf<mode>df): Ditto.\n+\t(*avx512pf_scatterpf<mode>df_mask): Ditto.\n+\t(*avx512pf_scatterpf<mode>df): Ditto.\n+\t* common/config/i386/xmmintrin.h (_mm_hint): Add _MM_HINT_ET0.\n+\n 2014-02-26  Ilya Tocar  <ilya.tocar@intel.com>\n \n \t* gcc.target/i386/avx512cd-vptestnmd-1.c: Change into ..."}, {"sha": "8f28921ca8634ca31a68268842146e03752194c6", "filename": "gcc/testsuite/gcc.target/i386/avx-1.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-1.c?ref=22c8aab31d78e9374b38bb216dce029317312729", "patch": "@@ -358,14 +358,14 @@\n #define __builtin_ia32_rsqrt28sd_round(A, B, C) __builtin_ia32_rsqrt28sd_round(A, B, 8)\n \n /* avx512pfintrin.h */\n-#define __builtin_ia32_gatherpfdps(A, B, C, D, E) __builtin_ia32_gatherpfdps(A, B, C, 1, 1)\n-#define __builtin_ia32_gatherpfqps(A, B, C, D, E) __builtin_ia32_gatherpfqps(A, B, C, 1, 1)\n-#define __builtin_ia32_scatterpfdps(A, B, C, D, E) __builtin_ia32_scatterpfdps(A, B, C, 1, 1)\n-#define __builtin_ia32_scatterpfqps(A, B, C, D, E) __builtin_ia32_scatterpfqps(A, B, C, 1, 1)\n-#define __builtin_ia32_gatherpfdpd(A, B, C, D, E) __builtin_ia32_gatherpfdpd(A, B, C, 1, 1)\n-#define __builtin_ia32_gatherpfqpd(A, B, C, D, E) __builtin_ia32_gatherpfqpd(A, B, C, 1, 1)\n-#define __builtin_ia32_scatterpfdpd(A, B, C, D, E) __builtin_ia32_scatterpfdpd(A, B, C, 1, 1)\n-#define __builtin_ia32_scatterpfqpd(A, B, C, D, E) __builtin_ia32_scatterpfqpd(A, B, C, 1, 1)\n+#define __builtin_ia32_gatherpfdps(A, B, C, D, E) __builtin_ia32_gatherpfdps(A, B, C, 1, _MM_HINT_T0)\n+#define __builtin_ia32_gatherpfqps(A, B, C, D, E) __builtin_ia32_gatherpfqps(A, B, C, 1, _MM_HINT_T0)\n+#define __builtin_ia32_scatterpfdps(A, B, C, D, E) __builtin_ia32_scatterpfdps(A, B, C, 1, _MM_HINT_T0)\n+#define __builtin_ia32_scatterpfqps(A, B, C, D, E) __builtin_ia32_scatterpfqps(A, B, C, 1, _MM_HINT_T0)\n+#define __builtin_ia32_gatherpfdpd(A, B, C, D, E) __builtin_ia32_gatherpfdpd(A, B, C, 1, _MM_HINT_T0)\n+#define __builtin_ia32_gatherpfqpd(A, B, C, D, E) __builtin_ia32_gatherpfqpd(A, B, C, 1, _MM_HINT_T0)\n+#define __builtin_ia32_scatterpfdpd(A, B, C, D, E) __builtin_ia32_scatterpfdpd(A, B, C, 1, _MM_HINT_T0)\n+#define __builtin_ia32_scatterpfqpd(A, B, C, D, E) __builtin_ia32_scatterpfqpd(A, B, C, 1, _MM_HINT_T0)\n \n /* shaintrin.h */\n #define __builtin_ia32_sha1rnds4(A, B, C) __builtin_ia32_sha1rnds4(A, B, 1)"}, {"sha": "9051a1620e0cfa16f4e65d9f382bbb8f85ee7c8f", "filename": "gcc/testsuite/gcc.target/i386/avx512pf-vgatherpf0dpd-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vgatherpf0dpd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vgatherpf0dpd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vgatherpf0dpd-1.c?ref=22c8aab31d78e9374b38bb216dce029317312729", "patch": "@@ -11,5 +11,5 @@ void *base;\n void extern\n avx512pf_test (void)\n {\n-  _mm512_mask_prefetch_i32gather_pd (idx, m8, base, 8, 1);\n+  _mm512_mask_prefetch_i32gather_pd (idx, m8, base, 8, _MM_HINT_T0);\n }"}, {"sha": "bda31d77ba025498cfabac3d34b348aaf27b6ad9", "filename": "gcc/testsuite/gcc.target/i386/avx512pf-vgatherpf0dps-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vgatherpf0dps-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vgatherpf0dps-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vgatherpf0dps-1.c?ref=22c8aab31d78e9374b38bb216dce029317312729", "patch": "@@ -11,5 +11,5 @@ int *base;\n void extern\n avx512pf_test (void)\n {\n-  _mm512_mask_prefetch_i32gather_ps (idx, m16, base, 8, 1);\n+  _mm512_mask_prefetch_i32gather_ps (idx, m16, base, 8, _MM_HINT_T0);\n }"}, {"sha": "34bcecfe2dbc9942ecaafdacacad103c71ad8621", "filename": "gcc/testsuite/gcc.target/i386/avx512pf-vgatherpf0qpd-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vgatherpf0qpd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vgatherpf0qpd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vgatherpf0qpd-1.c?ref=22c8aab31d78e9374b38bb216dce029317312729", "patch": "@@ -11,5 +11,5 @@ int *base;\n void extern\n avx512pf_test (void)\n {\n-  _mm512_mask_prefetch_i64gather_pd (idx, m8, base, 8, 1);\n+  _mm512_mask_prefetch_i64gather_pd (idx, m8, base, 8, _MM_HINT_T0);\n }"}, {"sha": "a9011b0814154a5e7bb60e49e7e366bc0f5dd691", "filename": "gcc/testsuite/gcc.target/i386/avx512pf-vgatherpf0qps-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vgatherpf0qps-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vgatherpf0qps-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vgatherpf0qps-1.c?ref=22c8aab31d78e9374b38bb216dce029317312729", "patch": "@@ -11,5 +11,5 @@ int *base;\n void extern\n avx512pf_test (void)\n {\n-  _mm512_mask_prefetch_i64gather_ps (idx, m8, base, 8, 1);\n+  _mm512_mask_prefetch_i64gather_ps (idx, m8, base, 8, _MM_HINT_T0);\n }"}, {"sha": "a16f4d395e0dc320e109b1ab816e8f86aada00e6", "filename": "gcc/testsuite/gcc.target/i386/avx512pf-vgatherpf1dpd-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vgatherpf1dpd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vgatherpf1dpd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vgatherpf1dpd-1.c?ref=22c8aab31d78e9374b38bb216dce029317312729", "patch": "@@ -11,5 +11,5 @@ int *base;\n void extern\n avx512pf_test (void)\n {\n-  _mm512_mask_prefetch_i32gather_pd (idx, m8, base, 8, 2);\n+  _mm512_mask_prefetch_i32gather_pd (idx, m8, base, 8, _MM_HINT_T1);\n }"}, {"sha": "c43152b01c9e802f398ef1de0cf3a285ae29e646", "filename": "gcc/testsuite/gcc.target/i386/avx512pf-vgatherpf1dps-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vgatherpf1dps-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vgatherpf1dps-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vgatherpf1dps-1.c?ref=22c8aab31d78e9374b38bb216dce029317312729", "patch": "@@ -11,5 +11,5 @@ int *base;\n void extern\n avx512pf_test (void)\n {\n-  _mm512_mask_prefetch_i32gather_ps (idx, m16, base, 8, 2);\n+  _mm512_mask_prefetch_i32gather_ps (idx, m16, base, 8, _MM_HINT_T1);\n }"}, {"sha": "ab9e351667a3105d7404731e8d09ee63efa4b421", "filename": "gcc/testsuite/gcc.target/i386/avx512pf-vgatherpf1qpd-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vgatherpf1qpd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vgatherpf1qpd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vgatherpf1qpd-1.c?ref=22c8aab31d78e9374b38bb216dce029317312729", "patch": "@@ -11,5 +11,5 @@ int *base;\n void extern\n avx512pf_test (void)\n {\n-  _mm512_mask_prefetch_i64gather_pd (idx, m8, base, 8, 2);\n+  _mm512_mask_prefetch_i64gather_pd (idx, m8, base, 8, _MM_HINT_T1);\n }"}, {"sha": "28d7cd666b19025bf6f61dd3eae7e0ef5a754e12", "filename": "gcc/testsuite/gcc.target/i386/avx512pf-vgatherpf1qps-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vgatherpf1qps-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vgatherpf1qps-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vgatherpf1qps-1.c?ref=22c8aab31d78e9374b38bb216dce029317312729", "patch": "@@ -11,5 +11,5 @@ int *base;\n void extern\n avx512pf_test (void)\n {\n-  _mm512_mask_prefetch_i64gather_ps (idx, m8, base, 8, 2);\n+  _mm512_mask_prefetch_i64gather_ps (idx, m8, base, 8, _MM_HINT_T1);\n }"}, {"sha": "14d5c974498953a5426a9b5e21b7a453f30fc95c", "filename": "gcc/testsuite/gcc.target/i386/avx512pf-vscatterpf0dpd-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vscatterpf0dpd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vscatterpf0dpd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vscatterpf0dpd-1.c?ref=22c8aab31d78e9374b38bb216dce029317312729", "patch": "@@ -12,6 +12,6 @@ void *base;\n void extern\n avx512pf_test (void)\n {\n-  _mm512_prefetch_i32scatter_pd (base, idx, 8, 1);\n-  _mm512_mask_prefetch_i32scatter_pd (base, m8, idx, 8, 5);\n+  _mm512_prefetch_i32scatter_pd (base, idx, 8, _MM_HINT_T0);\n+  _mm512_mask_prefetch_i32scatter_pd (base, m8, idx, 8, _MM_HINT_ET0);\n }"}, {"sha": "05f51f2bc805abfec7faea11e1bb18b0ee861dfc", "filename": "gcc/testsuite/gcc.target/i386/avx512pf-vscatterpf0dps-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vscatterpf0dps-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vscatterpf0dps-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vscatterpf0dps-1.c?ref=22c8aab31d78e9374b38bb216dce029317312729", "patch": "@@ -12,6 +12,6 @@ int *base;\n void extern\n avx512pf_test (void)\n {\n-  _mm512_prefetch_i32scatter_ps (base, idx, 8, 1);\n-  _mm512_mask_prefetch_i32scatter_ps (base, m16, idx, 8, 5);\n+  _mm512_prefetch_i32scatter_ps (base, idx, 8, _MM_HINT_T0);\n+  _mm512_mask_prefetch_i32scatter_ps (base, m16, idx, 8, _MM_HINT_ET0);\n }"}, {"sha": "93a65a8c17027e710b50c4d644f1ff3eee0d0d71", "filename": "gcc/testsuite/gcc.target/i386/avx512pf-vscatterpf0qpd-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vscatterpf0qpd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vscatterpf0qpd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vscatterpf0qpd-1.c?ref=22c8aab31d78e9374b38bb216dce029317312729", "patch": "@@ -12,6 +12,6 @@ void *base;\n void extern\n avx512pf_test (void)\n {\n-  _mm512_prefetch_i64scatter_pd (base, idx, 8, 1);\n-  _mm512_mask_prefetch_i64scatter_pd (base, m8, idx, 8, 5);\n+  _mm512_prefetch_i64scatter_pd (base, idx, 8, _MM_HINT_T0);\n+  _mm512_mask_prefetch_i64scatter_pd (base, m8, idx, 8, _MM_HINT_ET0);\n }"}, {"sha": "1f9b97363a38d9efc2b7f99ef1d9975c9733ac71", "filename": "gcc/testsuite/gcc.target/i386/avx512pf-vscatterpf0qps-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vscatterpf0qps-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vscatterpf0qps-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vscatterpf0qps-1.c?ref=22c8aab31d78e9374b38bb216dce029317312729", "patch": "@@ -12,6 +12,6 @@ int *base;\n void extern\n avx512pf_test (void)\n {\n-  _mm512_prefetch_i64scatter_ps (base, idx, 8, 1);\n-  _mm512_mask_prefetch_i64scatter_ps (base, m8, idx, 8, 5);\n+  _mm512_prefetch_i64scatter_ps (base, idx, 8, _MM_HINT_T0);\n+  _mm512_mask_prefetch_i64scatter_ps (base, m8, idx, 8, _MM_HINT_ET0);\n }"}, {"sha": "04c367ca3f0f84db740a717876a4f00955f5b4bb", "filename": "gcc/testsuite/gcc.target/i386/avx512pf-vscatterpf1dpd-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vscatterpf1dpd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vscatterpf1dpd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vscatterpf1dpd-1.c?ref=22c8aab31d78e9374b38bb216dce029317312729", "patch": "@@ -12,6 +12,6 @@ void *base;\n void extern\n avx512pf_test (void)\n {\n-  _mm512_prefetch_i32scatter_pd (base, idx, 8, 2);\n-  _mm512_mask_prefetch_i32scatter_pd (base, m8, idx, 8, 6);\n+  _mm512_prefetch_i32scatter_pd (base, idx, 8, _MM_HINT_T1);\n+  _mm512_mask_prefetch_i32scatter_pd (base, m8, idx, 8, _MM_HINT_ET1);\n }"}, {"sha": "a76b77c635cfbf15eb3b9394bf5b3b1c65c02bef", "filename": "gcc/testsuite/gcc.target/i386/avx512pf-vscatterpf1dps-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vscatterpf1dps-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vscatterpf1dps-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vscatterpf1dps-1.c?ref=22c8aab31d78e9374b38bb216dce029317312729", "patch": "@@ -12,6 +12,6 @@ int *base;\n void extern\n avx512pf_test (void)\n {\n-  _mm512_prefetch_i32scatter_ps (base, idx, 8, 2);\n-  _mm512_mask_prefetch_i32scatter_ps (base, m16, idx, 8, 6);\n+  _mm512_prefetch_i32scatter_ps (base, idx, 8, _MM_HINT_T1);\n+  _mm512_mask_prefetch_i32scatter_ps (base, m16, idx, 8, _MM_HINT_ET1);\n }"}, {"sha": "7a5747cfe5991d129fbb4cb50265d56d3de01ab7", "filename": "gcc/testsuite/gcc.target/i386/avx512pf-vscatterpf1qpd-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vscatterpf1qpd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vscatterpf1qpd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vscatterpf1qpd-1.c?ref=22c8aab31d78e9374b38bb216dce029317312729", "patch": "@@ -12,6 +12,6 @@ int *base;\n void extern\n avx512pf_test (void)\n {\n-  _mm512_prefetch_i64scatter_pd (base, idx, 8, 2);\n-  _mm512_mask_prefetch_i64scatter_pd (base, m8, idx, 8, 6);\n+  _mm512_prefetch_i64scatter_pd (base, idx, 8, _MM_HINT_T1);\n+  _mm512_mask_prefetch_i64scatter_pd (base, m8, idx, 8, _MM_HINT_ET1);\n }"}, {"sha": "d0372b7b3e7ab4a429be291a6880b8fb6459d983", "filename": "gcc/testsuite/gcc.target/i386/avx512pf-vscatterpf1qps-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vscatterpf1qps-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vscatterpf1qps-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512pf-vscatterpf1qps-1.c?ref=22c8aab31d78e9374b38bb216dce029317312729", "patch": "@@ -12,6 +12,6 @@ int *base;\n void extern\n avx512pf_test (void)\n {\n-  _mm512_prefetch_i64scatter_ps (base, idx, 8, 2);\n-  _mm512_mask_prefetch_i64scatter_ps (base, m8, idx, 8, 6);\n+  _mm512_prefetch_i64scatter_ps (base, idx, 8, _MM_HINT_T1);\n+  _mm512_mask_prefetch_i64scatter_ps (base, m8, idx, 8, _MM_HINT_ET1);\n }"}, {"sha": "d9a5feddaeab1c896561a599b37d0e874176dcab", "filename": "gcc/testsuite/gcc.target/i386/sse-14.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c?ref=22c8aab31d78e9374b38bb216dce029317312729", "patch": "@@ -519,14 +519,14 @@ test_4x (_mm_maskz_fixupimm_round_sd, __m128d, __mmask8, __m128d, __m128d, __m12\n test_4x (_mm_maskz_fixupimm_round_ss, __m128, __mmask8, __m128, __m128, __m128i, 1, 8)\n \n /* avx512pfintrin.h */\n-test_3vx (_mm512_mask_prefetch_i32gather_ps, __m512i, __mmask16, void const *, 1, 1)\n-test_3vx (_mm512_mask_prefetch_i32scatter_ps, void const *, __mmask16, __m512i, 1, 1)\n-test_3vx (_mm512_mask_prefetch_i64gather_ps, __m512i, __mmask8, void const *, 1, 1)\n-test_3vx (_mm512_mask_prefetch_i64scatter_ps, void const *, __mmask8, __m512i, 1, 1)\n-test_3vx (_mm512_mask_prefetch_i32gather_pd, __m256i, __mmask8, void const *, 1, 1)\n-test_3vx (_mm512_mask_prefetch_i32scatter_pd, void const *, __mmask8, __m256i, 1, 1)\n-test_3vx (_mm512_mask_prefetch_i64gather_pd, __m512i, __mmask8, void const *, 1, 1)\n-test_3vx (_mm512_mask_prefetch_i64scatter_pd, void const *, __mmask8, __m512i, 1, 1)\n+test_3vx (_mm512_mask_prefetch_i32gather_ps, __m512i, __mmask16, void const *, 1, _MM_HINT_T0)\n+test_3vx (_mm512_mask_prefetch_i32scatter_ps, void const *, __mmask16, __m512i, 1, _MM_HINT_T0)\n+test_3vx (_mm512_mask_prefetch_i64gather_ps, __m512i, __mmask8, void const *, 1, _MM_HINT_T0)\n+test_3vx (_mm512_mask_prefetch_i64scatter_ps, void const *, __mmask8, __m512i, 1, _MM_HINT_T0)\n+test_3vx (_mm512_mask_prefetch_i32gather_pd, __m256i, __mmask8, void const *, 1, _MM_HINT_T0)\n+test_3vx (_mm512_mask_prefetch_i32scatter_pd, void const *, __mmask8, __m256i, 1, _MM_HINT_T0)\n+test_3vx (_mm512_mask_prefetch_i64gather_pd, __m512i, __mmask8, void const *, 1, _MM_HINT_T0)\n+test_3vx (_mm512_mask_prefetch_i64scatter_pd, void const *, __mmask8, __m512i, 1, _MM_HINT_T0)\n \n /* avx512erintrin.h */\n test_1 (_mm512_exp2a23_round_pd, __m512d, __m512d, 8)"}, {"sha": "e9f227a2a81a21453299432a46828f429a5f0528", "filename": "gcc/testsuite/gcc.target/i386/sse-22.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-22.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-22.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-22.c?ref=22c8aab31d78e9374b38bb216dce029317312729", "patch": "@@ -641,15 +641,15 @@ test_4x (_mm_maskz_fixupimm_round_sd, __m128d, __mmask8, __m128d, __m128d, __m12\n test_4x (_mm_maskz_fixupimm_round_ss, __m128, __mmask8, __m128, __m128, __m128i, 1, 8)\n \n /* avx512pfintrin.h */\n-test_3vx (_mm512_mask_prefetch_i32gather_ps, __m512i, __mmask16, void const *, 1, 1)\n-test_3vx (_mm512_mask_prefetch_i32scatter_ps, void const *, __mmask16, __m512i, 1, 1)\n-test_3vx (_mm512_mask_prefetch_i64gather_ps, __m512i, __mmask8, void const *, 1, 1)\n-test_3vx (_mm512_mask_prefetch_i64scatter_ps, void const *, __mmask8, __m512i, 1, 1)\n-\n-test_3vx (_mm512_mask_prefetch_i32gather_pd, __m256i, __mmask8, void const *, 1, 1)\n-test_3vx (_mm512_mask_prefetch_i32scatter_pd, void const *, __mmask8, __m256i, 1, 1)\n-test_3vx (_mm512_mask_prefetch_i64gather_pd, __m512i, __mmask8, long long *, 1, 1)\n-test_3vx (_mm512_mask_prefetch_i64scatter_pd, void const *, __mmask8, __m512i, 1, 1)\n+test_3vx (_mm512_mask_prefetch_i32gather_ps, __m512i, __mmask16, void const *, 1, _MM_HINT_T0)\n+test_3vx (_mm512_mask_prefetch_i32scatter_ps, void const *, __mmask16, __m512i, 1, _MM_HINT_T0)\n+test_3vx (_mm512_mask_prefetch_i64gather_ps, __m512i, __mmask8, void const *, 1, _MM_HINT_T0)\n+test_3vx (_mm512_mask_prefetch_i64scatter_ps, void const *, __mmask8, __m512i, 1, _MM_HINT_T0)\n+\n+test_3vx (_mm512_mask_prefetch_i32gather_pd, __m256i, __mmask8, void const *, 1, _MM_HINT_T0)\n+test_3vx (_mm512_mask_prefetch_i32scatter_pd, void const *, __mmask8, __m256i, 1, _MM_HINT_T0)\n+test_3vx (_mm512_mask_prefetch_i64gather_pd, __m512i, __mmask8, long long *, 1, _MM_HINT_T0)\n+test_3vx (_mm512_mask_prefetch_i64scatter_pd, void const *, __mmask8, __m512i, 1, _MM_HINT_T0)\n \n /* avx512erintrin.h */\n test_1 (_mm512_exp2a23_round_pd, __m512d, __m512d, 8)"}, {"sha": "d227babb8cb5696e5efa06be63130b21829c337c", "filename": "gcc/testsuite/gcc.target/i386/sse-23.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22c8aab31d78e9374b38bb216dce029317312729/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-23.c?ref=22c8aab31d78e9374b38bb216dce029317312729", "patch": "@@ -361,14 +361,14 @@\n #define __builtin_ia32_vpermilps512_mask(A, E, C, D) __builtin_ia32_vpermilps512_mask(A, 1, C, D)\n \n /* avx512pfintrin.h */\n-#define __builtin_ia32_gatherpfdps(A, B, C, D, E) __builtin_ia32_gatherpfdps(A, B, C, 1, 1)\n-#define __builtin_ia32_gatherpfqps(A, B, C, D, E) __builtin_ia32_gatherpfqps(A, B, C, 1, 1)\n-#define __builtin_ia32_scatterpfdps(A, B, C, D, E) __builtin_ia32_scatterpfdps(A, B, C, 1, 1)\n-#define __builtin_ia32_scatterpfqps(A, B, C, D, E) __builtin_ia32_scatterpfqps(A, B, C, 1, 1)\n-#define __builtin_ia32_gatherpfdpd(A, B, C, D, E) __builtin_ia32_gatherpfdpd(A, B, C, 1, 1)\n-#define __builtin_ia32_gatherpfqpd(A, B, C, D, E) __builtin_ia32_gatherpfqpd(A, B, C, 1, 1)\n-#define __builtin_ia32_scatterpfdpd(A, B, C, D, E) __builtin_ia32_scatterpfdpd(A, B, C, 1, 1)\n-#define __builtin_ia32_scatterpfqpd(A, B, C, D, E) __builtin_ia32_scatterpfqpd(A, B, C, 1, 1)\n+#define __builtin_ia32_gatherpfdps(A, B, C, D, E) __builtin_ia32_gatherpfdps(A, B, C, 1, _MM_HINT_T0)\n+#define __builtin_ia32_gatherpfqps(A, B, C, D, E) __builtin_ia32_gatherpfqps(A, B, C, 1, _MM_HINT_T0)\n+#define __builtin_ia32_scatterpfdps(A, B, C, D, E) __builtin_ia32_scatterpfdps(A, B, C, 1, _MM_HINT_T0)\n+#define __builtin_ia32_scatterpfqps(A, B, C, D, E) __builtin_ia32_scatterpfqps(A, B, C, 1, _MM_HINT_T0)\n+#define __builtin_ia32_gatherpfdpd(A, B, C, D, E) __builtin_ia32_gatherpfdpd(A, B, C, 1, _MM_HINT_T0)\n+#define __builtin_ia32_gatherpfqpd(A, B, C, D, E) __builtin_ia32_gatherpfqpd(A, B, C, 1, _MM_HINT_T0)\n+#define __builtin_ia32_scatterpfdpd(A, B, C, D, E) __builtin_ia32_scatterpfdpd(A, B, C, 1, _MM_HINT_T0)\n+#define __builtin_ia32_scatterpfqpd(A, B, C, D, E) __builtin_ia32_scatterpfqpd(A, B, C, 1, _MM_HINT_T0)\n \n /* avx512erintrin.h */\n #define __builtin_ia32_exp2pd_mask(A, B, C, D) __builtin_ia32_exp2pd_mask (A, B, C, 8)"}]}