{"sha": "cd42cdc225a905cb1eb38dfad453e654261a659e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q0MmNkYzIyNWE5MDVjYjFlYjM4ZGZhZDQ1M2U2NTQyNjFhNjU5ZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2020-06-23T15:44:43Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2020-06-23T16:35:46Z"}, "message": "Minor cleanup in elaborate_expression\n\ngcc/ada/ChangeLog:\n\t* gcc-interface/decl.c (elaborate_expression): Replace calls to\n\tIs_OK_Static_Expression with Compile_Time_Known_Value.", "tree": {"sha": "f2cb099eefd418438d22cb1c1da6b128451dc518", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2cb099eefd418438d22cb1c1da6b128451dc518"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd42cdc225a905cb1eb38dfad453e654261a659e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd42cdc225a905cb1eb38dfad453e654261a659e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd42cdc225a905cb1eb38dfad453e654261a659e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd42cdc225a905cb1eb38dfad453e654261a659e/comments", "author": null, "committer": null, "parents": [{"sha": "fa0588dbec38b46d88f46229e2f2b94d16ab09ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa0588dbec38b46d88f46229e2f2b94d16ab09ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa0588dbec38b46d88f46229e2f2b94d16ab09ba"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "63118bee930d072d7a016f5fa8c204899d9d839f", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd42cdc225a905cb1eb38dfad453e654261a659e/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd42cdc225a905cb1eb38dfad453e654261a659e/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=cd42cdc225a905cb1eb38dfad453e654261a659e", "patch": "@@ -6774,13 +6774,13 @@ elaborate_expression (Node_Id gnat_expr, Entity_Id gnat_entity, const char *s,\n   /* If we don't need a value and this is static or a discriminant,\n      we don't need to do anything.  */\n   if (!need_value\n-      && (Is_OK_Static_Expression (gnat_expr)\n+      && (Compile_Time_Known_Value (gnat_expr)\n \t  || (Nkind (gnat_expr) == N_Identifier\n \t      && Ekind (Entity (gnat_expr)) == E_Discriminant)))\n     return NULL_TREE;\n \n   /* If it's a static expression, we don't need a variable for debugging.  */\n-  if (need_debug && Is_OK_Static_Expression (gnat_expr))\n+  if (need_debug && Compile_Time_Known_Value (gnat_expr))\n     need_debug = false;\n \n   /* Otherwise, convert this tree to its GCC equivalent and elaborate it.  */"}]}