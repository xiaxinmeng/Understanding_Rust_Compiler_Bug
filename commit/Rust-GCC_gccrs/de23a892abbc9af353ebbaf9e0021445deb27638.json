{"sha": "de23a892abbc9af353ebbaf9e0021445deb27638", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGUyM2E4OTJhYmJjOWFmMzUzZWJiYWY5ZTAwMjE0NDVkZWIyNzYzOA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-12-24T20:24:16Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-12-24T20:24:16Z"}, "message": "toplev.h (note_deferall_of_defined_inline_function): Declare.\n\n\t* toplev.h (note_deferall_of_defined_inline_function): Declare.\n\t* toplev.c (note_deferral_of_defined_inline_function): New\n\tfunction, split out from ...\n\t(rest_of_compilation): ... here.  Use it.\n\n\t* semantics.c (expand_body): Use\n\tnote_deferral_of_defined_inline_function.\n\nFrom-SVN: r31088", "tree": {"sha": "3d273b67279f2daebabe8587668ca4ef7df11f20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d273b67279f2daebabe8587668ca4ef7df11f20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de23a892abbc9af353ebbaf9e0021445deb27638", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de23a892abbc9af353ebbaf9e0021445deb27638", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de23a892abbc9af353ebbaf9e0021445deb27638", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de23a892abbc9af353ebbaf9e0021445deb27638/comments", "author": null, "committer": null, "parents": [{"sha": "9376fcd631f21656c9544b5a9355f31618b2d63a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9376fcd631f21656c9544b5a9355f31618b2d63a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9376fcd631f21656c9544b5a9355f31618b2d63a"}], "stats": {"total": 63, "additions": 52, "deletions": 11}, "files": [{"sha": "9957580ea309ae55052a3c97f080c23ed8966321", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de23a892abbc9af353ebbaf9e0021445deb27638/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de23a892abbc9af353ebbaf9e0021445deb27638/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=de23a892abbc9af353ebbaf9e0021445deb27638", "patch": "@@ -1,3 +1,10 @@\n+1999-12-24  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* toplev.h (note_deferall_of_defined_inline_function): Declare.\n+\t* toplev.c (note_deferral_of_defined_inline_function): New\n+\tfunction, split out from ...\n+\t(rest_of_compilation): ... here.  Use it.\n+\t\n Fri Dec 24 12:34:26 1999  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* expr.c (store_constructor): Don't call clear_storage if size is"}, {"sha": "f8936b6ed8dd5bdee2fbfd4e017e1dc49c2bc4d2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de23a892abbc9af353ebbaf9e0021445deb27638/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de23a892abbc9af353ebbaf9e0021445deb27638/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=de23a892abbc9af353ebbaf9e0021445deb27638", "patch": "@@ -1,3 +1,8 @@\n+1999-12-24  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* semantics.c (expand_body): Use\n+\tnote_deferral_of_defined_inline_function.\n+\n 1999-12-22  Mark Mitchell  <mark@codesourcery.com>\n \n \t* dump.c (dequeue_and_dump): Handle CTOR_STMTs."}, {"sha": "d55ee152b86a2bfbd97a984c2f1d851c54c02c6a", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de23a892abbc9af353ebbaf9e0021445deb27638/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de23a892abbc9af353ebbaf9e0021445deb27638/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=de23a892abbc9af353ebbaf9e0021445deb27638", "patch": "@@ -2694,6 +2694,8 @@ expand_body (fn)\n       /* Remember this function.  In finish_file we'll decide if\n \t we actually need to write this function out.  */\n       mark_inline_for_output (fn);\n+      /* Let the back-end know that this funtion exists.  */\n+      note_deferral_of_defined_inline_function (fn);\n       return;\n     }\n "}, {"sha": "2c0ffa2e7fc6f6fa6335ceb8a3acfdfa687a68fd", "filename": "gcc/toplev.c", "status": "modified", "additions": 37, "deletions": 11, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de23a892abbc9af353ebbaf9e0021445deb27638/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de23a892abbc9af353ebbaf9e0021445deb27638/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=de23a892abbc9af353ebbaf9e0021445deb27638", "patch": "@@ -2729,6 +2729,42 @@ rest_of_type_compilation (type, toplev)\n #endif\n }\n \n+/* DECL is an inline function, whose body is present, but which is not\n+   being output at this point.  (We're putting that off until we need\n+   to do it.)  If there are any actions that need to take place,\n+   including the emission of debugging information for the function,\n+   this is where they should go.  This function may be called by\n+   language-dependent code for front-ends that do not even generate\n+   RTL for functions that don't need to be put out.  */\n+\n+void\n+note_deferral_of_defined_inline_function (decl)\n+     tree decl;\n+{\n+#ifdef DWARF_DEBUGGING_INFO\n+  /* Generate the DWARF info for the \"abstract\" instance of a function\n+     which we may later generate inlined and/or out-of-line instances\n+     of.  */\n+  if (write_symbols == DWARF_DEBUG)\n+    {\n+      /* The front-end may not have set CURRENT_FUNCTION_DECL, but the\n+\t DWARF code expects it to be set in this case.  Intuitively,\n+\t DECL is the function we just finished defining, so setting\n+\t CURRENT_FUNCTION_DECL is sensible.  */\n+      tree saved_cfd = current_function_decl;\n+      current_function_decl = decl;\n+\n+      /* Let the DWARF code do its work.  */\n+      set_decl_abstract_flags (decl, 1);\n+      dwarfout_file_scope_decl (decl, 0);\n+      set_decl_abstract_flags (decl, 0);\n+\n+      /* Reset CURRENT_FUNCTION_DECL.  */\n+      current_function_decl = saved_cfd;\n+    }\n+#endif\n+}\n+\n /* This is called from finish_function (within yyparse)\n    after each top-level definition is parsed.\n    It is supposed to compile that function or variable\n@@ -2857,17 +2893,7 @@ rest_of_compilation (decl)\n \t      optimize = saved_optimize;\n \t    }\n \n-#ifdef DWARF_DEBUGGING_INFO\n-\t  /* Generate the DWARF info for the \"abstract\" instance\n-\t     of a function which we may later generate inlined and/or\n-\t     out-of-line instances of.  */\n-\t  if (write_symbols == DWARF_DEBUG)\n-\t    {\n-\t      set_decl_abstract_flags (decl, 1);\n-\t      TIMEVAR (symout_time, dwarfout_file_scope_decl (decl, 0));\n-\t      set_decl_abstract_flags (decl, 0);\n-\t    }\n-#endif\n+\t  note_deferral_of_defined_inline_function (decl);\n \t  TIMEVAR (integration_time, save_for_inline_nocopy (decl));\n \t  DECL_SAVED_INSNS (decl)->inlinable = inlinable;\n \t  goto exit_rest_of_compilation;"}, {"sha": "6fb9f700af03f0ab6f1cc2fc61646361f255e293", "filename": "gcc/toplev.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de23a892abbc9af353ebbaf9e0021445deb27638/gcc%2Ftoplev.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de23a892abbc9af353ebbaf9e0021445deb27638/gcc%2Ftoplev.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.h?ref=de23a892abbc9af353ebbaf9e0021445deb27638", "patch": "@@ -127,6 +127,7 @@ extern void fnotice\t\t\tPROTO ((FILE *, const char *, ...))\n \n extern int wrapup_global_declarations   PROTO ((union tree_node **, int));\n extern void check_global_declarations   PROTO ((union tree_node **, int));\n+extern void note_deferral_of_defined_inline_function PROTO ((union tree_node *));\n extern int errorcount;\n extern int warningcount;\n extern int sorrycount;"}]}