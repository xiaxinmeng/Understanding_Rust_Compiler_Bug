{"sha": "b51fb28ed294cdf19087ca9d9ad107c9c52bec42", "node_id": "C_kwDOANBUbNoAKGI1MWZiMjhlZDI5NGNkZjE5MDg3Y2E5ZDlhZDEwN2M5YzUyYmVjNDI", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2022-01-23T20:55:33Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2022-01-27T19:37:02Z"}, "message": "Fortran: fix issues with internal conversion between default and wide char\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/104128\n\t* expr.cc (gfc_copy_expr): Convert internal representation of\n\tstring to wide char in value only for default character kind.\n\t* target-memory.cc (interpret_array): Pass flag for conversion of\n\twide chars.\n\t(gfc_target_interpret_expr): Likewise.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/104128\n\t* gfortran.dg/transfer_simplify_14.f90: New test.", "tree": {"sha": "9adae9321156b5bccb8c7b1e8508b8d04dc912d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9adae9321156b5bccb8c7b1e8508b8d04dc912d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b51fb28ed294cdf19087ca9d9ad107c9c52bec42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b51fb28ed294cdf19087ca9d9ad107c9c52bec42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b51fb28ed294cdf19087ca9d9ad107c9c52bec42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b51fb28ed294cdf19087ca9d9ad107c9c52bec42/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd59d5d4a2ef8a97541a22399480bc1f8e82ceca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd59d5d4a2ef8a97541a22399480bc1f8e82ceca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd59d5d4a2ef8a97541a22399480bc1f8e82ceca"}], "stats": {"total": 37, "additions": 33, "deletions": 4}, "files": [{"sha": "ed82a94022f2f3bbe6a2a3dae32341dcf7d8d564", "filename": "gcc/fortran/expr.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b51fb28ed294cdf19087ca9d9ad107c9c52bec42/gcc%2Ffortran%2Fexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b51fb28ed294cdf19087ca9d9ad107c9c52bec42/gcc%2Ffortran%2Fexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.cc?ref=b51fb28ed294cdf19087ca9d9ad107c9c52bec42", "patch": "@@ -312,7 +312,8 @@ gfc_copy_expr (gfc_expr *p)\n \t  break;\n \n \tcase BT_CHARACTER:\n-\t  if (p->representation.string)\n+\t  if (p->representation.string\n+\t      && p->ts.kind == gfc_default_character_kind)\n \t    q->value.character.string\n \t      = gfc_char_to_widechar (q->representation.string);\n \t  else"}, {"sha": "7ce7d736629265798ceed7e0db093bda8e49dc5b", "filename": "gcc/fortran/target-memory.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b51fb28ed294cdf19087ca9d9ad107c9c52bec42/gcc%2Ffortran%2Ftarget-memory.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b51fb28ed294cdf19087ca9d9ad107c9c52bec42/gcc%2Ffortran%2Ftarget-memory.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftarget-memory.cc?ref=b51fb28ed294cdf19087ca9d9ad107c9c52bec42", "patch": "@@ -365,7 +365,8 @@ gfc_target_encode_expr (gfc_expr *source, unsigned char *buffer,\n \n \n static size_t\n-interpret_array (unsigned char *buffer, size_t buffer_size, gfc_expr *result)\n+interpret_array (unsigned char *buffer, size_t buffer_size, gfc_expr *result,\n+\t\t bool convert_widechar)\n {\n   gfc_constructor_base base = NULL;\n   size_t array_size = 1;\n@@ -390,7 +391,7 @@ interpret_array (unsigned char *buffer, size_t buffer_size, gfc_expr *result)\n       gfc_constructor_append_expr (&base, e, &result->where);\n \n       ptr += gfc_target_interpret_expr (&buffer[ptr], buffer_size - ptr, e,\n-\t\t\t\t\ttrue);\n+\t\t\t\t\tconvert_widechar);\n     }\n \n   result->value.constructor = base;\n@@ -580,7 +581,7 @@ gfc_target_interpret_expr (unsigned char *buffer, size_t buffer_size,\n \t\t\t   gfc_expr *result, bool convert_widechar)\n {\n   if (result->expr_type == EXPR_ARRAY)\n-    return interpret_array (buffer, buffer_size, result);\n+    return interpret_array (buffer, buffer_size, result, convert_widechar);\n \n   switch (result->ts.type)\n     {"}, {"sha": "dfb997d81b2dd52e5e3786abbbe4c8d82aa54c3b", "filename": "gcc/testsuite/gfortran.dg/transfer_simplify_14.f90", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b51fb28ed294cdf19087ca9d9ad107c9c52bec42/gcc%2Ftestsuite%2Fgfortran.dg%2Ftransfer_simplify_14.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b51fb28ed294cdf19087ca9d9ad107c9c52bec42/gcc%2Ftestsuite%2Fgfortran.dg%2Ftransfer_simplify_14.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftransfer_simplify_14.f90?ref=b51fb28ed294cdf19087ca9d9ad107c9c52bec42", "patch": "@@ -0,0 +1,27 @@\n+! { dg-do compile }\n+! { dg-options \"-fdump-tree-original\" }\n+! PR fortran/104128 - ICE in gfc_widechar_to_char\n+! Contributed by G.Steinmetz\n+\n+program p\n+  implicit none\n+  integer,      parameter :: k = 4\n+  character(*), parameter :: a = 'abc'\n+  character(*,kind=4), parameter :: b = 'abc'\n+  character(2,kind=k), parameter :: s = k_\"FG\"\n+  character(*,kind=1), parameter :: x = transfer (s, 'abcdefgh')\n+  character(2,kind=k), parameter :: t = transfer (x, s)\n+  character(2,kind=k)            :: u = transfer (x, s)\n+  logical,             parameter :: l = (s == t)\n+  print *, transfer (a , 4_'xy', size=2)\n+  print *, transfer ('xyz', [b], size=2)\n+  print *, s\n+  print *, t\n+  print *, u\n+  if (.not. l) stop 1\n+  if (t /= s)  stop 2\n+  if (u /= s)  stop 3  ! not optimized away\n+end\n+\n+! { dg-final { scan-tree-dump-times \"_gfortran_stop_numeric\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump \"_gfortran_stop_numeric \\\\(3, 0\\\\);\" \"original\" } }"}]}