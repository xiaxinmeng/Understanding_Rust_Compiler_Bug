{"sha": "27d21d328389e03341ad91b06d5ed7ce2164ffd8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdkMjFkMzI4Mzg5ZTAzMzQxYWQ5MWIwNmQ1ZWQ3Y2UyMTY0ZmZkOA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-26T02:43:09Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-26T02:43:09Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1288", "tree": {"sha": "ca646ce6490faff02be1f52ef8ff203aa12bd201", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca646ce6490faff02be1f52ef8ff203aa12bd201"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27d21d328389e03341ad91b06d5ed7ce2164ffd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27d21d328389e03341ad91b06d5ed7ce2164ffd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27d21d328389e03341ad91b06d5ed7ce2164ffd8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27d21d328389e03341ad91b06d5ed7ce2164ffd8/comments", "author": null, "committer": null, "parents": [{"sha": "667cc897763be84ea9fa8c9c647408ac5d581d44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/667cc897763be84ea9fa8c9c647408ac5d581d44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/667cc897763be84ea9fa8c9c647408ac5d581d44"}], "stats": {"total": 23, "additions": 8, "deletions": 15}, "files": [{"sha": "4436c3128302f7f00d01dc3ded4d062de75a4268", "filename": "gcc/dbxout.c", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d21d328389e03341ad91b06d5ed7ce2164ffd8/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d21d328389e03341ad91b06d5ed7ce2164ffd8/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=27d21d328389e03341ad91b06d5ed7ce2164ffd8", "patch": "@@ -1402,16 +1402,6 @@ dbxout_symbol (decl, local)\n \t    fprintf (asmfile, \"%s \\\"%s:\", ASM_STABS_OP,\n \t\t     IDENTIFIER_POINTER (DECL_NAME (decl)));\n \n-/* #ifndef DBX_NO_EXTRA_TAGS   rms: I think this is no longer needed.  */\n-\t    /* This section makes absolutely no sense to me. Why would a tag\n-\t       ever be needed at this point? The result of this is that any\n-\t       structure typedef with the tag omitted is treated as if the\n-\t       tag was given to be the same as the typedef name. Probably\n-\t       no harm in it, unless the programmer used the same name for\n-\t       the tag of a *different* structure. At any rate, Alliant's\n-\t       debugger would want the tag output before the typedef, so\n-\t       this code still loses.  -- hyc */\n-\n \t    /* Short cut way to output a tag also.  */\n \t    if ((TREE_CODE (type) == RECORD_TYPE\n \t\t || TREE_CODE (type) == UNION_TYPE)\n@@ -1427,7 +1417,6 @@ dbxout_symbol (decl, local)\n \t\t  tag_needed = 1;\n #endif\n \t      }\n-/* #endif */\n \n \t    putc ('t', asmfile);\n \t    current_sym_code = DBX_TYPE_DECL_STABS_CODE;"}, {"sha": "632960a614f761452ebe86f2642085d64cfae60f", "filename": "gcc/ginclude/va-i860.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d21d328389e03341ad91b06d5ed7ce2164ffd8/gcc%2Fginclude%2Fva-i860.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d21d328389e03341ad91b06d5ed7ce2164ffd8/gcc%2Fginclude%2Fva-i860.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fva-i860.h?ref=27d21d328389e03341ad91b06d5ed7ce2164ffd8", "patch": "@@ -31,7 +31,7 @@ typedef union {\n } __f_regs;\n \n typedef struct {\n-#ifdef __SVR4__\n+#if defined(__SVR4__) || defined(__alliant__)\n   __f_regs __float_regs; long __ireg[12];\n #else /* pre-SVR4 */\n   long __ireg[12]; __f_regs __float_regs;\n@@ -43,7 +43,7 @@ typedef struct {\n #define __GNU_VA_LIST\t/* Field names were properly prefixed with `__'.  */\n \n typedef struct {\n-#ifdef __SVR4__\n+#if defined(__SVR4__) || defined(__alliant__)\n   unsigned\t__ireg_used;\t/* How many int regs consumed 'til now? */\n   unsigned\t__freg_used;\t/* How many flt regs consumed 'til now? */\n   long\t\t*__reg_base;\t/* Address of where we stored the regs. */"}, {"sha": "8d5ad4ac75655a7659a0ab2cb88e94214a90a8bd", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d21d328389e03341ad91b06d5ed7ce2164ffd8/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d21d328389e03341ad91b06d5ed7ce2164ffd8/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=27d21d328389e03341ad91b06d5ed7ce2164ffd8", "patch": "@@ -764,13 +764,17 @@ __fixunssfsi (float a)\n \f\n #ifdef L_varargs\n #ifdef __i860__\n-#ifdef SVR4\n+#if defined(SVR4) || defined(__alliant__)\n \tasm (\"\t.text\");\n \tasm (\"\t.align\t4\");\n \n+/* The Alliant needs the added underscore.  */\n \tasm (\".globl\t__builtin_saveregs\");\n asm (\"__builtin_saveregs:\");\n-\tasm (\"\tandnot\t0x0f,%sp,%sp\");\t/* round down to 16-byte boundary */\n+\tasm (\".globl\t___builtin_saveregs\");\n+asm (\"___builtin_saveregs:\");\n+\n+        asm (\"\tandnot\t0x0f,%sp,%sp\");\t/* round down to 16-byte boundary */\n \tasm (\"\tadds\t-96,%sp,%sp\");  /* allocate stack space for reg save\n \t\t\t\t\t   area and also for a new va_list\n \t\t\t\t\t   structure */"}]}