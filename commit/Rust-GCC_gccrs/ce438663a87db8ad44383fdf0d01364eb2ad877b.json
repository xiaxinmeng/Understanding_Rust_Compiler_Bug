{"sha": "ce438663a87db8ad44383fdf0d01364eb2ad877b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U0Mzg2NjNhODdkYjhhZDQ0MzgzZmRmMGQwMTM2NGViMmFkODc3Yg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2011-09-26T09:49:02Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-09-26T09:49:02Z"}, "message": "ifcvt.c (noce_try_cmove_arith): Use may_trap_or_fault_p in lieu of may_trap_p to detect loads that may trap of...\n\n\t* ifcvt.c (noce_try_cmove_arith): Use may_trap_or_fault_p in lieu of\n\tmay_trap_p to detect loads that may trap of fault.\n\nFrom-SVN: r179188", "tree": {"sha": "505b41ce5be5acc9f8e68844de274b816039d527", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/505b41ce5be5acc9f8e68844de274b816039d527"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce438663a87db8ad44383fdf0d01364eb2ad877b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce438663a87db8ad44383fdf0d01364eb2ad877b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce438663a87db8ad44383fdf0d01364eb2ad877b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce438663a87db8ad44383fdf0d01364eb2ad877b/comments", "author": null, "committer": null, "parents": [{"sha": "bdbebf669ee8257685c2b6d1c501e899cd20bbea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdbebf669ee8257685c2b6d1c501e899cd20bbea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdbebf669ee8257685c2b6d1c501e899cd20bbea"}], "stats": {"total": 57, "additions": 55, "deletions": 2}, "files": [{"sha": "1e68d986d0cba2615d97662610ff908c7e324512", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce438663a87db8ad44383fdf0d01364eb2ad877b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce438663a87db8ad44383fdf0d01364eb2ad877b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce438663a87db8ad44383fdf0d01364eb2ad877b", "patch": "@@ -1,3 +1,8 @@\n+2011-09-26  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* ifcvt.c (noce_try_cmove_arith): Use may_trap_or_fault_p in lieu of\n+\tmay_trap_p to detect loads that may trap of fault.\n+\n 2011-09-26  Georg-Johann Lay  <avr@gjlay.de>\n \n \t* config/avr/avr-protos.h (output_reload_inhi): Change prototype."}, {"sha": "0476a8ab0460bed441be4b5285cf13ef65db7710", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce438663a87db8ad44383fdf0d01364eb2ad877b/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce438663a87db8ad44383fdf0d01364eb2ad877b/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=ce438663a87db8ad44383fdf0d01364eb2ad877b", "patch": "@@ -1519,9 +1519,9 @@ noce_try_cmove_arith (struct noce_if_info *if_info)\n     }\n \n   /* ??? We could handle this if we knew that a load from A or B could\n-     not fault.  This is also true if we've already loaded\n+     not trap or fault.  This is also true if we've already loaded\n      from the address along the path from ENTRY.  */\n-  else if (may_trap_p (a) || may_trap_p (b))\n+  else if (may_trap_or_fault_p (a) || may_trap_or_fault_p (b))\n     return FALSE;\n \n   /* if (test) x = a + b; else x = c - d;"}, {"sha": "2546ce138a9fb131a746476dc312b0992283f550", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce438663a87db8ad44383fdf0d01364eb2ad877b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce438663a87db8ad44383fdf0d01364eb2ad877b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ce438663a87db8ad44383fdf0d01364eb2ad877b", "patch": "@@ -1,3 +1,8 @@\n+2011-09-26  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/opt21.adb: New test.\n+\t* gnat.dg/opt21_pkg.ad[sb]: New helper.\n+\n 2011-09-26  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/opt20.ad[sb]: New test."}, {"sha": "c73fe9f228fb8fb85e9080bc368480efcff73859", "filename": "gcc/testsuite/gnat.dg/opt21.adb", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce438663a87db8ad44383fdf0d01364eb2ad877b/gcc%2Ftestsuite%2Fgnat.dg%2Fopt21.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce438663a87db8ad44383fdf0d01364eb2ad877b/gcc%2Ftestsuite%2Fgnat.dg%2Fopt21.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt21.adb?ref=ce438663a87db8ad44383fdf0d01364eb2ad877b", "patch": "@@ -0,0 +1,11 @@\n+-- { dg-do run }\n+-- { dg-options \"-O2\" }\n+\n+with System;\n+with Opt21_Pkg; use Opt21_Pkg;\n+\n+procedure Opt21 is\n+   V : System.Address := Convert (null);\n+begin\n+   null;\n+end;"}, {"sha": "3c87321dbffe53b3ab5876a138468d8ec8cfdec7", "filename": "gcc/testsuite/gnat.dg/opt21_pkg.adb", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce438663a87db8ad44383fdf0d01364eb2ad877b/gcc%2Ftestsuite%2Fgnat.dg%2Fopt21_pkg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce438663a87db8ad44383fdf0d01364eb2ad877b/gcc%2Ftestsuite%2Fgnat.dg%2Fopt21_pkg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt21_pkg.adb?ref=ce438663a87db8ad44383fdf0d01364eb2ad877b", "patch": "@@ -0,0 +1,17 @@\n+package body Opt21_Pkg is\n+\n+   function Get_Object (Object : not null access R) return System.Address is\n+   begin\n+      return Object.Ptr;\n+   end;\n+\n+   function Convert (W : Obj) return System.Address is\n+   begin\n+      if W = null then\n+         return System.Null_Address;\n+      else\n+         return Get_Object (W);\n+      end if;\n+   end;\n+\n+end Opt21_Pkg;"}, {"sha": "251bf847748961ffe760378bc25baf4e73bc9fa3", "filename": "gcc/testsuite/gnat.dg/opt21_pkg.ads", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce438663a87db8ad44383fdf0d01364eb2ad877b/gcc%2Ftestsuite%2Fgnat.dg%2Fopt21_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce438663a87db8ad44383fdf0d01364eb2ad877b/gcc%2Ftestsuite%2Fgnat.dg%2Fopt21_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt21_pkg.ads?ref=ce438663a87db8ad44383fdf0d01364eb2ad877b", "patch": "@@ -0,0 +1,15 @@\n+with System;\n+\n+package Opt21_Pkg is\n+\n+   type R is record\n+      Ptr : System.Address := System.Null_Address;\n+   end record;\n+\n+   type Obj is access all R;\n+\n+   function Get_Object (Object : not null access R) return System.Address;\n+\n+   function Convert (W : Obj) return System.Address;\n+\n+end Opt21_Pkg;"}]}