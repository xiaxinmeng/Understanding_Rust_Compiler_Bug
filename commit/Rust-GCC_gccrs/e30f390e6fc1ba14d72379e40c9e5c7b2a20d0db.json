{"sha": "e30f390e6fc1ba14d72379e40c9e5c7b2a20d0db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTMwZjM5MGU2ZmMxYmExNGQ3MjM3OWU0MGM5ZTVjN2IyYTIwZDBkYg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-08-18T06:23:25Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-08-18T06:23:25Z"}, "message": "* pa.h (EXTRA_CONSTRAINT): Delete unused 'S' constraint.\n\nFrom-SVN: r5171", "tree": {"sha": "e83043ba99f7ea6ac5986ee96257c71f7c199c8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e83043ba99f7ea6ac5986ee96257c71f7c199c8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e30f390e6fc1ba14d72379e40c9e5c7b2a20d0db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e30f390e6fc1ba14d72379e40c9e5c7b2a20d0db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e30f390e6fc1ba14d72379e40c9e5c7b2a20d0db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e30f390e6fc1ba14d72379e40c9e5c7b2a20d0db/comments", "author": null, "committer": null, "parents": [{"sha": "9ec9ad579896de301d5a2d1fa0949cf5a83d4cef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ec9ad579896de301d5a2d1fa0949cf5a83d4cef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ec9ad579896de301d5a2d1fa0949cf5a83d4cef"}], "stats": {"total": 12, "additions": 2, "deletions": 10}, "files": [{"sha": "7140868e32a411a1b0dd3140817d74a45e1d2633", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e30f390e6fc1ba14d72379e40c9e5c7b2a20d0db/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e30f390e6fc1ba14d72379e40c9e5c7b2a20d0db/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=e30f390e6fc1ba14d72379e40c9e5c7b2a20d0db", "patch": "@@ -1130,7 +1130,7 @@ extern union tree_node *current_function_decl;\n \n    `R' is unused.\n \n-   `S' handles constraints for calls.\n+   `S' is unused.\n \n    `T' is for fp loads and stores.  */\n #define EXTRA_CONSTRAINT(OP, C)\t\t\t\t\\\n@@ -1145,15 +1145,7 @@ extern union tree_node *current_function_decl;\n       (GET_CODE (OP) == MEM\t\t\t\t\\\n        /* Using DFmode forces only short displacements\t\\\n \t  to be recognized as valid in reg+d addresses.  */\\\n-       && memory_address_p (DFmode, XEXP (OP, 0)))\t\\\n-   : ((C) == 'S' ?\t\t\t\t\t\\\n-      ((CONSTANT_P (OP) && ! TARGET_LONG_CALLS)\t\t\\\n-        || (reload_in_progress \t\t\t\t\\\n-\t    ? strict_memory_address_p (Pmode, OP)\t\\\n-\t    : memory_address_p (Pmode, OP))\t\t\\\n-\t|| (reload_in_progress\t\t\t\t\\\n-\t    && GET_CODE (OP) == REG\t\t\t\\\n-\t    && reg_renumber[REGNO (OP)] > 0)) : 0)))\n+       && memory_address_p (DFmode, XEXP (OP, 0))) : 0))\n \n /* The macros REG_OK_FOR..._P assume that the arg is a REG rtx\n    and check its validity for a certain class."}]}