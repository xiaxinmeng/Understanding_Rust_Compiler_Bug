{"sha": "741e7594bec656ff6a5bc2e7e83655e86880e868", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQxZTc1OTRiZWM2NTZmZjZhNWJjMmU3ZTgzNjU1ZTg2ODgwZTg2OA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-10-18T10:00:18Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-10-18T10:00:18Z"}, "message": "re PR libstdc++/33807 (Incorrect ambiguous overload)\n\n2007-10-18  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/33807\n\t* include/bits/allocator.h (operator==(const allocator<_Tp>&,\n\tconst allocator<_Tp>&), operator!=(const allocator<_Tp>&,\n\tconst allocator<_Tp>&)): Add.\n\t* testsuite/20_util/allocator/33807.cc: New.\n\nFrom-SVN: r129434", "tree": {"sha": "1aab13107ddfb27c9b6dbc6dcdd400f3e4724a30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1aab13107ddfb27c9b6dbc6dcdd400f3e4724a30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/741e7594bec656ff6a5bc2e7e83655e86880e868", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/741e7594bec656ff6a5bc2e7e83655e86880e868", "html_url": "https://github.com/Rust-GCC/gccrs/commit/741e7594bec656ff6a5bc2e7e83655e86880e868", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/741e7594bec656ff6a5bc2e7e83655e86880e868/comments", "author": null, "committer": null, "parents": [{"sha": "254f522229578af1af093b2e4b6f1a0cc400d216", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/254f522229578af1af093b2e4b6f1a0cc400d216", "html_url": "https://github.com/Rust-GCC/gccrs/commit/254f522229578af1af093b2e4b6f1a0cc400d216"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "7fb26d327d8b57b11d8827c90ac9d97aa98c7e64", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/741e7594bec656ff6a5bc2e7e83655e86880e868/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/741e7594bec656ff6a5bc2e7e83655e86880e868/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=741e7594bec656ff6a5bc2e7e83655e86880e868", "patch": "@@ -1,3 +1,11 @@\n+2007-10-18  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/33807\n+\t* include/bits/allocator.h (operator==(const allocator<_Tp>&,\n+\tconst allocator<_Tp>&), operator!=(const allocator<_Tp>&,\n+\tconst allocator<_Tp>&)): Add.\n+\t* testsuite/20_util/allocator/33807.cc: New.\n+\n 2007-10-17  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/cpp_type_traits.h (__is_byte): Add."}, {"sha": "8699fc83a02854a3217f5ab95b96855e459554a4", "filename": "libstdc++-v3/include/bits/allocator.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/741e7594bec656ff6a5bc2e7e83655e86880e868/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/741e7594bec656ff6a5bc2e7e83655e86880e868/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocator.h?ref=741e7594bec656ff6a5bc2e7e83655e86880e868", "patch": "@@ -113,11 +113,21 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     operator==(const allocator<_T1>&, const allocator<_T2>&)\n     { return true; }\n \n+  template<typename _Tp>\n+    inline bool\n+    operator==(const allocator<_Tp>&, const allocator<_Tp>&)\n+    { return true; }\n+\n   template<typename _T1, typename _T2>\n     inline bool\n     operator!=(const allocator<_T1>&, const allocator<_T2>&)\n     { return false; }\n \n+  template<typename _Tp>\n+    inline bool\n+    operator!=(const allocator<_Tp>&, const allocator<_Tp>&)\n+    { return false; }\n+\n   // Inhibit implicit instantiations for required instantiations,\n   // which are defined via explicit instantiations elsewhere.\n   // NB: This syntax is a GNU extension."}, {"sha": "7d9c9ba198dee247e2aa5973bd247f3f198f286c", "filename": "libstdc++-v3/testsuite/20_util/allocator/33807.cc", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/741e7594bec656ff6a5bc2e7e83655e86880e868/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator%2F33807.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/741e7594bec656ff6a5bc2e7e83655e86880e868/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator%2F33807.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator%2F33807.cc?ref=741e7594bec656ff6a5bc2e7e83655e86880e868", "patch": "@@ -0,0 +1,33 @@\n+// { dg-do compile }\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <list>\n+\n+// libstdc++/33807\n+template <class T>\n+bool operator != (const T& x, const T& y) { return !(x == y); }\n+\n+struct foo { };\n+\n+void fnx()\n+{\n+  std::list<foo> l1, l2;\n+  l1 = l2;\n+}"}]}