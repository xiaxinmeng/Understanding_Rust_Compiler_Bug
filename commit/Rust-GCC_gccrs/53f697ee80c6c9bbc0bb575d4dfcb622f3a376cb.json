{"sha": "53f697ee80c6c9bbc0bb575d4dfcb622f3a376cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNmNjk3ZWU4MGM2YzliYmMwYmI1NzVkNGRmY2I2MjJmM2EzNzZjYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-19T15:04:08Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-19T15:04:08Z"}, "message": "[multiple changes]\n\n2014-02-19  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch5.adb: Inhibit iterator rewriting in ASIS mode.\n\n2014-02-19  Arnaud Charlet  <charlet@adacore.com>\n\n\t* sem_ch13.adb (Analyze_Aspect_Specifications): Do not generate\n\tan error on out of range priorities if Relaxed_RM_Semantics.\n\t* sem_prag.adb (Analyze_Pragma): Ditto.\n\n2014-02-19  Bob Duff  <duff@adacore.com>\n\n\t* sem_attr.adb (Resolve_Attribute): Detect the case of F'Access\n\twhere F denotes the renaming of an enumeration literal, and\n\tissue a specialized error message.\n\nFrom-SVN: r207906", "tree": {"sha": "15a6ce2cb1fed3ab3ec566769ede4d89b5e65f7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15a6ce2cb1fed3ab3ec566769ede4d89b5e65f7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53f697ee80c6c9bbc0bb575d4dfcb622f3a376cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53f697ee80c6c9bbc0bb575d4dfcb622f3a376cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53f697ee80c6c9bbc0bb575d4dfcb622f3a376cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53f697ee80c6c9bbc0bb575d4dfcb622f3a376cb/comments", "author": null, "committer": null, "parents": [{"sha": "47fb6ca83f9443beb6d113c93436748d42da08da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47fb6ca83f9443beb6d113c93436748d42da08da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47fb6ca83f9443beb6d113c93436748d42da08da"}], "stats": {"total": 71, "additions": 53, "deletions": 18}, "files": [{"sha": "1fb722dd3549c02413c9c411048beac2ad77625e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f697ee80c6c9bbc0bb575d4dfcb622f3a376cb/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f697ee80c6c9bbc0bb575d4dfcb622f3a376cb/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=53f697ee80c6c9bbc0bb575d4dfcb622f3a376cb", "patch": "@@ -1,3 +1,19 @@\n+2014-02-19  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch5.adb: Inhibit iterator rewriting in ASIS mode.\n+\n+2014-02-19  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* sem_ch13.adb (Analyze_Aspect_Specifications): Do not generate\n+\tan error on out of range priorities if Relaxed_RM_Semantics.\n+\t* sem_prag.adb (Analyze_Pragma): Ditto.\n+\n+2014-02-19  Bob Duff  <duff@adacore.com>\n+\n+\t* sem_attr.adb (Resolve_Attribute): Detect the case of F'Access\n+\twhere F denotes the renaming of an enumeration literal, and\n+\tissue a specialized error message.\n+\n 2014-02-19  Matthew Heaney  <heaney@adacore.com>\n \n \t* a-chtgop.ads (Checked_Index): New operation."}, {"sha": "7e1a15eb0581cc4e7b9803d5f3ae76dfbd4569ad", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 20, "deletions": 9, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f697ee80c6c9bbc0bb575d4dfcb622f3a376cb/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f697ee80c6c9bbc0bb575d4dfcb622f3a376cb/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=53f697ee80c6c9bbc0bb575d4dfcb622f3a376cb", "patch": "@@ -9692,16 +9692,27 @@ package body Sem_Attr is\n                   Error_Msg_F (\"prefix of % attribute cannot be abstract\", P);\n                   Set_Etype (N, Any_Type);\n \n-               elsif Convention (Entity (P)) = Convention_Intrinsic then\n-                  if Ekind (Entity (P)) = E_Enumeration_Literal then\n-                     Error_Msg_F\n-                       (\"prefix of % attribute cannot be enumeration literal\",\n-                        P);\n-                  else\n-                     Error_Msg_F\n-                       (\"prefix of % attribute cannot be intrinsic\", P);\n-                  end if;\n+               elsif Ekind (Entity (P)) = E_Enumeration_Literal then\n+                  Error_Msg_F\n+                    (\"prefix of % attribute cannot be enumeration literal\",\n+                     P);\n+                  Set_Etype (N, Any_Type);\n \n+               --  An attempt to take 'Access of a function that renames an\n+               --  enumeration literal. Issue a specialized error message.\n+\n+               elsif Ekind (Entity (P)) = E_Function\n+                 and then Present (Alias (Entity (P)))\n+                 and then Ekind (Alias (Entity (P))) = E_Enumeration_Literal\n+               then\n+                  Error_Msg_F\n+                    (\"prefix of % attribute cannot be function renaming \" &\n+                       \"an enumeration literal\", P);\n+                  Set_Etype (N, Any_Type);\n+\n+               elsif Convention (Entity (P)) = Convention_Intrinsic then\n+                  Error_Msg_F\n+                    (\"prefix of % attribute cannot be intrinsic\", P);\n                   Set_Etype (N, Any_Type);\n                end if;\n "}, {"sha": "31f33962d9e7c8c0ac262726a0d73de9865bc973", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f697ee80c6c9bbc0bb575d4dfcb622f3a376cb/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f697ee80c6c9bbc0bb575d4dfcb622f3a376cb/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=53f697ee80c6c9bbc0bb575d4dfcb622f3a376cb", "patch": "@@ -1897,7 +1897,10 @@ package body Sem_Ch13 is\n                            Set_Main_Priority\n                              (Main_Unit, UI_To_Int (Expr_Value (Expr)));\n \n-                        else\n+                        --  Ignore pragma if Relaxed_RM_Semantics to support\n+                        --  other targets/non GNAT compilers.\n+\n+                        elsif not Relaxed_RM_Semantics then\n                            Error_Msg_N\n                              (\"main subprogram priority is out of range\",\n                               Expr);"}, {"sha": "bba4477bb445c85d5781f3adb21f443728fc301a", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f697ee80c6c9bbc0bb575d4dfcb622f3a376cb/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f697ee80c6c9bbc0bb575d4dfcb622f3a376cb/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=53f697ee80c6c9bbc0bb575d4dfcb622f3a376cb", "patch": "@@ -1727,8 +1727,11 @@ package body Sem_Ch5 is\n \n         --  Do not perform this expansion in SPARK mode, since the formal\n         --  verification directly deals with the source form of the iterator.\n+        --  Ditto for ASIS, where the temporary amy hide the transformation\n+        --  of a selected component into a prefixed function call.\n \n         and then not GNATprove_Mode\n+        and then not ASIS_Mode\n       then\n          declare\n             Id   : constant Entity_Id := Make_Temporary (Loc, 'R', Iter_Name);"}, {"sha": "8e86d6144f9b6d33a65c6e8b1aec769d9e4ce212", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f697ee80c6c9bbc0bb575d4dfcb622f3a376cb/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f697ee80c6c9bbc0bb575d4dfcb622f3a376cb/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=53f697ee80c6c9bbc0bb575d4dfcb622f3a376cb", "patch": "@@ -17871,26 +17871,28 @@ package body Sem_Prag is\n                elsif Raises_Constraint_Error (Arg) then\n                   null;\n \n-               --  Otherwise check in range\n+               --  Otherwise check in range except if Relaxed_RM_Semantics\n+               --  where we ignore the value if out of range.\n \n                else\n                   declare\n                      Val : constant Uint := Expr_Value (Arg);\n-\n                   begin\n-                     if Val < 0\n-                       or else Val > Expr_Value (Expression\n-                                       (Parent (RTE (RE_Max_Priority))))\n+                     if not Relaxed_RM_Semantics\n+                       and then\n+                         (Val < 0\n+                          or else Val > Expr_Value (Expression\n+                                          (Parent (RTE (RE_Max_Priority)))))\n                      then\n                         Error_Pragma_Arg\n                           (\"main subprogram priority is out of range\", Arg1);\n+                     else\n+                        Set_Main_Priority\n+                          (Current_Sem_Unit, UI_To_Int (Expr_Value (Arg)));\n                      end if;\n                   end;\n                end if;\n \n-               Set_Main_Priority\n-                    (Current_Sem_Unit, UI_To_Int (Expr_Value (Arg)));\n-\n                --  Load an arbitrary entity from System.Tasking.Stages or\n                --  System.Tasking.Restricted.Stages (depending on the\n                --  supported profile) to make sure that one of these packages"}]}