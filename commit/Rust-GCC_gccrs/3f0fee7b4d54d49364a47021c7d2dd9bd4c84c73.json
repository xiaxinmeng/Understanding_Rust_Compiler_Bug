{"sha": "3f0fee7b4d54d49364a47021c7d2dd9bd4c84c73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2YwZmVlN2I0ZDU0ZDQ5MzY0YTQ3MDIxYzdkMmRkOWJkNGM4NGM3Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-01-18T17:15:07Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-01-18T17:15:07Z"}, "message": "re PR middle-end/56015 (expand expands p[9] = COMPLEX_EXPR <-IMAGPART_EXPR <p[9]>, REALPART_EXPR <p[9]>>; incorrectly.)\n\n\tPR middle-end/56015\n\t* expr.c (expand_expr_real_2) <case COMPLEX_EXPR>: Handle\n\tthe case where writing real complex part of target modifies\n\top1.\n\n\t* gfortran.dg/pr56015.f90: New test.\n\nFrom-SVN: r195301", "tree": {"sha": "c961c9a38a96cfcad2a5854770ba3b274de81430", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c961c9a38a96cfcad2a5854770ba3b274de81430"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f0fee7b4d54d49364a47021c7d2dd9bd4c84c73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f0fee7b4d54d49364a47021c7d2dd9bd4c84c73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f0fee7b4d54d49364a47021c7d2dd9bd4c84c73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f0fee7b4d54d49364a47021c7d2dd9bd4c84c73/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b69a7864fbaf0a80b6e39b9680b821fba6eb8d0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b69a7864fbaf0a80b6e39b9680b821fba6eb8d0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b69a7864fbaf0a80b6e39b9680b821fba6eb8d0c"}], "stats": {"total": 77, "additions": 76, "deletions": 1}, "files": [{"sha": "6ba1e8643e8c213a584204ce691cc688934aea9a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f0fee7b4d54d49364a47021c7d2dd9bd4c84c73/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f0fee7b4d54d49364a47021c7d2dd9bd4c84c73/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3f0fee7b4d54d49364a47021c7d2dd9bd4c84c73", "patch": "@@ -1,3 +1,10 @@\n+2013-01-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/56015\n+\t* expr.c (expand_expr_real_2) <case COMPLEX_EXPR>: Handle\n+\tthe case where writing real complex part of target modifies\n+\top1.\n+\n 2013-01-18  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/aarch64/aarch64-simd.md\n@@ -69,7 +76,6 @@\n \t* regrename.c (build_def_use): Ignore REG_DEAD notes if there is a\n \tREG_UNUSED for the same register.\n \n-\n 2013-01-17  Richard Biener  <rguenther@suse.de>\n \t    Marek Polacek  <polacek@redhat.com>\n "}, {"sha": "08c5c9d0c589c61c9d4d11126c438da62e165c8a", "filename": "gcc/expr.c", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f0fee7b4d54d49364a47021c7d2dd9bd4c84c73/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f0fee7b4d54d49364a47021c7d2dd9bd4c84c73/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=3f0fee7b4d54d49364a47021c7d2dd9bd4c84c73", "patch": "@@ -8860,6 +8860,54 @@ expand_expr_real_2 (sepops ops, rtx target, enum machine_mode tmode,\n \n       if (!target)\n \ttarget = gen_reg_rtx (TYPE_MODE (type));\n+      else\n+\t/* If target overlaps with op1, then either we need to force\n+\t   op1 into a pseudo (if target also overlaps with op0),\n+\t   or write the complex parts in reverse order.  */\n+\tswitch (GET_CODE (target))\n+\t  {\n+\t  case CONCAT:\n+\t    if (reg_overlap_mentioned_p (XEXP (target, 0), op1))\n+\t      {\n+\t\tif (reg_overlap_mentioned_p (XEXP (target, 1), op0))\n+\t\t  {\n+\t\t  complex_expr_force_op1:\n+\t\t    temp = gen_reg_rtx (GET_MODE_INNER (GET_MODE (target)));\n+\t\t    emit_move_insn (temp, op1);\n+\t\t    op1 = temp;\n+\t\t    break;\n+\t\t  }\n+\t      complex_expr_swap_order:\n+\t\t/* Move the imaginary (op1) and real (op0) parts to their\n+\t\t   location.  */\n+\t\twrite_complex_part (target, op1, true);\n+\t\twrite_complex_part (target, op0, false);\n+\n+\t\treturn target;\n+\t      }\n+\t    break;\n+\t  case MEM:\n+\t    temp = adjust_address_nv (target,\n+\t\t\t\t      GET_MODE_INNER (GET_MODE (target)), 0);\n+\t    if (reg_overlap_mentioned_p (temp, op1))\n+\t      {\n+\t\tenum machine_mode imode = GET_MODE_INNER (GET_MODE (target));\n+\t\ttemp = adjust_address_nv (target, imode,\n+\t\t\t\t\t  GET_MODE_SIZE (imode));\n+\t\tif (reg_overlap_mentioned_p (temp, op0))\n+\t\t  goto complex_expr_force_op1;\n+\t\tgoto complex_expr_swap_order;\n+\t      }\n+\t    break;\n+\t  default:\n+\t    if (reg_overlap_mentioned_p (target, op1))\n+\t      {\n+\t\tif (reg_overlap_mentioned_p (target, op0))\n+\t\t  goto complex_expr_force_op1;\n+\t\tgoto complex_expr_swap_order;\n+\t      }\n+\t    break;\n+\t  }\n \n       /* Move the real (op0) and imaginary (op1) parts to their location.  */\n       write_complex_part (target, op0, false);"}, {"sha": "13eb611e3b576d3b30387933adfac963bffd9a9e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f0fee7b4d54d49364a47021c7d2dd9bd4c84c73/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f0fee7b4d54d49364a47021c7d2dd9bd4c84c73/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3f0fee7b4d54d49364a47021c7d2dd9bd4c84c73", "patch": "@@ -1,3 +1,8 @@\n+2013-01-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/56015\n+\t* gfortran.dg/pr56015.f90: New test.\n+\n 2013-01-18  Janis Johnson  <janisjo@codesourcery.com>\n \n \t* gcc.dg/vect/vect-multitypes-12.c: Refactor dg-final directive."}, {"sha": "21d9d64280f2072d0e791cc5c7f28ed05b155a97", "filename": "gcc/testsuite/gfortran.dg/pr56015.f90", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f0fee7b4d54d49364a47021c7d2dd9bd4c84c73/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr56015.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f0fee7b4d54d49364a47021c7d2dd9bd4c84c73/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr56015.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr56015.f90?ref=3f0fee7b4d54d49364a47021c7d2dd9bd4c84c73", "patch": "@@ -0,0 +1,16 @@\n+! PR middle-end/56015\n+! { dg-do run }\n+! { dg-options \"-Ofast -fno-inline\" }\n+\n+program pr56015\n+  implicit none\n+  complex*16 p(10)\n+  p(:) = (0.1d0, 0.2d0)\n+  p(:) = (0.0d0, 1.0d0) * p(:)\n+  call foo (p)\n+contains\n+  subroutine foo (p)\n+    complex*16 p(10)\n+    if (any (p .ne. (-0.2d0, 0.1d0))) call abort\n+  end subroutine\n+end program pr56015"}]}