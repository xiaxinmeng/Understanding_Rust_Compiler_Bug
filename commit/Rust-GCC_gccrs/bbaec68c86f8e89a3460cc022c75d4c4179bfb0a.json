{"sha": "bbaec68c86f8e89a3460cc022c75d4c4179bfb0a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmJhZWM2OGM4NmY4ZTg5YTM0NjBjYzAyMmM3NWQ0YzQxNzliZmIwYQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-05-27T21:55:21Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-05-27T21:55:21Z"}, "message": "libstdc++: Fix atomic<FP>::load (PR 95282)\n\n\tPR libstdc++/95282\n\t* include/bits/atomic_base.h (__atomic_impl::load): Add\n\tcv-qualifiers to parameter so that _Tp is deduced as the\n\tunqualified type.\n\t* testsuite/29_atomics/atomic_float/95282.cc: New test.", "tree": {"sha": "75cac0ab09b0e5fe8646384072ca04ed0ff541a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75cac0ab09b0e5fe8646384072ca04ed0ff541a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bbaec68c86f8e89a3460cc022c75d4c4179bfb0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbaec68c86f8e89a3460cc022c75d4c4179bfb0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbaec68c86f8e89a3460cc022c75d4c4179bfb0a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbaec68c86f8e89a3460cc022c75d4c4179bfb0a/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c2582c0406250c66e2eb3651f8e8638796b7f53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c2582c0406250c66e2eb3651f8e8638796b7f53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c2582c0406250c66e2eb3651f8e8638796b7f53"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "01f77a0f37238f1088c0ef06ca7f3b09d0c1d01e", "filename": "libstdc++-v3/include/bits/atomic_base.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbaec68c86f8e89a3460cc022c75d4c4179bfb0a/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomic_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbaec68c86f8e89a3460cc022c75d4c4179bfb0a/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomic_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomic_base.h?ref=bbaec68c86f8e89a3460cc022c75d4c4179bfb0a", "patch": "@@ -871,7 +871,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n     template<typename _Tp>\n       _GLIBCXX_ALWAYS_INLINE _Tp\n-      load(_Tp* __ptr, memory_order __m) noexcept\n+      load(const volatile _Tp* __ptr, memory_order __m) noexcept\n       {\n \talignas(_Tp) unsigned char __buf[sizeof(_Tp)];\n \t_Tp* __dest = reinterpret_cast<_Tp*>(__buf);"}, {"sha": "2de751c6ad44bb7dd008cfe065b5216993b9bf1e", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_float/95282.cc", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbaec68c86f8e89a3460cc022c75d4c4179bfb0a/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_float%2F95282.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbaec68c86f8e89a3460cc022c75d4c4179bfb0a/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_float%2F95282.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_float%2F95282.cc?ref=bbaec68c86f8e89a3460cc022c75d4c4179bfb0a", "patch": "@@ -0,0 +1,35 @@\n+// Copyright (C) 2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do compile { target c++2a } }\n+\n+#include <atomic>\n+\n+float\n+test01()\n+{\n+  std::atomic<float> a;\n+  return a.load();\n+}\n+\n+float\n+test02()\n+{\n+  volatile std::atomic<float> a;\n+  return a.load();\n+}"}]}