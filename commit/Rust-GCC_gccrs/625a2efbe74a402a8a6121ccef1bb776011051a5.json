{"sha": "625a2efbe74a402a8a6121ccef1bb776011051a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjI1YTJlZmJlNzRhNDAyYThhNjEyMWNjZWYxYmI3NzYwMTEwNTFhNQ==", "commit": {"author": {"name": "Pranav Bhandarkar", "email": "pranav.bhandarkar@celunite.com", "date": "2007-09-24T13:31:25Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-09-24T13:31:25Z"}, "message": "tree-inline.h (eni_weights): Add field target_builtin_cost to reflect the cost per call to a target specific...\n\n2007-09-24  Pranav Bhandarkar  <pranav.bhandarkar@celunite.com>\n        Ramana Radhakrishnan  <ramana@hercules.pun.celunite.com>\n\n        * tree-inline.h (eni_weights): Add field target_builtin_cost to\n        reflect the cost per call to a target specific builtin.\n        * tree-inline.c (estimate_num_insns_1): If it is a CALL_EXPR for\n        * a\n        call to a target specific builtin, then use\ntarget_builtin_call_cost.\n        (init_inline_once): Initialize target_builtin_call_cost field.\n\nCo-Authored-By: Ramana Radhakrishnan <ramana@hercules.pun.celunite.com>\n\nFrom-SVN: r128714", "tree": {"sha": "5ae6ba82a1b1c37487df12609385809595a18d5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ae6ba82a1b1c37487df12609385809595a18d5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/625a2efbe74a402a8a6121ccef1bb776011051a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/625a2efbe74a402a8a6121ccef1bb776011051a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/625a2efbe74a402a8a6121ccef1bb776011051a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/625a2efbe74a402a8a6121ccef1bb776011051a5/comments", "author": null, "committer": null, "parents": [{"sha": "548183dbd3b728a6b93a4e8c5397620f386bf618", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/548183dbd3b728a6b93a4e8c5397620f386bf618", "html_url": "https://github.com/Rust-GCC/gccrs/commit/548183dbd3b728a6b93a4e8c5397620f386bf618"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "81bdc4c889088bcc206aa48d29c77bab5dc33666", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/625a2efbe74a402a8a6121ccef1bb776011051a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/625a2efbe74a402a8a6121ccef1bb776011051a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=625a2efbe74a402a8a6121ccef1bb776011051a5", "patch": "@@ -1,3 +1,12 @@\n+2007-09-24  Pranav Bhandarkar  <pranav.bhandarkar@celunite.com>\n+\tRamana Radhakrishnan  <ramana@hercules.pun.celunite.com>\n+\n+\t* tree-inline.h (eni_weights): Add field target_builtin_cost to\n+\treflect the cost per call to a target specific builtin.\n+\t* tree-inline.c (estimate_num_insns_1): If it is a CALL_EXPR for a\n+\tcall to a target specific builtin, then use target_builtin_call_cost.\n+\t(init_inline_once): Initialize target_builtin_call_cost field.\n+\n 2007-09-24  Kai Tietz  <kai.tietz@onevision.com>\n \n \tPR middle-end/33472"}, {"sha": "9c459511b712eab5c892fa0fdfa8f15df0bae2b4", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/625a2efbe74a402a8a6121ccef1bb776011051a5/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/625a2efbe74a402a8a6121ccef1bb776011051a5/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=625a2efbe74a402a8a6121ccef1bb776011051a5", "patch": "@@ -2290,7 +2290,11 @@ estimate_num_insns_1 (tree *tp, int *walk_subtrees, void *data)\n       {\n \ttree decl = get_callee_fndecl (x);\n \n-\tcost = d->weights->call_cost;\n+\tif (decl && DECL_BUILT_IN_CLASS (decl) == BUILT_IN_MD)\n+\t  cost = d->weights->target_builtin_call_cost;\n+\telse\n+\t  cost = d->weights->call_cost;\n+\t\n \tif (decl && DECL_BUILT_IN_CLASS (decl) == BUILT_IN_NORMAL)\n \t  switch (DECL_FUNCTION_CODE (decl))\n \t    {\n@@ -2391,11 +2395,13 @@ void\n init_inline_once (void)\n {\n   eni_inlining_weights.call_cost = PARAM_VALUE (PARAM_INLINE_CALL_COST);\n+  eni_inlining_weights.target_builtin_call_cost = 1;\n   eni_inlining_weights.div_mod_cost = 10;\n   eni_inlining_weights.switch_cost = 1;\n   eni_inlining_weights.omp_cost = 40;\n \n   eni_size_weights.call_cost = 1;\n+  eni_size_weights.target_builtin_call_cost = 1;\n   eni_size_weights.div_mod_cost = 1;\n   eni_size_weights.switch_cost = 10;\n   eni_size_weights.omp_cost = 40;\n@@ -2405,6 +2411,7 @@ init_inline_once (void)\n      underestimating the cost does less harm than overestimating it, so\n      we choose a rather small value here.  */\n   eni_time_weights.call_cost = 10;\n+  eni_time_weights.target_builtin_call_cost = 10;\n   eni_time_weights.div_mod_cost = 10;\n   eni_time_weights.switch_cost = 4;\n   eni_time_weights.omp_cost = 40;"}, {"sha": "895a0afcbbd64a1eeffe6fbc4c6466e1ff2b3bbb", "filename": "gcc/tree-inline.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/625a2efbe74a402a8a6121ccef1bb776011051a5/gcc%2Ftree-inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/625a2efbe74a402a8a6121ccef1bb776011051a5/gcc%2Ftree-inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.h?ref=625a2efbe74a402a8a6121ccef1bb776011051a5", "patch": "@@ -103,6 +103,9 @@ typedef struct eni_weights_d\n   /* Cost per call.  */\n   unsigned call_cost;\n \n+  /* Cost per call to a target specific builtin */\n+  unsigned target_builtin_call_cost;\n+\n   /* Cost of \"expensive\" div and mod operations.  */\n   unsigned div_mod_cost;\n "}]}