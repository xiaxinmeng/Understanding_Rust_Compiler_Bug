{"sha": "1c9524603bf6207984cc21e7df6520e935a85e35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM5NTI0NjAzYmY2MjA3OTg0Y2MyMWU3ZGY2NTIwZTkzNWE4NWUzNQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-06-25T17:16:31Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-06-25T17:16:31Z"}, "message": "mips.c (mips16_flip_traits): Use it.\n\ngcc/\n\t* config/mips/mips.c (mips16_flip_traits): Use it.\n\t(local_alias_traits, mips16_local_aliases): Convert from a map of\n\trtxes to a map of symbol names.\n\t(mips16_local_alias): Update accordingly.\n\nFrom-SVN: r224972", "tree": {"sha": "eb9aab7f683bba3d809945aaacf3498fdac77a75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb9aab7f683bba3d809945aaacf3498fdac77a75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c9524603bf6207984cc21e7df6520e935a85e35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c9524603bf6207984cc21e7df6520e935a85e35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c9524603bf6207984cc21e7df6520e935a85e35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c9524603bf6207984cc21e7df6520e935a85e35/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "20d2c372c21b9f92b30428d7b545af320d7d2303", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20d2c372c21b9f92b30428d7b545af320d7d2303", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20d2c372c21b9f92b30428d7b545af320d7d2303"}], "stats": {"total": 48, "additions": 15, "deletions": 33}, "files": [{"sha": "3a639edcd4f4150d2f3d74f246fd6d2db055afa5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c9524603bf6207984cc21e7df6520e935a85e35/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c9524603bf6207984cc21e7df6520e935a85e35/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1c9524603bf6207984cc21e7df6520e935a85e35", "patch": "@@ -1,3 +1,10 @@\n+2015-06-25  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/mips/mips.c (mips16_flip_traits): Use it.\n+\t(local_alias_traits, mips16_local_aliases): Convert from a map of\n+\trtxes to a map of symbol names.\n+\t(mips16_local_alias): Update accordingly.\n+\n 2015-06-25  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* hash-traits.h (string_hash, nofree_string_hash): New classes."}, {"sha": "c8374cf95d5aeb52e3b4904133a7852aed9b7357", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 8, "deletions": 33, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c9524603bf6207984cc21e7df6520e935a85e35/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c9524603bf6207984cc21e7df6520e935a85e35/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=1c9524603bf6207984cc21e7df6520e935a85e35", "patch": "@@ -1263,15 +1263,7 @@ static int mips_register_move_cost (machine_mode, reg_class_t,\n static unsigned int mips_function_arg_boundary (machine_mode, const_tree);\n static machine_mode mips_get_reg_raw_mode (int regno);\n \f\n-struct mips16_flip_traits : default_hashmap_traits\n-{\n-  static hashval_t hash (const char *s) { return htab_hash_string (s); }\n-  static bool\n-  equal_keys (const char *a, const char *b)\n-  {\n-    return !strcmp (a, b);\n-  }\n-};\n+struct mips16_flip_traits : simple_hashmap_traits <nofree_string_hash> {};\n \n /* This hash table keeps track of implicit \"mips16\" and \"nomips16\" attributes\n    for -mflip_mips16.  It maps decl names onto a boolean mode setting.  */\n@@ -6597,30 +6589,13 @@ mips_load_call_address (enum mips_call_type type, rtx dest, rtx addr)\n     }\n }\n \f\n-struct local_alias_traits : default_hashmap_traits\n-{\n-  static hashval_t hash (rtx);\n-  static bool equal_keys (rtx, rtx);\n-};\n+struct local_alias_traits : simple_hashmap_traits <nofree_string_hash> {};\n \n /* Each locally-defined hard-float MIPS16 function has a local symbol\n    associated with it.  This hash table maps the function symbol (FUNC)\n    to the local symbol (LOCAL). */\n-static GTY (()) hash_map<rtx, rtx, local_alias_traits> *mips16_local_aliases;\n-\n-/* Hash table callbacks for mips16_local_aliases.  */\n-\n-hashval_t\n-local_alias_traits::hash (rtx func)\n-{\n-  return htab_hash_string (XSTR (func, 0));\n-}\n-\n-bool\n-local_alias_traits::equal_keys (rtx func1, rtx func2)\n-{\n-  return rtx_equal_p (func1, func2);\n-}\n+static GTY (()) hash_map<const char *, rtx, local_alias_traits>\n+  *mips16_local_aliases;\n \n /* FUNC is the symbol for a locally-defined hard-float MIPS16 function.\n    Return a local alias for it, creating a new one if necessary.  */\n@@ -6631,23 +6606,23 @@ mips16_local_alias (rtx func)\n   /* Create the hash table if this is the first call.  */\n   if (mips16_local_aliases == NULL)\n     mips16_local_aliases\n-      = hash_map<rtx, rtx, local_alias_traits>::create_ggc (37);\n+      = hash_map<const char *, rtx, local_alias_traits>::create_ggc (37);\n \n   /* Look up the function symbol, creating a new entry if need be.  */\n   bool existed;\n-  rtx *slot = &mips16_local_aliases->get_or_insert (func, &existed);\n+  const char *func_name = XSTR (func, 0);\n+  rtx *slot = &mips16_local_aliases->get_or_insert (func_name, &existed);\n   gcc_assert (slot != NULL);\n \n   if (!existed)\n     {\n-      const char *func_name, *local_name;\n       rtx local;\n \n       /* Create a new SYMBOL_REF for the local symbol.  The choice of\n \t __fn_local_* is based on the __fn_stub_* names that we've\n \t traditionally used for the non-MIPS16 stub.  */\n       func_name = targetm.strip_name_encoding (XSTR (func, 0));\n-      local_name = ACONCAT ((\"__fn_local_\", func_name, NULL));\n+      const char *local_name = ACONCAT ((\"__fn_local_\", func_name, NULL));\n       local = gen_rtx_SYMBOL_REF (Pmode, ggc_strdup (local_name));\n       SYMBOL_REF_FLAGS (local) = SYMBOL_REF_FLAGS (func) | SYMBOL_FLAG_LOCAL;\n "}]}