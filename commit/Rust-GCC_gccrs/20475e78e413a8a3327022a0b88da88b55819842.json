{"sha": "20475e78e413a8a3327022a0b88da88b55819842", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjA0NzVlNzhlNDEzYThhMzMyNzAyMmEwYjg4ZGE4OGI1NTgxOTg0Mg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2004-03-11T02:57:49Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2004-03-11T02:57:49Z"}, "message": "(build_pointer_type_for_mode): Fix comments and whitespace.\n\nFrom-SVN: r79293", "tree": {"sha": "49d6b9bef9874cd176eb27477b916fcf70acd7ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49d6b9bef9874cd176eb27477b916fcf70acd7ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20475e78e413a8a3327022a0b88da88b55819842", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20475e78e413a8a3327022a0b88da88b55819842", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20475e78e413a8a3327022a0b88da88b55819842", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20475e78e413a8a3327022a0b88da88b55819842/comments", "author": null, "committer": null, "parents": [{"sha": "4f5b645ac7160db20aecbb3e7bd448f0169aa053", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f5b645ac7160db20aecbb3e7bd448f0169aa053", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f5b645ac7160db20aecbb3e7bd448f0169aa053"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "bc07652c0fa8bf34e94cefe205dc0fb4c35ed302", "filename": "gcc/tree.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20475e78e413a8a3327022a0b88da88b55819842/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20475e78e413a8a3327022a0b88da88b55819842/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=20475e78e413a8a3327022a0b88da88b55819842", "patch": "@@ -3792,7 +3792,8 @@ build_pointer_type_for_mode (tree to_type, enum machine_mode mode)\n {\n   tree t = TYPE_POINTER_TO (to_type);\n \n-  /* First, if we already have a type for pointers to TO_TYPE, use it.  */\n+  /* First, if we already have a type for pointers to TO_TYPE and it's\n+     the proper mode, use it.  */\n   if (t != 0 && mode == ptr_mode)\n     return t;\n \n@@ -3801,13 +3802,13 @@ build_pointer_type_for_mode (tree to_type, enum machine_mode mode)\n   TREE_TYPE (t) = to_type;\n   TYPE_MODE (t) = mode;\n \n-  /* Record this type as the pointer to TO_TYPE.  */\n+  /* We can only record one type as \"the\" pointer to TO_TYPE.  We choose to\n+     record the pointer whose mode is ptr_mode.  */\n   if (mode == ptr_mode)\n-  TYPE_POINTER_TO (to_type) = t;\n+    TYPE_POINTER_TO (to_type) = t;\n \n   /* Lay out the type.  This function has many callers that are concerned\n-     with expression-construction, and this simplifies them all.\n-     Also, it guarantees the TYPE_SIZE is in the same obstack as the type.  */\n+     with expression-construction, and this simplifies them all.  */\n   layout_type (t);\n \n   return t;"}]}