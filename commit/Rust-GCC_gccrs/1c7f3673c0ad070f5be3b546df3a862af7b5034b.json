{"sha": "1c7f3673c0ad070f5be3b546df3a862af7b5034b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM3ZjM2NzNjMGFkMDcwZjViZTNiNTQ2ZGYzYTg2MmFmN2I1MDM0Yg==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "1998-11-19T12:13:39Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "1998-11-19T12:13:39Z"}, "message": "[multiple changes]\n\nThu Nov 19 11:16:55 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\t* jcf-parse.c (jcf_parse_source): Function returned type is\n \tvoid. Added prototype.\n\t(jcf_parse): Function returned type is void.\n\t(yyparse): Remove call to fclose on the last parsed file.\n\t* java-tree.h (jcf_parse): Changed jcf_parse prototype.\nWed Nov 18 14:21:48 1998  Anthony Green  <green@cygnus.com>\n\t* jcf-parse.c (yyparse): Open class file in binary mode.\nFixes a show-stopper and includes a missing patch.\n\nFrom-SVN: r23715", "tree": {"sha": "c36732496f231795ebb4123263726ad848a66d85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c36732496f231795ebb4123263726ad848a66d85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c7f3673c0ad070f5be3b546df3a862af7b5034b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c7f3673c0ad070f5be3b546df3a862af7b5034b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c7f3673c0ad070f5be3b546df3a862af7b5034b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c7f3673c0ad070f5be3b546df3a862af7b5034b/comments", "author": null, "committer": null, "parents": [{"sha": "3cf741277383c41eebd8664049a36f668d647c38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cf741277383c41eebd8664049a36f668d647c38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cf741277383c41eebd8664049a36f668d647c38"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "4a9a7e08ae2e3e1f739e6b3254e4533de5bfea91", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c7f3673c0ad070f5be3b546df3a862af7b5034b/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c7f3673c0ad070f5be3b546df3a862af7b5034b/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=1c7f3673c0ad070f5be3b546df3a862af7b5034b", "patch": "@@ -1,3 +1,12 @@\n+Thu Nov 19 11:16:55 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* jcf-parse.c (jcf_parse_source): Function returned type is\n+ \tvoid. Added prototype.\n+\t(jcf_parse): Function returned type is void.\n+\t(yyparse): Remove call to fclose on the last parsed file.\n+\n+\t* java-tree.h (jcf_parse): Changed jcf_parse prototype.\n+\n Wed Nov 18 23:54:53 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* class.c (unmangle_classname): Set QUALIFIED_P when appropriate.\n@@ -115,6 +124,10 @@ Wed Nov 18 23:54:53 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t(purge_unchecked_exceptions): Use IS_UNCHECKED_EXCEPTION_P instead\n  \tof IS_UNCHECKED_EXPRESSION_P.\n \t\n+Wed Nov 18 14:21:48 1998  Anthony Green  <green@cygnus.com>\n+\n+\t* jcf-parse.c (yyparse): Open class file in binary mode.\n+\n Sun Nov 15 17:14:17 1998  Per Bothner  <bothner@cygnus.com>\n \n \t* jvgenmain.c:  Need to #include \"gansidecl.h\" (to get PROTO)."}, {"sha": "4554638b92adaef273df3f7f915b8886bd0ed173", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c7f3673c0ad070f5be3b546df3a862af7b5034b/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c7f3673c0ad070f5be3b546df3a862af7b5034b/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=1c7f3673c0ad070f5be3b546df3a862af7b5034b", "patch": "@@ -473,7 +473,7 @@ extern tree get_constant PROTO ((struct JCF*, int));\n extern tree get_name_constant PROTO ((struct JCF*, int));\n extern tree get_class_constant PROTO ((struct JCF*, int));\n extern tree parse_signature PROTO ((struct JCF *jcf, int sig_index));\n-extern int jcf_parse PROTO ((struct JCF*));\n+extern void jcf_parse PROTO ((struct JCF*));\n extern tree add_field PROTO ((tree, tree, tree, int));\n extern tree add_method PROTO ((tree, int, tree, tree));\n extern tree add_method_1 PROTO ((tree, int, tree, tree));"}, {"sha": "8a01b2cb925a12db81a17250193e04fb9a7aec99", "filename": "gcc/java/jcf-parse.c", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c7f3673c0ad070f5be3b546df3a862af7b5034b/gcc%2Fjava%2Fjcf-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c7f3673c0ad070f5be3b546df3a862af7b5034b/gcc%2Fjava%2Fjcf-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-parse.c?ref=1c7f3673c0ad070f5be3b546df3a862af7b5034b", "patch": "@@ -72,6 +72,7 @@ static tree give_name_to_class PROTO ((JCF *jcf, int index));\n void parse_zip_file_entries PROTO (());\n void process_zip_dir PROTO (());\n static void parse_source_file PROTO ((tree));\n+static void jcf_parse_source PROTO ((JCF *));\n \n /* Handle \"SourceFile\" attribute. */\n \n@@ -513,7 +514,7 @@ load_class (class_or_name, verbose)\n \n /* Parse a source file when JCF refers to a source file.  */\n \n-int\n+void\n jcf_parse_source (jcf)\n      JCF *jcf;\n {\n@@ -536,7 +537,7 @@ jcf_parse_source (jcf)\n \n /* Parse the .class file JCF. */\n \n-int\n+void\n jcf_parse (jcf)\n      JCF* jcf;\n {\n@@ -752,7 +753,7 @@ yyparse ()\n       \n       /* Set jcf up and open a new file */\n       JCF_ZERO (main_jcf);\n-      main_jcf->read_state = fopen (IDENTIFIER_POINTER (name), \"r\");\n+      main_jcf->read_state = fopen (IDENTIFIER_POINTER (name), \"rb\");\n       if (main_jcf->read_state == NULL)\n \tpfatal_with_name (IDENTIFIER_POINTER (name));\n       \n@@ -784,10 +785,6 @@ yyparse ()\n \t}\n     }\n \n-  if (main_jcf->read_state && fclose (main_jcf->read_state))\n-    fatal (\"failed to close input file `%s' - yyparse\",\n-\t   (main_jcf->filename ? main_jcf->filename : \"<unknown>\"));\n-\n   java_expand_classes ();\n   if (!java_report_errors () && !flag_emit_class_files)\n     emit_register_classes ();"}]}