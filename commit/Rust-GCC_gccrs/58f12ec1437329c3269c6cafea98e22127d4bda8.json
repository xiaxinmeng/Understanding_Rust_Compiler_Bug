{"sha": "58f12ec1437329c3269c6cafea98e22127d4bda8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NThmMTJlYzE0MzczMjljMzI2OWM2Y2FmZWE5OGUyMjEyN2Q0YmRhOA==", "commit": {"author": {"name": "Kugan Vivekanandarajah", "email": "kuganv@linaro.org", "date": "2018-07-06T22:15:48Z"}, "committer": {"name": "Kugan Vivekanandarajah", "email": "kugan@gcc.gnu.org", "date": "2018-07-06T22:15:48Z"}, "message": "tree-ssa-phiopt.c (cond_removal_in_popcount_pattern): New.\n\ngcc/ChangeLog:\n\n2018-07-06  Kugan Vivekanandarajah  <kugan.vivekanandarajah@linaro.org>\n\n\t* tree-ssa-phiopt.c (cond_removal_in_popcount_pattern): New.\n\t(tree_ssa_phiopt_worker): Call cond_removal_in_popcount_pattern.\n\ngcc/testsuite/ChangeLog:\n\n2018-07-06  Kugan Vivekanandarajah  <kugan.vivekanandarajah@linaro.org>\n\n\t* gcc.dg/tree-ssa/phi-opt-16.c: New test.\n\t* gcc.dg/tree-ssa/phi-opt-17.c: New test.\n\t* gcc.dg/tree-ssa/phi-opt-18.c: New test.\n\t* gcc.dg/tree-ssa/phi-opt-19.c: New test.\n\t* gcc.dg/tree-ssa/popcount3.c: New test.\n\nFrom-SVN: r262488", "tree": {"sha": "3e6be7f9ff32734c76314abc4064f4fa10c383d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e6be7f9ff32734c76314abc4064f4fa10c383d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58f12ec1437329c3269c6cafea98e22127d4bda8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58f12ec1437329c3269c6cafea98e22127d4bda8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58f12ec1437329c3269c6cafea98e22127d4bda8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58f12ec1437329c3269c6cafea98e22127d4bda8/comments", "author": null, "committer": null, "parents": [{"sha": "b8b31957e4c7e28fc44ae1b1ce658ba49ff1aa18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8b31957e4c7e28fc44ae1b1ce658ba49ff1aa18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8b31957e4c7e28fc44ae1b1ce658ba49ff1aa18"}], "stats": {"total": 217, "additions": 217, "deletions": 0}, "files": [{"sha": "648bb3ab6731b837161e911413a3334f66e8441a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58f12ec1437329c3269c6cafea98e22127d4bda8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58f12ec1437329c3269c6cafea98e22127d4bda8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=58f12ec1437329c3269c6cafea98e22127d4bda8", "patch": "@@ -1,3 +1,8 @@\n+2018-07-06  Kugan Vivekanandarajah  <kugan.vivekanandarajah@linaro.org>\n+\n+\t* tree-ssa-phiopt.c (cond_removal_in_popcount_pattern): New.\n+\t(tree_ssa_phiopt_worker): Call cond_removal_in_popcount_pattern.\n+\n 2018-07-06  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \n \t* tree-ssa-loop-niter.c (number_of_iterations_popcount): If popcount"}, {"sha": "c7f240ec4fb1358c75f389f75d2162144117f529", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58f12ec1437329c3269c6cafea98e22127d4bda8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58f12ec1437329c3269c6cafea98e22127d4bda8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=58f12ec1437329c3269c6cafea98e22127d4bda8", "patch": "@@ -1,3 +1,11 @@\n+2018-07-06  Kugan Vivekanandarajah  <kugan.vivekanandarajah@linaro.org>\n+\n+\t* gcc.dg/tree-ssa/phi-opt-16.c: New test.\n+\t* gcc.dg/tree-ssa/phi-opt-17.c: New test.\n+\t* gcc.dg/tree-ssa/phi-opt-18.c: New test.\n+\t* gcc.dg/tree-ssa/phi-opt-19.c: New test.\n+\t* gcc.dg/tree-ssa/popcount3.c: New test.\n+\n 2018-07-06  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \n \t* gcc.dg/tree-ssa/pr64183.c: Disable final value replacement"}, {"sha": "e7a271150f8ec8374fa14ff760bde6940923f465", "filename": "gcc/testsuite/gcc.dg/tree-ssa/phi-opt-16.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58f12ec1437329c3269c6cafea98e22127d4bda8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58f12ec1437329c3269c6cafea98e22127d4bda8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-16.c?ref=58f12ec1437329c3269c6cafea98e22127d4bda8", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+int foo (int a)\n+{\n+  int c = 0;\n+  if (a != 0)\n+    c = __builtin_popcount (a);\n+  return c;\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"if\" \"optimized\" } } */"}, {"sha": "25ba096cd8e36f002906a50cf5639aca87bb0987", "filename": "gcc/testsuite/gcc.dg/tree-ssa/phi-opt-17.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58f12ec1437329c3269c6cafea98e22127d4bda8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58f12ec1437329c3269c6cafea98e22127d4bda8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-17.c?ref=58f12ec1437329c3269c6cafea98e22127d4bda8", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+int foo (unsigned int a)\n+{\n+  int c = 0;\n+  if (a != 0)\n+    c = __builtin_popcount (a);\n+  return c;\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"if\" \"optimized\" } } */"}, {"sha": "cf1aaf5c5683c0c797c1882091f67574cc429f62", "filename": "gcc/testsuite/gcc.dg/tree-ssa/phi-opt-18.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58f12ec1437329c3269c6cafea98e22127d4bda8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58f12ec1437329c3269c6cafea98e22127d4bda8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-18.c?ref=58f12ec1437329c3269c6cafea98e22127d4bda8", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+int foo (int a)\n+{\n+  int c = 0;\n+  if (a != 0)\n+    c = __builtin_popcount (a);\n+  else\n+    c = 1;\n+  return c;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"if \" 1 \"optimized\" } } */"}, {"sha": "1f440660de067120566862da0fec1f846ce3aa25", "filename": "gcc/testsuite/gcc.dg/tree-ssa/phi-opt-19.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58f12ec1437329c3269c6cafea98e22127d4bda8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58f12ec1437329c3269c6cafea98e22127d4bda8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-19.c?ref=58f12ec1437329c3269c6cafea98e22127d4bda8", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized -fno-tree-dce\" } */\n+\n+int foo (int a)\n+{\n+  int c = 0;\n+  if (a != 0)\n+    {\n+      __builtin_popcount (a);\n+      c = 2;\n+    }\n+  return c;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"if \" 1 \"optimized\" } } */"}, {"sha": "8a900896e508c1f9b93a6d1ed710cdb1ac82f59e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/popcount3.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58f12ec1437329c3269c6cafea98e22127d4bda8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpopcount3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58f12ec1437329c3269c6cafea98e22127d4bda8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpopcount3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpopcount3.c?ref=58f12ec1437329c3269c6cafea98e22127d4bda8", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-phiopt3 -fdump-tree-optimized\" } */\n+\n+int PopCount (long b) {\n+    int c = 0;\n+\n+    while (b) {\n+\tb &= b - 1;\n+\tc++;\n+    }\n+    return c;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"__builtin_popcount\" 1 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \"if\" 0 \"phiopt3\" } } */"}, {"sha": "b2575f1281ad97a6c40f7dc1f171d4fc6912a471", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 136, "deletions": 0, "changes": 136, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58f12ec1437329c3269c6cafea98e22127d4bda8/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58f12ec1437329c3269c6cafea98e22127d4bda8/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=58f12ec1437329c3269c6cafea98e22127d4bda8", "patch": "@@ -45,6 +45,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-scalar-evolution.h\"\n #include \"tree-inline.h\"\n #include \"params.h\"\n+#include \"case-cfn-macros.h\"\n \n static unsigned int tree_ssa_phiopt_worker (bool, bool);\n static bool conditional_replacement (basic_block, basic_block,\n@@ -57,6 +58,8 @@ static bool minmax_replacement (basic_block, basic_block,\n \t\t\t\tedge, edge, gimple *, tree, tree);\n static bool abs_replacement (basic_block, basic_block,\n \t\t\t     edge, edge, gimple *, tree, tree);\n+static bool cond_removal_in_popcount_pattern (basic_block, basic_block,\n+\t\t\t\t\t      edge, edge, gimple *, tree, tree);\n static bool cond_store_replacement (basic_block, basic_block, edge, edge,\n \t\t\t\t    hash_set<tree> *);\n static bool cond_if_else_store_replacement (basic_block, basic_block, basic_block);\n@@ -332,6 +335,9 @@ tree_ssa_phiopt_worker (bool do_store_elim, bool do_hoist_loads)\n \t    cfgchanged = true;\n \t  else if (abs_replacement (bb, bb1, e1, e2, phi, arg0, arg1))\n \t    cfgchanged = true;\n+\t  else if (cond_removal_in_popcount_pattern (bb, bb1, e1, e2,\n+\t\t\t\t\t\t     phi, arg0, arg1))\n+\t    cfgchanged = true;\n \t  else if (minmax_replacement (bb, bb1, e1, e2, phi, arg0, arg1))\n \t    cfgchanged = true;\n \t}\n@@ -1517,6 +1523,136 @@ minmax_replacement (basic_block cond_bb, basic_block middle_bb,\n   return true;\n }\n \n+/* Convert\n+\n+   <bb 2>\n+   if (b_4(D) != 0)\n+   goto <bb 3>\n+   else\n+   goto <bb 4>\n+\n+   <bb 3>\n+   _2 = (unsigned long) b_4(D);\n+   _9 = __builtin_popcountl (_2);\n+   OR\n+   _9 = __builtin_popcountl (b_4(D));\n+\n+   <bb 4>\n+   c_12 = PHI <0(2), _9(3)>\n+\n+   Into\n+   <bb 2>\n+   _2 = (unsigned long) b_4(D);\n+   _9 = __builtin_popcountl (_2);\n+   OR\n+   _9 = __builtin_popcountl (b_4(D));\n+\n+   <bb 4>\n+   c_12 = PHI <_9(2)>\n+*/\n+\n+static bool\n+cond_removal_in_popcount_pattern (basic_block cond_bb, basic_block middle_bb,\n+\t\t\t\t  edge e1, edge e2,\n+\t\t\t\t  gimple *phi, tree arg0, tree arg1)\n+{\n+  gimple *cond;\n+  gimple_stmt_iterator gsi, gsi_from;\n+  gimple *popcount;\n+  gimple *cast = NULL;\n+  tree lhs, arg;\n+\n+  /* Check that\n+   _2 = (unsigned long) b_4(D);\n+   _9 = __builtin_popcountl (_2);\n+   OR\n+   _9 = __builtin_popcountl (b_4(D));\n+   are the only stmts in the middle_bb.  */\n+\n+  gsi = gsi_start_nondebug_after_labels_bb (middle_bb);\n+  if (gsi_end_p (gsi))\n+    return false;\n+  cast = gsi_stmt (gsi);\n+  gsi_next_nondebug (&gsi);\n+  if (!gsi_end_p (gsi))\n+    {\n+      popcount = gsi_stmt (gsi);\n+      gsi_next_nondebug (&gsi);\n+      if (!gsi_end_p (gsi))\n+\treturn false;\n+    }\n+  else\n+    {\n+      popcount = cast;\n+      cast = NULL;\n+    }\n+\n+  /* Check that we have a popcount builtin.  */\n+  if (!is_gimple_call (popcount))\n+    return false;\n+  combined_fn cfn = gimple_call_combined_fn (popcount);\n+  switch (cfn)\n+    {\n+    CASE_CFN_POPCOUNT:\n+      break;\n+    default:\n+      return false;\n+    }\n+\n+  arg = gimple_call_arg (popcount, 0);\n+  lhs = gimple_get_lhs (popcount);\n+\n+  if (cast)\n+    {\n+      /* We have a cast stmt feeding popcount builtin.  */\n+      /* Check that we have a cast prior to that.  */\n+      if (gimple_code (cast) != GIMPLE_ASSIGN\n+\t  || !CONVERT_EXPR_CODE_P (gimple_assign_rhs_code (cast)))\n+\treturn false;\n+      /* Result of the cast stmt is the argument to the builtin.  */\n+      if (arg != gimple_assign_lhs (cast))\n+\treturn false;\n+      arg = gimple_assign_rhs1 (cast);\n+    }\n+\n+  /* Canonicalize.  */\n+  if (e2->flags & EDGE_TRUE_VALUE)\n+    {\n+      std::swap (arg0, arg1);\n+      std::swap (e1, e2);\n+    }\n+\n+  /* Check PHI arguments.  */\n+  if (lhs != arg0 || !integer_zerop (arg1))\n+    return false;\n+\n+  cond = last_stmt (cond_bb);\n+\n+  /* Cond_bb has a check for b_4 != 0 before calling the popcount\n+     builtin.  */\n+  if (gimple_code (cond) != GIMPLE_COND\n+      || gimple_cond_code (cond) != NE_EXPR\n+      || !integer_zerop (gimple_cond_rhs (cond))\n+      || arg != gimple_cond_lhs (cond))\n+    return false;\n+\n+  /* And insert the popcount builtin and cast stmt before the cond_bb.  */\n+  gsi = gsi_last_bb (cond_bb);\n+  if (cast)\n+    {\n+      gsi_from = gsi_for_stmt (cast);\n+      gsi_move_before (&gsi_from, &gsi);\n+      reset_flow_sensitive_info (gimple_get_lhs (cast));\n+    }\n+  gsi_from = gsi_for_stmt (popcount);\n+  gsi_move_before (&gsi_from, &gsi);\n+  reset_flow_sensitive_info (gimple_get_lhs (popcount));\n+\n+  /* Now update the PHI and remove unneeded bbs.  */\n+  replace_phi_edge_with_variable (cond_bb, e2, phi, lhs);\n+  return true;\n+}\n+\n /*  The function absolute_replacement does the main work of doing the absolute\n     replacement.  Return true if the replacement is done.  Otherwise return\n     false."}]}