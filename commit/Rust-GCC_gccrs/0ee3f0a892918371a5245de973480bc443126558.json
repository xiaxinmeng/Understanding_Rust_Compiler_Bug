{"sha": "0ee3f0a892918371a5245de973480bc443126558", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGVlM2YwYTg5MjkxODM3MWE1MjQ1ZGU5NzM0ODBiYzQ0MzEyNjU1OA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2007-09-16T17:26:42Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2007-09-16T17:26:42Z"}, "message": "re PR c++/32756 (wrong ambiguous overload error?)\n\n\tcp/\n\tPR c++/32756\n\t* call.c (maybe_handle_implicit_object): Set this_p, clear\n\trvaluedness_matches_p.\n\t(compare_ics): Do not compare rvaluedness matching when one of the\n\toperands is an implicit object.\n\n\ttestsuite/\n\tPR c++/32756\n\t* g++.dg/overload/operator3.C: New.\n\nFrom-SVN: r128528", "tree": {"sha": "16195234eba827edd3e29d3d1df861daf7be358d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16195234eba827edd3e29d3d1df861daf7be358d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ee3f0a892918371a5245de973480bc443126558", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ee3f0a892918371a5245de973480bc443126558", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ee3f0a892918371a5245de973480bc443126558", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ee3f0a892918371a5245de973480bc443126558/comments", "author": null, "committer": null, "parents": [{"sha": "ce616dd5acdb51f6ee1705e95c20b1f9f4e41525", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce616dd5acdb51f6ee1705e95c20b1f9f4e41525", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce616dd5acdb51f6ee1705e95c20b1f9f4e41525"}], "stats": {"total": 75, "additions": 64, "deletions": 11}, "files": [{"sha": "6e8a8b9e5b910836ad1571283ae65e432ff9f35a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee3f0a892918371a5245de973480bc443126558/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee3f0a892918371a5245de973480bc443126558/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0ee3f0a892918371a5245de973480bc443126558", "patch": "@@ -1,3 +1,16 @@\n+2007-09-16  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tcp/\n+\tPR c++/32756\n+\t* call.c (maybe_handle_implicit_object): Set this_p, clear\n+\trvaluedness_matches_p.\n+\t(compare_ics): Do not compare rvaluedness matching when one of the\n+\toperands is an implicit object.\n+\n+\ttestsuite/\n+\tPR c++/32756\n+\t* g++.dg/overload/operator3.C: New.\n+\n 2007-09-14  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/17743, c++/19163"}, {"sha": "dc90d1952e10d94e3d183fb4d1c5301b7fc97ce9", "filename": "gcc/cp/call.c", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee3f0a892918371a5245de973480bc443126558/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee3f0a892918371a5245de973480bc443126558/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=0ee3f0a892918371a5245de973480bc443126558", "patch": "@@ -5767,7 +5767,8 @@ maybe_handle_implicit_object (conversion **ics)\n \tt = t->u.next;\n       t = build_identity_conv (TREE_TYPE (t->type), NULL_TREE);\n       t = direct_reference_binding (reference_type, t);\n-      t->rvaluedness_matches_p = 1;\n+      t->this_p = 1;\n+      t->rvaluedness_matches_p = 0;\n       *ics = t;\n     }\n }\n@@ -6126,18 +6127,21 @@ compare_ics (conversion *ics1, conversion *ics2)\n      initialized by S2 refers is more cv-qualified than the type to\n      which the reference initialized by S1 refers */\n \n-  if (ref_conv1 && ref_conv2\n-      && same_type_ignoring_top_level_qualifiers_p (to_type1, to_type2))\n+  if (ref_conv1 && ref_conv2)\n     {\n-      if (ref_conv1->rvaluedness_matches_p\n-\t  && !ref_conv2->rvaluedness_matches_p)\n-\treturn 1;\n-      else if (!ref_conv1->rvaluedness_matches_p\n-\t  && ref_conv2->rvaluedness_matches_p)\n-\treturn -1;\n+      if (!ref_conv1->this_p && !ref_conv2->this_p\n+\t  && (TYPE_REF_IS_RVALUE (ref_conv1->type)\n+\t      != TYPE_REF_IS_RVALUE (ref_conv2->type)))\n+\t{\n+\t  if (ref_conv1->rvaluedness_matches_p)\n+\t    return 1;\n+\t  if (ref_conv2->rvaluedness_matches_p)\n+\t    return -1;\n+\t}\n \n-      return comp_cv_qualification (TREE_TYPE (ref_conv2->type),\n-\t\t\t\t    TREE_TYPE (ref_conv1->type));\n+      if (same_type_ignoring_top_level_qualifiers_p (to_type1, to_type2))\n+\treturn comp_cv_qualification (TREE_TYPE (ref_conv2->type),\n+\t\t\t\t      TREE_TYPE (ref_conv1->type));\n     }\n \n   /* Neither conversion sequence is better than the other.  */"}, {"sha": "d99cdad19416c098f14444226c4a2bfd50631f64", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee3f0a892918371a5245de973480bc443126558/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee3f0a892918371a5245de973480bc443126558/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0ee3f0a892918371a5245de973480bc443126558", "patch": "@@ -1,3 +1,8 @@\n+2007-09-16  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/32756\n+\t* g++.dg/overload/operator3.C: New.\n+\n 2007-09-16  Richard Sandiford  <rsandifo@nildram.co.uk>\n \n \t* gcc.target/mips/truncate-1.c: New test."}, {"sha": "ff56967886eea2952fa2246d42a5281b191300af", "filename": "gcc/testsuite/g++.dg/overload/operator3.C", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee3f0a892918371a5245de973480bc443126558/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Foperator3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee3f0a892918371a5245de973480bc443126558/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Foperator3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Foperator3.C?ref=0ee3f0a892918371a5245de973480bc443126558", "patch": "@@ -0,0 +1,31 @@\n+// PR c++/32756\n+// { dg-do compile }\n+\n+// bogus overload warning\n+\n+class QString;\n+\n+struct QByteArray\n+{\n+  QByteArray ();\n+  bool operator!= (const QString & s2) const;\n+};\n+\n+bool operator!= (const QByteArray & a1, const QByteArray & a2);\n+\n+struct QString\n+{\n+  QString ();\n+  QString (const QByteArray & a);\n+};\n+\n+QByteArray abbreviation ();\n+\n+void\n+fromString ()\n+{\n+  QByteArray zoneAbbrev;\n+  if (abbreviation () != zoneAbbrev)\n+    {\n+    }\n+}"}]}