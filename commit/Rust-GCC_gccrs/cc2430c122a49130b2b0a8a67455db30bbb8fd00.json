{"sha": "cc2430c122a49130b2b0a8a67455db30bbb8fd00", "node_id": "C_kwDOANBUbNoAKGNjMjQzMGMxMjJhNDkxMzBiMmIwYThhNjc0NTVkYjMwYmJiOGZkMDA", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-02-08T00:16:24Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-02-08T00:16:24Z"}, "message": "Daily bump.", "tree": {"sha": "da20d0873c659eb844a437ff64073d0bbb82ea0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da20d0873c659eb844a437ff64073d0bbb82ea0f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc2430c122a49130b2b0a8a67455db30bbb8fd00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc2430c122a49130b2b0a8a67455db30bbb8fd00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc2430c122a49130b2b0a8a67455db30bbb8fd00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc2430c122a49130b2b0a8a67455db30bbb8fd00/comments", "author": null, "committer": null, "parents": [{"sha": "0c04ac0e15830b94a9f1e0715d92a4a2558dda03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c04ac0e15830b94a9f1e0715d92a4a2558dda03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c04ac0e15830b94a9f1e0715d92a4a2558dda03"}], "stats": {"total": 137, "additions": 136, "deletions": 1}, "files": [{"sha": "16967153a2cfaaadad86c0339027aeae9dcbb5a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc2430c122a49130b2b0a8a67455db30bbb8fd00/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc2430c122a49130b2b0a8a67455db30bbb8fd00/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cc2430c122a49130b2b0a8a67455db30bbb8fd00", "patch": "@@ -1,3 +1,49 @@\n+2022-02-07  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* config/arm/arm_neon.h (vusdotq_s32, vusdot_laneq_s32,\n+\tvusdotq_laneq_s32, vsudot_laneq_s32, vsudotq_laneq_s32): New\n+\t* config/arm/arm_neon_builtins.def (usdot): Add V16QI.\n+\t(usdot_laneq, sudot_laneq): New.\n+\t* config/arm/neon.md (neon_<sup>dot_laneq<vsi2qi>): New.\n+\t(neon_<sup>dot_lane<vsi2qi>): Remote unneeded code.\n+\n+2022-02-07  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* config/arm/arm_neon.h (vdot_laneq_u32, vdotq_laneq_u32,\n+\tvdot_laneq_s32, vdotq_laneq_s32): New.\n+\t* config/arm/arm_neon_builtins.def (sdot_laneq, udot_laneq): New.\n+\t* config/arm/neon.md (neon_<sup>dot<vsi2qi>): New.\n+\t(<sup>dot_prod<vsi2qi>): Re-order rtl.\n+\t(neon_<sup>dot_lane<vsi2qi>): Fix rtl order and endiannes.\n+\t(neon_<sup>dot_laneq<vsi2qi>): New.\n+\n+2022-02-07  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\tPR target/104327\n+\t* config/s390/s390.cc (s390_can_inline_p): Accept a few more flags\n+\tif always_inline is set. Don't inline when tune differs without\n+\talways_inline.\n+\n+2022-02-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/104402\n+\t* gimple-expr.cc (is_gimple_condexpr): _Complex typed\n+\tcompares are not valid.\n+\t* tree-cfg.cc (verify_gimple_assign_ternary): For COND_EXPR\n+\tcheck is_gimple_condexpr.\n+\n+2022-02-07  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\tPR target/103627\n+\t* config/rs6000/rs6000.cc (rs6000_option_override_internal): Move the\n+\thunk affecting VSX and ALTIVEC to appropriate place.\n+\n+2022-02-07  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\tPR target/103627\n+\t* config/rs6000/rs6000.cc (rs6000_option_override_internal): Disable\n+\tMMA if !TARGET_VSX.\n+\n 2022-02-06  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/89074"}, {"sha": "1827d2b902ae222f7cc53ce6c690963136aaaedf", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc2430c122a49130b2b0a8a67455db30bbb8fd00/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc2430c122a49130b2b0a8a67455db30bbb8fd00/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=cc2430c122a49130b2b0a8a67455db30bbb8fd00", "patch": "@@ -1 +1 @@\n-20220207\n+20220208"}, {"sha": "0d452a83e8ff37b20696b8e2dd7c0fc409741c57", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc2430c122a49130b2b0a8a67455db30bbb8fd00/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc2430c122a49130b2b0a8a67455db30bbb8fd00/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=cc2430c122a49130b2b0a8a67455db30bbb8fd00", "patch": "@@ -1,3 +1,17 @@\n+2022-02-07  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/104417\n+\t* sm-taint.cc (tainted_allocation_size::tainted_allocation_size):\n+\tRemove overzealous assertion.\n+\t(tainted_allocation_size::emit): Likewise.\n+\t(region_model::check_dynamic_size_for_taint): Likewise.\n+\n+2022-02-07  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/103872\n+\t* region-model-impl-calls.cc (region_model::impl_call_memcpy):\n+\tReimplement in terms of a get_store_value followed by a set_value.\n+\n 2022-02-03  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/104369"}, {"sha": "c5a6e9020c1e396138b0b373e71c15f4491065d3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc2430c122a49130b2b0a8a67455db30bbb8fd00/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc2430c122a49130b2b0a8a67455db30bbb8fd00/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cc2430c122a49130b2b0a8a67455db30bbb8fd00", "patch": "@@ -1,3 +1,78 @@\n+2022-02-07  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/104417\n+\t* gcc.dg/analyzer/pr104417.c: New test.\n+\n+2022-02-07  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/103872\n+\t* gcc.dg/analyzer/memcpy-1.c: Add alternate versions of test cases\n+\tin which the calls to memcpy are hidden from the optimizer.  Add\n+\tfurther test cases.\n+\t* gcc.dg/analyzer/taint-size-1.c: Add test coverage for memcpy\n+\twith tainted size.\n+\n+2022-02-07  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* gcc.dg/analyzer/asm-x86-1.c: Use dg-do \"compile\" rather than\n+\t\"assemble\".\n+\t* gcc.dg/analyzer/asm-x86-lp64-1.c: Likewise.\n+\t* gcc.dg/analyzer/asm-x86-lp64-2.c: Likewise.\n+\t* gcc.dg/analyzer/torture/asm-x86-linux-array_index_mask_nospec.c:\n+\tLikewise.\n+\t* gcc.dg/analyzer/torture/asm-x86-linux-cpuid-paravirt-1.c:\n+\tLikewise, and restrict to x86_64-pc-linux-gnu.\n+\t* gcc.dg/analyzer/torture/asm-x86-linux-cpuid-paravirt-2.c: Likewise.\n+\t* gcc.dg/analyzer/torture/asm-x86-linux-cpuid.c: Use dg-do\n+\t\"compile\" rather than \"assemble\".\n+\t* gcc.dg/analyzer/torture/asm-x86-linux-rdmsr-paravirt.c:\n+\tLikewise, and restrict to x86_64-pc-linux-gnu.\n+\t* gcc.dg/analyzer/torture/asm-x86-linux-rdmsr.c: Use dg-do\n+\t\"compile\" rather than \"assemble\".\n+\t* gcc.dg/analyzer/torture/asm-x86-linux-wfx_get_ps_timeout-full.c:\n+\tLikewise.\n+\t* gcc.dg/analyzer/torture/asm-x86-linux-wfx_get_ps_timeout-reduced.c:\n+\tLikewise.\n+\n+2022-02-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/104380\n+\t* gcc.c-torture/execute/builtins/lib/chk.c (__sprintf_chkieee128,\n+\t__vsprintf_chkieee128, __snprintf_chkieee128,\n+\t__vsnprintf_chkieee128): New aliases to non-ieee128 suffixed functions\n+\tfor powerpc -mabi=ieeelongdouble.\n+\n+2022-02-07  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* gcc.target/arm/simd/vdot-2-1.c: Add new tests.\n+\t* gcc.target/arm/simd/vdot-2-2.c: Likewise and fix output.\n+\n+2022-02-07  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* gcc.target/arm/simd/vdot-compile.c: Add new cases.\n+\t* gcc.target/arm/simd/vdot-exec.c: Likewise.\n+\n+2022-02-07  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\tPR target/104327\n+\t* gcc.c-torture/compile/pr104327.c: New test.\n+\n+2022-02-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/104402\n+\t* gcc.dg/torture/pr104402.c: New testcase.\n+\n+2022-02-07  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\tPR target/103627\n+\t* gcc.target/powerpc/pr103627-3.c: New test.\n+\n+2022-02-07  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\tPR target/103627\n+\t* gcc.target/powerpc/pr103627-1.c: New test.\n+\t* gcc.target/powerpc/pr103627-2.c: New test.\n+\n 2022-02-06  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/96242"}]}