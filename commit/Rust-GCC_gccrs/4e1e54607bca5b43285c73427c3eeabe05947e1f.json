{"sha": "4e1e54607bca5b43285c73427c3eeabe05947e1f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGUxZTU0NjA3YmNhNWI0MzI4NWM3MzQyN2MzZWVhYmUwNTk0N2UxZg==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2000-08-04T23:03:21Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2000-08-04T23:03:21Z"}, "message": "c-common.c (time_char_table): Mark up formats added in C99 and make other corrections.\n\n\t* c-common.c (time_char_table): Mark up formats added in C99 and\n\tmake other corrections.  %D and %g were added in C99.  %Og is an\n\textension.  %EX is permitted.  %R, %T, %n, %r, %t were added in\n\tC99.  %e was added in C99.  %Oj is an extension.  %G and %z are in\n\tC99 rather than GNU extensions, but %OG and %Oz are extensions.\n\t%h was added in C99.  %C was added in C99.  %OY and %OC are\n\textensions.  Add the C99 format %F.\n\t(check_format_info): If pedantic and not in C99 mode, warn for C99\n\tformats, %E and %O.\n\nFrom-SVN: r35496", "tree": {"sha": "2aacb1a57c768f5b923c528cbb758e299392aa42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2aacb1a57c768f5b923c528cbb758e299392aa42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e1e54607bca5b43285c73427c3eeabe05947e1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e1e54607bca5b43285c73427c3eeabe05947e1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e1e54607bca5b43285c73427c3eeabe05947e1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e1e54607bca5b43285c73427c3eeabe05947e1f/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "018577e42637f1d1e57406142066b6f285a75ff4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/018577e42637f1d1e57406142066b6f285a75ff4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/018577e42637f1d1e57406142066b6f285a75ff4"}], "stats": {"total": 44, "additions": 35, "deletions": 9}, "files": [{"sha": "6f56ef5943496a0aacfeae823e6473a97f983a8d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e1e54607bca5b43285c73427c3eeabe05947e1f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e1e54607bca5b43285c73427c3eeabe05947e1f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e1e54607bca5b43285c73427c3eeabe05947e1f", "patch": "@@ -1,3 +1,15 @@\n+2000-08-04  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* c-common.c (time_char_table): Mark up formats added in C99 and\n+\tmake other corrections.  %D and %g were added in C99.  %Og is an\n+\textension.  %EX is permitted.  %R, %T, %n, %r, %t were added in\n+\tC99.  %e was added in C99.  %Oj is an extension.  %G and %z are in\n+\tC99 rather than GNU extensions, but %OG and %Oz are extensions.\n+\t%h was added in C99.  %C was added in C99.  %OY and %OC are\n+\textensions.  Add the C99 format %F.\n+\t(check_format_info): If pedantic and not in C99 mode, warn for C99\n+\tformats, %E and %O.\n+\n Fri Aug  4 23:01:58 2000  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* function.c (schedule_fixup_var_refs): New function, broken out"}, {"sha": "0814c4d125ad3cf49617cbd27869f4c8979b4349", "filename": "gcc/c-common.c", "status": "modified", "additions": 23, "deletions": 9, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e1e54607bca5b43285c73427c3eeabe05947e1f/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e1e54607bca5b43285c73427c3eeabe05947e1f/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=4e1e54607bca5b43285c73427c3eeabe05947e1f", "patch": "@@ -1268,22 +1268,31 @@ static format_char_info scan_char_table[] = {\n    'E' - E modifier is acceptable\n    'O' - O modifier is acceptable to Standard C\n    'o' - O modifier is acceptable as a GNU extension\n+   '9' - added to the C standard in C99\n    'G' - other GNU extensions  */\n \n static format_char_info time_char_table[] = {\n   { \"y\", \t\t0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"2EO-_0w\" },\n-  { \"D\", \t\t0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"2\" },\n-  { \"g\", \t\t0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"2O-_0w\" },\n+  { \"D\", \t\t0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"29\" },\n+  { \"g\", \t\t0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"2Oo-_0w9\" },\n   { \"cx\", \t\t0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"3E\" },\n-  { \"%RTXnrt\",\t\t0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"\" },\n+  { \"%\",\t\t0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"\" },\n+  { \"X\",\t\t0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"E\" },\n+  { \"RTnrt\",\t\t0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"9\" },\n   { \"P\",\t\t0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"G\" },\n-  { \"HIMSUWdemw\",\t0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"-_0Ow\" },\n-  { \"Vju\",\t\t0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"-_0Oow\" },\n-  { \"Gklsz\",\t\t0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"-_0OGw\" },\n+  { \"HIMSUWdmw\",\t0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"-_0Ow\" },\n+  { \"e\",\t\t0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"-_0Ow9\" },\n+  { \"j\",\t\t0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"-_0Oow\" },\n+  { \"Vu\",\t\t0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"-_0Ow9\" },\n+  { \"Gz\",\t\t0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"-_0Oow9\" },\n+  { \"kls\",\t\t0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"-_0OGw\" },\n   { \"ABZa\",\t\t0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"^#\" },\n   { \"p\",\t\t0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"#\" },\n-  { \"bh\",\t\t0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"^\" },\n-  { \"CY\",\t\t0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"-_0EOw\" },\n+  { \"b\",\t\t0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"^\" },\n+  { \"h\",\t\t0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"^9\" },\n+  { \"Y\",\t\t0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"-_0EOow\" },\n+  { \"F\",\t\t0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"w9\" },\n+  { \"C\",\t\t0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"-_0EOow9\" },\n   { NULL,\t\t0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL }\n };\n \n@@ -1900,9 +1909,14 @@ check_format_info (info, params)\n \t{\n \t  if (index (fci->flag_chars, 'G') != 0)\n \t    warning (\"ANSI C does not support `%%%c'\", format_char);\n-\t  if (index (fci->flag_chars, 'o') != 0\n+\t  if (index (fci->flag_chars, '9') != 0 && !flag_isoc99)\n+\t    warning (\"ANSI C does not support `%%%c'\", format_char);\n+\t  if ((index (fci->flag_chars, 'o') != 0\n+\t       || (!flag_isoc99 && index (fci->flag_chars, 'O') != 0))\n \t      && index (flag_chars, 'O') != 0)\n \t    warning (\"ANSI C does not support `%%O%c'\", format_char);\n+\t  if (!flag_isoc99 && index (flag_chars, 'E'))\n+\t    warning (\"ANSI C does not support `%%E%c'\", format_char);\n \t}\n       if (wide && index (fci->flag_chars, 'w') == 0)\n \twarning (\"width used with `%c' format\", format_char);"}]}