{"sha": "8b9db065c6b55cb5077d86a377c2015ef429e326", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI5ZGIwNjVjNmI1NWNiNTA3N2Q4NmEzNzdjMjAxNWVmNDI5ZTMyNg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2009-09-09T16:47:06Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2009-09-09T16:47:06Z"}, "message": "gimple.h (CASE_GIMPLE_OMP): New.\n\n* gimple.h (CASE_GIMPLE_OMP): New.\n        (is_gimple_omp): Use it.\n        * tree-cfg.c (is_ctrl_altering_stmt): Likewise.\n        (verify_gimple_debug): Likewise.\n\nFrom-SVN: r151565", "tree": {"sha": "7ff9b4837f50abdab01e59f816bf07c92e9a20fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ff9b4837f50abdab01e59f816bf07c92e9a20fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b9db065c6b55cb5077d86a377c2015ef429e326", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b9db065c6b55cb5077d86a377c2015ef429e326", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b9db065c6b55cb5077d86a377c2015ef429e326", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b9db065c6b55cb5077d86a377c2015ef429e326/comments", "author": null, "committer": null, "parents": [{"sha": "4056c2c6ed53e388c7bdbbb9aa80b6c8bd13d5c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4056c2c6ed53e388c7bdbbb9aa80b6c8bd13d5c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4056c2c6ed53e388c7bdbbb9aa80b6c8bd13d5c3"}], "stats": {"total": 98, "additions": 59, "deletions": 39}, "files": [{"sha": "22c9264639976a817782ee0256ea2b522cfa2f2b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b9db065c6b55cb5077d86a377c2015ef429e326/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b9db065c6b55cb5077d86a377c2015ef429e326/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8b9db065c6b55cb5077d86a377c2015ef429e326", "patch": "@@ -1,3 +1,10 @@\n+2009-09-09  Richard Henderson  <rth@redhat.com>\n+\n+\t* gimple.h (CASE_GIMPLE_OMP): New.\n+\t(is_gimple_omp): Use it.\n+\t* tree-cfg.c (is_ctrl_altering_stmt): Likewise.\n+\t(verify_gimple_debug): Likewise.\n+\n 2009-09-09  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/41101"}, {"sha": "6dce0b783577cfd244fe0fecd24e9df4eac4c4c5", "filename": "gcc/gimple.h", "status": "modified", "additions": 23, "deletions": 14, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b9db065c6b55cb5077d86a377c2015ef429e326/gcc%2Fgimple.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b9db065c6b55cb5077d86a377c2015ef429e326/gcc%2Fgimple.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.h?ref=8b9db065c6b55cb5077d86a377c2015ef429e326", "patch": "@@ -4190,23 +4190,32 @@ gimple_return_set_retval (gimple gs, tree retval)\n \n /* Returns true when the gimple statment STMT is any of the OpenMP types.  */\n \n+#define CASE_GIMPLE_OMP\t\t\t\t\\\n+    case GIMPLE_OMP_PARALLEL:\t\t\t\\\n+    case GIMPLE_OMP_TASK:\t\t\t\\\n+    case GIMPLE_OMP_FOR:\t\t\t\\\n+    case GIMPLE_OMP_SECTIONS:\t\t\t\\\n+    case GIMPLE_OMP_SECTIONS_SWITCH:\t\t\\\n+    case GIMPLE_OMP_SINGLE:\t\t\t\\\n+    case GIMPLE_OMP_SECTION:\t\t\t\\\n+    case GIMPLE_OMP_MASTER:\t\t\t\\\n+    case GIMPLE_OMP_ORDERED:\t\t\t\\\n+    case GIMPLE_OMP_CRITICAL:\t\t\t\\\n+    case GIMPLE_OMP_RETURN:\t\t\t\\\n+    case GIMPLE_OMP_ATOMIC_LOAD:\t\t\\\n+    case GIMPLE_OMP_ATOMIC_STORE:\t\t\\\n+    case GIMPLE_OMP_CONTINUE\n+\n static inline bool\n is_gimple_omp (const_gimple stmt)\n {\n-  return (gimple_code (stmt) == GIMPLE_OMP_PARALLEL\n-\t  || gimple_code (stmt) == GIMPLE_OMP_TASK\n-\t  || gimple_code (stmt) == GIMPLE_OMP_FOR\n-\t  || gimple_code (stmt) == GIMPLE_OMP_SECTIONS\n-\t  || gimple_code (stmt) == GIMPLE_OMP_SECTIONS_SWITCH\n-\t  || gimple_code (stmt) == GIMPLE_OMP_SINGLE\n-\t  || gimple_code (stmt) == GIMPLE_OMP_SECTION\n-\t  || gimple_code (stmt) == GIMPLE_OMP_MASTER\n-\t  || gimple_code (stmt) == GIMPLE_OMP_ORDERED\n-\t  || gimple_code (stmt) == GIMPLE_OMP_CRITICAL\n-\t  || gimple_code (stmt) == GIMPLE_OMP_RETURN\n-\t  || gimple_code (stmt) == GIMPLE_OMP_ATOMIC_LOAD\n-\t  || gimple_code (stmt) == GIMPLE_OMP_ATOMIC_STORE\n-\t  || gimple_code (stmt) == GIMPLE_OMP_CONTINUE);\n+  switch (gimple_code (stmt))\n+    {\n+    CASE_GIMPLE_OMP:\n+      return true;\n+    default:\n+      return false;\n+    }\n }\n \n "}, {"sha": "524422f1ec45d49c4c76471f5556072d29ede32e", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 29, "deletions": 25, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b9db065c6b55cb5077d86a377c2015ef429e326/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b9db065c6b55cb5077d86a377c2015ef429e326/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=8b9db065c6b55cb5077d86a377c2015ef429e326", "patch": "@@ -2748,24 +2748,30 @@ is_ctrl_altering_stmt (gimple t)\n {\n   gcc_assert (t);\n \n-  if (is_gimple_call (t))\n+  switch (gimple_code (t))\n     {\n-      int flags = gimple_call_flags (t);\n+    case GIMPLE_CALL:\n+      {\n+\tint flags = gimple_call_flags (t);\n \n-      /* A non-pure/const call alters flow control if the current\n-\t function has nonlocal labels.  */\n-      if (!(flags & (ECF_CONST | ECF_PURE))\n-\t  && cfun->has_nonlocal_label)\n-\treturn true;\n+\t/* A non-pure/const call alters flow control if the current\n+\t   function has nonlocal labels.  */\n+\tif (!(flags & (ECF_CONST | ECF_PURE)) && cfun->has_nonlocal_label)\n+\t  return true;\n \n-      /* A call also alters control flow if it does not return.  */\n-      if (gimple_call_flags (t) & ECF_NORETURN)\n-\treturn true;\n-    }\n+\t/* A call also alters control flow if it does not return.  */\n+\tif (gimple_call_flags (t) & ECF_NORETURN)\n+\t  return true;\n+      }\n+      break;\n \n-  /* OpenMP directives alter control flow.  */\n-  if (is_gimple_omp (t))\n-    return true;\n+    CASE_GIMPLE_OMP:\n+      /* OpenMP directives alter control flow.  */\n+      return true;\n+\n+    default:\n+      break;\n+    }\n \n   /* If a statement can throw, it alters control flow.  */\n   return stmt_can_throw_internal (t);\n@@ -4196,17 +4202,6 @@ verify_gimple_debug (gimple stmt ATTRIBUTE_UNUSED)\n static bool\n verify_types_in_gimple_stmt (gimple stmt)\n {\n-  if (is_gimple_omp (stmt))\n-    {\n-      /* OpenMP directives are validated by the FE and never operated\n-\t on by the optimizers.  Furthermore, GIMPLE_OMP_FOR may contain\n-\t non-gimple expressions when the main index variable has had\n-\t its address taken.  This does not affect the loop itself\n-\t because the header of an GIMPLE_OMP_FOR is merely used to determine\n-\t how to setup the parallel iteration.  */\n-      return false;\n-    }\n-\n   switch (gimple_code (stmt))\n     {\n     case GIMPLE_ASSIGN:\n@@ -4244,6 +4239,15 @@ verify_types_in_gimple_stmt (gimple stmt)\n     case GIMPLE_PREDICT:\n       return false;\n \n+    CASE_GIMPLE_OMP:\n+      /* OpenMP directives are validated by the FE and never operated\n+\t on by the optimizers.  Furthermore, GIMPLE_OMP_FOR may contain\n+\t non-gimple expressions when the main index variable has had\n+\t its address taken.  This does not affect the loop itself\n+\t because the header of an GIMPLE_OMP_FOR is merely used to determine\n+\t how to setup the parallel iteration.  */\n+      return false;\n+\n     case GIMPLE_DEBUG:\n       return verify_gimple_debug (stmt);\n "}]}