{"sha": "933cddd010b91313f948f52754addaa480b3b710", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTMzY2RkZDAxMGI5MTMxM2Y5NDhmNTI3NTRhZGRhYTQ4MGIzYjcxMA==", "commit": {"author": {"name": "Michael Hayes", "email": "m.hayes@elec.canterbury.ac.nz", "date": "1999-12-22T20:47:57Z"}, "committer": {"name": "Michael Hayes", "email": "m.hayes@gcc.gnu.org", "date": "1999-12-22T20:47:57Z"}, "message": "c4x.c (c4x_address_cost): Add statement to default case in switch.\n\n\t* config/c4x/c4x.c (c4x_address_cost): Add statement to default\n\tcase in switch.\n\nFrom-SVN: r31074", "tree": {"sha": "6685c8d1f802fe851c1959e10f603614e3c628e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6685c8d1f802fe851c1959e10f603614e3c628e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/933cddd010b91313f948f52754addaa480b3b710", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/933cddd010b91313f948f52754addaa480b3b710", "html_url": "https://github.com/Rust-GCC/gccrs/commit/933cddd010b91313f948f52754addaa480b3b710", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/933cddd010b91313f948f52754addaa480b3b710/comments", "author": null, "committer": null, "parents": [{"sha": "e55e18d63994334bedc97aa3c4d17a44b9543322", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e55e18d63994334bedc97aa3c4d17a44b9543322", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e55e18d63994334bedc97aa3c4d17a44b9543322"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "db7cdaa1e9a1598707ba025f95fc998a839b6a70", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/933cddd010b91313f948f52754addaa480b3b710/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/933cddd010b91313f948f52754addaa480b3b710/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=933cddd010b91313f948f52754addaa480b3b710", "patch": "@@ -1,3 +1,8 @@\n+1999-12-23  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n+\n+\t* config/c4x/c4x.c (c4x_address_cost): Add statement to default \n+\tcase in switch.\n+\n 1999-12-22  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n \n \t* config/c4x/c4x.md (*addqi3_noclobber_reload): Change operand 0"}, {"sha": "61c6466ae67afea7bd0d2a258ffb5c76597a97d4", "filename": "gcc/config/c4x/c4x.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/933cddd010b91313f948f52754addaa480b3b710/gcc%2Fconfig%2Fc4x%2Fc4x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/933cddd010b91313f948f52754addaa480b3b710/gcc%2Fconfig%2Fc4x%2Fc4x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.c?ref=933cddd010b91313f948f52754addaa480b3b710", "patch": "@@ -1652,6 +1652,7 @@ c4x_address_cost (addr)\n \t  }\n       }\n     default:\n+      break;\n     }\n   \n   return 4;\n@@ -2133,6 +2134,16 @@ c4x_rptb_nop_p (insn)\n }\n \n \n+/* The C4x looping instruction needs to be emitted at the top of the\n+  loop.  Emitting the true RTL for a looping instruction at the top of\n+  the loop can cause problems with flow analysis.  So instead, a dummy\n+  doloop insn is emitted at the end of the loop.  This routine checks\n+  for the presence of this doloop insn and then searches back to the\n+  top of the loop, where it inserts the true looping insn (provided\n+  there are no instructions in the loop which would cause problems).\n+  Any additional labels can be emitted at this point.  In addition, if\n+  the desired loop count register was not allocated, this routine does\n+  nothing.  */\n void\n c4x_rptb_insert (insn)\n      rtx insn;\n@@ -2436,6 +2447,7 @@ c4x_R_constraint (op)\n \treturn IS_UINT5_CONST (INTVAL (op1));\n       }\n       break;\n+\n     default:\n       break;\n     }\n@@ -2540,6 +2552,7 @@ c4x_S_constraint (op)\n \treturn IS_DISP1_CONST (INTVAL (op1));\n       }\n       break;\n+\n     default:\n       break;\n     }\n@@ -2854,6 +2867,7 @@ not_modify_reg (op, mode)\n     case SYMBOL_REF:\n     case LABEL_REF:\n       return 1;\n+\n     default:\n       break;\n     }\n@@ -3923,6 +3937,7 @@ c4x_arn_mem_operand (op, mode, regno)\n \t      return 1;\n \t  }\n \t  break;\n+\n \tdefault:\n \t  break;\n \t}"}]}