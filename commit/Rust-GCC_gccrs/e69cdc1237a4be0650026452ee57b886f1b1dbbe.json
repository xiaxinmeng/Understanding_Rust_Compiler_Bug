{"sha": "e69cdc1237a4be0650026452ee57b886f1b1dbbe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTY5Y2RjMTIzN2E0YmUwNjUwMDI2NDUyZWU1N2I4ODZmMWIxZGJiZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2003-11-02T08:32:23Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-11-02T08:32:23Z"}, "message": "re PR rtl-optimization/12799 (faulty mov->add change clobbers the CC register)\n\n\tPR optimization/12799\n\t* postreload.c (reload_cse_move2add): Generate the add2\n\tpatterns manually.\n\nFrom-SVN: r73195", "tree": {"sha": "f9f98447bfc855ed01ad956bcc0821924a93fa02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9f98447bfc855ed01ad956bcc0821924a93fa02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e69cdc1237a4be0650026452ee57b886f1b1dbbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e69cdc1237a4be0650026452ee57b886f1b1dbbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e69cdc1237a4be0650026452ee57b886f1b1dbbe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e69cdc1237a4be0650026452ee57b886f1b1dbbe/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0a9e65f99932bf26e1b6fe2cab23f939eeba37bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a9e65f99932bf26e1b6fe2cab23f939eeba37bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a9e65f99932bf26e1b6fe2cab23f939eeba37bc"}], "stats": {"total": 70, "additions": 58, "deletions": 12}, "files": [{"sha": "515b5900703e2e2885ec7e96c12332a9cd73f065", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e69cdc1237a4be0650026452ee57b886f1b1dbbe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e69cdc1237a4be0650026452ee57b886f1b1dbbe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e69cdc1237a4be0650026452ee57b886f1b1dbbe", "patch": "@@ -1,3 +1,9 @@\n+2003-11-02  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR optimization/12799\n+\t* postreload.c (reload_cse_move2add): Generate the add2\n+\tpatterns manually.\n+\n 2003-11-02  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* config/sparc/sparc.c (function_arg_partial_nregs) [TARGET_ARCH64]:"}, {"sha": "b55c4476f2dbdf49aab245431becd0d6bfc1e15c", "filename": "gcc/postreload.c", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e69cdc1237a4be0650026452ee57b886f1b1dbbe/gcc%2Fpostreload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e69cdc1237a4be0650026452ee57b886f1b1dbbe/gcc%2Fpostreload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload.c?ref=e69cdc1237a4be0650026452ee57b886f1b1dbbe", "patch": "@@ -1199,14 +1199,12 @@ reload_cse_move2add (rtx first)\n \t\t  else if (rtx_cost (new_src, PLUS) < rtx_cost (src, SET)\n \t\t\t   && have_add2_insn (reg, new_src))\n \t\t    {\n-\t\t      rtx newpat = gen_add2_insn (reg, new_src);\n-\t\t      if (INSN_P (newpat) && NEXT_INSN (newpat) == NULL_RTX)\n-\t\t\tnewpat = PATTERN (newpat);\n-\t\t      /* If it was the first insn of a sequence or\n-\t\t\t some other emitted insn, validate_change will\n-\t\t\t reject it.  */\n-\t\t      validate_change (insn, &PATTERN (insn),\n-\t\t\t\t       newpat, 0);\n+\t\t      rtx newpat = gen_rtx_SET (VOIDmode,\n+\t\t\t\t\t\treg,\n+\t\t\t\t\t\tgen_rtx_PLUS (GET_MODE (reg),\n+\t\t\t\t\t\t \t      reg,\n+\t\t\t\t\t\t \t      new_src));\n+\t\t      validate_change (insn, &PATTERN (insn), newpat, 0);\n \t\t    }\n \t\t  else\n \t\t    {\n@@ -1288,10 +1286,11 @@ reload_cse_move2add (rtx first)\n \t\t\t\t< COSTS_N_INSNS (1) + rtx_cost (src3, SET))\n \t\t\t       && have_add2_insn (reg, new_src))\n \t\t\t{\n-\t\t\t  rtx newpat = gen_add2_insn (reg, new_src);\n-\t\t\t  if (INSN_P (newpat)\n-\t\t\t      && NEXT_INSN (newpat) == NULL_RTX)\n-\t\t\t    newpat = PATTERN (newpat);\n+\t\t\t  rtx newpat = gen_rtx_SET (VOIDmode,\n+\t\t\t\t\t\t    reg,\n+\t\t\t\t\t\t    gen_rtx_PLUS (GET_MODE (reg),\n+\t\t\t\t\t\t \t\t  reg,\n+\t\t\t\t\t\t\t\t  new_src));\n \t\t\t  success\n \t\t\t    = validate_change (next, &PATTERN (next),\n \t\t\t\t\t       newpat, 0);"}, {"sha": "be2cc850cf2e36c12c403d865388babc43c82d2d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e69cdc1237a4be0650026452ee57b886f1b1dbbe/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e69cdc1237a4be0650026452ee57b886f1b1dbbe/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e69cdc1237a4be0650026452ee57b886f1b1dbbe", "patch": "@@ -1,3 +1,7 @@\n+2003-11-02  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gcc.dg/20031102-1.c: New test.\n+\n 2003-11-02  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* gcc.dg/complex-1.c: New test."}, {"sha": "4da4e6a8cc01e1e7374dc194e3e089f7fa411291", "filename": "gcc/testsuite/gcc.dg/20031102-1.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e69cdc1237a4be0650026452ee57b886f1b1dbbe/gcc%2Ftestsuite%2Fgcc.dg%2F20031102-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e69cdc1237a4be0650026452ee57b886f1b1dbbe/gcc%2Ftestsuite%2Fgcc.dg%2F20031102-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20031102-1.c?ref=e69cdc1237a4be0650026452ee57b886f1b1dbbe", "patch": "@@ -0,0 +1,37 @@\n+/* PR optimization/12799 */\n+/* Origin: Pratap Subrahmanyam <pratap@vmware.com> */\n+\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-options \"-O2 -march=i686\" { target i686-*-* } } */\n+\n+/* Verify that reload_cse_move2add doesn't add unexpected CLOBBERs. */\n+\n+extern void abort(void);\n+\n+int loo = 1;\n+\n+__inline__ char InlineFunc(void)\n+{\n+  return __builtin_expect(!!(loo == 1), 1);\n+}\n+\n+int FooBar(void)\n+{\n+  int i;\n+  int var1 = InlineFunc() ? 2046 : 1023;\n+  int var2 = InlineFunc() ? 512 : 1024;\n+\n+  for (i = 0; i < var1; i++)\n+    ;\n+\n+  if (InlineFunc() && var2 != 512)\n+    abort();\n+\n+  return 0;\n+}\n+\n+int main(void)\n+{\n+  return FooBar();\n+}"}]}