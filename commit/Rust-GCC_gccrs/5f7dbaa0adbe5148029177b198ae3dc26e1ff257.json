{"sha": "5f7dbaa0adbe5148029177b198ae3dc26e1ff257", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY3ZGJhYTBhZGJlNTE0ODAyOTE3N2IxOThhZTNkYzI2ZTFmZjI1Nw==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2018-11-02T13:36:31Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2018-11-02T13:36:31Z"}, "message": "Although there's no fundamental reason why shrink wrapping and speculation tracking are incompatible...\n\nAlthough there's no fundamental reason why shrink wrapping and\nspeculation tracking are incompatible, a phase-ordering requirement\n(we need to do speculation tracking before the final basic block\nclean-up) means that the shrink wrapping pass can undo some of the\nchanges the speculation tracking pass makes.  The result is that the\ntracking, while still safe is less comprehensive than we really want.\n\nSo to keep things simple, and because the tracking code is quite\nexpensive anyway, it seems best to just disable that pass when we are\ntracking speculative execution.\n\n\t * config/aarch64/aarch64.c (aarch64_override_options): Disable\n\t shrink-wrapping when -mtrack-speculation.\n\nFrom-SVN: r265747", "tree": {"sha": "7bc293d3f558b3a1a46af0fbbe90f11082d072ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7bc293d3f558b3a1a46af0fbbe90f11082d072ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f7dbaa0adbe5148029177b198ae3dc26e1ff257", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f7dbaa0adbe5148029177b198ae3dc26e1ff257", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f7dbaa0adbe5148029177b198ae3dc26e1ff257", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f7dbaa0adbe5148029177b198ae3dc26e1ff257/comments", "author": null, "committer": null, "parents": [{"sha": "4c998ca548aa95e48f095604e96732de8d03de1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c998ca548aa95e48f095604e96732de8d03de1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c998ca548aa95e48f095604e96732de8d03de1c"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "3ddb1492ede994cc6d9e270ba2baaf52b4e17892", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f7dbaa0adbe5148029177b198ae3dc26e1ff257/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f7dbaa0adbe5148029177b198ae3dc26e1ff257/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5f7dbaa0adbe5148029177b198ae3dc26e1ff257", "patch": "@@ -1,3 +1,8 @@\n+2018-11-02  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* config/aarch64/aarch64.c ((aarch64_override_options): Disable\n+\tshrink-wrapping when -mtrack-speculation.\n+\n 2018-11-02  Richard Biener  <rguenther@suse.de>\n \n \t* tree-ssa-coalesce.c (struct coalesce_list): Add obstack member."}, {"sha": "c82c7b6aa2c3f346a551afdd368eff8bd7544d2c", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f7dbaa0adbe5148029177b198ae3dc26e1ff257/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f7dbaa0adbe5148029177b198ae3dc26e1ff257/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=5f7dbaa0adbe5148029177b198ae3dc26e1ff257", "patch": "@@ -11407,6 +11407,12 @@ aarch64_override_options (void)\n        || (aarch64_arch_string && valid_arch))\n     gcc_assert (explicit_arch != aarch64_no_arch);\n \n+  /* The pass to insert speculation tracking runs before\n+     shrink-wrapping and the latter does not know how to update the\n+     tracking status.  So disable it in this case.  */\n+  if (aarch64_track_speculation)\n+    flag_shrink_wrap = 0;\n+\n   aarch64_override_options_internal (&global_options);\n \n   /* Save these options as the default ones in case we push and pop them later"}]}