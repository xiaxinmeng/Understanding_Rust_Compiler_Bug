{"sha": "85087bcb0d17eeb4d3621f7b4baa954fb17e96d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODUwODdiY2IwZDE3ZWViNGQzNjIxZjdiNGJhYTk1NGZiMTdlOTZkMQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2009-04-20T11:34:59Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2009-04-20T11:34:59Z"}, "message": "trans.c (check_for_eliminated_entity): Remove.\n\n\t* gcc-interface/trans.c (check_for_eliminated_entity): Remove.\n\t(Attribute_to_gnu): Do not call check_for_eliminated_entity.\n\t(call_to_gnu): Likewise.\n\nFrom-SVN: r146400", "tree": {"sha": "ac9dded3658d8f15181fe319531b616f0b265c6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac9dded3658d8f15181fe319531b616f0b265c6b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85087bcb0d17eeb4d3621f7b4baa954fb17e96d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85087bcb0d17eeb4d3621f7b4baa954fb17e96d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85087bcb0d17eeb4d3621f7b4baa954fb17e96d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85087bcb0d17eeb4d3621f7b4baa954fb17e96d1/comments", "author": null, "committer": null, "parents": [{"sha": "c4551b28a74c661f07943831640d2378c2f1277e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4551b28a74c661f07943831640d2378c2f1277e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4551b28a74c661f07943831640d2378c2f1277e"}], "stats": {"total": 29, "additions": 6, "deletions": 23}, "files": [{"sha": "d94ea39bc94ba8900bb91a350781e543bd6df4d6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85087bcb0d17eeb4d3621f7b4baa954fb17e96d1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85087bcb0d17eeb4d3621f7b4baa954fb17e96d1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=85087bcb0d17eeb4d3621f7b4baa954fb17e96d1", "patch": "@@ -1,3 +1,9 @@\n+2009-04-20  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (check_for_eliminated_entity): Remove.\n+\t(Attribute_to_gnu): Do not call check_for_eliminated_entity.\n+\t(call_to_gnu): Likewise.\n+\n 2009-04-20  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (gigi): Declare the name of the compilation"}, {"sha": "0b29e3312cd843b5869f7d14fb8afeeab76e319b", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85087bcb0d17eeb4d3621f7b4baa954fb17e96d1/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85087bcb0d17eeb4d3621f7b4baa954fb17e96d1/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=85087bcb0d17eeb4d3621f7b4baa954fb17e96d1", "patch": "@@ -1058,23 +1058,6 @@ Pragma_to_gnu (Node_Id gnat_node)\n   return gnu_result;\n }\n \f\n-/* Issue an error message if GNAT_NODE references an eliminated entity.  */\n-\n-static void\n-check_for_eliminated_entity (Node_Id gnat_node)\n-{\n-  switch (Nkind (gnat_node))\n-    {\n-    case N_Identifier:\n-    case N_Operator_Symbol:\n-    case N_Expanded_Name:\n-    case N_Attribute_Reference:\n-      if (Is_Eliminated (Entity (gnat_node)))\n-\tEliminate_Error_Msg (gnat_node, Entity (gnat_node));\n-      break;\n-    }\n-}\n-\n /* Subroutine of gnat_to_gnu to translate gnat_node, an N_Attribute,\n    to a GCC tree, which is returned.  GNU_RESULT_TYPE_P is a pointer to\n    where we should place the result type.  ATTRIBUTE is the attribute ID.  */\n@@ -1215,8 +1198,6 @@ Attribute_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p, int attribute)\n \t don't try to build a trampoline.  */\n       if (attribute == Attr_Code_Address)\n \t{\n-\t  check_for_eliminated_entity (Prefix (gnat_node));\n-\n \t  for (gnu_expr = gnu_result;\n \t       CONVERT_EXPR_P (gnu_expr);\n \t       gnu_expr = TREE_OPERAND (gnu_expr, 0))\n@@ -1231,8 +1212,6 @@ Attribute_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p, int attribute)\n \t a useful warning with -Wtrampolines.  */\n       else if (TREE_CODE (TREE_TYPE (gnu_prefix)) == FUNCTION_TYPE)\n \t{\n-\t  check_for_eliminated_entity (Prefix (gnat_node));\n-\n \t  for (gnu_expr = gnu_result;\n \t       CONVERT_EXPR_P (gnu_expr);\n \t       gnu_expr = TREE_OPERAND (gnu_expr, 0))\n@@ -2357,8 +2336,6 @@ call_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p, tree gnu_target)\n   tree gnu_after_list = NULL_TREE;\n   tree gnu_subprog_call;\n \n-  check_for_eliminated_entity (Name (gnat_node));\n-\n   gcc_assert (TREE_CODE (gnu_subprog_type) == FUNCTION_TYPE);\n \n   /* If we are calling a stubbed function, make this into a raise of"}]}