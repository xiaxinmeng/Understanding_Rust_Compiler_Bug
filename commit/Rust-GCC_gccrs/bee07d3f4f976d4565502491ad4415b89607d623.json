{"sha": "bee07d3f4f976d4565502491ad4415b89607d623", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVlMDdkM2Y0Zjk3NmQ0NTY1NTAyNDkxYWQ0NDE1Yjg5NjA3ZDYyMw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-02-21T18:41:48Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-02-21T18:41:48Z"}, "message": "combine.c (SHIFT_COUNT_TRUNCATED): Remove.\n\n\t* combine.c (SHIFT_COUNT_TRUNCATED): Remove.\n\t* defaults.h (SHIFT_COUNT_TRUNCATED): Provide the default.\n\t* expmed.c: Assume SHIFT_COUNT_TRUNCATED is always defined.\n\t* fold-const.c: Likewise.\n\t* simplify-rtx.c: Likewise.\n\nFrom-SVN: r78230", "tree": {"sha": "60efc7ad585a3a2b23b41180fd391ad6d60e8cdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60efc7ad585a3a2b23b41180fd391ad6d60e8cdf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bee07d3f4f976d4565502491ad4415b89607d623", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bee07d3f4f976d4565502491ad4415b89607d623", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bee07d3f4f976d4565502491ad4415b89607d623", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bee07d3f4f976d4565502491ad4415b89607d623/comments", "author": null, "committer": null, "parents": [{"sha": "da6fdad3bb75d58289ba87474ef76cf98a14abc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da6fdad3bb75d58289ba87474ef76cf98a14abc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da6fdad3bb75d58289ba87474ef76cf98a14abc7"}], "stats": {"total": 30, "additions": 12, "deletions": 18}, "files": [{"sha": "7ebb41639fb167686c589ce8b811e4c22516028a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bee07d3f4f976d4565502491ad4415b89607d623/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bee07d3f4f976d4565502491ad4415b89607d623/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bee07d3f4f976d4565502491ad4415b89607d623", "patch": "@@ -1,3 +1,11 @@\n+2004-02-21  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* combine.c (SHIFT_COUNT_TRUNCATED): Remove.\n+\t* defaults.h (SHIFT_COUNT_TRUNCATED): Provide the default.\n+\t* expmed.c: Assume SHIFT_COUNT_TRUNCATED is always defined.\n+\t* fold-const.c: Likewise.\n+\t* simplify-rtx.c: Likewise.\n+\n 2004-02-21  Alan Modra  <amodra@bigpond.net.au>\n \n \t* combine.c (can_combine_p): Don't ignore SETs marked with"}, {"sha": "9e541ad61f2384205dd0705d7efa093a70506b49", "filename": "gcc/combine.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bee07d3f4f976d4565502491ad4415b89607d623/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bee07d3f4f976d4565502491ad4415b89607d623/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=bee07d3f4f976d4565502491ad4415b89607d623", "patch": "@@ -91,10 +91,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"toplev.h\"\n #include \"target.h\"\n \n-#ifndef SHIFT_COUNT_TRUNCATED\n-#define SHIFT_COUNT_TRUNCATED 0\n-#endif\n-\n /* Number of attempts to combine instructions in this function.  */\n \n static int combine_attempts;"}, {"sha": "927e98a5fa1d2ed02cdb11690104f36ed031da8b", "filename": "gcc/defaults.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bee07d3f4f976d4565502491ad4415b89607d623/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bee07d3f4f976d4565502491ad4415b89607d623/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=bee07d3f4f976d4565502491ad4415b89607d623", "patch": "@@ -699,4 +699,8 @@ You Lose!  You must define PREFERRED_DEBUGGING_TYPE!\n #define OUTGOING_REGNO(N) (N)\n #endif\n \n+#ifndef SHIFT_COUNT_TRUNCATED\n+#define SHIFT_COUNT_TRUNCATED 0\n+#endif\n+\n #endif  /* ! GCC_DEFAULTS_H */"}, {"sha": "fe81877fce8842a5d796a07431cf3c13498f91da", "filename": "gcc/expmed.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bee07d3f4f976d4565502491ad4415b89607d623/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bee07d3f4f976d4565502491ad4415b89607d623/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=bee07d3f4f976d4565502491ad4415b89607d623", "patch": "@@ -1992,7 +1992,6 @@ expand_shift (enum tree_code code, enum machine_mode mode, rtx shifted,\n \n   op1 = expand_expr (amount, NULL_RTX, VOIDmode, 0);\n \n-#ifdef SHIFT_COUNT_TRUNCATED\n   if (SHIFT_COUNT_TRUNCATED)\n     {\n       if (GET_CODE (op1) == CONST_INT\n@@ -2004,7 +2003,6 @@ expand_shift (enum tree_code code, enum machine_mode mode, rtx shifted,\n \t       && subreg_lowpart_p (op1))\n \top1 = SUBREG_REG (op1);\n     }\n-#endif\n \n   if (op1 == const0_rtx)\n     return shifted;"}, {"sha": "eaefe02000504fa7648048ffe67492ddce085cdf", "filename": "gcc/fold-const.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bee07d3f4f976d4565502491ad4415b89607d623/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bee07d3f4f976d4565502491ad4415b89607d623/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=bee07d3f4f976d4565502491ad4415b89607d623", "patch": "@@ -374,10 +374,8 @@ lshift_double (unsigned HOST_WIDE_INT l1, HOST_WIDE_INT h1,\n       return;\n     }\n \n-#ifdef SHIFT_COUNT_TRUNCATED\n   if (SHIFT_COUNT_TRUNCATED)\n     count %= prec;\n-#endif\n \n   if (count >= 2 * HOST_BITS_PER_WIDE_INT)\n     {\n@@ -437,10 +435,8 @@ rshift_double (unsigned HOST_WIDE_INT l1, HOST_WIDE_INT h1,\n \t      ? -((unsigned HOST_WIDE_INT) h1 >> (HOST_BITS_PER_WIDE_INT - 1))\n \t      : 0);\n \n-#ifdef SHIFT_COUNT_TRUNCATED\n   if (SHIFT_COUNT_TRUNCATED)\n     count %= prec;\n-#endif\n \n   if (count >= 2 * HOST_BITS_PER_WIDE_INT)\n     {"}, {"sha": "5133a4aa75ea488aa259d08ba868f3632beca8e2", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bee07d3f4f976d4565502491ad4415b89607d623/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bee07d3f4f976d4565502491ad4415b89607d623/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=bee07d3f4f976d4565502491ad4415b89607d623", "patch": "@@ -1369,10 +1369,8 @@ simplify_binary_operation (enum rtx_code code, enum machine_mode mode,\n \tcase LSHIFTRT:   case ASHIFTRT:\n \tcase ASHIFT:\n \tcase ROTATE:     case ROTATERT:\n-#ifdef SHIFT_COUNT_TRUNCATED\n \t  if (SHIFT_COUNT_TRUNCATED)\n \t    l2 &= (GET_MODE_BITSIZE (mode) - 1), h2 = 0;\n-#endif\n \n \t  if (h2 != 0 || l2 >= GET_MODE_BITSIZE (mode))\n \t    return 0;\n@@ -2152,10 +2150,8 @@ simplify_binary_operation (enum rtx_code code, enum machine_mode mode,\n       if (arg1 < 0)\n \treturn 0;\n \n-#ifdef SHIFT_COUNT_TRUNCATED\n       if (SHIFT_COUNT_TRUNCATED)\n \targ1 %= width;\n-#endif\n \n       val = ((unsigned HOST_WIDE_INT) arg0) >> arg1;\n       break;\n@@ -2164,10 +2160,8 @@ simplify_binary_operation (enum rtx_code code, enum machine_mode mode,\n       if (arg1 < 0)\n \treturn 0;\n \n-#ifdef SHIFT_COUNT_TRUNCATED\n       if (SHIFT_COUNT_TRUNCATED)\n \targ1 %= width;\n-#endif\n \n       val = ((unsigned HOST_WIDE_INT) arg0) << arg1;\n       break;\n@@ -2176,10 +2170,8 @@ simplify_binary_operation (enum rtx_code code, enum machine_mode mode,\n       if (arg1 < 0)\n \treturn 0;\n \n-#ifdef SHIFT_COUNT_TRUNCATED\n       if (SHIFT_COUNT_TRUNCATED)\n \targ1 %= width;\n-#endif\n \n       val = arg0s >> arg1;\n "}]}