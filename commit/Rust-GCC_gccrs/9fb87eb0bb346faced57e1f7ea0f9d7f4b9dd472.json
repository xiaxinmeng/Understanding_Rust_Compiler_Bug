{"sha": "9fb87eb0bb346faced57e1f7ea0f9d7f4b9dd472", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWZiODdlYjBiYjM0NmZhY2VkNTdlMWY3ZWEwZjlkN2Y0YjlkZDQ3Mg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2015-02-06T11:17:46Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-02-06T11:17:46Z"}, "message": "re PR target/62631 (gcc.dg/tree-ssa/ivopts-lt-2.c FAILs)\n\n\tPR target/62631\n\t* tree-ssa-loop-ivopts.c (get_shiftadd_cost): Use the mininum of costs\n\tof shift-add and (add + shift) operations.  Rename local variable.\n\nFrom-SVN: r220473", "tree": {"sha": "4a6525f3942b6ce4873f4432f6de86d0e1892563", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a6525f3942b6ce4873f4432f6de86d0e1892563"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9fb87eb0bb346faced57e1f7ea0f9d7f4b9dd472", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fb87eb0bb346faced57e1f7ea0f9d7f4b9dd472", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fb87eb0bb346faced57e1f7ea0f9d7f4b9dd472", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fb87eb0bb346faced57e1f7ea0f9d7f4b9dd472/comments", "author": null, "committer": null, "parents": [{"sha": "9f9ab303f713366fd57c338802735b86dcebf110", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f9ab303f713366fd57c338802735b86dcebf110", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f9ab303f713366fd57c338802735b86dcebf110"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "7cf5049d0dbbe7ea457e562778caead5f8ce0b99", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fb87eb0bb346faced57e1f7ea0f9d7f4b9dd472/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fb87eb0bb346faced57e1f7ea0f9d7f4b9dd472/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9fb87eb0bb346faced57e1f7ea0f9d7f4b9dd472", "patch": "@@ -1,3 +1,9 @@\n+2015-02-06  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR target/62631\n+\t* tree-ssa-loop-ivopts.c (get_shiftadd_cost): Use the mininum of costs\n+\tof shift-add and (add + shift) operations.  Rename local variable.\n+\n 2015-02-05  Jeff Law  <law@redhat.com>\n \n \tPR target/17306"}, {"sha": "a701636e9a0e57d48e0c195d1a7a9e3466ddb6c4", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fb87eb0bb346faced57e1f7ea0f9d7f4b9dd472/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fb87eb0bb346faced57e1f7ea0f9d7f4b9dd472/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=9fb87eb0bb346faced57e1f7ea0f9d7f4b9dd472", "patch": "@@ -3597,22 +3597,26 @@ get_shiftadd_cost (tree expr, machine_mode mode, comp_cost cost0,\n   tree multop = TREE_OPERAND (mult, 0);\n   int m = exact_log2 (int_cst_value (cst));\n   int maxm = MIN (BITS_PER_WORD, GET_MODE_BITSIZE (mode));\n-  int sa_cost;\n-  bool equal_p = false;\n+  int as_cost, sa_cost;\n+  bool mult_in_op1;\n \n   if (!(m >= 0 && m < maxm))\n     return false;\n \n-  if (operand_equal_p (op1, mult, 0))\n-    equal_p = true;\n+  mult_in_op1 = operand_equal_p (op1, mult, 0);\n \n+  as_cost = add_cost (speed, mode) + shift_cost (speed, mode, m);\n+\n+  /* If the target has a cheap shift-and-add or shift-and-sub instruction,\n+     use that in preference to a shift insn followed by an add insn.  */\n   sa_cost = (TREE_CODE (expr) != MINUS_EXPR\n              ? shiftadd_cost (speed, mode, m)\n-             : (equal_p\n+             : (mult_in_op1\n                 ? shiftsub1_cost (speed, mode, m)\n                 : shiftsub0_cost (speed, mode, m)));\n-  res = new_cost (sa_cost, 0);\n-  res = add_costs (res, equal_p ? cost0 : cost1);\n+\n+  res = new_cost (MIN (as_cost, sa_cost), 0);\n+  res = add_costs (res, mult_in_op1 ? cost0 : cost1);\n \n   STRIP_NOPS (multop);\n   if (!is_gimple_val (multop))"}]}