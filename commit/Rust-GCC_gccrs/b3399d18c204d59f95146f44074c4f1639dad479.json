{"sha": "b3399d18c204d59f95146f44074c4f1639dad479", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjMzOTlkMThjMjA0ZDU5Zjk1MTQ2ZjQ0MDc0YzRmMTYzOWRhZDQ3OQ==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-08-08T17:44:53Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-08-08T17:44:53Z"}, "message": "c-tree.h (build_arg_info): Declare.\n\n\t* c-tree.h (build_arg_info): Declare.\n\t* c-decl.c (build_arg_info): Define.\n\t(get_parm_info): Call it.  Delete initialization code.\n\t* c-parser.c (c_parser_parms_declarator): Likewise.\n\t(c_parser_parms_list_declaractor): Likewise.\n\nFrom-SVN: r163014", "tree": {"sha": "86621b607f8bb644e7ccb61ff809d59519a940b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86621b607f8bb644e7ccb61ff809d59519a940b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3399d18c204d59f95146f44074c4f1639dad479", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3399d18c204d59f95146f44074c4f1639dad479", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3399d18c204d59f95146f44074c4f1639dad479", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3399d18c204d59f95146f44074c4f1639dad479/comments", "author": null, "committer": null, "parents": [{"sha": "e60bf9d4f97a321bd1147853ab143fd93d12401c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e60bf9d4f97a321bd1147853ab143fd93d12401c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e60bf9d4f97a321bd1147853ab143fd93d12401c"}], "stats": {"total": 57, "additions": 30, "deletions": 27}, "files": [{"sha": "93cc8edbd74060ab33e82aff0ff45949c5608158", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3399d18c204d59f95146f44074c4f1639dad479/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3399d18c204d59f95146f44074c4f1639dad479/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b3399d18c204d59f95146f44074c4f1639dad479", "patch": "@@ -1,3 +1,11 @@\n+2010-08-08  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* c-tree.h (build_arg_info): Declare.\n+\t* c-decl.c (build_arg_info): Define.\n+\t(get_parm_info): Call it.  Delete initialization code.\n+\t* c-parser.c (c_parser_parms_declarator): Likewise.\n+\t(c_parser_parms_list_declaractor): Likewise.\n+\n 2010-08-08  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* c-tree.h (c_arg_tag): Define.  Define a VEC containing it."}, {"sha": "ec6669219db77d8298197cc723498a7bb1021ab3", "filename": "gcc/c-decl.c", "status": "modified", "additions": 18, "deletions": 7, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3399d18c204d59f95146f44074c4f1639dad479/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3399d18c204d59f95146f44074c4f1639dad479/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=b3399d18c204d59f95146f44074c4f1639dad479", "patch": "@@ -6176,6 +6176,22 @@ grokparms (struct c_arg_info *arg_info, bool funcdef_flag)\n     }\n }\n \n+/* Allocate and initialize a c_arg_info structure from the parser's\n+   obstack.  */\n+\n+struct c_arg_info *\n+build_arg_info (void)\n+{\n+  struct c_arg_info *ret = XOBNEW (&parser_obstack, struct c_arg_info);\n+  ret->parms = NULL_TREE;\n+  ret->tags = NULL;\n+  ret->types = NULL_TREE;\n+  ret->others = NULL_TREE;\n+  ret->pending_sizes = NULL;\n+  ret->had_vla_unspec = 0;\n+  return ret;\n+}\n+\n /* Take apart the current scope and return a c_arg_info structure with\n    info on a parameter list just parsed.\n \n@@ -6188,8 +6204,8 @@ struct c_arg_info *\n get_parm_info (bool ellipsis)\n {\n   struct c_binding *b = current_scope->bindings;\n-  struct c_arg_info *arg_info = XOBNEW (&parser_obstack,\n-\t\t\t\t\tstruct c_arg_info);\n+  struct c_arg_info *arg_info = build_arg_info ();\n+\n   tree parms    = 0;\n   VEC(c_arg_tag,gc) *tags = NULL;\n   tree types    = 0;\n@@ -6198,11 +6214,6 @@ get_parm_info (bool ellipsis)\n   static bool explained_incomplete_types = false;\n   bool gave_void_only_once_err = false;\n \n-  arg_info->parms = 0;\n-  arg_info->tags = 0;\n-  arg_info->types = 0;\n-  arg_info->others = 0;\n-  arg_info->pending_sizes = 0;\n   arg_info->had_vla_unspec = current_scope->had_vla_unspec;\n \n   /* The bindings in this scope must not get put into a block."}, {"sha": "031c6887cad5ecacd375c9dea12345dc088a9d89", "filename": "gcc/c-parser.c", "status": "modified", "additions": 3, "deletions": 20, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3399d18c204d59f95146f44074c4f1639dad479/gcc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3399d18c204d59f95146f44074c4f1639dad479/gcc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parser.c?ref=b3399d18c204d59f95146f44074c4f1639dad479", "patch": "@@ -194,7 +194,6 @@ typedef struct GTY(()) c_parser {\n \n static GTY (()) c_parser *the_parser;\n \n-\n /* Read in and lex a single token, storing it in *TOKEN.  */\n \n static void\n@@ -2672,13 +2671,8 @@ c_parser_parms_declarator (c_parser *parser, bool id_list_ok, tree attrs)\n \t}\n       if (c_parser_next_token_is (parser, CPP_CLOSE_PAREN))\n \t{\n-\t  struct c_arg_info *ret = XOBNEW (&parser_obstack, struct c_arg_info);\n-\t  ret->parms = 0;\n-\t  ret->tags = 0;\n+\t  struct c_arg_info *ret = build_arg_info ();\n \t  ret->types = list;\n-\t  ret->others = 0;\n-\t  ret->pending_sizes = 0;\n-\t  ret->had_vla_unspec = 0;\n \t  c_parser_consume_token (parser);\n \t  pop_scope ();\n \t  return ret;\n@@ -2715,24 +2709,13 @@ c_parser_parms_list_declarator (c_parser *parser, tree attrs)\n      declarations.  */\n   if (c_parser_next_token_is (parser, CPP_CLOSE_PAREN))\n     {\n-      struct c_arg_info *ret = XOBNEW (&parser_obstack, struct c_arg_info);\n-      ret->parms = 0;\n-      ret->tags = 0;\n-      ret->types = 0;\n-      ret->others = 0;\n-      ret->pending_sizes = 0;\n-      ret->had_vla_unspec = 0;\n+      struct c_arg_info *ret = build_arg_info ();\n       c_parser_consume_token (parser);\n       return ret;\n     }\n   if (c_parser_next_token_is (parser, CPP_ELLIPSIS))\n     {\n-      struct c_arg_info *ret = XOBNEW (&parser_obstack, struct c_arg_info);\n-      ret->parms = 0;\n-      ret->tags = 0;\n-      ret->others = 0;\n-      ret->pending_sizes = 0;\n-      ret->had_vla_unspec = 0;\n+      struct c_arg_info *ret = build_arg_info ();\n       /* Suppress -Wold-style-definition for this case.  */\n       ret->types = error_mark_node;\n       error_at (c_parser_peek_token (parser)->location,"}, {"sha": "a04d45c8eb1fa78e8dc0047fc702f129eacce16b", "filename": "gcc/c-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3399d18c204d59f95146f44074c4f1639dad479/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3399d18c204d59f95146f44074c4f1639dad479/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=b3399d18c204d59f95146f44074c4f1639dad479", "patch": "@@ -444,6 +444,7 @@ extern tree finish_enum (tree, tree, tree);\n extern void finish_function (void);\n extern tree finish_struct (location_t, tree, tree, tree,\n \t\t\t   struct c_struct_parse_info *);\n+extern struct c_arg_info *build_arg_info (void);\n extern struct c_arg_info *get_parm_info (bool);\n extern tree grokfield (location_t, struct c_declarator *,\n \t\t       struct c_declspecs *, tree, tree *);"}]}