{"sha": "bdde878c07fd7c77d7b09819d84b49c68e682878", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmRkZTg3OGMwN2ZkN2M3N2Q3YjA5ODE5ZDg0YjQ5YzY4ZTY4Mjg3OA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2009-06-04T05:53:38Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2009-06-04T05:53:38Z"}, "message": "gcc.c (report_times_to_file): New.\n\n* gcc.c (report_times_to_file): New.\n(execute): Implement it.\n(process_command): Support -time=.\n* doc/invoke.texi: Document it.\n\nFrom-SVN: r148162", "tree": {"sha": "af384b855eda7c598567b5b28fdc5fa93f2fe7b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af384b855eda7c598567b5b28fdc5fa93f2fe7b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bdde878c07fd7c77d7b09819d84b49c68e682878", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdde878c07fd7c77d7b09819d84b49c68e682878", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdde878c07fd7c77d7b09819d84b49c68e682878", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdde878c07fd7c77d7b09819d84b49c68e682878/comments", "author": null, "committer": null, "parents": [{"sha": "2ce59df73da0bb9ab64eae1b59851f33a623260c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ce59df73da0bb9ab64eae1b59851f33a623260c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ce59df73da0bb9ab64eae1b59851f33a623260c"}], "stats": {"total": 84, "additions": 77, "deletions": 7}, "files": [{"sha": "3730967f1619b84f7aa926a6e41e2856a1ebbc92", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdde878c07fd7c77d7b09819d84b49c68e682878/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdde878c07fd7c77d7b09819d84b49c68e682878/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bdde878c07fd7c77d7b09819d84b49c68e682878", "patch": "@@ -1,3 +1,10 @@\n+2009-06-04  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* gcc.c (report_times_to_file): New.\n+\t(execute): Implement it.\n+\t(process_command): Support -time=.\n+\t* doc/invoke.texi: Document it.\n+\n 2009-06-04  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* tree-ssa-live.c (remove_unused_scope_block_p): Keep variables"}, {"sha": "9771effc9e5e880b855758c308abcbc1759cb31d", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdde878c07fd7c77d7b09819d84b49c68e682878/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdde878c07fd7c77d7b09819d84b49c68e682878/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=bdde878c07fd7c77d7b09819d84b49c68e682878", "patch": "@@ -318,7 +318,7 @@ Objective-C and Objective-C++ Dialects}.\n -print-multi-directory  -print-multi-lib @gol\n -print-prog-name=@var{program}  -print-search-dirs  -Q @gol\n -print-sysroot -print-sysroot-headers-suffix @gol\n--save-temps -save-temps=cwd -save-temps=obj -time}\n+-save-temps -save-temps=cwd -save-temps=obj -time@r{[}=@var{file}@r{]}}\n \n @item Optimization Options\n @xref{Optimize Options,,Options that Control Optimization}.\n@@ -5287,11 +5287,13 @@ would create @file{foo.i}, @file{foo.s}, @file{dir/xbar.i},\n @file{dir/xbar.s}, @file{dir2/yfoobar.i}, @file{dir2/yfoobar.s}, and\n @file{dir2/yfoobar.o}.\n \n-@item -time\n+@item -time@r{[}=@var{file}@r{]}\n @opindex time\n Report the CPU time taken by each subprocess in the compilation\n sequence.  For C source files, this is the compiler proper and assembler\n-(plus the linker if linking is done).  The output looks like this:\n+(plus the linker if linking is done).\n+\n+Without the specification of an output file, the output looks like this:\n \n @smallexample\n # cc1 0.12 0.01\n@@ -5303,6 +5305,18 @@ executing the program itself.  The second number is ``system time'',\n time spent executing operating system routines on behalf of the program.\n Both numbers are in seconds.\n \n+With the specification of an output file, the output is appended to the\n+named file, and it looks like this:\n+\n+@smallexample\n+0.12 0.01 cc1 @var{options}\n+0.00 0.01 as @var{options}\n+@end smallexample\n+\n+The ``user time'' and the ``system time'' are moved before the program\n+name, and the options passed to the program are displayed, so that one\n+can later tell what file was being compiled, and with which options.\n+\n @item -fvar-tracking\n @opindex fvar-tracking\n Run variable tracking pass.  It computes where variables are stored at each"}, {"sha": "7d211ca2dd5adcddf185a197218660f754dba00c", "filename": "gcc/gcc.c", "status": "modified", "additions": 53, "deletions": 4, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdde878c07fd7c77d7b09819d84b49c68e682878/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdde878c07fd7c77d7b09819d84b49c68e682878/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=bdde878c07fd7c77d7b09819d84b49c68e682878", "patch": "@@ -198,6 +198,10 @@ static int print_subprocess_help;\n \n static int report_times;\n \n+/* Whether we should report subprocess execution times to a file.  */\n+\n+FILE *report_times_to_file = NULL;\n+\n /* Nonzero means place this string before uses of /, so that include\n    and library files can be found in an alternate location.  */\n \n@@ -3017,7 +3021,8 @@ execute (void)\n \n   /* Run each piped subprocess.  */\n \n-  pex = pex_init (PEX_USE_PIPES | (report_times ? PEX_RECORD_TIMES : 0),\n+  pex = pex_init (PEX_USE_PIPES | ((report_times || report_times_to_file)\n+\t\t\t\t   ? PEX_RECORD_TIMES : 0),\n \t\t  programname, temp_filename);\n   if (pex == NULL)\n     pfatal_with_name (_(\"pex_init failed\"));\n@@ -3061,7 +3066,7 @@ execute (void)\n     if (!pex_get_status (pex, n_commands, statuses))\n       pfatal_with_name (_(\"failed to get exit status\"));\n \n-    if (report_times)\n+    if (report_times || report_times_to_file)\n       {\n \ttimes = (struct pex_time *) alloca (n_commands * sizeof (struct pex_time));\n \tif (!pex_get_times (pex, n_commands, times))\n@@ -3106,7 +3111,7 @@ See %s for instructions.\",\n \t    ret_code = -1;\n \t  }\n \n-\tif (report_times)\n+\tif (report_times || report_times_to_file)\n \t  {\n \t    struct pex_time *pt = &times[i];\n \t    double ut, st;\n@@ -3117,7 +3122,43 @@ See %s for instructions.\",\n \t\t  + (double) pt->system_microseconds / 1.0e6);\n \n \t    if (ut + st != 0)\n-\t      notice (\"# %s %.2f %.2f\\n\", commands[i].prog, ut, st);\n+\t      {\n+\t\tif (report_times)\n+\t\t  notice (\"# %s %.2f %.2f\\n\", commands[i].prog, ut, st);\n+\n+\t\tif (report_times_to_file)\n+\t\t  {\n+\t\t    int c = 0;\n+\t\t    const char *const *j;\n+\n+\t\t    fprintf (report_times_to_file, \"%g %g\", ut, st);\n+\n+\t\t    for (j = &commands[i].prog; *j; j = &commands[i].argv[++c])\n+\t\t      {\n+\t\t\tconst char *p;\n+\t\t\tfor (p = *j; *p; ++p)\n+\t\t\t  if (*p == '\"' || *p == '\\\\' || *p == '$'\n+\t\t\t      || ISSPACE (*p))\n+\t\t\t    break;\n+\n+\t\t\tif (*p)\n+\t\t\t  {\n+\t\t\t    fprintf (report_times_to_file, \" \\\"\");\n+\t\t\t    for (p = *j; *p; ++p)\n+\t\t\t      {\n+\t\t\t\tif (*p == '\"' || *p == '\\\\' || *p == '$')\n+\t\t\t\t  fputc ('\\\\', report_times_to_file);\n+\t\t\t\tfputc (*p, report_times_to_file);\n+\t\t\t      }\n+\t\t\t    fputc ('\"', report_times_to_file);\n+\t\t\t  }\n+\t\t\telse\n+\t\t\t  fprintf (report_times_to_file, \" %s\", *j);\n+\t\t      }\n+\n+\t\t    fputc ('\\n', report_times_to_file);\n+\t\t  }\n+\t      }\n \t  }\n       }\n \n@@ -3876,6 +3917,12 @@ process_command (int argc, const char **argv)\n \t}\n       else if (strcmp (argv[i], \"-time\") == 0)\n \treport_times = 1;\n+      else if (strncmp (argv[i], \"-time=\", sizeof (\"-time=\") - 1) == 0)\n+\t{\n+\t  if (report_times_to_file)\n+\t    fclose (report_times_to_file);\n+\t  report_times_to_file = fopen (argv[i] + sizeof (\"-time=\") - 1, \"a\");\n+\t}\n       else if (strcmp (argv[i], \"-pipe\") == 0)\n \t{\n \t  /* -pipe has to go into the switches array as well as\n@@ -4288,6 +4335,8 @@ process_command (int argc, const char **argv)\n \t;\n       else if (strcmp (argv[i], \"-time\") == 0)\n \t;\n+      else if (strncmp (argv[i], \"-time=\", sizeof (\"-time=\") - 1) == 0)\n+\t;\n       else if (strcmp (argv[i], \"-###\") == 0)\n \t;\n       else if (argv[i][0] == '-' && argv[i][1] != 0)"}]}