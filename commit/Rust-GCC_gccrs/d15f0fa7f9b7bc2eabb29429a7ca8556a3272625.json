{"sha": "d15f0fa7f9b7bc2eabb29429a7ca8556a3272625", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDE1ZjBmYTdmOWI3YmMyZWFiYjI5NDI5YTdjYTg1NTZhMzI3MjYyNQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2018-02-01T20:32:33Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2018-02-01T20:32:33Z"}, "message": "re PR c++/84125 (ICE in generic lambda when static_assert argument is implicitly converted to bool)\n\n\tPR c++/84125\n\t* typeck.c (build_address): Relax the assert when\n\tprocessing_template_decl.\n\n\t* g++.dg/cpp1y/lambda-generic-84125.C:New test.\n\nFrom-SVN: r257311", "tree": {"sha": "87141f053acfbd2792d684a38597e1dba6ab99bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87141f053acfbd2792d684a38597e1dba6ab99bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d15f0fa7f9b7bc2eabb29429a7ca8556a3272625", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d15f0fa7f9b7bc2eabb29429a7ca8556a3272625", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d15f0fa7f9b7bc2eabb29429a7ca8556a3272625", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d15f0fa7f9b7bc2eabb29429a7ca8556a3272625/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ae976c332dca908d826a71cdc81d28af71552939", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae976c332dca908d826a71cdc81d28af71552939", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae976c332dca908d826a71cdc81d28af71552939"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "5b6c75a83f55023a58eac951e15359cc0bc1dd46", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d15f0fa7f9b7bc2eabb29429a7ca8556a3272625/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d15f0fa7f9b7bc2eabb29429a7ca8556a3272625/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d15f0fa7f9b7bc2eabb29429a7ca8556a3272625", "patch": "@@ -1,3 +1,9 @@\n+2018-02-01  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/84125\n+\t* typeck.c (build_address): Relax the assert when\n+\tprocessing_template_decl.\n+\n 2018-02-01  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/84126 - ICE with variadic generic lambda"}, {"sha": "83e767829986d614317f6777184c0344d11a5b50", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d15f0fa7f9b7bc2eabb29429a7ca8556a3272625/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d15f0fa7f9b7bc2eabb29429a7ca8556a3272625/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=d15f0fa7f9b7bc2eabb29429a7ca8556a3272625", "patch": "@@ -5735,7 +5735,8 @@ build_address (tree t)\n {\n   if (error_operand_p (t) || !cxx_mark_addressable (t))\n     return error_mark_node;\n-  gcc_checking_assert (TREE_CODE (t) != CONSTRUCTOR);\n+  gcc_checking_assert (TREE_CODE (t) != CONSTRUCTOR\n+\t\t       || processing_template_decl);\n   t = build_fold_addr_expr_loc (EXPR_LOCATION (t), t);\n   if (TREE_CODE (t) != ADDR_EXPR)\n     t = rvalue (t);"}, {"sha": "64af747598546a955b4757cf3e092de7d699d87b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d15f0fa7f9b7bc2eabb29429a7ca8556a3272625/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d15f0fa7f9b7bc2eabb29429a7ca8556a3272625/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d15f0fa7f9b7bc2eabb29429a7ca8556a3272625", "patch": "@@ -1,3 +1,8 @@\n+2018-02-01  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/84125\n+\t* g++.dg/cpp1y/lambda-generic-84125.C:New test.\n+\n 2018-01-30  Jeff Law  <law@redhat.com>\n \n \tPR target/84128"}, {"sha": "8bf6a09652e2112b20c773ace8e3e4b06718ec82", "filename": "gcc/testsuite/g++.dg/cpp1y/lambda-generic-84125.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d15f0fa7f9b7bc2eabb29429a7ca8556a3272625/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-84125.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d15f0fa7f9b7bc2eabb29429a7ca8556a3272625/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-84125.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-84125.C?ref=d15f0fa7f9b7bc2eabb29429a7ca8556a3272625", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/84125\n+// { dg-do compile { target c++14 } }\n+\n+struct X { constexpr operator bool() const { return true; } };\n+\n+int main(){\n+    [](auto) {\n+        static_assert(X{}, \"\");\n+    };\n+}"}]}