{"sha": "c7c30edd4a6049a0debe0ed17ffdb9c196d4c677", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdjMzBlZGQ0YTYwNDlhMGRlYmUwZWQxN2ZmZGI5YzE5NmQ0YzY3Nw==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2018-02-08T13:03:52Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2018-02-08T13:03:52Z"}, "message": "[hsa] Set program allocation for static local variables\n\n2018-02-08  Martin Jambor  <mjambor@suse.cz>\n\n\t* hsa-gen.c (get_symbol_for_decl): Set program allocation for\n\tstatic local variables.\n\nlibgomp/\n\t* testsuite/libgomp.hsa.c/staticvar.c: New test.\n\nFrom-SVN: r257484", "tree": {"sha": "1ddc2a0a9a52e7b9fbe52d94618bbcaeb647280b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ddc2a0a9a52e7b9fbe52d94618bbcaeb647280b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7c30edd4a6049a0debe0ed17ffdb9c196d4c677", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7c30edd4a6049a0debe0ed17ffdb9c196d4c677", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7c30edd4a6049a0debe0ed17ffdb9c196d4c677", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7c30edd4a6049a0debe0ed17ffdb9c196d4c677/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "414fef4e668856edb8ca885525679c5d5e691fd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/414fef4e668856edb8ca885525679c5d5e691fd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/414fef4e668856edb8ca885525679c5d5e691fd1"}], "stats": {"total": 42, "additions": 39, "deletions": 3}, "files": [{"sha": "770d408fa16387c52e803170a5c476745d661365", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7c30edd4a6049a0debe0ed17ffdb9c196d4c677/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7c30edd4a6049a0debe0ed17ffdb9c196d4c677/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c7c30edd4a6049a0debe0ed17ffdb9c196d4c677", "patch": "@@ -1,3 +1,8 @@\n+2018-02-08  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* hsa-gen.c (get_symbol_for_decl): Set program allocation for\n+\tstatic local variables.\n+\n 2018-02-08  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/84278"}, {"sha": "55a46b5a16ac2219c5863cee21ec1b2fe84b4702", "filename": "gcc/hsa-gen.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7c30edd4a6049a0debe0ed17ffdb9c196d4c677/gcc%2Fhsa-gen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7c30edd4a6049a0debe0ed17ffdb9c196d4c677/gcc%2Fhsa-gen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhsa-gen.c?ref=c7c30edd4a6049a0debe0ed17ffdb9c196d4c677", "patch": "@@ -932,9 +932,13 @@ get_symbol_for_decl (tree decl)\n \t  else if (lookup_attribute (\"hsa_group_segment\",\n \t\t\t\t     DECL_ATTRIBUTES (decl)))\n \t    segment = BRIG_SEGMENT_GROUP;\n-\t  else if (TREE_STATIC (decl)\n-\t\t   || lookup_attribute (\"hsa_global_segment\",\n-\t\t\t\t\tDECL_ATTRIBUTES (decl)))\n+\t  else if (TREE_STATIC (decl))\n+\t    {\n+\t      segment = BRIG_SEGMENT_GLOBAL;\n+\t      allocation = BRIG_ALLOCATION_PROGRAM;\n+\t    }\n+\t  else if (lookup_attribute (\"hsa_global_segment\",\n+\t\t\t\t     DECL_ATTRIBUTES (decl)))\n \t    segment = BRIG_SEGMENT_GLOBAL;\n \t  else\n \t    segment = BRIG_SEGMENT_PRIVATE;"}, {"sha": "d0130490de3026f924f470604f90931b437e8efa", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7c30edd4a6049a0debe0ed17ffdb9c196d4c677/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7c30edd4a6049a0debe0ed17ffdb9c196d4c677/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=c7c30edd4a6049a0debe0ed17ffdb9c196d4c677", "patch": "@@ -1,3 +1,7 @@\n+2018-02-08  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* testsuite/libgomp.hsa.c/staticvar.c: New test.\n+\n 2018-02-07  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* testsuite/libgomp.oacc-c-c++-common/pr84217.c (abort)"}, {"sha": "6d20c9aa32872401cfd2a2307e278c93924b5a82", "filename": "libgomp/testsuite/libgomp.hsa.c/staticvar.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7c30edd4a6049a0debe0ed17ffdb9c196d4c677/libgomp%2Ftestsuite%2Flibgomp.hsa.c%2Fstaticvar.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7c30edd4a6049a0debe0ed17ffdb9c196d4c677/libgomp%2Ftestsuite%2Flibgomp.hsa.c%2Fstaticvar.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.hsa.c%2Fstaticvar.c?ref=c7c30edd4a6049a0debe0ed17ffdb9c196d4c677", "patch": "@@ -0,0 +1,23 @@\n+extern void abort (void);\n+\n+#pragma omp declare target\n+int\n+foo (void)\n+{\n+  static int s;\n+  return ++s;\n+}\n+#pragma omp end declare target\n+\n+int\n+main ()\n+{\n+  int r;\n+  #pragma omp target map(from:r)\n+  {\n+    r = foo ();\n+  }\n+  if (r != 1)\n+    abort ();\n+  return 0;\n+}"}]}