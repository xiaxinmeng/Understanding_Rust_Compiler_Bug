{"sha": "7b3318c41e6165140e59e026988d1f6e27d01a2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2IzMzE4YzQxZTYxNjUxNDBlNTllMDI2OTg4ZDFmNmUyN2QwMWEyYQ==", "commit": {"author": {"name": "Ville Voutilainen", "email": "ville.voutilainen@gmail.com", "date": "2016-04-05T11:31:30Z"}, "committer": {"name": "Ville Voutilainen", "email": "ville@gcc.gnu.org", "date": "2016-04-05T11:31:30Z"}, "message": "re PR libstdc++/70437 (Instantiation loop with pair and is_constructible)\n\n \tPR libstdc++/70437\n \t* include/bits/stl_pair.h (_ConstructiblePair,\n\t_ImplicitlyConvertiblePair, _MoveConstructiblePair,\n\t_ImplicitlyMoveConvertiblePair): Add shortcut conditions\n\tfor same-type cases.\n\t* testsuite/20_util/pair/70437.cc: New.\n\nFrom-SVN: r234743", "tree": {"sha": "36950ac70eb4e8a947ae9965514be24ace1ed31d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36950ac70eb4e8a947ae9965514be24ace1ed31d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b3318c41e6165140e59e026988d1f6e27d01a2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b3318c41e6165140e59e026988d1f6e27d01a2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b3318c41e6165140e59e026988d1f6e27d01a2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b3318c41e6165140e59e026988d1f6e27d01a2a/comments", "author": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55fc79b2a65cc637d2dca823d80568de5de71c1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55fc79b2a65cc637d2dca823d80568de5de71c1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55fc79b2a65cc637d2dca823d80568de5de71c1c"}], "stats": {"total": 81, "additions": 73, "deletions": 8}, "files": [{"sha": "2977bd0938a75c01a1c5cf9c5d346308149edc00", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b3318c41e6165140e59e026988d1f6e27d01a2a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b3318c41e6165140e59e026988d1f6e27d01a2a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7b3318c41e6165140e59e026988d1f6e27d01a2a", "patch": "@@ -1,3 +1,12 @@\n+2016-04-05  Ville Voutilainen  <ville.voutilainen@gmail.com>\n+\n+\tPR libstdc++/70437\n+\t* include/bits/stl_pair.h (_ConstructiblePair,\n+\t_ImplicitlyConvertiblePair, _MoveConstructiblePair,\n+\t_ImplicitlyMoveConvertiblePair): Add shortcut conditions\n+\tfor same-type cases.\n+\t* testsuite/20_util/pair/70437.cc: New.\n+\n 2016-03-24  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/69945"}, {"sha": "37ee5cc405328a5df727deb5a69418b65ae3cdcd", "filename": "libstdc++-v3/include/bits/stl_pair.h", "status": "modified", "additions": 27, "deletions": 8, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b3318c41e6165140e59e026988d1f6e27d01a2a/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b3318c41e6165140e59e026988d1f6e27d01a2a/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h?ref=7b3318c41e6165140e59e026988d1f6e27d01a2a", "patch": "@@ -87,32 +87,51 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   // Concept utility functions, reused in conditionally-explicit\n   // constructors.\n+  // See PR 70437, don't look at is_constructible or\n+  // is_convertible if the decayed types are the same to\n+  // avoid querying those properties for incomplete types.\n   template <typename _T1, typename _T2, typename _U1, typename _U2>\n   constexpr bool _ConstructiblePair()\n   {\n-    return __and_<is_constructible<_T1, const _U1&>,\n-\t\t  is_constructible<_T2, const _U2&>>::value;\n+    return __and_<__or_<is_same<typename decay<_T1>::type,\n+\t\t\t\ttypename decay<_U1>::type>,\n+\t\t\tis_constructible<_T1, const _U1&>>,\n+\t\t  __or_<is_same<typename decay<_T2>::type,\n+\t\t\t\ttypename decay<_U2>::type>,\n+\t\t\tis_constructible<_T2, const _U2&>>>::value;\n   }\n \n   template <typename _T1, typename _T2, typename _U1, typename _U2>\n   constexpr bool _ImplicitlyConvertiblePair()\n   {\n-    return __and_<is_convertible<const _U1&, _T1>,\n-\t\t  is_convertible<const _U2&, _T2>>::value;\n+    return __and_<__or_<is_same<typename decay<_T1>::type,\n+\t\t\t\ttypename decay<_U1>::type>,\n+\t\t\tis_convertible<const _U1&, _T1>>,\n+\t\t  __or_<is_same<typename decay<_T2>::type,\n+\t\t\t\ttypename decay<_U2>::type>,\n+\t\t       is_convertible<const _U2&, _T2>>>::value;\n   }\n \n   template <typename _T1, typename _T2, typename _U1, typename _U2>\n   constexpr bool _MoveConstructiblePair()\n   {\n-    return __and_<is_constructible<_T1, _U1&&>,\n-\t\t  is_constructible<_T2, _U2&&>>::value;\n+    return __and_<__or_<is_same<typename decay<_T1>::type,\n+\t\t\t\ttypename decay<_U1>::type>,\n+\t\t\tis_constructible<_T1, _U1&&>>,\n+\t\t  __or_<is_same<typename decay<_T2>::type,\n+\t\t\t\ttypename decay<_U2>::type>,\n+\t\t\tis_constructible<_T2, _U2&&>>>::value;\n   }\n \n   template <typename _T1, typename _T2, typename _U1, typename _U2>\n   constexpr bool _ImplicitlyMoveConvertiblePair()\n   {\n-    return __and_<is_convertible<_U1&&, _T1>,\n-\t\t  is_convertible<_U2&&, _T2>>::value;\n+    return __and_<__or_<is_same<typename decay<_T1>::type,\n+\t\t\t\ttypename decay<_U1>::type>,\n+\t\t\tis_convertible<_U1&&, _T1>>,\n+\t\t  __or_<is_same<typename decay<_T2>::type,\n+\t\t\t\ttypename decay<_U2>::type>,\n+\t\t       is_convertible<_U2&&, _T2>>>::value;\n   }\n \n "}, {"sha": "37e6fb7ec1a3aad915f3b5de5c4b7392027bc708", "filename": "libstdc++-v3/testsuite/20_util/pair/70437.cc", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b3318c41e6165140e59e026988d1f6e27d01a2a/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2F70437.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b3318c41e6165140e59e026988d1f6e27d01a2a/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2F70437.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2F70437.cc?ref=7b3318c41e6165140e59e026988d1f6e27d01a2a", "patch": "@@ -0,0 +1,37 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <utility>\n+\n+template <class T> struct B;\n+\n+template <class T> struct A\n+{\n+  A(A&&) = default;\n+  A(const B<T> &);\n+};\n+\n+template <class T> struct B\n+{\n+  std::pair<A<T>,int> a;\n+  B(B&&) = default;\n+};\n+\n+bool b = std::is_move_constructible<A<int> >::value;"}]}