{"sha": "1e6283cb21082d6f1b31e082087523f6f65ae021", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU2MjgzY2IyMTA4MmQ2ZjFiMzFlMDgyMDg3NTIzZjZmNjVhZTAyMQ==", "commit": {"author": {"name": "Tobias Schl\u00fcter", "email": "tobias.schlueter@physik.uni-muenchen.de", "date": "2005-02-12T15:44:01Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2005-02-12T15:44:01Z"}, "message": "symbol.c (gfc_use_ha_derived): Remove, fold functionality into ...\n\n* symbol.c (gfc_use_ha_derived): Remove, fold functionality into ...\n(gfc_use_derived): ... this function.\n\nFrom-SVN: r94942", "tree": {"sha": "bf34ab115582c30866172484900723c929f46e89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf34ab115582c30866172484900723c929f46e89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e6283cb21082d6f1b31e082087523f6f65ae021", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e6283cb21082d6f1b31e082087523f6f65ae021", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e6283cb21082d6f1b31e082087523f6f65ae021", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e6283cb21082d6f1b31e082087523f6f65ae021/comments", "author": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d32707707a3a320f338839639c54227d97b95e5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d32707707a3a320f338839639c54227d97b95e5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d32707707a3a320f338839639c54227d97b95e5a"}], "stats": {"total": 30, "additions": 11, "deletions": 19}, "files": [{"sha": "321434aedf057afe33f2fa5c568b54af09dad57f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e6283cb21082d6f1b31e082087523f6f65ae021/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e6283cb21082d6f1b31e082087523f6f65ae021/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=1e6283cb21082d6f1b31e082087523f6f65ae021", "patch": "@@ -1,3 +1,8 @@\n+2005-02-12  Tobias Schl\"uter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\t* symbol.c (gfc_use_ha_derived): Remove, fold functionality into ...\n+\t(gfc_use_derived): ... this function.\n+\n 2005-02-09  Richard Henderson  <rth@redhat.com>\n \n \t* f95-lang.c (gfc_init_builtin_functions): Call"}, {"sha": "c9205d58459b08b3aa8fd42b6c3600727a9b9154", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 6, "deletions": 19, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e6283cb21082d6f1b31e082087523f6f65ae021/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e6283cb21082d6f1b31e082087523f6f65ae021/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=1e6283cb21082d6f1b31e082087523f6f65ae021", "patch": "@@ -1201,14 +1201,17 @@ switch_types (gfc_symtree * st, gfc_symbol * from, gfc_symbol * to)\n    pointer to the translated node or NULL for an error.  Usually there\n    is no translation and we return the node we were passed.  */\n \n-static gfc_symtree *\n-gfc_use_ha_derived (gfc_symbol * sym)\n+gfc_symbol *\n+gfc_use_derived (gfc_symbol * sym)\n {\n   gfc_symbol *s, *p;\n   gfc_typespec *t;\n   gfc_symtree *st;\n   int i;\n \n+  if (sym->components != NULL)\n+    return sym;               /* Already defined.  */\n+\n   if (sym->ns->parent == NULL)\n     goto bad;\n \n@@ -1251,7 +1254,7 @@ gfc_use_ha_derived (gfc_symbol * sym)\n      namelists, common lists and interface lists.  */\n   gfc_free_symbol (sym);\n \n-  return st;\n+  return s;\n \n bad:\n   gfc_error (\"Derived type '%s' at %C is being used before it is defined\",\n@@ -1260,22 +1263,6 @@ gfc_use_ha_derived (gfc_symbol * sym)\n }\n \n \n-gfc_symbol *\n-gfc_use_derived (gfc_symbol * sym)\n-{\n-  gfc_symtree *st;\n-\n-  if (sym->components != NULL)\n-    return sym;\t\t\t/* Already defined */\n-\n-  st = gfc_use_ha_derived (sym);\n-  if (st)\n-    return st->n.sym;\n-  else\n-    return NULL;\n-}\n-\n-\n /* Given a derived type node and a component name, try to locate the\n    component structure.  Returns the NULL pointer if the component is\n    not found or the components are private.  */"}]}