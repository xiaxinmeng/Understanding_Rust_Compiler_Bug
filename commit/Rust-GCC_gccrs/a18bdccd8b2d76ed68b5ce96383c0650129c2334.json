{"sha": "a18bdccd8b2d76ed68b5ce96383c0650129c2334", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE4YmRjY2Q4YjJkNzZlZDY4YjVjZTk2MzgzYzA2NTAxMjljMjMzNA==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-10-12T20:30:47Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-10-12T20:30:47Z"}, "message": "libgcc2.h: Use __SIZEOF_DOUBLE__ instead of LIBGCC2_DOUBLE_TYPE_SIZE.\n\n\t* libgcc2.h: Use __SIZEOF_DOUBLE__ instead of\n\tLIBGCC2_DOUBLE_TYPE_SIZE.\n\t(LIBGCC2_DOUBLE_TYPE_SIZE): Delete.\n\t* config/fixed-bit.h: Likewise.\n\t* config/rx/rx.h (LIBGCC2_DOUBLE_TYPE_SIZE): Delete.\n\t* config/sh/sh.h (LIBGCC2_DOUBLE_TYPE_SIZE): Delete.\n\t* system.h (LIBGCC2_DOUBLE_TYPE_SIZE): Poison.\n\t* doc/tm.texi.in (LIBGCC2_HAS_DF_MODE): Use DOUBLE_TYPE_SIZE.\n\t(DF_SIZE): Likewise.\n\t* doc/tm.texi: Regenerate.\n\nFrom-SVN: r165396", "tree": {"sha": "d447e56e7889830c149511662dcd53b7264b5ec1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d447e56e7889830c149511662dcd53b7264b5ec1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a18bdccd8b2d76ed68b5ce96383c0650129c2334", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a18bdccd8b2d76ed68b5ce96383c0650129c2334", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a18bdccd8b2d76ed68b5ce96383c0650129c2334", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a18bdccd8b2d76ed68b5ce96383c0650129c2334/comments", "author": null, "committer": null, "parents": [{"sha": "d2333f6ebb9f3dbf6ad7f5ec79761a642b7b295c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2333f6ebb9f3dbf6ad7f5ec79761a642b7b295c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2333f6ebb9f3dbf6ad7f5ec79761a642b7b295c"}], "stats": {"total": 48, "additions": 25, "deletions": 23}, "files": [{"sha": "c414447661ca000cfa97dafd18de61d14eb07984", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a18bdccd8b2d76ed68b5ce96383c0650129c2334/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a18bdccd8b2d76ed68b5ce96383c0650129c2334/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a18bdccd8b2d76ed68b5ce96383c0650129c2334", "patch": "@@ -1,3 +1,16 @@\n+2010-10-12  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* libgcc2.h: Use __SIZEOF_DOUBLE__ instead of\n+\tLIBGCC2_DOUBLE_TYPE_SIZE.\n+\t(LIBGCC2_DOUBLE_TYPE_SIZE): Delete.\n+\t* config/fixed-bit.h: Likewise.\n+\t* config/rx/rx.h (LIBGCC2_DOUBLE_TYPE_SIZE): Delete.\n+\t* config/sh/sh.h (LIBGCC2_DOUBLE_TYPE_SIZE): Delete.\n+\t* system.h (LIBGCC2_DOUBLE_TYPE_SIZE): Poison.\n+\t* doc/tm.texi.in (LIBGCC2_HAS_DF_MODE): Use DOUBLE_TYPE_SIZE.\n+\t(DF_SIZE): Likewise.\n+\t* doc/tm.texi: Regenerate.\n+\n 2010-10-12  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* config/rs6000/predicates.md (scc_rev_comparison_operator): New."}, {"sha": "ce5b96e785067e88eb36967fd537a1dca6741507", "filename": "gcc/config/fixed-bit.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a18bdccd8b2d76ed68b5ce96383c0650129c2334/gcc%2Fconfig%2Ffixed-bit.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a18bdccd8b2d76ed68b5ce96383c0650129c2334/gcc%2Fconfig%2Ffixed-bit.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffixed-bit.h?ref=a18bdccd8b2d76ed68b5ce96383c0650129c2334", "patch": "@@ -49,9 +49,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define LIBGCC2_WORDS_BIG_ENDIAN WORDS_BIG_ENDIAN\n #endif\n \n-#ifndef LIBGCC2_DOUBLE_TYPE_SIZE\n-#define LIBGCC2_DOUBLE_TYPE_SIZE DOUBLE_TYPE_SIZE\n-#endif\n #ifndef LIBGCC2_LONG_DOUBLE_TYPE_SIZE\n #define LIBGCC2_LONG_DOUBLE_TYPE_SIZE LONG_DOUBLE_TYPE_SIZE\n #endif\n@@ -63,7 +60,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #ifndef LIBGCC2_HAS_DF_MODE\n #define LIBGCC2_HAS_DF_MODE \\\n   (BITS_PER_UNIT == 8 \\\n-   && (LIBGCC2_DOUBLE_TYPE_SIZE == 64 \\\n+   && (__SIZEOF_DOUBLE__ * __CHAR_BIT__ == 64 \\\n        || LIBGCC2_LONG_DOUBLE_TYPE_SIZE == 64))\n #endif\n "}, {"sha": "7da4de1d6eae2ce4d1a40203f75f4653b7267710", "filename": "gcc/config/rx/rx.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a18bdccd8b2d76ed68b5ce96383c0650129c2334/gcc%2Fconfig%2Frx%2Frx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a18bdccd8b2d76ed68b5ce96383c0650129c2334/gcc%2Fconfig%2Frx%2Frx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.h?ref=a18bdccd8b2d76ed68b5ce96383c0650129c2334", "patch": "@@ -115,11 +115,9 @@ extern enum rx_cpu_types  rx_cpu_type;\n #ifdef __RX_32BIT_DOUBLES__\n #define LIBGCC2_HAS_DF_MODE\t\t0\n #define LIBGCC2_LONG_DOUBLE_TYPE_SIZE   32\n-#define LIBGCC2_DOUBLE_TYPE_SIZE\t32\n #else\n #define LIBGCC2_HAS_DF_MODE\t\t1\n #define LIBGCC2_LONG_DOUBLE_TYPE_SIZE   64\n-#define LIBGCC2_DOUBLE_TYPE_SIZE\t64\n #endif\n \n #define DEFAULT_SIGNED_CHAR\t\t0"}, {"sha": "8f149dc63a6c984cffab0cfc93b62c5b32d290dc", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a18bdccd8b2d76ed68b5ce96383c0650129c2334/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a18bdccd8b2d76ed68b5ce96383c0650129c2334/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=a18bdccd8b2d76ed68b5ce96383c0650129c2334", "patch": "@@ -2028,12 +2028,6 @@ struct sh_args {\n    floating point types equivalent to `float'.  */\n #define DOUBLE_TYPE_SIZE ((TARGET_SH2E && ! TARGET_SH4 && ! TARGET_SH2A_DOUBLE) ? 32 : 64)\n \n-#if defined(__SH2E__) || defined(__SH3E__) || defined( __SH2A_SINGLE_ONLY__) || defined( __SH4_SINGLE_ONLY__)\n-#define LIBGCC2_DOUBLE_TYPE_SIZE 32\n-#else\n-#define LIBGCC2_DOUBLE_TYPE_SIZE 64\n-#endif\n-\n /* 'char' is signed by default.  */\n #define DEFAULT_SIGNED_CHAR  1\n "}, {"sha": "a268617f7a1b378a6372a6c4f8b7386a996d542a", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a18bdccd8b2d76ed68b5ce96383c0650129c2334/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a18bdccd8b2d76ed68b5ce96383c0650129c2334/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=a18bdccd8b2d76ed68b5ce96383c0650129c2334", "patch": "@@ -1628,10 +1628,10 @@ default is @code{LONG_DOUBLE_TYPE_SIZE}.\n @end defmac\n \n @defmac LIBGCC2_HAS_DF_MODE\n-Define this macro if neither @code{LIBGCC2_DOUBLE_TYPE_SIZE} nor\n+Define this macro if neither @code{DOUBLE_TYPE_SIZE} nor\n @code{LIBGCC2_LONG_DOUBLE_TYPE_SIZE} is\n @code{DFmode} but you want @code{DFmode} routines in @file{libgcc2.a}\n-anyway.  If you don't define this and either @code{LIBGCC2_DOUBLE_TYPE_SIZE}\n+anyway.  If you don't define this and either @code{DOUBLE_TYPE_SIZE}\n or @code{LIBGCC2_LONG_DOUBLE_TYPE_SIZE} is 64 then the default is 1,\n otherwise it is 0.\n @end defmac\n@@ -1660,7 +1660,7 @@ if the defaults in @file{libgcc2.h} are inappropriate.  By default,\n @code{FLT_MANT_DIG} is used for @code{SF_SIZE}, @code{LDBL_MANT_DIG}\n for @code{XF_SIZE} and @code{TF_SIZE}, and @code{DBL_MANT_DIG} or\n @code{LDBL_MANT_DIG} for @code{DF_SIZE} according to whether\n-@code{LIBGCC2_DOUBLE_TYPE_SIZE} or\n+@code{DOUBLE_TYPE_SIZE} or\n @code{LIBGCC2_LONG_DOUBLE_TYPE_SIZE} is 64.\n @end defmac\n "}, {"sha": "74cf927f3982542bbf2ec1f7080e7308c257367d", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a18bdccd8b2d76ed68b5ce96383c0650129c2334/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a18bdccd8b2d76ed68b5ce96383c0650129c2334/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=a18bdccd8b2d76ed68b5ce96383c0650129c2334", "patch": "@@ -1626,10 +1626,10 @@ default is @code{LONG_DOUBLE_TYPE_SIZE}.\n @end defmac\n \n @defmac LIBGCC2_HAS_DF_MODE\n-Define this macro if neither @code{LIBGCC2_DOUBLE_TYPE_SIZE} nor\n+Define this macro if neither @code{DOUBLE_TYPE_SIZE} nor\n @code{LIBGCC2_LONG_DOUBLE_TYPE_SIZE} is\n @code{DFmode} but you want @code{DFmode} routines in @file{libgcc2.a}\n-anyway.  If you don't define this and either @code{LIBGCC2_DOUBLE_TYPE_SIZE}\n+anyway.  If you don't define this and either @code{DOUBLE_TYPE_SIZE}\n or @code{LIBGCC2_LONG_DOUBLE_TYPE_SIZE} is 64 then the default is 1,\n otherwise it is 0.\n @end defmac\n@@ -1658,7 +1658,7 @@ if the defaults in @file{libgcc2.h} are inappropriate.  By default,\n @code{FLT_MANT_DIG} is used for @code{SF_SIZE}, @code{LDBL_MANT_DIG}\n for @code{XF_SIZE} and @code{TF_SIZE}, and @code{DBL_MANT_DIG} or\n @code{LDBL_MANT_DIG} for @code{DF_SIZE} according to whether\n-@code{LIBGCC2_DOUBLE_TYPE_SIZE} or\n+@code{DOUBLE_TYPE_SIZE} or\n @code{LIBGCC2_LONG_DOUBLE_TYPE_SIZE} is 64.\n @end defmac\n "}, {"sha": "d2d86ef8a2dc514b28ae5667a4c3f3a1b6e448c2", "filename": "gcc/libgcc2.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a18bdccd8b2d76ed68b5ce96383c0650129c2334/gcc%2Flibgcc2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a18bdccd8b2d76ed68b5ce96383c0650129c2334/gcc%2Flibgcc2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.h?ref=a18bdccd8b2d76ed68b5ce96383c0650129c2334", "patch": "@@ -43,9 +43,6 @@ extern void __eprintf (const char *, const char *, unsigned int, const char *)\n #define LIBGCC2_WORDS_BIG_ENDIAN WORDS_BIG_ENDIAN\n #endif\n \n-#ifndef LIBGCC2_DOUBLE_TYPE_SIZE\n-#define LIBGCC2_DOUBLE_TYPE_SIZE DOUBLE_TYPE_SIZE\n-#endif\n #ifndef LIBGCC2_LONG_DOUBLE_TYPE_SIZE\n #define LIBGCC2_LONG_DOUBLE_TYPE_SIZE LONG_DOUBLE_TYPE_SIZE\n #endif\n@@ -57,7 +54,7 @@ extern void __eprintf (const char *, const char *, unsigned int, const char *)\n #ifndef LIBGCC2_HAS_DF_MODE\n #define LIBGCC2_HAS_DF_MODE \\\n   (BITS_PER_UNIT == 8 \\\n-   && (LIBGCC2_DOUBLE_TYPE_SIZE == 64 \\\n+   && (__SIZEOF_DOUBLE__ * __CHAR_BIT__ == 64 \\\n        || LIBGCC2_LONG_DOUBLE_TYPE_SIZE == 64))\n #endif\n \n@@ -81,7 +78,7 @@ extern void __eprintf (const char *, const char *, unsigned int, const char *)\n \n #ifndef DF_SIZE\n #if LIBGCC2_HAS_DF_MODE\n-#if LIBGCC2_DOUBLE_TYPE_SIZE == 64\n+#if __SIZEOF_DOUBLE__ * __CHAR_BIT__ == 64\n #define DF_SIZE DBL_MANT_DIG\n #elif LIBGCC2_LONG_DOUBLE_TYPE_SIZE == 64\n #define DF_SIZE LDBL_MANT_DIG"}, {"sha": "5131fed9ff9b27d3c5ce81a71d1de5cd451439a3", "filename": "gcc/system.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a18bdccd8b2d76ed68b5ce96383c0650129c2334/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a18bdccd8b2d76ed68b5ce96383c0650129c2334/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=a18bdccd8b2d76ed68b5ce96383c0650129c2334", "patch": "@@ -784,6 +784,9 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n \tTARGET_PROMOTE_FUNCTION_ARGS TARGET_PROMOTE_FUNCTION_RETURN \\\n \tLANG_HOOKS_MISSING_ARGUMENT LANG_HOOKS_HASH_TYPES\n \n+/* Hooks into libgcc2.  */\n+ #pragma GCC poison LIBGCC2_DOUBLE_TYPE_SIZE\n+\n /* Miscellaneous macros that are no longer used.  */\n  #pragma GCC poison USE_MAPPED_LOCATION\n "}]}