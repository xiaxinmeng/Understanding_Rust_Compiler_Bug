{"sha": "4ed3092ff8fe1a769f8c18d3f215cfafaf44a95d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVkMzA5MmZmOGZlMWE3NjlmOGMxOGQzZjIxNWNmYWZhZjQ0YTk1ZA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2014-07-02T20:19:19Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2014-07-02T20:19:19Z"}, "message": "Only transform rotate to rotatert and v.v. if target has both\n\nMany targets do not have both rotate and rotatert.  Of the 47 targets\nin the tree, 17 have both, 9 have only rotate, 2 have only rotatert, and\n19 have neither (this is based on \"grep -wil\" so it can be slightly off).\n\nrs6000 has only rotate, and mips has only rotatert.  For such targets\nsimplifying rotate to rotatert and vice versa is not simplifying things\nat all.  rs6000 has already way too many rotate patterns (some days it\nseems like two thousand, but it is somewhat less in reality still); I\nwould prefer not to double that again.\n\nSo, this patch makes genrecog define HAVE_rotate and HAVE_rotatert if\nthose RTL codes are mentioned anywhere in the machine description, and\nthen does the transformation in simplify-rtx.c only if both these flags\nare set.\n\nFrom-SVN: r212239", "tree": {"sha": "55483e0c6041d55004fd9e1326e9f7d35571d985", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55483e0c6041d55004fd9e1326e9f7d35571d985"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ed3092ff8fe1a769f8c18d3f215cfafaf44a95d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ed3092ff8fe1a769f8c18d3f215cfafaf44a95d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ed3092ff8fe1a769f8c18d3f215cfafaf44a95d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ed3092ff8fe1a769f8c18d3f215cfafaf44a95d/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1680a432083fd5e3c7e84a246595f3df9e9165d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1680a432083fd5e3c7e84a246595f3df9e9165d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1680a432083fd5e3c7e84a246595f3df9e9165d7"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "1aec9adcc958b75d59f095c3e04ff34e2be3d0e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ed3092ff8fe1a769f8c18d3f215cfafaf44a95d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ed3092ff8fe1a769f8c18d3f215cfafaf44a95d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4ed3092ff8fe1a769f8c18d3f215cfafaf44a95d", "patch": "@@ -1,3 +1,11 @@\n+2014-07-02  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* genconfig.c (have_rotate_flag, have_rotatert_flag): New variables.\n+\t(walk_insn_part) <ROTATE, ROTATERT>: New cases.\n+\t(main): Conditionally write HAVE_rotate resp. HAVE_rotatert.\n+\t* simplify-rtx.c (simplify_binary_operation_1) <ROTATE, ROTATERT>:\n+\tOnly do the transformation if both HAVE_rotate and HAVE_rotatert.\n+\n 2014-07-02  Christian Bruel  <christian.bruel@st.com>\n \n \tPR target/29349"}, {"sha": "d1996c3af5da317b7835b54e3d62cfd00e6c54de", "filename": "gcc/genconfig.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ed3092ff8fe1a769f8c18d3f215cfafaf44a95d/gcc%2Fgenconfig.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ed3092ff8fe1a769f8c18d3f215cfafaf44a95d/gcc%2Fgenconfig.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenconfig.c?ref=4ed3092ff8fe1a769f8c18d3f215cfafaf44a95d", "patch": "@@ -36,6 +36,8 @@ static int have_cc0_flag;\n static int have_cmove_flag;\n static int have_cond_exec_flag;\n static int have_lo_sum_flag;\n+static int have_rotate_flag;\n+static int have_rotatert_flag;\n static int have_peephole_flag;\n static int have_peephole2_flag;\n \n@@ -117,6 +119,16 @@ walk_insn_part (rtx part, int recog_p, int non_pc_set_src)\n \thave_lo_sum_flag = 1;\n       return;\n \n+    case ROTATE:\n+      if (recog_p)\n+\thave_rotate_flag = 1;\n+      return;\n+\n+    case ROTATERT:\n+      if (recog_p)\n+\thave_rotatert_flag = 1;\n+      return;\n+\n     case SET:\n       walk_insn_part (SET_DEST (part), 0, recog_p);\n       walk_insn_part (SET_SRC (part), recog_p,\n@@ -346,6 +358,12 @@ main (int argc, char **argv)\n   if (have_lo_sum_flag)\n     printf (\"#define HAVE_lo_sum 1\\n\");\n \n+  if (have_rotate_flag)\n+    printf (\"#define HAVE_rotate 1\\n\");\n+\n+  if (have_rotatert_flag)\n+    printf (\"#define HAVE_rotatert 1\\n\");\n+\n   if (have_peephole_flag)\n     printf (\"#define HAVE_peephole 1\\n\");\n "}, {"sha": "07b93538969036b0c55e570b801e37c54a07f0a9", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ed3092ff8fe1a769f8c18d3f215cfafaf44a95d/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ed3092ff8fe1a769f8c18d3f215cfafaf44a95d/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=4ed3092ff8fe1a769f8c18d3f215cfafaf44a95d", "patch": "@@ -3076,13 +3076,15 @@ simplify_binary_operation_1 (enum rtx_code code, enum machine_mode mode,\n \t prefer left rotation, if op1 is from bitsize / 2 + 1 to\n \t bitsize - 1, use other direction of rotate with 1 .. bitsize / 2 - 1\n \t amount instead.  */\n+#if defined(HAVE_rotate) && defined(HAVE_rotatert)\n       if (CONST_INT_P (trueop1)\n \t  && IN_RANGE (INTVAL (trueop1),\n \t\t       GET_MODE_BITSIZE (mode) / 2 + (code == ROTATE),\n \t\t       GET_MODE_BITSIZE (mode) - 1))\n \treturn simplify_gen_binary (code == ROTATE ? ROTATERT : ROTATE,\n \t\t\t\t    mode, op0, GEN_INT (GET_MODE_BITSIZE (mode)\n \t\t\t\t\t\t\t- INTVAL (trueop1)));\n+#endif\n       /* FALLTHRU */\n     case ASHIFTRT:\n       if (trueop1 == CONST0_RTX (mode))"}]}