{"sha": "92e97cdd7d8f1f1a078d6afeb10f8de537ba3e50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJlOTdjZGQ3ZDhmMWYxYTA3OGQ2YWZlYjEwZjhkZTUzN2JhM2U1MA==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2010-01-14T13:29:44Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2010-01-14T13:29:44Z"}, "message": "re PR tree-optimization/42714 (ICE in create_tmp_var, at gimplify.c:504)\n\n2010-01-14  Martin Jambor  <mjambor@suse.cz>\n\n\tPR tree-optimization/42714\n\t* tree-sra.c (sra_ipa_modify_assign): Handle incompatible-type\n\tconstructors specially.\n\n\t* gcc/testsuite/g++.dg/torture/pr42714.C: New test.\n\nFrom-SVN: r155905", "tree": {"sha": "f2febcbe59eba4389ef16ad0d9e2c5294a498685", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2febcbe59eba4389ef16ad0d9e2c5294a498685"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92e97cdd7d8f1f1a078d6afeb10f8de537ba3e50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92e97cdd7d8f1f1a078d6afeb10f8de537ba3e50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92e97cdd7d8f1f1a078d6afeb10f8de537ba3e50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92e97cdd7d8f1f1a078d6afeb10f8de537ba3e50/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a0463099e76db6b342de8b0149a622de788b8a66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0463099e76db6b342de8b0149a622de788b8a66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0463099e76db6b342de8b0149a622de788b8a66"}], "stats": {"total": 64, "additions": 62, "deletions": 2}, "files": [{"sha": "d1cfa1bcaa33553359c63fefbd1c11f193452d82", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e97cdd7d8f1f1a078d6afeb10f8de537ba3e50/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e97cdd7d8f1f1a078d6afeb10f8de537ba3e50/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=92e97cdd7d8f1f1a078d6afeb10f8de537ba3e50", "patch": "@@ -1,3 +1,9 @@\n+2010-01-14  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/42714\n+\t* tree-sra.c (sra_ipa_modify_assign): Handle incompatible-type\n+\tconstructors specially.\n+\n 2010-01-14  Andi Kleen  <ak@linux.intel.com>\n \n \t* config/i386/drivers-i386.c (detect_caches_intel):"}, {"sha": "0a7a289c61240a34d71146757566864cf9041636", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e97cdd7d8f1f1a078d6afeb10f8de537ba3e50/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e97cdd7d8f1f1a078d6afeb10f8de537ba3e50/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=92e97cdd7d8f1f1a078d6afeb10f8de537ba3e50", "patch": "@@ -1,3 +1,8 @@\n+2010-01-14  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/42714\n+\t* gcc/testsuite/g++.dg/torture/pr42714.C: New test.\n+\n 2010-01-14  Alexander Monakov  <amonakov@ispras.ru>\n \n \tPR rtl-optimization/42246"}, {"sha": "b1b2d856efc2faf2632ea8f86d454afbb11548e9", "filename": "gcc/testsuite/g++.dg/torture/pr42714.C", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e97cdd7d8f1f1a078d6afeb10f8de537ba3e50/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr42714.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e97cdd7d8f1f1a078d6afeb10f8de537ba3e50/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr42714.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr42714.C?ref=92e97cdd7d8f1f1a078d6afeb10f8de537ba3e50", "patch": "@@ -0,0 +1,37 @@\n+struct QVectorData {\n+    static QVectorData shared_null;\n+};\n+template <typename T> class QVector {\n+    union {\n+        QVectorData *d;\n+    };\n+public:\n+    inline QVector() : d(&QVectorData::shared_null) { }\n+    inline QVector(const QVector<T> &v) : d(v.d) { }\n+};\n+class QXmlStreamAttribute { };\n+class QXmlStreamAttributes : public QVector<QXmlStreamAttribute> { };\n+class __attribute__ ((visibility(\"default\"))) Smoke {\n+public:\n+    union StackItem;\n+    typedef StackItem* Stack;\n+    typedef short Index;\n+};\n+class SmokeBinding { };\n+namespace __smokeqt {\n+    class x_QXmlStreamAttributes : public QXmlStreamAttributes {\n+        SmokeBinding* _binding;\n+    public:\n+        static void x_11(Smoke::Stack x) {\n+            x_QXmlStreamAttributes* xret = new x_QXmlStreamAttributes();\n+        }\n+        explicit x_QXmlStreamAttributes() : QXmlStreamAttributes() { }\n+    };\n+    void xcall_QXmlStreamAttributes(Smoke::Index xi, void *obj,\n+                                    Smoke::Stack args)\n+      {\n+        switch(xi) {\n+            case 11: x_QXmlStreamAttributes::x_11(args);\n+        }\n+      }\n+}"}, {"sha": "47976679a11f3eae2a6674ac590c9aca519e5fe8", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e97cdd7d8f1f1a078d6afeb10f8de537ba3e50/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e97cdd7d8f1f1a078d6afeb10f8de537ba3e50/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=92e97cdd7d8f1f1a078d6afeb10f8de537ba3e50", "patch": "@@ -3712,8 +3712,20 @@ sra_ipa_modify_assign (gimple *stmt_ptr, gimple_stmt_iterator *gsi, void *data)\n       tree new_rhs = NULL_TREE;\n \n       if (!useless_type_conversion_p (TREE_TYPE (*lhs_p), TREE_TYPE (*rhs_p)))\n-\tnew_rhs = fold_build1_loc (gimple_location (stmt), VIEW_CONVERT_EXPR,\n-\t\t\t\t   TREE_TYPE (*lhs_p), *rhs_p);\n+\t{\n+\t  if (TREE_CODE (*rhs_p) == CONSTRUCTOR)\n+\t    {\n+\t      /* V_C_Es of constructors can cause trouble (PR 42714).  */\n+\t      if (is_gimple_reg_type (TREE_TYPE (*lhs_p)))\n+\t\t*rhs_p = fold_convert (TREE_TYPE (*lhs_p), integer_zero_node);\n+\t      else\n+\t\t*rhs_p = build_constructor (TREE_TYPE (*lhs_p), 0);\n+\t    }\n+\t  else\n+\t    new_rhs = fold_build1_loc (gimple_location (stmt),\n+\t\t\t\t       VIEW_CONVERT_EXPR, TREE_TYPE (*lhs_p),\n+\t\t\t\t       *rhs_p);\n+\t}\n       else if (REFERENCE_CLASS_P (*rhs_p)\n \t       && is_gimple_reg_type (TREE_TYPE (*lhs_p))\n \t       && !is_gimple_reg (*lhs_p))"}]}