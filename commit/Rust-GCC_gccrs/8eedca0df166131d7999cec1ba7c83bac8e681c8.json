{"sha": "8eedca0df166131d7999cec1ba7c83bac8e681c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGVlZGNhMGRmMTY2MTMxZDc5OTljZWMxYmE3YzgzYmFjOGU2ODFjOA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-01-31T14:44:37Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-01-31T14:44:37Z"}, "message": "re PR tree-optimization/77318 (FAIL: gfortran.dg/graphite/pr68279.f90   -O  (internal compiler error))\n\n2017-01-31  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/77318\n\t* graphite-sese-to-poly.c (extract_affine): Fix assert.\n\t(create_pw_aff_from_tree): Take loop parameter.\n\t(add_condition_to_pbb): Pass loop of the condition to\n\tcreate_pw_aff_from_tree.\n\nFrom-SVN: r245064", "tree": {"sha": "154699d914e23f75cbcde8969d3ffa2470d28e9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/154699d914e23f75cbcde8969d3ffa2470d28e9d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8eedca0df166131d7999cec1ba7c83bac8e681c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eedca0df166131d7999cec1ba7c83bac8e681c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8eedca0df166131d7999cec1ba7c83bac8e681c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eedca0df166131d7999cec1ba7c83bac8e681c8/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dced339c8a6fa30f90181da525fb0da4801bdf39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dced339c8a6fa30f90181da525fb0da4801bdf39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dced339c8a6fa30f90181da525fb0da4801bdf39"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "6f8d86085ef2687975b08cefe9ad2b802e4fb54c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eedca0df166131d7999cec1ba7c83bac8e681c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eedca0df166131d7999cec1ba7c83bac8e681c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8eedca0df166131d7999cec1ba7c83bac8e681c8", "patch": "@@ -1,3 +1,11 @@\n+2017-01-31  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/77318\n+\t* graphite-sese-to-poly.c (extract_affine): Fix assert.\n+\t(create_pw_aff_from_tree): Take loop parameter.\n+\t(add_condition_to_pbb): Pass loop of the condition to\n+\tcreate_pw_aff_from_tree.\n+\n 2017-01-31  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/s390/s390.c (s390_asan_shadow_offset): New function."}, {"sha": "7583cc92a988aff476060edf4f0675ca6931b186", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eedca0df166131d7999cec1ba7c83bac8e681c8/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eedca0df166131d7999cec1ba7c83bac8e681c8/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=8eedca0df166131d7999cec1ba7c83bac8e681c8", "patch": "@@ -407,7 +407,7 @@ extract_affine (scop_p s, tree e, __isl_take isl_space *space)\n \n     case SSA_NAME:\n       gcc_assert (-1 != parameter_index_in_region_1 (e, s->scop_info)\n-\t\t  || !invariant_in_sese_p_rec (e, s->scop_info->region, NULL));\n+\t\t  || defined_in_sese_p (e, s->scop_info->region));\n       res = extract_affine_name (s, e, space);\n       break;\n \n@@ -436,11 +436,11 @@ extract_affine (scop_p s, tree e, __isl_take isl_space *space)\n /* Returns a linear expression for tree T evaluated in PBB.  */\n \n static isl_pw_aff *\n-create_pw_aff_from_tree (poly_bb_p pbb, tree t)\n+create_pw_aff_from_tree (poly_bb_p pbb, loop_p loop, tree t)\n {\n   scop_p scop = PBB_SCOP (pbb);\n \n-  t = scalar_evolution_in_region (scop->scop_info->region, pbb_loop (pbb), t);\n+  t = scalar_evolution_in_region (scop->scop_info->region, loop, t);\n \n   gcc_assert (!chrec_contains_undetermined (t));\n   gcc_assert (!automatically_generated_chrec_p (t));\n@@ -455,8 +455,9 @@ create_pw_aff_from_tree (poly_bb_p pbb, tree t)\n static void\n add_condition_to_pbb (poly_bb_p pbb, gcond *stmt, enum tree_code code)\n {\n-  isl_pw_aff *lhs = create_pw_aff_from_tree (pbb, gimple_cond_lhs (stmt));\n-  isl_pw_aff *rhs = create_pw_aff_from_tree (pbb, gimple_cond_rhs (stmt));\n+  loop_p loop = gimple_bb (stmt)->loop_father;\n+  isl_pw_aff *lhs = create_pw_aff_from_tree (pbb, loop, gimple_cond_lhs (stmt));\n+  isl_pw_aff *rhs = create_pw_aff_from_tree (pbb, loop, gimple_cond_rhs (stmt));\n \n   isl_set *cond;\n   switch (code)"}]}