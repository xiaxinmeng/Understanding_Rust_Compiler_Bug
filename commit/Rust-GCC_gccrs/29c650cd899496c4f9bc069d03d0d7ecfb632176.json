{"sha": "29c650cd899496c4f9bc069d03d0d7ecfb632176", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjljNjUwY2Q4OTk0OTZjNGY5YmMwNjlkMDNkMGQ3ZWNmYjYzMjE3Ng==", "commit": {"author": {"name": "Dennis Zhang", "email": "dennis.zh@live.com", "date": "2020-10-06T15:53:46Z"}, "committer": {"name": "Dennis Zhang", "email": "dennis.zh@live.com", "date": "2020-10-06T15:53:46Z"}, "message": "arm: Enable MVE SIMD modes for vectorization\n\nThis patch enables SIMD modes for MVE auto-vectorization.\nIn this patch, the integer and float MVE SIMD modes are returned by\narm_preferred_simd_mode (TARGET_VECTORIZE_PREFERRED_SIMD_MODE hook) when\nMVE or MVE_FLOAT is enabled. Then the expanders for auto-vectorization\ncan be used for generating MVE SIMD code.\n\nThis patch also fixes bugs in MVE vreiterpretq_*.c tests which are\nrevealed by the enabled MVE SIMD modes.\nThe tests are for checking the MVE reinterpret intrinsics.\nThere are two functions in each of the tests. The two functions contain\nthe pattern of identical code so that they are folded in icf pass.\nBecause of icf, the instruction count only checks one function which is\n8. However when the SIMD modes are enabled, the estimation of the code\nsize becomes smaller so that inlining is applied after icf, then the\ninstruction count becomes 16 which causes failure of the tests.\nBecause the icf is not the expected pattern to be tested but causes\nabove issues, -fno-ipa-icf is applied to the tests to avoid unstable\ninstruction count.\n\ngcc/ChangeLog:\n\n2020-10-05  Dennis Zhang  <dennis.zhang@arm.com>\n\n\t* config/arm/arm.c (arm_preferred_simd_mode): Enable MVE SIMD modes.\n\ngcc/testsuite/ChangeLog:\n\n2020-10-05  Dennis Zhang  <dennis.zhang@arm.com>\n\n\t* gcc.target/arm/mve/intrinsics/vreinterpretq_f16.c: Use additional\n\toption -fno-ipa-icf and change the instruction count from 8 to 16.\n\t* gcc.target/arm/mve/intrinsics/vreinterpretq_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vreinterpretq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vreinterpretq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vreinterpretq_s64.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vreinterpretq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vreinterpretq_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vreinterpretq_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vreinterpretq_u64.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vreinterpretq_u8.c: Likewise.", "tree": {"sha": "05ed6f469f3ea1cc26084c4d25ee91c21e08452f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05ed6f469f3ea1cc26084c4d25ee91c21e08452f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29c650cd899496c4f9bc069d03d0d7ecfb632176", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29c650cd899496c4f9bc069d03d0d7ecfb632176", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29c650cd899496c4f9bc069d03d0d7ecfb632176", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29c650cd899496c4f9bc069d03d0d7ecfb632176/comments", "author": {"login": "solarock", "id": 109078, "node_id": "MDQ6VXNlcjEwOTA3OA==", "avatar_url": "https://avatars.githubusercontent.com/u/109078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solarock", "html_url": "https://github.com/solarock", "followers_url": "https://api.github.com/users/solarock/followers", "following_url": "https://api.github.com/users/solarock/following{/other_user}", "gists_url": "https://api.github.com/users/solarock/gists{/gist_id}", "starred_url": "https://api.github.com/users/solarock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solarock/subscriptions", "organizations_url": "https://api.github.com/users/solarock/orgs", "repos_url": "https://api.github.com/users/solarock/repos", "events_url": "https://api.github.com/users/solarock/events{/privacy}", "received_events_url": "https://api.github.com/users/solarock/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solarock", "id": 109078, "node_id": "MDQ6VXNlcjEwOTA3OA==", "avatar_url": "https://avatars.githubusercontent.com/u/109078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solarock", "html_url": "https://github.com/solarock", "followers_url": "https://api.github.com/users/solarock/followers", "following_url": "https://api.github.com/users/solarock/following{/other_user}", "gists_url": "https://api.github.com/users/solarock/gists{/gist_id}", "starred_url": "https://api.github.com/users/solarock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solarock/subscriptions", "organizations_url": "https://api.github.com/users/solarock/orgs", "repos_url": "https://api.github.com/users/solarock/repos", "events_url": "https://api.github.com/users/solarock/events{/privacy}", "received_events_url": "https://api.github.com/users/solarock/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f2e15c2e66af9cca1dfe24ad7e9692f511ebd06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f2e15c2e66af9cca1dfe24ad7e9692f511ebd06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f2e15c2e66af9cca1dfe24ad7e9692f511ebd06"}], "stats": {"total": 82, "additions": 62, "deletions": 20}, "files": [{"sha": "743e49788579ddcf20c1c8b2134eb68233699232", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c650cd899496c4f9bc069d03d0d7ecfb632176/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c650cd899496c4f9bc069d03d0d7ecfb632176/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=29c650cd899496c4f9bc069d03d0d7ecfb632176", "patch": "@@ -1,3 +1,7 @@\n+2020-10-05  Dennis Zhang  <dennis.zhang@arm.com>\n+\n+\t* config/arm/arm.c (arm_preferred_simd_mode): Enable MVE SIMD modes.\n+\n 2020-10-05  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* value-range.cc (irange::legacy_intersect): Only handle"}, {"sha": "5fdc14396361b90455728738244ae43e83a220bc", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c650cd899496c4f9bc069d03d0d7ecfb632176/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c650cd899496c4f9bc069d03d0d7ecfb632176/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=29c650cd899496c4f9bc069d03d0d7ecfb632176", "patch": "@@ -28964,6 +28964,30 @@ arm_preferred_simd_mode (scalar_mode mode)\n       default:;\n       }\n \n+  if (TARGET_HAVE_MVE)\n+    switch (mode)\n+      {\n+      case QImode:\n+\treturn V16QImode;\n+      case HImode:\n+\treturn V8HImode;\n+      case SImode:\n+\treturn V4SImode;\n+\n+      default:;\n+      }\n+\n+  if (TARGET_HAVE_MVE_FLOAT)\n+    switch (mode)\n+      {\n+      case HFmode:\n+\treturn V8HFmode;\n+      case SFmode:\n+\treturn V4SFmode;\n+\n+      default:;\n+      }\n+\n   return word_mode;\n }\n "}, {"sha": "703cc683fe72086c26dfb50c7be5f7c20b6dcf64", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c650cd899496c4f9bc069d03d0d7ecfb632176/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c650cd899496c4f9bc069d03d0d7ecfb632176/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=29c650cd899496c4f9bc069d03d0d7ecfb632176", "patch": "@@ -1,3 +1,17 @@\n+2020-10-05  Dennis Zhang  <dennis.zhang@arm.com>\n+\n+\t* gcc.target/arm/mve/intrinsics/vreinterpretq_f16.c: Use additional\n+\toption -fno-ipa-icf and change the instruction count from 8 to 16.\n+\t* gcc.target/arm/mve/intrinsics/vreinterpretq_f32.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vreinterpretq_s16.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vreinterpretq_s32.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vreinterpretq_s64.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vreinterpretq_s8.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vreinterpretq_u16.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vreinterpretq_u32.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vreinterpretq_u64.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vreinterpretq_u8.c: Likewise.\n+\n 2020-10-05  Nathan Sidwell  <nathan@acm.org>\n \n \t* c-c++-common/spellcheck-reserved.c: Restore diagnostic."}, {"sha": "2398d89486171ca6a3b058db6d9aa5a0ca8e177a", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vreinterpretq_f16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c650cd899496c4f9bc069d03d0d7ecfb632176/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvreinterpretq_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c650cd899496c4f9bc069d03d0d7ecfb632176/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvreinterpretq_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvreinterpretq_f16.c?ref=29c650cd899496c4f9bc069d03d0d7ecfb632176", "patch": "@@ -1,6 +1,6 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n-/* { dg-additional-options \"-O2\" } */\n+/* { dg-additional-options \"-O2 -fno-ipa-icf\" } */\n \n #include \"arm_mve.h\"\n int8x16_t value1;\n@@ -41,4 +41,4 @@ foo1 ()\n   return vaddq_f16 (r7, vreinterpretq_f16 (value9));\n }\n \n-/* { dg-final { scan-assembler-times \"vadd.f16\" 8 } } */\n+/* { dg-final { scan-assembler-times \"vadd.f16\" 16 } } */"}, {"sha": "5a58dc6eb4c627cb22e1005cd99b2a7ef2c99121", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vreinterpretq_f32.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c650cd899496c4f9bc069d03d0d7ecfb632176/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvreinterpretq_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c650cd899496c4f9bc069d03d0d7ecfb632176/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvreinterpretq_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvreinterpretq_f32.c?ref=29c650cd899496c4f9bc069d03d0d7ecfb632176", "patch": "@@ -1,6 +1,6 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n-/* { dg-additional-options \"-O2\" } */\n+/* { dg-additional-options \"-O2 -fno-ipa-icf\" } */\n \n #include \"arm_mve.h\"\n int16x8_t value1;\n@@ -41,4 +41,4 @@ foo1 ()\n   return vaddq_f32 (r7, vreinterpretq_f32 (value9));\n }\n \n-/* { dg-final { scan-assembler-times \"vadd.f32\" 8 } } */\n+/* { dg-final { scan-assembler-times \"vadd.f32\" 16 } } */"}, {"sha": "9ab05e9542007c5a2b76ceb2697764e124150b82", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vreinterpretq_s16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c650cd899496c4f9bc069d03d0d7ecfb632176/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvreinterpretq_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c650cd899496c4f9bc069d03d0d7ecfb632176/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvreinterpretq_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvreinterpretq_s16.c?ref=29c650cd899496c4f9bc069d03d0d7ecfb632176", "patch": "@@ -1,6 +1,6 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n-/* { dg-additional-options \"-O2\" } */\n+/* { dg-additional-options \"-O2 -fno-ipa-icf\" } */\n \n #include \"arm_mve.h\"\n int8x16_t value1;\n@@ -41,4 +41,4 @@ foo1 ()\n   return vaddq_s16 (r7, vreinterpretq_s16 (value9));\n }\n \n-/* { dg-final { scan-assembler-times \"vadd.i16\" 8 } } */\n+/* { dg-final { scan-assembler-times \"vadd.i16\" 16 } } */"}, {"sha": "fbfff1fc1bb953ecfa6f96245ceb271267349e8f", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vreinterpretq_s32.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c650cd899496c4f9bc069d03d0d7ecfb632176/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvreinterpretq_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c650cd899496c4f9bc069d03d0d7ecfb632176/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvreinterpretq_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvreinterpretq_s32.c?ref=29c650cd899496c4f9bc069d03d0d7ecfb632176", "patch": "@@ -1,6 +1,6 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n-/* { dg-additional-options \"-O2\" } */\n+/* { dg-additional-options \"-O2 -fno-ipa-icf\" } */\n \n #include \"arm_mve.h\"\n int16x8_t value1;\n@@ -41,4 +41,4 @@ foo1 ()\n   return vaddq_s32 (r7, vreinterpretq_s32 (value9));\n }\n \n-/* { dg-final { scan-assembler-times \"vadd.i32\" 8 } } */\n+/* { dg-final { scan-assembler-times \"vadd.i32\" 16 } } */"}, {"sha": "beb6b927deb82bdae7d63ad58c2a0e703a8b8384", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vreinterpretq_s64.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c650cd899496c4f9bc069d03d0d7ecfb632176/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvreinterpretq_s64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c650cd899496c4f9bc069d03d0d7ecfb632176/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvreinterpretq_s64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvreinterpretq_s64.c?ref=29c650cd899496c4f9bc069d03d0d7ecfb632176", "patch": "@@ -1,6 +1,6 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n-/* { dg-additional-options \"-O2\" } */\n+/* { dg-additional-options \"-O2 -fno-ipa-icf\" } */\n \n #include \"arm_mve.h\"\n int16x8_t value1;\n@@ -42,4 +42,4 @@ foo1 (mve_pred16_t __p)\n   return vpselq_s64 (r7, vreinterpretq_s64 (value9), __p);\n }\n \n-/* { dg-final { scan-assembler-times \"vpsel\" 8 } } */\n+/* { dg-final { scan-assembler-times \"vpsel\" 16 } } */"}, {"sha": "727d89b63eece5218a401f9780257b04f1059e11", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vreinterpretq_s8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c650cd899496c4f9bc069d03d0d7ecfb632176/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvreinterpretq_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c650cd899496c4f9bc069d03d0d7ecfb632176/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvreinterpretq_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvreinterpretq_s8.c?ref=29c650cd899496c4f9bc069d03d0d7ecfb632176", "patch": "@@ -1,6 +1,6 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n-/* { dg-additional-options \"-O2\" } */\n+/* { dg-additional-options \"-O2 -fno-ipa-icf\" } */\n \n #include \"arm_mve.h\"\n int16x8_t value1;\n@@ -41,4 +41,4 @@ foo1 ()\n   return vaddq_s8 (r7, vreinterpretq_s8 (value9));\n }\n \n-/* { dg-final { scan-assembler-times \"vadd.i8\" 8 } } */\n+/* { dg-final { scan-assembler-times \"vadd.i8\" 16 } } */"}, {"sha": "600f6d72a96d8f85c431cae3fd09dc1b1b4d084d", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vreinterpretq_u16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c650cd899496c4f9bc069d03d0d7ecfb632176/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvreinterpretq_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c650cd899496c4f9bc069d03d0d7ecfb632176/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvreinterpretq_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvreinterpretq_u16.c?ref=29c650cd899496c4f9bc069d03d0d7ecfb632176", "patch": "@@ -1,6 +1,6 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n-/* { dg-additional-options \"-O2\" } */\n+/* { dg-additional-options \"-O2 -fno-ipa-icf\" } */\n \n #include \"arm_mve.h\"\n int8x16_t value1;\n@@ -41,4 +41,4 @@ foo1 ()\n   return vaddq_u16 (r7, vreinterpretq_u16 (value9));\n }\n \n-/* { dg-final { scan-assembler-times \"vadd.i16\" 8 } } */\n+/* { dg-final { scan-assembler-times \"vadd.i16\" 16 } } */"}, {"sha": "d536ae825deef7610dd2dad93f1da856d3f12092", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vreinterpretq_u32.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c650cd899496c4f9bc069d03d0d7ecfb632176/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvreinterpretq_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c650cd899496c4f9bc069d03d0d7ecfb632176/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvreinterpretq_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvreinterpretq_u32.c?ref=29c650cd899496c4f9bc069d03d0d7ecfb632176", "patch": "@@ -1,6 +1,6 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n-/* { dg-additional-options \"-O2\" } */\n+/* { dg-additional-options \"-O2 -fno-ipa-icf\" } */\n \n #include \"arm_mve.h\"\n int16x8_t value1;\n@@ -41,4 +41,4 @@ foo1 ()\n   return vaddq_u32 (r7, vreinterpretq_u32 (value9));\n }\n \n-/* { dg-final { scan-assembler-times \"vadd.i32\" 8 } } */\n+/* { dg-final { scan-assembler-times \"vadd.i32\" 16 } } */"}, {"sha": "abc43612b9136c5dede8624b1ab4c6b073c93115", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vreinterpretq_u64.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c650cd899496c4f9bc069d03d0d7ecfb632176/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvreinterpretq_u64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c650cd899496c4f9bc069d03d0d7ecfb632176/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvreinterpretq_u64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvreinterpretq_u64.c?ref=29c650cd899496c4f9bc069d03d0d7ecfb632176", "patch": "@@ -1,6 +1,6 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n-/* { dg-additional-options \"-O2\" } */\n+/* { dg-additional-options \"-O2 -fno-ipa-icf\" } */\n \n #include \"arm_mve.h\"\n int16x8_t value1;\n@@ -42,4 +42,4 @@ foo1 (mve_pred16_t __p)\n   return vpselq_u64 (r7, vreinterpretq_u64 (value9), __p);\n }\n \n-/* { dg-final { scan-assembler-times \"vpsel\" 8 } } */\n+/* { dg-final { scan-assembler-times \"vpsel\" 16 } } */"}, {"sha": "c138e5b3668053c68037c168f0d9ab051cafe41f", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vreinterpretq_u8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c650cd899496c4f9bc069d03d0d7ecfb632176/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvreinterpretq_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c650cd899496c4f9bc069d03d0d7ecfb632176/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvreinterpretq_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvreinterpretq_u8.c?ref=29c650cd899496c4f9bc069d03d0d7ecfb632176", "patch": "@@ -1,6 +1,6 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n-/* { dg-additional-options \"-O2\" } */\n+/* { dg-additional-options \"-O2 -fno-ipa-icf\" } */\n \n #include \"arm_mve.h\"\n int16x8_t value1;\n@@ -41,4 +41,4 @@ foo1 ()\n   return vaddq_u8 (r7, vreinterpretq_u8 (value9));\n }\n \n-/* { dg-final { scan-assembler-times \"vadd.i8\" 8 } } */\n+/* { dg-final { scan-assembler-times \"vadd.i8\" 16 } } */"}]}