{"sha": "33d6748532861388e9644438ac5bc5e3de1222db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNkNjc0ODUzMjg2MTM4OGU5NjQ0NDM4YWM1YmM1ZTNkZTEyMjJkYg==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@linux-m68k.org", "date": "2010-06-14T20:00:21Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2010-06-14T20:00:21Z"}, "message": "m68k.c (m68k_delegitimize_address): Don't do anything if the argument is not a MEM.\n\n* config/m68k/m68k.c (m68k_delegitimize_address): Don't do\nanything if the argument is not a MEM.\n\nFrom-SVN: r160763", "tree": {"sha": "2e5d7aba7dc33ac41b1cf1b323ad28860a502196", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e5d7aba7dc33ac41b1cf1b323ad28860a502196"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33d6748532861388e9644438ac5bc5e3de1222db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33d6748532861388e9644438ac5bc5e3de1222db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33d6748532861388e9644438ac5bc5e3de1222db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33d6748532861388e9644438ac5bc5e3de1222db/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "22963fee5bbfa9de82c08664af99fa24de267872", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22963fee5bbfa9de82c08664af99fa24de267872", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22963fee5bbfa9de82c08664af99fa24de267872"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "c20349431f1f54c1cd06a7db1214e3bba173c8be", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33d6748532861388e9644438ac5bc5e3de1222db/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33d6748532861388e9644438ac5bc5e3de1222db/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=33d6748532861388e9644438ac5bc5e3de1222db", "patch": "@@ -1,3 +1,8 @@\n+2010-06-14  Andreas Schwab  <schwab@linux-m68k.org>\n+\n+\t* config/m68k/m68k.c (m68k_delegitimize_address): Don't do\n+\tanything if the argument is not a MEM.\n+\n 2010-06-14  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/43650"}, {"sha": "76be38d35a7767823bd74ac1d59ee500e602c710", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33d6748532861388e9644438ac5bc5e3de1222db/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33d6748532861388e9644438ac5bc5e3de1222db/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=33d6748532861388e9644438ac5bc5e3de1222db", "patch": "@@ -4624,16 +4624,17 @@ m68k_output_dwarf_dtprel (FILE *file, int size, rtx x)\n    and turn them back into a direct symbol reference.  */\n \n static rtx\n-m68k_delegitimize_address (rtx x)\n+m68k_delegitimize_address (rtx orig_x)\n {\n-  rtx orig_x = delegitimize_mem_from_attrs (x);\n-  rtx y;\n+  rtx x, y;\n   rtx addend = NULL_RTX;\n   rtx result;\n \n-  x = orig_x;\n-  if (MEM_P (x))\n-    x = XEXP (x, 0);\n+  orig_x = delegitimize_mem_from_attrs (orig_x);\n+  if (! MEM_P (orig_x))\n+    return orig_x;\n+\n+  x = XEXP (orig_x, 0);\n \n   if (GET_CODE (x) == PLUS\n       && GET_CODE (XEXP (x, 1)) == CONST"}]}