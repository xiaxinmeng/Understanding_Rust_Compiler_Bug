{"sha": "2d1504186ee9d83fbc93f4b6880d55dcdd8daaff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQxNTA0MTg2ZWU5ZDgzZmJjOTNmNGI2ODgwZDU1ZGNkZDhkYWFmZg==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-11-03T08:39:10Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-11-27T09:15:46Z"}, "message": "[Ada] Simplify check for illegal non-returning procedures\n\ngcc/ada/\n\n\t* sem_prag.adb (Analyze_Pragma): Change \"Ref Manual\" to RM;\n\treplace uses of an unnecessary \"Ok\" variable with RETURN\n\tstatements; replace nested IF with ELSIF.", "tree": {"sha": "0023b4da187a35dc4841f4a2ddc1100076415c0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0023b4da187a35dc4841f4a2ddc1100076415c0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d1504186ee9d83fbc93f4b6880d55dcdd8daaff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d1504186ee9d83fbc93f4b6880d55dcdd8daaff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d1504186ee9d83fbc93f4b6880d55dcdd8daaff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d1504186ee9d83fbc93f4b6880d55dcdd8daaff/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05e59503c6e57851104649d8781727c4571a8b2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05e59503c6e57851104649d8781727c4571a8b2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05e59503c6e57851104649d8781727c4571a8b2c"}], "stats": {"total": 28, "additions": 11, "deletions": 17}, "files": [{"sha": "5bf9fd38289bd497574b7206935e252fe0775521", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 11, "deletions": 17, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d1504186ee9d83fbc93f4b6880d55dcdd8daaff/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d1504186ee9d83fbc93f4b6880d55dcdd8daaff/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=2d1504186ee9d83fbc93f4b6880d55dcdd8daaff", "patch": "@@ -19675,9 +19675,8 @@ package body Sem_Prag is\n             function Check_No_Return\n                (E : Entity_Id;\n                 N : Node_Id) return Boolean;\n-            --  Check rule 6.5.1 4/3 of the Ada Ref Manual. If the rule is\n-            --  violated, emit an error message and return False, otherwise\n-            --  return True.\n+            --  Check rule 6.5.1(4/3) of the Ada RM. If the rule is violated,\n+            --  emit an error message and return False, otherwise return True.\n             --  6.5.1 Nonreturning procedures:\n             --  4/3 \"Aspect No_Return shall not be specified for a null\n             --  procedure nor an instance of a generic unit.\"\n@@ -19690,13 +19689,12 @@ package body Sem_Prag is\n                (E : Entity_Id;\n                 N : Node_Id) return Boolean\n             is\n-               Ok : Boolean := True;\n             begin\n                if Ekind (E) = E_Procedure then\n \n-                  --  If E is a generic instance, marking it with No_Return is\n-                  --  forbidden, but having it inherit the No_Return of the\n-                  --  generic is allowed. We check if E is inheriting its\n+                  --  If E is a generic instance, marking it with No_Return\n+                  --  is forbidden, but having it inherit the No_Return of\n+                  --  the generic is allowed. We check if E is inheriting its\n                   --  No_Return flag from the generic by checking if No_Return\n                   --  is already set.\n \n@@ -19707,20 +19705,16 @@ package body Sem_Prag is\n                        (\"\\generic procedure & must be marked No_Return\",\n                         N,\n                         Generic_Parent (Parent (E)));\n-                     Ok := False;\n+                     return False;\n \n-                  else\n-                     if Null_Present (Subprogram_Specification (E)) then\n-                        Error_Msg_NE\n-                          (\"null procedure & cannot be marked No_Return\",\n-                           N,\n-                           E);\n-                        Ok := False;\n-                     end if;\n+                  elsif Null_Present (Subprogram_Specification (E)) then\n+                     Error_Msg_NE\n+                       (\"null procedure & cannot be marked No_Return\", N, E);\n+                     return False;\n                   end if;\n                end if;\n \n-               return Ok;\n+               return True;\n             end Check_No_Return;\n \n             Arg   : Node_Id;"}]}