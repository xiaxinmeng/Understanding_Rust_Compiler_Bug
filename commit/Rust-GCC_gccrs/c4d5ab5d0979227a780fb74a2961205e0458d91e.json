{"sha": "c4d5ab5d0979227a780fb74a2961205e0458d91e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzRkNWFiNWQwOTc5MjI3YTc4MGZiNzRhMjk2MTIwNWUwNDU4ZDkxZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-03-24T14:09:33Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-03-24T14:09:33Z"}, "message": "genrecog.c (validate_pattern): Add VEC_SELECT validation.\n\n\t* genrecog.c (validate_pattern): Add VEC_SELECT validation.\n\t* genmodes.c (emit_min_insn_modes_c): Call emit_mode_nunits\n\tand emit_mode_inner.\n\nFrom-SVN: r246460", "tree": {"sha": "2ee2b3e273825de6e1030d08aadb82ca35ae9c1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ee2b3e273825de6e1030d08aadb82ca35ae9c1a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4d5ab5d0979227a780fb74a2961205e0458d91e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4d5ab5d0979227a780fb74a2961205e0458d91e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4d5ab5d0979227a780fb74a2961205e0458d91e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4d5ab5d0979227a780fb74a2961205e0458d91e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "76794c52216326ff16601d53a0f36d7b046c6f55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76794c52216326ff16601d53a0f36d7b046c6f55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76794c52216326ff16601d53a0f36d7b046c6f55"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "f82afbe9ab4a609791b7d8ba06050e265a8bd07b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4d5ab5d0979227a780fb74a2961205e0458d91e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4d5ab5d0979227a780fb74a2961205e0458d91e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c4d5ab5d0979227a780fb74a2961205e0458d91e", "patch": "@@ -1,3 +1,9 @@\n+2017-03-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* genrecog.c (validate_pattern): Add VEC_SELECT validation.\n+\t* genmodes.c (emit_min_insn_modes_c): Call emit_mode_nunits\n+\tand emit_mode_inner.\n+\n 2017-03-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* config/s390/s390-builtins.def: Add VXE builtins.  Add a flags"}, {"sha": "e56c08b4d30d7bc1ad64e71e7a9f50ba5b636ea3", "filename": "gcc/genmodes.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4d5ab5d0979227a780fb74a2961205e0458d91e/gcc%2Fgenmodes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4d5ab5d0979227a780fb74a2961205e0458d91e/gcc%2Fgenmodes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenmodes.c?ref=c4d5ab5d0979227a780fb74a2961205e0458d91e", "patch": "@@ -1789,7 +1789,9 @@ emit_min_insn_modes_c (void)\n   emit_min_insn_modes_c_header ();\n   emit_mode_name ();\n   emit_mode_class ();\n+  emit_mode_nunits ();\n   emit_mode_wider ();\n+  emit_mode_inner ();\n   emit_class_narrowest_mode ();\n }\n "}, {"sha": "6a9e610e7a09141a994ffd2441710fd0d5498300", "filename": "gcc/genrecog.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4d5ab5d0979227a780fb74a2961205e0458d91e/gcc%2Fgenrecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4d5ab5d0979227a780fb74a2961205e0458d91e/gcc%2Fgenrecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenrecog.c?ref=c4d5ab5d0979227a780fb74a2961205e0458d91e", "patch": "@@ -737,6 +737,32 @@ validate_pattern (rtx pattern, md_rtx_info *info, rtx set, int set_code)\n \t\t  GET_MODE_NAME (GET_MODE (XEXP (pattern, 0))));\n       break;\n \n+    case VEC_SELECT:\n+      if (GET_MODE (pattern) != VOIDmode)\n+\t{\n+\t  enum machine_mode mode = GET_MODE (pattern);\n+\t  enum machine_mode imode = GET_MODE (XEXP (pattern, 0));\n+\t  enum machine_mode emode\n+\t    = VECTOR_MODE_P (mode) ? GET_MODE_INNER (mode) : mode;\n+\t  if (GET_CODE (XEXP (pattern, 1)) == PARALLEL)\n+\t    {\n+\t      int expected = VECTOR_MODE_P (mode) ? GET_MODE_NUNITS (mode) : 1;\n+\t      if (XVECLEN (XEXP (pattern, 1), 0) != expected)\n+\t\terror_at (info->loc,\n+\t\t\t  \"vec_select parallel with %d elements, expected %d\",\n+\t\t\t  XVECLEN (XEXP (pattern, 1), 0), expected);\n+\t    }\n+\t  if (imode != VOIDmode && !VECTOR_MODE_P (imode))\n+\t    error_at (info->loc, \"%smode of first vec_select operand is not a \"\n+\t\t\t\t \"vector mode\", GET_MODE_NAME (imode));\n+\t  else if (imode != VOIDmode && GET_MODE_INNER (imode) != emode)\n+\t    error_at (info->loc, \"element mode mismatch between vec_select \"\n+\t\t\t\t \"%smode and its operand %smode\",\n+\t\t      GET_MODE_NAME (emode),\n+\t\t      GET_MODE_NAME (GET_MODE_INNER (imode)));\n+\t}\n+      break;\n+\n     default:\n       break;\n     }"}]}