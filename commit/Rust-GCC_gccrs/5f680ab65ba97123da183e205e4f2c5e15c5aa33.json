{"sha": "5f680ab65ba97123da183e205e4f2c5e15c5aa33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY2ODBhYjY1YmE5NzEyM2RhMTgzZTIwNWU0ZjJjNWUxNWM1YWEzMw==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@cygnus.com", "date": "1998-12-07T15:32:26Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1998-12-07T15:32:26Z"}, "message": "Fix -membedded-data bug found by mips16 port.\n\n\t* mips/mips.h (ENCODE_SECTION_INFO): Handle TARGET_EMBEDDED_DATA.\n\tAdd comment.\n\t* mips/mips.c (mips_select_section): Add comment.\n\nFrom-SVN: r24158", "tree": {"sha": "a405d30c79ee348e52efd917f46d0970efe9711c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a405d30c79ee348e52efd917f46d0970efe9711c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f680ab65ba97123da183e205e4f2c5e15c5aa33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f680ab65ba97123da183e205e4f2c5e15c5aa33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f680ab65ba97123da183e205e4f2c5e15c5aa33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f680ab65ba97123da183e205e4f2c5e15c5aa33/comments", "author": null, "committer": null, "parents": [{"sha": "069f7cf27ac43a69025413e86e8674c8bfa8383d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/069f7cf27ac43a69025413e86e8674c8bfa8383d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/069f7cf27ac43a69025413e86e8674c8bfa8383d"}], "stats": {"total": 43, "additions": 40, "deletions": 3}, "files": [{"sha": "bb4d0e453a3045c2afc6e9a7d044f35d332b090a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f680ab65ba97123da183e205e4f2c5e15c5aa33/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f680ab65ba97123da183e205e4f2c5e15c5aa33/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5f680ab65ba97123da183e205e4f2c5e15c5aa33", "patch": "@@ -1,3 +1,9 @@\n+Mon Dec  7 15:27:09 1998  DJ Delorie  <dj@cygnus.com>\n+\n+\t* mips/mips.h (ENCODE_SECTION_INFO): Handle TARGET_EMBEDDED_DATA.\n+\tAdd comment.\n+\t* mips/mips.c (mips_select_section): Add comment.\n+\n Mon Dec  7 17:55:06 1998  Mike Stump  <mrs@wrs.com>\n \n \t* cccp.c (ignore_escape_flag): Add support for \\ as `natural'"}, {"sha": "cf6ec55967272fb75745eebb64c9a610e624eab9", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f680ab65ba97123da183e205e4f2c5e15c5aa33/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f680ab65ba97123da183e205e4f2c5e15c5aa33/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=5f680ab65ba97123da183e205e4f2c5e15c5aa33", "patch": "@@ -6861,7 +6861,16 @@ mips_select_rtx_section (mode, x)\n }\n \n /* Choose the section to use for DECL.  RELOC is true if its value contains\n-   any relocatable expression.  */\n+   any relocatable expression.\n+\n+   Some of the logic used here needs to be replicated in\n+   ENCODE_SECTION_INFO in mips.h so that references to these symbols\n+   are done correctly.  Specifically, at least all symbols assigned\n+   here to rom (.text and/or .rodata) must not be referenced via\n+   ENCODE_SECTION_INFO with %gprel, as the rom might be too far away.\n+\n+   If you need to make a change here, you probably should check\n+   ENCODE_SECTION_INFO to see if it needs a similar change.  */\n \n void\n mips_select_section (decl, reloc)"}, {"sha": "edf6399f3bd4a9ea747b7071fde25b434a038a8b", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f680ab65ba97123da183e205e4f2c5e15c5aa33/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f680ab65ba97123da183e205e4f2c5e15c5aa33/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=5f680ab65ba97123da183e205e4f2c5e15c5aa33", "patch": "@@ -3080,7 +3080,19 @@ typedef struct mips_args {\n    gp addresable section, SYMBOL_REF_FLAG is set prevent gcc from\n    splitting the reference so that gas can generate a gp relative\n    reference.\n- */\n+\n+   When TARGET_EMBEDDED_DATA is set, we assume that all const\n+   variables will be stored in ROM, which is too far from %gp to use\n+   %gprel addressing.  Note that (1) we include \"extern const\"\n+   variables in this, which mips_select_section doesn't, and (2) we\n+   can't always tell if they're really const (they might be const C++\n+   objects with non-const constructors), so we err on the side of\n+   caution and won't use %gprel anyway (otherwise we'd have to defer\n+   this decision to the linker/loader).  The handling of extern consts\n+   is why the DECL_INITIAL macros differ from mips_select_section.\n+\n+   If you are changing this macro, you should look at\n+   mips_select_section and see if it needs a similar change.  */\n \n #define ENCODE_SECTION_INFO(DECL)\t\t\t\t\t\\\n do\t\t\t\t\t\t\t\t\t\\\n@@ -3094,7 +3106,17 @@ do\t\t\t\t\t\t\t\t\t\\\n \t    mips_string_length += TREE_STRING_LENGTH (DECL);\t\t\\\n \t  }\t\t\t\t\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n-    if (TARGET_EMBEDDED_PIC)\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+    if (TARGET_EMBEDDED_DATA\t\t\t\t\t\t\\\n+\t&& (TREE_CODE (DECL) == VAR_DECL\t\t\t\t\\\n+\t    && TREE_READONLY (DECL) && !TREE_SIDE_EFFECTS (DECL))\t\\\n+\t    && (!DECL_INITIAL (DECL)\t\t\t\t\t\\\n+\t\t|| TREE_CONSTANT (DECL_INITIAL (DECL))))\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\tSYMBOL_REF_FLAG (XEXP (DECL_RTL (DECL), 0)) = 0;\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+    else if (TARGET_EMBEDDED_PIC)\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n         if (TREE_CODE (DECL) == VAR_DECL)\t\t\t\t\\\n \t  SYMBOL_REF_FLAG (XEXP (DECL_RTL (DECL), 0)) = 1;\t\t\\"}]}