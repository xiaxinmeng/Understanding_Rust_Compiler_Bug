{"sha": "cd192ccc8ae118f2b9c126de0e1f15eee33a4709", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2QxOTJjY2M4YWUxMThmMmI5YzEyNmRlMGUxZjE1ZWVlMzNhNDcwOQ==", "commit": {"author": {"name": "Mike Stump", "email": "mikestump@comcast.net", "date": "2013-05-23T21:57:39Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2013-05-23T21:57:39Z"}, "message": "c-typeck.c (convert_for_assignment): Handle references to memory spaces better.\n\n\t* c-typeck.c (convert_for_assignment): Handle references to memory\n\tspaces better.\n\nFrom-SVN: r199270", "tree": {"sha": "1d1f57b27da49bc3ef58b0b8a395c9eaa62f039f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d1f57b27da49bc3ef58b0b8a395c9eaa62f039f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd192ccc8ae118f2b9c126de0e1f15eee33a4709", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd192ccc8ae118f2b9c126de0e1f15eee33a4709", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd192ccc8ae118f2b9c126de0e1f15eee33a4709", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd192ccc8ae118f2b9c126de0e1f15eee33a4709/comments", "author": null, "committer": null, "parents": [{"sha": "39bde5eae367fc1e57d277ea4496c485a3b9c09c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39bde5eae367fc1e57d277ea4496c485a3b9c09c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39bde5eae367fc1e57d277ea4496c485a3b9c09c"}], "stats": {"total": 28, "additions": 13, "deletions": 15}, "files": [{"sha": "e0fef1e164fcaec34498f28b25ddc9b39b921fb6", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd192ccc8ae118f2b9c126de0e1f15eee33a4709/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd192ccc8ae118f2b9c126de0e1f15eee33a4709/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=cd192ccc8ae118f2b9c126de0e1f15eee33a4709", "patch": "@@ -1,3 +1,8 @@\n+2013-05-23  Mike Stump  <mikestump@comcast.net>\n+\n+\t* c-typeck.c (convert_for_assignment): Handle references to memory\n+\tspaces better.\n+\n 2013-05-16  Jason Merrill  <jason@redhat.com>\n \n \t* Make-lang.in (cc1$(exeext)): Use link mutex."}, {"sha": "79386da59add45c1186d910b2d19b857e5c98c72", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 8, "deletions": 15, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd192ccc8ae118f2b9c126de0e1f15eee33a4709/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd192ccc8ae118f2b9c126de0e1f15eee33a4709/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=cd192ccc8ae118f2b9c126de0e1f15eee33a4709", "patch": "@@ -5245,11 +5245,9 @@ convert_for_assignment (location_t location, tree type, tree rhs,\n   rhs = require_complete_type (rhs);\n   if (rhs == error_mark_node)\n     return error_mark_node;\n-  /* A type converts to a reference to it.\n-     This code doesn't fully support references, it's just for the\n-     special case of va_start and va_copy.  */\n-  if (codel == REFERENCE_TYPE\n-      && comptypes (TREE_TYPE (type), TREE_TYPE (rhs)) == 1)\n+  /* A non-reference type can convert to a reference.  This handles\n+     va_start, va_copy and possibly port built-ins.  */\n+  if (codel == REFERENCE_TYPE && coder != REFERENCE_TYPE)\n     {\n       if (!lvalue_p (rhs))\n \t{\n@@ -5261,16 +5259,11 @@ convert_for_assignment (location_t location, tree type, tree rhs,\n       rhs = build1 (ADDR_EXPR, build_pointer_type (TREE_TYPE (rhs)), rhs);\n       SET_EXPR_LOCATION (rhs, location);\n \n-      /* We already know that these two types are compatible, but they\n-\t may not be exactly identical.  In fact, `TREE_TYPE (type)' is\n-\t likely to be __builtin_va_list and `TREE_TYPE (rhs)' is\n-\t likely to be va_list, a typedef to __builtin_va_list, which\n-\t is different enough that it will cause problems later.  */\n-      if (TREE_TYPE (TREE_TYPE (rhs)) != TREE_TYPE (type))\n-\t{\n-\t  rhs = build1 (NOP_EXPR, build_pointer_type (TREE_TYPE (type)), rhs);\n-\t  SET_EXPR_LOCATION (rhs, location);\n-\t}\n+      rhs = convert_for_assignment (location, build_pointer_type (TREE_TYPE (type)),\n+\t\t\t\t    rhs, origtype, errtype, null_pointer_constant,\n+\t\t\t\t    fundecl, function, parmnum);\n+      if (rhs == error_mark_node)\n+\treturn error_mark_node;\n \n       rhs = build1 (NOP_EXPR, type, rhs);\n       SET_EXPR_LOCATION (rhs, location);"}]}