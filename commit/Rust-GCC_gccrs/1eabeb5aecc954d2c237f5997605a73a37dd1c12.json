{"sha": "1eabeb5aecc954d2c237f5997605a73a37dd1c12", "node_id": "C_kwDOANBUbNoAKDFlYWJlYjVhZWNjOTU0ZDJjMjM3ZjU5OTc2MDVhNzNhMzdkZDFjMTI", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-08-31T13:08:43Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2023-01-31T13:16:50Z"}, "message": "gccrs: Remove param_use_canonical_types checks ported from c++ front-end\n\nWe are not fully setting TYPE_CANONICAL yet but we don't need to be as\nstrict as the C++ front-end yet. param_use_canonical_types is a command\nline option we are not using either.\n\ngcc/rust/ChangeLog:\n\n\t* backend/rust-tree.cc (comptypes): Remove some C++ specific checks in\n\tRust const folder for now.", "tree": {"sha": "63cd23508fa18d04864103f047e3c9f30ca63b62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63cd23508fa18d04864103f047e3c9f30ca63b62"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1eabeb5aecc954d2c237f5997605a73a37dd1c12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1eabeb5aecc954d2c237f5997605a73a37dd1c12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1eabeb5aecc954d2c237f5997605a73a37dd1c12", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1eabeb5aecc954d2c237f5997605a73a37dd1c12/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ad24d802e593dff058874bd81a2d4d4cfcd1b73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ad24d802e593dff058874bd81a2d4d4cfcd1b73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ad24d802e593dff058874bd81a2d4d4cfcd1b73"}], "stats": {"total": 22, "additions": 1, "deletions": 21}, "files": [{"sha": "d2ddcfd2957c32e84ec57f14dd043ee41bc40fd1", "filename": "gcc/rust/backend/rust-tree.cc", "status": "modified", "additions": 1, "deletions": 21, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eabeb5aecc954d2c237f5997605a73a37dd1c12/gcc%2Frust%2Fbackend%2Frust-tree.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eabeb5aecc954d2c237f5997605a73a37dd1c12/gcc%2Frust%2Fbackend%2Frust-tree.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-tree.cc?ref=1eabeb5aecc954d2c237f5997605a73a37dd1c12", "patch": "@@ -2916,27 +2916,7 @@ comptypes (tree t1, tree t2, int strict)\n \t   perform a deep check. */\n \treturn structural_comptypes (t1, t2, strict);\n \n-      if (flag_checking && param_use_canonical_types)\n-\t{\n-\t  bool result = structural_comptypes (t1, t2, strict);\n-\n-\t  if (result && TYPE_CANONICAL (t1) != TYPE_CANONICAL (t2))\n-\t    /* The two types are structurally equivalent, but their\n-\t       canonical types were different. This is a failure of the\n-\t       canonical type propagation code.*/\n-\t    internal_error (\n-\t      \"canonical types differ for identical types %qT and %qT\", t1, t2);\n-\t  else if (!result && TYPE_CANONICAL (t1) == TYPE_CANONICAL (t2))\n-\t    /* Two types are structurally different, but the canonical\n-\t       types are the same. This means we were over-eager in\n-\t       assigning canonical types. */\n-\t    internal_error (\n-\t      \"same canonical type node for different types %qT and %qT\", t1,\n-\t      t2);\n-\n-\t  return result;\n-\t}\n-      if (!flag_checking && param_use_canonical_types)\n+      if (!flag_checking)\n \treturn TYPE_CANONICAL (t1) == TYPE_CANONICAL (t2);\n       else\n \treturn structural_comptypes (t1, t2, strict);"}]}