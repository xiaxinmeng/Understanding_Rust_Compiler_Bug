{"sha": "54ba93231b4a4d8ca3007949c9d68b6a09440c26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRiYTkzMjMxYjRhNGQ4Y2EzMDA3OTQ5YzlkNjhiNmEwOTQ0MGMyNg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-02-19T05:04:01Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-02-19T05:04:01Z"}, "message": "Don't crash on constant right shift.\n\nFrom-SVN: r170307", "tree": {"sha": "04b255f43117544376b2c612af76c36bcaef99c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04b255f43117544376b2c612af76c36bcaef99c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54ba93231b4a4d8ca3007949c9d68b6a09440c26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54ba93231b4a4d8ca3007949c9d68b6a09440c26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54ba93231b4a4d8ca3007949c9d68b6a09440c26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54ba93231b4a4d8ca3007949c9d68b6a09440c26/comments", "author": null, "committer": null, "parents": [{"sha": "8b0210047962c7342d23a333703203690b76ba3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b0210047962c7342d23a333703203690b76ba3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b0210047962c7342d23a333703203690b76ba3d"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "a073f9dfae9c9d8852e5e6dcf39cda7da57e8e43", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54ba93231b4a4d8ca3007949c9d68b6a09440c26/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54ba93231b4a4d8ca3007949c9d68b6a09440c26/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=54ba93231b4a4d8ca3007949c9d68b6a09440c26", "patch": "@@ -5859,13 +5859,21 @@ Binary_expression::do_get_tree(Translate_context* context)\n   tree eval_saved = NULL_TREE;\n   if (is_shift_op)\n     {\n-      if (!DECL_P(left))\n-\tleft = save_expr(left);\n-      if (!DECL_P(right))\n-\tright = save_expr(right);\n       // Make sure the values are evaluated.\n-      eval_saved = fold_build2_loc(this->location(), COMPOUND_EXPR,\n-\t\t\t\t   void_type_node, left, right);\n+      if (!DECL_P(left) && TREE_SIDE_EFFECTS(left))\n+\t{\n+\t  left = save_expr(left);\n+\t  eval_saved = left;\n+\t}\n+      if (!DECL_P(right) && TREE_SIDE_EFFECTS(right))\n+\t{\n+\t  right = save_expr(right);\n+\t  if (eval_saved == NULL_TREE)\n+\t    eval_saved = right;\n+\t  else\n+\t    eval_saved = fold_build2_loc(this->location(), COMPOUND_EXPR,\n+\t\t\t\t\t void_type_node, eval_saved, right);\n+\t}\n     }\n \n   tree ret = fold_build2_loc(this->location(),\n@@ -5914,8 +5922,9 @@ Binary_expression::do_get_tree(Translate_context* context)\n       ret = fold_build3_loc(this->location(), COND_EXPR, TREE_TYPE(left),\n \t\t\t    compare, ret, overflow_result);\n \n-      ret = fold_build2_loc(this->location(), COMPOUND_EXPR,\n-\t\t\t    TREE_TYPE(ret), eval_saved, ret);\n+      if (eval_saved != NULL_TREE)\n+\tret = fold_build2_loc(this->location(), COMPOUND_EXPR,\n+\t\t\t      TREE_TYPE(ret), eval_saved, ret);\n     }\n \n   return ret;"}]}