{"sha": "e6a1e5fe7346458208ede97741382061a6191024", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTZhMWU1ZmU3MzQ2NDU4MjA4ZWRlOTc3NDEzODIwNjFhNjE5MTAyNA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2018-08-13T15:46:42Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2018-08-13T15:46:42Z"}, "message": "P0806R2 - Deprecate implicit capture of this via [=]\n\n\tP0806R2 - Deprecate implicit capture of this via [=]\n\t* lambda.c (add_default_capture): Formatting fixes.  Warn about\n\tdeprecated implicit capture of this via [=].\n\n\t* g++.dg/cpp2a/lambda-this1.C: New test.\n\t* g++.dg/cpp2a/lambda-this2.C: New test.\n\t* g++.dg/cpp2a/lambda-this3.C: New test.\n\nFrom-SVN: r263508", "tree": {"sha": "d5b2c43f0745495e0a950a70183cf0936c71db04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5b2c43f0745495e0a950a70183cf0936c71db04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6a1e5fe7346458208ede97741382061a6191024", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6a1e5fe7346458208ede97741382061a6191024", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6a1e5fe7346458208ede97741382061a6191024", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6a1e5fe7346458208ede97741382061a6191024/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "27a98312c54b6c00a4e7deb1bf663547cd4f2dcc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27a98312c54b6c00a4e7deb1bf663547cd4f2dcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27a98312c54b6c00a4e7deb1bf663547cd4f2dcc"}], "stats": {"total": 187, "additions": 182, "deletions": 5}, "files": [{"sha": "da6703b304c16e2827db5e5911a7fbff85b1d3a4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6a1e5fe7346458208ede97741382061a6191024/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6a1e5fe7346458208ede97741382061a6191024/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e6a1e5fe7346458208ede97741382061a6191024", "patch": "@@ -1,5 +1,9 @@\n 2018-08-13  Marek Polacek  <polacek@redhat.com>\n \n+\tP0806R2 - Deprecate implicit capture of this via [=]\n+\t* lambda.c (add_default_capture): Formatting fixes.  Warn about\n+\tdeprecated implicit capture of this via [=].\n+\n \tPR c++/86915\n \t* decl.c (create_array_type_for_decl): Handle null name.\n "}, {"sha": "25a4d6f7eef4c5bbd727e7b2ef86b8a1e038b185", "filename": "gcc/cp/lambda.c", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6a1e5fe7346458208ede97741382061a6191024/gcc%2Fcp%2Flambda.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6a1e5fe7346458208ede97741382061a6191024/gcc%2Fcp%2Flambda.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flambda.c?ref=e6a1e5fe7346458208ede97741382061a6191024", "patch": "@@ -695,14 +695,10 @@ tree\n add_default_capture (tree lambda_stack, tree id, tree initializer)\n {\n   bool this_capture_p = (id == this_identifier);\n-\n   tree var = NULL_TREE;\n-\n   tree saved_class_type = current_class_type;\n \n-  tree node;\n-\n-  for (node = lambda_stack;\n+  for (tree node = lambda_stack;\n        node;\n        node = TREE_CHAIN (node))\n     {\n@@ -720,6 +716,19 @@ add_default_capture (tree lambda_stack, tree id, tree initializer)\n \t\t\t\t == CPLD_REFERENCE)),\n \t\t\t    /*explicit_init_p=*/false);\n       initializer = convert_from_reference (var);\n+\n+      /* Warn about deprecated implicit capture of this via [=].  */\n+      if (cxx_dialect >= cxx2a\n+\t  && this_capture_p\n+\t  && LAMBDA_EXPR_DEFAULT_CAPTURE_MODE (lambda) == CPLD_COPY\n+\t  && !in_system_header_at (LAMBDA_EXPR_LOCATION (lambda)))\n+\t{\n+\t  if (warning_at (LAMBDA_EXPR_LOCATION (lambda), OPT_Wdeprecated,\n+\t\t\t  \"implicit capture of %qE via %<[=]%> is deprecated \"\n+\t\t\t  \"in C++20\", this_identifier))\n+\t    inform (LAMBDA_EXPR_LOCATION (lambda), \"add explicit %<this%> or \"\n+\t\t    \"%<*this%> capture\");\n+\t}\n     }\n \n   current_class_type = saved_class_type;"}, {"sha": "d7ed84edacfcc72b989195e60ccbdc4410ec7968", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6a1e5fe7346458208ede97741382061a6191024/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6a1e5fe7346458208ede97741382061a6191024/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e6a1e5fe7346458208ede97741382061a6191024", "patch": "@@ -1,3 +1,10 @@\n+2018-08-13  Marek Polacek  <polacek@redhat.com>\n+\n+\tP0806R2 - Deprecate implicit capture of this via [=]\n+\t* g++.dg/cpp2a/lambda-this1.C: New test.\n+\t* g++.dg/cpp2a/lambda-this2.C: New test.\n+\t* g++.dg/cpp2a/lambda-this3.C: New test.\n+\n 2018-08-13  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/86915"}, {"sha": "a31b968800d617dced5e40095d7672be267a38c5", "filename": "gcc/testsuite/g++.dg/cpp2a/lambda-this1.C", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6a1e5fe7346458208ede97741382061a6191024/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-this1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6a1e5fe7346458208ede97741382061a6191024/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-this1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-this1.C?ref=e6a1e5fe7346458208ede97741382061a6191024", "patch": "@@ -0,0 +1,51 @@\n+// P0806R2\n+// { dg-do compile }\n+// { dg-options \"-std=c++2a\" }\n+\n+struct X {\n+  int x;\n+  void foo (int n) {\n+    auto a1 = [=] { x = n; }; // { dg-warning \"implicit capture\" }\n+    auto a2 = [=, this] { x = n; };\n+    auto a3 = [=, *this]() mutable { x = n; };\n+    auto a4 = [&] { x = n; };\n+    auto a5 = [&, this] { x = n; };\n+    auto a6 = [&, *this]() mutable { x = n; };\n+\n+    auto a7 = [=] { // { dg-warning \"implicit capture\" }\n+      auto a = [=] { // { dg-warning \"implicit capture\" }\n+\t auto a2 = [=] { x = n; }; // { dg-warning \"implicit capture\" }\n+      };\n+    };\n+\n+    auto a8 = [=, this] {\n+      auto a = [=, this] {\n+\t auto a2 = [=, this] { x = n; };\n+      };\n+    };\n+\n+    auto a9 = [=, *this]() mutable {\n+      auto a = [=, *this]() mutable {\n+\t auto a2 = [=, *this]() mutable { x = n; };\n+      };\n+    };\n+\n+    auto a10 = [&] {\n+      auto a = [&] {\n+\t auto a2 = [&] { x = n; };\n+      };\n+    };\n+\n+    auto a11 = [&, this] {\n+      auto a = [&, this] {\n+\t auto a2 = [&, this] { x = n; };\n+      };\n+    };\n+\n+    auto a12 = [&, *this]() mutable {\n+      auto a = [&, *this]() mutable {\n+\t auto a2 = [&, *this]() mutable { x = n; };\n+      };\n+    };\n+  }\n+};"}, {"sha": "307fb4c31dbaed5d3f5e2a4ca70b14db0f56aab7", "filename": "gcc/testsuite/g++.dg/cpp2a/lambda-this2.C", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6a1e5fe7346458208ede97741382061a6191024/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-this2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6a1e5fe7346458208ede97741382061a6191024/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-this2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-this2.C?ref=e6a1e5fe7346458208ede97741382061a6191024", "patch": "@@ -0,0 +1,51 @@\n+// P0806R2\n+// { dg-do compile }\n+// { dg-options \"-std=c++2a -Wno-deprecated\" }\n+\n+struct X {\n+  int x;\n+  void foo (int n) {\n+    auto a1 = [=] { x = n; }; // { dg-bogus \"implicit capture\" }\n+    auto a2 = [=, this] { x = n; };\n+    auto a3 = [=, *this]() mutable { x = n; };\n+    auto a4 = [&] { x = n; };\n+    auto a5 = [&, this] { x = n; };\n+    auto a6 = [&, *this]() mutable { x = n; };\n+\n+    auto a7 = [=] { // { dg-bogus \"implicit capture\" }\n+      auto a = [=] { // { dg-bogus \"implicit capture\" }\n+\t auto a2 = [=] { x = n; }; // { dg-bogus \"implicit capture\" }\n+      };\n+    };\n+\n+    auto a8 = [=, this] {\n+      auto a = [=, this] {\n+\t auto a2 = [=, this] { x = n; };\n+      };\n+    };\n+\n+    auto a9 = [=, *this]() mutable {\n+      auto a = [=, *this]() mutable {\n+\t auto a2 = [=, *this]() mutable { x = n; };\n+      };\n+    };\n+\n+    auto a10 = [&] {\n+      auto a = [&] {\n+\t auto a2 = [&] { x = n; };\n+      };\n+    };\n+\n+    auto a11 = [&, this] {\n+      auto a = [&, this] {\n+\t auto a2 = [&, this] { x = n; };\n+      };\n+    };\n+\n+    auto a12 = [&, *this]() mutable {\n+      auto a = [&, *this]() mutable {\n+\t auto a2 = [&, *this]() mutable { x = n; };\n+      };\n+    };\n+  }\n+};"}, {"sha": "5e5c8b3d50fc824cba446080ceca1197489fb958", "filename": "gcc/testsuite/g++.dg/cpp2a/lambda-this3.C", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6a1e5fe7346458208ede97741382061a6191024/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-this3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6a1e5fe7346458208ede97741382061a6191024/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-this3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-this3.C?ref=e6a1e5fe7346458208ede97741382061a6191024", "patch": "@@ -0,0 +1,55 @@\n+// P0806R2\n+// { dg-do compile }\n+// { dg-options \"-std=c++17\" }\n+\n+struct X {\n+  int x;\n+  void foo (int n) {\n+    auto a1 = [=] { x = n; }; // { dg-bogus \"implicit capture\" }\n+    auto a2 = [=, this] { x = n; };\n+    // { dg-warning \"explicit by-copy capture\" \"\" { target c++17_down } .-1 }\n+    auto a3 = [=, *this]() mutable { x = n; };\n+    auto a4 = [&] { x = n; };\n+    auto a5 = [&, this] { x = n; };\n+    auto a6 = [&, *this]() mutable { x = n; };\n+\n+    auto a7 = [=] { // { dg-bogus \"implicit capture\" }\n+      auto a = [=] { // { dg-bogus \"implicit capture\" }\n+\t auto a2 = [=] { x = n; }; // { dg-bogus \"implicit capture\" }\n+      };\n+    };\n+\n+    auto a8 = [=, this] {\n+    // { dg-warning \"explicit by-copy capture\" \"\" { target c++17_down } .-1 }\n+      auto a = [=, this] {\n+    // { dg-warning \"explicit by-copy capture\" \"\" { target c++17_down } .-1 }\n+\t auto a2 = [=, this] { x = n; };\n+    // { dg-warning \"explicit by-copy capture\" \"\" { target c++17_down } .-1 }\n+      };\n+    };\n+\n+    auto a9 = [=, *this]() mutable {\n+      auto a = [=, *this]() mutable {\n+\t auto a2 = [=, *this]() mutable { x = n; };\n+      };\n+    };\n+\n+    auto a10 = [&] {\n+      auto a = [&] {\n+\t auto a2 = [&] { x = n; };\n+      };\n+    };\n+\n+    auto a11 = [&, this] {\n+      auto a = [&, this] {\n+\t auto a2 = [&, this] { x = n; };\n+      };\n+    };\n+\n+    auto a12 = [&, *this]() mutable {\n+      auto a = [&, *this]() mutable {\n+\t auto a2 = [&, *this]() mutable { x = n; };\n+      };\n+    };\n+  }\n+};"}]}