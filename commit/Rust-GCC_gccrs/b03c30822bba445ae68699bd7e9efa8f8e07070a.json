{"sha": "b03c30822bba445ae68699bd7e9efa8f8e07070a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjAzYzMwODIyYmJhNDQ1YWU2ODY5OWJkN2U5ZWZhOGY4ZTA3MDcwYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-05-11T12:53:43Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-05-11T12:53:43Z"}, "message": "re PR debug/48159 (ICE: SIGSEGV in build2_stat (tree.c:3802) with -ftree-loop-distribution -g)\n\n\tPR debug/48159\n\t* tree-ssa.c (reset_debug_uses): New function.\n\t* tree-flow.h (reset_debug_uses): New prototype.\n\t* tree-data-ref.c (stmts_from_loop): Ignore debug stmts.\n\t* tree-loop-distribution.c (generate_loops_for_partition): Call\n\treset_debug_uses on the stmts that will be removed.  Keep around\n\tall debug stmts, don't count them as bits in partition bitmap.\n\t(generate_builtin): Don't count debug stmts or labels as bits in\n\tpartition bitmap.\n\n\t* gcc.dg/pr48159-1.c: New test.\n\t* gcc.dg/pr48159-2.c: New test.\n\nFrom-SVN: r173656", "tree": {"sha": "e56042c0e2d22f04c029f1f376845c9c63d30b83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e56042c0e2d22f04c029f1f376845c9c63d30b83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b03c30822bba445ae68699bd7e9efa8f8e07070a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b03c30822bba445ae68699bd7e9efa8f8e07070a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b03c30822bba445ae68699bd7e9efa8f8e07070a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b03c30822bba445ae68699bd7e9efa8f8e07070a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b5e04de5e321eef54e6d85d155981fdbbdd09428", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5e04de5e321eef54e6d85d155981fdbbdd09428", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5e04de5e321eef54e6d85d155981fdbbdd09428"}], "stats": {"total": 114, "additions": 109, "deletions": 5}, "files": [{"sha": "1c6083581a17704098176d7b488bc1b8c6092952", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03c30822bba445ae68699bd7e9efa8f8e07070a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03c30822bba445ae68699bd7e9efa8f8e07070a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b03c30822bba445ae68699bd7e9efa8f8e07070a", "patch": "@@ -1,3 +1,15 @@\n+2011-05-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/48159\n+\t* tree-ssa.c (reset_debug_uses): New function.\n+\t* tree-flow.h (reset_debug_uses): New prototype.\n+\t* tree-data-ref.c (stmts_from_loop): Ignore debug stmts.\n+\t* tree-loop-distribution.c (generate_loops_for_partition): Call\n+\treset_debug_uses on the stmts that will be removed.  Keep around\n+\tall debug stmts, don't count them as bits in partition bitmap.\n+\t(generate_builtin): Don't count debug stmts or labels as bits in\n+\tpartition bitmap.\n+\n 2011-05-11  Richard Guenther  <rguenther@suse.de>\n \n \t* gimple.c (gimple_type_hash_1): Merge with ..."}, {"sha": "5fde36e00a3bc685d799c311adc9fa2b92c128b9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03c30822bba445ae68699bd7e9efa8f8e07070a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03c30822bba445ae68699bd7e9efa8f8e07070a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b03c30822bba445ae68699bd7e9efa8f8e07070a", "patch": "@@ -1,3 +1,9 @@\n+2011-05-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/48159\n+\t* gcc.dg/pr48159-1.c: New test.\n+\t* gcc.dg/pr48159-2.c: New test.\n+\n 2011-05-11  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/48953"}, {"sha": "cd67e63852f3283d04b653dcc2e0f44f84d31101", "filename": "gcc/testsuite/gcc.dg/pr48159-1.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03c30822bba445ae68699bd7e9efa8f8e07070a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48159-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03c30822bba445ae68699bd7e9efa8f8e07070a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48159-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48159-1.c?ref=b03c30822bba445ae68699bd7e9efa8f8e07070a", "patch": "@@ -0,0 +1,10 @@\n+/* PR debug/48159 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -fcompare-debug\" } */\n+\n+void\n+foo (double x, int y, double *__restrict z, double *__restrict w)\n+{\n+  while (y--)\n+    *z++ = (*w++ = 0) * x;\n+}"}, {"sha": "25596bf6b3923f9ff194a05e5826cd403ba8b79d", "filename": "gcc/testsuite/gcc.dg/pr48159-2.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03c30822bba445ae68699bd7e9efa8f8e07070a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48159-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03c30822bba445ae68699bd7e9efa8f8e07070a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48159-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48159-2.c?ref=b03c30822bba445ae68699bd7e9efa8f8e07070a", "patch": "@@ -0,0 +1,22 @@\n+/* PR debug/48159 */\n+/* { dg-do compile } */ \n+/* { dg-options \"-O2 -ftree-loop-distribution -fcompare-debug\" } */\n+\n+int foo (int * __restrict__ ia, int * __restrict__ ib,\n+\t int * __restrict__ oxa, int * __restrict__ oxb)\n+{\n+  int i;\n+  int oya[52], oyb[52];\n+  for (i = 0; i < 52; i++)\n+    {\n+      int w1 = ia[i];\n+      int w2 = oxa[i];\n+      int w3 = ib[i];\n+      int w4 = oxb[i];\n+      int w5 = w1 + w2 + 5;\n+      oya[i] = (w1 * w2) >> 10;\n+      int w6 = w3 + w4 + 6;\n+      oyb[i] = (w3 * w4) >> 10;\n+    }\n+  return oya[22] + oyb[21];\n+}"}, {"sha": "7b28b8d99143b7815fb875198ee61f952bb70d80", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03c30822bba445ae68699bd7e9efa8f8e07070a/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03c30822bba445ae68699bd7e9efa8f8e07070a/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=b03c30822bba445ae68699bd7e9efa8f8e07070a", "patch": "@@ -1,5 +1,5 @@\n /* Data references and dependences detectors.\n-   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n    Contributed by Sebastian Pop <pop@cri.ensmp.fr>\n \n@@ -5017,7 +5017,7 @@ stmts_from_loop (struct loop *loop, VEC (gimple, heap) **stmts)\n       for (bsi = gsi_start_bb (bb); !gsi_end_p (bsi); gsi_next (&bsi))\n \t{\n \t  stmt = gsi_stmt (bsi);\n-\t  if (gimple_code (stmt) != GIMPLE_LABEL)\n+\t  if (gimple_code (stmt) != GIMPLE_LABEL && !is_gimple_debug (stmt))\n \t    VEC_safe_push (gimple, heap, *stmts, stmt);\n \t}\n     }"}, {"sha": "ab5c80cdde0afa83671c56d4f3bd374b5f41933b", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03c30822bba445ae68699bd7e9efa8f8e07070a/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03c30822bba445ae68699bd7e9efa8f8e07070a/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=b03c30822bba445ae68699bd7e9efa8f8e07070a", "patch": "@@ -554,6 +554,7 @@ extern void walk_use_def_chains (tree, walk_use_def_chains_fn, void *, bool);\n \n void insert_debug_temps_for_defs (gimple_stmt_iterator *);\n void insert_debug_temp_for_var_def (gimple_stmt_iterator *, tree);\n+void reset_debug_uses (gimple);\n void release_defs_bitset (bitmap toremove);\n \n /* In tree-into-ssa.c  */"}, {"sha": "1d6944eef9632cb3511d2608b11b316dcda24489", "filename": "gcc/tree-loop-distribution.c", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03c30822bba445ae68699bd7e9efa8f8e07070a/gcc%2Ftree-loop-distribution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03c30822bba445ae68699bd7e9efa8f8e07070a/gcc%2Ftree-loop-distribution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-loop-distribution.c?ref=b03c30822bba445ae68699bd7e9efa8f8e07070a", "patch": "@@ -1,5 +1,5 @@\n /* Loop distribution.\n-   Copyright (C) 2006, 2007, 2008, 2009, 2010\n+   Copyright (C) 2006, 2007, 2008, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n    Contributed by Georges-Andre Silber <Georges-Andre.Silber@ensmp.fr>\n    and Sebastian Pop <sebastian.pop@amd.com>.\n@@ -181,6 +181,25 @@ generate_loops_for_partition (struct loop *loop, bitmap partition, bool copy_p)\n      stmts_from_loop.  */\n   bbs = get_loop_body_in_dom_order (loop);\n \n+  if (MAY_HAVE_DEBUG_STMTS)\n+    for (x = 0, i = 0; i < loop->num_nodes; i++)\n+      {\n+\tbasic_block bb = bbs[i];\n+\n+\tfor (bsi = gsi_start_phis (bb); !gsi_end_p (bsi); gsi_next (&bsi))\n+\t  if (!bitmap_bit_p (partition, x++))\n+\t    reset_debug_uses (gsi_stmt (bsi));\n+\n+\tfor (bsi = gsi_start_bb (bb); !gsi_end_p (bsi); gsi_next (&bsi))\n+\t  {\n+\t    gimple stmt = gsi_stmt (bsi);\n+\t    if (gimple_code (stmt) != GIMPLE_LABEL\n+\t\t&& !is_gimple_debug (stmt)\n+\t\t&& !bitmap_bit_p (partition, x++))\n+\t      reset_debug_uses (stmt);\n+\t  }\n+      }\n+\n   for (x = 0, i = 0; i < loop->num_nodes; i++)\n     {\n       basic_block bb = bbs[i];\n@@ -199,7 +218,8 @@ generate_loops_for_partition (struct loop *loop, bitmap partition, bool copy_p)\n       for (bsi = gsi_start_bb (bb); !gsi_end_p (bsi);)\n \t{\n \t  gimple stmt = gsi_stmt (bsi);\n-\t  if (gimple_code (gsi_stmt (bsi)) != GIMPLE_LABEL\n+\t  if (gimple_code (stmt) != GIMPLE_LABEL\n+\t      && !is_gimple_debug (stmt)\n \t      && !bitmap_bit_p (partition, x++))\n \t    {\n \t      unlink_stmt_vdef (stmt);\n@@ -312,7 +332,9 @@ generate_builtin (struct loop *loop, bitmap partition, bool copy_p)\n \t{\n \t  gimple stmt = gsi_stmt (bsi);\n \n-\t  if (bitmap_bit_p (partition, x++)\n+\t  if (gimple_code (stmt) != GIMPLE_LABEL\n+\t      && !is_gimple_debug (stmt)\n+\t      && bitmap_bit_p (partition, x++)\n \t      && is_gimple_assign (stmt)\n \t      && !is_gimple_reg (gimple_assign_lhs (stmt)))\n \t    {"}, {"sha": "f596fcd870ca8f13feb031131133c26d9d5b2480", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03c30822bba445ae68699bd7e9efa8f8e07070a/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03c30822bba445ae68699bd7e9efa8f8e07070a/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=b03c30822bba445ae68699bd7e9efa8f8e07070a", "patch": "@@ -507,6 +507,37 @@ insert_debug_temps_for_defs (gimple_stmt_iterator *gsi)\n     }\n }\n \n+/* Reset all debug stmts that use SSA_NAME(s) defined in STMT.  */\n+\n+void\n+reset_debug_uses (gimple stmt)\n+{\n+  ssa_op_iter op_iter;\n+  def_operand_p def_p;\n+  imm_use_iterator imm_iter;\n+  gimple use_stmt;\n+\n+  if (!MAY_HAVE_DEBUG_STMTS)\n+    return;\n+\n+  FOR_EACH_PHI_OR_STMT_DEF (def_p, stmt, op_iter, SSA_OP_DEF)\n+    {\n+      tree var = DEF_FROM_PTR (def_p);\n+\n+      if (TREE_CODE (var) != SSA_NAME)\n+\tcontinue;\n+\n+      FOR_EACH_IMM_USE_STMT (use_stmt, imm_iter, var)\n+\t{\n+\t  if (!gimple_debug_bind_p (use_stmt))\n+\t    continue;\n+\n+\t  gimple_debug_bind_reset_value (use_stmt);\n+\t  update_stmt (use_stmt);\n+\t}\n+    }\n+}\n+\n /* Delete SSA DEFs for SSA versions in the TOREMOVE bitmap, removing\n    dominated stmts before their dominators, so that release_ssa_defs\n    stands a chance of propagating DEFs into debug bind stmts.  */"}]}