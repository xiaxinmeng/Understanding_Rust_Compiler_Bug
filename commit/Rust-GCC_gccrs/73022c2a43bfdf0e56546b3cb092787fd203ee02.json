{"sha": "73022c2a43bfdf0e56546b3cb092787fd203ee02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzMwMjJjMmE0M2JmZGYwZTU2NTQ2YjNjYjA5Mjc4N2ZkMjAzZWUwMg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-09-01T22:24:27Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-09-01T22:24:27Z"}, "message": "Update TREE_NO_WARNING docs.\n\nFrom-SVN: r86937", "tree": {"sha": "5bbcdc790172e94d1b90fa30dfae609919a77534", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bbcdc790172e94d1b90fa30dfae609919a77534"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73022c2a43bfdf0e56546b3cb092787fd203ee02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73022c2a43bfdf0e56546b3cb092787fd203ee02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73022c2a43bfdf0e56546b3cb092787fd203ee02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73022c2a43bfdf0e56546b3cb092787fd203ee02/comments", "author": null, "committer": null, "parents": [{"sha": "8bfd0a46ea397185b00fe00bb40ae03c18838398", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bfd0a46ea397185b00fe00bb40ae03c18838398", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bfd0a46ea397185b00fe00bb40ae03c18838398"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "9c0fc85f50f5b1f3ae708da04d6a4beb78c13470", "filename": "gcc/tree.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73022c2a43bfdf0e56546b3cb092787fd203ee02/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73022c2a43bfdf0e56546b3cb092787fd203ee02/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=73022c2a43bfdf0e56546b3cb092787fd203ee02", "patch": "@@ -331,7 +331,7 @@ struct tree_common GTY(())\n    nowarning_flag:\n \n        TREE_NO_WARNING in\n-           ... any expr node\n+           ... any expr or decl node\n */\n \n /* Define accessors for the fields that all tree nodes have\n@@ -751,7 +751,10 @@ extern void tree_operand_check_failed (int, enum tree_code,\n #define CLEANUP_EH_ONLY(NODE) ((NODE)->common.static_flag)\n \n /* In an expr node (usually a conversion) this means the node was made\n-   implicitly and should not lead to any sort of warning.  */\n+   implicitly and should not lead to any sort of warning.  In a decl node,\n+   warnings concerning the decl should be suppressed.  This is used at\n+   least for used-before-set warnings, and it set after one warning is\n+   emitted.  */\n #define TREE_NO_WARNING(NODE) ((NODE)->common.nowarning_flag)\n \n /* In an INTEGER_CST, REAL_CST, COMPLEX_CST, or VECTOR_CST this means"}]}