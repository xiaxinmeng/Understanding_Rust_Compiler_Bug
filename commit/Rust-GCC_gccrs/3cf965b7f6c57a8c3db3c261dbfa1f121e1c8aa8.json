{"sha": "3cf965b7f6c57a8c3db3c261dbfa1f121e1c8aa8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2NmOTY1YjdmNmM1N2E4YzNkYjNjMjYxZGJmYTFmMTIxZTFjOGFhOA==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@cygnus.co.uk", "date": "1999-10-01T10:26:46Z"}, "committer": {"name": "Bernd Schmidt", "email": "crux@gcc.gnu.org", "date": "1999-10-01T10:26:46Z"}, "message": "Delete !REGISTER_CONSTRAINTS code\n\nFrom-SVN: r29754", "tree": {"sha": "326614f584ff7e40c1ed6ac16773d74a326c0217", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/326614f584ff7e40c1ed6ac16773d74a326c0217"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3cf965b7f6c57a8c3db3c261dbfa1f121e1c8aa8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cf965b7f6c57a8c3db3c261dbfa1f121e1c8aa8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cf965b7f6c57a8c3db3c261dbfa1f121e1c8aa8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cf965b7f6c57a8c3db3c261dbfa1f121e1c8aa8/comments", "author": null, "committer": null, "parents": [{"sha": "19af645506250e3ba54b35491e70f67485904168", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19af645506250e3ba54b35491e70f67485904168", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19af645506250e3ba54b35491e70f67485904168"}], "stats": {"total": 28, "additions": 1, "deletions": 27}, "files": [{"sha": "9a285d736b8178e13d2a12de8b08e5a56429d963", "filename": "gcc/ChangeLog", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cf965b7f6c57a8c3db3c261dbfa1f121e1c8aa8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cf965b7f6c57a8c3db3c261dbfa1f121e1c8aa8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3cf965b7f6c57a8c3db3c261dbfa1f121e1c8aa8", "patch": "@@ -1,5 +1,6 @@\n Fri Oct  1 10:56:06 1999  Bernd Schmidt  <bernds@cygnus.co.uk>\n \n+\t* md.texi (No Constraints): Delete section.\n \t* Makefile.in (genattrtab.o): Don't depend on \"insn-config.h\".\n \t* final.c (final_scan_insn): We always have register constraints.\n \t* genattrtab.c: Don't include \"insn-config.h\"."}, {"sha": "bb7aeac1fc238de3b2247ba5715880ab925b6143", "filename": "gcc/md.texi", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cf965b7f6c57a8c3db3c261dbfa1f121e1c8aa8/gcc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cf965b7f6c57a8c3db3c261dbfa1f121e1c8aa8/gcc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmd.texi?ref=3cf965b7f6c57a8c3db3c261dbfa1f121e1c8aa8", "patch": "@@ -667,7 +667,6 @@ have.  Constraints can also require two operands to match.\n * Class Preferences::   Constraints guide which hard register to put things in.\n * Modifiers::           More precise control over effects of constraints.\n * Machine Constraints:: Existing constraints for some particular machines.\n-* No Constraints::      Describing a clean machine without constraints.\n @end menu\n @end ifset\n \n@@ -1659,32 +1658,6 @@ Even register\n @end table\n @end table\n \n-@ifset INTERNALS\n-@node No Constraints\n-@subsection Not Using Constraints\n-@cindex no constraints\n-@cindex not using constraints\n-\n-Some machines are so clean that operand constraints are not required.  For\n-example, on the Vax, an operand valid in one context is valid in any other\n-context.  On such a machine, every operand constraint would be @samp{g},\n-excepting only operands of ``load address'' instructions which are\n-written as if they referred to a memory location's contents but actual\n-refer to its address.  They would have constraint @samp{p}.\n-\n-@cindex empty constraints\n-For such machines, instead of writing @samp{g} and @samp{p} for all\n-the constraints, you can choose to write a description with empty constraints.\n-Then you write @samp{\"\"} for the constraint in every @code{match_operand}.\n-Address operands are identified by writing an @code{address} expression\n-around the @code{match_operand}, not by their constraints.\n-\n-When the machine description has just empty constraints, certain parts\n-of compilation are skipped, making the compiler faster.  However,\n-few machines actually do not need constraints; all machine descriptions\n-now in existence use constraints.\n-@end ifset\n-\n @ifset INTERNALS\n @node Standard Names\n @section Standard Pattern Names For Generation"}]}