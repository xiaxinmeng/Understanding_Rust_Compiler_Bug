{"sha": "d2c60b5c23f4dbcb358b55aa52c2f96cd9eea90f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDJjNjBiNWMyM2Y0ZGJjYjM1OGI1NWFhNTJjMmY5NmNkOWVlYTkwZg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-02-03T00:41:41Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-02-03T00:41:41Z"}, "message": "Declare error handling functions and typedef for user specified error handler function.\n\nDeclare error handling functions and typedef for user specified error\nhandler function.  Define error codes used by the runtime library.\n\nFrom-SVN: r13590", "tree": {"sha": "df6dff46b7f6451117bd23d9e09a548d741bd8d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df6dff46b7f6451117bd23d9e09a548d741bd8d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2c60b5c23f4dbcb358b55aa52c2f96cd9eea90f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2c60b5c23f4dbcb358b55aa52c2f96cd9eea90f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2c60b5c23f4dbcb358b55aa52c2f96cd9eea90f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2c60b5c23f4dbcb358b55aa52c2f96cd9eea90f/comments", "author": null, "committer": null, "parents": [{"sha": "7e46250027e3654b430af0db8ffc0f6c822a2c7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e46250027e3654b430af0db8ffc0f6c822a2c7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e46250027e3654b430af0db8ffc0f6c822a2c7f"}], "stats": {"total": 54, "additions": 53, "deletions": 1}, "files": [{"sha": "5962f027d534f483de14266d42eacb8a8bf6b4d9", "filename": "gcc/objc/objc-api.h", "status": "modified", "additions": 53, "deletions": 1, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2c60b5c23f4dbcb358b55aa52c2f96cd9eea90f/gcc%2Fobjc%2Fobjc-api.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2c60b5c23f4dbcb358b55aa52c2f96cd9eea90f/gcc%2Fobjc%2Fobjc-api.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-api.h?ref=d2c60b5c23f4dbcb358b55aa52c2f96cd9eea90f", "patch": "@@ -1,5 +1,5 @@\n /* GNU Objective-C Runtime API.\n-   Copyright (C) 1993, 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1995, 1996, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -31,6 +31,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"objc/hash.h\"\n #include \"objc/thr.h\"\n #include <stdio.h>\n+#include <stdarg.h>\n \n /* For functions which return Method_t */\n #define METHOD_NULL\t(Method_t)0\n@@ -74,6 +75,57 @@ struct objc_method_description\n #define _C_STRUCT_E '}'\n \n \n+/*\n+** Error handling\n+**\n+** Call objc_error() or objc_verror() to record an error; this error\n+** routine will generally exit the program but not necessarily if the\n+** user has installed his own error handler.\n+**\n+** Call objc_set_error_handler to assign your own function for\n+** handling errors.  The function should return YES if it is ok\n+** to continue execution, or return NO or just abort if the\n+** program should be stopped.  The default error handler is just to\n+** print a message on stderr.\n+**\n+** The error handler function should be of type objc_error_handler\n+** The first parameter is an object instance of relevance.\n+** The second parameter is an error code.\n+** The third parameter is a format string in the printf style.\n+** The fourth parameter is a variable list of arguments.\n+*/\n+extern void objc_error(id object, int code, const char* fmt, ...);\n+extern void objc_verror(id object, int code, const char* fmt, va_list ap);\n+typedef BOOL (*objc_error_handler)(id, int code, const char *fmt, va_list ap);\n+objc_error_handler objc_set_error_handler(objc_error_handler func);\n+\n+/*\n+** Error codes\n+** These are used by the runtime library, and your\n+** error handling may use them to determine if the error is\n+** hard or soft thus whether execution can continue or abort.\n+*/\n+#define OBJC_ERR_UNKNOWN 0             /* Generic error */\n+\n+#define OBJC_ERR_OBJC_VERSION 1        /* Incorrect runtime version */\n+#define OBJC_ERR_GCC_VERSION 2         /* Incorrect compiler version */\n+#define OBJC_ERR_MODULE_SIZE 3         /* Bad module size */\n+#define OBJC_ERR_PROTOCOL_VERSION 4    /* Incorrect protocol version */\n+\n+#define OBJC_ERR_MEMORY 10             /* Out of memory */\n+\n+#define OBJC_ERR_RECURSE_ROOT 20       /* Attempt to archive the root\n+\t\t\t\t\t  object more than once. */\n+#define OBJC_ERR_BAD_DATA 21           /* Didn't read expected data */\n+#define OBJC_ERR_BAD_KEY 22            /* Bad key for object */\n+#define OBJC_ERR_BAD_CLASS 23          /* Unknown class */\n+#define OBJC_ERR_BAD_TYPE 24           /* Bad type specification */\n+#define OBJC_ERR_NO_READ 25            /* Cannot read stream */\n+#define OBJC_ERR_NO_WRITE 26           /* Cannot write stream */\n+#define OBJC_ERR_STREAM_VERSION 27     /* Incorrect stream version */\n+#define OBJC_ERR_BAD_OPCODE 28         /* Bad opcode */\n+\n+#define OBJC_ERR_UNIMPLEMENTED 30      /* Method is not implemented */\n \n /*\n ** Set this variable nonzero to print a line describing each"}]}