{"sha": "675f0e7cb2931a7f0d08f422b1a6564fb3b28b6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njc1ZjBlN2NiMjkzMWE3ZjBkMDhmNDIyYjFhNjU2NGZiM2IyOGI2Yg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-10-03T22:31:18Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-10-03T22:31:18Z"}, "message": "Fix comments and formatting related to RETURN_ADDR_RTX.\n\nFrom-SVN: r10429", "tree": {"sha": "3740ce122c0b6649036809b5b8ee840eb830f210", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3740ce122c0b6649036809b5b8ee840eb830f210"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/675f0e7cb2931a7f0d08f422b1a6564fb3b28b6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/675f0e7cb2931a7f0d08f422b1a6564fb3b28b6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/675f0e7cb2931a7f0d08f422b1a6564fb3b28b6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/675f0e7cb2931a7f0d08f422b1a6564fb3b28b6b/comments", "author": null, "committer": null, "parents": [{"sha": "15448afcc8d3fb975a4f1b2dec1e2a5f00279ab1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15448afcc8d3fb975a4f1b2dec1e2a5f00279ab1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15448afcc8d3fb975a4f1b2dec1e2a5f00279ab1"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "e324e9b93a0557810ba2ef12b8500581039a5e04", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/675f0e7cb2931a7f0d08f422b1a6564fb3b28b6b/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/675f0e7cb2931a7f0d08f422b1a6564fb3b28b6b/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=675f0e7cb2931a7f0d08f422b1a6564fb3b28b6b", "patch": "@@ -1088,13 +1088,21 @@ __enable_execute_stack (addr)\t\t\t\t\t\t\\\n   if (mprotect (page, end - page, 7) < 0)\t\t\t\t\\\n     perror (\"mprotect of trampoline code\");\t\t\t\t\\\n }\n-\f\n-#define RETURN_ADDR_RTX(count, frame)\t\t\t\t\t\\\n-((count == 0 && alpha_sa_size () == 0 && 0 /* not right. */)\t\t\\\n+\n+/* A C expression whose value is RTL representing the value of the return\n+   address for the frame COUNT steps up from the current frame.\n+   FRAMEADDR is the frame pointer of the COUNT frame, or the frame pointer of\n+   the COUNT-1 frame if RETURN_ADDR_IN_PREVIOUS_FRAME} is defined.\n+\n+   This definition for Alpha is broken, but is put in at the request of\n+   Mike Stump.  */\n+\n+#define RETURN_ADDR_RTX(COUNT, FRAME)\t\t\t\t\t\\\n+((COUNT == 0 && alpha_sa_size () == 0 && 0 /* not right. */)\t\t\\\n  ? gen_rtx (REG, Pmode, 26)\t\t\t\t\t\t\\\n  : gen_rtx (MEM, Pmode,\t\t\t\t\t\t\t\\\n-\t          memory_address (Pmode, frame)))\n-  /* Addressing modes, and classification of registers for them.  */\n+\t    memory_address (Pmode, FRAME)))\n+\f\n /* Addressing modes, and classification of registers for them.  */\n \n /* #define HAVE_POST_INCREMENT */"}]}