{"sha": "d9288bd28e24c755a7216311ee5247e7c88270a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDkyODhiZDI4ZTI0Yzc1NWE3MjE2MzExZWU1MjQ3ZTdjODgyNzBhNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-11-24T23:21:38Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-12-02T21:14:21Z"}, "message": "c++: Improve init handling\n\nWhile looking at another issue I noticed that in a template we were failing\nto find the INIT_EXPR we were looking for, and so ended up doing redundant\nprocessing.  No testcase, as the redundant processing ended up getting the\nright result.\n\ngcc/cp/ChangeLog:\n\n\t* decl.c (check_initializer): Also look through STMT_EXPR\n\tand BIND_EXPR.", "tree": {"sha": "568fbad2383c1885b79d96e21ac24ca3d36c4968", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/568fbad2383c1885b79d96e21ac24ca3d36c4968"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9288bd28e24c755a7216311ee5247e7c88270a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9288bd28e24c755a7216311ee5247e7c88270a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9288bd28e24c755a7216311ee5247e7c88270a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9288bd28e24c755a7216311ee5247e7c88270a6/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07589ca2b2c84ec9609861ff5d119ed7413fd9c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07589ca2b2c84ec9609861ff5d119ed7413fd9c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07589ca2b2c84ec9609861ff5d119ed7413fd9c5"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "1e2bae4afba789e645a8bf97cae3369d9d91b166", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9288bd28e24c755a7216311ee5247e7c88270a6/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9288bd28e24c755a7216311ee5247e7c88270a6/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=d9288bd28e24c755a7216311ee5247e7c88270a6", "patch": "@@ -6892,9 +6892,17 @@ check_initializer (tree decl, tree init, int flags, vec<tree, va_gc> **cleanups)\n \t     have returned an INIT_EXPR rather than a CALL_EXPR.  In that\n \t     case, pull the initializer back out and pass it down into\n \t     store_init_value.  */\n-\t  while (TREE_CODE (init_code) == EXPR_STMT\n-\t\t || TREE_CODE (init_code) == CONVERT_EXPR)\n-\t    init_code = TREE_OPERAND (init_code, 0);\n+\t  while (true)\n+\t    {\n+\t      if (TREE_CODE (init_code) == EXPR_STMT\n+\t\t  || TREE_CODE (init_code) == STMT_EXPR\n+\t\t  || TREE_CODE (init_code) == CONVERT_EXPR)\n+\t\tinit_code = TREE_OPERAND (init_code, 0);\n+\t      else if (TREE_CODE (init_code) == BIND_EXPR)\n+\t\tinit_code = BIND_EXPR_BODY (init_code);\n+\t      else\n+\t\tbreak;\n+\t    }\n \t  if (TREE_CODE (init_code) == INIT_EXPR)\n \t    {\n \t      /* In C++20, the call to build_aggr_init could have created"}]}