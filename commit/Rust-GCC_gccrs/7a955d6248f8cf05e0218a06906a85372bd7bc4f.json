{"sha": "7a955d6248f8cf05e0218a06906a85372bd7bc4f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2E5NTVkNjI0OGY4Y2YwNWUwMjE4YTA2OTA2YTg1MzcyYmQ3YmM0Zg==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2010-05-23T08:52:21Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2010-05-23T08:52:21Z"}, "message": "rs6000.c (rs6000_mode_dependent_address_p): New.\n\n\t* config/rs6000/rs6000.c (rs6000_mode_dependent_address_p): New.\n\t(TARGET_MODE_DEPENDENT_ADDRESS_P): Define.\n\t(rs6000_mode_dependent_address_ptr): Make static.\n\t* config/rs6000/rs6000.h (GO_IF_MODE_DEPENDENT_ADDRESS): Remove.\n\t* config/rs6000/rs6000-protos.h (rs6000_mode_dependent_address_ptr):\n\tRemove.\n\nFrom-SVN: r159759", "tree": {"sha": "af56490dab8607ca6ff3560fb63f8ac86df8d3d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af56490dab8607ca6ff3560fb63f8ac86df8d3d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a955d6248f8cf05e0218a06906a85372bd7bc4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a955d6248f8cf05e0218a06906a85372bd7bc4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a955d6248f8cf05e0218a06906a85372bd7bc4f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a955d6248f8cf05e0218a06906a85372bd7bc4f/comments", "author": null, "committer": null, "parents": [{"sha": "362ff46e82abb33d39c551a3d41f21b3537fefcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/362ff46e82abb33d39c551a3d41f21b3537fefcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/362ff46e82abb33d39c551a3d41f21b3537fefcf"}], "stats": {"total": 33, "additions": 22, "deletions": 11}, "files": [{"sha": "a7a77433a09d29e520449c1893b2a75dea148c07", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a955d6248f8cf05e0218a06906a85372bd7bc4f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a955d6248f8cf05e0218a06906a85372bd7bc4f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7a955d6248f8cf05e0218a06906a85372bd7bc4f", "patch": "@@ -1,3 +1,12 @@\n+2010-05-23  Anatoly Sokolov  <aesok@post.ru>\n+\n+\t* config/rs6000/rs6000.c (rs6000_mode_dependent_address_p): New.\n+\t(TARGET_MODE_DEPENDENT_ADDRESS_P): Define.\n+\t(rs6000_mode_dependent_address_ptr): Make static.\n+\t* config/rs6000/rs6000.h (GO_IF_MODE_DEPENDENT_ADDRESS): Remove.\n+\t* config/rs6000/rs6000-protos.h (rs6000_mode_dependent_address_ptr):\n+\tRemove.\n+\n 2010-05-23  Maarten Lankhorst  <mlankhorst@codeweavers.com>\n \n \tPR target/43869"}, {"sha": "43ed634495bed7b2831f379eee86c931fa58b383", "filename": "gcc/config/rs6000/rs6000-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a955d6248f8cf05e0218a06906a85372bd7bc4f/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a955d6248f8cf05e0218a06906a85372bd7bc4f/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h?ref=7a955d6248f8cf05e0218a06906a85372bd7bc4f", "patch": "@@ -119,7 +119,6 @@ extern rtx rs6000_secondary_memory_needed_rtx (enum machine_mode);\n extern rtx (*rs6000_legitimize_reload_address_ptr) (rtx, enum machine_mode,\n \t\t\t\t\t\t    int, int, int, int *);\n extern bool rs6000_legitimate_offset_address_p (enum machine_mode, rtx, int);\n-extern bool (*rs6000_mode_dependent_address_ptr) (const_rtx);\n extern rtx rs6000_find_base_term (rtx);\n extern bool rs6000_offsettable_memref_p (rtx);\n extern rtx rs6000_return_addr (int, rtx);"}, {"sha": "35be57bac9e482ba8284aca23696466c55ad8a5b", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a955d6248f8cf05e0218a06906a85372bd7bc4f/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a955d6248f8cf05e0218a06906a85372bd7bc4f/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=7a955d6248f8cf05e0218a06906a85372bd7bc4f", "patch": "@@ -1118,9 +1118,10 @@ rtx (*rs6000_legitimize_reload_address_ptr) (rtx, enum machine_mode, int, int,\n \t\t\t\t\t     int, int *)\n   = rs6000_legitimize_reload_address;\n \n+static bool rs6000_mode_dependent_address_p (const_rtx);\n static bool rs6000_mode_dependent_address (const_rtx);\n static bool rs6000_debug_mode_dependent_address (const_rtx);\n-bool (*rs6000_mode_dependent_address_ptr) (const_rtx)\n+static bool (*rs6000_mode_dependent_address_ptr) (const_rtx)\n   = rs6000_mode_dependent_address;\n \n static enum reg_class rs6000_secondary_reload_class (enum reg_class,\n@@ -1542,6 +1543,9 @@ static const struct attribute_spec rs6000_attribute_table[] =\n #undef TARGET_LEGITIMATE_ADDRESS_P\n #define TARGET_LEGITIMATE_ADDRESS_P rs6000_legitimate_address_p\n \n+#undef TARGET_MODE_DEPENDENT_ADDRESS_P\n+#define TARGET_MODE_DEPENDENT_ADDRESS_P rs6000_mode_dependent_address_p\n+\n #undef TARGET_CAN_ELIMINATE\n #define TARGET_CAN_ELIMINATE rs6000_can_eliminate\n \n@@ -5884,6 +5888,14 @@ rs6000_debug_legitimate_address_p (enum machine_mode mode, rtx x,\n   return ret;\n }\n \n+/* Implement TARGET_MODE_DEPENDENT_ADDRESS_P.  */\n+\n+static bool\n+rs6000_mode_dependent_address_p (const_rtx addr)\n+{\n+  return rs6000_mode_dependent_address_ptr (addr);\n+}\n+\n /* Go to LABEL if ADDR (a legitimate address expression)\n    has an effect that depends on the machine mode it is used for.\n "}, {"sha": "6be51cc47d5377e63f5cdc041a798d5c0852752e", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a955d6248f8cf05e0218a06906a85372bd7bc4f/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a955d6248f8cf05e0218a06906a85372bd7bc4f/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=7a955d6248f8cf05e0218a06906a85372bd7bc4f", "patch": "@@ -1892,15 +1892,6 @@ do {\t\t\t\t\t\t\t\t\t     \\\n     goto WIN;\t\t\t\t\t\t\t\t     \\\n } while (0)\n \n-/* Go to LABEL if ADDR (a legitimate address expression)\n-   has an effect that depends on the machine mode it is used for.  */\n-\n-#define GO_IF_MODE_DEPENDENT_ADDRESS(ADDR,LABEL)\t\t\\\n-do {\t\t\t\t\t\t\t\t\\\n-  if (rs6000_mode_dependent_address_ptr (ADDR))\t\t\t\\\n-    goto LABEL;\t\t\t\t\t\t\t\\\n-} while (0)\n-\n #define FIND_BASE_TERM rs6000_find_base_term\n \f\n /* The register number of the register used to address a table of"}]}