{"sha": "6a0f6e7799c988524d32767047ca64d05a93adaf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmEwZjZlNzc5OWM5ODg1MjRkMzI3NjcwNDdjYTY0ZDA1YTkzYWRhZg==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2011-01-27T20:05:45Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2011-01-27T20:05:45Z"}, "message": "PR 47432 Use ttyname_r() if available\n\nFrom-SVN: r169337", "tree": {"sha": "5391b3d170af8323dd4003f8bd688be43384821f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5391b3d170af8323dd4003f8bd688be43384821f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a0f6e7799c988524d32767047ca64d05a93adaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a0f6e7799c988524d32767047ca64d05a93adaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a0f6e7799c988524d32767047ca64d05a93adaf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a0f6e7799c988524d32767047ca64d05a93adaf/comments", "author": null, "committer": null, "parents": [{"sha": "5f02b9dbcd0669d7c13999a89694520113c2cc12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f02b9dbcd0669d7c13999a89694520113c2cc12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f02b9dbcd0669d7c13999a89694520113c2cc12"}], "stats": {"total": 104, "additions": 72, "deletions": 32}, "files": [{"sha": "c096acfbb00c091a84fd2bb724f3bd6fed03aa4a", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a0f6e7799c988524d32767047ca64d05a93adaf/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a0f6e7799c988524d32767047ca64d05a93adaf/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=6a0f6e7799c988524d32767047ca64d05a93adaf", "patch": "@@ -1,3 +1,16 @@\n+2011-01-27  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR libfortran/47432\n+\t* config.h.in: Regenerated.\n+\t* configure: Regenerated.\n+\t* configure.ac: Add check for ttyname_r.\n+\t* io/unix.h: Add TTY_NAME_MAX, change stream_ttyname prototype.\n+\t* io/unix.c (stream_ttyname): Use ttyname_r if available, conform\n+\tto new prototype.\n+\t* io/inquire.c (inquire_via_unit): Use changed stream_ttyname.\n+\t* io/intrinsics.c (ttynam_sub): Likewise.\n+\t(ttynam): Likewise.\n+\n 2011-01-27  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \tPR libfortran/47491"}, {"sha": "65414c75fc693676efa382dadb9b593a43bedf71", "filename": "libgfortran/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a0f6e7799c988524d32767047ca64d05a93adaf/libgfortran%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a0f6e7799c988524d32767047ca64d05a93adaf/libgfortran%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig.h.in?ref=6a0f6e7799c988524d32767047ca64d05a93adaf", "patch": "@@ -807,6 +807,9 @@\n /* Define to 1 if you have the `ttyname' function. */\n #undef HAVE_TTYNAME\n \n+/* Define to 1 if you have the `ttyname_r' function. */\n+#undef HAVE_TTYNAME_R\n+\n /* Define to 1 if the system has the type `uintptr_t'. */\n #undef HAVE_UINTPTR_T\n "}, {"sha": "836dfdc05e3efca2569c745fb3e4cc6381decdde", "filename": "libgfortran/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a0f6e7799c988524d32767047ca64d05a93adaf/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a0f6e7799c988524d32767047ca64d05a93adaf/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=6a0f6e7799c988524d32767047ca64d05a93adaf", "patch": "@@ -16367,7 +16367,7 @@ _ACEOF\n fi\n done\n \n-for ac_func in localtime_r gmtime_r strerror_r getpwuid_r\n+for ac_func in localtime_r gmtime_r strerror_r getpwuid_r ttyname_r\n do :\n   as_ac_var=`$as_echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n ac_fn_c_check_func \"$LINENO\" \"$ac_func\" \"$as_ac_var\""}, {"sha": "87d2340ab6cbcd130196ea6ac0a7e7aab2195132", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a0f6e7799c988524d32767047ca64d05a93adaf/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a0f6e7799c988524d32767047ca64d05a93adaf/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=6a0f6e7799c988524d32767047ca64d05a93adaf", "patch": "@@ -251,7 +251,7 @@ AC_CHECK_FUNCS(chdir strerror getlogin gethostname kill link symlink perror)\n AC_CHECK_FUNCS(sleep time ttyname signal alarm ctime clock access fork execl)\n AC_CHECK_FUNCS(wait setmode execvp pipe dup2 close fdopen strcasestr getrlimit)\n AC_CHECK_FUNCS(gettimeofday stat fstat lstat getpwuid vsnprintf dup getcwd)\n-AC_CHECK_FUNCS(localtime_r gmtime_r strerror_r getpwuid_r)\n+AC_CHECK_FUNCS(localtime_r gmtime_r strerror_r getpwuid_r ttyname_r)\n \n # Check for glibc backtrace functions\n AC_CHECK_FUNCS(backtrace backtrace_symbols)"}, {"sha": "252f29f0aef211703253f3c6dab1355a5bf95e7e", "filename": "libgfortran/io/inquire.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a0f6e7799c988524d32767047ca64d05a93adaf/libgfortran%2Fio%2Finquire.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a0f6e7799c988524d32767047ca64d05a93adaf/libgfortran%2Fio%2Finquire.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Finquire.c?ref=6a0f6e7799c988524d32767047ca64d05a93adaf", "patch": "@@ -1,8 +1,8 @@\n-/* Copyright (C) 2002, 2003, 2005, 2007, 2009, 2010\n+/* Copyright (C) 2002, 2003, 2005, 2007, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n    Contributed by Andy Vaught\n \n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+This file is part of the GNU Fortran runtime library (libgfortran).\n \n Libgfortran is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n@@ -68,16 +68,17 @@ inquire_via_unit (st_parameter_inquire *iqp, gfc_unit * u)\n   if ((cf & IOPARM_INQUIRE_HAS_NAME) != 0\n       && u != NULL && u->flags.status != STATUS_SCRATCH)\n     {\n-#ifdef HAVE_TTYNAME\n+#if defined(HAVE_TTYNAME_R) || defined(HAVE_TTYNAME)\n       if (u->unit_number == options.stdin_unit\n \t  || u->unit_number == options.stdout_unit\n \t  || u->unit_number == options.stderr_unit)\n \t{\n-\t  char * tmp = stream_ttyname (u->s);\n-\t  if (tmp != NULL)\n+\t  int err = stream_ttyname (u->s, iqp->name, iqp->name_len);\n+\t  if (err == 0)\n \t    {\n-\t      int tmplen = strlen (tmp);\n-\t      fstrcpy (iqp->name, iqp->name_len, tmp, tmplen);\n+\t      gfc_charlen_type tmplen = strlen (iqp->name);\n+\t      if (iqp->name_len > tmplen)\n+\t\tmemset (&iqp->name[tmplen], ' ', iqp->name_len - tmplen);\n \t    }\n \t  else /* If ttyname does not work, go with the default.  */\n \t    fstrcpy (iqp->name, iqp->name_len, u->file, u->file_len);"}, {"sha": "f48bd777456d60ba16bb2d7d21612a8034082476", "filename": "libgfortran/io/intrinsics.c", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a0f6e7799c988524d32767047ca64d05a93adaf/libgfortran%2Fio%2Fintrinsics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a0f6e7799c988524d32767047ca64d05a93adaf/libgfortran%2Fio%2Fintrinsics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fintrinsics.c?ref=6a0f6e7799c988524d32767047ca64d05a93adaf", "patch": "@@ -1,6 +1,7 @@\n /* Implementation of the FGET, FGETC, FPUT, FPUTC, FLUSH \n    FTELL, TTYNAM and ISATTY intrinsics.\n-   Copyright (C) 2005, 2007, 2009, 2010 Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2007, 2009, 2010, 2011 Free Software\n+   Foundation, Inc.\n \n This file is part of the GNU Fortran runtime library (libgfortran).\n \n@@ -351,22 +352,23 @@ void\n ttynam_sub (int *unit, char * name, gfc_charlen_type name_len)\n {\n   gfc_unit *u;\n-  char * n;\n-  int i;\n+  int nlen;\n+  int err = 1;\n \n-  memset (name, ' ', name_len);\n   u = find_unit (*unit);\n   if (u != NULL)\n     {\n-      n = stream_ttyname (u->s);\n-      if (n != NULL)\n+      err = stream_ttyname (u->s, name, name_len);\n+      if (err == 0)\n \t{\n-\t  i = 0;\n-\t  while (*n && i < name_len)\n-\t    name[i++] = *(n++);\n+\t  nlen = strlen (name);\n+\t  memset (&name[nlen], ' ', name_len - nlen);\n \t}\n+\n       unlock_unit (u);\n     }\n+  if (err != 0)\n+    memset (name, ' ', name_len);\n }\n \n \n@@ -381,14 +383,15 @@ ttynam (char ** name, gfc_charlen_type * name_len, int unit)\n   u = find_unit (unit);\n   if (u != NULL)\n     {\n-      *name = stream_ttyname (u->s);\n-      if (*name != NULL)\n+      *name = get_mem (TTY_NAME_MAX);\n+      int err = stream_ttyname (u->s, *name, TTY_NAME_MAX);\n+      if (err == 0)\n \t{\n \t  *name_len = strlen (*name);\n-\t  *name = strdup (*name);\n \t  unlock_unit (u);\n \t  return;\n \t}\n+      free (*name);\n       unlock_unit (u);\n     }\n "}, {"sha": "004e8606c0a064163d16518d196e4f7d49e9f053", "filename": "libgfortran/io/unix.c", "status": "modified", "additions": 21, "deletions": 10, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a0f6e7799c988524d32767047ca64d05a93adaf/libgfortran%2Fio%2Funix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a0f6e7799c988524d32767047ca64d05a93adaf/libgfortran%2Fio%2Funix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funix.c?ref=6a0f6e7799c988524d32767047ca64d05a93adaf", "patch": "@@ -1811,18 +1811,29 @@ stream_isatty (stream *s)\n   return isatty (((unix_stream *) s)->fd);\n }\n \n-char *\n-#ifdef HAVE_TTYNAME\n-stream_ttyname (stream *s)\n-{\n-  return ttyname (((unix_stream *) s)->fd);\n-}\n+int\n+stream_ttyname (stream *s  __attribute__ ((unused)),\n+\t\tchar * buf  __attribute__ ((unused)),\n+\t\tsize_t buflen  __attribute__ ((unused)))\n+{\n+#ifdef HAVE_TTYNAME_R\n+  return ttyname_r (((unix_stream *) s)->fd, buf, buflen);\n+#elif defined HAVE_TTYNAME\n+  char *p;\n+  size_t plen;\n+  p = ttyname (((unix_stream *) s)->fd);\n+  if (!p)\n+    return errno;\n+  plen = strlen (p);\n+  if (buflen < plen)\n+    plen = buflen;\n+  memcpy (buf, p, plen);\n+  return 0;\n #else\n-stream_ttyname (stream *s __attribute__ ((unused)))\n-{\n-  return NULL;\n-}\n+  return ENOSYS;\n #endif\n+}\n+\n \n \n "}, {"sha": "f7d6f08643eb6d4f8cb36c078a4b11ff4098fa17", "filename": "libgfortran/io/unix.h", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a0f6e7799c988524d32767047ca64d05a93adaf/libgfortran%2Fio%2Funix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a0f6e7799c988524d32767047ca64d05a93adaf/libgfortran%2Fio%2Funix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funix.h?ref=6a0f6e7799c988524d32767047ca64d05a93adaf", "patch": "@@ -170,7 +170,16 @@ internal_proto(flush_if_preconnected);\n extern int stream_isatty (stream *);\n internal_proto(stream_isatty);\n \n-extern char * stream_ttyname (stream *);\n+#ifndef TTY_NAME_MAX\n+#ifdef _POSIX_TTY_NAME_MAX\n+#define TTY_NAME_MAX _POSIX_TTY_NAME_MAX\n+#else\n+/* sysconf(_SC_TTY_NAME_MAX) = 32 which should be enough.  */\n+#define TTY_NAME_MAX 32\n+#endif\n+#endif\n+\n+extern int stream_ttyname (stream *, char *, size_t);\n internal_proto(stream_ttyname);\n \n extern int unpack_filename (char *, const char *, int);"}]}