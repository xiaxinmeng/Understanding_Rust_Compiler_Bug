{"sha": "4a5a0497ba984382955babd44a4d63e0d91a3243", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE1YTA0OTdiYTk4NDM4Mjk1NWJhYmQ0NGE0ZDYzZTBkOTFhMzI0Mw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2018-01-15T22:35:36Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2018-01-15T22:35:36Z"}, "message": "Don't check ix86_indirect_branch_register for GOT operand\n\nSince GOT_memory_operand and GOT32_symbol_operand are simple pattern\nmatches, don't check ix86_indirect_branch_register here.  If needed,\n-mindirect-branch= will convert indirect branch via GOT slot to a call\nand return thunk.\n\n\t* config/i386/constraints.md (Bs): Update\n\tix86_indirect_branch_register check.  Don't check\n\tix86_indirect_branch_register with GOT_memory_operand.\n\t(Bw): Likewise.\n\t* config/i386/predicates.md (GOT_memory_operand): Don't check\n\tix86_indirect_branch_register here.\n\t(GOT32_symbol_operand): Likewise.\n\nFrom-SVN: r256714", "tree": {"sha": "3cc7f75d3141794847f50b2ffd2c8e5bd9c810de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3cc7f75d3141794847f50b2ffd2c8e5bd9c810de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a5a0497ba984382955babd44a4d63e0d91a3243", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a5a0497ba984382955babd44a4d63e0d91a3243", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a5a0497ba984382955babd44a4d63e0d91a3243", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a5a0497ba984382955babd44a4d63e0d91a3243/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5ca876c398d856b99a3427eabea5a992f328ee2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ca876c398d856b99a3427eabea5a992f328ee2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ca876c398d856b99a3427eabea5a992f328ee2d"}], "stats": {"total": 30, "additions": 18, "deletions": 12}, "files": [{"sha": "f89575a4c8481233aaf12adf107453d50b4f69d5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a5a0497ba984382955babd44a4d63e0d91a3243/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a5a0497ba984382955babd44a4d63e0d91a3243/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4a5a0497ba984382955babd44a4d63e0d91a3243", "patch": "@@ -1,3 +1,13 @@\n+2018-01-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/constraints.md (Bs): Update\n+\tix86_indirect_branch_register check.  Don't check\n+\tix86_indirect_branch_register with GOT_memory_operand.\n+\t(Bw): Likewise.\n+\t* config/i386/predicates.md (GOT_memory_operand): Don't check\n+\tix86_indirect_branch_register here.\n+\t(GOT32_symbol_operand): Likewise.\n+\n 2018-01-15  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/predicates.md (constant_call_address_operand):"}, {"sha": "664e906b311e3a168f99bc22c7733980ae0e297f", "filename": "gcc/config/i386/constraints.md", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a5a0497ba984382955babd44a4d63e0d91a3243/gcc%2Fconfig%2Fi386%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a5a0497ba984382955babd44a4d63e0d91a3243/gcc%2Fconfig%2Fi386%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fconstraints.md?ref=4a5a0497ba984382955babd44a4d63e0d91a3243", "patch": "@@ -225,20 +225,18 @@\n \n (define_constraint \"Bs\"\n   \"@internal Sibcall memory operand.\"\n-  (ior (and (not (match_test \"TARGET_X32\n-\t\t\t      || ix86_indirect_branch_register\"))\n+  (ior (and (not (match_test \"ix86_indirect_branch_register\"))\n+\t    (not (match_test \"TARGET_X32\"))\n \t    (match_operand 0 \"sibcall_memory_operand\"))\n-       (and (match_test \"TARGET_X32 && Pmode == DImode\n-\t\t\t && !ix86_indirect_branch_register\")\n+       (and (match_test \"TARGET_X32 && Pmode == DImode\")\n \t    (match_operand 0 \"GOT_memory_operand\"))))\n \n (define_constraint \"Bw\"\n   \"@internal Call memory operand.\"\n-  (ior (and (not (match_test \"TARGET_X32\n-\t\t\t      || ix86_indirect_branch_register\"))\n+  (ior (and (not (match_test \"ix86_indirect_branch_register\"))\n+\t    (not (match_test \"TARGET_X32\"))\n \t    (match_operand 0 \"memory_operand\"))\n-       (and (match_test \"TARGET_X32 && Pmode == DImode\n-\t\t\t && !ix86_indirect_branch_register\")\n+       (and (match_test \"TARGET_X32 && Pmode == DImode\")\n \t    (match_operand 0 \"GOT_memory_operand\"))))\n \n (define_constraint \"Bz\""}, {"sha": "a502657f9e30ec659ac4d39858a2c8816dc2f910", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a5a0497ba984382955babd44a4d63e0d91a3243/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a5a0497ba984382955babd44a4d63e0d91a3243/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=4a5a0497ba984382955babd44a4d63e0d91a3243", "patch": "@@ -695,8 +695,7 @@\n \n ;; Return true if OP is a GOT memory operand.\n (define_predicate \"GOT_memory_operand\"\n-  (and (match_test \"!ix86_indirect_branch_register\")\n-       (match_operand 0 \"memory_operand\"))\n+  (match_operand 0 \"memory_operand\")\n {\n   op = XEXP (op, 0);\n   return (GET_CODE (op) == CONST\n@@ -729,8 +728,7 @@\n \n ;; Return true if OP is a 32-bit GOT symbol operand.\n (define_predicate \"GOT32_symbol_operand\"\n-  (match_test \"!ix86_indirect_branch_register\n-\t       && GET_CODE (op) == CONST\n+  (match_test \"GET_CODE (op) == CONST\n                && GET_CODE (XEXP (op, 0)) == UNSPEC\n                && XINT (XEXP (op, 0), 1) == UNSPEC_GOT\"))\n "}]}