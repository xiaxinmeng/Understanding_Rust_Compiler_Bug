{"sha": "d6d5951a4a7f3ed219ea5be8c9a377cfb16f62d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZkNTk1MWE0YTdmM2VkMjE5ZWE1YmU4YzlhMzc3Y2ZiMTZmNjJkOA==", "commit": {"author": {"name": "Andi Kleen", "email": "ak@linux.intel.com", "date": "2010-10-11T13:06:50Z"}, "committer": {"name": "Andi Kleen", "email": "ak@gcc.gnu.org", "date": "2010-10-11T13:06:50Z"}, "message": "Build compiler checksum from object files v2\n\ngcc/\n\n2010-10-07  Andi Kleen  <ak@linux.intel.com>\n\n\t* Makefile.in (MOSTLYCLEANFILES): Remove cc1*dummy, add\n\tchecksum-options.\n\t(checksum-options): Add.\n\t(cc1-dummy): Remove.\n\t(cc1-checksum): Change to run checksum over object files\n\tand options only.\n\t* dummy-checksum.c: Remove.\n\t* genchecksum.c: Update copyright.\n\t(usage): Allow multiple arguments.\n\t(BLOCKSIZE): Add.\n\t(dosum): Change for incremental checksum. Remove C output.\n\t(main): Iterate over all argument files. Add C output.\n\ngcc/cp\n\n2010-10-07  Andi Kleen  <ak@linux.intel.com>\n\n\t* Make-lang.in (c++_OBJS): Remove dummy-checksum.o.\n\t(cc1plus-dummy): Remove.\n\t(cc1plus-checksum): Change to run checksum over object files\n        and options only.\n\ngcc/objc\n\n2010-10-07  Andi Kleen  <ak@linux.intel.com>\n\n\t* Make-lang.in (cc1obj-dummy): Remove.\n\t(cc1obj-checksum): Change to run checksum over object files\n        and options only.\n\ngcc/objcp\n\n2010-10-07  Andi Kleen  <ak@linux.intel.com>\n\n\t* Make-lang.in (cc1objplus-dummy): Remove.\n\t(cc1objplus-checksum): Change to run checksum over object files\n        and options only.\n\nFrom-SVN: r165305", "tree": {"sha": "6ded94c9db8b315c53a78c4074358149d701e39b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ded94c9db8b315c53a78c4074358149d701e39b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6d5951a4a7f3ed219ea5be8c9a377cfb16f62d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6d5951a4a7f3ed219ea5be8c9a377cfb16f62d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6d5951a4a7f3ed219ea5be8c9a377cfb16f62d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6d5951a4a7f3ed219ea5be8c9a377cfb16f62d8/comments", "author": null, "committer": null, "parents": [{"sha": "128dc8e23075f70721ff1cbe3294021e7dd82834", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/128dc8e23075f70721ff1cbe3294021e7dd82834", "html_url": "https://github.com/Rust-GCC/gccrs/commit/128dc8e23075f70721ff1cbe3294021e7dd82834"}], "stats": {"total": 169, "additions": 121, "deletions": 48}, "files": [{"sha": "a862b5e34d11da0cf040ab13acc297cd1df0a7fc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6d5951a4a7f3ed219ea5be8c9a377cfb16f62d8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6d5951a4a7f3ed219ea5be8c9a377cfb16f62d8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d6d5951a4a7f3ed219ea5be8c9a377cfb16f62d8", "patch": "@@ -1,3 +1,18 @@\n+2010-10-07  Andi Kleen  <ak@linux.intel.com>\n+\n+\t* Makefile.in (MOSTLYCLEANFILES): Remove cc1*dummy, add\n+\tchecksum-options.\n+\t(checksum-options): Add.\n+\t(cc1-dummy): Remove.\n+\t(cc1-checksum): Change to run checksum over object files\n+\tand options only.\n+\t* dummy-checksum.c: Remove.\n+\t* genchecksum.c: Update copyright.\n+\t(usage): Allow multiple arguments.\n+\t(BLOCKSIZE): Add.\n+\t(dosum): Change for incremental checksum. Remove C output.\n+\t(main): Iterate over all argument files. Add C output.\n+\n 2010-10-11  Joseph Myers  <joseph@codesourcery.com>\n \n \t* params.c (set_param_value_internal): New."}, {"sha": "84057890dcee46d0ef46abcf7ff1cbc1b01c01d3", "filename": "gcc/Makefile.in", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6d5951a4a7f3ed219ea5be8c9a377cfb16f62d8/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6d5951a4a7f3ed219ea5be8c9a377cfb16f62d8/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=d6d5951a4a7f3ed219ea5be8c9a377cfb16f62d8", "patch": "@@ -1489,10 +1489,10 @@ BACKEND = main.o @TREEBROWSER@ libbackend.a $(CPPLIB) $(LIBDECNUMBER)\n MOSTLYCLEANFILES = insn-flags.h insn-config.h insn-codes.h \\\n  insn-output.c insn-recog.c insn-emit.c insn-extract.c insn-peep.c \\\n  insn-attr.h insn-attrtab.c insn-opinit.c insn-preds.c insn-constants.h \\\n- tm-preds.h tm-constrs.h \\\n+ tm-preds.h tm-constrs.h checksum-options \\\n  tree-check.h min-insn-modes.c insn-modes.c insn-modes.h \\\n  genrtl.h gt-*.h gtype-*.h gtype-desc.c gtyp-input.list \\\n- xgcc$(exeext) cpp$(exeext) cc1$(exeext) cc1*-dummy$(exeext) $(EXTRA_PASSES) \\\n+ xgcc$(exeext) cpp$(exeext) cc1$(exeext) $(EXTRA_PASSES) \\\n  $(EXTRA_PARTS) $(EXTRA_PROGRAMS) gcc-cross$(exeext) \\\n  $(SPECS) collect2$(exeext) lto-wrapper$(exeext) \\\n  gcov-iov$(build_exeext) gcov$(exeext) gcov-dump$(exeext) \\\n@@ -1832,14 +1832,16 @@ $(SPECS): xgcc$(exeext)\n gcc-cross$(exeext): xgcc$(exeext)\n \tcp xgcc$(exeext) gcc-cross$(exeext)\n \n-dummy-checksum.o : dummy-checksum.c $(CONFIG_H) $(SYSTEM_H)\n+checksum-options:\n+\techo \"$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS)\" > checksum-options.tmp \\\n+\t&& $(srcdir)/../move-if-change checksum-options.tmp checksum-options\n \n-cc1-dummy$(exeext): $(C_OBJS) dummy-checksum.o $(BACKEND) $(LIBDEPS)\n-\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(C_OBJS) \\\n-\t  dummy-checksum.o $(BACKEND) $(LIBS) $(BACKENDLIBS)\n-\n-cc1-checksum.c : cc1-dummy$(exeext) build/genchecksum$(build_exeext)\n-\tbuild/genchecksum$(build_exeext) cc1-dummy$(exeext) > $@\n+# compute checksum over all object files and the options\n+cc1-checksum.c : build/genchecksum$(build_exeext) checksum-options \\\n+\t$(C_OBJS) $(BACKEND) $(LIBDEPS) \n+\tbuild/genchecksum$(build_exeext) $(C_OBJS) $(BACKEND) $(LIBDEPS) \\\n+                     checksum-options > cc1-checksum.c.tmp && \t\t \\\n+\t$(srcdir)/../move-if-change cc1-checksum.c.tmp cc1-checksum.c\n \n cc1-checksum.o : cc1-checksum.c $(CONFIG_H) $(SYSTEM_H)\n "}, {"sha": "9928f61c8e755b2c709e877a11feb6f19c1340d5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6d5951a4a7f3ed219ea5be8c9a377cfb16f62d8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6d5951a4a7f3ed219ea5be8c9a377cfb16f62d8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d6d5951a4a7f3ed219ea5be8c9a377cfb16f62d8", "patch": "@@ -1,3 +1,10 @@\n+2010-10-07  Andi Kleen  <ak@linux.intel.com>\n+\n+\t* Make-lang.in (c++_OBJS): Remove dummy-checksum.o.\n+\t(cc1plus-dummy): Remove.\n+\t(cc1plus-checksum): Change to run checksum over object files\n+        and options only.\n+\n 2010-10-08  Joseph Myers  <joseph@codesourcery.com>\n \n \t* cp-objcp-common.h (LANG_HOOKS_INIT_OPTIONS_STRUCT): Define."}, {"sha": "fcf21198b0c626391bff48784ea82eb1182727df", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6d5951a4a7f3ed219ea5be8c9a377cfb16f62d8/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6d5951a4a7f3ed219ea5be8c9a377cfb16f62d8/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=d6d5951a4a7f3ed219ea5be8c9a377cfb16f62d8", "patch": "@@ -86,17 +86,17 @@ CXX_AND_OBJCXX_OBJS = cp/call.o cp/decl.o cp/expr.o cp/pt.o cp/typeck2.o \\\n # Language-specific object files for C++.\n CXX_OBJS = cp/cp-lang.o c-family/stub-objc.o $(CXX_AND_OBJCXX_OBJS)\n \n-c++_OBJS = $(CXX_OBJS) dummy-checksum.o cc1plus-checksum.o cp/g++spec.o\n+c++_OBJS = $(CXX_OBJS) cc1plus-checksum.o cp/g++spec.o\n \n # Use strict warnings for this front end.\n cp-warn = $(STRICT_WARN)\n \n-cc1plus-dummy$(exeext): $(CXX_OBJS) dummy-checksum.o $(BACKEND) $(LIBDEPS)\n-\t$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n-\t      $(CXX_OBJS) dummy-checksum.o $(BACKEND) $(LIBS) $(BACKENDLIBS)\n-\n-cc1plus-checksum.c : cc1plus-dummy$(exeext) build/genchecksum$(build_exeext)\n-\tbuild/genchecksum$(build_exeext) cc1plus-dummy$(exeext) > $@\n+# compute checksum over all object files and the options\n+cc1plus-checksum.c : build/genchecksum$(build_exeext) checksum-options \\\n+\t$(CXX_OBJS) $(BACKEND) $(LIBDEPS) \n+\tbuild/genchecksum$(build_exeext) $(CXX_OBJS) $(BACKEND) $(LIBDEPS) \\\n+                     checksum-options > cc1plus-checksum.c.tmp &&\t   \\\n+\t$(srcdir)/../move-if-change cc1plus-checksum.c.tmp cc1plus-checksum.c\n \n cc1plus-checksum.o : cc1plus-checksum.c $(CONFIG_H) $(SYSTEM_H)\n "}, {"sha": "c90f1ca934012a0ea263894d0c497e2f3c819b9d", "filename": "gcc/dummy-checksum.c", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/128dc8e23075f70721ff1cbe3294021e7dd82834/gcc%2Fdummy-checksum.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/128dc8e23075f70721ff1cbe3294021e7dd82834/gcc%2Fdummy-checksum.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdummy-checksum.c?ref=128dc8e23075f70721ff1cbe3294021e7dd82834", "patch": "@@ -1,3 +0,0 @@\n-#include \"config.h\"\n-#include \"system.h\"\n-EXPORTED_CONST unsigned char executable_checksum[16] = { 0 };"}, {"sha": "e0c71f4feab2dfbfb42564f0f66ff1e13ca48e12", "filename": "gcc/genchecksum.c", "status": "modified", "additions": 58, "deletions": 15, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6d5951a4a7f3ed219ea5be8c9a377cfb16f62d8/gcc%2Fgenchecksum.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6d5951a4a7f3ed219ea5be8c9a377cfb16f62d8/gcc%2Fgenchecksum.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenchecksum.c?ref=d6d5951a4a7f3ed219ea5be8c9a377cfb16f62d8", "patch": "@@ -1,5 +1,5 @@\n /* Generate checksums of executables for PCH validation\n-   Copyright (C) 2005, 2007, 2009\n+   Copyright (C) 2005, 2007, 2009, 2010\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -25,15 +25,18 @@ along with GCC; see the file COPYING3.  If not see\n static void\n usage (void)\n {\n-  fputs (\"Usage: genchecksums <filename>\\n\", stderr);\n+  fputs (\"Usage: genchecksums <filename> ...\\n\", stderr);\n }\n \n+/* Important: BLOCKSIZE must be a multiple of 64.  */\n+#define BLOCKSIZE 4096\n+\n static void\n-dosum (const char *file)\n+dosum (struct md5_ctx *ctx, const char *file)\n {\n   FILE *f;\n-  unsigned char result[16];\n-  int i;\n+  char buffer[BLOCKSIZE + 72];\n+  size_t sum;\n \n   f = fopen (file, \"rb\");\n   if (!f)\n@@ -49,30 +52,70 @@ dosum (const char *file)\n       exit (1);\n     }\n \n-  if (md5_stream (f, result) != 0\n-      || fclose (f) != 0)\n+  /* Iterate over full file contents.  */\n+  while (1)\n+    {\n+      /* We read the file in blocks of BLOCKSIZE bytes.  One call of the\n+\t computation function processes the whole buffer so that with the\n+\t next round of the loop another block can be read.  */\n+      size_t n;\n+      sum = 0;\n+\n+      /* Read block.  Take care for partial reads.  */\n+      do\n+\t{\n+\t  n = fread (buffer + sum, 1, BLOCKSIZE - sum, f);\n+\n+\t  sum += n;\n+\t}\n+      while (sum < BLOCKSIZE && n != 0);\n+      if (n == 0 && ferror (f))\n+        exit (1);\n+\n+      /* If end of file is reached, end the loop.  */\n+      if (n == 0)\n+\tbreak;\n+\n+      /* Process buffer with BLOCKSIZE bytes.  Note that\n+\t\t\tBLOCKSIZE % 64 == 0\n+       */\n+      md5_process_block (buffer, BLOCKSIZE, ctx);\n+    }\n+\n+  /* Add the last bytes if necessary.  */\n+  if (sum > 0)\n+    md5_process_bytes (buffer, sum, ctx);\n+\n+  if (fclose (f) != 0)\n      {\n       fprintf (stderr, \"reading %s: %s\\n\", file, xstrerror (errno));\n       exit (1);\n     }\n-\n-  puts (\"#include \\\"config.h\\\"\");\n-  puts (\"#include \\\"system.h\\\"\");\n-  fputs (\"EXPORTED_CONST unsigned char executable_checksum[16] = { \", stdout);\n-  for (i = 0; i < 16; i++)\n-    printf (\"0x%02x%s\", result[i], i == 15 ? \" };\\n\" : \", \");\n }\n \n int\n main (int argc, char ** argv)\n {\n-  if (argc != 2)\n+  struct md5_ctx ctx;\n+  unsigned char result[16];\n+  int i;\n+\n+  if (argc < 2)\n     {\n       usage ();\n       return 1;\n     }\n \n-  dosum (argv[1]);\n+  md5_init_ctx (&ctx);\n+  for (i = 1; i < argc; i++) \n+    dosum (&ctx, argv[i]);\n+  md5_finish_ctx (&ctx, result);\n+\n+  puts (\"#include \\\"config.h\\\"\");\n+  puts (\"#include \\\"system.h\\\"\");\n+  fputs (\"EXPORTED_CONST unsigned char executable_checksum[16] = { \", stdout);\n+  for (i = 0; i < 16; i++)\n+    printf (\"0x%02x%s\", result[i], i == 15 ? \" };\\n\" : \", \");\n \n   return 0;\n }"}, {"sha": "133141c32192bcd46b889c32055eb4db5bebebb7", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6d5951a4a7f3ed219ea5be8c9a377cfb16f62d8/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6d5951a4a7f3ed219ea5be8c9a377cfb16f62d8/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=d6d5951a4a7f3ed219ea5be8c9a377cfb16f62d8", "patch": "@@ -1,3 +1,9 @@\n+2010-10-07  Andi Kleen  <ak@linux.intel.com>\n+\n+\t* Make-lang.in (cc1obj-dummy): Remove.\n+\t(cc1obj-checksum): Change to run checksum over object files\n+        and options only.\n+\n 2010-10-07  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \tPR objc/45925"}, {"sha": "8259190c51d600da110b13cfa5369fd85cbacedc", "filename": "gcc/objc/Make-lang.in", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6d5951a4a7f3ed219ea5be8c9a377cfb16f62d8/gcc%2Fobjc%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6d5951a4a7f3ed219ea5be8c9a377cfb16f62d8/gcc%2Fobjc%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FMake-lang.in?ref=d6d5951a4a7f3ed219ea5be8c9a377cfb16f62d8", "patch": "@@ -51,13 +51,11 @@ OBJC_OBJS = objc/objc-lang.o objc/objc-act.o\n \n objc_OBJS = $(OBJC_OBJS) cc1obj-checksum.o\n \n-cc1obj-dummy$(exeext): $(OBJC_OBJS) $(C_AND_OBJC_OBJS) dummy-checksum.o $(BACKEND) $(LIBDEPS)\n-\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n-\t      $(OBJC_OBJS) $(C_AND_OBJC_OBJS) dummy-checksum.o \\\n-\t      $(BACKEND) $(LIBS) $(BACKENDLIBS)\n-\n-cc1obj-checksum.c : cc1obj-dummy$(exeext) build/genchecksum$(build_exeext)\n-\tbuild/genchecksum$(build_exeext) cc1obj-dummy$(exeext) > $@\n+cc1obj-checksum.c : build/genchecksum$(build_exeext) checksum-options \\\n+        $(OBJC_OBJS) $(C_AND_OBJC_OBJS) $(BACKEND) $(LIBDEPS)\n+\tbuild/genchecksum$(build_exeext) $(OBJC_OBJS) $(C_AND_OBJC_OBJS) \\\n+        $(BACKEND) $(LIBDEPS) checksum-options > cc1obj-checksum.c.tmp && \\\n+\t$(srcdir)/../move-if-change cc1obj-checksum.c.tmp cc1obj-checksum.c\n \n cc1obj-checksum.o : cc1obj-checksum.c $(CONFIG_H) $(SYSTEM_H)\n "}, {"sha": "eb8b9a8197d469e9bb9b2652a12adbc5573de65a", "filename": "gcc/objcp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6d5951a4a7f3ed219ea5be8c9a377cfb16f62d8/gcc%2Fobjcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6d5951a4a7f3ed219ea5be8c9a377cfb16f62d8/gcc%2Fobjcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2FChangeLog?ref=d6d5951a4a7f3ed219ea5be8c9a377cfb16f62d8", "patch": "@@ -1,3 +1,9 @@\n+2010-10-07  Andi Kleen  <ak@linux.intel.com>\n+\n+\t* Make-lang.in (cc1objplus-dummy): Remove.\n+\t(cc1objplus-checksum): Change to run checksum over object files\n+        and options only.\n+\n 2010-10-04  Andi Kleen <ak@linux.intel.com>\n \n \t* Make-lang.in (cc1objplus-dummy, cc1objplus): Add + to build rule."}, {"sha": "edc5423be93a8a4bf458adc34ded6ed182a67ae3", "filename": "gcc/objcp/Make-lang.in", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6d5951a4a7f3ed219ea5be8c9a377cfb16f62d8/gcc%2Fobjcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6d5951a4a7f3ed219ea5be8c9a377cfb16f62d8/gcc%2Fobjcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2FMake-lang.in?ref=d6d5951a4a7f3ed219ea5be8c9a377cfb16f62d8", "patch": "@@ -54,13 +54,12 @@ OBJCXX_OBJS = objcp/objcp-act.o objcp/objcp-lang.o objcp/objcp-decl.o \\\n \n obj-c++_OBJS = $(OBJCXX_OBJS) cc1objplus-checksum.o\n \n-cc1objplus-dummy$(exeext): $(OBJCXX_OBJS) dummy-checksum.o $(BACKEND) \\\n-\t\t$(LIBDEPS)\n-\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n-\t\t$(OBJCXX_OBJS) dummy-checksum.o $(BACKEND) $(LIBS) $(BACKENDLIBS)\n-\n-cc1objplus-checksum.c : cc1objplus-dummy$(exeext) build/genchecksum$(build_exeext)\n-\tbuild/genchecksum$(build_exeext) cc1objplus-dummy$(exeext) > $@\n+cc1objplus-checksum.c : build/genchecksum$(build_exeext) checksum-options \\\n+\t$(OBJCXX_OBJS) $(BACKEND) $(LIBDEPS)\n+\tbuild/genchecksum$(build_exeext) $(OBJCXX_OBJS) $(BACKEND) \\\n+\t\t$(LIBDEPS) checksum-options > cc1objplus-checksum.c && \\\n+\t$(srcdir)/../move-if-change cc1objplus-checksum.c.tmp \\\n+\tcc1objplus-checksum.c\n \n cc1objplus-checksum.o : cc1objplus-checksum.c $(CONFIG_H) $(SYSTEM_H)\n "}]}