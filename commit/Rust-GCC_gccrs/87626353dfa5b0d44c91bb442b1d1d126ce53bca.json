{"sha": "87626353dfa5b0d44c91bb442b1d1d126ce53bca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc2MjYzNTNkZmE1YjBkNDRjOTFiYjQ0MmIxZDFkMTI2Y2U1M2JjYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-06-02T17:49:26Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-06-02T17:49:26Z"}, "message": "new\n\nFrom-SVN: r34361", "tree": {"sha": "4851a3c31b7c75304f5847d8a5bd8230d3f04b41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4851a3c31b7c75304f5847d8a5bd8230d3f04b41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87626353dfa5b0d44c91bb442b1d1d126ce53bca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87626353dfa5b0d44c91bb442b1d1d126ce53bca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87626353dfa5b0d44c91bb442b1d1d126ce53bca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87626353dfa5b0d44c91bb442b1d1d126ce53bca/comments", "author": null, "committer": null, "parents": [{"sha": "56ce79f73374a30b653e0e8f07a59fadac724783", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56ce79f73374a30b653e0e8f07a59fadac724783", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56ce79f73374a30b653e0e8f07a59fadac724783"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "7466bfb1d6f7e10ea161b202106e64e34bbd867b", "filename": "gcc/testsuite/g++.old-deja/g++.ext/return1.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87626353dfa5b0d44c91bb442b1d1d126ce53bca/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Freturn1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87626353dfa5b0d44c91bb442b1d1d126ce53bca/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Freturn1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Freturn1.C?ref=87626353dfa5b0d44c91bb442b1d1d126ce53bca", "patch": "@@ -0,0 +1,18 @@\n+// Test that the named return value extension works when passed as a reference.\n+// Origin: Jason Merrill <jason@redhat.com>\n+\n+void f (int &i)\n+{\n+  i = 42;\n+}\n+\n+int g () return r\n+{\n+  f (r);\n+}\n+\n+int main ()\n+{\n+  int i = g ();\n+  return (i != 42);\n+}"}, {"sha": "fefb4da2e698ad9bec7c32fde6367658c96eec1c", "filename": "gcc/testsuite/g++.old-deja/g++.other/goto3.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87626353dfa5b0d44c91bb442b1d1d126ce53bca/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fgoto3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87626353dfa5b0d44c91bb442b1d1d126ce53bca/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fgoto3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fgoto3.C?ref=87626353dfa5b0d44c91bb442b1d1d126ce53bca", "patch": "@@ -0,0 +1,20 @@\n+// Testcase for various invalid gotos.\n+// Origin: Jason Merrill <jason@redhat.com>\n+// Build don't link:\n+\n+void f ()\n+{\n+  goto foo1;\t\t\t // ERROR - jumps\n+  try { foo1:; } catch (...) { } // ERROR - into try\n+  goto foo2;\t\t\t // ERROR - jumps\n+  try { } catch (...) { foo2:; } // ERROR - into catch\n+  goto foo3;\t\t\t // ERROR - jumps\n+  { int i=2; foo3:; }\t\t // ERROR - past init\n+\n+  try { foo4:; } catch (...) { } // ERROR - \n+  goto foo4;\t\t\t // ERROR - \n+  try { } catch (...) { foo5:; } // ERROR - \n+  goto foo5;\t\t\t // ERROR - \n+  { int i=2; foo6:; }\t\t // ERROR - \n+  goto foo6;\t\t\t // ERROR - \n+}"}, {"sha": "90a2b75cc22e48f84fd2ffe376859708de577e79", "filename": "gcc/testsuite/g++.old-deja/g++.pt/infinite1.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87626353dfa5b0d44c91bb442b1d1d126ce53bca/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Finfinite1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87626353dfa5b0d44c91bb442b1d1d126ce53bca/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Finfinite1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Finfinite1.C?ref=87626353dfa5b0d44c91bb442b1d1d126ce53bca", "patch": "@@ -0,0 +1,12 @@\n+// Test for catching infinitely recursive instantiations.\n+// Origin: Jason Merrill <jason@redhat.com>\n+\n+template <int i> void f()\n+{\n+  f<i+1>();\t\t\t// ERROR - excessive recursion\n+}\n+\n+int main()\n+{\n+  f<0>();\t\t\t// ERROR - starting here\n+}"}]}