{"sha": "1e678f69f7dc995a55d2cf0b4a10ffce88c0f776", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU2NzhmNjlmN2RjOTk1YTU1ZDJjZjBiNGExMGZmY2U4OGMwZjc3Ng==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2018-01-04T19:13:55Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2018-01-04T19:13:55Z"}, "message": "Protect second call to extract_range_from_multiplicative_op_1\n\nFollowing on from:\n\n        * tree-vrp.c (extract_range_from_multiplicative_op_1): Assert\n        for VR_RANGE only; don't allow VR_ANTI_RANGE.\n        (extract_range_from_binary_expr_1): Don't call\n        extract_range_from_multiplicative_op_1 if !range_int_cst_p.\n\nthere was a later call to extract_range_from_multiplicative_op_1 too,\nthat used a negative test for a symbolic (!is_gimple_min_invariant)\nrange rather than a positive test for an integer range.\n\n2017-11-04  Richard Sandiford  <richard.sandiford@linaro.org>\n\ngcc/\n\t* tree-vrp.c (extract_range_from_binary_expr_1): Check\n\trange_int_cst_p rather than !symbolic_range_p before calling\n\textract_range_from_multiplicative_op_1.\n\nFrom-SVN: r256262", "tree": {"sha": "f8dd5a96b205ed25febcde0f5b42ffbbf44a7a00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8dd5a96b205ed25febcde0f5b42ffbbf44a7a00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e678f69f7dc995a55d2cf0b4a10ffce88c0f776", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e678f69f7dc995a55d2cf0b4a10ffce88c0f776", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e678f69f7dc995a55d2cf0b4a10ffce88c0f776", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e678f69f7dc995a55d2cf0b4a10ffce88c0f776/comments", "author": null, "committer": null, "parents": [{"sha": "682820ccf9880204310cef67a7bfb2f9923bb702", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/682820ccf9880204310cef67a7bfb2f9923bb702", "html_url": "https://github.com/Rust-GCC/gccrs/commit/682820ccf9880204310cef67a7bfb2f9923bb702"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "b981ff42487e92f731c9a766d1dbd70405fd9ed0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e678f69f7dc995a55d2cf0b4a10ffce88c0f776/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e678f69f7dc995a55d2cf0b4a10ffce88c0f776/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e678f69f7dc995a55d2cf0b4a10ffce88c0f776", "patch": "@@ -1,3 +1,9 @@\n+2018-01-04  Richard Sandiford  <richard.sandiford@linaro.org>\n+\n+\t* tree-vrp.c (extract_range_from_binary_expr_1): Check\n+\trange_int_cst_p rather than !symbolic_range_p before calling\n+\textract_range_from_multiplicative_op_1.\n+\n 2017-01-04  Jeff Law  <law@redhat.com>\n \n \t* tree-ssa-math-opts.c (execute_cse_reciprocals_1): Remove"}, {"sha": "69762ab795e05d1c6ca3048978ef7192514e0055", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e678f69f7dc995a55d2cf0b4a10ffce88c0f776/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e678f69f7dc995a55d2cf0b4a10ffce88c0f776/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=1e678f69f7dc995a55d2cf0b4a10ffce88c0f776", "patch": "@@ -2042,7 +2042,7 @@ extract_range_from_binary_expr_1 (value_range *vr,\n \t      return;\n \t    }\n \t}\n-      else if (!symbolic_range_p (&vr0) && !symbolic_range_p (&vr1))\n+      else if (range_int_cst_p (&vr0) && range_int_cst_p (&vr1))\n \t{\n \t  extract_range_from_multiplicative_op_1 (vr, code, &vr0, &vr1);\n \t  return;"}]}