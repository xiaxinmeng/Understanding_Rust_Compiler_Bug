{"sha": "24ca97325cab7bc454c785d55f37120fe7ea6f74", "node_id": "C_kwDOANBUbNoAKDI0Y2E5NzMyNWNhYjdiYzQ1NGM3ODVkNTVmMzcxMjBmZTdlYTZmNzQ", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2022-02-16T19:30:04Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2022-02-16T20:20:10Z"}, "message": "libgo: restore building on Solaris\n\nAdd build tags and a few other changes so that libgo builds on Solaris.\n\nPatch partially from Rainer Orth.\n\nReviewed-on: https://go-review.googlesource.com/c/gofrontend/+/386215", "tree": {"sha": "0dff7e34fe65a75ba82e4a13d69991fdaea7c5eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0dff7e34fe65a75ba82e4a13d69991fdaea7c5eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24ca97325cab7bc454c785d55f37120fe7ea6f74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24ca97325cab7bc454c785d55f37120fe7ea6f74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24ca97325cab7bc454c785d55f37120fe7ea6f74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24ca97325cab7bc454c785d55f37120fe7ea6f74/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d66bd25dc84e362f56ffe66667f6c9017ba73d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d66bd25dc84e362f56ffe66667f6c9017ba73d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d66bd25dc84e362f56ffe66667f6c9017ba73d0"}], "stats": {"total": 27, "additions": 18, "deletions": 9}, "files": [{"sha": "3742414c82824ce337c30c82bf175838d0b2d77d", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24ca97325cab7bc454c785d55f37120fe7ea6f74/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24ca97325cab7bc454c785d55f37120fe7ea6f74/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=24ca97325cab7bc454c785d55f37120fe7ea6f74", "patch": "@@ -1,4 +1,4 @@\n-0af68c0552341a44f1fb12301f9eff954b9dde88\n+3742e8a154bfec805054b4ebf0809f12dc7694da\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "c935c4540cf9bbd6776f75c701f923fec1bcce4d", "filename": "libgo/go/net/fcntl_libc_test.go", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24ca97325cab7bc454c785d55f37120fe7ea6f74/libgo%2Fgo%2Fnet%2Ffcntl_libc_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24ca97325cab7bc454c785d55f37120fe7ea6f74/libgo%2Fgo%2Fnet%2Ffcntl_libc_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Ffcntl_libc_test.go?ref=24ca97325cab7bc454c785d55f37120fe7ea6f74", "patch": "@@ -6,7 +6,10 @@\n \n package net\n \n-import \"syscall\"\n+import (\n+\t\"syscall\"\n+\t_ \"unsafe\"\n+)\n \n // Use a helper function to call fcntl.  This is defined in C in\n // libgo/runtime."}, {"sha": "01c3908becf746cd7786f75e3a557d396de5657d", "filename": "libgo/go/os/signal/internal/pty/pty.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24ca97325cab7bc454c785d55f37120fe7ea6f74/libgo%2Fgo%2Fos%2Fsignal%2Finternal%2Fpty%2Fpty.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24ca97325cab7bc454c785d55f37120fe7ea6f74/libgo%2Fgo%2Fos%2Fsignal%2Finternal%2Fpty%2Fpty.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Fsignal%2Finternal%2Fpty%2Fpty.go?ref=24ca97325cab7bc454c785d55f37120fe7ea6f74", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-//go:build (aix || darwin || dragonfly || freebsd || hurd || (linux && !android) || netbsd || openbsd) && cgo\n+//go:build (aix || darwin || dragonfly || freebsd || hurd || (linux && !android) || netbsd || openbsd || solaris) && cgo\n \n // Package pty is a simple pseudo-terminal package for Unix systems,\n // implemented by calling C functions via cgo."}, {"sha": "6c825746fbc049247eefb56d29a6885d3fdd2029", "filename": "libgo/go/runtime/os3_solaris.go", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24ca97325cab7bc454c785d55f37120fe7ea6f74/libgo%2Fgo%2Fruntime%2Fos3_solaris.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24ca97325cab7bc454c785d55f37120fe7ea6f74/libgo%2Fgo%2Fruntime%2Fos3_solaris.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fos3_solaris.go?ref=24ca97325cab7bc454c785d55f37120fe7ea6f74", "patch": "@@ -36,6 +36,14 @@ func solarisExecutablePath() string {\n \treturn executablePath\n }\n \n+func setProcessCPUProfiler(hz int32) {\n+\tsetProcessCPUProfilerTimer(hz)\n+}\n+\n+func setThreadCPUProfiler(hz int32) {\n+\tsetThreadCPUProfilerHz(hz)\n+}\n+\n //go:nosplit\n func validSIGPROF(mp *m, c *sigctxt) bool {\n \treturn true"}, {"sha": "587109209d18bbc7734c25e87b7e34d608010c6e", "filename": "libgo/go/runtime/stubs2.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24ca97325cab7bc454c785d55f37120fe7ea6f74/libgo%2Fgo%2Fruntime%2Fstubs2.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24ca97325cab7bc454c785d55f37120fe7ea6f74/libgo%2Fgo%2Fruntime%2Fstubs2.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fstubs2.go?ref=24ca97325cab7bc454c785d55f37120fe7ea6f74", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-//go:build !aix && !darwin && !js && !openbsd && !plan9 && !solaris && !windows\n+//go:build !js && !plan9 && !windows\n \n package runtime\n "}, {"sha": "ff88bc45366fbd2505ad0e1bb19274ceb9027c2e", "filename": "libgo/go/syscall/exec_bsd.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24ca97325cab7bc454c785d55f37120fe7ea6f74/libgo%2Fgo%2Fsyscall%2Fexec_bsd.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24ca97325cab7bc454c785d55f37120fe7ea6f74/libgo%2Fgo%2Fsyscall%2Fexec_bsd.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fexec_bsd.go?ref=24ca97325cab7bc454c785d55f37120fe7ea6f74", "patch": "@@ -143,13 +143,13 @@ func forkAndExecInChild(argv0 *byte, argv, envv []*byte, chroot, dir *byte, attr\n \t// User and groups\n \tif cred := sys.Credential; cred != nil {\n \t\tngroups := len(cred.Groups)\n-\t\tvar groups *Gid_t\n+\t\tvar groups unsafe.Pointer\n \t\tif ngroups > 0 {\n \t\t\tgids := make([]Gid_t, ngroups)\n \t\t\tfor i, v := range cred.Groups {\n \t\t\t\tgids[i] = Gid_t(v)\n \t\t\t}\n-\t\t\tgroups = &gids[0]\n+\t\t\tgroups = unsafe.Pointer(&gids[0])\n \t\t}\n \t\tif !cred.NoSetGroups {\n \t\t\terr1 = raw_setgroups(ngroups, groups)"}, {"sha": "bd904c70f36b566cc5ab7a856a8ab82cb6218c7c", "filename": "libgo/go/syscall/export_unix_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24ca97325cab7bc454c785d55f37120fe7ea6f74/libgo%2Fgo%2Fsyscall%2Fexport_unix_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24ca97325cab7bc454c785d55f37120fe7ea6f74/libgo%2Fgo%2Fsyscall%2Fexport_unix_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fexport_unix_test.go?ref=24ca97325cab7bc454c785d55f37120fe7ea6f74", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-//go:build dragonfly || freebsd || hurd || linux || netbsd || openbsd\n+//go:build dragonfly || freebsd || hurd || linux || netbsd || openbsd || solaris\n \n package syscall\n "}, {"sha": "673ba8223fc8fef58a00a7fe47d0af6c4be5002a", "filename": "libgo/go/syscall/syscall_solaris.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24ca97325cab7bc454c785d55f37120fe7ea6f74/libgo%2Fgo%2Fsyscall%2Fsyscall_solaris.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24ca97325cab7bc454c785d55f37120fe7ea6f74/libgo%2Fgo%2Fsyscall%2Fsyscall_solaris.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fsyscall_solaris.go?ref=24ca97325cab7bc454c785d55f37120fe7ea6f74", "patch": "@@ -6,8 +6,6 @@ package syscall\n \n import \"unsafe\"\n \n-const _F_DUP2FD_CLOEXEC = F_DUP2FD_CLOEXEC\n-\n func (ts *Timestruc) Unix() (sec int64, nsec int64) {\n \treturn int64(ts.Sec), int64(ts.Nsec)\n }"}]}