{"sha": "60f761c7e54f96a287c73a71d0b09ee2b2f8426d", "node_id": "C_kwDOANBUbNoAKDYwZjc2MWM3ZTU0Zjk2YTI4N2M3M2E3MWQwYjA5ZWUyYjJmODQyNmQ", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2021-11-12T17:04:43Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2021-11-13T00:45:06Z"}, "message": "libstdc++: Use GCC_TRY_COMPILE_OR_LINK for getentropy, arc4random\n\nSince r12-5056-g3439657b0286, there has been a regression in\ntest results; an additional 100 FAILs running the g++ and\nlibstdc++ testsuite on cris-elf, a newlib target.  The\nfailures are linker errors, not finding a definition for\ngetentropy.  It appears newlib has since 2017-12-03\ndeclarations of getentropy and arc4random, and provides an\nimplementation of arc4random using getentropy, but provides no\ndefinition of getentropy, not even a stub yielding ENOSYS.\nThis is similar to what it does for many other functions too.\n\nWhile fixing newlib (like adding said stub) would likely help,\nit still leaves older newlib releases hanging.  Thankfully,\nthe libstdc++ configury test can be improved to try linking\nwhere possible; using the bespoke GCC_TRY_COMPILE_OR_LINK\ninstead of AC_TRY_COMPILE.  BTW, I see a lack of consistency;\nsome tests use AC_TRY_COMPILE and some GCC_TRY_COMPILE_OR_LINK\nfor no apparent reason, but this commit just amends\nr12-5056-g3439657b0286.\n\nlibstdc++-v3:\n\tPR libstdc++/103166\n\t* acinclude.m4 (GLIBCXX_CHECK_GETENTROPY, GLIBCXX_CHECK_ARC4RANDOM):\n\tUse GCC_TRY_COMPILE_OR_LINK instead of AC_TRY_COMPILE.\n\t* configure: Regenerate.", "tree": {"sha": "8461c3a2b71c485eacc27ee6af8c0fa38e2b19ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8461c3a2b71c485eacc27ee6af8c0fa38e2b19ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60f761c7e54f96a287c73a71d0b09ee2b2f8426d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60f761c7e54f96a287c73a71d0b09ee2b2f8426d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60f761c7e54f96a287c73a71d0b09ee2b2f8426d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60f761c7e54f96a287c73a71d0b09ee2b2f8426d/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af2852b9dc3b1d9ef20d72d20de5a2f7938b87b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af2852b9dc3b1d9ef20d72d20de5a2f7938b87b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af2852b9dc3b1d9ef20d72d20de5a2f7938b87b3"}], "stats": {"total": 57, "additions": 53, "deletions": 4}, "files": [{"sha": "30bd92d37f236ee0fbec757df75004e02df197eb", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f761c7e54f96a287c73a71d0b09ee2b2f8426d/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f761c7e54f96a287c73a71d0b09ee2b2f8426d/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=60f761c7e54f96a287c73a71d0b09ee2b2f8426d", "patch": "@@ -4839,7 +4839,7 @@ AC_DEFUN([GLIBCXX_CHECK_GETENTROPY], [\n   AC_LANG_CPLUSPLUS\n   AC_MSG_CHECKING([for getentropy])\n   AC_CACHE_VAL(glibcxx_cv_getentropy, [\n-      AC_TRY_COMPILE(\n+      GCC_TRY_COMPILE_OR_LINK(\n \t[#include <unistd.h>],\n \t[unsigned i;\n \t ::getentropy(&i, sizeof(i));],\n@@ -4862,7 +4862,7 @@ AC_DEFUN([GLIBCXX_CHECK_ARC4RANDOM], [\n   AC_LANG_CPLUSPLUS\n   AC_MSG_CHECKING([for arc4random])\n   AC_CACHE_VAL(glibcxx_cv_arc4random, [\n-      AC_TRY_COMPILE(\n+      GCC_TRY_COMPILE_OR_LINK(\n \t[#include <stdlib.h>],\n \t[unsigned i = ::arc4random();],\n \t[glibcxx_cv_arc4random=yes], [glibcxx_cv_arc4random=no])"}, {"sha": "3eb391f409f269cfcd16cdc02957a1bbb20dd73f", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 51, "deletions": 2, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f761c7e54f96a287c73a71d0b09ee2b2f8426d/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f761c7e54f96a287c73a71d0b09ee2b2f8426d/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=60f761c7e54f96a287c73a71d0b09ee2b2f8426d", "patch": "@@ -75445,7 +75445,8 @@ $as_echo_n \"checking for getentropy... \" >&6; }\n   $as_echo_n \"(cached) \" >&6\n else\n \n-      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+      if test x$gcc_no_link = xyes; then\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n #include <unistd.h>\n int\n@@ -75463,6 +75464,30 @@ else\n   glibcxx_cv_getentropy=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+else\n+  if test x$gcc_no_link = xyes; then\n+  as_fn_error $? \"Link tests are not allowed after GCC_NO_EXECUTABLES.\" \"$LINENO\" 5\n+fi\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <unistd.h>\n+int\n+main ()\n+{\n+unsigned i;\n+\t ::getentropy(&i, sizeof(i));\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_cxx_try_link \"$LINENO\"; then :\n+  glibcxx_cv_getentropy=yes\n+else\n+  glibcxx_cv_getentropy=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+fi\n \n fi\n \n@@ -75496,7 +75521,8 @@ $as_echo_n \"checking for arc4random... \" >&6; }\n   $as_echo_n \"(cached) \" >&6\n else\n \n-      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+      if test x$gcc_no_link = xyes; then\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n #include <stdlib.h>\n int\n@@ -75513,6 +75539,29 @@ else\n   glibcxx_cv_arc4random=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+else\n+  if test x$gcc_no_link = xyes; then\n+  as_fn_error $? \"Link tests are not allowed after GCC_NO_EXECUTABLES.\" \"$LINENO\" 5\n+fi\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <stdlib.h>\n+int\n+main ()\n+{\n+unsigned i = ::arc4random();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_cxx_try_link \"$LINENO\"; then :\n+  glibcxx_cv_arc4random=yes\n+else\n+  glibcxx_cv_arc4random=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+fi\n \n fi\n "}]}