{"sha": "d78228927a11ae81ec31107f36ef9536b9e483e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc4MjI4OTI3YTExYWU4MWVjMzExMDdmMzZlZjk1MzZiOWU0ODNlMQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-05-08T13:26:02Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-05-08T13:26:02Z"}, "message": "ChangeLog: Whitespace fixes.\n\n\t* ChangeLog: Whitespace fixes.\n\t* testsuite/Changelog: Ditto.\n\nFrom-SVN: r135081", "tree": {"sha": "4babfb802069b203e95df8389da418263a17b15c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4babfb802069b203e95df8389da418263a17b15c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d78228927a11ae81ec31107f36ef9536b9e483e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d78228927a11ae81ec31107f36ef9536b9e483e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d78228927a11ae81ec31107f36ef9536b9e483e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d78228927a11ae81ec31107f36ef9536b9e483e1/comments", "author": null, "committer": null, "parents": [{"sha": "e8d6aaee64a7302901510db5646f1cff2284d95c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8d6aaee64a7302901510db5646f1cff2284d95c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8d6aaee64a7302901510db5646f1cff2284d95c"}], "stats": {"total": 194, "additions": 97, "deletions": 97}, "files": [{"sha": "fcf9e3d074e351cdf992b5c2053f454f95fb068f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 90, "deletions": 94, "changes": 184, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78228927a11ae81ec31107f36ef9536b9e483e1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78228927a11ae81ec31107f36ef9536b9e483e1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d78228927a11ae81ec31107f36ef9536b9e483e1", "patch": "@@ -12,12 +12,12 @@\n \n 2008-05-08  Kai Tietz  <kai.tietz@onevision.com>\n \n-\tPR/36180\n+\tPR bootstrap/36180\n \t* calls.c (compute_argument_block_size ): Add ATTRIBUTE_UNUSED to\n \tfndecl argument.\n-\t(emit_library_call_value_1): Add ATTRIBUTE_UNUSED to variable\n-\tfndecl.\n-\t* target-def.h: Check that TARGET_RETURN_IN_MEMORY isn't declared in front.\n+\t(emit_library_call_value_1): Add ATTRIBUTE_UNUSED to variable fndecl.\n+\t* target-def.h: Check that TARGET_RETURN_IN_MEMORY isn't\n+\tdeclared in front.\n \n 2008-05-08  Richard Guenther  <rguenther@suse.de>\n \n@@ -103,7 +103,6 @@\n 2008-05-08  Sa Liu  <saliu@de.ibm.com>\n \n \t* config/spu/spu.md: Fixed subti3 pattern.\n-\t* testsuite/gcc.target/spu/subti3.c: New.\n \n 2008-05-08  Richard Guenther  <rguenther@suse.de>\n \n@@ -117,7 +116,7 @@\n \t* fold-const.c (operand_equal_p): Two objects which types\n \tdiffer in pointerness are not equal.\n \n-2008-05-08  Kai Tietz  <kai,tietz@onevision.com>\n+2008-05-08  Kai Tietz  <kai.tietz@onevision.com>\n \n \t* calls.c (compute_argument_block_size): Add argument tree fndecl.\n \t(OUTGOING_REG_PARM_STACK_SPACE): Add function type argument.\n@@ -135,8 +134,7 @@\n \t* config/i386/sysv4.h: Likewise.\n \t* config/i386/vx-common.h: Likewise.\n \t* config/cris/cris.h: Removed #if 0 clause.\n-\t* config/arm/arm-protos.h (arm_return_in_memory): Add fntype\n-\targument.\n+\t* config/arm/arm-protos.h (arm_return_in_memory): Add fntype argument.\n \t* config/i386/i386-protos.h (ix86_return_in_memory): Add fntype\n \targument.\n \t(ix86_sol10_return_in_memory): Likewise.\n@@ -162,7 +160,8 @@\n \t* config/v850/v850.h: Likewise.\n \t* defaults.h: Likewise.\n \t* doc/tm.texi (OUTGOING_REG_PARM_STACK_SPACE): Adjust documentation.\n-\t* expr.c (emit_block_move): Adjust use of OUTGOING_REG_PARM_STACK_SPACE.\n+\t* expr.c (emit_block_move): Adjust use of\n+\tOUTGOING_REG_PARM_STACK_SPACE.\n \t* function.c (STACK_DYNAMIC_OFFSET): Adjust use of\n \tOUTGOING_REG_PARM_STACK_SPACE.\n \t* targhooks.c (default_return_in_memory): Remove RETURN_IN_MEMORY.\n@@ -180,91 +179,88 @@\n \n 2008-05-07  Kenneth Zadeck  <zadeck@naturalbridge.com>\n \n-        PATCH rtl/7335\n-        PATCH rtl/33826\n-        * see.c (see_copy_insn): Copy new pure const attributes for new\n-        call.\n-        * c-decl.c (merge_decls): Ditto.\n-        * postreload.c (record_opr_changes): Change CONST_OR_PURE_CALL_P\n-        to RTL_CONST_OR_PURE_CALL_P.\n-        * tree.c (define_local_buitin): Rename DECL_IS_PURE to\n-        DECL_PURE_P.  Initialized DECL_LOOPING_CONST_PURE.\n-        (process_call_operands): Set tree_side_effects properly.\n-        * tree.h (TREE_READONLY_DECL_P): Removed.\n-        (DECL_IS_PURE): Renamed to DECL_PURE_P.\n-        (DECL_LOOPING_OR_CONST_P): New macro.\n-        (struct tree_function_decl): Added looping_const_or_pure_p.\n-        (ECF_*) Renumbered.\n-        (ECF_LOOPING_OR_CONST_P): New macro,\n-        * rtlanal.c (pure_const_p): Removed.\n-        * builtins.c (expand_builtin): Rename DECL_IS_PURE to DECL_PURE_P.\n-        * reorg.c (delete_prior_computation) Changed CONST_OR_PURE_CALL_P\n-        to RTL_CONST_CALL_P.\n-        * ipa-pure-const.c (pure_const_state_e): Added looping field.\n-        (check_decl, check_tree, check_call, scan_function): Initialize\n-        looping.\n-        (analyze_function): Rename DECL_IS_PURE to DECL_PURE_P.\n-        (static_execute): Set looping true for recursive functions.\n-        Undo setting state to IPA_NEITHER for recursive functions.\n-        * cse.c (cse_insn): \n-        * ifcvt.c (noce_can_store_speculate_p): Changed\n-        CONST_OR_PURE_CALL_P and pure_call_p to RTL_CONST_CALL_P or \n-        RTL_CONST_OR_PURE_CALL_P.\n-        * dse.c (scan_insn): Ditto.\n-        * local-alloc.c (validate_equiv_mem, memref_used_between_p): Ditto.\n-        * gcse.c (oprs_not_seen_p) Changed CONST_OR_PURE_CALL_P to\n-        RTL_CONST_OR_PURE_CALL_P.\n-        (store_killed_in_insn): Changed CONST_OR_PURE_CALL_P and\n-        pure_call_p to RTL_CONST_CALL_P.\n-        * gimplify.c (gimplify_call_expr): Clear side effects for\n-        non-looping pure and constant calls.\n-        * calls.c (emit_call_1): Set rtl flags from ecf flags.\n-        (flags_from_decl_or_type): Set ecf flags from decl flags.\n-        (initialize_argument_information): Turn off\n-        ECF_LOOPING_CONST_OR_PURE when turning off ECF_CONST.\n-        Change const to pure if callee_copies is true rather than just\n-        turning off const.\n-        (expand_call): Turn off ECF_LOOPING_PURE_CONST_CALL and remove old\n-        way of marking pure calls.\n-        (emit_library_call_value_1): Turn off ECF_LOOPING_PURE_CONST_CALL.\n-        Remove hack that was supposed to fix pr7335 and remove old\n-        way of marking pure calls.\n-        * emit-rtl.c (emit_copy_of_insn_after): Copy RTL_CONST_CALL_P,\n-        RTL_PURE_CALL_P, RTL_LOOPING_CONST_OR_PURE_CALL_P.\n-        * cselib.c (cselib_process_insn): Changed CONST_OR_PURE_CALL_P to\n-        RTL_CONST_OR_PURE_CALL_P.\n-        * tree-ssa-pre.c (can_value_number_call): Fixed spacing.\n-        * loop-invariant.c (find_exits, find_invariant_bb): Changed\n-        CONST_OR_PURE_CALL_P to RTL_CONST_OR_PURE_CALL_P.\n-        * sched-deps.c (schedule_analyze): Ditto.\n-        * rtl.h (struct rtx_def): Use call field, unchanging field, and\n-        return_val field of calls to represent pure and const function\n-        info.\n-        (CONST_OR_PURE_CALL_P): Deleted macro.\n-        (RTL_CONST_CALL_P, RTL_PURE_CALL_P,\n-        RTL_LOOPING_CONST_OR_PURE_CALL_P, RTL_CONST_OR_PURE_P): New macros.\n-        * tree-inline.c (copy_body_r): Changed TREE_READONLY_DECL_P to\n-        TREE_READONLY.\n-        * tree-optimize.c (execute_fixup_cfg): Added test for\n-        ECF_LOOPING_CONST_OR_PURE.\n-        * c-common.c (handle_pure_attribute): Changed DECL_IS_PURE to\n-        DECL_PURE_P.\n-        * tree-cfg.c (update_call_expr_flags): Do not clear tree side\n-        effects for looping pure or const calls.\n-        (verify_gimple_expr): Added verification code. \n-        * config/alpha/alpha.c (alpha_legitimize_address,\n-        alpha_emit_xfloating_libcall): Changed CONST_OR_PURE_CALL_P to\n-        RTL_CONST_CALL_P.\n-        * config/s390/s390.c (s390_emit_tls_call_insn): Ditto.\n-        * config/rs6000/rs6000.c (rs6000_legitimize_tls_address): Ditto.\n-        * config/mips/mips.c (mips_call_tls_get_addr): Ditto.\n-        * cfgrtl.c (need_fake_edge_p): Changed CONST_OR_PURE_CALL_P to\n-        RTL_CONST_OR_PURE_CALL_P.\n-        * dce.c (deletable_insn_p): Allow non looping, non sibling, pure\n-        and const calls to be deleted.\n-\n-\n-2008-05-08  Uros Bizjak  <ubizjak@gmail.com>\n+\tPR rtl/7335\n+\tPR rtl/33826\n+\t* see.c (see_copy_insn): Copy new pure const attributes for new call.\n+\t* c-decl.c (merge_decls): Ditto.\n+\t* postreload.c (record_opr_changes): Change CONST_OR_PURE_CALL_P\n+\tto RTL_CONST_OR_PURE_CALL_P.\n+\t* tree.c (define_local_buitin): Rename DECL_IS_PURE to DECL_PURE_P.\n+\tInitialized DECL_LOOPING_CONST_PURE.\n+\t(process_call_operands): Set tree_side_effects properly.\n+\t* tree.h (TREE_READONLY_DECL_P): Removed.\n+\t(DECL_IS_PURE): Renamed to DECL_PURE_P.\n+\t(DECL_LOOPING_OR_CONST_P): New macro.\n+\t(struct tree_function_decl): Added looping_const_or_pure_p.\n+\t(ECF_*) Renumbered.\n+\t(ECF_LOOPING_OR_CONST_P): New macro.\n+\t* rtlanal.c (pure_const_p): Removed.\n+\t* builtins.c (expand_builtin): Rename DECL_IS_PURE to DECL_PURE_P.\n+\t* reorg.c (delete_prior_computation) Changed CONST_OR_PURE_CALL_P\n+\tto RTL_CONST_CALL_P.\n+\t* ipa-pure-const.c (pure_const_state_e): Added looping field.\n+\t(check_decl, check_tree, check_call, scan_function): Initialize\n+\tlooping.\n+\t(analyze_function): Rename DECL_IS_PURE to DECL_PURE_P.\n+\t(static_execute): Set looping true for recursive functions.\n+\tUndo setting state to IPA_NEITHER for recursive functions.\n+\t* cse.c (cse_insn): \n+\t* ifcvt.c (noce_can_store_speculate_p): Changed\n+\tCONST_OR_PURE_CALL_P and pure_call_p to RTL_CONST_CALL_P or \n+\tRTL_CONST_OR_PURE_CALL_P.\n+\t* dse.c (scan_insn): Ditto.\n+\t* local-alloc.c (validate_equiv_mem, memref_used_between_p): Ditto.\n+\t* gcse.c (oprs_not_seen_p) Changed CONST_OR_PURE_CALL_P to\n+\tRTL_CONST_OR_PURE_CALL_P.\n+\t(store_killed_in_insn): Changed CONST_OR_PURE_CALL_P and\n+\tpure_call_p to RTL_CONST_CALL_P.\n+\t* gimplify.c (gimplify_call_expr): Clear side effects for\n+\tnon-looping pure and constant calls.\n+\t* calls.c (emit_call_1): Set rtl flags from ecf flags.\n+\t(flags_from_decl_or_type): Set ecf flags from decl flags.\n+\t(initialize_argument_information): Turn off\n+\tECF_LOOPING_CONST_OR_PURE when turning off ECF_CONST.\n+\tChange const to pure if callee_copies is true rather than just\n+\tturning off const.\n+\t(expand_call): Turn off ECF_LOOPING_PURE_CONST_CALL and remove old\n+\tway of marking pure calls.\n+\t(emit_library_call_value_1): Turn off ECF_LOOPING_PURE_CONST_CALL.\n+\tRemove hack that was supposed to fix pr7335 and remove old\n+\tway of marking pure calls.\n+\t* emit-rtl.c (emit_copy_of_insn_after): Copy RTL_CONST_CALL_P,\n+\tRTL_PURE_CALL_P, RTL_LOOPING_CONST_OR_PURE_CALL_P.\n+\t* cselib.c (cselib_process_insn): Changed CONST_OR_PURE_CALL_P to\n+\tRTL_CONST_OR_PURE_CALL_P.\n+\t* tree-ssa-pre.c (can_value_number_call): Fixed spacing.\n+\t* loop-invariant.c (find_exits, find_invariant_bb): Changed\n+\tCONST_OR_PURE_CALL_P to RTL_CONST_OR_PURE_CALL_P.\n+\t* sched-deps.c (schedule_analyze): Ditto.\n+\t* rtl.h (struct rtx_def): Use call field, unchanging field, and\n+\treturn_val field of calls to represent pure and const function info.\n+\t(CONST_OR_PURE_CALL_P): Deleted macro.\n+\t(RTL_CONST_CALL_P, RTL_PURE_CALL_P,\n+\tRTL_LOOPING_CONST_OR_PURE_CALL_P, RTL_CONST_OR_PURE_P): New macros.\n+\t* tree-inline.c (copy_body_r): Changed TREE_READONLY_DECL_P to\n+\tTREE_READONLY.\n+\t* tree-optimize.c (execute_fixup_cfg): Added test for\n+\tECF_LOOPING_CONST_OR_PURE.\n+\t* c-common.c (handle_pure_attribute): Changed DECL_IS_PURE to\n+\tDECL_PURE_P.\n+\t* tree-cfg.c (update_call_expr_flags): Do not clear tree side\n+\teffects for looping pure or const calls.\n+\t(verify_gimple_expr): Added verification code. \n+\t* config/alpha/alpha.c (alpha_legitimize_address,\n+\talpha_emit_xfloating_libcall): Changed CONST_OR_PURE_CALL_P to\n+\tRTL_CONST_CALL_P.\n+\t* config/s390/s390.c (s390_emit_tls_call_insn): Ditto.\n+\t* config/rs6000/rs6000.c (rs6000_legitimize_tls_address): Ditto.\n+\t* config/mips/mips.c (mips_call_tls_get_addr): Ditto.\n+\t* cfgrtl.c (need_fake_edge_p): Changed CONST_OR_PURE_CALL_P to\n+\tRTL_CONST_OR_PURE_CALL_P.\n+\t* dce.c (deletable_insn_p): Allow non looping, non sibling, pure\n+\tand const calls to be deleted.\n+\n+2008-05-07  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/35714\n \t* config/i386/mmx.md (mmx_subv2sf3): New expander."}, {"sha": "3106bfbffb9a509781638952c270c41f3974c589", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78228927a11ae81ec31107f36ef9536b9e483e1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78228927a11ae81ec31107f36ef9536b9e483e1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d78228927a11ae81ec31107f36ef9536b9e483e1", "patch": "@@ -1,7 +1,11 @@\n 2008-05-08  Kai Tietz  <kai.tietz@onevision.com>\n \n-        * gcc.c-torture/compile/pr36172.c: Replace unsigned long by\n-        __SIZE_TYPE__.\n+\t* gcc.c-torture/compile/pr36172.c: Replace unsigned long by\n+\t__SIZE_TYPE__.\n+\n+2008-05-08  Sa Liu  <saliu@de.ibm.com>\n+\n+\t* testsuite/gcc.target/spu/subti3.c: New.\n \n 2008-05-08  Richard Guenther  <rguenther@suse.de>\n \n@@ -29,7 +33,7 @@\n 2008-05-06  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/34974\n-\tgfortran.dg/fmt_t_7.f: XFAIL this until we get issue resolved.\n+\t* gfortran.dg/fmt_t_7.f: XFAIL this until we get issue resolved.\n \n 2008-05-06  H.J. Lu  <hongjiu.lu@intel.com>\n "}]}