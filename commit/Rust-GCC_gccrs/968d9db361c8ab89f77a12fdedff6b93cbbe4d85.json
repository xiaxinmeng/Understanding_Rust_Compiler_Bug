{"sha": "968d9db361c8ab89f77a12fdedff6b93cbbe4d85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY4ZDlkYjM2MWM4YWI4OWY3N2ExMmZkZWRmZjZiOTNjYmJlNGQ4NQ==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2007-12-13T10:32:56Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-12-13T10:32:56Z"}, "message": "sinput.adb (Get_Source_File_Index): Add assertion to guard against an invalid access to an uninitialized slot in...\n\n2007-12-06  Thomas Quinot  <quinot@adacore.com>\n\n\t* sinput.adb (Get_Source_File_Index): Add assertion to guard against\n\tan invalid access to an uninitialized slot in the\n\tSource_File_Index_Table.\n\nFrom-SVN: r130860", "tree": {"sha": "aee396e06b162d38463f8a0c90e42ccb324f15f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aee396e06b162d38463f8a0c90e42ccb324f15f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/968d9db361c8ab89f77a12fdedff6b93cbbe4d85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/968d9db361c8ab89f77a12fdedff6b93cbbe4d85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/968d9db361c8ab89f77a12fdedff6b93cbbe4d85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/968d9db361c8ab89f77a12fdedff6b93cbbe4d85/comments", "author": null, "committer": null, "parents": [{"sha": "7f0e4cdb55e96a7ca4ed9b39b6881f27de56e6e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f0e4cdb55e96a7ca4ed9b39b6881f27de56e6e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f0e4cdb55e96a7ca4ed9b39b6881f27de56e6e7"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "bafde45281e826cf9af85ec7f1686184ee4ccbd3", "filename": "gcc/ada/sinput.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/968d9db361c8ab89f77a12fdedff6b93cbbe4d85/gcc%2Fada%2Fsinput.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/968d9db361c8ab89f77a12fdedff6b93cbbe4d85/gcc%2Fada%2Fsinput.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput.adb?ref=968d9db361c8ab89f77a12fdedff6b93cbbe4d85", "patch": "@@ -366,22 +366,22 @@ package body Sinput is\n    Source_Cache_First : Source_Ptr := 1;\n    Source_Cache_Last  : Source_Ptr := 0;\n    --  Records the First and Last subscript values for the most recently\n-   --  referenced entry in the source table, to optimize the common case\n-   --  of repeated references to the same entry. The initial values force\n-   --  an initial search to set the cache value.\n+   --  referenced entry in the source table, to optimize the common case of\n+   --  repeated references to the same entry. The initial values force an\n+   --  initial search to set the cache value.\n \n    Source_Cache_Index : Source_File_Index := No_Source_File;\n    --  Contains the index of the entry corresponding to Source_Cache\n \n-   function Get_Source_File_Index\n-     (S    : Source_Ptr)\n-      return Source_File_Index\n-   is\n+   function Get_Source_File_Index (S : Source_Ptr) return Source_File_Index is\n    begin\n       if S in Source_Cache_First .. Source_Cache_Last then\n          return Source_Cache_Index;\n \n       else\n+         pragma Assert (Source_File_Index_Table (Int (S) / Chunk_Size)\n+                          /=\n+                        No_Source_File);\n          for J in Source_File_Index_Table (Int (S) / Chunk_Size)\n                                                     .. Source_File.Last\n          loop\n@@ -811,7 +811,7 @@ package body Sinput is\n          begin\n             --  For the instantiation case, we do not read in any data. Instead\n             --  we share the data for the generic template entry. Since the\n-            --  template always occurs first, we can safetly refer to its data.\n+            --  template always occurs first, we can safely refer to its data.\n \n             if S.Instantiation /= No_Location then\n                declare"}]}