{"sha": "2c59df99351b3830faa898c52f3e639bfb3a9375", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM1OWRmOTkzNTFiMzgzMGZhYTg5OGM1MmYzZTYzOWJmYjNhOTM3NQ==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@waitaki.otago.ac.nz", "date": "2002-03-10T03:56:38Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2002-03-10T03:56:38Z"}, "message": "ImageMediaEntry: Removed.\n\n\t* java/awt/ImageMediaEntry: Removed.\n\t* java/awt/MediaEntry: Removed.\n\nFrom-SVN: r50524", "tree": {"sha": "a9d181bc694f2828491a477cc370dd3d179e0aa2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9d181bc694f2828491a477cc370dd3d179e0aa2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c59df99351b3830faa898c52f3e639bfb3a9375", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c59df99351b3830faa898c52f3e639bfb3a9375", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c59df99351b3830faa898c52f3e639bfb3a9375", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c59df99351b3830faa898c52f3e639bfb3a9375/comments", "author": null, "committer": null, "parents": [{"sha": "4559716751fbd3424466237af54537ed96a428c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4559716751fbd3424466237af54537ed96a428c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4559716751fbd3424466237af54537ed96a428c3"}], "stats": {"total": 208, "additions": 5, "deletions": 203}, "files": [{"sha": "c03384e230376156a99a330d9638680823fcbe71", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c59df99351b3830faa898c52f3e639bfb3a9375/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c59df99351b3830faa898c52f3e639bfb3a9375/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=2c59df99351b3830faa898c52f3e639bfb3a9375", "patch": "@@ -1,3 +1,8 @@\n+2002-03-09  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n+\n+\t* java/awt/ImageMediaEntry: Removed.\n+\t* java/awt/MediaEntry: Removed.\n+\n 2002-03-09  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n \n \tHashtable synchronization for PowerPC."}, {"sha": "6ca0f02842ad5ee51a5afb1e6443ffc013cf9ff5", "filename": "libjava/java/awt/ImageMediaEntry.java", "status": "removed", "additions": 0, "deletions": 86, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4559716751fbd3424466237af54537ed96a428c3/libjava%2Fjava%2Fawt%2FImageMediaEntry.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4559716751fbd3424466237af54537ed96a428c3/libjava%2Fjava%2Fawt%2FImageMediaEntry.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FImageMediaEntry.java?ref=4559716751fbd3424466237af54537ed96a428c3", "patch": "@@ -1,86 +0,0 @@\n-/* ImageMediaEntry.java -- A media entry type for images.\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n-02111-1307 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-\n-package java.awt;\n-\n-import java.awt.image.ImageObserver;\n-import java.io.Serializable;\n-\n-/**\n-  * A concrete MediaEntry subtype for images.\n-  *\n-  * @author Aaron M. Renn (arenn@urbanophile.com)\n-  */\n-class ImageMediaEntry extends MediaEntry implements ImageObserver,\n-                                                                 Serializable\n-{\n-\n-private Image image;\n-private int width;\n-private int height;\n-\n-ImageMediaEntry(MediaTracker tracker, Image image, int ID, int width, int height)\n-{\n-  super(tracker, ID);\n-  this.image = image;\n-  this.width = width;\n-  this.height = height; \n-}\n-\n-public Object\n-getMedia()\n-{\n-  return(image.getSource()); // FIXME: Is this really right?\n-}\n-\n-public void\n-startLoad()\n-{\n-  int status = getStatus();\n-//  status |= MediaEntry.LOADSTARTED;\n-}\n-\n-public boolean\n-imageUpdate(Image image, int flags, int x, int y, int width, int height)\n-{\n-  // implement me\n-  return true;\n-}\n-\n-} // class ImageMediaEntry\n-"}, {"sha": "edff9320568dee5430e7d66699227fcaac51219b", "filename": "libjava/java/awt/MediaEntry.java", "status": "removed", "additions": 0, "deletions": 117, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4559716751fbd3424466237af54537ed96a428c3/libjava%2Fjava%2Fawt%2FMediaEntry.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4559716751fbd3424466237af54537ed96a428c3/libjava%2Fjava%2Fawt%2FMediaEntry.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FMediaEntry.java?ref=4559716751fbd3424466237af54537ed96a428c3", "patch": "@@ -1,117 +0,0 @@\n-/* MediaEntry.java -- An entry in a MediaTracker\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n-02111-1307 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-\n-package java.awt;\n-\n-/**\n-  * This is an entry in the media tracker\n-  *\n-  * @author Aaron M. Renn (arenn@urbanophile.com)\n-  */\n-abstract class MediaEntry implements java.io.Serializable\n-{\n-\n-protected static final int LOADING = 1;\n-protected static final int ABORTED = 2;\n-protected static final int ERRORED = 4;\n-protected static final int COMPLETE = 8;\n-protected static final int LOADSTARTED = 16;\n-protected static final int DONE = 32;\n-\n-private MediaTracker tracker;\n-private int ID;\n-private int status;\n-private boolean cancelled;\n-private MediaEntry next;\n-\n-static MediaEntry\n-insert(MediaEntry a, MediaEntry b)\n-{\n-  while (a.next != null)\n-    a = a.next;\n-\n-  a.next = b;\n-  return(b);\n-}\n-\n-MediaEntry(MediaTracker tracker, int ID)\n-{\n-  this.tracker = tracker;\n-  this.ID = ID;\n-}\n-\n-public int\n-getID()\n-{\n-  return(ID);\n-}\n-\n-public int\n-getStatus()\n-{\n-  return(status);\n-}\n-\n-public void\n-setStatus(int status)\n-{\n-  this.status = status;\n-}\n-\n-public MediaEntry\n-getNext()\n-{\n-  return(next);\n-}\n-\n-public void\n-cancel()\n-{\n-  cancelled = true;\n-  if ((status == LOADING) || (status == LOADSTARTED))\n-    setStatus(ABORTED);\n-}\n-\n-abstract void\n-startLoad();\n-\n-abstract Object\n-getMedia();\n-\n-} // class MediaEntry \n-"}]}