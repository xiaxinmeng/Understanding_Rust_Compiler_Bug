{"sha": "f92d99c60b5001d88f09742eec97b4ddbeefb978", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjkyZDk5YzYwYjUwMDFkODhmMDk3NDJlZWM5N2I0ZGRiZWVmYjk3OA==", "commit": {"author": {"name": "Vadim Godunko", "email": "godunko@adacore.com", "date": "2014-11-20T14:32:50Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-11-20T14:32:50Z"}, "message": "2014-11-20  Vadim Godunko  <godunko@adacore.com>\n\n\t* a-strunb-shared.adb, a-stwiun-shared.adb, a-stzunb-shared.adb\n\t(\"&\") Use already computed value of data length to call allocation\n\tsubprogram.\n\nFrom-SVN: r217860", "tree": {"sha": "3d970030322587c214b8dd73dabe30459415a929", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d970030322587c214b8dd73dabe30459415a929"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f92d99c60b5001d88f09742eec97b4ddbeefb978", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f92d99c60b5001d88f09742eec97b4ddbeefb978", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f92d99c60b5001d88f09742eec97b4ddbeefb978", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f92d99c60b5001d88f09742eec97b4ddbeefb978/comments", "author": {"login": "godunko", "id": 23206960, "node_id": "MDQ6VXNlcjIzMjA2OTYw", "avatar_url": "https://avatars.githubusercontent.com/u/23206960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/godunko", "html_url": "https://github.com/godunko", "followers_url": "https://api.github.com/users/godunko/followers", "following_url": "https://api.github.com/users/godunko/following{/other_user}", "gists_url": "https://api.github.com/users/godunko/gists{/gist_id}", "starred_url": "https://api.github.com/users/godunko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/godunko/subscriptions", "organizations_url": "https://api.github.com/users/godunko/orgs", "repos_url": "https://api.github.com/users/godunko/repos", "events_url": "https://api.github.com/users/godunko/events{/privacy}", "received_events_url": "https://api.github.com/users/godunko/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e61fc983890efb7dee953334a7eef5d7b0626a06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e61fc983890efb7dee953334a7eef5d7b0626a06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e61fc983890efb7dee953334a7eef5d7b0626a06"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "d5473a1c4d8f6b01961eaddb07e1b162d1bd1814", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f92d99c60b5001d88f09742eec97b4ddbeefb978/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f92d99c60b5001d88f09742eec97b4ddbeefb978/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f92d99c60b5001d88f09742eec97b4ddbeefb978", "patch": "@@ -1,3 +1,9 @@\n+2014-11-20  Vadim Godunko  <godunko@adacore.com>\n+\n+\t* a-strunb-shared.adb, a-stwiun-shared.adb, a-stzunb-shared.adb\n+\t(\"&\") Use already computed value of data length to call allocation\n+\tsubprogram.\n+\n 2014-11-20  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_ch6.adb (Expand_Call, Inlined_Subprogram): Do not suppress"}, {"sha": "9c9246600e7201ac45d9e0df6e468d572bf3c4ad", "filename": "gcc/ada/a-strunb-shared.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f92d99c60b5001d88f09742eec97b4ddbeefb978/gcc%2Fada%2Fa-strunb-shared.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f92d99c60b5001d88f09742eec97b4ddbeefb978/gcc%2Fada%2Fa-strunb-shared.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strunb-shared.adb?ref=f92d99c60b5001d88f09742eec97b4ddbeefb978", "patch": "@@ -91,7 +91,7 @@ package body Ada.Strings.Unbounded is\n       --  Otherwise, allocate new shared string and fill data\n \n       else\n-         DR := Allocate (LR.Last + RR.Last);\n+         DR := Allocate (DL);\n          DR.Data (1 .. LR.Last) := LR.Data (1 .. LR.Last);\n          DR.Data (LR.Last + 1 .. DL) := RR.Data (1 .. RR.Last);\n          DR.Last := DL;"}, {"sha": "284ffd3cf9e92effb14d7db979c944fb0eaab5b0", "filename": "gcc/ada/a-stwiun-shared.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f92d99c60b5001d88f09742eec97b4ddbeefb978/gcc%2Fada%2Fa-stwiun-shared.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f92d99c60b5001d88f09742eec97b4ddbeefb978/gcc%2Fada%2Fa-stwiun-shared.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwiun-shared.adb?ref=f92d99c60b5001d88f09742eec97b4ddbeefb978", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -91,7 +91,7 @@ package body Ada.Strings.Wide_Unbounded is\n       --  Overwise, allocate new shared string and fill data\n \n       else\n-         DR := Allocate (LR.Last + RR.Last);\n+         DR := Allocate (DL);\n          DR.Data (1 .. LR.Last) := LR.Data (1 .. LR.Last);\n          DR.Data (LR.Last + 1 .. DL) := RR.Data (1 .. RR.Last);\n          DR.Last := DL;"}, {"sha": "b71f71d5ff337792849a0890eaa5f7b86d928e11", "filename": "gcc/ada/a-stzunb-shared.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f92d99c60b5001d88f09742eec97b4ddbeefb978/gcc%2Fada%2Fa-stzunb-shared.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f92d99c60b5001d88f09742eec97b4ddbeefb978/gcc%2Fada%2Fa-stzunb-shared.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stzunb-shared.adb?ref=f92d99c60b5001d88f09742eec97b4ddbeefb978", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -91,7 +91,7 @@ package body Ada.Strings.Wide_Wide_Unbounded is\n       --  Overwise, allocate new shared string and fill data\n \n       else\n-         DR := Allocate (LR.Last + RR.Last);\n+         DR := Allocate (DL);\n          DR.Data (1 .. LR.Last) := LR.Data (1 .. LR.Last);\n          DR.Data (LR.Last + 1 .. DL) := RR.Data (1 .. RR.Last);\n          DR.Last := DL;\n@@ -1614,19 +1614,19 @@ package body Ada.Strings.Wide_Wide_Unbounded is\n       end if;\n    end Tail;\n \n-   --------------------\n+   -------------------------\n    -- To_Wide_Wide_String --\n-   --------------------\n+   -------------------------\n \n    function To_Wide_Wide_String\n      (Source : Unbounded_Wide_Wide_String) return Wide_Wide_String is\n    begin\n       return Source.Reference.Data (1 .. Source.Reference.Last);\n    end To_Wide_Wide_String;\n \n-   ------------------------------\n+   -----------------------------------\n    -- To_Unbounded_Wide_Wide_String --\n-   ------------------------------\n+   -----------------------------------\n \n    function To_Unbounded_Wide_Wide_String\n      (Source : Wide_Wide_String) return Unbounded_Wide_Wide_String"}]}