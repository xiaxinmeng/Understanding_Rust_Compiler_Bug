{"sha": "cc21923bbcafebf10f28b771d83e25ed3c149e4f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2MyMTkyM2JiY2FmZWJmMTBmMjhiNzcxZDgzZTI1ZWQzYzE0OWU0Zg==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1996-01-25T13:03:45Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1996-01-25T13:03:45Z"}, "message": "(SPARC_{V9,ARCH64}): Define.\n\n(TARGET_DEFAULT): Add MASK_ARCH64.\n(ENDFILE_SPEC): No longer need to check for -nostartfiles.\n(ASM_IDENTIFY_GCC): Define as empty.\n\nFrom-SVN: r11097", "tree": {"sha": "4b8d8c58569c448b3e905ebbb825c04f0e79e503", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b8d8c58569c448b3e905ebbb825c04f0e79e503"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc21923bbcafebf10f28b771d83e25ed3c149e4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc21923bbcafebf10f28b771d83e25ed3c149e4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc21923bbcafebf10f28b771d83e25ed3c149e4f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc21923bbcafebf10f28b771d83e25ed3c149e4f/comments", "author": null, "committer": null, "parents": [{"sha": "efbf8670a0033c43bbc4d510f69ae36d4a7053f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efbf8670a0033c43bbc4d510f69ae36d4a7053f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efbf8670a0033c43bbc4d510f69ae36d4a7053f9"}], "stats": {"total": 30, "additions": 16, "deletions": 14}, "files": [{"sha": "6869d29d641281c05bfb9726282e96ea85fa7aa9", "filename": "gcc/config/sparc/sp64-elf.h", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc21923bbcafebf10f28b771d83e25ed3c149e4f/gcc%2Fconfig%2Fsparc%2Fsp64-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc21923bbcafebf10f28b771d83e25ed3c149e4f/gcc%2Fconfig%2Fsparc%2Fsp64-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsp64-elf.h?ref=cc21923bbcafebf10f28b771d83e25ed3c149e4f", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler,\n    for Sun SPARC-V9 on a hypothetical elf format machine.\n-   Copyright (C) 1994, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1994, 1995, 1996 Free Software Foundation, Inc.\n    Contributed by Doug Evans, dje@cygnus.com.\n \n This file is part of GNU CC.\n@@ -22,19 +22,14 @@ Boston, MA 02111-1307, USA.  */\n \n /* This is a v9 only compiler.  -mv8 is not expected to work.  If you want\n    a v8/v9 compiler, this isn't the place to do it.  */\n-/* ??? Until real v9 machines exist, all of this is subject to change.  */\n-/* ??? This file should really be called sp64-sol2.h or some such but that\n-   would be a bit misleading since no such machines exist yet.  The current\n-   name is also misleading since the term \"elf\" is more properly applied to\n-   embedded configurations.  */\n \n-#define SPARCV9 /* See sparc.h.  */\n+#define SPARC_V9 1\t/* See sparc.h.  */\n+#define SPARC_ARCH64 1\n \n /* ??? We're taking the scheme of including another file and then overriding\n    the values we don't like a bit too far here.  The alternative is to more or\n    less duplicate all of svr4.h, sparc/sysv4.h, and sparc/sol2.h here\n-   (suitably cleaned up).  Until real sparc64 machines exist, it's not clear\n-   which is better.  */\n+   (suitably cleaned up).  */\n \n #include \"sparc/sol2.h\"\n \n@@ -46,7 +41,8 @@ Boston, MA 02111-1307, USA.  */\n \n #undef TARGET_DEFAULT\n #define TARGET_DEFAULT \\\n-  (MASK_V9 + MASK_STACK_BIAS + MASK_MEDANY + MASK_PTR64 + MASK_HARD_QUAD + MASK_EPILOGUE + MASK_FPU)\n+  (MASK_V9 + MASK_ARCH64 + MASK_PTR64 + MASK_HARD_QUAD \\\n+   + MASK_STACK_BIAS + MASK_MEDANY + MASK_EPILOGUE + MASK_FPU)\n \n /* __svr4__ is used by the C library */\n #undef CPP_PREDEFINES\n@@ -84,7 +80,7 @@ crtbegin.o%s \\\n \"\n \n #undef ENDFILE_SPEC\n-#define ENDFILE_SPEC \"%{!nostartfiles:crtend.o%s}\"\n+#define ENDFILE_SPEC \"crtend.o%s\"\n \n /* Use the default (for now).  */\n #undef LIB_SPEC\n@@ -106,10 +102,11 @@ crtbegin.o%s \\\n #undef WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE 16\n \n-/* ??? Disabled for v9 as the current implementation of the Medium/Anywhere\n-   code model needs this in the data segment (still true?).  Let's hope the\n-   assembler is fixed.  */\n+/* The medium/anywhere code model practically requires us to put jump tables\n+   in the text section as gcc is unable to distinguish LABEL_REF's of jump\n+   tables from other label refs (when we need to).  */\n #undef JUMP_TABLES_IN_TEXT_SECTION\n+#define JUMP_TABLES_IN_TEXT_SECTION\n \n /* System V Release 4 uses DWARF debugging info.\n    GDB doesn't support 64 bit stabs yet and the desired debug format is DWARF\n@@ -121,6 +118,11 @@ crtbegin.o%s \\\n #undef PREFERRED_DEBUGGING_TYPE\n #define PREFERRED_DEBUGGING_TYPE DWARF_DEBUG\n \n+/* Stabs doesn't use this, and it confuses a simulator.  */\n+/* ??? Need to see what DWARF needs, if anything.  */\n+#undef ASM_IDENTIFY_GCC\n+#define ASM_IDENTIFY_GCC(FILE)\n+\n /* Define the names of various pseudo-ops used by the Sparc/svr4 assembler.\n    ??? If ints are 64 bits then UNALIGNED_INT_ASM_OP (defined elsewhere) is\n    misnamed.  These should all refer to explicit sizes (half/word/xword?),"}]}