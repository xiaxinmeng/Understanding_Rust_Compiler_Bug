{"sha": "54f0deb00f65f3c4936ca3be72096caac4dc48ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRmMGRlYjAwZjY1ZjNjNDkzNmNhM2JlNzIwOTZjYWFjNGRjNDhhYg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2016-11-18T04:05:10Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2016-11-18T04:05:10Z"}, "message": "Update libgo/configure to restore it to the master version.\n\nUpdate a few binary files that were changed in the master gc repo,\ncopied into the gofrontend repo, but not correctly copied into the GCC\nrepo.  The changes are all minor and do not affect any actual tests.\nTwo instances of \"http\" changed to \"https\", and two timestamps were\nzeroed out.\n\nFrom-SVN: r242582", "tree": {"sha": "d2edf3d39d3ff21f00a1481251934786905abb63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2edf3d39d3ff21f00a1481251934786905abb63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54f0deb00f65f3c4936ca3be72096caac4dc48ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54f0deb00f65f3c4936ca3be72096caac4dc48ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54f0deb00f65f3c4936ca3be72096caac4dc48ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54f0deb00f65f3c4936ca3be72096caac4dc48ab/comments", "author": null, "committer": null, "parents": [{"sha": "9427e29606250ad5fd06d5ec26633c2f786af104", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9427e29606250ad5fd06d5ec26633c2f786af104", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9427e29606250ad5fd06d5ec26633c2f786af104"}], "stats": {"total": 50, "additions": 45, "deletions": 5}, "files": [{"sha": "9eac5c0e5c5f510fba10254ee23d65a5232623a0", "filename": "libgo/configure", "status": "modified", "additions": 45, "deletions": 5, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f0deb00f65f3c4936ca3be72096caac4dc48ab/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f0deb00f65f3c4936ca3be72096caac4dc48ab/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=54f0deb00f65f3c4936ca3be72096caac4dc48ab", "patch": "@@ -810,6 +810,7 @@ enable_werror\n enable_version_specific_runtime_libs\n with_libffi\n with_libatomic\n+with_system_libunwind\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1459,6 +1460,7 @@ Optional Packages:\n                           both]\n   --without-libffi        don't use libffi\n   --without-libatomic     don't use libatomic\n+  --with-system-libunwind use installed libunwind\n \n Some influential environment variables:\n   CC          C compiler command\n@@ -2483,6 +2485,9 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n+\n+\n+\n ac_config_headers=\"$ac_config_headers config.h\"\n \n \n@@ -3467,12 +3472,10 @@ done\n \n cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n-#include <stdio.h>\n+\n int\n main ()\n {\n-FILE *f = fopen (\"conftest.out\", \"w\");\n- return ferror (f) || fclose (f) != 0;\n \n   ;\n   return 0;\n@@ -11206,7 +11209,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11207 \"configure\"\n+#line 11212 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -14679,7 +14682,42 @@ $as_echo \"#define AC_APPLE_UNIVERSAL_BUILD 1\" >>confdefs.h\n  esac\n \n \n-GCC_CHECK_UNWIND_GETIPINFO\n+\n+\n+# Check whether --with-system-libunwind was given.\n+if test \"${with_system_libunwind+set}\" = set; then :\n+  withval=$with_system_libunwind;\n+fi\n+\n+  # If system-libunwind was not specifically set, pick a default setting.\n+  if test x$with_system_libunwind = x; then\n+    case ${target} in\n+      ia64-*-hpux*) with_system_libunwind=yes ;;\n+      *) with_system_libunwind=no ;;\n+    esac\n+  fi\n+  # Based on system-libunwind and target, do we have ipinfo?\n+  if  test x$with_system_libunwind = xyes; then\n+    case ${target} in\n+      ia64-*-*) have_unwind_getipinfo=no ;;\n+      *) have_unwind_getipinfo=yes ;;\n+    esac\n+  else\n+    # Darwin before version 9 does not have _Unwind_GetIPInfo.\n+\n+    case ${target} in\n+      *-*-darwin[3-8]|*-*-darwin[3-8].*) have_unwind_getipinfo=no ;;\n+      *) have_unwind_getipinfo=yes ;;\n+    esac\n+\n+  fi\n+\n+  if test x$have_unwind_getipinfo = xyes; then\n+\n+$as_echo \"#define HAVE_GETIPINFO 1\" >>confdefs.h\n+\n+  fi\n+\n \n for ac_header in port.h sched.h semaphore.h sys/file.h sys/mman.h syscall.h sys/epoll.h sys/event.h sys/inotify.h sys/ptrace.h sys/syscall.h sys/user.h sys/utsname.h sys/select.h sys/socket.h net/if.h net/if_arp.h net/route.h netpacket/packet.h sys/prctl.h sys/mount.h sys/vfs.h sys/statfs.h sys/timex.h sys/sysinfo.h utime.h linux/ether.h linux/fs.h linux/reboot.h netinet/icmp6.h netinet/in_syst.h netinet/ip.h netinet/ip_mroute.h netinet/if_ether.h\n do :\n@@ -16269,6 +16307,8 @@ ac_configure_args=\"${multilib_arg} ${ac_configure_args}\"\n multi_basedir=\"$multi_basedir\"\n CONFIG_SHELL=${CONFIG_SHELL-/bin/sh}\n CC=\"$CC\"\n+CXX=\"$CXX\"\n+GFORTRAN=\"$GFORTRAN\"\n AMDEP_TRUE=\"$AMDEP_TRUE\" ac_aux_dir=\"$ac_aux_dir\"\n \n "}, {"sha": "81737275c6ebf5ea69b992753ab4050f031f31b8", "filename": "libgo/go/archive/zip/testdata/readme.notzip", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f0deb00f65f3c4936ca3be72096caac4dc48ab/libgo%2Fgo%2Farchive%2Fzip%2Ftestdata%2Freadme.notzip", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f0deb00f65f3c4936ca3be72096caac4dc48ab/libgo%2Fgo%2Farchive%2Fzip%2Ftestdata%2Freadme.notzip", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Farchive%2Fzip%2Ftestdata%2Freadme.notzip?ref=54f0deb00f65f3c4936ca3be72096caac4dc48ab"}, {"sha": "5642a67e77d5f5a45c92ea701801ae0b993f4724", "filename": "libgo/go/archive/zip/testdata/readme.zip", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f0deb00f65f3c4936ca3be72096caac4dc48ab/libgo%2Fgo%2Farchive%2Fzip%2Ftestdata%2Freadme.zip", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f0deb00f65f3c4936ca3be72096caac4dc48ab/libgo%2Fgo%2Farchive%2Fzip%2Ftestdata%2Freadme.zip", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Farchive%2Fzip%2Ftestdata%2Freadme.zip?ref=54f0deb00f65f3c4936ca3be72096caac4dc48ab"}, {"sha": "82b4af102632c3f97bd4957e71ea519751ea0ea8", "filename": "libgo/go/compress/gzip/testdata/issue6550.gz", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f0deb00f65f3c4936ca3be72096caac4dc48ab/libgo%2Fgo%2Fcompress%2Fgzip%2Ftestdata%2Fissue6550.gz", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f0deb00f65f3c4936ca3be72096caac4dc48ab/libgo%2Fgo%2Fcompress%2Fgzip%2Ftestdata%2Fissue6550.gz", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcompress%2Fgzip%2Ftestdata%2Fissue6550.gz?ref=54f0deb00f65f3c4936ca3be72096caac4dc48ab"}, {"sha": "1572a92bfbdfe99c28195104740d1f4b1e560f66", "filename": "libgo/go/encoding/json/testdata/code.json.gz", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f0deb00f65f3c4936ca3be72096caac4dc48ab/libgo%2Fgo%2Fencoding%2Fjson%2Ftestdata%2Fcode.json.gz", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f0deb00f65f3c4936ca3be72096caac4dc48ab/libgo%2Fgo%2Fencoding%2Fjson%2Ftestdata%2Fcode.json.gz", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fjson%2Ftestdata%2Fcode.json.gz?ref=54f0deb00f65f3c4936ca3be72096caac4dc48ab"}]}