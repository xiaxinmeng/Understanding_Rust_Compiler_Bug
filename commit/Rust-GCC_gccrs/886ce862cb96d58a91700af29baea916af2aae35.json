{"sha": "886ce862cb96d58a91700af29baea916af2aae35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg2Y2U4NjJjYjk2ZDU4YTkxNzAwYWYyOWJhZWE5MTZhZjJhYWUzNQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2004-08-24T20:04:57Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2004-08-24T20:04:57Z"}, "message": "mips.c (mips_gen_conditional_trap): Fix mode.\n\n\t* config/mips/mips.c (mips_gen_conditional_trap): Fix mode.\n\t* config/mips/mips.md (*conditional_trap[sd]i): Name previously unnamed\n\tpatterns.  Redefine using :GPR.  Give the match_operator a mode.\n\tUse '%2' rather than '%z2' for operand 2.\n\nFrom-SVN: r86511", "tree": {"sha": "0aa4c15426cfcf1e9087041bcda79ca3478656f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0aa4c15426cfcf1e9087041bcda79ca3478656f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/886ce862cb96d58a91700af29baea916af2aae35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/886ce862cb96d58a91700af29baea916af2aae35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/886ce862cb96d58a91700af29baea916af2aae35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/886ce862cb96d58a91700af29baea916af2aae35/comments", "author": null, "committer": null, "parents": [{"sha": "be659abd840dffa23f750638381ab0f1251b735d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be659abd840dffa23f750638381ab0f1251b735d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be659abd840dffa23f750638381ab0f1251b735d"}], "stats": {"total": 51, "additions": 29, "deletions": 22}, "files": [{"sha": "31adda24fe3a51abcbc8425768d5f3b0c5a29d64", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/886ce862cb96d58a91700af29baea916af2aae35/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/886ce862cb96d58a91700af29baea916af2aae35/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=886ce862cb96d58a91700af29baea916af2aae35", "patch": "@@ -1,3 +1,10 @@\n+2004-08-24  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* config/mips/mips.c (mips_gen_conditional_trap): Fix mode.\n+\t* config/mips/mips.md (*conditional_trap[sd]i): Name previously unnamed\n+\tpatterns.  Redefine using :GPR.  Give the match_operator a mode.\n+\tUse '%2' rather than '%z2' for operand 2.\n+\n 2004-08-24  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/mips/mips.md (load_call[sd]i): Redefine using :P.  Add mode"}, {"sha": "9f0bf68fadedb49a854c0320fee9cf56913a74cd", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/886ce862cb96d58a91700af29baea916af2aae35/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/886ce862cb96d58a91700af29baea916af2aae35/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=886ce862cb96d58a91700af29baea916af2aae35", "patch": "@@ -2578,20 +2578,20 @@ mips_gen_conditional_trap (rtx *operands)\n     }\n   if (cmp_code == GET_CODE (operands[0]))\n     {\n-      op0 = force_reg (mode, cmp_operands[0]);\n+      op0 = cmp_operands[0];\n       op1 = cmp_operands[1];\n     }\n   else\n     {\n-      op0 = force_reg (mode, cmp_operands[1]);\n+      op0 = cmp_operands[1];\n       op1 = cmp_operands[0];\n     }\n-  if (GET_CODE (op1) == CONST_INT && ! SMALL_INT (op1))\n+  op0 = force_reg (mode, op0);\n+  if (!arith_operand (op1, mode))\n     op1 = force_reg (mode, op1);\n \n   emit_insn (gen_rtx_TRAP_IF (VOIDmode,\n-\t\t\t      gen_rtx_fmt_ee (cmp_code, GET_MODE (operands[0]),\n-\t\t\t\t\t      op0, op1),\n+\t\t\t      gen_rtx_fmt_ee (cmp_code, mode, op0, op1),\n \t\t\t      operands[1]));\n }\n \f"}, {"sha": "46ec8cf1be1ced0f62ac335d51b2ad954735d8fd", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 9, "deletions": 17, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/886ce862cb96d58a91700af29baea916af2aae35/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/886ce862cb96d58a91700af29baea916af2aae35/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=886ce862cb96d58a91700af29baea916af2aae35", "patch": "@@ -396,15 +396,16 @@\n   else\n     return \"break\";\n }\n-  [(set_attr \"type\"\t\"trap\")])\n+  [(set_attr \"type\" \"trap\")])\n \n (define_expand \"conditional_trap\"\n   [(trap_if (match_operator 0 \"comparison_operator\"\n \t\t\t    [(match_dup 2) (match_dup 3)])\n \t    (match_operand 1 \"const_int_operand\"))]\n   \"ISA_HAS_COND_TRAP\"\n {\n-  if (operands[1] == const0_rtx)\n+  if (GET_MODE_CLASS (GET_MODE (cmp_operands[0])) == MODE_INT\n+      && operands[1] == const0_rtx)\n     {\n       mips_gen_conditional_trap (operands);\n       DONE;\n@@ -413,23 +414,14 @@\n     FAIL;\n })\n \n-(define_insn \"\"\n-  [(trap_if (match_operator 0 \"trap_comparison_operator\"\n-                            [(match_operand:SI 1 \"reg_or_0_operand\" \"dJ\")\n-                             (match_operand:SI 2 \"arith_operand\" \"dI\")])\n+(define_insn \"*conditional_trap<mode>\"\n+  [(trap_if (match_operator:GPR 0 \"trap_comparison_operator\"\n+\t\t\t\t[(match_operand:GPR 1 \"reg_or_0_operand\" \"dJ\")\n+\t\t\t\t (match_operand:GPR 2 \"arith_operand\" \"dI\")])\n \t    (const_int 0))]\n   \"ISA_HAS_COND_TRAP\"\n-  \"t%C0\\t%z1,%z2\"\n-  [(set_attr \"type\"\t\"trap\")])\n-\n-(define_insn \"\"\n-  [(trap_if (match_operator 0 \"trap_comparison_operator\"\n-                            [(match_operand:DI 1 \"reg_or_0_operand\" \"dJ\")\n-                             (match_operand:DI 2 \"arith_operand\" \"dI\")])\n-\t    (const_int 0))]\n-  \"TARGET_64BIT && ISA_HAS_COND_TRAP\"\n-  \"t%C0\\t%z1,%z2\"\n-  [(set_attr \"type\"\t\"trap\")])\n+  \"t%C0\\t%z1,%2\"\n+  [(set_attr \"type\" \"trap\")])\n \f\n ;;\n ;;  ...................."}, {"sha": "c49b14902ba33deb680521fd98c8f6264ceff83c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/886ce862cb96d58a91700af29baea916af2aae35/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/886ce862cb96d58a91700af29baea916af2aae35/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=886ce862cb96d58a91700af29baea916af2aae35", "patch": "@@ -1,3 +1,7 @@\n+2004-08-24  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* gcc.c-torture/compile/iftrap-3.c: New test.\n+\n 2004-08-24  Paul Brook  <paul@codesourcery.com>\n \n \t* gfortran.dg/entry_2.f90: New test."}, {"sha": "52278e145dbcfd81c370fc25ce7976b4015701bc", "filename": "gcc/testsuite/gcc.c-torture/compile/iftrap-3.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/886ce862cb96d58a91700af29baea916af2aae35/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fiftrap-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/886ce862cb96d58a91700af29baea916af2aae35/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fiftrap-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fiftrap-3.c?ref=886ce862cb96d58a91700af29baea916af2aae35", "patch": "@@ -0,0 +1,4 @@\n+/* Check that the conditional_trap pattern handles floating-point\n+   comparisons correctly.  */\n+void f1 (float x, float y) { if (x == y) __builtin_trap (); }\n+void f2 (double x, double y) { if (x == y) __builtin_trap (); }"}]}