{"sha": "a7ccb9e72266f4cd82801166008b0b98cd25c773", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdjY2I5ZTcyMjY2ZjRjZDgyODAxMTY2MDA4YjBiOThjZDI1Yzc3Mw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-01-14T15:32:31Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-01-14T15:32:31Z"}, "message": "re PR c++/69261 (Copying char arrays during constexpr evaluation does not work reliably)\n\n\tPR c++/69261\n\t* constexpr.c (find_array_ctor_elt): Handle splitting RANGE_EXPR.\n\nFrom-SVN: r232370", "tree": {"sha": "ca8051f9263fb4a37987b5467c7657252947ee71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca8051f9263fb4a37987b5467c7657252947ee71"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7ccb9e72266f4cd82801166008b0b98cd25c773", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7ccb9e72266f4cd82801166008b0b98cd25c773", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7ccb9e72266f4cd82801166008b0b98cd25c773", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7ccb9e72266f4cd82801166008b0b98cd25c773/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "73e48cb322152bf504ced8694fa748544ecaa6eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73e48cb322152bf504ced8694fa748544ecaa6eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73e48cb322152bf504ced8694fa748544ecaa6eb"}], "stats": {"total": 115, "additions": 113, "deletions": 2}, "files": [{"sha": "54db540da57ce81981ea89986e25d11fab17f70d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ccb9e72266f4cd82801166008b0b98cd25c773/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ccb9e72266f4cd82801166008b0b98cd25c773/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a7ccb9e72266f4cd82801166008b0b98cd25c773", "patch": "@@ -1,3 +1,8 @@\n+2016-01-14  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/69261\n+\t* constexpr.c (find_array_ctor_elt): Handle splitting RANGE_EXPR.\n+\n 2016-01-12  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/68979"}, {"sha": "6ab4696d6f368c83f92c2190c945b9608fe9b16e", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 45, "deletions": 2, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ccb9e72266f4cd82801166008b0b98cd25c773/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ccb9e72266f4cd82801166008b0b98cd25c773/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=a7ccb9e72266f4cd82801166008b0b98cd25c773", "patch": "@@ -1725,14 +1725,57 @@ find_array_ctor_elt (tree ary, tree dindex, bool insert = false)\n   while (begin != end)\n     {\n       unsigned HOST_WIDE_INT middle = (begin + end) / 2;\n+      constructor_elt &elt = (*elts)[middle];\n+      tree idx = elt.index;\n \n-      int cmp = array_index_cmp (dindex, (*elts)[middle].index);\n+      int cmp = array_index_cmp (dindex, idx);\n       if (cmp < 0)\n \tend = middle;\n       else if (cmp > 0)\n \tbegin = middle + 1;\n       else\n-\treturn middle;\n+\t{\n+\t  if (insert && TREE_CODE (idx) == RANGE_EXPR)\n+\t    {\n+\t      /* We need to split the range.  */\n+\t      constructor_elt e;\n+\t      tree lo = TREE_OPERAND (idx, 0);\n+\t      tree hi = TREE_OPERAND (idx, 1);\n+\t      if (tree_int_cst_lt (lo, dindex))\n+\t\t{\n+\t\t  /* There are still some lower elts; shorten the range.  */\n+\t\t  tree new_hi = int_const_binop (MINUS_EXPR, dindex,\n+\t\t\t\t\t\t size_one_node);\n+\t\t  if (tree_int_cst_equal (lo, new_hi))\n+\t\t    /* Only one element left, no longer a range.  */\n+\t\t    elt.index = lo;\n+\t\t  else\n+\t\t    TREE_OPERAND (idx, 1) = new_hi;\n+\t\t  /* Append the element we want to insert.  */\n+\t\t  ++middle;\n+\t\t  e.index = dindex;\n+\t\t  e.value = unshare_expr (elt.value);\n+\t\t  vec_safe_insert (CONSTRUCTOR_ELTS (ary), middle, e);\n+\t\t}\n+\t      else\n+\t\t/* No lower elts, the range elt is now ours.  */\n+\t\telt.index = dindex;\n+\n+\t      if (tree_int_cst_lt (dindex, hi))\n+\t\t{\n+\t\t  /* There are still some higher elts; append a range.  */\n+\t\t  tree new_lo = int_const_binop (PLUS_EXPR, dindex,\n+\t\t\t\t\t\t size_one_node);\n+\t\t  if (tree_int_cst_equal (new_lo, hi))\n+\t\t    e.index = hi;\n+\t\t  else\n+\t\t    e.index = build2 (RANGE_EXPR, sizetype, new_lo, hi);\n+\t\t  e.value = unshare_expr (elt.value);\n+\t\t  vec_safe_insert (CONSTRUCTOR_ELTS (ary), middle+1, e);\n+\t\t}\n+\t    }\n+\t  return middle;\n+\t}\n     }\n \n   if (insert)"}, {"sha": "71b36420f7b96308f7d983789fa40e826227ec19", "filename": "gcc/testsuite/g++.dg/cpp1y/constexpr-array2.C", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ccb9e72266f4cd82801166008b0b98cd25c773/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-array2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ccb9e72266f4cd82801166008b0b98cd25c773/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-array2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-array2.C?ref=a7ccb9e72266f4cd82801166008b0b98cd25c773", "patch": "@@ -0,0 +1,63 @@\n+// PR c++/69261\n+// { dg-do run { target c++14 } }\n+\n+typedef __SIZE_TYPE__ size_t;\n+\n+template <size_t N>\n+struct S\n+{\n+  constexpr S() = default;\n+\n+  template<size_t M>\n+  constexpr S (char const (&d)[M]) : data { 0 }\n+  {\n+    static_assert (M <= N, \"size!\");\n+    for (size_t i = 0; i != M; i++)\n+      data[i] = d[i];\n+  }\n+  char data[N];\n+};\n+\n+template <int N>\n+constexpr S<N>\n+s (char const (&d)[N])\n+{\n+  S<N> c {};\n+  for (size_t i = 0; i != N; i++)\n+    c.data[i] = d[i];\n+  return c;\n+}\n+\n+template <size_t N, size_t M>\n+constexpr auto\n+concat (S<N> const& s1, S<M> const& s2)\n+{\n+  S<N+M-1> s (s1.data);\n+  for (size_t i = 0; i != M; i++)\n+    s.data[N + i - 1] = s2.data[i];\n+  return s;\n+}\n+\n+template <size_t N, size_t M>\n+constexpr auto\n+concat (char const (&x)[N], char const (&y)[M])\n+{\n+  S<N+M-1> tmp { x };\n+  for (size_t i = 0; i != M; i++)\n+    tmp.data[N+i-1] = y[i];\n+  return tmp;\n+}\n+\n+int\n+main ()\n+{\n+  auto constexpr s1 = s (\"bla\");\n+  auto constexpr s2 = s (\"blub\");\n+  S<8> constexpr s1s2 = concat (s1, s2);\n+  auto constexpr c = concat (\"bla\", \"blub\");\n+  if (__builtin_strcmp (s1.data, \"bla\")\n+      || __builtin_strcmp (s2.data, \"blub\")\n+      || __builtin_strcmp (s1s2.data, \"blablub\")\n+      || __builtin_strcmp (c.data, \"blablub\"))\n+    __builtin_abort ();\n+}"}]}