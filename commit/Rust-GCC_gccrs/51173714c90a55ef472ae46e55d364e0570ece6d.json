{"sha": "51173714c90a55ef472ae46e55d364e0570ece6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTExNzM3MTRjOTBhNTVlZjQ3MmFlNDZlNTVkMzY0ZTA1NzBlY2U2ZA==", "commit": {"author": {"name": "Sa Liu", "email": "saliu@gcc.gnu.org", "date": "2008-01-07T13:48:12Z"}, "committer": {"name": "Sa Liu", "email": "saliu@gcc.gnu.org", "date": "2008-01-07T13:48:12Z"}, "message": "Genetate inline code for double division.\n\nFrom-SVN: r131373", "tree": {"sha": "8218553a801a5ad4736341e53d9da4d750fa8f60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8218553a801a5ad4736341e53d9da4d750fa8f60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51173714c90a55ef472ae46e55d364e0570ece6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51173714c90a55ef472ae46e55d364e0570ece6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51173714c90a55ef472ae46e55d364e0570ece6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51173714c90a55ef472ae46e55d364e0570ece6d/comments", "author": null, "committer": null, "parents": [{"sha": "32f1271c4ff1694371eb7ec587326265326f2063", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32f1271c4ff1694371eb7ec587326265326f2063", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32f1271c4ff1694371eb7ec587326265326f2063"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "f1bfdaff6073709e718510454c0169992cd12de2", "filename": "gcc/config/spu/spu.md", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51173714c90a55ef472ae46e55d364e0570ece6d/gcc%2Fconfig%2Fspu%2Fspu.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51173714c90a55ef472ae46e55d364e0570ece6d/gcc%2Fconfig%2Fspu%2Fspu.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu.md?ref=51173714c90a55ef472ae46e55d364e0570ece6d", "patch": "@@ -1735,6 +1735,58 @@\n     DONE;\n   })\n \n+;; Taken from STI's gcc\n+;; Does not correctly handle INF or NAN.\n+(define_expand \"divdf3\"\n+  [(set (match_operand:DF 0 \"register_operand\" \"=r\")\n+        (div:DF (match_operand:DF 1 \"register_operand\" \"r\")\n+                (match_operand:DF 2 \"register_operand\" \"r\")))]\n+  \"flag_finite_math_only\"\n+  \"{    \n+    /*\n+    double\n+    divdf3 (double x, double y)\n+    {\n+        float x0;\n+        float y_f = (float) y;\n+        double x1, x2;\n+\n+        x0 = spu_extract(spu_re(spu_promote(y_f, 0)), 0);\n+        x1 = (double)(x0 * (2.0f - y_f * x0)); \n+        x2 = x1 * (2.0 - y * x1);\n+        return (x * x2 * (2.0 - y * x2));\n+    }\n+    */\n+\n+    rtx dst = operands[0];\n+    rtx x   = operands[1];\n+    rtx y   = operands[2];\n+    rtx y_f = gen_reg_rtx(SFmode);\n+    rtx x0_f = gen_reg_rtx(SFmode);\n+    rtx x1_f = gen_reg_rtx(SFmode);\n+    rtx x1 = gen_reg_rtx(DFmode);\n+    rtx x2 = gen_reg_rtx(DFmode);\n+    rtx t1_f = gen_reg_rtx(SFmode);\n+    rtx t1 = gen_reg_rtx(DFmode);\n+    rtx two = gen_reg_rtx(DFmode);\n+    rtx two_f = gen_reg_rtx(SFmode);\n+\n+    emit_insn (gen_truncdfsf2 (y_f, y));\n+    emit_insn (gen_frest_sf (x0_f, y_f));\n+    emit_insn (gen_fi_sf (x0_f, y_f, x0_f));\n+    emit_insn (gen_movsf (two_f, spu_float_const(\\\"2.0\\\",SFmode)));\n+    emit_insn (gen_fnms_sf (t1_f, y_f, x0_f, two_f));\n+    emit_insn (gen_mulsf3 (x1_f, t1_f, x0_f));\n+    emit_insn (gen_extendsfdf2 (x1, x1_f));\n+    emit_insn (gen_extendsfdf2 (two, two_f));\n+    emit_insn (gen_movdf (t1, two));\n+    emit_insn (gen_fnms_df (t1, y, x1, t1));\n+    emit_insn (gen_muldf3 (x2, x1, t1));\n+    emit_insn (gen_fnms_df (two, y, x2, two));\n+    emit_insn (gen_muldf3 (dst, x2, two));\n+    emit_insn (gen_muldf3 (dst, dst, x));\n+    DONE;\n+}\")\n \f\n ;; sqrt\n "}]}