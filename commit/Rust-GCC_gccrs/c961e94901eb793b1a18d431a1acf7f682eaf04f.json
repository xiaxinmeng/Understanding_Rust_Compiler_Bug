{"sha": "c961e94901eb793b1a18d431a1acf7f682eaf04f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk2MWU5NDkwMWViNzkzYjFhMThkNDMxYTFhY2Y3ZjY4MmVhZjA0Zg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-12-01T11:18:46Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-12-02T07:18:18Z"}, "message": "if-to-switch: Support chain with 2 BBs.\n\nAs seen in the test-case, even 2 BBs can handle interesting\ncases covered by a jump table or a bit-test.\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/88702\n\t* gimple-if-to-switch.cc (pass_if_to_switch::execute):\n\tRequire at least 2 BBs.\n\t* gimple-if-to-switch.cc (find_conditions): Require\n\tequal precision for low and high of a range.\n\ngcc/testsuite/ChangeLog:\n\n\tPR tree-optimization/88702\n\t* gcc.dg/tree-ssa/if-to-switch-9.c: New test.", "tree": {"sha": "c29fc24b169c2851cc98e6dab952e02a116fd681", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c29fc24b169c2851cc98e6dab952e02a116fd681"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c961e94901eb793b1a18d431a1acf7f682eaf04f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c961e94901eb793b1a18d431a1acf7f682eaf04f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c961e94901eb793b1a18d431a1acf7f682eaf04f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c961e94901eb793b1a18d431a1acf7f682eaf04f/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4c02ce4ab6fce1148f4025360096f18764deadf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4c02ce4ab6fce1148f4025360096f18764deadf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4c02ce4ab6fce1148f4025360096f18764deadf"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "8e1043ae7c4ee9537a81c9fa98bb2ecad379bca8", "filename": "gcc/gimple-if-to-switch.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c961e94901eb793b1a18d431a1acf7f682eaf04f/gcc%2Fgimple-if-to-switch.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c961e94901eb793b1a18d431a1acf7f682eaf04f/gcc%2Fgimple-if-to-switch.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-if-to-switch.cc?ref=c961e94901eb793b1a18d431a1acf7f682eaf04f", "patch": "@@ -431,7 +431,9 @@ find_conditions (basic_block bb,\n \tif (info.m_ranges[i].exp == NULL_TREE\n \t    || !INTEGRAL_TYPE_P (TREE_TYPE (info.m_ranges[i].exp))\n \t    || info.m_ranges[i].low == NULL_TREE\n-\t    || info.m_ranges[i].high == NULL_TREE)\n+\t    || info.m_ranges[i].high == NULL_TREE\n+\t    || (TYPE_PRECISION (TREE_TYPE (info.m_ranges[i].low))\n+\t\t!= TYPE_PRECISION (TREE_TYPE (info.m_ranges[i].high))))\n \t  return;\n \n       for (unsigned i = 1; i < info.m_ranges.length (); ++i)\n@@ -526,7 +528,7 @@ pass_if_to_switch::execute (function *fun)\n \t    }\n \n \t  chain->m_entries.reverse ();\n-\t  if (chain->m_entries.length () >= 3\n+\t  if (chain->m_entries.length () >= 2\n \t      && chain->check_non_overlapping_cases ()\n \t      && chain->is_beneficial ())\n \t    {"}, {"sha": "e67198bf8c38256a4db6cda880518e55ecc2edc7", "filename": "gcc/testsuite/gcc.dg/tree-ssa/if-to-switch-9.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c961e94901eb793b1a18d431a1acf7f682eaf04f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fif-to-switch-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c961e94901eb793b1a18d431a1acf7f682eaf04f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fif-to-switch-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fif-to-switch-9.c?ref=c961e94901eb793b1a18d431a1acf7f682eaf04f", "patch": "@@ -0,0 +1,11 @@\n+/* PR tree-optimization/88702 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-iftoswitch-optimized\" } */\n+\n+int IsHTMLWhitespace(int aChar) {                         \n+  return aChar == 0x0009 || aChar == 0x000A ||              \n+         aChar == 0x000C || aChar == 0x000D ||              \n+         aChar == 0x0020;                                             \n+}\n+\n+/* { dg-final { scan-tree-dump \"Condition chain with \\[^\\n\\r]\\* BBs transformed into a switch statement.\" \"iftoswitch\" } } */"}]}