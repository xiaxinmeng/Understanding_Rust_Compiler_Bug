{"sha": "513d051988266d50c13677b5bc3fae7e3028867b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTEzZDA1MTk4ODI2NmQ1MGMxMzY3N2I1YmMzZmFlN2UzMDI4ODY3Yg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2012-03-20T17:47:07Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2012-03-20T17:47:07Z"}, "message": "* doc/extend.texi (Template Instantiation): Remove anachronisms.\n\nFrom-SVN: r185584", "tree": {"sha": "4464b738f62f978f0c8e8ca69908599822b42455", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4464b738f62f978f0c8e8ca69908599822b42455"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/513d051988266d50c13677b5bc3fae7e3028867b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/513d051988266d50c13677b5bc3fae7e3028867b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/513d051988266d50c13677b5bc3fae7e3028867b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/513d051988266d50c13677b5bc3fae7e3028867b/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73f46872b4d140254e9d167138e2e8e92be989c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73f46872b4d140254e9d167138e2e8e92be989c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73f46872b4d140254e9d167138e2e8e92be989c3"}], "stats": {"total": 22, "additions": 9, "deletions": 13}, "files": [{"sha": "c2743edf5b59ea3f7fef9f2921737f284e699a10", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/513d051988266d50c13677b5bc3fae7e3028867b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/513d051988266d50c13677b5bc3fae7e3028867b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=513d051988266d50c13677b5bc3fae7e3028867b", "patch": "@@ -1,3 +1,7 @@\n+2012-03-20  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\t* doc/extend.texi (Template Instantiation): Remove anachronisms.\n+\n 2012-03-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/52607"}, {"sha": "bb4382584bc98e9ef56506698c8626760eac550c", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 5, "deletions": 13, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/513d051988266d50c13677b5bc3fae7e3028867b/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/513d051988266d50c13677b5bc3fae7e3028867b/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=513d051988266d50c13677b5bc3fae7e3028867b", "patch": "@@ -15162,16 +15162,7 @@ GNU/Linux or Solaris 2, or on Microsoft Windows, G++ supports the\n Borland model.  On other systems, G++ implements neither automatic\n model.\n \n-A future version of G++ will support a hybrid model whereby the compiler\n-will emit any instantiations for which the template definition is\n-included in the compile, and store template definitions and\n-instantiation context information into the object file for the rest.\n-The link wrapper will extract that information as necessary and invoke\n-the compiler to produce the remaining instantiations.  The linker will\n-then combine duplicate instantiations.\n-\n-In the mean time, you have the following options for dealing with\n-template instantiations:\n+You have the following options for dealing with template instantiations:\n \n @enumerate\n @item\n@@ -15233,9 +15224,10 @@ compile it without @option{-fno-implicit-templates} so you get all of the\n instances required by your explicit instantiations (but not by any\n other files) without having to specify them as well.\n \n-G++ has extended the template instantiation syntax given in the ISO\n-standard to allow forward declaration of explicit instantiations\n-(with @code{extern}), instantiation of the compiler support data for a\n+The ISO C++ 2011 standard allows forward declaration of explicit\n+instantiations (with @code{extern}). G++ supports explicit instantiation\n+declarations in C++98 mode and has extended the template instantiation\n+syntax to support instantiation of the compiler support data for a\n template class (i.e.@: the vtable) without instantiating any of its\n members (with @code{inline}), and instantiation of only the static data\n members of a template class, without the support data or member"}]}