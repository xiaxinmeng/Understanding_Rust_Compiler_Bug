{"sha": "a3a45f0b145ae9381ce3daa75db17c43a76ec7fd", "node_id": "C_kwDOANBUbNoAKGEzYTQ1ZjBiMTQ1YWU5MzgxY2UzZGFhNzVkYjE3YzQzYTc2ZWM3ZmQ", "commit": {"author": {"name": "Junxian Zhu", "email": "zhujunxian@oss.cipunited.com", "date": "2023-02-17T08:24:55Z"}, "committer": {"name": "YunQiang Su", "email": "yunqiang.su@cipunited.com", "date": "2023-02-24T03:19:55Z"}, "message": "Hazard barrier return support\n\nThis patch allows a function to request clearing of all instruction and execution\nhazards upon normal return via __attribute__ ((use_hazard_barrier_return)).\n\n2017-04-25  Prachi Godbole  <prachi.godbole@imgtec.com>\n\ngcc/ChangeLog:\n\n\t* config/mips/mips.h (machine_function): New variable\n\tuse_hazard_barrier_return_p.\n\t* config/mips/mips.md (UNSPEC_JRHB): New unspec.\n\t(mips_hb_return_internal): New insn pattern.\n\t* config/mips/mips.cc (mips_attribute_table): Add attribute\n\tuse_hazard_barrier_return.\n\t(mips_use_hazard_barrier_return_p): New static function.\n\t(mips_function_attr_inlinable_p): Likewise.\n\t(mips_compute_frame_info): Set use_hazard_barrier_return_p.\n\tEmit error for unsupported architecture choice.\n\t(mips_function_ok_for_sibcall, mips_can_use_return_insn):\n\tReturn false for use_hazard_barrier_return.\n\t(mips_expand_epilogue): Emit hazard barrier return.\n\t* doc/extend.texi: Document use_hazard_barrier_return.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/mips/hazard-barrier-return-attribute.c: New test.\n\nSigned-off-by: Junxian Zhu <zhujunxian@oss.cipunited.com>", "tree": {"sha": "15f48ce9632a858176598a39e125ff1c5c8468b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15f48ce9632a858176598a39e125ff1c5c8468b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3a45f0b145ae9381ce3daa75db17c43a76ec7fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3a45f0b145ae9381ce3daa75db17c43a76ec7fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3a45f0b145ae9381ce3daa75db17c43a76ec7fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3a45f0b145ae9381ce3daa75db17c43a76ec7fd/comments", "author": {"login": "HeliC829", "id": 16401013, "node_id": "MDQ6VXNlcjE2NDAxMDEz", "avatar_url": "https://avatars.githubusercontent.com/u/16401013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HeliC829", "html_url": "https://github.com/HeliC829", "followers_url": "https://api.github.com/users/HeliC829/followers", "following_url": "https://api.github.com/users/HeliC829/following{/other_user}", "gists_url": "https://api.github.com/users/HeliC829/gists{/gist_id}", "starred_url": "https://api.github.com/users/HeliC829/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HeliC829/subscriptions", "organizations_url": "https://api.github.com/users/HeliC829/orgs", "repos_url": "https://api.github.com/users/HeliC829/repos", "events_url": "https://api.github.com/users/HeliC829/events{/privacy}", "received_events_url": "https://api.github.com/users/HeliC829/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e2b20ed3efd22acaabfa87fd07869045747bd7f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2b20ed3efd22acaabfa87fd07869045747bd7f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2b20ed3efd22acaabfa87fd07869045747bd7f9"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "b066a2cda75221137658777c234b9e1141bfff64", "filename": "gcc/config/mips/mips.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3a45f0b145ae9381ce3daa75db17c43a76ec7fd/gcc%2Fconfig%2Fmips%2Fmips.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3a45f0b145ae9381ce3daa75db17c43a76ec7fd/gcc%2Fconfig%2Fmips%2Fmips.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.cc?ref=a3a45f0b145ae9381ce3daa75db17c43a76ec7fd", "patch": "@@ -630,6 +630,7 @@ static const struct attribute_spec mips_attribute_table[] = {\n     mips_handle_use_shadow_register_set_attr, NULL },\n   { \"keep_interrupts_masked\",\t0, 0, false, true,  true, false, NULL, NULL },\n   { \"use_debug_exception_return\", 0, 0, false, true, true, false, NULL, NULL },\n+  { \"use_hazard_barrier_return\", 0, 0, true, false, false, false, NULL, NULL },\n   { NULL,\t   0, 0, false, false, false, false, NULL, NULL }\n };\n \f"}, {"sha": "f664d3044e1849a256c984e03b798f3d6b8f8b90", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3a45f0b145ae9381ce3daa75db17c43a76ec7fd/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3a45f0b145ae9381ce3daa75db17c43a76ec7fd/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=a3a45f0b145ae9381ce3daa75db17c43a76ec7fd", "patch": "@@ -3386,6 +3386,9 @@ struct GTY(())  machine_function {\n \n   /* True if GCC stored callee saved registers in the frame header.  */\n   bool use_frame_header_for_callee_saved_regs;\n+\n+  /* True if the function should generate hazard barrier return.  */\n+  bool use_hazard_barrier_return_p;\n };\n #endif\n "}, {"sha": "f881a8bae2ad02ab8ca94cc93f0eb8bbbb31c7b1", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3a45f0b145ae9381ce3daa75db17c43a76ec7fd/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3a45f0b145ae9381ce3daa75db17c43a76ec7fd/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=a3a45f0b145ae9381ce3daa75db17c43a76ec7fd", "patch": "@@ -159,6 +159,7 @@\n \n   ;; The `.insn' pseudo-op.\n   UNSPEC_INSN_PSEUDO\n+  UNSPEC_JRHB\n ])\n \n (define_constants\n@@ -6670,6 +6671,20 @@\n   [(set_attr \"type\"\t\"jump\")\n    (set_attr \"mode\"\t\"none\")])\n \n+;; Insn to clear execution and instruction hazards while returning.\n+;; However, it doesn't clear hazards created by the insn in its delay slot.\n+;; Thus, explicitly place a nop in its delay slot.\n+\n+(define_insn \"mips_hb_return_internal\"\n+  [(return)\n+   (unspec_volatile [(match_operand 0 \"pmode_register_operand\" \"\")]\n+\t\t    UNSPEC_JRHB)]\n+  \"\"\n+  {\n+    return \"%(jr.hb\\t$31%/%)\";\n+  }\n+  [(set_attr \"insn_count\" \"2\")])\n+\n ;; Normal return.\n \n (define_insn \"<optab>_internal\""}, {"sha": "c11229162551e0b32bd98de76d305fcd3af0e630", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3a45f0b145ae9381ce3daa75db17c43a76ec7fd/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3a45f0b145ae9381ce3daa75db17c43a76ec7fd/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=a3a45f0b145ae9381ce3daa75db17c43a76ec7fd", "patch": "@@ -5653,6 +5653,12 @@ On MIPS targets, you can use the @code{nocompression} function attribute\n to locally turn off MIPS16 and microMIPS code generation.  This attribute\n overrides the @option{-mips16} and @option{-mmicromips} options on the\n command line (@pxref{MIPS Options}).\n+\n+@item use_hazard_barrier_return\n+@cindex @code{use_hazard_barrier_return} function attribute, MIPS\n+This function attribute instructs the compiler to generate a hazard barrier\n+return that clears all execution and instruction hazards while returning,\n+instead of generating a normal return instruction.\n @end table\n \n @node MSP430 Function Attributes"}, {"sha": "3575af44dcde7e6ccd942ca6b6fff2bdd2b9787b", "filename": "gcc/testsuite/gcc.target/mips/hazard-barrier-return-attribute.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3a45f0b145ae9381ce3daa75db17c43a76ec7fd/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fhazard-barrier-return-attribute.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3a45f0b145ae9381ce3daa75db17c43a76ec7fd/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fhazard-barrier-return-attribute.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fhazard-barrier-return-attribute.c?ref=a3a45f0b145ae9381ce3daa75db17c43a76ec7fd", "patch": "@@ -0,0 +1,20 @@\n+/* Test attribute for clearing hazards while returning.  */\n+/* { dg-do compile } */\n+/* { dg-options \"isa_rev>=2 -mno-mips16\" } */\n+\n+extern int bar ();\n+\n+static int __attribute__ ((use_hazard_barrier_return))\n+foo0 ()\n+{\n+  return bar ();\n+}\n+\n+int\n+foo1 ()\n+{\n+  return foo0 ();\n+}\n+\n+/* { dg-final { scan-assembler \"foo0:\" } } */\n+/* { dg-final { scan-assembler-times \"\\tjr.hb\\t\\\\\\$31\\n\\tnop\\\\n\" 1 } } */"}]}