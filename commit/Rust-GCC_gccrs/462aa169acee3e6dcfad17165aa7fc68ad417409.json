{"sha": "462aa169acee3e6dcfad17165aa7fc68ad417409", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDYyYWExNjlhY2VlM2U2ZGNmYWQxNzE2NWFhN2ZjNjhhZDQxNzQwOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-07-27T22:06:03Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-07-27T22:06:03Z"}, "message": "pt.c (tsubst_expr): Handle getting an AGGR_INIT_EXPR from build_value_init.\n\n\t* pt.c (tsubst_expr) [DECL_EXPR]: Handle getting an AGGR_INIT_EXPR\n\tfrom build_value_init.\n\t* init.c (build_value_init_noctor): Give error for unknown array\n\tbound.\n\nFrom-SVN: r162603", "tree": {"sha": "006042e9b7977e67d56f3ee4b12aba0da516f847", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/006042e9b7977e67d56f3ee4b12aba0da516f847"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/462aa169acee3e6dcfad17165aa7fc68ad417409", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/462aa169acee3e6dcfad17165aa7fc68ad417409", "html_url": "https://github.com/Rust-GCC/gccrs/commit/462aa169acee3e6dcfad17165aa7fc68ad417409", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/462aa169acee3e6dcfad17165aa7fc68ad417409/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "418e920fc6c08a3f9b20a6996980c7380cbac67c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/418e920fc6c08a3f9b20a6996980c7380cbac67c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/418e920fc6c08a3f9b20a6996980c7380cbac67c"}], "stats": {"total": 70, "additions": 61, "deletions": 9}, "files": [{"sha": "362502126cbce4117f62d2da9fe61d7896ac59f0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/462aa169acee3e6dcfad17165aa7fc68ad417409/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/462aa169acee3e6dcfad17165aa7fc68ad417409/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=462aa169acee3e6dcfad17165aa7fc68ad417409", "patch": "@@ -1,3 +1,10 @@\n+2010-07-27  Jason Merrill  <jason@redhat.com>\n+\n+\t* pt.c (tsubst_expr) [DECL_EXPR]: Handle getting an AGGR_INIT_EXPR\n+\tfrom build_value_init.\n+\t* init.c (build_value_init_noctor): Give error for unknown array\n+\tbound.\n+\n 2010-07-27  Joseph Myers  <joseph@codesourcery.com>\n \n \t* cp-objcp-common.h (LANG_HOOKS_MISSING_ARGUMENT): Remove."}, {"sha": "0edb8004618fcf67d2e7de759cc93bebc39e500a", "filename": "gcc/cp/init.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/462aa169acee3e6dcfad17165aa7fc68ad417409/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/462aa169acee3e6dcfad17165aa7fc68ad417409/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=462aa169acee3e6dcfad17165aa7fc68ad417409", "patch": "@@ -379,7 +379,10 @@ build_value_init_noctor (tree type)\n       /* If we have an error_mark here, we should just return error mark\n \t as we don't know the size of the array yet.  */\n       if (max_index == error_mark_node)\n-\treturn error_mark_node;\n+\t{\n+\t  error (\"cannot value-initialize array of unknown bound %qT\", type);\n+\t  return error_mark_node;\n+\t}\n       gcc_assert (TREE_CODE (max_index) == INTEGER_CST);\n \n       /* A zero-sized array, which is accepted as an extension, will"}, {"sha": "2777ab790652f7043d9bf8a52740e06179f5f12a", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/462aa169acee3e6dcfad17165aa7fc68ad417409/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/462aa169acee3e6dcfad17165aa7fc68ad417409/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=462aa169acee3e6dcfad17165aa7fc68ad417409", "patch": "@@ -11697,14 +11697,18 @@ tsubst_expr (tree t, tree args, tsubst_flags_t complain, tree in_decl,\n \t\t\ttree t = RECUR (init);\n \n \t\t\tif (init && !t)\n-\t\t\t  /* If we had an initializer but it\n-\t\t\t     instantiated to nothing,\n-\t\t\t     value-initialize the object.  This will\n-\t\t\t     only occur when the initializer was a\n-\t\t\t     pack expansion where the parameter packs\n-\t\t\t     used in that expansion were of length\n-\t\t\t     zero.  */\n-\t\t\t  init = build_value_init (TREE_TYPE (decl));\n+\t\t\t  {\n+\t\t\t    /* If we had an initializer but it\n+\t\t\t       instantiated to nothing,\n+\t\t\t       value-initialize the object.  This will\n+\t\t\t       only occur when the initializer was a\n+\t\t\t       pack expansion where the parameter packs\n+\t\t\t       used in that expansion were of length\n+\t\t\t       zero.  */\n+\t\t\t    init = build_value_init (TREE_TYPE (decl));\n+\t\t\t    if (TREE_CODE (init) == AGGR_INIT_EXPR)\n+\t\t\t      init = get_target_expr (init);\n+\t\t\t  }\n \t\t\telse\n \t\t\t  init = t;\n \t\t      }"}, {"sha": "7a1a1759bab2af648208266da9fe7ed681267eba", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/462aa169acee3e6dcfad17165aa7fc68ad417409/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/462aa169acee3e6dcfad17165aa7fc68ad417409/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=462aa169acee3e6dcfad17165aa7fc68ad417409", "patch": "@@ -1,3 +1,8 @@\n+2010-07-27  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/variadic102.C: New.\n+\t* g++.dg/cpp0x/variadic103.C: New.\n+\n 2010-07-27  Maxim Kuvyrkov  <maxim@codesourcery.com>\n \n \tPR rtl-optimization/40956"}, {"sha": "dc9c4aea8cb55acd2404b4a7173b9dfa650350f2", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic102.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/462aa169acee3e6dcfad17165aa7fc68ad417409/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic102.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/462aa169acee3e6dcfad17165aa7fc68ad417409/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic102.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic102.C?ref=462aa169acee3e6dcfad17165aa7fc68ad417409", "patch": "@@ -0,0 +1,19 @@\n+// { dg-options \"-std=c++0x\" }\n+\n+struct nAny {\n+  template<class... T>\n+  nAny(T&&...);\n+};\n+\n+template<class T>\n+T&& create();\n+\n+template<class T, class... Args>\n+void test() {\n+  T t(create<Args>()...);\n+  (void) t;\n+}\n+\n+int main() {\n+  test<nAny>();\n+}"}, {"sha": "6d12331d000d59f1dcee2f35fa02c9e036ae584c", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic103.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/462aa169acee3e6dcfad17165aa7fc68ad417409/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic103.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/462aa169acee3e6dcfad17165aa7fc68ad417409/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic103.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic103.C?ref=462aa169acee3e6dcfad17165aa7fc68ad417409", "patch": "@@ -0,0 +1,14 @@\n+// { dg-options \"-std=c++0x\" }\n+\n+template<class T>\n+T&& create();\n+\n+template<class T, class... Args>\n+void test() {\n+  T t(create<Args>()...);\t// { dg-error \"unknown bound\" }\n+  (void) t;\n+}\n+\n+int main() {\n+  test<int[]>();\n+}"}]}