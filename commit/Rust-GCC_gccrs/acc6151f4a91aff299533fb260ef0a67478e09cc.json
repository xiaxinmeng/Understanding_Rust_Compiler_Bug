{"sha": "acc6151f4a91aff299533fb260ef0a67478e09cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNjNjE1MWY0YTkxYWZmMjk5NTMzZmIyNjBlZjBhNjc0NzhlMDljYw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-01-25T23:43:23Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-01-25T23:43:23Z"}, "message": "re PR other/56076 (Several 64-bit libgo tests FAIL in read_line_header)\n\n\tPR other/56076\nruntime: Support sparc64 in lfstack.\n\nFrom-SVN: r195479", "tree": {"sha": "aa68d861ae8100544810f30bcb815d0e76511eb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa68d861ae8100544810f30bcb815d0e76511eb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/acc6151f4a91aff299533fb260ef0a67478e09cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acc6151f4a91aff299533fb260ef0a67478e09cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acc6151f4a91aff299533fb260ef0a67478e09cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acc6151f4a91aff299533fb260ef0a67478e09cc/comments", "author": null, "committer": null, "parents": [{"sha": "1e678aed6cc8f4f77e2485a32c89cc96c4efe8d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e678aed6cc8f4f77e2485a32c89cc96c4efe8d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e678aed6cc8f4f77e2485a32c89cc96c4efe8d8"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "783595abe7ab4e83421c1ae938035c2034eb6444", "filename": "libgo/runtime/lfstack.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acc6151f4a91aff299533fb260ef0a67478e09cc/libgo%2Fruntime%2Flfstack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acc6151f4a91aff299533fb260ef0a67478e09cc/libgo%2Fruntime%2Flfstack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Flfstack.c?ref=acc6151f4a91aff299533fb260ef0a67478e09cc", "patch": "@@ -15,6 +15,15 @@\n # define PTR_BITS 32\n #endif\n #define PTR_MASK ((1ull<<PTR_BITS)-1)\n+#define CNT_MASK (0ull-1)\n+\n+#if __SIZEOF_POINTER__ == 8 && defined(__sparc__)\n+// SPARC64 uses all 64 bits of virtual addresses.  Use low-order three\n+bits as ABA counter.\n+#define PTR_BITS 0\n+#define CNT_MASK 7\n+#define PTR_MASK ((0ull-1)<<3)\n+#endif\n \n void\n runtime_lfstackpush(uint64 *head, LFNode *node)\n@@ -27,7 +36,7 @@ runtime_lfstackpush(uint64 *head, LFNode *node)\n \t}\n \n \tnode->pushcnt++;\n-\tnew = (uint64)(uintptr)node|(((uint64)node->pushcnt)<<PTR_BITS);\n+\tnew = (uint64)(uintptr)node|(((uint64)node->pushcnt&CNT_MASK)<<PTR_BITS);\n \told = runtime_atomicload64(head);\n \tfor(;;) {\n \t\tnode->next = (LFNode*)(uintptr)(old&PTR_MASK);\n@@ -50,7 +59,7 @@ runtime_lfstackpop(uint64 *head)\n \t\tnode2 = runtime_atomicloadp(&node->next);\n \t\tnew = 0;\n \t\tif(node2 != nil)\n-\t\t\tnew = (uint64)(uintptr)node2|(((uint64)node2->pushcnt)<<PTR_BITS);\n+\t\t\tnew = (uint64)(uintptr)node2|(((uint64)node2->pushcnt&CNT_MASK)<<PTR_BITS);\n \t\tif(runtime_cas64(head, &old, new))\n \t\t\treturn node;\n \t}"}]}