{"sha": "521ca78e26d4d145ca629221ddb24e771a86ef1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTIxY2E3OGUyNmQ0ZDE0NWNhNjI5MjIxZGRiMjRlNzcxYTg2ZWYxZA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2011-05-25T16:19:36Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2011-05-25T16:19:36Z"}, "message": "Replace q_regs_operand with QIreg_operand in QI ext patterns.\n\n2011-05-25  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/49142\n\t* config/i386/i386.md (*movqi_extv_1_rex64): Remove\n\t\"register_operand\" check and replace q_regs_operand with\n\tQIreg_operand in \"type\" calculation.\n\t(*movqi_extv_1): Likewise.\n\t(*movqi_extzv_2_rex64): Likewise.\n\t(*movqi_extzv_2): Likewise.\n\n\t* config/i386/predicates.md (QIreg_operand): New.\n\nFrom-SVN: r174211", "tree": {"sha": "f4bd254ec77c9ebc3c6a1081b405398967bb2295", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4bd254ec77c9ebc3c6a1081b405398967bb2295"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/521ca78e26d4d145ca629221ddb24e771a86ef1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/521ca78e26d4d145ca629221ddb24e771a86ef1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/521ca78e26d4d145ca629221ddb24e771a86ef1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/521ca78e26d4d145ca629221ddb24e771a86ef1d/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "29f8b8449c6aafc8e6633871fd8783d61d5dcb04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29f8b8449c6aafc8e6633871fd8783d61d5dcb04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29f8b8449c6aafc8e6633871fd8783d61d5dcb04"}], "stats": {"total": 39, "additions": 26, "deletions": 13}, "files": [{"sha": "620acbb117bf886bdbaae8f791358f150bd5f0fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/521ca78e26d4d145ca629221ddb24e771a86ef1d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/521ca78e26d4d145ca629221ddb24e771a86ef1d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=521ca78e26d4d145ca629221ddb24e771a86ef1d", "patch": "@@ -1,3 +1,15 @@\n+2011-05-25  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/49142\n+\t* config/i386/i386.md (*movqi_extv_1_rex64): Remove\n+\t\"register_operand\" check and replace q_regs_operand with\n+\tQIreg_operand in \"type\" calculation.\n+\t(*movqi_extv_1): Likewise.\n+\t(*movqi_extzv_2_rex64): Likewise.\n+\t(*movqi_extzv_2): Likewise.\n+\n+\t* config/i386/predicates.md (QIreg_operand): New.\n+\n 2011-05-25  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-alias.c (indirect_ref_may_alias_decl_p): Fix"}, {"sha": "1cdbe7e430b29c366ce929bdfbf221def6258948", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/521ca78e26d4d145ca629221ddb24e771a86ef1d/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/521ca78e26d4d145ca629221ddb24e771a86ef1d/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=521ca78e26d4d145ca629221ddb24e771a86ef1d", "patch": "@@ -2488,10 +2488,9 @@\n     }\n }\n   [(set (attr \"type\")\n-     (if_then_else (and (match_operand:QI 0 \"register_operand\" \"\")\n-\t\t\t(ior (not (match_operand:QI 0 \"q_regs_operand\" \"\"))\n-\t\t\t     (ne (symbol_ref \"TARGET_MOVX\")\n-\t\t\t\t (const_int 0))))\n+     (if_then_else (ior (not (match_operand:QI 0 \"QIreg_operand\" \"\"))\n+\t\t\t(ne (symbol_ref \"TARGET_MOVX\")\n+\t\t\t    (const_int 0)))\n \t(const_string \"imovx\")\n \t(const_string \"imov\")))\n    (set (attr \"mode\")\n@@ -2515,10 +2514,9 @@\n     }\n }\n   [(set (attr \"type\")\n-     (if_then_else (and (match_operand:QI 0 \"register_operand\" \"\")\n-\t\t\t(ior (not (match_operand:QI 0 \"q_regs_operand\" \"\"))\n-\t\t\t     (ne (symbol_ref \"TARGET_MOVX\")\n-\t\t\t\t (const_int 0))))\n+     (if_then_else (ior (not (match_operand:QI 0 \"QIreg_operand\" \"\"))\n+\t\t\t(ne (symbol_ref \"TARGET_MOVX\")\n+\t\t\t    (const_int 0)))\n \t(const_string \"imovx\")\n \t(const_string \"imov\")))\n    (set (attr \"mode\")\n@@ -2553,7 +2551,7 @@\n     }\n }\n   [(set (attr \"type\")\n-     (if_then_else (ior (not (match_operand:QI 0 \"q_regs_operand\" \"\"))\n+     (if_then_else (ior (not (match_operand:QI 0 \"QIreg_operand\" \"\"))\n \t\t\t(ne (symbol_ref \"TARGET_MOVX\")\n \t\t\t    (const_int 0)))\n \t(const_string \"imovx\")\n@@ -2580,10 +2578,9 @@\n     }\n }\n   [(set (attr \"type\")\n-     (if_then_else (and (match_operand:QI 0 \"register_operand\" \"\")\n-\t\t\t(ior (not (match_operand:QI 0 \"q_regs_operand\" \"\"))\n-\t\t\t     (ne (symbol_ref \"TARGET_MOVX\")\n-\t\t\t\t (const_int 0))))\n+     (if_then_else (ior (not (match_operand:QI 0 \"QIreg_operand\" \"\"))\n+\t\t\t(ne (symbol_ref \"TARGET_MOVX\")\n+\t\t\t    (const_int 0)))\n \t(const_string \"imovx\")\n \t(const_string \"imov\")))\n    (set (attr \"mode\")"}, {"sha": "1471f5a22820cc9a545553e2481b93a988f1c8be", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/521ca78e26d4d145ca629221ddb24e771a86ef1d/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/521ca78e26d4d145ca629221ddb24e771a86ef1d/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=521ca78e26d4d145ca629221ddb24e771a86ef1d", "patch": "@@ -82,6 +82,10 @@\n   (and (match_code \"reg\")\n        (match_test \"REGNO (op) == FLAGS_REG\")))\n \n+;; Return true if op is one of QImode registers: %[abcd][hl].\n+(define_predicate \"QIreg_operand\"\n+  (match_test \"QI_REG_P (op)\"))\n+\n ;; Return true if op is a QImode register operand other than\n ;; %[abcd][hl].\n (define_predicate \"ext_QIreg_operand\""}]}