{"sha": "144a96e4c914710cacdb95d33f4e03dc9fed7655", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ0YTk2ZTRjOTE0NzEwY2FjZGI5NWQzM2Y0ZTAzZGM5ZmVkNzY1NQ==", "commit": {"author": {"name": "Bernd Edlinger", "email": "bernd.edlinger@hotmail.de", "date": "2016-09-19T22:10:11Z"}, "committer": {"name": "Bernd Edlinger", "email": "edlinger@gcc.gnu.org", "date": "2016-09-19T22:10:11Z"}, "message": "re PR c++/77434 (warn about suspicious precedence of ternary operator (?:))\n\ngcc:\n2016-09-19  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        PR c++/77434\n        * doc/invoke.texi: Document -Wint-in-bool-context.\n\nc-family:\n2016-09-19  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        PR c++/77434\n        * c.opt (Wcond-in-bool-context): New warning.\n        * c-common.c (c_common_truthvalue_conversion): Warn on integer\n        constants in boolean context.\n\ncp:\n2016-09-19  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        PR c++/77434\n        * cvt.c (cp_convert_and_check): Suppress Wint-in-bool-context here.\n\ntestsuite:\n2016-09-19  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        PR c++/77434\n        * c-c++-common/Wint-in-bool-context.c: New test.\n\nFrom-SVN: r240251", "tree": {"sha": "e93888863720e72051a26271bdd350b2c7f07917", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e93888863720e72051a26271bdd350b2c7f07917"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/144a96e4c914710cacdb95d33f4e03dc9fed7655", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/144a96e4c914710cacdb95d33f4e03dc9fed7655", "html_url": "https://github.com/Rust-GCC/gccrs/commit/144a96e4c914710cacdb95d33f4e03dc9fed7655", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/144a96e4c914710cacdb95d33f4e03dc9fed7655/comments", "author": {"login": "bernd-edlinger", "id": 17638929, "node_id": "MDQ6VXNlcjE3NjM4OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-edlinger", "html_url": "https://github.com/bernd-edlinger", "followers_url": "https://api.github.com/users/bernd-edlinger/followers", "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions", "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs", "repos_url": "https://api.github.com/users/bernd-edlinger/repos", "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3385d437fe1e17b7ba4735b5b6869e2153bfb506", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3385d437fe1e17b7ba4735b5b6869e2153bfb506", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3385d437fe1e17b7ba4735b5b6869e2153bfb506"}], "stats": {"total": 78, "additions": 77, "deletions": 1}, "files": [{"sha": "e42b2e77f4e3a3d6c7bee80b7f2ea8f18f0cde7d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/144a96e4c914710cacdb95d33f4e03dc9fed7655/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/144a96e4c914710cacdb95d33f4e03dc9fed7655/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=144a96e4c914710cacdb95d33f4e03dc9fed7655", "patch": "@@ -1,5 +1,8 @@\n 2016-09-19  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n+\tPR c++/77434\n+\t* doc/invoke.texi: Document -Wint-in-bool-context.\n+\n \tPR middle-end/77421\n \t* dwarf2out.c (output_loc_operands): Fix an assertion.\n "}, {"sha": "5efbf55e1a711ef8bf894ed8b9fecd5670dbb976", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/144a96e4c914710cacdb95d33f4e03dc9fed7655/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/144a96e4c914710cacdb95d33f4e03dc9fed7655/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=144a96e4c914710cacdb95d33f4e03dc9fed7655", "patch": "@@ -1,3 +1,10 @@\n+2016-09-19  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\tPR c++/77434\n+\t* c.opt (Wint-in-bool-context): New warning.\n+\t* c-common.c (c_common_truthvalue_conversion): Warn on integer\n+\tconstants in boolean context.\n+\n 2016-09-19  Joseph Myers  <joseph@codesourcery.com>\n \n \t* c-common.c (max_align_t_align): Also consider alignment of"}, {"sha": "d1372a4feea46caa462971227ceafc9688cce5d1", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/144a96e4c914710cacdb95d33f4e03dc9fed7655/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/144a96e4c914710cacdb95d33f4e03dc9fed7655/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=144a96e4c914710cacdb95d33f4e03dc9fed7655", "patch": "@@ -4652,6 +4652,19 @@ c_common_truthvalue_conversion (location_t location, tree expr)\n \t\t\t\t\t       TREE_OPERAND (expr, 0));\n \n     case COND_EXPR:\n+      if (warn_int_in_bool_context)\n+\t{\n+\t  tree val1 = fold_for_warn (TREE_OPERAND (expr, 1));\n+\t  tree val2 = fold_for_warn (TREE_OPERAND (expr, 2));\n+\t  if (TREE_CODE (val1) == INTEGER_CST\n+\t      && TREE_CODE (val2) == INTEGER_CST\n+\t      && !integer_zerop (val1)\n+\t      && !integer_zerop (val2)\n+\t      && (!integer_onep (val1)\n+\t\t  || !integer_onep (val2)))\n+\t    warning_at (EXPR_LOCATION (expr), OPT_Wint_in_bool_context,\n+\t\t        \"?: using integer constants in boolean context\");\n+\t}\n       /* Distribute the conversion into the arms of a COND_EXPR.  */\n       if (c_dialect_cxx ())\n \t{"}, {"sha": "6cf915d5143cef62f03a34bc0fd0585842ef5efd", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/144a96e4c914710cacdb95d33f4e03dc9fed7655/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/144a96e4c914710cacdb95d33f4e03dc9fed7655/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=144a96e4c914710cacdb95d33f4e03dc9fed7655", "patch": "@@ -545,6 +545,10 @@ Wint-conversion\n C ObjC Var(warn_int_conversion) Init(1) Warning\n Warn about incompatible integer to pointer and pointer to integer conversions.\n \n+Wint-in-bool-context\n+C ObjC C++ ObjC++ Var(warn_int_in_bool_context) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)\n+Warn for suspicious integer expressions in boolean context.\n+\n Wint-to-pointer-cast\n C ObjC C++ ObjC++ Var(warn_int_to_pointer_cast) Init(1) Warning\n Warn when there is a cast to a pointer from an integer of a different size."}, {"sha": "6aa79a9409f3d21255bb5d49b55bc214cc563170", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/144a96e4c914710cacdb95d33f4e03dc9fed7655/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/144a96e4c914710cacdb95d33f4e03dc9fed7655/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=144a96e4c914710cacdb95d33f4e03dc9fed7655", "patch": "@@ -1,3 +1,8 @@\n+2016-09-19  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\tPR c++/77434\n+\t* cvt.c (cp_convert_and_check): Suppress Wint-in-bool-context here.\n+\n 2016-09-16  Patrick Palka  <ppalka@gcc.gnu.org>\n \n \tPR c++/77639"}, {"sha": "2f5f15a2c8269c6f0ea003737b2828c4ee7ba203", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/144a96e4c914710cacdb95d33f4e03dc9fed7655/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/144a96e4c914710cacdb95d33f4e03dc9fed7655/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=144a96e4c914710cacdb95d33f4e03dc9fed7655", "patch": "@@ -645,6 +645,7 @@ cp_convert_and_check (tree type, tree expr, tsubst_flags_t complain)\n \t{\n \t  /* Avoid bogus -Wparentheses warnings.  */\n \t  warning_sentinel w (warn_parentheses);\n+\t  warning_sentinel c (warn_int_in_bool_context);\n \t  folded_result = cp_convert (type, folded, tf_none);\n \t}\n       folded_result = fold_simple (folded_result);"}, {"sha": "3c272836feb7810c8c661d39ef118ee74cdab7a6", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/144a96e4c914710cacdb95d33f4e03dc9fed7655/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/144a96e4c914710cacdb95d33f4e03dc9fed7655/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=144a96e4c914710cacdb95d33f4e03dc9fed7655", "patch": "@@ -273,7 +273,7 @@ Objective-C and Objective-C++ Dialects}.\n -Wframe-larger-than=@var{len} -Wno-free-nonheap-object -Wjump-misses-init @gol\n -Wignored-qualifiers  -Wignored-attributes  -Wincompatible-pointer-types @gol\n -Wimplicit  -Wimplicit-function-declaration  -Wimplicit-int @gol\n--Winit-self  -Winline  -Wno-int-conversion @gol\n+-Winit-self  -Winline  -Wno-int-conversion  -Wint-in-bool-context @gol\n -Wno-int-to-pointer-cast -Winvalid-memory-model -Wno-invalid-offsetof @gol\n -Winvalid-pch -Wlarger-than=@var{len} @gol\n -Wlogical-op -Wlogical-not-parentheses -Wlong-long @gol\n@@ -3660,6 +3660,7 @@ Options} and @ref{Objective-C and Objective-C++ Dialect Options}.\n -Wduplicate-decl-specifier @r{(C and Objective-C only)} @gol\n -Wenum-compare @r{(in C/ObjC; this is on by default in C++)} @gol\n -Wformat   @gol\n+-Wint-in-bool-context  @gol\n -Wimplicit @r{(C and Objective-C only)} @gol\n -Wimplicit-int @r{(C and Objective-C only)} @gol\n -Wimplicit-function-declaration @r{(C and Objective-C only)} @gol\n@@ -5837,6 +5838,14 @@ warning about it.\n The restrictions on @code{offsetof} may be relaxed in a future version\n of the C++ standard.\n \n+@item -Wint-in-bool-context\n+@opindex Wint-in-bool-context\n+@opindex Wno-int-in-bool-context\n+Warn for suspicious use of integer values where boolean values are expected,\n+such as conditional expressions (?:) using non-boolean integer constants in\n+boolean context, like @code{if (a <= b ? 2 : 3)}.\n+This warning is enabled by @option{-Wall}.\n+\n @item -Wno-int-to-pointer-cast\n @opindex Wno-int-to-pointer-cast\n @opindex Wint-to-pointer-cast"}, {"sha": "ca54995cc6ada65d2ad22a397adbdd857d832f3e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/144a96e4c914710cacdb95d33f4e03dc9fed7655/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/144a96e4c914710cacdb95d33f4e03dc9fed7655/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=144a96e4c914710cacdb95d33f4e03dc9fed7655", "patch": "@@ -1,3 +1,8 @@\n+2016-09-19  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\tPR c++/77434\n+\t* c-c++-common/Wint-in-bool-context.c: New test.\n+\n 2016-09-19  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/cr-decimal-dig-1.c: New test."}, {"sha": "38832d78f2f98db07c81b7fa1eb9cf17eedeb994", "filename": "gcc/testsuite/c-c++-common/Wint-in-bool-context.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/144a96e4c914710cacdb95d33f4e03dc9fed7655/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWint-in-bool-context.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/144a96e4c914710cacdb95d33f4e03dc9fed7655/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWint-in-bool-context.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWint-in-bool-context.c?ref=144a96e4c914710cacdb95d33f4e03dc9fed7655", "patch": "@@ -0,0 +1,29 @@\n+/* PR c++/77434 */\n+/* { dg-options \"-Wint-in-bool-context\" } */\n+/* { dg-do compile } */\n+\n+int foo (int a, int b)\n+{\n+  if (a > 0 && a <= (b == 1) ? 1 : 2) /* { dg-warning \"boolean context\" } */\n+    return 1;\n+\n+  if (a > 0 && a <= (b == 2) ? 1 : 1) /* { dg-bogus \"boolean context\" } */\n+    return 2;\n+\n+  if (a > 0 && a <= (b == 3) ? 0 : 2) /* { dg-bogus \"boolean context\" } */\n+    return 3;\n+\n+  if (a == b ? 0 : 0) /* { dg-bogus \"boolean context\" } */\n+    return 4;\n+\n+  if (a == ((b ? 2|4 : 1) & 3 ? 0 : 2)) /* { dg-bogus \"boolean context\" } */\n+    return 5;\n+\n+  if (a ? 1 : 1+1) /* { dg-warning \"boolean context\" } */\n+    return 6;\n+\n+  if (b ? 1+1 : 1) /* { dg-warning \"boolean context\" } */\n+    return 7;\n+\n+  return 0;\n+}"}]}