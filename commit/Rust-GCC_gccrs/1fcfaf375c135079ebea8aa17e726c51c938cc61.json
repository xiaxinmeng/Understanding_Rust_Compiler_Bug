{"sha": "1fcfaf375c135079ebea8aa17e726c51c938cc61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZjZmFmMzc1YzEzNTA3OWViZWE4YWExN2U3MjZjNTFjOTM4Y2M2MQ==", "commit": {"author": {"name": "Dale Johannesen", "email": "dalej@apple.com", "date": "2002-12-06T00:08:11Z"}, "committer": {"name": "Dale Johannesen", "email": "dalej@gcc.gnu.org", "date": "2002-12-06T00:08:11Z"}, "message": "tree.c (unsafe_for_reeval): Consider callee child of CALL_EXPR.\n\n2002-12-05  Dale Johannesen  <dalej@apple.com>\n\n        * tree.c (unsafe_for_reeval):  Consider callee child of CALL_EXPR.\n\nFrom-SVN: r59875", "tree": {"sha": "e2369ad9840bdca798167cf1c0dc408bed8bef39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2369ad9840bdca798167cf1c0dc408bed8bef39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1fcfaf375c135079ebea8aa17e726c51c938cc61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fcfaf375c135079ebea8aa17e726c51c938cc61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fcfaf375c135079ebea8aa17e726c51c938cc61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fcfaf375c135079ebea8aa17e726c51c938cc61/comments", "author": null, "committer": null, "parents": [{"sha": "1a823ac1fd1aeb2654e666017cea1b82a3b188b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a823ac1fd1aeb2654e666017cea1b82a3b188b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a823ac1fd1aeb2654e666017cea1b82a3b188b6"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "dc7a57d47e3d9105ad3c6048234778c01edf9a96", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fcfaf375c135079ebea8aa17e726c51c938cc61/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fcfaf375c135079ebea8aa17e726c51c938cc61/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1fcfaf375c135079ebea8aa17e726c51c938cc61", "patch": "@@ -1,3 +1,7 @@\n+2002-12-05  Dale Johannesen  <dalej@apple.com>\n+\n+\t* tree.c (unsafe_for_reeval):  Consider callee child of CALL_EXPR.\n+\n 2002-12-05  Danny Smith  <dannysmith@users.sourceforge.net>\n \n \t* config/i386/cygwin.h (SUBTARGET_PROLOGUE): Replace with"}, {"sha": "a1876257e2fc595c062c6b87156ab9a887d741cf", "filename": "gcc/testsuite/gcc.dg/20021205-1.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fcfaf375c135079ebea8aa17e726c51c938cc61/gcc%2Ftestsuite%2Fgcc.dg%2F20021205-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fcfaf375c135079ebea8aa17e726c51c938cc61/gcc%2Ftestsuite%2Fgcc.dg%2F20021205-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20021205-1.c?ref=1fcfaf375c135079ebea8aa17e726c51c938cc61", "patch": "@@ -0,0 +1,10 @@\n+/* dg-do compile */\n+/* dg-options \"-O3\" */\n+typedef struct x x;\n+struct x { char * (*bar) (int); };\n+static x **foo() { return ((x**)baz()); }\n+int xyzzy()\n+{\n+    baz((*foo())->bar(0));\n+    return 3;\n+}"}, {"sha": "04fddb26dd3f2c9b7a274f94d11be4613dd065df", "filename": "gcc/tree.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fcfaf375c135079ebea8aa17e726c51c938cc61/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fcfaf375c135079ebea8aa17e726c51c938cc61/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=1fcfaf375c135079ebea8aa17e726c51c938cc61", "patch": "@@ -1634,7 +1634,7 @@ unsafe_for_reeval (expr)\n {\n   int unsafeness = 0;\n   enum tree_code code;\n-  int i, tmp;\n+  int i, tmp, tmp2;\n   tree exp;\n   int first_rtl;\n \n@@ -1660,8 +1660,9 @@ unsafe_for_reeval (expr)\n       return unsafeness;\n \n     case CALL_EXPR:\n+      tmp2 = unsafe_for_reeval (TREE_OPERAND (expr, 0));\n       tmp = unsafe_for_reeval (TREE_OPERAND (expr, 1));\n-      return MAX (tmp, 1);\n+      return MAX (MAX (tmp, 1), tmp2);\n \n     case TARGET_EXPR:\n       unsafeness = 1;"}]}