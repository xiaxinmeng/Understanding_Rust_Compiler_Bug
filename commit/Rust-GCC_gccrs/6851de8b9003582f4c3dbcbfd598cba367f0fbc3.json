{"sha": "6851de8b9003582f4c3dbcbfd598cba367f0fbc3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg1MWRlOGI5MDAzNTgyZjRjM2RiY2JmZDU5OGNiYTM2N2YwZmJjMw==", "commit": {"author": {"name": "Frederik Harwath", "email": "frederik@codesourcery.com", "date": "2019-11-29T15:02:35Z"}, "committer": {"name": "Frederik Harwath", "email": "frederik@gcc.gnu.org", "date": "2019-11-29T15:02:35Z"}, "message": "Fix ICE in re-simplification of VEC_COND_EXPR\n\nThe function maybe_resimplify_conditional_op uses operation_could_trap_p to\ncheck if the resulting operation of a simplification can trap.  Because of the\nchanges introduced by revision r276659, this results in an ICE due to a\nviolated assertion in operation_could_trap_p if the operation is a COND_EXPR or\na VEC_COND_EXPR.  The changes have allowed those expressions to trap and\nwhether they do cannot be determined without considering their condition\nwhich is not available to operation_could_trap_p.\n\nChange maybe_resimplify_conditional_op to inspect the condition of\nCOND_EXPRs and VEC_COND_EXPRs to determine if they can trap.\n\nFrom-SVN: r278853", "tree": {"sha": "044542ed3bf35ca0399d591f60710c233294a8fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/044542ed3bf35ca0399d591f60710c233294a8fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6851de8b9003582f4c3dbcbfd598cba367f0fbc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6851de8b9003582f4c3dbcbfd598cba367f0fbc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6851de8b9003582f4c3dbcbfd598cba367f0fbc3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6851de8b9003582f4c3dbcbfd598cba367f0fbc3/comments", "author": {"login": "frederik-h", "id": 22046314, "node_id": "MDQ6VXNlcjIyMDQ2MzE0", "avatar_url": "https://avatars.githubusercontent.com/u/22046314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frederik-h", "html_url": "https://github.com/frederik-h", "followers_url": "https://api.github.com/users/frederik-h/followers", "following_url": "https://api.github.com/users/frederik-h/following{/other_user}", "gists_url": "https://api.github.com/users/frederik-h/gists{/gist_id}", "starred_url": "https://api.github.com/users/frederik-h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frederik-h/subscriptions", "organizations_url": "https://api.github.com/users/frederik-h/orgs", "repos_url": "https://api.github.com/users/frederik-h/repos", "events_url": "https://api.github.com/users/frederik-h/events{/privacy}", "received_events_url": "https://api.github.com/users/frederik-h/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7e99af4816cfad578094fcf08e2377f3ed76e201", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e99af4816cfad578094fcf08e2377f3ed76e201", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e99af4816cfad578094fcf08e2377f3ed76e201"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "2b2cde341fa6bdfef3de67095ba0cb7372c5b9bf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6851de8b9003582f4c3dbcbfd598cba367f0fbc3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6851de8b9003582f4c3dbcbfd598cba367f0fbc3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6851de8b9003582f4c3dbcbfd598cba367f0fbc3", "patch": "@@ -1,3 +1,9 @@\n+2019-11-29  Frederik Harwath  <frederik@codesourcery.com>\n+\n+\t* gimple-match-head.c (maybe_resimplify_conditional_op): Use\n+  \tgeneric_expr_could_trap_p to check if the condition of COND_EXPR or\n+  \tVEC_COND_EXPR can trap.\n+\n 2019-11-29  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR tree-optimization/92677"}, {"sha": "9010f11621e4de078ae0786f002818bcc3531454", "filename": "gcc/gimple-match-head.c", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6851de8b9003582f4c3dbcbfd598cba367f0fbc3/gcc%2Fgimple-match-head.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6851de8b9003582f4c3dbcbfd598cba367f0fbc3/gcc%2Fgimple-match-head.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-match-head.c?ref=6851de8b9003582f4c3dbcbfd598cba367f0fbc3", "patch": "@@ -144,9 +144,21 @@ maybe_resimplify_conditional_op (gimple_seq *seq, gimple_match_op *res_op,\n       /* Likewise if the operation would not trap.  */\n       bool honor_trapv = (INTEGRAL_TYPE_P (res_op->type)\n \t\t\t  && TYPE_OVERFLOW_TRAPS (res_op->type));\n-      if (!operation_could_trap_p ((tree_code) res_op->code,\n-\t\t\t\t   FLOAT_TYPE_P (res_op->type),\n-\t\t\t\t   honor_trapv, res_op->op_or_null (1)))\n+      tree_code op_code = (tree_code) res_op->code;\n+      bool op_could_trap;\n+\n+      /* COND_EXPR and VEC_COND_EXPR will trap if, and only if, the condition\n+\t traps and hence we have to check this.  For all other operations, we\n+\t don't need to consider the operands.  */\n+      if (op_code == COND_EXPR || op_code == VEC_COND_EXPR)\n+\top_could_trap = generic_expr_could_trap_p (res_op->ops[0]);\n+      else\n+\top_could_trap = operation_could_trap_p ((tree_code) res_op->code,\n+\t\t\t\t\t\tFLOAT_TYPE_P (res_op->type),\n+\t\t\t\t\t\thonor_trapv,\n+\t\t\t\t\t\tres_op->op_or_null (1));\n+\n+      if (!op_could_trap)\n \t{\n \t  res_op->cond.cond = NULL_TREE;\n \t  return false;"}]}