{"sha": "d73ee4e74eb82f29e5949c13c6544b50d0f96d4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDczZWU0ZTc0ZWI4MmYyOWU1OTQ5YzEzYzY1NDRiNTBkMGY5NmQ0Yw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2010-11-05T12:53:39Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2010-11-05T12:53:39Z"}, "message": "Check 256bit AVX register in move expanders.\n\ngcc/\n\n2010-11-05  H.J. Lu  <hongjiu.lu@intel.com>\n\t    Uros Bizjak  <ubizjak@gmail.com>\n\n\t* config/i386/i386.c (ix86_expand_move): Set use_avx256_p if\n\t256bit AVX register is used.\n\t(ix86_expand_vector_move_misalign): Likewise.\n\t(ix86_expand_vector_move): Replace use_avx256_p with\n\tVALID_AVX256_REG_MODE.\n\ngcc/testsuite/\n\n2010-11-05  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* gcc.target/i386/avx-vzeroupper-19.c: New.\n\nCo-Authored-By: Uros Bizjak <ubizjak@gmail.com>\n\nFrom-SVN: r166358", "tree": {"sha": "699be373e4c6e336a681bdbc2e0329aab8120291", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/699be373e4c6e336a681bdbc2e0329aab8120291"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d73ee4e74eb82f29e5949c13c6544b50d0f96d4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d73ee4e74eb82f29e5949c13c6544b50d0f96d4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d73ee4e74eb82f29e5949c13c6544b50d0f96d4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d73ee4e74eb82f29e5949c13c6544b50d0f96d4c/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8b7e852901472ee45e1b1e3c2dbfa410eb892290", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b7e852901472ee45e1b1e3c2dbfa410eb892290", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b7e852901472ee45e1b1e3c2dbfa410eb892290"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "1d0902fe5f700f9ee8069f0d78e0e5806cda2a63", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d73ee4e74eb82f29e5949c13c6544b50d0f96d4c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d73ee4e74eb82f29e5949c13c6544b50d0f96d4c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d73ee4e74eb82f29e5949c13c6544b50d0f96d4c", "patch": "@@ -1,3 +1,12 @@\n+2010-11-05  H.J. Lu  <hongjiu.lu@intel.com>\n+\t    Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c (ix86_expand_move): Set use_avx256_p if\n+\t256bit AVX register is used.\n+\t(ix86_expand_vector_move_misalign): Likewise.\n+\t(ix86_expand_vector_move): Replace use_avx256_p with\n+\tVALID_AVX256_REG_MODE.\n+\n 2010-11-05  Joern Rennecke  <amylaar@spamcop.net>\n \n \t PR target/44750"}, {"sha": "00febba7c6446a2db940b9a9f6f550bf73557637", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d73ee4e74eb82f29e5949c13c6544b50d0f96d4c/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d73ee4e74eb82f29e5949c13c6544b50d0f96d4c/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=d73ee4e74eb82f29e5949c13c6544b50d0f96d4c", "patch": "@@ -15000,6 +15000,9 @@ ix86_expand_move (enum machine_mode mode, rtx operands[])\n   rtx op0, op1;\n   enum tls_model model;\n \n+  if (VALID_AVX256_REG_MODE (mode))\n+    cfun->machine->use_avx256_p = true;\n+\n   op0 = operands[0];\n   op1 = operands[1];\n \n@@ -15144,7 +15147,7 @@ ix86_expand_vector_move (enum machine_mode mode, rtx operands[])\n   rtx op0 = operands[0], op1 = operands[1];\n   unsigned int align = GET_MODE_ALIGNMENT (mode);\n \n-  if (use_avx256_p (mode, NULL_TREE))\n+  if (VALID_AVX256_REG_MODE (mode))\n     cfun->machine->use_avx256_p = true;\n \n   /* Force constants other than zero into memory.  We do not know how\n@@ -15253,6 +15256,9 @@ ix86_expand_vector_move_misalign (enum machine_mode mode, rtx operands[])\n {\n   rtx op0, op1, m;\n \n+  if (VALID_AVX256_REG_MODE (mode))\n+    cfun->machine->use_avx256_p = true;\n+\n   op0 = operands[0];\n   op1 = operands[1];\n "}, {"sha": "c7189a95cebcc22dd64533818d80fea06ca8ec38", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d73ee4e74eb82f29e5949c13c6544b50d0f96d4c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d73ee4e74eb82f29e5949c13c6544b50d0f96d4c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d73ee4e74eb82f29e5949c13c6544b50d0f96d4c", "patch": "@@ -1,3 +1,7 @@\n+2010-11-05  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* gcc.target/i386/avx-vzeroupper-19.c: New.\n+\n 2010-11-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/46099"}, {"sha": "602de87f5458d55d6e985489ef9536da80e01798", "filename": "gcc/testsuite/gcc.target/i386/avx-vzeroupper-19.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d73ee4e74eb82f29e5949c13c6544b50d0f96d4c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d73ee4e74eb82f29e5949c13c6544b50d0f96d4c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-19.c?ref=d73ee4e74eb82f29e5949c13c6544b50d0f96d4c", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mavx -mtune=generic -dp\" } */\n+\n+void feat_s3_cep_dcep (int cepsize_used, float **mfc, float **feat)\n+{\n+  float *f;\n+  float *w, *_w;\n+  int i;\n+  __builtin_memcpy (feat[0], mfc[0], cepsize_used * sizeof(float));\n+  f = feat[0] + cepsize_used;\n+  w = mfc[2];\n+  _w = mfc[-2];\n+  for (i = 0; i < cepsize_used; i++)\n+    f[i] = w[i] - _w[i];\n+}\n+\n+/* { dg-final { scan-assembler-times \"avx_vzeroupper\" 1 } } */"}]}