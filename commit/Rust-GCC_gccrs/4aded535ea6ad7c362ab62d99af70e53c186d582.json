{"sha": "4aded535ea6ad7c362ab62d99af70e53c186d582", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGFkZWQ1MzVlYTZhZDdjMzYyYWI2MmQ5OWFmNzBlNTNjMTg2ZDU4Mg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-03-12T22:09:27Z"}, "committer": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2020-03-12T22:10:33Z"}, "message": "Remove no-op register to register copies in CSE just like we remove no-op memory to memory copies.\n\n        PR rtl-optimization/90275\n        * cse.c (cse_insn): Delete no-op register moves too.\n\n        PR rtl-optimization/90275\n        * gcc.c-torture/compile/pr90275.c: New test.", "tree": {"sha": "00d027a1ef575643407aa9f80c24f6e6a6e275ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00d027a1ef575643407aa9f80c24f6e6a6e275ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4aded535ea6ad7c362ab62d99af70e53c186d582", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4aded535ea6ad7c362ab62d99af70e53c186d582", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4aded535ea6ad7c362ab62d99af70e53c186d582", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4aded535ea6ad7c362ab62d99af70e53c186d582/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "daf2852b883762d921361462dad1f99320faca2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daf2852b883762d921361462dad1f99320faca2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/daf2852b883762d921361462dad1f99320faca2a"}], "stats": {"total": 51, "additions": 45, "deletions": 6}, "files": [{"sha": "f1a1984e8c744d940ef106b565c00ed58d6f8c12", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4aded535ea6ad7c362ab62d99af70e53c186d582/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4aded535ea6ad7c362ab62d99af70e53c186d582/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4aded535ea6ad7c362ab62d99af70e53c186d582", "patch": "@@ -1,3 +1,8 @@\n+2020-03-12  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR rtl-optimization/90275\n+\t* cse.c (cse_insn): Delete no-op register moves too.\n+\n 2020-03-12  Darius Galis  <darius.galis@cyberthorstudios.com>\n \n \t* config/rx/rx.md (CTRLREG_CPEN): Remove."}, {"sha": "08984c170403e00929785ee067d6668d52731721", "filename": "gcc/cse.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4aded535ea6ad7c362ab62d99af70e53c186d582/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4aded535ea6ad7c362ab62d99af70e53c186d582/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=4aded535ea6ad7c362ab62d99af70e53c186d582", "patch": "@@ -4625,7 +4625,7 @@ cse_insn (rtx_insn *insn)\n   for (i = 0; i < n_sets; i++)\n     {\n       bool repeat = false;\n-      bool mem_noop_insn = false;\n+      bool noop_insn = false;\n       rtx src, dest;\n       rtx src_folded;\n       struct table_elt *elt = 0, *p;\n@@ -5324,17 +5324,19 @@ cse_insn (rtx_insn *insn)\n \t    }\n \n \t  /* Similarly, lots of targets don't allow no-op\n-\t     (set (mem x) (mem x)) moves.  */\n+\t     (set (mem x) (mem x)) moves.  Even (set (reg x) (reg x))\n+\t     might be impossible for certain registers (like CC registers).  */\n \t  else if (n_sets == 1\n-\t\t   && MEM_P (trial)\n+\t\t   && !CALL_P (insn)\n+\t\t   && (MEM_P (trial) || REG_P (trial))\n \t\t   && MEM_P (dest)\n \t\t   && rtx_equal_p (trial, dest)\n \t\t   && !side_effects_p (dest)\n \t\t   && (cfun->can_delete_dead_exceptions\n \t\t       || insn_nothrow_p (insn)))\n \t    {\n \t      SET_SRC (sets[i].rtl) = trial;\n-\t      mem_noop_insn = true;\n+\t      noop_insn = true;\n \t      break;\n \t    }\n \n@@ -5562,8 +5564,8 @@ cse_insn (rtx_insn *insn)\n \t  sets[i].rtl = 0;\n \t}\n \n-      /* Similarly for no-op MEM moves.  */\n-      else if (mem_noop_insn)\n+      /* Similarly for no-op moves.  */\n+      else if (noop_insn)\n \t{\n \t  if (cfun->can_throw_non_call_exceptions && can_throw_internal (insn))\n \t    cse_cfg_altered = true;"}, {"sha": "6d8eac22c313984f105ad0d5d9146cf6ec22f2af", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4aded535ea6ad7c362ab62d99af70e53c186d582/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4aded535ea6ad7c362ab62d99af70e53c186d582/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4aded535ea6ad7c362ab62d99af70e53c186d582", "patch": "@@ -1,3 +1,8 @@\n+2020-03-12  Jeff Law  <law@redhat.com>\n+\n+\tPR rtl-optimization/90275\n+\t* gcc.c-torture/compile/pr90275.c: New test.\n+\n 2020-03-12  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/94103"}, {"sha": "83e0df77226b50161fa38fb9175f6c7d0722eab6", "filename": "gcc/testsuite/gcc.c-torture/compile/pr90275.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4aded535ea6ad7c362ab62d99af70e53c186d582/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr90275.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4aded535ea6ad7c362ab62d99af70e53c186d582/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr90275.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr90275.c?ref=4aded535ea6ad7c362ab62d99af70e53c186d582", "patch": "@@ -0,0 +1,27 @@\n+a, b, c;\n+\n+long long d;\n+\n+e() {\n+\n+  char f;\n+\n+  for (;;) {\n+\n+    c = a = c ? 5 : 0;\n+\n+    if (f) {\n+\n+      b = a;\n+\n+      f = d;\n+\n+    }\n+\n+    (d || b) < (a > e) ?: (b ? 0 : f) || (d -= f);\n+\n+  }\n+\n+}\n+\n+"}]}