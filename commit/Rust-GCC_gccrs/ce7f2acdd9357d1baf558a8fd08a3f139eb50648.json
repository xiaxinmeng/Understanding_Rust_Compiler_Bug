{"sha": "ce7f2acdd9357d1baf558a8fd08a3f139eb50648", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U3ZjJhY2RkOTM1N2QxYmFmNTU4YThmZDA4YTNmMTM5ZWI1MDY0OA==", "commit": {"author": {"name": "Per Bothner", "email": "per@bothner.com", "date": "2004-06-30T05:04:38Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2004-06-30T05:04:38Z"}, "message": "winnt.c (i386_pe_encode_section_info): Smash rtlname's XSTR in place, so we don't lose SYMBOL_REF_DECL info.\n\n\n\t* config/i386/winnt.c (i386_pe_encode_section_info):  Smash rtlname's\n\tXSTR in place, so we don't lose SYMBOL_REF_DECL info.\n\nFrom-SVN: r83893", "tree": {"sha": "90dc9931e97d11f9a0953b896af59c8872979b38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90dc9931e97d11f9a0953b896af59c8872979b38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce7f2acdd9357d1baf558a8fd08a3f139eb50648", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce7f2acdd9357d1baf558a8fd08a3f139eb50648", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce7f2acdd9357d1baf558a8fd08a3f139eb50648", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce7f2acdd9357d1baf558a8fd08a3f139eb50648/comments", "author": {"login": "PerBothner", "id": 10293361, "node_id": "MDQ6VXNlcjEwMjkzMzYx", "avatar_url": "https://avatars.githubusercontent.com/u/10293361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PerBothner", "html_url": "https://github.com/PerBothner", "followers_url": "https://api.github.com/users/PerBothner/followers", "following_url": "https://api.github.com/users/PerBothner/following{/other_user}", "gists_url": "https://api.github.com/users/PerBothner/gists{/gist_id}", "starred_url": "https://api.github.com/users/PerBothner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PerBothner/subscriptions", "organizations_url": "https://api.github.com/users/PerBothner/orgs", "repos_url": "https://api.github.com/users/PerBothner/repos", "events_url": "https://api.github.com/users/PerBothner/events{/privacy}", "received_events_url": "https://api.github.com/users/PerBothner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8319dc87090b91a1e892a62850c70a141f57a5e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8319dc87090b91a1e892a62850c70a141f57a5e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8319dc87090b91a1e892a62850c70a141f57a5e0"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "4be6f6b50b7f78fd7e880d669347da0bc175b237", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce7f2acdd9357d1baf558a8fd08a3f139eb50648/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce7f2acdd9357d1baf558a8fd08a3f139eb50648/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce7f2acdd9357d1baf558a8fd08a3f139eb50648", "patch": "@@ -1,3 +1,8 @@\n+2004-06-29  Per Bothner  <per@bothner.com>\n+\n+\t* config/i386/winnt.c (i386_pe_encode_section_info):  Smash rtlname's \n+\tXSTR in place, so we don't lose SYMBOL_REF_DECL info.\n+\n 2004-06-29  Zack Weinberg  <zack@codesourcery.com>\n \n \t* config/ia64/hpux.h: Target does too support thread-local storage."}, {"sha": "f0b1aec08214bda9815f356cde84d5a7b4f04e78", "filename": "gcc/config/i386/winnt.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce7f2acdd9357d1baf558a8fd08a3f139eb50648/gcc%2Fconfig%2Fi386%2Fwinnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce7f2acdd9357d1baf558a8fd08a3f139eb50648/gcc%2Fconfig%2Fi386%2Fwinnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt.c?ref=ce7f2acdd9357d1baf558a8fd08a3f139eb50648", "patch": "@@ -488,16 +488,16 @@ i386_pe_encode_section_info (tree decl, rtx rtl, int first)\n {\n   default_encode_section_info (decl, rtl, first);\n \n-  if (TREE_CODE (decl) == FUNCTION_DECL)\n+  if (first && TREE_CODE (decl) == FUNCTION_DECL)\n     {\n-      if (lookup_attribute (\"stdcall\",\n-\t\t\t    TYPE_ATTRIBUTES (TREE_TYPE (decl))))\n-        XEXP (DECL_RTL (decl), 0) =\n-\t  gen_rtx_SYMBOL_REF (Pmode, gen_stdcall_suffix (decl));\n-      else if (lookup_attribute (\"fastcall\",\n-\t\t\t\t TYPE_ATTRIBUTES (TREE_TYPE (decl))))\n-        XEXP (DECL_RTL (decl), 0) =\n-\t  gen_rtx_SYMBOL_REF (Pmode, gen_fastcall_suffix (decl));\n+      tree type_attributes = TYPE_ATTRIBUTES (TREE_TYPE (decl));\n+      rtx rtlname = XEXP (rtl, 0);\n+      if (GET_CODE (rtlname) == MEM)\n+\trtlname = XEXP (rtlname, 0);\n+      if (lookup_attribute (\"stdcall\", type_attributes))\n+\tXSTR (rtlname, 0) = gen_stdcall_suffix (decl);\n+      else if (lookup_attribute (\"fastcall\", type_attributes))\n+\tXSTR (rtlname, 0) = gen_fastcall_suffix (decl);\n     }\n \n   /* Mark the decl so we can tell from the rtl whether the object is"}]}