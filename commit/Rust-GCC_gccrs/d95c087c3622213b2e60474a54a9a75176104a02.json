{"sha": "d95c087c3622213b2e60474a54a9a75176104a02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk1YzA4N2MzNjIyMjEzYjJlNjA0NzRhNTRhOWE3NTE3NjEwNGEwMg==", "commit": {"author": {"name": "Ralf Wildenhues", "email": "Ralf.Wildenhues@gmx.de", "date": "2008-03-09T17:29:49Z"}, "committer": {"name": "Ralf Wildenhues", "email": "rwild@gcc.gnu.org", "date": "2008-03-09T17:29:49Z"}, "message": "cp-hacking.texinfo: Fix some typos.\n\nlibjava/classpath/\n\n\t* doc/cp-hacking.texinfo: Fix some typos.\n\t* doc/cp-tools.texinfo: Likewise.\n\t* doc/cp-vmintegration.texinfo: Likewise.\n\nFrom-SVN: r133057", "tree": {"sha": "19e005df90f8d58ee75db26a00ecb55ed3ba6157", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19e005df90f8d58ee75db26a00ecb55ed3ba6157"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d95c087c3622213b2e60474a54a9a75176104a02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d95c087c3622213b2e60474a54a9a75176104a02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d95c087c3622213b2e60474a54a9a75176104a02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d95c087c3622213b2e60474a54a9a75176104a02/comments", "author": null, "committer": null, "parents": [{"sha": "eafaa35bc232db247a96872f785e7fd5a3c69cb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eafaa35bc232db247a96872f785e7fd5a3c69cb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eafaa35bc232db247a96872f785e7fd5a3c69cb7"}], "stats": {"total": 40, "additions": 23, "deletions": 17}, "files": [{"sha": "8734c2569d48d3cb9481b0f025f09d3243665902", "filename": "libjava/classpath/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d95c087c3622213b2e60474a54a9a75176104a02/libjava%2Fclasspath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d95c087c3622213b2e60474a54a9a75176104a02/libjava%2Fclasspath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog?ref=d95c087c3622213b2e60474a54a9a75176104a02", "patch": "@@ -1,3 +1,9 @@\n+2008-03-09  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* doc/cp-hacking.texinfo: Fix some typos.\n+\t* doc/cp-tools.texinfo: Likewise.\n+\t* doc/cp-vmintegration.texinfo: Likewise.\n+\n 2008-01-27  Bernhard Fischer  <rep.dot.nop@gmail.com>\n \n \t* java/util/SimpleTimeZone.java (SimpleTimeZone): Fix typo in comment."}, {"sha": "1f9b5c1287b47434d82d5236ae7a6218405d770b", "filename": "libjava/classpath/doc/cp-hacking.texinfo", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d95c087c3622213b2e60474a54a9a75176104a02/libjava%2Fclasspath%2Fdoc%2Fcp-hacking.texinfo", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d95c087c3622213b2e60474a54a9a75176104a02/libjava%2Fclasspath%2Fdoc%2Fcp-hacking.texinfo", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fcp-hacking.texinfo?ref=d95c087c3622213b2e60474a54a9a75176104a02", "patch": "@@ -484,7 +484,7 @@ specify @option{--enable-qt-peer} and need the following library:\n @table @b\n @item Qt\n @uref{http://www.trolltech.com/products/qt,Qt} version 4.0.1 or higher.\n-The Qt library is a cros-platform graphics toolkit.\n+The Qt library is a cross-platform graphics toolkit.\n \n @end table\n \n@@ -558,7 +558,7 @@ library headers:\n @table @b\n @item GConf\n @uref{http://www.gnome.org/projects/gconf/,GConf} version 2.11.2\n-(or higher). GConf is used for storing dektop and application\n+(or higher). GConf is used for storing desktop and application\n configuration settings in GNOME.\n \n @end table\n@@ -853,7 +853,7 @@ for ``^method_def'' is mostly gone already. Since it is customary for\n almost everybody who writes java source code to put modifiers, return\n value and method name on the same line, we do too.\n \n-@c fixme Another rational for always indenting the method definition is that itmakes it a bit easier to distinguish methods in inner and anonymousclasses from code in their enclosing context. NEED EXAMPLE.\n+@c fixme Another rational for always indenting the method definition is that it makes it a bit easier to distinguish methods in inner and anonymous classes from code in their enclosing context. NEED EXAMPLE.\n \n @item\n Implements and extends on separate lines, throws too.  Indent extends,\n@@ -1252,7 +1252,7 @@ Just as with the normal code style guide, don't make lines longer then\n \n @item\n Just as with comments in the code. The ChangeLog entry should be a\n-full sentence, starting with a captital and ending with a period.\n+full sentence, starting with a capital and ending with a period.\n \n @item\n Be precise in what changed, not the effect of the change (which should\n@@ -1742,7 +1742,7 @@ Unicode characters and vice versa.\n \n In Classpath, @code{InputStreamReader} and @code{OutputStreamWriter}\n rely on an internal class called @code{gnu.java.io.EncodingManager} to load\n-translaters that perform the actual conversion.  There are two types of\n+translators that perform the actual conversion.  There are two types of\n converters, encoders and decoders.  Encoders are subclasses of\n @code{gnu.java.io.encoder.Encoder}.  This type of converter takes a Java\n (Unicode) character stream or buffer and converts it to bytes using\n@@ -1974,7 +1974,7 @@ that this functional area is supported.\n @item weekdays - A @code{String} array of weekday names.\n @item shortWeekdays - A @code{String} array of abbreviated weekday names.\n @item ampms - A @code{String} array containing AM/PM names.\n-@item eras - A @code{String} array containing era (ie, BC/AD) names.\n+@item eras - A @code{String} array containing era (i.e., BC/AD) names.\n @item zoneStrings - An array of information about valid timezones for this \n locale.\n @item localPatternChars - A @code{String} defining date/time pattern symbols."}, {"sha": "21a8e57074487feddee6a2bd3a579b5a841d577f", "filename": "libjava/classpath/doc/cp-tools.texinfo", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d95c087c3622213b2e60474a54a9a75176104a02/libjava%2Fclasspath%2Fdoc%2Fcp-tools.texinfo", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d95c087c3622213b2e60474a54a9a75176104a02/libjava%2Fclasspath%2Fdoc%2Fcp-tools.texinfo", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fcp-tools.texinfo?ref=d95c087c3622213b2e60474a54a9a75176104a02", "patch": "@@ -1792,7 +1792,7 @@ java(1), @dots{}\n @comment node-name, next, previous, up\n @chapter I18N Issues\n \n-Some tools --@pxref{Security Tools}-- allow using other than the English language when prompting the User for input, and outputing messages. This chapter describes the elements used to offer this support and how they can be adapted for use with specific languages.\n+Some tools --@pxref{Security Tools}-- allow using other than the English language when prompting the User for input, and outputting messages. This chapter describes the elements used to offer this support and how they can be adapted for use with specific languages.\n \n @menu\n * Language Resources::         Where resources are located\n@@ -1807,7 +1807,7 @@ Some tools --@pxref{Security Tools}-- allow using other than the English languag\n \n The Tools use Java @code{ResourceBundle}s to store messages, and message templates they use at runtime to generate the message text itself, depending on the locale in use at the time.\n \n-The @i{Resource Bundles} these tools use are essentially Java @i{Properties} files consisting of a set of @i{Name/Value} pairs. The @i{Name} is the @i{Propery Name} and the @i{Value} is a substitution string that is used when the code references the associated @i{Name}. For example the following is a line in a @i{Resource Bundle} used by the @code{keytool} Tool:\n+The @i{Resource Bundles} these tools use are essentially Java @i{Properties} files consisting of a set of @i{Name/Value} pairs. The @i{Name} is the @i{Property Name} and the @i{Value} is a substitution string that is used when the code references the associated @i{Name}. For example the following is a line in a @i{Resource Bundle} used by the @code{keytool} Tool:\n \n @example\n Command.23=A correct key password MUST be provided\n@@ -1847,7 +1847,7 @@ The collection of @i{Resource Bundles} in a location act as an inverted tree wit\n \n In the above example, bundle #1 will act as the parent of bundle #2, which in turn will act as the parent for bundle #3. This ordering is used by the Java runtime to choose which file to load based on the set Locale. For example if the Locale is @code{fr_CH}, @code{messages_fr.properties} will be used because (a) @code{messages_fr_CH.properties} does not exist, but (b) @code{messages_fr.properties} is the parent for the required bundle, and it exists. As another example, suppose the Locale was set to @code{en_AU}; then the tool will end up using @code{messages.properties} because (a) @code{messages_en_AU.properties} does not exist, (b) @code{messages_en.properties} which is the parent for the required bundle does not exist, but (c) @code{messages.properties} exists and is the root of the hierarchy.\n \n-You can see from the examples above that @file{messages.properties} is the safety net that the Java runtime falls back to when failing to find a specific bunlde and its parent(s). This file is always provided with the Tool. In time, more localized versions will be included to cater for other languages.\n+You can see from the examples above that @file{messages.properties} is the safety net that the Java runtime falls back to when failing to find a specific bundle and its parent(s). This file is always provided with the Tool. In time, more localized versions will be included to cater for other languages.\n \n In the meantime, if you are willing to contribute localized versions of these resources, grab the @file{messages.properties} for a specific tool; translate it; save it with the appropriate language and region suffix and mail it to @code{classpath@@gnu.org}.\n "}, {"sha": "889784ee87cb7c71178c02f793fee1ceb95de8be", "filename": "libjava/classpath/doc/cp-vmintegration.texinfo", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d95c087c3622213b2e60474a54a9a75176104a02/libjava%2Fclasspath%2Fdoc%2Fcp-vmintegration.texinfo", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d95c087c3622213b2e60474a54a9a75176104a02/libjava%2Fclasspath%2Fdoc%2Fcp-vmintegration.texinfo", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fcp-vmintegration.texinfo?ref=d95c087c3622213b2e60474a54a9a75176104a02", "patch": "@@ -419,7 +419,7 @@ The method should return a map converting package names to boolean status\n values.  The stub implementation provides an empty map.\n @item @code{classAssertionStatus()} -- Same as the last, but for classes.\n @item @code{getSystemClassLoader()} -- The default calls @code{ClassLoader}\n-to create a new auxillary class loader with a system and extension class\n+to create a new auxiliary class loader with a system and extension class\n loader.  The VM may wish to replace it if it wishes to supply its own custom\n system class loader.\n @end itemize\n@@ -701,7 +701,7 @@ throw an appropriate exception.\n @item @code{suspend()} -- The thread should be suspended until resumed.\n @item @code{resume()} -- The thread should be resumed from its suspended state.\n This pair of methods are deprecated, due to the possibility of a deadlock\n-occuring when a thread with locks is suspended.\n+occurring when a thread with locks is suspended.\n @item @code{nativeSetPriority(int)} -- Called by @code{setPriority}\n to allow the setting to flow down to the native thread.\n @item @code{nativeStop(Throwable)} -- The VM should stop the thread abnormally\n@@ -736,7 +736,7 @@ The @code{VMMath} class provides a series of native methods\n for some of the mathematical functions present in @code{java.lang.Math}.\n Classpath provides a default implementation of these which maps the\n functions to those provided by @code{fdlibm}.  VM implementors are welcome\n-to replace this with more efficent implementations, as long as the accuracy\n+to replace this with more efficient implementations, as long as the accuracy\n contract of these methods, specified in @code{java.lang.Math}, is maintained.\n \n @itemize @bullet\n@@ -1540,7 +1540,7 @@ interface, and is supported by VM functionality in the form of\n @code{gnu.java.lang.management.VMMemoryPoolMXBeanImpl}.  Providing\n this interface requires implementing a number of methods for each supported\n pool.  These return statistics on memory usage, and, optionally, allows\n-monitoring of when memory usage exceedes a preset threshold.\n+monitoring of when memory usage exceeds a preset threshold.\n \n Optional support is determined by the following properties:\n \n@@ -1913,7 +1913,7 @@ mechanism.\n @i{Green threads 1}: Green threads are threads scheduled by the VM,\n typically by switching swapping registers. In early VMs green threads\n were seen as advantageous as they didn't require the operating system\n-to resechedule, save and swap all of a threads registers. The green\n+to reschedule, save and swap all of a threads registers. The green\n thread 1 model switches thread on an externally created event, such as\n a timer interrupt. An example of a VM using this approach is Kaffe\n configured with its jthreads model.\n@@ -1937,7 +1937,7 @@ model.\n An example of the problem of mixing threading models is:\n @itemize @bullet\n @item\n-A Java thread calls a native method. The native method aquires a lock.\n+A Java thread calls a native method. The native method acquires a lock.\n @item\n The native method calls back into the VM.\n @item\n@@ -1946,7 +1946,7 @@ An event triggers the VM to reschedule the currently running thread.\n A new VM thread, executing on the same underlying native thread, calls\n a native method.\n @item\n-The native method tries to aquire the lock already aquired earlier. As\n+The native method tries to acquire the lock already acquired earlier. As\n the lock is busy the thread waits and allows the operating system to\n reschedule native threads.\n @item\n@@ -1976,7 +1976,7 @@ and swap Java threads off of that native thread. The VM can't,\n however, swap two blocked native threads that are potentially\n deadlocking each other on a lock. The lock will be associated with the\n native thread. To prevent this from happening the VM must hijack\n-functions that operate on locks. This is done by redifining the lock\n+functions that operate on locks. This is done by redefining the lock\n functions inside the VM and configuring the linker so that it uses the\n VMs symbol in preference to that of the external thread support\n library. The VM's lock function can then reschedule Java threads if it"}]}