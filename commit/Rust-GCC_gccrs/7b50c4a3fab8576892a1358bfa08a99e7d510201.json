{"sha": "7b50c4a3fab8576892a1358bfa08a99e7d510201", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2I1MGM0YTNmYWI4NTc2ODkyYTEzNThiZmEwOGE5OWU3ZDUxMDIwMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-02-08T10:13:54Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-02-08T10:13:54Z"}, "message": "[multiple changes]\n\n2012-02-08  Vincent Celier  <celier@adacore.com>\n\n\t* gcc-interface/Make-lang.in: Add g-byorma.o to gnatbind objects\n\t(g-buorma is now imported by sinput).\n\tUpdate dependencies.\n\t* scn.adb (Initialize_Scanner): Call Check_For_BOM\n\t* sinput-p.adb (Source_File_Is_Subunit): Call Check_For_BOM\n\t* sinput.adb: New procedure Check_For_BOM\n\t* sinput.ads: New procedure Check_For_BOM\n\n2012-02-08  Vincent Pucci  <pucci@adacore.com>\n\n\t* impunit.adb: Dimension package names updated\n\t* Makefile.rtl: s-dim added\n\t* sem_dim.adb (Is_Procedure_Put_Call): minor changes\n\t(Is_Dim_IO_Package_Instantiation): minor changes\n\t* sem_dim.ads: minor changes in comments\n\t* snames.ads-tmpl: Name_Dim added Name_Dim_Float_IO and\n\tName_Dim_Integer_IO removed\n\t* s-dim.ads: New package. Define the dimension terminology.\n\t* s-diflio.adb, s-diinio.adb, s-dimkio.ads, s-dimmks.ads,\n\t* s-dmotpr.ads: Package names updated.\n\t* s-diflio.ads, s-diinio.ads: Documentation added and package\n\tnames updated.\n\n2012-02-08  Gary Dismukes  <dismukes@adacore.com>\n\n\t* gcc-interface/utils2.c (build_call_alloc_dealloc_proc): Revise test\n\tfor storage pools to test for an underlying record type rather than\n\ttesting Is_Tagged_Type, so that simple storage pools will be handled\n\tthe same as normal Ada storage pools.\n\nFrom-SVN: r184004", "tree": {"sha": "ac74688e2712a1abbfa5739a283cc020bbff4d7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac74688e2712a1abbfa5739a283cc020bbff4d7a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b50c4a3fab8576892a1358bfa08a99e7d510201", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b50c4a3fab8576892a1358bfa08a99e7d510201", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b50c4a3fab8576892a1358bfa08a99e7d510201", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b50c4a3fab8576892a1358bfa08a99e7d510201/comments", "author": null, "committer": null, "parents": [{"sha": "f62054146e86e792b6ce061bd418b9a2384ae9a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f62054146e86e792b6ce061bd418b9a2384ae9a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f62054146e86e792b6ce061bd418b9a2384ae9a5"}], "stats": {"total": 567, "additions": 377, "deletions": 190}, "files": [{"sha": "8fa6556de4a8827ec80280b5b33d3a7c84a5429b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7b50c4a3fab8576892a1358bfa08a99e7d510201", "patch": "@@ -1,3 +1,35 @@\n+2012-02-08  Vincent Celier  <celier@adacore.com>\n+\n+\t* gcc-interface/Make-lang.in: Add g-byorma.o to gnatbind objects\n+\t(g-buorma is now imported by sinput).\n+\tUpdate dependencies.\n+\t* scn.adb (Initialize_Scanner): Call Check_For_BOM\n+\t* sinput-p.adb (Source_File_Is_Subunit): Call Check_For_BOM\n+\t* sinput.adb: New procedure Check_For_BOM\n+\t* sinput.ads: New procedure Check_For_BOM\n+\n+2012-02-08  Vincent Pucci  <pucci@adacore.com>\n+\n+\t* impunit.adb: Dimension package names updated\n+\t* Makefile.rtl: s-dim added\n+\t* sem_dim.adb (Is_Procedure_Put_Call): minor changes\n+\t(Is_Dim_IO_Package_Instantiation): minor changes\n+\t* sem_dim.ads: minor changes in comments\n+\t* snames.ads-tmpl: Name_Dim added Name_Dim_Float_IO and\n+\tName_Dim_Integer_IO removed\n+\t* s-dim.ads: New package. Define the dimension terminology.\n+\t* s-diflio.adb, s-diinio.adb, s-dimkio.ads, s-dimmks.ads,\n+\t* s-dmotpr.ads: Package names updated.\n+\t* s-diflio.ads, s-diinio.ads: Documentation added and package\n+\tnames updated.\n+\n+2012-02-08  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* gcc-interface/utils2.c (build_call_alloc_dealloc_proc): Revise test\n+\tfor storage pools to test for an underlying record type rather than\n+\ttesting Is_Tagged_Type, so that simple storage pools will be handled\n+\tthe same as normal Ada storage pools.\n+\n 2012-02-08  Yannick Moy  <moy@adacore.com>\n \n \t* gnat_rm.texi: Minor reshuffling to place restriction at"}, {"sha": "71696585458ed5d3b31fd52415c3d57b49da86fd", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=7b50c4a3fab8576892a1358bfa08a99e7d510201", "patch": "@@ -505,6 +505,7 @@ GNATRTL_NONTASKING_OBJS= \\\n   s-crtl$(objext)   \\\n   s-crtrun$(objext) \\\n   s-diflio$(objext) \\\n+  s-dim$(objext)    \\\n   s-diinio$(objext) \\\n   s-dimkio$(objext) \\\n   s-dimmks$(objext) \\"}, {"sha": "0393d06dcc9fd341d4f2ca274998e4c6402bf19e", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 27, "deletions": 24, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=7b50c4a3fab8576892a1358bfa08a99e7d510201", "patch": "@@ -453,6 +453,7 @@ GNATBIND_OBJS = \\\n  ada/fmap.o       \\\n  ada/fname.o      \\\n  ada/fname-uf.o   \\\n+ ada/g-byorma.o   \\\n  ada/g-hesora.o   \\\n  ada/g-htable.o   \\\n  ada/s-os_lib.o   \\\n@@ -2435,31 +2436,33 @@ ada/exp_intr.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/errout.adb ada/erroutc.ads ada/erroutc.adb ada/eval_fat.ads \\\n    ada/exp_aggr.ads ada/exp_atag.ads ada/exp_ch11.ads ada/exp_ch2.ads \\\n    ada/exp_ch4.ads ada/exp_ch6.ads ada/exp_ch7.ads ada/exp_code.ads \\\n-   ada/exp_fixd.ads ada/exp_intr.ads ada/exp_intr.adb ada/exp_pakd.ads \\\n-   ada/exp_tss.ads ada/exp_util.ads ada/exp_util.adb ada/expander.ads \\\n-   ada/fname.ads ada/fname-uf.ads ada/freeze.ads ada/get_targ.ads \\\n-   ada/gnat.ads ada/g-htable.ads ada/gnatvsn.ads ada/hlo.ads \\\n-   ada/hostparm.ads ada/inline.ads ada/interfac.ads ada/itypes.ads \\\n-   ada/lib.ads ada/lib-load.ads ada/namet.ads ada/namet.adb ada/nlists.ads \\\n+   ada/exp_disp.ads ada/exp_fixd.ads ada/exp_intr.ads ada/exp_intr.adb \\\n+   ada/exp_pakd.ads ada/exp_tss.ads ada/exp_util.ads ada/exp_util.adb \\\n+   ada/expander.ads ada/fname.ads ada/fname-uf.ads ada/freeze.ads \\\n+   ada/get_targ.ads ada/gnat.ads ada/g-htable.ads ada/gnatvsn.ads \\\n+   ada/hlo.ads ada/hostparm.ads ada/inline.ads ada/interfac.ads \\\n+   ada/itypes.ads ada/lib.ads ada/lib-load.ads ada/lib-util.ads \\\n+   ada/lib-xref.ads ada/namet.ads ada/namet.adb ada/nlists.ads \\\n    ada/nlists.adb ada/nmake.ads ada/nmake.adb ada/opt.ads ada/output.ads \\\n-   ada/restrict.ads ada/restrict.adb ada/rident.ads ada/rtsfind.ads \\\n-   ada/scans.ads ada/sem.ads ada/sem.adb ada/sem_attr.ads ada/sem_aux.ads \\\n-   ada/sem_ch10.ads ada/sem_ch11.ads ada/sem_ch12.ads ada/sem_ch13.ads \\\n-   ada/sem_ch2.ads ada/sem_ch3.ads ada/sem_ch4.ads ada/sem_ch5.ads \\\n-   ada/sem_ch6.ads ada/sem_ch7.ads ada/sem_ch8.ads ada/sem_ch9.ads \\\n-   ada/sem_eval.ads ada/sem_prag.ads ada/sem_res.ads ada/sem_type.ads \\\n-   ada/sem_util.ads ada/sem_warn.ads ada/sinfo.ads ada/sinfo.adb \\\n-   ada/sinput.ads ada/sinput.adb ada/snames.ads ada/sprint.ads \\\n-   ada/stand.ads ada/stringt.ads ada/stylesw.ads ada/system.ads \\\n-   ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads \\\n-   ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads \\\n-   ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads \\\n-   ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n-   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/targparm.ads \\\n-   ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads \\\n-   ada/types.ads ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n-   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/urealp.adb \\\n-   ada/validsw.ads ada/widechar.ads \n+   ada/put_alfa.ads ada/restrict.ads ada/restrict.adb ada/rident.ads \\\n+   ada/rtsfind.ads ada/scans.ads ada/sem.ads ada/sem.adb ada/sem_attr.ads \\\n+   ada/sem_aux.ads ada/sem_ch10.ads ada/sem_ch11.ads ada/sem_ch12.ads \\\n+   ada/sem_ch13.ads ada/sem_ch2.ads ada/sem_ch3.ads ada/sem_ch4.ads \\\n+   ada/sem_ch5.ads ada/sem_ch6.ads ada/sem_ch7.ads ada/sem_ch8.ads \\\n+   ada/sem_ch9.ads ada/sem_disp.ads ada/sem_eval.ads ada/sem_prag.ads \\\n+   ada/sem_res.ads ada/sem_type.ads ada/sem_util.ads ada/sem_util.adb \\\n+   ada/sem_warn.ads ada/sinfo.ads ada/sinfo.adb ada/sinput.ads \\\n+   ada/sinput.adb ada/snames.ads ada/sprint.ads ada/stand.ads \\\n+   ada/stringt.ads ada/style.ads ada/styleg.ads ada/styleg.adb \\\n+   ada/stylesw.ads ada/system.ads ada/s-exctab.ads ada/s-htable.ads \\\n+   ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads \\\n+   ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads \\\n+   ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads \\\n+   ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads \\\n+   ada/table.adb ada/targparm.ads ada/tbuild.ads ada/tbuild.adb \\\n+   ada/tree_io.ads ada/ttypes.ads ada/types.ads ada/uintp.ads \\\n+   ada/uintp.adb ada/uname.ads ada/unchconv.ads ada/unchdeal.ads \\\n+   ada/urealp.ads ada/urealp.adb ada/validsw.ads ada/widechar.ads \n \n ada/exp_pakd.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\"}, {"sha": "e0ddf2f6a37d7be350a5bd83e9cccdc75e617db4", "filename": "gcc/ada/gcc-interface/utils2.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fgcc-interface%2Futils2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fgcc-interface%2Futils2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils2.c?ref=7b50c4a3fab8576892a1358bfa08a99e7d510201", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2011, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2012, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -2003,9 +2003,10 @@ build_call_alloc_dealloc_proc (tree gnu_obj, tree gnu_size, tree gnu_type,\n   tree gnu_proc = gnat_to_gnu (gnat_proc);\n   tree gnu_call;\n \n-  /* The storage pools are obviously always tagged types, but the\n-     secondary stack uses the same mechanism and is not tagged.  */\n-  if (Is_Tagged_Type (Etype (gnat_pool)))\n+  /* A storage pool's underlying type is a record type (for both predefined\n+     storage pools and GNAT simple storage pools). The secondary stack uses\n+     the same mechanism, but its pool object (SS_Pool) is an integer.  */\n+  if (Is_Record_Type (Underlying_Type (Etype (gnat_pool))))\n     {\n       /* The size is the third parameter; the alignment is the\n \t same type.  */"}, {"sha": "99d0c27140b974d6e19316d90ed8ebd267e897a9", "filename": "gcc/ada/impunit.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fimpunit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fimpunit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fimpunit.adb?ref=7b50c4a3fab8576892a1358bfa08a99e7d510201", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---           Copyright (C) 2000-2011, Free Software Foundation, Inc.        --\n+--           Copyright (C) 2000-2012, Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -366,11 +366,11 @@ package body Impunit is\n \n     (\"s-addima\", F),  -- System.Address_Image\n     (\"s-assert\", F),  -- System.Assertions\n-    (\"s-diflio\", F),  -- System.Dim_Float_IO\n-    (\"s-diinio\", F),  -- System.Dim_Integer_IO\n-    (\"s-dimkio\", F),  -- System.Dim_Mks_IO\n-    (\"s-dimmks\", F),  -- System.Dim_Mks\n-    (\"s-dmotpr\", F),  -- System.Dim_Mks.Other_Prefixes\n+    (\"s-diflio\", F),  -- System.Dim.Float_IO\n+    (\"s-diinio\", F),  -- System.Dim.Integer_IO\n+    (\"s-dimkio\", F),  -- System.Dim.Mks_IO\n+    (\"s-dimmks\", F),  -- System.Dim.Mks\n+    (\"s-dmotpr\", F),  -- System.Dim.Mks.Other_Prefixes\n     (\"s-memory\", F),  -- System.Memory\n     (\"s-parint\", F),  -- System.Partition_Interface\n     (\"s-pooglo\", F),  -- System.Pool_Global"}, {"sha": "644018a529f7fbb260b23252cf2e65f9861c3acb", "filename": "gcc/ada/s-diflio.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fs-diflio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fs-diflio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-diflio.adb?ref=7b50c4a3fab8576892a1358bfa08a99e7d510201", "patch": "@@ -2,7 +2,7 @@\n --                                                                          --\n --                         GNAT RUN-TIME COMPONENTS                         --\n --                                                                          --\n---                    S Y S T E M . D I M _ F L O A T _ I O                 --\n+--                    S Y S T E M . D I M . F L O A T _ I O                 --\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n@@ -29,7 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-package body System.Dim_Float_IO is\n+package body System.Dim.Float_IO is\n \n    package Num_Dim_Float_IO is new Ada.Text_IO.Float_IO (Num_Dim_Float);\n \n@@ -74,4 +74,4 @@ package body System.Dim_Float_IO is\n       To := To & Symbols;\n    end Put;\n \n-end System.Dim_Float_IO;\n+end System.Dim.Float_IO;"}, {"sha": "e914af056672d45d3dbbefd6300caea26d3a70cc", "filename": "gcc/ada/s-diflio.ads", "status": "modified", "additions": 63, "deletions": 8, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fs-diflio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fs-diflio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-diflio.ads?ref=7b50c4a3fab8576892a1358bfa08a99e7d510201", "patch": "@@ -2,7 +2,7 @@\n --                                                                          --\n --                         GNAT RUN-TIME COMPONENTS                         --\n --                                                                          --\n---                    S Y S T E M . D I M _ F L O A T _ I O                 --\n+--                    S Y S T E M . D I M . F L O A T _ I O                 --\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n@@ -29,19 +29,74 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package is a generic package that provides IO facilities for float\n---  dimensioned types.\n+--  This package provides output routines for float dimensioned types. All Put\n+--  routines are modelled after those in package Ada.Text_IO.Float_IO with the\n+--  addition of an extra default parameter.\n \n---  Note that there is a default string parameter in every Put routine\n---  rewritten at compile time to output the corresponding dimensions as a\n---  suffix of the numeric value.\n+--  Parameter Symbol may be used in the following manner (all the examples are\n+--  based on the MKS system of units as defined in package System.Dim.Mks):\n+\n+--  Case 1. A value is supplied for Symbol\n+\n+--    The string appears as a suffix of Item\n+\n+--      Obj : Mks_Type := 2.6;\n+--      Put (Obj, 1, 1, 0, \" dimensionless\");\n+\n+--      The corresponding output is: 2.6 dimensionless\n+\n+--  Case 2. No value is supplied for Symbol and Item is dimensionless\n+\n+--    Item appears without a suffix\n+\n+--      Obj : Mks_Type := 2.6;\n+--      Put (Obj, 1, 1, 0);\n+\n+--      The corresponding output is: 2.6\n+\n+--  Case 3. No value is supplied for Symbol and Item has a dimension\n+\n+--    If the type of Item is a dimensioned subtype whose symbolic name is not\n+--    empty, then the symbolic name appears as a suffix.\n+\n+--      subtype Length is Mks_Type\n+--        with\n+--         Dimension => ('m',\n+--           Meter =>  1,\n+--           others => 0);\n+\n+--      Obj : Length := 2.3 * dm;\n+--      Put (Obj, 1, 2, 0);\n+\n+--      The corresponding output is: 0.23 m\n+\n+--    Otherwise, a new string is created and appears as a suffix of Item.\n+--    This string results in the successive concatanations between each\n+--    dimension symbolic name raised by its corresponding dimension power from\n+--    the dimensions of Item.\n+\n+--      subtype Random is Mks_Type\n+--        with\n+--         Dimension => (\"\",\n+--         Meter =>   3,\n+--         Candela => -1,\n+--         others =>  0);\n+\n+--      Obj : Random := 5.0;\n+--      Put (Obj);\n+\n+--      The corresponding output is: 5.0 m**3.cd**(-1)\n+\n+--      Put (3.3 * km * dm * min, 5, 1, 0);\n+\n+--      The corresponding output is: 19800.0 m**2.s\n \n with Ada.Text_IO; use Ada.Text_IO;\n \n generic\n    type Num_Dim_Float is digits <>;\n \n-package System.Dim_Float_IO is\n+package System.Dim.Float_IO is\n \n    Default_Fore : Field := 2;\n    Default_Aft  : Field := Num_Dim_Float'Digits - 1;\n@@ -71,4 +126,4 @@ package System.Dim_Float_IO is\n \n    pragma Inline (Put);\n \n-end System.Dim_Float_IO;\n+end System.Dim.Float_IO;"}, {"sha": "42ad688c6b82a04b05d82f766bfa144a33682259", "filename": "gcc/ada/s-diinio.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fs-diinio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fs-diinio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-diinio.adb?ref=7b50c4a3fab8576892a1358bfa08a99e7d510201", "patch": "@@ -2,7 +2,7 @@\n --                                                                          --\n --                         GNAT RUN-TIME COMPONENTS                         --\n --                                                                          --\n---                  S Y S T E M . D I M _ I N T E G E R _ I O               --\n+--                  S Y S T E M . D I M . I N T E G E R _ I O               --\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n@@ -29,7 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-package body System.Dim_Integer_IO is\n+package body System.Dim.Integer_IO is\n \n    package Num_Dim_Integer_IO is new Ada.Text_IO.Integer_IO (Num_Dim_Integer);\n \n@@ -74,4 +74,4 @@ package body System.Dim_Integer_IO is\n       To := To & Symbols;\n    end Put;\n \n-end System.Dim_Integer_IO;\n+end System.Dim.Integer_IO;"}, {"sha": "eab6a52611906526eae43d982839a87c98bbb689", "filename": "gcc/ada/s-diinio.ads", "status": "modified", "additions": 70, "deletions": 8, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fs-diinio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fs-diinio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-diinio.ads?ref=7b50c4a3fab8576892a1358bfa08a99e7d510201", "patch": "@@ -2,7 +2,7 @@\n --                                                                          --\n --                         GNAT RUN-TIME COMPONENTS                         --\n --                                                                          --\n---                  S Y S T E M . D I M _ I N T E G E R _ I O               --\n+--                  S Y S T E M . D I M . I N T E G E R _ I O               --\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n@@ -29,19 +29,81 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package is a generic package that provides IO facilities for integer\n---  dimensioned types.\n+--  This package provides output routines for integer dimensioned types. All\n+--  Put routines are modelled after those in package Ada.Text_IO.Integer_IO\n+--  with the addition of an extra default parameter.\n \n---  Note that there is a default string parameter in every Put routine\n---  rewritten at compile time to output the corresponding dimensions as a\n---  suffix of the numeric value.\n+--  All the examples in this package are based on the MKS system of units:\n+\n+--    type Mks_Type is new Integer\n+--      with\n+--       Dimension_System => ((Meter, 'm'),\n+--         (Kilogram, \"kg\"),\n+--         (Second,   's'),\n+--         (Ampere,   'A'),\n+--         (Kelvin,   'K'),\n+--         (Mole,     \"mol\"),\n+--         (Candela,  \"cd\"));\n+\n+--  Parameter Symbol may be used in the following manner:\n+\n+--  Case 1. A value is supplied for Symbol\n+\n+--    The string appears as a suffix of Item\n+\n+--      Obj : Mks_Type := 2;\n+--      Put (Obj, Symbols => \" dimensionless\");\n+\n+--      The corresponding output is: 2 dimensionless\n+\n+--  Case 2. No value is supplied for Symbol and Item is dimensionless\n+\n+--    Item appears without a suffix\n+\n+--      Obj : Mks_Type := 2;\n+--      Put (Obj);\n+\n+--      The corresponding output is: 2\n+\n+--  Case 3. No value is supplied for Symbol and Item has a dimension\n+\n+--    If the type of Item is a dimensioned subtype whose symbolic name is not\n+--    empty, then the symbolic name appears as a suffix.\n+\n+--      subtype Length is Mks_Type\n+--        with\n+--         Dimension => ('m',\n+--           Meter =>  1,\n+--           others => 0);\n+\n+--      Obj : Length := 2;\n+--      Put (Obj);\n+\n+--      The corresponding output is: 2 m\n+\n+--    Otherwise, a new string is created and appears as a suffix of Item.\n+--    This string results in the successive concatanations between each\n+--    dimension symbolic name raised by its corresponding dimension power from\n+--    the dimensions of Item.\n+\n+--      subtype Random is Mks_Type\n+--        with\n+--         Dimension => (\"\",\n+--         Meter =>   3,\n+--         Candela => 2,\n+--         others =>  0);\n+\n+--      Obj : Random := 5;\n+--      Put (Obj);\n+\n+--      The corresponding output is: 5 m**3.cd**2\n \n with Ada.Text_IO; use Ada.Text_IO;\n \n generic\n    type Num_Dim_Integer is range <>;\n \n-package System.Dim_Integer_IO is\n+package System.Dim.Integer_IO is\n \n    Default_Width : Field       := Num_Dim_Integer'Width;\n    Default_Base  : Number_Base := 10;\n@@ -67,4 +129,4 @@ package System.Dim_Integer_IO is\n \n    pragma Inline (Put);\n \n-end System.Dim_Integer_IO;\n+end System.Dim.Integer_IO;"}, {"sha": "183aaab18179dfda785d73a97671dff10d8dcc4f", "filename": "gcc/ada/s-dim.ads", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fs-dim.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fs-dim.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-dim.ads?ref=7b50c4a3fab8576892a1358bfa08a99e7d510201", "patch": "@@ -0,0 +1,69 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--                           S Y S T E M . D I M                            --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--             Copyright (C) 2012, Free Software Foundation, Inc.           --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  Defines the dimension terminology\n+\n+---------------------------\n+-- Dimension Terminology --\n+---------------------------\n+\n+--  * Dimensioned type\n+\n+--    A dimensioned type is a type (more accurately a first subtype) to which\n+--    the aspect Dimension_System applies to.\n+\n+--      type Mks_Type is new Long_Long_Float\n+--        with\n+--         Dimension_System => ((Meter, 'm'),\n+--           (Kilogram, \"kg\"),\n+--           (Second,   's'),\n+--           (Ampere,   'A'),\n+--           (Kelvin,   'K'),\n+--           (Mole,     \"mol\"),\n+--           (Candela,  \"cd\"));\n+\n+--      'm' is the symbolic name of dimension Meter\n+\n+--  * Dimensioned subtype\n+\n+--    A dimensioned subtype is a subtype directly defined from the dimensioned\n+--    type and to which the aspect Dimension applies to.\n+\n+--      subtype Length is Mks_Type\n+--        with\n+--         Dimension => ('m',\n+--           Meter =>  1,\n+--           others => 0);\n+\n+--      'm' is the symbolic name of dimensioned subtype Length\n+\n+package System.Dim is\n+end System.Dim;"}, {"sha": "b7f4de96eedc9e1897e449b50bce3edd6c6f8ee2", "filename": "gcc/ada/s-dimkio.ads", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fs-dimkio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fs-dimkio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-dimkio.ads?ref=7b50c4a3fab8576892a1358bfa08a99e7d510201", "patch": "@@ -2,11 +2,11 @@\n --                                                                          --\n --                         GNAT RUN-TIME COMPONENTS                         --\n --                                                                          --\n---                     S Y S T E M . D I M _ M K S _ I O                    --\n+--                     S Y S T E M . D I M . M K S _ I O                    --\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---            Copyright (C) 2011, Free Software Foundation, Inc.            --\n+--           Copyright (C) 2011-2012, Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,10 +29,10 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package provides IO routines for the MKS dimension system (see\n---  System.Dim_Mks).\n+--  Provides output facilities for the MKS dimension system (see System.Dim.Mks\n+--  and System.Dim.Float_IO).\n \n-with System.Dim_Mks; use System.Dim_Mks;\n-with System.Dim_Float_IO;\n+with System.Dim.Mks; use System.Dim.Mks;\n+with System.Dim.Float_IO;\n \n-package System.Dim_Mks_IO is new System.Dim_Float_IO (Mks_Type);\n+package System.Dim.Mks_IO is new System.Dim.Float_IO (Mks_Type);"}, {"sha": "28e8563c73246e4581cc962c63044042e4df8ca1", "filename": "gcc/ada/s-dimmks.ads", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fs-dimmks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fs-dimmks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-dimmks.ads?ref=7b50c4a3fab8576892a1358bfa08a99e7d510201", "patch": "@@ -2,7 +2,7 @@\n --                                                                          --\n --                         GNAT RUN-TIME COMPONENTS                         --\n --                                                                          --\n---                        S Y S T E M . D I M _ M K S                       --\n+--                        S Y S T E M . D I M . M K S                       --\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n@@ -35,9 +35,11 @@\n --  System.Dim_Mks.Other_Prefixes) in order to avoid too many constant\n --  declarations in this package.\n \n+--  The dimension terminology is defined in System.Dim_IO package\n+\n with Ada.Numerics;\n \n-package System.Dim_Mks is\n+package System.Dim.Mks is\n \n    e  : constant := Ada.Numerics.e;\n    Pi : constant := Ada.Numerics.Pi;\n@@ -54,7 +56,7 @@ package System.Dim_Mks is\n         (Mole,     \"mol\"),\n         (Candela,  \"cd\"));\n \n-   --  SI Base\n+   --  SI Base dimensioned subtype\n \n    subtype Length is Mks_Type\n      with\n@@ -321,4 +323,4 @@ package System.Dim_Mks is\n    kA  : constant Electric_Current := 1.0E+03;  -- kilo\n    MeA : constant Electric_Current := 1.0E+06;  -- mega\n \n-end System.Dim_Mks;\n+end System.Dim.Mks;"}, {"sha": "78bc57ee331be8f566651af770df153689177f12", "filename": "gcc/ada/s-dmotpr.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fs-dmotpr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fs-dmotpr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-dmotpr.ads?ref=7b50c4a3fab8576892a1358bfa08a99e7d510201", "patch": "@@ -2,11 +2,11 @@\n --                                                                          --\n --                         GNAT RUN-TIME COMPONENTS                         --\n --                                                                          --\n---         S Y S T E M . D I M _ M K S . O T H E R _ P R E F I X E S        --\n+--         S Y S T E M . D I M . M K S . O T H E R _ P R E F I X E S        --\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---            Copyright (C) 2011, Free Software Foundation, Inc.            --\n+--           Copyright (C) 2011-2012, Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -34,7 +34,7 @@\n --  These prefixes have been defined in a child package in order to avoid too\n --  many constant declarations in System.Dim_Mks.\n \n-package System.Dim_Mks.Other_Prefixes is\n+package System.Dim.Mks.Other_Prefixes is\n \n    --  SI prefixes for Meter\n \n@@ -165,4 +165,4 @@ package System.Dim_Mks.Other_Prefixes is\n    Zecd : constant Luminous_Intensity := 1.0E+21;  -- zetta\n    Yocd : constant Luminous_Intensity := 1.0E+24;  -- yotta\n \n-end System.Dim_Mks.Other_Prefixes;\n+end System.Dim.Mks.Other_Prefixes;"}, {"sha": "52431b3940bed2a6cfce918c63fd39c3eaf84f7b", "filename": "gcc/ada/scn.adb", "status": "modified", "additions": 2, "deletions": 45, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fscn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fscn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscn.adb?ref=7b50c4a3fab8576892a1358bfa08a99e7d510201", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -28,18 +28,13 @@ with Csets;    use Csets;\n with Hostparm; use Hostparm;\n with Namet;    use Namet;\n with Opt;      use Opt;\n-with Output;   use Output;\n with Restrict; use Restrict;\n with Rident;   use Rident;\n with Scans;    use Scans;\n with Sinfo;    use Sinfo;\n with Sinput;   use Sinput;\n with Uintp;    use Uintp;\n \n-with GNAT.Byte_Order_Mark; use GNAT.Byte_Order_Mark;\n-\n-with System.WCh_Con; use System.WCh_Con;\n-\n package body Scn is\n \n    use ASCII;\n@@ -271,45 +266,7 @@ package body Scn is\n          Set_License (Current_Source_File, Determine_License);\n       end if;\n \n-      --  Check for BOM\n-\n-      declare\n-         BOM : BOM_Kind;\n-         Len : Natural;\n-         Tst : String (1 .. 5);\n-\n-      begin\n-         for J in 1 .. 5 loop\n-            Tst (J) := Source (Scan_Ptr + Source_Ptr (J) - 1);\n-         end loop;\n-\n-         Read_BOM (Tst, Len, BOM, False);\n-\n-         case BOM is\n-            when UTF8_All =>\n-               Scan_Ptr := Scan_Ptr + Source_Ptr (Len);\n-               Wide_Character_Encoding_Method := WCEM_UTF8;\n-               Upper_Half_Encoding := True;\n-\n-            when UTF16_LE | UTF16_BE =>\n-               Set_Standard_Error;\n-               Write_Line (\"UTF-16 encoding format not recognized\");\n-               Set_Standard_Output;\n-               raise Unrecoverable_Error;\n-\n-            when UTF32_LE | UTF32_BE =>\n-               Set_Standard_Error;\n-               Write_Line (\"UTF-32 encoding format not recognized\");\n-               Set_Standard_Output;\n-               raise Unrecoverable_Error;\n-\n-            when Unknown =>\n-               null;\n-\n-            when others =>\n-               raise Program_Error;\n-         end case;\n-      end;\n+      Check_For_BOM;\n \n       --  Because of the License stuff above, Scng.Initialize_Scanner cannot\n       --  call Scan. Scan initial token (note this initializes Prev_Token,"}, {"sha": "bb81a470b66c15dacd125e34f47da74d83f1728c", "filename": "gcc/ada/sem_dim.adb", "status": "modified", "additions": 17, "deletions": 14, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fsem_dim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fsem_dim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dim.adb?ref=7b50c4a3fab8576892a1358bfa08a99e7d510201", "patch": "@@ -2126,7 +2126,7 @@ package body Sem_Dim is\n    -- Expand_Put_Call_With_Dimension_Symbol --\n    -------------------------------------------\n \n-   --  For procedure Put defined in System.Dim_Float_IO/System.Dim_Integer_IO,\n+   --  For procedure Put defined in System.Dim.Float_IO/System.Dim.Integer_IO,\n    --  the default string parameter must be rewritten to include the dimension\n    --  symbols in the output of a dimensioned object.\n \n@@ -2175,8 +2175,8 @@ package body Sem_Dim is\n \n       function Is_Procedure_Put_Call return Boolean;\n       --  Return True if the current call is a call of an instantiation of a\n-      --  procedure Put defined in the package System.Dim_Float_IO and\n-      --  System.Dim_Integer_IO.\n+      --  procedure Put defined in the package System.Dim.Float_IO and\n+      --  System.Dim.Integer_IO.\n \n       function Item_Actual return Node_Id;\n       --  Return the item actual parameter node in the put call\n@@ -2240,16 +2240,17 @@ package body Sem_Dim is\n             then\n                Ent := Cunit_Entity (Get_Source_Unit (Ent));\n \n-               --  Verify that the generic package is System.Dim_Float_IO or\n-               --  System.Dim_Integer_IO.\n+               --  Verify that the generic package is System.Dim.Float_IO or\n+               --  System.Dim.Integer_IO.\n \n                if Is_Library_Level_Entity (Ent) then\n                   Package_Name := Chars (Ent);\n \n-                  return\n-                    Package_Name = Name_Dim_Float_IO\n-                      or else\n-                    Package_Name = Name_Dim_Integer_IO;\n+                  if Package_Name = Name_Float_IO\n+                    or else Package_Name = Name_Integer_IO\n+                  then\n+                     return Chars (Scope (Ent)) = Name_Dim;\n+                  end if;\n                end if;\n             end if;\n          end if;\n@@ -2511,11 +2512,13 @@ package body Sem_Dim is\n       if Is_Entity_Name (Gen_Id) then\n          Ent := Entity (Gen_Id);\n \n-         return\n-           Is_Library_Level_Entity (Ent)\n-             and then\n-               (Chars (Ent) = Name_Dim_Float_IO\n-                 or else Chars (Ent) = Name_Dim_Integer_IO);\n+         if Is_Library_Level_Entity (Ent)\n+           and then\n+            (Chars (Ent) = Name_Float_IO\n+               or else Chars (Ent) = Name_Integer_IO)\n+         then\n+            return Chars (Scope (Ent)) = Name_Dim;\n+         end if;\n       end if;\n \n       return False;"}, {"sha": "b32322b902737a068a59f3aa9de3c169c686ed05", "filename": "gcc/ada/sem_dim.ads", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fsem_dim.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fsem_dim.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dim.ads?ref=7b50c4a3fab8576892a1358bfa08a99e7d510201", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---            Copyright (C) 2011, Free Software Foundation, Inc.            --\n+--           Copyright (C) 2011-2012, Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -27,7 +27,7 @@\n --  \"dimension\" is a compile-time property of a numerical type which represents\n --  a relation between various quantifiers such as length, velocity, etc.\n \n---  Package System.Dim_Mks offers a ready-to-use system of SI base units. In\n+--  Package System.Dim.Mks offers a ready-to-use system of SI base units. In\n --  addition, the implementation of this feature offers the ability to define\n --  an arbitrary system of units through the use of Ada 2012 aspects.\n \n@@ -83,12 +83,6 @@\n --  Phase 2 is called only when the node allows a dimension (see body of\n --  Sem_Dim to get the list of nodes that permit dimensions).\n \n-------------------\n--- Dimension_IO --\n-------------------\n-\n---  This section contains the routine used for IO purposes\n-\n with Types; use Types;\n \n package Sem_Dim is\n@@ -145,16 +139,16 @@ package Sem_Dim is\n \n    procedure Expand_Put_Call_With_Dimension_Symbol (N : Node_Id);\n    --  Determine whether N denotes a subprogram call to one of the routines\n-   --  defined in System.Dim_Float_IO or System.Dim_Integer_IO and add an\n+   --  defined in System.Dim.Float_IO or System.Dim.Integer_IO and add an\n    --  extra actual to the call to represent the symbolic representation of\n    --  a dimension.\n \n    function Has_Dimension_System (Typ : Entity_Id) return Boolean;\n    --  Return True if type Typ has aspect Dimension_System applied to it\n \n    function Is_Dim_IO_Package_Instantiation (N : Node_Id) return Boolean;\n-   --  Return True if N is a package instantiation of System.Dim_Integer_IO or\n-   --  of System.Dim_Float_IO.\n+   --  Return True if N is a package instantiation of System.Dim.Integer_IO or\n+   --  of System.Dim.Float_IO.\n \n    procedure Remove_Dimension_In_Call (Call : Node_Id);\n    --  Remove the dimensions from all formal parameters of Call"}, {"sha": "cb5650c80fcd4c7966f9ad56dc86c19560767266", "filename": "gcc/ada/sinput-p.adb", "status": "modified", "additions": 1, "deletions": 44, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fsinput-p.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fsinput-p.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-p.adb?ref=7b50c4a3fab8576892a1358bfa08a99e7d510201", "patch": "@@ -26,15 +26,10 @@\n with Ada.Unchecked_Conversion;\n with Ada.Unchecked_Deallocation;\n \n-with GNAT.Byte_Order_Mark; use GNAT.Byte_Order_Mark;\n-\n-with Opt;     use Opt;\n-with Output;  use Output;\n with Prj.Err;\n with Sinput.C;\n \n with System;\n-with System.WCh_Con; use System.WCh_Con;\n \n package body Sinput.P is\n \n@@ -169,45 +164,7 @@ package body Sinput.P is\n       Prj.Err.Scanner.Set_Special_Character ('#');\n       Prj.Err.Scanner.Set_Special_Character ('$');\n \n-      --  Check for BOM\n-\n-      declare\n-         BOM : BOM_Kind;\n-         Len : Natural;\n-         Tst : String (1 .. 5);\n-\n-      begin\n-         for J in 1 .. 5 loop\n-            Tst (J) := Source (Scan_Ptr + Source_Ptr (J) - 1);\n-         end loop;\n-\n-         Read_BOM (Tst, Len, BOM, False);\n-\n-         case BOM is\n-            when UTF8_All =>\n-               Scan_Ptr := Scan_Ptr + Source_Ptr (Len);\n-               Wide_Character_Encoding_Method := WCEM_UTF8;\n-               Upper_Half_Encoding := True;\n-\n-            when UTF16_LE | UTF16_BE =>\n-               Set_Standard_Error;\n-               Write_Line (\"UTF-16 encoding format not recognized\");\n-               Set_Standard_Output;\n-               raise Unrecoverable_Error;\n-\n-            when UTF32_LE | UTF32_BE =>\n-               Set_Standard_Error;\n-               Write_Line (\"UTF-32 encoding format not recognized\");\n-               Set_Standard_Output;\n-               raise Unrecoverable_Error;\n-\n-            when Unknown =>\n-               null;\n-\n-            when others =>\n-               raise Program_Error;\n-         end case;\n-      end;\n+      Check_For_BOM;\n \n       --  We scan past junk to the first interesting compilation unit token, to\n       --  see if it is SEPARATE. We ignore WITH keywords during this and also"}, {"sha": "b31e041670a912e35fa608394a5762cfa89fd7ab", "filename": "gcc/ada/sinput.adb", "status": "modified", "additions": 44, "deletions": 2, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fsinput.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fsinput.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput.adb?ref=7b50c4a3fab8576892a1358bfa08a99e7d510201", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,11 +36,15 @@ with Atree;    use Atree;\n with Debug;    use Debug;\n with Opt;      use Opt;\n with Output;   use Output;\n+with Scans;    use Scans;\n with Tree_IO;  use Tree_IO;\n-with System;   use System;\n with Widechar; use Widechar;\n \n+with GNAT.Byte_Order_Mark; use GNAT.Byte_Order_Mark;\n+\n+with System;         use System;\n with System.Memory;\n+with System.WCh_Con; use System.WCh_Con;\n \n with Unchecked_Conversion;\n with Unchecked_Deallocation;\n@@ -246,6 +250,44 @@ package body Sinput is\n       return Name_Buffer (1 .. Name_Len);\n    end Build_Location_String;\n \n+   procedure Check_For_BOM is\n+      BOM : BOM_Kind;\n+      Len : Natural;\n+      Tst : String (1 .. 5);\n+\n+   begin\n+      for J in 1 .. 5 loop\n+         Tst (J) := Source (Scan_Ptr + Source_Ptr (J) - 1);\n+      end loop;\n+\n+      Read_BOM (Tst, Len, BOM, False);\n+\n+      case BOM is\n+         when UTF8_All =>\n+            Scan_Ptr := Scan_Ptr + Source_Ptr (Len);\n+            Wide_Character_Encoding_Method := WCEM_UTF8;\n+            Upper_Half_Encoding := True;\n+\n+         when UTF16_LE | UTF16_BE =>\n+            Set_Standard_Error;\n+            Write_Line (\"UTF-16 encoding format not recognized\");\n+            Set_Standard_Output;\n+            raise Unrecoverable_Error;\n+\n+         when UTF32_LE | UTF32_BE =>\n+            Set_Standard_Error;\n+            Write_Line (\"UTF-32 encoding format not recognized\");\n+            Set_Standard_Output;\n+            raise Unrecoverable_Error;\n+\n+         when Unknown =>\n+            null;\n+\n+         when others =>\n+            raise Program_Error;\n+      end case;\n+   end Check_For_BOM;\n+\n    -----------------------\n    -- Get_Column_Number --\n    -----------------------"}, {"sha": "816fa72d0947a8a1dcdcedc730398010559ba017", "filename": "gcc/ada/sinput.ads", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fsinput.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fsinput.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput.ads?ref=7b50c4a3fab8576892a1358bfa08a99e7d510201", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -712,6 +712,16 @@ package Sinput is\n    --  Writes out internal tables to current tree file using the relevant\n    --  Table.Tree_Write routines.\n \n+   procedure Check_For_BOM;\n+   --  Check if the current source starts with a BOM. Scan_Ptr needs to be at\n+   --  the start of the current source.\n+   --  If the current source starts with a recognized BOM, then some flags\n+   --  such as Wide_Character_Encoding_Method are set accordingly.\n+   --  An exception is raised if a BOM is found that indicates an unrecognized\n+   --  format.\n+   --  This procedure has no effect if there is no BOM at the beginning of the\n+   --  current source.\n+\n private\n    pragma Inline (File_Name);\n    pragma Inline (First_Mapped_Line);"}, {"sha": "b1c6a2d80b01244a32b131bb63acaf212b8c73e1", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b50c4a3fab8576892a1358bfa08a99e7d510201/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=7b50c4a3fab8576892a1358bfa08a99e7d510201", "patch": "@@ -225,8 +225,7 @@ package Snames is\n    --  Names used by the analyzer and expander for aspect Dimension and\n    --  Dimension_System to deal with Sqrt and IO routines.\n \n-   Name_Dim_Float_IO                 : constant Name_Id := N + $; -- Ada 12\n-   Name_Dim_Integer_IO               : constant Name_Id := N + $; -- Ada 12\n+   Name_Dim                          : constant Name_Id := N + $; -- Ada 12\n    Name_Generic_Elementary_Functions : constant Name_Id := N + $; -- Ada 12\n    Name_Item                         : constant Name_Id := N + $; -- Ada 12\n    Name_Sqrt                         : constant Name_Id := N + $; -- Ada 12"}]}