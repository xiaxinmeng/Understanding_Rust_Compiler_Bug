{"sha": "2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmIwOGYyYzU2MWUwZGM5YjhmNTY5YTAwODY4YTZiN2ViMmJhMTExYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-10-27T21:43:33Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-10-27T21:43:33Z"}, "message": "c-common.c (c_common_reswords): Add __is_literal_type.\n\ngcc/c-family/\n\t* c-common.c (c_common_reswords): Add __is_literal_type.\n\t* c-common.h (enum rid): Add RID_IS_LITERAL_TYPE.\ngcc/cp/\n\t* cp-tree.h (cp_trait_kind): Add CPTK_IS_LITERAL_TYPE.\n\t* cxx-pretty-print.c (pp_cxx_trait_expression): Handle it.\n\t* semantics.c (trait_expr_value, finish_trait_expr): Likewise.\n\t* parser.c (cp_parser_primary_expression): Handle RID_IS_LITERAL_TYPE.\n\t(cp_parser_trait_expr): Likewise.\nlibstdc++-v3/\n\t* include/std/type_traits (is_literal_type): New.\n\nFrom-SVN: r166020", "tree": {"sha": "f2bb18bbab464000b24772c45a3ad35f319b284b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2bb18bbab464000b24772c45a3ad35f319b284b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "81f0bab25ec7d17b84e94ee7322aa953a75584a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81f0bab25ec7d17b84e94ee7322aa953a75584a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81f0bab25ec7d17b84e94ee7322aa953a75584a7"}], "stats": {"total": 92, "additions": 86, "deletions": 6}, "files": [{"sha": "4c18990f10e2583b5bcd5c16e8b0abf7818b7d4c", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b", "patch": "@@ -1,5 +1,8 @@\n 2010-10-27  Jason Merrill  <jason@redhat.com>\n \n+\t* c-common.c (c_common_reswords): Add __is_literal_type.\n+\t* c-common.h (enum rid): Add RID_IS_LITERAL_TYPE.\n+\n \t* c-common.c (check_case_value): Remove special C++ code.\n \n 2010-10-27  Nicola Pero  <nicola.pero@meta-innovation.com>"}, {"sha": "3cdc6631d435dbb2a3cb0076fb12a92cacdf3357", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b", "patch": "@@ -439,6 +439,7 @@ const struct c_common_resword c_common_reswords[] =\n   { \"__is_standard_layout\", RID_IS_STD_LAYOUT, D_CXXONLY },\n   { \"__is_trivial\",     RID_IS_TRIVIAL, D_CXXONLY },\n   { \"__is_union\",\tRID_IS_UNION,\tD_CXXONLY },\n+  { \"__is_literal_type\", RID_IS_LITERAL_TYPE, D_CXXONLY },\n   { \"__imag\",\t\tRID_IMAGPART,\t0 },\n   { \"__imag__\",\t\tRID_IMAGPART,\t0 },\n   { \"__inline\",\t\tRID_INLINE,\t0 },"}, {"sha": "f2c6958570654eb4fa46626d2481834fb45b3d0a", "filename": "gcc/c-family/c-common.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b/gcc%2Fc-family%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b/gcc%2Fc-family%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.h?ref=2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b", "patch": "@@ -140,7 +140,7 @@ enum rid\n   RID_IS_EMPTY,                RID_IS_ENUM,\n   RID_IS_POD,                  RID_IS_POLYMORPHIC,\n   RID_IS_STD_LAYOUT,           RID_IS_TRIVIAL,\n-  RID_IS_UNION,\n+  RID_IS_UNION,                RID_IS_LITERAL_TYPE,\n \n   /* C++0x */\n   RID_CONSTEXPR, RID_DECLTYPE, RID_NOEXCEPT, RID_NULLPTR, RID_STATIC_ASSERT,"}, {"sha": "8a94ad0afb11ed4c1ec8d7a4baab2d81861c78dc", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b", "patch": "@@ -1,3 +1,11 @@\n+2010-10-27  Jason Merrill  <jason@redhat.com>\n+\n+\t* cp-tree.h (cp_trait_kind): Add CPTK_IS_LITERAL_TYPE.\n+\t* cxx-pretty-print.c (pp_cxx_trait_expression): Handle it.\n+\t* semantics.c (trait_expr_value, finish_trait_expr): Likewise.\n+\t* parser.c (cp_parser_primary_expression): Handle RID_IS_LITERAL_TYPE.\n+\t(cp_parser_trait_expr): Likewise.\n+\n 2010-10-27  Gabriel Dos Reis  <gdr@cse.tamu.edu>\n \t    Jason Merrill  <jason@redhat.com>\n "}, {"sha": "7595b6fa4893b880c668b35025ea5ad44938a986", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b", "patch": "@@ -567,6 +567,7 @@ typedef enum cp_trait_kind\n   CPTK_IS_POLYMORPHIC,\n   CPTK_IS_STD_LAYOUT,\n   CPTK_IS_TRIVIAL,\n+  CPTK_IS_LITERAL_TYPE,\n   CPTK_IS_UNION\n } cp_trait_kind;\n "}, {"sha": "09fcc49eca5bbc102620748a610bdd0591f4d47e", "filename": "gcc/cp/cxx-pretty-print.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b/gcc%2Fcp%2Fcxx-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b/gcc%2Fcp%2Fcxx-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcxx-pretty-print.c?ref=2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b", "patch": "@@ -2369,6 +2369,9 @@ pp_cxx_trait_expression (cxx_pretty_printer *pp, tree t)\n     case CPTK_IS_UNION:\n       pp_cxx_ws_string (pp, \"__is_union\");\n       break;\n+    case CPTK_IS_LITERAL_TYPE:\n+      pp_cxx_ws_string (pp, \"__is_literal_type\");\n+      break;\n \n     default:\n       gcc_unreachable ();"}, {"sha": "360e1973dbe16c7bcb669f6109739e676e6a5cae", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b", "patch": "@@ -3814,6 +3814,7 @@ cp_parser_primary_expression (cp_parser *parser,\n \tcase RID_IS_STD_LAYOUT:\n \tcase RID_IS_TRIVIAL:\n \tcase RID_IS_UNION:\n+\tcase RID_IS_LITERAL_TYPE:\n \t  return cp_parser_trait_expr (parser, token->keyword);\n \n \t/* Objective-C++ expressions.  */\n@@ -7365,6 +7366,9 @@ cp_parser_trait_expr (cp_parser* parser, enum rid keyword)\n     case RID_IS_UNION:\n       kind = CPTK_IS_UNION;\n       break;\n+    case RID_IS_LITERAL_TYPE:\n+      kind = CPTK_IS_LITERAL_TYPE;\n+      break;\n     default:\n       gcc_unreachable ();\n     }"}, {"sha": "592696346cd42a4f4f4f9d602d15442c8f73d20e", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b", "patch": "@@ -5104,6 +5104,9 @@ trait_expr_value (cp_trait_kind kind, tree type1, tree type2)\n     case CPTK_IS_UNION:\n       return (type_code1 == UNION_TYPE);\n \n+    case CPTK_IS_LITERAL_TYPE:\n+      return (literal_type_p (type1));\n+\n     default:\n       gcc_unreachable ();\n       return false;\n@@ -5152,6 +5155,7 @@ finish_trait_expr (cp_trait_kind kind, tree type1, tree type2)\n \t      || kind == CPTK_IS_POLYMORPHIC\n \t      || kind == CPTK_IS_STD_LAYOUT\n \t      || kind == CPTK_IS_TRIVIAL\n+\t      || kind == CPTK_IS_LITERAL_TYPE\n \t      || kind == CPTK_IS_UNION);\n \n   if (kind == CPTK_IS_CONVERTIBLE_TO)\n@@ -5195,6 +5199,7 @@ finish_trait_expr (cp_trait_kind kind, tree type1, tree type2)\n     case CPTK_IS_POLYMORPHIC:\n     case CPTK_IS_STD_LAYOUT:\n     case CPTK_IS_TRIVIAL:\n+    case CPTK_IS_LITERAL_TYPE:\n       if (!check_trait_type (type1))\n \t{\n \t  error (\"incomplete type %qT not allowed\", type1);"}, {"sha": "a4811f28dd5532cad327782edca8e95d27472802", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b", "patch": "@@ -1,3 +1,7 @@\n+2010-10-27  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/constexpr-is_literal.C: New.\n+\n 2010-10-27  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/46161"}, {"sha": "d1b95437db38592a51f464bda6e7e55744d513e2", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-is_literal.C", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-is_literal.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-is_literal.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-is_literal.C?ref=2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b", "patch": "@@ -0,0 +1,38 @@\n+// { dg-options -std=c++0x }\n+\n+#include <type_traits>\n+\n+#define IS_LIT(T) (std::is_literal_type<T>::value)\n+#define SA(X) static_assert (X, #X)\n+#define YES(T) SA(IS_LIT(T))\n+#define NO(T) SA(!IS_LIT(T))\n+\n+enum E1 { };\n+enum class E2 { };\n+struct Literal {};\n+\n+struct NotLiteral {\n+  ~NotLiteral();\n+};\n+\n+YES(int);\n+YES(int[]);\n+YES(int[3]);\n+YES(double);\n+YES(void *);\n+YES(decltype (nullptr));\n+YES(int Literal::*);\n+YES(void (Literal::*)());\n+YES(E1);\n+YES(E2);\n+YES(Literal);\n+NO (NotLiteral);\n+YES(NotLiteral *);\n+YES(NotLiteral NotLiteral::*);\n+YES(NotLiteral (NotLiteral::*)(NotLiteral));\n+\n+struct A {\n+  A(const A&) = default;\n+};\n+\n+NO(A);\t\t\t\t// no constexpr ctor other than copy"}, {"sha": "05bfcbdf27ce688679812ad6c7b40b246c4fa95a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b", "patch": "@@ -1,3 +1,10 @@\n+2010-10-27  Jason Merrill  <jason@redhat.com>\n+\n+\t* include/std/type_traits (is_literal_type): New.\n+\t* testsuite/20_util/declval/requirements/1_neg.cc: Adjust.\n+\t* testsuite/20_util/make_signed/requirements/typedefs_neg.cc: Adjust.\n+\t* testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc: Adjust.\n+\n 2010-10-26  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* testsuite/lib/libstdc++.exp ([check_v3_target_normal_mode]): Add."}, {"sha": "a5a62d609ebd6cfb9850a544ad300b5e8857d430", "filename": "libstdc++-v3/include/std/type_traits", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits?ref=2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b", "patch": "@@ -192,6 +192,12 @@ namespace std\n     : public integral_constant<bool, __is_pod(_Tp)>\n     { };\n \n+  /// is_literal_type\n+  template<typename _Tp>\n+    struct is_literal_type\n+    : public integral_constant<bool, __is_literal_type(_Tp)>\n+    { };\n+\n   template<typename _Tp>\n     typename add_rvalue_reference<_Tp>::type declval() noexcept;\n "}, {"sha": "b18ff2f2a59f8eecac94bdfe2889354e37c51b54", "filename": "libstdc++-v3/testsuite/20_util/declval/requirements/1_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdeclval%2Frequirements%2F1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdeclval%2Frequirements%2F1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdeclval%2Frequirements%2F1_neg.cc?ref=2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b", "patch": "@@ -19,7 +19,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-error \"static assertion failed\" \"\" { target *-*-* } 682 }\n+// { dg-error \"static assertion failed\" \"\" { target *-*-* } 688 }\n \n #include <utility>\n "}, {"sha": "d74f4e6351e02d77c09fdbfe6d8fe32bb9878e6a", "filename": "libstdc++-v3/testsuite/20_util/make_signed/requirements/typedefs_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs_neg.cc?ref=2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b", "patch": "@@ -48,5 +48,5 @@ void test01()\n // { dg-error \"instantiated from here\" \"\" { target *-*-* } 40 }\n // { dg-error \"instantiated from here\" \"\" { target *-*-* } 42 }\n \n-// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 645 }\n-// { dg-error \"declaration of\" \"\" { target *-*-* } 609 }\n+// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 651 }\n+// { dg-error \"declaration of\" \"\" { target *-*-* } 615 }"}, {"sha": "18fd4fbb72f4d6346c48eaa17bb04c7e0e6dc4d8", "filename": "libstdc++-v3/testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs_neg.cc?ref=2b08f2c561e0dc9b8f569a00868a6b7eb2ba111b", "patch": "@@ -48,5 +48,5 @@ void test01()\n // { dg-error \"instantiated from here\" \"\" { target *-*-* } 40 }\n // { dg-error \"instantiated from here\" \"\" { target *-*-* } 42 }\n \n-// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 568 }\n-// { dg-error \"declaration of\" \"\" { target *-*-* } 532 }\n+// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 574 }\n+// { dg-error \"declaration of\" \"\" { target *-*-* } 538 }"}]}