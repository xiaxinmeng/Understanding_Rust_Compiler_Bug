{"sha": "c8bdb3452054506f90283ea198a42a811679653d", "node_id": "C_kwDOANBUbNoAKGM4YmRiMzQ1MjA1NDUwNmY5MDI4M2VhMTk4YTQyYTgxMTY3OTY1M2Q", "commit": {"author": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2021-12-03T15:50:53Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2022-01-06T16:31:16Z"}, "message": "RISC-V: Allow extension name contain digit\n\nRISC-V spec only allow alphabetical name for extension before, however\nvector extension add several extension named with digits, so we try to\nextend the naming rule.\n\nRef:\nhttps://github.com/riscv/riscv-isa-manual/pull/718\n\ngcc/ChangeLog:\n\n\t* common/config/riscv/riscv-common.c\n\t(riscv_subset_list::parse_multiletter_ext): Allow ext. name has\n\tdigit.", "tree": {"sha": "b04f86b43703b131c4c2909b4b45c9eb8f23a5d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b04f86b43703b131c4c2909b4b45c9eb8f23a5d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8bdb3452054506f90283ea198a42a811679653d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8bdb3452054506f90283ea198a42a811679653d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8bdb3452054506f90283ea198a42a811679653d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8bdb3452054506f90283ea198a42a811679653d/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2793af17db239429ea3a2e26834e74daa6cff2c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2793af17db239429ea3a2e26834e74daa6cff2c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2793af17db239429ea3a2e26834e74daa6cff2c0"}], "stats": {"total": 42, "additions": 38, "deletions": 4}, "files": [{"sha": "ecbca6cc544f4563ecf2d7f08ba1605022fbfdb7", "filename": "gcc/common/config/riscv/riscv-common.c", "status": "modified", "additions": 38, "deletions": 4, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8bdb3452054506f90283ea198a42a811679653d/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8bdb3452054506f90283ea198a42a811679653d/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.c?ref=c8bdb3452054506f90283ea198a42a811679653d", "patch": "@@ -785,24 +785,58 @@ riscv_subset_list::parse_multiletter_ext (const char *p,\n       bool explicit_version_p = false;\n       char *ext;\n       char backup;\n+      size_t len;\n+      size_t end_of_version_pos, i;\n+      bool found_any_number = false;\n+      bool found_minor_version = false;\n \n-      while (*++q != '\\0' && *q != '_' && !ISDIGIT (*q))\n+      /* Parse until end of this extension including version number.  */\n+      while (*++q != '\\0' && *q != '_')\n \t;\n \n       backup = *q;\n       *q = '\\0';\n-      ext = xstrdup (subset);\n+      len = q - subset;\n       *q = backup;\n \n+      end_of_version_pos = len;\n+      /* Find the begin of version string.  */\n+      for (i = len -1; i > 0; --i)\n+\t{\n+\t  if (ISDIGIT (subset[i]))\n+\t    {\n+\t      found_any_number = true;\n+\t      continue;\n+\t    }\n+\t  /* Might be version seperator, but need to check one more char,\n+\t     we only allow <major>p<minor>, so we could stop parsing if found\n+\t     any more `p`.  */\n+\t  if (subset[i] == 'p' &&\n+\t      !found_minor_version &&\n+\t      found_any_number && ISDIGIT (subset[i-1]))\n+\t    {\n+\t      found_minor_version = true;\n+\t      continue;\n+\t    }\n+\n+\t  end_of_version_pos = i + 1;\n+\t  break;\n+\t}\n+\n+      backup = subset[end_of_version_pos];\n+      subset[end_of_version_pos] = '\\0';\n+      ext = xstrdup (subset);\n+      subset[end_of_version_pos] = backup;\n+\n       end_of_version\n-\t= parsing_subset_version (ext, q, &major_version, &minor_version,\n+\t= parsing_subset_version (ext, subset + end_of_version_pos, &major_version, &minor_version,\n \t\t\t\t  /* std_ext_p= */ false, &explicit_version_p);\n       free (ext);\n \n       if (end_of_version == NULL)\n \treturn NULL;\n \n-      *q = '\\0';\n+      subset[end_of_version_pos] = '\\0';\n \n       if (strlen (subset) == 1)\n \t{"}]}