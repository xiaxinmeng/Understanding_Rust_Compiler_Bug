{"sha": "15f8470fd056c08d1c0a47417dafb7092b4b0cc2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTVmODQ3MGZkMDU2YzA4ZDFjMGE0NzQxN2RhZmI3MDkyYjRiMGNjMg==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-10-19T23:17:48Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-10-19T23:17:48Z"}, "message": "gcse.c (compute_hash_table): Correctly identify hard regs which are clobbered across calls.\n\n        * gcse.c (compute_hash_table): Correctly identify hard regs which are\n        clobbered across calls.\n\nFrom-SVN: r23191", "tree": {"sha": "5052bd609c1df60e02a325a22e1b34d0d1b5ce7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5052bd609c1df60e02a325a22e1b34d0d1b5ce7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15f8470fd056c08d1c0a47417dafb7092b4b0cc2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15f8470fd056c08d1c0a47417dafb7092b4b0cc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15f8470fd056c08d1c0a47417dafb7092b4b0cc2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15f8470fd056c08d1c0a47417dafb7092b4b0cc2/comments", "author": null, "committer": null, "parents": [{"sha": "18e765cbda8f41f36ca36ee219e2d53e3b821fba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18e765cbda8f41f36ca36ee219e2d53e3b821fba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18e765cbda8f41f36ca36ee219e2d53e3b821fba"}], "stats": {"total": 33, "additions": 31, "deletions": 2}, "files": [{"sha": "254788dce15c1fbd6b6842259ccdb5c9219a3331", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15f8470fd056c08d1c0a47417dafb7092b4b0cc2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15f8470fd056c08d1c0a47417dafb7092b4b0cc2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=15f8470fd056c08d1c0a47417dafb7092b4b0cc2", "patch": "@@ -19,6 +19,9 @@ Mon Oct 19 13:26:24 1998  Bernd Schmidt <crux@pool.informatik.rwth-aachen.de>\n \n Mon Oct 19 11:40:56 1998  Jeffrey A Law  (law@cygnus.com)\n \n+\t* gcse.c (compute_hash_table): Correctly identify hard regs which are\n+\tclobbered across calls.\n+\n \t* loop.c (scan_loop): Be more selective about what invariants are\n \tmoved out of a loop.\n "}, {"sha": "a330fef5b70888977336d445b09eb2c53cf015ae", "filename": "gcc/gcse.c", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15f8470fd056c08d1c0a47417dafb7092b4b0cc2/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15f8470fd056c08d1c0a47417dafb7092b4b0cc2/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=15f8470fd056c08d1c0a47417dafb7092b4b0cc2", "patch": "@@ -2075,7 +2075,20 @@ compute_hash_table (f, set_p)\n \t  if (GET_CODE (insn) == CALL_INSN)\n \t    {\n \t      for (regno = 0; regno < FIRST_PSEUDO_REGISTER; regno++)\n-\t\tif (call_used_regs[regno])\n+\t\tif ((call_used_regs[regno]\n+\t\t     && regno != STACK_POINTER_REGNUM\n+#if HARD_FRAME_POINTER_REGNUM != FRAME_POINTER_REGNUM\n+\t\t     && regno != HARD_FRAME_POINTER_REGNUM\n+#endif\n+#if ARG_POINTER_REGNUM != FRAME_POINTER_REGNUM\n+\t\t     && ! (regno == ARG_POINTER_REGNUM && fixed_regs[regno])\n+#endif\n+#if defined (PIC_OFFSET_TABLE_REGNUM) && !defined (PIC_OFFSET_TABLE_REG_CALL_CLOBBERED)\n+\t\t     && ! (regno == PIC_OFFSET_TABLE_REGNUM && flag_pic)\n+#endif\n+\n+\t\t     && regno != FRAME_POINTER_REGNUM)\n+\t\t    || global_regs[regno])\n \t\t  record_last_reg_set_info (insn, regno);\n \t      if (! CONST_CALL_P (insn))\n \t\trecord_last_mem_set_info (insn);\n@@ -2548,7 +2561,20 @@ compute_kill_rd ()\n \n \t\t  for (regno = 0; regno < FIRST_PSEUDO_REGISTER; regno++)\n                     {\n-\t\t      if (call_used_regs[regno])\n+\t\t      if ((call_used_regs[regno]\n+\t\t\t   && regno != STACK_POINTER_REGNUM\n+#if HARD_FRAME_POINTER_REGNUM != FRAME_POINTER_REGNUM\n+\t\t\t   && regno != HARD_FRAME_POINTER_REGNUM\n+#endif\n+#if ARG_POINTER_REGNUM != FRAME_POINTER_REGNUM\n+\t\t\t   && ! (regno == ARG_POINTER_REGNUM\n+\t\t\t\t && fixed_regs[regno])\n+#endif\n+#if defined (PIC_OFFSET_TABLE_REGNUM) && !defined (PIC_OFFSET_TABLE_REG_CALL_CLOBBERED)\n+\t\t\t   && ! (regno == PIC_OFFSET_TABLE_REGNUM && flag_pic)\n+#endif\n+\t\t\t   && regno != FRAME_POINTER_REGNUM)\n+\t\t\t  || global_regs[regno])\n \t\t\thandle_rd_kill_set (insn, regno, bb);\n                     }\n                 }"}]}