{"sha": "f8ed19583966af84157bae20f3fbe422e74ec7c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhlZDE5NTgzOTY2YWY4NDE1N2JhZTIwZjNmYmU0MjJlNzRlYzdjMg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-03-29T06:19:36Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-03-29T06:19:36Z"}, "message": "re PR target/6087 (3.1 i86 FP stack pop bug)\n\n        PR target/6087\n        * reload1.c (fixup_abnormal_edges): Move insn to edge via sequence.\n\nFrom-SVN: r51543", "tree": {"sha": "16034cad640b80685e8cdfd819c623f43262295f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16034cad640b80685e8cdfd819c623f43262295f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8ed19583966af84157bae20f3fbe422e74ec7c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8ed19583966af84157bae20f3fbe422e74ec7c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8ed19583966af84157bae20f3fbe422e74ec7c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8ed19583966af84157bae20f3fbe422e74ec7c2/comments", "author": null, "committer": null, "parents": [{"sha": "54e203858d9abbd383f7ad829bd4d439e2b55180", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54e203858d9abbd383f7ad829bd4d439e2b55180", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54e203858d9abbd383f7ad829bd4d439e2b55180"}], "stats": {"total": 65, "additions": 64, "deletions": 1}, "files": [{"sha": "ff8c89471392fc57f36d2a9be3efdbb949f9ec2f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8ed19583966af84157bae20f3fbe422e74ec7c2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8ed19583966af84157bae20f3fbe422e74ec7c2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f8ed19583966af84157bae20f3fbe422e74ec7c2", "patch": "@@ -1,3 +1,8 @@\n+2002-03-28  Richard Henderson  <rth@redhat.com>\n+\n+\tPR target/6087\n+\t* reload1.c (fixup_abnormal_edges): Move insn to edge via sequence.\n+\n 2002-03-28  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* config/i386/freebsd.h (LINK_SPEC): Don't pass default"}, {"sha": "c36799f4381fee3db594815cb6c1d61ec368ed1c", "filename": "gcc/reload1.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8ed19583966af84157bae20f3fbe422e74ec7c2/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8ed19583966af84157bae20f3fbe422e74ec7c2/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=f8ed19583966af84157bae20f3fbe422e74ec7c2", "patch": "@@ -9517,8 +9517,19 @@ fixup_abnormal_edges ()\n \t      next = NEXT_INSN (insn);\n \t      if (INSN_P (insn))\n \t\t{\n-\t          insert_insn_on_edge (PATTERN (insn), e);\n+\t\t  rtx seq;\n+\n \t          delete_insn (insn);\n+\n+\t\t  /* We're not deleting it, we're moving it.  */\n+\t\t  INSN_DELETED_P (insn) = 0;\n+\n+\t\t  /* Emit a sequence, rather than scarfing the pattern, so\n+\t\t     that we don't lose REG_NOTES etc.  */\n+\t\t  /* ??? Could copy the test from gen_sequence, but don't\n+\t\t     think it's worth the bother.  */\n+\t\t  seq = gen_rtx_SEQUENCE (VOIDmode, gen_rtvec (1, insn));\n+\t          insert_insn_on_edge (seq, e);\n \t\t}\n \t      insn = next;\n \t    }"}, {"sha": "76d3cee1b016fd2fbd43c9bd6d92000eba3e35ce", "filename": "gcc/testsuite/g++.dg/opt/reg-stack.C", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8ed19583966af84157bae20f3fbe422e74ec7c2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Freg-stack.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8ed19583966af84157bae20f3fbe422e74ec7c2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Freg-stack.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Freg-stack.C?ref=f8ed19583966af84157bae20f3fbe422e74ec7c2", "patch": "@@ -0,0 +1,47 @@\n+// PR target/6087\n+// The code that moves around insns emitted by reg-stack to cope with\n+// exception edges lost the REG_DEAD note indicating a pop.  Which\n+// eventually fills up the register stack resulting in Z == NaN.\n+\n+// { dg-do run }\n+// { dg-options \"-O\" }\n+\n+extern \"C\" void abort ();\n+\n+struct Base\n+{\n+  virtual ~Base() {}\n+};\n+\n+struct Foo : public Base\n+{\n+  Foo ();\n+};\n+\n+double x = 3;\n+double y = 4;\n+\n+double bar ()\n+{\n+  double z = x*x+y*y;\n+  if (z != 25.0)\n+    throw 1;\n+  return z;\n+}\n+\n+Foo::Foo ()\n+{\n+  bar ();\n+}\n+\n+int main ()\n+{\n+  try {\n+    int i;\n+    for (i = 0; i < 10; ++i)\n+      new Foo;\n+  } catch (...) {\n+    abort ();\n+  }\n+  return 0;\n+}"}]}