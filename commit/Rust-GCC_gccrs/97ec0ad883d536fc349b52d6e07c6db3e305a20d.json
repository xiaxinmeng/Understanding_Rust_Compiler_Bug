{"sha": "97ec0ad883d536fc349b52d6e07c6db3e305a20d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTdlYzBhZDg4M2Q1MzZmYzM0OWI1MmQ2ZTA3YzZkYjNlMzA1YTIwZA==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "1999-01-29T19:27:51Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1999-01-29T19:27:51Z"}, "message": "* loop.c (strength_reduce): Size reg_map according to reg_iv_type.\n\nFrom-SVN: r24910", "tree": {"sha": "3d762db83b63c1342443ecbb937f28711135a950", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d762db83b63c1342443ecbb937f28711135a950"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97ec0ad883d536fc349b52d6e07c6db3e305a20d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97ec0ad883d536fc349b52d6e07c6db3e305a20d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97ec0ad883d536fc349b52d6e07c6db3e305a20d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97ec0ad883d536fc349b52d6e07c6db3e305a20d/comments", "author": null, "committer": null, "parents": [{"sha": "4c7f1c6367dae44a75072a1f71f8aa0daa50e598", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c7f1c6367dae44a75072a1f71f8aa0daa50e598", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c7f1c6367dae44a75072a1f71f8aa0daa50e598"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "fdd20095c483afda79254be1ec745c4057bd4cfa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97ec0ad883d536fc349b52d6e07c6db3e305a20d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97ec0ad883d536fc349b52d6e07c6db3e305a20d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=97ec0ad883d536fc349b52d6e07c6db3e305a20d", "patch": "@@ -1,3 +1,7 @@\n+Sat Jan 30 03:24:37 1999  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* loop.c (strength_reduce): Size reg_map according to reg_iv_type.\n+\n Fri Jan 29 18:26:07 1999  Dave Brolley  <brolley@cygnus.com>\n \n \t* emit-rtl.c (remove_insn): New function."}, {"sha": "109ededbba1f6b1273d04c7c5cae0559d2cce0cb", "filename": "gcc/loop.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97ec0ad883d536fc349b52d6e07c6db3e305a20d/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97ec0ad883d536fc349b52d6e07c6db3e305a20d/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=97ec0ad883d536fc349b52d6e07c6db3e305a20d", "patch": "@@ -3666,6 +3666,7 @@ strength_reduce (scan_start, end, loop_top, insn_count,\n   int threshold = (loop_has_call ? 1 : 2) * (3 + n_non_fixed_regs);\n   /* Map of pseudo-register replacements.  */\n   rtx *reg_map;\n+  int reg_map_size;\n   int call_seen;\n   rtx test;\n   rtx end_insert_before;\n@@ -4419,9 +4420,12 @@ strength_reduce (scan_start, end, loop_top, insn_count,\n      so that \"decrement and branch until zero\" insn can be used.  */\n   check_dbra_loop (loop_end, insn_count, loop_start, loop_info);\n \n-  /* Create reg_map to hold substitutions for replaceable giv regs.  */\n-  reg_map = (rtx *) alloca (max_reg_before_loop * sizeof (rtx));\n-  bzero ((char *) reg_map, max_reg_before_loop * sizeof (rtx));\n+  /* Create reg_map to hold substitutions for replaceable giv regs.\n+     Some givs might have been made from biv increments, so look at\n+     reg_iv_type for a suitable size.  */\n+  reg_map_size = reg_iv_type->num_elements;\n+  reg_map = (rtx *) alloca (reg_map_size * sizeof (rtx));\n+  bzero ((char *) reg_map, reg_map_size * sizeof (rtx));\n \n   /* Examine each iv class for feasibility of strength reduction/induction\n      variable elimination.  */\n@@ -4962,8 +4966,8 @@ strength_reduce (scan_start, end, loop_top, insn_count,\n     if (GET_CODE (p) == INSN || GET_CODE (p) == JUMP_INSN\n  \t|| GET_CODE (p) == CALL_INSN)\n       {\n-\treplace_regs (PATTERN (p), reg_map, max_reg_before_loop, 0);\n-\treplace_regs (REG_NOTES (p), reg_map, max_reg_before_loop, 0);\n+\treplace_regs (PATTERN (p), reg_map, reg_map_size, 0);\n+\treplace_regs (REG_NOTES (p), reg_map, reg_map_size, 0);\n \tINSN_CODE (p) = -1;\n       }\n "}]}