{"sha": "16a34ca6acc45a0a2ea48b5a13f5687bbd893713", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZhMzRjYTZhY2M0NWEwYTJlYTQ4YjVhMTNmNTY4N2JiZDg5MzcxMw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2017-01-19T17:10:40Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-01-19T17:10:40Z"}, "message": "target.h (htm_available): Determine vendor from __get_cpuid_max return.\n\n\t* config/x86/target.h (htm_available): Determine vendor from\n\t__get_cpuid_max return.  Use signature_INTEL_ebx.  Cleanup.\n\nFrom-SVN: r244644", "tree": {"sha": "8e68c9ff39634f588b0c1d5b9dbd9ba02f756f83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e68c9ff39634f588b0c1d5b9dbd9ba02f756f83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16a34ca6acc45a0a2ea48b5a13f5687bbd893713", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16a34ca6acc45a0a2ea48b5a13f5687bbd893713", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16a34ca6acc45a0a2ea48b5a13f5687bbd893713", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16a34ca6acc45a0a2ea48b5a13f5687bbd893713/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "197d1c095d988f7ae69a166ca63e96b816c9893f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/197d1c095d988f7ae69a166ca63e96b816c9893f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/197d1c095d988f7ae69a166ca63e96b816c9893f"}], "stats": {"total": 40, "additions": 23, "deletions": 17}, "files": [{"sha": "5f44e3f1250b59e963f485a7c39a81bda1948cdb", "filename": "libitm/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16a34ca6acc45a0a2ea48b5a13f5687bbd893713/libitm%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16a34ca6acc45a0a2ea48b5a13f5687bbd893713/libitm%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FChangeLog?ref=16a34ca6acc45a0a2ea48b5a13f5687bbd893713", "patch": "@@ -1,3 +1,8 @@\n+2017-01-19  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/x86/target.h (htm_available): Determine vendor from\n+\t__get_cpuid_max return.  Use signature_INTEL_ebx.  Cleanup.\n+\n 2017-01-18  Torvald Riegel  <triegel@redhat.com>\n \n \t* config/x86/target.h (htm_available): Add check for some processors"}, {"sha": "1b79dc03a67e92faaae6785b309dc00a675616c4", "filename": "libitm/config/x86/target.h", "status": "modified", "additions": 18, "deletions": 17, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16a34ca6acc45a0a2ea48b5a13f5687bbd893713/libitm%2Fconfig%2Fx86%2Ftarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16a34ca6acc45a0a2ea48b5a13f5687bbd893713/libitm%2Fconfig%2Fx86%2Ftarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfig%2Fx86%2Ftarget.h?ref=16a34ca6acc45a0a2ea48b5a13f5687bbd893713", "patch": "@@ -75,31 +75,32 @@ static inline bool\n htm_available ()\n {\n   const unsigned cpuid_rtm = bit_RTM;\n-  if (__get_cpuid_max (0, NULL) >= 7)\n+  unsigned vendor;\n+\n+  if (__get_cpuid_max (0, &vendor) >= 7)\n     {\n       unsigned a, b, c, d;\n-      /* TSX is broken on some processors.  This can be fixed by microcode,\n+      unsigned family;\n+\n+      __cpuid (1, a, b, c, d);\n+      family = (a >> 8) & 0x0f;\n+      /* TSX is broken on some processors.  TSX can be disabled by microcode,\n \t but we cannot reliably detect whether the microcode has been\n \t updated.  Therefore, do not report availability of TSX on these\n \t processors.  We use the same approach here as in glibc (see\n \t https://sourceware.org/ml/libc-alpha/2016-12/msg00470.html).  */\n-      __cpuid (0, a, b, c, d);\n-      if (b == 0x756e6547 && c == 0x6c65746e && d == 0x49656e69)\n+      if (vendor == signature_INTEL_ebx && family == 0x06)\n \t{\n-\t  __cpuid (1, a, b, c, d);\n-\t  if (((a >> 8) & 0x0f) == 0x06) // Family.\n-\t    {\n-\t      unsigned model = ((a >> 4) & 0x0f) // Model.\n-\t\t  + ((a >> 12) & 0xf0); // Extended model.\n-\t      unsigned stepping = a & 0x0f;\n-\t      if ((model == 0x3c)\n-\t\t  || (model == 0x45)\n-\t\t  || (model == 0x46)\n-\t\t  /* Xeon E7 v3 has correct TSX if stepping >= 4.  */\n-\t\t  || ((model == 0x3f) && (stepping < 4)))\n-\t\treturn false;\n-\t    }\n+\t  unsigned model = ((a >> 4) & 0x0f) + ((a >> 12) & 0xf0);\n+\t  unsigned stepping = a & 0x0f;\n+\t  if (model == 0x3c\n+\t      /* Xeon E7 v3 has correct TSX if stepping >= 4.  */\n+\t      || (model == 0x3f && stepping < 4)\n+\t      || model == 0x45\n+\t      || model == 0x46)\n+\t    return false;\n \t}\n+\n       __cpuid_count (7, 0, a, b, c, d);\n       if (b & cpuid_rtm)\n \treturn true;"}]}