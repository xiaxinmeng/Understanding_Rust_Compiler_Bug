{"sha": "97b7ca6ffff4e2f3ba40e9cfdb8d86ecc797ee78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTdiN2NhNmZmZmY0ZTJmM2JhNDBlOWNmZGI4ZDg2ZWNjNzk3ZWU3OA==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2006-02-15T09:43:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-02-15T09:43:00Z"}, "message": "prj.ads (Error_Warning): New enumeration type\n\n2006-02-13  Vincent Celier  <celier@adacore.com>\n\n\t* prj.ads (Error_Warning): New enumeration type\n\n\t* prj-nmsc.ads, prj-nmsc.adb (Error_Msg): If location parameter is\n\tunknown, use the location of the project to report the error.\n\t(When_No_Sources): New global variable\n\t(Report_No_Ada_Sources): New procedure\n\t(Check): New parameter When_No_Sources. Set value of global variable\n\tWhen_No_Sources,\n\t(Find_Sources): Call Report_No_Ada_Sources when appropriate\n\t(Get_Sources_From_File): Ditto\n\t(Warn_If_Not_Sources): Better warning messages indicating the unit name\n\tand the file name.\n\n\t* prj-pars.ads, prj-pars.adb (Parse): New parameter When_No_Sources.\n\tCall Prj.Proc.Process with parameter When_No_Sources.\n\n\t* prj-proc.ads, prj-proc.adb (Check): New parameter When_No_Sources.\n\tCall Recursive_Check with parameter When_No_Sources.\n\t(Recursive_Check): New parameter When_No_Sources. Call itself and\n\tPrj.Nmsc.Check with parameter When_No_Sources.\n\t(Process): New parameter When_No_Sources. Call Check with parameter\n\tWhen_No_Sources.\n\t(Copy_Package_Declarations): New procedure to copy renamed parameters\n\tand setting the location of the declared attributes to the location\n\tof the renamed package.\n\t(Process_Declarative_Items): Call Copy_Package_Declarations for renamed\n\tpackages.\n\nFrom-SVN: r111084", "tree": {"sha": "f8548be927bcc6442533b3a94bc79d2981bc1312", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8548be927bcc6442533b3a94bc79d2981bc1312"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97b7ca6ffff4e2f3ba40e9cfdb8d86ecc797ee78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97b7ca6ffff4e2f3ba40e9cfdb8d86ecc797ee78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97b7ca6ffff4e2f3ba40e9cfdb8d86ecc797ee78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97b7ca6ffff4e2f3ba40e9cfdb8d86ecc797ee78/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "795b06b10250df89edb732e0e8608fd0455fac7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/795b06b10250df89edb732e0e8608fd0455fac7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/795b06b10250df89edb732e0e8608fd0455fac7e"}], "stats": {"total": 318, "additions": 267, "deletions": 51}, "files": [{"sha": "67d59201d98ceda7cf5412c8f3df849f14610156", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 59, "deletions": 18, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b7ca6ffff4e2f3ba40e9cfdb8d86ecc797ee78/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b7ca6ffff4e2f3ba40e9cfdb8d86ecc797ee78/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=97b7ca6ffff4e2f3ba40e9cfdb8d86ecc797ee78", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2000-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2000-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -27,11 +27,10 @@\n with Err_Vars; use Err_Vars;\n with Fmap;     use Fmap;\n with Hostparm;\n-with MLib.Tgt;\n+with MLib.Tgt; use MLib.Tgt;\n with Namet;    use Namet;\n with Osint;    use Osint;\n with Output;   use Output;\n-with MLib.Tgt; use MLib.Tgt;\n with Prj.Env;  use Prj.Env;\n with Prj.Err;\n with Prj.Util; use Prj.Util;\n@@ -54,6 +53,10 @@ package body Prj.Nmsc is\n    Error_Report : Put_Line_Access := null;\n    --  Set to point to error reporting procedure\n \n+   When_No_Sources : Error_Warning := Error;\n+   --  Indicates what should be done when there is no Ada sources in a non\n+   --  extending Ada project.\n+\n    ALI_Suffix   : constant String := \".ali\";\n    --  File suffix for ali files\n \n@@ -352,6 +355,12 @@ package body Prj.Nmsc is\n    --  When Naming_Exceptions is True, mark the found sources as such, to\n    --  later remove those that are not named in a list of sources.\n \n+   procedure Report_No_Ada_Sources\n+     (Project  : Project_Id;\n+      In_Tree  : Project_Tree_Ref;\n+      Location : Source_Ptr);\n+   --  Report an error or a warning depending on the value of When_No_Sources\n+\n    procedure Show_Source_Dirs\n      (Project : Project_Id; In_Tree : Project_Tree_Ref);\n    --  List all the source directories of a project\n@@ -398,15 +407,17 @@ package body Prj.Nmsc is\n    -----------\n \n    procedure Check\n-     (Project      : Project_Id;\n-      In_Tree      : Project_Tree_Ref;\n-      Report_Error : Put_Line_Access;\n-      Follow_Links : Boolean)\n+     (Project         : Project_Id;\n+      In_Tree         : Project_Tree_Ref;\n+      Report_Error    : Put_Line_Access;\n+      Follow_Links    : Boolean;\n+      When_No_Sources : Error_Warning)\n    is\n       Data      : Project_Data := In_Tree.Projects.Table (Project);\n       Extending : Boolean := False;\n \n    begin\n+      Nmsc.When_No_Sources := When_No_Sources;\n       Error_Report := Report_Error;\n \n       Recursive_Dirs.Reset;\n@@ -2793,6 +2804,7 @@ package body Prj.Nmsc is\n       Msg           : String;\n       Flag_Location : Source_Ptr)\n    is\n+      Real_Location : Source_Ptr := Flag_Location;\n       Error_Buffer : String (1 .. 5_000);\n       Error_Last   : Natural := 0;\n       Msg_Name     : Natural := 0;\n@@ -2832,8 +2844,14 @@ package body Prj.Nmsc is\n    --  Start of processing for Error_Msg\n \n    begin\n+      --  If location of error is unknown, use the location of the project\n+\n+      if Real_Location = No_Location then\n+         Real_Location := In_Tree.Projects.Table (Project).Location;\n+      end if;\n+\n       if Error_Report = null then\n-         Prj.Err.Error_Msg (Msg, Flag_Location);\n+         Prj.Err.Error_Msg (Msg, Real_Location);\n          return;\n       end if;\n \n@@ -3024,10 +3042,7 @@ package body Prj.Nmsc is\n             Data.Ada_Sources_Present := True;\n \n          elsif Data.Extends = No_Project then\n-            Error_Msg\n-              (Project, In_Tree,\n-               \"there are no Ada sources in this project\",\n-               Data.Location);\n+            Report_No_Ada_Sources (Project, In_Tree, Data.Location);\n          end if;\n       end if;\n    end Find_Sources;\n@@ -4243,12 +4258,10 @@ package body Prj.Nmsc is\n          Get_Path_Names_And_Record_Sources (Follow_Links);\n \n          --  We should have found at least one source.\n-         --  If not, report an error.\n+         --  If not, report an error/warning.\n \n          if Data.Sources = Nil_String then\n-            Error_Msg (Project, In_Tree,\n-                       \"there are no Ada sources in this project\",\n-                       Location);\n+            Report_No_Ada_Sources (Project, In_Tree, Location);\n          end if;\n       end Get_Sources_From_File;\n \n@@ -5304,6 +5317,30 @@ package body Prj.Nmsc is\n       end if;\n    end Record_Other_Sources;\n \n+   ---------------------------\n+   -- Report_No_Ada_Sources --\n+   ---------------------------\n+\n+   procedure Report_No_Ada_Sources\n+     (Project  : Project_Id;\n+      In_Tree  : Project_Tree_Ref;\n+      Location : Source_Ptr)\n+   is\n+   begin\n+      case When_No_Sources is\n+         when Silent =>\n+            null;\n+\n+         when Warning | Error =>\n+            Error_Msg_Warn := When_No_Sources = Warning;\n+\n+            Error_Msg\n+              (Project, In_Tree,\n+               \"<there are no Ada sources in this project\",\n+               Location);\n+      end case;\n+   end Report_No_Ada_Sources;\n+\n    ----------------------\n    -- Show_Source_Dirs --\n    ----------------------\n@@ -5413,6 +5450,8 @@ package body Prj.Nmsc is\n \n          else\n             The_Unit_Data := In_Tree.Units.Table (The_Unit_Id);\n+            Error_Msg_Name_2 :=\n+              In_Tree.Array_Elements.Table (Conv).Value.Value;\n \n             if Specs then\n                if not Check_Project\n@@ -5421,7 +5460,8 @@ package body Prj.Nmsc is\n                then\n                   Error_Msg\n                     (Project, In_Tree,\n-                     \"?unit{ has no spec in this project\",\n+                     \"?source of spec of unit { ({)\" &\n+                     \" cannot be found in this project\",\n                      Location);\n                end if;\n \n@@ -5432,7 +5472,8 @@ package body Prj.Nmsc is\n                then\n                   Error_Msg\n                     (Project, In_Tree,\n-                     \"?unit{ has no body in this project\",\n+                     \"?source of body of unit { ({)\" &\n+                     \" cannot be found in this project\",\n                      Location);\n                end if;\n             end if;"}, {"sha": "7918ea1546c9c36cbd6bb33d3a10fc067e62f6e2", "filename": "gcc/ada/prj-nmsc.ads", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b7ca6ffff4e2f3ba40e9cfdb8d86ecc797ee78/gcc%2Fada%2Fprj-nmsc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b7ca6ffff4e2f3ba40e9cfdb8d86ecc797ee78/gcc%2Fada%2Fprj-nmsc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.ads?ref=97b7ca6ffff4e2f3ba40e9cfdb8d86ecc797ee78", "patch": "@@ -33,10 +33,11 @@ private package Prj.Nmsc is\n    --  language summary of the implementation ???\n \n    procedure Check\n-     (Project      : Project_Id;\n-      In_Tree      : Project_Tree_Ref;\n-      Report_Error : Put_Line_Access;\n-      Follow_Links : Boolean);\n+     (Project         : Project_Id;\n+      In_Tree         : Project_Tree_Ref;\n+      Report_Error    : Put_Line_Access;\n+      Follow_Links    : Boolean;\n+      When_No_Sources : Error_Warning);\n    --  Check the object directory and the source directories\n    --\n    --  Check the library attributes, including the library directory if any\n@@ -57,5 +58,8 @@ private package Prj.Nmsc is\n    --  any file duplicated through symbolic links (although the latter are\n    --  still valid if they point to a file which is outside of the project),\n    --  and that no directory has a name which is a valid source name.\n+   --\n+   --  When_No_Ada_Sources indicates what should be done when no Ada sources\n+   --  are found in a project where Ada is a language.\n \n end Prj.Nmsc;"}, {"sha": "0b8e34e9d82ba70b09d8b046ef4999c4ca12cc02", "filename": "gcc/ada/prj-pars.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b7ca6ffff4e2f3ba40e9cfdb8d86ecc797ee78/gcc%2Fada%2Fprj-pars.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b7ca6ffff4e2f3ba40e9cfdb8d86ecc797ee78/gcc%2Fada%2Fprj-pars.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-pars.adb?ref=97b7ca6ffff4e2f3ba40e9cfdb8d86ecc797ee78", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -43,7 +43,8 @@ package body Prj.Pars is\n      (In_Tree           : Project_Tree_Ref;\n       Project           : out Project_Id;\n       Project_File_Name : String;\n-      Packages_To_Check : String_List_Access := All_Packages)\n+      Packages_To_Check : String_List_Access := All_Packages;\n+      When_No_Sources   : Error_Warning := Error)\n    is\n       Project_Node_Tree : constant Project_Node_Tree_Ref :=\n                             new Project_Node_Tree_Data;\n@@ -73,7 +74,8 @@ package body Prj.Pars is\n             From_Project_Node      => Project_Node,\n             From_Project_Node_Tree => Project_Node_Tree,\n             Report_Error           => null,\n-            Follow_Links           => Opt.Follow_Links);\n+            Follow_Links           => Opt.Follow_Links,\n+            When_No_Sources        => When_No_Sources);\n          Prj.Err.Finalize;\n \n          if not Success then\n@@ -99,7 +101,7 @@ package body Prj.Pars is\n    -- Set_Verbosity --\n    -------------------\n \n-   procedure Set_Verbosity (To : in Verbosity) is\n+   procedure Set_Verbosity (To : Verbosity) is\n    begin\n       Current_Verbosity := To;\n    end Set_Verbosity;"}, {"sha": "237a9341b1e91ddc46072a1ee1397b8b050fa4b2", "filename": "gcc/ada/prj-pars.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b7ca6ffff4e2f3ba40e9cfdb8d86ecc797ee78/gcc%2Fada%2Fprj-pars.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b7ca6ffff4e2f3ba40e9cfdb8d86ecc797ee78/gcc%2Fada%2Fprj-pars.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-pars.ads?ref=97b7ca6ffff4e2f3ba40e9cfdb8d86ecc797ee78", "patch": "@@ -35,7 +35,8 @@ package Prj.Pars is\n      (In_Tree           : Project_Tree_Ref;\n       Project           : out Project_Id;\n       Project_File_Name : String;\n-      Packages_To_Check : String_List_Access := All_Packages);\n+      Packages_To_Check : String_List_Access := All_Packages;\n+      When_No_Sources   : Error_Warning := Error);\n    --  Parse a project files and all its imported project files, in the\n    --  project tree In_Tree.\n    --\n@@ -46,5 +47,8 @@ package Prj.Pars is\n    --  Packages_To_Check indicates the packages where any unknown attribute\n    --  produces an error. For other packages, an unknown attribute produces\n    --  a warning.\n+   --\n+   --  When_No_Sources indicates what should be done when no sources\n+   --  are found in a project for a specified or implied language.\n \n end Prj.Pars;"}, {"sha": "f79afc9e6c83e94b00b73cd93f5de11186e6b572", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 174, "deletions": 23, "changes": 197, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b7ca6ffff4e2f3ba40e9cfdb8d86ecc797ee78/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b7ca6ffff4e2f3ba40e9cfdb8d86ecc797ee78/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=97b7ca6ffff4e2f3ba40e9cfdb8d86ecc797ee78", "patch": "@@ -65,12 +65,21 @@ package body Prj.Proc is\n    --  values to the package or project with declarations Decl.\n \n    procedure Check\n-     (In_Tree      : Project_Tree_Ref;\n-      Project      : in out Project_Id;\n-      Follow_Links : Boolean);\n+     (In_Tree         : Project_Tree_Ref;\n+      Project         : in out Project_Id;\n+      Follow_Links    : Boolean;\n+      When_No_Sources : Error_Warning);\n    --  Set all projects to not checked, then call Recursive_Check for the\n    --  main project Project. Project is set to No_Project if errors occurred.\n \n+   procedure Copy_Package_Declarations\n+     (From    : Declarations;\n+      To      : in out Declarations;\n+      New_Loc : Source_Ptr;\n+      In_Tree : Project_Tree_Ref);\n+   --  Copy a package declaration From to To for a renamed package. Change the\n+   --  locations of all the attributes to New_Loc.\n+\n    function Expression\n      (Project                : Project_Id;\n       In_Tree                : Project_Tree_Ref;\n@@ -119,9 +128,10 @@ package body Prj.Proc is\n    --  Then process the declarative items of the project.\n \n    procedure Recursive_Check\n-     (Project      : Project_Id;\n-      In_Tree      : Project_Tree_Ref;\n-      Follow_Links : Boolean);\n+     (Project         : Project_Id;\n+      In_Tree         : Project_Tree_Ref;\n+      Follow_Links    : Boolean;\n+      When_No_Sources : Error_Warning);\n    --  If Project is not marked as checked, mark it as checked, call\n    --  Check_Naming_Scheme for the project, then call itself for a\n    --  possible extended project and all the imported projects of Project.\n@@ -225,9 +235,10 @@ package body Prj.Proc is\n    -----------\n \n    procedure Check\n-     (In_Tree      : Project_Tree_Ref;\n-      Project      : in out Project_Id;\n-      Follow_Links : Boolean)\n+     (In_Tree         : Project_Tree_Ref;\n+      Project         : in out Project_Id;\n+      Follow_Links    : Boolean;\n+      When_No_Sources : Error_Warning)\n    is\n    begin\n       --  Make sure that all projects are marked as not checked\n@@ -238,9 +249,136 @@ package body Prj.Proc is\n          In_Tree.Projects.Table (Index).Checked := False;\n       end loop;\n \n-      Recursive_Check (Project, In_Tree, Follow_Links);\n+      Recursive_Check (Project, In_Tree, Follow_Links, When_No_Sources);\n    end Check;\n \n+   -------------------------------\n+   -- Copy_Package_Declarations --\n+   -------------------------------\n+\n+   procedure Copy_Package_Declarations\n+     (From    : Declarations;\n+      To      : in out Declarations;\n+      New_Loc : Source_Ptr;\n+      In_Tree : Project_Tree_Ref)\n+   is\n+      V1  : Variable_Id := From.Attributes;\n+      V2  : Variable_Id := No_Variable;\n+      Var : Variable;\n+      A1  : Array_Id := From.Arrays;\n+      A2  : Array_Id := No_Array;\n+      Arr : Array_Data;\n+      E1  : Array_Element_Id;\n+      E2  : Array_Element_Id := No_Array_Element;\n+      Elm : Array_Element;\n+\n+   begin\n+      --  To avoid references in error messages to attribute declarations in\n+      --  an original package that has been renamed, copy all the attribute\n+      --  declarations of the package and change all locations to New_Loc,\n+      --  the location of the renamed package.\n+\n+      --  First single attributes\n+\n+      while V1 /= No_Variable loop\n+\n+         --  Copy the attribute\n+\n+         Var := In_Tree.Variable_Elements.Table (V1);\n+         V1  := Var.Next;\n+\n+         --  Remove the Next component\n+\n+         Var.Next := No_Variable;\n+\n+         --  Change the location to New_Loc\n+\n+         Var.Value.Location := New_Loc;\n+         Variable_Element_Table.Increment_Last (In_Tree.Variable_Elements);\n+\n+         --  Put in new declaration\n+\n+         if To.Attributes = No_Variable then\n+            To.Attributes :=\n+              Variable_Element_Table.Last (In_Tree.Variable_Elements);\n+\n+         else\n+            In_Tree.Variable_Elements.Table (V2).Next :=\n+              Variable_Element_Table.Last (In_Tree.Variable_Elements);\n+         end if;\n+\n+         V2 := Variable_Element_Table.Last (In_Tree.Variable_Elements);\n+         In_Tree.Variable_Elements.Table (V2) := Var;\n+      end loop;\n+\n+      --  Then the associated array attributes\n+\n+      while A1 /= No_Array loop\n+\n+         --  Copy the array\n+\n+         Arr := In_Tree.Arrays.Table (A1);\n+         A1  := Arr.Next;\n+\n+         --  Remove the Next component\n+\n+         Arr.Next := No_Array;\n+\n+         Array_Table.Increment_Last (In_Tree.Arrays);\n+\n+         --  Create new Array declaration\n+         if To.Arrays = No_Array then\n+            To.Arrays := Array_Table.Last (In_Tree.Arrays);\n+\n+         else\n+            In_Tree.Arrays.Table (A2).Next :=\n+              Array_Table.Last (In_Tree.Arrays);\n+         end if;\n+\n+         A2 := Array_Table.Last (In_Tree.Arrays);\n+\n+         --  Don't store the array, as its first element has not been set yet\n+\n+         --  Copy the array elements of the array\n+\n+         E1 := Arr.Value;\n+         Arr.Value := No_Array_Element;\n+\n+         while E1 /= No_Array_Element loop\n+\n+            --  Copy the array element\n+\n+            Elm := In_Tree.Array_Elements.Table (E1);\n+            E1 := Elm.Next;\n+\n+            --  Remove the Next component\n+\n+            Elm.Next := No_Array_Element;\n+\n+            --  Change the location\n+\n+            Elm.Value.Location := New_Loc;\n+            Array_Element_Table.Increment_Last (In_Tree.Array_Elements);\n+\n+            --  Create new array element\n+\n+            if Arr.Value = No_Array_Element then\n+               Arr.Value := Array_Element_Table.Last (In_Tree.Array_Elements);\n+            else\n+               In_Tree.Array_Elements.Table (E2).Next :=\n+                 Array_Element_Table.Last (In_Tree.Array_Elements);\n+            end if;\n+\n+            E2 := Array_Element_Table.Last (In_Tree.Array_Elements);\n+            In_Tree.Array_Elements.Table (E2) := Elm;\n+         end loop;\n+\n+         --  Finally, store the new array\n+\n+         In_Tree.Arrays.Table (A2) := Arr;\n+      end loop;\n+   end Copy_Package_Declarations;\n+\n    ----------------\n    -- Expression --\n    ----------------\n@@ -998,7 +1136,8 @@ package body Prj.Proc is\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n       Report_Error           : Put_Line_Access;\n-      Follow_Links           : Boolean := True)\n+      Follow_Links           : Boolean := True;\n+      When_No_Sources        : Error_Warning := Error)\n    is\n       Obj_Dir    : Name_Id;\n       Extending  : Project_Id;\n@@ -1024,7 +1163,7 @@ package body Prj.Proc is\n          Extended_By            => No_Project);\n \n       if Project /= No_Project then\n-         Check (In_Tree, Project, Follow_Links);\n+         Check (In_Tree, Project, Follow_Links, When_No_Sources);\n       end if;\n \n       --  If main project is an extending all project, set the object\n@@ -1233,11 +1372,20 @@ package body Prj.Proc is\n                                                      From_Project_Node_Tree));\n \n                         begin\n-                           --  For a renamed package, set declarations to\n-                           --  the declarations of the renamed package.\n-\n-                           In_Tree.Packages.Table (New_Pkg).Decl :=\n-                             In_Tree.Packages.Table (Renamed_Package).Decl;\n+                           --  For a renamed package, copy the declarations of\n+                           --  the renamed package, but set all the locations\n+                           --  to the location of the package name in the\n+                           --  renaming declaration.\n+\n+                           Copy_Package_Declarations\n+                             (From     =>\n+                                In_Tree.Packages.Table (Renamed_Package).Decl,\n+                              To      =>\n+                                In_Tree.Packages.Table (New_Pkg).Decl,\n+                              New_Loc =>\n+                                Location_Of\n+                                  (Current_Item, From_Project_Node_Tree),\n+                              In_Tree => In_Tree);\n                         end;\n \n                      --  Standard package declaration, not renaming\n@@ -2106,9 +2254,10 @@ package body Prj.Proc is\n    ---------------------\n \n    procedure Recursive_Check\n-     (Project           : Project_Id;\n-      In_Tree           : Project_Tree_Ref;\n-      Follow_Links      : Boolean)\n+     (Project         : Project_Id;\n+      In_Tree         : Project_Tree_Ref;\n+      Follow_Links    : Boolean;\n+      When_No_Sources : Error_Warning)\n    is\n       Data                  : Project_Data;\n       Imported_Project_List : Project_List := Empty_Project_List;\n@@ -2130,7 +2279,8 @@ package body Prj.Proc is\n          --  Call itself for a possible extended project.\n          --  (if there is no extended project, then nothing happens).\n \n-         Recursive_Check (Data.Extends, In_Tree, Follow_Links);\n+         Recursive_Check\n+           (Data.Extends, In_Tree, Follow_Links, When_No_Sources);\n \n          --  Call itself for all imported projects\n \n@@ -2139,7 +2289,7 @@ package body Prj.Proc is\n             Recursive_Check\n               (In_Tree.Project_Lists.Table\n                  (Imported_Project_List).Project,\n-               In_Tree, Follow_Links);\n+               In_Tree, Follow_Links, When_No_Sources);\n             Imported_Project_List :=\n               In_Tree.Project_Lists.Table\n                 (Imported_Project_List).Next;\n@@ -2151,7 +2301,8 @@ package body Prj.Proc is\n             Write_Line (\"\"\"\");\n          end if;\n \n-         Prj.Nmsc.Check (Project, In_Tree, Error_Report, Follow_Links);\n+         Prj.Nmsc.Check\n+           (Project, In_Tree, Error_Report, Follow_Links, When_No_Sources);\n       end if;\n    end Recursive_Check;\n "}, {"sha": "ec384052cae973b4b46440881e6cb54bee2df0a2", "filename": "gcc/ada/prj-proc.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b7ca6ffff4e2f3ba40e9cfdb8d86ecc797ee78/gcc%2Fada%2Fprj-proc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b7ca6ffff4e2f3ba40e9cfdb8d86ecc797ee78/gcc%2Fada%2Fprj-proc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.ads?ref=97b7ca6ffff4e2f3ba40e9cfdb8d86ecc797ee78", "patch": "@@ -39,7 +39,8 @@ package Prj.Proc is\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n       Report_Error           : Put_Line_Access;\n-      Follow_Links           : Boolean := True);\n+      Follow_Links           : Boolean := True;\n+      When_No_Sources        : Error_Warning := Error);\n    --  Process a project file tree into project file data structures. If\n    --  Report_Error is null, use the error reporting mechanism. Otherwise,\n    --  report errors using Report_Error.\n@@ -49,6 +50,9 @@ package Prj.Proc is\n    --  still valid if they point to a file which is outside of the project),\n    --  and that no directory has a name which is a valid source name.\n    --\n+   --  When_No_Sources indicates what should be done when no sources\n+   --  are found in a project for a specified or implied language.\n+   --\n    --  Process is a bit of a junk name, how about Process_Project_Tree???\n \n end Prj.Proc;"}, {"sha": "474920460e11d99fb79cbadb12d9dbec6ee362ca", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b7ca6ffff4e2f3ba40e9cfdb8d86ecc797ee78/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b7ca6ffff4e2f3ba40e9cfdb8d86ecc797ee78/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=97b7ca6ffff4e2f3ba40e9cfdb8d86ecc797ee78", "patch": "@@ -72,6 +72,16 @@ package Prj is\n    --  The standard project file name extension. It is not a constant, because\n    --  Canonical_Case_File_Name is called on this variable in the body of Prj.\n \n+   type Error_Warning is (Silent, Warning, Error);\n+   --  Severity of some situations, such as: no Ada sources in a project where\n+   --  Ada is one of the language.\n+   --\n+   --  When the situation occurs, the behaviour depends on the setting:\n+   --\n+   --    - Silent:  no action\n+   --    - Warning: issue a warning, does not cause the tool to fail\n+   --    - Error:   issue an error, causes the tool to fail\n+\n    -----------------------------------------------------\n    -- Multi-language Stuff That Will be Modified Soon --\n    -----------------------------------------------------"}]}