{"sha": "975f319568cd880d7434b345441b91e84265c20d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc1ZjMxOTU2OGNkODgwZDc0MzRiMzQ1NDQxYjkxZTg0MjY1YzIwZA==", "commit": {"author": {"name": "Nicolas Setton", "email": "setton@adacore.com", "date": "2005-06-16T08:37:52Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-06-16T08:37:52Z"}, "message": "exp_dbug.ads, [...] (Get_Variant_Part): Fix the encoding of the \"simple_choice\" member in a variant record...\n\n2005-06-14  Nicolas Setton  <setton@adacore.com>\n\t    Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_dbug.ads, exp_dbug.adb (Get_Variant_Part): Fix the encoding of\n\tthe \"simple_choice\" member in a variant record, in accordance with the\n\tdescription in the package spec: the information output for a constant\n\tshould be \"S number\", not \"SS number\".\n\t(Get_Encoded_Name): Return at once if not generating code. Avoids name\n\toverflow problem when compiling with -gnatct, for ASIS/gnatmetrics.\n\nFrom-SVN: r101034", "tree": {"sha": "e703bd59d993dd0bf242ba5587e96d4fdb4905ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e703bd59d993dd0bf242ba5587e96d4fdb4905ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/975f319568cd880d7434b345441b91e84265c20d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/975f319568cd880d7434b345441b91e84265c20d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/975f319568cd880d7434b345441b91e84265c20d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/975f319568cd880d7434b345441b91e84265c20d/comments", "author": {"login": "setton", "id": 96973, "node_id": "MDQ6VXNlcjk2OTcz", "avatar_url": "https://avatars.githubusercontent.com/u/96973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/setton", "html_url": "https://github.com/setton", "followers_url": "https://api.github.com/users/setton/followers", "following_url": "https://api.github.com/users/setton/following{/other_user}", "gists_url": "https://api.github.com/users/setton/gists{/gist_id}", "starred_url": "https://api.github.com/users/setton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/setton/subscriptions", "organizations_url": "https://api.github.com/users/setton/orgs", "repos_url": "https://api.github.com/users/setton/repos", "events_url": "https://api.github.com/users/setton/events{/privacy}", "received_events_url": "https://api.github.com/users/setton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f75ef3af652eaa806306acd40919d5e3ae34f68b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f75ef3af652eaa806306acd40919d5e3ae34f68b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f75ef3af652eaa806306acd40919d5e3ae34f68b"}], "stats": {"total": 55, "additions": 33, "deletions": 22}, "files": [{"sha": "1edee1f54e28434309a7b6837640d1729391c3a2", "filename": "gcc/ada/exp_dbug.adb", "status": "modified", "additions": 22, "deletions": 14, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/975f319568cd880d7434b345441b91e84265c20d/gcc%2Fada%2Fexp_dbug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/975f319568cd880d7434b345441b91e84265c20d/gcc%2Fada%2Fexp_dbug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.adb?ref=975f319568cd880d7434b345441b91e84265c20d", "patch": "@@ -31,7 +31,7 @@ with Einfo;    use Einfo;\n with Namet;    use Namet;\n with Nlists;   use Nlists;\n with Nmake;    use Nmake;\n-with Opt;\n+with Opt;      use Opt;\n with Output;   use Output;\n with Sem_Eval; use Sem_Eval;\n with Sem_Util; use Sem_Util;\n@@ -492,6 +492,15 @@ package body Exp_Dbug is\n       Has_Suffix : Boolean;\n \n    begin\n+      --  If not generating code, there is no need to create encoded\n+      --  names, and problems when the back-end is called to annotate\n+      --  types without full code generation. See comments at beginning\n+      --  of Get_External_Name_With_Suffix for additional details.\n+\n+      if Operating_Mode /= Generate_Code then\n+         return;\n+      end if;\n+\n       Get_Name_String (Chars (E));\n \n       --  Nothing to do if we do not have a type\n@@ -738,20 +747,19 @@ package body Exp_Dbug is\n       Suffix : String)\n    is\n       Has_Suffix : constant Boolean := (Suffix /= \"\");\n-      use type Opt.Operating_Mode_Type;\n \n    begin\n-      if Opt.Operating_Mode /= Opt.Generate_Code then\n+      --  If we are not in code generation mode, this procedure may still be\n+      --  called from Back_End (more specifically - from gigi for doing type\n+      --  representation annotation or some representation-specific checks).\n+      --  But in this mode there is no need to mess with external names.\n \n-         --  If we are not in code generation mode, we still may call this\n-         --  procedure from Back_End (more specifically - from gigi for doing\n-         --  type representation annotation or some representation-specific\n-         --  checks). But in this mode there is no need to mess with external\n-         --  names. Furthermore, the call causes difficulties in this case\n-         --  because the string representing the homonym number is not\n-         --  correctly reset as a part of the call to\n-         --  Output_Homonym_Numbers_Suffix (which is not called in gigi)\n+      --  Furthermore, the call causes difficulties in this case because the\n+      --  string representing the homonym number is not correctly reset as a\n+      --  part of the call to Output_Homonym_Numbers_Suffix (which is not\n+      --  called in gigi).\n \n+      if Operating_Mode /= Generate_Code then\n          return;\n       end if;\n \n@@ -760,7 +768,6 @@ package body Exp_Dbug is\n       if Has_Suffix then\n          Add_Str_To_Name_Buffer (\"___\");\n          Add_Str_To_Name_Buffer (Suffix);\n-\n          Name_Buffer (Name_Len + 1) := ASCII.Nul;\n       end if;\n    end Get_External_Name_With_Suffix;\n@@ -782,9 +789,8 @@ package body Exp_Dbug is\n \n       procedure Choice_Val (Typ : Character; Choice : Node_Id) is\n       begin\n-         Add_Char_To_Name_Buffer (Typ);\n-\n          if Nkind (Choice) = N_Integer_Literal then\n+            Add_Char_To_Name_Buffer (Typ);\n             Add_Uint_To_Buffer (Intval (Choice));\n \n          --  Character literal with no entity present (this is the case\n@@ -793,6 +799,7 @@ package body Exp_Dbug is\n          elsif Nkind (Choice) = N_Character_Literal\n            and then No (Entity (Choice))\n          then\n+            Add_Char_To_Name_Buffer (Typ);\n             Add_Uint_To_Buffer (Char_Literal_Value (Choice));\n \n          else\n@@ -801,6 +808,7 @@ package body Exp_Dbug is\n \n             begin\n                if Ekind (Ent) = E_Enumeration_Literal then\n+                  Add_Char_To_Name_Buffer (Typ);\n                   Add_Uint_To_Buffer (Enumeration_Rep (Ent));\n \n                else"}, {"sha": "90b925da68a4a0bd55098da516af1705b6a47e2d", "filename": "gcc/ada/exp_dbug.ads", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/975f319568cd880d7434b345441b91e84265c20d/gcc%2Fada%2Fexp_dbug.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/975f319568cd880d7434b345441b91e84265c20d/gcc%2Fada%2Fexp_dbug.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.ads?ref=975f319568cd880d7434b345441b91e84265c20d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1996-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1996-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -432,8 +432,9 @@ package Exp_Dbug is\n    --        or is defined within an overloaded subprogram.\n    --    - the string \"___\" followed by Suffix\n    --\n-   --  If this procedure is called in the ASIS mode, it does nothing. See the\n-   --  comments in the body for more details.\n+   --  Note that a call to this procedure has no effect if we are not\n+   --  generating code, since the necessary information for computing the\n+   --  proper encoded name is not available in this case.\n \n    --------------------------------------------\n    -- Subprograms for Handling Qualification --\n@@ -923,11 +924,13 @@ package Exp_Dbug is\n    -------------------------------------------------\n \n    procedure Get_Encoded_Name (E : Entity_Id);\n-   --  If the entity is a typename, store the external name of\n-   --  the entity as in Get_External_Name, followed by three underscores\n-   --  plus the type encoding in Name_Buffer with the length in Name_Len,\n-   --  and an ASCII.NUL character stored following the name.\n-   --  Otherwise set Name_Buffer and Name_Len to hold the entity name.\n+   --  If the entity is a typename, store the external name of the entity as in\n+   --  Get_External_Name, followed by three underscores plus the type encoding\n+   --  in Name_Buffer with the length in Name_Len, and an ASCII.NUL character\n+   --  stored following the name. Otherwise set Name_Buffer and Name_Len to\n+   --  hold the entity name. Note that a call to this procedure has no effect\n+   --  if we are not generating code, since the necessary information for\n+   --  computing the proper encoded name is not available in this case.\n \n    --------------\n    -- Renaming --"}]}