{"sha": "37261a5c97f0844da609767d0e5f4dfb748dc6e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzcyNjFhNWM5N2YwODQ0ZGE2MDk3NjdkMGU1ZjRkZmI3NDhkYzZlMw==", "commit": {"author": {"name": "Zdenek Dvorak", "email": "dvorakz@suse.cz", "date": "2005-08-29T07:13:06Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2005-08-29T07:13:06Z"}, "message": "re PR tree-optimization/23475 (Frequences are not updated for empty loop removal)\n\n\tPR tree-optimization/23475\n\t* tree-ssa-loop-ivcanon.c (remove_empty_loop): Update frequencies\n\tand counts.\n\nFrom-SVN: r103593", "tree": {"sha": "85299ab1b6c6a3f39ea6c41111d31dfbca8ca7b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85299ab1b6c6a3f39ea6c41111d31dfbca8ca7b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37261a5c97f0844da609767d0e5f4dfb748dc6e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37261a5c97f0844da609767d0e5f4dfb748dc6e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37261a5c97f0844da609767d0e5f4dfb748dc6e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37261a5c97f0844da609767d0e5f4dfb748dc6e3/comments", "author": null, "committer": null, "parents": [{"sha": "ba1261450b3ca2d92b58a76a83514802ffd027fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba1261450b3ca2d92b58a76a83514802ffd027fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba1261450b3ca2d92b58a76a83514802ffd027fb"}], "stats": {"total": 43, "additions": 42, "deletions": 1}, "files": [{"sha": "1a2068fad06a7a3b8a26f0e9ea77853ed8f4198a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37261a5c97f0844da609767d0e5f4dfb748dc6e3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37261a5c97f0844da609767d0e5f4dfb748dc6e3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=37261a5c97f0844da609767d0e5f4dfb748dc6e3", "patch": "@@ -1,3 +1,9 @@\n+2005-08-29  Zdenek Dvorak  <dvorakz@suse.cz>\n+\n+\tPR tree-optimization/23475\n+\t* tree-ssa-loop-ivcanon.c (remove_empty_loop): Update frequencies\n+\tand counts.\n+\n 2005-08-28  Daniel Berlin  <dberlin@dberlin.org>\n \n \tFix PR middle-end/22455"}, {"sha": "9b818b215f217c76413710fa2deadf8e2fb70dfd", "filename": "gcc/tree-ssa-loop-ivcanon.c", "status": "modified", "additions": 36, "deletions": 1, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37261a5c97f0844da609767d0e5f4dfb748dc6e3/gcc%2Ftree-ssa-loop-ivcanon.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37261a5c97f0844da609767d0e5f4dfb748dc6e3/gcc%2Ftree-ssa-loop-ivcanon.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivcanon.c?ref=37261a5c97f0844da609767d0e5f4dfb748dc6e3", "patch": "@@ -491,9 +491,16 @@ empty_loop_p (struct loop *loop)\n static void\n remove_empty_loop (struct loop *loop)\n {\n-  edge exit = single_dom_exit (loop);\n+  edge exit = single_dom_exit (loop), non_exit;\n   tree cond_stmt = last_stmt (exit->src);\n   tree do_exit;\n+  basic_block *body;\n+  unsigned n_before, freq_in, freq_h;\n+  gcov_type exit_count = exit->count;\n+\n+  non_exit = EDGE_SUCC (exit->src, 0);\n+  if (non_exit == exit)\n+    non_exit = EDGE_SUCC (exit->src, 1);\n \n   if (exit->flags & EDGE_TRUE_VALUE)\n     do_exit = boolean_true_node;\n@@ -502,6 +509,34 @@ remove_empty_loop (struct loop *loop)\n \n   COND_EXPR_COND (cond_stmt) = do_exit;\n   update_stmt (cond_stmt);\n+\n+  /* Let us set the probabilities of the edges coming from the exit block.  */\n+  exit->probability = REG_BR_PROB_BASE;\n+  non_exit->probability = 0;\n+  non_exit->count = 0;\n+\n+  /* Update frequencies and counts.  Everything before\n+     the exit needs to be scaled FREQ_IN/FREQ_H times,\n+     where FREQ_IN is the frequency of the entry edge\n+     and FREQ_H is the frequency of the loop header.\n+     Everything after the exit has zero frequency.  */\n+  freq_h = loop->header->frequency;\n+  freq_in = EDGE_FREQUENCY (loop_preheader_edge (loop));\n+  if (freq_h != 0)\n+    {\n+      body = get_loop_body_in_dom_order (loop);\n+      for (n_before = 1; n_before <= loop->num_nodes; n_before++)\n+\tif (body[n_before - 1] == exit->src)\n+\t  break;\n+      scale_bbs_frequencies_int (body, n_before, freq_in, freq_h);\n+      scale_bbs_frequencies_int (body + n_before, loop->num_nodes - n_before,\n+\t\t\t\t 0, 1);\n+      free (body);\n+    }\n+\n+  /* Number of executions of exit is not changed, thus we need to restore\n+     the original value.  */\n+  exit->count = exit_count;\n }\n \n /* Removes LOOP if it is empty.  Returns true if LOOP is removed.  CHANGED"}]}