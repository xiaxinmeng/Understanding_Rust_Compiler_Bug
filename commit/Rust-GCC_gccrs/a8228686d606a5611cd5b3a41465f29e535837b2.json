{"sha": "a8228686d606a5611cd5b3a41465f29e535837b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTgyMjg2ODZkNjA2YTU2MTFjZDViM2E0MTQ2NWYyOWU1MzU4MzdiMg==", "commit": {"author": {"name": "Bruce Korb", "email": "bkorb@gnu.org", "date": "2000-05-20T19:47:41Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2000-05-20T19:47:41Z"}, "message": "yet more applications of c_fix=format + tests\n\nFrom-SVN: r34055", "tree": {"sha": "df73a91375c69910400734c3d1ce2fdf139cfe17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df73a91375c69910400734c3d1ce2fdf139cfe17"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8228686d606a5611cd5b3a41465f29e535837b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8228686d606a5611cd5b3a41465f29e535837b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8228686d606a5611cd5b3a41465f29e535837b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8228686d606a5611cd5b3a41465f29e535837b2/comments", "author": {"login": "brkorb", "id": 1242936, "node_id": "MDQ6VXNlcjEyNDI5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1242936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brkorb", "html_url": "https://github.com/brkorb", "followers_url": "https://api.github.com/users/brkorb/followers", "following_url": "https://api.github.com/users/brkorb/following{/other_user}", "gists_url": "https://api.github.com/users/brkorb/gists{/gist_id}", "starred_url": "https://api.github.com/users/brkorb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brkorb/subscriptions", "organizations_url": "https://api.github.com/users/brkorb/orgs", "repos_url": "https://api.github.com/users/brkorb/repos", "events_url": "https://api.github.com/users/brkorb/events{/privacy}", "received_events_url": "https://api.github.com/users/brkorb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fbd40359903dd76a65dea95c8782cc47f28fbc77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbd40359903dd76a65dea95c8782cc47f28fbc77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbd40359903dd76a65dea95c8782cc47f28fbc77"}], "stats": {"total": 329, "additions": 228, "deletions": 101}, "files": [{"sha": "817424a8e03f2b2ca58c5a977e59c7c4bd51b502", "filename": "gcc/ChangeLog", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8228686d606a5611cd5b3a41465f29e535837b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8228686d606a5611cd5b3a41465f29e535837b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a8228686d606a5611cd5b3a41465f29e535837b2", "patch": "@@ -24,6 +24,7 @@\n \n \t* fixinc/inclhack.def:  more applications of c_fix=format + tests\n \t* fixinc/check.diff:  regenerated\n+\t* fixinc/fixincl.x:  regenerated\n \n Sat May 20 09:30:55 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n "}, {"sha": "c2d3b6c8a5d6bd2a8f38f6af54a089b151c69042", "filename": "gcc/fixinc/check.diff", "status": "modified", "additions": 88, "deletions": 12, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8228686d606a5611cd5b3a41465f29e535837b2/gcc%2Ffixinc%2Fcheck.diff", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8228686d606a5611cd5b3a41465f29e535837b2/gcc%2Ffixinc%2Fcheck.diff", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Fcheck.diff?ref=a8228686d606a5611cd5b3a41465f29e535837b2", "patch": "@@ -81,6 +81,36 @@\n   };\n ! extern Wedged( Widget c_new, Widget old );\n   #endif  /* X11_NEW_CHECK */\n+*** inc/ansi/math.h\n+--- res/ansi/math.h\n+***************\n+*** 1,5 ****\n+  \n+  \n+  #if defined( NEXT_MATH_PREFIX_CHECK )\n+! extern\tdouble\t__const__\tmumble();\n+  #endif  /* NEXT_MATH_PREFIX_CHECK */\n+--- 1,5 ----\n+  \n+  \n+  #if defined( NEXT_MATH_PREFIX_CHECK )\n+! extern double mumble();\n+  #endif  /* NEXT_MATH_PREFIX_CHECK */\n+*** inc/ansi/stdlib.h\n+--- res/ansi/stdlib.h\n+***************\n+*** 1,5 ****\n+  \n+  \n+  #if defined( NEXT_VOLITILE_CHECK )\n+! extern\tvolatile\tvoid\tabort();\n+  #endif  /* NEXT_VOLITILE_CHECK */\n+--- 1,5 ----\n+  \n+  \n+  #if defined( NEXT_VOLITILE_CHECK )\n+! extern void abort();\n+  #endif  /* NEXT_VOLITILE_CHECK */\n *** inc/assert.h\n --- res/assert.h\n ***************\n@@ -109,6 +139,21 @@\n + #endif  /* FIXINC_BROKEN_ASSERT_STDIO_CHECK */\n + \n + #endif  /* FIXINC_BROKEN_ASSERT_STDLIB_CHECK */\n+*** inc/bsd/libc.h\n+--- res/bsd/libc.h\n+***************\n+*** 1,5 ****\n+  \n+  \n+  #if defined( NEXT_TEMPLATE_CHECK )\n+! extern mumble( char * template); /* fix */\n+  #endif  /* NEXT_TEMPLATE_CHECK */\n+--- 1,5 ----\n+  \n+  \n+  #if defined( NEXT_TEMPLATE_CHECK )\n+! extern mumble( char *); /* fix */\n+  #endif  /* NEXT_TEMPLATE_CHECK */\n *** inc/c_asm.h\n --- res/c_asm.h\n ***************\n@@ -235,10 +280,25 @@\n    #\tdefine\tDBL_DIG \t 0  /* somthin' */\n + #endif\n   #endif  /* LIMITS_IFNDEFS_CHECK */\n+*** inc/machine/ansi.h\n+--- res/machine/ansi.h\n+***************\n+*** 1,5 ****\n+  \n+  \n+  #if defined( MACHINE_ANSI_H_VA_LIST_CHECK )\n+!  # define _BSD_VA_LIST_\tchar**\n+  #endif  /* MACHINE_ANSI_H_VA_LIST_CHECK */\n+--- 1,5 ----\n+  \n+  \n+  #if defined( MACHINE_ANSI_H_VA_LIST_CHECK )\n+!  # define _BSD_VA_LIST_\t__builtin_va_list\n+  #endif  /* MACHINE_ANSI_H_VA_LIST_CHECK */\n *** inc/math.h\n --- res/math.h\n ***************\n-*** 1,44 ****\n+*** 1,41 ****\n   \n   \n   #if defined( BROKEN_CABS_CHECK )\n@@ -280,10 +340,7 @@\n   #endif  /* M88K_BAD_HYPOT_OPT_CHECK */\n   \n   \n-  #if defined( MATH_EXCEPTION_CHECK )\n-  typedef struct exception t_math_exception;\n-  #endif  /* MATH_EXCEPTION_CHECK */\n---- 1,69 ----\n+--- 1,61 ----\n + #ifndef FIXINC_MATH_EXCEPTION_CHECK\n + #define FIXINC_MATH_EXCEPTION_CHECK 1\n + \n@@ -345,9 +402,16 @@\n   #endif  /* M88K_BAD_HYPOT_OPT_CHECK */\n   \n   \n-  #if defined( MATH_EXCEPTION_CHECK )\n-  typedef struct exception t_math_exception;\n-  #endif  /* MATH_EXCEPTION_CHECK */\n+***************\n+*** 45,49 ****\n+--- 65,76 ----\n+  \n+  \n+  #if defined( MATH_HUGE_VAL_IFNDEF_CHECK )\n++ #ifndef HUGE_VAL\n+  # define\tHUGE_VAL 3.4e+40\n++ #endif\n+  #endif  /* MATH_HUGE_VAL_IFNDEF_CHECK */\n + #ifdef __cplusplus\n + #undef exception\n + #endif\n@@ -469,22 +533,34 @@\n *** inc/stdlib.h\n --- res/stdlib.h\n ***************\n-*** 1,7 ****\n+*** 1,12 ****\n   \n   \n   #if defined( ARM_WCHAR_CHECK )\n ! # ifndef \t __wchar_t /* we don't have wchar_t yet, ... */\n ! #  define  __wchar_t  short\n   # endif /* __wchar_t */\n   #endif  /* ARM_WCHAR_CHECK */\n---- 1,7 ----\n+  \n+  \n+  #if defined( NEWS_OS_RECURSION_CHECK )\n+  #include <stdlib.h>\n+  #endif  /* NEWS_OS_RECURSION_CHECK */\n+--- 1,14 ----\n   \n   \n   #if defined( ARM_WCHAR_CHECK )\n ! # ifndef \t _GCC_WCHAR_T /* we don't have wchar_t yet, ... */\n ! #  define  _GCC_WCHAR_T  short\n   # endif /* __wchar_t */\n   #endif  /* ARM_WCHAR_CHECK */\n+  \n+  \n+  #if defined( NEWS_OS_RECURSION_CHECK )\n++ #ifdef BOGUS_RECURSION\n+  #include <stdlib.h>\n++ #endif\n+  #endif  /* NEWS_OS_RECURSION_CHECK */\n *** inc/sundev/vuid_event.h\n --- res/sundev/vuid_event.h\n ***************\n@@ -729,7 +805,7 @@\n *** inc/testing.h\n --- res/testing.h\n ***************\n-*** 1,35 ****\n+*** 1,36 ****\n   \n   \n   #if defined( CTRL_QUOTES_DEF_CHECK )\n@@ -763,7 +839,7 @@\n   #define NULL\t((void*)0)\n   \n   #endif  /* UNDEFINE_NULL_CHECK */\n---- 1,39 ----\n+--- 1,40 ----\n   \n   \n   #if defined( CTRL_QUOTES_DEF_CHECK )"}, {"sha": "f5918407897d9d29e3ee1e10b1de5fdb136d50c2", "filename": "gcc/fixinc/fixincl.x", "status": "modified", "additions": 69, "deletions": 50, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8228686d606a5611cd5b3a41465f29e535837b2/gcc%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8228686d606a5611cd5b3a41465f29e535837b2/gcc%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.x?ref=a8228686d606a5611cd5b3a41465f29e535837b2", "patch": "@@ -983,9 +983,10 @@ tTestDesc aArm_WcharTests[] = {\n /*\n  *  Fix Command Arguments for Arm_Wchar\n  */\n-const char* apzArm_WcharPatch[] = { \"sed\",\n-    \"-e\", \"s/\\\\(#[ \\t]*ifndef[ \\t]*\\\\)__wchar_t/\\\\1_GCC_WCHAR_T/\",\n-    \"-e\", \"s/\\\\(#[ \\t]*define[ \\t]*\\\\)__wchar_t/\\\\1_GCC_WCHAR_T/\",\n+const char* apzArm_WcharPatch[] = {\n+    \"format\",\n+    \"%1_GCC_WCHAR_T\",\n+    \"(#[ \\t]*(ifndef|define)[ \\t]+)__wchar_t\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1048,8 +1049,15 @@ tSCC zAvoid_Bool_DefineList[] =\n tSCC zAvoid_Bool_DefineSelect0[] =\n        \"#[ \\t]*define[ \\t]+bool[ \\t]\";\n \n-#define    AVOID_BOOL_DEFINE_TEST_CT  1\n+/*\n+ *  content bypass pattern - skip fix if pattern found\n+ */\n+tSCC zAvoid_Bool_DefineBypass0[] =\n+       \"we must use the C\\\\+\\\\+ compiler's type\";\n+\n+#define    AVOID_BOOL_DEFINE_TEST_CT  2\n tTestDesc aAvoid_Bool_DefineTests[] = {\n+  { TT_NEGREP,   zAvoid_Bool_DefineBypass0, (regex_t*)NULL },\n   { TT_EGREP,    zAvoid_Bool_DefineSelect0, (regex_t*)NULL }, };\n \n /*\n@@ -1087,8 +1095,15 @@ tSCC zAvoid_Bool_TypeList[] =\n tSCC zAvoid_Bool_TypeSelect0[] =\n        \"^[ \\t]*typedef[ \\t].*[ \\t]bool[ \\t]*;\";\n \n-#define    AVOID_BOOL_TYPE_TEST_CT  1\n+/*\n+ *  content bypass pattern - skip fix if pattern found\n+ */\n+tSCC zAvoid_Bool_TypeBypass0[] =\n+       \"we must use the C\\\\+\\\\+ compiler's type\";\n+\n+#define    AVOID_BOOL_TYPE_TEST_CT  2\n tTestDesc aAvoid_Bool_TypeTests[] = {\n+  { TT_NEGREP,   zAvoid_Bool_TypeBypass0, (regex_t*)NULL },\n   { TT_EGREP,    zAvoid_Bool_TypeSelect0, (regex_t*)NULL }, };\n \n /*\n@@ -1925,8 +1940,9 @@ tTestDesc aHpux_SystimeTests[] = {\n /*\n  *  Fix Command Arguments for Hpux_Systime\n  */\n-const char* apzHpux_SystimePatch[] = { \"sed\",\n-    \"-e\", \"s/^extern struct sigevent;/struct sigevent;/\",\n+const char* apzHpux_SystimePatch[] = {\n+    \"format\",\n+    \"struct sigevent;\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2135,9 +2151,9 @@ tTestDesc aLimits_IfndefsTests[] = {\n const char* apzLimits_IfndefsPatch[] = {\n     \"format\",\n     \"#ifndef %1\\n\\\n-%0#endif\\n\",\n-    \"^[ \\t]*#[ \\t]*define[ \\t]+((FLT|DBL)_(MIN|MAX|DIG))[ \\t][^\\n\\\n-]*\\n\",\n+%0\\n\\\n+#endif\",\n+    \"^[ \\t]*#[ \\t]*define[ \\t]+((FLT|DBL)_(MIN|MAX|DIG))[ \\t].*\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2360,7 +2376,7 @@ tSCC zMachine_Ansi_H_Va_ListList[] =\n  *  content selection pattern - do fix if pattern found\n  */\n tSCC zMachine_Ansi_H_Va_ListSelect0[] =\n-       \"_BSD_VA_LIST_\";\n+       \"define[ \\t]+_BSD_VA_LIST_[ \\t]\";\n \n /*\n  *  content bypass pattern - skip fix if pattern found\n@@ -2376,8 +2392,10 @@ tTestDesc aMachine_Ansi_H_Va_ListTests[] = {\n /*\n  *  Fix Command Arguments for Machine_Ansi_H_Va_List\n  */\n-const char* apzMachine_Ansi_H_Va_ListPatch[] = { \"sed\",\n-    \"-e\", \"s/\\\\(_BSD_VA_LIST_[ \\t][ \\t]*\\\\).*$/\\\\1__builtin_va_list/\",\n+const char* apzMachine_Ansi_H_Va_ListPatch[] = {\n+    \"format\",\n+    \"%1__builtin_va_list\",\n+    \"(define[ \\t]+_BSD_VA_LIST_[ \\t]+).*\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2520,7 +2538,7 @@ tSCC zMath_Huge_Val_IfndefName[] =\n  *  File name selection pattern\n  */\n tSCC zMath_Huge_Val_IfndefList[] =\n-  \"|math/math.h|\";\n+  \"|math.h|math/math.h|\";\n /*\n  *  Machine/OS name selection pattern\n  */\n@@ -2530,7 +2548,7 @@ tSCC zMath_Huge_Val_IfndefList[] =\n  *  content selection pattern - do fix if pattern found\n  */\n tSCC zMath_Huge_Val_IfndefSelect0[] =\n-       \"define[ \\t]*HUGE_VAL\";\n+       \"define[ \\t]+HUGE_VAL\";\n \n #define    MATH_HUGE_VAL_IFNDEF_TEST_CT  1\n tTestDesc aMath_Huge_Val_IfndefTests[] = {\n@@ -2539,11 +2557,12 @@ tTestDesc aMath_Huge_Val_IfndefTests[] = {\n /*\n  *  Fix Command Arguments for Math_Huge_Val_Ifndef\n  */\n-const char* apzMath_Huge_Val_IfndefPatch[] = { \"sed\",\n-    \"-e\", \"/define[ \\t]HUGE_VAL[ \\t]/i\\\\\\n\\\n-#ifndef HUGE_VAL\\n\",\n-    \"-e\", \"/define[ \\t]HUGE_VAL[ \\t]/a\\\\\\n\\\n-#endif\\n\",\n+const char* apzMath_Huge_Val_IfndefPatch[] = {\n+    \"format\",\n+    \"#ifndef HUGE_VAL\\n\\\n+%0\\n\\\n+#endif\",\n+    \"^[ \\t]*#[ \\t]*define[ \\t]+HUGE_VAL[ \\t].*\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2697,7 +2716,7 @@ tSCC zNews_Os_RecursionList[] =\n  *  content selection pattern - do fix if pattern found\n  */\n tSCC zNews_Os_RecursionSelect0[] =\n-       \"#include <stdlib.h>\";\n+       \"#include <stdlib\\\\.h>\";\n \n #define    NEWS_OS_RECURSION_TEST_CT  1\n tTestDesc aNews_Os_RecursionTests[] = {\n@@ -2706,11 +2725,11 @@ tTestDesc aNews_Os_RecursionTests[] = {\n /*\n  *  Fix Command Arguments for News_Os_Recursion\n  */\n-const char* apzNews_Os_RecursionPatch[] = { \"sed\",\n-    \"-e\", \"/^#include <stdlib.h>/i\\\\\\n\\\n-#ifdef BOGUS_RECURSION\\n\",\n-    \"-e\", \"/^#include <stdlib.h>/a\\\\\\n\\\n-#endif\\n\",\n+const char* apzNews_Os_RecursionPatch[] = {\n+    \"format\",\n+    \"#ifdef BOGUS_RECURSION\\n\\\n+%0\\n\\\n+#endif\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2735,7 +2754,7 @@ tSCC zNext_Math_PrefixList[] =\n  *  content selection pattern - do fix if pattern found\n  */\n tSCC zNext_Math_PrefixSelect0[] =\n-       \"^extern.*double.*__const__.*\";\n+       \"^extern[ \\t]+double[ \\t]+__const__[ \\t]\";\n \n #define    NEXT_MATH_PREFIX_TEST_CT  1\n tTestDesc aNext_Math_PrefixTests[] = {\n@@ -2744,12 +2763,10 @@ tTestDesc aNext_Math_PrefixTests[] = {\n /*\n  *  Fix Command Arguments for Next_Math_Prefix\n  */\n-const char* apzNext_Math_PrefixPatch[] = { \"sed\",\n-    \"-e\", \"/^extern.*double.*__const__.*sqrt(/s/__const__//\",\n-    \"-e\", \"/^extern.*double.*__const__.*fabs(/s/__const__//\",\n-    \"-e\", \"/^extern.*double.*__const__.*cos(/s/__const__//\",\n-    \"-e\", \"/^extern.*double.*__const__.*hypot(/s/__const__//\",\n-    \"-e\", \"/^extern.*double.*__const__.*sin(/s/__const__//\",\n+const char* apzNext_Math_PrefixPatch[] = {\n+    \"format\",\n+    \"extern double %1(\",\n+    \"^extern[ \\t]+double[ \\t]+__const__[ \\t]+([a-z]+)\\\\(\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2774,7 +2791,7 @@ tSCC zNext_TemplateList[] =\n  *  content selection pattern - do fix if pattern found\n  */\n tSCC zNext_TemplateSelect0[] =\n-       \"template\";\n+       \"[ \\t]template\\\\)\";\n \n #define    NEXT_TEMPLATE_TEST_CT  1\n tTestDesc aNext_TemplateTests[] = {\n@@ -2783,9 +2800,10 @@ tTestDesc aNext_TemplateTests[] = {\n /*\n  *  Fix Command Arguments for Next_Template\n  */\n-const char* apzNext_TemplatePatch[] = { \"sed\",\n-    \"-e\", \"/\\\\(.*template\\\\)/s/template//\",\n-    \"-e\", \"/extern.*volatile.*void.*abort/s/volatile//\",\n+const char* apzNext_TemplatePatch[] = {\n+    \"format\",\n+    \"(%1)\",\n+    \"\\\\(([^)]*)[ \\t]template\\\\)\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2810,7 +2828,7 @@ tSCC zNext_VolitileList[] =\n  *  content selection pattern - do fix if pattern found\n  */\n tSCC zNext_VolitileSelect0[] =\n-       \"volatile\";\n+       \"^extern[ \\t]+volatile[ \\t]+void[ \\t]\";\n \n #define    NEXT_VOLITILE_TEST_CT  1\n tTestDesc aNext_VolitileTests[] = {\n@@ -2819,9 +2837,10 @@ tTestDesc aNext_VolitileTests[] = {\n /*\n  *  Fix Command Arguments for Next_Volitile\n  */\n-const char* apzNext_VolitilePatch[] = { \"sed\",\n-    \"-e\", \"/extern.*volatile.*void.*exit/s/volatile//\",\n-    \"-e\", \"/extern.*volatile.*void.*abort/s/volatile//\",\n+const char* apzNext_VolitilePatch[] = {\n+    \"format\",\n+    \"extern void %1(\",\n+    \"^extern[ \\t]+volatile[ \\t]+void[ \\t]+(exit|abort)\\\\(\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -4831,7 +4850,7 @@ extern char *\\tsprintf();\\\\\\n\\\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          113\n+#define REGEX_COUNT          115\n #define MACH_LIST_SIZE_LIMIT 279\n #define FIX_COUNT            121\n \n@@ -4933,7 +4952,7 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n \n   {  zArm_WcharName,    zArm_WcharList,\n      apzArm_WcharMachs,\n-     ARM_WCHAR_TEST_CT, FD_MACH_ONLY,\n+     ARM_WCHAR_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aArm_WcharTests,   apzArm_WcharPatch },\n \n   {  zAux_AsmName,    zAux_AsmList,\n@@ -5058,7 +5077,7 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n \n   {  zHpux_SystimeName,    zHpux_SystimeList,\n      apzHpux_SystimeMachs,\n-     HPUX_SYSTIME_TEST_CT, FD_MACH_ONLY,\n+     HPUX_SYSTIME_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aHpux_SystimeTests,   apzHpux_SystimePatch },\n \n   {  zIp_Missing_SemiName,    zIp_Missing_SemiList,\n@@ -5118,7 +5137,7 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n \n   {  zMachine_Ansi_H_Va_ListName,    zMachine_Ansi_H_Va_ListList,\n      apzMachine_Ansi_H_Va_ListMachs,\n-     MACHINE_ANSI_H_VA_LIST_TEST_CT, FD_MACH_ONLY,\n+     MACHINE_ANSI_H_VA_LIST_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aMachine_Ansi_H_Va_ListTests,   apzMachine_Ansi_H_Va_ListPatch },\n \n   {  zMachine_NameName,    zMachine_NameList,\n@@ -5138,7 +5157,7 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n \n   {  zMath_Huge_Val_IfndefName,    zMath_Huge_Val_IfndefList,\n      apzMath_Huge_Val_IfndefMachs,\n-     MATH_HUGE_VAL_IFNDEF_TEST_CT, FD_MACH_ONLY,\n+     MATH_HUGE_VAL_IFNDEF_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aMath_Huge_Val_IfndefTests,   apzMath_Huge_Val_IfndefPatch },\n \n   {  zNested_MotorolaName,    zNested_MotorolaList,\n@@ -5163,22 +5182,22 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n \n   {  zNews_Os_RecursionName,    zNews_Os_RecursionList,\n      apzNews_Os_RecursionMachs,\n-     NEWS_OS_RECURSION_TEST_CT, FD_MACH_ONLY,\n+     NEWS_OS_RECURSION_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aNews_Os_RecursionTests,   apzNews_Os_RecursionPatch },\n \n   {  zNext_Math_PrefixName,    zNext_Math_PrefixList,\n      apzNext_Math_PrefixMachs,\n-     NEXT_MATH_PREFIX_TEST_CT, FD_MACH_ONLY,\n+     NEXT_MATH_PREFIX_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aNext_Math_PrefixTests,   apzNext_Math_PrefixPatch },\n \n   {  zNext_TemplateName,    zNext_TemplateList,\n      apzNext_TemplateMachs,\n-     NEXT_TEMPLATE_TEST_CT, FD_MACH_ONLY,\n+     NEXT_TEMPLATE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aNext_TemplateTests,   apzNext_TemplatePatch },\n \n   {  zNext_VolitileName,    zNext_VolitileList,\n      apzNext_VolitileMachs,\n-     NEXT_VOLITILE_TEST_CT, FD_MACH_ONLY,\n+     NEXT_VOLITILE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aNext_VolitileTests,   apzNext_VolitilePatch },\n \n   {  zNext_Wait_UnionName,    zNext_Wait_UnionList,"}, {"sha": "2d90f5cfd1aeef7aa2fc19a99bc4f0d0427b0410", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 70, "deletions": 39, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8228686d606a5611cd5b3a41465f29e535837b2/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8228686d606a5611cd5b3a41465f29e535837b2/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=a8228686d606a5611cd5b3a41465f29e535837b2", "patch": "@@ -611,8 +611,11 @@ fix = {\n     hackname = arm_wchar;\n     files  = stdlib.h;\n     select = \"#[ \\t]*define[ \\t]*__wchar_t\";\n-    sed    = \"s/\\\\(#[ \\t]*ifndef[ \\t]*\\\\)__wchar_t/\\\\1_GCC_WCHAR_T/\";\n-    sed    = \"s/\\\\(#[ \\t]*define[ \\t]*\\\\)__wchar_t/\\\\1_GCC_WCHAR_T/\";\n+\n+    c_fix     = format;\n+    c_fix_arg = \"%1_GCC_WCHAR_T\";\n+    c_fix_arg = \"(#[ \\t]*(ifndef|define)[ \\t]+)__wchar_t\";\n+\n     test_text =\n     \"# ifndef \\t __wchar_t /* we don't have wchar_t yet, ... */\\n\"\n     \"#  define  __wchar_t  short\\n\"\n@@ -651,6 +654,7 @@ fix = {\n     files     = tinfo.h;\n \n     select    = \"#[ \\t]*define[ \\t]+bool[ \\t]\";\n+    bypass    = \"we must use the C\\\\+\\\\+ compiler's type\";\n \n     c_fix     = format;\n     c_fix_arg = \"#ifndef __cplusplus\\n%0\\n#endif\";\n@@ -667,6 +671,7 @@ fix = {\n     files    = tinfo.h;\n \n     select    = \"^[ \\t]*typedef[ \\t].*[ \\t]bool[ \\t]*;\";\n+    bypass    = \"we must use the C\\\\+\\\\+ compiler's type\";\n \n     c_fix     = format;\n     c_fix_arg = \"#ifndef __cplusplus\\n%0\\n#endif\";\n@@ -684,6 +689,12 @@ fix = {\n  *  properly in most cases, they don't allow you to take a pointer to the\n  *  \"something\" being modified.  To get around this limitation, change these\n  *  statements to be of the form '#define something _FOOsomething'.\n+ *\n+ *  sed ain't egrep, lesson 2463:  sed can use self-referential\n+ *  regular expressions.  In the substitute expression below,\n+ *  \"\\\\1\" and \"\\\\2\" refer to subexpressions found earlier in the\n+ *  same match.  So, we continue to use sed.  \"extern_prefix\" will\n+ *  be a rare match anyway...\n  */\n fix = {\n     hackname = bad_lval;\n@@ -1096,7 +1107,10 @@ fix = {\n     hackname = hpux_systime;\n     files    = sys/time.h;\n     select   = \"^extern struct sigevent;\";\n-    sed      = \"s/^extern struct sigevent;/struct sigevent;/\";\n+\n+    c_fix     = format;\n+    c_fix_arg = \"struct sigevent;\";\n+\n     test_text = 'extern struct sigevent;';\n };\n \n@@ -1210,10 +1224,9 @@ fix = {\n     bypass = \"ifndef[ \\t]+FLT_MIN\";\n \n     c_fix     = format;\n-    c_fix_arg = \"#ifndef %1\\n%0#endif\\n\";\n+    c_fix_arg = \"#ifndef %1\\n%0\\n#endif\";\n     c_fix_arg = \"^[ \\t]*#[ \\t]*define[ \\t]+\"\n-                \"((FLT|DBL)_(MIN|MAX|DIG))\"\n-                \"[ \\t][^\\n]*\\n\";\n+                \"((FLT|DBL)_(MIN|MAX|DIG))[ \\t].*\";\n     test_text = \" #\\tdefine\\tDBL_DIG \\t 0  /* somthin' */\";\n };\n \n@@ -1312,10 +1325,14 @@ fix = {\n fix = {\n     hackname = machine_ansi_h_va_list;\n     files    = machine/ansi.h;\n-    select   = '_BSD_VA_LIST_';\n+    select   = \"define[ \\t]+_BSD_VA_LIST_[ \\t]\";\n     bypass   = '__builtin_va_list';\n \n-    sed\t     = \"s/\\\\(_BSD_VA_LIST_[ \\t][ \\t]*\\\\).*$/\\\\1__builtin_va_list/\";\n+    c_fix     = format;\n+    c_fix_arg = \"%1__builtin_va_list\";\n+    c_fix_arg = \"(define[ \\t]+_BSD_VA_LIST_[ \\t]+).*\";\n+\n+    test_text = \" # define _BSD_VA_LIST_\\tchar**\";\n };\n \n \n@@ -1326,11 +1343,10 @@ fix = {\n     hackname  = machine_name;\n     c_test    = machine_name;\n     c_fix     = machine_name;\n-    test_text =\n-    \"#if /* MACH_DIFF: */ \\\\\\n\"\n-    \"\\t   defined( i386 ) \\\\\\n\"\n-    \"\\t|| defined( sparc ) /*\\n\"\n-    \"no uniform test, so be careful  :-) */\";\n+    test_text = \"/* MACH_DIFF: */\\n\"\n+    \"#if defined( i386 )\"\n+    \" || defined( sparc )\"\n+    \"\\n/* no uniform test, so be careful  :-) */\";\n };\n \n \n@@ -1347,7 +1363,7 @@ fix = {\n     hackname  = math_exception;\n     files     = math.h;\n     select    = \"struct exception\";\n-    bypass    = \"We have a problem when using C\\\\+\\\\+\";\n+    bypass    = 'We have a problem when using C\\+\\+';\n     c_fix     = wrap;\n \n     c_fix_arg = \"#ifdef __cplusplus\\n\"\n@@ -1361,6 +1377,13 @@ fix = {\n     test_text = \"typedef struct exception t_math_exception;\";\n };\n \n+\n+/*\n+ *  This looks pretty broken to me.  ``dbl_max_def'' will contain\n+ *  \"define DBL_MAX \" at the start, when what we really want is just\n+ *  the value portion.  Can't figure out how to write a test case\n+ *  for this either  :-(\n+ */\n fix = {\n     hackname = math_huge_val_from_dbl_max;\n     files    = math.h;\n@@ -1387,16 +1410,21 @@ fix = {\n     \"\\tfi\";\n };\n \n+\n /*\n  * In any case, put #ifndef .. #endif around #define HUGE_VAL in math.h.\n  */\n fix = {\n     hackname = math_huge_val_ifndef;\n+    files    = math.h;\n     files    = math/math.h;\n-    select   = \"define[ \\t]*HUGE_VAL\";\n+    select   = \"define[ \\t]+HUGE_VAL\";\n \n-    sed      = \"/define[ \\t]HUGE_VAL[ \\t]/i\\\\\\n#ifndef HUGE_VAL\\n\";\n-    sed      = \"/define[ \\t]HUGE_VAL[ \\t]/a\\\\\\n#endif\\n\";\n+    c_fix     = format;\n+    c_fix_arg = \"#ifndef HUGE_VAL\\n%0\\n#endif\";\n+    c_fix_arg = \"^[ \\t]*#[ \\t]*define[ \\t]+HUGE_VAL[ \\t].*\";\n+\n+    test_text = \"# define\\tHUGE_VAL 3.4e+40\";\n };\n \n \n@@ -1457,11 +1485,11 @@ fix = {\n fix = {\n     hackname = news_os_recursion;\n     files    = stdlib.h;\n-    select   = \"#include <stdlib.h>\";\n-    sed      = \"/^#include <stdlib.h>/i\\\\\\n\"\n-                    \"#ifdef BOGUS_RECURSION\\n\";\n-    sed      = \"/^#include <stdlib.h>/a\\\\\\n\"\n-                    \"#endif\\n\";\n+    select   = '#include <stdlib\\.h>';\n+\n+    c_fix     = format;\n+    c_fix_arg = \"#ifdef BOGUS_RECURSION\\n%0\\n#endif\";\n+    test_text = \"#include <stdlib.h>\";\n };\n \n \n@@ -1470,32 +1498,32 @@ fix = {\n  *  These conflict with the built-in functions.\n  */\n fix = {\n-    hackname = next_math_prefix;\n-    files    = ansi/math.h;\n-    select   = \"^extern.*double.*__const__.*\";\n+    hackname  = next_math_prefix;\n+    files     = ansi/math.h;\n+    select    = \"^extern[ \\t]+double[ \\t]+__const__[ \\t]\";\n+\n+    c_fix     = format;\n+    c_fix_arg = \"extern double %1(\";\n+    c_fix_arg = \"^extern[ \\t]+double[ \\t]+__const__[ \\t]+([a-z]+)\\\\(\";\n \n-    sed = \"/^extern.*double.*__const__.*sqrt(/s/__const__//\";\n-    sed = \"/^extern.*double.*__const__.*fabs(/s/__const__//\";\n-    sed = \"/^extern.*double.*__const__.*cos(/s/__const__//\";\n-    sed = \"/^extern.*double.*__const__.*hypot(/s/__const__//\";\n-    sed = \"/^extern.*double.*__const__.*sin(/s/__const__//\";\n+    test_text = \"extern\\tdouble\\t__const__\\tmumble();\";\n };\n \n \n /*\n  *  NeXT 3.2 uses the word \"template\" as a parameter for some\n  *  functions. GCC reports an invalid use of a reserved key word\n- *  with the built-in functions. NeXT 3.2 includes the keyword\n- *  volatile in the prototype for abort(). This conflicts with\n- *  the built-in definition.\n+ *  with the built-in functions.\n  */\n fix = {\n     hackname = next_template;\n     files    = bsd/libc.h;\n-    select   = template;\n+    select   = \"[ \\t]template\\\\)\";\n \n-    sed = '/\\(.*template\\)/s/template//';\n-    sed = \"/extern.*volatile.*void.*abort/s/volatile//\";\n+    c_fix     = format;\n+    c_fix_arg = \"(%1)\";\n+    c_fix_arg = \"\\\\(([^)]*)[ \\t]template\\\\)\";\n+    test_text = \"extern mumble( char * template); /* fix */\";\n };\n \n \n@@ -1506,10 +1534,13 @@ fix = {\n fix = {\n     hackname = next_volitile;\n     files    = ansi/stdlib.h;\n-    select   = volatile;\n+    select   = \"^extern[ \\t]+volatile[ \\t]+void[ \\t]\";\n+\n+    c_fix     = format;\n+    c_fix_arg = \"extern void %1(\";\n+    c_fix_arg = \"^extern[ \\t]+volatile[ \\t]+void[ \\t]+(exit|abort)\\\\(\";\n \n-    sed    = \"/extern.*volatile.*void.*exit/s/volatile//\";\n-    sed    = \"/extern.*volatile.*void.*abort/s/volatile//\";\n+    test_text = \"extern\\tvolatile\\tvoid\\tabort();\";\n };\n \n "}]}