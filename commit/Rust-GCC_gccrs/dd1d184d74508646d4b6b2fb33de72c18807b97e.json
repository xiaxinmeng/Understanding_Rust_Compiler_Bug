{"sha": "dd1d184d74508646d4b6b2fb33de72c18807b97e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQxZDE4NGQ3NDUwODY0NmQ0YjZiMmZiMzNkZTcyYzE4ODA3Yjk3ZQ==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2005-02-01T21:31:20Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2005-02-01T21:31:20Z"}, "message": "vect-77.c: Replace xfail selector with expression.\n\n\t* gcc.dg/vect/vect-77.c: Replace xfail selector with expression.\n\t* gcc.dg/vect/vect-78.c: Ditto.\n\t* gcc.dg/vect/vect.exp (check_effective_target_lp64_or_vect_no_align):\n\tRemove.\n\nFrom-SVN: r94564", "tree": {"sha": "007443a97878f3ab1fa12fac724f93b83758a426", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/007443a97878f3ab1fa12fac724f93b83758a426"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd1d184d74508646d4b6b2fb33de72c18807b97e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd1d184d74508646d4b6b2fb33de72c18807b97e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd1d184d74508646d4b6b2fb33de72c18807b97e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd1d184d74508646d4b6b2fb33de72c18807b97e/comments", "author": null, "committer": null, "parents": [{"sha": "694c84cd03028e6d5666542c5f9d2b6dfdedd882", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/694c84cd03028e6d5666542c5f9d2b6dfdedd882", "html_url": "https://github.com/Rust-GCC/gccrs/commit/694c84cd03028e6d5666542c5f9d2b6dfdedd882"}], "stats": {"total": 26, "additions": 9, "deletions": 17}, "files": [{"sha": "af57ef3c2ec4eb21cafeeda0bc9d3cd0a073db2b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1d184d74508646d4b6b2fb33de72c18807b97e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1d184d74508646d4b6b2fb33de72c18807b97e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dd1d184d74508646d4b6b2fb33de72c18807b97e", "patch": "@@ -1,5 +1,10 @@\n 2005-02-01  Janis Johnson  <janis187@us.ibm.com>\n \n+\t* gcc.dg/vect/vect-77.c: Replace xfail selector with expression.\n+\t* gcc.dg/vect/vect-78.c: Ditto.\n+\t* gcc.dg/vect/vect.exp (check_effective_target_lp64_or_vect_no_align):\n+\tRemove.\n+\n \t* g++.dg/conversion/simd1.C: Expect warning.\n \t* g++.dg/ext/attribute-test-1.C: Ditto.\n \t* g++.dg/ext/attribute-test-2.C: Ditto."}, {"sha": "43a6999a148c64bc96a76a88adb556c1d8132af2", "filename": "gcc/testsuite/gcc.dg/vect/vect-77.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1d184d74508646d4b6b2fb33de72c18807b97e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-77.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1d184d74508646d4b6b2fb33de72c18807b97e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-77.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-77.c?ref=dd1d184d74508646d4b6b2fb33de72c18807b97e", "patch": "@@ -39,6 +39,6 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail lp64_or_vect_no_align } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail lp64_or_vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail { lp64 || vect_no_align } } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail { lp64 || vect_no_align } } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */"}, {"sha": "d44c4979205fda204a29b85faea6661df6d586f4", "filename": "gcc/testsuite/gcc.dg/vect/vect-78.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1d184d74508646d4b6b2fb33de72c18807b97e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-78.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1d184d74508646d4b6b2fb33de72c18807b97e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-78.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-78.c?ref=dd1d184d74508646d4b6b2fb33de72c18807b97e", "patch": "@@ -40,6 +40,6 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail lp64_or_vect_no_align } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail lp64_or_vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail { lp64 || vect_no_align } } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail { lp64 || vect_no_align } } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */"}, {"sha": "55525f41fab6227cd5f6ebe70d86ae1bd1f9c7d1", "filename": "gcc/testsuite/gcc.dg/vect/vect.exp", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1d184d74508646d4b6b2fb33de72c18807b97e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1d184d74508646d4b6b2fb33de72c18807b97e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp?ref=dd1d184d74508646d4b6b2fb33de72c18807b97e", "patch": "@@ -71,19 +71,6 @@ if [istarget \"powerpc*-*-*\"] {\n     return\n }\n \n-# Return 1 if the effective target is LP64 or if the effective target\n-# does not support a vector alignment mechanism.\n-\n-proc check_effective_target_lp64_or_vect_no_align { } {\n-    if { [is-effective-target lp64]\n-\t  || [is-effective-target vect_no_align] } {\n-\tset answer 1\n-    } else {\n-\tset answer 0\n-    }\n-    return $answer\n-}\n-\n # Initialize `dg'.\n dg-init\n "}]}