{"sha": "1a5f40e1b81b0e5306d41773faf5f77197fbfe04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE1ZjQwZTFiODFiMGU1MzA2ZDQxNzczZmFmNWY3NzE5N2ZiZmUwNA==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2008-04-08T06:57:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-04-08T06:57:10Z"}, "message": "vms_conv.adb (Output_Version): Print \"GNAAMP\" instead of \"GNAT when AAMP_On_Target is set.\n\n2008-04-08  Vincent Celier  <celier@adacore.com>\n\t    Robert Dewar  <dewar@adacore.com>\n\n\t* vms_conv.adb (Output_Version): Print \"GNAAMP\" instead of \"GNAT when\n\tAAMP_On_Target is set.\n\n\t* vms_data.ads: Add NOxxx to style check switch list\n\tAdd entry COMPONENTS for -gnatVe\n\tAdd VMS qualifiers for -eL (/FOLLOW_LINKS_FOR_FILES) and --subdirs=\n\t(/SUBDIRS=).\n\t(GCC_Switches): Add /ALL_BACK_END_WARNINGS.\n\tAdd qualifiers for gnatmetric coupling options\n\tAdd note that -gnata enables all checks\n\tAdd entries [NO]PARAMETER_ORDER for -gnatw.p[P]\n\tFix inconsistency for VMS qualifier for the gnatpp '-rnb' option\n\tNew warning flag -gnatw.e\n\n\t* usage.adb: Add entries for -gnaty+ -gnaty- -gnatyy\n\tAdd entry for -gnatyN (forgotten before)\n\tLine for new warning switch -gnatw.p\n\tNew warning flag -gnatw.e\n\n\t* gnat_ugn.texi: Add documentation fpr project file switch -aP\n\tDocument -gnaty - + y\n\tReplace occurences of \"package specification\" with \"package spec\"\n\tDefine preprocessing symbols in documentation of gnatprep\n\tClarify reason for distinguishing overflow checking\n\tAdd documentation for project-aware tool switches -eL and --subdirs=\n\tComplete list of configuration pragmas\n\tSpecify that, even when gnatmake switch -x is used, mains on the command\n\tline need to be sources of project files.\n\tEditing of gnatcheck/gnatmetric doc.\n\tAdd documentation for -gnatw.p/-gnatw.P\n\tAdd missing documentation for -fno-inline-functions.\n\tAdd documentation for -gnatw.e\n\n\t* gnat_rm.texi: Add documentation for No_Default_Initialization\n\tReplace occurences of \"package specification\" with \"package spec\"\n\tDocument use of * in Warnings Off string\n\tUpdate documentation of alignment/component clauses.\n\tAdd documentation for Invalid_Value\n\tDocument new consistency rule for Optimize_Alignment\n\tAdd documentation for Precondition and Postcondition pragmas\n\tAdd documentation for Check and Check_Policy pragmas\n\tDocument new Enum_Val attribute\n\tRemove requirement for static string in pragma Assert\n\tAdd documentation on GNAT.Time_Stamp\n\n\t* ug_words: add entry for -gnatVe\n\tAdd entries for -gnat.p[P] /WARNINGS=[NO]PARAMETER_ORDER\n\tAdd entry for -gnatw.e\n\n\t* debug.adb: Add missing documentation for d.a flag\n\tDocument new -gnatd.a switch.\n\tAdd documentation for new gnatmake debug switch -df\n\nFrom-SVN: r134060", "tree": {"sha": "e5090f510857d9b1a09deb5b01c340087bebfb34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5090f510857d9b1a09deb5b01c340087bebfb34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a5f40e1b81b0e5306d41773faf5f77197fbfe04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a5f40e1b81b0e5306d41773faf5f77197fbfe04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a5f40e1b81b0e5306d41773faf5f77197fbfe04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a5f40e1b81b0e5306d41773faf5f77197fbfe04/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "daa5998b841124471f0a514209f1468f28c2e448", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daa5998b841124471f0a514209f1468f28c2e448", "html_url": "https://github.com/Rust-GCC/gccrs/commit/daa5998b841124471f0a514209f1468f28c2e448"}], "stats": {"total": 1622, "additions": 1369, "deletions": 253}, "files": [{"sha": "94dc2198b782a7062418c68a3e1d67d2f47d3bf6", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a5f40e1b81b0e5306d41773faf5f77197fbfe04/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a5f40e1b81b0e5306d41773faf5f77197fbfe04/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=1a5f40e1b81b0e5306d41773faf5f77197fbfe04", "patch": "@@ -93,7 +93,7 @@ package body Debug is\n    --  dY   Enable configurable run-time mode\n    --  dZ   Generate listing showing the contents of the dispatch tables\n \n-   --  d.a\n+   --  d.a  Enable alignment promotion for non-scalar stand-alone objects\n    --  d.b\n    --  d.c\n    --  d.d\n@@ -500,6 +500,12 @@ package body Debug is\n    --         - In case of abstract subprograms the text \"is abstract\" is\n    --           added at the end of the line.\n \n+   --  d.a  Enable alignment promotion for non-VMS targets. On VMS, by default\n+   --       (in Optimize_Alignment (Off) mode), the alignment of stand-alone\n+   --       objects is increased in some cases to enable the generation of\n+   --       better code. Use of this debug flag enables this transformation\n+   --       on non-VMS targets.\n+\n    --  d.f  Suppress folding of static expressions. This of course results\n    --       in seriously non-conforming behavior, but is useful sometimes\n    --       when tracking down handling of complex expressions.\n@@ -636,6 +642,8 @@ package body Debug is\n    -- Documentation for gnatmake Debug Flags --\n    --------------------------------------------\n \n+   --  df  Only output file names, not path names, in log\n+\n    --  dn  Do not delete temporary files created by gnatmake at the end\n    --      of execution, such as temporary config pragma files, mapping\n    --      files or project path files."}, {"sha": "8e3247d274da7db3c010312b04d60c4cdc24a0ea", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 388, "deletions": 30, "changes": 418, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a5f40e1b81b0e5306d41773faf5f77197fbfe04/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a5f40e1b81b0e5306d41773faf5f77197fbfe04/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=1a5f40e1b81b0e5306d41773faf5f77197fbfe04", "patch": "@@ -8,7 +8,7 @@\n @c                                                                            o\n @c                              G N A T _ RM                                  o\n @c                                                                            o\n-@c              Copyright (C) 1995-2007, Free Software Foundation             o\n+@c              Copyright (C) 1995-2008, Free Software Foundation             o\n @c                                                                            o\n @c                                                                            o\n @c  GNAT is maintained by Ada Core Technologies Inc (http://www.gnat.com).    o\n@@ -34,7 +34,7 @@\n @end direntry\n \n @copying\n-Copyright @copyright{} 1995-2007, 2008 Free Software Foundation, Inc.\n+Copyright @copyright{} 1995-2008, Free Software Foundation, Inc.\n \n Permission is granted to copy, distribute and/or modify this document\n under the terms of the GNU Free Documentation License, Version 1.2\n@@ -108,7 +108,9 @@ Implementation Defined Pragmas\n * Pragma Assert::\n * Pragma Ast_Entry::\n * Pragma C_Pass_By_Copy::\n+* Pragma Check::\n * Pragma Check_Name::\n+* Pragma Check_Policy::\n * Pragma Comment::\n * Pragma Common_Object::\n * Pragma Compile_Time_Error::\n@@ -174,6 +176,8 @@ Implementation Defined Pragmas\n * Pragma Passive::\n * Pragma Persistent_BSS::\n * Pragma Polling::\n+* Pragma Postcondition::\n+* Pragma Precondition::\n * Pragma Profile (Ravenscar)::\n * Pragma Profile (Restricted)::\n * Pragma Psect_Object::\n@@ -228,12 +232,14 @@ Implementation Defined Attributes\n * Emax::\n * Enabled::\n * Enum_Rep::\n+* Enum_Val::\n * Epsilon::\n * Fixed_Value::\n * Has_Access_Values::\n * Has_Discriminants::\n * Img::\n * Integer_Value::\n+* Invalid_Value::\n * Large::\n * Machine_Size::\n * Mantissa::\n@@ -380,6 +386,7 @@ The GNAT Library\n * GNAT.Table (g-table.ads)::\n * GNAT.Task_Lock (g-tasloc.ads)::\n * GNAT.Threads (g-thread.ads)::\n+* GNAT.Time_Stamp (g-timsta.ads)::\n * GNAT.Traceback (g-traceb.ads)::\n * GNAT.Traceback.Symbolic (g-trasym.ads)::\n * GNAT.UTF_32 (g-utf_32.ads)::\n@@ -702,7 +709,9 @@ consideration, the use of these pragmas should be minimized.\n * Pragma Assert::\n * Pragma Ast_Entry::\n * Pragma C_Pass_By_Copy::\n+* Pragma Check::\n * Pragma Check_Name::\n+* Pragma Check_Policy::\n * Pragma Comment::\n * Pragma Common_Object::\n * Pragma Compile_Time_Error::\n@@ -768,6 +777,8 @@ consideration, the use of these pragmas should be minimized.\n * Pragma Passive::\n * Pragma Persistent_BSS::\n * Pragma Polling::\n+* Pragma Postcondition::\n+* Pragma Precondition::\n * Pragma Profile (Ravenscar)::\n * Pragma Profile (Restricted)::\n * Pragma Psect_Object::\n@@ -933,7 +944,7 @@ Syntax:\n @smallexample @c ada\n pragma Assert (\n   boolean_EXPRESSION\n-  [, static_string_EXPRESSION]);\n+  [, string_EXPRESSION]);\n @end smallexample\n \n @noindent\n@@ -1050,6 +1061,34 @@ You can also pass records by copy by specifying the convention\n @code{Import} and @code{Export} pragmas, which allow specification of\n passing mechanisms on a parameter by parameter basis.\n \n+@node Pragma Check\n+@unnumberedsec Pragma Check\n+@cindex Assertions\n+@cindex Named assertions\n+@findex Check\n+@noindent\n+Syntax:\n+@smallexample @c ada\n+pragma Check (\n+     [Name    =>] Identifier,\n+     [Check   =>] Boolean_EXPRESSION\n+  [, [Message =>] string_EXPRESSION] );\n+@end smallexample\n+\n+@noindent\n+This pragma is similar to the predefined pragma @code{Assert} except that an\n+extra identifier argument is present. In conjunction with pragma\n+@code{Check_Policy}, this can be used to define groups of assertions that can\n+be independently controlled. The identifier @code{Assertion} is special, it\n+refers to the normal set of pragma @code{Assert} statements. The identifiers\n+@code{Precondition} and @code{Postcondition} correspond to the pragmas of these\n+names, so these three names would normally not be used directly in a pragma\n+@code{Check}.\n+\n+Checks introduced by this pragma are normally deactivated by default. They can\n+be activated either by the command line option @option{-gnata}, which turns on\n+all checks, or individually controlled using pragma @code{Check_Policy}.\n+\n @node Pragma Check_Name\n @unnumberedsec Pragma Check_Name\n @cindex Defining check names\n@@ -1065,7 +1104,7 @@ pragma Check_Name (check_name_IDENTIFIER);\n This is a configuration pragma that defines a new implementation\n defined check name (unless IDENTIFIER matches one of the predefined\n check names, in which case the pragma has no effect). Check names\n-are global to a partition, so if two more more configuration pragmas\n+are global to a partition, so if two or more configuration pragmas\n are present in a partition mentioning the same name, only one new\n check name is introduced.\n \n@@ -1079,6 +1118,60 @@ the current unit, or if it appears at the start of any unit that\n is part of the dependency set of the current unit (e.g., units that\n are mentioned in @code{with} clauses).\n \n+@node Pragma Check_Policy\n+@unnumberedsec Pragma Check_Policy\n+@cindex Controlling assertions\n+@cindex Assertions, control\n+@cindex Check pragma control\n+@cindex Named assertions\n+@findex Check\n+@noindent\n+Syntax:\n+@smallexample @c ada\n+pragma Check_Policy ([Name =>] Identifier, POLICY_IDENTIFIER);\n+\n+POLICY_IDENTIFIER ::= On | Off | Check | Ignore\n+@end smallexample\n+\n+@noindent\n+This pragma is similar to the predefined pragma @code{Assertion_Policy},\n+except that it controls sets of named assertions introduced using the\n+@code{Check} pragmas. It can be used as a configuration pragma or (unlike\n+@code{Assertion_Policy}) can be used within a declarative part, in which case\n+it controls the status to the end of the corresponding construct (in a manner\n+identical to pragma @code{Suppress)}.\n+\n+The identifier given as the first argument corresponds to a name used in\n+associated @code{Check} pragmas. For example, if the pragma:\n+\n+@smallexample @c ada\n+pragma Check_Policy (Critical_Error, Off);\n+@end smallexample\n+\n+@noindent\n+is given, then subsequent @code{Check} pragmas whose first argument is also\n+@code{Critical_Error} will be disabled. The special identifier @code{Assertion}\n+controls the behavior of normal @code{Assert} pragmas (thus a pragma\n+@code{Check_Policy} with this identifier is similar to the normal\n+@code{Assertion_Policy} pragma except that it can appear within a\n+declarative part).\n+\n+The special identifiers @code{Precondition} and @code{Postcondition} control\n+the status of preconditions and postconditions. If a @code{Precondition} pragma\n+is encountered, it is ignored if turned off by a @code{Check_Policy} specifying\n+that @code{Precondition} checks are @code{Off} or @code{Ignored}. Similarly use\n+of the name @code{Postcondition} controls whether @code{Postcondition} pragmas\n+are recognized.\n+\n+The check policy is @code{Off} to turn off corresponding checks, and @code{On}\n+to turn on corresponding checks. The default for a set of checks for which no\n+@code{Check_Policy} is given is @code{Off} unless the compiler switch\n+@option{-gnata} is given, which turns on all checks by default.\n+\n+The check policy settings @code{Check} and @code{Ignore} are also recognized\n+as synonyms for @code{On} and @code{Off}. These synonyms are provided for\n+compatibility with the standard @code{Assertion_Policy} pragma.\n+\n @node Pragma Comment\n @unnumberedsec Pragma Comment\n @findex Comment\n@@ -2767,7 +2860,7 @@ a handler.\n Note that certain signals on many operating systems cannot be caught and\n handled by applications.  In such cases, the pragma is ignored.  See the\n operating system documentation, or the value of the array @code{Reserved}\n-declared in the specification of package @code{System.OS_Interface}.\n+declared in the spec of package @code{System.OS_Interface}.\n \n Overriding the default state of signals used by the Ada runtime may interfere\n with an application's runtime behavior in the cases of the synchronous signals,\n@@ -3456,9 +3549,10 @@ As noted above, this is a configuration pragma, and there is a requirement\n that all units in a partition be compiled with a consistent setting of the\n optimization setting. This would normally be achieved by use of a configuration\n pragma file containing the appropriate setting. The exception to this rule is\n-that predefined units in the GNAT library (that is, members of the Ada, System,\n-Interfaces, GNAT hierarchies) ignore the setting of this pragma, and thus the\n-consistency requirement does not apply to them.\n+that units with an explicit configuration pragma in the same file as the source\n+unit are excluded from the consistency check, as are all predefined units. The\n+latter are commpiled by default in pragma Optimize_Alignment (Off) mode if no\n+pragma appears at the start of the file.\n \n @node Pragma Passive\n @unnumberedsec Pragma Passive\n@@ -3555,6 +3649,194 @@ Note that polling can also be enabled by use of the @option{-gnatP} switch.\n @xref{Switches for gcc,,, gnat_ugn, @value{EDITION} User's Guide}, for\n details.\n \n+@node Pragma Postcondition\n+@unnumberedsec Pragma Postcondition\n+@cindex Postconditions\n+@cindex Checks, postconditions\n+@findex Postconditions\n+@noindent\n+Syntax:\n+\n+@smallexample @c ada\n+pragma Postcondition (\n+   [Check   =>] Boolean_Expression\n+ [,[Message =>] String_Expression]);\n+@end smallexample\n+\n+@noindent\n+The @code{Postcondition} pragma allows specification of automatic\n+postcondition checks for subprograms. These checks are similar to\n+assertions, but are automatically inserted just prior to the return\n+statements of the subprogram with which they are associated.\n+Furthermore, the boolean expression which is the condition which\n+must be true may contain references to function'Result in the case\n+of a function to refer to the returned value.\n+\n+@code{Postcondition} pragmas may appear either immediate following the\n+(separate) declaration of a subprogram, or at the start of the\n+declarations of a subprogram body. Only other pragmas may intervene\n+(that is appear between the subprogram declaration and its\n+postconditions, or appear before the postcondition in the\n+declaration sequence in a subprogram body). In the case of a\n+postcondition appearing after a subprogram declaration, the\n+formal arguments of the subprogram are visible, and can be\n+referenced in the postcondition expressions.\n+\n+The postconditions are collected and automatically tested just\n+before any return (implicit or explicit) in the subprogram body.\n+A postcondition is only recognized if postconditions are active\n+at the time the pragma is encountered. The compiler switch @option{gnata}\n+turns on all postconditions by default, and pragma @code{Check_Policy}\n+with an identifier of @code{Postcondition} can also be used to\n+control whether postconditions are active.\n+\n+The general approach is that postconditions are placed in the spec\n+if they represent functional aspects which make sense to the client.\n+For example we might have:\n+\n+@smallexample @c ada\n+   function Direction return Integer;\n+   pragma Postcondition\n+    (Direction'Result = +1\n+       or else\n+     Direction'Result = -1);\n+@end smallexample\n+\n+@noindent\n+which serves to document that the result must be +1 or -1, and\n+will test that this is the case at run time if postcondition\n+checking is active.\n+\n+Postconditions within the subprogram body can be used to\n+check that some internal aspect of the implementation,\n+not visible to the client, is operating as expected.\n+For instance if a square root routine keeps an internal\n+counter of the number of times it is called, then we\n+might have the following postcondition:\n+\n+@smallexample @c ada\n+   Sqrt_Calls : Natural := 0;\n+\n+   function Sqrt (Arg : Float) return Float is\n+     pragma Postcondition\n+       (Sqrt_Calls = Sqrt_Calls'Old + 1);\n+     ...\n+   end Sqrt\n+@end smallexample\n+\n+@noindent\n+As this example, shows, the use of the @code{Old} attribute\n+is often useful in postconditions to refer to the state on\n+entry to the subprogram.\n+\n+Note that postconditions are only checked on normal returns\n+from the subprogram. If an abnormal return results from\n+raising an exception, then the postconditions are not checked.\n+\n+If a postcondition fails, then the exception\n+@code{System.Assertions.Assert_Failure} is raised. If\n+a message argument was supplied, then the given string\n+will be used as the exception message. If no message\n+argument was supplied, then the default message has\n+the form \"Postcondition failed at file:line\". The\n+exception is raised in the context of the subprogram\n+body, so it is posssible to catch postcondition failures\n+within the subprogram body itself.\n+\n+Within a package spec, normal visibility rules\n+in Ada would prevent forward references within a\n+postcondition pragma to functions defined later in\n+the same package. This would introduce undesirable\n+ordering constraints. To avoid this problem, all\n+postcondition pragmas are analyzed at the end of\n+the package spec, allowing forward references.\n+\n+The following example shows that this even allows\n+mutually recursive postconditions as in:\n+\n+@smallexample @c ada\n+package Parity_Functions is\n+   function Odd  (X : Natural) return Boolean;\n+   pragma Postcondition\n+     (Odd'Result =\n+        (x = 1\n+          or else\n+        (x /= 0 and then Even (X - 1))));\n+\n+   function Even (X : Natural) return Boolean;\n+   pragma Postcondition\n+     (Even'Result =\n+        (x = 0\n+          or else\n+        (x /= 1 and then Odd (X - 1))));\n+\n+end Parity_Functions;\n+@end smallexample\n+\n+@noindent\n+There are no restrictions on the complexity or form of\n+conditions used within @code{Postcondition} pragmas.\n+The following example shows that it is even possible\n+to verify performance behavior.\n+\n+@smallexample @c ada\n+package Sort is\n+\n+   Performance : constant Float;\n+   --  Performance constant set by implementation\n+   --  to match target architecture behavior.\n+\n+   procedure Treesort (Arg : String);\n+   --  Sorts characters of argument using N*logN sort\n+   pragma Postcondition\n+     (Float (Clock - Clock'Old) <=\n+        Float (Arg'Length) *\n+        log (Float (Arg'Length)) *\n+        Performance);\n+end Sort;\n+@end smallexample\n+\n+@node Pragma Precondition\n+@unnumberedsec Pragma Precondition\n+@cindex Preconditions\n+@cindex Checks, preconditions\n+@findex Preconditions\n+@noindent\n+Syntax:\n+\n+@smallexample @c ada\n+pragma Precondition (\n+   [Check   =>] Boolean_Expression\n+ [,[Message =>] String_Expression]);\n+@end smallexample\n+\n+@noindent\n+The @code{Precondition} pragma is similar to @code{Postcondition}\n+except that the corresponding checks take place immediately upon\n+entry to the subprogram, and if a precondition fails, the exception\n+is raised in the context of the caller, and the attribute 'Result\n+cannot be used within the precondition expression.\n+\n+Otherwise, the placement and visibility rules are identical to those\n+described for postconditions. The following is an example of use\n+within a package spec:\n+\n+@smallexample @c ada\n+package Math_Functions is\n+   ...\n+   function Sqrt (Arg : Float) return Float;\n+   pragma Precondition (Arg >= 0.0)\n+   ...\n+end Math_Functions;\n+@end smallexample\n+\n+@code{Postcondition} pragmas may appear either immediate following the\n+(separate) declaration of a subprogram, or at the start of the\n+declarations of a subprogram body. Only other pragmas may intervene\n+(that is appear between the subprogram declaration and its\n+postconditions, or appear before the postcondition in the\n+declaration sequence in a subprogram body).\n+\n @node Pragma Profile (Ravenscar)\n @unnumberedsec Pragma Profile (Ravenscar)\n @findex Ravenscar\n@@ -4196,7 +4478,7 @@ The @code{Task_Info} pragma provides system dependent control over\n aspects of tasking implementation, for example, the ability to map\n tasks to specific processors.  For details on the facilities available\n for the version of GNAT that you are using, see the documentation\n-in the specification of package System.Task_Info in the runtime\n+in the spec of package System.Task_Info in the runtime\n library.\n \n @node Pragma Task_Name\n@@ -4524,7 +4806,7 @@ functions.  For example, if this pragma is used, then pressing\n a program can then handle the @code{SIGINT} interrupt as it chooses.\n \n For a full list of the interrupts handled in a specific implementation,\n-see the source code for the specification of @code{Ada.Interrupts.Names} in\n+see the source code for the spec of @code{Ada.Interrupts.Names} in\n file @file{a-intnam.ads}.  This is a target dependent file that contains the\n list of interrupts recognized for a given target.  The documentation in\n this file also specifies what interrupts are affected by the use of\n@@ -4765,12 +5047,10 @@ control individual messages, based on their text. The string argument\n is a pattern that is used to match against the text of individual\n warning messages (not including the initial \"warnings: \" tag).\n \n-The pattern may start with an asterisk, which matches otherwise unmatched\n-characters at the start of the message, and it may also end with an asterisk\n-which matches otherwise unmatched characters at the end of the message. For\n-example, the string \"*alignment*\" could be used to match any warnings about\n-alignment problems. Within the string, the sequence \"*\" can be used to match\n-any sequence of characters enclosed in quotation marks. No other regular\n+The pattern may contain asterisks which match zero or more characters in\n+the message. For example, you can use\n+@code{pragma Warnings (Off, \"*bits of*unused\")} to suppress the warning\n+message @code{warning: 960 bits of \"a\" unused}. No other regular\n expression notations are permitted. All characters other than asterisk in\n these three specific cases are treated as literal characters in the match.\n \n@@ -4904,12 +5184,14 @@ consideration, you should minimize the use of these attributes.\n * Emax::\n * Enabled::\n * Enum_Rep::\n+* Enum_Val::\n * Epsilon::\n * Fixed_Value::\n * Has_Access_Values::\n * Has_Discriminants::\n * Img::\n * Integer_Value::\n+* Invalid_Value::\n * Large::\n * Machine_Size::\n * Mantissa::\n@@ -5128,7 +5410,7 @@ error.\n @noindent\n This attribute can only be applied to a program unit name.  It returns\n the entity for the corresponding elaboration procedure for elaborating\n-the specification of the referenced unit.  This is used in the main\n+the spec of the referenced unit.  This is used in the main\n generated elaboration procedure by the binder and is not normally used\n in any other context.  However, there may be specialized situations in\n which it is useful to be able to call this elaboration procedure from\n@@ -5200,6 +5482,27 @@ integer type, and the argument is a variable, so that the universal\n integer calculation is done at run time, then the call to @code{Enum_Rep}\n may raise @code{Constraint_Error}.\n \n+@node Enum_Val\n+@unnumberedsec Enum_Val\n+@cindex Representation of enums\n+@findex Enum_Val\n+@noindent\n+For every enumeration subtype @var{S}, @code{@var{S}'Enum_Rep} denotes a\n+function with the following spec:\n+\n+@smallexample @c ada\n+function @var{S}'Enum_Rep (Arg : @i{Universal_Integer)\n+  return @var{S}'Base};\n+@end smallexample\n+\n+@noindent\n+The function returns the enumeration value whose representation matches the\n+argument, or raises Constraint_Error if no enumeration literal of the type\n+has the matching value.\n+This will be equal to value of the @code{Val} attribute in the\n+absence of an enumeration representation clause.  This is a static\n+attribute (i.e.@: the result is static if the argument is static).\n+\n @node Epsilon\n @unnumberedsec Epsilon\n @cindex Ada 83 attributes\n@@ -5311,6 +5614,17 @@ that there are full range checks, to ensure that the result is in range.\n This attribute is primarily intended for use in implementation of the\n standard input-output functions for fixed-point values.\n \n+@node Invalid_Value\n+@unnumberedsec Invalid_Value\n+@findex Invalid_Value\n+@noindent\n+For every scalar type S, S'Invalid_Value returns an undefined value of the\n+type. If possible this value is an invalid representation for the type. The\n+value returned is identical to the value used to initialize an otherwise\n+uninitialized value of the type if pragma Initialize_Scalars is used,\n+including the ability to modify the value with the binder -Sxx flag and\n+relevant environment variables at run time.\n+\n @node Large\n @unnumberedsec Large\n @cindex Ada 83 attributes\n@@ -7910,6 +8224,18 @@ is made to queue more than the specified number of tasks on such an entry.\n This restriction ensures at compile time that there is no implicit or\n explicit dependence on the package @code{Ada.Calendar}.\n \n+@item No_Default_Initialization\n+@findex No_Default_Initialization\n+\n+This restriction prohibits any instance of default initialization of variables.\n+The binder implements a consistency rule which prevents any unit compiled\n+without the restriction from with'ing a unit with the restriction (this allows\n+the generation of initialization procedures to be skipped, since you can be\n+sure that no call is ever generated to an initialization procedure in a unit\n+with the restriction active). If used in conjunction with Initialize_Scalars or\n+Normalize_Scalars, the effect is to prohibit all cases of variables declared\n+without a specific initializer (including the case of OUT scalar parameters).\n+\n @item No_Direct_Boolean_Operators\n @findex No_Direct_Boolean_Operators\n This restriction ensures that no logical (and/or/xor) or comparison\n@@ -8485,11 +8811,11 @@ letters.\n @end cartouche\n @noindent\n The string passed to @code{Linker_Options} is presented uninterpreted as\n-an argument to the link command, unless it contains Ascii.NUL characters.\n+an argument to the link command, unless it contains ASCII.NUL characters.\n NUL characters if they appear act as argument separators, so for example\n \n @smallexample @c ada\n-pragma Linker_Options (\"-labc\" & ASCII.Nul & \"-ldef\");\n+pragma Linker_Options (\"-labc\" & ASCII.NUL & \"-ldef\");\n @end smallexample\n \n @noindent\n@@ -9435,9 +9761,10 @@ will be as described for primitive types, e.g.@: a packed array of length\n @item @emph{Records}.\n For the normal non-packed case, the alignment of a record is equal to\n the maximum alignment of any of its components.  For tagged records, this\n-includes the implicit access type used for the tag.  If a pragma @code{Pack} is\n-used and all fields are packable (see separate section on pragma @code{Pack}),\n-then the resulting alignment is 1.\n+includes the implicit access type used for the tag.  If a pragma @code{Pack}\n+is used and all components are packable (see separate section on pragma\n+@code{Pack}), then the resulting alignment is 1, unless the layout of the\n+record makes it profitable to increase it.\n \n A special case is when:\n @itemize @bullet\n@@ -9470,7 +9797,8 @@ strict alignment.\n An alignment clause may specify a larger alignment than the default value\n up to some maximum value dependent on the target (obtainable by using the\n attribute reference @code{Standard'Maximum_Alignment}). It may also specify\n-a smaller alignment than the default value, for example\n+a smaller alignment than the default value for enumeration, integer and\n+fixed point types, as well as for record types, for example\n \n @smallexample @c ada\n   type V is record\n@@ -9993,11 +10321,10 @@ In other words, the value specified must be at least equal to the size\n of this subtype, and must be a multiple of the alignment value.\n \n In addition, component size clauses are allowed which cause the array\n-to be packed, by specifying a smaller value.  The cases in which this\n-is allowed are for component size values in the range 1 through 63.  The value\n-specified must not be smaller than the Size of the subtype.  GNAT will\n-accurately honor all packing requests in this range.  For example, if\n-we have:\n+to be packed, by specifying a smaller value.  A first case is for\n+component size values in the range 1 through 63.  The value specified\n+must not be smaller than the Size of the subtype.  GNAT will accurately\n+honor all packing requests in this range.  For example, if we have:\n \n @smallexample @c ada\n type r is array (1 .. 8) of Natural;\n@@ -10008,6 +10335,23 @@ for r'Component_Size use 31;\n then the resulting array has a length of 31 bytes (248 bits = 8 * 31).\n Of course access to the components of such an array is considerably\n less efficient than if the natural component size of 32 is used.\n+A second case is when the subtype of the component is a record type\n+padded because of its default alignment.  For example, if we have:\n+\n+@smallexample @c ada\n+type r is record\n+  i : Integer;\n+  j : Integer;\n+  b : Boolean;\n+end record;\n+\n+type a is array (1 .. 8) of r;\n+for a'Component_Size use 72;\n+@end smallexample\n+\n+@noindent\n+then the resulting array has a length of 72 bytes, instead of 96 bytes\n+if the alignment of the record (4) was obeyed.\n \n Note that there is no point in giving both a component size clause\n and a pragma Pack for the same array type. if such duplicate\n@@ -10389,6 +10733,8 @@ Any scalar type\n Any type whose size is specified with a size clause\n @item\n Any packed array type with a static size\n+@item\n+Any record type padded because of its default alignment\n @end itemize\n \n @noindent\n@@ -12973,6 +13319,7 @@ of GNAT, and will generate a warning message.\n * GNAT.Table (g-table.ads)::\n * GNAT.Task_Lock (g-tasloc.ads)::\n * GNAT.Threads (g-thread.ads)::\n+* GNAT.Time_Stamp (g-timsta.ads)::\n * GNAT.Traceback (g-traceb.ads)::\n * GNAT.Traceback.Symbolic (g-trasym.ads)::\n * GNAT.UTF_32 (g-utf_32.ads)::\n@@ -14072,6 +14419,17 @@ A very simple facility for locking and unlocking sections of code using a\n single global task lock.  Appropriate for use in situations where contention\n between tasks is very rarely expected.\n \n+@node GNAT.Time_Stamp (g-timsta.ads)\n+@section @code{GNAT.Time_Stamp} (@file{g-timsta.ads})\n+@cindex @code{GNAT.Time_Stamp} (@file{g-timsta.ads})\n+@cindex Time stamp\n+@cindex Current time\n+\n+@noindent\n+Provides a simple function that returns a string YYYY-MM-DD HH:MM:SS.SS that\n+represents the current date and time in ISO 8601 format. This is a very simple\n+routine with minimal code and there are no dependencies on any other unit.\n+\n @node GNAT.Threads (g-thread.ads)\n @section @code{GNAT.Threads} (@file{g-thread.ads})\n @cindex @code{GNAT.Threads} (@file{g-thread.ads})\n@@ -15727,9 +16085,9 @@ Syntax:\n \n @smallexample\n package_declaration ::=\n-  package_specification | package_renaming\n+  package_spec | package_renaming\n \n-package_specification ::=\n+package_spec ::=\n   @b{package} package_identifier @b{is}\n     @{simple_declarative_item@}\n   @b{end} package_identifier ;"}, {"sha": "799d720b535b7db51cb4acf72ceacd06aec2b23c", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 478, "deletions": 133, "changes": 611, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a5f40e1b81b0e5306d41773faf5f77197fbfe04/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a5f40e1b81b0e5306d41773faf5f77197fbfe04/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=1a5f40e1b81b0e5306d41773faf5f77197fbfe04", "patch": "@@ -325,6 +325,7 @@ The GNAT Make Program gnatmake\n \n Improving Performance\n * Performance Considerations::\n+* Text_IO Suggestions::\n * Reducing Size of Ada Executables with gnatelim::\n * Reducing Size of Executables with unused subprogram/data elimination::\n \n@@ -417,6 +418,7 @@ File Name Krunching Using gnatkr\n * Examples of gnatkr Usage::\n \n Preprocessing Using gnatprep\n+* Preprocessing Symbols::\n * Using gnatprep::\n * Switches for gnatprep::\n * Form of Definitions File::\n@@ -3777,6 +3779,16 @@ Any occurrences of pragma @code{Inline} or @code{Inline_Always}\n are ignored, and @option{-gnatn} and @option{-gnatN} have no\n effect if this switch is present.\n \n+@item -fno-inline-functions\n+@cindex @option{-fno-inline-functions} (@command{gcc})\n+Suppresses automatic inlining of small subprograms, which is enabled\n+if @option{-O3} is used.\n+\n+@item -fno-inline-functions-called-once\n+@cindex @option{-fno-inline-functions-called-once} (@command{gcc})\n+Suppresses inlining of subprograms local to the unit and called once\n+from within it, which is enabled if @option{-O1} is used.\n+\n @item -fno-strict-aliasing\n @cindex @option{-fno-strict-aliasing} (@command{gcc})\n Causes the compiler to avoid assumptions regarding non-aliasing\n@@ -3823,6 +3835,9 @@ Allow full Ada 2005 features.\n Assertions enabled. @code{Pragma Assert} and @code{pragma Debug} to be\n activated. Note that these pragmas can also be controlled using the\n configuration pragmas @code{Assertion_Policy} and @code{Debug_Policy}.\n+It also activates pragmas @code{Check}, @code{Precondition}, and\n+@code{Postcondition}. Note that these pragmas can also be controlled\n+using the configuration pragma @code{Check_Policy}.\n \n @item -gnatA\n @cindex @option{-gnatA} (@command{gcc})\n@@ -4240,7 +4255,7 @@ version, not the GNAT version.\n Turn off warnings generated by the back end of the compiler. Use of\n this switch also causes the default for front end warnings to be set\n to suppress (as though @option{-gnatws} had appeared at the start of\n-the options.\n+the options).\n \n @end table\n \n@@ -4874,6 +4889,13 @@ This switch causes warning messages to be treated as errors.\n The warning string still appears, but the warning messages are counted\n as errors, and prevent the generation of an object file.\n \n+@item -gnatw.e\n+@emph{Activate every optional warning}\n+@cindex @option{-gnatw.e} (@command{gcc})\n+@cindex Warnings, activate every optional warning\n+This switch activates all optional warnings, including those which\n+are not activated by @code{-gnatwa}.\n+\n @item -gnatwf\n @emph{Activate warnings on unreferenced formals.}\n @cindex @option{-gnatwf} (@command{gcc})\n@@ -4989,20 +5011,32 @@ This warning can also be turned on using @option{-gnatwa}.\n This switch disables warnings on variables that could be declared constants.\n \n @item -gnatwl\n-@emph{Activate warnings for missing elaboration pragmas.}\n+@emph{Activate warnings for elaboration pragmas.}\n @cindex @option{-gnatwl} (@command{gcc})\n @cindex Elaboration, warnings\n This switch activates warnings on missing\n @code{Elaborate_All} and @code{Elaborate} pragmas.\n See the section in this guide on elaboration checking for details on\n-when such pragmas should be used. Warnings are also generated if you\n+when such pragmas should be used. In dynamic elaboration mode, this switch\n+generations warnings about the need to add elaboration pragmas. Note however,\n+that if you blindly follow these warnings, and add @code{Elaborate_All}\n+warnings wherever they are recommended, you basically end up with the\n+equivalent of the static elaboration model, which may not be what you want for\n+legacy code for which the static model does not work.\n+\n+For the static model, the messages generated are labeled \"info:\" (for\n+information messages). They are not warnings to add elaboration pragmas,\n+merely informational messages showing what implicit elaboration pragmas\n+have been added, for use in analyzing elaboration circularity problems.\n+\n+Warnings are also generated if you\n are using the static mode of elaboration, and a @code{pragma Elaborate}\n is encountered. The default is that such warnings\n are not generated.\n This warning is not automatically turned on by the use of @option{-gnatwa}.\n \n @item -gnatwL\n-@emph{Suppress warnings for missing elaboration pragmas.}\n+@emph{Suppress warnings for elaboration pragmas.}\n @cindex @option{-gnatwL} (@command{gcc})\n This switch suppresses warnings on missing Elaborate and Elaborate_All pragmas.\n See the section in this guide on elaboration checking for details on\n@@ -5093,6 +5127,26 @@ This switch suppresses warnings on ineffective pragma Inlines. If the\n inlining mechanism cannot inline a call, it will simply ignore the\n request silently.\n \n+@item -gnatw.p\n+@emph{Activate warnings on parameter ordering.}\n+@cindex @option{-gnatw.p} (@command{gcc})\n+@cindex Parameter order, warnings\n+This switch activates warnings for cases of suspicious parameter\n+ordering when the list of arguments are all simple identifiers that\n+match the names of the formals, but are in a different order. The\n+warning is suppressed if any use of named parameter notation is used,\n+so this is the appropriate way to suppress a false positive (and\n+serves to emphasize that the \"misordering\" is deliberate). The\n+default is\n+that such warnings are not given.\n+This warning can also be turned on using @option{-gnatwa}.\n+\n+@item -gnatw.P\n+@emph{Suppress warnings on parameter ordering.}\n+@cindex @option{-gnatw.P} (@command{gcc})\n+This switch suppresses warnings on cases of suspicious parameter\n+ordering.\n+\n @item -gnatwq\n @emph{Activate warnings on questionable missing parentheses.}\n @cindex @option{-gnatwq} (@command{gcc})\n@@ -5343,21 +5397,31 @@ This switch suppresses warnings for unchecked conversions\n where the types are known at compile time to have different\n sizes or conventions.\n \n+@item ^-Wunused^WARNINGS=UNUSED^\n+@cindex @option{-Wunused}\n+The warnings controlled by the @option{-gnatw} switch are generated by\n+the front end of the compiler. The @option{GCC} back end can provide\n+additional warnings and they are controlled by the @option{-W} switch.\n+For example, @option{^-Wunused^WARNINGS=UNUSED^} activates back end\n+warnings for entities that are declared but not referenced.\n+\n @item ^-Wuninitialized^WARNINGS=UNINITIALIZED^\n @cindex @option{-Wuninitialized}\n-The warnings controlled by the @option{-gnatw} switch are generated by the\n-front end of the compiler. In some cases, the @option{^gcc^GCC^} back end\n-can provide additional warnings. One such useful warning is provided by\n-@option{^-Wuninitialized^WARNINGS=UNINITIALIZED^}. This must be used in\n-conjunction with turning on optimization mode. This causes the flow\n-analysis circuits of the back end optimizer to output additional\n-warnings about uninitialized variables.\n+Similarly, @option{^-Wuninitialized^WARNINGS=UNINITIALIZED^} activates\n+the back end warning for uninitialized variables. This switch must be\n+used in conjunction with an optimization level greater than zero.\n+\n+@item ^-Wall^/ALL_BACK_END_WARNINGS^\n+@cindex @option{-Wall}\n+This switch enables all the above warnings from the @option{GCC} back end.\n+The code generator detects a number of warning situations that are missed\n+by the @option{GNAT} front end, and this switch can be used to activate them.\n+The use of this switch also sets the default front end warning mode to\n+@option{-gnatwa}, that is, most front end warnings activated as well.\n \n @item ^-w^/NO_BACK_END_WARNINGS^\n @cindex @option{-w}\n-This switch suppresses warnings from the @option{^gcc^GCC^} back end. The\n-code generator detects a number of warning situations that are missed\n-by the @option{GNAT} front end, and this switch can be used to suppress them.\n+Conversely, this switch suppresses warnings from the @option{GCC} back end.\n The use of this switch also sets the default front end warning mode to\n @option{-gnatws}, that is, front end warnings suppressed as well.\n \n@@ -5694,12 +5758,12 @@ checks to be performed. The following checks are defined:\n \n @table @option\n @c !sort!\n-@item 1-9\n+@item 0-9\n @emph{Specify indentation level.}\n If a digit from 1-9 appears\n ^in the string after @option{-gnaty}^as an option for /STYLE_CHECKS^\n then proper indentation is checked, with the digit indicating the\n-indentation level required.\n+indentation level required. A value of zero turns off this style check.\n The general style of required indentation is as specified by\n the examples in the Ada Reference Manual. Full line comments must be\n aligned with the @code{--} starting on a column that is a multiple of\n@@ -5709,30 +5773,26 @@ of a statement.\n \n @item ^a^ATTRIBUTE^\n @emph{Check attribute casing.}\n-If the ^letter a^word ATTRIBUTE^ appears in the string after @option{-gnaty}\n-then attribute names, including the case of keywords such as @code{digits}\n+Attribute names, including the case of keywords such as @code{digits}\n used as attributes names, must be written in mixed case, that is, the\n initial letter and any letter following an underscore must be uppercase.\n All other letters must be lowercase.\n \n @item ^A^ARRAY_INDEXES^\n @emph{Use of array index numbers in array attributes.}\n-If the ^letter A^word ARRAY_INDEXES^ appears in the string after\n-@option{-gnaty} then when using the array attributes First, Last, Range,\n+When using the array attributes First, Last, Range,\n or Length, the index number must be omitted for one-dimensional arrays\n and is required for multi-dimensional arrays.\n \n @item ^b^BLANKS^\n @emph{Blanks not allowed at statement end.}\n-If the ^letter b^word BLANKS^ appears in the string after @option{-gnaty} then\n-trailing blanks are not allowed at the end of statements. The purpose of this\n+Trailing blanks are not allowed at the end of statements. The purpose of this\n rule, together with h (no horizontal tabs), is to enforce a canonical format\n for the use of blanks to separate source tokens.\n \n @item ^c^COMMENTS^\n @emph{Check comments.}\n-If the ^letter c^word COMMENTS^ appears in the string after @option{-gnaty}\n-then comments must meet the following set of rules:\n+Comments must meet the following set of rules:\n \n @itemize @bullet\n \n@@ -5784,64 +5844,55 @@ example:\n \n @item ^d^DOS_LINE_ENDINGS^\n @emph{Check no DOS line terminators present.}\n-If the ^letter d^word DOS_LINE_ENDINGS^ appears in the string after\n-@option{-gnaty} then all lines must be terminated by a single ASCII.LF\n+All lines must be terminated by a single ASCII.LF\n character (in particular the DOS line terminator sequence CR/LF is not\n allowed).\n \n @item ^e^END^\n @emph{Check end/exit labels.}\n-If the ^letter e^word END^ appears in the string after @option{-gnaty} then\n-optional labels on @code{end} statements ending subprograms and on\n+Optional labels on @code{end} statements ending subprograms and on\n @code{exit} statements exiting named loops, are required to be present.\n \n @item ^f^VTABS^\n @emph{No form feeds or vertical tabs.}\n-If the ^letter f^word VTABS^ appears in the string after @option{-gnaty} then\n-neither form feeds nor vertical tab characters are permitted\n+Neither form feeds nor vertical tab characters are permitted\n in the source text.\n \n @item ^g^GNAT^\n @emph{GNAT style mode}\n-If the ^letter g^word GNAT^ appears in the string after @option{-gnaty} then\n-the set of style check switches is set to match that used by the GNAT sources.\n+The set of style check switches is set to match that used by the GNAT sources.\n This may be useful when developing code that is eventually intended to be\n incorporated into GNAT. For further details, see GNAT sources.\n \n @item ^h^HTABS^\n @emph{No horizontal tabs.}\n-If the ^letter h^word HTABS^ appears in the string after @option{-gnaty} then\n-horizontal tab characters are not permitted in the source text.\n+Horizontal tab characters are not permitted in the source text.\n Together with the b (no blanks at end of line) check, this\n enforces a canonical form for the use of blanks to separate\n source tokens.\n \n @item ^i^IF_THEN^\n @emph{Check if-then layout.}\n-If the ^letter i^word IF_THEN^ appears in the string after @option{-gnaty},\n-then the keyword @code{then} must appear either on the same\n+The keyword @code{then} must appear either on the same\n line as corresponding @code{if}, or on a line on its own, lined\n up under the @code{if} with at least one non-blank line in between\n containing all or part of the condition to be tested.\n \n @item ^I^IN_MODE^\n @emph{check mode IN keywords}\n-If the ^letter I (upper case)^word IN_MODE^ appears in the string\n-after @option{-gnaty} then mode @code{in} (the default mode) is not\n+Mode @code{in} (the default mode) is not\n allowed to be given explicitly. @code{in out} is fine,\n but not @code{in} on its own.\n \n @item ^k^KEYWORD^\n @emph{Check keyword casing.}\n-If the ^letter k^word KEYWORD^ appears in the string after @option{-gnaty} then\n-all keywords must be in lower case (with the exception of keywords\n+All keywords must be in lower case (with the exception of keywords\n such as @code{digits} used as attribute names to which this check\n does not apply).\n \n @item ^l^LAYOUT^\n @emph{Check layout.}\n-If the ^letter l^word LAYOUT^ appears in the string after @option{-gnaty} then\n-layout of statement and declaration constructs must follow the\n+Layout of statement and declaration constructs must follow the\n recommendations in the Ada Reference Manual, as indicated by the\n form of the syntax rules. For example an @code{else} keyword must\n be lined up with the corresponding @code{if} keyword.\n@@ -5918,16 +5969,13 @@ Clear :\n \n @item ^Lnnn^MAX_NESTING=nnn^\n @emph{Set maximum nesting level}\n-If the sequence ^Lnnn^MAX_NESTING=nnn^, where nnn is a decimal number in\n-the range 0-999, appears in the string after @option{-gnaty} then the\n-maximum level of nesting of constructs (including subprograms, loops,\n-blocks, packages, and conditionals) may not exceed the given value. A\n-value of zero disconnects this style check.\n+The maximum level of nesting of constructs (including subprograms, loops,\n+blocks, packages, and conditionals) may not exceed the given value\n+@option{nnn}. A value of zero disconnects this style check.\n \n @item ^m^LINE_LENGTH^\n @emph{Check maximum line length.}\n-If the ^letter m^word LINE_LENGTH^ appears in the string after @option{-gnaty}\n-then the length of source lines must not exceed 79 characters, including\n+The length of source lines must not exceed 79 characters, including\n any trailing blanks. The value of 79 allows convenient display on an\n 80 character wide device or window, allowing for possible special\n treatment of 80 character lines. Note that this count is of\n@@ -5937,21 +5985,22 @@ a single character (however many bytes are needed in the encoding).\n \n @item ^Mnnn^MAX_LENGTH=nnn^\n @emph{Set maximum line length.}\n-If the sequence ^M^MAX_LENGTH=^nnn, where nnn is a decimal number, appears in\n-the string after @option{-gnaty} then the length of lines must not exceed the\n-given value. The maximum value that can be specified is 32767.\n+The length of lines must not exceed the\n+given value @option{nnn}. The maximum value that can be specified is 32767.\n \n @item ^n^STANDARD_CASING^\n @emph{Check casing of entities in Standard.}\n-If the ^letter n^word STANDARD_CASING^ appears in the string\n-after @option{-gnaty} then any identifier from Standard must be cased\n+Any identifier from Standard must be cased\n to match the presentation in the Ada Reference Manual (for example,\n @code{Integer} and @code{ASCII.NUL}).\n \n+@item ^N^NONE^\n+@emph{Turn off all style checks}\n+All style check options are turned off.\n+\n @item ^o^ORDERED_SUBPROGRAMS^\n @emph{Check order of subprogram bodies.}\n-If the ^letter o^word ORDERED_SUBPROGRAMS^ appears in the string\n-after @option{-gnaty} then all subprogram bodies in a given scope\n+All subprogram bodies in a given scope\n (e.g.@: a package body) must be in alphabetical order. The ordering\n rule uses normal Ada rules for comparing strings, ignoring casing\n of letters, except that if there is a trailing numeric suffix, then\n@@ -5960,40 +6009,35 @@ before Junk10).\n \n @item ^p^PRAGMA^\n @emph{Check pragma casing.}\n-If the ^letter p^word PRAGMA^ appears in the string after @option{-gnaty} then\n-pragma names must be written in mixed case, that is, the\n+Pragma names must be written in mixed case, that is, the\n initial letter and any letter following an underscore must be uppercase.\n All other letters must be lowercase.\n \n @item ^r^REFERENCES^\n @emph{Check references.}\n-If the ^letter r^word REFERENCES^ appears in the string after @option{-gnaty}\n-then all identifier references must be cased in the same way as the\n+All identifier references must be cased in the same way as the\n corresponding declaration. No specific casing style is imposed on\n identifiers. The only requirement is for consistency of references\n with declarations.\n \n @item ^S^STATEMENTS_AFTER_THEN_ELSE^\n @emph{Check no statements after THEN/ELSE.}\n-If the ^letter S^word STATEMENTS_AFTER_THEN_ELSE^ appears in the\n-string after @option{-gnaty} then it is not permitted to write any\n-statements on the same line as a THEN OR ELSE keyword following the\n+No statements are allowed\n+on the same line as a THEN OR ELSE keyword following the\n keyword in an IF statement. OR ELSE and AND THEN are not affected,\n and a special exception allows a pragma to appear after ELSE.\n \n @item ^s^SPECS^\n @emph{Check separate specs.}\n-If the ^letter s^word SPECS^ appears in the string after @option{-gnaty} then\n-separate declarations (``specs'') are required for subprograms (a\n+Separate declarations (``specs'') are required for subprograms (a\n body is not allowed to serve as its own declaration). The only\n exception is that parameterless library level procedures are\n not required to have a separate declaration. This exception covers\n the most frequent form of main program procedures.\n \n @item ^t^TOKEN^\n @emph{Check token spacing.}\n-If the ^letter t^word TOKEN^ appears in the string after @option{-gnaty} then\n-the following token spacing rules are enforced:\n+The following token spacing rules are enforced:\n \n @itemize @bullet\n \n@@ -6042,16 +6086,41 @@ A vertical bar must be surrounded by spaces.\n \n @item ^u^UNNECESSARY_BLANK_LINES^\n @emph{Check unnecessary blank lines.}\n-Check for unnecessary blank lines. A blank line is considered\n+Unnecessary blank lines are not allowed. A blank line is considered\n unnecessary if it appears at the end of the file, or if more than\n one blank line occurs in sequence.\n \n @item ^x^XTRA_PARENS^\n @emph{Check extra parentheses.}\n-Check for the use of an unnecessary extra level of parentheses (C-style)\n+Unnecessary extra level of parentheses (C-style) are not allowed\n around conditions in @code{if} statements, @code{while} statements and\n @code{exit} statements.\n \n+@item ^y^ALL_BUILTIN^\n+@emph{Set all standard style check options}\n+This is equivalent to @code{gnaty3aAbcefhiklmnprst}, that is all checking\n+options enabled with the exception of @option{-gnatyo},\n+@option{-gnatyd}, @option{-gnatyu}, and @option{-gnatyx}.\n+\n+@ifclear vms\n+@item -\n+@emph{Remove style check options}\n+This causes any subsequent options in the string to act as canceling the\n+corresponding style check option.\n+\n+@item +\n+This causes any subsequent options in the string to enable the corresponding\n+style check option. It only has an effect if a previous ^-^REMOVE^ has been\n+encountered.\n+@end ifclear\n+\n+@ifset vms\n+@item NOxxx\n+@emph{Removing style check options}\n+If the name of a style check is preceded by @option{NO} then the corresponding\n+style check is turned off. For example @option{NOCOMMENTS} turns off style\n+checking for comments.\n+@end ifset\n @end table\n \n @noindent\n@@ -6074,10 +6143,10 @@ including style messages, as fatal errors.\n The switch\n @ifclear vms\n @option{-gnaty} on its own (that is not\n-followed by any letters or digits),\n-is equivalent to @code{gnaty3aAbcefhiklmnprst}, that is all checking\n-options enabled with the exception of @option{-gnatyo},\n-@option{-gnatyd}, @option{-gnatyu}, and @option{-gnatyx}.\n+followed by any letters or digits), then the effect is equivalent\n+to the use of @option{-gnatyy}, as described above, that is all\n+built-in standard style check options are enabled.\n+\n @end ifclear\n @ifset vms\n /STYLE_CHECKS=ALL_BUILTIN enables all checking options with\n@@ -6197,12 +6266,12 @@ generate IEEE NaN and infinite values on overflow or invalid operations\n (such as dividing 0.0 by 0.0).\n \n The reason that we distinguish overflow checking from other kinds of\n-range constraint checking is that a failure of an overflow check can\n-generate an incorrect value, but cannot cause erroneous behavior. This\n-is unlike the situation with a constraint check on an array subscript,\n-where failure to perform the check can result in random memory description,\n-or the range check on a case statement, where failure to perform the check\n-can cause a wild jump.\n+range constraint checking is that a failure of an overflow check, unlike\n+for example the failure of a range check, can result in an incorrect\n+value, but cannot cause random memory destruction (like an out of range\n+subscript), or a wild jump (from an out of range case value). Overflow\n+checking is also quite expensive in time and space, since in general it\n+requires the use of double length arithmetic.\n \n Note again that @option{-gnato} is off by default, so overflow checking is\n not performed in default mode. This means that out of the box, with the\n@@ -6646,7 +6715,7 @@ The format of the output is very similar to standard Ada source, and is\n easily understood by an Ada programmer. The following special syntactic\n additions correspond to low level features used in the generated code that\n do not have any exact analogies in pure Ada source form. The following\n-is a partial list of these special constructions. See the specification\n+is a partial list of these special constructions. See the spec\n of package @code{Sprint} in file @file{sprint.ads} for a full list.\n \n If the switch @option{-gnatL} is used in conjunction with\n@@ -6916,7 +6985,7 @@ for completeness and for possible use by other tools.\n A mapping file is a sequence of sets of three lines. In each set,\n the first line is the unit name, in lower case, with ``@code{%s}''\n appended for\n-specifications and ``@code{%b}'' appended for bodies; the second line is the\n+specs and ``@code{%b}'' appended for bodies; the second line is the\n file name; and the third line is the path name.\n \n Example:\n@@ -8387,10 +8456,10 @@ $ ^gnatlink my_prog -Wl,-Map,MAPFILE^GNAT LINK my_prog.ali /MAP^\n \n Using @var{linker options} it is possible to set the program stack and\n heap size.\n-@ifclear vms\n+@ifset unw\n See @ref{Setting Stack Size from gnatlink} and\n @ref{Setting Heap Size from gnatlink}.\n-@end ifclear\n+@end ifset\n \n @command{gnatlink} determines the list of objects required by the Ada\n program and prepends them to the list of objects passed to the linker.\n@@ -8994,7 +9063,9 @@ Normally, when using Project Files, only sources that are part of a Project\n File may be compile. When this switch is used, a source outside of all Project\n Files may be compiled. The ALI file and the object file will be put in the\n object directory of the main Project. The compilation switches used will only\n-be those specified on the command line.\n+be those specified on the command line. Even when\n+@option{^-x^/NON_PROJECT_UNIT_COMPILATION^} is used, mains specified on the\n+command line need to be sources of a project file.\n \n @item ^-X^/EXTERNAL_REFERENCE=^@var{name=value}\n Indicate that external variable @var{name} has the value @var{value}.\n@@ -9325,6 +9396,7 @@ driver (see @ref{The GNAT Driver and Project Files}).\n @ifnottex\n @menu\n * Performance Considerations::\n+* Text_IO Suggestions::\n * Reducing Size of Ada Executables with gnatelim::\n * Reducing Size of Executables with unused subprogram/data elimination::\n @end menu\n@@ -9470,6 +9542,23 @@ possibility of an immediate abort at any point.\n @subsection Optimization Levels\n @cindex @option{^-O^/OPTIMIZE^} (@command{gcc})\n \n+@noindent\n+Without any optimization ^option,^qualifier,^\n+the compiler's goal is to reduce the cost of\n+compilation and to make debugging produce the expected results.\n+Statements are independent: if you stop the program with a breakpoint between\n+statements, you can then assign a new value to any variable or change\n+the program counter to any other statement in the subprogram and get exactly\n+the results you would expect from the source code.\n+\n+Turning on optimization makes the compiler attempt to improve the\n+performance and/or code size at the expense of compilation time and\n+possibly the ability to debug the program.\n+\n+If you use multiple\n+^-O options, with or without level numbers,^/OPTIMIZE qualifiers,^\n+the last such option is the one that is effective.\n+\n @noindent\n The default is optimization off. This results in the fastest compile\n times, but GNAT makes absolutely no attempt to optimize, and the\n@@ -9491,7 +9580,7 @@ generates unoptimized code but has\n the fastest compilation time.\n \n Note that many other compilers do fairly extensive optimization\n-even if \"no optimization\" is specified. When using gcc, it is\n+even if ``no optimization'' is specified. With gcc, it is\n very unusual to use ^-O0^/OPTIMIZE=NONE^ for production if\n execution time is of any concern, since ^-O0^/OPTIMIZE=NONE^\n really does mean no optimization at all. This difference between\n@@ -9528,10 +9617,6 @@ resulting improvement in execution time,\n both depend on the particular application and the hardware environment.\n You should experiment to find the best level for your application.\n \n-The @option{^-Os^/OPTIMIZE=SPACE^} switch is independent of the time\n-optimizations, so you can specify both @option{^-Os^/OPTIMIZE=SPACE^}\n-and a time optimization on the same compile command.\n-\n Since the precise set of optimizations done at each level will vary from\n release to release (and sometime from target to target), it is best to think\n of the optimization settings in general terms.\n@@ -9694,18 +9779,15 @@ The optimization level is at least @option{-O1}.\n \n @item\n The called subprogram is suitable for inlining: It must be small enough\n-and not contain nested subprograms or anything else that @command{gcc}\n-cannot support in inlined subprograms.\n-\n-@item\n-The call occurs after the definition of the body of the subprogram.\n+and not contain something that @command{gcc} cannot support in inlined\n+subprograms.\n \n @item\n @cindex pragma Inline\n @findex Inline\n-Either @code{pragma Inline} applies to the subprogram or it is\n-small and automatic inlining (optimization level @option{-O3}) is\n-specified.\n+Either @code{pragma Inline} applies to the subprogram, or it is local\n+to the unit and called once from within it, or it is small and automatic\n+inlining (optimization level @option{-O3}) is specified.\n @end itemize\n \n @noindent\n@@ -9719,8 +9801,8 @@ The optimization level is at least @option{-O1}.\n \n @item\n The called subprogram is suitable for inlining: It must be small enough\n-and not contain nested subprograms or anything else @command{gcc} cannot\n-support in inlined subprograms.\n+and not contain something that @command{gcc} cannot support in inlined\n+subprograms.\n \n @item\n The call appears in a body (not in a package spec).\n@@ -9787,6 +9869,15 @@ that no inlining occurs. The extra dependences resulting from\n @option{-gnatn} will still be active, even if\n this switch is used to suppress the resulting inlining actions.\n \n+@cindex @option{-fno-inline-functions} (@command{gcc})\n+Note: The @option{-fno-inline-functions} switch can be used to prevent\n+automatic inlining of small subprograms if @option{-O3} is used.\n+\n+@cindex @option{-fno-inline-functions-called-once} (@command{gcc})\n+Note: The @option{-fno-inline-functions-called-once} switch\n+can be used to prevent inlining of subprograms local to the unit\n+and called once from within it if @option{-O1} is used.\n+\n Note regarding the use of @option{-O3}: There is no difference in inlining\n behavior between @option{-O2} and @option{-O3} for subprograms with an explicit\n pragma @code{Inline} assuming the use of @option{-gnatn}\n@@ -10041,6 +10132,30 @@ the user to determine the distribution of execution time across a program,\n @pxref{Profiling} for details of usage.\n @end ifset\n \n+\n+@node Text_IO Suggestions\n+@section @code{Text_IO} Suggestions\n+@cindex @code{Text_IO} and performance\n+\n+@noindent\n+The @code{Ada.Text_IO} package has fairly high overheads due in part to\n+the requirement of maintaining page and line counts. If performance\n+is critical, a recommendation is to use @code{Stream_IO} instead of\n+@code{Text_IO} for volume output, since this package has less overhead.\n+\n+If @code{Text_IO} must be used, note that by default output to the standard\n+output and standard error files is unbuffered (this provides better\n+behavior when output statements are used for debugging, or if the\n+progress of a program is observed by tracking the output, e.g. by\n+using the Unix @command{tail -f} command to watch redirected output.\n+\n+If you are generating large volumes of output with @code{Text_IO} and\n+performance is an important factor, use a designated file instead\n+of the standard output file, or change the standard output file to\n+be buffered using @code{Interfaces.C_Streams.setvbuf}.\n+\n+\n+\n @node Reducing Size of Ada Executables with gnatelim\n @section Reducing Size of Ada Executables with @code{gnatelim}\n @findex gnatelim\n@@ -10753,23 +10868,38 @@ recognized by GNAT:\n    Ada_83\n    Ada_95\n    Ada_05\n+   Ada_2005\n+   Assertion_Policy\n    C_Pass_By_Copy\n+   Check_Name\n+   Check_Policy\n+   Compile_Time_Error\n+   Compile_Time_Warning\n+   Compiler_Unit\n    Component_Alignment\n+   Debug_Policy\n    Detect_Blocking\n    Discard_Names\n    Elaboration_Checks\n    Eliminate\n    Extend_System\n    External_Name_Casing\n+   Fast_Math\n+   Favor_Top_Level\n    Float_Representation\n+   Implicit_Packing\n    Initialize_Scalars\n    Interrupt_State\n    License\n    Locking_Policy\n    Long_Float\n+   No_Run_Time\n+   No_Strict_Aliasing\n    Normalize_Scalars\n+   Optimize_Alignment\n    Persistent_BSS\n    Polling\n+   Priority_Specific_Dispatching\n    Profile\n    Profile_Warnings\n    Propagate_Exceptions\n@@ -10780,14 +10910,18 @@ recognized by GNAT:\n    Restrictions_Warnings\n    Reviewable\n    Source_File_Name\n+   Source_File_Name_Project\n    Style_Checks\n    Suppress\n+   Suppress_Exception_Locations\n    Task_Dispatching_Policy\n    Universal_Data\n    Unsuppress\n    Use_VADS_Size\n-   Warnings\n    Validity_Checks\n+   Warnings\n+   Wide_Character_Encoding\n+\n @end smallexample\n \n @menu\n@@ -11793,7 +11927,7 @@ relaxed in a future release.\n @noindent\n In large software systems it is common to have multiple\n implementations of a common interface; in Ada terms, multiple versions of a\n-package body for the same specification.  For example, one implementation\n+package body for the same spec.  For example, one implementation\n might be safe for use in tasking programs, while another might only be used\n in sequential applications.  This can be modeled in GNAT using the concept\n of @emph{project extension}.  If one project (the ``child'') @emph{extends}\n@@ -12874,11 +13008,11 @@ of the child project; see @ref{Project File Syntax}.\n \n An inherited source file retains any switches specified in the parent project.\n \n-For example if the project @code{Utilities} contains the specification and the\n+For example if the project @code{Utilities} contains the spec and the\n body of an Ada package @code{Util_IO}, then the project\n @code{Modified_Utilities} can contain a new body for package @code{Util_IO}.\n The original body of @code{Util_IO} will not be considered in program builds.\n-However, the package specification will still be found in the project\n+However, the package spec will still be found in the project\n @code{Utilities}.\n \n A child project can have only one parent but it may import any number of other\n@@ -13525,7 +13659,7 @@ The following switches are used by GNAT tools that support project files:\n @table @option\n \n @item ^-P^/PROJECT_FILE=^@var{project}\n-@cindex @option{^-P^/PROJECT_FILE^} (any tool supporting project files)\n+@cindex @option{^-P^/PROJECT_FILE^} (any project-aware tool)\n Indicates the name of a project file. This project file will be parsed with\n the verbosity indicated by @option{^-vP^MESSAGE_PROJECT_FILES=^@emph{x}},\n if any, and using the external references indicated\n@@ -13545,7 +13679,7 @@ on the command line are checked, the order of the switches\n or @option{^-X^/EXTERNAL_REFERENCE^} is not significant.\n \n @item ^-X^/EXTERNAL_REFERENCE=^@var{name=value}\n-@cindex @option{^-X^/EXTERNAL_REFERENCE^} (any tool supporting project files)\n+@cindex @option{^-X^/EXTERNAL_REFERENCE^} (any project-aware tool)\n Indicates that external variable @var{name} has the value @var{value}.\n The Project Manager will use this value for occurrences of\n @code{external(name)} when parsing the project file.\n@@ -13570,8 +13704,7 @@ An external variable specified with a @option{^-X^/EXTERNAL_REFERENCE^} switch\n takes precedence over the value of the same name in the environment.\n \n @item ^-vP^/MESSAGES_PROJECT_FILE=^@emph{x}\n-@cindex @code{^-vP^/MESSAGES_PROJECT_FILE^} (any tool supporting project files)\n-@c Previous line uses code vs option command, to stay less than 80 chars\n+@cindex @option{^-vP^/MESSAGES_PROJECT_FILE^} (any project-aware tool)\n Indicates the verbosity of the parsing of GNAT project files.\n \n @ifclear vms\n@@ -13592,6 +13725,25 @@ project files.\n If several @option{^-vP^/MESSAGES_PROJECT_FILE=^@emph{x}} switches are present,\n only the last one is used.\n \n+@item ^-aP^/ADD_PROJECT_SEARCH_DIR=^<dir>\n+@cindex @option{^-aP^/ADD_PROJECT_SEARCH_DIR=^} (any project-aware tool)\n+Add directory <dir> at the beginning of the project search path, in order,\n+after the current working directory.\n+\n+@ifclear vms\n+@item -eL\n+@cindex @option{-eL} (any project-aware tool)\n+Follow all symbolic links when processing project files.\n+@end ifclear\n+\n+@item ^--subdirs^/SUBDIRS^=<subdir>\n+@cindex @option{^--subdirs^/SUBDIRS^=} (gnatmake and gnatclean)\n+This switch is recognized by gnatmake and gnatclean. It indicate that the real\n+directories (except the source directories) are the subdirectories <subdir>\n+of the directories specified in the project files. This applies in particular\n+to object directories, library directories and exec directories. If the\n+subdirectories do not exist, they are created automatically.\n+\n @end table\n \n @c **********************************\n@@ -14500,9 +14652,9 @@ declarative_item ::=\n   other_declarative_item\n \n package_declaration ::=\n-  package_specification | package_renaming\n+  package_spec | package_renaming\n \n-package_specification ::=\n+package_spec ::=\n   @b{package} package_identifier @b{is}\n     @{simple_declarative_item@}\n   @b{end} package_identifier ;\n@@ -15617,7 +15769,7 @@ stops.\n @cindex @option{^--no-separate-is^/NO_SEPARATE_IS^} (@command{gnatpp})\n @item ^--no-separate-is^/NO_SEPARATE_IS^\n Do not place the keyword @code{is} on a separate line in a subprogram body in\n-case if the specification occupies more then one line.\n+case if the spec occupies more then one line.\n \n @cindex @option{^--separate-loop-then^/SEPARATE_LOOP_THEN^} (@command{gnatpp})\n @item ^--separate-loop-then^/SEPARATE_LOOP_THEN^\n@@ -15792,8 +15944,8 @@ reading or processing the input file.\n Like @option{^-r^/REPLACE^} except that if the file with the specified name\n already exists, it is overwritten.\n \n-@item ^-rnb^/NO_BACKUP^\n-@cindex @option{^-rnb^/NO_BACKUP^} (@code{gnatpp})\n+@item ^-rnb^/REPLACE_NO_BACKUP^\n+@cindex @option{^-rnb^/REPLACE_NO_BACKUP^} (@code{gnatpp})\n Replace the input source file with the reformatted output without\n creating any backup copy of the input source.\n \n@@ -16579,7 +16731,7 @@ kinds of locally declared program units:\n subprogram (and generic subprogram) bodies;\n \n @item\n-package (and generic package) specifications and bodies;\n+package (and generic package) specs and bodies;\n \n @item\n task object and type specifications and bodies;\n@@ -16625,6 +16777,7 @@ explicitly specified metrics are reported.\n * Line Metrics Control::\n * Syntax Metrics Control::\n * Complexity Metrics Control::\n+* Object-Oriented Metrics Control::\n @end menu\n \n @node Line Metrics Control\n@@ -16766,7 +16919,7 @@ the following metrics:\n \n @table @emph\n @item Public subprograms\n-This metric is computed for package specifications. It is the\n+This metric is computed for package specs. It is the\n number of subprograms and generic subprograms declared in the visible\n part (including the visible part of nested packages, protected objects, and\n protected types).\n@@ -16781,7 +16934,7 @@ level and enclosing constructs. Generic bodies and bodies of protected\n subprograms are counted in the same way as ``usual'' subprogram bodies.\n \n @item Public types\n-This metric is computed for package specifications and\n+This metric is computed for package specs and\n generic package declarations. It is the total number of types\n that can be referenced from outside this compilation unit, plus the\n number of types from all the visible parts of all the visible generic\n@@ -16831,7 +16984,7 @@ following switches to select specific syntax metrics.\n @cindex @option{^--syntax@var{x}^/SYNTAX_METRICS^} (@command{gnatmetric})\n \n @ifclear vms\n-@cindex @option{--no-syntax@var{x}}\n+@cindex @option{--no-syntax@var{x}} (@command{gnatmetric})\n @end ifclear\n \n @item ^--syntax-all^/SYNTAX_METRICS=ALL_ON^\n@@ -16989,6 +17142,107 @@ computing Essential Complexity\n \n @end table\n \n+\n+@node Object-Oriented Metrics Control\n+@subsubsection Object-Oriented Metrics Control\n+@cindex Object-Oriented metrics control in @command{gnatmetric}\n+\n+@noindent\n+@cindex Coupling metrics (in in @command{gnatmetric})\n+Coupling metrics are object-oriented metrics that measure the\n+dependencies between a given class (or a group of classes) and the\n+``external world'' (that is, the other classes in the program). In this\n+subsection the term ``class'' is used in its\n+traditional object-oriented programming sense\n+(an instantiable module that contains data and/or method members).\n+A @emph{category} (of classes)\n+is a group of closely related classes that are reused and/or\n+modified together.\n+\n+A class @code{K}'s @emph{efferent coupling} is the number of classes\n+that @code{K} depends upon.\n+A category's efferent coupling is the number of classes outside the\n+category that the classes inside the category depend upon.\n+\n+A class @code{K}'s @emph{afferent coupling} is the number of classes\n+that depend upon @code{K}.\n+A category's afferent coupling is the number of classes outside the\n+category that depend on classes belonging to the category.\n+\n+Ada's implementation of the object-oriented paradigm does not use the\n+traditional class notion, so the definition of the coupling\n+metrics for Ada maps the class and class category notions\n+onto Ada constructs.\n+\n+For the coupling metrics, several kinds of modules -- a library package,\n+a library generic package, and a library generic package instantiation --\n+that define a tagged type or an interface type are\n+considered to be a class. A category consists of a library package (or\n+a library generic package) that defines a tagged or an interface type,\n+together with all its descendant (generic) packages that define tagged\n+or interface types. For any package counted as a class,\n+its body (if any) is considered\n+together with its spec when counting the dependencies. For dependencies\n+between classes, the Ada semantic dependencies are considered.\n+For coupling metrics, only dependencies on units that are considered as\n+classes, are considered.\n+\n+When computing coupling metrics, @command{gnatmetric} counts only\n+dependencies between units that are arguments of the gnatmetric call.\n+Coupling metrics are program-wide (or project-wide) metrics, so to\n+get a valid result, you should call @command{gnatmetric} for\n+the whole set of sources that make up your program. It can be done\n+by calling @command{gnatmetric} from the GNAT driver with @option{-U}\n+option (see See @ref{The GNAT Driver and Project Files} for details.\n+\n+By default, all the coupling metrics are disabled. You can use the following\n+switches to specify the coupling metrics to be computed and reported:\n+\n+@table @option\n+\n+@ifclear vms\n+@cindex @option{--package@var{x}} (@command{gnatmetric})\n+@cindex @option{--no-package@var{x}} (@command{gnatmetric})\n+@cindex @option{--category@var{x}} (@command{gnatmetric})\n+@cindex @option{--no-category@var{x}} (@command{gnatmetric})\n+@end ifclear\n+\n+@ifset vms\n+@cindex @option{/COUPLING_METRICS} (@command{gnatmetric})\n+@end ifset\n+\n+@item ^--coupling-all^/COUPLING_METRICS=ALL_ON^\n+Report all the coupling metrics\n+\n+@item ^--no-coupling-all^/COUPLING_METRICS=ALL_OFF^\n+Do not report any of  metrics\n+\n+@item ^--package-efferent-coupling^/COUPLING_METRICS=PACKAGE_EFFERENT_ON^\n+Report package efferent coupling\n+\n+@item ^--no-package-efferent-coupling^/COUPLING_METRICS=PACKAGE_EFFERENT_OFF^\n+Do not report package efferent coupling\n+\n+@item ^--package-afferent-coupling^/COUPLING_METRICS=PACKAGE_AFFERENT_ON^\n+Report package afferent coupling\n+\n+@item ^--no-package-afferent-coupling^/COUPLING_METRICS=PACKAGE_AFFERENT_OFF^\n+Do not report package afferent coupling\n+\n+@item ^--category-efferent-coupling^/COUPLING_METRICS=CATEGORY_EFFERENT_ON^\n+Report category efferent coupling\n+\n+@item ^--no-category-efferent-coupling^/COUPLING_METRICS=CATEGORY_EFFERENT_OFF^\n+Do not report category efferent coupling\n+\n+@item ^--category-afferent-coupling^/COUPLING_METRICS=CATEGORY_AFFERENT_ON^\n+Report category afferent coupling\n+\n+@item ^--no-category-afferent-coupling^/COUPLING_METRICS=CATEGORY_AFFERENT_OFF^\n+Do not report category afferent coupling\n+\n+@end table\n+\n @node Other gnatmetric Switches\n @subsection Other @code{gnatmetric} Switches\n \n@@ -17160,7 +17414,7 @@ for all letters, except that a hyphen in the second character position is\n replaced by a ^tilde^dollar sign^ if the first character is\n ^@samp{a}, @samp{i}, @samp{g}, or @samp{s}^@samp{A}, @samp{I}, @samp{G}, or @samp{S}^.\n The extension is @code{.ads} for a\n-specification and @code{.adb} for a body.\n+spec and @code{.adb} for a body.\n Krunching does not affect the extension, but the file name is shortened to\n the specified length by following these rules:\n \n@@ -17275,12 +17529,21 @@ For further discussion of conditional compilation in general, see\n @ref{Conditional Compilation}.\n \n @menu\n+* Preprocessing Symbols::\n * Using gnatprep::\n * Switches for gnatprep::\n * Form of Definitions File::\n * Form of Input Text for gnatprep::\n @end menu\n \n+@node Preprocessing Symbols\n+@section Preprocessing Symbols\n+\n+@noindent\n+Preprocessing symbols are defined in definition files and referred to in\n+sources to be preprocessed. A Preprocessing symbol is an identifier, following\n+normal Ada (case-insensitive) rules for its syntax, with the restriction that\n+all characters need to be in the ASCII set (no accented letters).\n \n @node Using gnatprep\n @section Using @code{gnatprep}\n@@ -17309,7 +17572,7 @@ normally have an ads or adb suffix.\n \n @item deffile\n is the full name of a text file containing definitions of\n-symbols to be referenced by the preprocessor. This argument is\n+preprocessing symbols to be referenced by the preprocessor. This argument is\n optional, and can be replaced by the use of the @option{-D} switch.\n \n @end table\n@@ -17345,8 +17608,8 @@ since comments are ignored by the compiler in any case).\n \n @item ^-Dsymbol=value^/ASSOCIATE=\"symbol=value\"^\n @cindex @option{^-D^/ASSOCIATE^} (@command{gnatprep})\n-Defines a new symbol, associated with value. If no value is given on the\n-command line, then symbol is considered to be @code{True}. This switch\n+Defines a new preprocessing symbol, associated with value. If no value is given\n+on the command line, then symbol is considered to be @code{True}. This switch\n can be used in place of a definition file.\n \n @ifset vms\n@@ -17406,8 +17669,7 @@ symbol := value\n @end smallexample\n \n @noindent\n-where symbol is an identifier, following normal Ada (case-insensitive)\n-rules for its syntax, and value is one of the following:\n+where symbol is a preprocessing symbol, and value is one of the following:\n \n @itemize @bullet\n @item\n@@ -20110,6 +20372,7 @@ used as a parameter of the @option{+R} or @option{-R} options.\n @ignore\n * Improperly_Called_Protected_Entries::\n @end ignore\n+* Metrics_Violation::\n * Misnamed_Identifiers::\n * Multiple_Entries_In_Protected_Definitions::\n * Name_Clashes::\n@@ -20550,7 +20813,7 @@ This rule has no parameters.\n @cindex @code{Improperly_Located_Instantiations} rule (for @command{gnatcheck})\n \n @noindent\n-Flag all generic instantiations in library-level package specifications\n+Flag all generic instantiations in library-level package specs\n (including library generic packages) and in all subprogram bodies.\n \n Instantiations in task and entry bodies are not flagged. Instantiations in the\n@@ -20593,7 +20856,7 @@ This rule has no parameters.\n \n @noindent\n Flag all local packages declared in package and generic package\n-specifications.\n+specs.\n Local packages in bodies are not flagged.\n \n This rule has no parameters.\n@@ -20609,6 +20872,88 @@ Flag each protected entry that can be called from more than one task.\n This rule has no parameters.\n @end ignore\n \n+@node Metrics_Violation\n+@subsection @code{Metrics_Violation}\n+@cindex @code{Metrics} rule (for @command{gnatcheck})\n+\n+@noindent\n+This is an umbrella rule for a set of metrics-based checks. The parameters of\n+the rule specify which metrics should be checked, and a bound (upper or lower,\n+depending on the metric) for each specified metric. A construct is\n+flagged if a specified metric can be computed for it, and the resulting value\n+is higher then the upper bound (or less than the lower bound) specified.\n+\n+This rule has the following parameters:\n+\n+@itemize @bullet\n+@item\n+For the @option{+R} option:\n+@table @code\n+@item @i{Metric_Check_Name} < @i{LowerBound}\n+Turns the check for the specified metric ON and specifies the lower bound\n+for a given metric check\n+\n+@item @i{Metric_Check_Name} > @i{UpperBound}\n+\n+Turns the check for the specified metric ON and specifies the upper bound\n+for a given metric check\n+@end table\n+\n+@item\n+For the @option{-R} option:\n+@table @code\n+@item @i{Metric_Check_Name}\n+Turns the check for the specified metric OFF\n+@end table\n+@end itemize\n+\n+@noindent\n+Parameters are not case-sensitive. @i{Metric_Check_Name} must be\n+the name of a metric supported by the @code{Metrics_Violation} rule\n+(see the table below),\n+otherwise the parameter is ignored. Whether the upper or lower bound\n+is specified for a given check, depends on the metric. If a\n+parameter for the @option{+R} option specifies an invalid limit, a\n+warning is issued and the parameter is ignored.\n+\n+The @option{-R} option without parameters turns OFF all the previously enabled\n+metric checks. the @option{+R} option without parameters turns ON all the\n+metric checks that have been defined by previous @option{+R} options with\n+valid parameters. @option{+R} option with a valid\n+parameter also turns ON all the other metric checks that have been defined\n+by previous @option{+R} options with valid parameters if they have been\n+disabled by @option{-R} option without parameters.\n+\n+By default no metrics checks are ON, so the @option{+R} option without\n+parameters actually does not specify any check.\n+\n+The following table shows the available metrics-based checks,\n+including the constraint that must be satisfied by the bound that\n+is specified for the check.\n+\n+@multitable {@code{Cyclomatic_Complexity}}{Cyclomatic complexity}{Positive integer}\n+@ifnothtml\n+@headitem Check Name @tab Description @tab Bounds Value\n+@end ifnothtml\n+@ifhtml\n+@item @b{Check Name} @tab @b{Description} @tab @b{Bounds Value}\n+@end ifhtml\n+@c Above conditional code is workaround to bug in texi2html (Feb 2008)\n+@item @code{Essential_Complexity} @tab Essential complexity @tab Positive integer\n+@item @code{Cyclomatic_Complexity} @tab Cyclomatic complexity @tab Positive integer\n+@item @code{LSLOC} @tab Logical Source Lines of Code @tab Positive integer\n+@end multitable\n+\n+@noindent\n+The meaning and the computed values for all these metrics are exactly\n+the same as for the corresponding metrics in @command{gnatmetric}.\n+\n+@emph{Example:} the rule\n+@smallexample\n++RMetrics_Violation: Cyclomatic_Complexity > 7\n+@end smallexample\n+@noindent\n+means that all bodies with cyclomatic complexity exceeding 7 will be flagged.\n \n @node Misnamed_Identifiers\n @subsection @code{Misnamed_Identifiers}\n@@ -22841,7 +23186,7 @@ both language-defined children and GNAT run-time routines.\n @item\n @findex GNAT\n Files with prefix @file{^g-^G-^} are children of @code{GNAT}. These are useful\n-general-purpose packages, fully documented in their specifications. All\n+general-purpose packages, fully documented in their specs. All\n the other @file{.c} files are modifications of common @command{gcc} files.\n @end itemize\n \n@@ -23391,7 +23736,7 @@ package @code{System.Aux_DEC}.\n @cindex @code{Aux_DEC} package (child of @code{System})\n These definitions are incorporated directly into package @code{System},\n as though they had been declared there. For a\n-list of the declarations added, see the specification of this package,\n+list of the declarations added, see the spec of this package,\n which can be found in the file @file{s-auxdec.ads} in the GNAT library.\n @cindex @file{s-auxdec.ads} file\n The pragma @code{Extend_System} is a configuration pragma, which means that\n@@ -23707,7 +24052,7 @@ pragmas. See @ref{Floating-Point Types and Representations}, for details.\n @noindent\n HP Ada provides a specific version of the package\n @code{SYSTEM} for each platform on which the language is implemented.\n-For the complete specification of the package @code{SYSTEM}, see\n+For the complete spec of the package @code{SYSTEM}, see\n Appendix F of the @cite{HP Ada Language Reference Manual}.\n \n On HP Ada, the package @code{SYSTEM} includes the following conversion\n@@ -24252,7 +24597,7 @@ clauses to obey Ada 95 (and thus Ada 2005) rules\n @item  Adding the proper notation to generic formal parameters\n that take unconstrained types in instantiation\n \n-@item  Adding pragma @code{ELABORATE_BODY} to package specifications\n+@item  Adding pragma @code{ELABORATE_BODY} to package specs\n that have package bodies not otherwise allowed\n \n @item  Replacing occurrences of the identifier ``@code{PROTECTED}'' by\n@@ -24563,7 +24908,7 @@ program library.\n @item @command{ACS ENTER FOREIGN}\n @tab Copy (*)@*\n Allows the import of a foreign body as an Ada library\n-specification and enters a reference to a pointer.\n+spec and enters a reference to a pointer.\n \n @item @command{ACS ENTER UNIT}\n @tab Copy (*)@*\n@@ -29003,7 +29348,7 @@ end Increment_2;\n @end smallexample\n \n Compile the program with both optimization (@option{-O2}) and inlining\n-enabled (@option{-gnatpn} instead of @option{-gnatp}).\n+(@option{-gnatn}) enabled.\n \n The @code{Incr} function is still compiled as usual, but at the\n point in @code{Increment} where our function used to be called:\n@@ -29471,11 +29816,11 @@ code uses vendor-specific libraries then there are several ways to manage\n this in Ada 95 or Ada 2005:\n @enumerate\n @item\n-If the source code for the libraries (specifications and bodies) are\n+If the source code for the libraries (specs and bodies) are\n available, then the libraries can be migrated in the same way as the\n application.\n @item\n-If the source code for the specifications but not the bodies are\n+If the source code for the specs but not the bodies are\n available, then you can reimplement the bodies.\n @item\n Some features introduced by Ada 95 obviate the need for library support.  For\n@@ -30111,7 +30456,7 @@ Using general access types ensures maximum compatibility with both\n All code that comes as part of GNAT is 64-bit clean, but the\n restrictions given in @ref{Restrictions on use of 64 bit objects},\n still apply. Look at the package\n-specifications to see in which contexts objects allocated\n+specs to see in which contexts objects allocated\n in 64-bit address space are acceptable.\n \n @node Technical details"}, {"sha": "c167596477a953ebe921066a1d371a66d74a4064", "filename": "gcc/ada/ug_words", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a5f40e1b81b0e5306d41773faf5f77197fbfe04/gcc%2Fada%2Fug_words", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a5f40e1b81b0e5306d41773faf5f77197fbfe04/gcc%2Fada%2Fug_words", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fug_words?ref=1a5f40e1b81b0e5306d41773faf5f77197fbfe04", "patch": "@@ -1,5 +1,5 @@\n b_              ^ B_\n-b~              ^ B$\n+b~              ^ B__\n cc1             ^ CC1\n Cc1             ^ CC1\n emacs           ^ EMACS\n@@ -99,6 +99,8 @@ gcc -c          ^ GNAT COMPILE\n -gnatVa         ^ /VALIDITY_CHECKING=ALL\n -gnatVc         ^ /VALIDITY_CHECKING=COPIES\n -gnatVd         ^ /VALIDITY_CHECKING=DEFAULT\n+-gnatVE         ^ /VALIDITY_CHECKING=NOCOMPONENTS\n+-gnatVe         ^ /VALIDITY_CHECKING=COMPONENTS\n -gnatVD         ^ /VALIDITY_CHECKING=NODEFAULT\n -gnatVf         ^ /VALIDITY_CHECKING=FLOATS\n -gnatVi         ^ /VALIDITY_CHECKING=IN_PARAMS\n@@ -123,6 +125,7 @@ gcc -c          ^ GNAT COMPILE\n -gnatwd         ^ /WARNINGS=IMPLICIT_DEREFERENCE\n -gnatwD         ^ /WARNINGS=NOIMPLICIT_DEREFERENCE\n -gnatwe         ^ /WARNINGS=ERRORS\n+-gnatw.e        ^ /WARNINGS=EVERY\n -gnatwf         ^ /WARNINGS=UNREFERENCED_FORMALS\n -gnatwF         ^ /WARNINGS=NOUNREFERENCED_FORMALS\n -gnatwg         ^ /WARNINGS=UNRECOGNIZED_PRAGMAS\n@@ -146,6 +149,8 @@ gcc -c          ^ GNAT COMPILE\n -gnatw.O        ^ /WARNINGS=NOOUT_PARAM_UNREF\n -gnatwp         ^ /WARNINGS=INEFFECTIVE_INLINE\n -gnatwP         ^ /WARNINGS=NOINEFFECTIVE_INLINE\n+-gnatw.p        ^ /WARNINGS=PARAMETER_ORDER\n+-gnatw.P        ^ /WARNINGS=NO_PARAMETER_ORDER\n -gnatwq         ^ /WARNINGS=MISSING_PARENS\n -gnatwQ         ^ /WARNINGS=NOMISSING_PARENS\n -gnatwr         ^ /WARNINGS=REDUNDANT"}, {"sha": "0d131e1f2e595591aa355963e564d207c05bcde7", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a5f40e1b81b0e5306d41773faf5f77197fbfe04/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a5f40e1b81b0e5306d41773faf5f77197fbfe04/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=1a5f40e1b81b0e5306d41773faf5f77197fbfe04", "patch": "@@ -23,6 +23,9 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+--  Warning: the output of this usage for warnings is duplicated in the GNAT\n+--  reference manual. Be sure to update that if you change the warning list.\n+\n with Targparm; use Targparm;\n with Namet;    use Namet;\n with Opt;      use Opt;\n@@ -362,7 +365,8 @@ begin\n \n    Write_Switch_Char (\"wxx\");\n    Write_Line (\"Enable selected warning modes, xx = list of parameters:\");\n-   Write_Line (\"        a    turn on all optional warnings (except dhl.o.w)\");\n+   Write_Line (\"        a    turn on all optional warnings \" &\n+                                                  \"(except dhl.ot.w)\");\n    Write_Line (\"        A    turn off all optional warnings\");\n    Write_Line (\"        .a*  turn on warnings for failing assertions\");\n    Write_Line (\"        .A   turn off warnings for failing assertions\");\n@@ -377,6 +381,7 @@ begin\n    Write_Line (\"        d    turn on warnings for implicit dereference\");\n    Write_Line (\"        D*   turn off warnings for implicit dereference\");\n    Write_Line (\"        e    treat all warnings as errors\");\n+   Write_Line (\"        .e   turn on every optional warning (no exceptions)\");\n    Write_Line (\"        f    turn on warnings for unreferenced formal\");\n    Write_Line (\"        F*   turn off warnings for unreferenced formal\");\n    Write_Line (\"        g*   turn on warnings for unrecognized pragma\");\n@@ -407,9 +412,13 @@ begin\n    Write_Line (\"        .O*  turn off warnings for out parameters assigned \" &\n                                                   \"but not read\");\n    Write_Line (\"        p    turn on warnings for ineffective pragma \" &\n-                                             \"Inline in frontend\");\n+                                                  \"Inline in frontend\");\n    Write_Line (\"        P*   turn off warnings for ineffective pragma \" &\n-                                             \"Inline in frontend\");\n+                                                  \"Inline in frontend\");\n+   Write_Line (\"        .p   turn on warnings for suspicious parameter \" &\n+                                                  \"order\");\n+   Write_Line (\"        .P*  turn off warnings for suspicious parameter \" &\n+                                                  \"order\");\n    Write_Line (\"        q*   turn on warnings for questionable \" &\n                                                   \"missing parentheses\");\n    Write_Line (\"        Q    turn off warnings for questionable \" &\n@@ -493,6 +502,7 @@ begin\n    Write_Line (\"        m    check line length <= 79 characters\");\n    Write_Line (\"        n    check casing of package Standard identifiers\");\n    Write_Line (\"        Mnn  check line length <= nn characters\");\n+   Write_Line (\"        N    turn off all checks\");\n    Write_Line (\"        o    check subprogram bodies in alphabetical order\");\n    Write_Line (\"        p    check pragma casing\");\n    Write_Line (\"        r    check casing for identifier references\");\n@@ -501,6 +511,9 @@ begin\n    Write_Line (\"        t    check token separation rules\");\n    Write_Line (\"        u    check no unnecessary blank lines\");\n    Write_Line (\"        x    check extra parentheses around conditionals\");\n+   Write_Line (\"        y    turn on default style checks\");\n+   Write_Line (\"        -    subtract (turn off) subsequent checks\");\n+   Write_Line (\"        +    add (turn on) subsequent checks\");\n \n    --  Lines for -gnatyN switch\n "}, {"sha": "41a07d021a4132d8d5333d41a16f1be8ed13816c", "filename": "gcc/ada/vms_conv.adb", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a5f40e1b81b0e5306d41773faf5f77197fbfe04/gcc%2Fada%2Fvms_conv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a5f40e1b81b0e5306d41773faf5f77197fbfe04/gcc%2Fada%2Fvms_conv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_conv.adb?ref=1a5f40e1b81b0e5306d41773faf5f77197fbfe04", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -814,7 +814,12 @@ package body VMS_Conv is\n \n    procedure Output_Version is\n    begin\n-      Put (\"GNAT \");\n+      if AAMP_On_Target then\n+         Put (\"GNAAMP \");\n+      else\n+         Put (\"GNAT \");\n+      end if;\n+\n       Put_Line (Gnatvsn.Gnat_Version_String);\n       Put_Line (\"Copyright 1996-\" &\n                 Current_Year &"}, {"sha": "f77f2615a527a729e8ac75bd5c4595e50fdaefdd", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 465, "deletions": 83, "changes": 548, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a5f40e1b81b0e5306d41773faf5f77197fbfe04/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a5f40e1b81b0e5306d41773faf5f77197fbfe04/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=1a5f40e1b81b0e5306d41773faf5f77197fbfe04", "patch": "@@ -40,7 +40,7 @@\n --  NOTE: the format of this package must follow the following rules, so that\n --        the VMS GNAT help tool works properly:\n \n---    - Each command zone (where the eventual qualifiers are declared must\n+--    - Each command zone (where the eventual qualifiers are declared) must\n --      begin with a boxed comment of the form:\n \n --      ---------------------------------\n@@ -192,7 +192,7 @@ package VMS_Data is\n \n    S_Bind_Add     : aliased constant S := \"/ADD_PROJECT_SEARCH_DIR=*\"      &\n                                             \"-aP*\";\n-   --        /ADD_PROJECT_SEARCH_PATH==(directory[,...])\n+   --        /ADD_PROJECT_SEARCH_PATH=(directory[,...])\n    --\n    --   Add directories to the project search path.\n \n@@ -275,6 +275,13 @@ package VMS_Data is\n    --   Example:\n    --      /EXTERNAL_REFERENCE=\"DEBUG=TRUE\"\n \n+   S_Bind_Follow  : aliased constant S := \"/FOLLOW_LINKS_FOR_FILES \"       &\n+                                            \"-eL\";\n+   --        /NOFOLLOW_LINKS_FOR_FILES (D)\n+   --        /FOLLOW_LINKS_FOR_FILES\n+   --\n+   --    Follow links when parsing project files\n+\n    S_Bind_Force   : aliased constant S := \"/FORCE_ELAB_FLAGS \"             &\n                                             \"-F\";\n    --        /NOFORCE_ELAB_FLAGS (D)\n@@ -579,6 +586,14 @@ package VMS_Data is\n    --   This qualifier has no impact, except when using the setjmp/longjmp\n    --   exception mechanism, with the GNAT COMPILE qualifier /LONGJMP_SETJMP.\n \n+   S_Bind_Subdirs : aliased constant S := \"/SUBDIRS=<\"                     &\n+                                            \"--subdirs=>\";\n+   --        /SUBDIRS=dir\n+   --\n+   --   The actual directories (object, exec, library, ...) are subdirectories\n+   --   of the directory specified in the project file. If the subdirectory\n+   --   does not exist, it is created automatically.\n+\n    S_Bind_Time    : aliased constant S := \"/TIME_STAMP_CHECK \"             &\n                                             \"!-t\";\n    --      /TIME_STAMP_CHECK (D)\n@@ -662,6 +677,7 @@ package VMS_Data is\n                       S_Bind_Elab    'Access,\n                       S_Bind_Error   'Access,\n                       S_Bind_Ext     'Access,\n+                      S_Bind_Follow  'Access,\n                       S_Bind_Force   'Access,\n                       S_Bind_Help    'Access,\n                       S_Bind_Init    'Access,\n@@ -693,6 +709,7 @@ package VMS_Data is\n                       S_Bind_Source  'Access,\n                       S_Bind_Static  'Access,\n                       S_Bind_Store   'Access,\n+                      S_Bind_Subdirs 'Access,\n                       S_Bind_Time    'Access,\n                       S_Bind_Verbose 'Access,\n                       S_Bind_Warn    'Access,\n@@ -706,7 +723,7 @@ package VMS_Data is\n \n    S_Check_Add    : aliased constant S := \"/ADD_PROJECT_SEARCH_DIR=*\"      &\n                                             \"-aP*\";\n-   --        /ADD_PROJECT_SEARCH_PATH==(directory[,...])\n+   --        /ADD_PROJECT_SEARCH_PATH=(directory[,...])\n    --\n    --   Add directories to the project search path.\n \n@@ -736,6 +753,13 @@ package VMS_Data is\n    --   Take as arguments the files that are listed in the specified\n    --   text file.\n \n+   S_Check_Follow : aliased constant S := \"/FOLLOW_LINKS_FOR_FILES \"       &\n+                                            \"-eL\";\n+   --        /NOFOLLOW_LINKS_FOR_FILES (D)\n+   --        /FOLLOW_LINKS_FOR_FILES\n+   --\n+   --    Follow links when parsing project files\n+\n    S_Check_Help   : aliased constant S := \"/HELP \"                         &\n                                             \"-h\";\n    --        /NOHELP (D)\n@@ -804,13 +828,13 @@ package VMS_Data is\n    --\n    --   section-option may be one of the following:\n    --\n-   --      COMPILER_STYLE      Include diagnoses in compile-style format\n+   --      COMPILER_STYLE      Include diagnostics in compile-style format\n    --                          (diagoses are grouped by files, for each file\n    --                          they are ordered according to the references\n    --                          into the source)\n-   --      BY_RULES            Include diagnoses grouped first by rules and\n+   --      BY_RULES            Include diagnostics grouped first by rules and\n    --                          then by files\n-   --      BY_FILES_BY_RULES   Include diagnoses grouped first by files and\n+   --      BY_FILES_BY_RULES   Include diagnostics grouped first by files and\n    --                          then by rules\n    --\n    --   If one of these options is specified, then the report file contains\n@@ -823,6 +847,14 @@ package VMS_Data is\n    --\n    --   Generate a short form of the report file.\n \n+   S_Check_Subdirs : aliased constant S := \"/SUBDIRS=<\"                    &\n+                                             \"--subdirs=>\";\n+   --        /SUBDIRS=dir\n+   --\n+   --   The actual directories (object, exec, library, ...) are subdirectories\n+   --   of the directory specified in the project file. If the subdirectory\n+   --   does not exist, it is created automatically.\n+\n    S_Check_Verb   : aliased constant S := \"/VERBOSE \"                      &\n                                             \"-v\";\n    --        /NOVERBOSE (D)\n@@ -837,13 +869,15 @@ package VMS_Data is\n                        S_Check_All      'Access,\n                        S_Check_Ext      'Access,\n                        S_Check_Files    'Access,\n+                       S_Check_Follow   'Access,\n                        S_Check_Help     'Access,\n                        S_Check_Locs     'Access,\n                        S_Check_Mess     'Access,\n                        S_Check_Project  'Access,\n                        S_Check_Quiet    'Access,\n                        S_Check_Sections 'Access,\n                        S_Check_Short    'Access,\n+                       S_Check_Subdirs  'Access,\n                        S_Check_Verb     'Access);\n \n    ----------------------------\n@@ -852,7 +886,7 @@ package VMS_Data is\n \n    S_Sync_Add    : aliased constant S := \"/ADD_PROJECT_SEARCH_DIR=*\"       &\n                                             \"-aP*\";\n-   --        /ADD_PROJECT_SEARCH_PATH==(directory[,...])\n+   --        /ADD_PROJECT_SEARCH_PATH=(directory[,...])\n    --\n    --   Add directories to the project search path.\n \n@@ -882,6 +916,13 @@ package VMS_Data is\n    --   Take as arguments the files that are listed in the specified\n    --   text file.\n \n+   S_Sync_Follow  : aliased constant S := \"/FOLLOW_LINKS_FOR_FILES \"       &\n+                                            \"-eL\";\n+   --        /NOFOLLOW_LINKS_FOR_FILES (D)\n+   --        /FOLLOW_LINKS_FOR_FILES\n+   --\n+   --    Follow links when parsing project files\n+\n    S_Sync_Mess    : aliased constant S := \"/MESSAGES_PROJECT_FILE=\"        &\n                                              \"DEFAULT \"                    &\n                                                 \"-vP0 \"                    &\n@@ -917,6 +958,14 @@ package VMS_Data is\n    --\n    --   Work quietly, only output warnings and errors.\n \n+   S_Sync_Subdirs : aliased constant S := \"/SUBDIRS=<\"                     &\n+                                             \"--subdirs=>\";\n+   --        /SUBDIRS=dir\n+   --\n+   --   The actual directories (object, exec, library, ...) are subdirectories\n+   --   of the directory specified in the project file. If the subdirectory\n+   --   does not exist, it is created automatically.\n+\n    S_Sync_Verb   : aliased constant S := \"/VERBOSE \"                       &\n                                             \"-v\";\n    --        /NOVERBOSE (D)\n@@ -967,10 +1016,12 @@ package VMS_Data is\n                       (S_Sync_Add      'Access,\n                        S_Sync_All      'Access,\n                        S_Sync_Ext      'Access,\n+                       S_Sync_Follow   'Access,\n                        S_Sync_Files    'Access,\n                        S_Sync_Mess     'Access,\n                        S_Sync_Project  'Access,\n                        S_Sync_Quiet    'Access,\n+                       S_Sync_Subdirs  'Access,\n                        S_Sync_Verb     'Access,\n                        S_Sync_Exec     'Access,\n                        S_Sync_Details  'Access,\n@@ -1075,7 +1126,7 @@ package VMS_Data is\n \n    S_Clean_Add    : aliased constant S := \"/ADD_PROJECT_SEARCH_DIR=*\"      &\n                                             \"-aP*\";\n-   --        /ADD_PROJECT_SEARCH_PATH==(directory[,...])\n+   --        /ADD_PROJECT_SEARCH_PATH=(directory[,...])\n    --\n    --   Add directories to the project search path.\n \n@@ -1129,6 +1180,13 @@ package VMS_Data is\n    --   Example:\n    --      /EXTERNAL_REFERENCE=\"DEBUG=TRUE\"\n \n+   S_Clean_Follow : aliased constant S := \"/FOLLOW_LINKS_FOR_FILES \"       &\n+                                            \"-eL\";\n+   --        /NOFOLLOW_LINKS_FOR_FILES (D)\n+   --        /FOLLOW_LINKS_FOR_FILES\n+   --\n+   --    Follow links when parsing project files\n+\n    S_Clean_Full    : aliased constant S := \"/FULL_PATH_IN_BRIEF_MESSAGES \" &\n                                             \"-F\";\n    --        /NOFULL_PATH_IN_BRIEF_MESSAGES (D)\n@@ -1215,6 +1273,14 @@ package VMS_Data is\n    --\n    --   Equivalent to /OBJECT_SEARCH=(directory,...).\n \n+   S_Clean_Subdirs : aliased constant S := \"/SUBDIRS=<\"                    &\n+                                              \"--subdirs=>\";\n+   --        /SUBDIRS=dir\n+   --\n+   --   The actual directories (object, exec, library, ...) are subdirectories\n+   --   of the directory specified in the project file. If the subdirectory\n+   --   does not exist, it is created automatically.\n+\n    S_Clean_Verbose : aliased constant S := \"/VERBOSE \"                     &\n                                             \"-v\";\n    --        /NOVERBOSE (D)\n@@ -1229,6 +1295,7 @@ package VMS_Data is\n                        S_Clean_Delete 'Access,\n                        S_Clean_Dirobj 'Access,\n                        S_Clean_Ext    'Access,\n+                       S_Clean_Follow 'Access,\n                        S_Clean_Full   'Access,\n                        S_Clean_Help   'Access,\n                        S_Clean_Index  'Access,\n@@ -1238,6 +1305,7 @@ package VMS_Data is\n                        S_Clean_Quiet  'Access,\n                        S_Clean_Recurs 'Access,\n                        S_Clean_Search 'Access,\n+                       S_Clean_Subdirs'Access,\n                        S_Clean_Verbose'Access);\n \n    -------------------------------\n@@ -1283,7 +1351,7 @@ package VMS_Data is\n \n    S_GCC_Add     : aliased constant S := \"/ADD_PROJECT_SEARCH_DIR=*\"       &\n                                             \"-aP*\";\n-   --        /ADD_PROJECT_SEARCH_PATH==(directory[,...])\n+   --        /ADD_PROJECT_SEARCH_PATH=(directory[,...])\n    --\n    --   Add directories to the project search path.\n \n@@ -1351,7 +1419,8 @@ package VMS_Data is\n    --\n    --     ASSERTIONS    The pragmas \"Assert\" and \"Debug\" normally have no\n    --                   effect and are ignored. This keyword causes \"Assert\"\n-   --                   and \"Debug\" pragmas to be activated.\n+   --                   and \"Debug\" pragmas to be activated, as well as\n+   --                   \"Check\", \"Precondition\" and \"Postcondition\" pragmas.\n    --\n    --     SUPPRESS_ALL  Suppress all runtime checks as though you have \"pragma\n    --                   Suppress (all_checks)\" in your source. Use this switch\n@@ -1575,6 +1644,13 @@ package VMS_Data is\n    --   including the ADS or ADB filetype. The default is not to enable file\n    --   name krunching.\n \n+   S_GCC_Follow : aliased constant S := \"/FOLLOW_LINKS_FOR_FILES \"       &\n+                                            \"-eL\";\n+   --        /NOFOLLOW_LINKS_FOR_FILES (D)\n+   --        /FOLLOW_LINKS_FOR_FILES\n+   --\n+   --    Follow links when parsing project files\n+\n    S_GCC_Force   : aliased constant S := \"/FORCE_ALI \"                     &\n                                             \"-gnatQ\";\n    --        /NOFORCE_ALI (D)\n@@ -2151,7 +2227,9 @@ package VMS_Data is\n \n    S_GCC_Style   : aliased constant S := \"/STYLE_CHECKS=\"                  &\n                                             \"ALL_BUILTIN \"                 &\n-                                               \"-gnaty \"                   &\n+                                               \"-gnatyy \"                  &\n+                                            \"0 \"                           &\n+                                               \"-gnaty0 \"                  &\n                                             \"1 \"                           &\n                                                \"-gnaty1 \"                  &\n                                             \"2 \"                           &\n@@ -2172,52 +2250,96 @@ package VMS_Data is\n                                                \"-gnaty9 \"                  &\n                                             \"ATTRIBUTE \"                   &\n                                                \"-gnatya \"                  &\n+                                            \"NOATTRIBUTE \"                 &\n+                                               \"-gnaty-a \"                 &\n                                             \"ARRAY_INDEXES \"               &\n                                                \"-gnatyA \"                  &\n+                                            \"NOARRAY_INDEXES \"             &\n+                                               \"-gnaty-A \"                 &\n                                             \"BLANKS \"                      &\n                                                \"-gnatyb \"                  &\n+                                            \"NOBLANKS \"                    &\n+                                               \"-gnaty-b \"                 &\n                                             \"COMMENTS \"                    &\n                                                \"-gnatyc \"                  &\n+                                            \"NOCOMMENTS \"                  &\n+                                               \"-gnaty-c \"                 &\n                                             \"DOS_LINE_ENDINGS \"            &\n                                                \"-gnatyd \"                  &\n+                                            \"NODOS_LINE_ENDINGS \"          &\n+                                               \"-gnaty-d \"                 &\n                                             \"END \"                         &\n                                                \"-gnatye \"                  &\n+                                            \"NOEND \"                       &\n+                                               \"-gnaty-e \"                 &\n                                             \"VTABS \"                       &\n                                                \"-gnatyf \"                  &\n+                                            \"NOVTABS \"                     &\n+                                               \"-gnaty-f \"                 &\n                                             \"GNAT \"                        &\n                                                \"-gnatyg \"                  &\n                                             \"HTABS \"                       &\n                                                \"-gnatyh \"                  &\n+                                            \"NOHTABS \"                     &\n+                                               \"-gnaty-h \"                 &\n                                             \"IF_THEN \"                     &\n                                                \"-gnatyi \"                  &\n+                                            \"NOIF_THEN \"                   &\n+                                               \"-gnaty-i \"                 &\n                                             \"KEYWORD \"                     &\n                                                \"-gnatyk \"                  &\n+                                            \"NOKEYWORD \"                   &\n+                                               \"-gnaty-k \"                 &\n                                             \"LAYOUT \"                      &\n                                                \"-gnatyl \"                  &\n+                                            \"NOLAYOUT \"                    &\n+                                               \"-gnaty-l \"                 &\n                                             \"LINE_LENGTH \"                 &\n                                                \"-gnatym \"                  &\n+                                            \"NOLINE_LENGTH \"               &\n+                                               \"-gnaty-m \"                 &\n                                             \"MODE_IN \"                     &\n                                                \"-gnatyI \"                  &\n+                                            \"NOMODE_IN \"                   &\n+                                               \"-gnaty-I \"                 &\n                                             \"NONE \"                        &\n                                                \"-gnatyN \"                  &\n                                             \"STANDARD_CASING \"             &\n                                                \"-gnatyn \"                  &\n+                                            \"NOSTANDARD_CASING \"           &\n+                                               \"-gnaty-n \"                 &\n                                             \"ORDERED_SUBPROGRAMS \"         &\n                                                \"-gnatyo \"                  &\n+                                            \"NOORDERED_SUBPROGRAMS \"       &\n+                                               \"-gnaty-o \"                 &\n                                             \"PRAGMA \"                      &\n                                                \"-gnatyp \"                  &\n+                                            \"NOPRAGMA \"                    &\n+                                               \"-gnaty-p \"                 &\n                                             \"REFERENCES \"                  &\n                                                \"-gnatyr \"                  &\n+                                            \"NOREFERENCES \"                &\n+                                               \"-gnaty-r \"                 &\n                                             \"SPECS \"                       &\n                                                \"-gnatys \"                  &\n+                                            \"NOSPECS \"                     &\n+                                               \"-gnaty-s \"                 &\n                                             \"STATEMENTS_AFTER_THEN_ELSE \"  &\n                                                \"-gnatyS \"                  &\n+                                            \"NOSTATEMENTS_AFTER_THEN_ELSE \" &\n+                                               \"-gnaty-S \"                 &\n                                             \"TOKEN \"                       &\n                                                \"-gnatyt \"                  &\n+                                            \"NOTOKEN \"                     &\n+                                               \"-gnaty-t \"                 &\n                                             \"UNNECESSARY_BLANK_LINES \"     &\n                                                \"-gnatyu \"                  &\n+                                            \"NOUNNECESSARY_BLANK_LINES \"   &\n+                                               \"-gnaty-u \"                 &\n                                             \"XTRA_PARENS \"                 &\n-                                               \"-gnatyx \";\n+                                               \"-gnaty-x \"                 &\n+                                            \"NOXTRA_PARENS \"               &\n+                                               \"-gnaty-x \";\n    --        /NOSTYLE_CHECKS (D)\n    --        /STYLE_CHECKS[=(keyword,[...])]\n    --\n@@ -2531,6 +2653,14 @@ package VMS_Data is\n                                             \"!-gnatg,!-gnaty*\";\n    --  NODOC (see /STYLE_CHECKS)\n \n+   S_GCC_Subdirs : aliased constant S := \"/SUBDIRS=<\"                      &\n+                                            \"--subdirs=>\";\n+   --        /SUBDIRS=dir\n+   --\n+   --   The actual directories (object, exec, library, ...) are subdirectories\n+   --   of the directory specified in the project file. If the subdirectory\n+   --   does not exist, it is created automatically.\n+\n    S_GCC_Symbol  : aliased constant S := \"/SYMBOL_PREPROCESSING=\" & '\"'    &\n                                             \"-gnateD\" & '\"';\n    --        /SYMBOL_PREPROCESSING=\"symbol=value\"\n@@ -2648,6 +2778,10 @@ package VMS_Data is\n                                                \"-gnatVc \"                  &\n                                             \"NOCOPIES \"                    &\n                                                \"-gnatVC \"                  &\n+                                            \"COMPONENTS \"                  &\n+                                               \"-gnatVe \"                  &\n+                                            \"NOCOMPONENTS \"                &\n+                                               \"-gnatVE \"                  &\n                                             \"FLOATS \"                      &\n                                                \"-gnatVf \"                  &\n                                             \"NOFLOATS \"                    &\n@@ -2738,6 +2872,8 @@ package VMS_Data is\n                                                \"!-gnatws,!-gnatwe \"        &\n                                             \"ALL \"                         &\n                                                \"-gnatwa \"                  &\n+                                            \"EVERY \"                       &\n+                                               \"-gnatw.e \"                 &\n                                             \"OPTIONAL \"                    &\n                                                \"-gnatwa \"                  &\n                                             \"NOOPTIONAL \"                  &\n@@ -2816,6 +2952,10 @@ package VMS_Data is\n                                                \"-gnatwP \"                  &\n                                             \"MISSING_PARENS \"              &\n                                                \"-gnatwq \"                  &\n+                                            \"PARAMETER_ORDER \"             &\n+                                               \"-gnatw.p \"                 &\n+                                            \"NOPARAMETER_ORDER \"           &\n+                                               \"-gnatw.P \"                 &\n                                             \"NOMISSING_PARENS \"            &\n                                                \"-gnatwQ \"                  &\n                                             \"REDUNDANT \"                   &\n@@ -2895,6 +3035,10 @@ package VMS_Data is\n    --                           ELABORATION. All other optional Ada\n    --                           warnings are turned on.\n    --\n+   --   EVERY                   Activate every optional warning.\n+   --                           Activates all optional warnings, including\n+   --                           those listed above as exceptions for ALL.\n+   --\n    --   NOALL                   Suppress all optional errors.\n    --                           Suppresses all optional warning messages\n    --                           that can be activated by option ALL.\n@@ -3140,6 +3284,12 @@ package VMS_Data is\n    --\n    --   Inhibit all warning messages of the GCC back-end.\n \n+   S_GCC_All_Back : aliased constant S := \"/ALL_BACK_END_WARNINGS \"        &\n+                                            \"-Wall\";\n+   --        /ALL_BACK_END_WARNINGS\n+   --\n+   --   Activate all warning messages of the GCC back-end.\n+\n    S_GCC_Wide    : aliased constant S := \"/WIDE_CHARACTER_ENCODING=\"       &\n                                              \"BRACKETS \"                   &\n                                                 \"-gnatWb \"                 &\n@@ -3287,6 +3437,7 @@ package VMS_Data is\n                      S_GCC_Extend  'Access,\n                      S_GCC_Ext     'Access,\n                      S_GCC_File    'Access,\n+                     S_GCC_Follow  'Access,\n                      S_GCC_Force   'Access,\n                      S_GCC_Full    'Access,\n                      S_GCC_GNAT    'Access,\n@@ -3323,6 +3474,7 @@ package VMS_Data is\n                      S_GCC_Search  'Access,\n                      S_GCC_Style   'Access,\n                      S_GCC_StyleX  'Access,\n+                     S_GCC_Subdirs 'Access,\n                      S_GCC_Symbol  'Access,\n                      S_GCC_Syntax  'Access,\n                      S_GCC_Table   'Access,\n@@ -3340,6 +3492,7 @@ package VMS_Data is\n                      S_GCC_Wide    'Access,\n                      S_GCC_WideX   'Access,\n                      S_GCC_No_Back 'Access,\n+                     S_GCC_All_Back'Access,\n                      S_GCC_Xdebug  'Access,\n                      S_GCC_Xref    'Access);\n \n@@ -3349,7 +3502,7 @@ package VMS_Data is\n \n    S_Elim_Add    : aliased constant S := \"/ADD_PROJECT_SEARCH_DIR=*\"       &\n                                            \"-aP*\";\n-   --        /ADD_PROJECT_SEARCH_PATH==(directory[,...])\n+   --        /ADD_PROJECT_SEARCH_PATH=(directory[,...])\n    --\n    --   Add directories to the project search path.\n \n@@ -3402,6 +3555,13 @@ package VMS_Data is\n    --   Example:\n    --      /EXTERNAL_REFERENCE=\"DEBUG=TRUE\"\n \n+   S_Elim_Follow  : aliased constant S := \"/FOLLOW_LINKS_FOR_FILES \"       &\n+                                            \"-eL\";\n+   --        /NOFOLLOW_LINKS_FOR_FILES (D)\n+   --        /FOLLOW_LINKS_FOR_FILES\n+   --\n+   --    Follow links when parsing project files\n+\n    S_Elim_GNATMAKE : aliased constant S := \"/GNATMAKE=@\"                   &\n                                             \"--GNATMAKE=@\";\n    --        /GNATMAKE=path_name\n@@ -3452,6 +3612,14 @@ package VMS_Data is\n    --\n    --   When looking for source files also look in the specified directories.\n \n+   S_Elim_Subdirs : aliased constant S := \"/SUBDIRS=<\"                     &\n+                                             \"--subdirs=>\";\n+   --        /SUBDIRS=dir\n+   --\n+   --   The actual directories (object, exec, library, ...) are subdirectories\n+   --   of the directory specified in the project file. If the subdirectory\n+   --   does not exist, it is created automatically.\n+\n    S_Elim_Verb   : aliased constant S := \"/VERBOSE \"                       &\n                                             \"-v\";\n    --        /NOVERBOSE (D)\n@@ -3470,11 +3638,13 @@ package VMS_Data is\n                       S_Elim_Config  'Access,\n                       S_Elim_Current 'Access,\n                       S_Elim_Ext     'Access,\n+                      S_Elim_Follow  'Access,\n                       S_Elim_GNATMAKE'Access,\n                       S_Elim_Mess    'Access,\n                       S_Elim_Project 'Access,\n                       S_Elim_Quiet   'Access,\n                       S_Elim_Search  'Access,\n+                      S_Elim_Subdirs 'Access,\n                       S_Elim_Verb    'Access);\n \n    ----------------------------\n@@ -3483,7 +3653,7 @@ package VMS_Data is\n \n    S_Find_Add     : aliased constant S := \"/ADD_PROJECT_SEARCH_DIR=*\"      &\n                                             \"-aP*\";\n-   --        /ADD_PROJECT_SEARCH_PATH==(directory[,...])\n+   --        /ADD_PROJECT_SEARCH_PATH=(directory[,...])\n    --\n    --   Add directories to the project search path.\n \n@@ -3524,6 +3694,13 @@ package VMS_Data is\n    --   Example:\n    --      /EXTERNAL_REFERENCE=\"DEBUG=TRUE\"\n \n+   S_Find_Follow  : aliased constant S := \"/FOLLOW_LINKS_FOR_FILES \"       &\n+                                            \"-eL\";\n+   --        /NOFOLLOW_LINKS_FOR_FILES (D)\n+   --        /FOLLOW_LINKS_FOR_FILES\n+   --\n+   --    Follow links when parsing project files\n+\n    S_Find_Full    : aliased constant S := \"/FULL_PATHNAME \"                &\n                                             \"-f\";\n    --        /NOFULL_PATHNAME (D)\n@@ -3639,6 +3816,14 @@ package VMS_Data is\n    --   The order in which source file search is undertaken is the same as for\n    --   MAKE.\n \n+   S_Find_Subdirs : aliased constant S := \"/SUBDIRS=<\"                     &\n+                                             \"--subdirs=>\";\n+   --        /SUBDIRS=dir\n+   --\n+   --   The actual directories (object, exec, library, ...) are subdirectories\n+   --   of the directory specified in the project file. If the subdirectory\n+   --   does not exist, it is created automatically.\n+\n    S_Find_Types   : aliased constant S := \"/TYPE_HIERARCHY \"               &\n                                             \"-t\";\n    --        /NOTYPE_HIERARCHY (D)\n@@ -3655,6 +3840,7 @@ package VMS_Data is\n                       S_Find_Deriv   'Access,\n                       S_Find_Expr    'Access,\n                       S_Find_Ext     'Access,\n+                      S_Find_Follow  'Access,\n                       S_Find_Full    'Access,\n                       S_Find_Ignore  'Access,\n                       S_Find_Mess    'Access,\n@@ -3667,6 +3853,7 @@ package VMS_Data is\n                       S_Find_Ref     'Access,\n                       S_Find_Search  'Access,\n                       S_Find_Source  'Access,\n+                      S_Find_Subdirs 'Access,\n                       S_Find_Types   'Access);\n \n    ------------------------------\n@@ -3693,7 +3880,7 @@ package VMS_Data is\n \n    S_Link_Add     : aliased constant S := \"/ADD_PROJECT_SEARCH_DIR=*\"      &\n                                             \"-aP*\";\n-   --        /ADD_PROJECT_SEARCH_PATH==(directory[,...])\n+   --        /ADD_PROJECT_SEARCH_PATH=(directory[,...])\n    --\n    --   Add directories to the project search path.\n \n@@ -3756,6 +3943,13 @@ package VMS_Data is\n    --   Example:\n    --      /EXTERNAL_REFERENCE=\"DEBUG=TRUE\"\n \n+   S_Link_Follow  : aliased constant S := \"/FOLLOW_LINKS_FOR_FILES \"       &\n+                                            \"-eL\";\n+   --        /NOFOLLOW_LINKS_FOR_FILES (D)\n+   --        /FOLLOW_LINKS_FOR_FILES\n+   --\n+   --    Follow links when parsing project files\n+\n    S_Link_Forlink : aliased constant S := \"/FOR_LINKER=\" & '\"'             &\n                                             \"--for-linker=\" & '\"';\n    --        /FOR_LINKER=<string>\n@@ -3866,6 +4060,14 @@ package VMS_Data is\n    --\n    --   Indicate to the linker that the link is static.\n \n+   S_Link_Subdirs : aliased constant S := \"/SUBDIRS=<\"                     &\n+                                             \"--subdirs=>\";\n+   --        /SUBDIRS=dir\n+   --\n+   --   The actual directories (object, exec, library, ...) are subdirectories\n+   --   of the directory specified in the project file. If the subdirectory\n+   --   does not exist, it is created automatically.\n+\n    S_Link_Verb    : aliased constant S := \"/VERBOSE \"                      &\n                                             \"-v\";\n    --        /NOVERBOSE (D)\n@@ -3888,6 +4090,7 @@ package VMS_Data is\n                       S_Link_Nodebug 'Access,\n                       S_Link_Execut  'Access,\n                       S_Link_Ext     'Access,\n+                      S_Link_Follow  'Access,\n                       S_Link_Forlink 'Access,\n                       S_Link_Force   'Access,\n                       S_Link_Ident   'Access,\n@@ -3900,6 +4103,7 @@ package VMS_Data is\n                       S_Link_Project 'Access,\n                       S_Link_Return  'Access,\n                       S_Link_Static  'Access,\n+                      S_Link_Subdirs 'Access,\n                       S_Link_Verb    'Access,\n                       S_Link_ZZZZZ   'Access);\n \n@@ -3909,7 +4113,7 @@ package VMS_Data is\n \n    S_List_Add     : aliased constant S := \"/ADD_PROJECT_SEARCH_DIR=*\"      &\n                                             \"-aP*\";\n-   --        /ADD_PROJECT_SEARCH_PATH==(directory[,...])\n+   --        /ADD_PROJECT_SEARCH_PATH=(directory[,...])\n    --\n    --   Add directories to the project search path.\n \n@@ -3959,6 +4163,13 @@ package VMS_Data is\n    --   Take as arguments the files that are listed in the specified\n    --   text file.\n \n+   S_List_Follow  : aliased constant S := \"/FOLLOW_LINKS_FOR_FILES \"       &\n+                                            \"-eL\";\n+   --        /NOFOLLOW_LINKS_FOR_FILES (D)\n+   --        /FOLLOW_LINKS_FOR_FILES\n+   --\n+   --    Follow links when parsing project files\n+\n    S_List_Mess    : aliased constant S := \"/MESSAGES_PROJECT_FILE=\"        &\n                                             \"DEFAULT \"                     &\n                                                \"-vP0 \"                     &\n@@ -4044,6 +4255,14 @@ package VMS_Data is\n    --\n    --   When looking for source files also look in the specified directories.\n \n+   S_List_Subdirs : aliased constant S := \"/SUBDIRS=<\"                     &\n+                                             \"--subdirs=>\";\n+   --        /SUBDIRS=dir\n+   --\n+   --   The actual directories (object, exec, library, ...) are subdirectories\n+   --   of the directory specified in the project file. If the subdirectory\n+   --   does not exist, it is created automatically.\n+\n    List_Switches : aliased constant Switches :=\n                      (S_List_Add     'Access,\n                       S_List_All     'Access,\n@@ -4052,13 +4271,15 @@ package VMS_Data is\n                       S_List_Depend  'Access,\n                       S_List_Ext     'Access,\n                       S_List_Files   'Access,\n+                      S_List_Follow  'Access,\n                       S_List_Mess    'Access,\n                       S_List_Nostinc 'Access,\n                       S_List_Object  'Access,\n                       S_List_Output  'Access,\n                       S_List_Project 'Access,\n                       S_List_Search  'Access,\n-                      S_List_Source  'Access);\n+                      S_List_Source  'Access,\n+                      S_List_Subdirs 'Access);\n \n    ----------------------------\n    -- Switches for GNAT MAKE --\n@@ -4110,7 +4331,7 @@ package VMS_Data is\n \n    S_Make_Add     : aliased constant S := \"/ADD_PROJECT_SEARCH_DIR=*\"      &\n                                             \"-aP*\";\n-   --        /ADD_PROJECT_SEARCH_PATH==(directory[,...])\n+   --        /ADD_PROJECT_SEARCH_PATH=(directory[,...])\n    --\n    --   Add directories to the project search path.\n \n@@ -4251,6 +4472,13 @@ package VMS_Data is\n    --   Example:\n    --      /EXTERNAL_REFERENCE=\"DEBUG=TRUE\"\n \n+   S_Make_Follow  : aliased constant S := \"/FOLLOW_LINKS_FOR_FILES \"       &\n+                                            \"-eL\";\n+   --        /NOFOLLOW_LINKS_FOR_FILES (D)\n+   --        /FOLLOW_LINKS_FOR_FILES\n+   --\n+   --    Follow links when parsing project files\n+\n    S_Make_Force   : aliased constant S := \"/FORCE_COMPILE \"                &\n                                             \"-f\";\n    --        /NOFORCE_COMPILE (D)\n@@ -4513,6 +4741,14 @@ package VMS_Data is\n    --   Output the commands for the compiler, the binder and the linker\n    --   on SYS$OUTPUT, instead of SYS$ERROR.\n \n+   S_Make_Subdirs : aliased constant S := \"/SUBDIRS=<\"                     &\n+                                             \"--subdirs=>\";\n+   --        /SUBDIRS=dir\n+   --\n+   --   The actual directories (object, exec, library, ...) are subdirectories\n+   --   of the directory specified in the project file. If the subdirectory\n+   --   does not exist, it is created automatically.\n+\n    S_Make_Switch  : aliased constant S := \"/SWITCH_CHECK \"                 &\n                                             \"-s\";\n    --        /NOSWITCH_CHECK (D)\n@@ -4568,6 +4804,7 @@ package VMS_Data is\n                       S_Make_Doobj   'Access,\n                       S_Make_Execut  'Access,\n                       S_Make_Ext     'Access,\n+                      S_Make_Follow  'Access,\n                       S_Make_Force   'Access,\n                       S_Make_Full    'Access,\n                       S_Make_Hi_Verb 'Access,\n@@ -4598,6 +4835,7 @@ package VMS_Data is\n                       S_Make_Skip    'Access,\n                       S_Make_Source  'Access,\n                       S_Make_Stand   'Access,\n+                      S_Make_Subdirs 'Access,\n                       S_Make_Switch  'Access,\n                       S_Make_Unique  'Access,\n                       S_Make_Use_Map 'Access,\n@@ -4609,7 +4847,7 @@ package VMS_Data is\n \n    S_Metric_Add     : aliased constant S := \"/ADD_PROJECT_SEARCH_DIR=*\"    &\n                                               \"-aP*\";\n-   --        /ADD_PROJECT_SEARCH_PATH==(directory[,...])\n+   --        /ADD_PROJECT_SEARCH_PATH=(directory[,...])\n    --\n    --   Add directories to the project search path.\n \n@@ -4699,9 +4937,9 @@ package VMS_Data is\n    --       /SYNTAX_METRICS(option, option ...)\n    --\n    --   Specifies the syntax element metrics to be computed (if at least one\n-   --   positive syntax element metric, line metric or complexity metric is\n-   --   specified then only explicitly specified specified syntax element\n-   --   metrics are computed and reported)\n+   --   positive syntax element metric, line metric, complexity or coupling\n+   --   metric is specified then only explicitly specified specified syntax\n+   --   element metrics are computed and reported)\n    --\n    --   option may be one of the following:\n    --\n@@ -4833,9 +5071,9 @@ package VMS_Data is\n    --      /LINE_COUNT_METRICS=(option, option ...)\n \n    --   Specifies the line metrics to be computed (if at least one positive\n-   --   syntax element metric, line metric or complexity metric is specified\n-   --   then only explicitly specified specified line metrics are computed and\n-   --   reported)\n+   --   syntax element metric, line metric, complexity or coupling metric is\n+   --   specified then only explicitly specified specified line metrics are\n+   --   computed and reported)\n    --\n    --   option may be one of the following:\n    --\n@@ -4888,9 +5126,9 @@ package VMS_Data is\n    --      /COMPLEXITY_METRICS=(option, option ...)\n \n    --   Specifies the complexity metrics to be computed (if at least one\n-   --   positive syntax element metric, line metric or complexity metric is\n-   --   specified then only explicitly specified specified line metrics are\n-   --   computed and reported)\n+   --   positive syntax element metric, line metric, complexity or coupling\n+   --   metric is specified then only explicitly specified specified complexity\n+   --   metrics are computed and reported)\n    --\n    --   option may be one of the following:\n    --\n@@ -4910,6 +5148,54 @@ package VMS_Data is\n    --\n    --   All combinations of line metrics options are allowed.\n \n+   S_Metric_Coupling : aliased constant S := \"/COUPLING_METRICS=\"             &\n+                                           \"ALL_ON \"                          &\n+                                           \"--coupling-all \"                  &\n+                                           \"ALL_OFF \"                         &\n+                                           \"--no-counling-all \"               &\n+                                           \"PACKAGE_EFFERENT_ON \"             &\n+                                           \"--package-efferent-coupling \"     &\n+                                           \"PACKAGE_EFFERENT_OFF \"            &\n+                                           \"--no-package-efferent-coupling \"  &\n+                                           \"PACKAGE_AFFERENT_ON \"             &\n+                                           \"--package-afferent-coupling \"     &\n+                                           \"PACKAGE_AFFERENT_OFF \"            &\n+                                           \"--no-package-afferent-coupling \"  &\n+                                           \"CATEGORY_EFFERENT_ON \"            &\n+                                           \"--category-efferent-coupling \"    &\n+                                           \"CATEGORY_EFFERENT_OFF \"           &\n+                                           \"--no-category-efferent-coupling \" &\n+                                           \"CATEGORY_AFFERENT_ON \"            &\n+                                           \"--category-afferent-coupling \"    &\n+                                           \"CATEGORY_AFFERENT_OFF \"           &\n+                                           \"--no-category-afferent-coupling\";\n+\n+   --      /COUPLING_METRICS=(option, option ...)\n+\n+   --   Specifies the coupling metrics to be computed.\n+   --\n+   --   option may be one of the following:\n+   --\n+   --     ALL_ON                   All the coupling metrics are computed\n+   --     ALL_OFF (D)              None of coupling metrics is computed\n+   --     PACKAGE_EFFERENT_ON      Compute package efferent coupling\n+   --     PACKAGE_EFFERENT_OFF     Do not compute package efferent coupling\n+   --     PACKAGE_AFFERENT_ON      Compute package afferent coupling\n+   --     PACKAGE_AFFERENT_OFF     Do not compute package afferent coupling\n+   --     CATEGORY_EFFERENT_ON     Compute category efferent coupling\n+   --     CATEGORY_EFFERENT_OFF    Do not compute category efferent coupling\n+   --     CATEGORY_AFFERENT_ON     Compute category afferent coupling\n+   --     CATEGORY_AFFERENT_OFF    Do not compute category afferent coupling\n+   --\n+   --   All combinations of coupling metrics options are allowed.\n+\n+   S_Metric_Follow : aliased constant S := \"/FOLLOW_LINKS_FOR_FILES \"      &\n+                                             \"-eL\";\n+   --        /NOFOLLOW_LINKS_FOR_FILES (D)\n+   --        /FOLLOW_LINKS_FOR_FILES\n+   --\n+   --    Follow links when parsing project files\n+\n    S_Metric_No_Local : aliased constant S := \"/NO_LOCAL_DETAILS \"          &\n                                              \"-nolocal\";\n    --        /LOCAL_DETAILS (D)\n@@ -4961,6 +5247,14 @@ package VMS_Data is\n    --   the number of program units left to be processed. This option turns\n    --   this trace off.\n \n+   S_Metric_Subdirs : aliased constant S := \"/SUBDIRS=<\"                   &\n+                                               \"--subdirs=>\";\n+   --        /SUBDIRS=dir\n+   --\n+   --   The actual directories (object, exec, library, ...) are subdirectories\n+   --   of the directory specified in the project file. If the subdirectory\n+   --   does not exist, it is created automatically.\n+\n    S_Metric_Suffix  : aliased constant S := \"/SUFFIX_DETAILS=\" & '\"'       &\n                                              \"-o\" & '\"';\n    --        /SUFFIX_DETAILS=suffix\n@@ -5001,11 +5295,13 @@ package VMS_Data is\n                        (S_Metric_Add              'Access,\n                         S_Metric_All_Prjs         'Access,\n                         S_Metric_Complexity       'Access,\n+                        S_Metric_Coupling         'Access,\n                         S_Metric_Debug            'Access,\n                         S_Metric_Direct           'Access,\n                         S_Metric_Element          'Access,\n                         S_Metric_Ext              'Access,\n                         S_Metric_Files            'Access,\n+                        S_Metric_Follow           'Access,\n                         S_Metric_Format           'Access,\n                         S_Metric_Globout          'Access,\n                         S_Metric_Line             'Access,\n@@ -5016,6 +5312,7 @@ package VMS_Data is\n                         S_Metric_Project          'Access,\n                         S_Metric_Quiet            'Access,\n                         S_Metric_Suffix           'Access,\n+                        S_Metric_Subdirs          'Access,\n                         S_Metric_Syntax           'Access,\n                         S_Metric_Suppress         'Access,\n                         S_Metric_Verbose          'Access,\n@@ -5061,6 +5358,13 @@ package VMS_Data is\n    --   qualifiers /SOURCE_DIRS as there are non empty lines in the specified\n    --   text file.\n \n+   S_Name_Follow  : aliased constant S := \"/FOLLOW_LINKS_FOR_FILES \"       &\n+                                            \"-eL\";\n+   --        /NOFOLLOW_LINKS_FOR_FILES (D)\n+   --        /FOLLOW_LINKS_FOR_FILES\n+   --\n+   --    Follow links when parsing project files\n+\n    S_Name_Frng    : aliased constant S := \"/FOREIGN_PATTERN=\" & '\"'        &\n                                             \"-f\" & '\"';\n    --        /FOREIGN_PATTERN=<string>\n@@ -5092,6 +5396,14 @@ package VMS_Data is\n    --   one qualifier /PROJECT_FILE. When a qualifier /PROJECT_DILE is\n    --   specified, no qualifier /CONFIG_FILE may be specified.\n \n+   S_Name_Subdirs : aliased constant S := \"/SUBDIRS=<\"                     &\n+                                             \"--subdirs=>\";\n+   --        /SUBDIRS=dir\n+   --\n+   --   The actual directories (object, exec, library, ...) are subdirectories\n+   --   of the directory specified in the project file. If the subdirectory\n+   --   does not exist, it is created automatically.\n+\n    S_Name_Verbose : aliased constant S := \"/VERBOSE \"                      &\n                                             \"-v\";\n    --        /NOVERBOSE (D)\n@@ -5117,14 +5429,16 @@ package VMS_Data is\n    --   those whose names end with '_NT.ADA'.\n \n    Name_Switches : aliased constant Switches :=\n-                     (S_Name_Conf         'Access,\n-                      S_Name_Dirs         'Access,\n-                      S_Name_Dfile        'Access,\n-                      S_Name_Frng         'Access,\n-                      S_Name_Help         'Access,\n-                      S_Name_Proj         'Access,\n-                      S_Name_Verbose      'Access,\n-                      S_Name_Excl         'Access);\n+                     (S_Name_Conf    'Access,\n+                      S_Name_Dirs    'Access,\n+                      S_Name_Dfile   'Access,\n+                      S_Name_Follow  'Access,\n+                      S_Name_Frng    'Access,\n+                      S_Name_Help    'Access,\n+                      S_Name_Proj    'Access,\n+                      S_Name_Subdirs 'Access,\n+                      S_Name_Verbose 'Access,\n+                      S_Name_Excl    'Access);\n \n    ----------------------------------\n    -- Switches for GNAT PREPROCESS --\n@@ -5216,7 +5530,7 @@ package VMS_Data is\n \n    S_Pretty_Add    : aliased constant S := \"/ADD_PROJECT_SEARCH_DIR=*\"     &\n                                              \"-aP*\";\n-   --        /ADD_PROJECT_SEARCH_PATH==(directory[,...])\n+   --        /ADD_PROJECT_SEARCH_PATH=(directory[,...])\n    --\n    --   Add directories to the project search path.\n \n@@ -5300,7 +5614,7 @@ package VMS_Data is\n    --\n    --   layout-option may be one of the following:\n    --\n-   --     UNTOUCHED\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd All the comments remain unchanged\n+   --     UNTOUCHED           All the comments remain unchanged\n    --     DEFAULT (D)         GNAT style comment line indentation\n    --     STANDARD_INDENT     Standard comment line indentation\n    --     GNAT_BEGINNING      GNAT style comment beginning\n@@ -5537,6 +5851,13 @@ package VMS_Data is\n    --   Take as arguments the files that are listed in the specified\n    --   text file.\n \n+   S_Pretty_Follow : aliased constant S := \"/FOLLOW_LINKS_FOR_FILES \"      &\n+                                             \"-eL\";\n+   --        /NOFOLLOW_LINKS_FOR_FILES (D)\n+   --        /FOLLOW_LINKS_FOR_FILES\n+   --\n+   --    Follow links when parsing project files\n+\n    S_Pretty_Forced    : aliased constant S := \"/FORCED_OUTPUT=@\"           &\n                                                  \"-of@\";\n    --        /FORCED_OUTPUT=file\n@@ -5630,7 +5951,7 @@ package VMS_Data is\n    --\n    --      MIXED_CASE        Names are in mixed case.\n \n-   S_Pretty_No_Backup : aliased constant S := \"/NO_BACKUP \"                &\n+   S_Pretty_Replace_No_Backup : aliased constant S := \"/REPLACE_NO_BACKUP \" &\n                                                  \"-rnb\";\n    --        /REPLACE_NO_BACKUP\n    --\n@@ -5732,6 +6053,14 @@ package VMS_Data is\n    --\n    --   Redirect the output to the standard output.\n \n+   S_Pretty_Subdirs : aliased constant S := \"/SUBDIRS=<\"                   &\n+                                               \"--subdirs=>\";\n+   --        /SUBDIRS=dir\n+   --\n+   --   The actual directories (object, exec, library, ...) are subdirectories\n+   --   of the directory specified in the project file. If the subdirectory\n+   --   does not exist, it is created automatically.\n+\n    S_Pretty_Verbose   : aliased constant S := \"/VERBOSE \"                  &\n                                               \"-v\";\n    --        /NOVERBOSE (D)\n@@ -5750,47 +6079,49 @@ package VMS_Data is\n    --   By default such warnings are not activated.\n \n    Pretty_Switches : aliased constant Switches :=\n-                       (S_Pretty_Add            'Access,\n-                        S_Pretty_Align          'Access,\n-                        S_Pretty_All_Prjs       'Access,\n-                        S_Pretty_Attrib         'Access,\n-                        S_Pretty_Comments       'Access,\n-                        S_Pretty_Compact_Is     'Access,\n-                        S_Pretty_Config         'Access,\n-                        S_Pretty_Constr         'Access,\n-                        S_Pretty_Comind         'Access,\n-                        S_Pretty_Current        'Access,\n-                        S_Pretty_Dico           'Access,\n-                        S_Pretty_Eol            'Access,\n-                        S_Pretty_Ext            'Access,\n-                        S_Pretty_Encoding       'Access,\n-                        S_Pretty_Files          'Access,\n-                        S_Pretty_Forced         'Access,\n-                        S_Pretty_Formfeed       'Access,\n-                        S_Pretty_Indent         'Access,\n-                        S_Pretty_Keyword        'Access,\n-                        S_Pretty_Maxlen         'Access,\n-                        S_Pretty_Maxind         'Access,\n-                        S_Pretty_Mess           'Access,\n-                        S_Pretty_Names          'Access,\n-                        S_Pretty_No_Backup      'Access,\n-                        S_Pretty_No_Labels      'Access,\n-                        S_Pretty_Notabs         'Access,\n-                        S_Pretty_Output         'Access,\n-                        S_Pretty_Override       'Access,\n-                        S_Pretty_Pragma         'Access,\n-                        S_Pretty_Replace        'Access,\n-                        S_Pretty_Project        'Access,\n-                        S_Pretty_RTS            'Access,\n-                        S_Pretty_Search         'Access,\n-                        S_Pretty_Sep_Loop_Then  'Access,\n-                        S_Pretty_N_Sep_Loop_Then'Access,\n-                        S_Pretty_Use_On_New_Line'Access,\n-                        S_Pretty_Stnm_On_Nw_Line'Access,\n-                        S_Pretty_Specific       'Access,\n-                        S_Pretty_Standard       'Access,\n-                        S_Pretty_Verbose        'Access,\n-                        S_Pretty_Warnings       'Access);\n+                       (S_Pretty_Add              'Access,\n+                        S_Pretty_Align            'Access,\n+                        S_Pretty_All_Prjs         'Access,\n+                        S_Pretty_Attrib           'Access,\n+                        S_Pretty_Comments         'Access,\n+                        S_Pretty_Compact_Is       'Access,\n+                        S_Pretty_Config           'Access,\n+                        S_Pretty_Constr           'Access,\n+                        S_Pretty_Comind           'Access,\n+                        S_Pretty_Current          'Access,\n+                        S_Pretty_Dico             'Access,\n+                        S_Pretty_Eol              'Access,\n+                        S_Pretty_Ext              'Access,\n+                        S_Pretty_Encoding         'Access,\n+                        S_Pretty_Files            'Access,\n+                        S_Pretty_Follow           'Access,\n+                        S_Pretty_Forced           'Access,\n+                        S_Pretty_Formfeed         'Access,\n+                        S_Pretty_Indent           'Access,\n+                        S_Pretty_Keyword          'Access,\n+                        S_Pretty_Maxlen           'Access,\n+                        S_Pretty_Maxind           'Access,\n+                        S_Pretty_Mess             'Access,\n+                        S_Pretty_Names            'Access,\n+                        S_Pretty_No_Labels        'Access,\n+                        S_Pretty_Notabs           'Access,\n+                        S_Pretty_Output           'Access,\n+                        S_Pretty_Override         'Access,\n+                        S_Pretty_Pragma           'Access,\n+                        S_Pretty_Replace          'Access,\n+                        S_Pretty_Replace_No_Backup'Access,\n+                        S_Pretty_Project          'Access,\n+                        S_Pretty_RTS              'Access,\n+                        S_Pretty_Search           'Access,\n+                        S_Pretty_Sep_Loop_Then    'Access,\n+                        S_Pretty_N_Sep_Loop_Then  'Access,\n+                        S_Pretty_Subdirs          'Access,\n+                        S_Pretty_Use_On_New_Line  'Access,\n+                        S_Pretty_Stnm_On_Nw_Line  'Access,\n+                        S_Pretty_Specific         'Access,\n+                        S_Pretty_Standard         'Access,\n+                        S_Pretty_Verbose          'Access,\n+                        S_Pretty_Warnings         'Access);\n \n    ------------------------------\n    -- Switches for GNAT SHARED --\n@@ -5876,7 +6207,7 @@ package VMS_Data is\n \n    S_Stack_Add        : aliased constant S := \"/ADD_PROJECT_SEARCH_DIR=*\"  &\n                                                 \"-aP*\";\n-   --        /ADD_PROJECT_SEARCH_PATH==(directory[,...])\n+   --        /ADD_PROJECT_SEARCH_PATH=(directory[,...])\n    --\n    --   Add directories to the project search path.\n \n@@ -5930,6 +6261,13 @@ package VMS_Data is\n    --   Take as arguments the files that are listed in the specified\n    --   text file.\n \n+   S_Stack_Follow : aliased constant S := \"/FOLLOW_LINKS_FOR_FILES \"       &\n+                                            \"-eL\";\n+   --        /NOFOLLOW_LINKS_FOR_FILES (D)\n+   --        /FOLLOW_LINKS_FOR_FILES\n+   --\n+   --    Follow links when parsing project files\n+\n    S_Stack_Help       : aliased constant S := \"/HELP \"                     &\n                                                 \"-h\";\n    --        /NOHELP (D)\n@@ -5988,6 +6326,14 @@ package VMS_Data is\n    --   Any symbol matching the regular expression will be considered as a\n    --   potential entry point for the analysis.\n \n+   S_Stack_Subdirs : aliased constant S := \"/SUBDIRS=<\"                    &\n+                                              \"--subdirs=>\";\n+   --        /SUBDIRS=dir\n+   --\n+   --   The actual directories (object, exec, library, ...) are subdirectories\n+   --   of the directory specified in the project file. If the subdirectory\n+   --   does not exist, it is created automatically.\n+\n    S_Stack_Unbounded  : aliased constant S := \"/UNBOUNDED=#\"               &\n                                                 \"-d#\";\n    --        /UNBOUNDED=nnn\n@@ -6044,13 +6390,15 @@ package VMS_Data is\n                        S_Stack_Directory  'Access,\n                        S_Stack_Entries    'Access,\n                        S_Stack_Files      'Access,\n+                       S_Stack_Follow     'Access,\n                        S_Stack_Help       'Access,\n                        S_Stack_List       'Access,\n                        S_Stack_Order      'Access,\n                        S_Stack_Path       'Access,\n                        S_Stack_Project    'Access,\n                        S_Stack_Output     'Access,\n                        S_Stack_Regexp     'Access,\n+                       S_Stack_Subdirs    'Access,\n                        S_Stack_Unbounded  'Access,\n                        S_Stack_Unknown    'Access,\n                        S_Stack_Verbose    'Access,\n@@ -6062,7 +6410,7 @@ package VMS_Data is\n \n    S_Stub_Add     : aliased constant S := \"/ADD_PROJECT_SEARCH_DIR=*\"      &\n                                             \"-aP*\";\n-   --        /ADD_PROJECT_SEARCH_PATH==(directory[,...])\n+   --        /ADD_PROJECT_SEARCH_PATH=(directory[,...])\n    --\n    --   Add directories to the project search path.\n \n@@ -6090,6 +6438,13 @@ package VMS_Data is\n    --   Example:\n    --      /EXTERNAL_REFERENCE=\"DEBUG=TRUE\"\n \n+   S_Stub_Follow  : aliased constant S := \"/FOLLOW_LINKS_FOR_FILES \"       &\n+                                            \"-eL\";\n+   --        /NOFOLLOW_LINKS_FOR_FILES (D)\n+   --        /FOLLOW_LINKS_FOR_FILES\n+   --\n+   --    Follow links when parsing project files\n+\n    S_Stub_Full    : aliased constant S := \"/FULL \"                         &\n                                             \"-f\";\n    --        /NOFULL (D)\n@@ -6202,6 +6557,14 @@ package VMS_Data is\n    --\n    --    When looking for source files also look in directories specified.\n \n+   S_Stub_Subdirs : aliased constant S := \"/SUBDIRS=<\"                     &\n+                                             \"--subdirs=>\";\n+   --        /SUBDIRS=dir\n+   --\n+   --   The actual directories (object, exec, library, ...) are subdirectories\n+   --   of the directory specified in the project file. If the subdirectory\n+   --   does not exist, it is created automatically.\n+\n    S_Stub_Tree    : aliased constant S := \"/TREE_FILE=\"                    &\n                                             \"OVERWRITE \"                   &\n                                                \"-t \"                       &\n@@ -6246,6 +6609,7 @@ package VMS_Data is\n                       S_Stub_Config     'Access,\n                       S_Stub_Current    'Access,\n                       S_Stub_Ext        'Access,\n+                      S_Stub_Follow     'Access,\n                       S_Stub_Full       'Access,\n                       S_Stub_Header     'Access,\n                       S_Stub_Header_File'Access,\n@@ -6257,6 +6621,7 @@ package VMS_Data is\n                       S_Stub_Project    'Access,\n                       S_Stub_Quiet      'Access,\n                       S_Stub_Search     'Access,\n+                      S_Stub_Subdirs    'Access,\n                       S_Stub_Tree       'Access,\n                       S_Stub_Verbose    'Access);\n \n@@ -6266,7 +6631,7 @@ package VMS_Data is\n \n    S_Xref_Add     : aliased constant S := \"/ADD_PROJECT_SEARCH_DIR=*\"      &\n                                             \"-aP*\";\n-   --        /ADD_PROJECT_SEARCH_PATH==(directory[,...])\n+   --        /ADD_PROJECT_SEARCH_PATH=(directory[,...])\n    --\n    --   Add directories to the project search path.\n \n@@ -6298,6 +6663,13 @@ package VMS_Data is\n    --   Example:\n    --      /EXTERNAL_REFERENCE=\"DEBUG=TRUE\"\n \n+   S_Xref_Follow  : aliased constant S := \"/FOLLOW_LINKS_FOR_FILES \"       &\n+                                            \"-eL\";\n+   --        /NOFOLLOW_LINKS_FOR_FILES (D)\n+   --        /FOLLOW_LINKS_FOR_FILES\n+   --\n+   --    Follow links when parsing project files\n+\n    S_Xref_Full    : aliased constant S := \"/FULL_PATHNAME \"                &\n                                             \"-f\";\n    --        /NOFULL_PATHNAME (D)\n@@ -6392,6 +6764,14 @@ package VMS_Data is\n    --   The order in which source file search is undertaken is the same as for\n    --   MAKE.\n \n+   S_Xref_Subdirs : aliased constant S := \"/SUBDIRS=<\"                     &\n+                                             \"--subdirs=>\";\n+   --        /SUBDIRS=dir\n+   --\n+   --   The actual directories (object, exec, library, ...) are subdirectories\n+   --   of the directory specified in the project file. If the subdirectory\n+   --   does not exist, it is created automatically.\n+\n    S_Xref_Output  : aliased constant S := \"/UNUSED \"                       &\n                                             \"-u\";\n    --        /SOURCE_SEARCH=(directory,...)\n@@ -6412,6 +6792,7 @@ package VMS_Data is\n                       S_Xref_All     'Access,\n                       S_Xref_Deriv   'Access,\n                       S_Xref_Ext     'Access,\n+                      S_Xref_Follow  'Access,\n                       S_Xref_Full    'Access,\n                       S_Xref_Global  'Access,\n                       S_Xref_Mess    'Access,\n@@ -6422,6 +6803,7 @@ package VMS_Data is\n                       S_Xref_Prj     'Access,\n                       S_Xref_Search  'Access,\n                       S_Xref_Source  'Access,\n+                      S_Xref_Subdirs 'Access,\n                       S_Xref_Output  'Access,\n                       S_Xref_Tags    'Access);\n "}]}