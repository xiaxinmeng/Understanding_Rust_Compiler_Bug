{"sha": "126c1ea158ebd9ecead98bb8ec61e55ba15d57eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI2YzFlYTE1OGViZDllY2VhZDk4YmI4ZWM2MWU1NWJhMTVkNTdlYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-10-16T08:36:06Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-10-16T08:36:06Z"}, "message": "re PR c++/53574 (ICE with -fstack-usage)\n\n\tPR c++/53574\n\t* g++.dg/other/pr53574.C: New test.\n\nFrom-SVN: r253778", "tree": {"sha": "4434db790262e0a46db2f611c6b5089797190051", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4434db790262e0a46db2f611c6b5089797190051"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/126c1ea158ebd9ecead98bb8ec61e55ba15d57eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/126c1ea158ebd9ecead98bb8ec61e55ba15d57eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/126c1ea158ebd9ecead98bb8ec61e55ba15d57eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/126c1ea158ebd9ecead98bb8ec61e55ba15d57eb/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6fba3d61eff769b078ec1cbfcdf21fb1351742f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fba3d61eff769b078ec1cbfcdf21fb1351742f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fba3d61eff769b078ec1cbfcdf21fb1351742f7"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "e2104133d07bec1e30ac12579a0cba11a8779fb7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/126c1ea158ebd9ecead98bb8ec61e55ba15d57eb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/126c1ea158ebd9ecead98bb8ec61e55ba15d57eb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=126c1ea158ebd9ecead98bb8ec61e55ba15d57eb", "patch": "@@ -1,3 +1,8 @@\n+2017-10-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/53574\n+\t* g++.dg/other/pr53574.C: New test.\n+\n 2017-10-16  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/61323"}, {"sha": "cc899a552c8fae41b173d72f822892b213b35300", "filename": "gcc/testsuite/g++.dg/other/pr53574.C", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/126c1ea158ebd9ecead98bb8ec61e55ba15d57eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr53574.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/126c1ea158ebd9ecead98bb8ec61e55ba15d57eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr53574.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr53574.C?ref=126c1ea158ebd9ecead98bb8ec61e55ba15d57eb", "patch": "@@ -0,0 +1,48 @@\n+// PR c++/53574\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-fstack-usage\" }\n+\n+template <typename> struct A { typedef int type; };\n+struct B {\n+  typedef __SIZE_TYPE__ H;\n+};\n+template <typename> class allocator : B {};\n+template <typename _Alloc> struct C {\n+  template <typename T>\n+  static typename T::H foo(T *);\n+  typedef decltype(foo((_Alloc *)0)) H;\n+  template <typename U>\n+  static typename A<H>::type bar(U) { return typename A<H>::type (); }\n+  static int baz(_Alloc p1) { bar(p1); return 0; }\n+};\n+template <typename _Alloc> struct I : C<_Alloc> {};\n+template <typename, typename> struct J {\n+  typedef I<allocator<int>> K;\n+  K k;\n+};\n+struct D : J<int, allocator<int>> {\n+  void fn(int, int) {\n+    K m;\n+    I<K>::baz(m);\n+  }\n+};\n+template <class Ch, class = int, class = int> struct F {\n+  F();\n+  F(const Ch *);\n+  F test();\n+  D d;\n+};\n+int l;\n+struct G {\n+  G(F<char>);\n+};\n+char n;\n+template <class Ch, class Tr, class Alloc> F<Ch, Tr, Alloc>::F(const Ch *) {\n+  test();\n+}\n+template <class Ch, class Tr, class Alloc>\n+F<Ch, Tr, Alloc> F<Ch, Tr, Alloc>::test() {\n+  d.fn(l, 0);\n+  return F<Ch, Tr, Alloc> ();\n+}\n+G fn1() { return G(&n); }"}]}