{"sha": "67cf12a8171399a9e724a7eb6cc80908ed297eaa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdjZjEyYTgxNzEzOTlhOWU3MjRhN2ViNmNjODA5MDhlZDI5N2VhYQ==", "commit": {"author": {"name": "Jonathan Wright", "email": "jonathan.wright@arm.com", "date": "2021-03-18T12:14:48Z"}, "committer": {"name": "Jonathan Wright", "email": "jonathan.wright@arm.com", "date": "2021-04-28T20:13:37Z"}, "message": "aarch64: Update attributes of arm_fp16.h intrinsics\n\nUpdate the attributes of all intrinsics defined in arm_fp16.h to be\nconsistent with the attributes of the intrinsics defined in\narm_neon.h. Specifically, this means updating the attributes from:\n  __extension__ static __inline <type>\n  __attribute__ ((__always_inline__))\nto:\n  __extension__ extern __inline <type>\n  __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n\ngcc/ChangeLog:\n\n2021-03-18  Jonathan Wright  <jonathan.wright@arm.com>\n\n\t* config/aarch64/arm_fp16.h (__attribute__): Make intrinsic\n\tattributes consistent with those defined in arm_neon.h.", "tree": {"sha": "019351c2f87e723935da4bd9399896fd7ba139a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/019351c2f87e723935da4bd9399896fd7ba139a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67cf12a8171399a9e724a7eb6cc80908ed297eaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67cf12a8171399a9e724a7eb6cc80908ed297eaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67cf12a8171399a9e724a7eb6cc80908ed297eaa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67cf12a8171399a9e724a7eb6cc80908ed297eaa/comments", "author": {"login": "jwright-arm", "id": 31624044, "node_id": "MDQ6VXNlcjMxNjI0MDQ0", "avatar_url": "https://avatars.githubusercontent.com/u/31624044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwright-arm", "html_url": "https://github.com/jwright-arm", "followers_url": "https://api.github.com/users/jwright-arm/followers", "following_url": "https://api.github.com/users/jwright-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jwright-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwright-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwright-arm/subscriptions", "organizations_url": "https://api.github.com/users/jwright-arm/orgs", "repos_url": "https://api.github.com/users/jwright-arm/repos", "events_url": "https://api.github.com/users/jwright-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jwright-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwright-arm", "id": 31624044, "node_id": "MDQ6VXNlcjMxNjI0MDQ0", "avatar_url": "https://avatars.githubusercontent.com/u/31624044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwright-arm", "html_url": "https://github.com/jwright-arm", "followers_url": "https://api.github.com/users/jwright-arm/followers", "following_url": "https://api.github.com/users/jwright-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jwright-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwright-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwright-arm/subscriptions", "organizations_url": "https://api.github.com/users/jwright-arm/orgs", "repos_url": "https://api.github.com/users/jwright-arm/repos", "events_url": "https://api.github.com/users/jwright-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jwright-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8456a4cd96823704beec0b863010cd0dcc8dd591", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8456a4cd96823704beec0b863010cd0dcc8dd591", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8456a4cd96823704beec0b863010cd0dcc8dd591"}], "stats": {"total": 267, "additions": 178, "deletions": 89}, "files": [{"sha": "26339533cd6e4878bd3de50a1bb215d244032175", "filename": "gcc/config/aarch64/arm_fp16.h", "status": "modified", "additions": 178, "deletions": 89, "changes": 267, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67cf12a8171399a9e724a7eb6cc80908ed297eaa/gcc%2Fconfig%2Faarch64%2Farm_fp16.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67cf12a8171399a9e724a7eb6cc80908ed297eaa/gcc%2Fconfig%2Faarch64%2Farm_fp16.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_fp16.h?ref=67cf12a8171399a9e724a7eb6cc80908ed297eaa", "patch": "@@ -36,539 +36,628 @@ typedef __fp16 float16_t;\n \n /* ARMv8.2-A FP16 one operand scalar intrinsics.  */\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vabsh_f16 (float16_t __a)\n {\n   return __builtin_aarch64_abshf (__a);\n }\n \n-__extension__ static __inline uint16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline uint16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vceqzh_f16 (float16_t __a)\n {\n   return __builtin_aarch64_cmeqhf_uss (__a, 0.0f);\n }\n \n-__extension__ static __inline uint16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline uint16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcgezh_f16 (float16_t __a)\n {\n   return __builtin_aarch64_cmgehf_uss (__a, 0.0f);\n }\n \n-__extension__ static __inline uint16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline uint16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcgtzh_f16 (float16_t __a)\n {\n   return __builtin_aarch64_cmgthf_uss (__a, 0.0f);\n }\n \n-__extension__ static __inline uint16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline uint16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vclezh_f16 (float16_t __a)\n {\n   return __builtin_aarch64_cmlehf_uss (__a, 0.0f);\n }\n \n-__extension__ static __inline uint16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline uint16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcltzh_f16 (float16_t __a)\n {\n   return __builtin_aarch64_cmlthf_uss (__a, 0.0f);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvth_f16_s16 (int16_t __a)\n {\n   return __builtin_aarch64_floathihf (__a);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvth_f16_s32 (int32_t __a)\n {\n   return __builtin_aarch64_floatsihf (__a);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvth_f16_s64 (int64_t __a)\n {\n   return __builtin_aarch64_floatdihf (__a);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvth_f16_u16 (uint16_t __a)\n {\n   return __builtin_aarch64_floatunshihf_us (__a);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvth_f16_u32 (uint32_t __a)\n {\n   return __builtin_aarch64_floatunssihf_us (__a);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvth_f16_u64 (uint64_t __a)\n {\n   return __builtin_aarch64_floatunsdihf_us (__a);\n }\n \n-__extension__ static __inline int16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline int16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvth_s16_f16 (float16_t __a)\n {\n   return __builtin_aarch64_fix_trunchfhi (__a);\n }\n \n-__extension__ static __inline int32_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline int32_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvth_s32_f16 (float16_t __a)\n {\n   return __builtin_aarch64_fix_trunchfsi (__a);\n }\n \n-__extension__ static __inline int64_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline int64_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvth_s64_f16 (float16_t __a)\n {\n   return __builtin_aarch64_fix_trunchfdi (__a);\n }\n \n-__extension__ static __inline uint16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline uint16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvth_u16_f16 (float16_t __a)\n {\n   return __builtin_aarch64_fixuns_trunchfhi_us (__a);\n }\n \n-__extension__ static __inline uint32_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline uint32_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvth_u32_f16 (float16_t __a)\n {\n   return __builtin_aarch64_fixuns_trunchfsi_us (__a);\n }\n \n-__extension__ static __inline uint64_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline uint64_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvth_u64_f16 (float16_t __a)\n {\n   return __builtin_aarch64_fixuns_trunchfdi_us (__a);\n }\n \n-__extension__ static __inline int16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline int16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvtah_s16_f16 (float16_t __a)\n {\n   return __builtin_aarch64_lroundhfhi (__a);\n }\n \n-__extension__ static __inline int32_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline int32_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvtah_s32_f16 (float16_t __a)\n {\n   return __builtin_aarch64_lroundhfsi (__a);\n }\n \n-__extension__ static __inline int64_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline int64_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvtah_s64_f16 (float16_t __a)\n {\n   return __builtin_aarch64_lroundhfdi (__a);\n }\n \n-__extension__ static __inline uint16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline uint16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvtah_u16_f16 (float16_t __a)\n {\n   return __builtin_aarch64_lrounduhfhi_us (__a);\n }\n \n-__extension__ static __inline uint32_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline uint32_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvtah_u32_f16 (float16_t __a)\n {\n   return __builtin_aarch64_lrounduhfsi_us (__a);\n }\n \n-__extension__ static __inline uint64_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline uint64_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvtah_u64_f16 (float16_t __a)\n {\n   return __builtin_aarch64_lrounduhfdi_us (__a);\n }\n \n-__extension__ static __inline int16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline int16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvtmh_s16_f16 (float16_t __a)\n {\n   return __builtin_aarch64_lfloorhfhi (__a);\n }\n \n-__extension__ static __inline int32_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline int32_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvtmh_s32_f16 (float16_t __a)\n {\n   return __builtin_aarch64_lfloorhfsi (__a);\n }\n \n-__extension__ static __inline int64_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline int64_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvtmh_s64_f16 (float16_t __a)\n {\n   return __builtin_aarch64_lfloorhfdi (__a);\n }\n \n-__extension__ static __inline uint16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline uint16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvtmh_u16_f16 (float16_t __a)\n {\n   return __builtin_aarch64_lflooruhfhi_us (__a);\n }\n \n-__extension__ static __inline uint32_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline uint32_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvtmh_u32_f16 (float16_t __a)\n {\n   return __builtin_aarch64_lflooruhfsi_us (__a);\n }\n \n-__extension__ static __inline uint64_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline uint64_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvtmh_u64_f16 (float16_t __a)\n {\n   return __builtin_aarch64_lflooruhfdi_us (__a);\n }\n \n-__extension__ static __inline int16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline int16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvtnh_s16_f16 (float16_t __a)\n {\n   return __builtin_aarch64_lfrintnhfhi (__a);\n }\n \n-__extension__ static __inline int32_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline int32_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvtnh_s32_f16 (float16_t __a)\n {\n   return __builtin_aarch64_lfrintnhfsi (__a);\n }\n \n-__extension__ static __inline int64_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline int64_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvtnh_s64_f16 (float16_t __a)\n {\n   return __builtin_aarch64_lfrintnhfdi (__a);\n }\n \n-__extension__ static __inline uint16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline uint16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvtnh_u16_f16 (float16_t __a)\n {\n   return __builtin_aarch64_lfrintnuhfhi_us (__a);\n }\n \n-__extension__ static __inline uint32_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline uint32_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvtnh_u32_f16 (float16_t __a)\n {\n   return __builtin_aarch64_lfrintnuhfsi_us (__a);\n }\n \n-__extension__ static __inline uint64_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline uint64_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvtnh_u64_f16 (float16_t __a)\n {\n   return __builtin_aarch64_lfrintnuhfdi_us (__a);\n }\n \n-__extension__ static __inline int16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline int16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvtph_s16_f16 (float16_t __a)\n {\n   return __builtin_aarch64_lceilhfhi (__a);\n }\n \n-__extension__ static __inline int32_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline int32_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvtph_s32_f16 (float16_t __a)\n {\n   return __builtin_aarch64_lceilhfsi (__a);\n }\n \n-__extension__ static __inline int64_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline int64_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvtph_s64_f16 (float16_t __a)\n {\n   return __builtin_aarch64_lceilhfdi (__a);\n }\n \n-__extension__ static __inline uint16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline uint16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvtph_u16_f16 (float16_t __a)\n {\n   return __builtin_aarch64_lceiluhfhi_us (__a);\n }\n \n-__extension__ static __inline uint32_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline uint32_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvtph_u32_f16 (float16_t __a)\n {\n   return __builtin_aarch64_lceiluhfsi_us (__a);\n }\n \n-__extension__ static __inline uint64_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline uint64_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvtph_u64_f16 (float16_t __a)\n {\n   return __builtin_aarch64_lceiluhfdi_us (__a);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vnegh_f16 (float16_t __a)\n {\n   return __builtin_aarch64_neghf (__a);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vrecpeh_f16 (float16_t __a)\n {\n   return __builtin_aarch64_frecpehf (__a);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vrecpxh_f16 (float16_t __a)\n {\n   return __builtin_aarch64_frecpxhf (__a);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vrndh_f16 (float16_t __a)\n {\n   return __builtin_aarch64_btrunchf (__a);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vrndah_f16 (float16_t __a)\n {\n   return __builtin_aarch64_roundhf (__a);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vrndih_f16 (float16_t __a)\n {\n   return __builtin_aarch64_nearbyinthf (__a);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vrndmh_f16 (float16_t __a)\n {\n   return __builtin_aarch64_floorhf (__a);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vrndnh_f16 (float16_t __a)\n {\n   return __builtin_aarch64_frintnhf (__a);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vrndph_f16 (float16_t __a)\n {\n   return __builtin_aarch64_ceilhf (__a);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vrndxh_f16 (float16_t __a)\n {\n   return __builtin_aarch64_rinthf (__a);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vrsqrteh_f16 (float16_t __a)\n {\n   return __builtin_aarch64_rsqrtehf (__a);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vsqrth_f16 (float16_t __a)\n {\n   return __builtin_aarch64_sqrthf (__a);\n }\n \n /* ARMv8.2-A FP16 two operands scalar intrinsics.  */\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vaddh_f16 (float16_t __a, float16_t __b)\n {\n   return __a + __b;\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vabdh_f16 (float16_t __a, float16_t __b)\n {\n   return __builtin_aarch64_fabdhf (__a, __b);\n }\n \n-__extension__ static __inline uint16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline uint16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcageh_f16 (float16_t __a, float16_t __b)\n {\n   return __builtin_aarch64_facgehf_uss (__a, __b);\n }\n \n-__extension__ static __inline uint16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline uint16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcagth_f16 (float16_t __a, float16_t __b)\n {\n   return __builtin_aarch64_facgthf_uss (__a, __b);\n }\n \n-__extension__ static __inline uint16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline uint16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcaleh_f16 (float16_t __a, float16_t __b)\n {\n   return __builtin_aarch64_faclehf_uss (__a, __b);\n }\n \n-__extension__ static __inline uint16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline uint16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcalth_f16 (float16_t __a, float16_t __b)\n {\n   return __builtin_aarch64_faclthf_uss (__a, __b);\n }\n \n-__extension__ static __inline uint16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline uint16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vceqh_f16 (float16_t __a, float16_t __b)\n {\n   return __builtin_aarch64_cmeqhf_uss (__a, __b);\n }\n \n-__extension__ static __inline uint16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline uint16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcgeh_f16 (float16_t __a, float16_t __b)\n {\n   return __builtin_aarch64_cmgehf_uss (__a, __b);\n }\n \n-__extension__ static __inline uint16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline uint16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcgth_f16 (float16_t __a, float16_t __b)\n {\n   return __builtin_aarch64_cmgthf_uss (__a, __b);\n }\n \n-__extension__ static __inline uint16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline uint16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcleh_f16 (float16_t __a, float16_t __b)\n {\n   return __builtin_aarch64_cmlehf_uss (__a, __b);\n }\n \n-__extension__ static __inline uint16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline uint16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vclth_f16 (float16_t __a, float16_t __b)\n {\n   return __builtin_aarch64_cmlthf_uss (__a, __b);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvth_n_f16_s16 (int16_t __a, const int __b)\n {\n   return __builtin_aarch64_scvtfhi (__a, __b);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvth_n_f16_s32 (int32_t __a, const int __b)\n {\n   return __builtin_aarch64_scvtfsihf (__a, __b);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvth_n_f16_s64 (int64_t __a, const int __b)\n {\n   return __builtin_aarch64_scvtfdihf (__a, __b);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvth_n_f16_u16 (uint16_t __a, const int __b)\n {\n   return __builtin_aarch64_ucvtfhi_sus (__a, __b);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvth_n_f16_u32 (uint32_t __a, const int __b)\n {\n   return __builtin_aarch64_ucvtfsihf_sus (__a, __b);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvth_n_f16_u64 (uint64_t __a, const int __b)\n {\n   return __builtin_aarch64_ucvtfdihf_sus (__a, __b);\n }\n \n-__extension__ static __inline int16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline int16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvth_n_s16_f16 (float16_t __a, const int __b)\n {\n   return __builtin_aarch64_fcvtzshf (__a, __b);\n }\n \n-__extension__ static __inline int32_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline int32_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvth_n_s32_f16 (float16_t __a, const int __b)\n {\n   return __builtin_aarch64_fcvtzshfsi (__a, __b);\n }\n \n-__extension__ static __inline int64_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline int64_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvth_n_s64_f16 (float16_t __a, const int __b)\n {\n   return __builtin_aarch64_fcvtzshfdi (__a, __b);\n }\n \n-__extension__ static __inline uint16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline uint16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvth_n_u16_f16 (float16_t __a, const int __b)\n {\n   return __builtin_aarch64_fcvtzuhf_uss (__a, __b);\n }\n \n-__extension__ static __inline uint32_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline uint32_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvth_n_u32_f16 (float16_t __a, const int __b)\n {\n   return __builtin_aarch64_fcvtzuhfsi_uss (__a, __b);\n }\n \n-__extension__ static __inline uint64_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline uint64_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vcvth_n_u64_f16 (float16_t __a, const int __b)\n {\n   return __builtin_aarch64_fcvtzuhfdi_uss (__a, __b);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vdivh_f16 (float16_t __a, float16_t __b)\n {\n   return __a / __b;\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vmaxh_f16 (float16_t __a, float16_t __b)\n {\n   return __builtin_aarch64_fmaxhf (__a, __b);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vmaxnmh_f16 (float16_t __a, float16_t __b)\n {\n   return __builtin_aarch64_fmaxhf (__a, __b);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vminh_f16 (float16_t __a, float16_t __b)\n {\n   return __builtin_aarch64_fminhf (__a, __b);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vminnmh_f16 (float16_t __a, float16_t __b)\n {\n   return __builtin_aarch64_fminhf (__a, __b);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vmulh_f16 (float16_t __a, float16_t __b)\n {\n   return __a * __b;\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vmulxh_f16 (float16_t __a, float16_t __b)\n {\n   return __builtin_aarch64_fmulxhf (__a, __b);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vrecpsh_f16 (float16_t __a, float16_t __b)\n {\n   return __builtin_aarch64_frecpshf (__a, __b);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vrsqrtsh_f16 (float16_t __a, float16_t __b)\n {\n   return __builtin_aarch64_rsqrtshf (__a, __b);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vsubh_f16 (float16_t __a, float16_t __b)\n {\n   return __a - __b;\n }\n \n /* ARMv8.2-A FP16 three operands scalar intrinsics.  */\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vfmah_f16 (float16_t __a, float16_t __b, float16_t __c)\n {\n   return __builtin_aarch64_fmahf (__b, __c, __a);\n }\n \n-__extension__ static __inline float16_t __attribute__ ((__always_inline__))\n+__extension__ extern __inline float16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vfmsh_f16 (float16_t __a, float16_t __b, float16_t __c)\n {\n   return __builtin_aarch64_fnmahf (__b, __c, __a);"}]}