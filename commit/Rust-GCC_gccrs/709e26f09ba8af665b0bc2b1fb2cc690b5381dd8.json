{"sha": "709e26f09ba8af665b0bc2b1fb2cc690b5381dd8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA5ZTI2ZjA5YmE4YWY2NjViMGJjMmIxZmIyY2M2OTBiNTM4MWRkOA==", "commit": {"author": {"name": "Matthias Klose", "email": "doko@ubuntu.com", "date": "2010-09-09T18:22:48Z"}, "committer": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2010-09-09T18:22:48Z"}, "message": "re PR bootstrap/43847 (test for plugin is using wrong objdump for host != target)\n\n2010-09-09  Matthias Klose  <doko@ubuntu.com>\n\n        PR bootstrap/43847\n        * configure.ac (--enable-plugin): Enhance for cross builds.\n        * configure: Regenerate.\n\nFrom-SVN: r164113", "tree": {"sha": "b8fb449695248198a678ee918230c6583deb529f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8fb449695248198a678ee918230c6583deb529f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/709e26f09ba8af665b0bc2b1fb2cc690b5381dd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/709e26f09ba8af665b0bc2b1fb2cc690b5381dd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/709e26f09ba8af665b0bc2b1fb2cc690b5381dd8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/709e26f09ba8af665b0bc2b1fb2cc690b5381dd8/comments", "author": {"login": "doko42", "id": 11258518, "node_id": "MDQ6VXNlcjExMjU4NTE4", "avatar_url": "https://avatars.githubusercontent.com/u/11258518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doko42", "html_url": "https://github.com/doko42", "followers_url": "https://api.github.com/users/doko42/followers", "following_url": "https://api.github.com/users/doko42/following{/other_user}", "gists_url": "https://api.github.com/users/doko42/gists{/gist_id}", "starred_url": "https://api.github.com/users/doko42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doko42/subscriptions", "organizations_url": "https://api.github.com/users/doko42/orgs", "repos_url": "https://api.github.com/users/doko42/repos", "events_url": "https://api.github.com/users/doko42/events{/privacy}", "received_events_url": "https://api.github.com/users/doko42/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "99da3840a2f4aa9fbda8bce8837fb65b6182d1a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99da3840a2f4aa9fbda8bce8837fb65b6182d1a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99da3840a2f4aa9fbda8bce8837fb65b6182d1a2"}], "stats": {"total": 129, "additions": 89, "deletions": 40}, "files": [{"sha": "5e2b585699c7c0ed3f37b5761dd754dc167b87cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/709e26f09ba8af665b0bc2b1fb2cc690b5381dd8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/709e26f09ba8af665b0bc2b1fb2cc690b5381dd8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=709e26f09ba8af665b0bc2b1fb2cc690b5381dd8", "patch": "@@ -1,3 +1,9 @@\n+2010-09-09  Matthias Klose  <doko@ubuntu.com>\n+\n+\tPR bootstrap/43847\n+\t* configure.ac (--enable-plugin): Enhance for cross builds.\n+\t* configure: Regenerate.\n+\n 2010-09-09  Jan Hubicka  <jh@suse.cz>\n \n \tPR tree-optimization/45598"}, {"sha": "e2c22a7ca475539dc84fce9ea28d30c6a1bcac26", "filename": "gcc/configure", "status": "modified", "additions": 44, "deletions": 21, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/709e26f09ba8af665b0bc2b1fb2cc690b5381dd8/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/709e26f09ba8af665b0bc2b1fb2cc690b5381dd8/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=709e26f09ba8af665b0bc2b1fb2cc690b5381dd8", "patch": "@@ -25712,35 +25712,58 @@ fi\n \n \n pluginlibs=\n-if test x\"$enable_plugin\" = x\"yes\"; then\n \n-  case \"${host}\" in\n-    *-*-darwin*)\n+case \"${host}\" in\n+  *-*-darwin*)\n+    if test x$build = x$host; then\n+      export_sym_check=\"nm${exeext} -g\"\n+    elif x$host = x$target; then\n       export_sym_check=\"$gcc_cv_nm -g\"\n-    ;;\n-    *)\n+    else\n+      export_sym_check=\n+    fi\n+  ;;\n+  *)\n+    if test x$build = x$host; then\n+      export_sym_check=\"objdump${exeext} -T\"\n+    elif x$host = x$target; then\n       export_sym_check=\"$gcc_cv_objdump -T\"\n-    ;;\n-  esac\n+    else\n+      export_sym_check=\n+    fi\n+  ;;\n+esac\n+\n+if test x\"$enable_plugin\" = x\"yes\"; then\n+\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for exported symbols\" >&5\n $as_echo_n \"checking for exported symbols... \" >&6; }\n-  echo \"int main() {return 0;} int foobar() {return 0;}\" > conftest.c\n-  ${CC} ${CFLAGS} ${LDFLAGS} conftest.c -o conftest > /dev/null 2>&1\n-  if $export_sym_check conftest | grep foobar > /dev/null; then\n-    : # No need to use a flag\n-  else\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -rdynamic\" >&5\n-$as_echo_n \"checking for -rdynamic... \" >&6; }\n-    ${CC} ${CFLAGS} ${LDFLAGS} -rdynamic conftest.c -o conftest > /dev/null 2>&1\n+  if test \"x$export_sym_check\" != x; then\n+    echo \"int main() {return 0;} int foobar() {return 0;}\" > conftest.c\n+    ${CC} ${CFLAGS} ${LDFLAGS} conftest.c -o conftest > /dev/null 2>&1\n     if $export_sym_check conftest | grep foobar > /dev/null; then\n-      plugin_rdynamic=yes\n-      pluginlibs=\"-rdynamic\"\n+      : # No need to use a flag\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n     else\n-      plugin_rdynamic=no\n-      enable_plugin=no\n-    fi\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $plugin_rdynamic\" >&5\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -rdynamic\" >&5\n+$as_echo_n \"checking for -rdynamic... \" >&6; }\n+      ${CC} ${CFLAGS} ${LDFLAGS} -rdynamic conftest.c -o conftest > /dev/null 2>&1\n+      if $export_sym_check conftest | grep foobar > /dev/null; then\n+        plugin_rdynamic=yes\n+        pluginlibs=\"-rdynamic\"\n+      else\n+        plugin_rdynamic=no\n+        enable_plugin=no\n+      fi\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $plugin_rdynamic\" >&5\n $as_echo \"$plugin_rdynamic\" >&6; }\n+    fi\n+  else\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: unable to check\" >&5\n+$as_echo \"unable to check\" >&6; }\n   fi\n \n   # Check -ldl"}, {"sha": "e02dac98d42ced2906a2ebbbb889e7ef885ee93d", "filename": "gcc/configure.ac", "status": "modified", "additions": 39, "deletions": 19, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/709e26f09ba8af665b0bc2b1fb2cc690b5381dd8/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/709e26f09ba8af665b0bc2b1fb2cc690b5381dd8/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=709e26f09ba8af665b0bc2b1fb2cc690b5381dd8", "patch": "@@ -4639,32 +4639,52 @@ enable_plugin=$enableval,\n enable_plugin=yes; default_plugin=yes)\n \n pluginlibs=\n-if test x\"$enable_plugin\" = x\"yes\"; then\n \n-  case \"${host}\" in\n-    *-*-darwin*)\n+case \"${host}\" in\n+  *-*-darwin*)\n+    if test x$build = x$host; then\n+      export_sym_check=\"nm${exeext} -g\"\n+    elif x$host = x$target; then\n       export_sym_check=\"$gcc_cv_nm -g\"\n-    ;;\n-    *)\n+    else\n+      export_sym_check=\n+    fi\n+  ;;\n+  *)\n+    if test x$build = x$host; then\n+      export_sym_check=\"objdump${exeext} -T\"\n+    elif x$host = x$target; then\n       export_sym_check=\"$gcc_cv_objdump -T\"\n-    ;;\n-  esac\n+    else\n+      export_sym_check=\n+    fi\n+  ;;\n+esac\n+\n+if test x\"$enable_plugin\" = x\"yes\"; then\n+\n   AC_MSG_CHECKING([for exported symbols])\n-  echo \"int main() {return 0;} int foobar() {return 0;}\" > conftest.c\n-  ${CC} ${CFLAGS} ${LDFLAGS} conftest.c -o conftest > /dev/null 2>&1\n-  if $export_sym_check conftest | grep foobar > /dev/null; then\n-    : # No need to use a flag\n-  else\n-    AC_MSG_CHECKING([for -rdynamic])\n-    ${CC} ${CFLAGS} ${LDFLAGS} -rdynamic conftest.c -o conftest > /dev/null 2>&1\n+  if test \"x$export_sym_check\" != x; then\n+    echo \"int main() {return 0;} int foobar() {return 0;}\" > conftest.c\n+    ${CC} ${CFLAGS} ${LDFLAGS} conftest.c -o conftest > /dev/null 2>&1\n     if $export_sym_check conftest | grep foobar > /dev/null; then\n-      plugin_rdynamic=yes\n-      pluginlibs=\"-rdynamic\"\n+      : # No need to use a flag\n+      AC_MSG_RESULT([yes])\n     else\n-      plugin_rdynamic=no\n-      enable_plugin=no\n+      AC_MSG_RESULT([yes])\n+      AC_MSG_CHECKING([for -rdynamic])\n+      ${CC} ${CFLAGS} ${LDFLAGS} -rdynamic conftest.c -o conftest > /dev/null 2>&1\n+      if $export_sym_check conftest | grep foobar > /dev/null; then\n+        plugin_rdynamic=yes\n+        pluginlibs=\"-rdynamic\"\n+      else\n+        plugin_rdynamic=no\n+        enable_plugin=no\n+      fi\n+      AC_MSG_RESULT([$plugin_rdynamic])\n     fi\n-    AC_MSG_RESULT([$plugin_rdynamic])\n+  else\n+    AC_MSG_RESULT([unable to check])\n   fi\n \n   # Check -ldl"}]}