{"sha": "c284a1261d4c603c648231f9e98b700a3602682e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI4NGExMjYxZDRjNjAzYzY0ODIzMWY5ZTk4YjcwMGEzNjAyNjgyZQ==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2004-02-27T18:59:31Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2004-02-27T18:59:31Z"}, "message": "atomicity.h: Use __gnu_cxx namespace.\n\n        * config/os/aix/atomicity.h: Use __gnu_cxx namespace. Remove\n        static, and inline keyworks.\n\nFrom-SVN: r78574", "tree": {"sha": "e001fbae012787c6ec18ff7849f2b28cf165a252", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e001fbae012787c6ec18ff7849f2b28cf165a252"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c284a1261d4c603c648231f9e98b700a3602682e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c284a1261d4c603c648231f9e98b700a3602682e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c284a1261d4c603c648231f9e98b700a3602682e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c284a1261d4c603c648231f9e98b700a3602682e/comments", "author": null, "committer": null, "parents": [{"sha": "b6b979d46bc38cacdad505b33fc1482fb18516b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6b979d46bc38cacdad505b33fc1482fb18516b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6b979d46bc38cacdad505b33fc1482fb18516b3"}], "stats": {"total": 47, "additions": 27, "deletions": 20}, "files": [{"sha": "a99ccea6bb35e9ed46c81e70fbec7a7b1b675f2d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c284a1261d4c603c648231f9e98b700a3602682e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c284a1261d4c603c648231f9e98b700a3602682e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c284a1261d4c603c648231f9e98b700a3602682e", "patch": "@@ -1,3 +1,8 @@\n+2004-02-27  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/os/aix/atomicity.h: Use __gnu_cxx namespace. Remove\n+\tstatic, and inline keyworks.\n+\n 2004-02-27  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/locale_facets.tcc (num_get<>::_M_extract_float,"}, {"sha": "dad8aae0932dd59b9038f10024e4804ecbb05154", "filename": "libstdc++-v3/config/os/aix/atomicity.h", "status": "modified", "additions": 22, "deletions": 20, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c284a1261d4c603c648231f9e98b700a3602682e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c284a1261d4c603c648231f9e98b700a3602682e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fatomicity.h?ref=c284a1261d4c603c648231f9e98b700a3602682e", "patch": "@@ -1,6 +1,6 @@\n // Low-level functions for atomic operations: AIX version  -*- C++ -*-\n \n-// Copyright (C) 2000, 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2001, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -27,33 +27,35 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-#ifndef _BITS_ATOMICITY_H\n-#define _BITS_ATOMICITY_H       1\n+#include <bits/atomicity.h>\n \n /* We cannot use the cpu/powerpc/bits/atomicity.h inline assembly\n    definitions for these operations since they depend on operations\n    that are not available on the original POWER architecture.  AIX\n    still runs on the POWER architecture, so it would be incorrect to\n-   assume the existence of these instructions.  */\n+   assume the existence of these instructions.\n \n-/* This should match the type pointed to by atomic_p in\n-   <sys/atomic_op.h>.  */\n-typedef int _Atomic_word;\n+   The definition of _Atomic_word must match the type pointed to by\n+   atomic_p in <sys/atomic_op.h>.  */\n \n-#include <sys/atomic_op.h>\n-\n-static inline int\n-__attribute__ ((__unused__))\n-__exchange_and_add (atomic_p __mem, int __val)\n+extern \"C\"\n {\n-  return fetch_and_add (__mem, __val);\n+#include <sys/atomic_op.h>\n }\n \n-static inline void\n-__attribute__ ((__unused__))\n-__atomic_add (atomic_p __mem, int __val)\n+namespace __gnu_cxx\n {\n-  (void) fetch_and_add (__mem, __val);\n-}\n-\n-#endif /* atomicity.h */\n+  _Atomic_word\n+  __attribute__ ((__unused__))\n+  __exchange_and_add (volatile _Atomic_word* __mem, int __val)\n+  {\n+    return ::fetch_and_add (const_cast<atomic_p>(__mem), __val);\n+  }\n+\n+  void\n+  __attribute__ ((__unused__))\n+  __atomic_add (volatile _Atomic_word* __mem, int __val)\n+  {\n+    (void) ::fetch_and_add (const_cast<atomic_p>(__mem), __val);\n+  }\n+} // namespace __gnu_cxx"}]}