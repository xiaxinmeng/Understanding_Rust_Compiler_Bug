{"sha": "93538e8eda151ed00a7919836b302c0e3763dac3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTM1MzhlOGVkYTE1MWVkMDBhNzkxOTgzNmIzMDJjMGUzNzYzZGFjMw==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel1@de.ibm.com", "date": "2008-05-28T14:09:51Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2008-05-28T14:09:51Z"}, "message": "s390.c (z10_cost): New cost function for z10.\n\n2008-05-28  Andreas Krebbel  <krebbel1@de.ibm.com>\n\n\t* config/s390/s390.c (z10_cost): New cost function for z10.\n\t(s390_handle_arch_option, override_options): Support\n\t-march=z10 switch.\n\t(s390_issue_rate): Adjust issue rate for z10.\n\t* config/s390/s390.h (processor_type): Add PROCESSOR_2097_Z10.\n\t(processor_flags): Add PF_Z10.\n\t(TARGET_CPU_Z10, TARGET_Z10): New macro definitions.\n\t* config/s390/s390.md (cpu, cpu_facility attributes): Add z10.\n\t* gcc/config.gcc: Add z10.\n\nFrom-SVN: r136097", "tree": {"sha": "75b8922825d4a95411c84fb5daa752333989ea41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75b8922825d4a95411c84fb5daa752333989ea41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93538e8eda151ed00a7919836b302c0e3763dac3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93538e8eda151ed00a7919836b302c0e3763dac3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93538e8eda151ed00a7919836b302c0e3763dac3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93538e8eda151ed00a7919836b302c0e3763dac3/comments", "author": null, "committer": null, "parents": [{"sha": "540f6bda9926d60d7691fc4a21fe78338b450952", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/540f6bda9926d60d7691fc4a21fe78338b450952", "html_url": "https://github.com/Rust-GCC/gccrs/commit/540f6bda9926d60d7691fc4a21fe78338b450952"}], "stats": {"total": 100, "additions": 85, "deletions": 15}, "files": [{"sha": "a538ccde6688e865fc401b3c0900f76ee324c97b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93538e8eda151ed00a7919836b302c0e3763dac3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93538e8eda151ed00a7919836b302c0e3763dac3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=93538e8eda151ed00a7919836b302c0e3763dac3", "patch": "@@ -1,3 +1,15 @@\n+2008-05-28  Andreas Krebbel  <krebbel1@de.ibm.com>\n+\n+\t* config/s390/s390.c (z10_cost): New cost function for z10.\n+\t(s390_handle_arch_option, override_options): Support\n+\t-march=z10 switch.\n+\t(s390_issue_rate): Adjust issue rate for z10.\n+\t* config/s390/s390.h (processor_type): Add PROCESSOR_2097_Z10.\n+\t(processor_flags): Add PF_Z10.\n+\t(TARGET_CPU_Z10, TARGET_Z10): New macro definitions.\n+\t* config/s390/s390.md (cpu, cpu_facility attributes): Add z10.\n+\t* gcc/config.gcc: Add z10.\n+\n 2008-05-28  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/36291"}, {"sha": "3bef721391a09740f71f294ec274c584330e3015", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93538e8eda151ed00a7919836b302c0e3763dac3/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93538e8eda151ed00a7919836b302c0e3763dac3/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=93538e8eda151ed00a7919836b302c0e3763dac3", "patch": "@@ -3182,7 +3182,7 @@ case \"${target}\" in\n \t\tfor which in arch tune; do\n \t\t\teval \"val=\\$with_$which\"\n \t\t\tcase ${val} in\n-\t\t\t\"\" | g5 | g6 | z900 | z990 | z9-109 | z9-ec)\n+\t\t\t\"\" | g5 | g6 | z900 | z990 | z9-109 | z9-ec | z10)\n \t\t\t\t# OK\n \t\t\t\t;;\n \t\t\t*)"}, {"sha": "37660a258720a1e387efd2daa792e99096d22542", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 59, "deletions": 11, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93538e8eda151ed00a7919836b302c0e3763dac3/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93538e8eda151ed00a7919836b302c0e3763dac3/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=93538e8eda151ed00a7919836b302c0e3763dac3", "patch": "@@ -188,6 +188,38 @@ struct processor_costs z9_109_cost =\n   COSTS_N_INSNS (24),    /* DSGR */\n };\n \n+static const\n+struct processor_costs z10_cost =\n+{\n+  COSTS_N_INSNS (4),     /* M     */\n+  COSTS_N_INSNS (2),     /* MGHI  */\n+  COSTS_N_INSNS (2),     /* MH    */\n+  COSTS_N_INSNS (2),     /* MHI   */\n+  COSTS_N_INSNS (4),     /* ML    */\n+  COSTS_N_INSNS (4),     /* MR    */\n+  COSTS_N_INSNS (5),     /* MS    */\n+  COSTS_N_INSNS (6),     /* MSG   */\n+  COSTS_N_INSNS (4),     /* MSGF  */\n+  COSTS_N_INSNS (4),     /* MSGFR */\n+  COSTS_N_INSNS (4),     /* MSGR  */\n+  COSTS_N_INSNS (4),     /* MSR   */\n+  COSTS_N_INSNS (1),     /* multiplication in DFmode */\n+  COSTS_N_INSNS (28),    /* MXBR */\n+  COSTS_N_INSNS (130),   /* SQXBR */\n+  COSTS_N_INSNS (66),    /* SQDBR */\n+  COSTS_N_INSNS (38),    /* SQEBR */\n+  COSTS_N_INSNS (1),     /* MADBR */\n+  COSTS_N_INSNS (1),     /* MAEBR */\n+  COSTS_N_INSNS (60),    /* DXBR */\n+  COSTS_N_INSNS (40),    /* DDBR */\n+  COSTS_N_INSNS (26),    /* DEBR */\n+  COSTS_N_INSNS (30),    /* DLGR */\n+  COSTS_N_INSNS (23),    /* DLR */\n+  COSTS_N_INSNS (23),    /* DR */\n+  COSTS_N_INSNS (24),    /* DSGFR */\n+  COSTS_N_INSNS (24),    /* DSGR */\n+};\n+\n extern int reload_completed;\n \n /* Save information from a \"cmpxx\" operation until the branch or scc is\n@@ -1365,6 +1397,8 @@ s390_handle_arch_option (const char *arg,\n                                        | PF_LONG_DISPLACEMENT | PF_EXTIMM},\n       {\"z9-ec\", PROCESSOR_2094_Z9_109, PF_IEEE_FLOAT | PF_ZARCH\n                              | PF_LONG_DISPLACEMENT | PF_EXTIMM | PF_DFP },\n+      {\"z10\", PROCESSOR_2097_Z10, PF_IEEE_FLOAT | PF_ZARCH\n+                             | PF_LONG_DISPLACEMENT | PF_EXTIMM | PF_DFP | PF_Z10},\n     };\n   size_t i;\n \n@@ -1472,13 +1506,21 @@ override_options (void)\n     }\n \n   /* Set processor cost function.  */\n-  if (s390_tune == PROCESSOR_2094_Z9_109)\n-    s390_cost = &z9_109_cost;\n-  else if (s390_tune == PROCESSOR_2084_Z990)\n-    s390_cost = &z990_cost;\n-  else\n-    s390_cost = &z900_cost;\n-  \n+  switch (s390_tune)\n+    {\n+    case PROCESSOR_2084_Z990:\n+      s390_cost = &z990_cost;\n+      break;\n+    case PROCESSOR_2094_Z9_109:\n+      s390_cost = &z9_109_cost;\n+      break;\n+    case PROCESSOR_2097_Z10:\n+      s390_cost = &z10_cost;\n+      break;\n+    default:\n+      s390_cost = &z900_cost;\n+    }\n+\n   if (TARGET_BACKCHAIN && TARGET_PACKED_STACK && TARGET_HARD_FLOAT)\n     error (\"-mbackchain -mpacked-stack -mhard-float are not supported \"\n \t   \"in combination\");\n@@ -4930,10 +4972,16 @@ s390_adjust_priority (rtx insn ATTRIBUTE_UNUSED, int priority)\n static int\n s390_issue_rate (void)\n {\n-  if (s390_tune == PROCESSOR_2084_Z990\n-      || s390_tune == PROCESSOR_2094_Z9_109)\n-    return 3;\n-  return 1;\n+  switch (s390_tune)\n+    {\n+    case PROCESSOR_2084_Z990:\n+    case PROCESSOR_2094_Z9_109:\n+      return 3;\n+    case PROCESSOR_2097_Z10:\n+      return 2;\n+    default:\n+      return 1;\n+    }\n }\n \n static int"}, {"sha": "819154feef1a0f95958e844e72c8b194d6129487", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93538e8eda151ed00a7919836b302c0e3763dac3/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93538e8eda151ed00a7919836b302c0e3763dac3/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=93538e8eda151ed00a7919836b302c0e3763dac3", "patch": "@@ -40,6 +40,7 @@ enum processor_type\n   PROCESSOR_2064_Z900,\n   PROCESSOR_2084_Z990,\n   PROCESSOR_2094_Z9_109,\n+  PROCESSOR_2097_Z10,\n   PROCESSOR_max\n };\n \n@@ -51,7 +52,8 @@ enum processor_flags\n   PF_ZARCH = 2,\n   PF_LONG_DISPLACEMENT = 4,\n   PF_EXTIMM = 8,\n-  PF_DFP = 16\n+  PF_DFP = 16,\n+  PF_Z10 = 32\n };\n \n extern enum processor_type s390_tune;\n@@ -70,13 +72,17 @@ extern enum processor_flags s390_arch_flags;\n  \t(s390_arch_flags & PF_EXTIMM)\n #define TARGET_CPU_DFP \\\n  \t(s390_arch_flags & PF_DFP)\n+#define TARGET_CPU_Z10 \\\n+ \t(s390_arch_flags & PF_Z10)\n \n #define TARGET_LONG_DISPLACEMENT \\\n        (TARGET_ZARCH && TARGET_CPU_LONG_DISPLACEMENT)\n #define TARGET_EXTIMM \\\n        (TARGET_ZARCH && TARGET_CPU_EXTIMM)\n #define TARGET_DFP \\\n        (TARGET_ZARCH && TARGET_CPU_DFP)\n+#define TARGET_Z10 \\\n+       (TARGET_ZARCH && TARGET_CPU_Z10)\n \n /* Run-time target specification.  */\n "}, {"sha": "54f4e0e9a87fd51ab997e92f973ef62ca911f101", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93538e8eda151ed00a7919836b302c0e3763dac3/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93538e8eda151ed00a7919836b302c0e3763dac3/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=93538e8eda151ed00a7919836b302c0e3763dac3", "patch": "@@ -228,10 +228,10 @@\n ;; distinguish between g5 and g6, but there are differences between the two\n ;; CPUs could in theory be modeled.\n \n-(define_attr \"cpu\" \"g5,g6,z900,z990,z9_109\"\n+(define_attr \"cpu\" \"g5,g6,z900,z990,z9_109,z10\"\n   (const (symbol_ref \"s390_tune\")))\n \n-(define_attr \"cpu_facility\" \"standard,ieee,zarch,longdisp,extimm,dfp\"\n+(define_attr \"cpu_facility\" \"standard,ieee,zarch,longdisp,extimm,dfp,z10\"\n   (const_string \"standard\"))\n \n (define_attr \"enabled\" \"\"\n@@ -256,6 +256,10 @@\n \n          (and (eq_attr \"cpu_facility\" \"dfp\")\n \t      (ne (symbol_ref \"TARGET_DFP\") (const_int 0)))\n+\t (const_int 1)\n+\n+         (and (eq_attr \"cpu_facility\" \"z10\")\n+              (ne (symbol_ref \"TARGET_Z10\") (const_int 0)))\n \t (const_int 1)]\n \t(const_int 0)))\n "}]}