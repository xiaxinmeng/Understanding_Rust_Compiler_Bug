{"sha": "7b040d4c07b29facf3aaf319bed9479531c0944b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2IwNDBkNGMwN2IyOWZhY2YzYWFmMzE5YmVkOTQ3OTUzMWMwOTQ0Yg==", "commit": {"author": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-10-18T09:46:48Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-10-18T09:46:48Z"}, "message": "[multiple changes]\n\n2004-10-18  Michael Koch  <konqueror@gmx.de>\n\n\t* java/lang/reflect/Proxy.java: Improved javadocs.\n\n2004-10-18  Michael Koch  <konqueror@gmx.de>\n\n\t* java/lang/reflect/AccessibleObject.java\n\t(checkPermission): Removed redundant final modifier.\n\t(secureSetAccessible): Likewise.\n\t* java/lang/reflect/Proxy.java:\n\tReworked import statements.\n\t(generate): Removed redundant final modifier.\n\t* java/lang/reflect/ReflectPermission.java:\n\tReorder package declaration and import statement.\n\n2004-10-18  Jeroen Frijters  <jeroen@frijters.net>\n\n\t* java/lang/reflect/Proxy.java\n\t(count): Removed useless initializer.\n\nFrom-SVN: r89201", "tree": {"sha": "815ee266c9968b806dd734e42face701b7605686", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/815ee266c9968b806dd734e42face701b7605686"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b040d4c07b29facf3aaf319bed9479531c0944b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b040d4c07b29facf3aaf319bed9479531c0944b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b040d4c07b29facf3aaf319bed9479531c0944b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b040d4c07b29facf3aaf319bed9479531c0944b/comments", "author": null, "committer": null, "parents": [{"sha": "cc6e67d442bec2a9b7ec561e74bc1aa7787226fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc6e67d442bec2a9b7ec561e74bc1aa7787226fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc6e67d442bec2a9b7ec561e74bc1aa7787226fc"}], "stats": {"total": 55, "additions": 38, "deletions": 17}, "files": [{"sha": "e0655c05977e0cf406d884c7001a83bc9f0ded85", "filename": "libjava/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b040d4c07b29facf3aaf319bed9479531c0944b/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b040d4c07b29facf3aaf319bed9479531c0944b/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=7b040d4c07b29facf3aaf319bed9479531c0944b", "patch": "@@ -1,3 +1,23 @@\n+2004-10-18  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/lang/reflect/Proxy.java: Improved javadocs.\n+\n+2004-10-18  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/lang/reflect/AccessibleObject.java\n+\t(checkPermission): Removed redundant final modifier.\n+\t(secureSetAccessible): Likewise.\n+\t* java/lang/reflect/Proxy.java:\n+\tReworked import statements.\n+\t(generate): Removed redundant final modifier.\n+\t* java/lang/reflect/ReflectPermission.java:\n+\tReorder package declaration and import statement.\n+\n+2004-10-18  Jeroen Frijters  <jeroen@frijters.net>\n+\n+\t* java/lang/reflect/Proxy.java\n+\t(count): Removed useless initializer.\n+\n 2004-10-17  Michael Koch  <konqueror@gmx.de>\n \n \t* java/net/BindException.java,"}, {"sha": "5b5b5f6ff522fa856716000cb1178911edc4a176", "filename": "libjava/java/lang/reflect/AccessibleObject.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b040d4c07b29facf3aaf319bed9479531c0944b/libjava%2Fjava%2Flang%2Freflect%2FAccessibleObject.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b040d4c07b29facf3aaf319bed9479531c0944b/libjava%2Fjava%2Flang%2Freflect%2FAccessibleObject.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2Freflect%2FAccessibleObject.java?ref=7b040d4c07b29facf3aaf319bed9479531c0944b", "patch": "@@ -133,7 +133,7 @@ public void setAccessible(boolean flag)\n    *\n    * @throws SecurityException if permission is denied\n    */\n-  private static final void checkPermission()\n+  private static void checkPermission()\n   {\n     SecurityManager sm = System.getSecurityManager();\n     if (sm != null)\n@@ -148,7 +148,7 @@ private static final void checkPermission()\n    * @throws SecurityException if flag is true and this is a constructor\n    * for <code>java.lang.Class</code>.\n    */\n-  private final void secureSetAccessible(boolean flag)\n+  private void secureSetAccessible(boolean flag)\n   {\n     if (flag &&\n         (this instanceof Constructor"}, {"sha": "8aee02fb47fd6918f2954a273d99026adce7f558", "filename": "libjava/java/lang/reflect/Proxy.java", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b040d4c07b29facf3aaf319bed9479531c0944b/libjava%2Fjava%2Flang%2Freflect%2FProxy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b040d4c07b29facf3aaf319bed9479531c0944b/libjava%2Fjava%2Flang%2Freflect%2FProxy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2Freflect%2FProxy.java?ref=7b040d4c07b29facf3aaf319bed9479531c0944b", "patch": "@@ -1,5 +1,5 @@\n /* Proxy.java -- build a proxy class that implements reflected interfaces\n-   Copyright (C) 2001, 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2002, 2003, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,15 +38,16 @@\n \n package java.lang.reflect;\n \n+import gnu.classpath.Configuration;\n+import gnu.java.lang.reflect.TypeSignature;\n+\n import java.io.Serializable;\n import java.security.ProtectionDomain;\n-import java.util.Map;\n import java.util.HashMap;\n-import java.util.Set;\n import java.util.HashSet;\n import java.util.Iterator;\n-import gnu.classpath.Configuration;\n-import gnu.java.lang.reflect.TypeSignature;\n+import java.util.Map;\n+import java.util.Set;\n \n /**\n  * This class allows you to dynamically create an instance of any (or\n@@ -153,7 +154,7 @@\n  * @see InvocationHandler\n  * @see UndeclaredThrowableException\n  * @see Class\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.3\n  * @status updated to 1.4, except for the use of ProtectionDomain\n  */\n@@ -722,8 +723,8 @@ public boolean equals(Object other)\n   private static final class ProxyData\n   {\n     /**\n-     * The package this class is in *including the trailing dot* or \"\" for\n-     * the unnamed (aka default) package.\n+     * The package this class is in <b>including the trailing dot</b>\n+     * or an empty string for the unnamed (aka default) package.\n      */\n     String pack;\n \n@@ -754,7 +755,7 @@ public boolean equals(Object other)\n     /**\n      * For unique id's\n      */\n-    private static int count = 0;\n+    private static int count;\n \n     /**\n      * The id of this proxy class\n@@ -771,7 +772,7 @@ public boolean equals(Object other)\n     /**\n      * Return the name of a package (including the trailing dot)\n      * given the name of a class.\n-     * Returns \"\" if no package.  We use this in preference to\n+     * Returns an empty string if no package.  We use this in preference to\n      * using Class.getPackage() to avoid problems with ClassLoaders\n      * that don't set the package.\n      */\n@@ -1302,7 +1303,7 @@ else if (ret_type == double.class)\n      *        implies the bootstrap class loader\n      * @return the proxy class Class object\n      */\n-    final Class generate(ClassLoader loader)\n+    Class generate(ClassLoader loader)\n     {\n       byte[] bytecode = new byte[pool.length() + stream.length()];\n       // More efficient to bypass calling charAt() repetitively."}, {"sha": "400ca25afcc2ad20fcb3e18205e4a57cdabac895", "filename": "libjava/java/lang/reflect/ReflectPermission.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b040d4c07b29facf3aaf319bed9479531c0944b/libjava%2Fjava%2Flang%2Freflect%2FReflectPermission.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b040d4c07b29facf3aaf319bed9479531c0944b/libjava%2Fjava%2Flang%2Freflect%2FReflectPermission.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2Freflect%2FReflectPermission.java?ref=7b040d4c07b29facf3aaf319bed9479531c0944b", "patch": "@@ -35,15 +35,15 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+package java.lang.reflect;\n+\n+import java.security.BasicPermission;\n+\n /* Written using \"Java Class Libraries\", 2nd edition, ISBN 0-201-31002-3\n  * \"The Java Language Specification\", ISBN 0-201-63451-1\n  * plus online API docs for JDK 1.2 beta from http://www.javasoft.com.\n  */\n \n-package java.lang.reflect;\n-\n-import java.security.BasicPermission;\n-\n /**\n  * This class implements permissions for reflection.  This is a named\n  * permission, and the only defined name is suppressAccessChecks, which"}]}