{"sha": "2e95a6c3583cd414ac3fe60fa42f779a07acd3c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU5NWE2YzM1ODNjZDQxNGFjM2ZlNjBmYTQyZjc3OWEwN2FjZDNjNw==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2009-03-12T16:13:19Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2009-03-12T16:13:19Z"}, "message": "[multiple changes]\n\n2009-03-11  Andrew Haley  <aph@redhat.com>\n\n\t* java/lang/natClassLoader.cc (_Jv_RegisterClassHookDefault): Clear\n\tINTERPRETED access modifier.\n\n2009-03-11  Tom Tromey  <tromey@redhat.com>\n\n\t* link.cc (_Jv_Linker::find_field): Pass the field_type to\n\t_Jv_CheckOrCreateLoadingConstraint, not the class that is\n\trequesting the field.\n\nFrom-SVN: r144818", "tree": {"sha": "85e76fa462fd32f7f907ccc1061b8ba0e8be06d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85e76fa462fd32f7f907ccc1061b8ba0e8be06d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e95a6c3583cd414ac3fe60fa42f779a07acd3c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e95a6c3583cd414ac3fe60fa42f779a07acd3c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e95a6c3583cd414ac3fe60fa42f779a07acd3c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e95a6c3583cd414ac3fe60fa42f779a07acd3c7/comments", "author": null, "committer": null, "parents": [{"sha": "bbb52802a1e636e8eecece65c600ef1bc4dcf6aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbb52802a1e636e8eecece65c600ef1bc4dcf6aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbb52802a1e636e8eecece65c600ef1bc4dcf6aa"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "6d33fdda55f0df5de44161faf48448d6c4fdc292", "filename": "libjava/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e95a6c3583cd414ac3fe60fa42f779a07acd3c7/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e95a6c3583cd414ac3fe60fa42f779a07acd3c7/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=2e95a6c3583cd414ac3fe60fa42f779a07acd3c7", "patch": "@@ -1,3 +1,14 @@\n+2009-03-11  Andrew Haley  <aph@redhat.com>\n+\n+\t* java/lang/natClassLoader.cc (_Jv_RegisterClassHookDefault): Clear\n+\tINTERPRETED access modifier.\n+\n+2009-03-11  Tom Tromey  <tromey@redhat.com>\n+\n+\t* link.cc (_Jv_Linker::find_field): Pass the field_type to\n+\t_Jv_CheckOrCreateLoadingConstraint, not the class that is\n+\trequesting the field.\n+\n 2009-03-03  Andrew John Hughes  <ahughes@redhat.com>\n \n \t* Makefile.am:"}, {"sha": "237e038d1e78a1dafe1be5d77c6e17bf01ee3d6e", "filename": "libjava/java/lang/natClassLoader.cc", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e95a6c3583cd414ac3fe60fa42f779a07acd3c7/libjava%2Fjava%2Flang%2FnatClassLoader.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e95a6c3583cd414ac3fe60fa42f779a07acd3c7/libjava%2Fjava%2Flang%2FnatClassLoader.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatClassLoader.cc?ref=2e95a6c3583cd414ac3fe60fa42f779a07acd3c7", "patch": "@@ -380,6 +380,15 @@ _Jv_RegisterClassHookDefault (jclass klass)\n   if (! klass->engine)\n     klass->engine = &_Jv_soleCompiledEngine;\n \n+  /* FIXME:  Way back before the dawn of time, we overloaded the\n+     SYNTHETIC class access modifier to mean INTERPRETED.  This was a\n+     Bad Thing, but it didn't matter then because classes were never\n+     marked synthetic.  However, it is possible to redeem the\n+     situation: _Jv_RegisterClassHookDefault is only called from\n+     compiled classes, so we clear the INTERPRETED flag.  This is a\n+     kludge!  */\n+  klass->accflags &= ~java::lang::reflect::Modifier::INTERPRETED;\n+\n   if (system_class_list != SYSTEM_LOADER_INITIALIZED)\n     {\n       unsigned long abi = (unsigned long) klass->next_or_version;"}, {"sha": "25114085bfc3255d233e13a3d1862bfe3bcc211b", "filename": "libjava/link.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e95a6c3583cd414ac3fe60fa42f779a07acd3c7/libjava%2Flink.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e95a6c3583cd414ac3fe60fa42f779a07acd3c7/libjava%2Flink.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Flink.cc?ref=2e95a6c3583cd414ac3fe60fa42f779a07acd3c7", "patch": "@@ -248,7 +248,7 @@ _Jv_Linker::find_field (jclass klass, jclass owner,\n       // Note that the field returned by find_field_helper is always\n       // resolved.  However, we still use the constraint mechanism\n       // because this may affect other lookups.\n-      _Jv_CheckOrCreateLoadingConstraint (klass, (*found_class)->loader);\n+      _Jv_CheckOrCreateLoadingConstraint (field_type, (*found_class)->loader);\n     }\n   else\n     {"}]}