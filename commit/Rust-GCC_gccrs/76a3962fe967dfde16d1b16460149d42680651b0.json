{"sha": "76a3962fe967dfde16d1b16460149d42680651b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZhMzk2MmZlOTY3ZGZkZTE2ZDFiMTY0NjAxNDlkNDI2ODA2NTFiMA==", "commit": {"author": {"name": "Kai Tietz", "email": "ktietz@redhat.com", "date": "2012-02-01T10:46:36Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2012-02-01T10:46:36Z"}, "message": "re PR libgcj/51500 (106 unexpected libjava testsuite failures with mingw32)\n\n\tPR target/51500\n\t* interpret.cc (_Jv_init_cif): Handle thiscall\n\tconvention for 32-bit Windows.\n\t* java/lang/reflect/natMethod.cc (_Jv_CallAnyMethodA):\n\tLikewise.\n\t* java/lang/reflect/natVMProxy.cc (invoke_t): Add\n\tthiscall-attribute for 32-bit Windows.\n\nFrom-SVN: r183794", "tree": {"sha": "97d7fe8daa62f82f0826e2248f98c24d3f5d02a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97d7fe8daa62f82f0826e2248f98c24d3f5d02a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76a3962fe967dfde16d1b16460149d42680651b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76a3962fe967dfde16d1b16460149d42680651b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76a3962fe967dfde16d1b16460149d42680651b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76a3962fe967dfde16d1b16460149d42680651b0/comments", "author": null, "committer": null, "parents": [{"sha": "337c6e076cb4b9a2ad374859ca2248067d64e514", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/337c6e076cb4b9a2ad374859ca2248067d64e514", "html_url": "https://github.com/Rust-GCC/gccrs/commit/337c6e076cb4b9a2ad374859ca2248067d64e514"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "5f78e0576a22cf57aeb846134ed5cc782f59ddc8", "filename": "libjava/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76a3962fe967dfde16d1b16460149d42680651b0/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76a3962fe967dfde16d1b16460149d42680651b0/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=76a3962fe967dfde16d1b16460149d42680651b0", "patch": "@@ -1,3 +1,13 @@\n+2012-02-01  Kai Tietz  <ktietz@redhat.com>\n+\n+\tPR target/51500\n+\t* interpret.cc (_Jv_init_cif): Handle thiscall\n+\tconvention for 32-bit Windows.\n+\t* java/lang/reflect/natMethod.cc (_Jv_CallAnyMethodA):\n+\tLikewise.\n+\t* java/lang/reflect/natVMProxy.cc (invoke_t): Add\n+\tthiscall-attribute for 32-bit Windows.\n+\n 2012-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gnu/gcj/convert/Convert.java (version): Update copyright notice"}, {"sha": "78686fd55b7a605034ef067d6eed5de291fbff09", "filename": "libjava/interpret.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76a3962fe967dfde16d1b16460149d42680651b0/libjava%2Finterpret.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76a3962fe967dfde16d1b16460149d42680651b0/libjava%2Finterpret.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finterpret.cc?ref=76a3962fe967dfde16d1b16460149d42680651b0", "patch": "@@ -1303,7 +1303,12 @@ _Jv_init_cif (_Jv_Utf8Const* signature,\n   if (ptr != (unsigned char*)signature->chars() + signature->len())\n     throw_internal_error (\"did not find end of signature\");\n \n-  if (ffi_prep_cif (cif, FFI_DEFAULT_ABI,\n+  ffi_abi cabi = FFI_DEFAULT_ABI;\n+#if defined (X86_WIN32) && !defined (__CYGWIN__)\n+  if (!staticp)\n+    cabi = FFI_THISCALL;\n+#endif\n+  if (ffi_prep_cif (cif, cabi,\n \t\t    arg_count, rtype, arg_types) != FFI_OK)\n     throw_internal_error (\"ffi_prep_cif failed\");\n "}, {"sha": "8ac87fcb42ad9eafdfd2ab0575bee82b72bcfc1b", "filename": "libjava/java/lang/reflect/natMethod.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76a3962fe967dfde16d1b16460149d42680651b0/libjava%2Fjava%2Flang%2Freflect%2FnatMethod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76a3962fe967dfde16d1b16460149d42680651b0/libjava%2Fjava%2Flang%2Freflect%2FnatMethod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2Freflect%2FnatMethod.cc?ref=76a3962fe967dfde16d1b16460149d42680651b0", "patch": "@@ -436,7 +436,12 @@ _Jv_CallAnyMethodA (jobject obj,\n       p += size_per_arg;\n     }\n \n-  if (ffi_prep_cif (&cif, FFI_DEFAULT_ABI, param_count,\n+  ffi_abi cabi = FFI_DEFAULT_ABI;\n+#if defined (X86_WIN32) && !defined (__CYGWIN__)\n+  if (needs_this)\n+    cabi = FFI_THISCALL;\n+#endif\n+  if (ffi_prep_cif (&cif, cabi, param_count,\n \t\t    rtype, argtypes) != FFI_OK)\n     throw new java::lang::VirtualMachineError(JvNewStringLatin1(\"internal error: ffi_prep_cif failed\"));\n "}, {"sha": "e46263d858cfb50447e1559cf2977c03524fdc18", "filename": "libjava/java/lang/reflect/natVMProxy.cc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76a3962fe967dfde16d1b16460149d42680651b0/libjava%2Fjava%2Flang%2Freflect%2FnatVMProxy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76a3962fe967dfde16d1b16460149d42680651b0/libjava%2Fjava%2Flang%2Freflect%2FnatVMProxy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2Freflect%2FnatVMProxy.cc?ref=76a3962fe967dfde16d1b16460149d42680651b0", "patch": "@@ -79,7 +79,11 @@ typedef void (*closure_fun) (ffi_cif*, void*, void**, void*);\n static void *ncode (int method_index, jclass klass, _Jv_Method *self, closure_fun fun);\n static void run_proxy (ffi_cif*, void*, void**, void*);\n \n-typedef jobject invoke_t (jobject, Proxy *, Method *, JArray< jobject > *);\n+typedef jobject\n+#if defined (X86_WIN32) && !defined (__CYGWIN__)\n+ __attribute__ ((thiscall))\n+#endif\n+ invoke_t (jobject, Proxy *, Method *, JArray< jobject > *);\n \n // True if pc points to a proxy frame.\n "}]}