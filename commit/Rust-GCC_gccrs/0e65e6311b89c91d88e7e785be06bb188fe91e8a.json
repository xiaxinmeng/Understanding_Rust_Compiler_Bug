{"sha": "0e65e6311b89c91d88e7e785be06bb188fe91e8a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGU2NWU2MzExYjg5YzkxZDg4ZTdlNzg1YmUwNmJiMTg4ZmU5MWU4YQ==", "commit": {"author": {"name": "Romain Geissler", "email": "romain.geissler@gmail.com", "date": "2011-07-11T10:00:54Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-07-11T10:00:54Z"}, "message": "tree.h (call_expr_arg): Remove.\n\n2011-07-11  Romain Geissler  <romain.geissler@gmail.com>\n\n        * tree.h (call_expr_arg): Remove. \n        (call_expr_argp): Likewise.\n\nFrom-SVN: r176140", "tree": {"sha": "0f66acef2a33c4af5dd2ffdcefda41fa20dac5f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f66acef2a33c4af5dd2ffdcefda41fa20dac5f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e65e6311b89c91d88e7e785be06bb188fe91e8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e65e6311b89c91d88e7e785be06bb188fe91e8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e65e6311b89c91d88e7e785be06bb188fe91e8a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e65e6311b89c91d88e7e785be06bb188fe91e8a/comments", "author": {"login": "Romain-Geissler", "id": 801960, "node_id": "MDQ6VXNlcjgwMTk2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/801960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Romain-Geissler", "html_url": "https://github.com/Romain-Geissler", "followers_url": "https://api.github.com/users/Romain-Geissler/followers", "following_url": "https://api.github.com/users/Romain-Geissler/following{/other_user}", "gists_url": "https://api.github.com/users/Romain-Geissler/gists{/gist_id}", "starred_url": "https://api.github.com/users/Romain-Geissler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Romain-Geissler/subscriptions", "organizations_url": "https://api.github.com/users/Romain-Geissler/orgs", "repos_url": "https://api.github.com/users/Romain-Geissler/repos", "events_url": "https://api.github.com/users/Romain-Geissler/events{/privacy}", "received_events_url": "https://api.github.com/users/Romain-Geissler/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a8f18c40371add2ef647d14127cf91b046570bec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8f18c40371add2ef647d14127cf91b046570bec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8f18c40371add2ef647d14127cf91b046570bec"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "e43ef791e20b8f235ff6362bfb9bef99377aa829", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e65e6311b89c91d88e7e785be06bb188fe91e8a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e65e6311b89c91d88e7e785be06bb188fe91e8a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0e65e6311b89c91d88e7e785be06bb188fe91e8a", "patch": "@@ -1,3 +1,8 @@\n+2011-07-11  Romain Geissler  <romain.geissler@gmail.com>\n+\n+\t* tree.h (call_expr_arg): Remove.\n+\t(call_expr_argp): Likewise.\n+\n 2011-07-11  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config/sparc/sparc.md (save_register_window_1): Rename to..."}, {"sha": "571a71f9d7fc211a6969d8e887375e64aa6d5410", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e65e6311b89c91d88e7e785be06bb188fe91e8a/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e65e6311b89c91d88e7e785be06bb188fe91e8a/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=0e65e6311b89c91d88e7e785be06bb188fe91e8a", "patch": "@@ -5130,8 +5130,6 @@ extern bool commutative_ternary_tree_code (enum tree_code);\n extern tree upper_bound_in_type (tree, tree);\n extern tree lower_bound_in_type (tree, tree);\n extern int operand_equal_for_phi_arg_p (const_tree, const_tree);\n-extern tree call_expr_arg (tree, int);\n-extern tree *call_expr_argp (tree, int);\n extern tree create_artificial_label (location_t);\n extern const char *get_name (tree);\n extern bool stdarg_p (const_tree);"}]}