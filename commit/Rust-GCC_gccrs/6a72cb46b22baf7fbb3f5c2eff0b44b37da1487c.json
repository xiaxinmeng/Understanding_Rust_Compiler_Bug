{"sha": "6a72cb46b22baf7fbb3f5c2eff0b44b37da1487c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE3MmNiNDZiMjJiYWY3ZmJiM2Y1YzJlZmYwYjQ0YjM3ZGExNDg3Yw==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2009-12-02T05:48:18Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2009-12-02T05:48:18Z"}, "message": "ABM popcount intrinsics.\n\n\t* config/i386/abmintrin.h (_mm_popcnt_u32): New.\n\t(_mm_popcnt_u64): New.\n\nFrom-SVN: r154894", "tree": {"sha": "646a88cd9f58037518ca2e63da3b65f92dcb01a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/646a88cd9f58037518ca2e63da3b65f92dcb01a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a72cb46b22baf7fbb3f5c2eff0b44b37da1487c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a72cb46b22baf7fbb3f5c2eff0b44b37da1487c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a72cb46b22baf7fbb3f5c2eff0b44b37da1487c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a72cb46b22baf7fbb3f5c2eff0b44b37da1487c/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13c0eb433cca19bb71e0c3591f487a4696d449c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13c0eb433cca19bb71e0c3591f487a4696d449c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13c0eb433cca19bb71e0c3591f487a4696d449c0"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "d04fb61118709989327c4d6825332e657a2a2b99", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a72cb46b22baf7fbb3f5c2eff0b44b37da1487c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a72cb46b22baf7fbb3f5c2eff0b44b37da1487c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a72cb46b22baf7fbb3f5c2eff0b44b37da1487c", "patch": "@@ -1,3 +1,8 @@\n+2009-12-01  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* config/i386/abmintrin.h (_mm_popcnt_u32): New.\n+\t(_mm_popcnt_u64): New.\n+\n 2009-12-01  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* config/i386/abmintrin.h: New."}, {"sha": "317bb98d5ead9cc82274f054d251a63a8c254a9e", "filename": "gcc/config/i386/abmintrin.h", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a72cb46b22baf7fbb3f5c2eff0b44b37da1487c/gcc%2Fconfig%2Fi386%2Fabmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a72cb46b22baf7fbb3f5c2eff0b44b37da1487c/gcc%2Fconfig%2Fi386%2Fabmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fabmintrin.h?ref=6a72cb46b22baf7fbb3f5c2eff0b44b37da1487c", "patch": "@@ -33,4 +33,19 @@\n #define _ABMINTRIN_H_INCLUDED\n \n \n+/* Calculate a number of bits set to 1.  */\n+extern __inline int __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n+_mm_popcnt_u32 (unsigned int __X)\n+{\n+  return __builtin_popcount (__X);\n+}\n+\n+#ifdef __x86_64__\n+extern __inline long long  __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n+_mm_popcnt_u64 (unsigned long long __X)\n+{\n+  return __builtin_popcountll (__X);\n+}\n+#endif\n+\n #endif /* _ABMINTRIN_H_INCLUDED */"}]}