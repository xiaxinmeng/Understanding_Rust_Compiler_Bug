{"sha": "56829cae9cf564f26d4159f6599c045e71c0a41a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTY4MjljYWU5Y2Y1NjRmMjZkNDE1OWY2NTk5YzA0NWU3MWMwYTQxYQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2006-11-16T07:30:18Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2006-11-16T07:30:18Z"}, "message": "i386.c (ix86_function_sseregparm): Fix comment: number of arguments passed to local functions in SSE registers is 3.\n\n\t* config/i386/i386.c (ix86_function_sseregparm): Fix comment:\n\tnumber of arguments passed to local functions in SSE registers is 3.\n\n\t* doc/invoke.texi (Function Attributes) [sseregparm]: Correct\n\tnumber of arguments passed in SSE registers to 3.\n\nFrom-SVN: r118883", "tree": {"sha": "166a18716bb2df62de834e4a683f8be35059330f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/166a18716bb2df62de834e4a683f8be35059330f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56829cae9cf564f26d4159f6599c045e71c0a41a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56829cae9cf564f26d4159f6599c045e71c0a41a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56829cae9cf564f26d4159f6599c045e71c0a41a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56829cae9cf564f26d4159f6599c045e71c0a41a/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "96370780ab54d139fcba44fcc63051de6acad09c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96370780ab54d139fcba44fcc63051de6acad09c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96370780ab54d139fcba44fcc63051de6acad09c"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "eb31d9ffe747b64c3ab07456f433ef0629e13a09", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56829cae9cf564f26d4159f6599c045e71c0a41a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56829cae9cf564f26d4159f6599c045e71c0a41a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=56829cae9cf564f26d4159f6599c045e71c0a41a", "patch": "@@ -1,3 +1,11 @@\n+2006-11-16  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c (ix86_function_sseregparm): Fix comment:\n+\tnumber of arguments passed to local functions in SSE registers is 3.\n+\n+\t* doc/invoke.texi (Function Attributes) [sseregparm]: Correct\n+\tnumber of arguments passed in SSE registers to 3.\n+\n 2006-11-16  Maxim Kuvyrkov  <mkuvyrkov@ispras.ru>\n \n \tPR target/29201\n@@ -34,8 +42,8 @@\n \n \t* config/i386/i386.opt: New target option -mx87regparm.\n \n-\t* config/i386/i386.h (struct ix86_args): Add x87_nregs, x87_regno,\n-\tfloat_in_x87: Add new variables. mmx_words, sse_words: Remove.\n+\t* config/i386/i386.h (struct ix86_args): Add x87_nregs, x87_regno\n+\tand float_in_x87 variables. mmx_words, sse_words: Remove.\n \t(X87_REGPARM_MAX): Define.\n \n \t* config/i386/i386.c (override_options): Error out for"}, {"sha": "4546f4d2b3ea5a71d51d2b2ecce7a9787aa916bb", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56829cae9cf564f26d4159f6599c045e71c0a41a/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56829cae9cf564f26d4159f6599c045e71c0a41a/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=56829cae9cf564f26d4159f6599c045e71c0a41a", "patch": "@@ -2707,9 +2707,9 @@ ix86_function_sseregparm (tree type, tree decl)\n       return 2;\n     }\n \n-  /* For local functions, pass SFmode (and DFmode for SSE2) arguments\n-     in SSE registers even for 32-bit mode and not just 3, but up to\n-     8 SSE arguments in registers.  */\n+  /* For local functions, pass up to SSE_REGPARM_MAX SFmode\n+     (and DFmode for SSE2) arguments in SSE registers,\n+     even for 32-bit targets.  */\n   if (!TARGET_64BIT && decl\n       && TARGET_SSE_MATH && flag_unit_at_a_time && !profile_flag)\n     {"}, {"sha": "079bc37c4634267d306d7f4ed1361ef665ea251c", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56829cae9cf564f26d4159f6599c045e71c0a41a/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56829cae9cf564f26d4159f6599c045e71c0a41a/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=56829cae9cf564f26d4159f6599c045e71c0a41a", "patch": "@@ -2232,7 +2232,7 @@ on the stack.\n @item sseregparm\n @cindex @code{sseregparm} attribute\n On the Intel 386 with SSE support, the @code{sseregparm} attribute\n-causes the compiler to pass up to 8 floating point arguments in\n+causes the compiler to pass up to 3 floating point arguments in\n SSE registers instead of on the stack.  Functions that take a\n variable number of arguments will continue to pass all of their\n floating point arguments on the stack."}]}