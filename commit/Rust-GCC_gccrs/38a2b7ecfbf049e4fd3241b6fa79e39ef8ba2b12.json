{"sha": "38a2b7ecfbf049e4fd3241b6fa79e39ef8ba2b12", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzhhMmI3ZWNmYmYwNDllNGZkMzI0MWI2ZmE3OWUzOWVmOGJhMmIxMg==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@klomp.org", "date": "2018-06-01T23:04:09Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2018-06-01T23:04:09Z"}, "message": "DWARF5: Don't generate DW_AT_loclists_base for split compile unit DIEs.\n\nThe loclists_base attribute is used to point to the beginning of the\nloclists index of a DWARF5 loclists table when using DW_FORM_loclistsx.\nFor split compile units the base is not given by the attribute, but is\neither the first (and only) index in the .debug_loclists.dwo section,\nor (when placed in a .dwp file) given by the DW_SECT_LOCLISTS row in\nthe .debug_cu_index section.\n\nThe loclists_base attribute is only valid for the full (or skeleton)\ncompile unit DIE in the main (relocatable) object. But GCC only ever\ngenerates a loclists table index for the .debug_loclists section put\ninto the split DWARF .dwo file.\n\nFor split compile unit DIEs it is confusing (and not according to spec)\nto also have a DW_AT_loclists_base attribute (which might be wrong,\nsince its relocatable offset won't actually be relocated).\n\ngcc/ChangeLog\n\n\t* dwarf2out.c (dwarf2out_finish): Remove generation of\n\tDW_AT_loclists_base.\n\nFrom-SVN: r261092", "tree": {"sha": "574aa96fa969a93677fad15bdcddde56dfc2895d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/574aa96fa969a93677fad15bdcddde56dfc2895d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38a2b7ecfbf049e4fd3241b6fa79e39ef8ba2b12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38a2b7ecfbf049e4fd3241b6fa79e39ef8ba2b12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38a2b7ecfbf049e4fd3241b6fa79e39ef8ba2b12", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38a2b7ecfbf049e4fd3241b6fa79e39ef8ba2b12/comments", "author": null, "committer": null, "parents": [{"sha": "f8ad043f4c8ea35c5333364fd5b2121dbcb66b71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8ad043f4c8ea35c5333364fd5b2121dbcb66b71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8ad043f4c8ea35c5333364fd5b2121dbcb66b71"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "3278823415cb9e12159e1dfa906697ac6a98df6f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38a2b7ecfbf049e4fd3241b6fa79e39ef8ba2b12/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38a2b7ecfbf049e4fd3241b6fa79e39ef8ba2b12/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=38a2b7ecfbf049e4fd3241b6fa79e39ef8ba2b12", "patch": "@@ -1,3 +1,8 @@\n+2018-06-01  Mark Wielaard  <mark@klomp.org>\n+\n+\t* dwarf2out.c (dwarf2out_finish): Remove generation of\n+\tDW_AT_loclists_base.\n+\n 2018-06-01  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gimple-ssa-store-merging.c: Include gimple-fold.h."}, {"sha": "e3d24e86c1512bd47ea2cfa09e8c5eb39f19f254", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38a2b7ecfbf049e4fd3241b6fa79e39ef8ba2b12/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38a2b7ecfbf049e4fd3241b6fa79e39ef8ba2b12/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=38a2b7ecfbf049e4fd3241b6fa79e39ef8ba2b12", "patch": "@@ -31297,9 +31297,15 @@ dwarf2out_finish (const char *)\n     {\n       if (have_location_lists)\n \t{\n-\t  if (dwarf_version >= 5)\n-\t    add_AT_loclistsptr (comp_unit_die (), DW_AT_loclists_base,\n-\t\t\t\tloc_section_label);\n+\t  /* Since we generate the loclists in the split DWARF .dwo\n+\t     file itself, we don't need to generate a loclists_base\n+\t     attribute for the split compile unit DIE.  That attribute\n+\t     (and using relocatable sec_offset FORMs) isn't allowed\n+\t     for a split compile unit.  Only if the .debug_loclists\n+\t     section was in the main file, would we need to generate a\n+\t     loclists_base attribute here (for the full or skeleton\n+\t     unit DIE).  */\n+\n \t  /* optimize_location_lists calculates the size of the lists,\n \t     so index them first, and assign indices to the entries.\n \t     Although optimize_location_lists will remove entries from"}]}