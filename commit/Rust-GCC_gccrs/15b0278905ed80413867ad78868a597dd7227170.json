{"sha": "15b0278905ed80413867ad78868a597dd7227170", "node_id": "C_kwDOANBUbNoAKDE1YjAyNzg5MDVlZDgwNDEzODY3YWQ3ODg2OGE1OTdkZDcyMjcxNzA", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-08-23T15:23:22Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-12-13T13:00:05Z"}, "message": "gccrs: Add Rust ABI enum helpers\n\nThis is a simple helper over an enum of possible ABI options in Rust.\n\n\tgcc/rust/\n\t* util/rust-abi.cc: New.\n\t* util/rust-abi.h: New.", "tree": {"sha": "27350d5601c64882c651aad4e72934f6ce90c635", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27350d5601c64882c651aad4e72934f6ce90c635"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15b0278905ed80413867ad78868a597dd7227170", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15b0278905ed80413867ad78868a597dd7227170", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15b0278905ed80413867ad78868a597dd7227170", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15b0278905ed80413867ad78868a597dd7227170/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7f8347e83caf8a66fb71e411415ae869c6e6a5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7f8347e83caf8a66fb71e411415ae869c6e6a5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7f8347e83caf8a66fb71e411415ae869c6e6a5c"}], "stats": {"total": 117, "additions": 117, "deletions": 0}, "files": [{"sha": "6477c3790af87542cfb1ed0462987f1ea12a1b00", "filename": "gcc/rust/util/rust-abi.cc", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15b0278905ed80413867ad78868a597dd7227170/gcc%2Frust%2Futil%2Frust-abi.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15b0278905ed80413867ad78868a597dd7227170/gcc%2Frust%2Futil%2Frust-abi.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-abi.cc?ref=15b0278905ed80413867ad78868a597dd7227170", "patch": "@@ -0,0 +1,72 @@\n+// This file is part of GCC.\n+\n+// GCC is free software; you can redistribute it and/or modify it under\n+// the terms of the GNU General Public License as published by the Free\n+// Software Foundation; either version 3, or (at your option) any later\n+// version.\n+\n+// GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+// WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+// for more details.\n+\n+// You should have received a copy of the GNU General Public License\n+// along with GCC; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include \"rust-abi.h\"\n+\n+namespace Rust {\n+\n+Rust::ABI\n+get_abi_from_string (const std::string &abi)\n+{\n+  if (abi.compare (\"rust\") == 0)\n+    return Rust::ABI::RUST;\n+  else if (abi.compare (\"rust-intrinsic\") == 0)\n+    return Rust::ABI::INTRINSIC;\n+  else if (abi.compare (\"C\") == 0)\n+    return Rust::ABI::C;\n+  else if (abi.compare (\"cdecl\") == 0)\n+    return Rust::ABI::CDECL;\n+  else if (abi.compare (\"stdcall\") == 0)\n+    return Rust::ABI::STDCALL;\n+  else if (abi.compare (\"fastcall\") == 0)\n+    return Rust::ABI::FASTCALL;\n+  else if (abi.compare (\"sysv64\") == 0)\n+    return Rust::ABI::SYSV64;\n+  else if (abi.compare (\"win64\") == 0)\n+    return Rust::ABI::WIN64;\n+\n+  return Rust::ABI::UNKNOWN;\n+}\n+\n+std::string\n+get_string_from_abi (Rust::ABI abi)\n+{\n+  switch (abi)\n+    {\n+    case Rust::ABI::RUST:\n+      return \"rust\";\n+    case Rust::ABI::INTRINSIC:\n+      return \"rust-intrinsic\";\n+    case Rust::ABI::C:\n+      return \"C\";\n+    case Rust::ABI::CDECL:\n+      return \"cdecl\";\n+    case Rust::ABI::STDCALL:\n+      return \"stdcall\";\n+    case Rust::ABI::FASTCALL:\n+      return \"fastcall\";\n+    case Rust::ABI::SYSV64:\n+      return \"sysv64\";\n+    case Rust::ABI::WIN64:\n+      return \"win64\";\n+\n+    case Rust::ABI::UNKNOWN:\n+      return \"unknown\";\n+    }\n+  return \"unknown\";\n+}\n+\n+} // namespace Rust"}, {"sha": "d794cc35fb3a4d1051c112ab19999659af654bc7", "filename": "gcc/rust/util/rust-abi.h", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15b0278905ed80413867ad78868a597dd7227170/gcc%2Frust%2Futil%2Frust-abi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15b0278905ed80413867ad78868a597dd7227170/gcc%2Frust%2Futil%2Frust-abi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-abi.h?ref=15b0278905ed80413867ad78868a597dd7227170", "patch": "@@ -0,0 +1,45 @@\n+// This file is part of GCC.\n+\n+// GCC is free software; you can redistribute it and/or modify it under\n+// the terms of the GNU General Public License as published by the Free\n+// Software Foundation; either version 3, or (at your option) any later\n+// version.\n+\n+// GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+// WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+// for more details.\n+\n+// You should have received a copy of the GNU General Public License\n+// along with GCC; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#ifndef RUST_ABI_OPTIONS_H\n+#define RUST_ABI_OPTIONS_H\n+\n+#include \"rust-system.h\"\n+\n+namespace Rust {\n+\n+enum ABI\n+{\n+  UNKNOWN,\n+  RUST,\n+  INTRINSIC,\n+  C,\n+  CDECL,\n+  STDCALL,\n+  FASTCALL,\n+  WIN64,\n+  SYSV64\n+};\n+\n+extern Rust::ABI\n+get_abi_from_string (const std::string &abi);\n+\n+extern std::string\n+get_string_from_abi (Rust::ABI abi);\n+\n+} // namespace Rust\n+\n+#endif // RUST_ABI_OPTIONS_H"}]}