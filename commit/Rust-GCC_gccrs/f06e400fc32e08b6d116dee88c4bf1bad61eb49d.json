{"sha": "f06e400fc32e08b6d116dee88c4bf1bad61eb49d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA2ZTQwMGZjMzJlMDhiNmQxMTZkZWU4OGM0YmYxYmFkNjFlYjQ5ZA==", "commit": {"author": {"name": "Xinliang David Li", "email": "davidxl@google.com", "date": "2010-08-28T05:54:54Z"}, "committer": {"name": "Xinliang David Li", "email": "davidxl@gcc.gnu.org", "date": "2010-08-28T05:54:54Z"}, "message": "Fix PR45422\n\nFrom-SVN: r163610", "tree": {"sha": "3fbf89b7f28d0b81cc3e566570f5e04bfff928f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fbf89b7f28d0b81cc3e566570f5e04bfff928f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f06e400fc32e08b6d116dee88c4bf1bad61eb49d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f06e400fc32e08b6d116dee88c4bf1bad61eb49d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f06e400fc32e08b6d116dee88c4bf1bad61eb49d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f06e400fc32e08b6d116dee88c4bf1bad61eb49d/comments", "author": {"login": "vns-mn", "id": 57157229, "node_id": "MDQ6VXNlcjU3MTU3MjI5", "avatar_url": "https://avatars.githubusercontent.com/u/57157229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vns-mn", "html_url": "https://github.com/vns-mn", "followers_url": "https://api.github.com/users/vns-mn/followers", "following_url": "https://api.github.com/users/vns-mn/following{/other_user}", "gists_url": "https://api.github.com/users/vns-mn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vns-mn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vns-mn/subscriptions", "organizations_url": "https://api.github.com/users/vns-mn/orgs", "repos_url": "https://api.github.com/users/vns-mn/repos", "events_url": "https://api.github.com/users/vns-mn/events{/privacy}", "received_events_url": "https://api.github.com/users/vns-mn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b64336b8b7a1f03f4ba2770b0a528c7818a77c7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b64336b8b7a1f03f4ba2770b0a528c7818a77c7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b64336b8b7a1f03f4ba2770b0a528c7818a77c7e"}], "stats": {"total": 63, "additions": 34, "deletions": 29}, "files": [{"sha": "bddda69c0236eb7eba87325074c97d3fbd664417", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f06e400fc32e08b6d116dee88c4bf1bad61eb49d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f06e400fc32e08b6d116dee88c4bf1bad61eb49d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f06e400fc32e08b6d116dee88c4bf1bad61eb49d", "patch": "@@ -1,3 +1,12 @@\n+2010-08-27  Xinliang David Li  <davidxl@google.com>\n+\n+\tPR/45422\n+\t* tree-ssa-loop-ivopts.c (iv_ca_get_num_inv_exprs): Remove.\n+\t(iv_ca_set_no_cp): Update used inv expr count.\n+\t(iv_ca_set_cp): Ditto.\n+\t(iv_ca_new): Initialize new member.\n+\t(iv_ca_free): Free memory.\n+\n 2010-08-27  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* config/sh/sh-protos.h (sh_function_arg): Delete."}, {"sha": "78bbd8eb296bfab7ca5c36981a0b221e75f1ba44", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 25, "deletions": 29, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f06e400fc32e08b6d116dee88c4bf1bad61eb49d/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f06e400fc32e08b6d116dee88c4bf1bad61eb49d/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=f06e400fc32e08b6d116dee88c4bf1bad61eb49d", "patch": "@@ -327,6 +327,13 @@ struct iv_ca\n   /* Number of times each invariant is used.  */\n   unsigned *n_invariant_uses;\n \n+  /* The array holding the number of uses of each loop\n+     invariant expressions created by ivopt.  */\n+  unsigned *used_inv_expr;\n+\n+  /* The number of created loop invariants.  */\n+  unsigned num_used_inv_expr;\n+\n   /* Total cost of the assignment.  */\n   comp_cost cost;\n };\n@@ -4806,45 +4813,17 @@ iv_ca_cand_for_use (struct iv_ca *ivs, struct iv_use *use)\n   return ivs->cand_for_use[use->id];\n }\n \n-\n-/* Returns the number of temps needed for new loop invariant\n-   expressions.  */\n-\n-static int\n-iv_ca_get_num_inv_exprs (struct ivopts_data *data, struct iv_ca *ivs)\n-{\n-  unsigned i, n = 0;\n-  unsigned *used_inv_expr = XCNEWVEC (unsigned, data->inv_expr_id + 1);\n-\n-  for (i = 0; i < ivs->upto; i++)\n-    {\n-      struct iv_use *use = iv_use (data, i);\n-      struct cost_pair *cp = iv_ca_cand_for_use (ivs, use);\n-      if (cp && cp->inv_expr_id != -1)\n-        {\n-          used_inv_expr[cp->inv_expr_id]++;\n-          if (used_inv_expr[cp->inv_expr_id] == 1)\n-            n++;\n-        }\n-    }\n-\n-  free (used_inv_expr);\n-  return n;\n-}\n-\n /* Computes the cost field of IVS structure.  */\n \n static void\n iv_ca_recount_cost (struct ivopts_data *data, struct iv_ca *ivs)\n {\n-  unsigned n_inv_exprs = 0;\n   comp_cost cost = ivs->cand_use_cost;\n \n   cost.cost += ivs->cand_cost;\n \n-  n_inv_exprs = iv_ca_get_num_inv_exprs (data, ivs);\n   cost.cost += ivopts_global_cost_for_size (data,\n-                                            ivs->n_regs + n_inv_exprs);\n+                                            ivs->n_regs + ivs->num_used_inv_expr);\n \n   ivs->cost = cost;\n }\n@@ -4901,6 +4880,13 @@ iv_ca_set_no_cp (struct ivopts_data *data, struct iv_ca *ivs,\n   ivs->cand_use_cost = sub_costs (ivs->cand_use_cost, cp->cost);\n \n   iv_ca_set_remove_invariants (ivs, cp->depends_on);\n+\n+  if (cp->inv_expr_id != -1)\n+    {\n+      ivs->used_inv_expr[cp->inv_expr_id]--;\n+      if (ivs->used_inv_expr[cp->inv_expr_id] == 0)\n+        ivs->num_used_inv_expr--;\n+    }\n   iv_ca_recount_cost (data, ivs);\n }\n \n@@ -4958,6 +4944,13 @@ iv_ca_set_cp (struct ivopts_data *data, struct iv_ca *ivs,\n \n       ivs->cand_use_cost = add_costs (ivs->cand_use_cost, cp->cost);\n       iv_ca_set_add_invariants (ivs, cp->depends_on);\n+\n+      if (cp->inv_expr_id != -1)\n+        {\n+          ivs->used_inv_expr[cp->inv_expr_id]++;\n+          if (ivs->used_inv_expr[cp->inv_expr_id] == 1)\n+            ivs->num_used_inv_expr++;\n+        }\n       iv_ca_recount_cost (data, ivs);\n     }\n }\n@@ -5165,6 +5158,8 @@ iv_ca_new (struct ivopts_data *data)\n   nw->cand_cost = 0;\n   nw->n_invariant_uses = XCNEWVEC (unsigned, data->max_inv_id + 1);\n   nw->cost = zero_cost;\n+  nw->used_inv_expr = XCNEWVEC (unsigned, data->inv_expr_id + 1);\n+  nw->num_used_inv_expr = 0;\n \n   return nw;\n }\n@@ -5178,6 +5173,7 @@ iv_ca_free (struct iv_ca **ivs)\n   free ((*ivs)->n_cand_uses);\n   BITMAP_FREE ((*ivs)->cands);\n   free ((*ivs)->n_invariant_uses);\n+  free ((*ivs)->used_inv_expr);\n   free (*ivs);\n   *ivs = NULL;\n }"}]}