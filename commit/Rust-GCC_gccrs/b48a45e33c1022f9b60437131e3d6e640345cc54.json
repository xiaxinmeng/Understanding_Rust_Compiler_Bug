{"sha": "b48a45e33c1022f9b60437131e3d6e640345cc54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQ4YTQ1ZTMzYzEwMjJmOWI2MDQzNzEzMWUzZDZlNjQwMzQ1Y2M1NA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2016-06-22T09:55:42Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-06-22T09:55:42Z"}, "message": "lib-xref-spark_specific.adb (Generate_Dereference): Assignment to not commented local variables replaced with direct uses of their...\n\n2016-06-22  Arnaud Charlet  <charlet@adacore.com>\n\n\t* lib-xref-spark_specific.adb (Generate_Dereference): Assignment to not\n\tcommented local variables replaced with direct uses of their values.\n\nFrom-SVN: r237685", "tree": {"sha": "ef830972e9d2e1878bfd955a0b9be903d0abe9d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef830972e9d2e1878bfd955a0b9be903d0abe9d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b48a45e33c1022f9b60437131e3d6e640345cc54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b48a45e33c1022f9b60437131e3d6e640345cc54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b48a45e33c1022f9b60437131e3d6e640345cc54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b48a45e33c1022f9b60437131e3d6e640345cc54/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "22da877084b5911b10f33195eea7487b1aeedb86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22da877084b5911b10f33195eea7487b1aeedb86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22da877084b5911b10f33195eea7487b1aeedb86"}], "stats": {"total": 53, "additions": 43, "deletions": 10}, "files": [{"sha": "dd2f6796335d9042368c15791552f299f487fcd3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b48a45e33c1022f9b60437131e3d6e640345cc54/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b48a45e33c1022f9b60437131e3d6e640345cc54/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b48a45e33c1022f9b60437131e3d6e640345cc54", "patch": "@@ -1,3 +1,8 @@\n+2016-06-22  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* lib-xref-spark_specific.adb (Generate_Dereference): Assignment to not\n+\tcommented local variables replaced with direct uses of their values.\n+\n 2016-06-22  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_ch7.adb (Add_Invariant): Replace the"}, {"sha": "ce4ded82d50ee9483e4e3a9a5565dd780e1826b5", "filename": "gcc/ada/lib-xref-spark_specific.adb", "status": "modified", "additions": 38, "deletions": 10, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b48a45e33c1022f9b60437131e3d6e640345cc54/gcc%2Fada%2Flib-xref-spark_specific.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b48a45e33c1022f9b60437131e3d6e640345cc54/gcc%2Fada%2Flib-xref-spark_specific.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref-spark_specific.adb?ref=b48a45e33c1022f9b60437131e3d6e640345cc54", "patch": "@@ -929,7 +929,40 @@ package body SPARK_Specific is\n            and then Cunit_Entity (Sdep_Table (D1)) =\n                     Cunit_Entity (Sdep_Table (D1 + 1))\n          then\n-            D2 := D1 + 1;\n+            declare\n+               Cunit1 : Node_Id renames Cunit (Sdep_Table (D1));\n+               Cunit2 : Node_Id renames Cunit (Sdep_Table (D1 + 1));\n+            begin\n+               --  Both Cunit point to compilation unit nodes\n+               pragma Assert (Nkind (Cunit1) = N_Compilation_Unit\n+                                and then\n+                              Nkind (Cunit2) = N_Compilation_Unit);\n+\n+               --  Do not depend on the sorting order, which is based on\n+               --  Unit_Name and for library-level instances of nested\n+               --  generic-packages they are equal.\n+\n+               --  If declaration comes before the body then just set D2\n+               if Nkind (Unit (Cunit1)) = N_Package_Declaration\n+                 and then\n+                  Nkind (Unit (Cunit2)) = N_Package_Body\n+               then\n+                  D2 := D1 + 1;\n+\n+               --  If body comes before declaration then set D2 and adjust D1\n+\n+               elsif Nkind (Unit (Cunit1)) = N_Package_Body\n+                       and then\n+                     Nkind (Unit (Cunit2)) = N_Package_Declaration\n+               then\n+                  D2 := D1;\n+                  D1 := D1 + 1;\n+\n+               else\n+\n+                  raise Program_Error;\n+               end if;\n+            end;\n          else\n             D2 := D1;\n          end if;\n@@ -945,7 +978,7 @@ package body SPARK_Specific is\n                Dspec => D2);\n          end if;\n \n-         D1 := D2 + 1;\n+         D1 := Pos'Max (D1, D2) + 1;\n       end loop;\n \n       --  Fill in the spec information when relevant\n@@ -1164,29 +1197,24 @@ package body SPARK_Specific is\n \n       --  Local variables\n \n-      Loc       : constant Source_Ptr := Sloc (N);\n-      Index     : Nat;\n-      Ref_Scope : Entity_Id;\n+      Loc : constant Source_Ptr := Sloc (N);\n \n    --  Start of processing for Generate_Dereference\n \n    begin\n \n       if Loc > No_Location then\n          Drefs.Increment_Last;\n-         Index := Drefs.Last;\n \n          declare\n-            Deref_Entry : Xref_Entry renames Drefs.Table (Index);\n+            Deref_Entry : Xref_Entry renames Drefs.Table (Drefs.Last);\n             Deref       : Xref_Key   renames Deref_Entry.Key;\n \n          begin\n             if No (Heap) then\n                Create_Heap;\n             end if;\n \n-            Ref_Scope := Enclosing_Subprogram_Or_Library_Package (N);\n-\n             Deref.Ent := Heap;\n             Deref.Loc := Loc;\n             Deref.Typ := Typ;\n@@ -1199,7 +1227,7 @@ package body SPARK_Specific is\n             Deref.Eun := Main_Unit;\n             Deref.Lun := Get_Top_Level_Code_Unit (Loc);\n \n-            Deref.Ref_Scope := Ref_Scope;\n+            Deref.Ref_Scope := Enclosing_Subprogram_Or_Library_Package (N);\n             Deref.Ent_Scope := Cunit_Entity (Main_Unit);\n \n             Deref_Entry.Def := No_Location;"}]}