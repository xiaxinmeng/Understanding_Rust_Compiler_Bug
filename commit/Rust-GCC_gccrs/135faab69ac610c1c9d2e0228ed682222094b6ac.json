{"sha": "135faab69ac610c1c9d2e0228ed682222094b6ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM1ZmFhYjY5YWM2MTBjMWM5ZDJlMDIyOGVkNjgyMjIyMDk0YjZhYw==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.vnet.ibm.com", "date": "2013-06-13T19:46:29Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2013-06-13T19:46:29Z"}, "message": "rs6000.c (rs6000_option_override_internal): Move test for clearing quad memory on 32-bit later.\n\n2013-06-13  Michael Meissner  <meissner@linux.vnet.ibm.com>\n\n\t* config/rs6000/rs6000.c (rs6000_option_override_internal): Move\n\ttest for clearing quad memory on 32-bit later.\n\nFrom-SVN: r200074", "tree": {"sha": "749a0de491a513ced0175167b97bcf82440db775", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/749a0de491a513ced0175167b97bcf82440db775"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/135faab69ac610c1c9d2e0228ed682222094b6ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/135faab69ac610c1c9d2e0228ed682222094b6ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/135faab69ac610c1c9d2e0228ed682222094b6ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/135faab69ac610c1c9d2e0228ed682222094b6ac/comments", "author": null, "committer": null, "parents": [{"sha": "948a1fd93681cc364caf89dbd6bb7f746d0fa576", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/948a1fd93681cc364caf89dbd6bb7f746d0fa576", "html_url": "https://github.com/Rust-GCC/gccrs/commit/948a1fd93681cc364caf89dbd6bb7f746d0fa576"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "5096b2e5f8580f97a634faaaae84fdf025115c5b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/135faab69ac610c1c9d2e0228ed682222094b6ac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/135faab69ac610c1c9d2e0228ed682222094b6ac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=135faab69ac610c1c9d2e0228ed682222094b6ac", "patch": "@@ -1,3 +1,8 @@\n+2013-06-13  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_option_override_internal): Move\n+\ttest for clearing quad memory on 32-bit later.\n+\n 2013-06-13  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* fold-const.c (negate_expr_p): Handle VECTOR_CST."}, {"sha": "55273ab81bd49226d875dc7a0b565fa7eade0e18", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/135faab69ac610c1c9d2e0228ed682222094b6ac/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/135faab69ac610c1c9d2e0228ed682222094b6ac/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=135faab69ac610c1c9d2e0228ed682222094b6ac", "patch": "@@ -2979,16 +2979,6 @@ rs6000_option_override_internal (bool global_init_p)\n \t}\n     }\n \n-  /* The quad memory instructions only works in 64-bit mode. In 32-bit mode,\n-     silently turn off quad memory mode.  */\n-  if (TARGET_QUAD_MEMORY && !TARGET_POWERPC64)\n-    {\n-      if ((rs6000_isa_flags_explicit & OPTION_MASK_QUAD_MEMORY) != 0)\n-\twarning (0, N_(\"-mquad-memory requires 64-bit mode\"));\n-\n-      rs6000_isa_flags &= ~OPTION_MASK_QUAD_MEMORY;\n-    }\n-\n   if (TARGET_DEBUG_REG || TARGET_DEBUG_TARGET)\n     rs6000_print_isa_options (stderr, 0, \"before defaults\", rs6000_isa_flags);\n \n@@ -3046,6 +3036,16 @@ rs6000_option_override_internal (bool global_init_p)\n       rs6000_isa_flags &= ~OPTION_MASK_VSX_TIMODE;\n     }\n \n+  /* The quad memory instructions only works in 64-bit mode. In 32-bit mode,\n+     silently turn off quad memory mode.  */\n+  if (TARGET_QUAD_MEMORY && !TARGET_POWERPC64)\n+    {\n+      if ((rs6000_isa_flags_explicit & OPTION_MASK_QUAD_MEMORY) != 0)\n+\twarning (0, N_(\"-mquad-memory requires 64-bit mode\"));\n+\n+      rs6000_isa_flags &= ~OPTION_MASK_QUAD_MEMORY;\n+    }\n+\n   if (TARGET_DEBUG_REG || TARGET_DEBUG_TARGET)\n     rs6000_print_isa_options (stderr, 0, \"after defaults\", rs6000_isa_flags);\n "}]}