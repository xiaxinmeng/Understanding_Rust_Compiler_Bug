{"sha": "9fcaf0599124d58dbc96fec1f975fa142a8519cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWZjYWYwNTk5MTI0ZDU4ZGJjOTZmZWMxZjk3NWZhMTQyYTg1MTljZg==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2017-07-24T19:47:15Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2017-07-24T19:47:15Z"}, "message": "cfgrtl: Don't crash in rtl_dump_bb if BB_END(bb) is NULL\n\nCurrently rtl_dump_bb crashes if BB_END(bb) is NULL, like it can be\nduring expand (rtl_dump_bb can be called at any time, by the emergency\ndump added recently for example).\n\nThis fixes it.\n\n\n\t* cfgrtl.c (rtl_dump_bb): Don't call NEXT_INSN on NULL.\n\nFrom-SVN: r250480", "tree": {"sha": "37d16339c1aa6c156c66f5de8ebeec600674ad83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37d16339c1aa6c156c66f5de8ebeec600674ad83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9fcaf0599124d58dbc96fec1f975fa142a8519cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fcaf0599124d58dbc96fec1f975fa142a8519cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fcaf0599124d58dbc96fec1f975fa142a8519cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fcaf0599124d58dbc96fec1f975fa142a8519cf/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d47d34bb22f756731475ea700d165f4d855d712f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d47d34bb22f756731475ea700d165f4d855d712f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d47d34bb22f756731475ea700d165f4d855d712f"}], "stats": {"total": 34, "additions": 20, "deletions": 14}, "files": [{"sha": "897c605701db9e0cc30d8cf8f629747bbb772f48", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fcaf0599124d58dbc96fec1f975fa142a8519cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fcaf0599124d58dbc96fec1f975fa142a8519cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9fcaf0599124d58dbc96fec1f975fa142a8519cf", "patch": "@@ -1,3 +1,7 @@\n+2017-07-24  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* cfgrtl.c (rtl_dump_bb): Don't call NEXT_INSN on NULL.\n+\n 2017-07-24  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \tPR target/79041"}, {"sha": "6ef47b7e61f4f46684ef3ca99289104e2298215f", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fcaf0599124d58dbc96fec1f975fa142a8519cf/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fcaf0599124d58dbc96fec1f975fa142a8519cf/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=9fcaf0599124d58dbc96fec1f975fa142a8519cf", "patch": "@@ -2109,8 +2109,6 @@ commit_edge_insertions (void)\n static void\n rtl_dump_bb (FILE *outf, basic_block bb, int indent, dump_flags_t flags)\n {\n-  rtx_insn *insn;\n-  rtx_insn *last;\n   char *s_indent;\n \n   s_indent = (char *) alloca ((size_t) indent + 1);\n@@ -2124,18 +2122,22 @@ rtl_dump_bb (FILE *outf, basic_block bb, int indent, dump_flags_t flags)\n     }\n \n   if (bb->index != ENTRY_BLOCK && bb->index != EXIT_BLOCK)\n-    for (insn = BB_HEAD (bb), last = NEXT_INSN (BB_END (bb)); insn != last;\n-\t insn = NEXT_INSN (insn))\n-      {\n-\tif (flags & TDF_DETAILS)\n-\t  df_dump_insn_top (insn, outf);\n-\tif (! (flags & TDF_SLIM))\n-\t  print_rtl_single (outf, insn);\n-\telse\n-\t  dump_insn_slim (outf, insn);\n-\tif (flags & TDF_DETAILS)\n-\t  df_dump_insn_bottom (insn, outf);\n-      }\n+    {\n+      rtx_insn *last = BB_END (bb);\n+      if (last)\n+\tlast = NEXT_INSN (last);\n+      for (rtx_insn *insn = BB_HEAD (bb); insn != last; insn = NEXT_INSN (insn))\n+\t{\n+\t  if (flags & TDF_DETAILS)\n+\t    df_dump_insn_top (insn, outf);\n+\t  if (! (flags & TDF_SLIM))\n+\t    print_rtl_single (outf, insn);\n+\t  else\n+\t    dump_insn_slim (outf, insn);\n+\t  if (flags & TDF_DETAILS)\n+\t    df_dump_insn_bottom (insn, outf);\n+\t}\n+    }\n \n   if (df && (flags & TDF_DETAILS))\n     {"}]}