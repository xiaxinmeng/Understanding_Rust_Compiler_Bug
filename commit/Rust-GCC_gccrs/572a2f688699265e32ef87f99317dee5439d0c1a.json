{"sha": "572a2f688699265e32ef87f99317dee5439d0c1a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTcyYTJmNjg4Njk5MjY1ZTMyZWY4N2Y5OTMxN2RlZTU0MzlkMGMxYQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-04-03T18:26:57Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-04-03T18:26:57Z"}, "message": "gotest: Fix finding functions on PPC.\n\nFrom-SVN: r186112", "tree": {"sha": "15acfff0fb36b790c36320bbec36c7bca0b9df08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15acfff0fb36b790c36320bbec36c7bca0b9df08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/572a2f688699265e32ef87f99317dee5439d0c1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/572a2f688699265e32ef87f99317dee5439d0c1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/572a2f688699265e32ef87f99317dee5439d0c1a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/572a2f688699265e32ef87f99317dee5439d0c1a/comments", "author": null, "committer": null, "parents": [{"sha": "1d0bafd9b0e507476c84a95d5d0f5d82ff7100f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d0bafd9b0e507476c84a95d5d0f5d82ff7100f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d0bafd9b0e507476c84a95d5d0f5d82ff7100f3"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "11a650be689f113969a573f3d03f4d073e5e0e8c", "filename": "libgo/Makefile.am", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/572a2f688699265e32ef87f99317dee5439d0c1a/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/572a2f688699265e32ef87f99317dee5439d0c1a/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=572a2f688699265e32ef87f99317dee5439d0c1a", "patch": "@@ -1808,9 +1808,9 @@ CHECK = \\\n \tprefix=`if test \"$(@D)\" = \"regexp\"; then echo regexp-test; else dirname $(@D); fi`; \\\n \ttest \"$${prefix}\" != \".\" || prefix=\"$(@D)\"; \\\n \tif test \"$(use_dejagnu)\" = \"yes\"; then \\\n-\t  $(SHELL) $(srcdir)/testsuite/gotest --dejagnu=yes --basedir=$(srcdir) --srcdir=$(srcdir)/go/$(@D) --prefix=\"libgo_$${prefix}\" --pkgfiles=\"$(go_$(subst /,_,$(@D))_files)\" --testname=\"$(@D)\" $(GOTESTFLAGS); \\\n+\t  $(SHELL) $(srcdir)/testsuite/gotest --dejagnu=yes --basedir=$(srcdir) --srcdir=$(srcdir)/go/$(@D) --prefix=\"libgo_$${prefix}\" --pkgfiles=\"$(go_$(subst /,_,$(@D))_files)\" --testname=\"$(@D)\" --goarch=\"$(GOARCH)\" $(GOTESTFLAGS); \\\n \telse \\\n-\t  if $(SHELL) $(srcdir)/testsuite/gotest --basedir=$(srcdir) --srcdir=$(srcdir)/go/$(@D) --prefix=\"libgo_$${prefix}\" --pkgfiles=\"$(go_$(subst /,_,$(@D))_files)\" $(GOTESTFLAGS) >>$@-testlog 2>&1; then \\\n+\t  if $(SHELL) $(srcdir)/testsuite/gotest --basedir=$(srcdir) --srcdir=$(srcdir)/go/$(@D) --prefix=\"libgo_$${prefix}\" --pkgfiles=\"$(go_$(subst /,_,$(@D))_files)\" --goarch=\"$(GOARCH)\" $(GOTESTFLAGS) >>$@-testlog 2>&1; then \\\n \t    echo \"PASS: $(@D)\" >> $@-testlog; \\\n \t    echo \"PASS: $(@D)\"; \\\n \t    echo \"PASS: $(@D)\" > $@-testsum; \\"}, {"sha": "f790205bed42abf718d7d69517016a9bfa968955", "filename": "libgo/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/572a2f688699265e32ef87f99317dee5439d0c1a/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/572a2f688699265e32ef87f99317dee5439d0c1a/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=572a2f688699265e32ef87f99317dee5439d0c1a", "patch": "@@ -2045,9 +2045,9 @@ CHECK = \\\n \tprefix=`if test \"$(@D)\" = \"regexp\"; then echo regexp-test; else dirname $(@D); fi`; \\\n \ttest \"$${prefix}\" != \".\" || prefix=\"$(@D)\"; \\\n \tif test \"$(use_dejagnu)\" = \"yes\"; then \\\n-\t  $(SHELL) $(srcdir)/testsuite/gotest --dejagnu=yes --basedir=$(srcdir) --srcdir=$(srcdir)/go/$(@D) --prefix=\"libgo_$${prefix}\" --pkgfiles=\"$(go_$(subst /,_,$(@D))_files)\" --testname=\"$(@D)\" $(GOTESTFLAGS); \\\n+\t  $(SHELL) $(srcdir)/testsuite/gotest --dejagnu=yes --basedir=$(srcdir) --srcdir=$(srcdir)/go/$(@D) --prefix=\"libgo_$${prefix}\" --pkgfiles=\"$(go_$(subst /,_,$(@D))_files)\" --testname=\"$(@D)\" --goarch=\"$(GOARCH)\" $(GOTESTFLAGS); \\\n \telse \\\n-\t  if $(SHELL) $(srcdir)/testsuite/gotest --basedir=$(srcdir) --srcdir=$(srcdir)/go/$(@D) --prefix=\"libgo_$${prefix}\" --pkgfiles=\"$(go_$(subst /,_,$(@D))_files)\" $(GOTESTFLAGS) >>$@-testlog 2>&1; then \\\n+\t  if $(SHELL) $(srcdir)/testsuite/gotest --basedir=$(srcdir) --srcdir=$(srcdir)/go/$(@D) --prefix=\"libgo_$${prefix}\" --pkgfiles=\"$(go_$(subst /,_,$(@D))_files)\" --goarch=\"$(GOARCH)\" $(GOTESTFLAGS) >>$@-testlog 2>&1; then \\\n \t    echo \"PASS: $(@D)\" >> $@-testlog; \\\n \t    echo \"PASS: $(@D)\"; \\\n \t    echo \"PASS: $(@D)\" > $@-testsum; \\"}, {"sha": "aac67bfbcfb44b294818eac63c9b3bc80ac02351", "filename": "libgo/testsuite/gotest", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/572a2f688699265e32ef87f99317dee5439d0c1a/libgo%2Ftestsuite%2Fgotest", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/572a2f688699265e32ef87f99317dee5439d0c1a/libgo%2Ftestsuite%2Fgotest", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Ftestsuite%2Fgotest?ref=572a2f688699265e32ef87f99317dee5439d0c1a", "patch": "@@ -32,6 +32,7 @@ loop=true\n keep=false\n prefix=\n dejagnu=no\n+GOARCH=\"\"\n timeout=240\n testname=\"\"\n trace=false\n@@ -86,6 +87,15 @@ while $loop; do\n \t\tdejagnu=`echo $1 | sed -e 's/^--dejagnu=//'`\n \t\tshift\n \t\t;;\n+\tx--goarch)\n+\t\tGOARCH=$2\n+\t\tshift\n+\t\tshift\n+\t\t;;\n+\tx--goarch=*)\n+\t\tGOARCH=`echo $1 | sed -e 's/^--goarch=//'`\n+\t\tshift\n+\t\t;;\n \tx--timeout)\n \t\ttimeout=$2\n \t\tshift\n@@ -326,13 +336,18 @@ localname() {\n }\n \n {\n+\ttext=\"T\"\n+\tcase \"$GOARCH\" in\n+\tppc*) text=\"D\" ;;\n+\tesac\n+\n \t# test functions are named TestFoo\n \t# the grep -v eliminates methods and other special names\n \t# that have multiple dots.\n \tpattern='Test([^a-z].*)?'\n \t# The -p option tells GNU nm not to sort.\n \t# The -v option tells Solaris nm to sort by value.\n-\ttests=$($NM -p -v _gotest_.o $xofile | egrep ' T .*\\.'$pattern'$' | grep -v '\\..*\\..*\\.' | fgrep -v '$' | sed 's/.* //' | sed 's/.*\\.\\(.*\\.\\)/\\1/')\n+\ttests=$($NM -p -v _gotest_.o $xofile | egrep \" $text .*\\.\"$pattern'$' | grep -v '\\..*\\..*\\.' | fgrep -v '$' | sed 's/.* //' | sed 's/.*\\.\\(.*\\.\\)/\\1/')\n \tif [ \"x$tests\" = x ]; then\n \t\techo 'gotest: warning: no tests matching '$pattern in _gotest_.o $xofile 1>&2\n \t\texit 2"}]}