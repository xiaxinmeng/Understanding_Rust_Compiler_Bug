{"sha": "aba6453890ce1754b7d1c01a67612766690ff15e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWJhNjQ1Mzg5MGNlMTc1NGI3ZDFjMDFhNjc2MTI3NjY2OTBmZjE1ZQ==", "commit": {"author": {"name": "Aaron Sawdey", "email": "acsawdey@linux.ibm.com", "date": "2020-04-14T19:38:47Z"}, "committer": {"name": "Aaron Sawdey", "email": "acsawdey@linux.ibm.com", "date": "2020-04-14T19:38:47Z"}, "message": "Fix for PR/94542, do not make TLS refs PC-relative\n\nFor rs6000 target, it is not valid to make PC-relative\nreferences to TLS symbols. So addr_to_insn_form() needs\nto check if things are TLS before returning PC-rel forms.\n\n2020-04-14  Aaron Sawdey  <acsawdey@linux.ibm.com>\n\n\tPR target/94542\n\t* config/rs6000/rs6000.c (address_to_insn_form): Do not attempt to\n\tuse PC-relative addressing for TLS references.", "tree": {"sha": "e8e492c75ed16f848e383ae796080b75e63529ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8e492c75ed16f848e383ae796080b75e63529ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aba6453890ce1754b7d1c01a67612766690ff15e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aba6453890ce1754b7d1c01a67612766690ff15e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aba6453890ce1754b7d1c01a67612766690ff15e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aba6453890ce1754b7d1c01a67612766690ff15e/comments", "author": {"login": "acsawdey", "id": 41373646, "node_id": "MDQ6VXNlcjQxMzczNjQ2", "avatar_url": "https://avatars.githubusercontent.com/u/41373646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acsawdey", "html_url": "https://github.com/acsawdey", "followers_url": "https://api.github.com/users/acsawdey/followers", "following_url": "https://api.github.com/users/acsawdey/following{/other_user}", "gists_url": "https://api.github.com/users/acsawdey/gists{/gist_id}", "starred_url": "https://api.github.com/users/acsawdey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acsawdey/subscriptions", "organizations_url": "https://api.github.com/users/acsawdey/orgs", "repos_url": "https://api.github.com/users/acsawdey/repos", "events_url": "https://api.github.com/users/acsawdey/events{/privacy}", "received_events_url": "https://api.github.com/users/acsawdey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "acsawdey", "id": 41373646, "node_id": "MDQ6VXNlcjQxMzczNjQ2", "avatar_url": "https://avatars.githubusercontent.com/u/41373646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acsawdey", "html_url": "https://github.com/acsawdey", "followers_url": "https://api.github.com/users/acsawdey/followers", "following_url": "https://api.github.com/users/acsawdey/following{/other_user}", "gists_url": "https://api.github.com/users/acsawdey/gists{/gist_id}", "starred_url": "https://api.github.com/users/acsawdey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acsawdey/subscriptions", "organizations_url": "https://api.github.com/users/acsawdey/orgs", "repos_url": "https://api.github.com/users/acsawdey/repos", "events_url": "https://api.github.com/users/acsawdey/events{/privacy}", "received_events_url": "https://api.github.com/users/acsawdey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52d4ed1d96d48e2ceafc89a8734e14de3d5de3fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52d4ed1d96d48e2ceafc89a8734e14de3d5de3fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52d4ed1d96d48e2ceafc89a8734e14de3d5de3fe"}], "stats": {"total": 39, "additions": 28, "deletions": 11}, "files": [{"sha": "e88c0e13d15ff10cc6129a0b014ed2f0074976b6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aba6453890ce1754b7d1c01a67612766690ff15e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aba6453890ce1754b7d1c01a67612766690ff15e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aba6453890ce1754b7d1c01a67612766690ff15e", "patch": "@@ -1,3 +1,9 @@\n+2020-04-14  Aaron Sawdey  <acsawdey@linux.ibm.com>\n+\n+\tPR target/94542\n+\t* config/rs6000/rs6000.c (address_to_insn_form): Do not attempt to\n+\tuse PC-relative addressing for TLS references.\n+\n 2020-04-14  Martin Jambor  <mjambor@suse.cz>\n \n \tPR ipa/94434"}, {"sha": "4defc1ab52be141ad7a42685a3548c42c6d4c868", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 22, "deletions": 11, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aba6453890ce1754b7d1c01a67612766690ff15e/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aba6453890ce1754b7d1c01a67612766690ff15e/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=aba6453890ce1754b7d1c01a67612766690ff15e", "patch": "@@ -24824,15 +24824,21 @@ address_to_insn_form (rtx addr,\n   if (GET_RTX_CLASS (GET_CODE (addr)) == RTX_AUTOINC)\n     return INSN_FORM_UPDATE;\n \n-  /* Handle PC-relative symbols and labels.  Check for both local and external\n-     symbols.  Assume labels are always local.  */\n+  /* Handle PC-relative symbols and labels.  Check for both local and\n+     external symbols.  Assume labels are always local.  TLS symbols\n+     are not PC-relative for rs6000.  */\n   if (TARGET_PCREL)\n     {\n-      if (SYMBOL_REF_P (addr) && !SYMBOL_REF_LOCAL_P (addr))\n-\treturn INSN_FORM_PCREL_EXTERNAL;\n-\n-      if (SYMBOL_REF_P (addr) || LABEL_REF_P (addr))\n+      if (LABEL_REF_P (addr))\n \treturn INSN_FORM_PCREL_LOCAL;\n+\n+      if (SYMBOL_REF_P (addr) && !SYMBOL_REF_TLS_MODEL (addr))\n+\t{\n+\t  if (!SYMBOL_REF_LOCAL_P (addr))\n+\t    return INSN_FORM_PCREL_EXTERNAL;\n+\t  else\n+\t    return INSN_FORM_PCREL_LOCAL;\n+\t}\n     }\n \n   if (GET_CODE (addr) == CONST)\n@@ -24866,14 +24872,19 @@ address_to_insn_form (rtx addr,\n     return INSN_FORM_BAD;\n \n   /* Check for local and external PC-relative addresses.  Labels are always\n-     local.  */\n+     local.  TLS symbols are not PC-relative for rs6000.  */\n   if (TARGET_PCREL)\n     {\n-      if (SYMBOL_REF_P (op0) && !SYMBOL_REF_LOCAL_P (op0))\n-\treturn INSN_FORM_PCREL_EXTERNAL;\n-\n-      if (SYMBOL_REF_P (op0) || LABEL_REF_P (op0))\n+      if (LABEL_REF_P (op0))\n \treturn INSN_FORM_PCREL_LOCAL;\n+\n+      if (SYMBOL_REF_P (op0) && !SYMBOL_REF_TLS_MODEL (op0))\n+\t{\n+\t  if (!SYMBOL_REF_LOCAL_P (op0))\n+\t    return INSN_FORM_PCREL_EXTERNAL;\n+\t  else\n+\t    return INSN_FORM_PCREL_LOCAL;\n+\t}\n     }\n \n   /* If it isn't PC-relative, the address must use a base register.  */"}]}