{"sha": "081b3517b4df826ac917147eb906bbb8fc6528b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDgxYjM1MTdiNGRmODI2YWM5MTcxNDdlYjkwNmJiYjhmYzY1MjhiMQ==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2020-09-17T15:18:48Z"}, "committer": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2020-09-26T15:59:24Z"}, "message": "aix: Fix _STDC_FORMAT_MACROS in inttypes.h [PR97044]\n\nAIX protects the STDC Format Macros in a manner that can prevent the\ndefinition of the macros depending on the order of header inclusion.\n\nThe protection of the macros was referenced in C99, removed in C11, and\nnever specified in any C++ standard. Also, the macros are in the namespace\nreserved to the implementation (compiler) so the compiler is permitted to\nchoose to inject those names.\n\nfixincludes/ChangeLog:\n\n2020-09-17  David Edelsohn  <dje.gcc@gmail.com>\n\n\tPR target/97044\n\t* inclhack.def (aix_inttypes): New fix.\n\t* fixincl.x: Regenerate.\n\t* tests/base/sys/inttypes.h: New file.", "tree": {"sha": "abcb85bfed0b493ed8602b013bb146f8173a41ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/abcb85bfed0b493ed8602b013bb146f8173a41ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/081b3517b4df826ac917147eb906bbb8fc6528b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/081b3517b4df826ac917147eb906bbb8fc6528b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/081b3517b4df826ac917147eb906bbb8fc6528b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/081b3517b4df826ac917147eb906bbb8fc6528b1/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e721d1137fb3f0323d31b767bc64c772086ff868", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e721d1137fb3f0323d31b767bc64c772086ff868", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e721d1137fb3f0323d31b767bc64c772086ff868"}], "stats": {"total": 80, "additions": 75, "deletions": 5}, "files": [{"sha": "cb966829ba3b964c7272f1da18969e6d82d3d0c2", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 48, "deletions": 5, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/081b3517b4df826ac917147eb906bbb8fc6528b1/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/081b3517b4df826ac917147eb906bbb8fc6528b1/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=081b3517b4df826ac917147eb906bbb8fc6528b1", "patch": "@@ -2,11 +2,11 @@\n  *\n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  *\n- * It has been AutoGen-ed  September 16, 2020 at 06:34:57 PM by AutoGen 5.18\n+ * It has been AutoGen-ed  September 17, 2020 at 03:10:47 PM by AutoGen 5.18\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Wed Sep 16 18:34:57 UTC 2020\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Thu Sep 17 15:10:47 UTC 2020\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 258 fixup descriptions.\n+ * This file contains 259 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -883,6 +883,43 @@ static const char* apzAix_Externcpp2Patch[] = {\n #else  /* __cplusplus */\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Aix_Inttypes fix\n+ */\n+tSCC zAix_InttypesName[] =\n+     \"aix_inttypes\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zAix_InttypesList[] =\n+  \"sys/inttypes.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzAix_InttypesMachs[] = {\n+        \"*-*-aix*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zAix_InttypesSelect0[] =\n+       \"#if !defined\\\\(__cplusplus\\\\) \\\\|\\\\| defined\\\\(__STDC_FORMAT_MACROS\\\\)\";\n+\n+#define    AIX_INTTYPES_TEST_CT  1\n+static tTestDesc aAix_InttypesTests[] = {\n+  { TT_EGREP,    zAix_InttypesSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Aix_Inttypes\n+ */\n+static const char* apzAix_InttypesPatch[] = {\n+    \"format\",\n+    \"#if 1\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Aix_Malloc fix\n@@ -10480,9 +10517,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          296\n+#define REGEX_COUNT          297\n #define MACH_LIST_SIZE_LIMIT 187\n-#define FIX_COUNT            258\n+#define FIX_COUNT            259\n \n /*\n  *  Enumerate the fixes\n@@ -10505,6 +10542,7 @@ typedef enum {\n     AIX_EXTERNC_FIXIDX,\n     AIX_EXTERNCPP1_FIXIDX,\n     AIX_EXTERNCPP2_FIXIDX,\n+    AIX_INTTYPES_FIXIDX,\n     AIX_MALLOC_FIXIDX,\n     AIX_NET_IF_ARP_FIXIDX,\n     AIX_NULL_FIXIDX,\n@@ -10834,6 +10872,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      AIX_EXTERNCPP2_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aAix_Externcpp2Tests,   apzAix_Externcpp2Patch, 0 },\n \n+  {  zAix_InttypesName,    zAix_InttypesList,\n+     apzAix_InttypesMachs,\n+     AIX_INTTYPES_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aAix_InttypesTests,   apzAix_InttypesPatch, 0 },\n+\n   {  zAix_MallocName,    zAix_MallocList,\n      apzAix_MallocMachs,\n      AIX_MALLOC_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "6e59be981d67bc5fe126649e3d2b221208252c65", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/081b3517b4df826ac917147eb906bbb8fc6528b1/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/081b3517b4df826ac917147eb906bbb8fc6528b1/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=081b3517b4df826ac917147eb906bbb8fc6528b1", "patch": "@@ -577,6 +577,19 @@ fix = {\n \t      \"#else  /* __cplusplus */\";\n };\n \n+/*\n+ *  inttypes.h STDC_FORMAT_MACROS\n+ */\n+fix = {\n+    hackname  = aix_inttypes;\n+    mach      = \"*-*-aix*\";\n+    files     = \"sys/inttypes.h\";\n+    select    = \"#if !defined\\\\(__cplusplus\\\\) \\\\|\\\\| defined\\\\(__STDC_FORMAT_MACROS\\\\)\";\n+    c_fix     = format;\n+    c_fix_arg = \"#if 1\";\n+    test_text = \"#if !defined(__cplusplus) || defined(__STDC_FORMAT_MACROS)\";\n+};\n+\n /*\n  *  malloc.h on AIX6 uses XLC++ specific builtin syntax\n  */"}, {"sha": "f349bdacdbf26a081864841aa0fe3c2dca5a91ac", "filename": "fixincludes/tests/base/sys/inttypes.h", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/081b3517b4df826ac917147eb906bbb8fc6528b1/fixincludes%2Ftests%2Fbase%2Fsys%2Finttypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/081b3517b4df826ac917147eb906bbb8fc6528b1/fixincludes%2Ftests%2Fbase%2Fsys%2Finttypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fsys%2Finttypes.h?ref=081b3517b4df826ac917147eb906bbb8fc6528b1", "patch": "@@ -0,0 +1,14 @@\n+/*  DO NOT EDIT THIS FILE.\n+\n+    It has been auto-edited by fixincludes from:\n+\n+\t\"fixinc/tests/inc/sys/inttypes.h\"\n+\n+    This had to be done to correct non-standard usages in the\n+    original, manufacturer supplied header file.  */\n+\n+\n+\n+#if defined( AIX_INTTYPES_CHECK )\n+#if 1\n+#endif  /* AIX_INTTYPES_CHECK */"}]}