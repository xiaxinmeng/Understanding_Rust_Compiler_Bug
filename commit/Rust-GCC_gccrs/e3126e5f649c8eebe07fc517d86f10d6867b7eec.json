{"sha": "e3126e5f649c8eebe07fc517d86f10d6867b7eec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTMxMjZlNWY2NDljOGVlYmUwN2ZjNTE3ZDg2ZjEwZDY4NjdiN2VlYw==", "commit": {"author": {"name": "Sudakshina Das", "email": "sudi.das@arm.com", "date": "2019-12-09T10:22:01Z"}, "committer": {"name": "Sudakshina Das", "email": "sudi@gcc.gnu.org", "date": "2019-12-09T10:22:01Z"}, "message": "[GCC, Vect] Fix costing for vector shifts\n\nWhile looking at the vectorization for following example, we realized that\neven though vectorizable_shift function was distinguishing vector shifted\nby vector from vector shifted by scalar, while modelling the cost it would\nalways add the cost of building a vector constant despite not needing it for\nvector shifted by scalar.\n\nThis patch fixes this by using scalar_shift_arg to determine whether we need\nto build a vector for the second operand or not. This causes the test case\nbelow to now vectorize.\n\ngcc/ChangeLog:\n\n2019-12-09  Sudakshina Das  <sudi.das@arm.com>\n\t    Richard Sandiford  <richard.sandiford@arm.com>\n\n\t* tree-vect-stmt.c (vectorizable_shift): Condition ndts for\n\tvect_model_simple_cost call on scalar_shift_arg.\n\ngcc/testsuite/ChangeLog:\n\n2019-12-09  Sudakshina Das  <sudi.das@arm.com>\n\n\t* gcc.dg/vect/vect-shift-5.c: New test.\n\nCo-Authored-By: Richard Sandiford <richard.sandiford@arm.com>\n\nFrom-SVN: r279114", "tree": {"sha": "666f91365cb8eb2177a3b7b04ea599caacd740ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/666f91365cb8eb2177a3b7b04ea599caacd740ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3126e5f649c8eebe07fc517d86f10d6867b7eec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3126e5f649c8eebe07fc517d86f10d6867b7eec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3126e5f649c8eebe07fc517d86f10d6867b7eec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3126e5f649c8eebe07fc517d86f10d6867b7eec/comments", "author": {"login": "sudakshina-das-arm", "id": 28538945, "node_id": "MDQ6VXNlcjI4NTM4OTQ1", "avatar_url": "https://avatars.githubusercontent.com/u/28538945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sudakshina-das-arm", "html_url": "https://github.com/sudakshina-das-arm", "followers_url": "https://api.github.com/users/sudakshina-das-arm/followers", "following_url": "https://api.github.com/users/sudakshina-das-arm/following{/other_user}", "gists_url": "https://api.github.com/users/sudakshina-das-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/sudakshina-das-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sudakshina-das-arm/subscriptions", "organizations_url": "https://api.github.com/users/sudakshina-das-arm/orgs", "repos_url": "https://api.github.com/users/sudakshina-das-arm/repos", "events_url": "https://api.github.com/users/sudakshina-das-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/sudakshina-das-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "49647b7b25673273262fb630598027c6d841690f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49647b7b25673273262fb630598027c6d841690f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49647b7b25673273262fb630598027c6d841690f"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "3d98bef0136e49c11dc64543ac2572d882025dd9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3126e5f649c8eebe07fc517d86f10d6867b7eec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3126e5f649c8eebe07fc517d86f10d6867b7eec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e3126e5f649c8eebe07fc517d86f10d6867b7eec", "patch": "@@ -1,3 +1,9 @@\n+2019-12-09  Sudakshina Das  <sudi.das@arm.com>\n+\t    Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* tree-vect-stmt.c (vectorizable_shift): Condition ndts for\n+\tvect_model_simple_cost call on scalar_shift_arg.\n+\n 2019-12-09  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/92834"}, {"sha": "272a83ec755f55ec09c906938cde71b46b9dd7b4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3126e5f649c8eebe07fc517d86f10d6867b7eec/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3126e5f649c8eebe07fc517d86f10d6867b7eec/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e3126e5f649c8eebe07fc517d86f10d6867b7eec", "patch": "@@ -1,3 +1,7 @@\n+2019-12-09  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* gcc.dg/vect/vect-shift-5.c: New test.\n+\n 2019-12-09  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/92834"}, {"sha": "c1fd4f2395281a49777d5cb82d8f695e5f240041", "filename": "gcc/testsuite/gcc.dg/vect/vect-shift-5.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3126e5f649c8eebe07fc517d86f10d6867b7eec/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-shift-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3126e5f649c8eebe07fc517d86f10d6867b7eec/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-shift-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-shift-5.c?ref=e3126e5f649c8eebe07fc517d86f10d6867b7eec", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_shift } */\n+/* { dg-require-effective-target vect_int } */\n+\n+typedef unsigned int uint32_t;\n+typedef short unsigned int uint16_t;\n+\n+int foo (uint32_t arr[4][4])\n+{\n+  int sum = 0;\n+  for(int i = 0; i < 4; i++)\n+    {\n+      sum += ((arr[0][i] >> 10) * 20) + ((arr[1][i] >> 11) & 53)\n+\t     + ((arr[2][i] >> 12) * 7)  + ((arr[3][i] >> 13) ^ 43);\n+    }\n+    return (((uint16_t)sum) + ((uint32_t)sum >> 16)) >> 1;\n+}\n+\n+/* { dg-final { scan-tree-dump {vectorizable_shift ===[\\n\\r][^\\n]*prologue_cost = 0} \"vect\" } } */"}, {"sha": "396ff1577ee58f5fd8e93cd24a5e8598f5aaa1aa", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3126e5f649c8eebe07fc517d86f10d6867b7eec/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3126e5f649c8eebe07fc517d86f10d6867b7eec/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=e3126e5f649c8eebe07fc517d86f10d6867b7eec", "patch": "@@ -5764,7 +5764,8 @@ vectorizable_shift (stmt_vec_info stmt_info, gimple_stmt_iterator *gsi,\n     {\n       STMT_VINFO_TYPE (stmt_info) = shift_vec_info_type;\n       DUMP_VECT_SCOPE (\"vectorizable_shift\");\n-      vect_model_simple_cost (stmt_info, ncopies, dt, ndts, slp_node, cost_vec);\n+      vect_model_simple_cost (stmt_info, ncopies, dt,\n+\t\t\t      scalar_shift_arg ? 1 : ndts, slp_node, cost_vec);\n       return true;\n     }\n "}]}