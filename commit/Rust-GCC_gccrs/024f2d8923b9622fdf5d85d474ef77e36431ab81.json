{"sha": "024f2d8923b9622fdf5d85d474ef77e36431ab81", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDI0ZjJkODkyM2I5NjIyZmRmNWQ4NWQ0NzRlZjc3ZTM2NDMxYWI4MQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-06-24T15:40:08Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-06-24T15:40:08Z"}, "message": "re PR c++/66501 (Default move assignment does not move array members)\n\n\tPR c++/66501\n\t* class.c (type_has_nontrivial_assignment): Remove.\n\t* cp-tree.h: Remove declaration.\n\t* init.c (vec_copy_assign_is_trivial): New.\n\t(build_vec_init): Use it.\n\nFrom-SVN: r224904", "tree": {"sha": "9a2e4c548e0ef8b3d4821a63eee311709732898d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a2e4c548e0ef8b3d4821a63eee311709732898d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/024f2d8923b9622fdf5d85d474ef77e36431ab81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/024f2d8923b9622fdf5d85d474ef77e36431ab81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/024f2d8923b9622fdf5d85d474ef77e36431ab81", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/024f2d8923b9622fdf5d85d474ef77e36431ab81/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e79fc3d4d72228eeec47b8a53721663371042b8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e79fc3d4d72228eeec47b8a53721663371042b8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e79fc3d4d72228eeec47b8a53721663371042b8e"}], "stats": {"total": 41, "additions": 21, "deletions": 20}, "files": [{"sha": "2fa1732f7794fb5383f85d7c0d06ed4904369f61", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/024f2d8923b9622fdf5d85d474ef77e36431ab81/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/024f2d8923b9622fdf5d85d474ef77e36431ab81/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=024f2d8923b9622fdf5d85d474ef77e36431ab81", "patch": "@@ -1,3 +1,11 @@\n+2015-06-24  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/66501\n+\t* class.c (type_has_nontrivial_assignment): Remove.\n+\t* cp-tree.h: Remove declaration.\n+\t* init.c (vec_copy_assign_is_trivial): New.\n+\t(build_vec_init): Use it.\n+\n 2015-06-24  Edward Smith-Rowland  <3dw4rd@verizon.net>\n \n \tImplement N3928 - Extending static_assert"}, {"sha": "9da532e18dd4eb204b0fd3263ebea5f755da1da7", "filename": "gcc/cp/class.c", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/024f2d8923b9622fdf5d85d474ef77e36431ab81/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/024f2d8923b9622fdf5d85d474ef77e36431ab81/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=024f2d8923b9622fdf5d85d474ef77e36431ab81", "patch": "@@ -5136,24 +5136,6 @@ type_has_non_user_provided_default_constructor (tree t)\n   return false;\n }\n \n-/* Return true if TYPE has some non-trivial assignment operator.  */\n-\n-bool\n-type_has_nontrivial_assignment (tree type)\n-{\n-  gcc_assert (TREE_CODE (type) != ARRAY_TYPE);\n-  if (CLASS_TYPE_P (type))\n-    for (tree fns\n-\t   = lookup_fnfields_slot_nolazy (type, ansi_assopname (NOP_EXPR));\n-\t fns; fns = OVL_NEXT (fns))\n-      {\n-\ttree fn = OVL_CURRENT (fns);\n-\tif (!trivial_fn_p (fn))\n-\t  return true;\n-      }\n-  return false;\n-}\n-\n /* TYPE is being used as a virtual base, and has a non-trivial move\n    assignment.  Return true if this is due to there being a user-provided\n    move assignment in TYPE or one of its subobjects; if there isn't, then"}, {"sha": "b53aa9028e23f9e107f2de86264b05bf566815ec", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/024f2d8923b9622fdf5d85d474ef77e36431ab81/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/024f2d8923b9622fdf5d85d474ef77e36431ab81/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=024f2d8923b9622fdf5d85d474ef77e36431ab81", "patch": "@@ -5295,7 +5295,6 @@ extern tree in_class_defaulted_default_constructor (tree);\n extern bool user_provided_p\t\t\t(tree);\n extern bool type_has_user_provided_constructor  (tree);\n extern bool type_has_non_user_provided_default_constructor (tree);\n-extern bool type_has_nontrivial_assignment\t(tree);\n extern bool vbase_has_user_provided_move_assign (tree);\n extern tree default_init_uninitialized_part (tree);\n extern bool trivial_default_constructor_is_constexpr (tree);"}, {"sha": "530dad484c33121bfb647b0d29a31dfb758d121b", "filename": "gcc/cp/init.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/024f2d8923b9622fdf5d85d474ef77e36431ab81/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/024f2d8923b9622fdf5d85d474ef77e36431ab81/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=024f2d8923b9622fdf5d85d474ef77e36431ab81", "patch": "@@ -3384,6 +3384,18 @@ get_temp_regvar (tree type, tree init)\n   return decl;\n }\n \n+/* Subroutine of build_vec_init.  Returns true if assigning to an array of\n+   INNER_ELT_TYPE from INIT is trivial.  */\n+\n+static bool\n+vec_copy_assign_is_trivial (tree inner_elt_type, tree init)\n+{\n+  tree fromtype = inner_elt_type;\n+  if (real_lvalue_p (init))\n+    fromtype = cp_build_reference_type (fromtype, /*rval*/false);\n+  return is_trivially_xible (MODIFY_EXPR, inner_elt_type, fromtype);\n+}\n+\n /* `build_vec_init' returns tree structure that performs\n    initialization of a vector of aggregate types.\n \n@@ -3460,7 +3472,7 @@ build_vec_init (tree base, tree maxindex, tree init,\n       && TREE_CODE (atype) == ARRAY_TYPE\n       && TREE_CONSTANT (maxindex)\n       && (from_array == 2\n-\t  ? !type_has_nontrivial_assignment (inner_elt_type)\n+\t  ? vec_copy_assign_is_trivial (inner_elt_type, init)\n \t  : !TYPE_NEEDS_CONSTRUCTING (type))\n       && ((TREE_CODE (init) == CONSTRUCTOR\n \t   /* Don't do this if the CONSTRUCTOR might contain something"}]}