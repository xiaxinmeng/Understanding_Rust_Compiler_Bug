{"sha": "300b98bbaac6c3d4762715205895161fd420ff9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzAwYjk4YmJhYWM2YzNkNDc2MjcxNTIwNTg5NTE2MWZkNDIwZmY5Zg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T09:46:08Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T09:46:08Z"}, "message": "[multiple changes]\n\n2011-08-02  Claire Dross  <dross@adacore.com>\n\n\t* a-cfdlli.ads, a-cfhase.ads, a-cforma.ads, a-cfhama.ads, a-cforse.ads,\n\ta-cofove.ads: Add comments.\n\n2011-08-02  Yannick Moy  <moy@adacore.com>\n\n\t* gnat_rm.texi: Document formal containers.\n\n2011-08-02  Emmanuel Briot  <briot@adacore.com>\n\n\t* g-comlin.adb (Goto_Section, Getopt): fix handling of \"*\" when there\n\tare empty sections.\n\nFrom-SVN: r177111", "tree": {"sha": "7565c6dfc947d8f0a5501798efa5d1258d38e9ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7565c6dfc947d8f0a5501798efa5d1258d38e9ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/300b98bbaac6c3d4762715205895161fd420ff9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/300b98bbaac6c3d4762715205895161fd420ff9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/300b98bbaac6c3d4762715205895161fd420ff9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/300b98bbaac6c3d4762715205895161fd420ff9f/comments", "author": null, "committer": null, "parents": [{"sha": "19fb051ccb54f06f292307830cb5bce6bf6268bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19fb051ccb54f06f292307830cb5bce6bf6268bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19fb051ccb54f06f292307830cb5bce6bf6268bd"}], "stats": {"total": 280, "additions": 266, "deletions": 14}, "files": [{"sha": "66995e3a36fd6e80cff2a47291fba5b317b187e7", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/300b98bbaac6c3d4762715205895161fd420ff9f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/300b98bbaac6c3d4762715205895161fd420ff9f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=300b98bbaac6c3d4762715205895161fd420ff9f", "patch": "@@ -1,3 +1,17 @@\n+2011-08-02  Claire Dross  <dross@adacore.com>\n+\n+\t* a-cfdlli.ads, a-cfhase.ads, a-cforma.ads, a-cfhama.ads, a-cforse.ads,\n+\ta-cofove.ads: Add comments.\n+\n+2011-08-02  Yannick Moy  <moy@adacore.com>\n+\n+\t* gnat_rm.texi: Document formal containers.\n+\n+2011-08-02  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* g-comlin.adb (Goto_Section, Getopt): fix handling of \"*\" when there\n+\tare empty sections.\n+\n 2011-08-02  Robert Dewar  <dewar@adacore.com>\n \n \t* mlib-prj.adb, restrict.ads, sem_aggr.adb, sem_ch12.adb: Minor"}, {"sha": "526410c3b795ba1e2489ea89dead20e67cf8a4fe", "filename": "gcc/ada/a-cfdlli.ads", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/300b98bbaac6c3d4762715205895161fd420ff9f/gcc%2Fada%2Fa-cfdlli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/300b98bbaac6c3d4762715205895161fd420ff9f/gcc%2Fada%2Fa-cfdlli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfdlli.ads?ref=300b98bbaac6c3d4762715205895161fd420ff9f", "patch": "@@ -29,6 +29,30 @@\n -- <http://www.gnu.org/licenses/>.                                          --\n ------------------------------------------------------------------------------\n \n+--  The specification of this package is derived from the specification\n+--  of package Ada.Containers.Bounded_Doubly_Linked_Lists in the Ada 2012 RM.\n+--  The changes are\n+\n+--    A parameter for the container is added to every function reading the\n+--    content of a container: Element, Next, Previous, Query_Element,\n+--    Has_Element, Iterate, Reverse_Iterate. This change is motivated by the\n+--    need to have cursors which are valid on different containers (typically\n+--    a container C and its previous version C'Old) for expressing properties,\n+--    which is not possible if cursors encapsulate an access to the underlying\n+--    container.\n+\n+--    There are two new functions\n+\n+--      function Left  (Container : List; Position : Cursor) return List;\n+--      function Right (Container : List; Position : Cursor) return List;\n+\n+--      Left returns a container containing all elements preceding Position\n+--      (excluded) in Container. Right returns a container containing all\n+--      elements following Position (included) in Container. These two new\n+--      functions are useful to express invariant properties in loops which\n+--      iterate over containers. Left returns the part of the container already\n+--      scanned and Right the part not scanned yet.\n+\n private with Ada.Streams;\n with Ada.Containers; use Ada.Containers;\n "}, {"sha": "f11f5dac7232877faa27dcdf358ca6ddf6a29a94", "filename": "gcc/ada/a-cfhama.ads", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/300b98bbaac6c3d4762715205895161fd420ff9f/gcc%2Fada%2Fa-cfhama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/300b98bbaac6c3d4762715205895161fd420ff9f/gcc%2Fada%2Fa-cfhama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfhama.ads?ref=300b98bbaac6c3d4762715205895161fd420ff9f", "patch": "@@ -29,6 +29,30 @@\n -- <http://www.gnu.org/licenses/>.                                          --\n ------------------------------------------------------------------------------\n \n+--  The specification of this package is derived from the specification\n+--  of package Ada.Containers.Bounded_Hashed_Maps in the Ada 2012 RM.\n+--  The changes are\n+\n+--    A parameter for the container is added to every function reading the\n+--    content of a container: Key, Element, Next, Query_Element,\n+--    Has_Element, Iterate, Equivalent_Keys. This change is motivated by the\n+--    need to have cursors which are valid on different containers (typically\n+--    a container C and its previous version C'Old) for expressing properties,\n+--    which is not possible if cursors encapsulate an access to the underlying\n+--    container.\n+\n+--    There are two new functions\n+\n+--      function Left  (Container : Map; Position : Cursor) return Map;\n+--      function Right (Container : Map; Position : Cursor) return Map;\n+\n+--      Left returns a container containing all elements preceding Position\n+--      (excluded) in Container. Right returns a container containing all\n+--      elements following Position (included) in Container. These two new\n+--      functions are useful to express invariant properties in loops which\n+--      iterate over containers. Left returns the part of the container already\n+--      scanned and Right the part not scanned yet.\n+\n private with Ada.Containers.Hash_Tables;\n private with Ada.Streams;\n with Ada.Containers; use Ada.Containers;"}, {"sha": "33c10c693f9f6f0f5769b2c11e5ef47928528bc3", "filename": "gcc/ada/a-cfhase.ads", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/300b98bbaac6c3d4762715205895161fd420ff9f/gcc%2Fada%2Fa-cfhase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/300b98bbaac6c3d4762715205895161fd420ff9f/gcc%2Fada%2Fa-cfhase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfhase.ads?ref=300b98bbaac6c3d4762715205895161fd420ff9f", "patch": "@@ -29,6 +29,30 @@\n -- <http://www.gnu.org/licenses/>.                                          --\n ------------------------------------------------------------------------------\n \n+--  The specification of this package is derived from the specification\n+--  of package Ada.Containers.Bounded_Hashed_Sets in the Ada 2012 RM.\n+--  The changes are\n+\n+--    A parameter for the container is added to every function reading the\n+--    content of a container: Element, Next, Query_Element, Has_Element,\n+--    Key, Iterate, Equivalent_Elements. This change is motivated by the\n+--    need to have cursors which are valid on different containers (typically\n+--    a container C and its previous version C'Old) for expressing properties,\n+--    which is not possible if cursors encapsulate an access to the underlying\n+--    container.\n+\n+--    There are two new functions\n+\n+--      function Left  (Container : Set; Position : Cursor) return Set;\n+--      function Right (Container : Set; Position : Cursor) return Set;\n+\n+--      Left returns a container containing all elements preceding Position\n+--      (excluded) in Container. Right returns a container containing all\n+--      elements following Position (included) in Container. These two new\n+--      functions are useful to express invariant properties in loops which\n+--      iterate over containers. Left returns the part of the container already\n+--      scanned and Right the part not scanned yet.\n+\n private with Ada.Containers.Hash_Tables;\n private with Ada.Streams;\n "}, {"sha": "4debcd677eaa0629553d295810258614703c6a17", "filename": "gcc/ada/a-cforma.ads", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/300b98bbaac6c3d4762715205895161fd420ff9f/gcc%2Fada%2Fa-cforma.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/300b98bbaac6c3d4762715205895161fd420ff9f/gcc%2Fada%2Fa-cforma.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cforma.ads?ref=300b98bbaac6c3d4762715205895161fd420ff9f", "patch": "@@ -29,6 +29,31 @@\n -- <http://www.gnu.org/licenses/>.                                          --\n ------------------------------------------------------------------------------\n \n+--  The specification of this package is derived from the specification\n+--  of package Ada.Containers.Bounded_Ordered_Maps in the Ada 2012 RM.\n+--  The changes are\n+\n+--    A parameter for the container is added to every function reading the\n+--    content of a container: Key, Element, Next, Query_Element, Previous,\n+--    Has_Element, Iterate, Reverse_Iterate. This change is\n+--    motivated by the need to have cursors which are valid on different\n+--    containers (typically a container C and its previous version C'Old) for\n+--    expressing properties, which is not possible if cursors encapsulate an\n+--    access to the underlying container. The operators \"<\" and \">\" that could\n+--    not be modified that way have been removed.\n+\n+--    There are two new functions\n+\n+--      function Left  (Container : Map; Position : Cursor) return Map;\n+--      function Right (Container : Map; Position : Cursor) return Map;\n+\n+--      Left returns a container containing all elements preceding Position\n+--      (excluded) in Container. Right returns a container containing all\n+--      elements following Position (included) in Container. These two new\n+--      functions are useful to express invariant properties in loops which\n+--      iterate over containers. Left returns the part of the container already\n+--      scanned and Right the part not scanned yet.\n+\n private with Ada.Containers.Red_Black_Trees;\n private with Ada.Streams;\n with Ada.Containers; use Ada.Containers;"}, {"sha": "71eab933034fc3a3fcd7316d6f813f6388cce145", "filename": "gcc/ada/a-cforse.ads", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/300b98bbaac6c3d4762715205895161fd420ff9f/gcc%2Fada%2Fa-cforse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/300b98bbaac6c3d4762715205895161fd420ff9f/gcc%2Fada%2Fa-cforse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cforse.ads?ref=300b98bbaac6c3d4762715205895161fd420ff9f", "patch": "@@ -29,6 +29,31 @@\n -- <http://www.gnu.org/licenses/>.                                          --\n ------------------------------------------------------------------------------\n \n+--  The specification of this package is derived from the specification\n+--  of package Ada.Containers.Bounded_Ordered_Sets in the Ada 2012 RM.\n+--  The changes are\n+\n+--    A parameter for the container is added to every function reading the\n+--    content of a container: Key, Element, Next, Query_Element, Previous,\n+--    Has_Element, Iterate, Reverse_Iterate. This change is\n+--    motivated by the need to have cursors which are valid on different\n+--    containers (typically a container C and its previous version C'Old) for\n+--    expressing properties, which is not possible if cursors encapsulate an\n+--    access to the underlying container. The operators \"<\" and \">\" that could\n+--    not be modified that way have been removed.\n+\n+--    There are two new functions\n+\n+--      function Left  (Container : Set; Position : Cursor) return Set;\n+--      function Right (Container : Set; Position : Cursor) return Set;\n+\n+--      Left returns a container containing all elements preceding Position\n+--      (excluded) in Container. Right returns a container containing all\n+--      elements following Position (included) in Container. These two new\n+--      functions are useful to express invariant properties in loops which\n+--      iterate over containers. Left returns the part of the container already\n+--      scanned and Right the part not scanned yet.\n+\n private with Ada.Containers.Red_Black_Trees;\n private with Ada.Streams;\n "}, {"sha": "292e3ac0f889b6a683c5e24b745acdccc8caaace", "filename": "gcc/ada/a-cofove.ads", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/300b98bbaac6c3d4762715205895161fd420ff9f/gcc%2Fada%2Fa-cofove.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/300b98bbaac6c3d4762715205895161fd420ff9f/gcc%2Fada%2Fa-cofove.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cofove.ads?ref=300b98bbaac6c3d4762715205895161fd420ff9f", "patch": "@@ -29,6 +29,30 @@\n -- <http://www.gnu.org/licenses/>.                                          --\n ------------------------------------------------------------------------------\n \n+--  The specification of this package is derived from the specification\n+--  of package Ada.Containers.Bounded_Ordered_Maps in the Ada 2012 RM.\n+--  The changes are\n+\n+--    A parameter for the container is added to every function reading the\n+--    content of a container: Element, Next, Query_Element, Previous,\n+--    Has_Element, Iterate, Reverse_Iterate. This change is\n+--    motivated by the need to have cursors which are valid on different\n+--    containers (typically a container C and its previous version C'Old) for\n+--    expressing properties, which is not possible if cursors encapsulate an\n+--    access to the underlying container.\n+\n+--    There are two new functions\n+\n+--      function Left  (Container : Vector; Position : Cursor) return Vector;\n+--      function Right (Container : Vector; Position : Cursor) return Vector;\n+\n+--      Left returns a container containing all elements preceding Position\n+--      (excluded) in Container. Right returns a container containing all\n+--      elements following Position (included) in Container. These two new\n+--      functions are useful to express invariant properties in loops which\n+--      iterate over containers. Left returns the part of the container already\n+--      scanned and Right the part not scanned yet.\n+\n private with Ada.Streams;\n with Ada.Containers;\n use Ada.Containers;"}, {"sha": "217328e5d1463d65a1019e39b950c135d4fdd6e6", "filename": "gcc/ada/g-comlin.adb", "status": "modified", "additions": 34, "deletions": 14, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/300b98bbaac6c3d4762715205895161fd420ff9f/gcc%2Fada%2Fg-comlin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/300b98bbaac6c3d4762715205895161fd420ff9f/gcc%2Fada%2Fg-comlin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comlin.adb?ref=300b98bbaac6c3d4762715205895161fd420ff9f", "patch": "@@ -673,15 +673,24 @@ package body GNAT.Command_Line is\n                --  especially important when Concatenate is False, since\n                --  otherwise the current argument first character is lost.\n \n-               Set_Parameter\n-                 (Parser.The_Switch,\n-                  Arg_Num => Parser.Current_Argument,\n-                  First   => Parser.Current_Index,\n-                  Last    => Arg'Last,\n-                  Extra   => Parser.Switch_Character);\n-               Parser.Is_Switch (Parser.Current_Argument) := True;\n-               Dummy := Goto_Next_Argument_In_Section (Parser);\n-               return '*';\n+               if Parser.Section (Parser.Current_Argument) = 0 then\n+\n+                  --  A section transition should not be returned to the user\n+\n+                  Dummy := Goto_Next_Argument_In_Section (Parser);\n+                  goto Restart;\n+\n+               else\n+                  Set_Parameter\n+                    (Parser.The_Switch,\n+                     Arg_Num => Parser.Current_Argument,\n+                     First   => Parser.Current_Index,\n+                     Last    => Arg'Last,\n+                     Extra   => Parser.Switch_Character);\n+                  Parser.Is_Switch (Parser.Current_Argument) := True;\n+                  Dummy := Goto_Next_Argument_In_Section (Parser);\n+                  return '*';\n+               end if;\n             end if;\n \n             Set_Parameter\n@@ -891,7 +900,14 @@ package body GNAT.Command_Line is\n                Parser.Current_Section :=\n                  Parser.Section (Parser.Current_Argument);\n             end if;\n-            return;\n+\n+            --  Until we have the start of another section\n+\n+            if Index = Parser.Section'Last\n+               or else Parser.Section (Index + 1) /= 0\n+            then\n+               return;\n+            end if;\n          end if;\n \n          Index := Index + 1;\n@@ -1004,6 +1020,9 @@ package body GNAT.Command_Line is\n                Delimiter_Found := True;\n \n             elsif Parser.Section (Index) = 0 then\n+\n+               --  A previous section delimiter\n+\n                Delimiter_Found := False;\n \n             elsif Delimiter_Found then\n@@ -3186,14 +3205,14 @@ package body GNAT.Command_Line is\n    procedure Getopt\n      (Config   : Command_Line_Configuration;\n       Callback : Switch_Handler := null;\n-      Parser   : Opt_Parser := Command_Line_Parser)\n+      Parser   : Opt_Parser     := Command_Line_Parser)\n    is\n       Getopt_Switches : String_Access;\n-      C   : Character := ASCII.NUL;\n+      C               : Character := ASCII.NUL;\n \n-      Empty_Name : aliased constant String := \"\";\n+      Empty_Name      : aliased constant String := \"\";\n       Current_Section : Integer := -1;\n-      Section_Name : not null access constant String := Empty_Name'Access;\n+      Section_Name    : not null access constant String := Empty_Name'Access;\n \n       procedure Simple_Callback\n         (Simple_Switch : String;\n@@ -3231,6 +3250,7 @@ package body GNAT.Command_Line is\n                         Config.Switches (Index).Integer_Output.all :=\n                           Integer'Value (Parameter);\n                      end if;\n+\n                   exception\n                      when Constraint_Error =>\n                         raise Invalid_Parameter"}, {"sha": "e89468baf12554bd3790e34dbc421f3b2358b2e0", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/300b98bbaac6c3d4762715205895161fd420ff9f/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/300b98bbaac6c3d4762715205895161fd420ff9f/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=300b98bbaac6c3d4762715205895161fd420ff9f", "patch": "@@ -305,6 +305,12 @@ The GNAT Library\n * Ada.Characters.Wide_Latin_9 (a-cwila9.ads)::\n * Ada.Characters.Wide_Wide_Latin_1 (a-chzla1.ads)::\n * Ada.Characters.Wide_Wide_Latin_9 (a-chzla9.ads)::\n+* Ada.Containers.Formal_Doubly_Linked_Lists (a-cfdlli.ads)::\n+* Ada.Containers.Formal_Hashed_Maps (a-cfhama.ads)::\n+* Ada.Containers.Formal_Hashed_Sets (a-cfhase.ads)::\n+* Ada.Containers.Formal_Ordered_Maps (a-cforma.ads)::\n+* Ada.Containers.Formal_Ordered_Sets (a-cforse.ads)::\n+* Ada.Containers.Formal_Vectors (a-cofove.ads)::\n * Ada.Command_Line.Environment (a-colien.ads)::\n * Ada.Command_Line.Remove (a-colire.ads)::\n * Ada.Command_Line.Response_File (a-clrefi.ads)::\n@@ -13871,6 +13877,12 @@ of GNAT, and will generate a warning message.\n * Ada.Characters.Wide_Latin_9 (a-cwila9.ads)::\n * Ada.Characters.Wide_Wide_Latin_1 (a-chzla1.ads)::\n * Ada.Characters.Wide_Wide_Latin_9 (a-chzla9.ads)::\n+* Ada.Containers.Formal_Doubly_Linked_Lists (a-cfdlli.ads)::\n+* Ada.Containers.Formal_Hashed_Maps (a-cfhama.ads)::\n+* Ada.Containers.Formal_Hashed_Sets (a-cfhase.ads)::\n+* Ada.Containers.Formal_Ordered_Maps (a-cforma.ads)::\n+* Ada.Containers.Formal_Ordered_Sets (a-cforse.ads)::\n+* Ada.Containers.Formal_Vectors (a-cofove.ads)::\n * Ada.Command_Line.Environment (a-colien.ads)::\n * Ada.Command_Line.Remove (a-colire.ads)::\n * Ada.Command_Line.Response_File (a-clrefi.ads)::\n@@ -14073,6 +14085,66 @@ instead of @code{Character}.  The provision of such a package\n is specifically authorized by the Ada Reference Manual\n (RM A.3.3(27)).\n \n+@node Ada.Containers.Formal_Doubly_Linked_Lists (a-cfdlli.ads)\n+@section @code{Ada.Containers.Formal_Doubly_Linked_Lists} (@file{a-cfdlli.ads})\n+@cindex @code{Ada.Containers.Formal_Doubly_Linked_Lists} (@file{a-cfdlli.ads})\n+@cindex Formal container for doubly linked lists\n+\n+@noindent\n+This child of @code{Ada.Containers} defines a modified version of the Ada 2005\n+container for doubly linked lists, meant to facilitate formal verification of\n+code using such containers.\n+\n+@node Ada.Containers.Formal_Hashed_Maps (a-cfhama.ads)\n+@section @code{Ada.Containers.Formal_Hashed_Maps} (@file{a-cfhama.ads})\n+@cindex @code{Ada.Containers.Formal_Hashed_Maps} (@file{a-cfhama.ads})\n+@cindex Formal container for hashed maps\n+\n+@noindent\n+This child of @code{Ada.Containers} defines a modified version of the Ada 2005\n+container for hashed maps, meant to facilitate formal verification of\n+code using such containers.\n+\n+@node Ada.Containers.Formal_Hashed_Sets (a-cfhase.ads)\n+@section @code{Ada.Containers.Formal_Hashed_Sets} (@file{a-cfhase.ads})\n+@cindex @code{Ada.Containers.Formal_Hashed_Sets} (@file{a-cfhase.ads})\n+@cindex Formal container for hashed sets\n+\n+@noindent\n+This child of @code{Ada.Containers} defines a modified version of the Ada 2005\n+container for hashed sets, meant to facilitate formal verification of\n+code using such containers.\n+\n+@node Ada.Containers.Formal_Ordered_Maps (a-cforma.ads)\n+@section @code{Ada.Containers.Formal_Ordered_Maps} (@file{a-cforma.ads})\n+@cindex @code{Ada.Containers.Formal_Ordered_Maps} (@file{a-cforma.ads})\n+@cindex Formal container for ordered maps\n+\n+@noindent\n+This child of @code{Ada.Containers} defines a modified version of the Ada 2005\n+container for ordered maps, meant to facilitate formal verification of\n+code using such containers.\n+\n+@node Ada.Containers.Formal_Ordered_Sets (a-cforse.ads)\n+@section @code{Ada.Containers.Formal_Ordered_Sets} (@file{a-cforse.ads})\n+@cindex @code{Ada.Containers.Formal_Ordered_Sets} (@file{a-cforse.ads})\n+@cindex Formal container for ordered sets\n+\n+@noindent\n+This child of @code{Ada.Containers} defines a modified version of the Ada 2005\n+container for ordered sets, meant to facilitate formal verification of\n+code using such containers.\n+\n+@node Ada.Containers.Formal_Vectors (a-cofove.ads)\n+@section @code{Ada.Containers.Formal_Vectors} (@file{a-cofove.ads})\n+@cindex @code{Ada.Containers.Formal_Vectors} (@file{a-cofove.ads})\n+@cindex Formal container for vectors\n+\n+@noindent\n+This child of @code{Ada.Containers} defines a modified version of the Ada 2005\n+container for vectors, meant to facilitate formal verification of\n+code using such containers.\n+\n @node Ada.Command_Line.Environment (a-colien.ads)\n @section @code{Ada.Command_Line.Environment} (@file{a-colien.ads})\n @cindex @code{Ada.Command_Line.Environment} (@file{a-colien.ads})"}]}