{"sha": "405862dd6c6a941cbadf615492708bff8679a1e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA1ODYyZGQ2YzZhOTQxY2JhZGY2MTU0OTI3MDhiZmY4Njc5YTFlMg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-11-12T18:19:42Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-11-12T18:19:42Z"}, "message": "(merge_ranges): In (+,-) case, treat subset specially\nif lower bounds are the same.\n\nFrom-SVN: r13127", "tree": {"sha": "b80f61d806fd2c5f2467c0f78664d77f18b27264", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b80f61d806fd2c5f2467c0f78664d77f18b27264"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/405862dd6c6a941cbadf615492708bff8679a1e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/405862dd6c6a941cbadf615492708bff8679a1e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/405862dd6c6a941cbadf615492708bff8679a1e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/405862dd6c6a941cbadf615492708bff8679a1e2/comments", "author": null, "committer": null, "parents": [{"sha": "9e62c7f28dcfe66e7dfd5e2195e2e67b731bfdda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e62c7f28dcfe66e7dfd5e2195e2e67b731bfdda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e62c7f28dcfe66e7dfd5e2195e2e67b731bfdda"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "1ddfd4782089a9ea3ccd209309fad7a32781c2ff", "filename": "gcc/fold-const.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/405862dd6c6a941cbadf615492708bff8679a1e2/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/405862dd6c6a941cbadf615492708bff8679a1e2/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=405862dd6c6a941cbadf615492708bff8679a1e2", "patch": "@@ -2963,16 +2963,20 @@ merge_ranges (pin_p, plow, phigh, in0_p, low0, high0, in1_p, low1, high1)\n     {\n       /* If they don't overlap, the result is the first range.  If the\n \t second range is a subset of the first, we can't describe this as\n-\t a single range unless both ranges end at the same place, in which\n-\t case we can ignore the fact that it's a subset.  Otherwise, we go\n-\t from the start of the first range to just before the start of the\n-\t second.  */\n+\t a single range unless both ranges end at the same place.  If both\n+\t ranges also start in the same place, then the result is false.\n+\t Otherwise, we go from the start of the first range to just before\n+\t the start of the second.  */\n       if (no_overlap)\n \tin_p = 1, low = low0, high = high0;\n       else if (subset\n \t       && integer_zerop (range_binop (EQ_EXPR, integer_type_node,\n \t\t\t\t\t      high0, 1, high1, 0)))\n \treturn 0;\n+      else if (subset\n+\t       && integer_onep (range_binop (EQ_EXPR, integer_type_node,\n+\t\t\t\t\t     low0, 0, low1, 0)))\n+\tin_p = 0, low = high = 0;\n       else\n \t{\n \t  in_p = 1, low = low0;"}]}