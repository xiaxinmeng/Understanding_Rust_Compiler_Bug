{"sha": "7437c8d44912ec6db96029cb6a835821cdf85d9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQzN2M4ZDQ0OTEyZWM2ZGI5NjAyOWNiNmE4MzU4MjFjZGY4NWQ5Yg==", "commit": {"author": {"name": "Aurelien Jarno", "email": "aurelien@aurel32.net", "date": "2008-04-07T12:31:41Z"}, "committer": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2008-04-07T12:31:41Z"}, "message": "sysdep.c: add __GLIBC__ to the #ifdef preprocessor macros to detect systems using GNU libc.\n\n2008-04-07  Aurelien Jarno  <aurelien@aurel32.net>\n\n        * sysdep.c: add __GLIBC__ to the #ifdef preprocessor macros to\n        detect systems using GNU libc.\n        * gsocket.h: ditto.\n        * socket.c: ditto.\n        * adaint.c: ditto.\n        * link.c: ditto.\n\nFrom-SVN: r133979", "tree": {"sha": "c4c189f4e345c4b9a9a9df89c2f784f91abfe95c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4c189f4e345c4b9a9a9df89c2f784f91abfe95c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7437c8d44912ec6db96029cb6a835821cdf85d9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7437c8d44912ec6db96029cb6a835821cdf85d9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7437c8d44912ec6db96029cb6a835821cdf85d9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7437c8d44912ec6db96029cb6a835821cdf85d9b/comments", "author": {"login": "aurel32", "id": 7688913, "node_id": "MDQ6VXNlcjc2ODg5MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/7688913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aurel32", "html_url": "https://github.com/aurel32", "followers_url": "https://api.github.com/users/aurel32/followers", "following_url": "https://api.github.com/users/aurel32/following{/other_user}", "gists_url": "https://api.github.com/users/aurel32/gists{/gist_id}", "starred_url": "https://api.github.com/users/aurel32/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aurel32/subscriptions", "organizations_url": "https://api.github.com/users/aurel32/orgs", "repos_url": "https://api.github.com/users/aurel32/repos", "events_url": "https://api.github.com/users/aurel32/events{/privacy}", "received_events_url": "https://api.github.com/users/aurel32/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1dab7b355e2f51c4fd3aedecb304f15bfee99d6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dab7b355e2f51c4fd3aedecb304f15bfee99d6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1dab7b355e2f51c4fd3aedecb304f15bfee99d6c"}], "stats": {"total": 38, "additions": 25, "deletions": 13}, "files": [{"sha": "06c0877bc7e456e2b957b9a1dd71f71c992a8696", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7437c8d44912ec6db96029cb6a835821cdf85d9b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7437c8d44912ec6db96029cb6a835821cdf85d9b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7437c8d44912ec6db96029cb6a835821cdf85d9b", "patch": "@@ -1,3 +1,12 @@\n+2008-04-07  Aurelien Jarno  <aurelien@aurel32.net>\n+\n+        * sysdep.c: add __GLIBC__ to the #ifdef preprocessor macros to\n+\tdetect systems using GNU libc.\n+\t* gsocket.h: ditto.\n+\t* socket.c: ditto.\n+\t* adaint.c: ditto.\n+\t* link.c: ditto.\n+\n 2008-04-07  Aurelien Jarno  <aurelien@aurel32.net>\n \n \t* s-osinte-linux-kfreebsd.ads (SC_NPROCESSORS_ONLN): New "}, {"sha": "72ebec7d21df780ee224749aa4b33d0da37afbe5", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7437c8d44912ec6db96029cb6a835821cdf85d9b/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7437c8d44912ec6db96029cb6a835821cdf85d9b/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=7437c8d44912ec6db96029cb6a835821cdf85d9b", "patch": "@@ -888,7 +888,7 @@ __gnat_open_new_temp (char *path, int fmode)\n   strcpy (path, \"GNAT-XXXXXX\");\n \n #if (defined (__FreeBSD__) || defined (__NetBSD__) || defined (__OpenBSD__) \\\n-  || defined (linux)) && !defined (__vxworks)\n+  || defined (linux) || defined(__GLIBC__)) && !defined (__vxworks)\n   return mkstemp (path);\n #elif defined (__Lynx__)\n   mktemp (path);\n@@ -981,7 +981,7 @@ __gnat_tmp_name (char *tmp_filename)\n   }\n \n #elif defined (linux) || defined (__FreeBSD__) || defined (__NetBSD__) \\\n-  || defined (__OpenBSD__)\n+  || defined (__OpenBSD__) || defined(__GLIBC__)\n #define MAX_SAFE_PATH 1000\n   char *tmpdir = getenv (\"TMPDIR\");\n \n@@ -3030,7 +3030,7 @@ void GetTimeAsFileTime(LPFILETIME pTime)\n }\n #endif\n \n-#if defined (linux)\n+#if defined (linux) || defined(__GLIBC__)\n /* pthread affinity support */\n \n int __gnat_pthread_setaffinity_np (pthread_t th,"}, {"sha": "ce4d47801d6facf84bd6eb0dde56e7525c8dc813", "filename": "gcc/ada/gsocket.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7437c8d44912ec6db96029cb6a835821cdf85d9b/gcc%2Fada%2Fgsocket.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7437c8d44912ec6db96029cb6a835821cdf85d9b/gcc%2Fada%2Fgsocket.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgsocket.h?ref=7437c8d44912ec6db96029cb6a835821cdf85d9b", "patch": "@@ -175,7 +175,7 @@\n \n #if defined (_AIX) || defined (__FreeBSD__) || defined (__hpux__) || defined (__osf__) || defined (_WIN32) || defined (__APPLE__)\n # define HAVE_THREAD_SAFE_GETxxxBYyyy 1\n-#elif defined (sgi) || defined (linux) || (defined (sun) && defined (__SVR4) && !defined (__vxworks))\n+#elif defined (sgi) || defined (linux) || defined (__GLIBC__) || (defined (sun) && defined (__SVR4) && !defined (__vxworks))\n # define HAVE_GETxxxBYyyy_R 1\n #endif\n "}, {"sha": "1ed24f805889fd169f9a63b955909e0e512e33b6", "filename": "gcc/ada/link.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7437c8d44912ec6db96029cb6a835821cdf85d9b/gcc%2Fada%2Flink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7437c8d44912ec6db96029cb6a835821cdf85d9b/gcc%2Fada%2Flink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flink.c?ref=7437c8d44912ec6db96029cb6a835821cdf85d9b", "patch": "@@ -153,7 +153,7 @@ unsigned char __gnat_objlist_file_supported = 1;\n unsigned char __gnat_using_gnu_linker = 1;\n const char *__gnat_object_library_extension = \".a\";\n \n-#elif defined (linux)\n+#elif defined (linux) || defined(__GLIBC__)\n const char *__gnat_object_file_option = \"\";\n const char *__gnat_run_path_option = \"-Wl,-rpath,\";\n char __gnat_shared_libgnat_default = STATIC;"}, {"sha": "53620c4e1a7bf3a30abe35ef7dfd980003cb0ac3", "filename": "gcc/ada/socket.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7437c8d44912ec6db96029cb6a835821cdf85d9b/gcc%2Fada%2Fsocket.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7437c8d44912ec6db96029cb6a835821cdf85d9b/gcc%2Fada%2Fsocket.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsocket.c?ref=7437c8d44912ec6db96029cb6a835821cdf85d9b", "patch": "@@ -206,7 +206,7 @@ __gnat_safe_gethostbyname (const char *name,\n   struct hostent *rh;\n   int ri;\n \n-#ifdef __linux__\n+#if defined(__linux__) || defined(__GLIBC__)\n   (void) gethostbyname_r (name, ret, buf, buflen, &rh, h_errnop);\n #else\n   rh = gethostbyname_r (name, ret, buf, buflen, h_errnop);\n@@ -223,7 +223,7 @@ __gnat_safe_gethostbyaddr (const char *addr, int len, int type,\n   struct hostent *rh;\n   int ri;\n \n-#ifdef __linux__\n+#if defined(__linux__) || defined(__GLIBC__)\n   (void) gethostbyaddr_r (addr, len, type, ret, buf, buflen, &rh, h_errnop);\n #else\n   rh = gethostbyaddr_r (addr, len, type, ret, buf, buflen, h_errnop);\n@@ -239,7 +239,7 @@ __gnat_safe_getservbyname (const char *name, const char *proto,\n   struct servent *rh;\n   int ri;\n \n-#ifdef __linux__\n+#if defined(__linux__) || defined(__GLIBC__)\n   (void) getservbyname_r (name, proto, ret, buf, buflen, &rh);\n #else\n   rh = getservbyname_r (name, proto, ret, buf, buflen);\n@@ -255,7 +255,7 @@ __gnat_safe_getservbyport (int port, const char *proto,\n   struct servent *rh;\n   int ri;\n \n-#ifdef __linux__\n+#if defined(__linux__) || defined(__GLIBC__)\n   (void) getservbyport_r (port, proto, ret, buf, buflen, &rh);\n #else\n   rh = getservbyport_r (port, proto, ret, buf, buflen);"}, {"sha": "f0394aaab9254e464d1ee65747e691910d923953", "filename": "gcc/ada/sysdep.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7437c8d44912ec6db96029cb6a835821cdf85d9b/gcc%2Fada%2Fsysdep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7437c8d44912ec6db96029cb6a835821cdf85d9b/gcc%2Fada%2Fsysdep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsysdep.c?ref=7437c8d44912ec6db96029cb6a835821cdf85d9b", "patch": "@@ -342,7 +342,8 @@ __gnat_ttyname (int filedes)\n   || (defined (__osf__) && ! defined (__alpha_vxworks)) || defined (WINNT) \\\n   || defined (__MACHTEN__) || defined (__hpux__) || defined (_AIX) \\\n   || (defined (__svr4__) && defined (i386)) || defined (__Lynx__) \\\n-  || defined (__CYGWIN__) || defined (__FreeBSD__) || defined (__OpenBSD__)\n+  || defined (__CYGWIN__) || defined (__FreeBSD__) || defined (__OpenBSD__) \\\n+  || defined (__GLIBC__)\n \n #ifdef __MINGW32__\n #if OLD_MINGW\n@@ -399,7 +400,8 @@ getc_immediate_common (FILE *stream,\n     || (defined (__osf__) && ! defined (__alpha_vxworks)) \\\n     || defined (__CYGWIN32__) || defined (__MACHTEN__) || defined (__hpux__) \\\n     || defined (_AIX) || (defined (__svr4__) && defined (i386)) \\\n-    || defined (__Lynx__) || defined (__FreeBSD__) || defined (__OpenBSD__)\n+    || defined (__Lynx__) || defined (__FreeBSD__) || defined (__OpenBSD__) \\\n+    || defined (__GLIBC__)\n   char c;\n   int nread;\n   int good_one = 0;\n@@ -418,7 +420,8 @@ getc_immediate_common (FILE *stream,\n #if defined(linux) || defined (sun) || defined (sgi) || defined (__EMX__) \\\n     || defined (__osf__) || defined (__MACHTEN__) || defined (__hpux__) \\\n     || defined (_AIX) || (defined (__svr4__) && defined (i386)) \\\n-    || defined (__Lynx__) || defined (__FreeBSD__) || defined (__OpenBSD__)\n+    || defined (__Lynx__) || defined (__FreeBSD__) || defined (__OpenBSD__) \\\n+    || defined (__GLIBC__)\n       eof_ch = termios_rec.c_cc[VEOF];\n \n       /* If waiting (i.e. Get_Immediate (Char)), set MIN = 1 and wait for\n@@ -845,7 +848,7 @@ __gnat_localtime_tzoff (const time_t *timer, struct tm *tp, long *off)\n /* Darwin, Free BSD, Linux, Tru64, where there exists a component tm_gmtoff\n    in struct tm */\n #elif defined (__APPLE__) || defined (__FreeBSD__) || defined (linux) ||\\\n-     (defined (__alpha__) && defined (__osf__))\n+     (defined (__alpha__) && defined (__osf__)) || defined (__GLIBC__)\n   *off = tp->tm_gmtoff;\n \n /* All other platforms: Treat all time values in GMT */"}]}