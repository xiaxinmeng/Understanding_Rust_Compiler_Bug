{"sha": "70cff8f545f04281a8cf0e8d6ee604ee8026fe32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBjZmY4ZjU0NWYwNDI4MWE4Y2YwZThkNmVlNjA0ZWU4MDI2ZmUzMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-04-16T21:43:09Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-04-16T21:43:09Z"}, "message": "(addsidi3_2): Handle non-MEM overlap case.\n\nFrom-SVN: r11829", "tree": {"sha": "dc9445f7b32ab91c877bb846c684e92e8ba11fd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc9445f7b32ab91c877bb846c684e92e8ba11fd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70cff8f545f04281a8cf0e8d6ee604ee8026fe32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70cff8f545f04281a8cf0e8d6ee604ee8026fe32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70cff8f545f04281a8cf0e8d6ee604ee8026fe32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70cff8f545f04281a8cf0e8d6ee604ee8026fe32/comments", "author": null, "committer": null, "parents": [{"sha": "0500d6f9b27f4f499b7aa2256ebc35c1e3be57a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0500d6f9b27f4f499b7aa2256ebc35c1e3be57a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0500d6f9b27f4f499b7aa2256ebc35c1e3be57a2"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "f307767df3a6110c63a08a1b7ee44371963f09ee", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70cff8f545f04281a8cf0e8d6ee604ee8026fe32/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70cff8f545f04281a8cf0e8d6ee604ee8026fe32/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=70cff8f545f04281a8cf0e8d6ee604ee8026fe32", "patch": "@@ -2764,6 +2764,36 @@\n \n       if (GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM)\n \t{\n+\t  if (rtx_equal_p (low[0], operands[2]))\n+\t    {\n+\t      output_asm_insn (AS2 (mov%L0,%2,%0), high);\n+\t      output_asm_insn (AS2 (add%L0,%1,%0), low);\n+\t      output_asm_insn (AS2 (adc%L0,%1,%0), high);\n+\t      RET;\n+\t    }\n+\t  if (rtx_equal_p (high[0], operands[2]))\n+\t    {\n+\t      if (GET_CODE (operands[0]) != MEM)\n+\t\t{\n+\t\t  output_asm_insn (AS2 (mov%L0,%2,%0), low);\n+\t\t  output_asm_insn (AS2 (mov%L0,%2,%0), high);\n+\t\t  output_asm_insn (AS2 (add%L0,%1,%0), low);\n+\t\t  output_asm_insn (AS2 (adc%L0,%1,%0), high);\n+\t\t}\n+\t      else\n+\t\t{\n+\t\t  /* It's too late to ask for a scratch now - but this\n+\t\t     will probably not happen too often.  */\n+\t\t  output_asm_insn (AS2 (add%L1,%2,%1), low);\n+\t\t  output_asm_insn (AS2 (mov%L0,%1,%0), low);\n+\t\t  output_asm_insn (AS2 (mov%L1,%2,%1), low);\n+\t\t  output_asm_insn (AS2 (mov%L0,%2,%0), high);\n+\t\t  output_asm_insn (AS2 (adc%L0,%1,%0), high);\n+\t\t  output_asm_insn (AS2 (sub%L1,%0,%1), low);\n+\t\t  output_asm_insn (AS1 (neg%L1,%1), low);\n+\t\t}\n+\t      RET;\n+\t    }\n \t  output_asm_insn (AS2 (mov%L1,%3,%1), xops);\n \t  output_asm_insn (AS2 (mov%L0,%2,%0), xops);\n \t}"}]}