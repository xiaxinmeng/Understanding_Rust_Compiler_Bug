{"sha": "cee9defb69f4c2452cad61df1e6e871960a612ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2VlOWRlZmI2OWY0YzI0NTJjYWQ2MWRmMWU2ZTg3MTk2MGE2MTJlZA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2014-03-28T10:20:41Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2014-03-28T10:20:41Z"}, "message": "* mode-switching.c: Make small adjustments to the top comment.\n\nFrom-SVN: r208892", "tree": {"sha": "f0290fb325ab6baaed9d46d371240b79115ac4d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0290fb325ab6baaed9d46d371240b79115ac4d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cee9defb69f4c2452cad61df1e6e871960a612ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cee9defb69f4c2452cad61df1e6e871960a612ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cee9defb69f4c2452cad61df1e6e871960a612ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cee9defb69f4c2452cad61df1e6e871960a612ed/comments", "author": null, "committer": null, "parents": [{"sha": "066adee80c04cd923ace548c9e0836728632417a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/066adee80c04cd923ace548c9e0836728632417a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/066adee80c04cd923ace548c9e0836728632417a"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "faca258b23e6034515f2a32c62864c92156a4baf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cee9defb69f4c2452cad61df1e6e871960a612ed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cee9defb69f4c2452cad61df1e6e871960a612ed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cee9defb69f4c2452cad61df1e6e871960a612ed", "patch": "@@ -1,3 +1,7 @@\n+2014-03-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* mode-switching.c: Make small adjustments to the top comment.\n+\n 2014-03-27  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* config/rs6000/constraints.md (wD constraint): New constraint to"}, {"sha": "316653973a4655c1fbf261ec43407d32aa36c4d8", "filename": "gcc/mode-switching.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cee9defb69f4c2452cad61df1e6e871960a612ed/gcc%2Fmode-switching.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cee9defb69f4c2452cad61df1e6e871960a612ed/gcc%2Fmode-switching.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmode-switching.c?ref=cee9defb69f4c2452cad61df1e6e871960a612ed", "patch": "@@ -45,20 +45,20 @@ along with GCC; see the file COPYING3.  If not see\n    and finding all the insns which require a specific mode.  Each insn gets\n    a unique struct seginfo element.  These structures are inserted into a list\n    for each basic block.  For each entity, there is an array of bb_info over\n-   the flow graph basic blocks (local var 'bb_info'), and contains a list\n+   the flow graph basic blocks (local var 'bb_info'), which contains a list\n    of all insns within that basic block, in the order they are encountered.\n \n    For each entity, any basic block WITHOUT any insns requiring a specific\n-   mode are given a single entry, without a mode.  (Each basic block\n-   in the flow graph must have at least one entry in the segment table.)\n+   mode are given a single entry without a mode (each basic block in the\n+   flow graph must have at least one entry in the segment table).\n \n    The LCM algorithm is then run over the flow graph to determine where to\n-   place the sets to the highest-priority value in respect of first the first\n+   place the sets to the highest-priority mode with respect to the first\n    insn in any one block.  Any adjustments required to the transparency\n    vectors are made, then the next iteration starts for the next-lower\n    priority mode, till for each entity all modes are exhausted.\n \n-   More details are located in the code for optimize_mode_switching().  */\n+   More details can be found in the code of optimize_mode_switching.  */\n \f\n /* This structure contains the information for each insn which requires\n    either single or double mode to be set."}]}