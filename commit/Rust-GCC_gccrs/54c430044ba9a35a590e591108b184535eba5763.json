{"sha": "54c430044ba9a35a590e591108b184535eba5763", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRjNDMwMDQ0YmE5YTM1YTU5MGU1OTExMDhiMTg0NTM1ZWJhNTc2Mw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-09-05T12:58:00Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-09-05T12:58:00Z"}, "message": "re PR c++/82084 (ICE: constructing wstring with -O3)\n\n2017-09-05  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/82084\n\t* fold-const.c (can_native_encode_string_p): Handle wide characters.\n\nFrom-SVN: r251711", "tree": {"sha": "38fb6080d7430ab29683c9a114acbcfb92732c94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38fb6080d7430ab29683c9a114acbcfb92732c94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54c430044ba9a35a590e591108b184535eba5763", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54c430044ba9a35a590e591108b184535eba5763", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54c430044ba9a35a590e591108b184535eba5763", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54c430044ba9a35a590e591108b184535eba5763/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d3b080bc72ce3f0a707c7755f0917a283ec8c788", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3b080bc72ce3f0a707c7755f0917a283ec8c788", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3b080bc72ce3f0a707c7755f0917a283ec8c788"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "7f5b384bca4bd160ca11e20bce60131dbd15ed1a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54c430044ba9a35a590e591108b184535eba5763/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54c430044ba9a35a590e591108b184535eba5763/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=54c430044ba9a35a590e591108b184535eba5763", "patch": "@@ -1,3 +1,8 @@\n+2017-09-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/82084\n+\t* fold-const.c (can_native_encode_string_p): Handle wide characters.\n+\n 2017-09-05  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/82102"}, {"sha": "0cb2301a518d2fa3f2b6cc84f6d9f3a8a9841406", "filename": "gcc/fold-const.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54c430044ba9a35a590e591108b184535eba5763/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54c430044ba9a35a590e591108b184535eba5763/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=54c430044ba9a35a590e591108b184535eba5763", "patch": "@@ -7489,10 +7489,11 @@ can_native_encode_string_p (const_tree expr)\n {\n   tree type = TREE_TYPE (expr);\n \n-  if (TREE_CODE (type) != ARRAY_TYPE\n+  /* Wide-char strings are encoded in target byte-order so native\n+     encoding them is trivial.  */\n+  if (BITS_PER_UNIT != CHAR_BIT\n+      || TREE_CODE (type) != ARRAY_TYPE\n       || TREE_CODE (TREE_TYPE (type)) != INTEGER_TYPE\n-      || (GET_MODE_BITSIZE (SCALAR_INT_TYPE_MODE (TREE_TYPE (type)))\n-\t  != BITS_PER_UNIT)\n       || !tree_fits_shwi_p (TYPE_SIZE_UNIT (type)))\n     return false;\n   return true;"}]}