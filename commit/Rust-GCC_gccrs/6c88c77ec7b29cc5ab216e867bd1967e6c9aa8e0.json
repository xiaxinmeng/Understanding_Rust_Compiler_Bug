{"sha": "6c88c77ec7b29cc5ab216e867bd1967e6c9aa8e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM4OGM3N2VjN2IyOWNjNWFiMjE2ZTg2N2JkMTk2N2U2YzlhYThlMA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-04-27T16:32:42Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-04-27T16:32:42Z"}, "message": "re PR go/52358 (math FAILs on Solaris 8 and 9)\n\n\tPR go/52358\nmath: Work around bug in Solaris 9 implementation of ldexp.\n\nThe bug is that ldexp(-1, -1075) should return -0, but the\nSolaris 9 implementation returns +0.\n\nFrom-SVN: r186913", "tree": {"sha": "8a6aa1b0241651d494e4bbac70e2c0cd0613f1de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a6aa1b0241651d494e4bbac70e2c0cd0613f1de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c88c77ec7b29cc5ab216e867bd1967e6c9aa8e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c88c77ec7b29cc5ab216e867bd1967e6c9aa8e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c88c77ec7b29cc5ab216e867bd1967e6c9aa8e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c88c77ec7b29cc5ab216e867bd1967e6c9aa8e0/comments", "author": null, "committer": null, "parents": [{"sha": "f07bb470aeab62b605103453e28b4d55909e9928", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f07bb470aeab62b605103453e28b4d55909e9928", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f07bb470aeab62b605103453e28b4d55909e9928"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "4c63edd73199f20cf55edd82a9ce06db6631c0e0", "filename": "libgo/go/math/ldexp.go", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c88c77ec7b29cc5ab216e867bd1967e6c9aa8e0/libgo%2Fgo%2Fmath%2Fldexp.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c88c77ec7b29cc5ab216e867bd1967e6c9aa8e0/libgo%2Fgo%2Fmath%2Fldexp.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fmath%2Fldexp.go?ref=6c88c77ec7b29cc5ab216e867bd1967e6c9aa8e0", "patch": "@@ -16,7 +16,18 @@ package math\n func libc_ldexp(float64, int) float64\n \n func Ldexp(frac float64, exp int) float64 {\n-\treturn libc_ldexp(frac, exp)\n+\tr := libc_ldexp(frac, exp)\n+\n+\t// Work around a bug in the implementation of ldexp on Solaris\n+\t// 9.  If multiplying a negative number by 2 raised to a\n+\t// negative exponent underflows, we want to return negative\n+\t// zero, but the Solaris 9 implementation returns positive\n+\t// zero.  This workaround can be removed when and if we no\n+\t// longer care about Solaris 9.\n+\tif r == 0 && frac < 0 && exp < 0 {\n+\t\tr = Copysign(0, frac)\n+\t}\n+\treturn r\n }\n \n func ldexp(frac float64, exp int) float64 {"}]}