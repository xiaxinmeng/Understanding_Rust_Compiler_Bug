{"sha": "9606465f8cb5e4b79c8467d6b5d410abcb4eca62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTYwNjQ2NWY4Y2I1ZTRiNzljODQ2N2Q2YjVkNDEwYWJjYjRlY2E2Mg==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2012-09-20T09:37:05Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2012-09-20T09:37:05Z"}, "message": "forwprop-19.c: Check in forwprop1.\n\n2012-09-20  Marc Glisse  <marc.glisse@inria.fr>\n\n\t* gcc.dg/tree-ssa/forwprop-19.c: Check in forwprop1.\n\t* gcc.dg/tree-ssa/forwprop-20.c: Check in forwprop1.\n\t* gcc.dg/tree-ssa/forwprop-21.c: Check in copyprop1.\n\t* gcc.dg/tree-ssa/forwprop-22.c: Check in copyprop1.\n\nFrom-SVN: r191560", "tree": {"sha": "8fcea195db01bf2126539b8486160a62181bb069", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fcea195db01bf2126539b8486160a62181bb069"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9606465f8cb5e4b79c8467d6b5d410abcb4eca62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9606465f8cb5e4b79c8467d6b5d410abcb4eca62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9606465f8cb5e4b79c8467d6b5d410abcb4eca62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9606465f8cb5e4b79c8467d6b5d410abcb4eca62/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a77fa1fcceb8b0e07caffebba58c50d6db31b636", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a77fa1fcceb8b0e07caffebba58c50d6db31b636", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a77fa1fcceb8b0e07caffebba58c50d6db31b636"}], "stats": {"total": 38, "additions": 25, "deletions": 13}, "files": [{"sha": "8283c8eccbe370da39c918fd32e43ba856b10ee5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9606465f8cb5e4b79c8467d6b5d410abcb4eca62/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9606465f8cb5e4b79c8467d6b5d410abcb4eca62/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9606465f8cb5e4b79c8467d6b5d410abcb4eca62", "patch": "@@ -1,3 +1,10 @@\n+2012-09-20  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\t* gcc.dg/tree-ssa/forwprop-19.c: Check in forwprop1.\n+\t* gcc.dg/tree-ssa/forwprop-20.c: Check in forwprop1.\n+\t* gcc.dg/tree-ssa/forwprop-21.c: Check in copyprop1.\n+\t* gcc.dg/tree-ssa/forwprop-22.c: Check in copyprop1.\n+\n 2012-09-19  Marc Glisse  <marc.glisse@inria.fr>\n \n \tPR c++/54581"}, {"sha": "f309e3c7b4ecf64da879df9170e8cbd88a80bf06", "filename": "gcc/testsuite/gcc.dg/tree-ssa/forwprop-19.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9606465f8cb5e4b79c8467d6b5d410abcb4eca62/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9606465f8cb5e4b79c8467d6b5d410abcb4eca62/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-19.c?ref=9606465f8cb5e4b79c8467d6b5d410abcb4eca62", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-forwprop2\" } */\n+/* { dg-options \"-O -fdump-tree-forwprop1\" } */\n \n typedef int vec __attribute__((vector_size (4 * sizeof (int))));\n void f (vec *x1, vec *x2)\n@@ -11,5 +11,5 @@ void f (vec *x1, vec *x2)\n   *x1 = z;\n }\n \n-/* { dg-final { scan-tree-dump-not \"VEC_PERM_EXPR\" \"forwprop2\" } } */\n-/* { dg-final { cleanup-tree-dump \"forwprop2\" } } */\n+/* { dg-final { scan-tree-dump-not \"VEC_PERM_EXPR\" \"forwprop1\" } } */\n+/* { dg-final { cleanup-tree-dump \"forwprop1\" } } */"}, {"sha": "b1daa91335e0b161ea9337f75a371c695fea0145", "filename": "gcc/testsuite/gcc.dg/tree-ssa/forwprop-20.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9606465f8cb5e4b79c8467d6b5d410abcb4eca62/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9606465f8cb5e4b79c8467d6b5d410abcb4eca62/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-20.c?ref=9606465f8cb5e4b79c8467d6b5d410abcb4eca62", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target double64 } */\n-/* { dg-options \"-O2 -fdump-tree-optimized\" }  */\n+/* { dg-options \"-O -fdump-tree-forwprop1\" }  */\n \n #include <stdint.h>\n \n@@ -66,5 +66,5 @@ void l (double d, vecf* r)\n   *r = __builtin_shuffle (x, y, m); // { d, -d }\n }\n \n-/* { dg-final { scan-tree-dump-not \"VEC_PERM_EXPR\" \"optimized\" } } */\n-/* { dg-final { cleanup-tree-dump \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-not \"VEC_PERM_EXPR\" \"forwprop1\" } } */\n+/* { dg-final { cleanup-tree-dump \"forwprop1\" } } */"}, {"sha": "d92b9b33afb7882e37affa6f7203afbe93d7b43f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/forwprop-21.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9606465f8cb5e4b79c8467d6b5d410abcb4eca62/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-21.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9606465f8cb5e4b79c8467d6b5d410abcb4eca62/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-21.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-21.c?ref=9606465f8cb5e4b79c8467d6b5d410abcb4eca62", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-optimized\" } */\n+/* { dg-options \"-O -fdump-tree-copyprop1\" } */\n typedef int v4si __attribute__ ((vector_size (4 * sizeof(int))));\n \n int\n@@ -9,5 +9,8 @@ test (v4si *x, v4si *y)\n   v4si z = __builtin_shuffle (*x, *y, m);\n   return z[2];\n }\n-/* { dg-final { scan-tree-dump-not \"VEC_PERM_EXPR\" \"optimized\" } } */\n-/* { dg-final { cleanup-tree-dump \"optimized\" } } */\n+\n+/* Optimization in forwprop1, cleanup in copyprop1.  */\n+\n+/* { dg-final { scan-tree-dump-not \"VEC_PERM_EXPR\" \"copyprop1\" } } */\n+/* { dg-final { cleanup-tree-dump \"copyprop1\" } } */"}, {"sha": "60c344d05ee161ea7d161aeef8e54b8cb4c85342", "filename": "gcc/testsuite/gcc.dg/tree-ssa/forwprop-22.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9606465f8cb5e4b79c8467d6b5d410abcb4eca62/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-22.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9606465f8cb5e4b79c8467d6b5d410abcb4eca62/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-22.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-22.c?ref=9606465f8cb5e4b79c8467d6b5d410abcb4eca62", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target vect_double } */\n /* { dg-require-effective-target vect_perm } */\n-/* { dg-options \"-O -fdump-tree-optimized\" } */\n+/* { dg-options \"-O -fdump-tree-copyprop1\" } */\n \n typedef double vec __attribute__((vector_size (2 * sizeof (double))));\n void f (vec *px, vec *y, vec *z)\n@@ -13,6 +13,8 @@ void f (vec *px, vec *y, vec *z)\n   *z = t2;\n }\n \n-/* { dg-final { scan-tree-dump-times \"VEC_PERM_EXPR\" 1 \"optimized\" } } */\n-/* { dg-final { scan-tree-dump-not \"BIT_FIELD_REF\" \"optimized\" } } */\n-/* { dg-final { cleanup-tree-dump \"optimized\" } } */\n+/* Optimization in forwprop1, cleanup in copyprop1.  */\n+\n+/* { dg-final { scan-tree-dump-times \"VEC_PERM_EXPR\" 1 \"copyprop1\" } } */\n+/* { dg-final { scan-tree-dump-not \"BIT_FIELD_REF\" \"copyprop1\" } } */\n+/* { dg-final { cleanup-tree-dump \"copyprop1\" } } */"}]}