{"sha": "9695618899f4f85d1e9fdbe7728d0e238b99511c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY5NTYxODg5OWY0Zjg1ZDFlOWZkYmU3NzI4ZDBlMjM4Yjk5NTExYw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-02-15T23:16:25Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2019-02-15T23:16:25Z"}, "message": "asan_oob_test.cc: Skip OOB_int on SPARC.\n\n\t* g++.dg/asan/asan_oob_test.cc: Skip OOB_int on SPARC.\n\t* g++.dg/asan/function-argument-3.C: Tweak for 32-bit SPARC.\n\nFrom-SVN: r268951", "tree": {"sha": "56c90d27c68460aff02f05398ef4fd4edc8f55c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56c90d27c68460aff02f05398ef4fd4edc8f55c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9695618899f4f85d1e9fdbe7728d0e238b99511c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9695618899f4f85d1e9fdbe7728d0e238b99511c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9695618899f4f85d1e9fdbe7728d0e238b99511c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9695618899f4f85d1e9fdbe7728d0e238b99511c/comments", "author": null, "committer": null, "parents": [{"sha": "34c5627c9cfea3eecbfbe3a1edeaaa703ddee553", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34c5627c9cfea3eecbfbe3a1edeaaa703ddee553", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34c5627c9cfea3eecbfbe3a1edeaaa703ddee553"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "7fa8da548bd6646916f74d1ce73a981009dfd32d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9695618899f4f85d1e9fdbe7728d0e238b99511c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9695618899f4f85d1e9fdbe7728d0e238b99511c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9695618899f4f85d1e9fdbe7728d0e238b99511c", "patch": "@@ -1,3 +1,8 @@\n+2019-02-15  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* g++.dg/asan/asan_oob_test.cc: Skip OOB_int on SPARC.\n+\t* g++.dg/asan/function-argument-3.C: Tweak for 32-bit SPARC.\n+\n 2019-02-15  Tamar Christina  <tamar.christina@arm.com>\n \n \t* lib/target-supports.exp"}, {"sha": "7d3f55785f032e16b72594ea44aa49024d149c77", "filename": "gcc/testsuite/g++.dg/asan/asan_oob_test.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9695618899f4f85d1e9fdbe7728d0e238b99511c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fasan_oob_test.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9695618899f4f85d1e9fdbe7728d0e238b99511c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fasan_oob_test.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fasan_oob_test.cc?ref=9695618899f4f85d1e9fdbe7728d0e238b99511c", "patch": "@@ -68,9 +68,13 @@ TEST(AddressSanitizer, OOB_char) {\n   OOBTest<U1>();\n }\n \n+// The following test uses unaligned memory accesses\n+\n+#if !defined(__sparc__)\n TEST(AddressSanitizer, OOB_int) {\n   OOBTest<U4>();\n }\n+#endif\n \n TEST(AddressSanitizer, OOBRightTest) {\n   for (size_t access_size = 1; access_size <= 8; access_size *= 2) {"}, {"sha": "bfe9b7807a094eb4df051b25cd731d44725dd659", "filename": "gcc/testsuite/g++.dg/asan/function-argument-3.C", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9695618899f4f85d1e9fdbe7728d0e238b99511c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Ffunction-argument-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9695618899f4f85d1e9fdbe7728d0e238b99511c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Ffunction-argument-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Ffunction-argument-3.C?ref=9695618899f4f85d1e9fdbe7728d0e238b99511c", "patch": "@@ -2,7 +2,16 @@\n // { dg-shouldfail \"asan\" }\n // { dg-additional-options \"-Wno-psabi\" }\n \n+// On SPARC 32-bit, only vectors up to 8 bytes are passed in registers\n+#if defined(__sparc__) && !defined(__sparcv9) && !defined(__arch64__)\n+#define SMALL_VECTOR\n+#endif\n+\n+#ifdef SMALL_VECTOR\n+typedef int v4si __attribute__ ((vector_size (8)));\n+#else\n typedef int v4si __attribute__ ((vector_size (16)));\n+#endif\n \n static __attribute__ ((noinline)) int\n goo (v4si *a)\n@@ -19,10 +28,14 @@ foo (v4si arg)\n int\n main ()\n {\n+#ifdef SMALL_VECTOR\n+  v4si v = {1,2};\n+#else\n   v4si v = {1,2,3,4};\n+#endif\n   return foo (v);\n }\n \n // { dg-output \"ERROR: AddressSanitizer: stack-buffer-overflow on address.*(\\n|\\r\\n|\\r)\" }\n // { dg-output \"READ of size . at.*\" }\n-// { dg-output \".*'arg' \\\\(line 14\\\\) <== Memory access at offset \\[0-9\\]* overflows this variable.*\" }\n+// { dg-output \".*'arg' \\\\(line 23\\\\) <== Memory access at offset \\[0-9\\]* overflows this variable.*\" }"}]}