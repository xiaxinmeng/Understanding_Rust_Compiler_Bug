{"sha": "d3ba478e3fda2b515d0dcdbdc936b65192b6f99d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDNiYTQ3OGUzZmRhMmI1MTVkMGRjZGJkYzkzNmI2NTE5MmI2Zjk5ZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-30T13:44:27Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-30T13:44:27Z"}, "message": "[multiple changes]\n\n2011-08-30  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_rm.texi: Minor change.\n\t* exp_attr_light.adb: Minor reformatting.\n\n2011-08-30  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb: Patch inheritance of aspects in\n\tComplete_Private_Subtype, to avoid infinite loop.\n\nFrom-SVN: r178305", "tree": {"sha": "c3569f9ea784eedea65fe1da4507c18cbc54edca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3569f9ea784eedea65fe1da4507c18cbc54edca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3ba478e3fda2b515d0dcdbdc936b65192b6f99d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3ba478e3fda2b515d0dcdbdc936b65192b6f99d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3ba478e3fda2b515d0dcdbdc936b65192b6f99d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3ba478e3fda2b515d0dcdbdc936b65192b6f99d/comments", "author": null, "committer": null, "parents": [{"sha": "c01817d2e03b80c93d4be08927d4573777c5e129", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c01817d2e03b80c93d4be08927d4573777c5e129", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c01817d2e03b80c93d4be08927d4573777c5e129"}], "stats": {"total": 46, "additions": 29, "deletions": 17}, "files": [{"sha": "45904350732bc4b22c83ffd5fa27b1cba46b58b8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3ba478e3fda2b515d0dcdbdc936b65192b6f99d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3ba478e3fda2b515d0dcdbdc936b65192b6f99d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d3ba478e3fda2b515d0dcdbdc936b65192b6f99d", "patch": "@@ -1,3 +1,13 @@\n+2011-08-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_rm.texi: Minor change.\n+\t* exp_attr_light.adb: Minor reformatting.\n+\n+2011-08-30  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb: Patch inheritance of aspects in\n+\tComplete_Private_Subtype, to avoid infinite loop.\n+\n 2011-08-30  Javier Miranda  <miranda@adacore.com>\n \n \t* sem_ch3.adb (Add_Internal_Interface_Entities): If serious errors have"}, {"sha": "95a22dd7531fd7d9db0184de0f297c4091b1882f", "filename": "gcc/ada/exp_attr_light.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3ba478e3fda2b515d0dcdbdc936b65192b6f99d/gcc%2Fada%2Fexp_attr_light.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3ba478e3fda2b515d0dcdbdc936b65192b6f99d/gcc%2Fada%2Fexp_attr_light.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr_light.adb?ref=d3ba478e3fda2b515d0dcdbdc936b65192b6f99d", "patch": "@@ -35,10 +35,11 @@ package body Exp_Attr_Light is\n \n    procedure Expand_Light_N_Attribute_Reference (N : Node_Id) is\n       Id : constant Attribute_Id := Get_Attribute_Id (Attribute_Name (N));\n+\n    begin\n       case Id is\n-         when Attribute_Old  |\n-            Attribute_Result =>\n+         when Attribute_Old    |\n+              Attribute_Result =>\n             Expand_N_Attribute_Reference (N);\n \n          when others =>"}, {"sha": "5cc0cb6db2ba24ad9b71a982fa0bad3138ad7e2d", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3ba478e3fda2b515d0dcdbdc936b65192b6f99d/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3ba478e3fda2b515d0dcdbdc936b65192b6f99d/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=d3ba478e3fda2b515d0dcdbdc936b65192b6f99d", "patch": "@@ -7865,20 +7865,6 @@ entity.\n @end cartouche\n Followed.\n \n-@cindex pragma Volatile\n-@findex Volatile\n-@unnumberedsec C.6(16): Definition of effect of pragma Volatile\n-@sp 1\n-@cartouche\n-All tasks of the program (on all processors) that read or update volatile\n-variables see the same order of updates to the variables.\n-@end cartouche\n-\n-The semantics for pragma volatile is that provided by the gcc back-end for\n-implementation of volatile in C or C++. On some targets this may meet the\n-serialization requirement stated above. On other targets this implementation\n-advice is not followed.\n-\n @cindex Package @code{Task_Attributes}\n @findex Task_Attributes\n @unnumberedsec C.7.2(30): The Package Task_Attributes"}, {"sha": "9ecfb72f74a5095dd11556bf92765297ff756a3f", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3ba478e3fda2b515d0dcdbdc936b65192b6f99d/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3ba478e3fda2b515d0dcdbdc936b65192b6f99d/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=d3ba478e3fda2b515d0dcdbdc936b65192b6f99d", "patch": "@@ -10312,6 +10312,7 @@ package body Sem_Ch3 is\n       --  type, so we must be sure not to overwrite these entries.\n \n       declare\n+         Append    : Boolean;\n          Item      : Node_Id;\n          Next_Item : Node_Id;\n \n@@ -10330,15 +10331,29 @@ package body Sem_Ch3 is\n          --  is not done, as that would create a circularity.\n \n          elsif Item /= First_Rep_Item (Priv) then\n+            Append := True;\n+\n             loop\n                Next_Item := Next_Rep_Item (Item);\n                exit when No (Next_Item);\n                Item := Next_Item;\n+\n+               --  If the private view has aspect specifications, the full view\n+               --  inherits them. Since these aspects may already have been\n+               --  attached to the full view during derivation, do not append\n+               --  them if already present.\n+\n+               if Item = First_Rep_Item (Priv) then\n+                  Append := False;\n+                  exit;\n+               end if;\n             end loop;\n \n             --  And link the private type items at the end of the chain\n \n-            Set_Next_Rep_Item (Item, First_Rep_Item (Priv));\n+            if Append then\n+               Set_Next_Rep_Item (Item, First_Rep_Item (Priv));\n+            end if;\n          end if;\n       end;\n "}]}