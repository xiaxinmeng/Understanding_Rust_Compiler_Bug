{"sha": "1d7fac3a9b99c21ad50cd9c7e204dca0bb9c18f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQ3ZmFjM2E5Yjk5YzIxYWQ1MGNkOWM3ZTIwNGRjYTBiYjljMThmNA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-02-12T17:55:41Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-02-12T17:55:41Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r311", "tree": {"sha": "d7f09ac4ab19738e36dfc6b8ca9c958340a96ee6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7f09ac4ab19738e36dfc6b8ca9c958340a96ee6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d7fac3a9b99c21ad50cd9c7e204dca0bb9c18f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d7fac3a9b99c21ad50cd9c7e204dca0bb9c18f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d7fac3a9b99c21ad50cd9c7e204dca0bb9c18f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d7fac3a9b99c21ad50cd9c7e204dca0bb9c18f4/comments", "author": null, "committer": null, "parents": [{"sha": "948c37aafe65d32757046ca3dc979dc4571b3041", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/948c37aafe65d32757046ca3dc979dc4571b3041", "html_url": "https://github.com/Rust-GCC/gccrs/commit/948c37aafe65d32757046ca3dc979dc4571b3041"}], "stats": {"total": 63, "additions": 62, "deletions": 1}, "files": [{"sha": "1805ec7b5dfbdeb69c803df8366bdc4946c17214", "filename": "gcc/config/vax/vms.h", "status": "modified", "additions": 62, "deletions": 1, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d7fac3a9b99c21ad50cd9c7e204dca0bb9c18f4/gcc%2Fconfig%2Fvax%2Fvms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d7fac3a9b99c21ad50cd9c7e204dca0bb9c18f4/gcc%2Fconfig%2Fvax%2Fvms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvms.h?ref=1d7fac3a9b99c21ad50cd9c7e204dca0bb9c18f4", "patch": "@@ -246,4 +246,65 @@ const_section ()\t\t\t\t\t\\\n   fputc ('\\n', (FILE));\t\t\t\t\t\t\t\\\n }\n \n-\n+/* The following definitions are used in libgcc2.c with the __main\n+   function.  The _SHR symbol is used when the sharable image library\n+   for libg++ is used - this is picked up automatically by the linker\n+   and this symbol points to the start of the __CTOR_LIST__ from libg++.\n+   If libg++ is not being used, then __CTOR_LIST_SHR__ occurs just after\n+   __CTOR_LIST__, and essentially points to the same list as __CTOR_LIST.  */\n+\n+#ifdef L__main\n+#include <stdio.h>\n+\n+#define __CTOR_LIST__ __gxx_init_0\n+#define __CTOR_LIST_END__ __gxx_init_2\n+\n+#define __CTOR_LIST_SHR__ $$PsectAttributes_NOSHR$$__gxx_init_0_shr\n+#define __CTOR_LIST_SHR_END__ $$PsectAttributes_NOSHR$$__gxx_init_2_shr\n+\n+#define DO_GLOBAL_CTORS_BODY\t\t\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\t\t\\\n+  func_ptr *p;\t\t\t\t\t\t\t\t\\\n+  extern func_ptr __CTOR_LIST__[1];\t\t\t\t\t\\\n+  extern func_ptr __CTOR_LIST_END__[1];\t\t\t\t\t\\\n+  extern func_ptr __CTOR_LIST_SHR__[1];\t\t\t\t\t\\\n+  extern func_ptr __CTOR_LIST_SHR_END__[1];\t\t\t\t\\\n+  fflush(stdout);\t\t\t\t\t\t\t\\\n+  if( &__CTOR_LIST_SHR__[0] != &__CTOR_LIST__[1])\t\t\t\\\n+  for (p = __CTOR_LIST_SHR__ + 1; p < __CTOR_LIST_SHR_END__ ; p++ )\t\\\n+    if (*p) (*p) ();\t\t\t\t\t\t\t\\\n+  for (p = __CTOR_LIST__ + 1; p < __CTOR_LIST_END__ ; p++ )\t\t\\\n+    if (*p) (*p) ();\t\t\t\t\t\t\t\\\n+  atexit (__do_global_dtors);\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      __label__ foo;\t\t\t\t\t\t\t\\\n+      int *callers_caller_fp = (int *) __builtin_frame_address (3);\t\\\n+      register int retval asm (\"r0\");\t\t\t\t\t\\\n+      callers_caller_fp[4] = (int) && foo;\t\t\t\t\\\n+      return;\t\t\t\t\t\t\t\t\\\n+    foo:\t\t\t\t\t\t\t\t\\\n+      exit (retval);\t\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+} while (0)\n+\n+#define __DTOR_LIST__ __gxx_clean_0\n+#define __DTOR_LIST_END__ __gxx_clean_2\n+\n+#define __DTOR_LIST_SHR__ $$PsectAttributes_NOSHR$$__gxx_clean_0_shr\n+#define __DTOR_LIST_SHR_END__ $$PsectAttributes_NOSHR$$__gxx_clean_2_shr\n+\n+#define DO_GLOBAL_DTORS_BODY\t\t\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\t\t\\\n+  func_ptr *p;\t\t\t\t\t\t\t\t\\\n+  extern func_ptr __DTOR_LIST__[1];\t\t\t\t\t\\\n+  extern func_ptr __DTOR_LIST_END__[1];\t\t\t\t\t\\\n+  extern func_ptr __DTOR_LIST_SHR__[1];\t\t\t\t\t\\\n+  extern func_ptr __DTOR_LIST_SHR_END__[1];\t\t\t\t\\\n+  for (p = __DTOR_LIST__ + 1; p < __DTOR_LIST_END__ ; p++ )\t\t\\\n+    if (*p) (*p) ();\t\t\t\t\t\t\t\\\n+  if( &__DTOR_LIST_SHR__[0] != &__DTOR_LIST__[1])\t\t\t\\\n+  for (p = __DTOR_LIST_SHR__ + 1; p < __DTOR_LIST_SHR_END__ ; p++ )\t\\\n+    if (*p) (*p) ();\t\t\t\t\t\t\t\\\n+} while (0)\n+\n+#endif /* L__main */"}]}