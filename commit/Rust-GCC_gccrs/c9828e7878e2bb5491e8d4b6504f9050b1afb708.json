{"sha": "c9828e7878e2bb5491e8d4b6504f9050b1afb708", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk4MjhlNzg3OGUyYmI1NDkxZThkNGI2NTA0ZjkwNTBiMWFmYjcwOA==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2010-01-03T18:09:37Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2010-01-03T18:09:37Z"}, "message": "PR libfortran/42420 Large file capable stat for MingW\n\nFrom-SVN: r155593", "tree": {"sha": "55b4e70855307a48632f04a6016e5e38882b526f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55b4e70855307a48632f04a6016e5e38882b526f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9828e7878e2bb5491e8d4b6504f9050b1afb708", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9828e7878e2bb5491e8d4b6504f9050b1afb708", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9828e7878e2bb5491e8d4b6504f9050b1afb708", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9828e7878e2bb5491e8d4b6504f9050b1afb708/comments", "author": null, "committer": null, "parents": [{"sha": "f18c74a73d3920097ff25bf87b4941afda6eb42d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f18c74a73d3920097ff25bf87b4941afda6eb42d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f18c74a73d3920097ff25bf87b4941afda6eb42d"}], "stats": {"total": 41, "additions": 31, "deletions": 10}, "files": [{"sha": "a6ee35084a2b524893941fa858e83c5527a88be3", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9828e7878e2bb5491e8d4b6504f9050b1afb708/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9828e7878e2bb5491e8d4b6504f9050b1afb708/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=c9828e7878e2bb5491e8d4b6504f9050b1afb708", "patch": "@@ -1 +1,14 @@\n+2010-01-03  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR libfortran/42420\n+\t* io/unix.c: Defines for MINGW stat and fstat.\n+\t(gfstat_t): New typedef.\n+\t(id_from_fd): Use gfstat_t instead of struct stat.\n+\t(fd_to_stream): Likewise.\n+\t(compare_file_filename): Likewise.\n+\t(find_file): Likewise.\n+\t(file_exists): Likewise.\n+\t(inquire_sequential): Likewise.\n+\t(inquire_direct): Likewise.\n+\t(inquire_formatted): Likewise.\n "}, {"sha": "bd2b6594d52ee8bd1d2d4baf4758922f5bda7adf", "filename": "libgfortran/io/unix.c", "status": "modified", "additions": 18, "deletions": 10, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9828e7878e2bb5491e8d4b6504f9050b1afb708/libgfortran%2Fio%2Funix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9828e7878e2bb5491e8d4b6504f9050b1afb708/libgfortran%2Fio%2Funix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funix.c?ref=c9828e7878e2bb5491e8d4b6504f9050b1afb708", "patch": "@@ -42,13 +42,17 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n /* For mingw, we don't identify files by their inode number, but by a\n    64-bit identifier created from a BY_HANDLE_FILE_INFORMATION. */\n-#if defined(__MINGW32__) && !HAVE_WORKING_STAT\n+#ifdef __MINGW32__\n \n #define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n \n #define lseek _lseeki64\n+#define fstat _fstati64\n+#define stat _stati64\n+typedef struct _stati64 gfstat_t;\n \n+#ifndef HAVE_WORKING_STAT\n static uint64_t\n id_from_handle (HANDLE hFile)\n {\n@@ -92,6 +96,10 @@ id_from_fd (const int fd)\n \n #endif\n \n+#else\n+typedef struct stat gfstat_t;\n+#endif\n+\n #ifndef PATH_MAX\n #define PATH_MAX 1024\n #endif\n@@ -781,7 +789,7 @@ open_internal (char *base, int length, gfc_offset offset)\n static stream *\n fd_to_stream (int fd, int prot)\n {\n-  struct stat statbuf;\n+  gfstat_t statbuf;\n   unix_stream *s;\n \n   s = get_mem (sizeof (unix_stream));\n@@ -1220,9 +1228,9 @@ int\n compare_file_filename (gfc_unit *u, const char *name, int len)\n {\n   char path[PATH_MAX + 1];\n-  struct stat st1;\n+  gfstat_t st1;\n #ifdef HAVE_WORKING_STAT\n-  struct stat st2;\n+  gfstat_t st2;\n #else\n # ifdef __MINGW32__\n   uint64_t id1, id2;\n@@ -1261,7 +1269,7 @@ compare_file_filename (gfc_unit *u, const char *name, int len)\n \n \n #ifdef HAVE_WORKING_STAT\n-# define FIND_FILE0_DECL struct stat *st\n+# define FIND_FILE0_DECL gfstat_t *st\n # define FIND_FILE0_ARGS st\n #else\n # define FIND_FILE0_DECL uint64_t id, const char *file, gfc_charlen_type file_len\n@@ -1318,7 +1326,7 @@ gfc_unit *\n find_file (const char *file, gfc_charlen_type file_len)\n {\n   char path[PATH_MAX + 1];\n-  struct stat st[2];\n+  gfstat_t st[2];\n   gfc_unit *u;\n #if defined(__MINGW32__) && !HAVE_WORKING_STAT\n   uint64_t id = 0ULL;\n@@ -1455,7 +1463,7 @@ int\n file_exists (const char *file, gfc_charlen_type file_len)\n {\n   char path[PATH_MAX + 1];\n-  struct stat statbuf;\n+  gfstat_t statbuf;\n \n   if (unpack_filename (path, file, file_len))\n     return 0;\n@@ -1478,7 +1486,7 @@ const char *\n inquire_sequential (const char *string, int len)\n {\n   char path[PATH_MAX + 1];\n-  struct stat statbuf;\n+  gfstat_t statbuf;\n \n   if (string == NULL ||\n       unpack_filename (path, string, len) || stat (path, &statbuf) < 0)\n@@ -1502,7 +1510,7 @@ const char *\n inquire_direct (const char *string, int len)\n {\n   char path[PATH_MAX + 1];\n-  struct stat statbuf;\n+  gfstat_t statbuf;\n \n   if (string == NULL ||\n       unpack_filename (path, string, len) || stat (path, &statbuf) < 0)\n@@ -1526,7 +1534,7 @@ const char *\n inquire_formatted (const char *string, int len)\n {\n   char path[PATH_MAX + 1];\n-  struct stat statbuf;\n+  gfstat_t statbuf;\n \n   if (string == NULL ||\n       unpack_filename (path, string, len) || stat (path, &statbuf) < 0)"}]}