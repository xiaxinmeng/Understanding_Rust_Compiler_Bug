{"sha": "9b282d77224bb17df955dad24d969d32fb2b9f97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWIyODJkNzcyMjRiYjE3ZGY5NTVkYWQyNGQ5NjlkMzJmYjJiOWY5Nw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2005-12-02T17:03:17Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2005-12-02T17:03:17Z"}, "message": "objc-act.c (objc_build_exc_ptr, [...]): Use buildN instead of build.\n\n2005-12-02  Richard Guenther  <rguenther@suse.de>\n\n\t* objc-act.c (objc_build_exc_ptr, next_sjlj_build_enter_and_setjmp\n\tnext_sjlj_build_exc_extract, next_sjlj_build_catch_list,\n\tnext_sjlj_build_try_catch_finally, objc_begin_catch_clause,\n\tbuild_objc_method_call, objc_rewrite_function_call): Use buildN\n\tinstead of build.\n\nFrom-SVN: r107902", "tree": {"sha": "d6d1033454205a31c39aa2cc6eefce5b72c2e457", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6d1033454205a31c39aa2cc6eefce5b72c2e457"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b282d77224bb17df955dad24d969d32fb2b9f97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b282d77224bb17df955dad24d969d32fb2b9f97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b282d77224bb17df955dad24d969d32fb2b9f97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b282d77224bb17df955dad24d969d32fb2b9f97/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cc0de35e81bc14d3b72fcfc5e3ce01175f420320", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc0de35e81bc14d3b72fcfc5e3ce01175f420320", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc0de35e81bc14d3b72fcfc5e3ce01175f420320"}], "stats": {"total": 40, "additions": 24, "deletions": 16}, "files": [{"sha": "48c2a6a3bdeacaed5cd3550fb7ca572e4734a8cb", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b282d77224bb17df955dad24d969d32fb2b9f97/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b282d77224bb17df955dad24d969d32fb2b9f97/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=9b282d77224bb17df955dad24d969d32fb2b9f97", "patch": "@@ -1,3 +1,11 @@\n+2005-12-02  Richard Guenther  <rguenther@suse.de>\n+\n+\t* objc-act.c (objc_build_exc_ptr, next_sjlj_build_enter_and_setjmp\n+\tnext_sjlj_build_exc_extract, next_sjlj_build_catch_list,\n+\tnext_sjlj_build_try_catch_finally, objc_begin_catch_clause,\n+\tbuild_objc_method_call, objc_rewrite_function_call): Use buildN\n+\tinstead of build.\n+\n 2005-10-20  Geoffrey Keating  <geoffk@apple.com>\n \n \t* objc-act.c (synth_module_prologue): Clear TREE_NOTHROW"}, {"sha": "817553a1eed3716b1a29c6eb35f3465a012258ad", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b282d77224bb17df955dad24d969d32fb2b9f97/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b282d77224bb17df955dad24d969d32fb2b9f97/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=9b282d77224bb17df955dad24d969d32fb2b9f97", "patch": "@@ -3485,7 +3485,7 @@ objc_build_exc_ptr (void)\n       return var;\n     }\n   else\n-    return build (EXC_PTR_EXPR, objc_object_type);\n+    return build0 (EXC_PTR_EXPR, objc_object_type);\n }\n \n /* Build \"objc_exception_try_exit(&_stack)\".  */\n@@ -3533,10 +3533,10 @@ next_sjlj_build_enter_and_setjmp (void)\n   t = tree_cons (NULL, t, NULL);\n   sj = build_function_call (objc_setjmp_decl, t);\n \n-  cond = build (COMPOUND_EXPR, TREE_TYPE (sj), enter, sj);\n+  cond = build2 (COMPOUND_EXPR, TREE_TYPE (sj), enter, sj);\n   cond = c_common_truthvalue_conversion (cond);\n \n-  return build (COND_EXPR, void_type_node, cond, NULL, NULL);\n+  return build3 (COND_EXPR, void_type_node, cond, NULL, NULL);\n }\n \n /* Build\n@@ -3552,7 +3552,7 @@ next_sjlj_build_exc_extract (tree decl)\n   t = tree_cons (NULL, t, NULL);\n   t = build_function_call (objc_exception_extract_decl, t);\n   t = convert (TREE_TYPE (decl), t);\n-  t = build (MODIFY_EXPR, void_type_node, decl, t);\n+  t = build2 (MODIFY_EXPR, void_type_node, decl, t);\n \n   return t;\n }\n@@ -3603,7 +3603,7 @@ next_sjlj_build_catch_list (void)\n \t      t = build_function_call (objc_exception_match_decl, args);\n \t      cond = c_common_truthvalue_conversion (t);\n \t    }\n-\t  t = build (COND_EXPR, void_type_node, cond, body, NULL);\n+\t  t = build3 (COND_EXPR, void_type_node, cond, body, NULL);\n \t  SET_EXPR_LOCUS (t, EXPR_LOCUS (stmt));\n \n \t  *last = t;\n@@ -3613,8 +3613,8 @@ next_sjlj_build_catch_list (void)\n \n   if (!saw_id)\n     {\n-      t = build (MODIFY_EXPR, void_type_node, cur_try_context->rethrow_decl,\n-\t\t cur_try_context->caught_decl);\n+      t = build2 (MODIFY_EXPR, void_type_node, cur_try_context->rethrow_decl,\n+\t\t  cur_try_context->caught_decl);\n       SET_EXPR_LOCATION (t, cur_try_context->end_catch_locus);\n       append_to_statement_list (t, last);\n \n@@ -3679,18 +3679,18 @@ next_sjlj_build_try_catch_finally (void)\n   TREE_CHAIN (rethrow_decl) = stack_decl;\n \n   /* Build the outermost variable binding level.  */\n-  bind = build (BIND_EXPR, void_type_node, rethrow_decl, NULL, NULL);\n+  bind = build3 (BIND_EXPR, void_type_node, rethrow_decl, NULL, NULL);\n   SET_EXPR_LOCATION (bind, cur_try_context->try_locus);\n   TREE_SIDE_EFFECTS (bind) = 1;\n \n   /* Initialize rethrow_decl.  */\n-  t = build (MODIFY_EXPR, void_type_node, rethrow_decl,\n-\t     convert (objc_object_type, null_pointer_node));\n+  t = build2 (MODIFY_EXPR, void_type_node, rethrow_decl,\n+\t      convert (objc_object_type, null_pointer_node));\n   SET_EXPR_LOCATION (t, cur_try_context->try_locus);\n   append_to_statement_list (t, &BIND_EXPR_BODY (bind));\n \n   /* Build the outermost TRY_FINALLY_EXPR.  */\n-  try_fin = build (TRY_FINALLY_EXPR, void_type_node, NULL, NULL);\n+  try_fin = build2 (TRY_FINALLY_EXPR, void_type_node, NULL, NULL);\n   SET_EXPR_LOCATION (try_fin, cur_try_context->try_locus);\n   TREE_SIDE_EFFECTS (try_fin) = 1;\n   append_to_statement_list (try_fin, &BIND_EXPR_BODY (bind));\n@@ -3824,7 +3824,7 @@ objc_begin_catch_clause (tree decl)\n   /* Initialize the decl from the EXC_PTR_EXPR we get from the runtime.  */\n   t = objc_build_exc_ptr ();\n   t = convert (TREE_TYPE (decl), t);\n-  t = build (MODIFY_EXPR, void_type_node, decl, t);\n+  t = build2 (MODIFY_EXPR, void_type_node, decl, t);\n   add_stmt (t);\n }\n \n@@ -6540,7 +6540,7 @@ build_objc_method_call (int super_flag, tree method_prototype,\n \n   /* ??? Selector is not at this point something we can use inside\n      the compiler itself.  Set it to garbage for the nonce.  */\n-  t = build (OBJ_TYPE_REF, sender_cast, method, lookup_object, size_zero_node);\n+  t = build3 (OBJ_TYPE_REF, sender_cast, method, lookup_object, size_zero_node);\n   return build_function_call (t, method_params);\n }\n \f\n@@ -9428,9 +9428,9 @@ objc_rewrite_function_call (tree function, tree params)\n       && TREE_CODE (TREE_OPERAND (TREE_OPERAND (function, 0), 0))\n \t == FUNCTION_DECL)\n     {\n-      function = build (OBJ_TYPE_REF, TREE_TYPE (function),\n-\t\t\tTREE_OPERAND (function, 0),\n-\t\t\tTREE_VALUE (params), size_zero_node);\n+      function = build3 (OBJ_TYPE_REF, TREE_TYPE (function),\n+\t\t\t TREE_OPERAND (function, 0),\n+\t\t\t TREE_VALUE (params), size_zero_node);\n     }\n \n   return function;"}]}