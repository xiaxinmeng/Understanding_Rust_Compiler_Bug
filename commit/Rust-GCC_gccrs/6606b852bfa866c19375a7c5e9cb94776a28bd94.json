{"sha": "6606b852bfa866c19375a7c5e9cb94776a28bd94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjYwNmI4NTJiZmE4NjZjMTkzNzVhN2M1ZTljYjk0Nzc2YTI4YmQ5NA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2021-02-04T16:16:17Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2021-02-05T13:32:34Z"}, "message": "driver: error for nonexistent linker inputs [PR 98943]\n\nWe used to check all unknown input files, even when passing them to a\ncompiler.  But that caused problems.  However, not erroring out on\nnon-existent would-be-linker inputs confuses configure machinery that\nprobes the compiler to see if it accepts various inputs.  This\nrestores the access check for things that are thought to be linker\ninput files, when we're not linking.  (If we are linking, we presume\nthe linker will error out on its own accord.)\n\n\tPR driver/98943\n\tgcc/\n\t* gcc.c (driver::maybe_run_linker): Check for input file\n\taccessibility if not linking.\n\tgcc/testsuite/\n\t* c-c++-common/pr98943.c: New.", "tree": {"sha": "47ea757d2b70c5eabd3e71ce8a76785e1a28a138", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47ea757d2b70c5eabd3e71ce8a76785e1a28a138"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6606b852bfa866c19375a7c5e9cb94776a28bd94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6606b852bfa866c19375a7c5e9cb94776a28bd94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6606b852bfa866c19375a7c5e9cb94776a28bd94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6606b852bfa866c19375a7c5e9cb94776a28bd94/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63538886d1f7fc7cbf066b4c2d6d7fd4da537259", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63538886d1f7fc7cbf066b4c2d6d7fd4da537259", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63538886d1f7fc7cbf066b4c2d6d7fd4da537259"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "7837553958b44a124c7d710a6cea0b15d7a041e2", "filename": "gcc/gcc.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6606b852bfa866c19375a7c5e9cb94776a28bd94/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6606b852bfa866c19375a7c5e9cb94776a28bd94/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=6606b852bfa866c19375a7c5e9cb94776a28bd94", "patch": "@@ -9020,8 +9020,15 @@ driver::maybe_run_linker (const char *argv0) const\n     for (i = 0; (int) i < n_infiles; i++)\n       if (explicit_link_files[i]\n \t  && !(infiles[i].language && infiles[i].language[0] == '*'))\n-\twarning (0, \"%s: linker input file unused because linking not done\",\n-\t\t outfiles[i]);\n+\t{\n+\t  warning (0, \"%s: linker input file unused because linking not done\",\n+\t\t   outfiles[i]);\n+\t  if (access (outfiles[i], F_OK) < 0)\n+\t    /* This is can be an indication the user specifed an errorneous\n+\t       separated option value, (or used the wrong prefix for an\n+\t       option).  */\n+\t    error (\"%s: linker input file not found: %m\", outfiles[i]);\n+\t}\n }\n \n /* The end of \"main\".  */"}, {"sha": "53d8838f242298a8f490fe9da93815d0d94785a6", "filename": "gcc/testsuite/c-c++-common/pr98943.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6606b852bfa866c19375a7c5e9cb94776a28bd94/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr98943.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6606b852bfa866c19375a7c5e9cb94776a28bd94/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr98943.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr98943.c?ref=6606b852bfa866c19375a7c5e9cb94776a28bd94", "patch": "@@ -0,0 +1,10 @@\n+// { dg-do compile }\n+// PR 98943, compiler feature tests can get confused by not linking\n+// { dg-options \"NOTAFILE\" }\n+\n+int main ()\n+{\n+  return 0;\n+}\n+\n+// { dg-regexp {[^\\n:]*: warning: NOTAFILE: linker input file unused because linking not done\\n[^\\n:]*: error: NOTAFILE: linker input file not found: [^\\n]*\\n} }"}]}