{"sha": "627ab8616cc19a4bed7ca2d4273e3dc85aab39b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjI3YWI4NjE2Y2MxOWE0YmVkN2NhMmQ0MjczZTNkYzg1YWFiMzliNA==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2008-05-08T16:35:56Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2008-05-08T16:35:56Z"}, "message": "re PR target/36090 (ppc64 cacoshl miscompilation)\n\n2008-05-08  Paolo Bonzini  <bonzini@gnu.org>\n\n        PR target/36090\n        * simplify-rtx.c (simplify_plus_minus): Create CONST of\n        similar RTX_CONST_OBJ before CONST_INT.\n\nFrom-SVN: r135086", "tree": {"sha": "a31c9e164e9c5d56daddb94bd73cc84979190e8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a31c9e164e9c5d56daddb94bd73cc84979190e8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/627ab8616cc19a4bed7ca2d4273e3dc85aab39b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/627ab8616cc19a4bed7ca2d4273e3dc85aab39b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/627ab8616cc19a4bed7ca2d4273e3dc85aab39b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/627ab8616cc19a4bed7ca2d4273e3dc85aab39b4/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "41ccb5d1b1c83fabd2d0411d8a2c49168518f4bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41ccb5d1b1c83fabd2d0411d8a2c49168518f4bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41ccb5d1b1c83fabd2d0411d8a2c49168518f4bb"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "7ac7cd27fe3ece451ba5affccae7bec14f09a3a2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/627ab8616cc19a4bed7ca2d4273e3dc85aab39b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/627ab8616cc19a4bed7ca2d4273e3dc85aab39b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=627ab8616cc19a4bed7ca2d4273e3dc85aab39b4", "patch": "@@ -1,3 +1,9 @@\n+2008-05-08  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\tPR target/36090\n+\t* simplify-rtx.c (simplify_plus_minus): Create CONST of\n+\tsimilar RTX_CONST_OBJ before CONST_INT.\n+\n 2008-05-08  Steve Ellcey  <sje@cup.hp.com>\n \n \t* stmt.c (expand_stack_restore): Change sa mode if needed."}, {"sha": "15e4c2a3424fe1ce295556d741dbbcade19fa64f", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/627ab8616cc19a4bed7ca2d4273e3dc85aab39b4/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/627ab8616cc19a4bed7ca2d4273e3dc85aab39b4/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=627ab8616cc19a4bed7ca2d4273e3dc85aab39b4", "patch": "@@ -3674,6 +3674,24 @@ simplify_plus_minus (enum rtx_code code, enum machine_mode mode, rtx op0,\n      one CONST_INT, and the sort will have ensured that it is last\n      in the array and that any other constant will be next-to-last.  */\n \n+  if (GET_CODE (ops[n_ops - 1].op) == CONST_INT)\n+    i = n_ops - 2;\n+  else\n+    i = n_ops - 1;\n+\n+  if (i >= 1\n+      && ops[i].neg\n+      && !ops[i - 1].neg\n+      && CONSTANT_P (ops[i].op)\n+      && GET_CODE (ops[i].op) == GET_CODE (ops[i - 1].op))\n+    {\n+      ops[i - 1].op = gen_rtx_MINUS (mode, ops[i - 1].op, ops[i].op);\n+      ops[i - 1].op = gen_rtx_CONST (mode, ops[i - 1].op);\n+      if (i < n_ops - 1)\n+\tops[i] = ops[i + 1];\n+      n_ops--;\n+    }\n+\n   if (n_ops > 1\n       && GET_CODE (ops[n_ops - 1].op) == CONST_INT\n       && CONSTANT_P (ops[n_ops - 2].op))"}]}