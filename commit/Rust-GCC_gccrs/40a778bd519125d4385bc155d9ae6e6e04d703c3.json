{"sha": "40a778bd519125d4385bc155d9ae6e6e04d703c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDBhNzc4YmQ1MTkxMjVkNDM4NWJjMTU1ZDlhZTZlNmUwNGQ3MDNjMw==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2015-01-26T21:58:42Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2015-01-26T21:58:42Z"}, "message": "re PR fortran/62044 (ICE in USE statement with RENAME for extended derived type)\n\n2015-01-26  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/62044\n\t* resolve.c (resolve_allocate_expr): If the default initializer\n\tis NULL, keep the original MOLD expression so that the correct\n\ttypespec is available.\n\n2015-01-26  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/62044\n\t* gfortran.dg/allocate_with_mold_1.f90: New test\n\nFrom-SVN: r220140", "tree": {"sha": "ee654adf268670eddd69d015f6fba4df4f5f882f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee654adf268670eddd69d015f6fba4df4f5f882f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40a778bd519125d4385bc155d9ae6e6e04d703c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40a778bd519125d4385bc155d9ae6e6e04d703c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40a778bd519125d4385bc155d9ae6e6e04d703c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40a778bd519125d4385bc155d9ae6e6e04d703c3/comments", "author": null, "committer": null, "parents": [{"sha": "1b7706c830cdf535d14d68d4f2e581592fbcdb85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b7706c830cdf535d14d68d4f2e581592fbcdb85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b7706c830cdf535d14d68d4f2e581592fbcdb85"}], "stats": {"total": 68, "additions": 65, "deletions": 3}, "files": [{"sha": "6a9b71da6718ae56a51c32aa352a93b701972889", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40a778bd519125d4385bc155d9ae6e6e04d703c3/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40a778bd519125d4385bc155d9ae6e6e04d703c3/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=40a778bd519125d4385bc155d9ae6e6e04d703c3", "patch": "@@ -1,3 +1,10 @@\n+2015-01-26  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/62044\n+\t* resolve.c (resolve_allocate_expr): If the default initializer\n+\tis NULL, keep the original MOLD expression so that the correct\n+\ttypespec is available.\n+\n 2015-01-26  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/64771"}, {"sha": "3fe09f6252d34c6a66b8b14d68d6a258c55b2f26", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40a778bd519125d4385bc155d9ae6e6e04d703c3/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40a778bd519125d4385bc155d9ae6e6e04d703c3/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=40a778bd519125d4385bc155d9ae6e6e04d703c3", "patch": "@@ -6995,9 +6995,12 @@ resolve_allocate_expr (gfc_expr *e, gfc_code *code)\n     {\n       /* Default initialization via MOLD (non-polymorphic).  */\n       gfc_expr *rhs = gfc_default_initializer (&code->expr3->ts);\n-      gfc_resolve_expr (rhs);\n-      gfc_free_expr (code->expr3);\n-      code->expr3 = rhs;\n+      if (rhs != NULL)\n+\t{\n+\t  gfc_resolve_expr (rhs);\n+\t  gfc_free_expr (code->expr3);\n+\t  code->expr3 = rhs;\n+\t}\n     }\n \n   if (e->ts.type == BT_CLASS && !unlimited && !UNLIMITED_POLY (code->expr3))"}, {"sha": "cf72ea9264864c9c096bd77ad266c1d9065e546b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40a778bd519125d4385bc155d9ae6e6e04d703c3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40a778bd519125d4385bc155d9ae6e6e04d703c3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=40a778bd519125d4385bc155d9ae6e6e04d703c3", "patch": "@@ -1,3 +1,8 @@\n+2015-01-26  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/62044\n+\t* gfortran.dg/allocate_with_mold_1.f90: New test\n+\n 2015-01-26  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/64778"}, {"sha": "6a3f0adce1f74e31b1f135089db62311e0f6d822", "filename": "gcc/testsuite/gfortran.dg/allocate_with_mold_1.f90", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40a778bd519125d4385bc155d9ae6e6e04d703c3/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_with_mold_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40a778bd519125d4385bc155d9ae6e6e04d703c3/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_with_mold_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_with_mold_1.f90?ref=40a778bd519125d4385bc155d9ae6e6e04d703c3", "patch": "@@ -0,0 +1,47 @@\n+! { dg-do run }\n+!\n+! Fixes a bug that emerged from the fix of PR62044 - see the PR. When\n+! there was no default initializer, code-expr3 was set null and so the\n+! vpointer was set to the vtable of the declared type, rather than that\n+! of the MOLD expression.\n+!\n+! Contributed by but based on the original PR62044 testcase by\n+! Paul Thomas  <pault@gcc.gnu.org>\n+!\n+module GridImageSilo_Template\n+  implicit none\n+  type, public, abstract :: GridImageSiloTemplate\n+  end type GridImageSiloTemplate\n+end module GridImageSilo_Template\n+\n+module UnstructuredGridImageSilo_Form\n+  use GridImageSilo_Template\n+  implicit none\n+  type, public, extends ( GridImageSiloTemplate ) :: &\n+    UnstructuredGridImageSiloForm\n+  end type UnstructuredGridImageSiloForm\n+end module UnstructuredGridImageSilo_Form\n+\n+module UnstructuredGridImages\n+  use UnstructuredGridImageSilo_Form, &\n+        UnstructuredGridImageForm => UnstructuredGridImageSiloForm\n+contains\n+  subroutine foo\n+    class (GridImageSiloTemplate), allocatable :: a\n+    type (UnstructuredGridImageForm) :: b\n+    integer :: i = 0\n+    allocate (a, mold = b)\n+    select type (a)\n+      type is (UnstructuredGridImageForm)\n+        i = 1\n+      class default\n+        i = 2\n+    end select\n+    if (i .ne. 1) call abort\n+  end subroutine\n+end module UnstructuredGridImages\n+\n+  use UnstructuredGridImages\n+  call foo\n+end\n+"}]}