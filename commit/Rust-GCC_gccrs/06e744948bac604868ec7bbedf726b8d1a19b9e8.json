{"sha": "06e744948bac604868ec7bbedf726b8d1a19b9e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDZlNzQ0OTQ4YmFjNjA0ODY4ZWM3YmJlZGY3MjZiOGQxYTE5YjllOA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2006-09-04T15:41:18Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2006-09-04T15:41:18Z"}, "message": "re PR c++/28871 (massive C++ compile time slowdown)\n\n2006-09-04  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tPR c++/28871\n\t* include/ext/bitmap_allocator.h: Add comment for end of anonymous\n\tnamespace.\n\t* include/ext/rope: Same.\n\t* include/bits/cpp_type_traits.h: Same.\n\t* include/tr1/tuple: Same.\n\t* include/tr1/functional_iterate.h: Same.\n\n\t* include/bits/cpp_type_traits.h: Revert anonymous namespace\n\tchange, use nested detail instead.\n\n\t* testsuite/lib/libstdc++.exp (libstdc++_init): PCHFLAGS revert to\n\tstdc++.h.\n\nFrom-SVN: r116680", "tree": {"sha": "7f2637fee890ffe0f197fbb576c636fd5787cce5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f2637fee890ffe0f197fbb576c636fd5787cce5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06e744948bac604868ec7bbedf726b8d1a19b9e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06e744948bac604868ec7bbedf726b8d1a19b9e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06e744948bac604868ec7bbedf726b8d1a19b9e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06e744948bac604868ec7bbedf726b8d1a19b9e8/comments", "author": null, "committer": null, "parents": [{"sha": "88525e1bd3ae53b899101a20b59703c623f4c571", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88525e1bd3ae53b899101a20b59703c623f4c571", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88525e1bd3ae53b899101a20b59703c623f4c571"}], "stats": {"total": 58, "additions": 37, "deletions": 21}, "files": [{"sha": "563621e458c86a1ad3a0a59b88c9c229ff9fc7e7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06e744948bac604868ec7bbedf726b8d1a19b9e8/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06e744948bac604868ec7bbedf726b8d1a19b9e8/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=06e744948bac604868ec7bbedf726b8d1a19b9e8", "patch": "@@ -1,3 +1,19 @@\n+2006-09-04  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tPR c++/28871\n+\t* include/ext/bitmap_allocator.h: Add comment for end of anonymous\n+\tnamespace.\n+\t* include/ext/rope: Same.\n+\t* include/bits/cpp_type_traits.h: Same.\n+\t* include/tr1/tuple: Same.\n+\t* include/tr1/functional_iterate.h: Same.\n+\n+\t* include/bits/cpp_type_traits.h: Revert anonymous namespace\n+\tchange, use nested detail instead.\n+\n+\t* testsuite/lib/libstdc++.exp (libstdc++_init): PCHFLAGS revert to\n+\tstdc++.h.\n+\t\n 2006-09-04  Paolo Carlini  <pcarlini@suse.de>\n \n \t* src/mt_allocator.cc (__pool<true>::_M_reclaim_block): Do"}, {"sha": "a79c1bea634493d1dbba91728a9ef755de401dca", "filename": "libstdc++-v3/include/bits/cpp_type_traits.h", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06e744948bac604868ec7bbedf726b8d1a19b9e8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcpp_type_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06e744948bac604868ec7bbedf726b8d1a19b9e8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcpp_type_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcpp_type_traits.h?ref=06e744948bac604868ec7bbedf726b8d1a19b9e8", "patch": "@@ -83,6 +83,19 @@ struct __false_type { };\n \n _GLIBCXX_BEGIN_NAMESPACE(std)\n \n+namespace detail\n+{\n+  // NB: g++ can not compile these if declared within the class\n+  // __is_pod itself.\n+  typedef char __one;\n+  typedef char __two[2];\n+\n+  template<typename _Tp>\n+  __one __test_type(int _Tp::*);\n+  template<typename _Tp>\n+  __two& __test_type(...);\n+} // namespace detail\n+\n   template<bool>\n     struct __truth_type\n     { typedef __false_type __type; };\n@@ -339,27 +352,14 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     : public __traitor<__is_arithmetic<_Tp>, __is_pointer<_Tp> >\n     { };\n \n-  // NB: g++ can not compile these if declared within the class\n-  // __is_pod itself.\n-  namespace \n-  {\n-    typedef char __one;\n-    typedef char __two[2];\n-    \n-    template<typename _Tp>\n-    __one __test_type(int _Tp::*);\n-    \n-    template<typename _Tp>\n-    __two& __test_type(...);\n-  }\n-\n   // For the immediate use, the following is a good approximation.\n   template<typename _Tp>\n     struct __is_pod\n     {\n       enum\n \t{\n-\t  __value = (sizeof(__test_type<_Tp>(0)) != sizeof(__one))\n+\t  __value = (sizeof(detail::__test_type<_Tp>(0))\n+\t\t     != sizeof(detail::__one))\n \t};\n     };\n "}, {"sha": "0f903077c2c17e304b49305291045d93503cdafa", "filename": "libstdc++-v3/include/ext/bitmap_allocator.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06e744948bac604868ec7bbedf726b8d1a19b9e8/libstdc%2B%2B-v3%2Finclude%2Fext%2Fbitmap_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06e744948bac604868ec7bbedf726b8d1a19b9e8/libstdc%2B%2B-v3%2Finclude%2Fext%2Fbitmap_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fbitmap_allocator.h?ref=06e744948bac604868ec7bbedf726b8d1a19b9e8", "patch": "@@ -82,7 +82,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n      *  else do no use any synchronization primitives.\n      */\n     bool const __threads_enabled = __gthread_active_p();\n-  }\n+  } // anonymous namespace\n #endif\n \n #if defined __GTHREADS"}, {"sha": "d24366c95c5027cc9068e5c5839e36d81bd52e43", "filename": "libstdc++-v3/include/ext/rope", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06e744948bac604868ec7bbedf726b8d1a19b9e8/libstdc%2B%2B-v3%2Finclude%2Fext%2Frope", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06e744948bac604868ec7bbedf726b8d1a19b9e8/libstdc%2B%2B-v3%2Finclude%2Fext%2Frope", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Frope?ref=06e744948bac604868ec7bbedf726b8d1a19b9e8", "patch": "@@ -71,7 +71,7 @@ namespace\n {\n   enum { _S_max_rope_depth = 45 };\n   enum _Tag {_S_leaf, _S_concat, _S_substringfn, _S_function};\n-}\n+} // anonymous namespace\n \n _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n "}, {"sha": "c29e341b8bfb9ca2090437ee6eeee912218f86df", "filename": "libstdc++-v3/include/tr1/functional_iterate.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06e744948bac604868ec7bbedf726b8d1a19b9e8/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ffunctional_iterate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06e744948bac604868ec7bbedf726b8d1a19b9e8/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ffunctional_iterate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ffunctional_iterate.h?ref=06e744948bac604868ec7bbedf726b8d1a19b9e8", "patch": "@@ -396,7 +396,7 @@ namespace placeholders\n namespace\n {\n    _Placeholder<_GLIBCXX_NUM_ARGS> _GLIBCXX_JOIN(_,_GLIBCXX_NUM_ARGS);\n-}\n+} // anonymous namespace\n }\n #endif\n "}, {"sha": "bd1a81fad1fcdd8af35f017968c00d4eaa9c694e", "filename": "libstdc++-v3/include/tr1/tuple", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06e744948bac604868ec7bbedf726b8d1a19b9e8/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftuple", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06e744948bac604868ec7bbedf726b8d1a19b9e8/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftuple", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftuple?ref=06e744948bac604868ec7bbedf726b8d1a19b9e8", "patch": "@@ -258,7 +258,7 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n  namespace\n  {\n    swallow_assign ignore;\n- };\n+ }; // anonymous namespace\n \n #define _GLIBCXX_CAT(x,y) _GLIBCXX_CAT2(x,y)\n #define _GLIBCXX_CAT2(x,y) x##y"}, {"sha": "36c2e97fabeabf4785be2ac98ca3e9f1ca69ee34", "filename": "libstdc++-v3/testsuite/lib/libstdc++.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06e744948bac604868ec7bbedf726b8d1a19b9e8/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06e744948bac604868ec7bbedf726b8d1a19b9e8/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp?ref=06e744948bac604868ec7bbedf726b8d1a19b9e8", "patch": "@@ -214,8 +214,8 @@ proc libstdc++_init { testfile } {\n \t         \"additional_flags=-include additional_flags=bits/stdtr1c++.h\"]\n \tif {$lines == \"\" } {\n #\t    set PCH_CXXFLAGS \"-include bits/extc++.h\"\n-\t    set PCH_CXXFLAGS \"-include bits/stdtr1c++.h\"\n-#\t    set PCH_CXXFLAGS \"-include bits/stdc++.h\"\n+#\t    set PCH_CXXFLAGS \"-include bits/stdtr1c++.h\"\n+\t    set PCH_CXXFLAGS \"-include bits/stdc++.h\"\n \t} else {\n \t    set PCH_CXXFLAGS \"\"\n \t}"}]}