{"sha": "8f3d7f00680fbc3bd26aef015fb1ebc41725484b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGYzZDdmMDA2ODBmYmMzYmQyNmFlZjAxNWZiMWViYzQxNzI1NDg0Yg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-23T06:09:43Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-23T06:09:43Z"}, "message": "Entire file is new except for defining MD_STARTFILE_PREFIX.\n\nFrom-SVN: r1670", "tree": {"sha": "f3d50b556a28f575ddbb416d36f7c8d1f40e7101", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3d50b556a28f575ddbb416d36f7c8d1f40e7101"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f3d7f00680fbc3bd26aef015fb1ebc41725484b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f3d7f00680fbc3bd26aef015fb1ebc41725484b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f3d7f00680fbc3bd26aef015fb1ebc41725484b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f3d7f00680fbc3bd26aef015fb1ebc41725484b/comments", "author": null, "committer": null, "parents": [{"sha": "148000d70b18534cd0e50c0c3c19331509d01f9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/148000d70b18534cd0e50c0c3c19331509d01f9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/148000d70b18534cd0e50c0c3c19331509d01f9e"}], "stats": {"total": 152, "additions": 143, "deletions": 9}, "files": [{"sha": "9c915b51f3964d5fafeb49a26e5414ade9a86738", "filename": "gcc/config/sparc/sol2.h", "status": "modified", "additions": 143, "deletions": 9, "changes": 152, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f3d7f00680fbc3bd26aef015fb1ebc41725484b/gcc%2Fconfig%2Fsparc%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f3d7f00680fbc3bd26aef015fb1ebc41725484b/gcc%2Fconfig%2Fsparc%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsol2.h?ref=8f3d7f00680fbc3bd26aef015fb1ebc41725484b", "patch": "@@ -1,7 +1,7 @@\n-/* Target definitions for GNU compiler for Sparc running Solaris 2.x\n-   Copyright (C) 1992 Free Software Foundation, Inc.\n-\n-   Written by Ron Guilmette (rfg@ncd.com).\n+/* Definitions of target machine for GNU compiler, for SPARC running Solaris 2\n+   Copyright 1992 Free Software Foundation, Inc.\n+   Contributed by Ron Guilmette (rfg@ncd.com) and\n+   David V. Henkel-Wallace (gumby@cygnus.com).\n \n This file is part of GNU CC.\n \n@@ -19,17 +19,151 @@ You should have received a copy of the GNU General Public License\n along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n-/* This is basically just a Sparc running svr4.  */\n+#define NO_UNDERSCORES 1\n \n+/* Supposedly the same as vanilla sparc svr4, except for the stuff below: */\n #include \"sparcv4.h\"\n \n-/* Solaris 2.x on a Sparc uses BSD stabs, not DWARF.  */\n+#undef CPP_PREDEFINES\n+#define CPP_PREDEFINES \\\n+ \"-Dsun -Dsparc -Dunix -D__svr4__ -Asystem(unix) -Acpu(sparc) -Amachine(sparc)\"\n+\n+/* The sun bundled assembler doesn't accept -Yd, (and neither does gas).\n+   It's safe to pass -s always, even if -g is not used. */\n+#undef ASM_SPEC\n+#define ASM_SPEC \\\n+  \"%{V} %{v:%{!V:-V}} %{Qy:} %{!Qn:-Qy} %{n} %{T} %{Ym,*} %{Wa,*:%*} -s\"\n+\n+/* However it appears that Solaris 2.0 uses the same reg numbering as\n+   the old BSD-style system did. */\n+\n+#undef DBX_REGISTER_NUMBER\n+/* Same as sparc.h */\n+#define DBX_REGISTER_NUMBER(REGNO) (REGNO)\n+\n+#define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n+\n+#define DBX_BLOCKS_FUNCTION_RELATIVE 1\n+\n+/* \"gcc2_compiled.\" must be a .stabs, not an ordinary symbol, or GDB won't\n+   see it.  Furthermore, since GDB reads the input piecemeal, starting\n+   with each N_SO, it's a lot easier if the gcc2 flag symbol is *after*\n+   the N_SO rather than before it.  So we emit an N_OPT stab here.  */\n+\n+#define ASM_IDENTIFY_GCC(FILE)\t/* Do nothing */\n+\n+#define ASM_IDENTIFY_GCC_AFTER_SOURCE(FILE)\t\\\n+ fputs (\"\\t.stabs\\t\\\"gcc2_compiled.\\\", 0x3c, 0, 0, 0\\n\", FILE)\n+\n+#undef CTORS_SECTION_ASM_OP\n+#undef DTORS_SECTION_ASM_OP\n+\n+#if 0 /* These seems unnecessary; the ones in sparcv4.h look right.  */\n+#undef TEXT_SECTION_ASM_OP\n+#undef DATA_SECTION_ASM_OP\n+#undef BSS_SECTION_ASM_OP\n+#undef CONST_SECTION_ASM_OP\n+#undef INIT_SECTION_ASM_OP\n+\n+#define TEXT_SECTION_ASM_OP\t\"\\t.section\\t\\\".text\\\"\"\n+#define DATA_SECTION_ASM_OP\t\"\\t.section\\t\\\".data\\\"\"\n+#define BSS_SECTION_ASM_OP\t\"\\t.section\\t\\\".bss\\\"\"\n+\n+#define CONST_SECTION_ASM_OP\t\"\\t.section\\t\\\".rodata\\\"\"\n+#define INIT_SECTION_ASM_OP\t\"\\t.section\\t\\\".init\\\"\"\n+#endif\n+\n+#define CTORS_SECTION_ASM_OP\t\"\\t.section\\t\\\".ctors\\\",#alloc,#execinstr\\n\"\n+#define DTORS_SECTION_ASM_OP\t\"\\t.section\\t\\\".dtors\\\",#alloc,#execinstr\\n\"\n+\n+/* The Solaris 2 assembler doesn't support the .string directive,\n+   so disable it. */\n \n-#undef DWARF_DEBUGGING_INFO\n-#define DBX_DEBUGGING_INFO\n+/* This doesn't work, despite the comment in svr4.h:\n+#undef STRING_LIMIT\n+#define STRING_LIMIT 0\n+*/\n+\n+#undef ASM_OUTPUT_ASCII\n+#define ASM_OUTPUT_DWARF_STRING(FILE,P) assemble_string(FILE, P)\n+\n+/* The Solaris 2 assembler uses .skip, not .zero, so put this back. */\n+#undef ASM_OUTPUT_SKIP\n+#define ASM_OUTPUT_SKIP(FILE,SIZE)  \\\n+  fprintf (FILE, \"\\t.skip %u\\n\", (SIZE))\n+\n+#undef ASM_OUTPUT_ALIGNED_LOCAL\n+#define ASM_OUTPUT_ALIGNED_LOCAL(FILE, NAME, SIZE, ALIGN)\t\t\\\n+do {\t\t\t\t\t\t\t\t\t\\\n+  fputs (\"\\t.local\\t\", (FILE));\t\t\\\n+  assemble_name ((FILE), (NAME));\t\t\t\t\t\\\n+  putc ('\\n', (FILE));\t\t\t\t\t\t\t\\\n+  ASM_OUTPUT_ALIGNED_COMMON (FILE, NAME, SIZE, ALIGN);\t\t\t\\\n+} while (0)\n+\n+#undef COMMON_ASM_OP\n+#define COMMON_ASM_OP \"\\t.common\"\n+\n+/* This is how to output a definition of an internal numbered label where\n+   PREFIX is the class of label and NUM is the number within the class.  */\n+\n+#undef  ASM_OUTPUT_INTERNAL_LABEL\n+#define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\\\n+  fprintf (FILE, \".L%s%d:\\n\", PREFIX, NUM)\n+\n+/* This is how to output a reference to an internal numbered label where\n+   PREFIX is the class of label and NUM is the number within the class.  */\n+\n+#undef  ASM_OUTPUT_INTERNAL_LABELREF\n+#define ASM_OUTPUT_INTERNAL_LABELREF(FILE,PREFIX,NUM)\t\\\n+  fprintf (FILE, \".L%s%d\", PREFIX, NUM)\n+\n+/* This is how to store into the string LABEL\n+   the symbol_ref name of an internal numbered label where\n+   PREFIX is the class of label and NUM is the number within the class.\n+   This is suitable for output with `assemble_name'.  */\n+\n+#undef  ASM_GENERATE_INTERNAL_LABEL\n+#define ASM_GENERATE_INTERNAL_LABEL(LABEL,PREFIX,NUM)\t\\\n+  sprintf (LABEL, \"*.L%s%d\", PREFIX, NUM)\n+\n+/* in Solaris 2.0, linenos are relative to the current fn. */\n+#undef  ASM_OUTPUT_SOURCE_LINE\n+#define ASM_OUTPUT_SOURCE_LINE(file, line)\t\t\\\n+  { static int sym_lineno = 1;\t\t\t\t\\\n+    fprintf (file, \".stabn 68,0,%d,.LM%d-%s\\n.LM%d:\\n\",\t\\\n+\t     line, sym_lineno, \t\t\t\t\\\n+\t     IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (current_function_decl)),\\\n+\t     sym_lineno);\t\t\t\t\\\n+    sym_lineno += 1; }\n+\n+/* But, to make this work, we have to output the stabs for the function\n+   name *first*...  */\n+#define\tDBX_FUNCTION_FIRST\n+\n+\f\n+/* We don't use the standard svr4 STARTFILE_SPEC because it's wrong for us.\n+   We don't use the standard LIB_SPEC only because we don't yet support c++ */\n \n /* If we cannot find the GNU *crt*.o files in the STANDARD_STARTFILE_PREFIX\n    directory, our fallback strategy must be to look for these files instead\n    in the Sun C 2.0 directory.  */\n \n-#define MD_STARTFILE_PREFIX_1\t\"/opt/SUNWste/SC2.0/\"\n+#undef MD_STARTFILE_PREFIX\n+#define MD_STARTFILE_PREFIX \"/opt/SUNWste/SC2.0/\"\n+\n+#undef\tSTARTFILE_SPEC\n+#define STARTFILE_SPEC \"%{!shared: \\\n+\t\t\t %{!symbolic: \\\n+\t\t\t  %{pg:crt1.o%s}%{!pg:%{p:mcrt1.o%s}%{!p:crt1.o%s}} \\\n+\t\t\t  %{pg:gmon.o%s} \\\n+\t\t\t  %{pg:crti.o%s}%{!pg:crti.o%s} \\\n+\t\t\t  %{ansi:/usr/ccs/lib/values-Xc.o%s} \\\n+\t\t\t  %{!ansi: \\\n+\t\t\t   %{traditional:/usr/ccs/lib/values-Xt.o%s} \\\n+\t\t\t   %{!traditional:/usr/ccs/lib/values-Xa.o%s}}}}\"\n+\n+#undef\tLIB_SPEC\n+#define LIB_SPEC \\\n+  \"%{!shared:%{!symbolic:-lc}} \\\n+  %{!shared:%{!symbolic:%{pg:crtn.o%s}%{!pg:crtn.o%s}}}\""}]}