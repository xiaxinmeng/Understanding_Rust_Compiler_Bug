{"sha": "affe6f69d1b62bd4c56c9f3fa5d72430a3847253", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZmZTZmNjlkMWI2MmJkNGM1NmM5ZjNmYTVkNzI0MzBhMzg0NzI1Mw==", "commit": {"author": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2005-01-10T18:26:40Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2005-01-10T18:26:40Z"}, "message": "[multiple changes]\n\n2005-01-10  Michael Koch  <konqueror@gmx.de>\n\n\t* java/util/SimpleTimeZone.java (checkRule):\n\tThrow IllegalArgumentException on invalid month values.\n\t* java/util/TimeZone.java (setID):\n\tThrow NullPointerException if needed.\n\n2005-01-10  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* java/util/SimpleTimeZone.java (getOffset):\n\toffset end date with daylight savings\n\nFrom-SVN: r93149", "tree": {"sha": "5ee3bd69fabae06c836eddab98485e50c5386c7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ee3bd69fabae06c836eddab98485e50c5386c7c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/affe6f69d1b62bd4c56c9f3fa5d72430a3847253", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/affe6f69d1b62bd4c56c9f3fa5d72430a3847253", "html_url": "https://github.com/Rust-GCC/gccrs/commit/affe6f69d1b62bd4c56c9f3fa5d72430a3847253", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/affe6f69d1b62bd4c56c9f3fa5d72430a3847253/comments", "author": null, "committer": null, "parents": [{"sha": "2b816e14b71d51ccf05dd31cc3d8d4dcf9e83d16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b816e14b71d51ccf05dd31cc3d8d4dcf9e83d16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b816e14b71d51ccf05dd31cc3d8d4dcf9e83d16"}], "stats": {"total": 25, "additions": 22, "deletions": 3}, "files": [{"sha": "42ad4c42e359757d32034879649c9d9697503b94", "filename": "libjava/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/affe6f69d1b62bd4c56c9f3fa5d72430a3847253/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/affe6f69d1b62bd4c56c9f3fa5d72430a3847253/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=affe6f69d1b62bd4c56c9f3fa5d72430a3847253", "patch": "@@ -1,3 +1,15 @@\n+2005-01-10  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/util/SimpleTimeZone.java (checkRule):\n+\tThrow IllegalArgumentException on invalid month values.\n+\t* java/util/TimeZone.java (setID):\n+\tThrow NullPointerException if needed.\n+\n+2005-01-10  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* java/util/SimpleTimeZone.java (getOffset):\n+\toffset end date with daylight savings\n+\n 2005-01-10  Ranjit Mathew  <rmathew@hotmail.com>\n \n \t* testsuite/libjava.compile/PR19277.java: New file for PR java/19277."}, {"sha": "7d0e20198614366d35919dc81479dd2b6f1259eb", "filename": "libjava/java/util/SimpleTimeZone.java", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/affe6f69d1b62bd4c56c9f3fa5d72430a3847253/libjava%2Fjava%2Futil%2FSimpleTimeZone.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/affe6f69d1b62bd4c56c9f3fa5d72430a3847253/libjava%2Fjava%2Futil%2FSimpleTimeZone.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FSimpleTimeZone.java?ref=affe6f69d1b62bd4c56c9f3fa5d72430a3847253", "patch": "@@ -70,7 +70,7 @@ public class SimpleTimeZone extends TimeZone\n   /**\n    * The daylight savings offset.  This is a positive offset in\n    * milliseconds with respect to standard time.  Typically this\n-   * is one hour, but for some time zones this may be half an our.\n+   * is one hour, but for some time zones this may be half an hour.\n    * @serial\n    * @since JDK1.1.4\n    */\n@@ -430,6 +430,8 @@ public void setStartYear(int year)\n    */\n   private int checkRule(int month, int day, int dayOfWeek)\n   {\n+    if (month < 0 || month > 11)\n+      throw new IllegalArgumentException(\"month out of range\");\n     int daysInMonth = getDaysInMonth(month, 1);\n     if (dayOfWeek == 0)\n       {\n@@ -589,7 +591,7 @@ else if (this.endTimeMode == STANDARD_TIME)\n    *\n    * Note that this API isn't incredibly well specified.  It appears that the\n    * after flag must override the parameters, since normally, the day and\n-   * dayofweek can select this.  I.e., if day < 0 and dayOfWeek < 0, on or\n+   * dayofweek can select this.  I.e., if day &lt; 0 and dayOfWeek &lt; 0, on or\n    * before mode is chosen.  But if after == true, this implementation\n    * overrides the signs of the other arguments.  And if dayOfWeek == 0, it\n    * falls back to the behavior in the other APIs.  I guess this should be\n@@ -693,7 +695,8 @@ public int getOffset(int era, int year, int month,\n \tboolean afterStart = !isBefore(year, month, day, dayOfWeek, millis,\n \t\t\t\t       startMode, startMonth,\n \t\t\t\t       startDay, startDayOfWeek, startTime);\n-\tboolean beforeEnd = isBefore(year, month, day, dayOfWeek, millis,\n+\tboolean beforeEnd = isBefore(year, month, day, dayOfWeek,\n+\t\t\t\t     millis + dstSavings,\n \t\t\t\t     endMode, endMonth,\n \t\t\t\t     endDay, endDayOfWeek, endTime);\n "}, {"sha": "0685e6046005731c13159f8605fbef2cb1cd1199", "filename": "libjava/java/util/TimeZone.java", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/affe6f69d1b62bd4c56c9f3fa5d72430a3847253/libjava%2Fjava%2Futil%2FTimeZone.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/affe6f69d1b62bd4c56c9f3fa5d72430a3847253/libjava%2Fjava%2Futil%2FTimeZone.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FTimeZone.java?ref=affe6f69d1b62bd4c56c9f3fa5d72430a3847253", "patch": "@@ -989,9 +989,13 @@ public String getID()\n    * Sets the identifier of this time zone. For instance, PST for\n    * Pacific Standard Time.\n    * @param id the new time zone ID.\n+   * @throws NullPointerException if <code>id</code> is <code>null</code>\n    */\n   public void setID(String id)\n   {\n+    if (id == null)\n+      throw new NullPointerException();\n+    \n     this.ID = id;\n   }\n "}]}