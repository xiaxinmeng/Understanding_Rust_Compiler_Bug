{"sha": "dec2b703db032342463d9366c7ca6882d7987f4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGVjMmI3MDNkYjAzMjM0MjQ2M2Q5MzY2YzdjYTY4ODJkNzk4N2Y0YQ==", "commit": {"author": {"name": "Janis Johnson", "email": "janis@us.ibm.com", "date": "2001-07-11T17:36:50Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-07-11T17:36:50Z"}, "message": "profile.c (branch_prob): Fix .bbg info for computed gotos and C++ EH code.\n\n        * profile.c (branch_prob): Fix .bbg info for computed gotos\n        and C++ EH code.\n\nFrom-SVN: r43942", "tree": {"sha": "9665c36a6846cb7ab944502861905727da3ae96f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9665c36a6846cb7ab944502861905727da3ae96f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dec2b703db032342463d9366c7ca6882d7987f4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dec2b703db032342463d9366c7ca6882d7987f4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dec2b703db032342463d9366c7ca6882d7987f4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dec2b703db032342463d9366c7ca6882d7987f4a/comments", "author": null, "committer": null, "parents": [{"sha": "40b18c0a378124dca8b0f29f798fb47de9516e15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40b18c0a378124dca8b0f29f798fb47de9516e15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40b18c0a378124dca8b0f29f798fb47de9516e15"}], "stats": {"total": 54, "additions": 42, "deletions": 12}, "files": [{"sha": "f46d051a334bc6ea823609758585f224f02b4c2e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec2b703db032342463d9366c7ca6882d7987f4a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec2b703db032342463d9366c7ca6882d7987f4a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dec2b703db032342463d9366c7ca6882d7987f4a", "patch": "@@ -1,3 +1,8 @@\n+2001-07-11  Janis Johnson <janis@us.ibm.com>\n+\n+\t* profile.c (branch_prob): Fix .bbg info for computed gotos\n+\tand C++ EH code.\n+\n 2001-07-11  Mark Mitchell  <mark@codesourcery.com>\n \n \t* stmt.c (parse_output_constraint): New function, split out "}, {"sha": "fd03d4be07416f9e45641870643da6fd0d9032f3", "filename": "gcc/profile.c", "status": "modified", "additions": 37, "deletions": 12, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec2b703db032342463d9366c7ca6882d7987f4a/gcc%2Fprofile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec2b703db032342463d9366c7ca6882d7987f4a/gcc%2Fprofile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.c?ref=dec2b703db032342463d9366c7ca6882d7987f4a", "patch": "@@ -100,6 +100,7 @@ int count_instrumented_edges;\n \n static int total_num_blocks;\n static int total_num_edges;\n+static int total_num_edges_ignored;\n static int total_num_edges_instrumented;\n static int total_num_blocks_created;\n static int total_num_passes;\n@@ -539,7 +540,7 @@ void\n branch_prob ()\n {\n   int i;\n-  int num_edges;\n+  int num_edges, ignored_edges;\n   struct edge_info *edge_infos;\n   struct edge_list *el;\n \n@@ -626,6 +627,7 @@ branch_prob ()\n   edge_infos = (struct edge_info *)\n     xcalloc (num_edges, sizeof (struct edge_info));\n \n+  ignored_edges = 0;\n   for (i = 0 ; i < num_edges ; i++)\n     {\n       edge e = INDEX_EDGE (el, i);\n@@ -635,17 +637,12 @@ branch_prob ()\n       /* Mark edges we've replaced by fake edges above as ignored.  */\n       if ((e->flags & (EDGE_ABNORMAL | EDGE_ABNORMAL_CALL))\n \t  && e->src != ENTRY_BLOCK_PTR && e->dest != EXIT_BLOCK_PTR)\n-\tEDGE_INFO (e)->ignore = 1;\n+        {\n+\t  EDGE_INFO (e)->ignore = 1;\n+\t  ignored_edges++;\n+        }\n     }\n \n-  total_num_blocks += n_basic_blocks + 2;\n-  if (rtl_dump_file)\n-    fprintf (rtl_dump_file, \"%d basic blocks\\n\", n_basic_blocks);\n-\n-  total_num_edges += num_edges;\n-  if (rtl_dump_file)\n-    fprintf (rtl_dump_file, \"%d edges\\n\", num_edges);\n-\n #ifdef ENABLE_CHECKING\n   verify_flow_info ();\n #endif\n@@ -722,6 +719,31 @@ branch_prob ()\n \n   find_spanning_tree (el);\n \n+  /* Fake edges that are not on the tree will not be instrumented, so\n+     mark them ignored. */\n+  for (i = 0; i < num_edges; i++)\n+    {\n+      edge e = INDEX_EDGE (el, i);\n+      struct edge_info *inf = EDGE_INFO (e);\n+      if ((e->flags & EDGE_FAKE) && !inf->ignore && !inf->on_tree)\n+        {\n+          inf->ignore = 1;\n+          ignored_edges++;\n+        }\n+    }\n+\n+  total_num_blocks += n_basic_blocks + 2;\n+  if (rtl_dump_file)\n+    fprintf (rtl_dump_file, \"%d basic blocks\\n\", n_basic_blocks);\n+\n+  total_num_edges += num_edges;\n+  if (rtl_dump_file)\n+    fprintf (rtl_dump_file, \"%d edges\\n\", num_edges);\n+\n+  total_num_edges_ignored += ignored_edges;\n+  if (rtl_dump_file)\n+    fprintf (rtl_dump_file, \"%d ignored edges\\n\", ignored_edges);\n+\n   /* Create a .bbg file from which gcov can reconstruct the basic block\n      graph.  First output the number of basic blocks, and then for every\n      edge output the source and target basic block numbers.\n@@ -733,7 +755,7 @@ branch_prob ()\n \n       /* The plus 2 stands for entry and exit block.  */\n       __write_long (n_basic_blocks + 2, bbg_file, 4);\n-      __write_long (num_edges + 1, bbg_file, 4);\n+      __write_long (num_edges - ignored_edges + 1, bbg_file, 4);\n \n       for (i = 0; i < n_basic_blocks + 1; i++)\n \t{\n@@ -754,7 +776,7 @@ branch_prob ()\n \t\t  flag_bits = 0;\n \t\t  if (i->on_tree)\n \t\t    flag_bits |= 0x1;\n-\t\t  if (e->flags & EDGE_ABNORMAL)\n+\t\t  if (e->flags & EDGE_FAKE)\n \t\t    flag_bits |= 0x2;\n \t\t  if (e->flags & EDGE_FALLTHRU)\n \t\t    flag_bits |= 0x4;\n@@ -950,6 +972,7 @@ init_branch_prob (filename)\n \n   total_num_blocks = 0;\n   total_num_edges = 0;\n+  total_num_edges_ignored = 0;\n   total_num_edges_instrumented = 0;\n   total_num_blocks_created = 0;\n   total_num_passes = 0;\n@@ -995,6 +1018,8 @@ end_branch_prob ()\n       fprintf (rtl_dump_file, \"Total number of blocks: %d\\n\",\n \t       total_num_blocks);\n       fprintf (rtl_dump_file, \"Total number of edges: %d\\n\", total_num_edges);\n+      fprintf (rtl_dump_file, \"Total number of ignored edges: %d\\n\",\n+\t       total_num_edges_ignored);\n       fprintf (rtl_dump_file, \"Total number of instrumented edges: %d\\n\",\n \t       total_num_edges_instrumented);\n       fprintf (rtl_dump_file, \"Total number of blocks created: %d\\n\","}]}