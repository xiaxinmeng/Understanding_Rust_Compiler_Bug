{"sha": "f55460af163cc791a59bed42aa8f152417150a7e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjU1NDYwYWYxNjNjYzc5MWE1OWJlZDQyYWE4ZjE1MjQxNzE1MGE3ZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-04-09T11:23:51Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-04-09T11:23:51Z"}, "message": "re PR tree-optimization/70586 (wrong code at -O2 and -O3 on x86_64-linux-gnu in 32-bit and 64-bit modes)\n\n\tPR tree-optimization/70586\n\t* tree-ssa-ifcombine.c (bb_no_side_effects_p): Return false\n\tfor any calls.\n\n\t* gcc.c-torture/execute/pr70586.c: New test.\n\nFrom-SVN: r234849", "tree": {"sha": "278ad08deaf680f882d21d74af54385c37e7b401", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/278ad08deaf680f882d21d74af54385c37e7b401"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f55460af163cc791a59bed42aa8f152417150a7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f55460af163cc791a59bed42aa8f152417150a7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f55460af163cc791a59bed42aa8f152417150a7e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f55460af163cc791a59bed42aa8f152417150a7e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0b77bbf392d30d1b9335c329131c4d7ce476a15f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b77bbf392d30d1b9335c329131c4d7ce476a15f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b77bbf392d30d1b9335c329131c4d7ce476a15f"}], "stats": {"total": 50, "additions": 49, "deletions": 1}, "files": [{"sha": "7f2180d232a7b9f612da0bdf841c9fe405a4d662", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f55460af163cc791a59bed42aa8f152417150a7e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f55460af163cc791a59bed42aa8f152417150a7e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f55460af163cc791a59bed42aa8f152417150a7e", "patch": "@@ -1,3 +1,9 @@\n+2016-04-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/70586\n+\t* tree-ssa-ifcombine.c (bb_no_side_effects_p): Return false\n+\tfor any calls.\n+\n 2016-04-08  Cesar Philippidis  <cesar@codesourcery.com>\n \n \tPR lto/70289"}, {"sha": "51fcbc90c45ed0ee665082b374e9db10af731702", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f55460af163cc791a59bed42aa8f152417150a7e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f55460af163cc791a59bed42aa8f152417150a7e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f55460af163cc791a59bed42aa8f152417150a7e", "patch": "@@ -1,3 +1,8 @@\n+2016-04-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/70586\n+\t* gcc.c-torture/execute/pr70586.c: New test.\n+\n 2016-04-09  Dominique d'Humieres  <dominiq@lps.ens.fr>\n \n \tPR sanitizer/70573"}, {"sha": "32e9e502cac20037048e89b98249734e370b8042", "filename": "gcc/testsuite/gcc.c-torture/execute/pr70586.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f55460af163cc791a59bed42aa8f152417150a7e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr70586.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f55460af163cc791a59bed42aa8f152417150a7e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr70586.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr70586.c?ref=f55460af163cc791a59bed42aa8f152417150a7e", "patch": "@@ -0,0 +1,30 @@\n+/* PR tree-optimization/70586 */\n+\n+int a, e, f;\n+short b, c, d;\n+\n+int\n+foo (int x, int y)\n+{\n+  return (y == 0 || (x && y == 1)) ? x : x % y;\n+}\n+\n+static short\n+bar (void)\n+{\n+  int i = foo (c, f);\n+  f = foo (d, 2);\n+  int g = foo (b, c);\n+  int h = foo (g > 0, c);\n+  c = (3 >= h ^ 7) <= foo (i, c);\n+  if (foo (e, 1))\n+    return a;\n+  return 0;\n+}\n+\n+int\n+main ()\n+{\n+  bar ();\n+  return 0;\n+}"}, {"sha": "79fe3a8b2d0057d9c139b8a7125e30c6bc7f4877", "filename": "gcc/tree-ssa-ifcombine.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f55460af163cc791a59bed42aa8f152417150a7e/gcc%2Ftree-ssa-ifcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f55460af163cc791a59bed42aa8f152417150a7e/gcc%2Ftree-ssa-ifcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ifcombine.c?ref=f55460af163cc791a59bed42aa8f152417150a7e", "patch": "@@ -125,7 +125,14 @@ bb_no_side_effects_p (basic_block bb)\n       if (gimple_has_side_effects (stmt)\n \t  || gimple_uses_undefined_value_p (stmt)\n \t  || gimple_could_trap_p (stmt)\n-\t  || gimple_vuse (stmt))\n+\t  || gimple_vuse (stmt)\n+\t  /* const calls don't match any of the above, yet they could\n+\t     still have some side-effects - they could contain\n+\t     gimple_could_trap_p statements, like floating point\n+\t     exceptions or integer division by zero.  See PR70586.\n+\t     FIXME: perhaps gimple_has_side_effects or gimple_could_trap_p\n+\t     should handle this.  */\n+\t  || is_gimple_call (stmt))\n \treturn false;\n     }\n "}]}