{"sha": "e23e04db7b649db2d3f575f883385d0aa83aa64f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTIzZTA0ZGI3YjY0OWRiMmQzZjU3NWY4ODMzODVkMGFhODNhYTY0Zg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-12T08:13:39Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-12T08:13:39Z"}, "message": "[multiple changes]\n\n2015-05-12  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_type.adb, sem_ch10.adb, freeze.adb, sem_ch6.adb, exp_disp.adb:\n\tMinor reformatting.\n\n2015-05-12  Bob Duff  <duff@adacore.com>\n\n\t* exp_attr.adb (Size): Remove unnecessary check for types with\n\tunknown discriminants.\tThat was causing the compiler to build\n\ta function call _size(T), where T is a type, not an object.\n\n2015-05-12  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch4.adb (Extended_Primitive_Ops): Exclude overriding\n\tprimitive operations of a type extension declared in the package\n\tbody, to prevent duplicates in extended list.\n\n2015-05-12  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb (Analyze_Component_Declaration): If the component is\n\tan unconstrained synchronized type with discriminants, create a\n\tconstrained default subtype for it, so that the enclosing record\n\tcan be given the proper size.\n\t* sem_util.adb (Build_Default_Subtype): If the subtype is created\n\tfor a record discriminant, do not analyze the declarztion at\n\tonce because it is added to the freezing actions of the enclosing\n\trecord type.\n\nFrom-SVN: r223039", "tree": {"sha": "ec06da665bfd8a1db6165c99fd1245c63b16e2ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec06da665bfd8a1db6165c99fd1245c63b16e2ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e23e04db7b649db2d3f575f883385d0aa83aa64f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e23e04db7b649db2d3f575f883385d0aa83aa64f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e23e04db7b649db2d3f575f883385d0aa83aa64f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e23e04db7b649db2d3f575f883385d0aa83aa64f/comments", "author": null, "committer": null, "parents": [{"sha": "473469230a0224c19584317db7c2b9e9bb07c5c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/473469230a0224c19584317db7c2b9e9bb07c5c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/473469230a0224c19584317db7c2b9e9bb07c5c1"}], "stats": {"total": 118, "additions": 88, "deletions": 30}, "files": [{"sha": "b98c272eed3a19f1347ab479b9e9d3a262efe8d5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e23e04db7b649db2d3f575f883385d0aa83aa64f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e23e04db7b649db2d3f575f883385d0aa83aa64f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e23e04db7b649db2d3f575f883385d0aa83aa64f", "patch": "@@ -1,3 +1,31 @@\n+2015-05-12  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_type.adb, sem_ch10.adb, freeze.adb, sem_ch6.adb, exp_disp.adb:\n+\tMinor reformatting.\n+\n+2015-05-12  Bob Duff  <duff@adacore.com>\n+\n+\t* exp_attr.adb (Size): Remove unnecessary check for types with\n+\tunknown discriminants.\tThat was causing the compiler to build\n+\ta function call _size(T), where T is a type, not an object.\n+\n+2015-05-12  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch4.adb (Extended_Primitive_Ops): Exclude overriding\n+\tprimitive operations of a type extension declared in the package\n+\tbody, to prevent duplicates in extended list.\n+\n+2015-05-12  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Analyze_Component_Declaration): If the component is\n+\tan unconstrained synchronized type with discriminants, create a\n+\tconstrained default subtype for it, so that the enclosing record\n+\tcan be given the proper size.\n+\t* sem_util.adb (Build_Default_Subtype): If the subtype is created\n+\tfor a record discriminant, do not analyze the declarztion at\n+\tonce because it is added to the freezing actions of the enclosing\n+\trecord type.\n+\n 2015-05-12  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_prag.adb (Expand_N_Pragma): Rewrite ignored pragma as"}, {"sha": "c985a426817659dc57b1ed832c0fad1653f71f37", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e23e04db7b649db2d3f575f883385d0aa83aa64f/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e23e04db7b649db2d3f575f883385d0aa83aa64f/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=e23e04db7b649db2d3f575f883385d0aa83aa64f", "patch": "@@ -5538,14 +5538,11 @@ package body Exp_Attr is\n          --  For X'Size applied to an object of a class-wide type, transform\n          --  X'Size into a call to the primitive operation _Size applied to X.\n \n-         elsif Is_Class_Wide_Type (Ptyp)\n-           or else (Id = Attribute_Size\n-                      and then Is_Tagged_Type (Ptyp)\n-                      and then Has_Unknown_Discriminants (Ptyp))\n-         then\n+         elsif Is_Class_Wide_Type (Ptyp) then\n+\n             --  No need to do anything else compiling under restriction\n             --  No_Dispatching_Calls. During the semantic analysis we\n-            --  already notified such violation.\n+            --  already noted this restriction violation.\n \n             if Restriction_Active (No_Dispatching_Calls) then\n                return;"}, {"sha": "a70cf6a814d2fe6c38e98df15731c9774d4fc75e", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e23e04db7b649db2d3f575f883385d0aa83aa64f/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e23e04db7b649db2d3f575f883385d0aa83aa64f/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=e23e04db7b649db2d3f575f883385d0aa83aa64f", "patch": "@@ -1612,8 +1612,8 @@ package body Exp_Disp is\n                         Set_Scope (Anon, Current_Scope);\n                      end if;\n \n-                     Set_Directly_Designated_Type (Anon,\n-                       Non_Limited_View (Actual_DDT));\n+                     Set_Directly_Designated_Type\n+                       (Anon, Non_Limited_View (Actual_DDT));\n                      Set_Etype (Actual_Dup, Anon);\n                   end if;\n                end if;"}, {"sha": "8c1681526cff0109e6ae9bbc203a213b0fdc607b", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e23e04db7b649db2d3f575f883385d0aa83aa64f/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e23e04db7b649db2d3f575f883385d0aa83aa64f/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=e23e04db7b649db2d3f575f883385d0aa83aa64f", "patch": "@@ -425,8 +425,8 @@ package body Freeze is\n             Ret_Type : constant Entity_Id := Etype (Result_Definition (Spec));\n          begin\n             if Has_Non_Limited_View (Ret_Type) then\n-               Set_Result_Definition (Spec,\n-                  New_Occurrence_Of (Non_Limited_View (Ret_Type), Loc));\n+               Set_Result_Definition\n+                 (Spec, New_Occurrence_Of (Non_Limited_View (Ret_Type), Loc));\n             end if;\n          end;\n       end if;\n@@ -456,10 +456,11 @@ package body Freeze is\n             elsif Is_Access_Type (Form_Type)\n               and then not Is_Access_Type (Pref)\n             then\n-               Actuals := New_List\n-                 (Make_Attribute_Reference (Loc,\n-                   Attribute_Name => Name_Access,\n-                   Prefix => Relocate_Node (Pref)));\n+               Actuals :=\n+                 New_List (\n+                   Make_Attribute_Reference (Loc,\n+                     Attribute_Name => Name_Access,\n+                     Prefix         => Relocate_Node (Pref)));\n             else\n                Actuals := New_List (Pref);\n             end if;\n@@ -530,7 +531,7 @@ package body Freeze is\n            Make_Simple_Return_Statement (Loc,\n               Expression =>\n                 Make_Function_Call (Loc,\n-                  Name => Call_Name,\n+                  Name                   => Call_Name,\n                   Parameter_Associations => Actuals));\n \n       elsif Ekind (Old_S) = E_Enumeration_Literal then\n@@ -540,13 +541,12 @@ package body Freeze is\n \n       elsif Nkind (Nam) = N_Character_Literal then\n          Call_Node :=\n-           Make_Simple_Return_Statement (Loc,\n-             Expression => Call_Name);\n+           Make_Simple_Return_Statement (Loc, Expression => Call_Name);\n \n       else\n          Call_Node :=\n            Make_Procedure_Call_Statement (Loc,\n-             Name => Call_Name,\n+             Name                   => Call_Name,\n              Parameter_Associations => Actuals);\n       end if;\n "}, {"sha": "bf1704ed6ef5471810222176d61520f8d8c54ca1", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e23e04db7b649db2d3f575f883385d0aa83aa64f/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e23e04db7b649db2d3f575f883385d0aa83aa64f/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=e23e04db7b649db2d3f575f883385d0aa83aa64f", "patch": "@@ -5605,8 +5605,8 @@ package body Sem_Ch10 is\n             Set_Non_Limited_View (Shadow, Ent);\n \n             if Is_Tagged then\n-               Set_Non_Limited_View (Class_Wide_Type (Shadow),\n-                 Class_Wide_Type (Ent));\n+               Set_Non_Limited_View\n+                 (Class_Wide_Type (Shadow), Class_Wide_Type (Ent));\n             end if;\n \n             if Is_Incomplete_Or_Private_Type (Ent) then"}, {"sha": "addfc0a56c38d51b3ddd9d74a16ab85b4b062001", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e23e04db7b649db2d3f575f883385d0aa83aa64f/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e23e04db7b649db2d3f575f883385d0aa83aa64f/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=e23e04db7b649db2d3f575f883385d0aa83aa64f", "patch": "@@ -1794,9 +1794,10 @@ package body Sem_Ch3 is\n    -----------------------------------\n \n    procedure Analyze_Component_Declaration (N : Node_Id) is\n-      Id  : constant Entity_Id := Defining_Identifier (N);\n-      E   : constant Node_Id   := Expression (N);\n-      Typ : constant Node_Id   :=\n+      Loc : constant Source_Ptr := Sloc (N);\n+      Id  : constant Entity_Id  := Defining_Identifier (N);\n+      E   : constant Node_Id    := Expression (N);\n+      Typ : constant Node_Id    :=\n               Subtype_Indication (Component_Definition (N));\n       T   : Entity_Id;\n       P   : Entity_Id;\n@@ -2123,6 +2124,27 @@ package body Sem_Ch3 is\n          end if;\n       end if;\n \n+      --  If the component is an unconstrained task or protected type with\n+      --  discriminants, the component and the enclosing record are limited\n+      --  and the component is constrained by its default values. Compute\n+      --  its actual subtype, else it may be allocated the maximum size by\n+      --  the backend, and possibly overflow.\n+\n+      if Is_Concurrent_Type (T)\n+        and then not Is_Constrained (T)\n+        and then Has_Discriminants (T)\n+        and then not Has_Discriminants (Current_Scope)\n+      then\n+         declare\n+            Act_T : constant Entity_Id := Build_Default_Subtype (T, N);\n+         begin\n+            Set_Etype (Id, Act_T);\n+            Set_Component_Definition (N,\n+              Make_Component_Definition (Loc,\n+                Subtype_Indication => New_Occurrence_Of (Act_T, Loc)));\n+         end;\n+      end if;\n+\n       Set_Original_Record_Component (Id, Id);\n \n       if Has_Aspects (N) then"}, {"sha": "c6769c5d54bbfc3751fd8b171dff45f177969b2c", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e23e04db7b649db2d3f575f883385d0aa83aa64f/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e23e04db7b649db2d3f575f883385d0aa83aa64f/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=e23e04db7b649db2d3f575f883385d0aa83aa64f", "patch": "@@ -8196,6 +8196,12 @@ package body Sem_Ch4 is\n                while Present (Op) loop\n                   if Comes_From_Source (Op)\n                     and then Is_Overloadable (Op)\n+\n+                    --  Exclude overriding primitive operations of a type\n+                    --  extension declared in the package body, to prevent\n+                    --  duplicates in extended list.\n+\n+                    and then not Is_Primitive (Op)\n                     and then Is_List_Member (Unit_Declaration_Node (Op))\n                     and then List_Containing (Unit_Declaration_Node (Op)) =\n                                                                    Body_Decls"}, {"sha": "dcbee8cbd868af064475ea57fc9adc20745720d8", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e23e04db7b649db2d3f575f883385d0aa83aa64f/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e23e04db7b649db2d3f575f883385d0aa83aa64f/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=e23e04db7b649db2d3f575f883385d0aa83aa64f", "patch": "@@ -2921,11 +2921,8 @@ package body Sem_Ch6 is\n \n          procedure Detect_And_Exchange (Id : Entity_Id) is\n             Typ : constant Entity_Id := Etype (Id);\n-\n          begin\n-            if From_Limited_With (Typ)\n-              and then Has_Non_Limited_View (Typ)\n-            then\n+            if From_Limited_With (Typ) and then Has_Non_Limited_View (Typ) then\n                Set_Etype (Id, Non_Limited_View (Typ));\n             end if;\n          end Detect_And_Exchange;"}, {"sha": "785121adf247925ba684cbd7269b9c8d303d4a47", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e23e04db7b649db2d3f575f883385d0aa83aa64f/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e23e04db7b649db2d3f575f883385d0aa83aa64f/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=e23e04db7b649db2d3f575f883385d0aa83aa64f", "patch": "@@ -1228,7 +1228,7 @@ package body Sem_Type is\n          --  incomplete, get full view if available.\n \n          return Has_Non_Limited_View (T1)\n-            and then Covers (Get_Full_View (Non_Limited_View (T1)), T2);\n+           and then Covers (Get_Full_View (Non_Limited_View (T1)), T2);\n \n       elsif From_Limited_With (T2) then\n \n@@ -1237,7 +1237,7 @@ package body Sem_Type is\n          --  verify that the context type is the nonlimited view.\n \n          return Has_Non_Limited_View (T2)\n-            and then Covers (T1, Get_Full_View (Non_Limited_View (T2)));\n+           and then Covers (T1, Get_Full_View (Non_Limited_View (T2)));\n \n       --  Ada 2005 (AI-412): Coverage for regular incomplete subtypes\n "}, {"sha": "0c176f03067bb607debf286db89cc282c5ddca89", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e23e04db7b649db2d3f575f883385d0aa83aa64f/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e23e04db7b649db2d3f575f883385d0aa83aa64f/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=e23e04db7b649db2d3f575f883385d0aa83aa64f", "patch": "@@ -1546,7 +1546,15 @@ package body Sem_Util is\n                      Constraints => Constraints)));\n \n          Insert_Action (N, Decl);\n-         Analyze (Decl);\n+\n+         --  If the context is a component declaration the subtype\n+         --  declaration will be analyzed when the enclosing type is\n+         --  frozen, otherwise do it now.\n+\n+         if Ekind (Current_Scope) /= E_Record_Type then\n+            Analyze (Decl);\n+         end if;\n+\n          return Act;\n       end;\n    end Build_Default_Subtype;"}]}