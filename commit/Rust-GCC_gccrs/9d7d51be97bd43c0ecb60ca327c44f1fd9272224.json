{"sha": "9d7d51be97bd43c0ecb60ca327c44f1fd9272224", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQ3ZDUxYmU5N2JkNDNjMGVjYjYwY2EzMjdjNDRmMWZkOTI3MjIyNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2003-10-23T11:57:52Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2003-10-23T11:57:52Z"}, "message": "re PR ada/11978 (ada compiler crashes in a-tags.adb)\n\n\tPR ada/11978:\n\t* exp_ch13.adb (Expand_N_Freeze_Entity): Do not consider inherited\n\tExternal_Tag attribute definition clauses.\n\n\tPR ada/7613:\n\t* exp_dbug.adb (Debug_Renaming_Declaration): For the renaming of a\n\tchild unit, generate a fully qualified name to avoid spurious errors\n\twhen the context contains renamings of different child units with\n\tthe same simple name.\n\n\t* exp_dbug.ads: Add documentation on name qualification for renamings\n\tof child units.\n\n\t* g-regpat.ads, g-regpat.adb: Minor reformatting\n\n\t* Makefile.in: Use the file 1atags.ads with the ZFP and cert run-times.\n\n\t* trans.c: (tree_transform, case N_Real_Literal): Add extra arg to\n\tMachine call.\n\n\t* urealp.h: (Machine): Update to proper definition.\n\nFrom-SVN: r72843", "tree": {"sha": "bdb15adb9e94a854c31457fc6b697589530ef086", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bdb15adb9e94a854c31457fc6b697589530ef086"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d7d51be97bd43c0ecb60ca327c44f1fd9272224", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d7d51be97bd43c0ecb60ca327c44f1fd9272224", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d7d51be97bd43c0ecb60ca327c44f1fd9272224", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d7d51be97bd43c0ecb60ca327c44f1fd9272224/comments", "author": null, "committer": null, "parents": [{"sha": "6d244bbea8b8d094bd27172bfb890b1cf595b1b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d244bbea8b8d094bd27172bfb890b1cf595b1b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d244bbea8b8d094bd27172bfb890b1cf595b1b6"}], "stats": {"total": 173, "additions": 104, "deletions": 69}, "files": [{"sha": "82bfc681a07aba3fdd60e2e0c98d39331cfe20be", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d7d51be97bd43c0ecb60ca327c44f1fd9272224/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d7d51be97bd43c0ecb60ca327c44f1fd9272224/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9d7d51be97bd43c0ecb60ca327c44f1fd9272224", "patch": "@@ -1,3 +1,35 @@\n+2003-10-23  Thomas Quinot  <quinot@act-europe.fr>\n+\n+\tPR ada/11978:\n+\t* exp_ch13.adb (Expand_N_Freeze_Entity): Do not consider inherited\n+\tExternal_Tag attribute definition clauses.\n+\n+2003-10-23  Ed Schonberg  <schonberg@gnat.com>\n+\n+\tPR ada/7613:\n+\t* exp_dbug.adb (Debug_Renaming_Declaration): For the renaming of a\n+\tchild unit, generate a fully qualified name to avoid spurious errors\n+\twhen the context contains renamings of different child units with\n+\tthe same simple name.\n+\n+\t* exp_dbug.ads: Add documentation on name qualification for renamings\n+\tof child units.\n+\n+2003-10-23  Robert Dewar  <dewar@gnat.com>\n+\n+\t* g-regpat.ads, g-regpat.adb: Minor reformatting\n+\n+2003-10-23  Jose Ruiz  <ruiz@act-europe.fr>\n+\n+\t* Makefile.in: Use the file 1atags.ads with the ZFP and cert run-times.\n+\n+2003-10-23  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* trans.c: (tree_transform, case N_Real_Literal): Add extra arg to\n+\tMachine call.\n+\n+\t* urealp.h: (Machine): Update to proper definition.\n+\n 2003-10-23  Arnaud Charlet  <charlet@act-europe.fr>\n \n \t* init.c, adaint.c: Minor reformatting."}, {"sha": "48fae10c0adee00795cbf123c042d20d343ad3b9", "filename": "gcc/ada/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d7d51be97bd43c0ecb60ca327c44f1fd9272224/gcc%2Fada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d7d51be97bd43c0ecb60ca327c44f1fd9272224/gcc%2Fada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.in?ref=9d7d51be97bd43c0ecb60ca327c44f1fd9272224", "patch": "@@ -600,6 +600,7 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworks,$(targ))),)\n   a-taside.adb<1ataside.adb \\\n \n   CERT_LEVEL_B_TARGET_PAIRS=\\\n+  a-tags.ads<1atags.ads     \\\n   a-tags.adb<1atags.adb     \\\n   a-except.adb<2aexcept.adb \\\n   a-except.ads<2aexcept.ads \\\n@@ -694,6 +695,7 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworksae,$(targ))),)\n   a-taside.adb<1ataside.adb \\\n \n   CERT_LEVEL_B_TARGET_PAIRS=\\\n+  a-tags.ads<1atags.ads     \\\n   a-tags.adb<1atags.adb     \\\n   a-except.adb<2aexcept.adb \\\n   a-except.ads<2aexcept.ads \\\n@@ -1969,6 +1971,7 @@ gnatlib: ../stamp-gnatlib1 ../stamp-gnatlib2\n HIE_NONE_TARGET_PAIRS=\\\n  a-except.ads<1aexcept.ads \\\n  a-except.adb<1aexcept.adb \\\n+ a-tags.ads<1atags.ads \\\n  a-tags.adb<1atags.adb \\\n  s-secsta.ads<1ssecsta.ads \\\n  s-secsta.adb<1ssecsta.adb \\"}, {"sha": "0cde2a670356cb728f435a9281231299999d7d98", "filename": "gcc/ada/exp_ch13.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d7d51be97bd43c0ecb60ca327c44f1fd9272224/gcc%2Fada%2Fexp_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d7d51be97bd43c0ecb60ca327c44f1fd9272224/gcc%2Fada%2Fexp_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch13.adb?ref=9d7d51be97bd43c0ecb60ca327c44f1fd9272224", "patch": "@@ -329,15 +329,17 @@ package body Exp_Ch13 is\n            and then Is_First_Subtype (E)\n          then\n             --  Check for a definition of External_Tag, whose expansion must\n-            --  be delayed until the dispatch table is built.\n+            --  be delayed until the dispatch table is built. The clause\n+            --  is considered only if it applies to this specific tagged\n+            --  type, as opposed to one of its ancestors.\n \n             declare\n                Def : constant Node_Id :=\n                        Get_Attribute_Definition_Clause\n                          (E, Attribute_External_Tag);\n \n             begin\n-               if Present (Def) then\n+               if Present (Def) and then Entity (Name (Def)) = E then\n                   Expand_External_Tag_Definition (Def);\n                end if;\n             end;"}, {"sha": "aa47c00153bba3f014e511eaebfe6cbbd2b61523", "filename": "gcc/ada/exp_dbug.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d7d51be97bd43c0ecb60ca327c44f1fd9272224/gcc%2Fada%2Fexp_dbug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d7d51be97bd43c0ecb60ca327c44f1fd9272224/gcc%2Fada%2Fexp_dbug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.adb?ref=9d7d51be97bd43c0ecb60ca327c44f1fd9272224", "patch": "@@ -358,6 +358,16 @@ package body Exp_Dbug is\n          when N_Package_Renaming_Declaration =>\n             Add_Str_To_Name_Buffer (\"___XRP\");\n \n+            --  If it is a child unit create a fully qualified name,\n+            --  to disambiguate multiple child units with the same\n+            --  name and different parents.\n+\n+            if Is_Child_Unit (Ent) then\n+               Prepend_String_To_Buffer (\"__\");\n+               Prepend_String_To_Buffer\n+                 (Get_Name_String (Chars (Scope (Ent))));\n+            end if;\n+\n          when others =>\n             return Empty;\n       end case;"}, {"sha": "e8738b3aad56504eb39a09b1627459bd7ea8444e", "filename": "gcc/ada/exp_dbug.ads", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d7d51be97bd43c0ecb60ca327c44f1fd9272224/gcc%2Fada%2Fexp_dbug.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d7d51be97bd43c0ecb60ca327c44f1fd9272224/gcc%2Fada%2Fexp_dbug.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.ads?ref=9d7d51be97bd43c0ecb60ca327c44f1fd9272224", "patch": "@@ -951,7 +951,10 @@ package Exp_Dbug is\n    --    x___XRP   for a package renaming\n \n    --  The name is fully qualified in the usual manner, i.e. qualified in\n-   --  the same manner as the entity x would be.\n+   --  the same manner as the entity x would be. In the case of a package\n+   --  renaming where x is a child unit, the qualification includes the\n+   --  name of the parent unit, to disambiguate child units with the same\n+   --  simple name and (of necessity) different parents.\n \n    --  Note: subprogram renamings are not encoded at the present time.\n \n@@ -1036,7 +1039,7 @@ package Exp_Dbug is\n \n    --       type p__z___XR is\n    --         (p__g___XEXS1XS5XRmXL2XS3);\n-   --          p__q___XE--------------------outer entity is g\n+   --          p__g___XE--------------------outer entity is g\n    --                   XS1-----------------first subscript for g\n    --                      XS5--------------second subscript for g\n    --                         XRm-----------select field m"}, {"sha": "35df55d70bde6eaaaab779422305ded6983618c0", "filename": "gcc/ada/g-regpat.adb", "status": "modified", "additions": 38, "deletions": 49, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d7d51be97bd43c0ecb60ca327c44f1fd9272224/gcc%2Fada%2Fg-regpat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d7d51be97bd43c0ecb60ca327c44f1fd9272224/gcc%2Fada%2Fg-regpat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-regpat.adb?ref=9d7d51be97bd43c0ecb60ca327c44f1fd9272224", "patch": "@@ -237,8 +237,7 @@ package body GNAT.Regpat is\n \n    function Get_From_Class\n      (Bitmap : Character_Class;\n-      C      : Character)\n-      return   Boolean;\n+      C      : Character) return Boolean;\n    --  Return True if the entry is set for C in the class Bitmap.\n \n    procedure Reset_Class (Bitmap : out Character_Class);\n@@ -268,8 +267,7 @@ package body GNAT.Regpat is\n \n    function String_Length\n      (Program : Program_Data;\n-      P       : Pointer)\n-      return    Program_Size;\n+      P       : Pointer) return Program_Size;\n    --  Return the length of the string argument of the node at P\n \n    function String_Operand (P : Pointer) return Pointer;\n@@ -283,23 +281,20 @@ package body GNAT.Regpat is\n \n    function Get_Next_Offset\n      (Program : Program_Data;\n-      IP      : Pointer)\n-      return    Pointer;\n+      IP      : Pointer) return Pointer;\n    --  Get the offset field of a node. Used by Get_Next.\n \n    function Get_Next\n      (Program : Program_Data;\n-      IP      : Pointer)\n-      return    Pointer;\n+      IP      : Pointer) return Pointer;\n    --  Dig the next instruction pointer out of a node\n \n    procedure Optimize (Self : in out Pattern_Matcher);\n    --  Optimize a Pattern_Matcher by noting certain special cases\n \n    function Read_Natural\n      (Program : Program_Data;\n-      IP      : Pointer)\n-      return    Natural;\n+      IP      : Pointer) return Natural;\n    --  Return the 2-byte natural coded at position IP.\n \n    --  All of the subprograms above are tiny and should be inlined\n@@ -2052,8 +2047,7 @@ package body GNAT.Regpat is\n \n    function Compile\n      (Expression : String;\n-      Flags      : Regexp_Flags := No_Flags)\n-      return       Pattern_Matcher\n+      Flags      : Regexp_Flags := No_Flags) return Pattern_Matcher\n    is\n       Size  : Program_Size;\n       Dummy : Pattern_Matcher (0);\n@@ -2296,8 +2290,7 @@ package body GNAT.Regpat is\n \n    function Get_From_Class\n      (Bitmap : Character_Class;\n-      C      : Character)\n-      return   Boolean\n+      C      : Character) return Boolean\n    is\n       Value : constant Class_Byte := Character'Pos (C);\n \n@@ -2327,8 +2320,7 @@ package body GNAT.Regpat is\n \n    function Get_Next_Offset\n      (Program : Program_Data;\n-      IP      : Pointer)\n-      return    Pointer\n+      IP      : Pointer) return Pointer\n    is\n    begin\n       return Pointer (Read_Natural (Program, IP + 1));\n@@ -2432,9 +2424,8 @@ package body GNAT.Regpat is\n       --  Find character C in Data starting at Start and return position\n \n       function Repeat\n-        (IP   : Pointer;\n-         Max  : Natural := Natural'Last)\n-         return Natural;\n+        (IP  : Pointer;\n+         Max : Natural := Natural'Last) return Natural;\n       --  Repeatedly match something simple, report how many\n       --  It only matches on things of length 1.\n       --  Starting from Input_Pos, it matches at most Max CURLY.\n@@ -2468,8 +2459,7 @@ package body GNAT.Regpat is\n         (Op     : Opcode;\n          Scan   : Pointer;\n          Next   : Pointer;\n-         Greedy : Boolean)\n-         return   Boolean;\n+         Greedy : Boolean) return Boolean;\n       --  Return True it the simple operator (possibly non-greedy) matches\n \n       pragma Inline (Index);\n@@ -2484,11 +2474,7 @@ package body GNAT.Regpat is\n       -- Index --\n       -----------\n \n-      function Index\n-        (Start : Positive;\n-         C     : Character)\n-         return  Natural\n-      is\n+      function Index (Start : Positive; C : Character) return Natural is\n       begin\n          for J in Start .. Last_In_Data loop\n             if Data (J) = C then\n@@ -2529,7 +2515,7 @@ package body GNAT.Regpat is\n       -- Match --\n       -----------\n \n-      function Match (IP   : Pointer) return Boolean is\n+      function Match (IP : Pointer) return Boolean is\n          Scan   : Pointer := IP;\n          Next   : Pointer;\n          Op     : Opcode;\n@@ -2835,8 +2821,7 @@ package body GNAT.Regpat is\n         (Op     : Opcode;\n          Scan   : Pointer;\n          Next   : Pointer;\n-         Greedy : Boolean)\n-         return   Boolean\n+         Greedy : Boolean) return Boolean\n       is\n          Next_Char       : Character := ASCII.Nul;\n          Next_Char_Known : Boolean := False;\n@@ -3137,9 +3122,8 @@ package body GNAT.Regpat is\n       ------------\n \n       function Repeat\n-        (IP   : Pointer;\n-         Max  : Natural := Natural'Last)\n-         return Natural\n+        (IP  : Pointer;\n+         Max : Natural := Natural'Last) return Natural\n       is\n          Scan  : Natural := Input_Pos;\n          Last  : Natural;\n@@ -3384,12 +3368,15 @@ package body GNAT.Regpat is\n       return;\n    end Match;\n \n-   function  Match\n-     (Self : Pattern_Matcher;\n-      Data : String;\n+   -----------\n+   -- Match --\n+   -----------\n+\n+   function Match\n+     (Self       : Pattern_Matcher;\n+      Data       : String;\n       Data_First : Integer := -1;\n-      Data_Last  : Positive := Positive'Last)\n-      return Natural\n+      Data_Last  : Positive := Positive'Last) return Natural\n    is\n       Matches : Match_Array (0 .. 0);\n \n@@ -3402,12 +3389,11 @@ package body GNAT.Regpat is\n       end if;\n    end Match;\n \n-   function  Match\n+   function Match\n      (Self       : Pattern_Matcher;\n       Data       : String;\n       Data_First : Integer  := -1;\n-      Data_Last  : Positive := Positive'Last)\n-     return Boolean\n+      Data_Last  : Positive := Positive'Last) return Boolean\n    is\n       Matches : Match_Array (0 .. 0);\n \n@@ -3436,13 +3422,16 @@ package body GNAT.Regpat is\n       end if;\n    end Match;\n \n+   -----------\n+   -- Match --\n+   -----------\n+\n    function  Match\n      (Expression : String;\n       Data       : String;\n       Size       : Program_Size := 0;\n       Data_First : Integer := -1;\n-      Data_Last  : Positive := Positive'Last)\n-      return       Natural\n+      Data_Last  : Positive := Positive'Last) return Natural\n    is\n       PM         : Pattern_Matcher (Size);\n       Final_Size : Program_Size; -- unused\n@@ -3456,13 +3445,16 @@ package body GNAT.Regpat is\n       end if;\n    end Match;\n \n+   -----------\n+   -- Match --\n+   -----------\n+\n    function  Match\n      (Expression : String;\n       Data       : String;\n       Size       : Program_Size := 0;\n       Data_First : Integer := -1;\n-      Data_Last  : Positive := Positive'Last)\n-      return       Boolean\n+      Data_Last  : Positive := Positive'Last) return Boolean\n    is\n       Matches    : Match_Array (0 .. 0);\n       PM         : Pattern_Matcher (Size);\n@@ -3592,8 +3584,7 @@ package body GNAT.Regpat is\n \n    function Read_Natural\n      (Program : Program_Data;\n-      IP      : Pointer)\n-      return    Natural\n+      IP      : Pointer) return Natural\n    is\n    begin\n       return Character'Pos (Program (IP)) +\n@@ -3618,7 +3609,6 @@ package body GNAT.Regpat is\n       C      : Character)\n    is\n       Value : constant Class_Byte := Character'Pos (C);\n-\n    begin\n       Bitmap (Value / 8) := Bitmap (Value / 8)\n         or Bit_Conversion (Value mod 8);\n@@ -3630,8 +3620,7 @@ package body GNAT.Regpat is\n \n    function String_Length\n      (Program : Program_Data;\n-      P       : Pointer)\n-      return    Program_Size\n+      P       : Pointer) return Program_Size\n    is\n    begin\n       pragma Assert (Program (P) = EXACT or else Program (P) = EXACTF);"}, {"sha": "57bc076717aea9b049b956f179cf7547d67f8309", "filename": "gcc/ada/g-regpat.ads", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d7d51be97bd43c0ecb60ca327c44f1fd9272224/gcc%2Fada%2Fg-regpat.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d7d51be97bd43c0ecb60ca327c44f1fd9272224/gcc%2Fada%2Fg-regpat.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-regpat.ads?ref=9d7d51be97bd43c0ecb60ca327c44f1fd9272224", "patch": "@@ -301,7 +301,7 @@ pragma Preelaborate (Regpat);\n    --  byte-compiled version of regular expressions.\n \n    Max_Program_Size : constant := 2**15 - 1;\n-   --  Maximum size that can be allocated for a program.\n+   --  Maximum size that can be allocated for a program\n \n    Max_Curly_Repeat : constant := 32767;\n    --  Maximum number of repetition for the curly operator.\n@@ -380,8 +380,7 @@ pragma Preelaborate (Regpat);\n \n    function Compile\n      (Expression : String;\n-      Flags      : Regexp_Flags := No_Flags)\n-      return       Pattern_Matcher;\n+      Flags      : Regexp_Flags := No_Flags) return Pattern_Matcher;\n    --  Compile a regular expression into internal code.\n    --  Raises Expression_Error if Expression is not a legal regular expression.\n    --  The appropriate size is calculated automatically, but this means that\n@@ -476,8 +475,7 @@ pragma Preelaborate (Regpat);\n       Data       : String;\n       Size       : Program_Size := 0;\n       Data_First : Integer  := -1;\n-      Data_Last  : Positive := Positive'Last)\n-      return       Natural;\n+      Data_Last  : Positive := Positive'Last) return Natural;\n    --  Return the position where Data matches, or (Data'First - 1) if\n    --  there is no match.\n    --\n@@ -493,8 +491,7 @@ pragma Preelaborate (Regpat);\n       Data       : String;\n       Size       : Program_Size := 0;\n       Data_First : Integer  := -1;\n-      Data_Last  : Positive := Positive'Last)\n-      return       Boolean;\n+      Data_Last  : Positive := Positive'Last) return Boolean;\n    --  Return True if Data matches Expression. Match raises Storage_Error\n    --  if Size is too small for Expression, or Expression_Error if Expression\n    --  is not a legal regular expression.\n@@ -516,8 +513,7 @@ pragma Preelaborate (Regpat);\n      (Self       : Pattern_Matcher;\n       Data       : String;\n       Data_First : Integer  := -1;\n-      Data_Last  : Positive := Positive'Last)\n-     return Natural;\n+      Data_Last  : Positive := Positive'Last) return Natural;\n    --  Match Data using the given pattern matcher.\n    --  Return the position where Data matches, or (Data'First - 1) if there is\n    --  no match.\n@@ -528,14 +524,13 @@ pragma Preelaborate (Regpat);\n      (Self       : Pattern_Matcher;\n       Data       : String;\n       Data_First : Integer  := -1;\n-      Data_Last  : Positive := Positive'Last)\n-     return Boolean;\n+      Data_Last  : Positive := Positive'Last) return Boolean;\n    --  Return True if Data matches using the given pattern matcher.\n    --\n    --  See description of Data_First and Data_Last above.\n \n    pragma Inline (Match);\n-   --  All except the last one below.\n+   --  All except the last one below\n \n    procedure Match\n      (Self       : Pattern_Matcher;\n@@ -555,7 +550,7 @@ pragma Preelaborate (Regpat);\n    -----------\n \n    procedure Dump (Self : Pattern_Matcher);\n-   --  Dump the compiled version of the regular expression matched by Self.\n+   --  Dump the compiled version of the regular expression matched by Self\n \n --------------------------\n -- Private Declarations --"}, {"sha": "d28ded8f305f8dc5e2dd718e4874d9067cc2e381", "filename": "gcc/ada/trans.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d7d51be97bd43c0ecb60ca327c44f1fd9272224/gcc%2Fada%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d7d51be97bd43c0ecb60ca327c44f1fd9272224/gcc%2Fada%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftrans.c?ref=9d7d51be97bd43c0ecb60ca327c44f1fd9272224", "patch": "@@ -564,7 +564,7 @@ tree_transform (gnat_node)\n \t      if (! Is_Machine_Number (gnat_node))\n \t\tur_realval\n \t\t  = Machine (Base_Type (Underlying_Type (Etype (gnat_node))),\n-\t\t\t     ur_realval, Round_Even);\n+\t\t\t     ur_realval, Round_Even, gnat_node);\n \n \t      gnu_result\n \t\t= UI_To_gnu (Numerator (ur_realval), gnu_result_type);"}, {"sha": "207e8b105e52a72a3244bb8289b477a9a3d4e9ce", "filename": "gcc/ada/urealp.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d7d51be97bd43c0ecb60ca327c44f1fd9272224/gcc%2Fada%2Furealp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d7d51be97bd43c0ecb60ca327c44f1fd9272224/gcc%2Fada%2Furealp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Furealp.h?ref=9d7d51be97bd43c0ecb60ca327c44f1fd9272224", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *          Copyright (C) 1992-2002 Free Software Foundation, Inc.          *\n+ *          Copyright (C) 1992-2003 Free Software Foundation, Inc.          *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -47,4 +47,5 @@ extern Boolean UR_Is_Zero\t(Ureal);\n enum Rounding_Mode {Floor = 0, Ceiling = 1, Round = 2, Round_Even = 3};\n \n #define Machine eval_fat__machine\n-extern Ureal Machine\t\t(Entity_Id, Ureal, enum Rounding_Mode);\n+extern Ureal Machine\t\t(Entity_Id, Ureal, enum Rounding_Mode,\n+\t\t\t\t Node_Id);"}]}