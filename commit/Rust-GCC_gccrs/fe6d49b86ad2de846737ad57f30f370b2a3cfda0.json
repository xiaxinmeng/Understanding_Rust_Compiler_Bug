{"sha": "fe6d49b86ad2de846737ad57f30f370b2a3cfda0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU2ZDQ5Yjg2YWQyZGU4NDY3MzdhZDU3ZjMwZjM3MGIyYTNjZmRhMA==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2011-06-09T16:34:19Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2011-06-09T16:34:19Z"}, "message": "In gcc/testsuite/: 2011-06-09 Nicola Pero <nicola.pero@meta-innovation.com>\n\nIn gcc/testsuite/:\n2011-06-09  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* objc-obj-c++-shared/objc-test-suite-next-encode-assist.h\n\t(PMETH, arglist_t): Removed.\n\t(method_get_number_of_arguments): Removed.\t\n\t(method_get_nth_argument): Removed.\n\t(method_get_first_argument): Removed.\n\t(method_get_next_argument): Removed.\n\t(method_get_sizeof_arguments): Removed.\n\t* objc-obj-c++-shared/objc-test-suite-next-encode-assist-impl.h\n\t(PMETH): Removed.\n\t(method_get_number_of_arguments): Removed.\n\t(method_get_nth_argument): Removed.\n\t(method_get_first_argument): Removed.\n\t(method_get_next_argument): Removed.\n\t(method_get_sizeof_arguments): Removed.\t\n\t* objc-obj-c++-shared/objc-test-suite-types.h (PMETH): Removed.\n\nFrom-SVN: r174851", "tree": {"sha": "32cded49d05bc2a3aea54742c132e698ec5b3a48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32cded49d05bc2a3aea54742c132e698ec5b3a48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe6d49b86ad2de846737ad57f30f370b2a3cfda0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe6d49b86ad2de846737ad57f30f370b2a3cfda0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe6d49b86ad2de846737ad57f30f370b2a3cfda0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe6d49b86ad2de846737ad57f30f370b2a3cfda0/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b8bc3a43e91049619b8cf842704f80f3042c0624", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8bc3a43e91049619b8cf842704f80f3042c0624", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8bc3a43e91049619b8cf842704f80f3042c0624"}], "stats": {"total": 167, "additions": 18, "deletions": 149}, "files": [{"sha": "12f41f641ab784b99aee8abd02c1d2330881396c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6d49b86ad2de846737ad57f30f370b2a3cfda0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6d49b86ad2de846737ad57f30f370b2a3cfda0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fe6d49b86ad2de846737ad57f30f370b2a3cfda0", "patch": "@@ -1,3 +1,21 @@\n+2011-06-09  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* objc-obj-c++-shared/objc-test-suite-next-encode-assist.h\n+\t(PMETH, arglist_t): Removed.\n+\t(method_get_number_of_arguments): Removed.\t\n+\t(method_get_nth_argument): Removed.\n+\t(method_get_first_argument): Removed.\n+\t(method_get_next_argument): Removed.\n+\t(method_get_sizeof_arguments): Removed.\n+\t* objc-obj-c++-shared/objc-test-suite-next-encode-assist-impl.h\n+\t(PMETH): Removed.\n+\t(method_get_number_of_arguments): Removed.\n+\t(method_get_nth_argument): Removed.\n+\t(method_get_first_argument): Removed.\n+\t(method_get_next_argument): Removed.\n+\t(method_get_sizeof_arguments): Removed.\t\n+\t* objc-obj-c++-shared/objc-test-suite-types.h (PMETH): Removed.\n+\t\n 2011-06-09  David Li  <davidxl@google.com>\n \n \t* testsuite/gcc.dg/dump-pass.c: New test."}, {"sha": "5508eddd757aa7ec14876880d724f1b09be24475", "filename": "gcc/testsuite/objc-obj-c++-shared/objc-test-suite-next-encode-assist-impl.h", "status": "modified", "additions": 0, "deletions": 131, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6d49b86ad2de846737ad57f30f370b2a3cfda0/gcc%2Ftestsuite%2Fobjc-obj-c%2B%2B-shared%2Fobjc-test-suite-next-encode-assist-impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6d49b86ad2de846737ad57f30f370b2a3cfda0/gcc%2Ftestsuite%2Fobjc-obj-c%2B%2B-shared%2Fobjc-test-suite-next-encode-assist-impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc-obj-c%2B%2B-shared%2Fobjc-test-suite-next-encode-assist-impl.h?ref=fe6d49b86ad2de846737ad57f30f370b2a3cfda0", "patch": "@@ -7,10 +7,8 @@\n #include \"next-abi.h\"\n #ifdef NEXT_OBJC_USE_NEW_INTERFACE\n #include <objc/runtime.h>\n-typedef void * PMETH;\n #else\n #include <objc/objc-runtime.h>\n-typedef struct objc_method * PMETH;\n #endif\n \n /* ---- */\n@@ -486,135 +484,6 @@ objc_skip_argspec (const char *type)\n   type = objc_skip_offset (type);\n   return type;\n }\n-/*\n-  Return the number of arguments that the method MTH expects.\n-  Note that all methods need two implicit arguments `self' and\n-  `_cmd'.\n-*/\n-int\n-method_get_number_of_arguments (PMETH mth)\n-{\n-  int i = 0;\n-#ifdef NEXT_OBJC_USE_NEW_INTERFACE\n-  const char *type = method_getTypeEncoding((Method)mth);\n-#else\n-  const char *type = mth->method_types;\n-#endif\n-  while (*type)\n-    {\n-      type = objc_skip_argspec (type);\n-      i += 1;\n-    }\n-  return i - 1;\n-}\n-\n-/*\n-  Return the size of the argument block needed on the stack to invoke\n-  the method MTH.  This may be zero, if all arguments are passed in\n-  registers.\n-*/\n-\n-int\n-method_get_sizeof_arguments (PMETH mth)\n-{\n-#ifdef NEXT_OBJC_USE_NEW_INTERFACE\n-  const char *type = objc_skip_typespec (method_getTypeEncoding((Method)mth));\n-#else\n-  const char *type = objc_skip_typespec (mth->method_types);\n-#endif\n-  return atoi (type);\n-}\n-\n-/*\n-  Return a pointer to the next argument of ARGFRAME.  type points to\n-  the last argument.  Typical use of this look like:\n-\n-  {\n-    char *datum, *type;\n-    for (datum = method_get_first_argument (method, argframe, &type);\n-         datum; datum = method_get_next_argument (argframe, &type))\n-      {\n-        unsigned flags = objc_get_type_qualifiers (type);\n-        type = objc_skip_type_qualifiers (type);\n-\tif (*type != _C_PTR)\n-          [portal encodeData: datum ofType: type];\n-\telse\n-\t  {\n-\t    if ((flags & _F_IN) == _F_IN)\n-              [portal encodeData: *(char **) datum ofType: ++type];\n-\t  }\n-      }\n-  }\n-*/\n-\n-char *\n-method_get_next_argument (arglist_t argframe, const char **type)\n-{\n-  const char *t = objc_skip_argspec (*type);\n-\n-  if (*t == '\\0')\n-    return 0;\n-\n-  *type = t;\n-  t = objc_skip_typespec (t);\n-\n-  if (*t == '+')\n-    return argframe->arg_regs + atoi (++t);\n-  else\n-    return argframe->arg_ptr + atoi (t);\n-}\n-\n-/*\n-  Return a pointer to the value of the first argument of the method\n-  described in M with the given argumentframe ARGFRAME.  The type\n-  is returned in TYPE.  type must be passed to successive calls of\n-  method_get_next_argument.\n-*/\n-char *\n-method_get_first_argument (PMETH m,\n-\t\t\t   arglist_t argframe,\n-\t\t\t   const char **type)\n-{\n-#ifdef NEXT_OBJC_USE_NEW_INTERFACE\n-  *type = method_getTypeEncoding((Method)m);\n-#else\n-  *type = m->method_types;\n-#endif\n-\n-  return method_get_next_argument (argframe, type);\n-}\n-\n-/*\n-   Return a pointer to the ARGth argument of the method\n-   M from the frame ARGFRAME.  The type of the argument\n-   is returned in the value-result argument TYPE\n-*/\n-\n-char *\n-method_get_nth_argument (PMETH m,\n-\t\t\t arglist_t argframe, int arg,\n-\t\t\t const char **type)\n-{\n-#ifdef NEXT_OBJC_USE_NEW_INTERFACE\n-  const char *t = objc_skip_argspec (method_getTypeEncoding((Method)m));\n-#else\n-  const char *t = objc_skip_argspec (m->method_types);\n-#endif\n-\n-  if (arg > method_get_number_of_arguments (m))\n-    return 0;\n-\n-  while (arg--)\n-    t = objc_skip_argspec (t);\n-\n-  *type = t;\n-  t = objc_skip_typespec (t);\n-\n-  if (*t == '+')\n-    return argframe->arg_regs + atoi (++t);\n-  else\n-    return argframe->arg_ptr + atoi (t);\n-}\n \n unsigned\n objc_get_type_qualifiers (const char *type)"}, {"sha": "e62944560ec9f50fb8e14e5ae4d91f9ebaa29e69", "filename": "gcc/testsuite/objc-obj-c++-shared/objc-test-suite-next-encode-assist.h", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6d49b86ad2de846737ad57f30f370b2a3cfda0/gcc%2Ftestsuite%2Fobjc-obj-c%2B%2B-shared%2Fobjc-test-suite-next-encode-assist.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6d49b86ad2de846737ad57f30f370b2a3cfda0/gcc%2Ftestsuite%2Fobjc-obj-c%2B%2B-shared%2Fobjc-test-suite-next-encode-assist.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc-obj-c%2B%2B-shared%2Fobjc-test-suite-next-encode-assist.h?ref=fe6d49b86ad2de846737ad57f30f370b2a3cfda0", "patch": "@@ -6,10 +6,8 @@\n #include \"next-abi.h\"\n #ifdef NEXT_OBJC_USE_NEW_INTERFACE\n #include <objc/runtime.h>\n-typedef void * PMETH;\n #else\n #include <objc/objc-runtime.h>\n-typedef struct objc_method * PMETH;\n \n /* Missing from old NeXT objc headers... */\n #define _C_LNG_LNG  'q'\n@@ -54,11 +52,6 @@ struct objc_struct_layout\n   unsigned int record_align;\n };\n \n-typedef union arglist {\n-  char *arg_ptr;\n-  char arg_regs[sizeof (char*)];\n-} *arglist_t;                   /* argument frame */\n-\n void objc_layout_structure_get_info (struct objc_struct_layout *,unsigned int *,\n \t\t\t\t     unsigned int *, const char **);\n void objc_layout_structure (const char *, struct objc_struct_layout *);\n@@ -77,11 +70,5 @@ const char *objc_skip_typespec (const char *);\n const char *objc_skip_offset (const char *);\n const char *objc_skip_argspec (const char *);\n \n-int method_get_number_of_arguments (PMETH);\n-int method_get_sizeof_arguments (PMETH);\n-char *method_get_next_argument (arglist_t , const char **);\n-char *method_get_first_argument (PMETH, arglist_t, const char **);\n-char *method_get_nth_argument (PMETH, arglist_t, int, const char **);\n-\n #endif /* __NEXT_RUNTIME__ */\n #endif /* _OBJC_TEST_SUITE_NEXT_ENCODE_ASSIST_H_ */"}, {"sha": "34981edfc774bc68ebb479d6c10d3d6086681bbe", "filename": "gcc/testsuite/objc-obj-c++-shared/objc-test-suite-types.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6d49b86ad2de846737ad57f30f370b2a3cfda0/gcc%2Ftestsuite%2Fobjc-obj-c%2B%2B-shared%2Fobjc-test-suite-types.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6d49b86ad2de846737ad57f30f370b2a3cfda0/gcc%2Ftestsuite%2Fobjc-obj-c%2B%2B-shared%2Fobjc-test-suite-types.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc-obj-c%2B%2B-shared%2Fobjc-test-suite-types.h?ref=fe6d49b86ad2de846737ad57f30f370b2a3cfda0", "patch": "@@ -45,11 +45,6 @@ typedef void * TNS_STRING_REF_T;\n \n /* Where there are equivalent interfaces between APIs we substitute\n    a macro or typedef.  */\n-#ifdef NEXT_OBJC_USE_NEW_INTERFACE\n-typedef void * PMETH;\n-#else\n-typedef struct objc_method * PMETH;\n-#endif\n \n #ifdef __OBJC2__\n /* Const String Class ref.  */"}]}