{"sha": "9a270ad3c0ba0eb21d09657f8fb3a7786a69ec5d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWEyNzBhZDNjMGJhMGViMjFkMDk2NTdmOGZiM2E3Nzg2YTY5ZWM1ZA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-11T18:59:30Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-11T18:59:30Z"}, "message": "Add cgo support routines corresponding to the ones in 6g/8g.\n\nFrom-SVN: r168679", "tree": {"sha": "56d7c2c55abc394f28a0d6889567e9c6a4ab53d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56d7c2c55abc394f28a0d6889567e9c6a4ab53d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a270ad3c0ba0eb21d09657f8fb3a7786a69ec5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a270ad3c0ba0eb21d09657f8fb3a7786a69ec5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a270ad3c0ba0eb21d09657f8fb3a7786a69ec5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a270ad3c0ba0eb21d09657f8fb3a7786a69ec5d/comments", "author": null, "committer": null, "parents": [{"sha": "72d6e3c594d6e52200aecadc38d98d273a351935", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72d6e3c594d6e52200aecadc38d98d273a351935", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72d6e3c594d6e52200aecadc38d98d273a351935"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "54d6c3b1f30eb4aa9f5201176d6ac294d19865f9", "filename": "libgo/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a270ad3c0ba0eb21d09657f8fb3a7786a69ec5d/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a270ad3c0ba0eb21d09657f8fb3a7786a69ec5d/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=9a270ad3c0ba0eb21d09657f8fb3a7786a69ec5d", "patch": "@@ -312,6 +312,7 @@ runtime_files = \\\n \truntime/go-breakpoint.c \\\n \truntime/go-caller.c \\\n \truntime/go-can-convert-interface.c \\\n+\truntime/go-cgo.c \\\n \truntime/go-chan-cap.c \\\n \truntime/go-chan-len.c \\\n \truntime/go-check-interface.c \\"}, {"sha": "130c5e874b747b443f64f472619558c0275ee378", "filename": "libgo/Makefile.in", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a270ad3c0ba0eb21d09657f8fb3a7786a69ec5d/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a270ad3c0ba0eb21d09657f8fb3a7786a69ec5d/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=9a270ad3c0ba0eb21d09657f8fb3a7786a69ec5d", "patch": "@@ -126,7 +126,7 @@ am__libgo_la_SOURCES_DIST = runtime/go-append.c runtime/go-assert.c \\\n \truntime/go-assert-interface.c \\\n \truntime/go-byte-array-to-string.c runtime/go-breakpoint.c \\\n \truntime/go-caller.c runtime/go-can-convert-interface.c \\\n-\truntime/go-chan-cap.c runtime/go-chan-len.c \\\n+\truntime/go-cgo.c runtime/go-chan-cap.c runtime/go-chan-len.c \\\n \truntime/go-check-interface.c runtime/go-close.c \\\n \truntime/go-closed.c runtime/go-construct-map.c \\\n \truntime/go-convert-interface.c runtime/go-copy.c \\\n@@ -172,8 +172,8 @@ am__libgo_la_SOURCES_DIST = runtime/go-append.c runtime/go-assert.c \\\n @LIBGO_IS_RTEMS_TRUE@am__objects_2 = rtems-task-variable-add.lo\n am__objects_3 = go-append.lo go-assert.lo go-assert-interface.lo \\\n \tgo-byte-array-to-string.lo go-breakpoint.lo go-caller.lo \\\n-\tgo-can-convert-interface.lo go-chan-cap.lo go-chan-len.lo \\\n-\tgo-check-interface.lo go-close.lo go-closed.lo \\\n+\tgo-can-convert-interface.lo go-cgo.lo go-chan-cap.lo \\\n+\tgo-chan-len.lo go-check-interface.lo go-close.lo go-closed.lo \\\n \tgo-construct-map.lo go-convert-interface.lo go-copy.lo \\\n \tgo-defer.lo go-deferred-recover.lo go-eface-compare.lo \\\n \tgo-eface-val-compare.lo go-getgoroot.lo go-go.lo \\\n@@ -678,6 +678,7 @@ runtime_files = \\\n \truntime/go-breakpoint.c \\\n \truntime/go-caller.c \\\n \truntime/go-can-convert-interface.c \\\n+\truntime/go-cgo.c \\\n \truntime/go-chan-cap.c \\\n \truntime/go-chan-len.c \\\n \truntime/go-check-interface.c \\\n@@ -1886,6 +1887,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/go-byte-array-to-string.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/go-caller.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/go-can-convert-interface.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/go-cgo.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/go-chan-cap.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/go-chan-len.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/go-check-interface.Plo@am__quote@\n@@ -2062,6 +2064,13 @@ go-can-convert-interface.lo: runtime/go-can-convert-interface.c\n @AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n @am__fastdepCC_FALSE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o go-can-convert-interface.lo `test -f 'runtime/go-can-convert-interface.c' || echo '$(srcdir)/'`runtime/go-can-convert-interface.c\n \n+go-cgo.lo: runtime/go-cgo.c\n+@am__fastdepCC_TRUE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT go-cgo.lo -MD -MP -MF $(DEPDIR)/go-cgo.Tpo -c -o go-cgo.lo `test -f 'runtime/go-cgo.c' || echo '$(srcdir)/'`runtime/go-cgo.c\n+@am__fastdepCC_TRUE@\t$(am__mv) $(DEPDIR)/go-cgo.Tpo $(DEPDIR)/go-cgo.Plo\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tsource='runtime/go-cgo.c' object='go-cgo.lo' libtool=yes @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCC_FALSE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o go-cgo.lo `test -f 'runtime/go-cgo.c' || echo '$(srcdir)/'`runtime/go-cgo.c\n+\n go-chan-cap.lo: runtime/go-chan-cap.c\n @am__fastdepCC_TRUE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT go-chan-cap.lo -MD -MP -MF $(DEPDIR)/go-chan-cap.Tpo -c -o go-chan-cap.lo `test -f 'runtime/go-chan-cap.c' || echo '$(srcdir)/'`runtime/go-chan-cap.c\n @am__fastdepCC_TRUE@\t$(am__mv) $(DEPDIR)/go-chan-cap.Tpo $(DEPDIR)/go-chan-cap.Plo"}]}