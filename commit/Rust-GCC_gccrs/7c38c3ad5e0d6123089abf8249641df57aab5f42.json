{"sha": "7c38c3ad5e0d6123089abf8249641df57aab5f42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2MzOGMzYWQ1ZTBkNjEyMzA4OWFiZjgyNDk2NDFkZjU3YWFiNWY0Mg==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1995-02-28T23:05:01Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1995-02-28T23:05:01Z"}, "message": "expr.c (expand_expr): If non-local variable is expanded...\n\n* expr.c (expand_expr):  If non-local variable is expanded,\nset FUNCTION_NEEDS_STATIC_CHAIN (current_function_decl).\n* expr.c (expand_expr case ADDR_EXPR):  Check for trampoline\nusing FUNCTION_NEEDS_STATIC_CHAIN, instead of decl_function_context.\n\nFrom-SVN: r9095", "tree": {"sha": "293d65753f9edcbd0d5c06bad7f132a177ce6ca1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/293d65753f9edcbd0d5c06bad7f132a177ce6ca1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c38c3ad5e0d6123089abf8249641df57aab5f42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c38c3ad5e0d6123089abf8249641df57aab5f42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c38c3ad5e0d6123089abf8249641df57aab5f42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c38c3ad5e0d6123089abf8249641df57aab5f42/comments", "author": null, "committer": null, "parents": [{"sha": "dc4f83ca6a03f9c3351501bedabd4ad30b28ed34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc4f83ca6a03f9c3351501bedabd4ad30b28ed34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc4f83ca6a03f9c3351501bedabd4ad30b28ed34"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "7787593c5c5bc5a22f6049d4065bf53f2c7720c6", "filename": "gcc/expr.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c38c3ad5e0d6123089abf8249641df57aab5f42/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c38c3ad5e0d6123089abf8249641df57aab5f42/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=7c38c3ad5e0d6123089abf8249641df57aab5f42", "patch": "@@ -4148,6 +4148,15 @@ expand_expr (exp, target, tmode, modifier)\n \n \t  /* Mark as non-local and addressable.  */\n \t  DECL_NONLOCAL (exp) = 1;\n+\n+\t  /* This is currently too late to be useful, since\n+\t     init_function_start needs to know whether a static chain\n+\t     is needed. However, it would be a useful optimization\n+\t     if we could defer setting up static chains and trampolines\n+\t     until we see that we actually need them due to references\n+\t     to non-local non-static variables.  */\n+\t  FUNCTION_NEEDS_STATIC_CHAIN (current_function_decl) = 1;\n+\n \t  mark_addressable (exp);\n \t  if (GET_CODE (DECL_RTL (exp)) != MEM)\n \t    abort ();\n@@ -6178,7 +6187,7 @@ expand_expr (exp, target, tmode, modifier)\n \n       /* Are we taking the address of a nested function?  */\n       if (TREE_CODE (TREE_OPERAND (exp, 0)) == FUNCTION_DECL\n-\t  && decl_function_context (TREE_OPERAND (exp, 0)) != 0)\n+\t  && FUNCTION_NEEDS_STATIC_CHAIN (TREE_OPERAND (exp, 0)))\n \t{\n \t  op0 = trampoline_address (TREE_OPERAND (exp, 0));\n \t  op0 = force_operand (op0, target);"}]}