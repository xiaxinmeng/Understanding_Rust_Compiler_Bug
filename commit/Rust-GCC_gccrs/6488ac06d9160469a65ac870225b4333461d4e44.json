{"sha": "6488ac06d9160469a65ac870225b4333461d4e44", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQ4OGFjMDZkOTE2MDQ2OWE2NWFjODcwMjI1YjQzMzM0NjFkNGU0NA==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-01-16T06:06:29Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-01-16T06:06:29Z"}, "message": "gcc.c: When -fsyntax-only is given, do not complain about unused libraries.\n\n2001-01-16  Phil Edwards  <pme@sources.redhat.com>\n\n\t* gcc.c:  When -fsyntax-only is given, do not complain about\n\t  unused libraries.\n\nFrom-SVN: r39058", "tree": {"sha": "a167bbfc768d8c4f343151874fa10097b1ce3fc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a167bbfc768d8c4f343151874fa10097b1ce3fc9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6488ac06d9160469a65ac870225b4333461d4e44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6488ac06d9160469a65ac870225b4333461d4e44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6488ac06d9160469a65ac870225b4333461d4e44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6488ac06d9160469a65ac870225b4333461d4e44/comments", "author": null, "committer": null, "parents": [{"sha": "c5a9e845e5387d88031aec6e2c09219d960f4384", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5a9e845e5387d88031aec6e2c09219d960f4384", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5a9e845e5387d88031aec6e2c09219d960f4384"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "ff2e283c057dfac3038d55fffc846b3ad1ac49e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6488ac06d9160469a65ac870225b4333461d4e44/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6488ac06d9160469a65ac870225b4333461d4e44/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6488ac06d9160469a65ac870225b4333461d4e44", "patch": "@@ -1,3 +1,8 @@\n+2001-01-16  Phil Edwards  <pme@sources.redhat.com>\n+\n+\t* gcc.c:  When -fsyntax-only is given, do not complain about\n+\t  unused libraries.\n+\n 2001-01-15  Richard Henderson  <rth@redhat.com>\n \n \t* config/i386/i386.c (asm_output_function_prefix): Remove."}, {"sha": "dc3fb94bc102b73a3934dd9c335ad8fc1d67aafe", "filename": "gcc/gcc.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6488ac06d9160469a65ac870225b4333461d4e44/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6488ac06d9160469a65ac870225b4333461d4e44/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=6488ac06d9160469a65ac870225b4333461d4e44", "patch": "@@ -96,6 +96,9 @@ static char dir_separator_str[] = { DIR_SEPARATOR, 0 };\n \n #define MIN_FATAL_STATUS 1\n \n+/* If nonzero, -fsyntax-only was passed. */\n+static int flag_syntax_only;\n+\n /* Flag saying to pass the greatest exit code returned by a sub-process\n    to the calling program.  */\n static int pass_exit_codes;\n@@ -3155,6 +3158,11 @@ process_command (argc, argv)\n \t  printf (\"%s\\n\", spec_machine);\n \t  exit (0);\n \t}\n+      else if (strcmp (argv[i], \"-fsyntax-only\") == 0)\n+\t{\n+\t  /* remember this so we don't complain about libraries */\n+\t  flag_syntax_only = 1;\n+\t}\n       else if (strcmp (argv[i], \"-fhelp\") == 0)\n \t{\n \t  /* translate_options () has turned --help into -fhelp.  */\n@@ -3781,6 +3789,7 @@ process_command (argc, argv)\n \t  switches[n_switches].ordering = 0;\n \t  /* These are always valid, since gcc.c itself understands it.  */\n \t  if (!strcmp (p, \"save-temps\")\n+\t      || !strcmp (p, \"fsyntax-only\")\n \t      || !strcmp (p, \"static-libgcc\")\n \t      || !strcmp (p, \"shared-libgcc\"))\n \t    switches[n_switches].validated = 1;\n@@ -5849,7 +5858,7 @@ main (argc, argv)\n   /* If options said don't run linker,\n      complain about input files to be given to the linker.  */\n \n-  if (! linker_was_run && error_count == 0)\n+  if (! linker_was_run && error_count == 0 && flag_syntax_only == 0)\n     for (i = 0; (int) i < n_infiles; i++)\n       if (explicit_link_files[i])\n \terror (\"%s: linker input file unused because linking not done\","}]}