{"sha": "963d441197fb558790e40cdb38baa2f2744ba666", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTYzZDQ0MTE5N2ZiNTU4NzkwZTQwY2RiMzhiYWEyZjI3NDRiYTY2Ng==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-08-30T23:08:14Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-08-30T23:08:14Z"}, "message": "flow.c (new_insn_dead_notes): Use sets_reg_or_subreg not mark_set_resources.\n\n        * flow.c (new_insn_dead_notes): Use sets_reg_or_subreg not\n        mark_set_resources.\n\nFrom-SVN: r28990", "tree": {"sha": "013dd60e011d28c23dff1ac3c7a808dcd558da6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/013dd60e011d28c23dff1ac3c7a808dcd558da6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/963d441197fb558790e40cdb38baa2f2744ba666", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/963d441197fb558790e40cdb38baa2f2744ba666", "html_url": "https://github.com/Rust-GCC/gccrs/commit/963d441197fb558790e40cdb38baa2f2744ba666", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/963d441197fb558790e40cdb38baa2f2744ba666/comments", "author": null, "committer": null, "parents": [{"sha": "2e419d0961012baea72357ad6198ed2e807cdb4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e419d0961012baea72357ad6198ed2e807cdb4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e419d0961012baea72357ad6198ed2e807cdb4c"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "3b4ffe2411290d1131f6eb6042c79cfb08ad3dff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/963d441197fb558790e40cdb38baa2f2744ba666/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/963d441197fb558790e40cdb38baa2f2744ba666/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=963d441197fb558790e40cdb38baa2f2744ba666", "patch": "@@ -1,3 +1,8 @@\n+Mon Aug 30 16:07:49 1999  Richard Henderson  <rth@cygnus.com>\n+\n+\t* flow.c (new_insn_dead_notes): Use sets_reg_or_subreg not\n+\tmark_set_resources.\n+\n Mon Aug 30 16:36:33 1999  Jeffrey A Law  (law@cygnus.com)\n \n \t* invoke.texi: Fix typo."}, {"sha": "2c05fe7d5906bbf23f4fce9c75cac9b29691f1d1", "filename": "gcc/flow.c", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/963d441197fb558790e40cdb38baa2f2744ba666/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/963d441197fb558790e40cdb38baa2f2744ba666/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=963d441197fb558790e40cdb38baa2f2744ba666", "patch": "@@ -132,7 +132,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"toplev.h\"\n #include \"recog.h\"\n #include \"insn-flags.h\"\n-#include \"resource.h\"\n \n #include \"obstack.h\"\n #define obstack_chunk_alloc xmalloc\n@@ -5371,6 +5370,7 @@ new_insn_dead_notes (pat, insn, first, last, orig_first_insn, orig_last_insn)\n \t  if (tem == orig_last_insn)\n \t    break;\n \t}\n+\n       /* So it's a new register, presumably only used within this\n \t group of insns. Find the last insn in the set of new insns\n \t that DEST is referenced in, and add a dead note to it. */\n@@ -5393,25 +5393,21 @@ new_insn_dead_notes (pat, insn, first, last, orig_first_insn, orig_last_insn)\n \t    }\n \t  else\n \t    {\n-\t      struct resources res;\n \t      rtx curr;\n+\t      int got_set = 0;\n \n-\t      CLEAR_RESOURCE (&res);\n-\t      for (curr = orig_first_insn;\n-\t\t   curr != NULL_RTX;\n-\t\t   curr = NEXT_INSN (curr))\n+\t      for (curr = orig_first_insn; curr; curr = NEXT_INSN (curr))\n \t\t{\n-\t\t  if (GET_RTX_CLASS (GET_CODE (curr)) == 'i')\n-\t\t    mark_set_resources (PATTERN (curr), &res, 0, 0);\n-\t\t  if (TEST_HARD_REG_BIT (res.regs, REGNO (dest)))\n+\t\t  got_set = sets_reg_or_subreg (curr, dest);\n+\t\t  if (got_set)\n \t\t    break;\n \t\t  if (curr == orig_last_insn)\n \t\t    break;\n \t\t}\n \n \t      /* In case reg was not used later, it is dead store.\n \t         add REG_UNUSED note.  */\n-\t      if (! TEST_HARD_REG_BIT (res.regs, REGNO (dest)))\n+\t      if (! got_set)\n \t        {\n \t          rtx note = rtx_alloc (EXPR_LIST);\n \t          PUT_REG_NOTE_KIND (note, REG_UNUSED);\n@@ -5422,9 +5418,11 @@ new_insn_dead_notes (pat, insn, first, last, orig_first_insn, orig_last_insn)\n \t        }\n \t    }\n \t}\n+\n       if (insn != first)\n \t{\n \t  rtx set = single_set (insn);\n+\n \t  /* If this is a set, scan backwards for a previous\n \t     reference, and attach a REG_DEAD note to it. But we don't\n \t     want to do it if the insn is both using and setting the"}]}