{"sha": "865fc9684661c46589a30c6021cf44de560940f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY1ZmM5Njg0NjYxYzQ2NTg5YTMwYzYwMjFjZjQ0ZGU1NjA5NDBmMw==", "commit": {"author": {"name": "Allan Sandfeld Jensen", "email": "allan.jensen@qt.io", "date": "2016-12-11T16:27:08Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-12-11T16:27:08Z"}, "message": "re PR target/70118 (UBSan claims misaligned access in SSE instrinsics)\n\n\tPR target/70118\n\t* config/i386/mmintrin.h (__m64_u): New type\n\t* config/i386/emmintrin.h (_mm_loadl_epi64, _mm_storel_epi64):\n\tMake the allowed unaligned memory access explicit.\n\nFrom-SVN: r243527", "tree": {"sha": "8f893ab9b1e0182b6aba091d4eb33d1c7a3c4989", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f893ab9b1e0182b6aba091d4eb33d1c7a3c4989"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/865fc9684661c46589a30c6021cf44de560940f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/865fc9684661c46589a30c6021cf44de560940f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/865fc9684661c46589a30c6021cf44de560940f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/865fc9684661c46589a30c6021cf44de560940f3/comments", "author": null, "committer": null, "parents": [{"sha": "846fbd1e2b11a524563058d54f59447620497fde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/846fbd1e2b11a524563058d54f59447620497fde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/846fbd1e2b11a524563058d54f59447620497fde"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "a990b2d6b8f2e697ad7b9e3ebc7b30133bb60493", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/865fc9684661c46589a30c6021cf44de560940f3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/865fc9684661c46589a30c6021cf44de560940f3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=865fc9684661c46589a30c6021cf44de560940f3", "patch": "@@ -1,3 +1,10 @@\n+2016-12-10  Allan Sandfeld Jensen  <allan.jensen@qt.io>\n+\n+\tPR target/70118\n+\t* config/i386/mmintrin.h (__m64_u): New type\n+\t* config/i386/emmintrin.h (_mm_loadl_epi64, _mm_storel_epi64):\n+\tMake the allowed unaligned memory access explicit.\n+\n 2016-12-10  Krister Walfridsson  <krister.walfridsson@gmail.com>\n \n \t* config.gcc (i386-*-netbsd*): Make i486 the default arch on NetBSD."}, {"sha": "d5aa46a16f73bb88e11a6f84c5495c113d86127f", "filename": "gcc/config/i386/emmintrin.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/865fc9684661c46589a30c6021cf44de560940f3/gcc%2Fconfig%2Fi386%2Femmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/865fc9684661c46589a30c6021cf44de560940f3/gcc%2Fconfig%2Fi386%2Femmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Femmintrin.h?ref=865fc9684661c46589a30c6021cf44de560940f3", "patch": "@@ -703,9 +703,9 @@ _mm_loadu_si128 (__m128i_u const *__P)\n }\n \n extern __inline __m128i __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n-_mm_loadl_epi64 (__m128i const *__P)\n+_mm_loadl_epi64 (__m128i_u const *__P)\n {\n-  return _mm_set_epi64 ((__m64)0LL, *(__m64 *)__P);\n+  return _mm_set_epi64 ((__m64)0LL, *(__m64_u *)__P);\n }\n \n extern __inline void __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n@@ -721,9 +721,9 @@ _mm_storeu_si128 (__m128i_u *__P, __m128i __B)\n }\n \n extern __inline void __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n-_mm_storel_epi64 (__m128i *__P, __m128i __B)\n+_mm_storel_epi64 (__m128i_u *__P, __m128i __B)\n {\n-  *(long long *)__P = ((__v2di)__B)[0];\n+  *(__m64_u *)__P = (__m64) ((__v2di)__B)[0];\n }\n \n extern __inline __m64 __attribute__((__gnu_inline__, __always_inline__, __artificial__))"}, {"sha": "2bd3bd1df9eae8fbbb13c8da79ae625701bac788", "filename": "gcc/config/i386/mmintrin.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/865fc9684661c46589a30c6021cf44de560940f3/gcc%2Fconfig%2Fi386%2Fmmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/865fc9684661c46589a30c6021cf44de560940f3/gcc%2Fconfig%2Fi386%2Fmmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmintrin.h?ref=865fc9684661c46589a30c6021cf44de560940f3", "patch": "@@ -37,6 +37,9 @@\n    vector types, and their scalar components.  */\n typedef int __m64 __attribute__ ((__vector_size__ (8), __may_alias__));\n \n+/* Unaligned version of the same type  */\n+typedef int __m64_u __attribute__ ((__vector_size__ (8), __may_alias__, __aligned__ (1)));\n+\n /* Internal data types for implementing the intrinsics.  */\n typedef int __v2si __attribute__ ((__vector_size__ (8)));\n typedef short __v4hi __attribute__ ((__vector_size__ (8)));"}]}