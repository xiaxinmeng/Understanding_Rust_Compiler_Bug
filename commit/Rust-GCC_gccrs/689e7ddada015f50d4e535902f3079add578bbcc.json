{"sha": "689e7ddada015f50d4e535902f3079add578bbcc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg5ZTdkZGFkYTAxNWY1MGQ0ZTUzNTkwMmYzMDc5YWRkNTc4YmJjYw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2006-08-28T20:18:22Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2006-08-28T20:18:22Z"}, "message": "PR libstdc++/23773 partial\n\n2006-08-28  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tPR libstdc++/23773 partial\n\t* docs/html/abi.html: Update.\n\nFrom-SVN: r116527", "tree": {"sha": "8b24a4398a825e3b5d773cc49127bc8abcd36349", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b24a4398a825e3b5d773cc49127bc8abcd36349"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/689e7ddada015f50d4e535902f3079add578bbcc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/689e7ddada015f50d4e535902f3079add578bbcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/689e7ddada015f50d4e535902f3079add578bbcc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/689e7ddada015f50d4e535902f3079add578bbcc/comments", "author": null, "committer": null, "parents": [{"sha": "8c093661a31d1c66b2c9f7783b5836d35605b10c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c093661a31d1c66b2c9f7783b5836d35605b10c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c093661a31d1c66b2c9f7783b5836d35605b10c"}], "stats": {"total": 163, "additions": 124, "deletions": 39}, "files": [{"sha": "ebfcdc4d6544b903311933ff4b158ea5ff847db3", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/689e7ddada015f50d4e535902f3079add578bbcc/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/689e7ddada015f50d4e535902f3079add578bbcc/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=689e7ddada015f50d4e535902f3079add578bbcc", "patch": "@@ -1,3 +1,8 @@\n+2006-08-28  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tPR libstdc++/23773 partial\n+\t* docs/html/abi.html: Update.\n+\n 2006-08-28  Roger Sayle  <roger@eyesopen.com>\n \t    Paolo Carlini  <pcarlini@suse.de>\n "}, {"sha": "dcbd4388491129926c8c68c52ede8b2b7d3c34f6", "filename": "libstdc++-v3/docs/html/abi.html", "status": "modified", "additions": 119, "deletions": 39, "changes": 158, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/689e7ddada015f50d4e535902f3079add578bbcc/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fabi.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/689e7ddada015f50d4e535902f3079add578bbcc/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fabi.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fabi.html?ref=689e7ddada015f50d4e535902f3079add578bbcc", "patch": "@@ -168,10 +168,32 @@ <h5 class=\"left\">\n     <li>gcc-3.3.1: libgcc_s.so.1</li>\n     <li>gcc-3.3.2: libgcc_s.so.1</li>\n     <li>gcc-3.3.3: libgcc_s.so.1</li>\n-    <li>gcc-3.4.0: on m68k-linux and hppa-linux this is either libgcc_s.so.1\n-    (when configuring <code>--with-sjlj-exceptions</code>) or\n-    libgcc_s.so.2. For all others, this is libgcc_s.so.1.\n+    <li>gcc-3.4.x, gcc-4.0.x, gcc-4.1.x: on m68k-linux and hppa-linux\n+    this is either libgcc_s.so.1 (when configuring\n+    <code>--with-sjlj-exceptions</code>) or libgcc_s.so.2. For all\n+    others, this is libgcc_s.so.1.  </li> </ul>\n+    <p></p>\n     </li>\n+\n+    <li>Symbol versioning on the libgcc_s.so binary.\n+    <p>mapfile: gcc/libgcc-std.ver</p>\n+\n+    <p>It is versioned with the following labels and version\n+   definitions, where the version definition is the maximum for a\n+   particular release. Labels are cumulative. If a particular release\n+   is not listed, it has the same version labels as the preceeding\n+   release.</p>\n+    <ul>\n+    <li>gcc-3.0.0: GCC_3.0</li>\n+    <li>gcc-3.3.0: GCC_3.3</li>\n+    <li>gcc-3.3.1: GCC_3.3.1</li>\n+    <li>gcc-3.3.2: GCC_3.3.2</li>\n+    <li>gcc-3.3.4: GCC_3.3.4</li>\n+    <li>gcc-3.4.0: GCC_3.4</li>\n+    <li>gcc-3.4.2: GCC_3.4.2</li>\n+    <li>gcc-3.4.4: GCC_3.4.4</li>\n+    <li>gcc-4.0.0: GCC_4.0.0</li>\n+    <li>gcc-4.1.0: GCC_4.1.0</li>\n     </ul>\n     <p></p>\n     </li>\n@@ -198,31 +220,17 @@ <h5 class=\"left\">\n     <li>gcc-3.3.3: libstdc++.so.5.0.5</li>\n     <li>gcc-3.4.0: libstdc++.so.6.0.0</li>\n     <li>gcc-3.4.1: libstdc++.so.6.0.1</li>\n-    </ul>\n-    <p></p>\n-    </li>\n-\n-    <li>Symbol versioning on the libgcc_s.so binary.\n-    <p>mapfile: gcc/libgcc-std.ver</p>\n-\n-    <p>It is versioned with the following labels and version definitions:</p>\n-    <ul>\n-    <li>gcc-3.0.0: GCC_3.0</li>\n-    <li>gcc-3.0.1: GCC_3.0</li>\n-    <li>gcc-3.0.2: GCC_3.0</li>\n-    <li>gcc-3.0.3: GCC_3.0</li>\n-    <li>gcc-3.0.4: GCC_3.0</li>\n-    <li>gcc-3.1.0: GCC_3.0</li>\n-    <li>gcc-3.1.1: GCC_3.0</li>\n-    <li>gcc-3.2.0: GCC_3.0</li>\n-    <li>gcc-3.2.1: GCC_3.0</li>\n-    <li>gcc-3.2.2: GCC_3.0</li>\n-    <li>gcc-3.2.3: GCC_3.0</li>\n-    <li>gcc-3.3.0: GCC_3.0</li>\n-    <li>gcc-3.3.1: GCC_3.0</li>\n-    <li>gcc-3.3.2: GCC_3.0</li>\n-    <li>gcc-3.3.3: GCC_3.0</li>\n-    <li>gcc-3.4.0: GCC_3.0</li>\n+    <li>gcc-3.4.2: libstdc++.so.6.0.2</li>\n+    <li>gcc-3.4.3: libstdc++.so.6.0.3</li>\n+    <li>gcc-3.4.4: libstdc++.so.6.0.3</li>\n+    <li>gcc-3.4.5: libstdc++.so.6.0.3</li>\n+    <li>gcc-3.4.6: libstdc++.so.6.0.3</li>\n+    <li>gcc-4.0.0: libstdc++.so.6.0.4</li>\n+    <li>gcc-4.0.1: libstdc++.so.6.0.5</li>\n+    <li>gcc-4.0.2: libstdc++.so.6.0.6</li>\n+    <li>gcc-4.0.3: libstdc++.so.6.0.7</li>\n+    <li>gcc-4.1.0: libstdc++.so.6.0.7</li>\n+    <li>gcc-4.1.1: libstdc++.so.6.0.8</li>\n     </ul>\n     <p></p>\n     </li>\n@@ -238,7 +246,8 @@ <h5 class=\"left\">\n    release has both versions. (An example of this would be the\n    gcc-3.2.1 release, which has GLIBCPP_3.2.1 for new symbols and\n    GLIBCPP_3.2 for symbols that were introduced in the gcc-3.2.0\n-   release.)\n+   release.) If a particular release is not listed, it has the same\n+   version labels as the preceeding release.\n    </p>\n     <ul>\n     <li>gcc-3.0.0: (Error, not versioned)</li>\n@@ -258,6 +267,13 @@ <h5 class=\"left\">\n     <li>gcc-3.3.3: GLIBCPP_3.2.3, CXXABI_1.2.1</li>\n     <li>gcc-3.4.0: GLIBCXX_3.4, CXXABI_1.3</li>\n     <li>gcc-3.4.1: GLIBCXX_3.4.1, CXXABI_1.3</li>\n+    <li>gcc-3.4.2: GLIBCXX_3.4.2</li>\n+    <li>gcc-3.4.3: GLIBCXX_3.4.3</li>\n+    <li>gcc-4.0.0: GLIBCXX_3.4.4, CXXABI_1.3.1</li>\n+    <li>gcc-4.0.1: GLIBCXX_3.4.5</li>\n+    <li>gcc-4.0.2: GLIBCXX_3.4.6</li>\n+    <li>gcc-4.0.3: GLIBCXX_3.4.7</li>\n+    <li>gcc-4.1.1: GLIBCXX_3.4.8</li>\n     </ul>\n     <p></p>\n     </li>\n@@ -285,9 +301,9 @@ <h5 class=\"left\">\n     <li>gcc-3.1.x: 100 (Error, should be 101)</li>\n     <li>gcc-3.2.x: 102</li>\n     <li>gcc-3.3.x: 102</li>\n-    <li>gcc-3.4.x: 102 (when n=1)</li>\n-    <li>gcc-3.4.x: 1000 + n (when n&gt;1)</li>\n-    <li>gcc-3.4.x: 999999 (when n=0)</li>\n+    <li>gcc-3.4.x, gcc-4.0.x, gcc-4.1.x: 102 (when n=1)</li>\n+    <li>gcc-3.4.x, gcc-4.0.x, gcc-4.1.x: 1000 + n (when n&gt;1)</li>\n+    <li>gcc-3.4.x, gcc-4.0.x, gcc-4.1.x: 999999 (when n=0)</li>\n     </ul>\n     <p></p>\n     </li>\n@@ -304,7 +320,7 @@ <h5 class=\"left\">\n     <li>gcc-3.1.x: (Error, not versioned) </li>\n     <li>gcc-3.2.x: <code>-fabi-version=1</code></li>\n     <li>gcc-3.3.x: <code>-fabi-version=1</code></li>\n-    <li>gcc-3.4.x: <code>-fabi-version=2</code></li>\n+    <li>gcc-3.4.x, gcc-4.0.x, gcc-4.1.x: <code>-fabi-version=2</code></li>\n     </ul>\n     <p></p>\n     </li>\n@@ -319,9 +335,10 @@ <h5 class=\"left\">\n     </p>\n \n     <p>\n-    In addition, the pre-defined macro is defined in the file\n-    \"c++config\" in the \"libstdc++-v3/include/bits\" directory and is\n-    changed every night by an automated script.\n+    This macro is defined in the file \"c++config\" in the\n+    \"libstdc++-v3/include/bits\" directory. (Up to gcc-4.1.0, it was\n+    changed every night by an automated script. Since gcc-4.1.0, it is\n+    the same value as gcc/DATESTAMP.)\n     </p>\n     <p>\n     It is versioned as follows:\n@@ -344,11 +361,21 @@ <h5 class=\"left\">\n     <li>gcc-3.3.3: 20040214</li>\n     <li>gcc-3.4.0: 20040419</li>\n     <li>gcc-3.4.1: 20040701</li>\n+    <li>gcc-3.4.2: 20040906</li>\n+    <li>gcc-3.4.3: 20041105</li>\n+    <li>gcc-3.4.4: 20050519</li>\n+    <li>gcc-3.4.5: 20051201</li>\n+    <li>gcc-3.4.6: 20060306</li>\n+    <li>gcc-4.0.0: 20050421</li>\n+    <li>gcc-4.0.1: 20050707</li>\n+    <li>gcc-4.0.2: 20050921</li>\n+    <li>gcc-4.0.3: 20060309</li>\n+    <li>gcc-4.1.0: 20060228</li>\n+    <li>gcc-4.1.1: 20060524</li>\n     </ul>\n     <p></p>\n     </li>\n \n-\n     <li>\n     <p>\n     Incremental bumping of a library pre-defined macro,\n@@ -384,8 +411,9 @@ <h5 class=\"left\">\n     <li>gcc-3.3.1: \"3.3.1\"</li>\n     <li>gcc-3.3.2: \"3.3.2\"</li>\n     <li>gcc-3.3.3: \"3.3.3\"</li>\n-    <li>gcc-3.4.0: \"version-unused\"</li>\n-    <li>gcc-3.4.1: \"version-unused\"</li>\n+    <li>gcc-3.4.x: \"version-unused\"</li>\n+    <li>gcc-4.0.x: \"version-unused\"</li>\n+    <li>gcc-4.1.x: \"version-unused\"</li>\n     </ul>\n     <p></p>\n     </li>\n@@ -424,6 +452,17 @@ <h5 class=\"left\">\n     <li>gcc-3.3.3: include/c++/3.3.3</li>\n     <li>gcc-3.4.0: include/c++/3.4.0</li>\n     <li>gcc-3.4.1: include/c++/3.4.1</li>\n+    <li>gcc-3.4.2: include/c++/3.4.2</li>\n+    <li>gcc-3.4.3: include/c++/3.4.3</li>\n+    <li>gcc-3.4.4: include/c++/3.4.4</li>\n+    <li>gcc-3.4.5: include/c++/3.4.5</li>\n+    <li>gcc-3.4.6: include/c++/3.4.6</li>\n+    <li>gcc-4.0.0: include/c++/4.0.0</li>\n+    <li>gcc-4.0.1: include/c++/4.0.1</li>\n+    <li>gcc-4.0.2: include/c++/4.0.2</li>\n+    <li>gcc-4.0.3: include/c++/4.0.3</li>\n+    <li>gcc-4.1.0: include/c++/4.1.0</li>\n+    <li>gcc-4.1.1: include/c++/4.1.1</li>\n     </ul>\n     <p></p>\n     </li>\n@@ -857,6 +896,29 @@ <h3 class=\"left\">\n dependent libstdc++.so.5.\n </p>\n \n+\n+<h3 class=\"left\">\n+  <a name=\"Outstanding Issues\">Outstanding Issues</a>\n+</h3>\n+\n+<p> Some features in the C++ language make versioning especially\n+difficult. In particular, compiler generated constructs such as\n+implicit instantiations for templates, typeinfo information, and\n+virtual tables all may cause ABI leakage across shared library\n+boundaries. Because of this, mixing C++ ABI's is not recommended at\n+this time.\n+</p>\n+\n+<p>For more background on this issue, see these bugzilla entries:</p>\n+\n+<p>\n+<a href=\"http://gcc.gnu.org/PR24660\">24660: versioning weak symbols in libstdc++</a>\n+</p>\n+\n+<p>\n+<a href=\"http://gcc.gnu.org/PR19664\">19664: libstdc++ headers should have pop/push of the visibility around the declarations</a>\n+</p>\n+\n <h3 class=\"left\">\n   <a name=\"references\">Bibliography / Further Reading</a>\n </h3>\n@@ -897,6 +959,24 @@ <h3 class=\"left\">\n <a href=\"http://people.redhat.com/drepper/symbol-versioning\">http://people.redhat.com/drepper/symbol-versioning</a>\n </p>\n \n+<p>\n+C++ ABI for the ARM Architecture\n+<br />\n+<a href=\"http://www.arm.com/miscPDFs/8033.pdf\">http://www.arm.com/miscPDFs/8033.pdf</a>\n+</p>\n+\n+<p>\n+Benjamin Kosnik, ISO C++ J16/06-0046\n+<br />\n+<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2006/n1976.html\">Dynamic Shared Objects: Survey and Issues</a>\n+</p>\n+\n+<p>\n+Benjamin Kosnik, ISO C++ J16/06-0083\n+<br />\n+<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2006/n2013.html\">Versioning With Namespaces</a>\n+</p>\n+\n </body>\n </html>\n "}]}