{"sha": "06bd22f6099abe4fec73c988daf4cacd68f34329", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDZiZDIyZjYwOTlhYmU0ZmVjNzNjOTg4ZGFmNGNhY2Q2OGYzNDMyOQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2017-07-27T15:02:17Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2017-07-27T15:02:17Z"}, "message": "re PR c/81417 (-Wsign-compare should print types being compared)\n\n\tPR c/81417\n\t* c-warn.c (warn_for_sign_compare): Tweak the warning message.  Print\n\tthe types.\n\n\t* c-c++-common/Wsign-compare-1.c: New test.\n\t* g++.dg/warn/Wsign-compare-2.C: Update dg-warning.\n\t* g++.dg/warn/Wsign-compare-4.C: Likewise.\n\t* g++.dg/warn/Wsign-compare-6.C: Likewise.\n\t* g++.dg/warn/compare1.C: Likewise.\n\t* gcc.dg/compare1.c: Likewise.\n\t* gcc.dg/compare2.c: Likewise.\n\t* gcc.dg/compare4.c: Likewise.\n\t* gcc.dg/compare5.c: Likewise.\n\t* gcc.dg/pr35430.c: Likewise.\n\t* gcc.dg/pr60087.c: Likewise.\n\nFrom-SVN: r250630", "tree": {"sha": "e482b25a9f983a087d053bd784ba65584a344020", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e482b25a9f983a087d053bd784ba65584a344020"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06bd22f6099abe4fec73c988daf4cacd68f34329", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06bd22f6099abe4fec73c988daf4cacd68f34329", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06bd22f6099abe4fec73c988daf4cacd68f34329", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06bd22f6099abe4fec73c988daf4cacd68f34329/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "27c8b49bfc23b658bc8ea90e653f76e26e856c43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27c8b49bfc23b658bc8ea90e653f76e26e856c43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27c8b49bfc23b658bc8ea90e653f76e26e856c43"}], "stats": {"total": 93, "additions": 74, "deletions": 19}, "files": [{"sha": "12683a641779c62d69210fa866d2e9e5634a7d0f", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06bd22f6099abe4fec73c988daf4cacd68f34329/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06bd22f6099abe4fec73c988daf4cacd68f34329/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=06bd22f6099abe4fec73c988daf4cacd68f34329", "patch": "@@ -1,3 +1,9 @@\n+2017-07-27  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/81417\n+\t* c-warn.c (warn_for_sign_compare): Tweak the warning message.  Print\n+\tthe types.\n+\n 2017-07-27  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-attribs.c (c_common_attribute_table): Add noipa attribute."}, {"sha": "505070e5586ab0f888bb595107c92e4a6a62ace4", "filename": "gcc/c-family/c-warn.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06bd22f6099abe4fec73c988daf4cacd68f34329/gcc%2Fc-family%2Fc-warn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06bd22f6099abe4fec73c988daf4cacd68f34329/gcc%2Fc-family%2Fc-warn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-warn.c?ref=06bd22f6099abe4fec73c988daf4cacd68f34329", "patch": "@@ -1891,9 +1891,10 @@ warn_for_sign_compare (location_t location,\n \t\t\t\t   c_common_signed_type (base_type)))\n \t/* OK */;\n       else\n-\twarning_at (location,\n-\t\t    OPT_Wsign_compare,\n-\t\t    \"comparison between signed and unsigned integer expressions\");\n+\twarning_at (location, OPT_Wsign_compare,\n+\t\t    \"comparison of integer expressions of different \"\n+\t\t    \"signedness: %qT and %qT\", TREE_TYPE (orig_op0),\n+\t\t    TREE_TYPE (orig_op1));\n     }\n \n   /* Warn if two unsigned values are being compared in a size larger"}, {"sha": "5f964a3d35ad87862bb00b78341592718a9ea416", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06bd22f6099abe4fec73c988daf4cacd68f34329/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06bd22f6099abe4fec73c988daf4cacd68f34329/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=06bd22f6099abe4fec73c988daf4cacd68f34329", "patch": "@@ -1,3 +1,18 @@\n+2017-07-27  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/81417\n+\t* c-c++-common/Wsign-compare-1.c: New test.\n+\t* g++.dg/warn/Wsign-compare-2.C: Update dg-warning.\n+\t* g++.dg/warn/Wsign-compare-4.C: Likewise.\n+\t* g++.dg/warn/Wsign-compare-6.C: Likewise.\n+\t* g++.dg/warn/compare1.C: Likewise.\n+\t* gcc.dg/compare1.c: Likewise.\n+\t* gcc.dg/compare2.c: Likewise.\n+\t* gcc.dg/compare4.c: Likewise.\n+\t* gcc.dg/compare5.c: Likewise.\n+\t* gcc.dg/pr35430.c: Likewise.\n+\t* gcc.dg/pr60087.c: Likewise.\n+\n 2017-07-27  Peter Bergner  <bergner@vnet.ibm.com>\n \n \tPR middle-end/81564"}, {"sha": "b9b17a99280d943086db1c81bc358ef341f38b9e", "filename": "gcc/testsuite/c-c++-common/Wsign-compare-1.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06bd22f6099abe4fec73c988daf4cacd68f34329/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWsign-compare-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06bd22f6099abe4fec73c988daf4cacd68f34329/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWsign-compare-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWsign-compare-1.c?ref=06bd22f6099abe4fec73c988daf4cacd68f34329", "patch": "@@ -0,0 +1,33 @@\n+/* PR c/81417 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wsign-compare\" } */\n+\n+int\n+fn1 (signed int a, unsigned int b)\n+{\n+  return a < b; /* { dg-warning \"comparison of integer expressions of different signedness: 'int' and 'unsigned int'\" } */\n+}\n+\n+int\n+fn2 (signed int a, unsigned int b)\n+{\n+  return b < a; /* { dg-warning \"comparison of integer expressions of different signedness: 'unsigned int' and 'int'\" } */\n+}\n+\n+int\n+fn3 (signed long int a, unsigned long int b)\n+{\n+  return b < a; /* { dg-warning \"comparison of integer expressions of different signedness: 'long unsigned int' and 'long int'\" } */\n+}\n+\n+int\n+fn4 (signed short int a, unsigned int b)\n+{\n+  return b < a; /* { dg-warning \"comparison of integer expressions of different signedness: 'unsigned int' and 'short int'\" } */\n+}\n+\n+int\n+fn5 (unsigned int a, signed int b)\n+{\n+  return a < b; /* { dg-warning \"comparison of integer expressions of different signedness: 'unsigned int' and 'int'\" } */\n+}"}, {"sha": "b66e8b46565c59bca57017a9fa41c46dd1d15d68", "filename": "gcc/testsuite/g++.dg/warn/Wsign-compare-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06bd22f6099abe4fec73c988daf4cacd68f34329/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsign-compare-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06bd22f6099abe4fec73c988daf4cacd68f34329/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsign-compare-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsign-compare-2.C?ref=06bd22f6099abe4fec73c988daf4cacd68f34329", "patch": "@@ -6,5 +6,5 @@ void\n foo (__complex__ int i)\n {\n   i == 0u;\n-  i == ~1u;\t// { dg-warning \"comparison between signed and unsigned integer expressions\" }\n+  i == ~1u;\t// { dg-warning \"comparison of integer expressions of different signedness\" }\n }"}, {"sha": "e92ab137e3b8c1fe385c2fafde7aba859c6b3314", "filename": "gcc/testsuite/g++.dg/warn/Wsign-compare-4.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06bd22f6099abe4fec73c988daf4cacd68f34329/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsign-compare-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06bd22f6099abe4fec73c988daf4cacd68f34329/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsign-compare-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsign-compare-4.C?ref=06bd22f6099abe4fec73c988daf4cacd68f34329", "patch": "@@ -3,10 +3,10 @@\n \n int foo(unsigned int *a, int b)\n {\n-  return (*a) <= b; // { dg-warning \"comparison between signed and unsigned\" }\n+  return (*a) <= b; // { dg-warning \"comparison of integer expressions of different signedness\" }\n }\n \n int bar(unsigned int *a, int b)\n {\n-  return *a <= b; // { dg-warning \"comparison between signed and unsigned\" }\n+  return *a <= b; // { dg-warning \"comparison of integer expressions of different signedness\" }\n }"}, {"sha": "71b4ebf1613c8b8d56bc46acd9bb109781b0957e", "filename": "gcc/testsuite/g++.dg/warn/Wsign-compare-6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06bd22f6099abe4fec73c988daf4cacd68f34329/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsign-compare-6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06bd22f6099abe4fec73c988daf4cacd68f34329/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsign-compare-6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsign-compare-6.C?ref=06bd22f6099abe4fec73c988daf4cacd68f34329", "patch": "@@ -8,7 +8,7 @@ int main()\n   int i = 5;\n   int const ic = 5;\n \n-  i < 5u;  // { dg-warning \"5:comparison between signed and unsigned\" }\n+  i < 5u;  // { dg-warning \"5:comparison of integer expressions of different signedness\" }\n   ic < 5u;     \n   FIVE < 5u;\n }"}, {"sha": "38f4dffd1da81316ec154f56fc844e876444c8ef", "filename": "gcc/testsuite/g++.dg/warn/compare1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06bd22f6099abe4fec73c988daf4cacd68f34329/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fcompare1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06bd22f6099abe4fec73c988daf4cacd68f34329/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fcompare1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fcompare1.C?ref=06bd22f6099abe4fec73c988daf4cacd68f34329", "patch": "@@ -6,5 +6,5 @@\n \n int f(unsigned a, int b)\n {\n-  return a < b;  /* { dg-warning \"signed and unsigned\" } */\n+  return a < b;  /* { dg-warning \"comparison of integer expressions of different signedness\" } */\n }"}, {"sha": "7becfbdb17f5207c5f693ecc6672d8e84c98530b", "filename": "gcc/testsuite/gcc.dg/compare1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06bd22f6099abe4fec73c988daf4cacd68f34329/gcc%2Ftestsuite%2Fgcc.dg%2Fcompare1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06bd22f6099abe4fec73c988daf4cacd68f34329/gcc%2Ftestsuite%2Fgcc.dg%2Fcompare1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompare1.c?ref=06bd22f6099abe4fec73c988daf4cacd68f34329", "patch": "@@ -37,5 +37,5 @@ int h(enum mm2 x)\n \n int i(enum mm2 x)\n {\n-  return x == (tf?DI2:-1); /* { dg-warning \"signed and unsigned\" \"case 4\" } */\n+  return x == (tf?DI2:-1); /* { dg-warning \"different signedness\" \"case 4\" } */\n }"}, {"sha": "c309f1d00ebc1e111515c0c746c4a36f90164eb4", "filename": "gcc/testsuite/gcc.dg/compare2.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06bd22f6099abe4fec73c988daf4cacd68f34329/gcc%2Ftestsuite%2Fgcc.dg%2Fcompare2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06bd22f6099abe4fec73c988daf4cacd68f34329/gcc%2Ftestsuite%2Fgcc.dg%2Fcompare2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompare2.c?ref=06bd22f6099abe4fec73c988daf4cacd68f34329", "patch": "@@ -18,11 +18,11 @@ void f(int x, unsigned int y)\n \n   /* ?: branches are signed constants.  */\n   x > (tf?64:-1); /* { dg-bogus \"signed and unsigned\" \"case 5\" } */\n-  y > (tf?64:-1); /* { dg-warning \"signed and unsigned\" \"case 6\" } */\n+  y > (tf?64:-1); /* { dg-warning \"different signedness\" \"case 6\" } */\n \n   /* ?: branches are (recursively) signed constants.  */\n   x > (tf?64:(tf?128:-1)); /* { dg-bogus \"signed and unsigned\" \"case 7\" } */\n-  y > (tf?64:(tf?128:-1)); /* { dg-warning \"signed and unsigned\" \"case 8\" } */\n+  y > (tf?64:(tf?128:-1)); /* { dg-warning \"different signedness\" \"case 8\" } */\n \n   /* Statement expression.  */\n   x > ({tf; 64;}); /* { dg-bogus \"signed and unsigned\" \"case 9\" } */\n@@ -34,11 +34,11 @@ void f(int x, unsigned int y)\n \n   /* Statement expression with signed ?:.  */\n   x > ({tf; tf?64:-1;}); /* { dg-bogus \"signed and unsigned\" \"case 13\" } */\n-  y > ({tf; tf?64:-1;}); /* { dg-warning \"signed and unsigned\" \"case 14\" } */\n+  y > ({tf; tf?64:-1;}); /* { dg-warning \"different signedness\" \"case 14\" } */\n \n   /* Statement expression with recursive signed ?:.  */\n   x > ({tf; tf?64:(tf?128:-1);}); /* { dg-bogus \"signed and unsigned\" \"case 15\" } */\n-  y > ({tf; tf?64:(tf?128:-1);}); /* { dg-warning \"signed and unsigned\" \"case 16\" } */\n+  y > ({tf; tf?64:(tf?128:-1);}); /* { dg-warning \"different signedness\" \"case 16\" } */\n \n   /* ?: branches are constants.  */\n   tf ? x : (tf?64:32); /* { dg-bogus \"conditional expression\" \"case 17\" } */"}, {"sha": "299d488edf60e6b0337a326b82cf5220b73f691e", "filename": "gcc/testsuite/gcc.dg/compare4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06bd22f6099abe4fec73c988daf4cacd68f34329/gcc%2Ftestsuite%2Fgcc.dg%2Fcompare4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06bd22f6099abe4fec73c988daf4cacd68f34329/gcc%2Ftestsuite%2Fgcc.dg%2Fcompare4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompare4.c?ref=06bd22f6099abe4fec73c988daf4cacd68f34329", "patch": "@@ -10,7 +10,7 @@ int foo(int x, int y, unsigned u)\n {\n   /* A COMPOUND_EXPR is non-negative if the last element is known to\n      be non-negative.  */\n-  if (u < (bar(), -1)) /*{ dg-warning \"9:signed and unsigned\" \"COMPOUND_EXPR\" }*/\n+  if (u < (bar(), -1)) /*{ dg-warning \"9:different signedness\" \"COMPOUND_EXPR\" }*/\n     return x;\n   if (u < (bar(), 10))\n     return x;\n@@ -34,7 +34,7 @@ int foo(int x, int y, unsigned u)\n \n   /* A MODIFY_EXPR is non-negative if the new value is known to be\n      non-negative.  */\n-  if (u < (x = -1)) /* { dg-warning \"9:signed and unsigned\" \"MODIFY_EXPR\" } */\n+  if (u < (x = -1)) /* { dg-warning \"9:different signedness\" \"MODIFY_EXPR\" } */\n     return x;\n   if (u < (x = 10))\n     return x;"}, {"sha": "3a502f12de9a3aafcbc95701732d4dff374be601", "filename": "gcc/testsuite/gcc.dg/compare5.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06bd22f6099abe4fec73c988daf4cacd68f34329/gcc%2Ftestsuite%2Fgcc.dg%2Fcompare5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06bd22f6099abe4fec73c988daf4cacd68f34329/gcc%2Ftestsuite%2Fgcc.dg%2Fcompare5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompare5.c?ref=06bd22f6099abe4fec73c988daf4cacd68f34329", "patch": "@@ -10,7 +10,7 @@ int foo(int x, int y, unsigned u)\n {\n   /* A *_DIV_EXPR is non-negative if both operands are.  */\n \n-  if (u < ((x=-22)/33)) /* { dg-warning \"signed and unsigned\" \"DIV_EXPR\" } */\n+  if (u < ((x=-22)/33)) /* { dg-warning \"different signedness\" \"DIV_EXPR\" } */\n     return x;\n \n   if (u < ((x=22)/33))\n@@ -25,7 +25,7 @@ int foo(int x, int y, unsigned u)\n \n   /* A *_MOD_EXPR is non-negative if the first operand is.  */\n \n-  if (u < ((x=-22)%33)) /* { dg-warning \"signed and unsigned\" \"MOD_EXPR\" } */\n+  if (u < ((x=-22)%33)) /* { dg-warning \"different signedness\" \"MOD_EXPR\" } */\n     return x;\n \n   if (u < ((x=22)%-33))"}, {"sha": "7365ccfcf9437cfb2aee326447c9dd640842ace8", "filename": "gcc/testsuite/gcc.dg/pr35430.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06bd22f6099abe4fec73c988daf4cacd68f34329/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35430.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06bd22f6099abe4fec73c988daf4cacd68f34329/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35430.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35430.c?ref=06bd22f6099abe4fec73c988daf4cacd68f34329", "patch": "@@ -6,5 +6,5 @@ void\n foo (__complex__ int i)\n {\n   i == 0u;\n-  i == ~1u;\t/* { dg-warning \"comparison between signed and unsigned integer expressions\" } */\n+  i == ~1u;\t/* { dg-warning \"comparison of integer expressions of different signedness\" } */\n }"}, {"sha": "c6cf7aa460757d9d4e5684b01c19eb8c03fbbe21", "filename": "gcc/testsuite/gcc.dg/pr60087.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06bd22f6099abe4fec73c988daf4cacd68f34329/gcc%2Ftestsuite%2Fgcc.dg%2Fpr60087.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06bd22f6099abe4fec73c988daf4cacd68f34329/gcc%2Ftestsuite%2Fgcc.dg%2Fpr60087.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr60087.c?ref=06bd22f6099abe4fec73c988daf4cacd68f34329", "patch": "@@ -10,5 +10,5 @@ foo (unsigned int ui, int i)\n   b = 0 != ~uc; /* { dg-warning \"9:promoted ~unsigned is always non-zero\" } */\n   b = 2 != ~uc; /* { dg-warning \"9:comparison of promoted ~unsigned with constant\" } */\n   b = uc == ~uc; /* { dg-warning \"10:comparison of promoted ~unsigned with unsigned\" } */\n-  b = i == ui; /* { dg-warning \"9:comparison between signed and unsigned integer expressions\" } */\n+  b = i == ui; /* { dg-warning \"9:comparison of integer expressions of different signedness\" } */\n }"}]}