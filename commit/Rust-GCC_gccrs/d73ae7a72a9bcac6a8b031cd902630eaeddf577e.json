{"sha": "d73ae7a72a9bcac6a8b031cd902630eaeddf577e", "node_id": "C_kwDOANBUbNoAKGQ3M2FlN2E3MmE5YmNhYzZhOGIwMzFjZDkwMjYzMGVhZWRkZjU3N2U", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-03-07T09:41:11Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-03-07T09:41:11Z"}, "message": "Fix translation strings.\n\n\tPR translation/90148\n\ngcc/ChangeLog:\n\n\t* config/rs6000/rs6000.cc (rs6000_linux64_override_options): Put\n\tquote to a proper place.\n\t* plugin.cc (default_plugin_dir_name): Likewise.\n\ngcc/fortran/ChangeLog:\n\n\t* intrinsic.cc (gfc_is_intrinsic): Put\n\tquote to a proper place.", "tree": {"sha": "58d10699a5ab75f0b7d7324e8f02576c9884debd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58d10699a5ab75f0b7d7324e8f02576c9884debd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d73ae7a72a9bcac6a8b031cd902630eaeddf577e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d73ae7a72a9bcac6a8b031cd902630eaeddf577e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d73ae7a72a9bcac6a8b031cd902630eaeddf577e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d73ae7a72a9bcac6a8b031cd902630eaeddf577e/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "024bdd2262c60f35cde8c860040d6d0cbb5c7b6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/024bdd2262c60f35cde8c860040d6d0cbb5c7b6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/024bdd2262c60f35cde8c860040d6d0cbb5c7b6e"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "3afe78f5d04983af7bcebf1e3681bd131e6c09e3", "filename": "gcc/config/rs6000/rs6000.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d73ae7a72a9bcac6a8b031cd902630eaeddf577e/gcc%2Fconfig%2Frs6000%2Frs6000.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d73ae7a72a9bcac6a8b031cd902630eaeddf577e/gcc%2Fconfig%2Frs6000%2Frs6000.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.cc?ref=d73ae7a72a9bcac6a8b031cd902630eaeddf577e", "patch": "@@ -3512,7 +3512,7 @@ rs6000_linux64_override_options ()\n \t{\n \t  if (OPTION_SET_P (rs6000_current_cmodel)\n \t      && rs6000_current_cmodel != CMODEL_SMALL)\n-\t    error (\"%<-mcmodel incompatible with other toc options%>\");\n+\t    error (\"%<-mcmodel%> incompatible with other toc options\");\n \t  if (TARGET_MINIMAL_TOC)\n \t    SET_CMODEL (CMODEL_SMALL);\n \t  else if (TARGET_PCREL"}, {"sha": "2b92185a6559a371f2aa10e70b1a616c342d3ad0", "filename": "gcc/fortran/intrinsic.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d73ae7a72a9bcac6a8b031cd902630eaeddf577e/gcc%2Ffortran%2Fintrinsic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d73ae7a72a9bcac6a8b031cd902630eaeddf577e/gcc%2Ffortran%2Fintrinsic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.cc?ref=d73ae7a72a9bcac6a8b031cd902630eaeddf577e", "patch": "@@ -1184,7 +1184,7 @@ gfc_is_intrinsic (gfc_symbol* sym, int subroutine_flag, locus loc)\n \tgfc_warning_now (OPT_Wintrinsics_std, \"The intrinsic %qs at %L is not \"\n \t\t\t \"included in the selected standard but %s and %qs will\"\n \t\t\t \" be treated as if declared EXTERNAL.  Use an\"\n-\t\t\t \" appropriate %<-std=%>* option or define\"\n+\t\t\t \" appropriate %<-std=*%> option or define\"\n \t\t\t \" %<-fall-intrinsics%> to allow this intrinsic.\",\n \t\t\t sym->name, &loc, symstd, sym->name);\n "}, {"sha": "10a4fc597ba5ca8612c098fe2842e8bd67f6e602", "filename": "gcc/plugin.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d73ae7a72a9bcac6a8b031cd902630eaeddf577e/gcc%2Fplugin.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d73ae7a72a9bcac6a8b031cd902630eaeddf577e/gcc%2Fplugin.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fplugin.cc?ref=d73ae7a72a9bcac6a8b031cd902630eaeddf577e", "patch": "@@ -1006,6 +1006,6 @@ default_plugin_dir_name (void)\n {\n   if (!plugindir_string)\n     fatal_error (input_location,\n-\t\t \"%<-iplugindir%> <dir> option not passed from the gcc driver\");\n+\t\t \"%<-iplugindir <dir>%> option not passed from the gcc driver\");\n   return plugindir_string;\n }"}]}