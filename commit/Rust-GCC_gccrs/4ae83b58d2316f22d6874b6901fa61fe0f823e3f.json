{"sha": "4ae83b58d2316f22d6874b6901fa61fe0f823e3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGFlODNiNThkMjMxNmYyMmQ2ODc0YjY5MDFmYTYxZmUwZjgyM2UzZg==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2019-07-11T08:02:17Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-11T08:02:17Z"}, "message": "[Ada] Fix inconsistent documentation for gnatmetric\n\nOne part said all metrics are enabled by default (which is now true),\nand another part said the coupling metrics are disabled by default\n(which is no longer true).\n\n2019-07-11  Bob Duff  <duff@adacore.com>\n\ngcc/ada/\n\n\t* doc/gnat_ugn/gnat_utility_programs.rst: Fix inconsistent\n\tdocumentation for gnatmetric.\n\t* gnat_ugn.texi: Regenerate.\n\nFrom-SVN: r273391", "tree": {"sha": "4798cef5662e9461058b41d6fc77dea86b4b794e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4798cef5662e9461058b41d6fc77dea86b4b794e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ae83b58d2316f22d6874b6901fa61fe0f823e3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ae83b58d2316f22d6874b6901fa61fe0f823e3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ae83b58d2316f22d6874b6901fa61fe0f823e3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ae83b58d2316f22d6874b6901fa61fe0f823e3f/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "852c41d488ce21428ea04999bf16143406460166", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/852c41d488ce21428ea04999bf16143406460166", "html_url": "https://github.com/Rust-GCC/gccrs/commit/852c41d488ce21428ea04999bf16143406460166"}], "stats": {"total": 98, "additions": 50, "deletions": 48}, "files": [{"sha": "a39069c6f6486519fd767c8f6f53718d84802129", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ae83b58d2316f22d6874b6901fa61fe0f823e3f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ae83b58d2316f22d6874b6901fa61fe0f823e3f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4ae83b58d2316f22d6874b6901fa61fe0f823e3f", "patch": "@@ -1,3 +1,9 @@\n+2019-07-11  Bob Duff  <duff@adacore.com>\n+\n+\t* doc/gnat_ugn/gnat_utility_programs.rst: Fix inconsistent\n+\tdocumentation for gnatmetric.\n+\t* gnat_ugn.texi: Regenerate.\n+\n 2019-07-11  Bob Duff  <duff@adacore.com>\n \n \t* doc/gnat_ugn/gnat_utility_programs.rst: Document gnatpp's"}, {"sha": "fc39214e3e03221d84347f90e4a81c2e8ebf4c9a", "filename": "gcc/ada/doc/gnat_ugn/gnat_utility_programs.rst", "status": "modified", "additions": 43, "deletions": 47, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ae83b58d2316f22d6874b6901fa61fe0f823e3f/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_utility_programs.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ae83b58d2316f22d6874b6901fa61fe0f823e3f/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_utility_programs.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_utility_programs.rst?ref=4ae83b58d2316f22d6874b6901fa61fe0f823e3f", "patch": "@@ -1214,7 +1214,7 @@ The following switches are available:\n \n :samp:`f`\n   By default, gnathtml will generate html links only for global entities\n-  ('with'ed units, global variables and types,...).  If you specify\n+  ('with'ed units, global variables and types,...). If you specify\n   :switch:`-f` on the command line, then links will be generated for local\n   entities too.\n \n@@ -1310,7 +1310,7 @@ Alternatively, you may run the script using the following command line:\n \n   ``gnat2xml`` is a project-aware tool\n   (see :ref:`Using_Project_Files_with_GNAT_Tools` for a description of\n-  the project-related switches).  The project file package that can specify\n+  the project-related switches). The project file package that can specify\n   ``gnat2xml`` switches is named ``gnat2xml``.\n \n   .. _Switches_for_``gnat2xml``:\n@@ -1780,7 +1780,7 @@ Alternatively, you may run the script using the following command line:\n \n   ``gnatcheck`` is a project-aware tool\n   (see :ref:`Using_Project_Files_with_GNAT_Tools` for a description of\n-  the project-related switches).  The project file package that can specify\n+  the project-related switches). The project file package that can specify\n   ``gnatcheck`` switches is named ``Check``.\n \n   For full details, plese refer to :title:`GNATcheck Reference Manual`.\n@@ -1804,11 +1804,11 @@ Alternatively, you may run the script using the following command line:\n   for computing various program metrics.\n   It takes an Ada source file as input and generates a file containing the\n   metrics data as output. Various switches control which\n-  metrics are computed and output.\n+  metrics are reported.\n \n   ``gnatmetric`` is a project-aware tool\n   (see :ref:`Using_Project_Files_with_GNAT_Tools` for a description of\n-  the project-related switches).  The project file package that can specify\n+  the project-related switches). The project file package that can specify\n   ``gnatmetric`` switches is named ``Metrics``.\n \n   The ``gnatmetric`` command has the form\n@@ -1921,9 +1921,9 @@ Alternatively, you may run the script using the following command line:\n   .. index:: --short-file-names (gnatmetric)\n \n   :switch:`--short-file-names`\n-    Use 'short' source file names in the output.  (The ``gnatmetric``\n+    Use 'short' source file names in the output. (The ``gnatmetric``\n     output includes the name(s) of the Ada source file(s) from which the\n-    metrics are computed.  By default each name includes the absolute\n+    metrics are computed. By default each name includes the absolute\n     path. The :switch:`--short-file-names` switch causes ``gnatmetric``\n     to exclude all directory information from the file names that are\n     output.)\n@@ -1980,12 +1980,11 @@ Alternatively, you may run the script using the following command line:\n   Specifying a set of metrics to compute\n   --------------------------------------\n \n-  By default all the metrics are computed and reported. The switches\n-  described in this subsection allow you to control, on an individual\n-  basis, whether metrics are computed and reported. If at least one\n-  positive metric switch is specified (that is, a switch that defines\n-  that a given metric or set of metrics is to be computed), then only\n-  explicitly specified metrics are reported.\n+  By default all the metrics are reported. The switches described in this\n+  subsection allow you to control, on an individual basis, whether metrics are\n+  reported. If at least one positive metric switch is specified (that is, a\n+  switch that defines that a given metric or set of metrics is to be computed),\n+  then only explicitly specified metrics are reported.\n \n   .. _Line_Metrics_Control:\n \n@@ -2023,7 +2022,7 @@ Alternatively, you may run the script using the following command line:\n   code lines in bodies.\n \n   You can use the following switches to select the specific line metrics\n-  to be computed and reported.\n+  to be reported.\n \n \n   .. index:: --lines (gnatmetric)\n@@ -2089,10 +2088,9 @@ Alternatively, you may run the script using the following command line:\n \n \n   :switch:`--lines-average`\n-    Report the average number of code lines in subprogram bodies, task\n-    bodies, entry bodies and statement sequences in package bodies. The\n-    metric is computed and reported for the whole set of processed Ada\n-    sources only.\n+    Report the average number of code lines in subprogram bodies, task bodies,\n+    entry bodies and statement sequences in package bodies. The metric is\n+    reported for the whole set of processed Ada sources only.\n \n \n   :switch:`--no-lines-average`\n@@ -2173,7 +2171,7 @@ Alternatively, you may run the script using the following command line:\n       declarations. It is the total number of types that can be\n       referenced from outside this compilation unit, plus the number of\n       types from all the visible parts of all the visible generic\n-      packages. Generic formal types are not counted.  Only types, not\n+      packages. Generic formal types are not counted. Only types, not\n       subtypes, are included.\n \n       Along with the total number of public types, the following\n@@ -2193,14 +2191,14 @@ Alternatively, you may run the script using the following command line:\n   * *All types*\n       This metric is computed for any compilation unit. It is equal to\n       the total number of the declarations of different types given in\n-      the compilation unit.  The private and the corresponding full type\n+      the compilation unit. The private and the corresponding full type\n       declaration are counted as one type declaration. Incomplete type\n       declarations and generic formal types are not counted.\n       No distinction is made among different kinds of types (abstract,\n-      private etc.); the total number of types is computed and reported.\n+      private etc.); the total number of types is reported.\n \n-  By default, all the syntax metrics are computed and reported. You can\n-  use the following switches to select specific syntax metrics.\n+  By default, all the syntax metrics are reported. You can use the following\n+  switches to select specific syntax metrics.\n \n \n   .. index:: --syntax (gnatmetric)\n@@ -2311,7 +2309,7 @@ Alternatively, you may run the script using the following command line:\n \n   According to McCabe, both control statements and short-circuit control\n   forms should be taken into account when computing cyclomatic\n-  complexity.  For Ada 2012 we have also take into account conditional\n+  complexity. For Ada 2012 we have also take into account conditional\n   expressions and quantified expressions. For each body, we compute\n   three metric values:\n \n@@ -2364,9 +2362,8 @@ Alternatively, you may run the script using the following command line:\n   code of assertions and predicates (that is, subprogram preconditions and\n   postconditions, subtype predicates and type invariants) is also skipped.\n \n-  By default, all the complexity metrics are computed and reported.\n-  For more fine-grained control you can use\n-  the following switches:\n+  By default, all the complexity metrics are reported. For more fine-grained\n+  control you can use the following switches:\n \n \n   .. index:: --complexity (gnatmetric)\n@@ -2408,8 +2405,7 @@ Alternatively, you may run the script using the following command line:\n   :switch:`--complexity-average`\n     Report the average McCabe Cyclomatic Complexity for all the subprogram bodies,\n     task bodies, entry bodies and statement sequences in package bodies.\n-    The metric is computed and reported for whole set of processed Ada sources\n-    only.\n+    The metric is reported for whole set of processed Ada sources only.\n \n \n   :switch:`--no-complexity-average`\n@@ -2623,8 +2619,8 @@ Alternatively, you may run the script using the following command line:\n   by invoking ``gnatmetric`` with the corresponding project file\n   and with the :switch:`-U` option.\n \n-  By default, all the coupling metrics are disabled. You can use the following\n-  switches to specify the coupling metrics to be computed and reported:\n+  By default, all the coupling metrics are reported. You can use the following\n+  switches to select specific syntax metrics.\n \n   .. index:: --tagged-coupling (gnatmetric)\n   .. index:: --hierarchy-coupling (gnatmetric)\n@@ -2854,14 +2850,14 @@ Alternatively, you may run the script using the following command line:\n    of ``gnatpp``, which replaces the ASIS-based version.\n \n    The ``gnatpp`` tool is a utility for source reformatting / pretty\n-   printing.  It takes an Ada source file as input and generates a\n-   reformatted version as output.  You can specify various style\n+   printing. It takes an Ada source file as input and generates a\n+   reformatted version as output. You can specify various style\n    directives via switches; e.g., identifier case conventions, rules of\n    indentation, and comment layout.\n \n    ``gnatpp`` is a project-aware tool\n    (see :ref:`Using_Project_Files_with_GNAT_Tools` for a description of\n-   the project-related switches).  The project file package that can specify\n+   the project-related switches). The project file package that can specify\n    ``gnatpp`` switches is named ``Pretty_Printer``.\n \n    ``gnatpp`` cannot process sources that contain preprocessing\n@@ -3019,7 +3015,7 @@ Alternatively, you may run the script using the following command line:\n    .. index:: --enum-upper-case (gnatpp)\n \n    :switch:`--enum-upper-case`\n-     Enumeration literals are in upper case.  Overrides -n casing\n+     Enumeration literals are in upper case. Overrides -n casing\n      setting.\n \n    .. index:: --enum-lower-case (gnatpp)\n@@ -3133,7 +3129,7 @@ Alternatively, you may run the script using the following command line:\n    compatible.\n \n    This group of ``gnatpp`` switches controls the layout of comments and\n-   complex syntactic constructs.  See :ref:`Formatting_Comments` for details\n+   complex syntactic constructs. See :ref:`Formatting_Comments` for details\n    on their effect.\n \n \n@@ -3750,10 +3746,10 @@ Alternatively, you may run the script using the following command line:\n      the same line.\n \n    A whole-line comment is indented according to the surrounding code,\n-   with some exceptions.  Comments that start in column 1 are kept\n-   there.  If possible, comments are not moved so far to the right that\n-   the maximum line length is exceeded.  The ``--comments-unchanged``\n-   option turns off comment formatting.  Special-form comments such as\n+   with some exceptions. Comments that start in column 1 are kept\n+   there. If possible, comments are not moved so far to the right that\n+   the maximum line length is exceeded. The ``--comments-unchanged``\n+   option turns off comment formatting. Special-form comments such as\n    SPARK-style ``--#...`` are left alone.\n \n    For an end-of-line comment, ``gnatpp`` tries to leave the same\n@@ -3778,7 +3774,7 @@ Alternatively, you may run the script using the following command line:\n    are formatted according to the ``--comments-gnat-beginning`` and\n    ``--comments-fill`` switches; other formatting switches are ignored. For\n    example, ``--comments-only --comments-fill`` means to fill comment\n-   paragraphs, and do nothing else.  Likewise, ``--comments-only\n+   paragraphs, and do nothing else. Likewise, ``--comments-only\n    --comments-gnat-beginning`` ensures comments start with at least two\n    spaces after ``--``, and ``--comments-only --comments-gnat-beginning\n    --comments-fill`` does both. If ``--comments-only`` is given without\n@@ -3795,19 +3791,19 @@ Alternatively, you may run the script using the following command line:\n    the same casing as the corresponding defining identifier.\n \n    You control the casing for defining occurrences via the ``--name...``\n-   switches.  With ``--name-case-as-declared``, which is the default,\n+   switches. With ``--name-case-as-declared``, which is the default,\n    defining occurrences appear exactly as in the source file where they\n-   are declared.  The other values for this switch --\n+   are declared. The other values for this switch --\n    ``--name-upper-case``, ``--name-lower-case``, ``--name-mixed-case``\n-   -- result in upper, lower, or mixed case, respectively.  If\n+   -- result in upper, lower, or mixed case, respectively. If\n    ``gnatpp`` changes the casing of a defining occurrence, it\n    analogously changes the casing of all the usage occurrences of this\n    name.\n \n    If the defining occurrence of a name is not in the source compilation\n    unit currently being processed by ``gnatpp``, the casing of each\n    reference to this name is changed according to the switch (subject to\n-   the dictionary file mechanism described below).  Thus ``gnatpp`` acts\n+   the dictionary file mechanism described below). Thus ``gnatpp`` acts\n    as though the switch had affected the casing for the defining\n    occurrence of the name.\n \n@@ -3844,7 +3840,7 @@ Alternatively, you may run the script using the following command line:\n    ``-n`` switch or explicit dictionary files. For\n    example, by default the names ``Ada.Text_IO`` and\n    ``GNAT.OS_Lib`` will appear as just shown, even in the presence of\n-   a ``--name-upper-case`` switch.  To ensure that even\n+   a ``--name-upper-case`` switch. To ensure that even\n    such names are rendered in uppercase, additionally supply the\n    --dictionary=- switch (or else place these names\n    in upper case in a dictionary file).\n@@ -4754,7 +4750,7 @@ Alternatively, you may run the script using the following command line:\n   :switch:`--subdir={dirname}`\n     Test packages are placed in a subdirectory of the corresponding source\n     directory, with the name ``dirname``. Thus, each set of unit tests is located\n-    in a subdirectory of the code under test.  If the sources are in separate\n+    in a subdirectory of the code under test. If the sources are in separate\n     directories, each source directory has a test subdirectory named ``dirname``.\n \n "}, {"sha": "29424e76155ce7b9dfb3e77e96ae6be84d351923", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ae83b58d2316f22d6874b6901fa61fe0f823e3f/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ae83b58d2316f22d6874b6901fa61fe0f823e3f/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=4ae83b58d2316f22d6874b6901fa61fe0f823e3f", "patch": "@@ -19024,7 +19024,7 @@ If you do not specify an extension, it will default to @code{htm}.\n @item @code{f}\n \n By default, gnathtml will generate html links only for global entities\n-('with'ed units, global variables and types,...).  If you specify\n+('with'ed units, global variables and types,...). If you specify\n @code{-f} on the command line, then links will be generated for local\n entities too.\n @end table"}]}