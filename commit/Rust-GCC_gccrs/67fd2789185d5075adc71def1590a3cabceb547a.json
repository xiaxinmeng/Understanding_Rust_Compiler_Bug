{"sha": "67fd2789185d5075adc71def1590a3cabceb547a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdmZDI3ODkxODVkNTA3NWFkYzcxZGVmMTU5MGEzY2FiY2ViNTQ3YQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2015-07-24T12:08:00Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2015-07-24T12:08:00Z"}, "message": "Add a testcase for PR bootstrap/66978\n\n\tPR bootstrap/66978\n\t* gcc.target/i386/pr66978.c: New test.\n\nFrom-SVN: r226150", "tree": {"sha": "c579a3ae78c820227a30b0eb4bdd4ec3e91ccbd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c579a3ae78c820227a30b0eb4bdd4ec3e91ccbd3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67fd2789185d5075adc71def1590a3cabceb547a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67fd2789185d5075adc71def1590a3cabceb547a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67fd2789185d5075adc71def1590a3cabceb547a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67fd2789185d5075adc71def1590a3cabceb547a/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b8fedf996be60ac2de2dcd0dbe39e9f258cf0c8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8fedf996be60ac2de2dcd0dbe39e9f258cf0c8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8fedf996be60ac2de2dcd0dbe39e9f258cf0c8e"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "3e8c2d2d82f8254b7901521d60a118f9f9e00755", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67fd2789185d5075adc71def1590a3cabceb547a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67fd2789185d5075adc71def1590a3cabceb547a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=67fd2789185d5075adc71def1590a3cabceb547a", "patch": "@@ -1,3 +1,8 @@\n+2015-07-24  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR bootstrap/66978\n+\t* gcc.target/i386/pr66978.c: New test.\n+\n 2015-07-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* gcc.target/s390/gpr2fprsavecfi.c: New test."}, {"sha": "7e4a631261af12a1291785ed9fbbff47940952b6", "filename": "gcc/testsuite/gcc.target/i386/pr66978.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67fd2789185d5075adc71def1590a3cabceb547a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66978.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67fd2789185d5075adc71def1590a3cabceb547a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66978.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66978.c?ref=67fd2789185d5075adc71def1590a3cabceb547a", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile { target { ! { ia32 } } } } */\n+/* { dg-require-effective-target maybe_x32 } */\n+/* { dg-options \"-O2 -mx32 -maddress-mode=short\" } */\n+\n+extern int foo (int *);\n+int\n+bar (int *p)\n+{\n+  __attribute__ ((noinline, noclone))\n+  int hack_digit (void)\n+    {\n+      return foo (p);\n+    }\n+  return hack_digit ();\n+}"}]}