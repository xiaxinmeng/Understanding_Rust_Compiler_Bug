{"sha": "418f840c1b52c1ff7884e54b70164490b3025d5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE4Zjg0MGMxYjUyYzFmZjc4ODRlNTRiNzAxNjQ0OTBiMzAyNWQ1Yw==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2010-06-25T00:26:24Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2010-06-25T00:26:24Z"}, "message": "gcc.c (translate_options): Don't mention +e in comment.\n\n\t* gcc.c (translate_options): Don't mention +e in comment.\n\t(process_command): Don't handle +e specially.\n\ncp:\n\t* lang-specs.h: Remove +e handling.\n\nobjcp:\n\t* lang-specs.h: Remove +e handling.\n\nFrom-SVN: r161355", "tree": {"sha": "1a2cce2af4f55485ea38f10878012a988b6a8959", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a2cce2af4f55485ea38f10878012a988b6a8959"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/418f840c1b52c1ff7884e54b70164490b3025d5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/418f840c1b52c1ff7884e54b70164490b3025d5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/418f840c1b52c1ff7884e54b70164490b3025d5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/418f840c1b52c1ff7884e54b70164490b3025d5c/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c504fdd6cad4182e5adba0c5ea94cfc78d11fa0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c504fdd6cad4182e5adba0c5ea94cfc78d11fa0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c504fdd6cad4182e5adba0c5ea94cfc78d11fa0a"}], "stats": {"total": 49, "additions": 23, "deletions": 26}, "files": [{"sha": "aca7027e5e74a328341aa40cf5b51d69da4651fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/418f840c1b52c1ff7884e54b70164490b3025d5c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/418f840c1b52c1ff7884e54b70164490b3025d5c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=418f840c1b52c1ff7884e54b70164490b3025d5c", "patch": "@@ -1,3 +1,8 @@\n+2010-06-25  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.c (translate_options): Don't mention +e in comment.\n+\t(process_command): Don't handle +e specially.\n+\n 2010-06-25  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* ira.c (allocno_pool, copy_pool, allocno_live_range_pool): Delete."}, {"sha": "3093f0d9c9a03d418eadd65dfc93edac5d1f8222", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/418f840c1b52c1ff7884e54b70164490b3025d5c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/418f840c1b52c1ff7884e54b70164490b3025d5c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=418f840c1b52c1ff7884e54b70164490b3025d5c", "patch": "@@ -1,3 +1,7 @@\n+2010-06-25  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* lang-specs.h: Remove +e handling.\n+\n 2010-06-24  Andi Kleen  <ak@linux.intel.com>\n \n \t* parser.c: (cp_parser_question_colon_clause):"}, {"sha": "24213587f769cca44b5cf4ec70f86ef8e8f15e58", "filename": "gcc/cp/lang-specs.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/418f840c1b52c1ff7884e54b70164490b3025d5c/gcc%2Fcp%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/418f840c1b52c1ff7884e54b70164490b3025d5c/gcc%2Fcp%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flang-specs.h?ref=418f840c1b52c1ff7884e54b70164490b3025d5c", "patch": "@@ -1,6 +1,6 @@\n /* Definitions for specs for C++.\n    Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000,\n-   2001, 2002, 2003, 2004, 2007 Free Software Foundation, Inc.\n+   2001, 2002, 2003, 2004, 2007, 2010 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -47,7 +47,7 @@ along with GCC; see the file COPYING3.  If not see\n \t\t%(cpp_options) %2 -o %{save-temps:%b.ii} %{!save-temps:%g.ii} \\n}\\\n       cc1plus %{save-temps|no-integrated-cpp:-fpreprocessed %{save-temps:%b.ii} %{!save-temps:%g.ii}}\\\n \t      %{!save-temps:%{!no-integrated-cpp:%(cpp_unique_options)}}\\\n-\t%(cc1_options) %2 %{+e1*}\\\n+\t%(cc1_options) %2\\\n \t%{!fsyntax-only:%{!fdump-ada-spec*:-o %g.s %{!o*:--output-pch=%i.gch}\\\n         %W{o*:--output-pch=%*}}%V}}}}\",\n      CPLUSPLUS_CPP_SPEC, 0, 0},\n@@ -58,11 +58,11 @@ along with GCC; see the file COPYING3.  If not see\n \t\t%(cpp_options) %2 -o %{save-temps:%b.ii} %{!save-temps:%g.ii} \\n}\\\n       cc1plus %{save-temps|no-integrated-cpp:-fpreprocessed %{save-temps:%b.ii} %{!save-temps:%g.ii}}\\\n \t      %{!save-temps:%{!no-integrated-cpp:%(cpp_unique_options)}}\\\n-\t%(cc1_options) %2 %{+e1*}\\\n+\t%(cc1_options) %2\\\n        %{!fsyntax-only:%(invoke_as)}}}}\",\n      CPLUSPLUS_CPP_SPEC, 0, 0},\n   {\".ii\", \"@c++-cpp-output\", 0, 0, 0},\n   {\"@c++-cpp-output\",\n    \"%{!M:%{!MM:%{!E:\\\n-    cc1plus -fpreprocessed %i %(cc1_options) %2 %{+e*}\\\n+    cc1plus -fpreprocessed %i %(cc1_options) %2\\\n     %{!fsyntax-only:%(invoke_as)}}}}\", 0, 0, 0},"}, {"sha": "6f846d7f896453a563a51c20dca9fd1ebe7336be", "filename": "gcc/gcc.c", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/418f840c1b52c1ff7884e54b70164490b3025d5c/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/418f840c1b52c1ff7884e54b70164490b3025d5c/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=418f840c1b52c1ff7884e54b70164490b3025d5c", "patch": "@@ -1475,7 +1475,7 @@ translate_options (int *argcp, const char *const **argvp)\n \t    }\n \t}\n       else\n-\t/* Ordinary operands, or +e options.  */\n+\t/* Ordinary operands.  */\n \tnewv[newindex++] = argv[i++];\n     }\n \n@@ -3895,9 +3895,6 @@ process_command (int argc, const char **argv)\n \t  /* Record the part after the last comma.  */\n \t  add_preprocessor_option (argv[i] + prev, j - prev);\n \t}\n-      else if (argv[i][0] == '+' && argv[i][1] == 'e')\n-\t/* The +e options to the C++ front-end.  */\n-\tn_switches++;\n       else if (strncmp (argv[i], \"-Wl,\", 4) == 0)\n \t{\n \t  int j;\n@@ -4356,19 +4353,6 @@ process_command (int argc, const char **argv)\n \t  target_system_root = argv[i] + strlen (\"--sysroot=\");\n \t  target_system_root_changed = 1;\n \t}\n-      else if (argv[i][0] == '+' && argv[i][1] == 'e')\n-\t{\n-\t  /* Compensate for the +e options to the C++ front-end;\n-\t     they're there simply for cfront call-compatibility.  We do\n-\t     some magic in default_compilers to pass them down properly.\n-\t     Note we deliberately start at the `+' here, to avoid passing\n-\t     -e0 or -e1 down into the linker.  */\n-\t  switches[n_switches].part1 = &argv[i][0];\n-\t  switches[n_switches].args = 0;\n-\t  switches[n_switches].live_cond = 0;\n-\t  switches[n_switches].validated = 0;\n-\t  n_switches++;\n-\t}\n       else if (strncmp (argv[i], \"-Wl,\", 4) == 0)\n \t{\n \t  int prev, j;"}, {"sha": "cfb27f413cd3742388d83df3de539e58862b1f90", "filename": "gcc/objcp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/418f840c1b52c1ff7884e54b70164490b3025d5c/gcc%2Fobjcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/418f840c1b52c1ff7884e54b70164490b3025d5c/gcc%2Fobjcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2FChangeLog?ref=418f840c1b52c1ff7884e54b70164490b3025d5c", "patch": "@@ -1,3 +1,7 @@\n+2010-06-25  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* lang-specs.h: Remove +e handling.\n+\n 2010-06-08  Laurynas Biveinis  <laurynas.biveinis@gmail.com>\n \n \t* objcp-decl.h (ALLOC_OBJC_TYPE_LANG_SPECIFIC): Use typed GC"}, {"sha": "1644e5a304776c6daa6c03590387373add23e61a", "filename": "gcc/objcp/lang-specs.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/418f840c1b52c1ff7884e54b70164490b3025d5c/gcc%2Fobjcp%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/418f840c1b52c1ff7884e54b70164490b3025d5c/gcc%2Fobjcp%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2Flang-specs.h?ref=418f840c1b52c1ff7884e54b70164490b3025d5c", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for specs for Objective-C++.\n-   Copyright (C) 2005, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2007, 2010 Free Software Foundation, Inc.\n    Contributed by Ziemowit Laski  <zlaski@apple.com>\n \n This file is part of GCC.\n@@ -36,7 +36,7 @@ along with GCC; see the file COPYING3.  If not see\n \t\t%(cpp_options) %2 -o %{save-temps:%b.mii} %{!save-temps:%g.mii} \\n}\\\n       cc1objplus %{save-temps|no-integrated-cpp:-fpreprocessed %{save-temps:%b.mii} %{!save-temps:%g.mii}}\\\n \t      %{!save-temps:%{!no-integrated-cpp:%(cpp_unique_options)}}\\\n-\t%(cc1_options) %2 %{+e1*}\\\n+\t%(cc1_options) %2\\\n         -o %g.s %{!o*:--output-pch=%i.gch} %W{o*:--output-pch=%*}%V}}}\",\n      CPLUSPLUS_CPP_SPEC, 0, 0},\n   {\"@objective-c++\",\n@@ -46,15 +46,15 @@ along with GCC; see the file COPYING3.  If not see\n \t\t%(cpp_options) %2 -o %{save-temps:%b.mii} %{!save-temps:%g.mii} \\n}\\\n       cc1objplus %{save-temps|no-integrated-cpp:-fpreprocessed %{save-temps:%b.mii} %{!save-temps:%g.mii}}\\\n \t      %{!save-temps:%{!no-integrated-cpp:%(cpp_unique_options)}}\\\n-\t%(cc1_options) %2 %{+e1*}\\\n+\t%(cc1_options) %2\\\n        %{!fsyntax-only:%(invoke_as)}}}}\",\n      CPLUSPLUS_CPP_SPEC, 0, 0},\n   {\".mii\", \"@objective-c++-cpp-output\", 0, 0, 0},\n   {\"@objective-c++-cpp-output\",\n    \"%{!M:%{!MM:%{!E:\\\n-    cc1objplus -fpreprocessed %i %(cc1_options) %2 %{+e*}\\\n+    cc1objplus -fpreprocessed %i %(cc1_options) %2\\\n     %{!fsyntax-only:%(invoke_as)}}}}\", 0, 0, 0},\n   {\"@objc++-cpp-output\",\n    \"%{!M:%{!MM:%{!E:\\\n-    cc1objplus -fpreprocessed %i %(cc1_options) %2 %{+e*}\\\n+    cc1objplus -fpreprocessed %i %(cc1_options) %2\\\n     %{!fsyntax-only:%(invoke_as)}}}}\", 0, 0, 0},"}]}