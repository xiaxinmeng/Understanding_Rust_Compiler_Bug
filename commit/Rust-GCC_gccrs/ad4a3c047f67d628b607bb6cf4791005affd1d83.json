{"sha": "ad4a3c047f67d628b607bb6cf4791005affd1d83", "node_id": "C_kwDOANBUbNoAKGFkNGEzYzA0N2Y2N2Q2MjhiNjA3YmI2Y2Y0NzkxMDA1YWZmZDFkODM", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-10-04T08:02:39Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-10-04T08:57:23Z"}, "message": "middle-end/102587 - avoid auto-init for VLA vectors\n\nThis avoids ICEing for VLA vector auto-init by not initializing.\n\n2021-10-04  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/102587\n\t* internal-fn.c (expand_DEFERRED_INIT): Guard register\n\tinitialization path an avoid initializing VLA registers\n\twith it.\n\n\t* gcc.target/aarch64/sve/pr102587-1.c: New testcase.\n\t* gcc.target/aarch64/sve/pr102587-2.c: Likewise.", "tree": {"sha": "e782349ea19d8a9054f582e6701233808254a52c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e782349ea19d8a9054f582e6701233808254a52c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad4a3c047f67d628b607bb6cf4791005affd1d83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad4a3c047f67d628b607bb6cf4791005affd1d83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad4a3c047f67d628b607bb6cf4791005affd1d83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad4a3c047f67d628b607bb6cf4791005affd1d83/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e0367dd64f4946d76477a8545d7abf3c0802806", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e0367dd64f4946d76477a8545d7abf3c0802806", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e0367dd64f4946d76477a8545d7abf3c0802806"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "ef5dc90db5615c11961516a2230b751a0699b05c", "filename": "gcc/internal-fn.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad4a3c047f67d628b607bb6cf4791005affd1d83/gcc%2Finternal-fn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad4a3c047f67d628b607bb6cf4791005affd1d83/gcc%2Finternal-fn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finternal-fn.c?ref=ad4a3c047f67d628b607bb6cf4791005affd1d83", "patch": "@@ -3035,7 +3035,8 @@ expand_DEFERRED_INIT (internal_fn, gcall *stmt)\n       /* Expand this memset call.  */\n       expand_builtin_memset (m_call, NULL_RTX, TYPE_MODE (var_type));\n     }\n-  else\n+  /* ???  Deal with poly-int sized registers.  */\n+  else if (tree_fits_uhwi_p (TYPE_SIZE_UNIT (var_type)))\n     {\n       /* If this variable is in a register, use expand_assignment might\n \t generate better code.  */"}, {"sha": "2b9a68b0b59c3b15b6576288e12c7bf3ffc14f6f", "filename": "gcc/testsuite/gcc.target/aarch64/sve/pr102587-1.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad4a3c047f67d628b607bb6cf4791005affd1d83/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpr102587-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad4a3c047f67d628b607bb6cf4791005affd1d83/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpr102587-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpr102587-1.c?ref=ad4a3c047f67d628b607bb6cf4791005affd1d83", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-ftrivial-auto-var-init=zero\" } */\n+\n+void foo() { __SVFloat64_t f64; }"}, {"sha": "4cdb9056002905daf9b25e69ca79a1467aa50d99", "filename": "gcc/testsuite/gcc.target/aarch64/sve/pr102587-2.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad4a3c047f67d628b607bb6cf4791005affd1d83/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpr102587-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad4a3c047f67d628b607bb6cf4791005affd1d83/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpr102587-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpr102587-2.c?ref=ad4a3c047f67d628b607bb6cf4791005affd1d83", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-ftrivial-auto-var-init=pattern\" } */\n+\n+void foo() { __SVFloat64_t f64; }"}]}