{"sha": "625f802cafd00f2a6933d7f85ff6f284237096e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjI1ZjgwMmNhZmQwMGYyYTY5MzNkN2Y4NWZmNmYyODQyMzcwOTZlOQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2009-10-08T18:52:57Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2009-10-08T18:52:57Z"}, "message": "Fix 41626 from Jan Hubicka\n\nFrom-SVN: r152569", "tree": {"sha": "36dfcd47579c82b5abe65af64b2523a5a00a1900", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36dfcd47579c82b5abe65af64b2523a5a00a1900"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/625f802cafd00f2a6933d7f85ff6f284237096e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/625f802cafd00f2a6933d7f85ff6f284237096e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/625f802cafd00f2a6933d7f85ff6f284237096e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/625f802cafd00f2a6933d7f85ff6f284237096e9/comments", "author": null, "committer": null, "parents": [{"sha": "007a178cff07dc03e9df0cc0798d5077dbd9a944", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/007a178cff07dc03e9df0cc0798d5077dbd9a944", "html_url": "https://github.com/Rust-GCC/gccrs/commit/007a178cff07dc03e9df0cc0798d5077dbd9a944"}], "stats": {"total": 37, "additions": 26, "deletions": 11}, "files": [{"sha": "14eca8eae887c86fa66e8c4a1b718b9a9bd3031d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/625f802cafd00f2a6933d7f85ff6f284237096e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/625f802cafd00f2a6933d7f85ff6f284237096e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=625f802cafd00f2a6933d7f85ff6f284237096e9", "patch": "@@ -1,3 +1,14 @@\n+2009-10-08  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR middle-end/41626\n+\t* cgraphbuild.c (record_reference): When parameter DATA is NULL,\n+\tdo not mark cgraph nodes as needed.\n+\t(record_references_in_initializer): Add new only_vars parameter.\n+\t* cgraph.h (record_references_in_initializer): New parameter.\n+\t* varasm.c (assemble_variable): Update call.\n+\t* varpool.c (varpool_analyze_pending_decls): Always look for\n+\treferenced vars.\n+\n 2009-10-08  Anatoly Sokolov  <aesok@post.ru>\n \n \t* config/avr/avr.c (last_insn_address) Remove variable."}, {"sha": "016ce9de14c9b6437c623a8b0f9a31aed3419bd9", "filename": "gcc/cgraph.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/625f802cafd00f2a6933d7f85ff6f284237096e9/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/625f802cafd00f2a6933d7f85ff6f284237096e9/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=625f802cafd00f2a6933d7f85ff6f284237096e9", "patch": "@@ -459,7 +459,7 @@ struct cgraph_node *cgraph_function_versioning (struct cgraph_node *,\n \t\t\t\t\t\tbitmap);\n void tree_function_versioning (tree, tree, VEC (ipa_replace_map_p,gc)*, bool, bitmap);\n struct cgraph_node *save_inline_function_body (struct cgraph_node *);\n-void record_references_in_initializer (tree);\n+void record_references_in_initializer (tree, bool);\n bool cgraph_process_new_functions (void);\n \n bool cgraph_decide_is_function_needed (struct cgraph_node *, tree);"}, {"sha": "65e3d67e14c8cc8e2fa4391b9a4bb6caf2154287", "filename": "gcc/cgraphbuild.c", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/625f802cafd00f2a6933d7f85ff6f284237096e9/gcc%2Fcgraphbuild.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/625f802cafd00f2a6933d7f85ff6f284237096e9/gcc%2Fcgraphbuild.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphbuild.c?ref=625f802cafd00f2a6933d7f85ff6f284237096e9", "patch": "@@ -33,13 +33,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-pass.h\"\n \n /* Walk tree and record all calls and references to functions/variables.\n-   Called via walk_tree: TP is pointer to tree to be examined.  */\n+   Called via walk_tree: TP is pointer to tree to be examined.  \n+   When DATA is non-null, record references to callgraph.\n+   */\n \n static tree\n-record_reference (tree *tp, int *walk_subtrees, void *data ATTRIBUTE_UNUSED)\n+record_reference (tree *tp, int *walk_subtrees, void *data)\n {\n   tree t = *tp;\n   tree decl;\n+  bool do_callgraph = data != NULL;\n \n   switch (TREE_CODE (t))\n     {\n@@ -57,7 +60,7 @@ record_reference (tree *tp, int *walk_subtrees, void *data ATTRIBUTE_UNUSED)\n       /* Record dereferences to the functions.  This makes the\n \t functions reachable unconditionally.  */\n       decl = TREE_OPERAND (*tp, 0);\n-      if (TREE_CODE (decl) == FUNCTION_DECL)\n+      if (TREE_CODE (decl) == FUNCTION_DECL && do_callgraph)\n \tcgraph_mark_address_taken_node (cgraph_node (decl));\n       break;\n \n@@ -218,13 +221,15 @@ struct gimple_opt_pass pass_build_cgraph_edges =\n };\n \n /* Record references to functions and other variables present in the\n-   initial value of DECL, a variable.  */\n+   initial value of DECL, a variable.  \n+   When ONLY_VARS is true, we mark needed only variables, not functions.  */\n \n void\n-record_references_in_initializer (tree decl)\n+record_references_in_initializer (tree decl, bool only_vars)\n {\n   struct pointer_set_t *visited_nodes = pointer_set_create ();\n-  walk_tree (&DECL_INITIAL (decl), record_reference, NULL, visited_nodes);\n+  walk_tree (&DECL_INITIAL (decl), record_reference, \n+            only_vars ? NULL : decl, visited_nodes);\n   pointer_set_destroy (visited_nodes);\n }\n "}, {"sha": "4c0b9a663a5ccdb26cf13779abe2194c40b811ce", "filename": "gcc/varasm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/625f802cafd00f2a6933d7f85ff6f284237096e9/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/625f802cafd00f2a6933d7f85ff6f284237096e9/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=625f802cafd00f2a6933d7f85ff6f284237096e9", "patch": "@@ -2082,7 +2082,7 @@ assemble_variable (tree decl, int top_level ATTRIBUTE_UNUSED,\n \t     Without this, if the variable is placed in a\n \t     section-anchored block, the template will only be marked\n \t     when it's too late.  */\n-\t  record_references_in_initializer (to);\n+\t  record_references_in_initializer (to, false);\n \t}\n \n       decl = to;"}, {"sha": "8815efda249c71bca51b6a89bf9d077970082be2", "filename": "gcc/varpool.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/625f802cafd00f2a6933d7f85ff6f284237096e9/gcc%2Fvarpool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/625f802cafd00f2a6933d7f85ff6f284237096e9/gcc%2Fvarpool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarpool.c?ref=625f802cafd00f2a6933d7f85ff6f284237096e9", "patch": "@@ -364,10 +364,9 @@ varpool_analyze_pending_decls (void)\n           /* Compute the alignment early so function body expanders are\n \t     already informed about increased alignment.  */\n           align_variable (decl, 0);\n-\n-          if (DECL_INITIAL (decl))\n-\t    record_references_in_initializer (decl);\n \t}\n+      if (DECL_INITIAL (decl))\n+\trecord_references_in_initializer (decl, analyzed);\n       changed = true;\n     }\n   timevar_pop (TV_CGRAPH);"}]}