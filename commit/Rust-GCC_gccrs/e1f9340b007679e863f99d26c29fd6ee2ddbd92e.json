{"sha": "e1f9340b007679e863f99d26c29fd6ee2ddbd92e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFmOTM0MGIwMDc2NzllODYzZjk5ZDI2YzI5ZmQ2ZWUyZGRiZDkyZQ==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2013-06-19T23:51:05Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2013-06-19T23:51:05Z"}, "message": "re PR driver/57652 (collect2 does not clean up temporary files)\n\n        PR driver/57652\n        * collect2.c (collect_atexit): New.\n        (collect_exit): Delete.\n        (main): Register collect_atexit with atexit.\n        (collect_wait): Change collect_exit to exit.\n        (do_wait): Same.\n        * collect2.h (collect_exit): Delete.\n        * tlink.c (do_tlink): Rename exit to ret. Change collect_exit to exit.\n\nFrom-SVN: r200226", "tree": {"sha": "577f4229ae37691c56e97e8f33c2bef3c116bbfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/577f4229ae37691c56e97e8f33c2bef3c116bbfc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1f9340b007679e863f99d26c29fd6ee2ddbd92e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1f9340b007679e863f99d26c29fd6ee2ddbd92e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1f9340b007679e863f99d26c29fd6ee2ddbd92e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1f9340b007679e863f99d26c29fd6ee2ddbd92e/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e3f9e0acec78644ef45ec984b062c856fc53a9e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3f9e0acec78644ef45ec984b062c856fc53a9e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3f9e0acec78644ef45ec984b062c856fc53a9e0"}], "stats": {"total": 43, "additions": 25, "deletions": 18}, "files": [{"sha": "6d2d7c915e6166eeccfc878369b4cbb44b9340b2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1f9340b007679e863f99d26c29fd6ee2ddbd92e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1f9340b007679e863f99d26c29fd6ee2ddbd92e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e1f9340b007679e863f99d26c29fd6ee2ddbd92e", "patch": "@@ -1,3 +1,14 @@\n+2013-06-19  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\tPR driver/57652\n+\t* collect2.c (collect_atexit): New.\n+\t(collect_exit): Delete.\n+\t(main): Register collect_atexit with atexit.\n+\t(collect_wait): Change collect_exit to exit.\n+\t(do_wait): Same.\n+\t* collect2.h (collect_exit): Delete.\n+\t* tlink.c (do_tlink): Rename exit to ret. Change collect_exit to exit.\n+\n 2013-06-19  Wei Mi  <wmi@google.com>\n \n \tPR rtl-optimization/57518"}, {"sha": "43b9defafd81f7f2f0beb18fc9ab668250fb0aac", "filename": "gcc/collect2.c", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1f9340b007679e863f99d26c29fd6ee2ddbd92e/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1f9340b007679e863f99d26c29fd6ee2ddbd92e/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=e1f9340b007679e863f99d26c29fd6ee2ddbd92e", "patch": "@@ -366,8 +366,8 @@ static void scan_prog_file (const char *, scanpass, scanfilter);\n \f\n /* Delete tempfiles and exit function.  */\n \n-void\n-collect_exit (int status)\n+static void\n+collect_atexit (void)\n {\n   if (c_file != 0 && c_file[0])\n     maybe_unlink (c_file);\n@@ -395,13 +395,8 @@ collect_exit (int status)\n       maybe_unlink (lderrout);\n     }\n \n-  if (status != 0 && output_file != 0 && output_file[0])\n-    maybe_unlink (output_file);\n-\n   if (response_file)\n     maybe_unlink (response_file);\n-\n-  exit (status);\n }\n \n \f\n@@ -970,6 +965,9 @@ main (int argc, char **argv)\n   signal (SIGCHLD, SIG_DFL);\n #endif\n \n+  if (atexit (collect_atexit) != 0)\n+    fatal_error (\"atexit failed\");\n+\n   /* Unlock the stdio streams.  */\n   unlock_std_streams ();\n \n@@ -1816,7 +1814,7 @@ collect_wait (const char *prog, struct pex_obj *pex)\n \t  error (\"%s terminated with signal %d [%s]%s\",\n \t\t prog, sig, strsignal(sig),\n \t\t WCOREDUMP(status) ? \", core dumped\" : \"\");\n-\t  collect_exit (FATAL_EXIT_CODE);\n+\t  exit (FATAL_EXIT_CODE);\n \t}\n \n       if (WIFEXITED (status))\n@@ -1832,7 +1830,7 @@ do_wait (const char *prog, struct pex_obj *pex)\n   if (ret != 0)\n     {\n       error (\"%s returned %d exit status\", prog, ret);\n-      collect_exit (ret);\n+      exit (ret);\n     }\n \n   if (response_file)"}, {"sha": "2385e4a981325b9d78b426ccead3a062deb84ae6", "filename": "gcc/collect2.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1f9340b007679e863f99d26c29fd6ee2ddbd92e/gcc%2Fcollect2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1f9340b007679e863f99d26c29fd6ee2ddbd92e/gcc%2Fcollect2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.h?ref=e1f9340b007679e863f99d26c29fd6ee2ddbd92e", "patch": "@@ -25,8 +25,6 @@ extern void do_tlink (char **, char **);\n extern struct pex_obj *collect_execute (const char *, char **, const char *,\n \t\t\t\t\tconst char *, int flags);\n \n-extern void collect_exit (int) ATTRIBUTE_NORETURN;\n-\n extern int collect_wait (const char *, struct pex_obj *);\n \n extern void dump_ld_file (const char *, FILE *);"}, {"sha": "8365bd3cfa14a2b64c960440dc99a545ff791a43", "filename": "gcc/tlink.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1f9340b007679e863f99d26c29fd6ee2ddbd92e/gcc%2Ftlink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1f9340b007679e863f99d26c29fd6ee2ddbd92e/gcc%2Ftlink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftlink.c?ref=e1f9340b007679e863f99d26c29fd6ee2ddbd92e", "patch": "@@ -817,18 +817,18 @@ scan_linker_output (const char *fname)\n void\n do_tlink (char **ld_argv, char **object_lst ATTRIBUTE_UNUSED)\n {\n-  int exit = tlink_execute (\"ld\", ld_argv, ldout, lderrout);\n+  int ret = tlink_execute (\"ld\", ld_argv, ldout, lderrout);\n \n   tlink_init ();\n \n-  if (exit)\n+  if (ret)\n     {\n       int i = 0;\n \n       /* Until collect does a better job of figuring out which are object\n \t files, assume that everything on the command line could be.  */\n       if (read_repo_files (ld_argv))\n-\twhile (exit && i++ < MAX_ITERATIONS)\n+\twhile (ret && i++ < MAX_ITERATIONS)\n \t  {\n \t    if (tlink_verbose >= 3)\n \t      {\n@@ -843,18 +843,18 @@ do_tlink (char **ld_argv, char **object_lst ATTRIBUTE_UNUSED)\n \t      break;\n \t    if (tlink_verbose)\n \t      fprintf (stderr, _(\"collect: relinking\\n\"));\n-\t    exit = tlink_execute (\"ld\", ld_argv, ldout, lderrout);\n+\t    ret = tlink_execute (\"ld\", ld_argv, ldout, lderrout);\n \t  }\n     }\n \n   dump_ld_file (ldout, stdout);\n   unlink (ldout);\n   dump_ld_file (lderrout, stderr);\n   unlink (lderrout);\n-  if (exit)\n+  if (ret)\n     {\n-      error (\"ld returned %d exit status\", exit);\n-      collect_exit (exit);\n+      error (\"ld returned %d exit status\", ret);\n+      exit (ret);\n     }\n   else\n     {"}]}