{"sha": "7b00e31d1e201bdc2fb6518b8866bb0851261c7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2IwMGUzMWQxZTIwMWJkYzJmYjY1MThiODg2NmJiMDg1MTI2MWM3Yg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-13T12:24:23Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-13T12:24:23Z"}, "message": "[multiple changes]\n\n2009-07-13  Robert Dewar  <dewar@adacore.com>\n\n\t* prj.ads, prj-dect.adb, prj-err.ads, prj-err.adb, prj-nmsc.adb,\n\tprj-strt.ads: Minor reformatting\n\n2009-07-13  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_dist.adb (Build_From_Any_Call): For the case of a generic type,\n\tset the type of the From_Any call to the base type.\n\n2009-07-13  Doug Rupp  <rupp@adacore.com>\n\n\t* symbols-processing-vms-ia64.adb (Process): Add variables and\n\tconstants to retrieve and check for symbol visibility.\n\n2009-07-13  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_ch4.adb (Expand_N_Unchecked_Type_Conversion): If conversion is to\n\tthe identical type we remove the conversion completely because\n\tit is useless.\n\nFrom-SVN: r149575", "tree": {"sha": "19c848f498fd1aeb18d050c15ec9536a48e2a910", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19c848f498fd1aeb18d050c15ec9536a48e2a910"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b00e31d1e201bdc2fb6518b8866bb0851261c7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b00e31d1e201bdc2fb6518b8866bb0851261c7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b00e31d1e201bdc2fb6518b8866bb0851261c7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b00e31d1e201bdc2fb6518b8866bb0851261c7b/comments", "author": null, "committer": null, "parents": [{"sha": "0e41a941ee11651b5805c730d2675902d64577aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e41a941ee11651b5805c730d2675902d64577aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e41a941ee11651b5805c730d2675902d64577aa"}], "stats": {"total": 186, "additions": 118, "deletions": 68}, "files": [{"sha": "520a80690143b0a4aff73ac5850a6f97a1dcbce1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b00e31d1e201bdc2fb6518b8866bb0851261c7b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b00e31d1e201bdc2fb6518b8866bb0851261c7b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7b00e31d1e201bdc2fb6518b8866bb0851261c7b", "patch": "@@ -1,3 +1,24 @@\n+2009-07-13  Robert Dewar  <dewar@adacore.com>\n+\n+\t* prj.ads, prj-dect.adb, prj-err.ads, prj-err.adb, prj-nmsc.adb,\n+\tprj-strt.ads: Minor reformatting\n+\n+2009-07-13  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_dist.adb (Build_From_Any_Call): For the case of a generic type,\n+\tset the type of the From_Any call to the base type.\n+\n+2009-07-13  Doug Rupp  <rupp@adacore.com>\n+\n+\t* symbols-processing-vms-ia64.adb (Process): Add variables and\n+\tconstants to retrieve and check for symbol visibility.\n+\n+2009-07-13  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_N_Unchecked_Type_Conversion): If conversion is to\n+\tthe identical type we remove the conversion completely because\n+\tit is useless.\n+\n 2009-07-13  Emmanuel Briot  <briot@adacore.com>\n \n \t* prj-err.adb (Error_Msg): One more case where a message should be"}, {"sha": "624c8780537a8aa68715ac00c010bb50c18f9e9f", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b00e31d1e201bdc2fb6518b8866bb0851261c7b/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b00e31d1e201bdc2fb6518b8866bb0851261c7b/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=7b00e31d1e201bdc2fb6518b8866bb0851261c7b", "patch": "@@ -7919,6 +7919,13 @@ package body Exp_Ch4 is\n       --  the conversion completely, it is useless.\n \n       if Operand_Type = Target_Type then\n+\n+         --  Propagate Assignment_OK attribute to the operand\n+\n+         if Assignment_OK (N) then\n+            Set_Assignment_OK (Operand);\n+         end if;\n+\n          Rewrite (N, Relocate_Node (Operand));\n          return;\n       end if;\n@@ -8506,6 +8513,21 @@ package body Exp_Ch4 is\n       Operand_Type : constant Entity_Id := Etype (Operand);\n \n    begin\n+      --  Nothing at all to do if conversion is to the identical type so remove\n+      --  the conversion completely, it is useless.\n+\n+      if Operand_Type = Target_Type then\n+\n+         --  Propagate Assignment_OK attribute to the operand\n+\n+         if Assignment_OK (N) then\n+            Set_Assignment_OK (Operand);\n+         end if;\n+\n+         Rewrite (N, Relocate_Node (Operand));\n+         return;\n+      end if;\n+\n       --  If we have a conversion of a compile time known value to a target\n       --  type and the value is in range of the target type, then we can simply\n       --  replace the construct by an integer literal of the correct type. We"}, {"sha": "b1e776637d351a1bd8f2dfa3953a0efd409bfbff", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b00e31d1e201bdc2fb6518b8866bb0851261c7b/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b00e31d1e201bdc2fb6518b8866bb0851261c7b/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=7b00e31d1e201bdc2fb6518b8866bb0851261c7b", "patch": "@@ -8617,17 +8617,16 @@ package body Exp_Dist is\n             else\n                declare\n                   Decl : Entity_Id;\n-                  Typ  : Entity_Id := U_Type;\n \n                begin\n                   --  For the subtype representing a generic actual type, go\n                   --  to the base type.\n \n-                  if Is_Generic_Actual_Type (Typ) then\n-                     Typ := Base_Type (Typ);\n+                  if Is_Generic_Actual_Type (U_Type) then\n+                     U_Type := Base_Type (U_Type);\n                   end if;\n \n-                  Build_From_Any_Function (Loc, Typ, Decl, Fnam);\n+                  Build_From_Any_Function (Loc, U_Type, Decl, Fnam);\n                   Append_To (Decls, Decl);\n                end;\n             end if;"}, {"sha": "b55a7edeeb794382d9edc6e6590f0bb73bd08063", "filename": "gcc/ada/prj-dect.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b00e31d1e201bdc2fb6518b8866bb0851261c7b/gcc%2Fada%2Fprj-dect.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b00e31d1e201bdc2fb6518b8866bb0851261c7b/gcc%2Fada%2Fprj-dect.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-dect.adb?ref=7b00e31d1e201bdc2fb6518b8866bb0851261c7b", "patch": "@@ -79,10 +79,9 @@ package body Prj.Dect is\n       Packages_To_Check : String_List_Access;\n       Is_Config_File    : Boolean;\n       Flags             : Processing_Flags);\n-   --  Parse declarative items. Depending on In_Zone, some declarative\n-   --  items may be forbidden.\n-   --  Is_Config_File should be set to True if the project represents a config\n-   --  file (.cgpr) since some specific checks apply.\n+   --  Parse declarative items. Depending on In_Zone, some declarative items\n+   --  may be forbidden. Is_Config_File should be set to True if the project\n+   --  represents a config file (.cgpr) since some specific checks apply.\n \n    procedure Parse_Package_Declaration\n      (In_Tree             : Project_Node_Tree_Ref;"}, {"sha": "8e0d5627a6794e197981f45add1a864201f6c0d1", "filename": "gcc/ada/prj-err.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b00e31d1e201bdc2fb6518b8866bb0851261c7b/gcc%2Fada%2Fprj-err.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b00e31d1e201bdc2fb6518b8866bb0851261c7b/gcc%2Fada%2Fprj-err.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-err.adb?ref=7b00e31d1e201bdc2fb6518b8866bb0851261c7b", "patch": "@@ -99,9 +99,11 @@ package body Prj.Err is\n       end if;\n \n       if Real_Location = No_Location then\n+\n          --  If still null, we are parsing a project that was created in-memory\n          --  so we shouldn't report errors for projects that the user has no\n          --  access to in any case.\n+\n          return;\n       end if;\n \n@@ -115,7 +117,7 @@ package body Prj.Err is\n       if Flags.Report_Error /= null then\n          Flags.Report_Error\n            (Project,\n-            Is_Warning => Msg (Msg'First) = '?' or Msg (Msg'First) = '<');\n+            Is_Warning => Msg (Msg'First) = '?' or else Msg (Msg'First) = '<');\n       end if;\n    end Error_Msg;\n "}, {"sha": "d07285ecb2d6e959b827239bab5d3e114e30a385", "filename": "gcc/ada/prj-err.ads", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b00e31d1e201bdc2fb6518b8866bb0851261c7b/gcc%2Fada%2Fprj-err.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b00e31d1e201bdc2fb6518b8866bb0851261c7b/gcc%2Fada%2Fprj-err.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-err.ads?ref=7b00e31d1e201bdc2fb6518b8866bb0851261c7b", "patch": "@@ -73,11 +73,10 @@ package Prj.Err is\n       Location : Source_Ptr := No_Location;\n       Project  : Project_Id := null);\n    --  Output an error message, either through Flags.Error_Report or through\n-   --  Errutil. The location defaults to the project's location (\"project\" in\n-   --  the source code).\n-   --  If Msg starts with \"?\", this is a warning, and Warning: is added at the\n-   --  beginning. If Msg starts with \"<\", see comment for\n-   --  Err_Vars.Error_Msg_Warn\n+   --  Errutil. The location defaults to the project's location (\"project\"\n+   --  in the source code). If Msg starts with \"?\", this is a warning, and\n+   --  Warning: is added at the beginning. If Msg starts with \"<\", see comment\n+   --  for Err_Vars.Error_Msg_Warn.\n \n    -------------\n    -- Scanner --"}, {"sha": "7b04af75e69eed655979a9eed9035185045f21c6", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 18, "deletions": 17, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b00e31d1e201bdc2fb6518b8866bb0851261c7b/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b00e31d1e201bdc2fb6518b8866bb0851261c7b/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=7b00e31d1e201bdc2fb6518b8866bb0851261c7b", "patch": "@@ -196,13 +196,13 @@ package body Prj.Nmsc is\n       Kind                : Source_Kind;\n       File_Name           : File_Name_Type;\n       Display_File        : File_Name_Type;\n-      Naming_Exception    : Boolean := False;\n+      Naming_Exception    : Boolean          := False;\n       Path                : Path_Information := No_Path_Information;\n-      Alternate_Languages : Language_List := null;\n-      Unit                : Name_Id    := No_Name;\n-      Index               : Int        := 0;\n-      Locally_Removed     : Boolean    := False;\n-      Location            : Source_Ptr := No_Location);\n+      Alternate_Languages : Language_List    := null;\n+      Unit                : Name_Id          := No_Name;\n+      Index               : Int              := 0;\n+      Locally_Removed     : Boolean          := False;\n+      Location            : Source_Ptr       := No_Location);\n    --  Add a new source to the different lists: list of all sources in the\n    --  project tree, list of source of a project and list of sources of a\n    --  language.\n@@ -539,19 +539,20 @@ package body Prj.Nmsc is\n       Kind                : Source_Kind;\n       File_Name           : File_Name_Type;\n       Display_File        : File_Name_Type;\n-      Naming_Exception    : Boolean := False;\n+      Naming_Exception    : Boolean          := False;\n       Path                : Path_Information := No_Path_Information;\n-      Alternate_Languages : Language_List := null;\n-      Unit                : Name_Id    := No_Name;\n-      Index               : Int        := 0;\n-      Locally_Removed     : Boolean    := False;\n-      Location            : Source_Ptr := No_Location)\n+      Alternate_Languages : Language_List    := null;\n+      Unit                : Name_Id          := No_Name;\n+      Index               : Int              := 0;\n+      Locally_Removed     : Boolean          := False;\n+      Location            : Source_Ptr       := No_Location)\n    is\n       Config    : constant Language_Config := Lang_Id.Config;\n       UData     : Unit_Index;\n       Add_Src   : Boolean;\n       Source    : Source_Id;\n       Prev_Unit : Unit_Index := No_Unit_Index;\n+\n       Source_To_Replace : Source_Id := No_Source;\n \n    begin\n@@ -619,12 +620,12 @@ package body Prj.Nmsc is\n                end if;\n             end if;\n \n-            --  Do not allow the same unit name in different projects,\n-            --  except if one is extending the other.\n+            --  Do not allow the same unit name in different projects, except\n+            --  if one is extending the other.\n \n-            --  For a file based language, the same file name replaces\n-            --  a file in a project being extended, but it is allowed\n-            --  to have the same file name in unrelated projects.\n+            --  For a file based language, the same file name replaces a file\n+            --  in a project being extended, but it is allowed to have the same\n+            --  file name in unrelated projects.\n \n          elsif Is_Extending (Project, Source.Project) then\n             if not Locally_Removed then"}, {"sha": "7dbe5302781f49f4ad95cff0babdd97b5096e833", "filename": "gcc/ada/prj-strt.ads", "status": "modified", "additions": 28, "deletions": 30, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b00e31d1e201bdc2fb6518b8866bb0851261c7b/gcc%2Fada%2Fprj-strt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b00e31d1e201bdc2fb6518b8866bb0851261c7b/gcc%2Fada%2Fprj-strt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-strt.ads?ref=7b00e31d1e201bdc2fb6518b8866bb0851261c7b", "patch": "@@ -37,10 +37,10 @@ private package Prj.Strt is\n    --  On entry, the current token is the first literal string following\n    --  a left parenthesis in a string type declaration such as:\n    --    type Toto is (\"string_1\", \"string_2\", \"string_3\");\n-   --  On exit, the current token is the right parenthesis.\n-   --  The parameter First_String is a node that contained the first\n-   --  literal string of the string type, linked with the following\n-   --  literal strings.\n+   --\n+   --  On exit, the current token is the right parenthesis. The parameter\n+   --  First_String is a node that contained the first literal string of the\n+   --  string type, linked with the following literal strings.\n    --\n    --  Report an error if\n    --    - a literal string is not found at the beginning of the list\n@@ -50,24 +50,22 @@ private package Prj.Strt is\n    procedure Start_New_Case_Construction\n      (In_Tree     : Project_Node_Tree_Ref;\n       String_Type : Project_Node_Id);\n-   --  This procedure is called at the beginning of a case construction\n-   --  The parameter String_Type is the node for the string type\n-   --  of the case label variable.\n-   --  The different literal strings of the string type are stored\n-   --  into a table to be checked against the case labels of the\n-   --  case construction.\n+   --  This procedure is called at the beginning of a case construction The\n+   --  parameter String_Type is the node for the string type of the case label\n+   --  variable. The different literal strings of the string type are stored\n+   --  into a table to be checked against the case labels of the case\n+   --  construction.\n \n    procedure End_Case_Construction\n      (Check_All_Labels   : Boolean;\n       Case_Location      : Source_Ptr;\n       Flags              : Processing_Flags);\n-   --  This procedure is called at the end of a case construction\n-   --  to remove the case labels and to restore the previous state.\n-   --  In particular, in the case of nested case constructions,\n-   --  the case labels of the enclosing case construction are restored.\n-   --  When When_Others is False and we are not in quiet output, a warning\n-   --  is emitted for each value of the case variable string type that has\n-   --  not been specified.\n+   --  This procedure is called at the end of a case construction to remove the\n+   --  case labels and to restore the previous state. In particular, in the\n+   --  case of nested case constructions, the case labels of the enclosing case\n+   --  construction are restored. When When_Others is False and we are not in\n+   --  quiet output, a warning is emitted for each value of the case variable\n+   --  string type that has not been specified.\n \n    procedure Parse_Choice_List\n      (In_Tree      : Project_Node_Tree_Ref;\n@@ -86,26 +84,26 @@ private package Prj.Strt is\n       Current_Package : Project_Node_Id;\n       Optional_Index  : Boolean;\n       Flags           : Processing_Flags);\n-   --  Parse a simple string expression or a string list expression.\n-   --  Current_Project is the node of the project file being parsed.\n-   --  Current_Package is the node of the package being parsed,\n-   --  or Empty_Node when we are at the project level (not in a package).\n-   --  On exit, Expression is the node of the expression that has\n-   --  been parsed.\n+   --  Parse a simple string expression or a string list expression\n+   --\n+   --  Current_Project is the node of the project file being parsed\n+   --\n+   --  Current_Package is the node of the package being parsed, or Empty_Node\n+   --  when we are at the project level (not in a package). On exit, Expression\n+   --  is the node of the expression that has been parsed.\n \n    procedure Parse_Variable_Reference\n      (In_Tree         : Project_Node_Tree_Ref;\n       Variable        : out Project_Node_Id;\n       Current_Project : Project_Node_Id;\n       Current_Package : Project_Node_Id;\n       Flags           : Processing_Flags);\n-   --  Parse a variable or attribute reference.\n-   --  Used internally (in expressions) and for case variables (in Prj.Dect).\n-   --  Current_Package is the node of the package being parsed,\n-   --  or Empty_Node when we are at the project level (not in a package).\n-   --  On exit, Variable is the node of the variable or attribute reference.\n-   --  A variable reference is made of one to three simple names.\n-   --  An attribute reference is made of one or two simple names,\n+   --  Parse variable or attribute reference. Used internally (in expressions)\n+   --  and for case variables (in Prj.Dect). Current_Package is the node of the\n+   --  package being parsed, or Empty_Node when we are at the project level\n+   --  (not in a package). On exit, Variable is the node of the variable or\n+   --  attribute reference. A variable reference is made of one to three simple\n+   --  names. An attribute reference is made of one or two simple names,\n    --  followed by an apostrophe, followed by the attribute simple name.\n \n end Prj.Strt;"}, {"sha": "ff2e01f0e49acde5888a9817865802e2278485f2", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b00e31d1e201bdc2fb6518b8866bb0851261c7b/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b00e31d1e201bdc2fb6518b8866bb0851261c7b/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=7b00e31d1e201bdc2fb6518b8866bb0851261c7b", "patch": "@@ -1362,12 +1362,13 @@ package Prj is\n    --    - Error:   issue an error, causes the tool to fail\n \n    type Error_Handler is access procedure\n-     (Project : Project_Id; Is_Warning : Boolean);\n+     (Project    : Project_Id;\n+      Is_Warning : Boolean);\n    --  This warngs when an error was found when parsing a project. The error\n-   --  itself is handled through Prj.Err (and you should call\n-   --  Prj.Err.Finalize to actually print the error). This ensures that\n-   --  duplicate error messages are always correctly removed, that errors msgs\n-   --  are sorted, and that all tools will report the same error to the user.\n+   --  itself is handled through Prj.Err (and Prj.Err.Finalize should be called\n+   --  to actually print the error). This ensures that duplicate error messages\n+   --  are always correctly removed, that errors msgs are sorted, and that all\n+   --  tools will report the same error to the user.\n \n    function Create_Flags\n      (Report_Error               : Error_Handler;"}, {"sha": "beb099e40b098926fb575af9016c75fe5c7d04c7", "filename": "gcc/ada/symbols-processing-vms-ia64.adb", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b00e31d1e201bdc2fb6518b8866bb0851261c7b/gcc%2Fada%2Fsymbols-processing-vms-ia64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b00e31d1e201bdc2fb6518b8866bb0851261c7b/gcc%2Fada%2Fsymbols-processing-vms-ia64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsymbols-processing-vms-ia64.adb?ref=7b00e31d1e201bdc2fb6518b8866bb0851261c7b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -85,9 +85,14 @@ package body Processing is\n \n       Stname  : Integer;\n       Stinfo  : Character;\n+      Stother : Character;\n       Sttype  : Integer;\n       Stbind  : Integer;\n       Stshndx : Integer;\n+      Stvis   : Integer;\n+\n+      STV_Internal : constant := 1;\n+      STV_Hidden   : constant := 2;\n \n       Section_Headers : Section_Header_Ptr;\n \n@@ -340,18 +345,21 @@ package body Processing is\n       while Offset < End_Symtab loop\n          Get_Word (Stname);\n          Get_Byte (Stinfo);\n-         Get_Byte (B);\n+         Get_Byte (Stother);\n          Get_Half (Stshndx);\n          for J in 1 .. 4 loop\n             Get_Word (W);\n          end loop;\n \n          Sttype := Integer'(Character'Pos (Stinfo)) mod 16;\n          Stbind := Integer'(Character'Pos (Stinfo)) / 16;\n+         Stvis  := Integer'(Character'Pos (Stother)) mod 4;\n \n          if (Sttype = 1 or else Sttype = 2)\n               and then Stbind /= 0\n               and then Stshndx /= 0\n+              and then Stvis /= STV_Internal\n+              and then Stvis /= STV_Hidden\n          then\n             --  Check if this is a symbol from a generic body\n "}]}