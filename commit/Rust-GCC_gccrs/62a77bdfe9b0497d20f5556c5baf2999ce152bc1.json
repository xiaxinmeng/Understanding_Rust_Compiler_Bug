{"sha": "62a77bdfe9b0497d20f5556c5baf2999ce152bc1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJhNzdiZGZlOWIwNDk3ZDIwZjU1NTZjNWJhZjI5OTljZTE1MmJjMQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2017-05-05T21:05:15Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2017-05-05T21:05:15Z"}, "message": "Convert diagnostic_override_option_index from macro to inline function\n\ngcc/ChangeLog:\n\t* diagnostic.h (diagnostic_override_option_index): Convert from\n\tmacro to inline function.\n\nFrom-SVN: r247665", "tree": {"sha": "786acf80ee343832b9bb888d00438bcfc6eb2f20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/786acf80ee343832b9bb888d00438bcfc6eb2f20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62a77bdfe9b0497d20f5556c5baf2999ce152bc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62a77bdfe9b0497d20f5556c5baf2999ce152bc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62a77bdfe9b0497d20f5556c5baf2999ce152bc1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62a77bdfe9b0497d20f5556c5baf2999ce152bc1/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "26d5ed6ceaddb1ca32b34d556e57f082eb38a967", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26d5ed6ceaddb1ca32b34d556e57f082eb38a967", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26d5ed6ceaddb1ca32b34d556e57f082eb38a967"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "05f68fd7b490351b177e78216be835984ac42c48", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62a77bdfe9b0497d20f5556c5baf2999ce152bc1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62a77bdfe9b0497d20f5556c5baf2999ce152bc1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=62a77bdfe9b0497d20f5556c5baf2999ce152bc1", "patch": "@@ -1,3 +1,8 @@\n+2017-05-05  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* diagnostic.h (diagnostic_override_option_index): Convert from\n+\tmacro to inline function.\n+\n 2017-05-05  David Malcolm  <dmalcolm@redhat.com>\n \n \t* diagnostic.c (last_module_changed_p): New function."}, {"sha": "c419b000f1615c613517179cf358f3129d9b16c4", "filename": "gcc/diagnostic.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62a77bdfe9b0497d20f5556c5baf2999ce152bc1/gcc%2Fdiagnostic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62a77bdfe9b0497d20f5556c5baf2999ce152bc1/gcc%2Fdiagnostic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.h?ref=62a77bdfe9b0497d20f5556c5baf2999ce152bc1", "patch": "@@ -270,8 +270,12 @@ extern diagnostic_context *global_dc;\n \n /* Override the option index to be used for reporting a\n    diagnostic.  */\n-#define diagnostic_override_option_index(DI, OPTIDX) \\\n-    ((DI)->option_index = (OPTIDX))\n+\n+static inline void\n+diagnostic_override_option_index (diagnostic_info *info, int optidx)\n+{\n+  info->option_index = optidx;\n+}\n \n /* Diagnostic related functions.  */\n extern void diagnostic_initialize (diagnostic_context *, int);"}]}