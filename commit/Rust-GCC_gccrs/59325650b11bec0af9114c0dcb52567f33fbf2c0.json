{"sha": "59325650b11bec0af9114c0dcb52567f33fbf2c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTkzMjU2NTBiMTFiZWMwYWY5MTE0YzBkY2I1MjU2N2YzM2ZiZjJjMA==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.co.uk", "date": "2003-04-24T20:03:57Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2003-04-24T20:03:57Z"}, "message": "cpplex.c (cpp_token_len): Tighten up.\n\n\t* cpplex.c (cpp_token_len): Tighten up.\n\t(cpp_token_as_text): Need extra byte now.\n\t* cpplib.c (glue_header_name): Need extra 2 bytes.\n\t* cppmacro.c (cpp_macro_definition): Need extra byte.\n\nFrom-SVN: r66049", "tree": {"sha": "fa1856ed3c0f3b53ff1a4cafc1fbd79f60892a66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa1856ed3c0f3b53ff1a4cafc1fbd79f60892a66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59325650b11bec0af9114c0dcb52567f33fbf2c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59325650b11bec0af9114c0dcb52567f33fbf2c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59325650b11bec0af9114c0dcb52567f33fbf2c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59325650b11bec0af9114c0dcb52567f33fbf2c0/comments", "author": {"login": "neilb-xx", "id": 160762, "node_id": "MDQ6VXNlcjE2MDc2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/160762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neilb-xx", "html_url": "https://github.com/neilb-xx", "followers_url": "https://api.github.com/users/neilb-xx/followers", "following_url": "https://api.github.com/users/neilb-xx/following{/other_user}", "gists_url": "https://api.github.com/users/neilb-xx/gists{/gist_id}", "starred_url": "https://api.github.com/users/neilb-xx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neilb-xx/subscriptions", "organizations_url": "https://api.github.com/users/neilb-xx/orgs", "repos_url": "https://api.github.com/users/neilb-xx/repos", "events_url": "https://api.github.com/users/neilb-xx/events{/privacy}", "received_events_url": "https://api.github.com/users/neilb-xx/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b746b8cb0a67a45e05da62c250a778033a1a9195", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b746b8cb0a67a45e05da62c250a778033a1a9195", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b746b8cb0a67a45e05da62c250a778033a1a9195"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "89ba2f8d203784bda909f8f77ed56112c42bc6c0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59325650b11bec0af9114c0dcb52567f33fbf2c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59325650b11bec0af9114c0dcb52567f33fbf2c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=59325650b11bec0af9114c0dcb52567f33fbf2c0", "patch": "@@ -1,3 +1,10 @@\n+2003-04-24  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* cpplex.c (cpp_token_len): Tighten up.\n+\t(cpp_token_as_text): Need extra byte now.\n+\t* cpplib.c (glue_header_name): Need extra 2 bytes.\n+\t* cppmacro.c (cpp_macro_definition): Need extra byte.\n+\n 2003-04-24  Alexander Kabaev <kan@FreeBSD.ORG>\n \n \t* config/sparc/sparc.md (umulsidi3, mulsidi3): Avoid using"}, {"sha": "4f0767e42c8eaa916340d2433ebb999fdba2018d", "filename": "gcc/cpplex.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59325650b11bec0af9114c0dcb52567f33fbf2c0/gcc%2Fcpplex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59325650b11bec0af9114c0dcb52567f33fbf2c0/gcc%2Fcpplex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplex.c?ref=59325650b11bec0af9114c0dcb52567f33fbf2c0", "patch": "@@ -1094,8 +1094,8 @@ _cpp_lex_direct (pfile)\n   return result;\n }\n \n-/* An upper bound on the number of bytes needed to spell TOKEN,\n-   including preceding whitespace.  */\n+/* An upper bound on the number of bytes needed to spell TOKEN.\n+   Does not include preceding whitespace.  */\n unsigned int\n cpp_token_len (token)\n      const cpp_token *token;\n@@ -1104,12 +1104,12 @@ cpp_token_len (token)\n \n   switch (TOKEN_SPELL (token))\n     {\n-    default:\t\tlen = 0;\t\t\t\tbreak;\n+    default:\t\tlen = 4;\t\t\t\tbreak;\n     case SPELL_LITERAL:\tlen = token->val.str.len;\t\tbreak;\n     case SPELL_IDENT:\tlen = NODE_LEN (token->val.node);\tbreak;\n     }\n-  /* 1 for whitespace, 4 for comment delimiters.  */\n-  return len + 5;\n+\n+  return len;\n }\n \n /* Write the spelling of a token TOKEN to BUFFER.  The buffer must\n@@ -1167,8 +1167,8 @@ unsigned char *\n cpp_token_as_text (pfile, token)\n      cpp_reader *pfile;\n      const cpp_token *token;\n-{\n-  unsigned int len = cpp_token_len (token);\n+{ \n+  unsigned int len = cpp_token_len (token) + 1;\n   unsigned char *start = _cpp_unaligned_alloc (pfile, len), *end;\n \n   end = cpp_spell_token (pfile, token, start);"}, {"sha": "271aa5d487b6ac08825b800c435ac6095d68dc05", "filename": "gcc/cpplib.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59325650b11bec0af9114c0dcb52567f33fbf2c0/gcc%2Fcpplib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59325650b11bec0af9114c0dcb52567f33fbf2c0/gcc%2Fcpplib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.c?ref=59325650b11bec0af9114c0dcb52567f33fbf2c0", "patch": "@@ -594,7 +594,7 @@ glue_header_name (pfile)\n \t  break;\n \t}\n \n-      len = cpp_token_len (token);\n+      len = cpp_token_len (token) + 2; /* Leading space, terminating \\0.  */\n       if (total_len + len > capacity)\n \t{\n \t  capacity = (capacity + len) * 2;"}, {"sha": "f77f6b36837430acfb303e60f3d49d09560262c1", "filename": "gcc/cppmacro.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59325650b11bec0af9114c0dcb52567f33fbf2c0/gcc%2Fcppmacro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59325650b11bec0af9114c0dcb52567f33fbf2c0/gcc%2Fcppmacro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppmacro.c?ref=59325650b11bec0af9114c0dcb52567f33fbf2c0", "patch": "@@ -1715,7 +1715,7 @@ cpp_macro_definition (pfile, node)\n \t  if (token->type == CPP_MACRO_ARG)\n \t    len += NODE_LEN (macro->params[token->val.arg_no - 1]);\n \t  else\n-\t    len += cpp_token_len (token); /* Includes room for ' '.  */\n+\t    len += cpp_token_len (token) + 1; /* Includes room for ' '.  */\n \t  if (token->flags & STRINGIFY_ARG)\n \t    len++;\t\t\t/* \"#\" */\n \t  if (token->flags & PASTE_LEFT)"}]}