{"sha": "10ebf5fe407fda5d092f23e50b26272d13bb1106", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBlYmY1ZmU0MDdmZGE1ZDA5MmYyM2U1MGIyNjI3MmQxM2JiMTEwNg==", "commit": {"author": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2000-11-22T19:17:14Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2000-11-22T19:17:14Z"}, "message": "gcc.c (validate_switches): Validate multiple switches named in '|' (or) expressions in specs.\n\n        * gcc.c (validate_switches): Validate multiple switches named\n        in '|' (or) expressions in specs.\n        (handle_braces): If more than 1 alternative in a '|' spec\n        matches, call do_spec1 just once.\n\nFrom-SVN: r37667", "tree": {"sha": "6ac492e3e33761ee32ecc7a71fcec680adf93216", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ac492e3e33761ee32ecc7a71fcec680adf93216"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10ebf5fe407fda5d092f23e50b26272d13bb1106", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10ebf5fe407fda5d092f23e50b26272d13bb1106", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10ebf5fe407fda5d092f23e50b26272d13bb1106", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10ebf5fe407fda5d092f23e50b26272d13bb1106/comments", "author": null, "committer": null, "parents": [{"sha": "4f3d0af4a41b74fde1447a0c6081e20b55e8476c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f3d0af4a41b74fde1447a0c6081e20b55e8476c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f3d0af4a41b74fde1447a0c6081e20b55e8476c"}], "stats": {"total": 36, "additions": 27, "deletions": 9}, "files": [{"sha": "d6187a58354f0f5b0630812b827b61255857a9e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10ebf5fe407fda5d092f23e50b26272d13bb1106/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10ebf5fe407fda5d092f23e50b26272d13bb1106/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=10ebf5fe407fda5d092f23e50b26272d13bb1106", "patch": "@@ -1,3 +1,11 @@\n+2000-11-22  Chris Demetriou  <cgd@sibyte.com>  \n+2000-11-22  Neil Booth  <neilb@earthling.net>\n+\n+        * gcc.c (validate_switches): Validate multiple switches named\n+        in '|' (or) expressions in specs.  \n+        (handle_braces): If more than 1 alternative in a '|' spec\n+        matches, call do_spec1 just once.\n+\n 2000-11-22  Michael Meissner  <meissner@redhat.com>\n \n \t* d30v.h (TARGET_SWITCHES): Add documentation strings."}, {"sha": "074cd6a633bc0ed57f4ee8813dbc0460f688b048", "filename": "gcc/gcc.c", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10ebf5fe407fda5d092f23e50b26272d13bb1106/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10ebf5fe407fda5d092f23e50b26272d13bb1106/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=10ebf5fe407fda5d092f23e50b26272d13bb1106", "patch": "@@ -4720,6 +4720,7 @@ handle_braces (p)\n {\n   const char *filter, *body = NULL, *endbody = NULL;\n   int pipe_p = 0;\n+  int true_once = 0;\t/* If, in %{a|b:d}, at least one of a,b was seen.  */\n   int negate;\n   int suffix;\n   int include_blanks = 1;\n@@ -4924,11 +4925,8 @@ handle_braces (p)\n \t      give_switch (i, 0, include_blanks);\n \t    }\n \t  else\n-\t    {\n-\t      if (do_spec_1 (save_string (body, endbody - body - 1),\n-\t\t\t     0, NULL_PTR) < 0)\n-\t\treturn 0;\n-\t    }\n+\t    /* Even if many alternatives are matched, only output once.  */\n+\t    true_once = 1;\n \t}\n       else if (pipe_p)\n \t{\n@@ -4943,6 +4941,14 @@ handle_braces (p)\n   if (*p++ == '|')\n     goto next_member;\n \n+  /* Process the spec just once, regardless of match count.  */\n+  if (true_once)\n+    {\n+      if (do_spec_1 (save_string (body, endbody - body - 1),\n+\t\t     0, NULL_PTR) < 0)\n+\treturn 0;\n+    }\n+\n   return endbody;\n }\n \f\n@@ -5938,29 +5944,30 @@ validate_switches (start)\n   register const char *p = start;\n   const char *filter;\n   register int i;\n-  int suffix = 0;\n+  int suffix;\n \n   if (*p == '|')\n     ++p;\n \n+next_member:\n   if (*p == '!')\n     ++p;\n \n+  suffix = 0;\n   if (*p == '.')\n     suffix = 1, ++p;\n \n   filter = p;\n-  while (*p != ':' && *p != '}')\n+  while (*p != ':' && *p != '}' && *p != '|')\n     p++;\n \n   if (suffix)\n     ;\n   else if (p[-1] == '*')\n     {\n       /* Mark all matching switches as valid.  */\n-      --p;\n       for (i = 0; i < n_switches; i++)\n-\tif (!strncmp (switches[i].part1, filter, p - filter))\n+\tif (!strncmp (switches[i].part1, filter, p - filter - 1))\n \t  switches[i].validated = 1;\n     }\n   else\n@@ -5973,6 +5980,9 @@ validate_switches (start)\n \t    switches[i].validated = 1;\n \t}\n     }\n+\n+  if (*p++ == '|')\n+    goto next_member;\n }\n \f\n /* Check whether a particular argument was used.  The first time we"}]}