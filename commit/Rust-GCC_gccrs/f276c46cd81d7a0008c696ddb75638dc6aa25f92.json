{"sha": "f276c46cd81d7a0008c696ddb75638dc6aa25f92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI3NmM0NmNkODFkN2EwMDA4YzY5NmRkYjc1NjM4ZGM2YWEyNWY5Mg==", "commit": {"author": {"name": "Henry Linjam\u00e4ki", "email": "henry.linjamaki@parmance.com", "date": "2017-09-28T15:29:07Z"}, "committer": {"name": "Pekka J\u00e4\u00e4skel\u00e4inen", "email": "visit0r@gcc.gnu.org", "date": "2017-09-28T15:29:07Z"}, "message": "[BRIGFE] Changed pure attributes to const for the brig-builtins\nthat are actually const.\n\nAlso:\n* Fixed brig-lang.c such that the builtin attributes actually\n  have effect...\n* Made -O3 the default optimization level for BRIG.\n\nFrom-SVN: r253254", "tree": {"sha": "5b5a01851c89b143aa7ec7663621fc61d906b795", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b5a01851c89b143aa7ec7663621fc61d906b795"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f276c46cd81d7a0008c696ddb75638dc6aa25f92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f276c46cd81d7a0008c696ddb75638dc6aa25f92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f276c46cd81d7a0008c696ddb75638dc6aa25f92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f276c46cd81d7a0008c696ddb75638dc6aa25f92/comments", "author": null, "committer": null, "parents": [{"sha": "2caf41096411bfe76c54df77ca24724eab0f53c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2caf41096411bfe76c54df77ca24724eab0f53c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2caf41096411bfe76c54df77ca24724eab0f53c9"}], "stats": {"total": 328, "additions": 239, "deletions": 89}, "files": [{"sha": "21feae7cfd0e3e8292df7bdbad092f50d67d14b7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f276c46cd81d7a0008c696ddb75638dc6aa25f92/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f276c46cd81d7a0008c696ddb75638dc6aa25f92/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f276c46cd81d7a0008c696ddb75638dc6aa25f92", "patch": "@@ -1,3 +1,7 @@\n+2017-09-28  Henry Linjam\u00e4ki  <henry.linjamaki@parmance.com>\n+\n+\t* brig-builtins.def: Change pure attributes to const.\n+\n 2017-09-28  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config.gcc (default_gnu_indirect_function): Default to yes for"}, {"sha": "c2d84225f4097ec9c0ceb717a1b7c4adc6af2865", "filename": "gcc/brig-builtins.def", "status": "modified", "additions": 100, "deletions": 89, "changes": 189, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f276c46cd81d7a0008c696ddb75638dc6aa25f92/gcc%2Fbrig-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f276c46cd81d7a0008c696ddb75638dc6aa25f92/gcc%2Fbrig-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbrig-builtins.def?ref=f276c46cd81d7a0008c696ddb75638dc6aa25f92", "patch": "@@ -107,136 +107,136 @@ DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_GRIDGROUPS, BRIG_OPCODE_GRIDGROUPS,\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_BITEXTRACT_S32, BRIG_OPCODE_BITEXTRACT,\n \t\t  BRIG_TYPE_S32, \"__hsail_bitextract_s32\",\n-\t\t  BT_FN_INT_INT_UINT_UINT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  BT_FN_INT_INT_UINT_UINT, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_BITEXTRACT_U32, BRIG_OPCODE_BITEXTRACT,\n \t\t  BRIG_TYPE_U32, \"__hsail_bitextract_u32\",\n-\t\t  BT_FN_UINT_UINT_UINT_UINT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  BT_FN_UINT_UINT_UINT_UINT, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_BITEXTRACT_S64, BRIG_OPCODE_BITEXTRACT,\n \t\t  BRIG_TYPE_S64, \"__hsail_bitextract_s64\",\n-\t\t  BT_FN_LONG_LONG_UINT_UINT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  BT_FN_LONG_LONG_UINT_UINT, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_BITEXTRACT_U64, BRIG_OPCODE_BITEXTRACT,\n \t\t  BRIG_TYPE_U64, \"__hsail_bitextract_u64\",\n-\t\t  BT_FN_ULONG_ULONG_UINT_UINT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  BT_FN_ULONG_ULONG_UINT_UINT, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_BITINSERT_U32, BRIG_OPCODE_BITINSERT,\n \t\t  BRIG_TYPE_U32, \"__hsail_bitinsert_u32\",\n-\t\t  BT_FN_UINT_UINT_UINT_UINT_UINT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  BT_FN_UINT_UINT_UINT_UINT_UINT, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_BITINSERT_U64, BRIG_OPCODE_BITINSERT,\n \t\t  BRIG_TYPE_U64, \"__hsail_bitinsert_u64\",\n \t\t  BT_FN_ULONG_ULONG_ULONG_UINT_UINT,\n-\t\t  ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_BITMASK_B32, BRIG_OPCODE_BITMASK,\n \t\t  BRIG_TYPE_B32, \"__hsail_bitmask_u32\", BT_FN_UINT_UINT_UINT,\n-\t\t  ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_BITMASK_B64, BRIG_OPCODE_BITMASK,\n \t\t  BRIG_TYPE_B64, \"__hsail_bitmask_u64\", BT_FN_ULONG_UINT_UINT,\n-\t\t  ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_BITREV_B32, BRIG_OPCODE_BITREV,\n \t\t  BRIG_TYPE_B32, \"__hsail_bitrev_u32\", BT_FN_UINT_UINT,\n-\t\t  ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_BITREV_B64, BRIG_OPCODE_BITREV,\n \t\t  BRIG_TYPE_B64, \"__hsail_bitrev_u64\", BT_FN_ULONG_ULONG,\n-\t\t  ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_BITSELECT_B32, BRIG_OPCODE_BITSELECT,\n \t\t  BRIG_TYPE_B32, \"__hsail_bitselect_u32\",\n-\t\t  BT_FN_UINT_UINT_UINT_UINT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  BT_FN_UINT_UINT_UINT_UINT, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_BITSELECT_U64, BRIG_OPCODE_BITSELECT,\n \t\t  BRIG_TYPE_B64, \"__hsail_bitselect_u64\",\n-\t\t  BT_FN_ULONG_ULONG_ULONG_ULONG, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  BT_FN_ULONG_ULONG_ULONG_ULONG, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_FIRSTBIT_U32, BRIG_OPCODE_FIRSTBIT,\n \t\t  BRIG_TYPE_U32, \"__hsail_firstbit_u32\", BT_FN_UINT_UINT,\n-\t\t  ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_FIRSTBIT_S32, BRIG_OPCODE_FIRSTBIT,\n \t\t  BRIG_TYPE_S32, \"__hsail_firstbit_s32\", BT_FN_UINT_INT,\n-\t\t  ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_FIRSTBIT_U64, BRIG_OPCODE_FIRSTBIT,\n \t\t  BRIG_TYPE_U64, \"__hsail_firstbit_u64\", BT_FN_UINT_ULONG,\n-\t\t  ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_FIRSTBIT_S64, BRIG_OPCODE_FIRSTBIT,\n \t\t  BRIG_TYPE_S64, \"__hsail_firstbit_s64\", BT_FN_UINT_LONG,\n-\t\t  ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_LASTBIT_U32, BRIG_OPCODE_LASTBIT,\n \t\t  BRIG_TYPE_U32, \"__hsail_lastbit_u32\", BT_FN_UINT_UINT,\n-\t\t  ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_LASTBIT_U64, BRIG_OPCODE_LASTBIT,\n \t\t  BRIG_TYPE_U64, \"__hsail_lastbit_u64\", BT_FN_UINT_ULONG,\n-\t\t  ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_BORROW_U32, BRIG_OPCODE_BORROW,\n \t\t  BRIG_TYPE_U32, \"__hsail_borrow_u32\", BT_FN_UINT_UINT_UINT,\n-\t\t  ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_BORROW_U64, BRIG_OPCODE_BORROW,\n \t\t  BRIG_TYPE_U64, \"__hsail_borrow_u64\", BT_FN_ULONG_ULONG_ULONG,\n-\t\t  ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_CARRY_U32, BRIG_OPCODE_CARRY,\n \t\t  BRIG_TYPE_U32, \"__hsail_carry_u32\", BT_FN_UINT_UINT_UINT,\n-\t\t  ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_CARRY_U64, BRIG_OPCODE_CARRY,\n \t\t  BRIG_TYPE_U64, \"__hsail_carry_u64\", BT_FN_ULONG_ULONG_ULONG,\n-\t\t  ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_REM_S32, BRIG_OPCODE_REM,\n \t\t  BRIG_TYPE_S32, \"__hsail_rem_s32\", BT_FN_INT_INT_INT,\n-\t\t  ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_REM_S64, BRIG_OPCODE_REM,\n \t\t  BRIG_TYPE_S64, \"__hsail_rem_s64\", BT_FN_LONG_LONG_LONG,\n-\t\t  ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_MIN_F32, BRIG_OPCODE_MIN,\n \t\t  BRIG_TYPE_F32, \"__hsail_min_f32\", BT_FN_FLOAT_FLOAT_FLOAT,\n-\t\t  ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_MAX_F32, BRIG_OPCODE_MAX,\n \t\t  BRIG_TYPE_F32, \"__hsail_max_f32\", BT_FN_FLOAT_FLOAT_FLOAT,\n-\t\t  ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_MIN_F64, BRIG_OPCODE_MIN,\n \t\t  BRIG_TYPE_F64, \"__hsail_min_f64\", BT_FN_DOUBLE_DOUBLE_DOUBLE,\n-\t\t  ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_MAX_F64, BRIG_OPCODE_MAX,\n \t\t  BRIG_TYPE_F64, \"__hsail_max_f64\", BT_FN_DOUBLE_DOUBLE_DOUBLE,\n-\t\t  ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_CLASS_F32, BRIG_OPCODE_CLASS,\n \t\t  BRIG_TYPE_F32, \"__hsail_class_f32\", BT_FN_UINT_FLOAT_UINT,\n-\t\t  ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_CLASS_F64, BRIG_OPCODE_CLASS,\n \t\t  BRIG_TYPE_F64, \"__hsail_class_f64\", BT_FN_UINT_DOUBLE_UINT,\n-\t\t  ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_CLASS_F32_F16, BRIG_OPCODE_CLASS,\n-\t\t  BRIG_TYPE_F16, \"__hsail_class_f32_f16\", BT_FN_UINT_FLOAT_UINT,\n-\t\t  ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  BRIG_TYPE_F16, \"__hsail_class_f32_f16\",\n+\t\t  BT_FN_UINT_FLOAT_UINT, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_FRACT_F32, BRIG_OPCODE_FRACT,\n \t\t  BRIG_TYPE_F32, \"__hsail_fract_f32\", BT_FN_FLOAT_FLOAT,\n-\t\t  ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_FRACT_F64, BRIG_OPCODE_FRACT,\n \t\t  BRIG_TYPE_F64, \"__hsail_fract_f64\", BT_FN_DOUBLE_DOUBLE,\n-\t\t  ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_BARRIER, BRIG_OPCODE_BARRIER,\n \t\t  BRIG_TYPE_NONE, \"__hsail_barrier\", BT_FN_VOID_PTR,\n@@ -268,41 +268,41 @@ DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_RELEASEFBAR, BRIG_OPCODE_RELEASEFBAR,\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_BITALIGN, BRIG_OPCODE_BITALIGN,\n \t\t  BRIG_TYPE_B32, \"__hsail_bitalign\",\n-\t\t  BT_FN_UINT_ULONG_ULONG_UINT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  BT_FN_UINT_ULONG_ULONG_UINT, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_BYTEALIGN, BRIG_OPCODE_BYTEALIGN,\n \t\t  BRIG_TYPE_B32, \"__hsail_bytealign\",\n-\t\t  BT_FN_UINT_ULONG_ULONG_UINT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  BT_FN_UINT_ULONG_ULONG_UINT, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_LERP, BRIG_OPCODE_LERP,\n \t\t  BRIG_TYPE_U8X4, \"__hsail_lerp\", BT_FN_UINT_UINT_UINT_UINT,\n-\t\t  ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_PACKCVT, BRIG_OPCODE_PACKCVT,\n \t\t  BRIG_TYPE_U8X4, \"__hsail_packcvt\",\n \t\t  BT_FN_UINT_FLOAT_FLOAT_FLOAT_FLOAT,\n-\t\t  ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_UNPACKCVT, BRIG_OPCODE_UNPACKCVT,\n \t\t  BRIG_TYPE_F32, \"__hsail_unpackcvt\", BT_FN_FLOAT_UINT_UINT,\n-\t\t  ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_SAD_U16X2, BRIG_OPCODE_SAD,\n \t\t  BRIG_TYPE_U16X2, \"__hsail_sad_u16x2\",\n-\t\t  BT_FN_UINT_UINT_UINT_UINT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  BT_FN_UINT_UINT_UINT_UINT, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_SAD_U32, BRIG_OPCODE_SAD,\n \t\t  BRIG_TYPE_U32, \"__hsail_sad_u32\", BT_FN_UINT_UINT_UINT_UINT,\n-\t\t  ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_SAD_U8X4, BRIG_OPCODE_SAD,\n-\t\t  BRIG_TYPE_U8X4, \"__hsail_sad_u8x4\", BT_FN_UINT_UINT_UINT_UINT,\n-\t\t  ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  BRIG_TYPE_U8X4, \"__hsail_sad_u8x4\",\n+\t\t  BT_FN_UINT_UINT_UINT_UINT, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_SADHI_U8X4, BRIG_OPCODE_SADHI,\n \t\t  BRIG_TYPE_U16X2, \"__hsail_sadhi_u16x2_u8x4\",\n \t\t  BT_FN_UINT_UINT_UINT_UINT,\n-\t\t  ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t  ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_BUILTIN (BUILT_IN_HSAIL_CLOCK, BRIG_OPCODE_CLOCK,\n \t\t  BRIG_TYPE_U64, \"__hsail_clock\", BT_FN_ULONG,\n@@ -447,112 +447,112 @@ DEF_HSAIL_ATOMIC_BUILTIN (BUILT_IN_HSAIL_ATOMIC_WRAPINC_U64,\n \n DEF_HSAIL_SAT_BUILTIN (BUILT_IN_HSAIL_SAT_ADD_U64, BRIG_OPCODE_ADD,\n \t\t      BRIG_TYPE_U64, \"__hsail_sat_add_u64\",\n-\t\t      BT_FN_ULONG_ULONG_ULONG, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t      BT_FN_ULONG_ULONG_ULONG, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_SAT_BUILTIN (BUILT_IN_HSAIL_SAT_ADD_S64, BRIG_OPCODE_ADD,\n \t\t      BRIG_TYPE_S64, \"__hsail_sat_add_s64\",\n-\t\t      BT_FN_LONG_LONG_LONG, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t      BT_FN_LONG_LONG_LONG, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_SAT_BUILTIN (BUILT_IN_HSAIL_SAT_ADD_U32, BRIG_OPCODE_ADD,\n \t\t      BRIG_TYPE_U32, \"__hsail_sat_add_u32\",\n-\t\t      BT_FN_UINT_UINT_UINT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t      BT_FN_UINT_UINT_UINT, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_SAT_BUILTIN (BUILT_IN_HSAIL_SAT_ADD_S32, BRIG_OPCODE_ADD,\n \t\t      BRIG_TYPE_S32, \"__hsail_sat_add_s32\",\n-\t\t      BT_FN_INT_INT_INT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t      BT_FN_INT_INT_INT, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_SAT_BUILTIN (BUILT_IN_HSAIL_SAT_ADD_U16, BRIG_OPCODE_ADD,\n \t\t      BRIG_TYPE_U16, \"__hsail_sat_add_u16\",\n-\t\t      BT_FN_UINT16_UINT16_UINT16, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t      BT_FN_UINT16_UINT16_UINT16, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_SAT_BUILTIN (BUILT_IN_HSAIL_SAT_ADD_S16, BRIG_OPCODE_ADD,\n \t\t      BRIG_TYPE_S16, \"__hsail_sat_add_s16\",\n-\t\t      BT_FN_INT16_INT16_INT16, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t      BT_FN_INT16_INT16_INT16, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_SAT_BUILTIN (BUILT_IN_HSAIL_SAT_ADD_U8, BRIG_OPCODE_ADD,\n \t\t      BRIG_TYPE_U8, \"__hsail_sat_add_u8\",\n-\t\t      BT_FN_UINT8_UINT8_UINT8, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t      BT_FN_UINT8_UINT8_UINT8, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_SAT_BUILTIN (BUILT_IN_HSAIL_SAT_ADD_S8, BRIG_OPCODE_ADD,\n \t\t      BRIG_TYPE_S8, \"__hsail_sat_add_s8\",\n-\t\t      BT_FN_INT8_INT8_INT8, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t      BT_FN_INT8_INT8_INT8, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_SAT_BUILTIN (BUILT_IN_HSAIL_SAT_SUB_U64, BRIG_OPCODE_SUB,\n \t\t      BRIG_TYPE_U64, \"__hsail_sat_sub_u64\",\n-\t\t      BT_FN_ULONG_ULONG_ULONG, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t      BT_FN_ULONG_ULONG_ULONG, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_SAT_BUILTIN (BUILT_IN_HSAIL_SAT_SUB_S64, BRIG_OPCODE_SUB,\n \t\t      BRIG_TYPE_S64, \"__hsail_sat_sub_s64\",\n-\t\t      BT_FN_LONG_LONG_LONG, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t      BT_FN_LONG_LONG_LONG, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_SAT_BUILTIN (BUILT_IN_HSAIL_SAT_SUB_U32, BRIG_OPCODE_SUB,\n \t\t      BRIG_TYPE_U32, \"__hsail_sat_sub_u32\",\n-\t\t      BT_FN_UINT_UINT_UINT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t      BT_FN_UINT_UINT_UINT, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_SAT_BUILTIN (BUILT_IN_HSAIL_SAT_SUB_S32, BRIG_OPCODE_SUB,\n \t\t      BRIG_TYPE_S32, \"__hsail_sat_sub_s32\",\n-\t\t      BT_FN_INT_INT_INT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t      BT_FN_INT_INT_INT, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_SAT_BUILTIN (BUILT_IN_HSAIL_SAT_SUB_U16, BRIG_OPCODE_SUB,\n \t\t      BRIG_TYPE_U16, \"__hsail_sat_sub_u16\",\n-\t\t      BT_FN_UINT16_UINT16_UINT16, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t      BT_FN_UINT16_UINT16_UINT16, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_SAT_BUILTIN (BUILT_IN_HSAIL_SAT_SUB_S16, BRIG_OPCODE_SUB,\n \t\t      BRIG_TYPE_S16, \"__hsail_sat_sub_s16\",\n-\t\t      BT_FN_INT16_INT16_INT16, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t      BT_FN_INT16_INT16_INT16, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_SAT_BUILTIN (BUILT_IN_HSAIL_SAT_SUB_U8, BRIG_OPCODE_SUB,\n \t\t      BRIG_TYPE_U8, \"__hsail_sat_sub_u8\",\n-\t\t      BT_FN_UINT8_UINT8_UINT8, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t      BT_FN_UINT8_UINT8_UINT8, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_SAT_BUILTIN (BUILT_IN_HSAIL_SAT_SUB_S8, BRIG_OPCODE_SUB,\n \t\t      BRIG_TYPE_S8, \"__hsail_sat_sub_s8\",\n-\t\t      BT_FN_INT8_INT8_INT8, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t      BT_FN_INT8_INT8_INT8, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_SAT_BUILTIN (BUILT_IN_HSAIL_SAT_MUL_U64, BRIG_OPCODE_MUL,\n \t\t      BRIG_TYPE_U64, \"__hsail_sat_mul_u64\",\n-\t\t      BT_FN_ULONG_ULONG_ULONG, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t      BT_FN_ULONG_ULONG_ULONG, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_SAT_BUILTIN (BUILT_IN_HSAIL_SAT_MUL_S64, BRIG_OPCODE_MUL,\n \t\t      BRIG_TYPE_S64, \"__hsail_sat_mul_s64\",\n-\t\t      BT_FN_LONG_LONG_LONG, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t      BT_FN_LONG_LONG_LONG, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_SAT_BUILTIN (BUILT_IN_HSAIL_SAT_MUL_U32, BRIG_OPCODE_MUL,\n \t\t      BRIG_TYPE_U32, \"__hsail_sat_mul_u32\",\n-\t\t      BT_FN_UINT_UINT_UINT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t      BT_FN_UINT_UINT_UINT, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_SAT_BUILTIN (BUILT_IN_HSAIL_SAT_MUL_S32, BRIG_OPCODE_MUL,\n \t\t      BRIG_TYPE_S32, \"__hsail_sat_mul_s32\",\n-\t\t      BT_FN_INT_INT_INT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t      BT_FN_INT_INT_INT, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_SAT_BUILTIN (BUILT_IN_HSAIL_SAT_MUL_U16, BRIG_OPCODE_MUL,\n \t\t      BRIG_TYPE_U16, \"__hsail_sat_mul_u16\",\n-\t\t      BT_FN_UINT16_UINT16_UINT16, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t      BT_FN_UINT16_UINT16_UINT16, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_SAT_BUILTIN (BUILT_IN_HSAIL_SAT_MUL_S16, BRIG_OPCODE_MUL,\n \t\t      BRIG_TYPE_S16, \"__hsail_sat_mul_s16\",\n-\t\t      BT_FN_INT16_INT16_INT16, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t      BT_FN_INT16_INT16_INT16, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_SAT_BUILTIN (BUILT_IN_HSAIL_SAT_MUL_U8, BRIG_OPCODE_MUL,\n \t\t      BRIG_TYPE_U8, \"__hsail_sat_mul_u8\",\n-\t\t      BT_FN_UINT8_UINT8_UINT8, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t      BT_FN_UINT8_UINT8_UINT8, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_SAT_BUILTIN (BUILT_IN_HSAIL_SAT_MUL_S8, BRIG_OPCODE_MUL,\n \t\t      BRIG_TYPE_S8, \"__hsail_sat_mul_s8\",\n-\t\t      BT_FN_INT8_INT8_INT8, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t      BT_FN_INT8_INT8_INT8, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n #ifndef DEF_HSAIL_INTR_BUILTIN\n #define DEF_HSAIL_INTR_BUILTIN(ENUM, NAME, TYPE, ATTRS)\n #endif\n \n DEF_HSAIL_INTR_BUILTIN (BUILT_IN_HSAIL_FTZ_F32_F16, \"__hsail_ftz_f32_f16\",\n-\t\t       BT_FN_FLOAT_FLOAT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t       BT_FN_FLOAT_FLOAT, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_INTR_BUILTIN (BUILT_IN_HSAIL_FTZ_F32, \"__hsail_ftz_f32\",\n-\t\t       BT_FN_FLOAT_FLOAT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t       BT_FN_FLOAT_FLOAT, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_INTR_BUILTIN (BUILT_IN_HSAIL_FTZ_F64, \"__hsail_ftz_f64\",\n-\t\t       BT_FN_DOUBLE_DOUBLE, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t       BT_FN_DOUBLE_DOUBLE, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_INTR_BUILTIN (BUILT_IN_HSAIL_PUSH_FRAME, \"__hsail_alloca_push_frame\",\n \t\t       BT_FN_VOID_PTR, ATTR_NOTHROW_LEAF_LIST)\n@@ -572,10 +572,10 @@ DEF_HSAIL_INTR_BUILTIN (BUILT_IN_HSAIL_LAUNCH_KERNEL,\n \t\t       BT_FN_VOID_PTR_PTR_PTR, ATTR_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_INTR_BUILTIN (BUILT_IN_HSAIL_F32_TO_F16, \"__hsail_f32_to_f16\",\n-\t\t       BT_FN_UINT16_UINT32, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t       BT_FN_UINT16_UINT32, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_INTR_BUILTIN (BUILT_IN_HSAIL_F16_TO_F32, \"__hsail_f16_to_f32\",\n-\t\t       BT_FN_UINT32_UINT16, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t       BT_FN_UINT32_UINT16, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n #ifndef DEF_HSAIL_CVT_ZEROI_SAT_BUILTIN\n #define DEF_HSAIL_CVT_ZEROI_SAT_BUILTIN(ENUM, HSAIL_DEST_TYPE, HSAIL_SRC_TYPE, \\\n@@ -585,79 +585,90 @@ DEF_HSAIL_INTR_BUILTIN (BUILT_IN_HSAIL_F16_TO_F32, \"__hsail_f16_to_f32\",\n DEF_HSAIL_CVT_ZEROI_SAT_BUILTIN (BUILT_IN_HSAIL_CVT_ZEROI_SAT_U8_F32,\n \t\t\t\tBRIG_TYPE_U8, BRIG_TYPE_F32,\n \t\t       \t\t\"__hsail_cvt_zeroi_sat_u8_f32\",\n-\t\t\t\tBT_FN_UINT8_FLOAT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t\t\tBT_FN_UINT8_FLOAT,\n+\t\t\t\tATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_CVT_ZEROI_SAT_BUILTIN (BUILT_IN_HSAIL_CVT_ZEROI_SAT_S8_F32,\n \t\t\t\tBRIG_TYPE_S8, BRIG_TYPE_F32,\n \t\t       \t\t\"__hsail_cvt_zeroi_sat_s8_f32\",\n-\t\t\t\tBT_FN_INT8_FLOAT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t\t\tBT_FN_INT8_FLOAT, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_CVT_ZEROI_SAT_BUILTIN (BUILT_IN_HSAIL_CVT_ZEROI_SAT_U16_F32,\n \t\t\t\tBRIG_TYPE_U16, BRIG_TYPE_F32,\n \t\t       \t\t\"__hsail_cvt_zeroi_sat_u16_f32\",\n-\t\t\t\tBT_FN_UINT16_FLOAT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t\t\tBT_FN_UINT16_FLOAT,\n+\t\t\t\tATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_CVT_ZEROI_SAT_BUILTIN (BUILT_IN_HSAIL_CVT_ZEROI_SAT_S16_F32,\n \t\t\t\tBRIG_TYPE_S16, BRIG_TYPE_F32,\n \t\t       \t\t\"__hsail_cvt_zeroi_sat_s16_f32\",\n-\t\t\t\tBT_FN_INT16_FLOAT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t\t\tBT_FN_INT16_FLOAT,\n+\t\t\t\tATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_CVT_ZEROI_SAT_BUILTIN (BUILT_IN_HSAIL_CVT_ZEROI_SAT_U32_F32,\n \t\t\t\tBRIG_TYPE_U32, BRIG_TYPE_F32,\n \t\t       \t\t\"__hsail_cvt_zeroi_sat_u32_f32\",\n-\t\t\t\tBT_FN_UINT32_FLOAT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t\t\tBT_FN_UINT32_FLOAT,\n+\t\t\t\tATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_CVT_ZEROI_SAT_BUILTIN (BUILT_IN_HSAIL_CVT_ZEROI_SAT_S32_F32,\n \t\t\t\tBRIG_TYPE_S32, BRIG_TYPE_F32,\n \t\t       \t\t\"__hsail_cvt_zeroi_sat_s32_f32\",\n-\t\t\t\tBT_FN_INT_FLOAT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t\t\tBT_FN_INT_FLOAT, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_CVT_ZEROI_SAT_BUILTIN (BUILT_IN_HSAIL_CVT_ZEROI_SAT_U64_F32,\n \t\t\t\tBRIG_TYPE_U64, BRIG_TYPE_F32,\n \t\t       \t\t\"__hsail_cvt_zeroi_sat_u64_f32\",\n-\t\t\t\tBT_FN_UINT64_FLOAT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t\t\tBT_FN_UINT64_FLOAT,\n+\t\t\t\tATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_CVT_ZEROI_SAT_BUILTIN (BUILT_IN_HSAIL_CVT_ZEROI_SAT_S64_F32,\n \t\t\t\tBRIG_TYPE_S64, BRIG_TYPE_F32,\n \t\t       \t\t\"__hsail_cvt_zeroi_sat_s64_f32\",\n-\t\t\t\tBT_FN_LONG_FLOAT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t\t\tBT_FN_LONG_FLOAT, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_CVT_ZEROI_SAT_BUILTIN (BUILT_IN_HSAIL_CVT_ZEROI_SAT_U8_F64,\n \t\t\t\tBRIG_TYPE_U8, BRIG_TYPE_F64,\n \t\t       \t\t\"__hsail_cvt_zeroi_sat_u8_f64\",\n-\t\t\t\tBT_FN_UINT8_FLOAT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t\t\tBT_FN_UINT8_FLOAT,\n+\t\t\t\tATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_CVT_ZEROI_SAT_BUILTIN (BUILT_IN_HSAIL_CVT_ZEROI_SAT_S8_F64,\n \t\t\t\tBRIG_TYPE_S8, BRIG_TYPE_F64,\n \t\t       \t\t\"__hsail_cvt_zeroi_sat_s8_f64\",\n-\t\t\t\tBT_FN_INT8_FLOAT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t\t\tBT_FN_INT8_FLOAT, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_CVT_ZEROI_SAT_BUILTIN (BUILT_IN_HSAIL_CVT_ZEROI_SAT_U16_F64,\n \t\t\t\tBRIG_TYPE_U16, BRIG_TYPE_F64,\n \t\t       \t\t\"__hsail_cvt_zeroi_sat_u16_f64\",\n-\t\t\t\tBT_FN_UINT16_FLOAT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t\t\tBT_FN_UINT16_FLOAT,\n+\t\t\t\tATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_CVT_ZEROI_SAT_BUILTIN (BUILT_IN_HSAIL_CVT_ZEROI_SAT_S16_F64,\n \t\t\t\tBRIG_TYPE_S16, BRIG_TYPE_F64,\n \t\t       \t\t\"__hsail_cvt_zeroi_sat_s16_f64\",\n-\t\t\t\tBT_FN_INT16_FLOAT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t\t\tBT_FN_INT16_FLOAT,\n+\t\t\t\tATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_CVT_ZEROI_SAT_BUILTIN (BUILT_IN_HSAIL_CVT_ZEROI_SAT_U32_F64,\n \t\t\t\tBRIG_TYPE_U32, BRIG_TYPE_F64,\n \t\t       \t\t\"__hsail_cvt_zeroi_sat_u32_f64\",\n-\t\t\t\tBT_FN_UINT32_FLOAT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t\t\tBT_FN_UINT32_FLOAT,\n+\t\t\t\tATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_CVT_ZEROI_SAT_BUILTIN (BUILT_IN_HSAIL_CVT_ZEROI_SAT_S32_F64,\n \t\t\t\tBRIG_TYPE_S32, BRIG_TYPE_F64,\n \t\t       \t\t\"__hsail_cvt_zeroi_sat_s32_f64\",\n-\t\t\t\tBT_FN_INT_FLOAT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t\t\tBT_FN_INT_FLOAT, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_CVT_ZEROI_SAT_BUILTIN (BUILT_IN_HSAIL_CVT_ZEROI_SAT_U64_F64,\n \t\t\t\tBRIG_TYPE_U64, BRIG_TYPE_F64,\n \t\t       \t\t\"__hsail_cvt_zeroi_sat_u64_f64\",\n-\t\t\t\tBT_FN_UINT64_FLOAT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t\t\tBT_FN_UINT64_FLOAT,\n+\t\t\t\tATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_HSAIL_CVT_ZEROI_SAT_BUILTIN (BUILT_IN_HSAIL_CVT_ZEROI_SAT_S64_F64,\n \t\t\t\tBRIG_TYPE_S64, BRIG_TYPE_F64,\n \t\t       \t\t\"__hsail_cvt_zeroi_sat_s64_f64\",\n-\t\t\t\tBT_FN_LONG_FLOAT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+\t\t\t\tBT_FN_LONG_FLOAT,\n+\t\t\t\tATTR_CONST_NOTHROW_LEAF_LIST)"}, {"sha": "fb2b09d70e40aaebcfa875c1aeebd4c9dc3e9882", "filename": "gcc/brig/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f276c46cd81d7a0008c696ddb75638dc6aa25f92/gcc%2Fbrig%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f276c46cd81d7a0008c696ddb75638dc6aa25f92/gcc%2Fbrig%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbrig%2FChangeLog?ref=f276c46cd81d7a0008c696ddb75638dc6aa25f92", "patch": "@@ -1,3 +1,8 @@\n+2017-09-28  Henry Linjam\u00e4ki  <henry.linjamaki@parmance.com>\n+\n+\t* brig-lang.c: Added function attributes and their handlers.\n+\tMake BRIGFE 3-level optimize by default.\n+\n 2017-09-27  Pekka J\u00e4\u00e4skel\u00e4inen  <pekka.jaaskelainen@parmance.com>\n \n \t* brig-lang.c: Improved support for function and module scope"}, {"sha": "970214b3a3fb2193b1253dc02f5cc57ddf24ece9", "filename": "gcc/brig/brig-lang.c", "status": "modified", "additions": 130, "deletions": 0, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f276c46cd81d7a0008c696ddb75638dc6aa25f92/gcc%2Fbrig%2Fbrig-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f276c46cd81d7a0008c696ddb75638dc6aa25f92/gcc%2Fbrig%2Fbrig-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbrig%2Fbrig-lang.c?ref=f276c46cd81d7a0008c696ddb75638dc6aa25f92", "patch": "@@ -51,6 +51,12 @@ along with GCC; see the file COPYING3.  If not see\n #include \"brig-c.h\"\n #include \"brig-builtins.h\"\n \n+static tree handle_leaf_attribute (tree *, tree, tree, int, bool *);\n+static tree handle_const_attribute (tree *, tree, tree, int, bool *);\n+static tree handle_pure_attribute (tree *, tree, tree, int, bool *);\n+static tree handle_nothrow_attribute (tree *, tree, tree, int, bool *);\n+static tree handle_returns_twice_attribute (tree *, tree, tree, int, bool *);\n+\n /* This file is based on Go frontent'd go-lang.c and gogo-tree.cc.  */\n \n /* If -v set.  */\n@@ -128,6 +134,8 @@ brig_langhook_init_options_struct (struct gcc_options *opts)\n \n   opts->x_flag_finite_math_only = 0;\n   opts->x_flag_signed_zeros = 1;\n+\n+  opts->x_optimize = 3;\n }\n \n /* Handle Brig specific options.  Return 0 if we didn't do anything.  */\n@@ -432,6 +440,124 @@ brig_localize_identifier (const char *ident)\n   return identifier_to_locale (ident);\n }\n \n+/* Define supported attributes and their handlers. Code copied from\n+   lto-lang.c */\n+\n+/* Table of machine-independent attributes supported in GIMPLE.  */\n+const struct attribute_spec brig_attribute_table[] =\n+{\n+  /* { name, min_len, max_len, decl_req, type_req, fn_type_req, handler,\n+       do_diagnostic } */\n+  { \"leaf\",\t\t      0, 0, true,  false, false,\n+\t\t\t      handle_leaf_attribute, false },\n+  { \"const\",                  0, 0, true,  false, false,\n+\t\t\t      handle_const_attribute, false },\n+  { \"pure\",                   0, 0, true,  false, false,\n+\t\t\t      handle_pure_attribute, false },\n+  { \"nothrow\",                0, 0, true,  false, false,\n+\t\t\t      handle_nothrow_attribute, false },\n+  { \"returns_twice\",          0, 0, true,  false, false,\n+\t\t\t      handle_returns_twice_attribute, false },\n+  { NULL,                     0, 0, false, false, false, NULL, false }\n+};\n+\n+/* Attribute handlers.  */\n+/* Handle a \"leaf\" attribute; arguments as in\n+   struct attribute_spec.handler.  */\n+\n+static tree\n+handle_leaf_attribute (tree *node, tree name,\n+\t\t       tree ARG_UNUSED (args),\n+\t\t       int ARG_UNUSED (flags), bool *no_add_attrs)\n+{\n+  if (TREE_CODE (*node) != FUNCTION_DECL)\n+    {\n+      warning (OPT_Wattributes, \"%qE attribute ignored\", name);\n+      *no_add_attrs = true;\n+    }\n+  if (!TREE_PUBLIC (*node))\n+    {\n+      warning (OPT_Wattributes,\n+\t       \"%qE attribute has no effect on unit local functions\", name);\n+      *no_add_attrs = true;\n+    }\n+\n+  return NULL_TREE;\n+}\n+\n+/* Handle a \"const\" attribute; arguments as in\n+   struct attribute_spec.handler.  */\n+\n+static tree\n+handle_const_attribute (tree *node, tree ARG_UNUSED (name),\n+\t\t\ttree ARG_UNUSED (args), int ARG_UNUSED (flags),\n+\t\t\tbool * ARG_UNUSED (no_add_attrs))\n+{\n+  tree type = TREE_TYPE (*node);\n+\n+  /* See FIXME comment on noreturn in c_common_attribute_table.  */\n+  if (TREE_CODE (*node) == FUNCTION_DECL)\n+    TREE_READONLY (*node) = 1;\n+  else if (TREE_CODE (type) == POINTER_TYPE\n+\t   && TREE_CODE (TREE_TYPE (type)) == FUNCTION_TYPE)\n+    TREE_TYPE (*node)\n+      = build_pointer_type\n+\t(build_type_variant (TREE_TYPE (type), 1,\n+\t\t\t     TREE_THIS_VOLATILE (TREE_TYPE (type))));\n+  else\n+    gcc_unreachable ();\n+\n+  return NULL_TREE;\n+}\n+\n+/* Handle a \"pure\" attribute; arguments as in\n+   struct attribute_spec.handler.  */\n+\n+static tree\n+handle_pure_attribute (tree *node, tree ARG_UNUSED (name),\n+\t\t       tree ARG_UNUSED (args), int ARG_UNUSED (flags),\n+\t\t       bool * ARG_UNUSED (no_add_attrs))\n+{\n+  if (TREE_CODE (*node) == FUNCTION_DECL)\n+    DECL_PURE_P (*node) = 1;\n+  else\n+    gcc_unreachable ();\n+\n+  return NULL_TREE;\n+}\n+\n+/* Handle a \"nothrow\" attribute; arguments as in\n+   struct attribute_spec.handler.  */\n+\n+static tree\n+handle_nothrow_attribute (tree *node, tree ARG_UNUSED (name),\n+\t\t\t  tree ARG_UNUSED (args), int ARG_UNUSED (flags),\n+\t\t\t  bool * ARG_UNUSED (no_add_attrs))\n+{\n+  if (TREE_CODE (*node) == FUNCTION_DECL)\n+    TREE_NOTHROW (*node) = 1;\n+  else\n+    gcc_unreachable ();\n+\n+  return NULL_TREE;\n+}\n+\n+/* Handle a \"returns_twice\" attribute.  */\n+\n+static tree\n+handle_returns_twice_attribute (tree *node, tree ARG_UNUSED (name),\n+\t\t\t\ttree ARG_UNUSED (args),\n+\t\t\t\tint ARG_UNUSED (flags),\n+\t\t\t\tbool * ARG_UNUSED (no_add_attrs))\n+{\n+  gcc_assert (TREE_CODE (*node) == FUNCTION_DECL);\n+\n+  DECL_IS_RETURNS_TWICE (*node) = 1;\n+\n+  return NULL_TREE;\n+}\n+\n+\n /* Built-in initialization code cribbed from lto-lang.c which cribbed it\n    from c-common.c.  */\n \n@@ -814,6 +940,10 @@ brig_langhook_init (void)\n #define LANG_HOOKS_GIMPLIFY_EXPR brig_langhook_gimplify_expr\n #define LANG_HOOKS_EH_PERSONALITY brig_langhook_eh_personality\n \n+/* Attribute hooks.  */\n+#undef LANG_HOOKS_COMMON_ATTRIBUTE_TABLE\n+#define LANG_HOOKS_COMMON_ATTRIBUTE_TABLE brig_attribute_table\n+\n struct lang_hooks lang_hooks = LANG_HOOKS_INITIALIZER;\n \n #include \"gt-brig-brig-lang.h\""}]}