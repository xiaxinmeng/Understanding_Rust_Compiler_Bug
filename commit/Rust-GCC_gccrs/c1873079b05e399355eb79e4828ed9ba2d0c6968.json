{"sha": "c1873079b05e399355eb79e4828ed9ba2d0c6968", "node_id": "C_kwDOANBUbNoAKGMxODczMDc5YjA1ZTM5OTM1NWViNzllNDgyOGVkOWJhMmQwYzY5Njg", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2023-03-06T09:43:13Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2023-03-06T10:26:19Z"}, "message": "tree-optimization/109025 - fixup double reduction detection\n\nThe following closes a gap in double reduction detection where we\nin the outer loop analysis fail to verify the inner LC PHI use is\nthe latch definition of the inner loop PHI.  That latch definition\nis used to detect that an inner loop is part of a double reduction\nwhen later doing the inner loop analysis.\n\n\tPR tree-optimization/109025\n\t* tree-vect-loop.cc (vect_is_simple_reduction): Verify\n\tthe inner LC PHI use is the inner loop PHI latch definition\n\tbefore classifying an outer PHI as double reduction.\n\n\t* gcc.dg/vect/pr109025.c: New testcase.", "tree": {"sha": "3101c0a728fce20121788d8e9097528bb9a8b0ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3101c0a728fce20121788d8e9097528bb9a8b0ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1873079b05e399355eb79e4828ed9ba2d0c6968", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1873079b05e399355eb79e4828ed9ba2d0c6968", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1873079b05e399355eb79e4828ed9ba2d0c6968", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1873079b05e399355eb79e4828ed9ba2d0c6968/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b83acefb0409056b566133f66843ead6c04b8474", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b83acefb0409056b566133f66843ead6c04b8474", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b83acefb0409056b566133f66843ead6c04b8474"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "13fb0ce4ba98f634a5dae0d44591beddc73ffa5a", "filename": "gcc/testsuite/gcc.dg/vect/pr109025.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1873079b05e399355eb79e4828ed9ba2d0c6968/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr109025.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1873079b05e399355eb79e4828ed9ba2d0c6968/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr109025.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr109025.c?ref=c1873079b05e399355eb79e4828ed9ba2d0c6968", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-O3\" } */\n+\n+int func_4(int t, int b)\n+{\n+  for (int tt1 = 0; tt1 < 128 ; tt1 ++)\n+    {\n+      for (int tt = 0; tt < 128; tt ++)\n+\tif (b)\n+\t  t |= 3;\n+      t |= 3;\n+    }\n+  return t;\n+}"}, {"sha": "320c15f144bab35763b81205beddb180d26916af", "filename": "gcc/tree-vect-loop.cc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1873079b05e399355eb79e4828ed9ba2d0c6968/gcc%2Ftree-vect-loop.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1873079b05e399355eb79e4828ed9ba2d0c6968/gcc%2Ftree-vect-loop.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.cc?ref=c1873079b05e399355eb79e4828ed9ba2d0c6968", "patch": "@@ -3894,14 +3894,18 @@ vect_is_simple_reduction (loop_vec_info loop_info, stmt_vec_info phi_info,\n           return NULL;\n         }\n \n+      /* Verify there is an inner cycle composed of the PHI phi_use_stmt\n+\t and the latch definition op1.  */\n       gimple *def1 = SSA_NAME_DEF_STMT (op1);\n       if (gimple_bb (def1)\n \t  && flow_bb_inside_loop_p (loop, gimple_bb (def_stmt))\n \t  && loop->inner\n \t  && flow_bb_inside_loop_p (loop->inner, gimple_bb (def1))\n \t  && (is_gimple_assign (def1) || is_gimple_call (def1))\n \t  && is_a <gphi *> (phi_use_stmt)\n-\t  && flow_bb_inside_loop_p (loop->inner, gimple_bb (phi_use_stmt)))\n+\t  && flow_bb_inside_loop_p (loop->inner, gimple_bb (phi_use_stmt))\n+\t  && (op1 == PHI_ARG_DEF_FROM_EDGE (phi_use_stmt,\n+\t\t\t\t\t    loop_latch_edge (loop->inner))))\n         {\n           if (dump_enabled_p ())\n             report_vect_op (MSG_NOTE, def_stmt,"}]}