{"sha": "cfb9edba16820a3360456a502931c80da6b734a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZiOWVkYmExNjgyMGEzMzYwNDU2YTUwMjkzMWM4MGRhNmI3MzRhNQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2013-11-13T12:15:47Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2013-11-13T12:15:47Z"}, "message": "cfgexpand.c (expand_used_vars): Allocate space for partitions based on PARM_DECLs or RESULT_DECLs only if...\n\n\t* cfgexpand.c (expand_used_vars): Allocate space for partitions based\n\ton PARM_DECLs or RESULT_DECLs only if they are ignored for debug info\n\tor if optimization is enabled.\n\t* tree-ssa-coalesce.c (coalesce_ssa_name): If optimization is disabled,\n\trequire that all the names based on a PARM_DECL or a RESULT_DECL that\n\tisn't ignored for debug info be coalesced.\n\nFrom-SVN: r204742", "tree": {"sha": "2d7285885f7ee30b8a9be28547a4cc24eea954fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d7285885f7ee30b8a9be28547a4cc24eea954fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfb9edba16820a3360456a502931c80da6b734a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfb9edba16820a3360456a502931c80da6b734a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfb9edba16820a3360456a502931c80da6b734a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfb9edba16820a3360456a502931c80da6b734a5/comments", "author": null, "committer": null, "parents": [{"sha": "cb076acf4676d7d0d549dfd634bf865deda72f40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb076acf4676d7d0d549dfd634bf865deda72f40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb076acf4676d7d0d549dfd634bf865deda72f40"}], "stats": {"total": 57, "additions": 52, "deletions": 5}, "files": [{"sha": "56d039706a3dd63f732ce69db18f78881029652e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfb9edba16820a3360456a502931c80da6b734a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfb9edba16820a3360456a502931c80da6b734a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cfb9edba16820a3360456a502931c80da6b734a5", "patch": "@@ -1,3 +1,12 @@\n+2013-11-13  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* cfgexpand.c (expand_used_vars): Allocate space for partitions based\n+\ton PARM_DECLs or RESULT_DECLs only if they are ignored for debug info\n+\tor if optimization is enabled.\n+\t* tree-ssa-coalesce.c (coalesce_ssa_name): If optimization is disabled,\n+\trequire that all the names based on a PARM_DECL or a RESULT_DECL that\n+\tisn't ignored for debug info be coalesced.\n+\n 2013-11-13  Jan-Benedict Glaw  <jbglaw@lug-owl.de>\n \n \t* config/c6x/c6x.c: Include \"gimple-expr.h\"."}, {"sha": "de7a7b3fb0bd23f082cf7e377237569f8a1f66da", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfb9edba16820a3360456a502931c80da6b734a5/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfb9edba16820a3360456a502931c80da6b734a5/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=cfb9edba16820a3360456a502931c80da6b734a5", "patch": "@@ -1610,9 +1610,15 @@ expand_used_vars (void)\n \t  replace_ssa_name_symbol (var, (tree) *slot);\n \t}\n \n+      /* Always allocate space for partitions based on VAR_DECLs.  But for\n+\t those based on PARM_DECLs or RESULT_DECLs and which matter for the\n+\t debug info, there is no need to do so if optimization is disabled\n+\t because all the SSA_NAMEs based on these DECLs have been coalesced\n+\t into a single partition, which is thus assigned the canonical RTL\n+\t location of the DECLs.  */\n       if (TREE_CODE (SSA_NAME_VAR (var)) == VAR_DECL)\n \texpand_one_var (var, true, true);\n-      else\n+      else if (DECL_IGNORED_P (SSA_NAME_VAR (var)) || optimize)\n \t{\n \t  /* This is a PARM_DECL or RESULT_DECL.  For those partitions that\n \t     contain the default def (representing the parm or result itself)"}, {"sha": "d32d1beb11b6b03cfd7aef27af185d5dd4bd820d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfb9edba16820a3360456a502931c80da6b734a5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfb9edba16820a3360456a502931c80da6b734a5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cfb9edba16820a3360456a502931c80da6b734a5", "patch": "@@ -1,3 +1,7 @@\n+2013-11-13  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc.dg/guality/param-4.c: New test.\n+\n 2013-11-13  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/c11-complex-1.c: New test."}, {"sha": "a76b251f3ccc0281ce45a18b8428b50dd8c46b33", "filename": "gcc/testsuite/gcc.dg/guality/param-4.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfb9edba16820a3360456a502931c80da6b734a5/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fparam-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfb9edba16820a3360456a502931c80da6b734a5/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fparam-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fparam-4.c?ref=cfb9edba16820a3360456a502931c80da6b734a5", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do run } */\n+/* { dg-options \"-g\" } */\n+/* { dg-skip-if \"\" { *-*-* }  { \"*\" } { \"-O0\" } } */\n+\n+void\n+foo (int i)\n+{\n+  int j = 0;\n+  i = 1;\n+  j = j + 1;  /* BREAK */\n+}\n+\n+int\n+main (void)\n+{\n+  foo (0);\n+  return 0;\n+}\n+\n+/* { dg-final { gdb-test 10 \"i\" \"1\" } } */\n\\ No newline at end of file"}, {"sha": "252fc33a7f0896fa449a0c21091460c5c30a1be6", "filename": "gcc/tree-ssa-coalesce.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfb9edba16820a3360456a502931c80da6b734a5/gcc%2Ftree-ssa-coalesce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfb9edba16820a3360456a502931c80da6b734a5/gcc%2Ftree-ssa-coalesce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-coalesce.c?ref=cfb9edba16820a3360456a502931c80da6b734a5", "patch": "@@ -1256,8 +1256,8 @@ coalesce_ssa_name (void)\n   cl = create_coalesce_list ();\n   map = create_outofssa_var_map (cl, used_in_copies);\n \n-  /* We need to coalesce all names originating same SSA_NAME_VAR\n-     so debug info remains undisturbed.  */\n+  /* If optimization is disabled, we need to coalesce all the names originating\n+     from the same SSA_NAME_VAR so debug info remains undisturbed.  */\n   if (!optimize)\n     {\n       hash_table <ssa_name_var_hash> ssa_name_hash;\n@@ -1278,8 +1278,16 @@ coalesce_ssa_name (void)\n \t\t*slot = a;\n \t      else\n \t\t{\n-\t\t  add_coalesce (cl, SSA_NAME_VERSION (a), SSA_NAME_VERSION (*slot),\n-\t\t\t\tMUST_COALESCE_COST - 1);\n+\t\t  /* If the variable is a PARM_DECL or a RESULT_DECL, we\n+\t\t     _require_ that all the names originating from it be\n+\t\t     coalesced, because there must be a single partition\n+\t\t     containing all the names so that it can be assigned\n+\t\t     the canonical RTL location of the DECL safely.  */\n+\t\t  const int cost\n+\t\t    = TREE_CODE (SSA_NAME_VAR (a)) == VAR_DECL\n+\t\t      ? MUST_COALESCE_COST - 1 : MUST_COALESCE_COST;\n+\t\t  add_coalesce (cl, SSA_NAME_VERSION (a),\n+\t\t\t\tSSA_NAME_VERSION (*slot), cost);\n \t\t  bitmap_set_bit (used_in_copies, SSA_NAME_VERSION (a));\n \t\t  bitmap_set_bit (used_in_copies, SSA_NAME_VERSION (*slot));\n \t\t}"}]}