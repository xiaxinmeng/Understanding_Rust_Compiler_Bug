{"sha": "34311c5ee64df8dd6dbdaa6141adfe16534c1349", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQzMTFjNWVlNjRkZjhkZDZkYmRhYTYxNDFhZGZlMTY1MzRjMTM0OQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2017-10-17T20:28:33Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-10-17T20:28:33Z"}, "message": "visium.c (visium_select_cc_mode): Return CCmode for any RTX present on the RHS of a SET.\n\n\t* config/visium/visium.c (visium_select_cc_mode): Return CCmode\n\tfor any RTX present on the RHS of a SET.\n\t* compare-elim.c (try_eliminate_compare): Restore comment.\n\nFrom-SVN: r253830", "tree": {"sha": "bb13380c745c6270665a5f2bb7824f29008257b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb13380c745c6270665a5f2bb7824f29008257b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34311c5ee64df8dd6dbdaa6141adfe16534c1349", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34311c5ee64df8dd6dbdaa6141adfe16534c1349", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34311c5ee64df8dd6dbdaa6141adfe16534c1349", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34311c5ee64df8dd6dbdaa6141adfe16534c1349/comments", "author": null, "committer": null, "parents": [{"sha": "8e7014b45585b89418564db079f9ad469a581ea2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e7014b45585b89418564db079f9ad469a581ea2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e7014b45585b89418564db079f9ad469a581ea2"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "20b7b3f6e9748e04b491ff6577087ad4b2247fc1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34311c5ee64df8dd6dbdaa6141adfe16534c1349/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34311c5ee64df8dd6dbdaa6141adfe16534c1349/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=34311c5ee64df8dd6dbdaa6141adfe16534c1349", "patch": "@@ -1,3 +1,9 @@\n+2017-10-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* config/visium/visium.c (visium_select_cc_mode): Return CCmode for\n+\tany RTX present on the RHS of a SET.\n+\t* compare-elim.c (try_eliminate_compare): Restore comment.\n+\n 2017-10-17  Jakub Jelinek  <jakub@redhat.com>\n \n \t* langhooks.h (struct lang_hooks): Document that tree_size langhook"}, {"sha": "086fbc76f011c2896af2318eb10bbd9b45797b55", "filename": "gcc/compare-elim.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34311c5ee64df8dd6dbdaa6141adfe16534c1349/gcc%2Fcompare-elim.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34311c5ee64df8dd6dbdaa6141adfe16534c1349/gcc%2Fcompare-elim.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcompare-elim.c?ref=34311c5ee64df8dd6dbdaa6141adfe16534c1349", "patch": "@@ -729,6 +729,7 @@ try_eliminate_compare (struct comparison *cmp)\n   if (try_merge_compare (cmp))\n     return true;\n \n+  /* We must have found an interesting \"clobber\" preceding the compare.  */\n   if (cmp->prev_clobber == NULL)\n     return false;\n "}, {"sha": "3311dd2a349d39fd730cb6000c67d6ab17ad0145", "filename": "gcc/config/visium/visium.c", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34311c5ee64df8dd6dbdaa6141adfe16534c1349/gcc%2Fconfig%2Fvisium%2Fvisium.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34311c5ee64df8dd6dbdaa6141adfe16534c1349/gcc%2Fconfig%2Fvisium%2Fvisium.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvisium%2Fvisium.c?ref=34311c5ee64df8dd6dbdaa6141adfe16534c1349", "patch": "@@ -2938,12 +2938,6 @@ visium_select_cc_mode (enum rtx_code code, rtx op0, rtx op1)\n       /* This is a btst, the result is in C instead of Z.  */\n       return CCCmode;\n \n-    case CONST_INT:\n-      /* This is a degenerate case, typically an uninitialized variable.  */\n-      gcc_assert (op0 == constm1_rtx);\n-\n-      /* ... fall through ... */\n-\n     case REG:\n     case AND:\n     case IOR:\n@@ -2960,6 +2954,17 @@ visium_select_cc_mode (enum rtx_code code, rtx op0, rtx op1)\n \t when applied to a comparison with zero.  */\n       return CCmode;\n \n+    /* ??? Cater to the junk RTXes sent by try_merge_compare.  */\n+    case ASM_OPERANDS:\n+    case CALL:\n+    case CONST_INT:\n+    case LO_SUM:\n+    case HIGH:\n+    case MEM:\n+    case UNSPEC:\n+    case ZERO_EXTEND:\n+      return CCmode;\n+\n     default:\n       gcc_unreachable ();\n     }"}]}