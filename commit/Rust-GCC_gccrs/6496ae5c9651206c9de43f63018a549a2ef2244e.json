{"sha": "6496ae5c9651206c9de43f63018a549a2ef2244e", "node_id": "C_kwDOANBUbNoAKDY0OTZhZTVjOTY1MTIwNmM5ZGU0M2Y2MzAxOGE1NDlhMmVmMjI0NGU", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-10-06T09:02:38Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-10-07T06:19:39Z"}, "message": "Properly parse invariant &MEM addresses in the GIMPLE FE\n\nCurrently the frontend rejects those addresses as not lvalues\nbecause the C frontend doens't expect MEM_REF or TARGET_MEM_REF\nto appear (but they would be valid lvalues there).  The following\nfixes that by amending lvalue_p.\n\nThe change also makes the dumping of the source of the testcase\nvalid for the GIMPLE FE by not eliding the '&' when dumping\nstring literals.\n\n2021-10-06  Richard Biener  <rguenther@suse.de>\n\ngcc/c/\n\t* c-typeck.c (lvalue_p): Also allow MEM_REF and TARGET_MEM_REF.\n\ngcc/\n\t* tree-pretty-print.c (dump_generic_node): Do not elide\n\tprinting '&' when dumping with -gimple.\n\ngcc/testsuite/\n\t* gcc.dg/gimplefe-47.c: New testcase.", "tree": {"sha": "40def05c8bbc1491a6f61ce807a2c20d3a417dc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40def05c8bbc1491a6f61ce807a2c20d3a417dc6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6496ae5c9651206c9de43f63018a549a2ef2244e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6496ae5c9651206c9de43f63018a549a2ef2244e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6496ae5c9651206c9de43f63018a549a2ef2244e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6496ae5c9651206c9de43f63018a549a2ef2244e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57c7ec62ee0fbc33cacc5feb3e26d3ad4f765cdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57c7ec62ee0fbc33cacc5feb3e26d3ad4f765cdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57c7ec62ee0fbc33cacc5feb3e26d3ad4f765cdb"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "0aac978c02e0609d7d2f40072750c88775ec8fc1", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6496ae5c9651206c9de43f63018a549a2ef2244e/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6496ae5c9651206c9de43f63018a549a2ef2244e/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=6496ae5c9651206c9de43f63018a549a2ef2244e", "patch": "@@ -4968,6 +4968,10 @@ lvalue_p (const_tree ref)\n     case STRING_CST:\n       return true;\n \n+    case MEM_REF:\n+    case TARGET_MEM_REF:\n+      /* MEM_REFs can appear from -fgimple parsing or folding, so allow them\n+\t here as well.  */\n     case INDIRECT_REF:\n     case ARRAY_REF:\n     case VAR_DECL:"}, {"sha": "3bbd34d669f4145e0b9e0ee27541ab258e15e005", "filename": "gcc/testsuite/gcc.dg/gimplefe-47.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6496ae5c9651206c9de43f63018a549a2ef2244e/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-47.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6496ae5c9651206c9de43f63018a549a2ef2244e/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-47.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-47.c?ref=6496ae5c9651206c9de43f63018a549a2ef2244e", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fgimple\" } */\n+\n+char * begfield (int tab, char * ptr, char * lim, int sword, int schar);\n+\n+int __GIMPLE (ssa)\n+main ()\n+{\n+  char * lim;\n+  char * s;\n+  char * _1;\n+\n+  __BB(2):\n+  _1 = begfield (58, \":ab\", &__MEM <char[4]> ((void *)&\":ab\" + _Literal\n+(void *) 3), 1, 1);\n+  if (_1 != _Literal (char *) &__MEM <char[4]> ((void *)&\":ab\" + _Literal (void *) 2))\n+    goto __BB3;\n+  else\n+    goto __BB4;\n+\n+  __BB(3):\n+  __builtin_abort ();\n+\n+  __BB(4):\n+  __builtin_exit (0);\n+}\n+"}, {"sha": "275dc7d8af737ab620dd576c7c77501c26ca8018", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6496ae5c9651206c9de43f63018a549a2ef2244e/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6496ae5c9651206c9de43f63018a549a2ef2244e/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=6496ae5c9651206c9de43f63018a549a2ef2244e", "patch": "@@ -2888,10 +2888,13 @@ dump_generic_node (pretty_printer *pp, tree node, int spc, dump_flags_t flags,\n     case PREDECREMENT_EXPR:\n     case PREINCREMENT_EXPR:\n     case INDIRECT_REF:\n-      if (TREE_CODE (node) == ADDR_EXPR\n+      if (!(flags & TDF_GIMPLE)\n+\t  && TREE_CODE (node) == ADDR_EXPR\n \t  && (TREE_CODE (TREE_OPERAND (node, 0)) == STRING_CST\n \t      || TREE_CODE (TREE_OPERAND (node, 0)) == FUNCTION_DECL))\n-\t;\t/* Do not output '&' for strings and function pointers.  */\n+\t/* Do not output '&' for strings and function pointers when not\n+\t   dumping GIMPLE FE syntax.  */\n+\t;\n       else\n \tpp_string (pp, op_symbol (node));\n "}]}