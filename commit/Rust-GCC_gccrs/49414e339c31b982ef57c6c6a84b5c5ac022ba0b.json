{"sha": "49414e339c31b982ef57c6c6a84b5c5ac022ba0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk0MTRlMzM5YzMxYjk4MmVmNTdjNmM2YTg0YjVjNWFjMDIyYmEwYg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2006-10-07T21:06:03Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2006-10-07T21:06:03Z"}, "message": "bool-1.c, [...]: Fix comment typos.\n\n\t* gcc.dg/tree-ssa/bool-1.c, gcc.dg/tree-ssa/bool-2.c,\n\tgcc.dg/tree-ssa/bool-4.c, gcc.dg/tree-ssa/bool-5.c,\n\tgcc.dg/tree-ssa/bool-6.c, gcc.dg/tree-ssa/bool-8.c,\n\tgcc.dg/tree-ssa/bool-9.c: Fix comment typos.\n\nFrom-SVN: r117541", "tree": {"sha": "6bd2aa47172125a3ec8ef4d0688913bbf05cbc72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bd2aa47172125a3ec8ef4d0688913bbf05cbc72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49414e339c31b982ef57c6c6a84b5c5ac022ba0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49414e339c31b982ef57c6c6a84b5c5ac022ba0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49414e339c31b982ef57c6c6a84b5c5ac022ba0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49414e339c31b982ef57c6c6a84b5c5ac022ba0b/comments", "author": null, "committer": null, "parents": [{"sha": "be95f6f12dea3ed4656deefc94747c2466ce953c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be95f6f12dea3ed4656deefc94747c2466ce953c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be95f6f12dea3ed4656deefc94747c2466ce953c"}], "stats": {"total": 35, "additions": 21, "deletions": 14}, "files": [{"sha": "e8edeb3d785e8ed71b808502b5e33ff25e501cff", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49414e339c31b982ef57c6c6a84b5c5ac022ba0b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49414e339c31b982ef57c6c6a84b5c5ac022ba0b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=49414e339c31b982ef57c6c6a84b5c5ac022ba0b", "patch": "@@ -1,3 +1,10 @@\n+2006-10-07  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* gcc.dg/tree-ssa/bool-1.c, gcc.dg/tree-ssa/bool-2.c,\n+\tgcc.dg/tree-ssa/bool-4.c, gcc.dg/tree-ssa/bool-5.c,\n+\tgcc.dg/tree-ssa/bool-6.c, gcc.dg/tree-ssa/bool-8.c,\n+\tgcc.dg/tree-ssa/bool-9.c: Fix comment typos.\n+\n 2006-10-07  Andrew Pinski  <pinskia@gmail.com>\n \n \t* objc.dg/gnu-encoding/struct-layout-encoding-1_generate.c:"}, {"sha": "d6e121ae07bd7852bfb5ca13f0898ad27a7902cf", "filename": "gcc/testsuite/gcc.dg/tree-ssa/bool-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49414e339c31b982ef57c6c6a84b5c5ac022ba0b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49414e339c31b982ef57c6c6a84b5c5ac022ba0b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-1.c?ref=49414e339c31b982ef57c6c6a84b5c5ac022ba0b", "patch": "@@ -12,8 +12,8 @@ int f(_Bool x)\n    bool_var != 0 is the same as bool_var. */\n /* { dg-final { scan-tree-dump-times \"!= 0\" 0 \"optimized\"} } */\n \n-/* There should be no adde for powerpc. Checking if we actually optimizated\n-   away the comparision.  */\n+/* There should be no adde for powerpc.  Check if we actually optimized\n+   away the comparison.  */\n /* { dg-final { scan-assembler-times \"adde\" 0 { target powerpc*-*-* } } } */\n \n /* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "0f88b0965059f9bb56dce2cf4162c9aa41d2abe8", "filename": "gcc/testsuite/gcc.dg/tree-ssa/bool-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49414e339c31b982ef57c6c6a84b5c5ac022ba0b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49414e339c31b982ef57c6c6a84b5c5ac022ba0b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-2.c?ref=49414e339c31b982ef57c6c6a84b5c5ac022ba0b", "patch": "@@ -15,8 +15,8 @@ int f(_Bool x)\n    bool_var != 0 is the same as bool_var. */\n /* { dg-final { scan-tree-dump-times \"!= 0\" 0 \"optimized\"} } */\n \n-/* There should be no adde for powerpc. Checking if we actually optimizated\n-   away the comparision.  */\n+/* There should be no adde for powerpc.  Check if we actually optimized\n+   away the comparison.  */\n /* { dg-final { scan-assembler-times \"adde\" 0 { target powerpc*-*-* } } } */\n \n /* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "b06182e2ac446048666819c9ec1c9e8648df9d9f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/bool-4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49414e339c31b982ef57c6c6a84b5c5ac022ba0b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49414e339c31b982ef57c6c6a84b5c5ac022ba0b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-4.c?ref=49414e339c31b982ef57c6c6a84b5c5ac022ba0b", "patch": "@@ -10,8 +10,8 @@ int f(_Bool x)\n    bool_var != 0 is the same as bool_var. */\n /* { dg-final { scan-tree-dump-times \"!= 0\" 0 \"optimized\"} } */\n \n-/* There should be no adde for powerpc. Checking if we actually optimizated\n-   away the comparision.  */\n+/* There should be no adde for powerpc.  Check if we actually optimized\n+   away the comparison.  */\n /* { dg-final { scan-assembler-times \"adde\" 0 { target powerpc*-*-* } } } */\n \n /* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "e33ce9c73b5424e9569d3d5c4df025d5f8875785", "filename": "gcc/testsuite/gcc.dg/tree-ssa/bool-5.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49414e339c31b982ef57c6c6a84b5c5ac022ba0b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49414e339c31b982ef57c6c6a84b5c5ac022ba0b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-5.c?ref=49414e339c31b982ef57c6c6a84b5c5ac022ba0b", "patch": "@@ -12,8 +12,8 @@ int f(_Bool x)\n    bool_var == 1 is the same as bool_var. */\n /* { dg-final { scan-tree-dump-times \"== 1\" 0 \"optimized\"} } */\n \n-/* There should be no adde for powerpc. Checking if we actually optimizated\n-   away the comparision.  */\n+/* There should be no adde for powerpc.  Check if we actually optimized\n+   away the comparison.  */\n /* { dg-final { scan-assembler-times \"adde\" 0 { target powerpc*-*-* } } } */\n \n /* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "cc77591c937da819057fe6889ea11ab251d5d16e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/bool-6.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49414e339c31b982ef57c6c6a84b5c5ac022ba0b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49414e339c31b982ef57c6c6a84b5c5ac022ba0b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-6.c?ref=49414e339c31b982ef57c6c6a84b5c5ac022ba0b", "patch": "@@ -15,8 +15,8 @@ int f(_Bool x)\n    bool_var == 1 is the same as bool_var. */\n /* { dg-final { scan-tree-dump-times \"== 1\" 0 \"optimized\"} } */\n \n-/* There should be no adde for powerpc. Checking if we actually optimizated\n-   away the comparision.  */\n+/* There should be no adde for powerpc.  Check if we actually optimized\n+   away the comparison.  */\n /* { dg-final { scan-assembler-times \"adde\" 0 { target powerpc*-*-* } } } */\n \n /* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "5275252708316768c5cd37d94b962b734a037146", "filename": "gcc/testsuite/gcc.dg/tree-ssa/bool-8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49414e339c31b982ef57c6c6a84b5c5ac022ba0b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49414e339c31b982ef57c6c6a84b5c5ac022ba0b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-8.c?ref=49414e339c31b982ef57c6c6a84b5c5ac022ba0b", "patch": "@@ -10,8 +10,8 @@ int f(_Bool x)\n    bool_var == 1 is the same as bool_var. */\n /* { dg-final { scan-tree-dump-times \"== 1\" 0 \"optimized\"} } */\n \n-/* There should be no adde for powerpc. Checking if we actually optimizated\n-   away the comparision.  */\n+/* There should be no adde for powerpc.  Check if we actually optimized\n+   away the comparison.  */\n /* { dg-final { scan-assembler-times \"adde\" 0 { target powerpc*-*-* } } } */\n \n /* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "2660b25804103a3cf31858840d122afabe46951e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/bool-9.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49414e339c31b982ef57c6c6a84b5c5ac022ba0b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49414e339c31b982ef57c6c6a84b5c5ac022ba0b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-9.c?ref=49414e339c31b982ef57c6c6a84b5c5ac022ba0b", "patch": "@@ -10,8 +10,8 @@ _Bool f1(_Bool x)\n    bool_var != 0 is the same as bool_var. */\n /* { dg-final { scan-tree-dump-times \"!= 0\" 0 \"optimized\"} } */\n \n-/* There should be no subfe for powerpc. Checking if we actually optimizated\n-   away the comparision.  */\n+/* There should be no subfe for powerpc.  Check if we actually optimized\n+   away the comparison.  */\n /* { dg-final { scan-assembler-times \"subfe\" 0 { target powerpc*-*-* } } } */\n \n /* { dg-final { cleanup-tree-dump \"optimized\" } } */"}]}