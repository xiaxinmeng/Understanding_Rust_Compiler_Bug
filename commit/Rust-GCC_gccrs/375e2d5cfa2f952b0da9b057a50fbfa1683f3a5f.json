{"sha": "375e2d5cfa2f952b0da9b057a50fbfa1683f3a5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc1ZTJkNWNmYTJmOTUyYjBkYTliMDU3YTUwZmJmYTE2ODNmM2E1Zg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-10-05T04:04:48Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-10-05T04:04:48Z"}, "message": "toplev.c (dbr_sched_time): Unconditional.\n\n        * toplev.c (dbr_sched_time): Unconditional.\n        (peephole2_time): New.\n        (compile_file): Add pass numbers to all of the dump file suffixes.\n        Dump peephole2_time.  Don't dump times for non-applicable passes.\n        (rest_of_compilation): Add pass numbers to dump file suffixes.\n        Conditionalize calls to the scheduler.\n        * invoke.texi: Update.\n\nFrom-SVN: r29819", "tree": {"sha": "f0eb951830e526384b22133c1cccf1a6a1a0700f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0eb951830e526384b22133c1cccf1a6a1a0700f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/375e2d5cfa2f952b0da9b057a50fbfa1683f3a5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/375e2d5cfa2f952b0da9b057a50fbfa1683f3a5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/375e2d5cfa2f952b0da9b057a50fbfa1683f3a5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/375e2d5cfa2f952b0da9b057a50fbfa1683f3a5f/comments", "author": null, "committer": null, "parents": [{"sha": "7a3b7acb7cd3f2bf70d1a44210f01e17b0010a51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a3b7acb7cd3f2bf70d1a44210f01e17b0010a51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a3b7acb7cd3f2bf70d1a44210f01e17b0010a51"}], "stats": {"total": 346, "additions": 194, "deletions": 152}, "files": [{"sha": "581a6ff0840fbef4eb11e432b0a40e18dc7acc7d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/375e2d5cfa2f952b0da9b057a50fbfa1683f3a5f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/375e2d5cfa2f952b0da9b057a50fbfa1683f3a5f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=375e2d5cfa2f952b0da9b057a50fbfa1683f3a5f", "patch": "@@ -1,3 +1,13 @@\n+Mon Oct  4 21:01:39 1999  Richard Henderson  <rth@cygnus.com>\n+\n+\t* toplev.c (dbr_sched_time): Unconditional.\n+\t(peephole2_time): New.\n+\t(compile_file): Add pass numbers to all of the dump file suffixes.\n+\tDump peephole2_time.  Don't dump times for non-applicable passes.\n+\t(rest_of_compilation): Add pass numbers to dump file suffixes.\n+\tConditionalize calls to the scheduler.\n+\t* invoke.texi: Update.\n+\n Mon Oct  4 20:25:13 1999  Anthony Green  <green@cygnus.com>\n \n \t* flow.c (make_edges): Fix insn iteration."}, {"sha": "b128ec250e94c41415026fb6510eb34edd4066cb", "filename": "gcc/invoke.texi", "status": "modified", "additions": 34, "deletions": 28, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/375e2d5cfa2f952b0da9b057a50fbfa1683f3a5f/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/375e2d5cfa2f952b0da9b057a50fbfa1683f3a5f/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=375e2d5cfa2f952b0da9b057a50fbfa1683f3a5f", "patch": "@@ -2066,59 +2066,59 @@ block and arc execution counts from the information in the\n @item -d@var{letters}\n Says to make debugging dumps during compilation at times specified by\n @var{letters}.  This is used for debugging the compiler.  The file names\n-for most of the dumps are made by appending a word to the source file\n-name (e.g.  @file{foo.c.rtl} or @file{foo.c.jump}).  Here are the\n-possible letters for use in @var{letters}, and their meanings:\n+for most of the dumps are made by appending a pass number and a word to\n+the source file name (e.g.  @file{foo.c.00.rtl} or @file{foo.c.01.jump}). \n+Here are the possible letters for use in @var{letters}, and their meanings:\n \n @table @samp\n+@item A\n+Annotate the assembler output with miscellaneous debugging information.\n @item b\n-Dump after computing branch probabilities, to @file{@var{file}.bp}.\n+Dump after computing branch probabilities, to @file{@var{file}.07.bp}.\n @item c\n-Dump after instruction combination, to the file @file{@var{file}.combine}.\n+Dump after instruction combination, to the file @file{@var{file}.09.combine}.\n @item d\n-Dump after delayed branch scheduling, to @file{@var{file}.dbr}.\n+Dump after delayed branch scheduling, to @file{@var{file}.19.dbr}.\n @item D\n Dump all macro definitions, at the end of preprocessing, in addition to\n normal output.\n-@item r\n-Dump after RTL generation, to @file{@var{file}.rtl}.\n-@item j\n-Dump after first jump optimization, to @file{@var{file}.jump}.\n @item F\n-Dump after purging ADDRESSOF, to @file{@var{file}.addressof}.\n+Dump after purging ADDRESSOF, to @file{@var{file}.03.addressof}.\n @item f\n-Dump after flow analysis, to @file{@var{file}.flow}.\n+Dump after flow analysis, to @file{@var{file}.08.flow}.\n @item g\n-Dump after global register allocation, to @file{@var{file}.greg}.\n+Dump after global register allocation, to @file{@var{file}.13.greg}.\n @item G      \n-Dump after GCSE, to @file{@var{file}.gcse}.\n+Dump after GCSE, to @file{@var{file}.04.gcse}.\n @item j\n-Dump after first jump optimization, to @file{@var{file}.jump}.\n+Dump after first jump optimization, to @file{@var{file}.01.jump}.\n @item J\n-Dump after last jump optimization, to @file{@var{file}.jump2}.\n+Dump after last jump optimization, to @file{@var{file}.17.jump2}.\n @item k\n-Dump after conversion from registers to stack, to @file{@var{file}.stack}.\n+Dump after conversion from registers to stack, to @file{@var{file}.20.stack}.\n @item l\n-Dump after local register allocation, to @file{@var{file}.lreg}.\n+Dump after local register allocation, to @file{@var{file}.12.lreg}.\n @item L\n-Dump after loop optimization, to @file{@var{file}.loop}.\n+Dump after loop optimization, to @file{@var{file}.05.loop}.\n @item M\n Dump after performing the machine dependent reorganisation pass, to\n-@file{@var{file}.mach}. \n+@file{@var{file}.18.mach}. \n @item N\n-Dump after the register move pass, to @file{@var{file}.regmove}.\n+Dump after the register move pass, to @file{@var{file}.10.regmove}.\n @item r\n-Dump after RTL generation, to @file{@var{file}.rtl}.\n+Dump after RTL generation, to @file{@var{file}.00.rtl}.\n @item R\n-Dump after the second instruction scheduling pass, to @file{@var{file}.sched2}.\n+Dump after the second instruction scheduling pass, to\n+@file{@var{file}.16.sched2}.\n @item s\n Dump after CSE (including the jump optimization that sometimes follows\n-CSE), to @file{@var{file}.cse}. \n+CSE), to @file{@var{file}.02.cse}. \n @item S\n-Dump after the first instruction scheduling pass, to @file{@var{file}.sched}.\n+Dump after the first instruction scheduling pass, to\n+@file{@var{file}.11.sched}.\n @item t\n Dump after the second CSE pass (including the jump optimization that\n-sometimes follows CSE), to @file{@var{file}.cse2}. \n+sometimes follows CSE), to @file{@var{file}.06.cse2}. \n @item a\n Produce all the dumps listed above.\n @item m\n@@ -2128,13 +2128,19 @@ standard error.\n Annotate the assembler output with a comment indicating which\n pattern and alternative was used.  The length of each instruction is\n also printed.\n+@item v\n+For each of the other indicated dump files (except for\n+@file{@var{file}.00.rtl}), dump a representation of the control flow graph\n+suitible for viewing with VCG to @file{@var{file}.@var{pass}.vcg}.\n+@item w\n+Dump after the second flow pass to @file{@var{file}.14.flow2}. \n @item x\n Just generate RTL for a function instead of compiling it.  Usually used\n with @samp{r}.\n @item y\n Dump debugging information during parsing, to standard error.\n-@item A\n-Annotate the assembler output with miscellaneous debugging information.\n+@item z\n+Dump after the peephole2 pass to @file{@var{file}.15.peephole2}.\n @end table\n \n @item -fdump-unnumbered"}, {"sha": "815a7ecdda50975bdfcaaaa3e7b6a97a6dfa8e79", "filename": "gcc/toplev.c", "status": "modified", "additions": 150, "deletions": 124, "changes": 274, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/375e2d5cfa2f952b0da9b057a50fbfa1683f3a5f/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/375e2d5cfa2f952b0da9b057a50fbfa1683f3a5f/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=375e2d5cfa2f952b0da9b057a50fbfa1683f3a5f", "patch": "@@ -1306,10 +1306,9 @@ int sched_time;\n int local_alloc_time;\n int global_alloc_time;\n int flow2_time;\n+int peephole2_time;\n int sched2_time;\n-#ifdef DELAY_SLOTS\n int dbr_sched_time;\n-#endif\n int shorten_branch_time;\n int stack_reg_time;\n int final_time;\n@@ -2829,10 +2828,9 @@ compile_file (name)\n   local_alloc_time = 0;\n   global_alloc_time = 0;\n   flow2_time = 0;\n+  peephole2_time = 0;\n   sched2_time = 0;\n-#ifdef DELAY_SLOTS\n   dbr_sched_time = 0;\n-#endif\n   shorten_branch_time = 0;\n   stack_reg_time = 0;\n   final_time = 0;\n@@ -2881,131 +2879,137 @@ compile_file (name)\n \n   /* Clear the dump files.  */\n   if (rtl_dump)\n-    clean_dump_file (\".rtl\");\n+    clean_dump_file (\".00.rtl\");\n   if (jump_opt_dump)\n     {\n-      clean_dump_file (\".jump\");\n+      clean_dump_file (\".01.jump\");\n+      if (graph_dump_format != no_graph)\n+\tclean_graph_dump_file (dump_base_name, \".01.jump\");\n+    }\n+  if (cse_dump)\n+    {\n+      clean_dump_file (\".02.cse\");\n       if (graph_dump_format != no_graph)\n-\tclean_graph_dump_file (dump_base_name, \".jump\");\n+\tclean_graph_dump_file (dump_base_name, \".02.cse\");\n     }\n   if (addressof_dump)\n     {\n-      clean_dump_file (\".addressof\");\n+      clean_dump_file (\".03.addressof\");\n       if (graph_dump_format != no_graph)\n-\tclean_graph_dump_file (dump_base_name, \".addressof\");\n+\tclean_graph_dump_file (dump_base_name, \".03.addressof\");\n     }\n-  if (cse_dump)\n+  if (gcse_dump)\n     {\n-      clean_dump_file (\".cse\");\n+      clean_dump_file (\".04.gcse\");\n       if (graph_dump_format != no_graph)\n-\tclean_graph_dump_file (dump_base_name, \".cse\");\n+\tclean_graph_dump_file (dump_base_name, \".04.gcse\");\n     }\n   if (loop_dump)\n     {\n-      clean_dump_file (\".loop\");\n+      clean_dump_file (\".05.loop\");\n       if (graph_dump_format != no_graph)\n-\tclean_graph_dump_file (dump_base_name, \".loop\");\n+\tclean_graph_dump_file (dump_base_name, \".05.loop\");\n     }\n   if (cse2_dump)\n     {\n-      clean_dump_file (\".cse2\");\n+      clean_dump_file (\".06.cse2\");\n       if (graph_dump_format != no_graph)\n-\tclean_graph_dump_file (dump_base_name, \".cse2\");\n+\tclean_graph_dump_file (dump_base_name, \".06.cse2\");\n     }\n   if (branch_prob_dump)\n     {\n-      clean_dump_file (\".bp\");\n+      clean_dump_file (\".07.bp\");\n       if (graph_dump_format != no_graph)\n-\tclean_graph_dump_file (dump_base_name, \".bp\");\n+\tclean_graph_dump_file (dump_base_name, \".07.bp\");\n     }\n   if (flow_dump)\n     {\n-      clean_dump_file (\".flow\");\n+      clean_dump_file (\".08.flow\");\n       if (graph_dump_format != no_graph)\n-\tclean_graph_dump_file (dump_base_name, \".flow\");\n+\tclean_graph_dump_file (dump_base_name, \".08.flow\");\n     }\n   if (combine_dump)\n     {\n-      clean_dump_file (\".combine\");\n+      clean_dump_file (\".09.combine\");\n       if (graph_dump_format != no_graph)\n-\tclean_graph_dump_file (dump_base_name, \".combine\");\n+\tclean_graph_dump_file (dump_base_name, \".09.combine\");\n     }\n   if (regmove_dump)\n     {\n-      clean_dump_file (\".regmove\");\n+      clean_dump_file (\".10.regmove\");\n       if (graph_dump_format != no_graph)\n-\tclean_graph_dump_file (dump_base_name, \".regmove\");\n+\tclean_graph_dump_file (dump_base_name, \".10.regmove\");\n     }\n+#ifdef INSN_SCHEDULING\n   if (sched_dump)\n     {\n-      clean_dump_file (\".sched\");\n+      clean_dump_file (\".11.sched\");\n       if (graph_dump_format != no_graph)\n-\tclean_graph_dump_file (dump_base_name, \".sched\");\n+\tclean_graph_dump_file (dump_base_name, \".11.sched\");\n     }\n+#endif\n   if (local_reg_dump)\n     {\n-      clean_dump_file (\".lreg\");\n+      clean_dump_file (\".12.lreg\");\n       if (graph_dump_format != no_graph)\n-\tclean_graph_dump_file (dump_base_name, \".lreg\");\n+\tclean_graph_dump_file (dump_base_name, \".12.lreg\");\n     }\n   if (global_reg_dump)\n     {\n-      clean_dump_file (\".greg\");\n+      clean_dump_file (\".13.greg\");\n       if (graph_dump_format != no_graph)\n-\tclean_graph_dump_file (dump_base_name, \".greg\");\n+\tclean_graph_dump_file (dump_base_name, \".13.greg\");\n     }\n   if (flow2_dump)\n     {\n-      clean_dump_file (\".flow2\");\n+      clean_dump_file (\".14.flow2\");\n       if (graph_dump_format != no_graph)\n-\tclean_graph_dump_file (dump_base_name, \".flow2\");\n+\tclean_graph_dump_file (dump_base_name, \".14.flow2\");\n     }\n+#ifdef HAVE_peephole2\n   if (peephole2_dump)\n     {\n-      clean_dump_file (\".peephole2\");\n+      clean_dump_file (\".15.peephole2\");\n       if (graph_dump_format != no_graph)\n-\tclean_graph_dump_file (dump_base_name, \".peephole2\");\n+\tclean_graph_dump_file (dump_base_name, \".15.peephole2\");\n     }\n+#endif\n+#ifdef INSN_SCHEDULING\n   if (sched2_dump)\n     {\n-      clean_dump_file (\".sched2\");\n+      clean_dump_file (\".16.sched2\");\n       if (graph_dump_format != no_graph)\n-\tclean_graph_dump_file (dump_base_name, \".sched2\");\n+\tclean_graph_dump_file (dump_base_name, \".16.sched2\");\n     }\n+#endif\n   if (jump2_opt_dump)\n     {\n-      clean_dump_file (\".jump2\");\n+      clean_dump_file (\".17.jump2\");\n       if (graph_dump_format != no_graph)\n-\tclean_graph_dump_file (dump_base_name, \".jump2\");\n+\tclean_graph_dump_file (dump_base_name, \".17.jump2\");\n     }\n-#ifdef DELAY_SLOTS\n-  if (dbr_sched_dump)\n+#ifdef MACHINE_DEPENDENT_REORG\n+  if (mach_dep_reorg_dump)\n     {\n-      clean_dump_file (\".dbr\");\n+      clean_dump_file (\".18.mach\");\n       if (graph_dump_format != no_graph)\n-\tclean_graph_dump_file (dump_base_name, \".dbr\");\n+\tclean_graph_dump_file (dump_base_name, \".18.mach\");\n     }\n #endif\n-  if (gcse_dump)\n+#ifdef DELAY_SLOTS\n+  if (dbr_sched_dump)\n     {\n-      clean_dump_file (\".gcse\");\n+      clean_dump_file (\".19.dbr\");\n       if (graph_dump_format != no_graph)\n-\tclean_graph_dump_file (dump_base_name, \".gcse\");\n+\tclean_graph_dump_file (dump_base_name, \".19.dbr\");\n     }\n+#endif\n #ifdef STACK_REGS\n   if (stack_reg_dump)\n     {\n-      clean_dump_file (\".stack\");\n+      clean_dump_file (\".20.stack\");\n       if (graph_dump_format != no_graph)\n-\tclean_graph_dump_file (dump_base_name, \".stack\");\n-    }\n-#endif\n-#ifdef MACHINE_DEPENDENT_REORG\n-  if (mach_dep_reorg_dump)\n-    {\n-      clean_dump_file (\".mach\");\n-      if (graph_dump_format != no_graph)\n-\tclean_graph_dump_file (dump_base_name, \".mach\");\n+\tclean_graph_dump_file (dump_base_name, \".20.stack\");\n     }\n #endif\n \n@@ -3272,7 +3276,7 @@ compile_file (name)\n   end_final (dump_base_name);\n    \n   if (branch_prob_dump)\n-    open_dump_file (\".bp\", NULL);\n+    open_dump_file (\".07.bp\", NULL);\n    \n   TIMEVAR (dump_time, end_branch_prob (rtl_dump_file));\n    \n@@ -3299,7 +3303,7 @@ compile_file (name)\n \n   if (combine_dump)\n     {\n-      open_dump_file (\".combine\", NULL);\n+      open_dump_file (\".09.combine\", NULL);\n       TIMEVAR (dump_time, dump_combine_total_stats (rtl_dump_file));\n       close_dump_file (NULL, NULL_RTX);\n     }\n@@ -3318,48 +3322,56 @@ compile_file (name)\n   if (graph_dump_format != no_graph)\n     {\n       if (jump_opt_dump)\n-\tfinish_graph_dump_file (dump_base_name, \".jump\");\n-      if (addressof_dump)\n-\tfinish_graph_dump_file (dump_base_name, \".addressof\");\n+\tfinish_graph_dump_file (dump_base_name, \".01.jump\");\n       if (cse_dump)\n-\tfinish_graph_dump_file (dump_base_name, \".cse\");\n+\tfinish_graph_dump_file (dump_base_name, \".02.cse\");\n+      if (addressof_dump)\n+\tfinish_graph_dump_file (dump_base_name, \".03.addressof\");\n+      if (gcse_dump)\n+\tfinish_graph_dump_file (dump_base_name, \".04.gcse\");\n       if (loop_dump)\n-\tfinish_graph_dump_file (dump_base_name, \".loop\");\n+\tfinish_graph_dump_file (dump_base_name, \".05.loop\");\n       if (cse2_dump)\n-\tfinish_graph_dump_file (dump_base_name, \".cse2\");\n+\tfinish_graph_dump_file (dump_base_name, \".06.cse2\");\n       if (branch_prob_dump)\n-\tfinish_graph_dump_file (dump_base_name, \".bp\");\n+\tfinish_graph_dump_file (dump_base_name, \".07.bp\");\n       if (flow_dump)\n-\tfinish_graph_dump_file (dump_base_name, \".flow\");\n+\tfinish_graph_dump_file (dump_base_name, \".08.flow\");\n       if (combine_dump)\n-\tfinish_graph_dump_file (dump_base_name, \".combine\");\n+\tfinish_graph_dump_file (dump_base_name, \".09.combine\");\n       if (regmove_dump)\n-\tfinish_graph_dump_file (dump_base_name, \".regmove\");\n+\tfinish_graph_dump_file (dump_base_name, \".10.regmove\");\n+#ifdef INSN_SCHEDULING\n       if (sched_dump)\n-\tfinish_graph_dump_file (dump_base_name, \".sched\");\n+\tfinish_graph_dump_file (dump_base_name, \".11.sched\");\n+#endif\n       if (local_reg_dump)\n-\tfinish_graph_dump_file (dump_base_name, \".lreg\");\n+\tfinish_graph_dump_file (dump_base_name, \".12.lreg\");\n       if (global_reg_dump)\n-\tfinish_graph_dump_file (dump_base_name, \".greg\");\n+\tfinish_graph_dump_file (dump_base_name, \".13.greg\");\n       if (flow2_dump)\n-\tfinish_graph_dump_file (dump_base_name, \".flow2\");\n+\tfinish_graph_dump_file (dump_base_name, \".14.flow2\");\n+#ifdef HAVE_peephole2\n+      if (flow2_dump)\n+\tfinish_graph_dump_file (dump_base_name, \".15.peephole2\");\n+#endif\n+#ifdef INSN_SCHEDULING\n       if (sched2_dump)\n-\tfinish_graph_dump_file (dump_base_name, \".sched2\");\n+\tfinish_graph_dump_file (dump_base_name, \".16.sched2\");\n+#endif\n       if (jump2_opt_dump)\n-\tfinish_graph_dump_file (dump_base_name, \".jump2\");\n+\tfinish_graph_dump_file (dump_base_name, \".17.jump2\");\n+#ifdef MACHINE_DEPENDENT_REORG\n+      if (mach_dep_reorg_dump)\n+\tfinish_graph_dump_file (dump_base_name, \".18.mach\");\n+#endif\n #ifdef DELAY_SLOTS\n       if (dbr_sched_dump)\n-\tfinish_graph_dump_file (dump_base_name, \".dbr\");\n+\tfinish_graph_dump_file (dump_base_name, \".19.dbr\");\n #endif\n-      if (gcse_dump)\n-\tfinish_graph_dump_file (dump_base_name, \".gcse\");\n #ifdef STACK_REGS\n       if (stack_reg_dump)\n-\tfinish_graph_dump_file (dump_base_name, \".stack\");\n-#endif\n-#ifdef MACHINE_DEPENDENT_REORG\n-      if (mach_dep_reorg_dump)\n-\tfinish_graph_dump_file (dump_base_name, \".mach\");\n+\tfinish_graph_dump_file (dump_base_name, \".20.stack\");\n #endif\n     }\n \n@@ -3385,21 +3397,31 @@ compile_file (name)\n       print_time (\"flow\", flow_time);\n       print_time (\"combine\", combine_time);\n       print_time (\"regmove\", regmove_time);\n+#ifdef INSN_SCHEDULING\n       print_time (\"sched\", sched_time);\n+#endif\n       print_time (\"local-alloc\", local_alloc_time);\n       print_time (\"global-alloc\", global_alloc_time);\n       print_time (\"flow2\", flow2_time);\n+#ifdef HAVE_peephole2\n+      print_time (\"peephole2\", peephole2_time);\n+#endif\n+#ifdef INSN_SCHEDULING\n       print_time (\"sched2\", sched2_time);\n+#endif\n #ifdef DELAY_SLOTS\n       print_time (\"dbranch\", dbr_sched_time);\n #endif\n       print_time (\"shorten-branch\", shorten_branch_time);\n+#ifdef STACK_REGS\n       print_time (\"stack-reg\", stack_reg_time);\n+#endif\n       print_time (\"final\", final_time);\n       print_time (\"varconst\", varconst_time);\n       print_time (\"symout\", symout_time);\n       print_time (\"dump\", dump_time);\n-      print_time (\"gc\", gc_time);\n+      if (ggc_p)\n+\tprint_time (\"gc\", gc_time);\n     }\n }\n \f\n@@ -3565,7 +3587,7 @@ rest_of_compilation (decl)\n \n       if (rtl_dump)\n \t{\n-\t  open_dump_file (\".rtl\", decl_printable_name (decl, 2));\n+\t  open_dump_file (\".00.rtl\", decl_printable_name (decl, 2));\n \t  \n \t  if (DECL_SAVED_INSNS (decl))\n \t    fprintf (rtl_dump_file, \";; (integrable)\\n\\n\");\n@@ -3723,7 +3745,7 @@ rest_of_compilation (decl)\n \n   /* Dump rtl code after jump, if we are doing that.  */\n   if (jump_opt_dump)\n-    dump_rtl (\".jump\", decl, print_rtl, insns);\n+    dump_rtl (\".01.jump\", decl, print_rtl, insns);\n \n   if (ggc_p)\n     ggc_collect ();\n@@ -3736,7 +3758,7 @@ rest_of_compilation (decl)\n   if (optimize > 0)\n     {\n       if (cse_dump)\n-\topen_dump_file (\".cse\", decl_printable_name (decl, 2));\n+\topen_dump_file (\".02.cse\", decl_printable_name (decl, 2));\n \n       TIMEVAR (cse_time, reg_scan (insns, max_reg_num (), 1));\n \n@@ -3768,7 +3790,7 @@ rest_of_compilation (decl)\n \t{\n \t  close_dump_file (print_rtl, insns);\n \t  if (graph_dump_format != no_graph)\n-\t    print_rtl_graph_with_bb (dump_base_name, \".cse\", insns);\n+\t    print_rtl_graph_with_bb (dump_base_name, \".02.cse\", insns);\n \t}\n     }\n \n@@ -3777,9 +3799,9 @@ rest_of_compilation (decl)\n \n   if (addressof_dump)\n     {\n-      dump_rtl (\".addressof\", decl, print_rtl, insns);\n+      dump_rtl (\".03.addressof\", decl, print_rtl, insns);\n       if (graph_dump_format != no_graph)\n-\tprint_rtl_graph_with_bb (dump_base_name, \".addressof\", insns);\n+\tprint_rtl_graph_with_bb (dump_base_name, \".03.addressof\", insns);\n     }\n \n   if (ggc_p)\n@@ -3790,7 +3812,7 @@ rest_of_compilation (decl)\n   if (optimize > 0 && flag_gcse)\n     {\n       if (gcse_dump)\n-\topen_dump_file (\".gcse\", decl_printable_name (decl, 2));\n+\topen_dump_file (\".04.gcse\", decl_printable_name (decl, 2));\n \n       TIMEVAR (gcse_time, tem = gcse_main (insns, rtl_dump_file));\n \n@@ -3807,7 +3829,7 @@ rest_of_compilation (decl)\n \t{\n \t  close_dump_file (print_rtl, insns);\n \t  if (graph_dump_format != no_graph)\n-\t    print_rtl_graph_with_bb (dump_base_name, \".gcse\", insns);\n+\t    print_rtl_graph_with_bb (dump_base_name, \".04.gcse\", insns);\n \t}\n \n       if (ggc_p)\n@@ -3818,7 +3840,7 @@ rest_of_compilation (decl)\n   if (optimize > 0)\n     {\n       if (loop_dump)\n-\topen_dump_file (\".loop\", decl_printable_name (decl, 2));\n+\topen_dump_file (\".05.loop\", decl_printable_name (decl, 2));\n \t\n       TIMEVAR\n \t(loop_time,\n@@ -3849,7 +3871,7 @@ rest_of_compilation (decl)\n \t{\n \t  close_dump_file (print_rtl, insns);\n \t  if (graph_dump_format != no_graph)\n-\t    print_rtl_graph_with_bb (dump_base_name, \".loop\", insns);\n+\t    print_rtl_graph_with_bb (dump_base_name, \".05.loop\", insns);\n \t}\n \n       if (ggc_p)\n@@ -3864,7 +3886,7 @@ rest_of_compilation (decl)\n   if (optimize > 0)\n     {\n       if (cse2_dump)\n-\topen_dump_file (\".cse2\", decl_printable_name (decl, 2));\n+\topen_dump_file (\".06.cse2\", decl_printable_name (decl, 2));\n \n       if (flag_rerun_cse_after_loop)\n \t{\n@@ -3901,7 +3923,7 @@ rest_of_compilation (decl)\n \t{\n \t  close_dump_file (print_rtl, insns);\n \t  if (graph_dump_format != no_graph)\n-\t    print_rtl_graph_with_bb (dump_base_name, \".cse2\", insns);\n+\t    print_rtl_graph_with_bb (dump_base_name, \".06.cse2\", insns);\n \t}\n \n       if (ggc_p)\n@@ -3911,7 +3933,7 @@ rest_of_compilation (decl)\n   if (profile_arc_flag || flag_test_coverage || flag_branch_probabilities)\n     {\n       if (branch_prob_dump)\n-\topen_dump_file (\".bp\", decl_printable_name (decl, 2));\n+\topen_dump_file (\".07.bp\", decl_printable_name (decl, 2));\n \n       TIMEVAR\n \t(branch_prob_time,\n@@ -3923,7 +3945,7 @@ rest_of_compilation (decl)\n \t{\n \t  close_dump_file (print_rtl, insns);\n \t  if (graph_dump_format != no_graph)\n-\t    print_rtl_graph_with_bb (dump_base_name, \".bp\", insns);\n+\t    print_rtl_graph_with_bb (dump_base_name, \".07.bp\", insns);\n \t}\n \n       if (ggc_p)\n@@ -3943,7 +3965,7 @@ rest_of_compilation (decl)\n      because doing the flow analysis makes some of the dump.  */\n \n   if (flow_dump)\n-    open_dump_file (\".flow\", decl_printable_name (decl, 2));\n+    open_dump_file (\".08.flow\", decl_printable_name (decl, 2));\n   \n   if (obey_regdecls)\n     {\n@@ -3979,7 +4001,7 @@ rest_of_compilation (decl)\n     {\n       close_dump_file (print_rtl_with_bb, insns);\n       if (graph_dump_format != no_graph)\n-\tprint_rtl_graph_with_bb (dump_base_name, \".flow\", insns);\n+\tprint_rtl_graph_with_bb (dump_base_name, \".08.flow\", insns);\n     }\n \n   if (ggc_p)\n@@ -3999,9 +4021,9 @@ rest_of_compilation (decl)\n \n       if (combine_dump)\n \t{\n-\t  dump_rtl (\".combine\", decl, print_rtl_with_bb, insns);\n+\t  dump_rtl (\".09.combine\", decl, print_rtl_with_bb, insns);\n \t  if (graph_dump_format != no_graph)\n-\t    print_rtl_graph_with_bb (dump_base_name, \".combine\", insns);\n+\t    print_rtl_graph_with_bb (dump_base_name, \".09.combine\", insns);\n \t}\n \n       if (ggc_p)\n@@ -4013,7 +4035,7 @@ rest_of_compilation (decl)\n   if (optimize > 0 && (flag_regmove || flag_expensive_optimizations))\n     {\n       if (regmove_dump)\n-\topen_dump_file (\".regmove\", decl_printable_name (decl, 2));\n+\topen_dump_file (\".10.regmove\", decl_printable_name (decl, 2));\n \n       TIMEVAR (regmove_time, regmove_optimize (insns, max_reg_num (),\n \t\t\t\t\t       rtl_dump_file));\n@@ -4022,7 +4044,7 @@ rest_of_compilation (decl)\n \t{\n \t  close_dump_file (print_rtl_with_bb, insns);\n \t  if (graph_dump_format != no_graph)\n-\t    print_rtl_graph_with_bb (dump_base_name, \".regmove\", insns);\n+\t    print_rtl_graph_with_bb (dump_base_name, \".10.regmove\", insns);\n \t}\n \n       if (ggc_p)\n@@ -4032,10 +4054,11 @@ rest_of_compilation (decl)\n   /* Print function header into sched dump now\n      because doing the sched analysis makes some of the dump.  */\n \n+#ifdef INSN_SCHEDULING\n   if (optimize > 0 && flag_schedule_insns)\n     {\n       if (sched_dump)\n-\topen_dump_file (\".sched\", decl_printable_name (decl, 2));\n+\topen_dump_file (\".11.sched\", decl_printable_name (decl, 2));\n \n       /* Do control and data sched analysis,\n \t and write some of the results to dump file.  */\n@@ -4048,12 +4071,13 @@ rest_of_compilation (decl)\n \t{\n \t  close_dump_file (print_rtl_with_bb, insns);\n \t  if (graph_dump_format != no_graph)\n-\t    print_rtl_graph_with_bb (dump_base_name, \".sched\", insns);\n+\t    print_rtl_graph_with_bb (dump_base_name, \".11.sched\", insns);\n \t}\n \n       if (ggc_p)\n \tggc_collect ();\n     }\n+#endif\n \n   /* Determine if the current function is a leaf before running reload\n      since this can impact optimizations done by the prologue and\n@@ -4080,21 +4104,21 @@ rest_of_compilation (decl)\n \n   if (local_reg_dump)\n     {\n-      open_dump_file (\".lreg\", decl_printable_name (decl, 2));\n+      open_dump_file (\".12.lreg\", decl_printable_name (decl, 2));\n \n       TIMEVAR (dump_time, dump_flow_info (rtl_dump_file));\n       TIMEVAR (dump_time, dump_local_alloc (rtl_dump_file));\n \n       close_dump_file (print_rtl_with_bb, insns);\n       if (graph_dump_format != no_graph)\n-\tprint_rtl_graph_with_bb (dump_base_name, \".lreg\", insns);\n+\tprint_rtl_graph_with_bb (dump_base_name, \".12.lreg\", insns);\n     }\n \n   if (ggc_p)\n     ggc_collect ();\n \n   if (global_reg_dump)\n-    open_dump_file (\".greg\", decl_printable_name (decl, 2));\n+    open_dump_file (\".13.greg\", decl_printable_name (decl, 2));\n \n   /* Unless we did stupid register allocation,\n      allocate remaining pseudo-regs, then do the reload pass\n@@ -4158,12 +4182,12 @@ rest_of_compilation (decl)\n       TIMEVAR (dump_time, dump_global_regs (rtl_dump_file));\n       close_dump_file (print_rtl_with_bb, insns);\n       if (graph_dump_format != no_graph)\n-\tprint_rtl_graph_with_bb (dump_base_name, \".greg\", insns);\n+\tprint_rtl_graph_with_bb (dump_base_name, \".13.greg\", insns);\n     }\n \n   /* Re-create the death notes which were deleted during reload.  */\n   if (flow2_dump)\n-    open_dump_file (\".flow2\", decl_printable_name (decl, 2));\n+    open_dump_file (\".14.flow2\", decl_printable_name (decl, 2));\n   \n   if (optimize)\n     {\n@@ -4191,30 +4215,31 @@ rest_of_compilation (decl)\n     {\n       close_dump_file (print_rtl_with_bb, insns);\n       if (graph_dump_format != no_graph)\n-\tprint_rtl_graph_with_bb (dump_base_name, \".flow2\", insns);\n+\tprint_rtl_graph_with_bb (dump_base_name, \".14.flow2\", insns);\n     }\n \n #ifdef HAVE_peephole2\n   if (optimize > 0 && flag_peephole2)\n     {\n       if (peephole2_dump)\n-\topen_dump_file (\".peephole2\", decl_printable_name (decl, 2));\n+\topen_dump_file (\".15.peephole2\", decl_printable_name (decl, 2));\n \n-      peephole2_optimize (rtl_dump_file);\n+      TIMEVAR (peephole2_time, peephole2_optimize (rtl_dump_file));\n \n       if (peephole2_dump)\n \t{\n \t  close_dump_file (print_rtl_with_bb, insns);\n \t  if (graph_dump_format != no_graph)\n-\t    print_rtl_graph_with_bb (dump_base_name, \".peephole2\", insns);\n+\t    print_rtl_graph_with_bb (dump_base_name, \".15.peephole2\", insns);\n \t}\n     }\n #endif\n \n+#ifdef INSN_SCHEDULING\n   if (optimize > 0 && flag_schedule_insns_after_reload)\n     {\n       if (sched2_dump)\n-\topen_dump_file (\".sched2\", decl_printable_name (decl, 2));\n+\topen_dump_file (\".16.sched2\", decl_printable_name (decl, 2));\n \n       /* Do control and data sched analysis again,\n \t and write some more of the results to dump file.  */\n@@ -4227,12 +4252,13 @@ rest_of_compilation (decl)\n \t{\n \t  close_dump_file (print_rtl_with_bb, insns);\n \t  if (graph_dump_format != no_graph)\n-\t    print_rtl_graph_with_bb (dump_base_name, \".sched2\", insns);\n+\t    print_rtl_graph_with_bb (dump_base_name, \".16.sched2\", insns);\n \t}\n \n       if (ggc_p)\n \tggc_collect ();\n     }\n+#endif\n \n #ifdef LEAF_REGISTERS\n   current_function_uses_only_leaf_regs\n@@ -4254,24 +4280,24 @@ rest_of_compilation (decl)\n \n       if (jump2_opt_dump)\n \t{\n-\t  dump_rtl (\".jump2\", decl, print_rtl_with_bb, insns);\n+\t  dump_rtl (\".17.jump2\", decl, print_rtl_with_bb, insns);\n \t  if (graph_dump_format != no_graph)\n-\t    print_rtl_graph_with_bb (dump_base_name, \".jump2\", insns);\n+\t    print_rtl_graph_with_bb (dump_base_name, \".17.jump2\", insns);\n \t}\n     }\n \n   /* If a machine dependent reorganization is needed, call it.  */\n #ifdef MACHINE_DEPENDENT_REORG\n   if (mach_dep_reorg_dump)\n-    open_dump_file (\".mach\", decl_printable_name (decl, 2));\n+    open_dump_file (\".18.mach\", decl_printable_name (decl, 2));\n \n    MACHINE_DEPENDENT_REORG (insns);\n \n    if (mach_dep_reorg_dump)\n      {\n        close_dump_file (print_rtl_with_bb, insns);\n        if (graph_dump_format != no_graph)\n-\t print_rtl_graph_with_bb (dump_base_name, \".mach\", insns);\n+\t print_rtl_graph_with_bb (dump_base_name, \".18.mach\", insns);\n      }\n \n    if (ggc_p)\n@@ -4285,15 +4311,15 @@ rest_of_compilation (decl)\n   if (optimize > 0 && flag_delayed_branch)\n     {\n       if (dbr_sched_dump)\n-\topen_dump_file (\".dbr\", decl_printable_name (decl, 2));\n+\topen_dump_file (\".19.dbr\", decl_printable_name (decl, 2));\n \n       TIMEVAR (dbr_sched_time, dbr_schedule (insns, rtl_dump_file));\n \n       if (dbr_sched_dump)\n \t{\n \t  close_dump_file (print_rtl_with_bb, insns);\n \t  if (graph_dump_format != no_graph)\n-\t    print_rtl_graph_with_bb (dump_base_name, \".dbr\", insns);\n+\t    print_rtl_graph_with_bb (dump_base_name, \".19.dbr\", insns);\n \t}\n     }\n \n@@ -4309,15 +4335,15 @@ rest_of_compilation (decl)\n \n #ifdef STACK_REGS\n   if (stack_reg_dump)\n-    open_dump_file (\".stack\", decl_printable_name (decl, 2));\n+    open_dump_file (\".20.stack\", decl_printable_name (decl, 2));\n \n   TIMEVAR (stack_reg_time, reg_to_stack (insns, rtl_dump_file));\n \n   if (stack_reg_dump)\n     {\n-      dump_rtl (\".stack\", decl, print_rtl_with_bb, insns);\n+      close_dump_file (print_rtl_with_bb, insns);\n       if (graph_dump_format != no_graph)\n-\tprint_rtl_graph_with_bb (dump_base_name, \".stack\", insns);\n+\tprint_rtl_graph_with_bb (dump_base_name, \".20.stack\", insns);\n     }\n \n    if (ggc_p)"}]}