{"sha": "86502ecfe41ae0ba0b3698be199797496e77c8c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY1MDJlY2ZlNDFhZTBiYTBiMzY5OGJlMTk5Nzk3NDk2ZTc3YzhjMQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-12-04T14:04:36Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-12-04T14:04:36Z"}, "message": "re PR tree-optimization/83255 ([graphite] Wrong code w/ -O1 -floop-nest-optimize)\n\n2017-12-04  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/83255\n\t* graphite-isl-ast-to-gimple.c (translate_isl_ast_node_for):\n\tRe-add zero-iteration check.\n\n\t* gcc.dg/graphite/pr83255.c: New testcase.\n\nFrom-SVN: r255382", "tree": {"sha": "b8153da555cc69903974fcaf8206c072d46b03ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8153da555cc69903974fcaf8206c072d46b03ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86502ecfe41ae0ba0b3698be199797496e77c8c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86502ecfe41ae0ba0b3698be199797496e77c8c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86502ecfe41ae0ba0b3698be199797496e77c8c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86502ecfe41ae0ba0b3698be199797496e77c8c1/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ca4564f9a45ad806087e6cc5df3c6882a1879cdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca4564f9a45ad806087e6cc5df3c6882a1879cdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca4564f9a45ad806087e6cc5df3c6882a1879cdf"}], "stats": {"total": 65, "additions": 65, "deletions": 0}, "files": [{"sha": "c73452a5f09ed22343e978671358ba544acc1135", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86502ecfe41ae0ba0b3698be199797496e77c8c1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86502ecfe41ae0ba0b3698be199797496e77c8c1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=86502ecfe41ae0ba0b3698be199797496e77c8c1", "patch": "@@ -1,3 +1,9 @@\n+2017-12-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/83255\n+\t* graphite-isl-ast-to-gimple.c (translate_isl_ast_node_for):\n+\tRe-add zero-iteration check.\n+\n 2017-12-04  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR rtl-optimization/83245"}, {"sha": "c565cf003794b61b82ccc3e22d869d316321bafc", "filename": "gcc/graphite-isl-ast-to-gimple.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86502ecfe41ae0ba0b3698be199797496e77c8c1/gcc%2Fgraphite-isl-ast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86502ecfe41ae0ba0b3698be199797496e77c8c1/gcc%2Fgraphite-isl-ast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-isl-ast-to-gimple.c?ref=86502ecfe41ae0ba0b3698be199797496e77c8c1", "patch": "@@ -720,6 +720,32 @@ translate_isl_ast_node_for (loop_p context_loop, __isl_keep isl_ast_node *node,\n     ub = integer_zero_node;\n \n   edge last_e = single_succ_edge (split_edge (next_e));\n+\n+  /* Compensate for the fact that we emit a do { } while loop from\n+     a for ISL AST.\n+     ???  We often miss constraints on niter because the SESE region\n+     doesn't cover loop header copies.  Ideally we'd add constraints\n+     for all relevant dominating conditions.  */\n+  if (TREE_CODE (lb) == INTEGER_CST && TREE_CODE (ub) == INTEGER_CST\n+      && tree_int_cst_compare (lb, ub) <= 0)\n+    ;\n+  else\n+    {\n+      tree one = build_one_cst (POINTER_TYPE_P (type) ? sizetype : type);\n+      /* Adding +1 and using LT_EXPR helps with loop latches that have a\n+\t loop iteration count of \"PARAMETER - 1\".  For PARAMETER == 0 this\n+\t becomes 2^k-1 due to integer overflow, and the condition lb <= ub\n+\t is true, even if we do not want this.  However lb < ub + 1 is false,\n+\t as expected.  */\n+      tree ub_one = fold_build2 (POINTER_TYPE_P (type)\n+\t\t\t\t ? POINTER_PLUS_EXPR : PLUS_EXPR,\n+\t\t\t\t type, ub, one);\n+      create_empty_if_region_on_edge (next_e,\n+\t\t\t\t      fold_build2 (LT_EXPR, boolean_type_node,\n+\t\t\t\t\t\t   lb, ub_one));\n+      next_e = get_true_edge_from_guard_bb (next_e->dest);\n+    }\n+\n   translate_isl_ast_for_loop (context_loop, node, next_e,\n \t\t\t      type, lb, ub, ip);\n   return last_e;"}, {"sha": "4d02ff726fbc590c45c8fe4061d6a856a32b4ca4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86502ecfe41ae0ba0b3698be199797496e77c8c1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86502ecfe41ae0ba0b3698be199797496e77c8c1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=86502ecfe41ae0ba0b3698be199797496e77c8c1", "patch": "@@ -1,3 +1,8 @@\n+2017-12-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/83255\n+\t* gcc.dg/graphite/pr83255.c: New testcase.\n+\n 2017-12-04  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/83238"}, {"sha": "cb376fa61be457f3e7fd8927b3aecfd73c8ed001", "filename": "gcc/testsuite/gcc.dg/graphite/pr83255.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86502ecfe41ae0ba0b3698be199797496e77c8c1/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr83255.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86502ecfe41ae0ba0b3698be199797496e77c8c1/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr83255.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr83255.c?ref=86502ecfe41ae0ba0b3698be199797496e77c8c1", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O -floop-nest-optimize -fdump-tree-graphite-details\" } */\n+\n+int rx, in;\n+\n+int\n+main (void)\n+{\n+  const int tj = 3;\n+  int as[tj];\n+  static int l4;\n+\n+  while (l4 < 1)\n+    {\n+      for (rx = 0; rx < tj; ++rx)\n+\t{\n+\t  for (in = 0; in < tj; ++in)\n+\t    as[in] = 1;\n+\t  as[rx] = 0;\n+\t}\n+      ++l4;\n+    }\n+\n+  if (as[tj - 1] != 0)\n+    __builtin_abort ();\n+}\n+\n+/* { dg-final { scan-tree-dump \"loop nest optimized\" \"graphite\" } } */"}]}