{"sha": "efc5aa6bc7c686b302c5d7fd7f65e3f6361961e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZjNWFhNmJjN2M2ODZiMzAyYzVkN2ZkN2Y2NWUzZjYzNjE5NjFlMQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2016-10-14T20:32:03Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2016-10-14T20:32:03Z"}, "message": "diagnostic.c (diagnostic_action_after_output): Remove max error handling here ....\n\n\t* diagnostic.c (diagnostic_action_after_output): Remove max error\n\thandling here ....\n\t(diagnostic_report_diagnostic): ... do it here instead.\n\n\ttestsuite/\n\t* c-c++-common/fmax-errors.c: Make sure note is emitted.\n\nFrom-SVN: r241186", "tree": {"sha": "fb0e8691c78ca666efcf1cc3698c8851e0960779", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb0e8691c78ca666efcf1cc3698c8851e0960779"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efc5aa6bc7c686b302c5d7fd7f65e3f6361961e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efc5aa6bc7c686b302c5d7fd7f65e3f6361961e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efc5aa6bc7c686b302c5d7fd7f65e3f6361961e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efc5aa6bc7c686b302c5d7fd7f65e3f6361961e1/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "983496febcc17e53d5596cff4d2cb1f1c16ebe19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/983496febcc17e53d5596cff4d2cb1f1c16ebe19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/983496febcc17e53d5596cff4d2cb1f1c16ebe19"}], "stats": {"total": 61, "additions": 44, "deletions": 17}, "files": [{"sha": "a131bba2909ca91777ed6f08f4bc86346766d93e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efc5aa6bc7c686b302c5d7fd7f65e3f6361961e1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efc5aa6bc7c686b302c5d7fd7f65e3f6361961e1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=efc5aa6bc7c686b302c5d7fd7f65e3f6361961e1", "patch": "@@ -1,3 +1,9 @@\n+2016-10-14  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* diagnostic.c (diagnostic_action_after_output): Remove fatal\n+\tand max error handling here ....\n+\t(diagnostic_report_diagnostic): ... do it here instead.\n+\n 2016-10-14  David Malcolm  <dmalcolm@redhat.com>\n \n \t* print-rtl-function.c (print_edge): Omit \"(flags)\" when none are"}, {"sha": "24aceec558ccec4d2f67659ee5000db1ad0ba591", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 22, "deletions": 15, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efc5aa6bc7c686b302c5d7fd7f65e3f6361961e1/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efc5aa6bc7c686b302c5d7fd7f65e3f6361961e1/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=efc5aa6bc7c686b302c5d7fd7f65e3f6361961e1", "patch": "@@ -470,18 +470,8 @@ diagnostic_action_after_output (diagnostic_context *context,\n \t  diagnostic_finish (context);\n \t  exit (FATAL_EXIT_CODE);\n \t}\n-      if (context->max_errors != 0\n-\t  && ((unsigned) (diagnostic_kind_count (context, DK_ERROR)\n-\t\t\t  + diagnostic_kind_count (context, DK_SORRY)\n-\t\t\t  + diagnostic_kind_count (context, DK_WERROR))\n-\t      >= context->max_errors))\n-\t{\n-\t  fnotice (stderr,\n-\t\t   \"compilation terminated due to -fmax-errors=%u.\\n\",\n-\t\t   context->max_errors);\n-\t  diagnostic_finish (context);\n-\t  exit (FATAL_EXIT_CODE);\n-\t}\n+      /* -fmax-error handling is just before the next diagnostic is\n+\t emitted.  */\n       break;\n \n     case DK_ICE:\n@@ -834,9 +824,7 @@ diagnostic_report_diagnostic (diagnostic_context *context,\n      -Wno-error=*.  */\n   if (context->warning_as_error_requested\n       && diagnostic->kind == DK_WARNING)\n-    {\n-      diagnostic->kind = DK_ERROR;\n-    }\n+    diagnostic->kind = DK_ERROR;\n \n   if (diagnostic->option_index\n       && diagnostic->option_index != permissive_error_option (context))\n@@ -892,6 +880,25 @@ diagnostic_report_diagnostic (diagnostic_context *context,\n \treturn false;\n     }\n \n+  if (diagnostic->kind != DK_NOTE && context->max_errors)\n+    {\n+      /* Check, before emitting the diagnostic, whether we would\n+\t exceed the limit.  This way we will emit notes relevant to\n+\t the final emitted error.  */\n+      int count = (diagnostic_kind_count (context, DK_ERROR)\n+\t\t   + diagnostic_kind_count (context, DK_SORRY)\n+\t\t   + diagnostic_kind_count (context, DK_WERROR));\n+\n+      if ((unsigned) count >= context->max_errors)\n+\t{\n+\t  fnotice (stderr,\n+\t\t   \"compilation terminated due to -fmax-errors=%u.\\n\",\n+\t\t   context->max_errors);\n+\t  diagnostic_finish (context);\n+\t  exit (FATAL_EXIT_CODE);\n+\t}\n+    }\n+\n   context->lock++;\n \n   if (diagnostic->kind == DK_ICE || diagnostic->kind == DK_ICE_NOBT)"}, {"sha": "0e3b399ed4ab41b11cb4c3b4c5a891720d7b795a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efc5aa6bc7c686b302c5d7fd7f65e3f6361961e1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efc5aa6bc7c686b302c5d7fd7f65e3f6361961e1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=efc5aa6bc7c686b302c5d7fd7f65e3f6361961e1", "patch": "@@ -1,3 +1,7 @@\n+2016-10-14  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* c-c++-common/fmax-errors.c: Add error with note.\n+\n 2016-10-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/77959"}, {"sha": "b44e2386ae566360aa89fb1d7a569b28a3dd5c5b", "filename": "gcc/testsuite/c-c++-common/fmax-errors.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efc5aa6bc7c686b302c5d7fd7f65e3f6361961e1/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffmax-errors.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efc5aa6bc7c686b302c5d7fd7f65e3f6361961e1/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffmax-errors.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffmax-errors.c?ref=efc5aa6bc7c686b302c5d7fd7f65e3f6361961e1", "patch": "@@ -1,11 +1,21 @@\n /* PR c/44782 */\n /* { dg-do compile } */\n-/* { dg-options \"-fmax-errors=3\" } */\n+/* { dg-options \"-fmax-errors=3 -Wall\" } */\n \n void foo (unsigned int i, unsigned int j)\n {\n   (i) ();\t\t\t/* { dg-error \"\" } */\n   (j) ();\t\t\t/* { dg-error \"\" } */\n-  (i+j) ();\t\t\t/* { dg-error \"\" } */\n+\n+  i + j; /* { dg-warning \"\" }  */\n+\n+  (k) ();\t\t\t/* { dg-error \"\" } */\n+  /* Make sure we see the notes related to the final error we emit.  */\n+  /* { dg-message \"identifier\" \"\" { target c } 12 } */\n+\n+  /* Warnings after the final error should not appear.  */\n+  i + j; /* no warning.  */\n+\n   (i*j) ();\t\t\t/* no error here due to -fmax-errors */\n+\n } /* { dg-prune-output \"compilation terminated\" } */"}]}