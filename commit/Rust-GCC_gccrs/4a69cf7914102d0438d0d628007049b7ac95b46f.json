{"sha": "4a69cf7914102d0438d0d628007049b7ac95b46f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE2OWNmNzkxNDEwMmQwNDM4ZDBkNjI4MDA3MDQ5YjdhYzk1YjQ2Zg==", "commit": {"author": {"name": "Josef Zlomek", "email": "zlomj9am@artax.karlin.mff.cuni.cz", "date": "2003-01-09T11:47:35Z"}, "committer": {"name": "Josef Zlomek", "email": "zlomek@gcc.gnu.org", "date": "2003-01-09T11:47:35Z"}, "message": "Makefile.in (optabs.o): Add dependency on basic-block.h.\n\n\t* Makefile.in (optabs.o): Add dependency on basic-block.h.\n\t* basic-block.h (control_flow_insn_p): Fuction was exported.\n\t* cfgbuild.c (control_flow_insn_p): Fuction was made non-static.\n\t* optabs.c (emit_libcall_block): Emit REG_LIBCALL and REG_RETVAL\n\tnotes only when the region is contained in a single basic block.\n\nFrom-SVN: r61101", "tree": {"sha": "d8d508dde209e151447df06687304535b5ecc081", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8d508dde209e151447df06687304535b5ecc081"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a69cf7914102d0438d0d628007049b7ac95b46f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a69cf7914102d0438d0d628007049b7ac95b46f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a69cf7914102d0438d0d628007049b7ac95b46f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a69cf7914102d0438d0d628007049b7ac95b46f/comments", "author": null, "committer": null, "parents": [{"sha": "8cb1a818e9417874729357e6456ffd1f86b235e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cb1a818e9417874729357e6456ffd1f86b235e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cb1a818e9417874729357e6456ffd1f86b235e8"}], "stats": {"total": 47, "additions": 36, "deletions": 11}, "files": [{"sha": "c0689759663f7034c98c6a41176417b43edca9dc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a69cf7914102d0438d0d628007049b7ac95b46f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a69cf7914102d0438d0d628007049b7ac95b46f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4a69cf7914102d0438d0d628007049b7ac95b46f", "patch": "@@ -1,3 +1,11 @@\n+2003-01-09  Josef Zlomek  <zlomj9am@artax.karlin.mff.cuni.cz>\n+\n+\t* Makefile.in (optabs.o): Add dependency on basic-block.h.\n+\t* basic-block.h (control_flow_insn_p): Fuction was exported.\n+\t* cfgbuild.c (control_flow_insn_p): Fuction was made non-static.\n+\t* optabs.c (emit_libcall_block): Emit REG_LIBCALL and REG_RETVAL\n+\tnotes only when the region is contained in a single basic block.\n+\n 2003-01-09  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \tPR inline-asm/8832"}, {"sha": "5ffdce2a9fb84b03bd973bb18351830f7a546f0c", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a69cf7914102d0438d0d628007049b7ac95b46f/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a69cf7914102d0438d0d628007049b7ac95b46f/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=4a69cf7914102d0438d0d628007049b7ac95b46f", "patch": "@@ -1,6 +1,6 @@\n # Makefile for GNU C compiler.\n #   Copyright (C) 1987, 1988, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997\n-#   1998, 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n+#   1998, 1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n \n #This file is part of GCC.\n \n@@ -1463,7 +1463,7 @@ explow.o : explow.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_\n    toplev.h function.h ggc.h $(TM_P_H) gt-explow.h\n optabs.o : optabs.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n    flags.h insn-config.h $(EXPR_H) $(OPTABS_H) libfuncs.h $(RECOG_H) reload.h \\\n-   toplev.h $(GGC_H) real.h $(TM_P_H) except.h gt-optabs.h\n+   toplev.h $(GGC_H) real.h $(TM_P_H) except.h gt-optabs.h $(BASIC_BLOCK_H)\n dbxout.o : dbxout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(RTL_H) \\\n    flags.h $(REGS_H) debug.h $(TM_P_H) $(TARGET_H) function.h langhooks.h \\\n    insn-config.h reload.h gstab.h xcoffout.h output.h dbxout.h toplev.h"}, {"sha": "78b7ac6b3f4a9483fe32351357b1cf4bcec0f920", "filename": "gcc/basic-block.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a69cf7914102d0438d0d628007049b7ac95b46f/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a69cf7914102d0438d0d628007049b7ac95b46f/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=4a69cf7914102d0438d0d628007049b7ac95b46f", "patch": "@@ -1,5 +1,5 @@\n /* Define control and data flow tables, and regsets.\n-   Copyright (C) 1987, 1997, 1998, 1999, 2000, 2001, 2002\n+   Copyright (C) 1987, 1997, 1998, 1999, 2000, 2001, 2002, 2003\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -806,6 +806,7 @@ extern void fixup_abnormal_edges\tPARAMS ((void));\n extern bool can_hoist_insn_p\t\tPARAMS ((rtx, rtx, regset));\n extern rtx hoist_insn_after\t\tPARAMS ((rtx, rtx, rtx, rtx));\n extern rtx hoist_insn_to_edge\t\tPARAMS ((rtx, edge, rtx, rtx));\n+extern bool control_flow_insn_p\t\tPARAMS ((rtx));\n \n /* In dominance.c */\n "}, {"sha": "7bc33f248d0e19c2531d04b9f5c68d4e5aa9fe7c", "filename": "gcc/cfgbuild.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a69cf7914102d0438d0d628007049b7ac95b46f/gcc%2Fcfgbuild.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a69cf7914102d0438d0d628007049b7ac95b46f/gcc%2Fcfgbuild.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgbuild.c?ref=4a69cf7914102d0438d0d628007049b7ac95b46f", "patch": "@@ -1,6 +1,6 @@\n /* Control flow graph building code for GNU compiler.\n    Copyright (C) 1987, 1988, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n+   1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -59,7 +59,6 @@ static void make_eh_edge\t\tPARAMS ((sbitmap *, basic_block, rtx));\n static void find_bb_boundaries\t\tPARAMS ((basic_block));\n static void compute_outgoing_frequencies PARAMS ((basic_block));\n static bool inside_basic_block_p\tPARAMS ((rtx));\n-static bool control_flow_insn_p\t\tPARAMS ((rtx));\n \f\n /* Return true if insn is something that should be contained inside basic\n    block.  */\n@@ -97,7 +96,7 @@ inside_basic_block_p (insn)\n /* Return true if INSN may cause control flow transfer, so it should be last in\n    the basic block.  */\n \n-static bool\n+bool\n control_flow_insn_p (insn)\n      rtx insn;\n {"}, {"sha": "d8c058e433081367a80bef268cc8d0c858e483d8", "filename": "gcc/optabs.c", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a69cf7914102d0438d0d628007049b7ac95b46f/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a69cf7914102d0438d0d628007049b7ac95b46f/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=4a69cf7914102d0438d0d628007049b7ac95b46f", "patch": "@@ -1,6 +1,6 @@\n /* Expand the basic unary and binary arithmetic operations, for GNU compiler.\n    Copyright (C) 1987, 1988, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001 Free Software Foundation, Inc.\n+   1999, 2000, 2001, 2003 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -42,6 +42,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"reload.h\"\n #include \"ggc.h\"\n #include \"real.h\"\n+#include \"basic-block.h\"\n \n /* Each optab contains info on how this target machine\n    can perform a particular operation\n@@ -3309,10 +3310,26 @@ emit_libcall_block (insns, target, result, equiv)\n   /* Encapsulate the block so it gets manipulated as a unit.  */\n   if (!flag_non_call_exceptions || !may_trap_p (equiv))\n     {\n-      REG_NOTES (first) = gen_rtx_INSN_LIST (REG_LIBCALL, last,\n-\t\t      \t\t\t     REG_NOTES (first));\n-      REG_NOTES (last) = gen_rtx_INSN_LIST (REG_RETVAL, first,\n-\t\t      \t\t\t    REG_NOTES (last));\n+      /* We can't attach the REG_LIBCALL and REG_RETVAL notes\n+\t when the encapsulated region would not be in one basic block,\n+\t i.e. when there is a control_flow_insn_p insn between FIRST and LAST.\n+       */\n+      bool attach_libcall_retval_notes = true;\n+      next = NEXT_INSN (last);\n+      for (insn = first; insn != next; insn = NEXT_INSN (insn))\n+\tif (control_flow_insn_p (insn))\n+\t  {\n+\t    attach_libcall_retval_notes = false;\n+\t    break;\n+\t  }\n+\n+      if (attach_libcall_retval_notes)\n+\t{\n+\t  REG_NOTES (first) = gen_rtx_INSN_LIST (REG_LIBCALL, last,\n+\t\t\t\t\t\t REG_NOTES (first));\n+\t  REG_NOTES (last) = gen_rtx_INSN_LIST (REG_RETVAL, first,\n+\t\t\t\t\t\tREG_NOTES (last));\n+\t}\n     }\n }\n \f"}]}