{"sha": "0009b473a0fe5c76e303f1cc34251df0cba2d478", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDAwOWI0NzNhMGZlNWM3NmUzMDNmMWNjMzQyNTFkZjBjYmEyZDQ3OA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2009-01-04T22:14:39Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2009-01-04T22:14:39Z"}, "message": "tree.def (LSHIFT_EXPR, [...]): Add commentary.\n\ngcc/\n\t* tree.def (LSHIFT_EXPR, RSHIFT_EXPR): Add commentary.\n\t* tree-cfg.c (verify_gimple_assign_binary): Allow shifts of\n\tfixed-point types, and vectors of the same.\n\nFrom-SVN: r143061", "tree": {"sha": "2afc7059c58e4a4029cc635e870740de81b70352", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2afc7059c58e4a4029cc635e870740de81b70352"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0009b473a0fe5c76e303f1cc34251df0cba2d478", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0009b473a0fe5c76e303f1cc34251df0cba2d478", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0009b473a0fe5c76e303f1cc34251df0cba2d478", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0009b473a0fe5c76e303f1cc34251df0cba2d478/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4f24c6d62f0818c402bcffb78186d1a64f2c5d1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f24c6d62f0818c402bcffb78186d1a64f2c5d1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f24c6d62f0818c402bcffb78186d1a64f2c5d1c"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "d7056f3de804c2d696c277565ff269768274b06e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0009b473a0fe5c76e303f1cc34251df0cba2d478/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0009b473a0fe5c76e303f1cc34251df0cba2d478/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0009b473a0fe5c76e303f1cc34251df0cba2d478", "patch": "@@ -1,3 +1,9 @@\n+2009-01-04  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* tree.def (LSHIFT_EXPR, RSHIFT_EXPR): Add commentary.\n+\t* tree-cfg.c (verify_gimple_assign_binary): Allow shifts of\n+\tfixed-point types, and vectors of the same.\n+\n 2009-01-04  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* config/mips/sync.md (*mb_barrier): Rename to..."}, {"sha": "875d123244d07adb2a0ce6622307e13854606f8b", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0009b473a0fe5c76e303f1cc34251df0cba2d478/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0009b473a0fe5c76e303f1cc34251df0cba2d478/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=0009b473a0fe5c76e303f1cc34251df0cba2d478", "patch": "@@ -3474,6 +3474,12 @@ verify_gimple_assign_binary (gimple stmt)\n \n     case LSHIFT_EXPR:\n     case RSHIFT_EXPR:\n+      if (FIXED_POINT_TYPE_P (rhs1_type)\n+\t  && INTEGRAL_TYPE_P (rhs2_type)\n+\t  && useless_type_conversion_p (lhs_type, rhs1_type))\n+\treturn false;\n+      /* Fall through.  */\n+\n     case LROTATE_EXPR:\n     case RROTATE_EXPR:\n       {\n@@ -3495,7 +3501,8 @@ verify_gimple_assign_binary (gimple stmt)\n     case VEC_RSHIFT_EXPR:\n       {\n \tif (TREE_CODE (rhs1_type) != VECTOR_TYPE\n-\t    || !INTEGRAL_TYPE_P (TREE_TYPE (rhs1_type))\n+\t    || !(INTEGRAL_TYPE_P (TREE_TYPE (rhs1_type))\n+\t\t || FIXED_POINT_TYPE_P (TREE_TYPE (rhs1_type)))\n \t    || (!INTEGRAL_TYPE_P (rhs2_type)\n \t\t&& (TREE_CODE (rhs2_type) != VECTOR_TYPE\n \t\t    || !INTEGRAL_TYPE_P (TREE_TYPE (rhs2_type))))"}, {"sha": "19a502952effa92b1f6309a2552d1fc8d61572b4", "filename": "gcc/tree.def", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0009b473a0fe5c76e303f1cc34251df0cba2d478/gcc%2Ftree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0009b473a0fe5c76e303f1cc34251df0cba2d478/gcc%2Ftree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.def?ref=0009b473a0fe5c76e303f1cc34251df0cba2d478", "patch": "@@ -691,7 +691,13 @@ DEFTREECODE (ABS_EXPR, \"abs_expr\", tcc_unary, 1)\n    The second operand is the number of bits to\n    shift by; it need not be the same type as the first operand and result.\n    Note that the result is undefined if the second operand is larger\n-   than or equal to the first operand's type size.  */\n+   than or equal to the first operand's type size.\n+\n+   The first operand of a shift can have either an integer or a\n+   (non-integer) fixed-point type.  We follow the ISO/IEC TR 18037:2004\n+   semantics for the latter.\n+\n+   Rotates are defined for integer types only.  */\n DEFTREECODE (LSHIFT_EXPR, \"lshift_expr\", tcc_binary, 2)\n DEFTREECODE (RSHIFT_EXPR, \"rshift_expr\", tcc_binary, 2)\n DEFTREECODE (LROTATE_EXPR, \"lrotate_expr\", tcc_binary, 2)"}]}