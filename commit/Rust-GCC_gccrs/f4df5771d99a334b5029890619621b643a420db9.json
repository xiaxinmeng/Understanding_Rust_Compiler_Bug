{"sha": "f4df5771d99a334b5029890619621b643a420db9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRkZjU3NzFkOTlhMzM0YjUwMjk4OTA2MTk2MjFiNjQzYTQyMGRiOQ==", "commit": {"author": {"name": "Andy Hutchinson", "email": "hutchinsonandy@aim.com", "date": "2008-06-15T18:24:27Z"}, "committer": {"name": "Andy Hutchinson", "email": "hutchinsonandy@gcc.gnu.org", "date": "2008-06-15T18:24:27Z"}, "message": "re PR target/36336 (ICE push_reload - psuedo reg_equiv_constant)\n\nPR target/36336\n* config/avr/avr.h (LEGITIMIZE_RELOAD_ADDRESS): Add check for reg_equiv_constant.\n\nFrom-SVN: r136818", "tree": {"sha": "4642715925145ea6e03f7758a9866644a50e3941", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4642715925145ea6e03f7758a9866644a50e3941"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4df5771d99a334b5029890619621b643a420db9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4df5771d99a334b5029890619621b643a420db9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4df5771d99a334b5029890619621b643a420db9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4df5771d99a334b5029890619621b643a420db9/comments", "author": null, "committer": null, "parents": [{"sha": "147fc44bcd5fdc30c1518a433b42a896a6d42a54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/147fc44bcd5fdc30c1518a433b42a896a6d42a54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/147fc44bcd5fdc30c1518a433b42a896a6d42a54"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "777743ae0ab1cba78cb154ec54e8eae0ba7468ec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4df5771d99a334b5029890619621b643a420db9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4df5771d99a334b5029890619621b643a420db9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f4df5771d99a334b5029890619621b643a420db9", "patch": "@@ -1,3 +1,9 @@\n+2008-06-015  Andy Hutchinson  <hutchinsonandy@aim.com>\n+\n+\tPR target/36336\n+\t* config/avr/avr.h (LEGITIMIZE_RELOAD_ADDRESS): Add check for \n+\treg_equiv_constant.\n+\n 2008-06-15  Maxim Kuvyrkov  <maxim@codesourcery.com>\n \n \t* config/mips/loongson2ef.md: New file."}, {"sha": "d915aff10405fea7ab2486b59c3f7948b5096cf5", "filename": "gcc/config/avr/avr.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4df5771d99a334b5029890619621b643a420db9/gcc%2Fconfig%2Favr%2Favr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4df5771d99a334b5029890619621b643a420db9/gcc%2Fconfig%2Favr%2Favr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.h?ref=f4df5771d99a334b5029890619621b643a420db9", "patch": "@@ -437,6 +437,11 @@ extern int avr_reg_order[];\n }\n \n #define XEXP_(X,Y) (X)\n+\n+/* LEGITIMIZE_RELOAD_ADDRESS will allow register R26/27 to be used, where it\n+   is no worse than normal base pointers R28/29 and R30/31. For example:\n+   If base offset is greater than 63 bytes or for R++ or --R addressing.  */\n+   \n #define LEGITIMIZE_RELOAD_ADDRESS(X, MODE, OPNUM, TYPE, IND_LEVELS, WIN)    \\\n do {\t\t\t\t\t\t\t\t\t    \\\n   if (1&&(GET_CODE (X) == POST_INC || GET_CODE (X) == PRE_DEC))\t    \\\n@@ -448,6 +453,7 @@ do {\t\t\t\t\t\t\t\t\t    \\\n     }\t\t\t\t\t\t\t\t\t    \\\n   if (GET_CODE (X) == PLUS\t\t\t\t\t\t    \\\n       && REG_P (XEXP (X, 0))\t\t\t\t\t\t    \\\n+      && reg_equiv_constant[REGNO (XEXP (X, 0))] == 0\t\t\t    \\\n       && GET_CODE (XEXP (X, 1)) == CONST_INT\t\t\t\t    \\\n       && INTVAL (XEXP (X, 1)) >= 1)\t\t\t\t\t    \\\n     {\t\t\t\t\t\t\t\t\t    \\"}]}