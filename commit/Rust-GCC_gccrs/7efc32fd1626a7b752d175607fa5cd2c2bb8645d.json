{"sha": "7efc32fd1626a7b752d175607fa5cd2c2bb8645d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VmYzMyZmQxNjI2YTdiNzUyZDE3NTYwN2ZhNWNkMmMyYmI4NjQ1ZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-04-14T12:54:19Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-04-14T12:54:19Z"}, "message": "(ereal_from_{int,uint}): Add new arg, MODE.\n\nFrom-SVN: r11764", "tree": {"sha": "6d909878284de624e7c470dc08d48da5cc095809", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d909878284de624e7c470dc08d48da5cc095809"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7efc32fd1626a7b752d175607fa5cd2c2bb8645d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7efc32fd1626a7b752d175607fa5cd2c2bb8645d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7efc32fd1626a7b752d175607fa5cd2c2bb8645d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7efc32fd1626a7b752d175607fa5cd2c2bb8645d/comments", "author": null, "committer": null, "parents": [{"sha": "48e73d63cc8680534a2013471993f3dd3b6539c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48e73d63cc8680534a2013471993f3dd3b6539c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48e73d63cc8680534a2013471993f3dd3b6539c6"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "9cbc58c30650a73f7ac056592833a3b3109618ff", "filename": "gcc/real.h", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7efc32fd1626a7b752d175607fa5cd2c2bb8645d/gcc%2Freal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7efc32fd1626a7b752d175607fa5cd2c2bb8645d/gcc%2Freal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.h?ref=7efc32fd1626a7b752d175607fa5cd2c2bb8645d", "patch": "@@ -1,5 +1,5 @@\n /* Front-end tree definitions for GNU compiler.\n-   Copyright (C) 1989, 1991, 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 1991, 1994, 1996 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -136,10 +136,12 @@ extern REAL_VALUE_TYPE ereal_negate PROTO((REAL_VALUE_TYPE));\n extern HOST_WIDE_INT efixi\tPROTO((REAL_VALUE_TYPE));\n extern unsigned HOST_WIDE_INT efixui PROTO((REAL_VALUE_TYPE));\n extern void ereal_from_int\tPROTO((REAL_VALUE_TYPE *,\n-\t\t\t\t       HOST_WIDE_INT, HOST_WIDE_INT));\n+\t\t\t\t       HOST_WIDE_INT, HOST_WIDE_INT,\n+\t\t\t\t       enum machine_mode));\n extern void ereal_from_uint\tPROTO((REAL_VALUE_TYPE *,\n \t\t\t\t       unsigned HOST_WIDE_INT,\n-\t\t\t\t       unsigned HOST_WIDE_INT));\n+\t\t\t\t       unsigned HOST_WIDE_INT,\n+\t\t\t\t       enum machine_mode));\n extern void ereal_to_int\tPROTO((HOST_WIDE_INT *, HOST_WIDE_INT *,\n \t\t\t\t       REAL_VALUE_TYPE));\n extern REAL_VALUE_TYPE ereal_ldexp PROTO((REAL_VALUE_TYPE, int));\n@@ -181,10 +183,11 @@ extern REAL_VALUE_TYPE real_value_truncate ();\n #define REAL_VALUE_TO_INT ereal_to_int\n \n /* Here the cast to HOST_WIDE_INT sign-extends arguments such as ~0.  */\n-#define REAL_VALUE_FROM_INT(d, lo, hi) \\\n-  ereal_from_int (&d, (HOST_WIDE_INT) (lo), (HOST_WIDE_INT) (hi))\n+#define REAL_VALUE_FROM_INT(d, lo, hi, mode) \\\n+  ereal_from_int (&d, (HOST_WIDE_INT) (lo), (HOST_WIDE_INT) (hi), mode)\n \n-#define REAL_VALUE_FROM_UNSIGNED_INT(d, lo, hi) (ereal_from_uint (&d, lo, hi))\n+#define REAL_VALUE_FROM_UNSIGNED_INT(d, lo, hi, mode) \\\n+  ereal_from_uint (&d, lo, hi, mode)\n \n /* IN is a REAL_VALUE_TYPE.  OUT is an array of longs. */\n #if LONG_DOUBLE_TYPE_SIZE == 96"}]}