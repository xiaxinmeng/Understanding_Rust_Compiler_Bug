{"sha": "5c846df71f33216fa8b5ccf21e88ee64b58b678a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM4NDZkZjcxZjMzMjE2ZmE4YjVjY2YyMWU4OGVlNjRiNThiNjc4YQ==", "commit": {"author": {"name": "Yuri Rumyantsev", "email": "ysrumyan@gmail.com", "date": "2015-12-18T10:16:56Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2015-12-18T10:16:56Z"}, "message": "re PR tree-optimization/68906 (ICE at -O3 on x86_64-linux-gnu: verify_ssa failed)\n\ngcc/\n\n2015-12-18  Yuri Rumyantsev  <ysrumyan@gmail.com>\n\n\tPR tree-optimization/68906\n\t* tree-ssa-loop-unswitch.c (tree_unswitch_outer_loop): Add check\n\tthat an exit block belongs to LOOP.\n\ngcc/testsuite/\n\n2015-12-18  Yuri Rumyantsev  <ysrumyan@gmail.com>\n\n\tPR tree-optimization/68906\n\t* gcc.dg/torture/pr68906.c: New test.\n\nFrom-SVN: r231812", "tree": {"sha": "f1d8e45b62b6d4c701c6a9043e57dedb159179af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1d8e45b62b6d4c701c6a9043e57dedb159179af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c846df71f33216fa8b5ccf21e88ee64b58b678a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c846df71f33216fa8b5ccf21e88ee64b58b678a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c846df71f33216fa8b5ccf21e88ee64b58b678a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c846df71f33216fa8b5ccf21e88ee64b58b678a/comments", "author": {"login": "ysrumyan", "id": 44425612, "node_id": "MDQ6VXNlcjQ0NDI1NjEy", "avatar_url": "https://avatars.githubusercontent.com/u/44425612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ysrumyan", "html_url": "https://github.com/ysrumyan", "followers_url": "https://api.github.com/users/ysrumyan/followers", "following_url": "https://api.github.com/users/ysrumyan/following{/other_user}", "gists_url": "https://api.github.com/users/ysrumyan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ysrumyan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ysrumyan/subscriptions", "organizations_url": "https://api.github.com/users/ysrumyan/orgs", "repos_url": "https://api.github.com/users/ysrumyan/repos", "events_url": "https://api.github.com/users/ysrumyan/events{/privacy}", "received_events_url": "https://api.github.com/users/ysrumyan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b3d51f238b954ccab35dfcbebf5321bc91106a40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3d51f238b954ccab35dfcbebf5321bc91106a40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3d51f238b954ccab35dfcbebf5321bc91106a40"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "aab0e3abb3d24469eacf0331d4d9d5970ca322a4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c846df71f33216fa8b5ccf21e88ee64b58b678a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c846df71f33216fa8b5ccf21e88ee64b58b678a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5c846df71f33216fa8b5ccf21e88ee64b58b678a", "patch": "@@ -1,3 +1,9 @@\n+2015-12-18  Yuri Rumyantsev  <ysrumyan@gmail.com>\n+\n+\tPR tree-optimization/68906\n+\t* tree-ssa-loop-unswitch.c (tree_unswitch_outer_loop): Add check\n+\tthat an exit block belongs to LOOP.\n+\n 2015-12-18  Ilya Enkovich  <enkovich.gnu@gmail.com>\n \n \tPR tree-optimization/68956"}, {"sha": "eee043417098275b86054cb41122b21a02cef9ab", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c846df71f33216fa8b5ccf21e88ee64b58b678a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c846df71f33216fa8b5ccf21e88ee64b58b678a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5c846df71f33216fa8b5ccf21e88ee64b58b678a", "patch": "@@ -1,3 +1,8 @@\n+2015-12-18  Yuri Rumyantsev  <ysrumyan@gmail.com>\n+\n+\tPR tree-optimization/68906\n+\t* gcc.dg/torture/pr68906.c: New test.\n+\n 2015-12-18  Ilya Enkovich  <enkovich.gnu@gmail.com>\n \n \tPR tree-optimization/68956"}, {"sha": "8c89bbd2ea404450378241dac44e3b128480e874", "filename": "gcc/testsuite/gcc.dg/torture/pr68906.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c846df71f33216fa8b5ccf21e88ee64b58b678a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68906.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c846df71f33216fa8b5ccf21e88ee64b58b678a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68906.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68906.c?ref=5c846df71f33216fa8b5ccf21e88ee64b58b678a", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+\n+int a;\n+volatile int b;\n+short c, d;\n+int\n+fn1 ()\n+{\n+  int e;\n+  for (;;)\n+    {\n+      a = 3;\n+      if (c)\n+\tcontinue;\n+      e = 0;\n+      for (; e > -30; e--)\n+\tif (b)\n+\t  {\n+\t    int f = e;\n+\t    return d;\n+\t  }\n+    }\n+}"}, {"sha": "a17c60e927c017d7ecd5056bc15cd26b10859722", "filename": "gcc/tree-ssa-loop-unswitch.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c846df71f33216fa8b5ccf21e88ee64b58b678a/gcc%2Ftree-ssa-loop-unswitch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c846df71f33216fa8b5ccf21e88ee64b58b678a/gcc%2Ftree-ssa-loop-unswitch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-unswitch.c?ref=5c846df71f33216fa8b5ccf21e88ee64b58b678a", "patch": "@@ -429,9 +429,9 @@ tree_unswitch_outer_loop (struct loop *loop)\n   gcc_assert (loop->inner);\n   if (loop->inner->next)\n     return false;\n-  /* Accept loops with single exit only.  */\n+  /* Accept loops with single exit only which is not from inner loop.  */\n   exit = single_exit (loop);\n-  if (!exit)\n+  if (!exit || exit->src->loop_father != loop)\n     return false;\n   /* Check that phi argument of exit edge is not defined inside loop.  */\n   if (!check_exit_phi (loop))"}]}