{"sha": "a0bf6cf784e56448d81d144f83eaaf90a9fe83b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBiZjZjZjc4NGU1NjQ0OGQ4MWQxNDRmODNlYWFmOTBhOWZlODNiNw==", "commit": {"author": {"name": "Sebastian Perta", "email": "sebastian.perta@renesas.com", "date": "2017-10-14T00:33:58Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2017-10-14T00:33:58Z"}, "message": "rl78.c (rl78_emit_libcall): New function.\n\n[gcc]\n\t* config/rl78/rl78.c (rl78_emit_libcall): New function.\n\t* config/rl78/rl78-protos.h (rl78_emit_libcall): New function.\n\t* config/rl78/rl78.md: New define_expand \"adddi3\".\n[libgcc]\n\t* config/rl78/adddi3.S: New assembly file.\n\t* config/rl78/t-rl78: Added adddi3.S to LIB2ADD.\n\nFrom-SVN: r253748", "tree": {"sha": "40fcdea8010a8fa679256d58b1bd874e7c47285c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40fcdea8010a8fa679256d58b1bd874e7c47285c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0bf6cf784e56448d81d144f83eaaf90a9fe83b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0bf6cf784e56448d81d144f83eaaf90a9fe83b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0bf6cf784e56448d81d144f83eaaf90a9fe83b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0bf6cf784e56448d81d144f83eaaf90a9fe83b7/comments", "author": null, "committer": null, "parents": [{"sha": "41841c3269593d1a308ea0bd4992e6c073f2ce63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41841c3269593d1a308ea0bd4992e6c073f2ce63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41841c3269593d1a308ea0bd4992e6c073f2ce63"}], "stats": {"total": 73, "additions": 72, "deletions": 1}, "files": [{"sha": "749b754b49fd81a5416ab726d54f902cce1b7f2f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0bf6cf784e56448d81d144f83eaaf90a9fe83b7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0bf6cf784e56448d81d144f83eaaf90a9fe83b7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a0bf6cf784e56448d81d144f83eaaf90a9fe83b7", "patch": "@@ -1,3 +1,9 @@\n+2017-10-13  Sebastian Perta  <sebastian.perta@renesas.com>\n+\n+\t* config/rl78/rl78.c (rl78_emit_libcall): New function.\n+\t* config/rl78/rl78-protos.h (rl78_emit_libcall): New function.\n+\t* config/rl78/rl78.md: New define_expand \"adddi3\".\n+\n 2017-10-13  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* cfghooks.c (verify_flow_info): Disable check that all probabilities"}, {"sha": "976bffa61e7faf37f272aebf2a382fea0b659333", "filename": "gcc/config/rl78/rl78-protos.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0bf6cf784e56448d81d144f83eaaf90a9fe83b7/gcc%2Fconfig%2Frl78%2Frl78-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0bf6cf784e56448d81d144f83eaaf90a9fe83b7/gcc%2Fconfig%2Frl78%2Frl78-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frl78%2Frl78-protos.h?ref=a0bf6cf784e56448d81d144f83eaaf90a9fe83b7", "patch": "@@ -54,3 +54,13 @@ void\t\trl78_output_aligned_common (FILE *, tree, const char *,\n \t\t\t\t\t    int, int, int);\n \n int\t\trl78_one_far_p (rtx *operands, int num_operands);\n+\n+#ifdef RTX_CODE\n+#ifdef HAVE_MACHINE_MODES\n+\n+rtx rl78_emit_libcall (const char*, enum rtx_code,\n+                       enum machine_mode, enum machine_mode,\n+                       int, rtx*);\n+\n+#endif\n+#endif"}, {"sha": "c835dc0317bb6b2f7d870e201432e3d9a2225183", "filename": "gcc/config/rl78/rl78.c", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0bf6cf784e56448d81d144f83eaaf90a9fe83b7/gcc%2Fconfig%2Frl78%2Frl78.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0bf6cf784e56448d81d144f83eaaf90a9fe83b7/gcc%2Fconfig%2Frl78%2Frl78.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frl78%2Frl78.c?ref=a0bf6cf784e56448d81d144f83eaaf90a9fe83b7", "patch": "@@ -4791,6 +4791,45 @@ rl78_addsi3_internal (rtx * operands, unsigned int alternative)\n     }\n }\n \n+rtx\n+rl78_emit_libcall (const char *name, enum rtx_code code,\n+                   enum machine_mode dmode, enum machine_mode smode,\n+                   int noperands, rtx *operands)\n+{\n+  rtx ret;\n+  rtx_insn *insns;\n+  rtx libcall;\n+  rtx equiv;\n+\n+  start_sequence ();\n+  libcall = gen_rtx_SYMBOL_REF (Pmode, name);\n+\n+  switch (noperands)\n+    {\n+    case 2:\n+      ret = emit_library_call_value (libcall, NULL_RTX, LCT_CONST,\n+                                     dmode, operands[1], smode);\n+      equiv = gen_rtx_fmt_e (code, dmode, operands[1]);\n+      break;\n+\n+    case 3:\n+      ret = emit_library_call_value (libcall, NULL_RTX,\n+                                     LCT_CONST, dmode,\n+                                     operands[1], smode, operands[2],\n+                                     smode);\n+      equiv = gen_rtx_fmt_ee (code, dmode, operands[1], operands[2]);\n+      break;\n+\n+    default:\n+      gcc_unreachable ();\n+    }\n+\n+  insns = get_insns ();\n+  end_sequence ();\n+  emit_libcall_block (insns, operands[0], ret, equiv);\n+  return ret;\n+}\n+\n \f\n #undef  TARGET_PREFERRED_RELOAD_CLASS\n #define TARGET_PREFERRED_RELOAD_CLASS rl78_preferred_reload_class"}, {"sha": "105d9bef360fdc7fb855dca030cb35236f937f94", "filename": "gcc/config/rl78/rl78.md", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0bf6cf784e56448d81d144f83eaaf90a9fe83b7/gcc%2Fconfig%2Frl78%2Frl78.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0bf6cf784e56448d81d144f83eaaf90a9fe83b7/gcc%2Fconfig%2Frl78%2Frl78.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frl78%2Frl78.md?ref=a0bf6cf784e56448d81d144f83eaaf90a9fe83b7", "patch": "@@ -224,6 +224,16 @@\n    DONE;\"\n )\n \n+(define_expand \"adddi3\"\n+  [(set (match_operand:DI          0 \"nonimmediate_operand\" \"\")\n+\t(plus:DI (match_operand:DI 1 \"general_operand\"      \"\")\n+\t\t (match_operand:DI 2 \"general_operand\"      \"\")))\n+   ]\n+  \"\"\n+  \"rl78_emit_libcall (\\\"__adddi3\\\", PLUS, DImode, DImode, 3, operands);\n+   DONE;\"\n+)\n+\n (define_insn \"addsi3_internal_virt\"\n   [(set (match_operand:SI          0 \"nonimmediate_operand\" \"=v,&vm, vm\")\n \t(plus:SI (match_operand:SI 1 \"general_operand\"      \"0, vim, vim\")"}, {"sha": "932d12d0aae60296df2ee8cd0806a876f2b4919a", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0bf6cf784e56448d81d144f83eaaf90a9fe83b7/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0bf6cf784e56448d81d144f83eaaf90a9fe83b7/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=a0bf6cf784e56448d81d144f83eaaf90a9fe83b7", "patch": "@@ -1,3 +1,8 @@\n+2017-10-13  Sebastian Perta  <sebastian.perta@renesas.com>\n+\n+\t* config/rl78/adddi3.S: New assembly file.\n+\t* config/rl78/t-rl78: Added adddi3.S to LIB2ADD.\n+\n 2017-10-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/82274"}, {"sha": "61db78dd326c0ac846be7a73245e7497ab2b0a90", "filename": "libgcc/config/rl78/t-rl78", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0bf6cf784e56448d81d144f83eaaf90a9fe83b7/libgcc%2Fconfig%2Frl78%2Ft-rl78", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0bf6cf784e56448d81d144f83eaaf90a9fe83b7/libgcc%2Fconfig%2Frl78%2Ft-rl78", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Frl78%2Ft-rl78?ref=a0bf6cf784e56448d81d144f83eaaf90a9fe83b7", "patch": "@@ -30,7 +30,8 @@ LIB2ADD = \\\n \t$(srcdir)/config/rl78/bit-count.S \\\n \t$(srcdir)/config/rl78/fpbit-sf.S \\\n \t$(srcdir)/config/rl78/fpmath-sf.S \\\n-\t$(srcdir)/config/rl78/cmpsi2.S\n+\t$(srcdir)/config/rl78/cmpsi2.S \\\n+\t$(srcdir)/config/rl78/adddi3.S\n \n LIB2FUNCS_EXCLUDE = _clzhi2 _clzsi2 _ctzhi2 _ctzsi2 \\\n   _popcounthi2 _popcountsi2 \\"}]}