{"sha": "811b7636cb8c10f1a550a76242b5666c7ae36da2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODExYjc2MzZjYjhjMTBmMWE1NTBhNzYyNDJiNTY2NmM3YWUzNmRhMg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-05T14:15:47Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-05T14:15:47Z"}, "message": "Remove __gcov_flush.\n\n\tPR gcov-profile/93623\n\t* tree-cfg.c (stmt_can_terminate_bb_p): Update comment to reflect\n\treality.\n\tPR gcov-profile/93623\n\t* Makefile.in: Remove __gcov_flush.\n\t* gcov.h (__gcov_flush): Remove.\n\t* libgcov-interface.c (__gcov_flush): Remove.\n\t(init_mx): Use renamed mutex.\n\t(__gcov_lock): Likewise.\n\t(__gcov_unlock): Likewise.\n\t(__gcov_fork): Likewise.\n\t(__gcov_flush): Remove.", "tree": {"sha": "ea0379a64bf214b68baee4d56fd693cfd01fb914", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea0379a64bf214b68baee4d56fd693cfd01fb914"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/811b7636cb8c10f1a550a76242b5666c7ae36da2", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl6xdRMACgkQTcGC3A+n\nN4XPUAf9H3m1+7qHxXjniYmHfVhdroOShqL2gvjeImXp6meHXBSeAhrXe2x05m2V\njrrknJL3y5IAxyqfHDaVqU3jxi+rnIMc6jfAqrXMaZ4puB5d9iVgfeu9N+baBA2o\nyaxV+9gAtGpDj9BNKcIiZB1K5H0Wxsg5T1BLXOd5y6x/H+RZmvCIFnyurUYXFr6D\nsP3IP9xduVXELrcsg1k7IbvfyW0I5+9KesYgBEa4ktbwO0sh+I8E7ot71Hzrm+hG\ntkqL0/SXM3I0RayuL0ULmRybyvJMLPrGidLU3YGTHN+5Svi0zUCKQcBwGJeiDstx\nm/p1cQlOmJMnRZFfOIbxPHQbNhT83g==\n=+00n\n-----END PGP SIGNATURE-----", "payload": "tree ea0379a64bf214b68baee4d56fd693cfd01fb914\nparent c0532db47d092430f8e8f497b2dc53343527bb13\nauthor Martin Liska <mliska@suse.cz> 1588688147 +0200\ncommitter Martin Liska <mliska@suse.cz> 1588688147 +0200\n\nRemove __gcov_flush.\n\n\tPR gcov-profile/93623\n\t* tree-cfg.c (stmt_can_terminate_bb_p): Update comment to reflect\n\treality.\n\tPR gcov-profile/93623\n\t* Makefile.in: Remove __gcov_flush.\n\t* gcov.h (__gcov_flush): Remove.\n\t* libgcov-interface.c (__gcov_flush): Remove.\n\t(init_mx): Use renamed mutex.\n\t(__gcov_lock): Likewise.\n\t(__gcov_unlock): Likewise.\n\t(__gcov_fork): Likewise.\n\t(__gcov_flush): Remove.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/811b7636cb8c10f1a550a76242b5666c7ae36da2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/811b7636cb8c10f1a550a76242b5666c7ae36da2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/811b7636cb8c10f1a550a76242b5666c7ae36da2/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0532db47d092430f8e8f497b2dc53343527bb13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0532db47d092430f8e8f497b2dc53343527bb13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0532db47d092430f8e8f497b2dc53343527bb13"}], "stats": {"total": 65, "additions": 28, "deletions": 37}, "files": [{"sha": "6186c0765afed0da61855116bf92050857ee5372", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/811b7636cb8c10f1a550a76242b5666c7ae36da2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/811b7636cb8c10f1a550a76242b5666c7ae36da2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=811b7636cb8c10f1a550a76242b5666c7ae36da2", "patch": "@@ -1,3 +1,9 @@\n+2020-05-05  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/93623\n+\t* tree-cfg.c (stmt_can_terminate_bb_p): Update comment to reflect\n+\treality.\n+\n 2020-05-05  Martin Liska  <mliska@suse.cz>\n \n \t* opt-functions.awk (opt_args_non_empty): New function."}, {"sha": "b21ef0eee371f84e33f26be514c692ba78703503", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/811b7636cb8c10f1a550a76242b5666c7ae36da2/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/811b7636cb8c10f1a550a76242b5666c7ae36da2/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=811b7636cb8c10f1a550a76242b5666c7ae36da2", "patch": "@@ -8439,8 +8439,8 @@ stmt_can_terminate_bb_p (gimple *t)\n       && (call_flags & ECF_NOTHROW)\n       && !(call_flags & ECF_RETURNS_TWICE)\n       /* fork() doesn't really return twice, but the effect of\n-         wrapping it in __gcov_fork() which calls __gcov_flush()\n-\t and clears the counters before forking has the same\n+\t wrapping it in __gcov_fork() which calls __gcov_dump() and\n+\t __gcov_reset() and clears the counters before forking has the same\n \t effect as returning twice.  Force a fake edge.  */\n       && !fndecl_built_in_p (fndecl, BUILT_IN_FORK))\n     return false;"}, {"sha": "cc6df8a9aa7c3aed1b008c180aca3aa921d3c1c2", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/811b7636cb8c10f1a550a76242b5666c7ae36da2/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/811b7636cb8c10f1a550a76242b5666c7ae36da2/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=811b7636cb8c10f1a550a76242b5666c7ae36da2", "patch": "@@ -1,3 +1,15 @@\n+2020-05-05  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/93623\n+\t* Makefile.in: Remove __gcov_flush.\n+\t* gcov.h (__gcov_flush): Remove.\n+\t* libgcov-interface.c (__gcov_flush): Remove.\n+\t(init_mx): Use renamed mutex.\n+\t(__gcov_lock): Likewise.\n+\t(__gcov_unlock): Likewise.\n+\t(__gcov_fork): Likewise.\n+\t(__gcov_flush): Remove.\n+\n 2020-05-05  Martin Liska  <mliska@suse.cz>\n \n \tPR gcov-profile/93623"}, {"sha": "5c50f9fe4df6c35f3fa8d91080d8cc64e0c55c33", "filename": "libgcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/811b7636cb8c10f1a550a76242b5666c7ae36da2/libgcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/811b7636cb8c10f1a550a76242b5666c7ae36da2/libgcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FMakefile.in?ref=811b7636cb8c10f1a550a76242b5666c7ae36da2", "patch": "@@ -904,7 +904,7 @@ LIBGCOV_PROFILER = _gcov_interval_profiler\t\t\t\t\\\n \t_gcov_ior_profiler_atomic\t\t\t\t\t\\\n \t_gcov_indirect_call_profiler_v4\t\t\t\t\t\\\n \t_gcov_time_profiler\n-LIBGCOV_INTERFACE = _gcov_dump _gcov_flush _gcov_fork\t\t\t\\\n+LIBGCOV_INTERFACE = _gcov_dump _gcov_fork\t\t\t\t\\\n \t_gcov_execl _gcov_execlp\t\t\t\t\t\\\n \t_gcov_execle _gcov_execv _gcov_execvp _gcov_execve _gcov_reset  \\\n \t_gcov_lock_unlock"}, {"sha": "0e3eed3103288097b3baa2fcd1417993542cf17d", "filename": "libgcc/gcov.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/811b7636cb8c10f1a550a76242b5666c7ae36da2/libgcc%2Fgcov.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/811b7636cb8c10f1a550a76242b5666c7ae36da2/libgcc%2Fgcov.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fgcov.h?ref=811b7636cb8c10f1a550a76242b5666c7ae36da2", "patch": "@@ -33,9 +33,4 @@ extern void __gcov_reset (void);\n \n extern void __gcov_dump (void);\n \n-/* Write profile information to a file and reset counters to zero.\n-   The function does operations under a mutex.  */\n-\n-extern void __gcov_flush (void);\n-\n #endif /* GCC_GCOV_H */"}, {"sha": "3a8a5bf44b865c901e85018bc649065d9a899ee6", "filename": "libgcc/libgcov-interface.c", "status": "modified", "additions": 7, "deletions": 29, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/811b7636cb8c10f1a550a76242b5666c7ae36da2/libgcc%2Flibgcov-interface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/811b7636cb8c10f1a550a76242b5666c7ae36da2/libgcc%2Flibgcov-interface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcov-interface.c?ref=811b7636cb8c10f1a550a76242b5666c7ae36da2", "patch": "@@ -28,10 +28,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #if defined(inhibit_libc)\n \n-#ifdef L_gcov_flush\n-void __gcov_flush (void) {}\n-#endif\n-\n #ifdef L_gcov_reset\n void __gcov_reset (void) {}\n #endif\n@@ -42,19 +38,19 @@ void __gcov_dump (void) {}\n \n #else\n \n-extern __gthread_mutex_t __gcov_flush_mx ATTRIBUTE_HIDDEN;\n+extern __gthread_mutex_t __gcov_mx ATTRIBUTE_HIDDEN;\n \n #ifdef L_gcov_lock_unlock\n #ifdef __GTHREAD_MUTEX_INIT\n-__gthread_mutex_t __gcov_flush_mx = __GTHREAD_MUTEX_INIT;\n+__gthread_mutex_t __gcov_mx = __GTHREAD_MUTEX_INIT;\n #define init_mx_once()\n #else\n-__gthread_mutex_t __gcov_flush_mx;\n+__gthread_mutex_t __gcov_mx;\n \n static void\n init_mx (void)\n {\n-  __GTHREAD_MUTEX_INIT_FUNCTION (&__gcov_flush_mx);\n+  __GTHREAD_MUTEX_INIT_FUNCTION (&__gcov_mx);\n }\n \n static void\n@@ -71,36 +67,18 @@ void\n __gcov_lock (void)\n {\n   init_mx_once ();\n-  __gthread_mutex_lock (&__gcov_flush_mx);\n+  __gthread_mutex_lock (&__gcov_mx);\n }\n \n /* Unlock critical section for __gcov_dump and __gcov_reset functions.  */\n \n void\n __gcov_unlock (void)\n {\n-  __gthread_mutex_unlock (&__gcov_flush_mx);\n+  __gthread_mutex_unlock (&__gcov_mx);\n }\n #endif\n \n-#ifdef L_gcov_flush\n-/* Called before fork or exec - write out profile information gathered so\n-   far and reset it to zero.  This avoids duplication or loss of the\n-   profile information gathered so far.  */\n-\n-void\n-__gcov_flush (void)\n-{\n-  __gcov_lock ();\n-\n-  __gcov_dump_int ();\n-  __gcov_reset_int ();\n-\n-  __gcov_unlock ();\n-}\n-\n-#endif /* L_gcov_flush */\n-\n #ifdef L_gcov_reset\n \n /* Reset all counters to zero.  */\n@@ -207,7 +185,7 @@ __gcov_fork (void)\n   pid = fork ();\n   if (pid == 0)\n     {\n-      __GTHREAD_MUTEX_INIT_FUNCTION (&__gcov_flush_mx);\n+      __GTHREAD_MUTEX_INIT_FUNCTION (&__gcov_mx);\n       /* We do not need locking as we are the only thread in the child.  */\n       __gcov_reset_int ();\n     }"}]}