{"sha": "f22ae1ecbd724ed01423a2132b5631a5d7c0ee10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjIyYWUxZWNiZDcyNGVkMDE0MjNhMjEzMmI1NjMxYTVkN2MwZWUxMA==", "commit": {"author": {"name": "Bin Cheng", "email": "bin.cheng@arm.com", "date": "2014-08-28T08:03:18Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2014-08-28T08:03:18Z"}, "message": "tree-ssa-loop-ivopts.c (iv_ca_add_use): Delete parameter important_candidates.\n\n\n\t* tree-ssa-loop-ivopts.c (iv_ca_add_use): Delete parameter\n\timportant_candidates.  Consider all important candidates if\n\tIVS doesn't give any result.  Remove check on ivs->upto.\n\t(try_add_cand_for): Call iv_ca_add_use only once.\n\nFrom-SVN: r214674", "tree": {"sha": "692cb565a3a538c3d3b45e817d9e2960ac0e708a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/692cb565a3a538c3d3b45e817d9e2960ac0e708a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f22ae1ecbd724ed01423a2132b5631a5d7c0ee10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f22ae1ecbd724ed01423a2132b5631a5d7c0ee10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f22ae1ecbd724ed01423a2132b5631a5d7c0ee10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f22ae1ecbd724ed01423a2132b5631a5d7c0ee10/comments", "author": null, "committer": null, "parents": [{"sha": "8a2d2bf000248f89ec12f286cc673fbb279a45b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a2d2bf000248f89ec12f286cc673fbb279a45b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a2d2bf000248f89ec12f286cc673fbb279a45b9"}], "stats": {"total": 52, "additions": 27, "deletions": 25}, "files": [{"sha": "28a3219aacfdb7ad3ea4f1555c2b8a82983f9242", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22ae1ecbd724ed01423a2132b5631a5d7c0ee10/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22ae1ecbd724ed01423a2132b5631a5d7c0ee10/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f22ae1ecbd724ed01423a2132b5631a5d7c0ee10", "patch": "@@ -1,3 +1,10 @@\n+2014-08-28  Bin Cheng  <bin.cheng@arm.com>\n+\n+\t* tree-ssa-loop-ivopts.c (iv_ca_add_use): Delete parameter\n+\timportant_candidates.  Consider all important candidates if\n+\tIVS doesn't give any result.  Remove check on ivs->upto.\n+\t(try_add_cand_for): Call iv_ca_add_use only once.\n+\n 2014-08-28  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n \t    Anna Tikhonova  <anna.tikhonova@intel.com>"}, {"sha": "e1ab00c4827f8b7d8884d30c2822d235f11056f9", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 20, "deletions": 25, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22ae1ecbd724ed01423a2132b5631a5d7c0ee10/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22ae1ecbd724ed01423a2132b5631a5d7c0ee10/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=f22ae1ecbd724ed01423a2132b5631a5d7c0ee10", "patch": "@@ -5415,36 +5415,40 @@ iv_ca_set_cp (struct ivopts_data *data, struct iv_ca *ivs,\n }\n \n /* Extend set IVS by expressing USE by some of the candidates in it\n-   if possible. All important candidates will be considered\n-   if IMPORTANT_CANDIDATES is true.  */\n+   if possible.  Consider all important candidates if candidates in\n+   set IVS don't give any result.  */\n \n static void\n iv_ca_add_use (struct ivopts_data *data, struct iv_ca *ivs,\n-\t       struct iv_use *use, bool important_candidates)\n+\t       struct iv_use *use)\n {\n   struct cost_pair *best_cp = NULL, *cp;\n   bitmap_iterator bi;\n-  bitmap cands;\n   unsigned i;\n+  struct iv_cand *cand;\n \n   gcc_assert (ivs->upto >= use->id);\n+  ivs->upto++;\n+  ivs->bad_uses++;\n \n-  if (ivs->upto == use->id)\n-    {\n-      ivs->upto++;\n-      ivs->bad_uses++;\n-    }\n-\n-  cands = (important_candidates ? data->important_candidates : ivs->cands);\n-  EXECUTE_IF_SET_IN_BITMAP (cands, 0, i, bi)\n+  EXECUTE_IF_SET_IN_BITMAP (ivs->cands, 0, i, bi)\n     {\n-      struct iv_cand *cand = iv_cand (data, i);\n-\n+      cand = iv_cand (data, i);\n       cp = get_use_iv_cost (data, use, cand);\n-\n       if (cheaper_cost_pair (cp, best_cp))\n \tbest_cp = cp;\n     }\n+   \n+  if (best_cp == NULL)\n+    {\n+      EXECUTE_IF_SET_IN_BITMAP (data->important_candidates, 0, i, bi)\n+\t{\n+\t  cand = iv_cand (data, i);\n+\t  cp = get_use_iv_cost (data, use, cand);\n+\t  if (cheaper_cost_pair (cp, best_cp))\n+\t    best_cp = cp;\n+\t}\n+    }\n \n   iv_ca_set_cp (data, ivs, use, best_cp);\n }\n@@ -5878,18 +5882,9 @@ try_add_cand_for (struct ivopts_data *data, struct iv_ca *ivs,\n   struct iv_ca_delta *best_delta = NULL, *act_delta;\n   struct cost_pair *cp;\n \n-  iv_ca_add_use (data, ivs, use, false);\n+  iv_ca_add_use (data, ivs, use);\n   best_cost = iv_ca_cost (ivs);\n-\n   cp = iv_ca_cand_for_use (ivs, use);\n-  if (!cp)\n-    {\n-      ivs->upto--;\n-      ivs->bad_uses--;\n-      iv_ca_add_use (data, ivs, use, true);\n-      best_cost = iv_ca_cost (ivs);\n-      cp = iv_ca_cand_for_use (ivs, use);\n-    }\n   if (cp)\n     {\n       best_delta = iv_ca_delta_add (use, NULL, cp, NULL);"}]}