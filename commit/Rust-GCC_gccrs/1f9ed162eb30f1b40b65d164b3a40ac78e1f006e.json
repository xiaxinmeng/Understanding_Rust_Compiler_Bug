{"sha": "1f9ed162eb30f1b40b65d164b3a40ac78e1f006e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY5ZWQxNjJlYjMwZjFiNDBiNjVkMTY0YjNhNDBhYzc4ZTFmMDA2ZQ==", "commit": {"author": {"name": "David S. Miller", "email": "davem@davemloft.net", "date": "2011-11-01T08:42:57Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2011-11-01T08:42:57Z"}, "message": "Add vcond/vcondu patterns to sparc backend.\n\n\t* config/sparc/sparc.c (sparc_expand_vcond): New function.\n\t* config/sparc/sparc-protos.h (sparc_expand_vcond): Declare it.\n\t* config/sparc/sparc.md (vcond<mode><mode>): New VIS3 expander.\n\t(vconduv8qiv8qi): Likewise.\n\nFrom-SVN: r180733", "tree": {"sha": "4eb3d5949906628acafc358484369b9d60d0d499", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4eb3d5949906628acafc358484369b9d60d0d499"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f9ed162eb30f1b40b65d164b3a40ac78e1f006e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f9ed162eb30f1b40b65d164b3a40ac78e1f006e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f9ed162eb30f1b40b65d164b3a40ac78e1f006e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f9ed162eb30f1b40b65d164b3a40ac78e1f006e/comments", "author": {"login": "davem330", "id": 1053866, "node_id": "MDQ6VXNlcjEwNTM4NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1053866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davem330", "html_url": "https://github.com/davem330", "followers_url": "https://api.github.com/users/davem330/followers", "following_url": "https://api.github.com/users/davem330/following{/other_user}", "gists_url": "https://api.github.com/users/davem330/gists{/gist_id}", "starred_url": "https://api.github.com/users/davem330/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davem330/subscriptions", "organizations_url": "https://api.github.com/users/davem330/orgs", "repos_url": "https://api.github.com/users/davem330/repos", "events_url": "https://api.github.com/users/davem330/events{/privacy}", "received_events_url": "https://api.github.com/users/davem330/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "787f74b48730d896dba2d15c06a8c792d9d1af15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/787f74b48730d896dba2d15c06a8c792d9d1af15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/787f74b48730d896dba2d15c06a8c792d9d1af15"}], "stats": {"total": 75, "additions": 75, "deletions": 0}, "files": [{"sha": "d6a9c4da70dd8f61b048955b9f7e608fac9c5731", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f9ed162eb30f1b40b65d164b3a40ac78e1f006e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f9ed162eb30f1b40b65d164b3a40ac78e1f006e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1f9ed162eb30f1b40b65d164b3a40ac78e1f006e", "patch": "@@ -1,3 +1,10 @@\n+2011-11-01  David S. Miller  <davem@davemloft.net>\n+\n+\t* config/sparc/sparc.c (sparc_expand_vcond): New function.\n+\t* config/sparc/sparc-protos.h (sparc_expand_vcond): Declare it.\n+\t* config/sparc/sparc.md (vcond<mode><mode>): New VIS3 expander.\n+\t(vconduv8qiv8qi): Likewise.\n+\n 2011-11-01  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/50869"}, {"sha": "b9a094e160a5b7e694b5da4058325989120c5c18", "filename": "gcc/config/sparc/sparc-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f9ed162eb30f1b40b65d164b3a40ac78e1f006e/gcc%2Fconfig%2Fsparc%2Fsparc-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f9ed162eb30f1b40b65d164b3a40ac78e1f006e/gcc%2Fconfig%2Fsparc%2Fsparc-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc-protos.h?ref=1f9ed162eb30f1b40b65d164b3a40ac78e1f006e", "patch": "@@ -108,6 +108,7 @@ extern const char *output_v8plus_mult (rtx, rtx *, const char *);\n extern void sparc_expand_vector_init (rtx, rtx);\n extern void sparc_expand_vec_perm_bmask(enum machine_mode, rtx);\n extern bool sparc_expand_conditional_move (enum machine_mode, rtx *);\n+extern void sparc_expand_vcond (enum machine_mode, rtx *, int, int);\n #endif /* RTX_CODE */\n \n #endif /* __SPARC_PROTOS_H__ */"}, {"sha": "6431405b87fdf8a4ee6a280239de5ef6fb1ff670", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f9ed162eb30f1b40b65d164b3a40ac78e1f006e/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f9ed162eb30f1b40b65d164b3a40ac78e1f006e/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=1f9ed162eb30f1b40b65d164b3a40ac78e1f006e", "patch": "@@ -11531,4 +11531,41 @@ sparc_expand_conditional_move (enum machine_mode mode, rtx *operands)\n   return true;\n }\n \n+void\n+sparc_expand_vcond (enum machine_mode mode, rtx *operands, int ccode, int fcode)\n+{\n+  rtx mask, cop0, cop1, fcmp, cmask, bshuf, gsr;\n+  enum rtx_code code = GET_CODE (operands[3]);\n+\n+  mask = gen_reg_rtx (Pmode);\n+  cop0 = operands[4];\n+  cop1 = operands[5];\n+  if (code == LT || code == GE)\n+    {\n+      rtx t;\n+\n+      code = swap_condition (code);\n+      t = cop0; cop0 = cop1; cop1 = t;\n+    }\n+\n+  gsr = gen_rtx_REG (DImode, SPARC_GSR_REG);\n+\n+  fcmp = gen_rtx_UNSPEC (Pmode,\n+\t\t\t gen_rtvec (1, gen_rtx_fmt_ee (code, mode, cop0, cop1)),\n+\t\t\t fcode);\n+\n+  cmask = gen_rtx_UNSPEC (DImode,\n+\t\t\t  gen_rtvec (2, mask, gsr),\n+\t\t\t  ccode);\n+\n+  bshuf = gen_rtx_UNSPEC (mode,\n+\t\t\t  gen_rtvec (3, operands[1], operands[2], gsr),\n+\t\t\t  UNSPEC_BSHUFFLE);\n+\n+  emit_insn (gen_rtx_SET (VOIDmode, mask, fcmp));\n+  emit_insn (gen_rtx_SET (VOIDmode, gsr, cmask));\n+\n+  emit_insn (gen_rtx_SET (VOIDmode, operands[0], bshuf));\n+}\n+\n #include \"gt-sparc.h\""}, {"sha": "592440389e5fc914ce1b9d4770187e25b7dca04f", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f9ed162eb30f1b40b65d164b3a40ac78e1f006e/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f9ed162eb30f1b40b65d164b3a40ac78e1f006e/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=1f9ed162eb30f1b40b65d164b3a40ac78e1f006e", "patch": "@@ -8299,6 +8299,36 @@\n   [(set_attr \"type\" \"fpmul\")\n    (set_attr \"fptype\" \"double\")])\n \n+(define_expand \"vcond<mode><mode>\"\n+  [(match_operand:GCM 0 \"register_operand\" \"\")\n+   (match_operand:GCM 1 \"register_operand\" \"\")\n+   (match_operand:GCM 2 \"register_operand\" \"\")\n+   (match_operator 3 \"\"\n+     [(match_operand:GCM 4 \"register_operand\" \"\")\n+      (match_operand:GCM 5 \"register_operand\" \"\")])]\n+  \"TARGET_VIS3\"\n+{\n+  sparc_expand_vcond (<MODE>mode, operands,\n+                      UNSPEC_CMASK<gcm_name>,\n+                      UNSPEC_FCMP);\n+  DONE;\n+})\n+\n+(define_expand \"vconduv8qiv8qi\"\n+  [(match_operand:V8QI 0 \"register_operand\" \"\")\n+   (match_operand:V8QI 1 \"register_operand\" \"\")\n+   (match_operand:V8QI 2 \"register_operand\" \"\")\n+   (match_operator 3 \"\"\n+     [(match_operand:V8QI 4 \"register_operand\" \"\")\n+      (match_operand:V8QI 5 \"register_operand\" \"\")])]\n+  \"TARGET_VIS3\"\n+{\n+  sparc_expand_vcond (V8QImode, operands,\n+                      UNSPEC_CMASK8,\n+                      UNSPEC_FUCMP);\n+  DONE;\n+})\n+\n (define_insn \"array8<P:mode>_vis\"\n   [(set (match_operand:P 0 \"register_operand\" \"=r\")\n         (unspec:P [(match_operand:P 1 \"register_or_zero_operand\" \"rJ\")"}]}