{"sha": "94e76332ac46967475264f588302fc74e499a9dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRlNzYzMzJhYzQ2OTY3NDc1MjY0ZjU4ODMwMmZjNzRlNDk5YTlkZA==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2006-06-04T04:28:25Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2006-06-04T04:28:25Z"}, "message": "re PR target/26223 (ICE on long double with -mno-80387)\n\n\n\tPR target/26223\n\t* config/i386/i386.c (construct_container): Split static issued_error\n\tflag into issued_sse_arg_error, issued_sse_ret_error and\n\tissued_x87_ret_error.  Issue a daignostic if the x86-64 ABI\n\trequires the use of x87 registers and the user explicitly\n\tspecified the -mno-80387 command line option.\n\n\t* gcc.target/i386/amd64-abi-2.c: New test case.\n\nFrom-SVN: r114355", "tree": {"sha": "ee6376aa2b3571fc442487e86565a6ef7ea0077b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee6376aa2b3571fc442487e86565a6ef7ea0077b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94e76332ac46967475264f588302fc74e499a9dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94e76332ac46967475264f588302fc74e499a9dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94e76332ac46967475264f588302fc74e499a9dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94e76332ac46967475264f588302fc74e499a9dd/comments", "author": null, "committer": null, "parents": [{"sha": "cb1b2d52bb4f0665e03d32a90d879495f72a8469", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb1b2d52bb4f0665e03d32a90d879495f72a8469", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb1b2d52bb4f0665e03d32a90d879495f72a8469"}], "stats": {"total": 59, "additions": 52, "deletions": 7}, "files": [{"sha": "977f32a79ede64258fa02a6bf31cc0b5b69da8ac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94e76332ac46967475264f588302fc74e499a9dd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94e76332ac46967475264f588302fc74e499a9dd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=94e76332ac46967475264f588302fc74e499a9dd", "patch": "@@ -1,3 +1,12 @@\n+2006-06-03  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR target/26223\n+\t* config/i386/i386.c (construct_container): Split static issued_error\n+\tflag into issued_sse_arg_error, issued_sse_ret_error and\n+\tissued_x87_ret_error.  Issue a daignostic if the x86-64 ABI\n+\trequires the use of x87 registers and the user explicitly\n+\tspecified the -mno-80387 command line option.\n+\n 2006-06-02  Geoffrey Keating  <geoffk@apple.com>\n \n \t* config/rs6000/host-darwin.c (sigaltstack): Protect prototype with"}, {"sha": "743535cfe71aa5da6e65cdda484d15685edc7aa2", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 32, "deletions": 7, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94e76332ac46967475264f588302fc74e499a9dd/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94e76332ac46967475264f588302fc74e499a9dd/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=94e76332ac46967475264f588302fc74e499a9dd", "patch": "@@ -3247,6 +3247,11 @@ construct_container (enum machine_mode mode, enum machine_mode orig_mode,\n \t\t     tree type, int in_return, int nintregs, int nsseregs,\n \t\t     const int *intreg, int sse_regno)\n {\n+  /* The following variables hold the static issued_error state.  */\n+  static bool issued_sse_arg_error;\n+  static bool issued_sse_ret_error;\n+  static bool issued_x87_ret_error;\n+\n   enum machine_mode tmpmode;\n   int bytes =\n     (mode == BLKmode) ? int_size_in_bytes (type) : (int) GET_MODE_SIZE (mode);\n@@ -3285,18 +3290,38 @@ construct_container (enum machine_mode mode, enum machine_mode orig_mode,\n      some less clueful developer tries to use floating-point anyway.  */\n   if (needed_sseregs && !TARGET_SSE)\n     {\n-      static bool issued_error;\n-      if (!issued_error)\n+      if (in_return)\n \t{\n-\t  issued_error = true;\n-\t  if (in_return)\n-\t    error (\"SSE register return with SSE disabled\");\n-\t  else\n-\t    error (\"SSE register argument with SSE disabled\");\n+\t  if (!issued_sse_ret_error)\n+\t    {\n+\t      error (\"SSE register return with SSE disabled\");\n+\t      issued_sse_ret_error = true;\n+\t    }\n+\t}\n+      else if (!issued_sse_arg_error)\n+\t{\n+\t  error (\"SSE register argument with SSE disabled\");\n+\t  issued_sse_arg_error = true;\n \t}\n       return NULL;\n     }\n \n+  /* Likewise, error if the ABI requires us to return values in the\n+     x87 registers and the user specified -mno-80387.  */\n+  if (!TARGET_80387 && in_return)\n+    for (i = 0; i < n; i++)\n+      if (class[i] == X86_64_X87_CLASS\n+\t  || class[i] == X86_64_X87UP_CLASS\n+\t  || class[i] == X86_64_COMPLEX_X87_CLASS)\n+\t{\n+\t  if (!issued_x87_ret_error)\n+\t    {\n+\t      error (\"x87 register return with x87 disabled\");\n+\t      issued_x87_ret_error = true;\n+\t    }\n+\t  return NULL;\n+\t}\n+\n   /* First construct simple cases.  Avoid SCmode, since we want to use\n      single register to pass this type.  */\n   if (n == 1 && mode != SCmode)"}, {"sha": "1553c98c6bfb28109f8af78bd056068eaeeb4d23", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94e76332ac46967475264f588302fc74e499a9dd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94e76332ac46967475264f588302fc74e499a9dd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=94e76332ac46967475264f588302fc74e499a9dd", "patch": "@@ -1,3 +1,8 @@\n+2006-06-03  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR target/26223\n+\t* gcc.target/i386/amd64-abi-2.c: New test case.\n+\n 2006-06-02  Eric Christopher  <echristo@apple.com>\n \n \t* gcc.c-torture/compile/20000804-1.c: Skip if i?86-darwin."}, {"sha": "2ff642de0520c49808e6dfcbcece756901965466", "filename": "gcc/testsuite/gcc.target/i386/amd64-abi-2.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94e76332ac46967475264f588302fc74e499a9dd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Famd64-abi-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94e76332ac46967475264f588302fc74e499a9dd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Famd64-abi-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Famd64-abi-2.c?ref=94e76332ac46967475264f588302fc74e499a9dd", "patch": "@@ -0,0 +1,6 @@\n+/* PR target/26223 */\n+/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && lp64 } } } */\n+/* { dg-options \"-mno-80387\" } */\n+long double foo(long double x) { return x; } /* { dg-error \"x87 disabled\" } */\n+long double bar(long double x) { return x; }\n+"}]}