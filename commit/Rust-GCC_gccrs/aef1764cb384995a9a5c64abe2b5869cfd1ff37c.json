{"sha": "aef1764cb384995a9a5c64abe2b5869cfd1ff37c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWVmMTc2NGNiMzg0OTk1YTlhNWM2NGFiZTJiNTg2OWNmZDFmZjM3Yw==", "commit": {"author": {"name": "Richard Earnshaw", "email": "erich@gnu.org", "date": "1994-06-03T13:17:55Z"}, "committer": {"name": "Richard Earnshaw", "email": "erich@gnu.org", "date": "1994-06-03T13:17:55Z"}, "message": "(CONST_OK_FOR_LETTER_P): Only allow constants valid when inverted for 'K'.\n\nOnly allow constants valid when negated for 'L'.\n\nFrom-SVN: r7435", "tree": {"sha": "a7d9cbc578deb97fae4ae5558e911f6c468f0062", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7d9cbc578deb97fae4ae5558e911f6c468f0062"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aef1764cb384995a9a5c64abe2b5869cfd1ff37c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aef1764cb384995a9a5c64abe2b5869cfd1ff37c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aef1764cb384995a9a5c64abe2b5869cfd1ff37c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aef1764cb384995a9a5c64abe2b5869cfd1ff37c/comments", "author": null, "committer": null, "parents": [{"sha": "f726ea7dd51046d6d6587d99cfa8b0619a0494db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f726ea7dd51046d6d6587d99cfa8b0619a0494db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f726ea7dd51046d6d6587d99cfa8b0619a0494db"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "3163cd9e2015f88f7839e0f9f10159ad6a67a508", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aef1764cb384995a9a5c64abe2b5869cfd1ff37c/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aef1764cb384995a9a5c64abe2b5869cfd1ff37c/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=aef1764cb384995a9a5c64abe2b5869cfd1ff37c", "patch": "@@ -486,13 +486,13 @@ enum reg_class\n    Return 1 if VALUE is in the range specified by C.\n \tI: immediate arithmetic operand (i.e. 8 bits shifted as required).\n \tJ: valid indexing constants.  \n-\tK: as I but also (not (value)) ok.\n-\tL: as I but also (neg (value)) ok.*/\n-#define CONST_OK_FOR_LETTER_P(VALUE, C)  \t\t\t\t      \\\n-  ((C) == 'I' ? const_ok_for_arm (VALUE) :\t\t\t\t      \\\n-   (C) == 'J' ? ((VALUE) < 4096 && (VALUE) > -4096) :\t\t\t      \\\n-   (C) == 'K' ? (const_ok_for_arm (VALUE) || const_ok_for_arm (~(VALUE))) :   \\\n-   (C) == 'L' ? (const_ok_for_arm (VALUE) || const_ok_for_arm (-(VALUE))) : 0)\n+\tK: ~value ok in rhs argument of data operand.\n+\tL: -value ok in rhs argument of data operand. */\n+#define CONST_OK_FOR_LETTER_P(VALUE, C)  \t\t\\\n+  ((C) == 'I' ? const_ok_for_arm (VALUE) :\t\t\\\n+   (C) == 'J' ? ((VALUE) < 4096 && (VALUE) > -4096) :\t\\\n+   (C) == 'K' ? (const_ok_for_arm (~(VALUE))) :\t\t\\\n+   (C) == 'L' ? (const_ok_for_arm (-(VALUE))) : 0)\n \n /* For the ARM, `Q' means that this is a memory operand that is just\n    an offset from a register.  "}]}