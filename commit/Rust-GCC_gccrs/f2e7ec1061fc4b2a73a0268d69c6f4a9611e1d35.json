{"sha": "f2e7ec1061fc4b2a73a0268d69c6f4a9611e1d35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJlN2VjMTA2MWZjNGIyYTczYTAyNjhkNjljNmY0YTk2MTFlMWQzNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-10T15:57:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-10T15:57:51Z"}, "message": "[multiple changes]\n\n2010-09-10  Vincent Celier  <celier@adacore.com>\n\n\t* projects.texi: Add documentation for package extensions\n\tAdd some documentation for attributes Leading_Library_Options and\n\tLinker'Leading_Switches.\n\n2010-09-10  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_util.adb (Expand_Subtype_From_Expression): When expansion is\n\tdisabled, compute subtype for all string types.\n\nFrom-SVN: r164195", "tree": {"sha": "502478ca4e9530f24e0b46322e5cce0bd74c624d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/502478ca4e9530f24e0b46322e5cce0bd74c624d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2e7ec1061fc4b2a73a0268d69c6f4a9611e1d35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2e7ec1061fc4b2a73a0268d69c6f4a9611e1d35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2e7ec1061fc4b2a73a0268d69c6f4a9611e1d35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2e7ec1061fc4b2a73a0268d69c6f4a9611e1d35/comments", "author": null, "committer": null, "parents": [{"sha": "b3f48fd4f6edf25ffc45b9fc7632481760bfb41e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3f48fd4f6edf25ffc45b9fc7632481760bfb41e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3f48fd4f6edf25ffc45b9fc7632481760bfb41e"}], "stats": {"total": 55, "additions": 41, "deletions": 14}, "files": [{"sha": "6624445ef1594f8eca7555ea364b3398f7157a4a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2e7ec1061fc4b2a73a0268d69c6f4a9611e1d35/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2e7ec1061fc4b2a73a0268d69c6f4a9611e1d35/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f2e7ec1061fc4b2a73a0268d69c6f4a9611e1d35", "patch": "@@ -1,3 +1,14 @@\n+2010-09-10  Vincent Celier  <celier@adacore.com>\n+\n+\t* projects.texi: Add documentation for package extensions\n+\tAdd some documentation for attributes Leading_Library_Options and\n+\tLinker'Leading_Switches.\n+\n+2010-09-10  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_util.adb (Expand_Subtype_From_Expression): When expansion is\n+\tdisabled, compute subtype for all string types.\n+\n 2010-09-10  Robert Dewar  <dewar@adacore.com>\n \n \t* gnat_ugn.texi: Add documentation for -gnatw.s/S"}, {"sha": "99ec49ad21cb4f5c32ecf9cd0328dcb1289a8fa0", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2e7ec1061fc4b2a73a0268d69c6f4a9611e1d35/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2e7ec1061fc4b2a73a0268d69c6f4a9611e1d35/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=f2e7ec1061fc4b2a73a0268d69c6f4a9611e1d35", "patch": "@@ -1216,14 +1216,15 @@ package body Exp_Util is\n    begin\n       --  In general we cannot build the subtype if expansion is disabled,\n       --  because internal entities may not have been defined. However, to\n-      --  avoid some cascaded errors, we try to continue when the expression\n-      --  is an array (or string), because it is safe to compute the bounds.\n-      --  It is in fact required to do so even in a generic context, because\n-      --  there may be constants that depend on bounds of string literal.\n+      --  avoid some cascaded errors, we try to continue when the expression is\n+      --  an array (or string), because it is safe to compute the bounds. It is\n+      --  in fact required to do so even in a generic context, because there\n+      --  may be constants that depend on the bounds of a string literal, both\n+      --  standard string types and more generally arrays of characters.\n \n       if not Expander_Active\n         and then (No (Etype (Exp))\n-                   or else Base_Type (Etype (Exp)) /= Standard_String)\n+                   or else not Is_String_Type (Etype (Exp)))\n       then\n          return;\n       end if;"}, {"sha": "849ca40fb79419effda14f853195b22b4c7e0c5f", "filename": "gcc/ada/projects.texi", "status": "modified", "additions": 24, "deletions": 9, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2e7ec1061fc4b2a73a0268d69c6f4a9611e1d35/gcc%2Fada%2Fprojects.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2e7ec1061fc4b2a73a0268d69c6f4a9611e1d35/gcc%2Fada%2Fprojects.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprojects.texi?ref=f2e7ec1061fc4b2a73a0268d69c6f4a9611e1d35", "patch": "@@ -1582,6 +1582,17 @@ Other library-related attributes can be used to change the defaults:\n   accomplishes specific actions before calling gcc (which itself is calling the\n   linker to build the library image).\n \n+@item @b{Library_Options}:\n+@cindex @code{Library_Options}\n+  This attribute may be used to specified additional switches (last switches)\n+  when linking a shared library.\n+\n+@item @b{Leading_Library_Options}:\n+@cindex @code{Leading_Library_Options}\n+  This attribute, that is taken into account only by @command{gprbuild}, may be\n+  used to specified leading options (first switches) when linking a shared\n+  library.\n+\n @cindex @code{Linker_Options}\n @item @b{Linker.Linker_Options}:\n   This attribute specifies additional switches to be given to the linker when\n@@ -1759,11 +1770,6 @@ included in the library.\n   the attribute @b{Binder.Default_Switches (\"Ada\")} are\n   used in the call to @command{gnatbind}.\n \n-@item @b{Library_Options}:\n-@cindex @code{Library_Options}\n-  This attribute may be used to specified additional switches to  @command{gcc}\n-  when linking the library.\n-\n @item @b{Library_Src_Dir}:\n @cindex @code{Library_Src_Dir}\n   This attribute defines the location (absolute or relative to the project\n@@ -2382,24 +2388,31 @@ must be the same as the name of the renaming package. The project must\n contain a package declaration with this name, and the project\n must appear in the context clause of the current project, or be its parent\n project. It is not possible to add or override attributes to the renaming\n-project. If you need to do so, you should declare a standard package, and\n-assign the value of the attributes one by one (@code{for Switches (\"Ada\")\n-use Other_Project.Compiler'Switches (\"Ada\")}).\n+project. If you need to do so, you should use an @b{extending declaration}\n+(see below).\n \n Packages that are renamed in other project files often come from project files\n that have no sources: they are just used as templates. Any modification in the\n template will be reflected automatically in all the project files that rename\n a package from the template. This is a very common way to share settings\n between projects.\n \n+Finally, a package can also be defined by an @b{extending declaration}. This is\n+similar to a @b{renaming declaration}, except that it is possible to add or\n+override attributes.\n+\n @smallexample\n-package_declaration ::= package_spec | package_renaming\n+package_declaration ::= package_spec | package_renaming | package_extension\n package_spec ::=\n   @i{package} @i{<package_>}simple_name @i{is}\n     @{simple_declarative_item@}\n   @i{end} package_identifier ;\n package_renaming ::==\n   @i{package} @i{<package_>}simple_name @i{renames} @i{<project_>}simple_name.package_identifier ;\n+package_extension ::==\n+  @i{package} @i{<package_>}simple_name @i{extends} @i{<project_>}simple_name.package_identifier @i{is}\n+    @{simple_declarative_item@}\n+  @i{end} package_identifier ;\n @end smallexample\n \n @c ---------------------------------------------\n@@ -2764,6 +2777,7 @@ system (file). The text is between brackets ([]) if the index is optional.\n @item Library_Interface @tab string @tab - @tab -\n @item Library_Auto_Init @tab string @tab - @tab -\n @item Library_Options @tab list @tab - @tab -\n+@item Leading_Library_Options @tab list @tab - @tab -\n @item Library_Src_Dir @tab string @tab - @tab -\n @item Library_ALI_Dir @tab string @tab - @tab -\n @item Library_GCC @tab string @tab - @tab -\n@@ -2862,6 +2876,7 @@ system (file). The text is between brackets ([]) if the index is optional.\n @item Objects_Path @tab string @tab Binder @tab insensitive (language)\n @item Objects_Path_File @tab string @tab Binder @tab insensitive (language)\n @item Linker_Options @tab list @tab Linker @tab -\n+@item Leading_Switches @tab list @tab Linker @tab -\n @item Map_File_Options @tab string @tab Linker @tab -\n @item Executable_Switches @tab list @tab Linker @tab -\n @item Lib_Dir_Switch @tab string @tab Linker @tab -"}]}