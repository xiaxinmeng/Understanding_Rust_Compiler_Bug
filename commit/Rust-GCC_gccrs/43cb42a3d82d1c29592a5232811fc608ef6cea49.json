{"sha": "43cb42a3d82d1c29592a5232811fc608ef6cea49", "node_id": "C_kwDOANBUbNoAKDQzY2I0MmEzZDgyZDFjMjk1OTJhNTIzMjgxMWZjNjA4ZWY2Y2VhNDk", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-08-31T16:07:09Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2023-01-31T13:16:50Z"}, "message": "gccrs: Add extra debugging for method call expressions\n\ngcc/rust/ChangeLog:\n\n\t* typecheck/rust-hir-type-check-expr.cc (TypeCheckExpr::visit): Add\n\tmore calls to `rust_debug` for development.", "tree": {"sha": "9747226e1178b79043f5b445388887a615027482", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9747226e1178b79043f5b445388887a615027482"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43cb42a3d82d1c29592a5232811fc608ef6cea49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43cb42a3d82d1c29592a5232811fc608ef6cea49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43cb42a3d82d1c29592a5232811fc608ef6cea49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43cb42a3d82d1c29592a5232811fc608ef6cea49/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ffa16a4590ad47e3f4ba098e2090c3a53dccd5c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffa16a4590ad47e3f4ba098e2090c3a53dccd5c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffa16a4590ad47e3f4ba098e2090c3a53dccd5c7"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "bea5eb8cb0b5fd829d2e948d6bd0426413e65413", "filename": "gcc/rust/typecheck/rust-hir-type-check-expr.cc", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43cb42a3d82d1c29592a5232811fc608ef6cea49/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43cb42a3d82d1c29592a5232811fc608ef6cea49/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.cc?ref=43cb42a3d82d1c29592a5232811fc608ef6cea49", "patch": "@@ -1024,6 +1024,11 @@ TypeCheckExpr::visit (HIR::MethodCallExpr &expr)\n       return;\n     }\n \n+  rust_debug_loc (expr.get_method_name ().get_locus (),\n+\t\t  \"resolved method to: {%u} {%s}\",\n+\t\t  candidate.candidate.ty->get_ref (),\n+\t\t  candidate.candidate.ty->debug_str ().c_str ());\n+\n   // Get the adjusted self\n   Adjuster adj (receiver_tyty);\n   TyTy::BaseType *adjusted_self = adj.adjust_type (candidate.adjustments);\n@@ -1120,6 +1125,9 @@ TypeCheckExpr::visit (HIR::MethodCallExpr &expr)\n   // apply any remaining generic arguments\n   if (expr.get_method_name ().has_generic_args ())\n     {\n+      rust_debug_loc (expr.get_method_name ().get_generic_args ().get_locus (),\n+\t\t      \"applying generic arguments to method_call: {%s}\",\n+\t\t      lookup->debug_str ().c_str ());\n       HIR::GenericArgs &args = expr.get_method_name ().get_generic_args ();\n       lookup\n \t= SubstMapper::Resolve (lookup, expr.get_method_name ().get_locus (),\n@@ -1129,10 +1137,14 @@ TypeCheckExpr::visit (HIR::MethodCallExpr &expr)\n     }\n   else if (lookup->needs_generic_substitutions ())\n     {\n+      rust_debug (\"method needs inference: {%s}\",\n+\t\t  lookup->debug_str ().c_str ());\n       lookup = SubstMapper::InferSubst (lookup,\n \t\t\t\t\texpr.get_method_name ().get_locus ());\n     }\n \n+  rust_debug (\"type-checking method_call: {%s}\", lookup->debug_str ().c_str ());\n+\n   TyTy::BaseType *function_ret_tyty\n     = TyTy::TypeCheckMethodCallExpr::go (lookup, expr, adjusted_self, context);\n   if (function_ret_tyty == nullptr"}]}