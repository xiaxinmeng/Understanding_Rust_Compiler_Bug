{"sha": "9cac6811cf0d6c1437426aaf13ea52c16c16fc80", "node_id": "C_kwDOANBUbNoAKDljYWM2ODExY2YwZDZjMTQzNzQyNmFhZjEzZWE1MmMxNmMxNmZjODA", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-07-28T21:21:28Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-07-28T21:21:28Z"}, "message": "analyzer: expand the comment in region.h\n\ngcc/analyzer/ChangeLog:\n\t* region.h: Add notes to the comment describing the region\n\tclass hierarchy.\n\nSigned-off-by: David Malcolm <dmalcolm@redhat.com>", "tree": {"sha": "ec52a8f94a5ffd28994b0159de9efe821a7451f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec52a8f94a5ffd28994b0159de9efe821a7451f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9cac6811cf0d6c1437426aaf13ea52c16c16fc80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cac6811cf0d6c1437426aaf13ea52c16c16fc80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cac6811cf0d6c1437426aaf13ea52c16c16fc80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cac6811cf0d6c1437426aaf13ea52c16c16fc80/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8ce0c4361c267406d5eba1901e42fc5942dc775", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8ce0c4361c267406d5eba1901e42fc5942dc775", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8ce0c4361c267406d5eba1901e42fc5942dc775"}], "stats": {"total": 52, "additions": 31, "deletions": 21}, "files": [{"sha": "a5b30299ec666e7eb1b741032f8652acb7e663ce", "filename": "gcc/analyzer/region.h", "status": "modified", "additions": 31, "deletions": 21, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cac6811cf0d6c1437426aaf13ea52c16c16fc80/gcc%2Fanalyzer%2Fregion.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cac6811cf0d6c1437426aaf13ea52c16c16fc80/gcc%2Fanalyzer%2Fregion.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion.h?ref=9cac6811cf0d6c1437426aaf13ea52c16c16fc80", "patch": "@@ -72,27 +72,37 @@ enum region_kind\n \n    region\n      space_region\n-       frame_region (RK_FRAME)\n-       globals_region (RK_GLOBALS)\n-       code_region (RK_CODE)\n-       stack_region (RK_STACK)\n-       heap_region (RK_HEAP)\n-     root_region (RK_ROOT)\n-     function_region (RK_FUNCTION)\n-     label_region (RK_LABEL)\n-     symbolic_region (RK_SYMBOLIC)\n-     decl_region (RK_DECL),\n-     field_region (RK_FIELD)\n-     element_region (RK_ELEMENT)\n-     offset_region (RK_OFFSET)\n-     sized_region (RK_SIZED)\n-     cast_region (RK_CAST)\n-     heap_allocated_region (RK_HEAP_ALLOCATED)\n-     alloca_region (RK_ALLOCA)\n-     string_region (RK_STRING)\n-     bit_range_region (RK_BIT_RANGE)\n-     var_arg_region (RK_VAR_ARG)\n-     unknown_region (RK_UNKNOWN).  */\n+       frame_region (RK_FRAME): a function frame on the stack\n+       globals_region (RK_GLOBALS): holds globals variables (data and bss)\n+       code_region (RK_CODE): represents the code segment, containing functions\n+       stack_region (RK_STACK): a stack, containing all stack frames\n+       heap_region (RK_HEAP): the heap, containing heap_allocated_regions\n+     root_region (RK_ROOT): the top-level region\n+     function_region (RK_FUNCTION): the code for a particular function\n+     label_region (RK_LABEL): a particular label within a function\n+     symbolic_region (RK_SYMBOLIC): dereferencing a symbolic pointer\n+     decl_region (RK_DECL): the memory occupied by a particular global, local,\n+\t\t\t    or SSA name\n+     field_region (RK_FIELD): the memory occupied by a field within a struct\n+\t\t\t      or union\n+     element_region (RK_ELEMENT): an element within an array\n+     offset_region (RK_OFFSET): a byte-offset within another region, for\n+\t\t\t\thandling pointer arithmetic as a region\n+     sized_region (RK_SIZED): a subregion of symbolic size (in bytes)\n+\t\t\t      within its parent\n+     cast_region (RK_CAST): a region that views another region using a\n+\t\t\t    different type\n+     heap_allocated_region (RK_HEAP_ALLOCATED): an untyped region dynamically\n+\t\t\t\t\t\tallocated on the heap via\n+\t\t\t\t\t\t\"malloc\" or similar\n+     alloca_region (RK_ALLOCA): an untyped region dynamically allocated on the\n+\t\t\t\tstack via \"alloca\"\n+     string_region (RK_STRING): a region for a STRING_CST\n+     bit_range_region (RK_BIT_RANGE): a region for a specific range of bits\n+\t\t\t\t      within another region\n+     var_arg_region (RK_VAR_ARG): a region for the N-th vararg within a\n+\t\t\t\t  frame_region for a variadic call\n+     unknown_region (RK_UNKNOWN): for handling unimplemented tree codes.  */\n \n /* Abstract base class for representing ways of accessing chunks of memory.\n "}]}