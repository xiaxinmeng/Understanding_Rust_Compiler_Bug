{"sha": "6a84c265a32e6f407cf6712040df65527ffcf445", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE4NGMyNjVhMzJlNmY0MDdjZjY3MTIwNDBkZjY1NTI3ZmZjZjQ0NQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2018-08-24T10:49:27Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2018-08-24T10:49:27Z"}, "message": "rs6000: Check that the base of a TOCREL is the TOC (PR86989)\n\nThere currently is nothing that prevents replacing the TOC_REGISTER in\na TOCREL unspec with something else, like a pseudo, or a memory ref.\nThis of course does not work.  Fix that.\n\nTested on powerpc64-linux {-m32,-m64}; committing.\n\n\nSegher\n\n\n2018-08-24  Segher Boessenkool  <segher@kernel.crashing.org>\n\n\tPR target/86989\n\t* config/rs6000/rs6000.c (toc_relative_expr_p): Check that the base is\n\tthe TOC register.\n\n---\n gcc/config/rs6000/rs6000.c | 4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ndiff --git a/gcc/config/rs6000/rs6000.c b/gcc/config/rs6000/rs6000.c\nindex a967912..ed33912 100644\n--- a/gcc/config/rs6000/rs6000.c\n+++ b/gcc/config/rs6000/rs6000.c\n@@ -7932,7 +7932,9 @@ toc_relative_expr_p (const_rtx op, bool strict, const_rtx *tocrel_base_ret,\n     *tocrel_offset_ret = tocrel_offset;\n \n   return (GET_CODE (tocrel_base) == UNSPEC\n-\t  && XINT (tocrel_base, 1) == UNSPEC_TOCREL);\n+\t  && XINT (tocrel_base, 1) == UNSPEC_TOCREL\n+\t  && REG_P (XVECEXP (tocrel_base, 0, 1))\n+\t  && REGNO (XVECEXP (tocrel_base, 0, 1)) == TOC_REGISTER);\n }\n \n /* Return true if X is a constant pool address, and also for cmodel=medium\n-- \n1.8.3.1\n\nFrom-SVN: r263829", "tree": {"sha": "364aca4dbfe41c04f0e148cfaa6af3da73c1cd88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/364aca4dbfe41c04f0e148cfaa6af3da73c1cd88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a84c265a32e6f407cf6712040df65527ffcf445", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a84c265a32e6f407cf6712040df65527ffcf445", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a84c265a32e6f407cf6712040df65527ffcf445", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a84c265a32e6f407cf6712040df65527ffcf445/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "19b293bfa70872c850f2d399fc2facf4687e76ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19b293bfa70872c850f2d399fc2facf4687e76ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19b293bfa70872c850f2d399fc2facf4687e76ee"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "08a0c08946dc19fc408eb0050752bd2030f5860c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a84c265a32e6f407cf6712040df65527ffcf445/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a84c265a32e6f407cf6712040df65527ffcf445/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a84c265a32e6f407cf6712040df65527ffcf445", "patch": "@@ -1,3 +1,9 @@\n+2018-08-24  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/86989\n+\t* config/rs6000/rs6000.c (toc_relative_expr_p): Check that the base is\n+\tthe TOC register.\n+\n 2018-08-24  Aldy Hernandez  <aldyh@redhat.com>\n \n \tPR 87073/bootstrap"}, {"sha": "ecaf0718ca7805592e1d5a64a52653f25856b9cb", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a84c265a32e6f407cf6712040df65527ffcf445/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a84c265a32e6f407cf6712040df65527ffcf445/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=6a84c265a32e6f407cf6712040df65527ffcf445", "patch": "@@ -7943,7 +7943,9 @@ toc_relative_expr_p (const_rtx op, bool strict, const_rtx *tocrel_base_ret,\n     *tocrel_offset_ret = tocrel_offset;\n \n   return (GET_CODE (tocrel_base) == UNSPEC\n-\t  && XINT (tocrel_base, 1) == UNSPEC_TOCREL);\n+\t  && XINT (tocrel_base, 1) == UNSPEC_TOCREL\n+\t  && REG_P (XVECEXP (tocrel_base, 0, 1))\n+\t  && REGNO (XVECEXP (tocrel_base, 0, 1)) == TOC_REGISTER);\n }\n \n /* Return true if X is a constant pool address, and also for cmodel=medium"}]}