{"sha": "59949f603139770dd3ad46bc21ac3095f60b1d42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk5NDlmNjAzMTM5NzcwZGQzYWQ0NmJjMjFhYzMwOTVmNjBiMWQ0Mg==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1995-03-16T22:01:13Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1995-03-16T22:01:13Z"}, "message": "Add support for cpplib and building cppmain.\n\nFrom-SVN: r9192", "tree": {"sha": "6e1aa4aa9689c73c24fa890609bfcc7b5ae35077", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e1aa4aa9689c73c24fa890609bfcc7b5ae35077"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59949f603139770dd3ad46bc21ac3095f60b1d42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59949f603139770dd3ad46bc21ac3095f60b1d42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59949f603139770dd3ad46bc21ac3095f60b1d42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59949f603139770dd3ad46bc21ac3095f60b1d42/comments", "author": null, "committer": null, "parents": [{"sha": "7f2935c734c36f84ab62b20a04de465e19061333", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f2935c734c36f84ab62b20a04de465e19061333", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f2935c734c36f84ab62b20a04de465e19061333"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "cf1ca6e95007cfb489619d281ef574121bdcce68", "filename": "gcc/Makefile.in", "status": "modified", "additions": 23, "deletions": 4, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59949f603139770dd3ad46bc21ac3095f60b1d42/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59949f603139770dd3ad46bc21ac3095f60b1d42/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=59949f603139770dd3ad46bc21ac3095f60b1d42", "patch": "@@ -492,6 +492,10 @@ OBJS = toplev.o version.o tree.o print-tree.o stor-layout.o fold-const.o \\\n #  them before rtl.o is compiled.\n GEN= genemit genoutput genrecog genextract genflags gencodes genconfig genpeep\n \n+CCCP=cccp\n+# Uncomment this line if you want to use cppmain (w/cpplib) as cpp.\n+#CCCP=cppmain\n+\n # Files to be copied away after each stage in building.\n STAGESTUFF = *.o insn-flags.h insn-config.h insn-codes.h \\\n  insn-output.c insn-recog.c insn-emit.c insn-extract.c insn-peep.c \\\n@@ -504,7 +508,7 @@ STAGESTUFF = *.o insn-flags.h insn-config.h insn-codes.h \\\n  bc-arity.h bc-opcode.h bc-opname.h \\\n  stamp-bcarity stamp-bcopcode stamp-bcopname \\\n  bi-arity bi-opcode bi-opname \\\n- $(GCC_PASSES) $(EXTRA_PARTS) $(EXTRA_PROGRAMS) gcc-cross cccp \\\n+ $(GCC_PASSES) $(EXTRA_PARTS) $(EXTRA_PROGRAMS) gcc-cross $(CCCP) \\\n  cc1obj enquire protoize unprotoize specs collect2 $(USE_COLLECT2) \\\n  $(LANG_STAGESTUFF)\n \n@@ -1542,10 +1546,10 @@ bytecode.realclean: bytecode.clean\n # Remake cpp and protoize.\n \n # Making the preprocessor\n-cpp: cccp\n+cpp: $(CCCP)\n \t-rm -f cpp$(exeext)\n-\tln cccp$(exeext) cpp$(exeext) > /dev/null 2>&1 \\\n-\t || cp cccp$(exeext) cpp$(exeext)\n+\tln $(CCCP)$(exeext) cpp$(exeext) > /dev/null 2>&1 \\\n+\t || cp $(CCCP)$(exeext) cpp$(exeext)\n cccp: cccp.o cexp.o version.o $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o cccp cccp.o cexp.o version.o $(LIBS)\n cexp.o: $(srcdir)/cexp.c $(CONFIG_H)\n@@ -1563,6 +1567,21 @@ cccp.o: cccp.c $(CONFIG_H) pcp.h version.c config.status\n \t  -DTOOL_INCLUDE_DIR=\\\"$(tooldir)/include\\\" \\\n \t  -c `echo $(srcdir)/cccp.c | sed 's,^\\./,,'`\n \n+cppmain: cppmain.o cpplib.o cpphash.o cppalloc.o cpperror.o cppexp.o \\\n+  version.o $(LIBDEPS)\n+\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o cppmain \\\n+\t  cppmain.o cpplib.o cpphash.o cppalloc.o cpperror.o cppexp.o \\\n+\t  version.o $(LIBS)\n+\n+cpplib.o: cpplib.c $(CONFIG_H) pcp.h version.c config.status\n+\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t  -DGCC_INCLUDE_DIR=\\\"$(libsubdir)/include\\\" \\\n+\t  -DGPLUSPLUS_INCLUDE_DIR=\\\"$(gxx_include_dir)\\\" \\\n+\t  -DLOCAL_INCLUDE_DIR=\\\"$(includedir)\\\" \\\n+\t  -DCROSS_INCLUDE_DIR=\\\"$(libsubdir)/sys-include\\\" \\\n+\t  -DTOOL_INCLUDE_DIR=\\\"$(tooldir)/include\\\" \\\n+\t  -c `echo $(srcdir)/cpplib.c | sed 's,^\\./,,'`\n+\n # Note for the stamp targets, we run the program `true' instead of\n # having an empty command (nothing following the semicolon).\n "}]}