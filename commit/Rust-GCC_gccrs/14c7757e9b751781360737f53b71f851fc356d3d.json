{"sha": "14c7757e9b751781360737f53b71f851fc356d3d", "node_id": "C_kwDOANBUbNoAKDE0Yzc3NTdlOWI3NTE3ODEzNjA3MzdmNTNiNzFmODUxZmMzNTZkM2Q", "commit": {"author": {"name": "Jeff Law", "email": "jeffreyalaw@gmail.com", "date": "2021-10-29T15:30:15Z"}, "committer": {"name": "Jeff Law", "email": "jeffreyalaw@gmail.com", "date": "2021-10-29T15:30:15Z"}, "message": "Avoid overly-greedy match in dejagnu regexp.\n\nOccasionally I've been seeing failures with the multi-line diagnostics.  It's never been clear what's causing the spurious failures, though I have long suspected a greedy regexp match.\n\nIt happened again yesterday with a local change that in no way should affect diagnostics, so I finally went searching and found that sure enough the multi-line diagnostics had a \".*\" in their regexp.  According to the comments, the .* is primarily to catch any dg directives that may appear -- ie it should eat to EOL, but not multiple lines.  But a .* can indeed match a newline and cause it to eat multiple lines.\n\nThe fix is simple.  [^\\r\\n]* will eat to EOL, but not further.\n\nRegression tested on x86_64 and on our internal target.\n\ngcc/testsuite\n\n\t* lib/multiline.exp (_build_multiline_regex): Use a better\n\tregexp than .* to match up to EOL.", "tree": {"sha": "0cbab5150d7ef8500a9cbef9cffdb17070694b9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0cbab5150d7ef8500a9cbef9cffdb17070694b9c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14c7757e9b751781360737f53b71f851fc356d3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14c7757e9b751781360737f53b71f851fc356d3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14c7757e9b751781360737f53b71f851fc356d3d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14c7757e9b751781360737f53b71f851fc356d3d/comments", "author": {"login": "JeffreyALaw", "id": 14062506, "node_id": "MDQ6VXNlcjE0MDYyNTA2", "avatar_url": "https://avatars.githubusercontent.com/u/14062506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeffreyALaw", "html_url": "https://github.com/JeffreyALaw", "followers_url": "https://api.github.com/users/JeffreyALaw/followers", "following_url": "https://api.github.com/users/JeffreyALaw/following{/other_user}", "gists_url": "https://api.github.com/users/JeffreyALaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeffreyALaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeffreyALaw/subscriptions", "organizations_url": "https://api.github.com/users/JeffreyALaw/orgs", "repos_url": "https://api.github.com/users/JeffreyALaw/repos", "events_url": "https://api.github.com/users/JeffreyALaw/events{/privacy}", "received_events_url": "https://api.github.com/users/JeffreyALaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JeffreyALaw", "id": 14062506, "node_id": "MDQ6VXNlcjE0MDYyNTA2", "avatar_url": "https://avatars.githubusercontent.com/u/14062506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeffreyALaw", "html_url": "https://github.com/JeffreyALaw", "followers_url": "https://api.github.com/users/JeffreyALaw/followers", "following_url": "https://api.github.com/users/JeffreyALaw/following{/other_user}", "gists_url": "https://api.github.com/users/JeffreyALaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeffreyALaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeffreyALaw/subscriptions", "organizations_url": "https://api.github.com/users/JeffreyALaw/orgs", "repos_url": "https://api.github.com/users/JeffreyALaw/repos", "events_url": "https://api.github.com/users/JeffreyALaw/events{/privacy}", "received_events_url": "https://api.github.com/users/JeffreyALaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb596fd43667f92c4cb037a4ee8b2061c393ba60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb596fd43667f92c4cb037a4ee8b2061c393ba60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb596fd43667f92c4cb037a4ee8b2061c393ba60"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "86387f8209b856a8be87891a4db3aa741b1cb5d8", "filename": "gcc/testsuite/lib/multiline.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14c7757e9b751781360737f53b71f851fc356d3d/gcc%2Ftestsuite%2Flib%2Fmultiline.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14c7757e9b751781360737f53b71f851fc356d3d/gcc%2Ftestsuite%2Flib%2Fmultiline.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fmultiline.exp?ref=14c7757e9b751781360737f53b71f851fc356d3d", "patch": "@@ -331,7 +331,7 @@ proc _build_multiline_regex { multiline index } {\n \t\t# Support arbitrary followup text on each non-empty line,\n \t\t# to deal with comments containing containing DejaGnu\n \t\t# directives.\n-\t\tappend rexp \".*\"\n+\t\tappend rexp \"\\[^\\\\n\\\\r\\]*\"\n \t    }\n \t}\n \tappend rexp \"\\n\""}]}