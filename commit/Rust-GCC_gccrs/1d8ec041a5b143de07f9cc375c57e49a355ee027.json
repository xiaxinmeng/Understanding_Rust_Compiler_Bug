{"sha": "1d8ec041a5b143de07f9cc375c57e49a355ee027", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQ4ZWMwNDFhNWIxNDNkZTA3ZjljYzM3NWM1N2U0OWEzNTVlZTAyNw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2010-07-23T11:33:19Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-07-23T11:33:19Z"}, "message": "target-supports.exp (check_avx_hw_available): New procedure.\n\n\t* lib/target-supports.exp (check_avx_hw_available): New procedure.\n\t(check_effective_target_avx_runtime): New procedure.\n\t(check_effective_target_sse2_runtime): Add check_effective_target_sse2.\n\t(check_effective_target_sse_runtime): Add check_effective_target_sse.\n\n\t* gcc.dg/compat/pr38736_main.c: Use avx_runtime effective target.\n\t* gcc.dg/compat/vector-1b_main.c: Ditto.  Remove cpuid.h include\n\tand __get_cpuid test.\n\t* gcc.dg/compat/vector-2b_main.c: Ditto.\n\n\t* gcc.target/i386/avx-check.h (main): Also check bit_OSXSAVE.\n\n\t* gcc.dg/20020418-1.c: Do not require sse2 effective target\n\tfor compile-time only test.\n\t* gcc.dg/pr32716.c: Ditto.\n\t* gcc.dg/pr34856.c: Ditto.\n\t* gcc.dg/pr36997.c: Ditto.\n\t* gcc.dg/prefetch-loop-arrays-1.c: Ditto.\n\t* gfortran.dg/pr28158.f90: Ditto.\n\t* gfortran.dg/pr30667.f: Ditto.\n\n\t* gcc.dg/vect/vect.exp: Use check_effective_target_sse2_runtime for\n\ti?86-*-* and x86_64-*-* targets to disable execution on targets\n\twithout sse2 runtime support.\n\t* g++.dg/vect/vect.exp: Ditto.\n\t* gfortran.dg/vect/vect.exp: Ditto.\n\n\t* gcc.dg/pr36584.c: Remove now redundant sse2 effective target check.\n\t* gcc.dg/pr37544.c: Ditto.\n\t* gcc.dg/pr40550.c: Ditto.\n\t* gcc.dg/compat/union-m128-1_main.c: Ditto.\n\t* gcc.dg/compat/vector-1a_main.c: Ditto.\n\t* gcc.dg/compat/vector-2a_main.c: Ditto.\n\t* gcc.dg/torture/pr16104-1.c: Ditto.\n\t* gcc.dg/torture/pr35771-1.c: Ditto.\n\t* gcc.dg/torture/pr35771-2.c: Ditto.\n\t* gcc.dg/torture/pr35771-3.c: Ditto.\n\t* gcc.dg/torture/stackalign/alloca-2.c: Ditto.\n\t* gcc.dg/torture/stackalign/alloca-3.c: Ditto.\n\t* gcc.dg/torture/stackalign/push-1.c: Ditto.\n\t* gcc.dg/torture/stackalign/vararg-3.c: Ditto.\n\t* g++.dg/other/i386-1.C: Ditto.\n\t* g++.dg/other/pr40446.C: Ditto.\n\nFrom-SVN: r162456", "tree": {"sha": "864361e650ba529aa3cdf3faf3469f92fb3c0727", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/864361e650ba529aa3cdf3faf3469f92fb3c0727"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d8ec041a5b143de07f9cc375c57e49a355ee027", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d8ec041a5b143de07f9cc375c57e49a355ee027", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d8ec041a5b143de07f9cc375c57e49a355ee027", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d8ec041a5b143de07f9cc375c57e49a355ee027/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a23c4464d8013c09b319c70dc906770622f0349a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a23c4464d8013c09b319c70dc906770622f0349a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a23c4464d8013c09b319c70dc906770622f0349a"}], "stats": {"total": 168, "additions": 99, "deletions": 69}, "files": [{"sha": "6bc8dd20c38f8304d46ad26c915cbf75b5ea8fa4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1d8ec041a5b143de07f9cc375c57e49a355ee027", "patch": "@@ -1,3 +1,49 @@\n+2010-06-23  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* lib/target-supports.exp (check_avx_hw_available): New procedure.\n+\t(check_effective_target_avx_runtime): New procedure.\n+\t(check_effective_target_sse2_runtime): Add check_effective_target_sse2.\n+\t(check_effective_target_sse_runtime): Add check_effective_target_sse.\n+\n+\t* gcc.dg/compat/pr38736_main.c: Use avx_runtime effective target.\n+\t* gcc.dg/compat/vector-1b_main.c: Ditto.  Remove cpuid.h include\n+\tand __get_cpuid test.\n+\t* gcc.dg/compat/vector-2b_main.c: Ditto.\n+\n+\t* gcc.target/i386/avx-check.h (main): Also check bit_OSXSAVE.\n+\n+\t* gcc.dg/20020418-1.c: Do not require sse2 effective target\n+\tfor compile-time only test.\n+\t* gcc.dg/pr32716.c: Ditto.\n+\t* gcc.dg/pr34856.c: Ditto.\n+\t* gcc.dg/pr36997.c: Ditto.\n+\t* gcc.dg/prefetch-loop-arrays-1.c: Ditto.\n+\t* gfortran.dg/pr28158.f90: Ditto.\n+\t* gfortran.dg/pr30667.f: Ditto.\n+\n+\t* gcc.dg/vect/vect.exp: Use check_effective_target_sse2_runtime for\n+\ti?86-*-* and x86_64-*-* targets to disable execution on targets\n+\twithout sse2 runtime support.\n+\t* g++.dg/vect/vect.exp: Ditto.\n+\t* gfortran.dg/vect/vect.exp: Ditto.\n+\n+\t* gcc.dg/pr36584.c: Remove now redundant sse2 effective target check.\n+\t* gcc.dg/pr37544.c: Ditto.\n+\t* gcc.dg/pr40550.c: Ditto.\n+\t* gcc.dg/compat/union-m128-1_main.c: Ditto.\n+\t* gcc.dg/compat/vector-1a_main.c: Ditto.\n+\t* gcc.dg/compat/vector-2a_main.c: Ditto.\n+\t* gcc.dg/torture/pr16104-1.c: Ditto.\n+\t* gcc.dg/torture/pr35771-1.c: Ditto.\n+\t* gcc.dg/torture/pr35771-2.c: Ditto.\n+\t* gcc.dg/torture/pr35771-3.c: Ditto.\n+\t* gcc.dg/torture/stackalign/alloca-2.c: Ditto.\n+\t* gcc.dg/torture/stackalign/alloca-3.c: Ditto.\n+\t* gcc.dg/torture/stackalign/push-1.c: Ditto.\n+\t* gcc.dg/torture/stackalign/vararg-3.c: Ditto.\n+\t* g++.dg/other/i386-1.C: Ditto.\n+\t* g++.dg/other/pr40446.C: Ditto.\n+\n 2010-07-23  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* gcc.dg/pr43058.c: Use dg-timeout-factor 4."}, {"sha": "ec572ec948d69d8f66edeee22fb2820696900ea5", "filename": "gcc/testsuite/g++.dg/other/i386-1.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-1.C?ref=1d8ec041a5b143de07f9cc375c57e49a355ee027", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do run { target i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-msse2\" } */\n-/* { dg-require-effective-target sse2 } */\n /* { dg-require-effective-target sse2_runtime } */\n \n #include <xmmintrin.h>"}, {"sha": "72cd1960649e16289808601c4faab2df9687856e", "filename": "gcc/testsuite/g++.dg/other/pr40446.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr40446.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr40446.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr40446.C?ref=1d8ec041a5b143de07f9cc375c57e49a355ee027", "patch": "@@ -1,7 +1,6 @@\n // PR middle-end/40446\n // { dg-do run { target i?86-*-* x86_64-*-* } }\n // { dg-options \"-O1 -msse2\" }\n-// { dg-require-effective-target sse2 }\n // { dg-require-effective-target sse2_runtime }\n \n #include <emmintrin.h>"}, {"sha": "fe173429a76089be06985210503ad8a5d38aa21e", "filename": "gcc/testsuite/g++.dg/vect/vect.exp", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fvect.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fvect.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fvect.exp?ref=1d8ec041a5b143de07f9cc375c57e49a355ee027", "patch": "@@ -75,11 +75,8 @@ if  [istarget \"powerpc-*paired*\"]  {\n } elseif { [istarget  \"spu-*-*\"] } {\n    set dg-do-what-default run\n } elseif { [istarget \"i?86-*-*\"] || [istarget \"x86_64-*-*\"] } {\n-    if { ![check_effective_target_sse2] } then {\n-\treturn\n-    }\n     lappend DEFAULT_VECTCFLAGS \"-msse2\"\n-    if { [check_sse2_hw_available] && [check_sse_os_support_available] } {\n+    if { [check_effective_target_sse2_runtime] } {\n \tset dg-do-what-default run\n     } else {\n \tset dg-do-what-default compile"}, {"sha": "7314ec000ef2aedf85c33a6d12a343cbd501590c", "filename": "gcc/testsuite/gcc.dg/20020418-1.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2F20020418-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2F20020418-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020418-1.c?ref=1d8ec041a5b143de07f9cc375c57e49a355ee027", "patch": "@@ -2,7 +2,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n /* { dg-options \"-O2 -msse -ffast-math\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-require-effective-target sse { target i?86-*-* x86_64-*-* } } */\n \n void bar (float *a, float *b);\n "}, {"sha": "8f221083c903603a5f7e126bb692b46245f4fc96", "filename": "gcc/testsuite/gcc.dg/compat/pr38736_main.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fpr38736_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fpr38736_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fpr38736_main.c?ref=1d8ec041a5b143de07f9cc375c57e49a355ee027", "patch": "@@ -1,6 +1,6 @@\n /* PR target/38736 */\n /* { dg-skip-if \"attribute ((aligned))\" { ! { i?86-*-* x86_64-*-* } } } */\n-/* { dg-require-effective-target avx } */\n+/* { dg-require-effective-target avx_runtime } */\n \n /* Test compatibility of attribute ((aligned)) with and without -mavx.  */\n "}, {"sha": "59e68d96c7a58493f8d99c1f9e8be27b6b2b1836", "filename": "gcc/testsuite/gcc.dg/compat/union-m128-1_main.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Funion-m128-1_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Funion-m128-1_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Funion-m128-1_main.c?ref=1d8ec041a5b143de07f9cc375c57e49a355ee027", "patch": "@@ -1,6 +1,5 @@\n /* { dg-skip-if \"test SSE2 support\" { ! { i?86-*-* x86_64-*-* } } } */\n /* { dg-options \"-O\" } */\n-/* { dg-require-effective-target sse2 } */\n /* { dg-require-effective-target sse2_runtime } */\n \n /* Test function argument passing.  PR target/15301.  */"}, {"sha": "608f5dd9b8528acc3b782b412ec9fbf62367641c", "filename": "gcc/testsuite/gcc.dg/compat/vector-1a_main.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1a_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1a_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1a_main.c?ref=1d8ec041a5b143de07f9cc375c57e49a355ee027", "patch": "@@ -1,5 +1,4 @@\n /* { dg-skip-if \"test SSE2 vector\" { ! { i?86-*-* x86_64-*-* } } } */\n-/* { dg-require-effective-target sse2 } */\n /* { dg-require-effective-target sse2_runtime } */\n \n /* Test compatibility of vector types: layout between separately-compiled"}, {"sha": "427e8caf38b11fc200f63eb51a1c774da55236e6", "filename": "gcc/testsuite/gcc.dg/compat/vector-1b_main.c", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1b_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1b_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1b_main.c?ref=1d8ec041a5b143de07f9cc375c57e49a355ee027", "patch": "@@ -1,27 +1,17 @@\n /* { dg-skip-if \"test AVX vector\" { ! { i?86-*-* x86_64-*-* } } } */\n-/* { dg-require-effective-target avx } */\n+/* { dg-require-effective-target avx_runtime } */\n \n /* Test compatibility of vector types: layout between separately-compiled\n    modules, parameter passing, and function return.  This test uses\n    vectors of integer values.  */\n \n-#include \"cpuid.h\"\n-\n extern void vector_1_x (void);\n extern void exit (int);\n int fails;\n \n int\n main ()\n {\n-  unsigned int eax, ebx, ecx, edx;\n-\n-  if (!__get_cpuid (1, &eax, &ebx, &ecx, &edx))\n-    return 0;\n-\n-  /* Run AVX vector test only if host has AVX support.  */\n-  if (ecx & bit_AVX)\n-    vector_1_x ();\n-\n+  vector_1_x ();\n   exit (0);\n }"}, {"sha": "e957faf90d25568951df84fd736845ba15cc5f26", "filename": "gcc/testsuite/gcc.dg/compat/vector-2a_main.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2a_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2a_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2a_main.c?ref=1d8ec041a5b143de07f9cc375c57e49a355ee027", "patch": "@@ -1,5 +1,4 @@\n /* { dg-skip-if \"test SSE2 support\" { ! { i?86-*-* x86_64-*-* } } } */\n-/* { dg-require-effective-target sse2 } */\n /* { dg-require-effective-target sse2_runtime } */\n \n /* Test compatibility of vector types: layout between separately-compiled"}, {"sha": "2c195764249a6c6765bca645aef072bd145cd0d9", "filename": "gcc/testsuite/gcc.dg/compat/vector-2b_main.c", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2b_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2b_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2b_main.c?ref=1d8ec041a5b143de07f9cc375c57e49a355ee027", "patch": "@@ -1,27 +1,17 @@\n /* { dg-skip-if \"test AVX support\" { ! { i?86-*-* x86_64-*-* } } } */\n-/* { dg-require-effective-target avx } */\n+/* { dg-require-effective-target avx_runtime } */\n \n /* Test compatibility of vector types: layout between separately-compiled\n    modules, parameter passing, and function return.  This test uses\n    vectors of floating points values.  */\n \n-#include \"cpuid.h\"\n-\n extern void vector_2_x (void);\n extern void exit (int);\n int fails;\n \n int\n main ()\n {\n-  unsigned int eax, ebx, ecx, edx;\n-\n-  if (!__get_cpuid (1, &eax, &ebx, &ecx, &edx))\n-    return 0;\n-\n-  /* Run AVX vector test only if host has AVX support.  */\n-  if (ecx & bit_AVX)\n-    vector_2_x ();\n-\n+  vector_2_x ();\n   exit (0);\n }"}, {"sha": "6646db04f4f512031d95cd73a2b36a5ffa4d73cc", "filename": "gcc/testsuite/gcc.dg/pr32176.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Fpr32176.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Fpr32176.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr32176.c?ref=1d8ec041a5b143de07f9cc375c57e49a355ee027", "patch": "@@ -3,7 +3,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fprefetch-loop-arrays -w\" } */\n /* { dg-options \"-O2 -fprefetch-loop-arrays -march=i686 -msse\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n-/* { dg-require-effective-target sse { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n \n void foo (void)\n {"}, {"sha": "6bfc704774f0b3982179cc1a6b275243c6a3c316", "filename": "gcc/testsuite/gcc.dg/pr34856.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Fpr34856.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Fpr34856.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr34856.c?ref=1d8ec041a5b143de07f9cc375c57e49a355ee027", "patch": "@@ -1,7 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n /* { dg-options \"-O2 -msse2\" { target { i?86-*-* x86_64-*-* } } } */\n-/* { dg-require-effective-target sse2 { target { i?86-*-* x86_64-*-* } } } */\n /* { dg-options \"-O2 -maltivec\" { target { powerpc*-*-linux* && powerpc_altivec_ok } } } */\n \n typedef unsigned __attribute__ ((__mode__ (__pointer__))) uintptr_t;"}, {"sha": "c0b005db7d7064d1939d161405ddec9744254dfd", "filename": "gcc/testsuite/gcc.dg/pr36584.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36584.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36584.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36584.c?ref=1d8ec041a5b143de07f9cc375c57e49a355ee027", "patch": "@@ -1,7 +1,6 @@\n /* { dg-do run } */\n /* { dg-options \"-O2 -lm\" } */\n /* { dg-options \"-O2 -msse2 -mfpmath=sse\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n-/* { dg-require-effective-target sse2 { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n /* { dg-require-effective-target sse2_runtime { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n \n extern double fabs (double);"}, {"sha": "f87962e6f8a94258caa479ff0a26d84f7079b5db", "filename": "gcc/testsuite/gcc.dg/pr36997.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36997.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36997.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36997.c?ref=1d8ec041a5b143de07f9cc375c57e49a355ee027", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile { target x86_64-*-* i?86-*-* } } */\n /* { dg-options \"-std=c99 -msse2\" } */\n-/* { dg-require-effective-target sse2 } */\n \n typedef int __m64 __attribute__ ((__vector_size__ (8), __may_alias__));\n __m64 _mm_add_si64 (__m64 __m1, __m64 __m2)"}, {"sha": "99979cef7adcbdf88c09fd7dec203d5a7832f142", "filename": "gcc/testsuite/gcc.dg/pr37544.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Fpr37544.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Fpr37544.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr37544.c?ref=1d8ec041a5b143de07f9cc375c57e49a355ee027", "patch": "@@ -1,7 +1,6 @@\n /* { dg-do run } */\n /* { dg-options \"-O2\" } */\n /* { dg-options \"-O2 -msse2 -mtune=core2 -mfpmath=387\" { target { i?86-*-* x86_64-*-* } } } */\n-/* { dg-require-effective-target sse2 { target { i?86-*-* x86_64-*-* } } } */\n /* { dg-require-effective-target sse2_runtime { target { i?86-*-* x86_64-*-* } } } */\n \n extern void abort (void);"}, {"sha": "08951137dd3d4181df071ce5488c9fd65b8666ca", "filename": "gcc/testsuite/gcc.dg/pr40550.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40550.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40550.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40550.c?ref=1d8ec041a5b143de07f9cc375c57e49a355ee027", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do run } */\n /* { dg-options \"-msse\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n-/* { dg-require-effective-target sse { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n /* { dg-require-effective-target sse_runtime { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n \n typedef float v2sf __attribute__ ((vector_size (2 * sizeof(float))));"}, {"sha": "59cebc52e96769da786638b3725f7aa27ddacce6", "filename": "gcc/testsuite/gcc.dg/prefetch-loop-arrays-1.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Fprefetch-loop-arrays-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Fprefetch-loop-arrays-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fprefetch-loop-arrays-1.c?ref=1d8ec041a5b143de07f9cc375c57e49a355ee027", "patch": "@@ -2,7 +2,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fprefetch-loop-arrays -w\" } */\n /* { dg-options \"-O2 -fprefetch-loop-arrays -march=i686 -msse -w\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n-/* { dg-require-effective-target sse { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n \n __extension__ typedef __SIZE_TYPE__ size_t;\n "}, {"sha": "ad5eda65fca96490f938f45f2e8ba843c7e7b620", "filename": "gcc/testsuite/gcc.dg/torture/pr16104-1.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr16104-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr16104-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr16104-1.c?ref=1d8ec041a5b143de07f9cc375c57e49a355ee027", "patch": "@@ -1,7 +1,6 @@\n /* PR rtl-optimization/16104 */\n /* { dg-do run { target i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-msse2\" } */\n-/* { dg-require-effective-target sse2 } */\n /* { dg-require-effective-target sse2_runtime } */\n \n extern void abort (void);"}, {"sha": "b3fd554da22d2af2037a171c4cd04456e564a35e", "filename": "gcc/testsuite/gcc.dg/torture/pr35771-1.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr35771-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr35771-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr35771-1.c?ref=1d8ec041a5b143de07f9cc375c57e49a355ee027", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do run { target i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-msse2\" } */\n-/* { dg-require-effective-target sse2 } */\n /* { dg-require-effective-target sse2_runtime } */\n \n typedef float __m128 __attribute__ ((__vector_size__ (16), __may_alias__));"}, {"sha": "a033caefd5cd54006dc4cbf07831e56c96376fcd", "filename": "gcc/testsuite/gcc.dg/torture/pr35771-2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr35771-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr35771-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr35771-2.c?ref=1d8ec041a5b143de07f9cc375c57e49a355ee027", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do run { target i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-msse2\" } */\n-/* { dg-require-effective-target sse2 } */\n /* { dg-require-effective-target sse2_runtime } */\n \n typedef double __m128d __attribute__ ((__vector_size__ (16), __may_alias__));"}, {"sha": "fcbe86cb1ba0b60d0b3855ea83167760b2570292", "filename": "gcc/testsuite/gcc.dg/torture/pr35771-3.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr35771-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr35771-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr35771-3.c?ref=1d8ec041a5b143de07f9cc375c57e49a355ee027", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do run { target i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-msse2\" } */\n-/* { dg-require-effective-target sse2 } */\n /* { dg-require-effective-target sse2_runtime } */\n \n typedef long long __m128i __attribute__ ((__vector_size__ (16), __may_alias__));"}, {"sha": "139b74ed9c63aecd7067283780f1a69bd0930341", "filename": "gcc/testsuite/gcc.dg/torture/stackalign/alloca-2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Falloca-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Falloca-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Falloca-2.c?ref=1d8ec041a5b143de07f9cc375c57e49a355ee027", "patch": "@@ -1,7 +1,6 @@\n /* PR middle-end/37009 */\n /* { dg-do run { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n /* { dg-options \"-msse2\" } */\n-/* { dg-require-effective-target sse2 } */\n /* { dg-require-effective-target sse2_runtime } */\n \n #include <emmintrin.h>"}, {"sha": "31cb0c472b548765081116b88fb9f9596e913953", "filename": "gcc/testsuite/gcc.dg/torture/stackalign/alloca-3.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Falloca-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Falloca-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Falloca-3.c?ref=1d8ec041a5b143de07f9cc375c57e49a355ee027", "patch": "@@ -1,7 +1,6 @@\n /* PR middle-end/37009 */\n /* { dg-do run { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n /* { dg-options \"-msse2\" } */\n-/* { dg-require-effective-target sse2 } */\n /* { dg-require-effective-target sse2_runtime } */\n \n #include <emmintrin.h>"}, {"sha": "dd5dffc1581cc686945547a227c052dadb6afd7c", "filename": "gcc/testsuite/gcc.dg/torture/stackalign/push-1.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fpush-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fpush-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fpush-1.c?ref=1d8ec041a5b143de07f9cc375c57e49a355ee027", "patch": "@@ -1,7 +1,6 @@\n /* PR middle-end/37010 */\n /* { dg-do run { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n /* { dg-options \"-msse2 -mpreferred-stack-boundary=2\" } */\n-/* { dg-require-effective-target sse2 } */\n /* { dg-require-effective-target sse2_runtime } */\n \n #include <emmintrin.h>"}, {"sha": "5b49685fa82c2d9dcdb44897be6be30de988d229", "filename": "gcc/testsuite/gcc.dg/torture/stackalign/vararg-3.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fvararg-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fvararg-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fvararg-3.c?ref=1d8ec041a5b143de07f9cc375c57e49a355ee027", "patch": "@@ -1,7 +1,6 @@\n /* PR middle-end/37009 */\n /* { dg-do run { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n /* { dg-options \"-msse2\" } */\n-/* { dg-require-effective-target sse2 } */\n /* { dg-require-effective-target sse2_runtime } */\n \n #include <stdarg.h>"}, {"sha": "a68d8c65f6e140ba6f1704aa989f7977c3c2cf40", "filename": "gcc/testsuite/gcc.dg/vect/vect.exp", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp?ref=1d8ec041a5b143de07f9cc375c57e49a355ee027", "patch": "@@ -67,11 +67,8 @@ if  [istarget \"powerpc-*paired*\"]  {\n } elseif { [istarget  \"spu-*-*\"] } {\n    set dg-do-what-default run\n } elseif { [istarget \"i?86-*-*\"] || [istarget \"x86_64-*-*\"] } {\n-    if { ![check_effective_target_sse2] } then {\n-\treturn\n-    }\n     lappend DEFAULT_VECTCFLAGS \"-msse2\"\n-    if { [check_sse2_hw_available] && [check_sse_os_support_available] } {\n+    if { [check_effective_target_sse2_runtime] } {\n \tset dg-do-what-default run\n     } else {\n \tset dg-do-what-default compile"}, {"sha": "b15584ad274e875a7d1976e0c4dc84f8cb83e594", "filename": "gcc/testsuite/gcc.target/i386/avx-check.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-check.h?ref=1d8ec041a5b143de07f9cc375c57e49a355ee027", "patch": "@@ -20,7 +20,7 @@ main ()\n     return 0;\n \n   /* Run AVX test only if host has AVX support.  */\n-  if (ecx & bit_AVX)\n+  if ((ecx & (bit_AVX | bit_OSXSAVE)) == (bit_AVX | bit_OSXSAVE))\n     {\n       do_test ();\n #ifdef DEBUG"}, {"sha": "4556ecd76edd9887a9468e20dded947bf4f61b12", "filename": "gcc/testsuite/gfortran.dg/pr28158.f90", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr28158.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr28158.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr28158.f90?ref=1d8ec041a5b143de07f9cc375c57e49a355ee027", "patch": "@@ -1,7 +1,6 @@\n ! { dg-do compile { target i?86-*-* x86_64-*-* } }\n ! { dg-require-effective-target ilp32 }\n ! { dg-options \"-O -msse -mfpmath=sse\" }\n-! { dg-require-effective-target sse }\n     subroutine yhalf(z)\n     complex cdexpj,z\n     z=cdexpj((0.d0,1.d0)*z)"}, {"sha": "0f1af29d1f953415d38ca2d9bb71e87169591135", "filename": "gcc/testsuite/gfortran.dg/pr30667.f", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr30667.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr30667.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr30667.f?ref=1d8ec041a5b143de07f9cc375c57e49a355ee027", "patch": "@@ -1,7 +1,6 @@\n ! { dg-do compile { target i?86-*-* x86_64-*-* } }\n ! { dg-require-effective-target ilp32 }\n ! { dg-options \"-O2 -msse -ftree-vectorize\" }\n-! { dg-require-effective-target sse } \n       subroutine cblank_cvb(a,ndim)\n       character*(*) a\n       character*1 blank"}, {"sha": "5783e929496e3eddcd282195cc5a40c2510ddece", "filename": "gcc/testsuite/gfortran.dg/vect/vect.exp", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect.exp?ref=1d8ec041a5b143de07f9cc375c57e49a355ee027", "patch": "@@ -68,11 +68,8 @@ if  [istarget \"powerpc-*paired*\"]  {\n } elseif { [istarget  \"spu-*-*\"] } {\n    set dg-do-what-default run\n } elseif { [istarget \"i?86-*-*\"] || [istarget \"x86_64-*-*\"] } {\n-    if { ![check_effective_target_sse2] } then {\n-\treturn\n-    }\n     lappend DEFAULT_VECTCFLAGS \"-msse2\"\n-    if { [check_sse2_hw_available] && [check_sse_os_support_available] } {\n+    if { [check_effective_target_sse2_runtime] } {\n \tset dg-do-what-default run\n     } else {\n \tset dg-do-what-default compile"}, {"sha": "9fb18d16715a65e38920310d84e86822279f70d4", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 44, "deletions": 8, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8ec041a5b143de07f9cc375c57e49a355ee027/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=1d8ec041a5b143de07f9cc375c57e49a355ee027", "patch": "@@ -953,7 +953,7 @@ proc check_sse_hw_available { } {\n \t\t#include \"cpuid.h\"\n \t\tint main ()\n \t\t{\n-\t\t  unsigned int eax, ebx, ecx, edx = 0;\n+\t\t  unsigned int eax, ebx, ecx, edx;\n \t\t  if (__get_cpuid (1, &eax, &ebx, &ecx, &edx))\n \t\t    return !(edx & bit_SSE);\n \t\t  return 1;\n@@ -976,7 +976,7 @@ proc check_sse2_hw_available { } {\n \t\t#include \"cpuid.h\"\n \t\tint main ()\n \t\t{\n-\t\t  unsigned int eax, ebx, ecx, edx = 0;\n+\t\t  unsigned int eax, ebx, ecx, edx;\n \t\t  if (__get_cpuid (1, &eax, &ebx, &ecx, &edx))\n \t\t    return !(edx & bit_SSE2);\n \t\t  return 1;\n@@ -986,24 +986,60 @@ proc check_sse2_hw_available { } {\n     }]\n }\n \n+# Return 1 if the target supports executing AVX instructions, 0\n+# otherwise.  Cache the result.\n+\n+proc check_avx_hw_available { } {\n+    return [check_cached_effective_target avx_hw_available {\n+\t# If this is not the right target then we can skip the test.\n+\tif { !([istarget x86_64-*-*] || [istarget i?86-*-*]) } {\n+\t    expr 0\n+\t} else {\n+\t    check_runtime_nocache avx_hw_available {\n+\t\t#include \"cpuid.h\"\n+\t\tint main ()\n+\t\t{\n+\t\t  unsigned int eax, ebx, ecx, edx;\n+\t\t  if (__get_cpuid (1, &eax, &ebx, &ecx, &edx))\n+\t\t    return ((ecx & (bit_AVX | bit_OSXSAVE))\n+\t\t\t    != (bit_AVX | bit_OSXSAVE));\n+\t\t  return 1;\n+\t\t}\n+\t    } \"\"\n+\t}\n+    }]\n+}\n+\n # Return 1 if the target supports running SSE executables, 0 otherwise.\n \n proc check_effective_target_sse_runtime { } {\n-    if { [check_sse_hw_available] && [check_sse_os_support_available] } {\n+    if { [check_effective_target_sse]\n+\t && [check_sse_hw_available]\n+\t && [check_sse_os_support_available] } {\n \treturn 1\n-    } else {\n-\treturn 0\n     }\n+    return 0\n }\n \n # Return 1 if the target supports running SSE2 executables, 0 otherwise.\n \n proc check_effective_target_sse2_runtime { } {\n-    if { [check_sse2_hw_available] && [check_sse_os_support_available] } {\n+    if { [check_effective_target_sse2]\n+\t && [check_sse2_hw_available]\n+\t && [check_sse_os_support_available] } {\n \treturn 1\n-    } else {\n-\treturn 0\n     }\n+    return 0\n+}\n+\n+# Return 1 if the target supports running AVX executables, 0 otherwise.\n+\n+proc check_effective_target_avx_runtime { } {\n+    if { [check_effective_target_avx]\n+\t && [check_avx_hw_available] } {\n+\treturn 1\n+    }\n+    return 0\n }\n \n # Return 1 if the target supports executing VSX instructions, 0"}]}