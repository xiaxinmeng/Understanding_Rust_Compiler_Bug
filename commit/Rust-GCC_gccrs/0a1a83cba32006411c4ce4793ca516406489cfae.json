{"sha": "0a1a83cba32006411c4ce4793ca516406489cfae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGExYTgzY2JhMzIwMDY0MTFjNGNlNDc5M2NhNTE2NDA2NDg5Y2ZhZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-05-07T11:23:39Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-05-07T11:23:39Z"}, "message": "re PR tree-optimization/57190 (verify_ssa failed: SSA_NAME_OCCURS_IN_ABNORMAL_PHI should be set)\n\n2013-05-07  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/57190\n\t* tree-eh.c (sink_clobbers): Properly propagate\n\tSSA_NAME_OCCURS_IN_ABNORMAL_PHI.\n\n\t* g++.dg/torture/pr57190.C: New testcase.\n\nFrom-SVN: r198675", "tree": {"sha": "ad243743b7f0922ee1b709b4627ede6a9cc57e23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad243743b7f0922ee1b709b4627ede6a9cc57e23"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a1a83cba32006411c4ce4793ca516406489cfae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a1a83cba32006411c4ce4793ca516406489cfae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a1a83cba32006411c4ce4793ca516406489cfae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a1a83cba32006411c4ce4793ca516406489cfae/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ba7e83f8dcae71029dfba361070319ab22e2e37a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba7e83f8dcae71029dfba361070319ab22e2e37a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba7e83f8dcae71029dfba361070319ab22e2e37a"}], "stats": {"total": 58, "additions": 58, "deletions": 0}, "files": [{"sha": "879c0244054042b1276e11ac282efbb529bae601", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a1a83cba32006411c4ce4793ca516406489cfae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a1a83cba32006411c4ce4793ca516406489cfae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0a1a83cba32006411c4ce4793ca516406489cfae", "patch": "@@ -1,3 +1,9 @@\n+2013-05-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/57190\n+\t* tree-eh.c (sink_clobbers): Properly propagate\n+\tSSA_NAME_OCCURS_IN_ABNORMAL_PHI.\n+\n 2013-05-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/57149"}, {"sha": "d7c5046e67ef9db01c1d0a9cc5640b85ec86af33", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a1a83cba32006411c4ce4793ca516406489cfae/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a1a83cba32006411c4ce4793ca516406489cfae/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0a1a83cba32006411c4ce4793ca516406489cfae", "patch": "@@ -1,3 +1,8 @@\n+2013-05-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/57190\n+\t* g++.dg/torture/pr57190.C: New testcase.\n+\n 2013-05-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/57149"}, {"sha": "9fa11cd26ba80032d33a04274b6600c899a6df32", "filename": "gcc/testsuite/g++.dg/torture/pr57190.C", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a1a83cba32006411c4ce4793ca516406489cfae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr57190.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a1a83cba32006411c4ce4793ca516406489cfae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr57190.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr57190.C?ref=0a1a83cba32006411c4ce4793ca516406489cfae", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+\n+namespace __gnu_cxx __attribute__ ((__visibility__ (\"default\"))) {\n+    template<typename _Tp>     class new_allocator     {\n+    };\n+}\n+namespace std {\n+    template<typename>     class allocator;\n+    template<class _CharT>     struct char_traits;\n+    template<typename _CharT, typename _Traits = char_traits<_CharT>,            typename _Alloc = allocator<_CharT> >     class basic_string;\n+    typedef basic_string<char> string;\n+    template<typename _Tp>     class allocator: public __gnu_cxx::new_allocator<_Tp>     {\n+    };\n+    template<typename _CharT, typename _Traits, typename _Alloc>     class basic_string     {\n+    public:\n+\tbasic_string(const _CharT* __s, const _Alloc& __a = _Alloc());\n+    };\n+}\n+class UIException {\n+};\n+class PasswordDialog {\n+    void run() throw (UIException);\n+};\n+class MessageBox  {\n+public:\n+    MessageBox (std::string t) throw (UIException);\n+    virtual int run() throw (UIException) ;\n+};\n+extern \"C\" {\n+    struct __jmp_buf_tag   {\n+    };\n+    extern int __sigsetjmp (struct __jmp_buf_tag __env[1], int __savemask) throw ();\n+    typedef struct __jmp_buf_tag sigjmp_buf[1];\n+}\n+sigjmp_buf password_dialog_sig_jmp_buf;\n+void PasswordDialog::run() throw (UIException)\n+{\n+  __sigsetjmp (password_dialog_sig_jmp_buf, 1);\n+  MessageBox* errmsg = __null;\n+  errmsg = new MessageBox (\"E R R O R\");\n+  errmsg->run();\n+}"}, {"sha": "fb6fd86fae3644c5ee76e581888362bf0e5b916e", "filename": "gcc/tree-eh.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a1a83cba32006411c4ce4793ca516406489cfae/gcc%2Ftree-eh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a1a83cba32006411c4ce4793ca516406489cfae/gcc%2Ftree-eh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-eh.c?ref=0a1a83cba32006411c4ce4793ca516406489cfae", "patch": "@@ -3401,6 +3401,11 @@ sink_clobbers (basic_block bb)\n \t  FOR_EACH_IMM_USE_STMT (use_stmt, iter, vuse)\n \t    FOR_EACH_IMM_USE_ON_STMT (use_p, iter)\n \t      SET_USE (use_p, gimple_vdef (stmt));\n+\t  if (SSA_NAME_OCCURS_IN_ABNORMAL_PHI (vuse))\n+\t    {\n+\t      SSA_NAME_OCCURS_IN_ABNORMAL_PHI (gimple_vdef (stmt)) = 1;\n+\t      SSA_NAME_OCCURS_IN_ABNORMAL_PHI (vuse) = 0;\n+\t    }\n \t  /* Adjust the incoming virtual operand.  */\n \t  SET_USE (PHI_ARG_DEF_PTR_FROM_EDGE (vphi, succe), gimple_vuse (stmt));\n \t  SET_USE (gimple_vuse_op (stmt), vuse);"}]}