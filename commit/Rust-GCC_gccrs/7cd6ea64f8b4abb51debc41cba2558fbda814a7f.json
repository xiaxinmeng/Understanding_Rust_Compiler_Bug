{"sha": "7cd6ea64f8b4abb51debc41cba2558fbda814a7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NkNmVhNjRmOGI0YWJiNTFkZWJjNDFjYmEyNTU4ZmJkYTgxNGE3Zg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-10-10T20:50:26Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-10-10T20:50:26Z"}, "message": "[C++ PATCH] hash-table for extern-c fns.\n\nhttps://gcc.gnu.org/ml/gcc-patches/2017-10/msg00614.html\n\t* name-lookup.c (extern_c_fns): Rename to ...\n\t(extern_c_decls): ... here.\n\t(check_extern_c_conflict, extern_c_linkage_bindings): Update.\n\t(do_pushdecl): Check extern-c fns and vars.\n\n\t* g++.dg/lookup/extern-c-redecl6.C: New.\n\t* g++.dg/lookup/extern-c-hidden.C: Adjust diagnostics.\n\t* g++.dg/lookup/extern-c-redecl.C: Likewise.\n\t* g++.old-deja/g++.other/using9.C: Likewise.\n\nFrom-SVN: r253622", "tree": {"sha": "c15f011f48311e5e1b7d7bae22def9a7d3cb8785", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c15f011f48311e5e1b7d7bae22def9a7d3cb8785"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7cd6ea64f8b4abb51debc41cba2558fbda814a7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cd6ea64f8b4abb51debc41cba2558fbda814a7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cd6ea64f8b4abb51debc41cba2558fbda814a7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cd6ea64f8b4abb51debc41cba2558fbda814a7f/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "507ea98d58f471e00a717bc5e21ed8bdd240628b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/507ea98d58f471e00a717bc5e21ed8bdd240628b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/507ea98d58f471e00a717bc5e21ed8bdd240628b"}], "stats": {"total": 91, "additions": 65, "deletions": 26}, "files": [{"sha": "c0ca1f896cce969cd3d11ae857547d77c33db33f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cd6ea64f8b4abb51debc41cba2558fbda814a7f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cd6ea64f8b4abb51debc41cba2558fbda814a7f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7cd6ea64f8b4abb51debc41cba2558fbda814a7f", "patch": "@@ -1,5 +1,10 @@\n 2017-10-10  Nathan Sidwell  <nathan@acm.org>\n \n+\t* name-lookup.c (extern_c_fns): Rename to ...\n+\t(extern_c_decls): ... here.\n+\t(check_extern_c_conflict, extern_c_linkage_bindings): Update.\n+\t(do_pushdecl): Check extern-c fns and vars.\n+\n \t* cp-tree.h (default_hash_traits <lang_identifier *>): Delete\n \tspecialization.\n "}, {"sha": "b1b4ebbb7de28707b96334e05806e4a684cc9d87", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 24, "deletions": 22, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cd6ea64f8b4abb51debc41cba2558fbda814a7f/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cd6ea64f8b4abb51debc41cba2558fbda814a7f/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=7cd6ea64f8b4abb51debc41cba2558fbda814a7f", "patch": "@@ -2511,13 +2511,13 @@ update_binding (cp_binding_level *level, cxx_binding *binding, tree *slot,\n   return decl;\n }\n \n-/* Table of identifiers to extern C functions (or LISTS thereof).  */\n+/* Table of identifiers to extern C declarations (or LISTS thereof).  */\n \n-static GTY(()) hash_table<named_decl_hash> *extern_c_fns;\n+static GTY(()) hash_table<named_decl_hash> *extern_c_decls;\n \n-/* DECL has C linkage. If we have an existing instance, make sure it\n-   has the same exception specification [7.5, 7.6].  If there's no\n-   instance, add DECL to the map.  */\n+/* DECL has C linkage. If we have an existing instance, make sure the\n+   new one is compatible.  Make sure it has the same exception\n+   specification [7.5, 7.6].  Add DECL to the map.  */\n \n static void\n check_extern_c_conflict (tree decl)\n@@ -2526,10 +2526,10 @@ check_extern_c_conflict (tree decl)\n   if (DECL_ARTIFICIAL (decl) || DECL_IN_SYSTEM_HEADER (decl))\n     return;\n \n-  if (!extern_c_fns)\n-    extern_c_fns = hash_table<named_decl_hash>::create_ggc (127);\n+  if (!extern_c_decls)\n+    extern_c_decls = hash_table<named_decl_hash>::create_ggc (127);\n \n-  tree *slot = extern_c_fns\n+  tree *slot = extern_c_decls\n     ->find_slot_with_hash (DECL_NAME (decl),\n \t\t\t   IDENTIFIER_HASH_VALUE (DECL_NAME (decl)), INSERT);\n   if (tree old = *slot)\n@@ -2543,22 +2543,23 @@ check_extern_c_conflict (tree decl)\n \t     about a (possible) mismatch, when inserting the decl.  */\n       else if (!decls_match (decl, old))\n \tmismatch = 1;\n-      else if (!comp_except_specs (TYPE_RAISES_EXCEPTIONS (TREE_TYPE (old)),\n-\t\t\t\t   TYPE_RAISES_EXCEPTIONS (TREE_TYPE (decl)),\n-\t\t\t\t   ce_normal))\n+      else if (TREE_CODE (decl) == FUNCTION_DECL\n+\t       && !comp_except_specs (TYPE_RAISES_EXCEPTIONS (TREE_TYPE (old)),\n+\t\t\t\t      TYPE_RAISES_EXCEPTIONS (TREE_TYPE (decl)),\n+\t\t\t\t      ce_normal))\n \tmismatch = -1;\n       else if (DECL_ASSEMBLER_NAME_SET_P (old))\n \tSET_DECL_ASSEMBLER_NAME (decl, DECL_ASSEMBLER_NAME (old));\n \n       if (mismatch)\n \t{\n \t  pedwarn (input_location, 0,\n-\t\t   \"declaration of %q#D with C language linkage\", decl);\n-\t  pedwarn (DECL_SOURCE_LOCATION (old), 0,\n-\t\t   \"conflicts with previous declaration %q#D\", old);\n+\t\t   \"conflicting C language linkage declaration %q#D\", decl);\n+\t  inform (DECL_SOURCE_LOCATION (old),\n+\t\t  \"previous declaration %q#D\", old);\n \t  if (mismatch < 0)\n-\t    pedwarn (input_location, 0,\n-\t\t     \"due to different exception specifications\");\n+\t    inform (input_location,\n+\t\t    \"due to different exception specifications\");\n \t}\n       else\n \t{\n@@ -2587,8 +2588,8 @@ check_extern_c_conflict (tree decl)\n tree\n c_linkage_bindings (tree name)\n {\n-  if (extern_c_fns)\n-    if (tree *slot = extern_c_fns\n+  if (extern_c_decls)\n+    if (tree *slot = extern_c_decls\n \t->find_slot_with_hash (name, IDENTIFIER_HASH_VALUE (name), NO_INSERT))\n       {\n \ttree result = *slot;\n@@ -3030,9 +3031,8 @@ do_pushdecl (tree decl, bool is_friend)\n \t\t    else\n \t\t      *slot = head;\n \t\t  }\n-\t\tif (TREE_CODE (match) == FUNCTION_DECL\n-\t\t    && DECL_EXTERN_C_P (match))\n-\t\t  /* We need to check and register the fn now.  */\n+\t\tif (DECL_EXTERN_C_P (match))\n+\t\t  /* We need to check and register the decl now.  */\n \t\t  check_extern_c_conflict (match);\n \t      }\n \t    return match;\n@@ -3113,7 +3113,9 @@ do_pushdecl (tree decl, bool is_friend)\n \t}\n       else if (VAR_P (decl))\n \tmaybe_register_incomplete_var (decl);\n-      else if (TREE_CODE (decl) == FUNCTION_DECL && DECL_EXTERN_C_P (decl))\n+\n+      if ((VAR_P (decl) || TREE_CODE (decl) == FUNCTION_DECL)\n+\t  && DECL_EXTERN_C_P (decl))\n \tcheck_extern_c_conflict (decl);\n     }\n   else"}, {"sha": "f1ee90e687bdc6e29aebc40d01dfa9c8d14b2a0b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cd6ea64f8b4abb51debc41cba2558fbda814a7f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cd6ea64f8b4abb51debc41cba2558fbda814a7f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7cd6ea64f8b4abb51debc41cba2558fbda814a7f", "patch": "@@ -1,3 +1,10 @@\n+2017-10-10  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* g++.dg/lookup/extern-c-redecl6.C: New.\n+\t* g++.dg/lookup/extern-c-hidden.C: Adjust diagnostics.\n+\t* g++.dg/lookup/extern-c-redecl.C: Likewise.\n+\t* g++.old-deja/g++.other/using9.C: Likewise.\n+\n 2017-10-10  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/78006"}, {"sha": "80593dba7358c9b4da8ceff3ba233ae31c49af44", "filename": "gcc/testsuite/g++.dg/lookup/extern-c-hidden.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cd6ea64f8b4abb51debc41cba2558fbda814a7f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fextern-c-hidden.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cd6ea64f8b4abb51debc41cba2558fbda814a7f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fextern-c-hidden.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fextern-c-hidden.C?ref=7cd6ea64f8b4abb51debc41cba2558fbda814a7f", "patch": "@@ -1,11 +1,11 @@\n // Make sure unhidding an extern-c still checks it is compatible\n \n-extern \"C\" float fabsf (float);  // { dg-error \"conflicts with previous declaration\" }\n+extern \"C\" float fabsf (float);  // { dg-message \"previous declaration\" }\n \n namespace Bob \n {\n   extern \"C\" float fabsf (float, float); // { dg-error \"C language\" }\n-  extern \"C\" double fabs (double, double); // { dg-error \"conflicts with previous declaration\" }\n+  extern \"C\" double fabs (double, double); // { dg-message \"previous declaration\" }\n }\n \n extern \"C\" double fabs (double); // { dg-error \"C language\" }"}, {"sha": "fd49868ee4ebabb8425182a332d9f35c2e9748f0", "filename": "gcc/testsuite/g++.dg/lookup/extern-c-redecl.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cd6ea64f8b4abb51debc41cba2558fbda814a7f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fextern-c-redecl.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cd6ea64f8b4abb51debc41cba2558fbda814a7f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fextern-c-redecl.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fextern-c-redecl.C?ref=7cd6ea64f8b4abb51debc41cba2558fbda814a7f", "patch": "@@ -3,7 +3,7 @@\n // { dg-do compile }\n \n namespace A {\n-    extern \"C\" void foo_func () throw(); // { dg-error \"conflicts\" }\n+    extern \"C\" void foo_func () throw(); // { dg-message \"previous\" }\n }\n // next line should trigger an error because\n // it conflicts with previous declaration of foo_func (), due to"}, {"sha": "b4537d64a26d11f3a4fd708cc17a848107ac2932", "filename": "gcc/testsuite/g++.dg/lookup/extern-c-redecl6.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cd6ea64f8b4abb51debc41cba2558fbda814a7f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fextern-c-redecl6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cd6ea64f8b4abb51debc41cba2558fbda814a7f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fextern-c-redecl6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fextern-c-redecl6.C?ref=7cd6ea64f8b4abb51debc41cba2558fbda814a7f", "patch": "@@ -0,0 +1,25 @@\n+extern \"C\" {\n+  int i; // { dg-message \"previous\" }\n+  float f; // { dg-message \"previous\" }\n+  void fn (); // { dg-message \"previous\" }\n+  int ai1[1]; // { dg-message \"previous\" }\n+  extern int ai[];\n+\n+  namespace OK\n+  {\n+    int i;\n+    float f;\n+    void fn ();\n+    extern int ai1[];\n+    int ai[2];\n+  }\n+\n+  namespace BAD\n+  {\n+    long i; // { dg-error \"C language linkage\" }\n+    double f; // { dg-error \"C language linkage\" }\n+    int fn (); // { dg-error \"C language linkage\" }\n+    int ai1[2]; // { dg-error \"C language linkage\" }\n+  }\n+}\n+"}, {"sha": "c79f993fd2b9a15b890b61f455302db8d59ff577", "filename": "gcc/testsuite/g++.old-deja/g++.other/using9.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cd6ea64f8b4abb51debc41cba2558fbda814a7f/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fusing9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cd6ea64f8b4abb51debc41cba2558fbda814a7f/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fusing9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fusing9.C?ref=7cd6ea64f8b4abb51debc41cba2558fbda814a7f", "patch": "@@ -13,7 +13,7 @@ struct x {};\n using ::x;\n using ::a;\n \n-extern \"C\" void foo ();\t\t// { dg-error \"previous declaration\" }\n+extern \"C\" void foo ();\t\t// { dg-message \"previous declaration\" }\n \n namespace {\n   extern \"C\" int foo ();\t// { dg-error \"C.*linkage\" }"}]}