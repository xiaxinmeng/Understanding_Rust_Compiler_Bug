{"sha": "cc5edac6734ea681c9fa9a36cbd9ceb8269877e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2M1ZWRhYzY3MzRlYTY4MWM5ZmE5YTM2Y2JkOWNlYjgyNjk4NzdlMA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-09-30T09:53:43Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-09-30T09:53:43Z"}, "message": "(fold, case PLUS_EXPR, MINUS_EXPR): Properly handle case when ARG1\nsplits and VARSIGN is -1.\n\nFrom-SVN: r5537", "tree": {"sha": "18a2264104fdb1ab3e8d129ed1fceb036e86bc5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18a2264104fdb1ab3e8d129ed1fceb036e86bc5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc5edac6734ea681c9fa9a36cbd9ceb8269877e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc5edac6734ea681c9fa9a36cbd9ceb8269877e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc5edac6734ea681c9fa9a36cbd9ceb8269877e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc5edac6734ea681c9fa9a36cbd9ceb8269877e0/comments", "author": null, "committer": null, "parents": [{"sha": "a11826d1fcc30f9183e8c97ffd37c35a7d7e2891", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a11826d1fcc30f9183e8c97ffd37c35a7d7e2891", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a11826d1fcc30f9183e8c97ffd37c35a7d7e2891"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "4e6aad4a0ceac863dd508641138dcf7efdcf4da5", "filename": "gcc/fold-const.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc5edac6734ea681c9fa9a36cbd9ceb8269877e0/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc5edac6734ea681c9fa9a36cbd9ceb8269877e0/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=cc5edac6734ea681c9fa9a36cbd9ceb8269877e0", "patch": "@@ -3691,6 +3691,13 @@ fold (expr)\n \n \t  if (split_tree (arg1, code, &var, &con, &varsign))\n \t    {\n+\t      if (TREE_CONSTANT (arg1))\n+\t\treturn t;\n+\n+\t      if (varsign == -1)\n+\t\tTREE_SET_CODE (t,\n+\t\t\t       (code == PLUS_EXPR ? MINUS_EXPR : PLUS_EXPR));\n+\n \t      /* EXPR is ARG0 +- (CON +- VAR).  */\n \t      if (TREE_CODE (t) == MINUS_EXPR\n \t\t  && operand_equal_p (var, arg0, 0))\n@@ -3701,11 +3708,7 @@ fold (expr)\n \t\t  return fold (build1 (NEGATE_EXPR, TREE_TYPE (t),\n \t\t\t\t       convert (TREE_TYPE (t), con)));\n \t\t}\n-\t      if (TREE_CONSTANT (arg1))\n-\t\treturn t;\n-\t      if (varsign == -1)\n-\t\tTREE_SET_CODE (t,\n-\t\t\t       (code == PLUS_EXPR ? MINUS_EXPR : PLUS_EXPR));\n+\n \t      TREE_OPERAND (t, 0)\n \t\t= fold (build (code, TREE_TYPE (t), arg0, con));\n \t      TREE_OPERAND (t, 1) = var;"}]}