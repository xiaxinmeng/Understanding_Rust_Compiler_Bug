{"sha": "e1e6dc737e629e7280e70dbd403d0d6da9c4e1a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFlNmRjNzM3ZTYyOWU3MjgwZTcwZGJkNDAzZDBkNmRhOWM0ZTFhNg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-06-13T17:02:17Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-06-13T17:02:17Z"}, "message": "re PR tree-optimization/40421 (Revision 148352 failed 416.gamess in SPEC CPU 2006)\n\n2009-06-13  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/40389\n\t* tree-predcom.c (should_unroll_loop_p): Remove.\n\t(tree_predictive_commoning_loop): Use can_unroll_loop_p.\n\n\t* gfortran.fortran-torture/compile/pr40421.f: New testcase.\n\nFrom-SVN: r148458", "tree": {"sha": "fb00355fe92d76940dd67a378dc9567090718ab5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb00355fe92d76940dd67a378dc9567090718ab5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1e6dc737e629e7280e70dbd403d0d6da9c4e1a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1e6dc737e629e7280e70dbd403d0d6da9c4e1a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1e6dc737e629e7280e70dbd403d0d6da9c4e1a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1e6dc737e629e7280e70dbd403d0d6da9c4e1a6/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8012b92326d303302b5aa912752ab99348d3b6aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8012b92326d303302b5aa912752ab99348d3b6aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8012b92326d303302b5aa912752ab99348d3b6aa"}], "stats": {"total": 69, "additions": 31, "deletions": 38}, "files": [{"sha": "cc32b118b5d9eb0ae52bf96217855b2c3169c481", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1e6dc737e629e7280e70dbd403d0d6da9c4e1a6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1e6dc737e629e7280e70dbd403d0d6da9c4e1a6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e1e6dc737e629e7280e70dbd403d0d6da9c4e1a6", "patch": "@@ -1,3 +1,9 @@\n+2009-06-13  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/40389\n+\t* tree-predcom.c (should_unroll_loop_p): Remove.\n+\t(tree_predictive_commoning_loop): Use can_unroll_loop_p.\n+\n 2009-06-13  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin):"}, {"sha": "44619103befe9fa486342f45dca67bc7121fc206", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1e6dc737e629e7280e70dbd403d0d6da9c4e1a6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1e6dc737e629e7280e70dbd403d0d6da9c4e1a6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e1e6dc737e629e7280e70dbd403d0d6da9c4e1a6", "patch": "@@ -1,3 +1,8 @@\n+2009-06-13  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/40389\n+\t* gfortran.fortran-torture/compile/pr40421.f: New testcase.\n+\n 2009-06-12  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* gcc.dg/old-style-prom-3.c: Add column info."}, {"sha": "de7664ce6b34da34b9e1c3eba74bceb8b20cf17c", "filename": "gcc/testsuite/gfortran.fortran-torture/compile/pr40421.f", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1e6dc737e629e7280e70dbd403d0d6da9c4e1a6/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fpr40421.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1e6dc737e629e7280e70dbd403d0d6da9c4e1a6/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fpr40421.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fpr40421.f?ref=e1e6dc737e629e7280e70dbd403d0d6da9c4e1a6", "patch": "@@ -0,0 +1,18 @@\n+      SUBROUTINE VROT2(N,DIS)\n+      IMPLICIT DOUBLE PRECISION (A-H,O-Z)\n+      PARAMETER(ZERO=0.0D+00)\n+      COMMON /SYMSPD/ PTR(3,144)\n+      DIMENSION DIS(3,2),TMP(3,2)\n+      DO I = 1,3\n+        TMP1 = ZERO\n+        DO J = 1,3\n+          TMP1 = TMP1 + PTR(I,N+J)\n+        END DO\n+        TMP(I,1) = TMP1\n+      END DO\n+      DO I = 1,3\n+        DIS(I,1) = TMP(I,1)\n+      END DO\n+      RETURN\n+      END\n+"}, {"sha": "5d8bf4d27042eccf106e0e6f97b0b9030e93cb0b", "filename": "gcc/tree-predcom.c", "status": "modified", "additions": 2, "deletions": 38, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1e6dc737e629e7280e70dbd403d0d6da9c4e1a6/gcc%2Ftree-predcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1e6dc737e629e7280e70dbd403d0d6da9c4e1a6/gcc%2Ftree-predcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-predcom.c?ref=e1e6dc737e629e7280e70dbd403d0d6da9c4e1a6", "patch": "@@ -1870,43 +1870,6 @@ execute_pred_commoning_cbck (struct loop *loop, void *data)\n   execute_pred_commoning (loop, dta->chains, dta->tmp_vars);\n }\n \n-/* Returns true if we can and should unroll LOOP FACTOR times.  Number\n-   of iterations of the loop is returned in NITER.  */\n-\n-static bool\n-should_unroll_loop_p (struct loop *loop, unsigned factor,\n-\t\t      struct tree_niter_desc *niter)\n-{\n-  edge exit;\n-\n-  if (factor == 1)\n-    return false;\n-\n-  /* Check whether unrolling is possible.  We only want to unroll loops\n-     for that we are able to determine number of iterations.  We also\n-     want to split the extra iterations of the loop from its end,\n-     therefore we require that the loop has precisely one\n-     exit.  */\n-\n-  exit = single_dom_exit (loop);\n-  if (!exit)\n-    return false;\n-\n-  if (!number_of_iterations_exit (loop, exit, niter, false))\n-    return false;\n-\n-  /* And of course, we must be able to duplicate the loop.  */\n-  if (!can_duplicate_loop_p (loop))\n-    return false;\n-\n-  /* The final loop should be small enough.  */\n-  if (tree_num_loop_insns (loop, &eni_size_weights) * factor\n-      > (unsigned) PARAM_VALUE (PARAM_MAX_UNROLLED_INSNS))\n-    return false;\n-\n-  return true;\n-}\n-\n /* Base NAME and all the names in the chain of phi nodes that use it\n    on variable VAR.  The phi nodes are recognized by being in the copies of\n    the header of the LOOP.  */\n@@ -2544,7 +2507,8 @@ tree_predictive_commoning_loop (struct loop *loop)\n      that its number of iterations is divisible by the factor.  */\n   unroll_factor = determine_unroll_factor (chains);\n   scev_reset ();\n-  unroll = should_unroll_loop_p (loop, unroll_factor, &desc);\n+  unroll = (unroll_factor > 1\n+\t    && can_unroll_loop_p (loop, unroll_factor, &desc));\n   exit = single_dom_exit (loop);\n \n   /* Execute the predictive commoning transformations, and possibly unroll the"}]}