{"sha": "2a1d1991eadddddebc75857b72caedcad99cb762", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmExZDE5OTFlYWRkZGRkZWJjNzU4NTdiNzJjYWVkY2FkOTljYjc2Mg==", "commit": {"author": {"name": "Naveen H.S", "email": "Naveen.Hurugalawadi@caviumnetworks.com", "date": "2013-03-28T17:19:06Z"}, "committer": {"name": "Marcus Shawcroft", "email": "mshawcroft@gcc.gnu.org", "date": "2013-03-28T17:19:06Z"}, "message": "aarch64.md (*and<mode>3_compare0): New pattern.\n\n2013-03-28   Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n\n\t* config/aarch64/aarch64.md (*and<mode>3_compare0): New pattern.\n\t(*andsi3_compare0_uxtw): New pattern.\n\t(*and_<SHIFT:optab><mode>3_compare0): New pattern.\n\t(*and_<SHIFT:optab>si3_compare0_uxtw): New pattern.\n\nFrom-SVN: r197207", "tree": {"sha": "007126a5a87c414f00d64df80e92d942ce3520cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/007126a5a87c414f00d64df80e92d942ce3520cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a1d1991eadddddebc75857b72caedcad99cb762", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a1d1991eadddddebc75857b72caedcad99cb762", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a1d1991eadddddebc75857b72caedcad99cb762", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a1d1991eadddddebc75857b72caedcad99cb762/comments", "author": null, "committer": null, "parents": [{"sha": "7abebba7f231dee68ab5a16f50a3f1b182b5a5cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc"}], "stats": {"total": 70, "additions": 70, "deletions": 0}, "files": [{"sha": "6fc2f47efb82dc30d952da83c37898c2eaf18ef7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a1d1991eadddddebc75857b72caedcad99cb762/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a1d1991eadddddebc75857b72caedcad99cb762/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2a1d1991eadddddebc75857b72caedcad99cb762", "patch": "@@ -1,3 +1,10 @@\n+2013-03-28   Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n+\n+\t* config/aarch64/aarch64.md (*and<mode>3_compare0): New pattern.\n+\t(*andsi3_compare0_uxtw): New pattern.\n+\t(*and_<SHIFT:optab><mode>3_compare0): New pattern.\n+\t(*and_<SHIFT:optab>si3_compare0_uxtw): New pattern.\n+\n 2013-03-28  Jan Hubicka  <jh@suse.cz>\n \n \t* data-streamer-in.c (streamer_read_gcov_count): New function."}, {"sha": "ab73ae3c6737e168ed28cc0b85354fd99f200adc", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a1d1991eadddddebc75857b72caedcad99cb762/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a1d1991eadddddebc75857b72caedcad99cb762/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=2a1d1991eadddddebc75857b72caedcad99cb762", "patch": "@@ -2461,6 +2461,69 @@\n   [(set_attr \"v8type\" \"logic,logic_imm\")\n    (set_attr \"mode\" \"SI\")])\n \n+(define_insn \"*and<mode>3_compare0\"\n+  [(set (reg:CC_NZ CC_REGNUM)\n+\t(compare:CC_NZ\n+\t (and:GPI (match_operand:GPI 1 \"register_operand\" \"%r,r\")\n+\t\t  (match_operand:GPI 2 \"aarch64_logical_operand\" \"r,<lconst>\"))\n+\t (const_int 0)))\n+   (set (match_operand:GPI 0 \"register_operand\" \"=r,r\")\n+\t(and:GPI (match_dup 1) (match_dup 2)))]\n+  \"\"\n+  \"ands\\\\t%<w>0, %<w>1, %<w>2\"\n+  [(set_attr \"v8type\" \"logics,logics_imm\")\n+   (set_attr \"mode\" \"<MODE>\")]\n+)\n+\n+;; zero_extend version of above\n+(define_insn \"*andsi3_compare0_uxtw\"\n+  [(set (reg:CC_NZ CC_REGNUM)\n+\t(compare:CC_NZ\n+\t (and:SI (match_operand:SI 1 \"register_operand\" \"%r,r\")\n+\t\t (match_operand:SI 2 \"aarch64_logical_operand\" \"r,K\"))\n+\t (const_int 0)))\n+   (set (match_operand:DI 0 \"register_operand\" \"=r,r\")\n+\t(zero_extend:DI (and:SI (match_dup 1) (match_dup 2))))]\n+  \"\"\n+  \"ands\\\\t%w0, %w1, %w2\"\n+  [(set_attr \"v8type\" \"logics,logics_imm\")\n+   (set_attr \"mode\" \"SI\")]\n+)\n+\n+(define_insn \"*and_<SHIFT:optab><mode>3_compare0\"\n+  [(set (reg:CC_NZ CC_REGNUM)\n+\t(compare:CC_NZ\n+\t (and:GPI (SHIFT:GPI\n+\t\t   (match_operand:GPI 1 \"register_operand\" \"r\")\n+\t\t   (match_operand:QI 2 \"aarch64_shift_imm_<mode>\" \"n\"))\n+\t\t  (match_operand:GPI 3 \"register_operand\" \"r\"))\n+\t (const_int 0)))\n+   (set (match_operand:GPI 0 \"register_operand\" \"=r\")\n+\t(and:GPI (SHIFT:GPI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n+  \"\"\n+  \"ands\\\\t%<w>0, %<w>3, %<w>1, <SHIFT:shift> %2\"\n+  [(set_attr \"v8type\" \"logics_shift\")\n+   (set_attr \"mode\" \"<MODE>\")]\n+)\n+\n+;; zero_extend version of above\n+(define_insn \"*and_<SHIFT:optab>si3_compare0_uxtw\"\n+  [(set (reg:CC_NZ CC_REGNUM)\n+\t(compare:CC_NZ\n+\t (and:SI (SHIFT:SI\n+\t\t  (match_operand:SI 1 \"register_operand\" \"r\")\n+\t\t  (match_operand:QI 2 \"aarch64_shift_imm_si\" \"n\"))\n+\t\t (match_operand:SI 3 \"register_operand\" \"r\"))\n+\t (const_int 0)))\n+   (set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(zero_extend:DI (and:SI (SHIFT:SI (match_dup 1) (match_dup 2))\n+\t\t\t\t(match_dup 3))))]\n+  \"\"\n+  \"ands\\\\t%w0, %w3, %w1, <SHIFT:shift> %2\"\n+  [(set_attr \"v8type\" \"logics_shift\")\n+   (set_attr \"mode\" \"SI\")]\n+)\n+\n (define_insn \"*<LOGICAL:optab>_<SHIFT:optab><mode>3\"\n   [(set (match_operand:GPI 0 \"register_operand\" \"=r\")\n \t(LOGICAL:GPI (SHIFT:GPI"}]}