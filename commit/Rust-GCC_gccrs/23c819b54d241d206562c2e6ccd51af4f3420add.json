{"sha": "23c819b54d241d206562c2e6ccd51af4f3420add", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNjODE5YjU0ZDI0MWQyMDY1NjJjMmU2Y2NkNTFhZjRmMzQyMGFkZA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2010-11-16T22:47:27Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2010-11-16T22:47:27Z"}, "message": "spu: Use the FMA rtx code.\n\n        * config/spu/spu.md (fma<VSF>4): Rename from fma_<VSF>.\n        (fnma<VSF>4): Rename from fnms_<VSF>.\n        (fms<VSF>4): Rename from fms_<VSF>.\n        (fma<VDF>4): Rename from fma_<VDF>.\n        (fms<VDF>4): Rename from fms_<VDF>.\n        (nfma<VDF>4): Rename from fnma_<VDF>.\n        (nfms<VDF>4): Rename from fnms_<VDF>.\n        (fnma<VDF>4, fnms<VDF>4): New expanders.\n        (floatunsdisf2): Update for the renames.\n        (*div<VSF>3_fast, *div<VSF>3_adjusted): Likewise.\n        * config/spu/spu-builtins.def: Update CODE_FOR_* for the renames.\n\nFrom-SVN: r166833", "tree": {"sha": "908da76a00a113a055e306e9c624d9342c79795f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/908da76a00a113a055e306e9c624d9342c79795f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23c819b54d241d206562c2e6ccd51af4f3420add", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23c819b54d241d206562c2e6ccd51af4f3420add", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23c819b54d241d206562c2e6ccd51af4f3420add", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23c819b54d241d206562c2e6ccd51af4f3420add/comments", "author": null, "committer": null, "parents": [{"sha": "a05c8f23516bdeec9f2bfa3092f031b081405aaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a05c8f23516bdeec9f2bfa3092f031b081405aaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a05c8f23516bdeec9f2bfa3092f031b081405aaa"}], "stats": {"total": 155, "additions": 99, "deletions": 56}, "files": [{"sha": "75861c456c06444d03dc4d4963f14332d5be007f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23c819b54d241d206562c2e6ccd51af4f3420add/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23c819b54d241d206562c2e6ccd51af4f3420add/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=23c819b54d241d206562c2e6ccd51af4f3420add", "patch": "@@ -1,3 +1,17 @@\n+2010-11-16  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/spu/spu.md (fma<VSF>4): Rename from fma_<VSF>.\n+\t(fnma<VSF>4): Rename from fnms_<VSF>.\n+\t(fms<VSF>4): Rename from fms_<VSF>.\n+\t(fma<VDF>4): Rename from fma_<VDF>.\n+\t(fms<VDF>4): Rename from fms_<VDF>.\n+\t(nfma<VDF>4): Rename from fnma_<VDF>.\n+\t(nfms<VDF>4): Rename from fnms_<VDF>.\n+\t(fnma<VDF>4, fnms<VDF>4): New expanders.\n+\t(floatunsdisf2): Update for the renames.\n+\t(*div<VSF>3_fast, *div<VSF>3_adjusted): Likewise.\n+\t* config/spu/spu-builtins.def: Update CODE_FOR_* for the renames.\n+\n 2010-11-16  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR rtl-optimization/46490"}, {"sha": "0687707044d7c32fa5d24437c8bb2006300c76d9", "filename": "gcc/config/spu/spu-builtins.def", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23c819b54d241d206562c2e6ccd51af4f3420add/gcc%2Fconfig%2Fspu%2Fspu-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23c819b54d241d206562c2e6ccd51af4f3420add/gcc%2Fconfig%2Fspu%2Fspu-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu-builtins.def?ref=23c819b54d241d206562c2e6ccd51af4f3420add", "patch": "@@ -171,13 +171,13 @@ DEF_BUILTIN (SI_FS,          CODE_FOR_subv4sf3,      \"si_fs\",          B_INSN,\n DEF_BUILTIN (SI_DFS,         CODE_FOR_subv2df3,      \"si_dfs\",         B_INSN,   _A3(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n DEF_BUILTIN (SI_FM,          CODE_FOR_mulv4sf3,      \"si_fm\",          B_INSN,   _A3(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n DEF_BUILTIN (SI_DFM,         CODE_FOR_mulv2df3,      \"si_dfm\",         B_INSN,   _A3(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n-DEF_BUILTIN (SI_FMA,         CODE_FOR_fma_v4sf,      \"si_fma\",         B_INSN,   _A4(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n-DEF_BUILTIN (SI_DFMA,        CODE_FOR_fma_v2df,      \"si_dfma\",        B_INSN,   _A4(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n-DEF_BUILTIN (SI_DFNMA,       CODE_FOR_fnma_v2df,     \"si_dfnma\",       B_INSN,   _A4(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n-DEF_BUILTIN (SI_FNMS,        CODE_FOR_fnms_v4sf,     \"si_fnms\",        B_INSN,   _A4(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n-DEF_BUILTIN (SI_DFNMS,       CODE_FOR_fnms_v2df,     \"si_dfnms\",       B_INSN,   _A4(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n-DEF_BUILTIN (SI_FMS,         CODE_FOR_fms_v4sf,      \"si_fms\",         B_INSN,   _A4(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n-DEF_BUILTIN (SI_DFMS,        CODE_FOR_fms_v2df,      \"si_dfms\",        B_INSN,   _A4(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n+DEF_BUILTIN (SI_FMA,         CODE_FOR_fmav4sf4,      \"si_fma\",         B_INSN,   _A4(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n+DEF_BUILTIN (SI_DFMA,        CODE_FOR_fmav2df4,      \"si_dfma\",        B_INSN,   _A4(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n+DEF_BUILTIN (SI_DFNMA,       CODE_FOR_nfmav2df4,     \"si_dfnma\",       B_INSN,   _A4(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n+DEF_BUILTIN (SI_FNMS,        CODE_FOR_fnmav4sf4,     \"si_fnms\",        B_INSN,   _A4(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n+DEF_BUILTIN (SI_DFNMS,       CODE_FOR_nfmsv2df4,     \"si_dfnms\",       B_INSN,   _A4(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n+DEF_BUILTIN (SI_FMS,         CODE_FOR_fmsv4sf4,      \"si_fms\",         B_INSN,   _A4(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n+DEF_BUILTIN (SI_DFMS,        CODE_FOR_fmsv2df4,      \"si_dfms\",        B_INSN,   _A4(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n DEF_BUILTIN (SI_FREST,       CODE_FOR_frest_v4sf,    \"si_frest\",       B_INSN,   _A2(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n DEF_BUILTIN (SI_FRSQEST,     CODE_FOR_frsqest_v4sf,  \"si_frsqest\",     B_INSN,   _A2(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n DEF_BUILTIN (SI_FI,          CODE_FOR_fi_v4sf,       \"si_fi\",          B_INSN,   _A3(SPU_BTI_QUADWORD, SPU_BTI_QUADWORD, SPU_BTI_QUADWORD))\n@@ -242,7 +242,7 @@ DEF_BUILTIN (SPU_MULH,       CODE_FOR_spu_mpyh,       \"spu_mulh\",       B_INSN,\n DEF_BUILTIN (SPU_MULSR,      CODE_FOR_spu_mpys,       \"spu_mulsr\",      B_INSN,     _A3(SPU_BTI_V4SI,     SPU_BTI_V8HI,   SPU_BTI_V8HI))\n DEF_BUILTIN (SPU_FREST,      CODE_FOR_frest_v4sf,     \"spu_frest\",      B_INSN,     _A2(SPU_BTI_V4SF,     SPU_BTI_V4SF))\n DEF_BUILTIN (SPU_FRSQEST,    CODE_FOR_frsqest_v4sf,   \"spu_frsqest\",    B_INSN,     _A2(SPU_BTI_V4SF,     SPU_BTI_V4SF))\n-DEF_BUILTIN (SPU_NMADD,      CODE_FOR_fnma_v2df,      \"spu_nmadd\",      B_INSN,     _A4(SPU_BTI_V2DF,     SPU_BTI_V2DF,   SPU_BTI_V2DF,   SPU_BTI_V2DF))\n+DEF_BUILTIN (SPU_NMADD,      CODE_FOR_nfmav2df4,      \"spu_nmadd\",      B_INSN,     _A4(SPU_BTI_V2DF,     SPU_BTI_V2DF,   SPU_BTI_V2DF,   SPU_BTI_V2DF))\n DEF_BUILTIN (SPU_ABSD,       CODE_FOR_spu_absdb,      \"spu_absd\",       B_INSN,     _A3(SPU_BTI_UV16QI,   SPU_BTI_UV16QI, SPU_BTI_UV16QI))\n DEF_BUILTIN (SPU_AVG,        CODE_FOR_spu_avgb,       \"spu_avg\",        B_INSN,     _A3(SPU_BTI_UV16QI,   SPU_BTI_UV16QI, SPU_BTI_UV16QI))\n DEF_BUILTIN (SPU_SUMB,       CODE_FOR_spu_sumb,       \"spu_sumb\",       B_INSN,     _A3(SPU_BTI_UV8HI,    SPU_BTI_UV16QI, SPU_BTI_UV16QI))\n@@ -286,11 +286,11 @@ DEF_BUILTIN (SPU_GENCX_0,          CODE_FOR_cgx_v4si,      \"spu_gencx_0\",\n DEF_BUILTIN (SPU_GENCX_1,          CODE_FOR_cgx_v4si,      \"spu_gencx_1\",          B_INTERNAL, _A4(SPU_BTI_UV4SI,  SPU_BTI_UV4SI,  SPU_BTI_UV4SI,  SPU_BTI_UV4SI))\n DEF_BUILTIN (SPU_MADD,             CODE_FOR_nothing,       \"spu_madd\",             B_OVERLOAD, _A1(SPU_BTI_VOID))\n DEF_BUILTIN (SPU_MADD_0,           CODE_FOR_spu_mpya,      \"spu_madd_0\",           B_INTERNAL, _A4(SPU_BTI_V4SI,   SPU_BTI_V8HI,   SPU_BTI_V8HI,   SPU_BTI_V4SI))\n-DEF_BUILTIN (SPU_MADD_1,           CODE_FOR_fma_v4sf,      \"spu_madd_1\",           B_INTERNAL, _A4(SPU_BTI_V4SF,   SPU_BTI_V4SF,   SPU_BTI_V4SF,   SPU_BTI_V4SF))\n-DEF_BUILTIN (SPU_MADD_2,           CODE_FOR_fma_v2df,      \"spu_madd_2\",           B_INTERNAL, _A4(SPU_BTI_V2DF,   SPU_BTI_V2DF,   SPU_BTI_V2DF,   SPU_BTI_V2DF))\n+DEF_BUILTIN (SPU_MADD_1,           CODE_FOR_fmav4sf4,      \"spu_madd_1\",           B_INTERNAL, _A4(SPU_BTI_V4SF,   SPU_BTI_V4SF,   SPU_BTI_V4SF,   SPU_BTI_V4SF))\n+DEF_BUILTIN (SPU_MADD_2,           CODE_FOR_fmav2df4,      \"spu_madd_2\",           B_INTERNAL, _A4(SPU_BTI_V2DF,   SPU_BTI_V2DF,   SPU_BTI_V2DF,   SPU_BTI_V2DF))\n DEF_BUILTIN (SPU_MSUB,             CODE_FOR_nothing,       \"spu_msub\",             B_OVERLOAD, _A1(SPU_BTI_VOID))\n-DEF_BUILTIN (SPU_MSUB_0,           CODE_FOR_fms_v4sf,      \"spu_msub_0\",           B_INTERNAL, _A4(SPU_BTI_V4SF,   SPU_BTI_V4SF,   SPU_BTI_V4SF,   SPU_BTI_V4SF))\n-DEF_BUILTIN (SPU_MSUB_1,           CODE_FOR_fms_v2df,      \"spu_msub_1\",           B_INTERNAL, _A4(SPU_BTI_V2DF,   SPU_BTI_V2DF,   SPU_BTI_V2DF,   SPU_BTI_V2DF))\n+DEF_BUILTIN (SPU_MSUB_0,           CODE_FOR_fmsv4sf4,      \"spu_msub_0\",           B_INTERNAL, _A4(SPU_BTI_V4SF,   SPU_BTI_V4SF,   SPU_BTI_V4SF,   SPU_BTI_V4SF))\n+DEF_BUILTIN (SPU_MSUB_1,           CODE_FOR_fmsv2df4,      \"spu_msub_1\",           B_INTERNAL, _A4(SPU_BTI_V2DF,   SPU_BTI_V2DF,   SPU_BTI_V2DF,   SPU_BTI_V2DF))\n DEF_BUILTIN (SPU_MHHADD,           CODE_FOR_nothing,       \"spu_mhhadd\",           B_OVERLOAD, _A1(SPU_BTI_VOID))\n DEF_BUILTIN (SPU_MHHADD_0,         CODE_FOR_spu_mpyhhau,   \"spu_mhhadd_0\",         B_INTERNAL, _A4(SPU_BTI_UV4SI,  SPU_BTI_UV8HI,  SPU_BTI_UV8HI,  SPU_BTI_UV4SI))\n DEF_BUILTIN (SPU_MHHADD_1,         CODE_FOR_spu_mpyhha,    \"spu_mhhadd_1\",         B_INTERNAL, _A4(SPU_BTI_V4SI,   SPU_BTI_V8HI,   SPU_BTI_V8HI,   SPU_BTI_V4SI))\n@@ -306,8 +306,8 @@ DEF_BUILTIN (SPU_MULO_1,           CODE_FOR_spu_mpyu,      \"spu_mulo_1\",\n DEF_BUILTIN (SPU_MULO_2,           CODE_FOR_spu_mpy,       \"spu_mulo_2\",           B_INTERNAL, _A3(SPU_BTI_V4SI,   SPU_BTI_V8HI,   SPU_BTI_INTHI))\n DEF_BUILTIN (SPU_MULO_3,           CODE_FOR_spu_mpyu,      \"spu_mulo_3\",           B_INTERNAL, _A3(SPU_BTI_UV4SI,  SPU_BTI_UV8HI,  SPU_BTI_UINTHI))\n DEF_BUILTIN (SPU_NMSUB,            CODE_FOR_nothing,       \"spu_nmsub\",            B_OVERLOAD, _A1(SPU_BTI_VOID))\n-DEF_BUILTIN (SPU_NMSUB_0,          CODE_FOR_fnms_v4sf,     \"spu_nmsub_0\",          B_INTERNAL, _A4(SPU_BTI_V4SF,   SPU_BTI_V4SF,   SPU_BTI_V4SF,   SPU_BTI_V4SF))\n-DEF_BUILTIN (SPU_NMSUB_1,          CODE_FOR_fnms_v2df,     \"spu_nmsub_1\",          B_INTERNAL, _A4(SPU_BTI_V2DF,   SPU_BTI_V2DF,   SPU_BTI_V2DF,   SPU_BTI_V2DF))\n+DEF_BUILTIN (SPU_NMSUB_0,          CODE_FOR_fnmav4sf4,     \"spu_nmsub_0\",          B_INTERNAL, _A4(SPU_BTI_V4SF,   SPU_BTI_V4SF,   SPU_BTI_V4SF,   SPU_BTI_V4SF))\n+DEF_BUILTIN (SPU_NMSUB_1,          CODE_FOR_nfmsv2df4,     \"spu_nmsub_1\",          B_INTERNAL, _A4(SPU_BTI_V2DF,   SPU_BTI_V2DF,   SPU_BTI_V2DF,   SPU_BTI_V2DF))\n DEF_BUILTIN (SPU_SUB,              CODE_FOR_nothing,       \"spu_sub\",              B_OVERLOAD, _A1(SPU_BTI_VOID))\n DEF_BUILTIN (SPU_SUB_0,            CODE_FOR_subv8hi3,      \"spu_sub_0\",            B_INTERNAL, _A3(SPU_BTI_UV8HI,  SPU_BTI_UV8HI,  SPU_BTI_UV8HI))\n DEF_BUILTIN (SPU_SUB_1,            CODE_FOR_subv8hi3,      \"spu_sub_1\",            B_INTERNAL, _A3(SPU_BTI_V8HI,   SPU_BTI_V8HI,   SPU_BTI_V8HI))\n@@ -771,8 +771,8 @@ DEF_BUILTIN (SPU_PROMOTE_9,        CODE_FOR_spu_promote,   \"spu_promote_9\",\n \n /* These are for the convenience of implementing fma() in the standard\n    libraries.  */\n-DEF_BUILTIN (SCALAR_FMA,           CODE_FOR_fma_sf,        \"fmas\",                 B_INSN,     _A4(SPU_BTI_FLOAT,  SPU_BTI_FLOAT, SPU_BTI_FLOAT, SPU_BTI_FLOAT))\n-DEF_BUILTIN (SCALAR_DFMA,          CODE_FOR_fma_df,        \"dfmas\",                B_INSN,     _A4(SPU_BTI_DOUBLE, SPU_BTI_DOUBLE, SPU_BTI_DOUBLE, SPU_BTI_DOUBLE))\n+DEF_BUILTIN (SCALAR_FMA,           CODE_FOR_fmasf4,        \"fmas\",                 B_INSN,     _A4(SPU_BTI_FLOAT,  SPU_BTI_FLOAT, SPU_BTI_FLOAT, SPU_BTI_FLOAT))\n+DEF_BUILTIN (SCALAR_DFMA,          CODE_FOR_fmadf4,        \"dfmas\",                B_INSN,     _A4(SPU_BTI_DOUBLE, SPU_BTI_DOUBLE, SPU_BTI_DOUBLE, SPU_BTI_DOUBLE))\n \n DEF_BUILTIN (SPU_ALIGN_HINT,       CODE_FOR_spu_align_hint,\"spu_align_hint\",       B_INSN,     _A4(SPU_BTI_VOID,   SPU_BTI_PTR,    SPU_BTI_7,      SPU_BTI_7))\n #undef _A1"}, {"sha": "528a07cfd03c8917df5565332ad87c140840997f", "filename": "gcc/config/spu/spu.md", "status": "modified", "additions": 69, "deletions": 40, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23c819b54d241d206562c2e6ccd51af4f3420add/gcc%2Fconfig%2Fspu%2Fspu.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23c819b54d241d206562c2e6ccd51af4f3420add/gcc%2Fconfig%2Fspu%2Fspu.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu.md?ref=23c819b54d241d206562c2e6ccd51af4f3420add", "patch": "@@ -748,7 +748,7 @@\n \n     emit_move_insn (operands[4],\n \t\t    CONST_DOUBLE_FROM_REAL_VALUE (scale, SFmode));\n-    emit_insn (gen_fma_sf (operands[0],\n+    emit_insn (gen_fmasf4 (operands[0],\n \t\t\t   operands[2], operands[4], operands[3]));\n     DONE;\n   })\n@@ -1533,69 +1533,98 @@\n   \"<d>fm\\t%0,%1,%2\"\n   [(set_attr \"type\" \"fp<d6>\")])\n \n-(define_insn \"fma_<mode>\"\n+(define_insn \"fma<mode>4\"\n   [(set (match_operand:VSF 0 \"spu_reg_operand\" \"=r\")\n-\t(plus:VSF (mult:VSF (match_operand:VSF 1 \"spu_reg_operand\" \"r\")\n-\t\t\t      (match_operand:VSF 2 \"spu_reg_operand\" \"r\"))\n-\t\t   (match_operand:VSF 3 \"spu_reg_operand\" \"r\")))]\n+\t(fma:VSF (match_operand:VSF 1 \"spu_reg_operand\" \"r\")\n+\t\t (match_operand:VSF 2 \"spu_reg_operand\" \"r\")\n+\t\t (match_operand:VSF 3 \"spu_reg_operand\" \"r\")))]\n   \"\"\n   \"fma\\t%0,%1,%2,%3\"\n   [(set_attr \"type\"\t\"fp6\")])\n \n-(define_insn \"fnms_<mode>\"\n+;; ??? The official description is (c - a*b), which is exactly (-a*b + c).\n+;; Note that this doesn't match the dfnms description.  Incorrect?\n+(define_insn \"fnma<mode>4\"\n   [(set (match_operand:VSF 0 \"spu_reg_operand\" \"=r\")\n-\t(minus:VSF (match_operand:VSF 3 \"spu_reg_operand\" \"r\")\n-\t\t    (mult:VSF (match_operand:VSF 1 \"spu_reg_operand\" \"r\")\n-\t\t\t       (match_operand:VSF 2 \"spu_reg_operand\" \"r\"))))]\n+\t(fma:VSF\n+\t  (neg:VSF (match_operand:VSF 1 \"spu_reg_operand\" \"r\"))\n+\t  (match_operand:VSF 2 \"spu_reg_operand\" \"r\")\n+\t  (match_operand:VSF 3 \"spu_reg_operand\" \"r\")))]\n   \"\"\n   \"fnms\\t%0,%1,%2,%3\"\n   [(set_attr \"type\" \"fp6\")])\n \n-(define_insn \"fms_<mode>\"\n+(define_insn \"fms<mode>4\"\n   [(set (match_operand:VSF 0 \"spu_reg_operand\" \"=r\")\n-\t(minus:VSF (mult:VSF (match_operand:VSF 1 \"spu_reg_operand\" \"r\")\n-\t\t\t       (match_operand:VSF 2 \"spu_reg_operand\" \"r\"))\n-\t\t    (match_operand:VSF 3 \"spu_reg_operand\" \"r\")))]\n+\t(fma:VSF\n+\t  (match_operand:VSF 1 \"spu_reg_operand\" \"r\")\n+\t  (match_operand:VSF 2 \"spu_reg_operand\" \"r\")\n+\t  (neg:VSF (match_operand:VSF 3 \"spu_reg_operand\" \"r\"))))]\n   \"\"\n   \"fms\\t%0,%1,%2,%3\"\n   [(set_attr \"type\" \"fp6\")])\n \n-(define_insn \"fma_<mode>\"\n+(define_insn \"fma<mode>4\"\n   [(set (match_operand:VDF 0 \"spu_reg_operand\" \"=r\")\n-\t(plus:VDF (mult:VDF (match_operand:VDF 1 \"spu_reg_operand\" \"r\")\n-\t\t\t    (match_operand:VDF 2 \"spu_reg_operand\" \"r\"))\n-\t\t  (match_operand:VDF 3 \"spu_reg_operand\" \"0\")))]\n+\t(fma:VDF (match_operand:VDF 1 \"spu_reg_operand\" \"r\")\n+\t\t (match_operand:VDF 2 \"spu_reg_operand\" \"r\")\n+\t\t (match_operand:VDF 3 \"spu_reg_operand\" \"0\")))]\n   \"\"\n   \"dfma\\t%0,%1,%2\"\n   [(set_attr \"type\"\t\"fpd\")])\n \n-(define_insn \"fnma_<mode>\"\n+(define_insn \"fms<mode>4\"\n   [(set (match_operand:VDF 0 \"spu_reg_operand\" \"=r\")\n-\t(neg:VDF (plus:VDF (mult:VDF (match_operand:VDF 1 \"spu_reg_operand\" \"r\")\n-\t\t\t\t     (match_operand:VDF 2 \"spu_reg_operand\" \"r\"))\n-\t\t\t   (match_operand:VDF 3 \"spu_reg_operand\" \"0\"))))]\n+\t(fma:VDF\n+\t  (match_operand:VDF 1 \"spu_reg_operand\" \"r\")\n+\t  (match_operand:VDF 2 \"spu_reg_operand\" \"r\")\n+\t  (neg:VDF (match_operand:VDF 3 \"spu_reg_operand\" \"0\"))))]\n+  \"\"\n+  \"dfms\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"fpd\")])\n+\n+(define_insn \"nfma<mode>4\"\n+  [(set (match_operand:VDF 0 \"spu_reg_operand\" \"=r\")\n+\t(neg:VDF\n+\t  (fma:VDF (match_operand:VDF 1 \"spu_reg_operand\" \"r\")\n+\t\t   (match_operand:VDF 2 \"spu_reg_operand\" \"r\")\n+\t\t   (match_operand:VDF 3 \"spu_reg_operand\" \"0\"))))]\n   \"\"\n   \"dfnma\\t%0,%1,%2\"\n   [(set_attr \"type\"\t\"fpd\")])\n \n-(define_insn \"fnms_<mode>\"\n+(define_insn \"nfms<mode>4\"\n   [(set (match_operand:VDF 0 \"spu_reg_operand\" \"=r\")\n-\t(minus:VDF (match_operand:VDF 3 \"spu_reg_operand\" \"0\")\n-\t\t   (mult:VDF (match_operand:VDF 1 \"spu_reg_operand\" \"r\")\n-\t\t\t     (match_operand:VDF 2 \"spu_reg_operand\" \"r\"))))]\n+\t(neg:VDF\n+\t  (fma:VDF\n+\t    (match_operand:VDF 1 \"spu_reg_operand\" \"r\")\n+\t    (match_operand:VDF 2 \"spu_reg_operand\" \"r\")\n+\t    (neg:VDF (match_operand:VDF 3 \"spu_reg_operand\" \"0\")))))]\n   \"\"\n   \"dfnms\\t%0,%1,%2\"\n   [(set_attr \"type\" \"fpd\")])\n \n-(define_insn \"fms_<mode>\"\n-  [(set (match_operand:VDF 0 \"spu_reg_operand\" \"=r\")\n-\t(minus:VDF (mult:VDF (match_operand:VDF 1 \"spu_reg_operand\" \"r\")\n-\t\t\t     (match_operand:VDF 2 \"spu_reg_operand\" \"r\"))\n-\t\t   (match_operand:VDF 3 \"spu_reg_operand\" \"0\")))]\n-  \"\"\n-  \"dfms\\t%0,%1,%2\"\n-  [(set_attr \"type\" \"fpd\")])\n+;; If signed zeros are ignored, -(a * b - c) = -a * b + c.\n+(define_expand \"fnma<mode>4\"\n+  [(set (match_operand:VDF 0 \"spu_reg_operand\" \"\")\n+\t(neg:VDF\n+\t  (fma:VDF\n+\t    (match_operand:VDF 1 \"spu_reg_operand\" \"\")\n+\t    (match_operand:VDF 2 \"spu_reg_operand\" \"\")\n+\t    (neg:VDF (match_operand:VDF 3 \"spu_reg_operand\" \"\")))))]\n+  \"!HONOR_SIGNED_ZEROS (<MODE>mode)\"\n+  \"\")\n \n+;; If signed zeros are ignored, -(a * b + c) = -a * b - c.\n+(define_expand \"fnms<mode>4\"\n+  [(set (match_operand:VDF 0 \"register_operand\" \"\")\n+\t(neg:VDF\n+\t  (fma:VDF\n+\t    (match_operand:VDF 1 \"register_operand\" \"\")\n+\t    (match_operand:VDF 2 \"register_operand\" \"\")\n+\t    (match_operand:VDF 3 \"register_operand\" \"\"))))]\n+  \"!HONOR_SIGNED_ZEROS (<MODE>mode)\"\n+  \"\")\n \f\n ;; mul highpart, used for divide by constant optimizations.\n \n@@ -1845,8 +1874,8 @@\n     emit_insn (gen_frest_<mode>(operands[3], operands[2]));\n     emit_insn (gen_fi_<mode>(operands[3], operands[2], operands[3]));\n     emit_insn (gen_mul<mode>3(operands[4], operands[1], operands[3]));\n-    emit_insn (gen_fnms_<mode>(operands[0], operands[4], operands[2], operands[1]));\n-    emit_insn (gen_fma_<mode>(operands[0], operands[0], operands[3], operands[4]));\n+    emit_insn (gen_fnma<mode>4(operands[0], operands[4], operands[2], operands[1]));\n+    emit_insn (gen_fma<mode>4(operands[0], operands[0], operands[3], operands[4]));\n     DONE;\n   })\n \n@@ -1870,8 +1899,8 @@\n     emit_insn (gen_frest_<mode> (operands[3], operands[2]));\n     emit_insn (gen_fi_<mode> (operands[3], operands[2], operands[3]));\n     emit_insn (gen_mul<mode>3 (operands[4], operands[1], operands[3]));\n-    emit_insn (gen_fnms_<mode> (operands[5], operands[4], operands[2], operands[1]));\n-    emit_insn (gen_fma_<mode> (operands[3], operands[5], operands[3], operands[4]));\n+    emit_insn (gen_fnma<mode>4 (operands[5], operands[4], operands[2], operands[1]));\n+    emit_insn (gen_fma<mode>4 (operands[3], operands[5], operands[3], operands[4]));\n \n    /* Due to truncation error, the quotient result may be low by 1 ulp.\n       Conditionally add one if the estimate is too small in magnitude.  */\n@@ -1885,7 +1914,7 @@\n     emit_insn (gen_add<f2i>3 (gen_lowpart (<F2I>mode, operands[4]),\n \t\t\t      gen_lowpart (<F2I>mode, operands[3]),\n \t\t\t      spu_const (<F2I>mode, 1)));\n-    emit_insn (gen_fnms_<mode> (operands[0], operands[2], operands[4], operands[1]));\n+    emit_insn (gen_fnma<mode>4 (operands[0], operands[2], operands[4], operands[1]));\n     emit_insn (gen_mul<mode>3 (operands[0], operands[0], operands[5]));\n     emit_insn (gen_cgt_<f2i> (gen_lowpart (<F2I>mode, operands[0]),\n \t\t\t      gen_lowpart (<F2I>mode, operands[0]),\n@@ -1920,8 +1949,8 @@\n     emit_insn (gen_fi_sf(operands[2],operands[1],operands[2]));\n     emit_insn (gen_mulsf3(operands[5],operands[2],operands[1]));\n     emit_insn (gen_mulsf3(operands[3],operands[5],operands[3]));\n-    emit_insn (gen_fnms_sf(operands[4],operands[2],operands[5],operands[4]));\n-    emit_insn (gen_fma_sf(operands[0],operands[4],operands[3],operands[5]));\n+    emit_insn (gen_fnmasf4(operands[4],operands[2],operands[5],operands[4]));\n+    emit_insn (gen_fmasf4(operands[0],operands[4],operands[3],operands[5]));\n     DONE;\n   })\n "}]}