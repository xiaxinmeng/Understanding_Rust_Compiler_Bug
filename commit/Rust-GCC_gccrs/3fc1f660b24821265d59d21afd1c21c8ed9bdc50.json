{"sha": "3fc1f660b24821265d59d21afd1c21c8ed9bdc50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZjMWY2NjBiMjQ4MjEyNjVkNTlkMjFhZmQxYzIxYzhlZDliZGM1MA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-08-03T16:57:40Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-08-03T16:57:40Z"}, "message": "gthr-gnat.c: Add visibility #pragmas.\n\n\t* gthr-gnat.c: Add visibility #pragmas.\n\t* gthr-gnat.h : Likewise.\n\t* gthr.h: Likewise.\n\t* libgcc2.c (__ffsSI2): Move prototype to libgcc2.h.\n\t(__ffsDI2): Likewise.\n\t(__clzSI2): Likewise.\n\t(__ctzSI2): Likewise.\n\t(__ctzDI2): Likewise.\n\t(__popcountSI2): Likewise.\n\t(__popcountDI2): Likewise.\n\t(__paritySI2): Likewise.\n\t(__parityDI2): Likewise.\n\t* libgcc2.h: Add visibility #pragmas.\n\t(__clzDI2): Add prototype.\n\t(__clzSI2): Likewise.\n\t(__ctzSI2): Likewise.\n\t(__ffsDI2): Likewise.\n\t(__ffsSI2): Likewise.\n\t(__ctzDI2): Likewise.\n\t(__popcountSI2): Likewise.\n\t(__popcountDI2): Likewise.\n\t(__paritySI2): Likewise.\n\t(__parityDI2): Likewise.\n\t* unwind-dw2-fde.h: Add visibility #pragmas.\n\t* unwind.h: Likewise.\n\nFrom-SVN: r85489", "tree": {"sha": "bdc2915dddeefc851e6591a2b146707386ffa47f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bdc2915dddeefc851e6591a2b146707386ffa47f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3fc1f660b24821265d59d21afd1c21c8ed9bdc50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fc1f660b24821265d59d21afd1c21c8ed9bdc50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fc1f660b24821265d59d21afd1c21c8ed9bdc50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fc1f660b24821265d59d21afd1c21c8ed9bdc50/comments", "author": null, "committer": null, "parents": [{"sha": "066cd96767670cf235869528e8c8fc963b35cc1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/066cd96767670cf235869528e8c8fc963b35cc1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/066cd96767670cf235869528e8c8fc963b35cc1d"}], "stats": {"total": 78, "additions": 67, "deletions": 11}, "files": [{"sha": "c9bdbca3273c9aa66f966bd232e416fc566ee7a0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fc1f660b24821265d59d21afd1c21c8ed9bdc50/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fc1f660b24821265d59d21afd1c21c8ed9bdc50/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3fc1f660b24821265d59d21afd1c21c8ed9bdc50", "patch": "@@ -1,3 +1,31 @@\n+2004-08-03  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* gthr-gnat.c: Add visibility #pragmas.\n+\t* gthr-gnat.h : Likewise.\n+\t* gthr.h: Likewise.\n+\t* libgcc2.c (__ffsSI2): Move prototype to libgcc2.h.\n+\t(__ffsDI2): Likewise.\n+\t(__clzSI2): Likewise.\n+\t(__ctzSI2): Likewise.\n+\t(__ctzDI2): Likewise.\n+\t(__popcountSI2): Likewise.\n+\t(__popcountDI2): Likewise.\n+\t(__paritySI2): Likewise.\n+\t(__parityDI2): Likewise.\n+\t* libgcc2.h: Add visibility #pragmas.\n+\t(__clzDI2): Add prototype.\n+\t(__clzSI2): Likewise.\n+\t(__ctzSI2): Likewise.\n+\t(__ffsDI2): Likewise.\n+\t(__ffsSI2): Likewise.\n+\t(__ctzDI2): Likewise.\n+\t(__popcountSI2): Likewise.\n+\t(__popcountDI2): Likewise.\n+\t(__paritySI2): Likewise.\n+\t(__parityDI2): Likewise.\n+\t* unwind-dw2-fde.h: Add visibility #pragmas.\n+\t* unwind.h: Likewise.\n+\n 2004-08-03  David Edelsohn  <edelsohn@gnu.org>\n \t    Dale Johannesen  <dalej@apple.com>\n \t    Roger Sayle  <roger@eyesopen.com>"}, {"sha": "cb47d86cd08623ac90ad18931d5bae5d3e4ded14", "filename": "gcc/gthr-gnat.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fc1f660b24821265d59d21afd1c21c8ed9bdc50/gcc%2Fgthr-gnat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fc1f660b24821265d59d21afd1c21c8ed9bdc50/gcc%2Fgthr-gnat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-gnat.c?ref=3fc1f660b24821265d59d21afd1c21c8ed9bdc50", "patch": "@@ -26,9 +26,10 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n    This exception does not however invalidate any other reasons why\n    the executable file might be covered by the GNU General Public License.  */\n \n-\n #include \"gthr-gnat.h\"\n \n+#pragma GCC visibility push(default)\n+\n #ifdef __cplusplus\n #define UNUSED(x)\n #else\n@@ -79,3 +80,5 @@ __gthread_mutex_unlock (__gthread_mutex_t * UNUSED (mutex))\n   __gnat_task_unlock ();\n   return 0;\n }\n+\n+#pragma GCC visibility pop"}, {"sha": "d39a370451cb610b370f6b5e2607f6f392a2701a", "filename": "gcc/gthr-gnat.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fc1f660b24821265d59d21afd1c21c8ed9bdc50/gcc%2Fgthr-gnat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fc1f660b24821265d59d21afd1c21c8ed9bdc50/gcc%2Fgthr-gnat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-gnat.h?ref=3fc1f660b24821265d59d21afd1c21c8ed9bdc50", "patch": "@@ -28,6 +28,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #ifndef GCC_GTHR_GNAT_H\n #define GCC_GTHR_GNAT_H\n \n+#pragma GCC visibility push(default)\n+\n /* Just provide compatibility for mutex handling.  */\n \n typedef int __gthread_mutex_t;\n@@ -39,5 +41,7 @@ extern int __gthread_active_p (void);\n extern int __gthread_mutex_lock (__gthread_mutex_t *);\n extern int __gthread_mutex_unlock (__gthread_mutex_t *);\n \n+#pragma GCC visibility pop\n+\n #endif /* ! GCC_GTHR_GNAT_H */\n "}, {"sha": "cf284229f5f34fa73d43106e3be35b7e2ba6fc5e", "filename": "gcc/gthr.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fc1f660b24821265d59d21afd1c21c8ed9bdc50/gcc%2Fgthr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fc1f660b24821265d59d21afd1c21c8ed9bdc50/gcc%2Fgthr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr.h?ref=3fc1f660b24821265d59d21afd1c21c8ed9bdc50", "patch": "@@ -29,6 +29,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #ifndef GCC_GTHR_H\n #define GCC_GTHR_H\n \n+#pragma GCC visibility push(default)\n+\n /* If this file is compiled with threads support, it must\n        #define __GTHREADS 1\n    to indicate that threads support is present.  Also it has define\n@@ -100,4 +102,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"gthr-single.h\"\n #endif\n \n+#pragma GCC visibility pop(default)\n+\n #endif /* ! GCC_GTHR_H */"}, {"sha": "3d021e2cfb5c771a8ab86b75423e95c4b5d484f4", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fc1f660b24821265d59d21afd1c21c8ed9bdc50/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fc1f660b24821265d59d21afd1c21c8ed9bdc50/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=3fc1f660b24821265d59d21afd1c21c8ed9bdc50", "patch": "@@ -418,7 +418,6 @@ __ashrdi3 (DWtype u, word_type b)\n \f\n #ifdef L_ffssi2\n #undef int\n-extern int __ffsSI2 (UWtype u);\n int\n __ffsSI2 (UWtype u)\n {\n@@ -434,7 +433,6 @@ __ffsSI2 (UWtype u)\n \f\n #ifdef L_ffsdi2\n #undef int\n-extern int __ffsDI2 (DWtype u);\n int\n __ffsDI2 (DWtype u)\n {\n@@ -611,7 +609,6 @@ const UQItype __clz_tab[] =\n \f\n #ifdef L_clzsi2\n #undef int\n-extern int __clzSI2 (UWtype x);\n int\n __clzSI2 (UWtype x)\n {\n@@ -625,7 +622,6 @@ __clzSI2 (UWtype x)\n \f\n #ifdef L_clzdi2\n #undef int\n-extern int __clzDI2 (UDWtype x);\n int\n __clzDI2 (UDWtype x)\n {\n@@ -645,7 +641,6 @@ __clzDI2 (UDWtype x)\n \f\n #ifdef L_ctzsi2\n #undef int\n-extern int __ctzSI2 (UWtype x);\n int\n __ctzSI2 (UWtype x)\n {\n@@ -659,7 +654,6 @@ __ctzSI2 (UWtype x)\n \f\n #ifdef L_ctzdi2\n #undef int\n-extern int __ctzDI2 (UDWtype x);\n int\n __ctzDI2 (UDWtype x)\n {\n@@ -698,7 +692,6 @@ const UQItype __popcount_tab[] =\n \f\n #ifdef L_popcountsi2\n #undef int\n-extern int __popcountSI2 (UWtype x);\n int\n __popcountSI2 (UWtype x)\n {\n@@ -713,7 +706,6 @@ __popcountSI2 (UWtype x)\n \f\n #ifdef L_popcountdi2\n #undef int\n-extern int __popcountDI2 (UDWtype x);\n int\n __popcountDI2 (UDWtype x)\n {\n@@ -728,7 +720,6 @@ __popcountDI2 (UDWtype x)\n \f\n #ifdef L_paritysi2\n #undef int\n-extern int __paritySI2 (UWtype x);\n int\n __paritySI2 (UWtype x)\n {\n@@ -750,7 +741,6 @@ __paritySI2 (UWtype x)\n \f\n #ifdef L_paritydi2\n #undef int\n-extern int __parityDI2 (UDWtype x);\n int\n __parityDI2 (UDWtype x)\n {"}, {"sha": "3c7e3e29e3dd84207cffb00843ae7a014b61432f", "filename": "gcc/libgcc2.h", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fc1f660b24821265d59d21afd1c21c8ed9bdc50/gcc%2Flibgcc2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fc1f660b24821265d59d21afd1c21c8ed9bdc50/gcc%2Flibgcc2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.h?ref=3fc1f660b24821265d59d21afd1c21c8ed9bdc50", "patch": "@@ -30,6 +30,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #ifndef GCC_LIBGCC2_H\n #define GCC_LIBGCC2_H\n \n+#pragma GCC visibility push(default)\n+\n extern int __gcc_bcmp (const unsigned char *, const unsigned char *, size_t);\n extern void __clear_cache (char *, char *);\n extern void __eprintf (const char *, const char *, unsigned int, const char *)\n@@ -307,4 +309,21 @@ typedef union\n \n #include \"longlong.h\"\n \n+#undef int\n+extern int __clzDI2 (UDWtype);\n+extern int __clzSI2 (UWtype);\n+extern int __ctzSI2 (UWtype);\n+extern int __ffsSI2 (UWtype);\n+extern int __ffsDI2 (DWtype);\n+extern int __ctzDI2 (UDWtype);\n+extern int __popcountSI2 (UWtype);\n+extern int __popcountDI2 (UDWtype);\n+extern int __paritySI2 (UWtype);\n+extern int __parityDI2 (UDWtype);\n+#define int bogus_type\n+\n+extern void __enable_execute_stack (void *);\n+\n+#pragma GCC visibility pop\n+\n #endif /* ! GCC_LIBGCC2_H */"}, {"sha": "47ec3ab3649338ad890008421e017d81c1226f92", "filename": "gcc/unwind-dw2-fde.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fc1f660b24821265d59d21afd1c21c8ed9bdc50/gcc%2Funwind-dw2-fde.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fc1f660b24821265d59d21afd1c21c8ed9bdc50/gcc%2Funwind-dw2-fde.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind-dw2-fde.h?ref=3fc1f660b24821265d59d21afd1c21c8ed9bdc50", "patch": "@@ -32,6 +32,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #ifndef GCC_UNWIND_DW2_FDE_H\n #define GCC_UNWIND_DW2_FDE_H\n \n+#pragma GCC visibility push(default)\n+\n struct fde_vector\n {\n   const void *orig_data;\n@@ -177,4 +179,6 @@ last_fde (struct object *obj __attribute__ ((__unused__)), const fde *f)\n #endif\n }\n \n+#pragma GCC visibility pop\n+\n #endif /* unwind-dw2-fde.h */"}, {"sha": "ca917b0ad2c7813234cadadf2d75f3f1cde27f06", "filename": "gcc/unwind.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fc1f660b24821265d59d21afd1c21c8ed9bdc50/gcc%2Funwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fc1f660b24821265d59d21afd1c21c8ed9bdc50/gcc%2Funwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind.h?ref=3fc1f660b24821265d59d21afd1c21c8ed9bdc50", "patch": "@@ -31,6 +31,8 @@\n #ifndef _UNWIND_H\n #define _UNWIND_H\n \n+#pragma GCC visibility push(default)\n+\n #ifdef __cplusplus\n extern \"C\" {\n #endif\n@@ -229,4 +231,6 @@ extern void * _Unwind_FindEnclosingFunction (void *pc);\n }\n #endif\n \n+#pragma GCC visibility pop\n+\n #endif /* unwind.h */"}]}