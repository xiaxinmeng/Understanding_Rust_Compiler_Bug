{"sha": "f657d66569fa873772fb624a4413dfa2014d700c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY1N2Q2NjU2OWZhODczNzcyZmI2MjRhNDQxM2RmYTIwMTRkNzAwYw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2014-11-11T14:58:21Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2014-11-11T14:58:21Z"}, "message": "re PR bootstrap/63622 (Bootstrap fails on x86_64-apple-darwin1[34] after revision r216305)\n\nPR ipa/63622\n\n        PR ipa/63795\n\t* g++.dg/ipa/ipa-icf-4.C: Add more precise dump scan.\n\t* g++.dg/ipa/ipa-icf-5.C: Add condition for target\n\twith symbol alias support.\n\t* ipa-icf.c (sem_function::merge): Add new target symbol alias\n\tsupport guard.\n\t(sem_variable::merge): Likewise.\n\t* ipa-icf.h (target_supports_symbol_aliases_p): New function.\n\nFrom-SVN: r217355", "tree": {"sha": "36d087fa42af05384912f0250f79574a53c1fd02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36d087fa42af05384912f0250f79574a53c1fd02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f657d66569fa873772fb624a4413dfa2014d700c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f657d66569fa873772fb624a4413dfa2014d700c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f657d66569fa873772fb624a4413dfa2014d700c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f657d66569fa873772fb624a4413dfa2014d700c/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cc7b5acf3761c358bf9705f58b4fcf9625c49b0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc7b5acf3761c358bf9705f58b4fcf9625c49b0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc7b5acf3761c358bf9705f58b4fcf9625c49b0e"}], "stats": {"total": 56, "additions": 52, "deletions": 4}, "files": [{"sha": "73323efb67693cccee712c76fcb62ea63af22bc8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f657d66569fa873772fb624a4413dfa2014d700c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f657d66569fa873772fb624a4413dfa2014d700c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f657d66569fa873772fb624a4413dfa2014d700c", "patch": "@@ -1,3 +1,12 @@\n+2014-11-11  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/63622\n+\tPR ipa/63795\n+\t* ipa-icf.c (sem_function::merge): Add new target symbol alias\n+\tsupport guard.\n+\t(sem_variable::merge): Likewise.\n+\t* ipa-icf.h (target_supports_symbol_aliases_p): New function.\n+\n 2014-11-11  Richard Biener  <rguenther@suse.de>\n \n \t* match.pd: Implement patterns from associate_plusminus"}, {"sha": "92ec82d7c8a9b428a87f6bd7a5a282e96621dabd", "filename": "gcc/ipa-icf.c", "status": "modified", "additions": 30, "deletions": 2, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f657d66569fa873772fb624a4413dfa2014d700c/gcc%2Fipa-icf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f657d66569fa873772fb624a4413dfa2014d700c/gcc%2Fipa-icf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.c?ref=f657d66569fa873772fb624a4413dfa2014d700c", "patch": "@@ -191,6 +191,18 @@ sem_item::dump (void)\n     }\n }\n \n+/* Return true if target supports alias symbols.  */\n+\n+bool\n+sem_item::target_supports_symbol_aliases_p (void)\n+{\n+#if !defined (ASM_OUTPUT_DEF) || (!defined(ASM_OUTPUT_WEAK_ALIAS) && !defined (ASM_WEAKEN_DECL))\n+  return false;\n+#else\n+  return true;\n+#endif\n+}\n+\n /* Semantic function constructor that uses STACK as bitmap memory stack.  */\n \n sem_function::sem_function (bitmap_obstack *stack): sem_item (FUNC, stack),\n@@ -589,7 +601,8 @@ sem_function::merge (sem_item *alias_item)\n       redirect_callers = false;\n     }\n \n-  if (create_alias && DECL_COMDAT_GROUP (alias->decl))\n+  if (create_alias && (DECL_COMDAT_GROUP (alias->decl)\n+\t\t       || !sem_item::target_supports_symbol_aliases_p ()))\n     {\n       create_alias = false;\n       create_thunk = true;\n@@ -605,6 +618,14 @@ sem_function::merge (sem_item *alias_item)\n     local_original\n       = dyn_cast <cgraph_node *> (original->noninterposable_alias ());\n \n+    if (!local_original)\n+      {\n+\tif (dump_file)\n+\t  fprintf (dump_file, \"Noninterposable alias cannot be created.\\n\\n\");\n+\n+\treturn false;\n+      }\n+\n   if (redirect_callers)\n     {\n       /* If alias is non-overwritable then\n@@ -649,7 +670,7 @@ sem_function::merge (sem_item *alias_item)\n       alias->resolve_alias (original);\n \n       /* Workaround for PR63566 that forces equal calling convention\n-\t to be used.  */\n+       to be used.  */\n       alias->local.local = false;\n       original->local.local = false;\n \n@@ -1155,6 +1176,13 @@ sem_variable::merge (sem_item *alias_item)\n {\n   gcc_assert (alias_item->type == VAR);\n \n+  if (!sem_item::target_supports_symbol_aliases_p ())\n+    {\n+      if (dump_file)\n+\tfprintf (dump_file, \"Symbol aliases are not supported by target\\n\\n\");\n+      return false;\n+    }\n+\n   sem_variable *alias_var = static_cast<sem_variable *> (alias_item);\n \n   varpool_node *original = get_node ();"}, {"sha": "046e858c6a8afa89f6dbf47ae0144e2837bbf44a", "filename": "gcc/ipa-icf.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f657d66569fa873772fb624a4413dfa2014d700c/gcc%2Fipa-icf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f657d66569fa873772fb624a4413dfa2014d700c/gcc%2Fipa-icf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.h?ref=f657d66569fa873772fb624a4413dfa2014d700c", "patch": "@@ -138,9 +138,11 @@ class sem_item\n \n   /* Return base tree that can be used for compatible_types_p and\n      contains_polymorphic_type_p comparison.  */\n-\n   static bool get_base_types (tree *t1, tree *t2);\n \n+  /* Return true if target supports alias symbols.  */\n+  bool target_supports_symbol_aliases_p (void);\n+\n   /* Item type.  */\n   sem_item_type type;\n "}, {"sha": "c3f633a985afc9235766e3c7b3964898b7e3c84d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f657d66569fa873772fb624a4413dfa2014d700c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f657d66569fa873772fb624a4413dfa2014d700c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f657d66569fa873772fb624a4413dfa2014d700c", "patch": "@@ -1,3 +1,11 @@\n+2014-11-11  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/63622\n+\tPR ipa/63795\n+\t* g++.dg/ipa/ipa-icf-4.C: Add more precise dump scan.\n+\t* g++.dg/ipa/ipa-icf-5.C: Add condition for target\n+\twith symbol alias support.\n+\n 2014-11-10  Andi Kleen  <ak@linux.intel.com>\n \n \t* c-c++-common/cilk-plus/AN/misc.c (main): Handle"}, {"sha": "912e06b9b43df1e76f6ae3c59696e5cbced95a12", "filename": "gcc/testsuite/g++.dg/ipa/ipa-icf-4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f657d66569fa873772fb624a4413dfa2014d700c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fipa-icf-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f657d66569fa873772fb624a4413dfa2014d700c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fipa-icf-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fipa-icf-4.C?ref=f657d66569fa873772fb624a4413dfa2014d700c", "patch": "@@ -43,6 +43,6 @@ int main()\n   return 123;\n }\n \n-/* { dg-final { scan-ipa-dump \"Varpool alias has been created\" \"icf\"  } } */\n+/* { dg-final { scan-ipa-dump \"\\(Varpool alias has been created\\)|\\(Symbol aliases are not supported by target\\)\" \"icf\"  } } */\n /* { dg-final { scan-ipa-dump \"Equal symbols: 6\" \"icf\"  } } */\n /* { dg-final { cleanup-ipa-dump \"icf\" } } */"}, {"sha": "57dcb782fc40fd45861f65d76900f8a3f130d18b", "filename": "gcc/testsuite/g++.dg/ipa/ipa-icf-5.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f657d66569fa873772fb624a4413dfa2014d700c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fipa-icf-5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f657d66569fa873772fb624a4413dfa2014d700c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fipa-icf-5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fipa-icf-5.C?ref=f657d66569fa873772fb624a4413dfa2014d700c", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-visibility \"\" } */\n+/* { dg-require-alias \"\" } */\n /* { dg-options \"-O2 -fdump-ipa-icf\" } */\n \n struct test"}]}