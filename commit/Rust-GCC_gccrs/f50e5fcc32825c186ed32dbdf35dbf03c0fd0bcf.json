{"sha": "f50e5fcc32825c186ed32dbdf35dbf03c0fd0bcf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjUwZTVmY2MzMjgyNWMxODZlZDMyZGJkZjM1ZGJmMDNjMGZkMGJjZg==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@codesourcery.com", "date": "2015-03-27T12:50:01Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2015-03-27T12:50:01Z"}, "message": "Fix c6x-uclinux build failure.\n\n\t* config/c6x/constraints.md (S3): New constraint.\n\t* config/c6x/c6x.md (real_jump): Use it.\n\nFrom-SVN: r221731", "tree": {"sha": "cbdccfd2c6d4ed0b1a4bf4527346098f0b6f71f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbdccfd2c6d4ed0b1a4bf4527346098f0b6f71f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f50e5fcc32825c186ed32dbdf35dbf03c0fd0bcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f50e5fcc32825c186ed32dbdf35dbf03c0fd0bcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f50e5fcc32825c186ed32dbdf35dbf03c0fd0bcf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f50e5fcc32825c186ed32dbdf35dbf03c0fd0bcf/comments", "author": null, "committer": null, "parents": [{"sha": "04f69fda7ae6968e9def27a8b0ec97aef653d368", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04f69fda7ae6968e9def27a8b0ec97aef653d368", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04f69fda7ae6968e9def27a8b0ec97aef653d368"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "8e4b6c18055a0e60cdd405c28dc50e0b4d78b946", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f50e5fcc32825c186ed32dbdf35dbf03c0fd0bcf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f50e5fcc32825c186ed32dbdf35dbf03c0fd0bcf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f50e5fcc32825c186ed32dbdf35dbf03c0fd0bcf", "patch": "@@ -1,3 +1,9 @@\n+2015-03-27  Bernd Schmidt  <bernds@codesourcery.com>\n+\n+\tPR target/65052\n+        * config/c6x/constraints.md (S3): New constraint.\n+        * config/c6x/c6x.md (real_jump): Use it.\n+\n 2015-03-26  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR middle-end/65595"}, {"sha": "fafefa6eca2d9a1a7ebf6e3c7743ee7515e518ca", "filename": "gcc/config/c6x/c6x.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f50e5fcc32825c186ed32dbdf35dbf03c0fd0bcf/gcc%2Fconfig%2Fc6x%2Fc6x.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f50e5fcc32825c186ed32dbdf35dbf03c0fd0bcf/gcc%2Fconfig%2Fc6x%2Fc6x.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc6x%2Fc6x.md?ref=f50e5fcc32825c186ed32dbdf35dbf03c0fd0bcf", "patch": "@@ -1519,7 +1519,7 @@\n ;; -------------------------------------------------------------------------\n \n (define_insn \"real_jump\"\n-  [(unspec [(match_operand 0 \"c6x_jump_operand\" \"a,b,s\") (const_int 0)]\n+  [(unspec [(match_operand 0 \"c6x_jump_operand\" \"a,b,S3\") (const_int 0)]\n \t   UNSPEC_REAL_JUMP)]\n   \"\"\n {"}, {"sha": "b8cdc0e65bd87478fc4eb9aaa2302531716e2116", "filename": "gcc/config/c6x/constraints.md", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f50e5fcc32825c186ed32dbdf35dbf03c0fd0bcf/gcc%2Fconfig%2Fc6x%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f50e5fcc32825c186ed32dbdf35dbf03c0fd0bcf/gcc%2Fconfig%2Fc6x%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc6x%2Fconstraints.md?ref=f50e5fcc32825c186ed32dbdf35dbf03c0fd0bcf", "patch": "@@ -160,6 +160,11 @@ not C64X or higher).\")\n    Any SYMBOL_REF or LABEL_REF.\"\n   (ior (match_code \"symbol_ref\") (match_code \"label_ref\")))\n \n+(define_constraint \"S3\"\n+  \"Matches a symbolic integer constant, even if invalid for PIC.\"\n+  (and (match_test \"CONSTANT_P (op)\")\n+       (match_test \"!CONST_SCALAR_INT_P (op)\")))\n+\n (define_constraint \"Si\"\n   \"@internal\n    Any immediate value, unless it matches the S0 constraint.\""}]}