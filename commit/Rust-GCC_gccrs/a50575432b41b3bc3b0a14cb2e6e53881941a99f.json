{"sha": "a50575432b41b3bc3b0a14cb2e6e53881941a99f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTUwNTc1NDMyYjQxYjNiYzNiMGExNGNiMmU2ZTUzODgxOTQxYTk5Zg==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2016-05-23T11:45:13Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2016-05-23T11:45:13Z"}, "message": "[hsa] Avoid segfault in hsa switch expansion\n\n2016-05-23  Martin Jambor  <mjambor@suse.cz>\n\n\t* hsa-gen.c (gen_hsa_insns_for_switch_stmt): Create an empty\n\tdefault block if a PHI node in the original one would be resized.\n\nlibgomp/\n\t* testsuite/libgomp.hsa.c/switch-sbr-2.c: New test.\n\nFrom-SVN: r236585", "tree": {"sha": "f960a48373fb98e3c858fff7a8c978dc5d1c6c7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f960a48373fb98e3c858fff7a8c978dc5d1c6c7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a50575432b41b3bc3b0a14cb2e6e53881941a99f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a50575432b41b3bc3b0a14cb2e6e53881941a99f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a50575432b41b3bc3b0a14cb2e6e53881941a99f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a50575432b41b3bc3b0a14cb2e6e53881941a99f/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e569db5fb5fece9f9a3ee09e3dc7c58f0db36e40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e569db5fb5fece9f9a3ee09e3dc7c58f0db36e40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e569db5fb5fece9f9a3ee09e3dc7c58f0db36e40"}], "stats": {"total": 74, "additions": 74, "deletions": 0}, "files": [{"sha": "4218dab37bb9a77ef0313518ccb468576b3ad411", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a50575432b41b3bc3b0a14cb2e6e53881941a99f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a50575432b41b3bc3b0a14cb2e6e53881941a99f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a50575432b41b3bc3b0a14cb2e6e53881941a99f", "patch": "@@ -1,3 +1,8 @@\n+2016-05-23  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* hsa-gen.c (gen_hsa_insns_for_switch_stmt): Create an empty\n+\tdefault block if a PHI node in the original one would be resized.\n+\n 2016-05-23  Venkataramanan Kumar  <venkataramanan.kumar@amd.com>\n \n \tPR tree-optimization/58135"}, {"sha": "cf7d434bce406f554ce45d35033362f47765f9f5", "filename": "gcc/hsa-gen.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a50575432b41b3bc3b0a14cb2e6e53881941a99f/gcc%2Fhsa-gen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a50575432b41b3bc3b0a14cb2e6e53881941a99f/gcc%2Fhsa-gen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhsa-gen.c?ref=a50575432b41b3bc3b0a14cb2e6e53881941a99f", "patch": "@@ -3482,6 +3482,12 @@ gen_hsa_insns_for_switch_stmt (gswitch *s, hsa_bb *hbb)\n   basic_block default_label_bb = label_to_block_fn (func,\n \t\t\t\t\t\t    CASE_LABEL (default_label));\n \n+  if (!gimple_seq_empty_p (phi_nodes (default_label_bb)))\n+    {\n+      default_label_bb = split_edge (find_edge (e->dest, default_label_bb));\n+      hsa_init_new_bb (default_label_bb);\n+    }\n+\n   make_edge (e->src, default_label_bb, EDGE_FALSE_VALUE);\n \n   hsa_cfun->m_modified_cfg = true;"}, {"sha": "6a390879ff160713f6057019d9355ed2b9326fc8", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a50575432b41b3bc3b0a14cb2e6e53881941a99f/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a50575432b41b3bc3b0a14cb2e6e53881941a99f/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=a50575432b41b3bc3b0a14cb2e6e53881941a99f", "patch": "@@ -1,3 +1,7 @@\n+2016-05-23  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* testsuite/libgomp.hsa.c/switch-sbr-2.c: New test.\n+\n 2016-05-17  Chung-Lin Tang  <cltang@codesourcery.com>\n \n \t* oacc-init.c (acc_init): Remove !cached_base_dev condition on call"}, {"sha": "06990d1c2c065b61e572cd3bb9b6988fd05d9bab", "filename": "libgomp/testsuite/libgomp.hsa.c/switch-sbr-2.c", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a50575432b41b3bc3b0a14cb2e6e53881941a99f/libgomp%2Ftestsuite%2Flibgomp.hsa.c%2Fswitch-sbr-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a50575432b41b3bc3b0a14cb2e6e53881941a99f/libgomp%2Ftestsuite%2Flibgomp.hsa.c%2Fswitch-sbr-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.hsa.c%2Fswitch-sbr-2.c?ref=a50575432b41b3bc3b0a14cb2e6e53881941a99f", "patch": "@@ -0,0 +1,59 @@\n+/* { dg-additional-options \"-fno-tree-switch-conversion\" } */\n+\n+#pragma omp declare target\n+int\n+foo (unsigned a)\n+{\n+  switch (a)\n+    {\n+    case 1 ... 5:\n+      return 1;\n+    case 9 ... 11:\n+      return a + 3;\n+    case 12 ... 13:\n+      return a + 3;\n+    default:\n+      return 44;\n+    }\n+}\n+#pragma omp end declare target\n+\n+#define s 100\n+\n+void __attribute__((noinline, noclone))\n+verify(int *a)\n+{\n+  if (a[0] != 44)\n+    __builtin_abort ();\n+  \n+  for (int i = 1; i <= 5; i++)\n+    if (a[i] != 1)\n+      __builtin_abort ();\n+\n+  for (int i = 6; i <= 8; i++)\n+    if (a[i] != 44)\n+      __builtin_abort ();\n+\n+  for (int i = 9; i <= 13; i++)\n+    if (a[i] != i + 3)\n+      __builtin_abort ();\n+\n+  for (int i = 14; i < s; i++)\n+    if (a[i] != 44)\n+      __builtin_abort ();\n+}\n+\n+int main(int argc)\n+{\n+  int array[s];\n+#pragma omp target\n+  {\n+    for (int i = 0; i < s; i++)\n+      {\n+\tint v = foo (i);\n+\tarray[i] = v;\n+      }\n+  }\n+  verify (array);\n+  return 0;\n+}"}]}