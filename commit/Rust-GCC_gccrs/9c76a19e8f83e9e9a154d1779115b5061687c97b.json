{"sha": "9c76a19e8f83e9e9a154d1779115b5061687c97b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWM3NmExOWU4ZjgzZTllOWExNTRkMTc3OTExNWI1MDYxNjg3Yzk3Yg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-04-13T15:38:50Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-04-13T15:38:50Z"}, "message": "re PR regression/48570 (wrong subscription with -std=c++0x)\n\n\tPR c++/48570\n\t* semantics.c (cxx_eval_array_reference): Handle reading from\n\twchar_t, char16_t and char32_t STRING_CST.\n\n\t* g++.dg/cpp0x/constexpr-wstring1.C: New test.\n\t* g++.dg/cpp0x/constexpr-wstring2.C: New test.\n\nFrom-SVN: r172377", "tree": {"sha": "a80870721e002501255711c65cf7246f8a0d841d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a80870721e002501255711c65cf7246f8a0d841d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c76a19e8f83e9e9a154d1779115b5061687c97b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c76a19e8f83e9e9a154d1779115b5061687c97b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c76a19e8f83e9e9a154d1779115b5061687c97b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c76a19e8f83e9e9a154d1779115b5061687c97b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "91d8b4bd7ad6acd3907cba2346c70c101c793e9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91d8b4bd7ad6acd3907cba2346c70c101c793e9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91d8b4bd7ad6acd3907cba2346c70c101c793e9f"}], "stats": {"total": 75, "additions": 70, "deletions": 5}, "files": [{"sha": "a0d7cc249b38fa38c7a07a69fa113bd95f12d7a9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c76a19e8f83e9e9a154d1779115b5061687c97b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c76a19e8f83e9e9a154d1779115b5061687c97b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9c76a19e8f83e9e9a154d1779115b5061687c97b", "patch": "@@ -1,3 +1,9 @@\n+2011-04-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/48570\n+\t* semantics.c (cxx_eval_array_reference): Handle reading from\n+\twchar_t, char16_t and char32_t STRING_CST.\n+\n 2011-04-13  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/48574"}, {"sha": "c763f813c5c65d133575423d696952682b896f0b", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c76a19e8f83e9e9a154d1779115b5061687c97b/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c76a19e8f83e9e9a154d1779115b5061687c97b/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=9c76a19e8f83e9e9a154d1779115b5061687c97b", "patch": "@@ -6279,7 +6279,7 @@ cxx_eval_array_reference (const constexpr_call *call, tree t,\n \t\t\t\t\t   non_constant_p);\n   tree index, oldidx;\n   HOST_WIDE_INT i;\n-  unsigned len;\n+  unsigned len, elem_nchars = 1;\n   if (*non_constant_p)\n     return t;\n   oldidx = TREE_OPERAND (t, 1);\n@@ -6291,9 +6291,14 @@ cxx_eval_array_reference (const constexpr_call *call, tree t,\n     return t;\n   else if (addr)\n     return build4 (ARRAY_REF, TREE_TYPE (t), ary, index, NULL, NULL);\n-  len = (TREE_CODE (ary) == CONSTRUCTOR\n-\t ? CONSTRUCTOR_NELTS (ary)\n-\t : (unsigned)TREE_STRING_LENGTH (ary));\n+  if (TREE_CODE (ary) == CONSTRUCTOR)\n+    len = CONSTRUCTOR_NELTS (ary);\n+  else\n+    {\n+      elem_nchars = (TYPE_PRECISION (TREE_TYPE (TREE_TYPE (ary)))\n+\t\t     / TYPE_PRECISION (char_type_node));\n+      len = (unsigned) TREE_STRING_LENGTH (ary) / elem_nchars;\n+    }\n   if (compare_tree_int (index, len) >= 0)\n     {\n       if (!allow_non_constant)\n@@ -6304,9 +6309,16 @@ cxx_eval_array_reference (const constexpr_call *call, tree t,\n   i = tree_low_cst (index, 0);\n   if (TREE_CODE (ary) == CONSTRUCTOR)\n     return VEC_index (constructor_elt, CONSTRUCTOR_ELTS (ary), i)->value;\n-  else\n+  else if (elem_nchars == 1)\n     return build_int_cst (cv_unqualified (TREE_TYPE (TREE_TYPE (ary))),\n \t\t\t  TREE_STRING_POINTER (ary)[i]);\n+  else\n+    {\n+      tree type = cv_unqualified (TREE_TYPE (TREE_TYPE (ary)));\n+      return native_interpret_expr (type, (const unsigned char *)\n+\t\t\t\t\t  TREE_STRING_POINTER (ary)\n+\t\t\t\t\t  + i * elem_nchars, elem_nchars);\n+    }\n   /* Don't VERIFY_CONSTANT here.  */\n }\n "}, {"sha": "46ff86a1bfd7d26745aae176c86c072b4373fbab", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c76a19e8f83e9e9a154d1779115b5061687c97b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c76a19e8f83e9e9a154d1779115b5061687c97b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9c76a19e8f83e9e9a154d1779115b5061687c97b", "patch": "@@ -1,3 +1,9 @@\n+2011-04-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/48570\n+\t* g++.dg/cpp0x/constexpr-wstring1.C: New test.\n+\t* g++.dg/cpp0x/constexpr-wstring2.C: New test.\n+\n 2011-04-13  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/48574"}, {"sha": "059977bfff91de12559e66a6b2245fe55feb0d15", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-wstring1.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c76a19e8f83e9e9a154d1779115b5061687c97b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-wstring1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c76a19e8f83e9e9a154d1779115b5061687c97b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-wstring1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-wstring1.C?ref=9c76a19e8f83e9e9a154d1779115b5061687c97b", "patch": "@@ -0,0 +1,34 @@\n+// PR c++/48570\n+// { dg-do run }\n+// { dg-options \"-std=c++0x\" }\n+\n+extern \"C\" void abort ();\n+constexpr wchar_t foo (int i) { return L\"0123\"[i]; }\n+constexpr char16_t bar (int i) { return u\"0123\"[i]; }\n+constexpr char32_t baz (int i) { return U\"0123\"[i]; }\n+const wchar_t foo0 = foo (0);\n+const wchar_t foo1 = foo (1);\n+const wchar_t foo2 = foo (2);\n+const wchar_t foo3 = foo (3);\n+const wchar_t foo4 = foo (4);\n+const char16_t bar0 = bar (0);\n+const char16_t bar1 = bar (1);\n+const char16_t bar2 = bar (2);\n+const char16_t bar3 = bar (3);\n+const char16_t bar4 = bar (4);\n+const char32_t baz0 = baz (0);\n+const char32_t baz1 = baz (1);\n+const char32_t baz2 = baz (2);\n+const char32_t baz3 = baz (3);\n+const char32_t baz4 = baz (4);\n+\n+int\n+main ()\n+{\n+  if (foo0 != L'0' || foo1 != L'1' || foo2 != L'2' || foo3 != L'3' || foo4 != L'\\0')\n+    abort ();\n+  if (bar0 != u'0' || bar1 != u'1' || bar2 != u'2' || bar3 != u'3' || bar4 != u'\\0')\n+    abort ();\n+  if (baz0 != U'0' || baz1 != U'1' || baz2 != U'2' || baz3 != U'3' || baz4 != U'\\0')\n+    abort ();\n+}"}, {"sha": "4fc8980ef96c06e574a343671c4f80c18d2c2878", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-wstring2.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c76a19e8f83e9e9a154d1779115b5061687c97b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-wstring2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c76a19e8f83e9e9a154d1779115b5061687c97b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-wstring2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-wstring2.C?ref=9c76a19e8f83e9e9a154d1779115b5061687c97b", "patch": "@@ -0,0 +1,7 @@\n+// PR c++/48570\n+// { dg-do compile }\n+// { dg-options -std=c++0x }\n+\n+constexpr wchar_t c1 = L\"hi\"[3];\t// { dg-error \"out of bound\" }\n+constexpr char16_t c2 = u\"hi\"[3];\t// { dg-error \"out of bound\" }\n+constexpr char32_t c3 = U\"hi\"[3];\t// { dg-error \"out of bound\" }"}]}