{"sha": "f0e98f1bb47ab5827d89bd6a16f4263e20549da3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjBlOThmMWJiNDdhYjU4MjdkODliZDZhMTZmNDI2M2UyMDU0OWRhMw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-12-04T11:26:14Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-12-04T11:26:14Z"}, "message": "re PR tree-optimization/88301 (Optimization regression with undefined unsigned overflow)\n\n2018-12-04  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/88301\n\t* tree-vrp.c (register_edge_assert_for_2): Fix sign-conversion\n\tissues in last commit.\n\nFrom-SVN: r266773", "tree": {"sha": "c94680254a872e943a7636c01b5e6dc3a5ec0544", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c94680254a872e943a7636c01b5e6dc3a5ec0544"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0e98f1bb47ab5827d89bd6a16f4263e20549da3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0e98f1bb47ab5827d89bd6a16f4263e20549da3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0e98f1bb47ab5827d89bd6a16f4263e20549da3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0e98f1bb47ab5827d89bd6a16f4263e20549da3/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "580b8d9b540761e4df47d22fbfc9372396db8748", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/580b8d9b540761e4df47d22fbfc9372396db8748", "html_url": "https://github.com/Rust-GCC/gccrs/commit/580b8d9b540761e4df47d22fbfc9372396db8748"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "4bb7187ceb2a30492583b20a73efcebecfd2a45c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0e98f1bb47ab5827d89bd6a16f4263e20549da3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0e98f1bb47ab5827d89bd6a16f4263e20549da3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f0e98f1bb47ab5827d89bd6a16f4263e20549da3", "patch": "@@ -1,3 +1,9 @@\n+2018-12-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/88301\n+\t* tree-vrp.c (register_edge_assert_for_2): Fix sign-conversion\n+\tissues in last commit.\n+\n 2018-12-04  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/88315"}, {"sha": "6fd1fd26eefa2758de1882f159ffea7400e40737", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0e98f1bb47ab5827d89bd6a16f4263e20549da3/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0e98f1bb47ab5827d89bd6a16f4263e20549da3/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=f0e98f1bb47ab5827d89bd6a16f4263e20549da3", "patch": "@@ -2973,6 +2973,21 @@ register_edge_assert_for_2 (tree name, edge e,\n \t  wide_int rmin, rmax;\n \t  tree rhs1 = gimple_assign_rhs1 (def_stmt);\n \t  if (INTEGRAL_TYPE_P (TREE_TYPE (rhs1))\n+\t      /* Make sure the relation preserves the upper/lower boundary of\n+\t         the range conservatively.  */\n+\t      && (comp_code == NE_EXPR\n+\t\t  || comp_code == EQ_EXPR\n+\t\t  || (TYPE_SIGN (TREE_TYPE (name))\n+\t\t      == TYPE_SIGN (TREE_TYPE (rhs1)))\n+\t\t  || ((comp_code == LE_EXPR\n+\t\t       || comp_code == LT_EXPR)\n+\t\t      && !TYPE_UNSIGNED (TREE_TYPE (rhs1)))\n+\t\t  || ((comp_code == GE_EXPR\n+\t\t       || comp_code == GT_EXPR)\n+\t\t      && TYPE_UNSIGNED (TREE_TYPE (rhs1))))\n+\t      /* And the conversion does not alter the value we compare\n+\t         against and all values in rhs1 can be represented in\n+\t\t the converted to type.  */\n \t      && int_fits_type_p (val, TREE_TYPE (rhs1))\n \t      && ((TYPE_PRECISION (TREE_TYPE (name))\n \t\t   > TYPE_PRECISION (TREE_TYPE (rhs1)))"}]}