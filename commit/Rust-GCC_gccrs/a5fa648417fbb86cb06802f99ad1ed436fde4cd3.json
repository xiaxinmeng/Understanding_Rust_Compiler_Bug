{"sha": "a5fa648417fbb86cb06802f99ad1ed436fde4cd3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVmYTY0ODQxN2ZiYjg2Y2IwNjgwMmY5OWFkMWVkNDM2ZmRlNGNkMw==", "commit": {"author": {"name": "Michael Hayes", "email": "m.hayes@elec.canterbury.ac.nz", "date": "2000-02-04T23:35:52Z"}, "committer": {"name": "Michael Hayes", "email": "m.hayes@gcc.gnu.org", "date": "2000-02-04T23:35:52Z"}, "message": "c4x.md (fixuns_truncqfqi2): Rewrite.\n\n2000-02-05  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n\n\t* config/c4x/c4x.md (fixuns_truncqfqi2): Rewrite.\n\t* config/c4x/libgcc.S (ufix_truncqfhi2n): Fix.\n\nFrom-SVN: r31797", "tree": {"sha": "538de1c49e773d48395353777bbfbe82b476e58d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/538de1c49e773d48395353777bbfbe82b476e58d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5fa648417fbb86cb06802f99ad1ed436fde4cd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5fa648417fbb86cb06802f99ad1ed436fde4cd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5fa648417fbb86cb06802f99ad1ed436fde4cd3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5fa648417fbb86cb06802f99ad1ed436fde4cd3/comments", "author": null, "committer": null, "parents": [{"sha": "4f8841697639e39819e21755e60173dd10c8ead5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f8841697639e39819e21755e60173dd10c8ead5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f8841697639e39819e21755e60173dd10c8ead5"}], "stats": {"total": 46, "additions": 32, "deletions": 14}, "files": [{"sha": "70170c3336b2d91c0601ecde95335813182a27ef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fa648417fbb86cb06802f99ad1ed436fde4cd3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fa648417fbb86cb06802f99ad1ed436fde4cd3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a5fa648417fbb86cb06802f99ad1ed436fde4cd3", "patch": "@@ -1,3 +1,8 @@\n+2000-02-05  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n+\n+\t* config/c4x/c4x.md (fixuns_truncqfqi2): Rewrite.\n+\t* config/c4x/libgcc.S (ufix_truncqfhi2n): Fix.\n+\n 2000-02-04  Bruce Korb  <bkorb@gnu.org>\n \n \t* fixinc/genfixes(machname.h):"}, {"sha": "38e205275f6842962d5ac498a3c53ded0f3a17a0", "filename": "gcc/config/c4x/c4x.md", "status": "modified", "additions": 25, "deletions": 12, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fa648417fbb86cb06802f99ad1ed436fde4cd3/gcc%2Fconfig%2Fc4x%2Fc4x.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fa648417fbb86cb06802f99ad1ed436fde4cd3/gcc%2Fconfig%2Fc4x%2Fc4x.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.md?ref=a5fa648417fbb86cb06802f99ad1ed436fde4cd3", "patch": "@@ -3751,20 +3751,33 @@\n   \"c4x_emit_libcall (fix_truncqfhi2_libfunc, FIX, HImode, QFmode, 2, operands);\n    DONE;\")\n \n-; Is this allowed to be implementation dependent?  If so, we can\n-; omit the conditional load.  Otherwise we should emit a split.\n (define_expand \"fixuns_truncqfqi2\"\n- [(parallel [(set (reg:CC 21)\n-                  (compare:CC (fix:QI (match_operand:QF 1 \"src_operand\" \"fHm\"))\n-                              (const_int 0)))\n-             (set (match_dup 2)\n-                  (fix:QI (match_dup 1)))])\n-  (set (match_operand:QI 0 \"reg_operand\" \"=r\")\n-       (if_then_else:QI (lt (reg:CC 21) (const_int 0))\n-                        (const_int 0)\n-                        (match_dup 2)))]\n+ [(set (match_dup 2) (match_dup 5))\n+  (set (reg:CC 21)\n+       (compare:CC (match_operand:QF 1 \"src_operand\" \"fHm\")\n+                   (match_dup 2)))\n+  (set (match_dup 2)\n+       (if_then_else:QF (lt (reg:CC 21) (const_int 0))\n+                        (match_dup 4)\n+                        (match_dup 2)))\n+  (parallel [(set (match_dup 2)\n+\t\t  (plus:QF (match_dup 2) (match_dup 2)))\n+\t     (clobber (reg:CC_NOOV 21))])\n+  (parallel [(set (match_dup 2)\n+\t          (minus:QF (match_dup 1) (match_dup 2)))\n+\t     (clobber (reg:CC_NOOV 21))])\n+  (parallel [(set (match_operand:QI 0 \"reg_operand\" \"=r\")\n+\t\t  (fix:QI (match_dup 2)))\n+\t     (clobber (reg:CC 21))])]\n  \"\"\n- \"operands[2] = gen_reg_rtx (QImode);\")\n+ \"operands[2] = gen_reg_rtx (QFmode);\n+  operands[3] = gen_reg_rtx (QFmode);\n+  operands[4] = gen_reg_rtx (QFmode);\n+  operands[5] = gen_reg_rtx (QFmode);\n+  emit_move_insn (operands[4],\n+   immed_real_const_1 (REAL_VALUE_ATOF (\\\"0.0\\\", QFmode), QFmode));\n+  emit_move_insn (operands[5],\n+   immed_real_const_1 (REAL_VALUE_ATOF (\\\"2147483648.0\\\", QFmode), QFmode));\")\n \n (define_expand \"fixuns_truncqfhi2\"\n   [(parallel [(set (match_operand:HI 0 \"reg_operand\" \"\")"}, {"sha": "8f006a3f53bb93d504e595f1bb89c7984e06e1d8", "filename": "gcc/config/c4x/libgcc.S", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fa648417fbb86cb06802f99ad1ed436fde4cd3/gcc%2Fconfig%2Fc4x%2Flibgcc.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fa648417fbb86cb06802f99ad1ed436fde4cd3/gcc%2Fconfig%2Fc4x%2Flibgcc.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Flibgcc.S?ref=a5fa648417fbb86cb06802f99ad1ed436fde4cd3", "patch": "@@ -1076,7 +1076,7 @@ ufix_truncqfhi2n:\n \tash\t-24,r3\n \tsubi\t31,r3\n \tcmpi\t32,r3\n-\tbge\tufix1\n+\tbgt\tufix1\n \tcmpi\t-32,r3\n \tble\tufix1\n \tldi\t1,r0\n@@ -1223,7 +1223,7 @@ ufix_trunchfhi2n:\n \tash\t-24,r3\n \tsubi\t31,r3\n \tcmpi\t32,r3\n-\tbge\tufixh1\n+\tbgt\tufixh1\n \tcmpi\t-32,r3\n \tble\tufixh1\n \tldi\t1,r0"}]}