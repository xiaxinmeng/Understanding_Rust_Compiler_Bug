{"sha": "44f308e59bfa0f93ae05b17e257d8563c12399fd", "node_id": "C_kwDOANBUbNoAKDQ0ZjMwOGU1OWJmYTBmOTNhZTA1YjE3ZTI1N2Q4NTYzYzEyMzk5ZmQ", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2023-02-09T15:03:54Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-02-09T15:03:54Z"}, "message": "match.pd: When simplifying BFR of an insert, require a mode precision integral type [PR108688]\n\nThe same problem as PR 88739 has crept in but\nthis time in match.pd when simplifying bit_field_ref of\nan bit_insert. That is we are generating a BIT_FIELD_REF\nof a non-mode-precision integral type.\n\n\tPR tree-optimization/108688\n\t* match.pd (bit_field_ref [bit_insert]): Avoid generating\n\tBIT_FIELD_REFs of non-mode-precision integral operands.\n\n\t* gcc.c-torture/compile/pr108688-1.c: New test.", "tree": {"sha": "f0c6f8c0a79eeffdd41ae52b8ef4b224324a4bec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0c6f8c0a79eeffdd41ae52b8ef4b224324a4bec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44f308e59bfa0f93ae05b17e257d8563c12399fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44f308e59bfa0f93ae05b17e257d8563c12399fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44f308e59bfa0f93ae05b17e257d8563c12399fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44f308e59bfa0f93ae05b17e257d8563c12399fd/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac2949574da9a668daad421d7edb79f172f73c6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac2949574da9a668daad421d7edb79f172f73c6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac2949574da9a668daad421d7edb79f172f73c6f"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "73e5053d1559e93bc248eda6c5d799dc36da4443", "filename": "gcc/match.pd", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44f308e59bfa0f93ae05b17e257d8563c12399fd/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44f308e59bfa0f93ae05b17e257d8563c12399fd/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=44f308e59bfa0f93ae05b17e257d8563c12399fd", "patch": "@@ -7474,7 +7474,9 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n       isize = tree_to_uhwi (TYPE_SIZE (TREE_TYPE (@1)));\n   }\n   (switch\n-   (if (wi::leu_p (wi::to_wide (@ipos), wi::to_wide (@rpos))\n+   (if ((!INTEGRAL_TYPE_P (TREE_TYPE (@1))\n+         || type_has_mode_precision_p (TREE_TYPE (@1)))\n+        && wi::leu_p (wi::to_wide (@ipos), wi::to_wide (@rpos))\n \t&& wi::leu_p (wi::to_wide (@rpos) + wi::to_wide (@rsize),\n \t\t      wi::to_wide (@ipos) + isize))\n     (BIT_FIELD_REF @1 @rsize { wide_int_to_tree (bitsizetype,"}, {"sha": "43d782d62bd93740a8fd5b9f272dfc3120a74e5d", "filename": "gcc/testsuite/gcc.c-torture/compile/pr108688-1.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44f308e59bfa0f93ae05b17e257d8563c12399fd/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr108688-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44f308e59bfa0f93ae05b17e257d8563c12399fd/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr108688-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr108688-1.c?ref=44f308e59bfa0f93ae05b17e257d8563c12399fd", "patch": "@@ -0,0 +1,15 @@\n+\n+\n+union U { signed int d : 7; signed int e : 2; } u;\n+int a, b;\n+\n+void\n+foo (void)\n+{\n+  for (int i = 0; i < 64; i++)\n+    {\n+      u.d = a;\n+      u.e ^= b;\n+    }\n+}\n+"}]}