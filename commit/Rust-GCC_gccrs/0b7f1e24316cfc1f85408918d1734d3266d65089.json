{"sha": "0b7f1e24316cfc1f85408918d1734d3266d65089", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI3ZjFlMjQzMTZjZmMxZjg1NDA4OTE4ZDE3MzRkMzI2NmQ2NTA4OQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-03-10T22:15:58Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-03-10T22:15:58Z"}, "message": "libstdc++: Fix uses of _M_current in split_view's outer iterator\n\nThese direct uses of _M_current should all be __current() so they are\nvalid when the base type doesn't satisfy the forward_range concept.\n\n\t* include/std/ranges (split_view::_OuterIter::__at_end): Use __current\n\tinstead of _M_current.\n\t(split_view::_OuterIter::operator++): Likewise.", "tree": {"sha": "51cd6058b26ff61d257c7d0bbdb4b34a072208aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51cd6058b26ff61d257c7d0bbdb4b34a072208aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b7f1e24316cfc1f85408918d1734d3266d65089", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b7f1e24316cfc1f85408918d1734d3266d65089", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b7f1e24316cfc1f85408918d1734d3266d65089", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b7f1e24316cfc1f85408918d1734d3266d65089/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b269a014771776f860730874095dffb34839a466", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b269a014771776f860730874095dffb34839a466", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b269a014771776f860730874095dffb34839a466"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "7197663e6a13dc51c31b4e8d295d0eecf039535e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b7f1e24316cfc1f85408918d1734d3266d65089/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b7f1e24316cfc1f85408918d1734d3266d65089/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0b7f1e24316cfc1f85408918d1734d3266d65089", "patch": "@@ -1,5 +1,9 @@\n 2020-03-10  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/std/ranges (split_view::_OuterIter::__at_end): Use __current\n+\tinstead of _M_current.\n+\t(split_view::_OuterIter::operator++): Likewise.\n+\n \t* include/std/ranges (transform_view::_Iterator::__iter_move): Remove.\n \t(transform_view::_Iterator::operator*): Add noexcept-specifier.\n \t(transform_view::_Iterator::iter_move): Inline __iter_move body here."}, {"sha": "de120d6b55da7665a9aa4b5c15af6661e8839fc2", "filename": "libstdc++-v3/include/std/ranges", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b7f1e24316cfc1f85408918d1734d3266d65089/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b7f1e24316cfc1f85408918d1734d3266d65089/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges?ref=0b7f1e24316cfc1f85408918d1734d3266d65089", "patch": "@@ -2703,9 +2703,9 @@ namespace views\n \n \t  constexpr bool\n \t  __at_end() const\n-\t  { return _M_current == ranges::end(_M_parent->_M_base); }\n+\t  { return __current() == ranges::end(_M_parent->_M_base); }\n \n-\t  // XXX: [24.7.11.3.1]\n+\t  // [range.split.outer] p1\n \t  //  Many of the following specifications refer to the notional member\n \t  //  current of outer-iterator.  current is equivalent to current_ if\n \t  //  V models forward_range, and parent_->current_ otherwise.\n@@ -2798,21 +2798,21 @@ namespace views\n \t  operator++()\n \t  {\n \t    const auto __end = ranges::end(_M_parent->_M_base);\n-\t    if (_M_current == __end)\n+\t    if (__current() == __end)\n \t      return *this;\n \t    const auto [__pbegin, __pend] = subrange{_M_parent->_M_pattern};\n \t    if (__pbegin == __pend)\n-\t      ++_M_current;\n+\t      ++__current();\n \t    else\n \t      do\n \t\t{\n \t\t  auto [__b, __p]\n-\t\t    = __detail::mismatch(std::move(_M_current), __end,\n+\t\t    = __detail::mismatch(std::move(__current()), __end,\n \t\t\t\t\t __pbegin, __pend);\n-\t\t  _M_current = std::move(__b);\n+\t\t  __current() = std::move(__b);\n \t\t  if (__p == __pend)\n \t\t    break;\n-\t\t} while (++_M_current != __end);\n+\t\t} while (++__current() != __end);\n \t    return *this;\n \t  }\n "}]}