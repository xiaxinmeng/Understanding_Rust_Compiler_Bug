{"sha": "11d363376205d178b8d1b38a155c07b86ff53940", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTFkMzYzMzc2MjA1ZDE3OGI4ZDFiMzhhMTU1YzA3Yjg2ZmY1Mzk0MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-05-18T04:51:07Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-05-18T04:51:07Z"}, "message": "update\n\nFrom-SVN: r19834", "tree": {"sha": "276a6c7dd069867b145d931084a00dfc660a5858", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/276a6c7dd069867b145d931084a00dfc660a5858"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11d363376205d178b8d1b38a155c07b86ff53940", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11d363376205d178b8d1b38a155c07b86ff53940", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11d363376205d178b8d1b38a155c07b86ff53940", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11d363376205d178b8d1b38a155c07b86ff53940/comments", "author": null, "committer": null, "parents": [{"sha": "be1559e5b540d31671ce571835299b4bfef28a03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be1559e5b540d31671ce571835299b4bfef28a03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be1559e5b540d31671ce571835299b4bfef28a03"}], "stats": {"total": 109, "additions": 55, "deletions": 54}, "files": [{"sha": "74c6ca53138582217208ffde9e7f2f9e6f4fc8bb", "filename": "gcc/cp/g++FAQ.texi", "status": "modified", "additions": 55, "deletions": 54, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11d363376205d178b8d1b38a155c07b86ff53940/gcc%2Fcp%2Fg%2B%2BFAQ.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11d363376205d178b8d1b38a155c07b86ff53940/gcc%2Fcp%2Fg%2B%2BFAQ.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fg%2B%2BFAQ.texi?ref=11d363376205d178b8d1b38a155c07b86ff53940", "patch": "@@ -3,7 +3,7 @@\n @setfilename g++FAQ.info\n @settitle Frequently asked questions about the GNU C++ compiler\n @setchapternewpage off\n-@c version: @(#)g++FAQ.texi\t1.60 01/31/98\n+@c version: %W% %G%\n @c %**end of header\n \n @iftex\n@@ -12,7 +12,7 @@\n @titlepage\n @title G++ FAQ\n @subtitle Frequently asked questions about the GNU C++ compiler\n-@subtitle January 31, 1998\n+@subtitle March 16, 1998.\n @sp 1\n @author Joe Buck\n @page\n@@ -87,7 +87,7 @@ The Next Generation(s) of g++\n * new-in-2.8.0::    What's new in gcc 2.8.0?    \n * egcs-intro::      What is egcs?\n * egcs-whats-new::  What's new in egcs vs 2.7.2?\n-* egcs-bug-fixes::  What was fixed in egcs-1.0.1?\n+* egcs-bug-fixes::  What was fixed in egcs-1.0.1 and 1.0.2?\n * egcs-linux::      If I install on Linux, will it overwrite my libraries?\n * egcs-run-both::   How can I run both egcs and an FSF release?\n * egcs-vs-2.8.0::   How will egcs affect 2.8.0?\n@@ -178,35 +178,35 @@ or GPL (@pxref{legalities}).\n \n @cindex egcs release\n \n-The egcs project (on the Web: @file{http://www.cygnus.com/egcs/}) has\n-released a bug-fix version, egcs-1.0.1, on January 6, 1998.  Folks\n-using egcs-1.0 should upgrade, as it has some important bug fixes.\n+The newest release from the egcs project (on the Web:\n+@file{http://www.cygnus.com/egcs/}) is egcs-1.0.2, released March 16,\n+1998.\n \n @cindex gcc/g++, version date\n-The current version of gcc/g++ is 2.8.0 (!), released January 14, 1998.\n-It is a huge improvement over the 2.7.x releases, and thanks to\n-extensive testing in the egcs framework, is perhaps the least buggy .0\n-gcc release anyone can remember (though there are definitely a few).\n+The current version of gcc/g++ is 2.8.1, released March 4, 1998.\n+This release fixes some bugs in the 2.8.0 release from January.\n+It is a huge improvement over the 2.7.x releases.\n \n-The current version of libg++ is 2.8.0, released January 19, 1998.\n-However, libg++ is being deprecated; libstdc++-2.8.0 contains just the\n-standard C++ classes and is a subset of libg++ 2.8.0.  The libstdc++\n-library is identical to the one included in egcs-1.0.1.\n+libg++ has now been deprecated (that is, it is no longer really\n+supported), so gcc2.8.1 users need to grab libstdc++-2.8.1 from\n+their favorite GNU site (egcs users don't need to get this separately\n+as it is bundled with egcs).  However, there is an 'add-on' libg++ 2.8.1\n+mini-release.  If you want to use it, you need to combine it with\n+libstdc++ 2.8.1.\n \n I would strongly recommend that anyone using a g++ version earlier\n than 2.7.2 should upgrade if at all possible (@pxref{version 2.7.x}).\n-Folks who need modern C++ features should upgrade to 2.8.0 or egcs. \n+Folks who need modern C++ features should upgrade to 2.8.1 or egcs. \n \n For some non-Unix platforms, the latest port of gcc may be an earlier\n-version (2.6.3, say).  You'll need to use a version of libg++ that\n+version (2.7.2, say).  You'll need to use a version of libg++ that\n has the same first two digits as the compiler version, e.g. use libg++\n-2.6.x (for the latest x you can find) with gcc version 2.6.3.\n+2.7.x (for the latest x you can find) with gcc version 2.7.2.1.\n \n The latest \"1.x\" version of gcc is 1.42, and the latest \"1.x\" version of\n g++ is 1.42.0.\n-While gcc 1.42 is quite usable for C programs,\n-I recommend against using g++ 1.x except in special circumstances\n-(and I can't think of any such circumstances).\n+While gcc 1.42 is quite usable for C programs, g++ 1.x is only of\n+historical interest (since the C++ language has changed so much).\n \n @node g++ for Unix, g++ for HP, latest versions, basics\n @section How do I get a copy of g++ for Unix?\n@@ -282,8 +282,8 @@ Most GNU utilities are compressed with ``gzip'', the GNU compression\n utility.  All GNU archive sites should have a copy of this program,\n which you will need to uncompress the distributions.\n \n-@cindex libg++\n-Don't forget to retrieve libg++ as well!\n+@cindex libstdc++\n+Don't forget to retrieve libstdc++ as well!\n \n @node g++ for HP, g++ for Solaris 2.x, g++ for Unix, basics\n @section Getting gcc/g++ for the HP Precision Architecture\n@@ -460,27 +460,28 @@ convention.  It means ``the C++ compiler included with gcc-2.x.y.''\n * new-in-2.8.0::    What's new in gcc 2.8.0?    \n * egcs-intro::      What is egcs?\n * egcs-whats-new::  What's new in egcs vs 2.7.2?\n-* egcs-bug-fixes::  What was fixed in egcs-1.0.1?\n+* egcs-bug-fixes::  What was fixed in egcs-1.0.1 and egcs-1.0.2?\n * egcs-linux::      If I install on Linux, will it overwrite my libraries?\n * egcs-run-both::   How can I run both egcs and an FSF release?\n-* egcs-vs-2.8.0::   How will egcs affect 2.8.0?\n+* egcs-vs-2.8.0::   How will egcs affect 2.8.x?\n * egcs-robustness::  How robust is egcs?\n @end menu\n \n @node new-in-2.8.0, egcs-intro, egcs and 2.8.0, egcs and 2.8.0\n @section What's new in gcc/g++ 2.8.0?\n \n After a two-year wait, gcc 2.8.0 was released in January 1998, along\n-with libstdc++-2.8.0 and libg++-2.8.0.  Note that the latter (libg++)\n-contains the former (libstdc++) so there is no reason to install both\n-library packages, but libstdc++ is required.  \n+with libstdc++-2.8.0 and libg++-2.8.0.  This has been followed up in\n+March by the 2.8.1 release of all three packages, though libg++-2.8.1\n+is an \"add-on\" (it does not contain libstdc++ anymore).  Note that\n+libstdc++ is required.\n \n For those familiar with egcs, the most obvious difference between\n-gcc-2.8.0 and egcs-1.0 or 1.0.1 is the packaging: egcs is bundled with\n-libstdc++, and gcc-2.8.0 does not contain the class library.  Otherwise,\n+gcc-2.8.x and egcs is the packaging: egcs is bundled with\n+libstdc++, and gcc-2.8.x does not contain the class library.  Otherwise,\n except for the lack of the @code{-frepo} option and some bug fixes\n-that have not yet made it into gcc-2.8.0, C++ users will find the\n-two compilers to be almost the same at this stage, other than that 2.8.0\n+that have not yet made it into gcc-2.8.x, C++ users will find the\n+two compilers to be almost the same at this stage, other than that 2.8.x\n users may get more bogus warnings with -Wall and optimization because\n some fixes to flow analysis in the presence of exceptions that egcs made\n are not yet present in gcc 2.8.0.\n@@ -502,18 +503,18 @@ The current release is egcs-1.0.1, released January 6, 1998.\n Questions not addressed here may be answered in the egcs FAQ\n (@file{http://www.cygnus.com/egcs/faq.html}).\n \n-@node egcs-whats-new, egcs-bug-fixes, egcs-intro, egcs and 2.8.0\n+@node egcs-whats-new, egcs-bug-fixes, egcs-intro, egcs and 2.8.x\n @section What new C++ features are in egcs?\n \n @strong{Note}: unless indicated otherwise, these features are also\n-present in g++ 2.8.0.\n+present in g++ 2.8.x.\n \n @itemize @bullet\n @item\n @cindex integrated libstdc++\n \n The standard C++ classes are integrated with the egcs release (but\n-@strong{not} for gcc-2.8.0, which does not include the class libraries).\n+@strong{not} for gcc-2.8.x, which does not include the class libraries).\n libg++ is not being\n supported, though an add-on version that will work with egcs can be found at\n @file{ftp://ftp.yggdrasil.com/private/hjl/libg++-2.8.0b6.6.tar.gz},\n@@ -530,7 +531,7 @@ supported.  An instantiation method resembling that used in Borland C++\n (instantiating functions possibly in multiple .o files and using weak\n symbols to link correctly) is provided, in addition to other\n options.  The SGI version of STL is shipped verbatim with libstdc++\n-(libstdc++ is included with egcs, separate with gcc-2.8.0).\n+(libstdc++ is included with egcs, separate with gcc-2.8.x).\n \n @item\n @cindex redundant template elimination\n@@ -542,7 +543,7 @@ at link time.\n @item\n @cindex repository\n @cindex -frepo\n-The @code{-frepo} flag is supported in egcs (it is not in 2.8.0).\n+The @code{-frepo} flag is supported in egcs (it is not in 2.8.x).\n However, because of the previous item, I don't recommend its use on ELF\n systems, as the default method is better.\n \n@@ -570,7 +571,8 @@ There are many more changes: see @file{http://www.cygnus.com/egcs/c++features.ht\n @end itemize\n \n Features that are still missing include namespaces and templates as\n-template arguments.\n+template arguments, though there is support for the latter feature\n+in the egcs snapshots (which has not yet made it into a release).\n \n @node egcs-bug-fixes, egcs-linux, egcs-whats-new, egcs and 2.8.0\n @section What was fixed in egcs-1.0.1?\n@@ -649,11 +651,10 @@ to proceed more quickly.\n \n While the 'e' stands for 'experimental', egcs has been tested thoroughly\n and should be of high quality.  A few glitches in the initial release\n-were fixed in 1.0.1.  egcs-1.0 users should upgrade.\n+were fixed in 1.0.1, and a few more in 1.0.2.  egcs-1.0 users should upgrade.\n \n-Some memory bloat problems with deeply nested templates were fixed in\n-1.0.1 (though it appears that there are still a few cases where\n-excessive memory requirements occur).\n+Memory bloat problems with deeply nested templates were fixed in\n+1.0.2.\n \n @node installation, evolution, egcs and 2.8.0, Top\n @chapter Installation Issues and Problems\n@@ -773,7 +774,7 @@ debug format (e.g. Suns running SunOS 4.x), the GNU linker compresses\n the debug symbol table considerably.  The 2.7 version adds some symbol\n table compression for ELF and Solaris targets.\n \n-Users of egcs or 2.8.0 on ELF systems should definitely\n+Users of egcs or 2.8.x on ELF systems should definitely\n use GNU ld (2.8 or later), as it will automatically remove duplicate\n instantiations of templates, virtual function tables, or ``outlined''\n copies of inline functions.\n@@ -1181,7 +1182,7 @@ in the future.\n @node version 2.7.x, libstdc++, evolution, evolution\n @section What's new in version 2.7.x of gcc/g++\n \n-[ This section is old now, since 2.8.0/egcs is the new stuff ] The\n+[ This section is old now, since 2.8.x/egcs is the new stuff ] The\n latest 2.7.x version was 2.7.2.2, released February 10, 1997.  The only\n change between 2.7.2.1 and 2.7.2.2 is that support was added for using\n the GNU C library, version 2, on Linux; users not interested in that\n@@ -1315,7 +1316,7 @@ The GNU Standard C++ Library (also called the ``GNU ANSI C++ Library''\n in places in the code) is not libg++, though it is included in the\n libg++ distribution.  Rather, it contains classes and functions\n required by the ANSI/ISO standard.  The copyright conditions are the\n-same as those for the iostreams classes; the LGPL is not used\n+same as those for for the iostreams classes; the LGPL is not used\n (@pxref{legalities}).\n \n This library, libstdc++, is in the libg++ distribution in versions 2.6.2\n@@ -1784,7 +1785,7 @@ While there is no libg++-specific document describing the STL\n implementation, SGI's web site, at\n @file{http://www.sgi.com/Technology/STL/}, is an excellent resource.\n Note that the SGI version of STL is the one that is included with the\n-egcs and 2.8.0 releases of g++/libstdc++.\n+egcs and 2.8.x releases of g++/libstdc++.\n \n @end itemize\n \n@@ -1822,7 +1823,7 @@ template ostream& operator << (ostream&, const A<int>&);\n As of version 2.7.2, there are still a few limitations in the template\n implementation besides the above (thanks to Jason Merrill for this info):\n \n-@strong{Note}: these problems are eliminated in egcs and in gcc-2.8.0.\n+@strong{Note}: these problems are eliminated in egcs and in gcc-2.8.x.\n \n @enumerate 1\n @item\n@@ -1892,7 +1893,7 @@ before @code{f()}; this will force it to be instantiated (though not\n emitted). \n \n @strong{Note:} this kind of ``guiding declaration'' is not standard and\n-isn't supported by egcs or gcc-2.8.0, as the standard says that this\n+isn't supported by egcs or gcc-2.8.x, as the standard says that this\n declares a ``normal'' @code{min} function which has no relation to\n the template function @code{min<int>(int,int)}.  But then the new\n compilers have no problem inlining template functions.\n@@ -1982,7 +1983,7 @@ This bug is fixed in 2.7.0.\n @section Does g++ support the Standard Template Library?\n \n If you want to use the Standard Template Library, do not pass go,\n-upgrade immediately to gcc-2.8.0 or to egcs.  The new C++ front end\n+upgrade immediately to gcc-2.8.x or to egcs.  The new C++ front end\n handles STL very well, and the high-quality implementation of STL\n from SGI is included verbatim as part of the libstdc++ class library.\n \n@@ -2049,7 +2050,7 @@ and ``VAX may also work'' (according to Mike Stump).\n As of version 2.7.2, g++ recognizes the keywords @code{namespace} and\n @code{using}, and there is some rudimentary code present, but almost\n nothing connected with namespaces works yet.\n-The new versions (2.8.0/egcs) still lack namespace support, but to help\n+The new versions (2.8.x/egcs) still lack namespace support, but to help\n compile standard programs they make\n \n @example\n@@ -2065,7 +2066,7 @@ a no-op.\n @cindex exceptions\n \n Up until recently, there was no really usable exception support.  If you\n-need exceptions, you want gcc-2.8.0 or egcs.  The implementation works\n+need exceptions, you want gcc-2.8.x or egcs.  The implementation works\n fairly well.  The 2.7.x version was strictly alpha quality and quite\n fragile.\n \n@@ -2075,15 +2076,15 @@ that don't appear in the ARM are supported, notably the @code{mutable}\n keyword, in version 2.5.x.  2.6.x added support for the built-in boolean\n type @code{bool}, with constants @code{true} and @code{false}.  Run-time\n type identification was rudimentary in 2.7.x but is fully supported in\n-2.8.0, so there are\n+2.8.x, so there are\n more reserved words: @code{typeid}, @code{static_cast},\n @code{reinterpret_cast}, @code{const_cast}, and @code{dynamic_cast}.\n \n @cindex g++ bugs\n As with any beta-test compiler, there are bugs.  You can help improve\n the compiler by submitting detailed bug reports.\n \n-[ This paragraph obsoleted by 2.8.0/egcs: ]\n+[ This paragraph obsoleted by 2.8.x/egcs: ]\n One of the weakest areas of g++ other than templates is the resolution\n of overloaded functions and operators in complex cases.  The usual\n symptom is that in a case where the ARM says that it is ambiguous which\n@@ -2142,7 +2143,7 @@ debugging information in a format known as `DWARF'.\n Although the GNU C compiler already knows how to write out symbolic debugging\n information in the DWARF format, the GNU C++ compiler does not yet have this\n feature yet.  However, work is in progress for DWARF 2 debug support for\n-gcc and g++ and it works fairly well in 2.8.0 and egcs, though we'll\n+gcc and g++ and it works fairly well in 2.8.x and egcs, though we'll\n have to wait for gdb 4.17 to be released to take full advantage.\n \n @cindex stabs\n@@ -2309,7 +2310,7 @@ all the standard classes are in @file{-lstdc++}; you can do the link\n step with @code{c++} instead of @code{g++} to search only the\n @file{-lstdc++} library and avoid the LGPL'ed code in @file{-lg++}.\n \n-Note that in egcs and in gcc-2.8.0, if you do not\n+Note that in egcs and in gcc-2.8.x, if you do not\n specify any libraries the @code{g++} command will only link in\n @file{-lstdc++}, so your executable will not be affected by the LGPL.\n "}]}