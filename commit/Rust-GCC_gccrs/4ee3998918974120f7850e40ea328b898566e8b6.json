{"sha": "4ee3998918974120f7850e40ea328b898566e8b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVlMzk5ODkxODk3NDEyMGY3ODUwZTQwZWEzMjhiODk4NTY2ZThiNg==", "commit": {"author": {"name": "Douglas Gregor", "email": "doug.gregor@gmail.com", "date": "2005-04-02T12:56:18Z"}, "committer": {"name": "Doug Gregor", "email": "dgregor@gcc.gnu.org", "date": "2005-04-02T12:56:18Z"}, "message": "tuple_iterate.h (tuple_element): Use new macro _GLIBCXX_T_NUM_ARGS_PLUS_1 because _T is a macro on Darwin.\n\n2005-04-02  Douglas Gregor  <doug.gregor@gmail.com>\n\n\t* include/tr1/tuple_iterate.h (tuple_element): Use new macro\n\t_GLIBCXX_T_NUM_ARGS_PLUS_1 because _T is a macro on Darwin.\n\t* include/tr1/repeat.h (_GLIBCXX_T_NUM_ARGS_PLUS_1): Define for\n\teach iteration.\n\t* scripts/gen_includers.h: Define _GLIBCXX_T_NUM_ARGS_PLUS_1 for\n\teach iteration.\n\nFrom-SVN: r97438", "tree": {"sha": "31673126f2ecfcfdb1fe3671537a34ee2a2a8449", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31673126f2ecfcfdb1fe3671537a34ee2a2a8449"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ee3998918974120f7850e40ea328b898566e8b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ee3998918974120f7850e40ea328b898566e8b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ee3998918974120f7850e40ea328b898566e8b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ee3998918974120f7850e40ea328b898566e8b6/comments", "author": {"login": "DougGregor", "id": 989428, "node_id": "MDQ6VXNlcjk4OTQyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/989428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DougGregor", "html_url": "https://github.com/DougGregor", "followers_url": "https://api.github.com/users/DougGregor/followers", "following_url": "https://api.github.com/users/DougGregor/following{/other_user}", "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}", "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions", "organizations_url": "https://api.github.com/users/DougGregor/orgs", "repos_url": "https://api.github.com/users/DougGregor/repos", "events_url": "https://api.github.com/users/DougGregor/events{/privacy}", "received_events_url": "https://api.github.com/users/DougGregor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b6d2248c7e8bffa8f8dde30d7f1700ea920dcded", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6d2248c7e8bffa8f8dde30d7f1700ea920dcded", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6d2248c7e8bffa8f8dde30d7f1700ea920dcded"}], "stats": {"total": 62, "additions": 47, "deletions": 15}, "files": [{"sha": "ee962c961279dca542d5fb9194ff59a6f0443677", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ee3998918974120f7850e40ea328b898566e8b6/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ee3998918974120f7850e40ea328b898566e8b6/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4ee3998918974120f7850e40ea328b898566e8b6", "patch": "@@ -1,3 +1,12 @@\n+2005-04-02  Douglas Gregor  <doug.gregor@gmail.com>\n+\t\n+\t* include/tr1/tuple_iterate.h (tuple_element): Use new macro\n+\t_GLIBCXX_T_NUM_ARGS_PLUS_1 because _T is a macro on Darwin.\n+\t* include/tr1/repeat.h (_GLIBCXX_T_NUM_ARGS_PLUS_1): Define for\n+\teach iteration.\n+\t* scripts/gen_includers.h: Define _GLIBCXX_T_NUM_ARGS_PLUS_1 for\n+\teach iteration.\n+\t\n 2005-04-01  Douglas Gregor  <doug.gregor@gmail.com>\n \n \t* include/tr1/functional (_Maybe_wrap_member_pointer): Wrap up"}, {"sha": "fa23c0b66b623c2ff375ad2d1eeccdb2e6dfd054", "filename": "libstdc++-v3/include/tr1/repeat.h", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ee3998918974120f7850e40ea328b898566e8b6/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frepeat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ee3998918974120f7850e40ea328b898566e8b6/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frepeat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frepeat.h?ref=4ee3998918974120f7850e40ea328b898566e8b6", "patch": "@@ -62,7 +62,9 @@\n #define _GLIBCXX_REF_WRAP_PARAMS\n #define _GLIBCXX_REF_TEMPLATE_ARGS\n #define _GLIBCXX_NUM_ARGS_PLUS_1 1\n+#define _GLIBCXX_T_NUM_ARGS_PLUS_1 _T1\n #include _GLIBCXX_REPEAT_HEADER\n+#undef _GLIBCXX_T_NUM_ARGS_PLUS_1\n #undef _GLIBCXX_NUM_ARGS_PLUS_1\n #undef _GLIBCXX_REF_TEMPLATE_ARGS\n #undef _GLIBCXX_REF_WRAP_PARAMS\n@@ -114,7 +116,9 @@\n #define _GLIBCXX_REF_WRAP_PARAMS ref(__a1)\n #define _GLIBCXX_REF_TEMPLATE_ARGS _T1&\n #define _GLIBCXX_NUM_ARGS_PLUS_1 2\n+#define _GLIBCXX_T_NUM_ARGS_PLUS_1 _T2\n #include _GLIBCXX_REPEAT_HEADER\n+#undef _GLIBCXX_T_NUM_ARGS_PLUS_1\n #undef _GLIBCXX_NUM_ARGS_PLUS_1\n #undef _GLIBCXX_REF_TEMPLATE_ARGS\n #undef _GLIBCXX_REF_WRAP_PARAMS\n@@ -166,7 +170,9 @@\n #define _GLIBCXX_REF_WRAP_PARAMS ref(__a1), ref(__a2)\n #define _GLIBCXX_REF_TEMPLATE_ARGS _T1&, _T2&\n #define _GLIBCXX_NUM_ARGS_PLUS_1 3\n+#define _GLIBCXX_T_NUM_ARGS_PLUS_1 _T3\n #include _GLIBCXX_REPEAT_HEADER\n+#undef _GLIBCXX_T_NUM_ARGS_PLUS_1\n #undef _GLIBCXX_NUM_ARGS_PLUS_1\n #undef _GLIBCXX_REF_TEMPLATE_ARGS\n #undef _GLIBCXX_REF_WRAP_PARAMS\n@@ -218,7 +224,9 @@\n #define _GLIBCXX_REF_WRAP_PARAMS ref(__a1), ref(__a2), ref(__a3)\n #define _GLIBCXX_REF_TEMPLATE_ARGS _T1&, _T2&, _T3&\n #define _GLIBCXX_NUM_ARGS_PLUS_1 4\n+#define _GLIBCXX_T_NUM_ARGS_PLUS_1 _T4\n #include _GLIBCXX_REPEAT_HEADER\n+#undef _GLIBCXX_T_NUM_ARGS_PLUS_1\n #undef _GLIBCXX_NUM_ARGS_PLUS_1\n #undef _GLIBCXX_REF_TEMPLATE_ARGS\n #undef _GLIBCXX_REF_WRAP_PARAMS\n@@ -270,7 +278,9 @@\n #define _GLIBCXX_REF_WRAP_PARAMS ref(__a1), ref(__a2), ref(__a3), ref(__a4)\n #define _GLIBCXX_REF_TEMPLATE_ARGS _T1&, _T2&, _T3&, _T4&\n #define _GLIBCXX_NUM_ARGS_PLUS_1 5\n+#define _GLIBCXX_T_NUM_ARGS_PLUS_1 _T5\n #include _GLIBCXX_REPEAT_HEADER\n+#undef _GLIBCXX_T_NUM_ARGS_PLUS_1\n #undef _GLIBCXX_NUM_ARGS_PLUS_1\n #undef _GLIBCXX_REF_TEMPLATE_ARGS\n #undef _GLIBCXX_REF_WRAP_PARAMS\n@@ -322,7 +332,9 @@\n #define _GLIBCXX_REF_WRAP_PARAMS ref(__a1), ref(__a2), ref(__a3), ref(__a4), ref(__a5)\n #define _GLIBCXX_REF_TEMPLATE_ARGS _T1&, _T2&, _T3&, _T4&, _T5&\n #define _GLIBCXX_NUM_ARGS_PLUS_1 6\n+#define _GLIBCXX_T_NUM_ARGS_PLUS_1 _T6\n #include _GLIBCXX_REPEAT_HEADER\n+#undef _GLIBCXX_T_NUM_ARGS_PLUS_1\n #undef _GLIBCXX_NUM_ARGS_PLUS_1\n #undef _GLIBCXX_REF_TEMPLATE_ARGS\n #undef _GLIBCXX_REF_WRAP_PARAMS\n@@ -374,7 +386,9 @@\n #define _GLIBCXX_REF_WRAP_PARAMS ref(__a1), ref(__a2), ref(__a3), ref(__a4), ref(__a5), ref(__a6)\n #define _GLIBCXX_REF_TEMPLATE_ARGS _T1&, _T2&, _T3&, _T4&, _T5&, _T6&\n #define _GLIBCXX_NUM_ARGS_PLUS_1 7\n+#define _GLIBCXX_T_NUM_ARGS_PLUS_1 _T7\n #include _GLIBCXX_REPEAT_HEADER\n+#undef _GLIBCXX_T_NUM_ARGS_PLUS_1\n #undef _GLIBCXX_NUM_ARGS_PLUS_1\n #undef _GLIBCXX_REF_TEMPLATE_ARGS\n #undef _GLIBCXX_REF_WRAP_PARAMS\n@@ -426,7 +440,9 @@\n #define _GLIBCXX_REF_WRAP_PARAMS ref(__a1), ref(__a2), ref(__a3), ref(__a4), ref(__a5), ref(__a6), ref(__a7)\n #define _GLIBCXX_REF_TEMPLATE_ARGS _T1&, _T2&, _T3&, _T4&, _T5&, _T6&, _T7&\n #define _GLIBCXX_NUM_ARGS_PLUS_1 8\n+#define _GLIBCXX_T_NUM_ARGS_PLUS_1 _T8\n #include _GLIBCXX_REPEAT_HEADER\n+#undef _GLIBCXX_T_NUM_ARGS_PLUS_1\n #undef _GLIBCXX_NUM_ARGS_PLUS_1\n #undef _GLIBCXX_REF_TEMPLATE_ARGS\n #undef _GLIBCXX_REF_WRAP_PARAMS\n@@ -478,7 +494,9 @@\n #define _GLIBCXX_REF_WRAP_PARAMS ref(__a1), ref(__a2), ref(__a3), ref(__a4), ref(__a5), ref(__a6), ref(__a7), ref(__a8)\n #define _GLIBCXX_REF_TEMPLATE_ARGS _T1&, _T2&, _T3&, _T4&, _T5&, _T6&, _T7&, _T8&\n #define _GLIBCXX_NUM_ARGS_PLUS_1 9\n+#define _GLIBCXX_T_NUM_ARGS_PLUS_1 _T9\n #include _GLIBCXX_REPEAT_HEADER\n+#undef _GLIBCXX_T_NUM_ARGS_PLUS_1\n #undef _GLIBCXX_NUM_ARGS_PLUS_1\n #undef _GLIBCXX_REF_TEMPLATE_ARGS\n #undef _GLIBCXX_REF_WRAP_PARAMS\n@@ -530,7 +548,9 @@\n #define _GLIBCXX_REF_WRAP_PARAMS ref(__a1), ref(__a2), ref(__a3), ref(__a4), ref(__a5), ref(__a6), ref(__a7), ref(__a8), ref(__a9)\n #define _GLIBCXX_REF_TEMPLATE_ARGS _T1&, _T2&, _T3&, _T4&, _T5&, _T6&, _T7&, _T8&, _T9&\n #define _GLIBCXX_NUM_ARGS_PLUS_1 10\n+#define _GLIBCXX_T_NUM_ARGS_PLUS_1 _T10\n #include _GLIBCXX_REPEAT_HEADER\n+#undef _GLIBCXX_T_NUM_ARGS_PLUS_1\n #undef _GLIBCXX_NUM_ARGS_PLUS_1\n #undef _GLIBCXX_REF_TEMPLATE_ARGS\n #undef _GLIBCXX_REF_WRAP_PARAMS\n@@ -583,7 +603,9 @@\n #define _GLIBCXX_REF_WRAP_PARAMS ref(__a1), ref(__a2), ref(__a3), ref(__a4), ref(__a5), ref(__a6), ref(__a7), ref(__a8), ref(__a9), ref(__a10)\n #define _GLIBCXX_REF_TEMPLATE_ARGS _T1&, _T2&, _T3&, _T4&, _T5&, _T6&, _T7&, _T8&, _T9&, _T10&\n #define _GLIBCXX_NUM_ARGS_PLUS_1 11\n+#define _GLIBCXX_T_NUM_ARGS_PLUS_1 _T11\n #include _GLIBCXX_REPEAT_HEADER\n+#undef _GLIBCXX_T_NUM_ARGS_PLUS_1\n #undef _GLIBCXX_NUM_ARGS_PLUS_1\n #undef _GLIBCXX_REF_TEMPLATE_ARGS\n #undef _GLIBCXX_REF_WRAP_PARAMS"}, {"sha": "23cb01fc923d561c8c1a26b91b423ac3445db412", "filename": "libstdc++-v3/include/tr1/tuple_iterate.h", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ee3998918974120f7850e40ea328b898566e8b6/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftuple_iterate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ee3998918974120f7850e40ea328b898566e8b6/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftuple_iterate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftuple_iterate.h?ref=4ee3998918974120f7850e40ea328b898566e8b6", "patch": "@@ -49,7 +49,7 @@ template<_GLIBCXX_TEMPLATE_PARAMS>\n     _GLIBCXX_BIND_MEMBERS\n \n   public:\n-    tuple() \n+    tuple()\n     { }\n \n #if _GLIBCXX_NUM_ARGS == 2\n@@ -75,8 +75,8 @@ template<class _U1, class _U2>\n       tuple&\n       operator=(const tuple<_GLIBCXX_TEMPLATE_ARGS_U>& __in)\n       {\n-\t_GLIBCXX_TUPLE_ASSIGN\n-\treturn *this;\n+        _GLIBCXX_TUPLE_ASSIGN\n+        return *this;\n       }\n \n     tuple(const tuple& __in) :\n@@ -94,7 +94,7 @@ template<class _U1, class _U2>\n     operator=(const tuple& __in)\n     {\n       _GLIBCXX_TUPLE_ASSIGN\n-\treturn *this;\n+        return *this;\n     }\n \n     template<int __i, typename __Type>\n@@ -110,25 +110,25 @@ template<class _U1, class _U2>\n template<typename _Tp>\n     struct __get_helper<_GLIBCXX_NUM_ARGS, _Tp>\n     {\n-      static typename __add_ref<typename tuple_element<_GLIBCXX_NUM_ARGS, \n-\t                                               _Tp>::type>::type\n+      static typename __add_ref<typename tuple_element<_GLIBCXX_NUM_ARGS,\n+                                                       _Tp>::type>::type\n       get_value(_Tp& __in)\n       { return __in._GLIBCXX_CAT(_M_arg,_GLIBCXX_NUM_ARGS_PLUS_1); }\n \n       static typename __add_c_ref<typename tuple_element<_GLIBCXX_NUM_ARGS,\n-\t                                                 _Tp>::type>::type\n+                                                         _Tp>::type>::type\n       get_value(const _Tp& __in)\n       { return __in._GLIBCXX_CAT(_M_arg,_GLIBCXX_NUM_ARGS_PLUS_1); }\n     };\n \n-/// @brief class tuple_element \n-template<typename _T1, typename _T2, typename _T3, typename _T4, \n-         typename _T5, typename _T6, typename _T7, typename _T8, \n+/// @brief class tuple_element\n+template<typename _T1, typename _T2, typename _T3, typename _T4,\n+         typename _T5, typename _T6, typename _T7, typename _T8,\n          typename _T9, typename _T10>\n-   struct tuple_element<_GLIBCXX_NUM_ARGS, tuple<_T1, _T2, _T3, _T4, \n-                                                _T5, _T6, _T7, _T8, _T9, \n+   struct tuple_element<_GLIBCXX_NUM_ARGS, tuple<_T1, _T2, _T3, _T4,\n+                                                _T5, _T6, _T7, _T8, _T9,\n                                                 _T10> >\n-  { typedef _GLIBCXX_CAT(_T,_GLIBCXX_NUM_ARGS_PLUS_1) type; };\n+  { typedef _GLIBCXX_T_NUM_ARGS_PLUS_1 type; };\n \n #endif\n #if _GLIBCXX_NUM_ARGS == 0\n@@ -145,7 +145,7 @@ tie()\n template<_GLIBCXX_TEMPLATE_PARAMS>\n   typename __stripped_tuple_type<_GLIBCXX_TEMPLATE_ARGS>::__type\n   make_tuple(_GLIBCXX_PARAMS)\n-  { \n+  {\n     return typename __stripped_tuple_type<_GLIBCXX_TEMPLATE_ARGS>::\n       __type(_GLIBCXX_ARGS);\n   }"}, {"sha": "bfc3a7ec59d724b043ddddadcffa55497a02b4d7", "filename": "libstdc++-v3/scripts/gen_includers.pl", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ee3998918974120f7850e40ea328b898566e8b6/libstdc%2B%2B-v3%2Fscripts%2Fgen_includers.pl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ee3998918974120f7850e40ea328b898566e8b6/libstdc%2B%2B-v3%2Fscripts%2Fgen_includers.pl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fscripts%2Fgen_includers.pl?ref=4ee3998918974120f7850e40ea328b898566e8b6", "patch": "@@ -70,14 +70,15 @@\n   print \"#define _GLIBCXX_REF_WRAP_PARAMS $ref_wrap_params\\n\";\n   print \"#define _GLIBCXX_REF_TEMPLATE_ARGS $ref_template_args\\n\";\n   print \"#define _GLIBCXX_NUM_ARGS_PLUS_1 $next_args\\n\";\n+  print \"#define _GLIBCXX_T_NUM_ARGS_PLUS_1 _T$next_args\\n\";\n   if ($num_args == $max) {\n     print \"#define _GLIBCXX_LAST_INCLUDE\\n\"\n   }\n   print \"#include _GLIBCXX_REPEAT_HEADER\\n\";\n   if ($num_args == $max) {\n     print \"#undef _GLIBCXX_LAST_INCLUDE\\n\"\n   }\n-\n+  print \"#undef _GLIBCXX_T_NUM_ARGS_PLUS_1\\n\";\n   print \"#undef _GLIBCXX_NUM_ARGS_PLUS_1\\n\";\n   print \"#undef _GLIBCXX_REF_TEMPLATE_ARGS\\n\";\n   print \"#undef _GLIBCXX_REF_WRAP_PARAMS\\n\";"}]}