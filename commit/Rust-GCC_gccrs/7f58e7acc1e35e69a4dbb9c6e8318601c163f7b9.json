{"sha": "7f58e7acc1e35e69a4dbb9c6e8318601c163f7b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Y1OGU3YWNjMWUzNWU2OWE0ZGJiOWM2ZTgzMTg2MDFjMTYzZjdiOQ==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@integrable-solutions.net", "date": "2005-11-22T17:04:12Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2005-11-22T17:04:12Z"}, "message": "re PR c++/22238 (Awful error messages with virtual functions)\n\n        PR c++/22238\n        * error.c (resolve_virtual_fun_from_obj_type_ref): New.\n        (dump_expr): Use it in <case CALL_EXPR>.\n\nFrom-SVN: r107366", "tree": {"sha": "347b5018102e7e2dc755f0e38d4bf0555a1c401f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/347b5018102e7e2dc755f0e38d4bf0555a1c401f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f58e7acc1e35e69a4dbb9c6e8318601c163f7b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f58e7acc1e35e69a4dbb9c6e8318601c163f7b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f58e7acc1e35e69a4dbb9c6e8318601c163f7b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f58e7acc1e35e69a4dbb9c6e8318601c163f7b9/comments", "author": {"login": "cxx-undef", "id": 5528103, "node_id": "MDQ6VXNlcjU1MjgxMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5528103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cxx-undef", "html_url": "https://github.com/cxx-undef", "followers_url": "https://api.github.com/users/cxx-undef/followers", "following_url": "https://api.github.com/users/cxx-undef/following{/other_user}", "gists_url": "https://api.github.com/users/cxx-undef/gists{/gist_id}", "starred_url": "https://api.github.com/users/cxx-undef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cxx-undef/subscriptions", "organizations_url": "https://api.github.com/users/cxx-undef/orgs", "repos_url": "https://api.github.com/users/cxx-undef/repos", "events_url": "https://api.github.com/users/cxx-undef/events{/privacy}", "received_events_url": "https://api.github.com/users/cxx-undef/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d5e07b79f448ea911bda0acb00c57795eb96e7fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5e07b79f448ea911bda0acb00c57795eb96e7fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5e07b79f448ea911bda0acb00c57795eb96e7fc"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "17094dd3f69a60c4cd2863d73f5116ca9c91a151", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f58e7acc1e35e69a4dbb9c6e8318601c163f7b9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f58e7acc1e35e69a4dbb9c6e8318601c163f7b9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7f58e7acc1e35e69a4dbb9c6e8318601c163f7b9", "patch": "@@ -1,3 +1,9 @@\n+2005-11-21  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n+\n+\tPR c++/22238\n+\t* error.c (resolve_virtual_fun_from_obj_type_ref): New.\n+\t(dump_expr): Use it in <case CALL_EXPR>.\n+\n 2005-11-21  Richard Henderson  <rth@redhat.com>\n \n \t* cp-objcp-common.h, name-lookup.c, name-lookup.h: Revert 11-18 patch."}, {"sha": "be0ee5968eedc673fa8bc8c8b0ee0f866d7fe102", "filename": "gcc/cp/error.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f58e7acc1e35e69a4dbb9c6e8318601c163f7b9/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f58e7acc1e35e69a4dbb9c6e8318601c163f7b9/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=7f58e7acc1e35e69a4dbb9c6e8318601c163f7b9", "patch": "@@ -1278,6 +1278,23 @@ dump_expr_init_vec (VEC(constructor_elt,gc) *v, int flags)\n }\n \n \n+/* We've gotten an indirect REFERENCE (an OBJ_TYPE_REF) to a virtual\n+   function.  Resolve it to a close relative -- in the sense of static\n+   type -- variant being overridden.  That is close to what was written in\n+   the source code.  Subroutine of dump_expr.  */\n+\n+static tree\n+resolve_virtual_fun_from_obj_type_ref (tree ref)\n+{\n+  tree obj_type = TREE_TYPE (OBJ_TYPE_REF_OBJECT (ref));\n+  int index = tree_low_cst (OBJ_TYPE_REF_TOKEN (ref), 1);\n+  tree fun = BINFO_VIRTUALS (TYPE_BINFO (TREE_TYPE (obj_type)));\n+    while (index--)\n+      fun = TREE_CHAIN (fun);\n+\n+  return BV_FN (fun);\n+}\n+\n /* Print out an expression E under control of FLAGS.  */\n \n static void\n@@ -1386,6 +1403,10 @@ dump_expr (tree t, int flags)\n \tif (TREE_CODE (fn) == ADDR_EXPR)\n \t  fn = TREE_OPERAND (fn, 0);\n \n+        /* Nobody is interested in seeing the guts of vcalls.  */\n+        if (TREE_CODE (fn) == OBJ_TYPE_REF)\n+          fn = resolve_virtual_fun_from_obj_type_ref (fn);\n+\n \tif (TREE_TYPE (fn) != NULL_TREE && NEXT_CODE (fn) == METHOD_TYPE)\n \t  {\n \t    tree ob = TREE_VALUE (args);"}]}