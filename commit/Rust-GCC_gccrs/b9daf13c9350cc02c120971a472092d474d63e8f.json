{"sha": "b9daf13c9350cc02c120971a472092d474d63e8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjlkYWYxM2M5MzUwY2MwMmMxMjA5NzFhNDcyMDkyZDQ3NGQ2M2U4Zg==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2020-03-08T21:50:49Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-10T13:35:00Z"}, "message": "[Ada] Disable unwanted warnings in Assertion_Policy(Ignore) mode\n\n2020-06-10  Bob Duff  <duff@adacore.com>\n\ngcc/ada/\n\n\t* sem_prag.adb (Invariant): Remove the pragma removing code.  It\n\tdoesn't work to remove the pragma, because various flags are set\n\tduring Build_Invariant_Procedure_Declaration and\n\tBuild_Invariant_Procedure_Body that need to be set to avoid the\n\tspurious warnings.\n\t* exp_util.adb (Make_Invariant_Call): Avoid calling the\n\tinvariant-checking procedure if the body is empty. This is an\n\toptimization.", "tree": {"sha": "dfccfc4a98120fae5644c202994f1af491dfc4da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfccfc4a98120fae5644c202994f1af491dfc4da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9daf13c9350cc02c120971a472092d474d63e8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9daf13c9350cc02c120971a472092d474d63e8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9daf13c9350cc02c120971a472092d474d63e8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9daf13c9350cc02c120971a472092d474d63e8f/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c62140e826a5cda62b49ad7712e7bc297ab77f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c62140e826a5cda62b49ad7712e7bc297ab77f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c62140e826a5cda62b49ad7712e7bc297ab77f6"}], "stats": {"total": 42, "additions": 15, "deletions": 27}, "files": [{"sha": "5e186ec1ca4d867bf5e4b5516adc9431a8366d08", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9daf13c9350cc02c120971a472092d474d63e8f/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9daf13c9350cc02c120971a472092d474d63e8f/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=b9daf13c9350cc02c120971a472092d474d63e8f", "patch": "@@ -2298,9 +2298,8 @@ package body Exp_Util is\n                   --  Generate:\n                   --    <Comp_Typ>Invariant (_object (<Indices>));\n \n-                  --  Note that the invariant procedure may have a null body if\n-                  --  assertions are disabled or Assertion_Policy Ignore is in\n-                  --  effect.\n+                  --  The invariant procedure has a null body if assertions are\n+                  --  disabled or Assertion_Policy Ignore is in effect.\n \n                   if not Has_Null_Body (Proc_Id) then\n                      Append_New_To (Comp_Checks,\n@@ -9360,19 +9359,22 @@ package body Exp_Util is\n    function Make_Invariant_Call (Expr : Node_Id) return Node_Id is\n       Loc : constant Source_Ptr := Sloc (Expr);\n       Typ : constant Entity_Id  := Base_Type (Etype (Expr));\n-\n-      Proc_Id : Entity_Id;\n-\n-   begin\n       pragma Assert (Has_Invariants (Typ));\n-\n-      Proc_Id := Invariant_Procedure (Typ);\n+      Proc_Id : constant Entity_Id := Invariant_Procedure (Typ);\n       pragma Assert (Present (Proc_Id));\n+   begin\n+      --  The invariant procedure has a null body if assertions are disabled or\n+      --  Assertion_Policy Ignore is in effect. In that case, generate a null\n+      --  statement instead of a call to the invariant procedure.\n \n-      return\n-        Make_Procedure_Call_Statement (Loc,\n-          Name                   => New_Occurrence_Of (Proc_Id, Loc),\n-          Parameter_Associations => New_List (Relocate_Node (Expr)));\n+      if Has_Null_Body (Proc_Id) then\n+         return Make_Null_Statement (Loc);\n+      else\n+         return\n+           Make_Procedure_Call_Statement (Loc,\n+             Name                   => New_Occurrence_Of (Proc_Id, Loc),\n+             Parameter_Associations => New_List (Relocate_Node (Expr)));\n+      end if;\n    end Make_Invariant_Call;\n \n    ------------------------"}, {"sha": "d05b8fe2a8dadd84fccd790e895d0d0e74f7f6d2", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9daf13c9350cc02c120971a472092d474d63e8f/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9daf13c9350cc02c120971a472092d474d63e8f/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=b9daf13c9350cc02c120971a472092d474d63e8f", "patch": "@@ -18607,20 +18607,6 @@ package body Sem_Prag is\n                return;\n             end if;\n \n-            --  If invariants should be ignored, delete the pragma and then\n-            --  return. We do this here, after checking for errors, and before\n-            --  generating anything that has a run-time effect.\n-\n-            if Present (Check_Policy_List)\n-              and then\n-                (Policy_In_Effect (Name_Invariant) = Name_Ignore\n-                   and then\n-                 Policy_In_Effect (Name_Type_Invariant) = Name_Ignore)\n-            then\n-               Rewrite (N, Make_Null_Statement (Loc));\n-               return;\n-            end if;\n-\n             --  A pragma that applies to a Ghost entity becomes Ghost for the\n             --  purposes of legality checks and removal of ignored Ghost code.\n "}]}