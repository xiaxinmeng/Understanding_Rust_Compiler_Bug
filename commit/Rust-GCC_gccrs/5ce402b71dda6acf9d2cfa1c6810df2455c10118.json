{"sha": "5ce402b71dda6acf9d2cfa1c6810df2455c10118", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNlNDAyYjcxZGRhNmFjZjlkMmNmYTFjNjgxMGRmMjQ1NWMxMDExOA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-11-10T15:27:21Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-11-10T15:27:21Z"}, "message": "Don't test, define or undef _VA_LIST_ on NET 2 systems.  Don't include ansi.h.\n\nFrom-SVN: r2736", "tree": {"sha": "b8d9fb717bd9444399b3fea331f6ed9e791f53b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8d9fb717bd9444399b3fea331f6ed9e791f53b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ce402b71dda6acf9d2cfa1c6810df2455c10118", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ce402b71dda6acf9d2cfa1c6810df2455c10118", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ce402b71dda6acf9d2cfa1c6810df2455c10118", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ce402b71dda6acf9d2cfa1c6810df2455c10118/comments", "author": null, "committer": null, "parents": [{"sha": "ca2ece1b4542c4e2d38c83a5b0e2fde7b7717f96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca2ece1b4542c4e2d38c83a5b0e2fde7b7717f96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca2ece1b4542c4e2d38c83a5b0e2fde7b7717f96"}], "stats": {"total": 58, "additions": 14, "deletions": 44}, "files": [{"sha": "4ee9bb9ae6c07bbd1bdf8c9454a29f8e738d19ca", "filename": "gcc/ginclude/stdarg.h", "status": "modified", "additions": 7, "deletions": 22, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ce402b71dda6acf9d2cfa1c6810df2455c10118/gcc%2Fginclude%2Fstdarg.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ce402b71dda6acf9d2cfa1c6810df2455c10118/gcc%2Fginclude%2Fstdarg.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fstdarg.h?ref=5ce402b71dda6acf9d2cfa1c6810df2455c10118", "patch": "@@ -105,36 +105,21 @@ typedef __gnuc_va_list va_list;\n #endif /* _VA_LIST_ */\n #else /* not __SVR4_2__ */\n \n-/* On 4.3bsd-net2, make sure ansi.h is included, so we have\n-   one less case to deal with in the following.  */\n-#if defined (__BSD_NET2__) || defined (____386BSD____)\n-#include <ansi.h>\n-#endif\n-\n-/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which remain\n-   defined as long as the corresponding type is *not* defined.  */\n-#ifdef _ANSI_H_\n-#ifndef _VA_LIST_\n-#define _VA_LIST\n-#endif\n-#undef _VA_LIST_\n-#endif /* _ANSI_H_ */\n-\n-/* The macro _VA_LIST_ is the same thing used by this file in Ultrix.  */\n-#ifndef _VA_LIST_\n+/* The macro _VA_LIST_ is the same thing used by this file in Ultrix.\n+   But on BSD NET2 we must not test or define or undef it.\n+   (Note that the comments in NET 2's ansi.h\n+   are incorrect for _VA_LIST_--see stdio.h!)  */\n+#if !defined (_VA_LIST_) || defined (__BSD_NET2__) || defined (____386BSD____)\n /* The macro _VA_LIST is used in SCO Unix 3.2.  */\n #ifndef _VA_LIST\n+#if !(defined (__BSD_NET2__) || defined (____386BSD____))\n #define _VA_LIST_\n+#endif\n #define _VA_LIST\n typedef __gnuc_va_list va_list;\n #endif /* not _VA_LIST */\n #endif /* not _VA_LIST_ */\n \n-/* On 4.3bsd-net2, leave _VA_LIST_ undef to indicate va_list is defined.  */\n-#ifdef _ANSI_H_\n-#undef _VA_LIST_\n-#endif\n-\n #endif /* not __SVR4_2__ */\n \n #endif /* _STDARG_H */"}, {"sha": "b04dced5a79f07464172442d8b2ec2a4be710db8", "filename": "gcc/ginclude/varargs.h", "status": "modified", "additions": 7, "deletions": 22, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ce402b71dda6acf9d2cfa1c6810df2455c10118/gcc%2Fginclude%2Fvarargs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ce402b71dda6acf9d2cfa1c6810df2455c10118/gcc%2Fginclude%2Fvarargs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fvarargs.h?ref=5ce402b71dda6acf9d2cfa1c6810df2455c10118", "patch": "@@ -119,38 +119,23 @@ typedef __gnuc_va_list va_list;\n \n #else /* not __SVR4_2__ */\n \n-/* On 4.3bsd-net2, make sure ansi.h is included, so we have\n-   one less case to deal with in the following.  */\n-#if defined (__BSD_NET2__) || defined (____386BSD____)\n-#include <ansi.h>\n-#endif\n-\n-/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which remain\n-   defined as long as the corresponding type is *not* defined.  */\n-#ifdef _ANSI_H_\n-#ifndef _VA_LIST_\n-#define _VA_LIST\n-#endif\n-#undef _VA_LIST_\n-#endif /* _ANSI_H_ */\n-\n-/* The macro _VA_LIST_ is the same thing used by this file in Ultrix.  */\n-#ifndef _VA_LIST_\n+/* The macro _VA_LIST_ is the same thing used by this file in Ultrix.\n+   But on BSD NET2 we must not test or define or undef it.\n+   (Note that the comments in NET 2's ansi.h\n+   are incorrect for _VA_LIST_--see stdio.h!)  */\n+#if !defined (_VA_LIST_) || defined (__BSD_NET2__) || defined (____386BSD____)\n /* The macro _VA_LIST is used in SCO Unix 3.2.  */\n #ifndef _VA_LIST\n+#if !(defined (__BSD_NET2__) || defined (____386BSD____))\n #define _VA_LIST_\n+#endif\n #define _VA_LIST\n typedef __gnuc_va_list va_list;\n #endif /* not _VA_LIST */\n #endif /* not _VA_LIST_ */\n \n #endif /* not __SVR4_2__ */\n \n-/* On 4.3bsd-net2, leave _VA_LIST_ undef to indicate va_list is defined.  */\n-#ifdef _ANSI_H_\n-#undef _VA_LIST_\n-#endif\n-\n /* The next BSD release (if there is one) wants this symbol to be\n    undefined instead of _VA_LIST_.  */\n #ifdef _BSD_VA_LIST"}]}