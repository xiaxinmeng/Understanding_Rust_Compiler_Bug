{"sha": "c55f9f781b18b97847ca19703b37a57ca9b785d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU1ZjlmNzgxYjE4Yjk3ODQ3Y2ExOTcwM2IzN2E1N2NhOWI3ODVkNQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-11-19T21:48:21Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-11-19T21:48:21Z"}, "message": "1.cc: In the checks use...\n\n2004-11-19  Paolo Carlini  <pcarlini@suse.de>\n\n\t* testsuite/22_locale/time_get/get_date/char/1.cc: In the checks\n\tuse, more correctly (and consistently with other testcases) the\n\treturn value of the facet (the iterator arguments are by value).\n\t* testsuite/22_locale/time_get/get_date/char/12791.cc: Likewise.\n\t* testsuite/22_locale/time_get/get_date/wchar_t/1.cc: Likewise.\n\t* testsuite/22_locale/time_get/get_date/wchar_t/12791.cc: Likewise.\n\t* testsuite/22_locale/time_get/get_monthname/char/1.cc: Likewise.\n\t* testsuite/22_locale/time_get/get_monthname/wchar_t/1.cc: Likewise.\n\t* testsuite/22_locale/time_get/get_time/char/1.cc: Likewise.\n\t* testsuite/22_locale/time_get/get_time/wchar_t/1.cc: Likewise.\n\t* testsuite/22_locale/time_get/get_weekday/char/1.cc: Likewise.\n\t* testsuite/22_locale/time_get/get_weekday/wchar_t/1.cc: Likewise.\n\t* testsuite/22_locale/time_get/get_year/char/1.cc: Likewise.\n\t* testsuite/22_locale/time_get/get_year/wchar_t/1.cc: Likewise.\n\nFrom-SVN: r90938", "tree": {"sha": "30130e1bfffe2c4717a2519d26b1f27a0a686a22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30130e1bfffe2c4717a2519d26b1f27a0a686a22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c55f9f781b18b97847ca19703b37a57ca9b785d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c55f9f781b18b97847ca19703b37a57ca9b785d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c55f9f781b18b97847ca19703b37a57ca9b785d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c55f9f781b18b97847ca19703b37a57ca9b785d5/comments", "author": null, "committer": null, "parents": [{"sha": "79c70e5a6ceff0601129c2493a0041e34f4fda5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79c70e5a6ceff0601129c2493a0041e34f4fda5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79c70e5a6ceff0601129c2493a0041e34f4fda5b"}], "stats": {"total": 187, "additions": 119, "deletions": 68}, "files": [{"sha": "f8a62726657b3fc371bd4d4d8d0677e04aa3e0ad", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c55f9f781b18b97847ca19703b37a57ca9b785d5/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c55f9f781b18b97847ca19703b37a57ca9b785d5/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c55f9f781b18b97847ca19703b37a57ca9b785d5", "patch": "@@ -1,3 +1,20 @@\n+2004-11-19  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* testsuite/22_locale/time_get/get_date/char/1.cc: In the checks\n+\tuse, more correctly (and consistently with other testcases) the\n+\treturn value of the facet (the iterator arguments are by value).\n+\t* testsuite/22_locale/time_get/get_date/char/12791.cc: Likewise.\n+\t* testsuite/22_locale/time_get/get_date/wchar_t/1.cc: Likewise.\n+\t* testsuite/22_locale/time_get/get_date/wchar_t/12791.cc: Likewise.\n+\t* testsuite/22_locale/time_get/get_monthname/char/1.cc: Likewise.\n+\t* testsuite/22_locale/time_get/get_monthname/wchar_t/1.cc: Likewise.\n+\t* testsuite/22_locale/time_get/get_time/char/1.cc: Likewise.\n+\t* testsuite/22_locale/time_get/get_time/wchar_t/1.cc: Likewise.\n+\t* testsuite/22_locale/time_get/get_weekday/char/1.cc: Likewise.\n+\t* testsuite/22_locale/time_get/get_weekday/wchar_t/1.cc: Likewise.\n+\t* testsuite/22_locale/time_get/get_year/char/1.cc: Likewise.\n+\t* testsuite/22_locale/time_get/get_year/wchar_t/1.cc: Likewise.\n+\n 2004-11-19  Jonathan Wakely  <redi@gcc.gnu.org>\n \n \t* Makefile.am (doxygen, doxygen-maint, doxygen-man): Remove extra '$'"}, {"sha": "eaa9495b3f2620b0dcce2990cce0a953fede145a", "filename": "libstdc++-v3/testsuite/22_locale/time_get/get_date/char/1.cc", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c55f9f781b18b97847ca19703b37a57ca9b785d5/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_date%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c55f9f781b18b97847ca19703b37a57ca9b785d5/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_date%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_date%2Fchar%2F1.cc?ref=c55f9f781b18b97847ca19703b37a57ca9b785d5", "patch": "@@ -67,24 +67,26 @@ void test01()\n   iterator_type is_it02(iss);\n   tm time02;\n   errorstate = good;\n-  tim_get.get_date(is_it02, end, iss, errorstate, &time02);\n+  iterator_type ret02 = tim_get.get_date(is_it02, end, iss, errorstate,\n+\t\t\t\t\t &time02);\n   VERIFY( time02.tm_year == time_bday.tm_year );\n   VERIFY( time02.tm_mon == time_bday.tm_mon );\n   VERIFY( time02.tm_mday == time_bday.tm_mday );\n   VERIFY( errorstate == good );\n-  VERIFY( *is_it02 == ' ');\n+  VERIFY( *ret02 == ' ' );\n \n   iss.str(\"04/04d/71 \");\n   iterator_type is_it03(iss);\n   tm time03;\n   time03.tm_year = 3;\n   errorstate = good;\n-  tim_get.get_date(is_it03, end, iss, errorstate, &time03);\n+  iterator_type ret03 = tim_get.get_date(is_it03, end, iss, errorstate,\n+\t\t\t\t\t &time03);\n   VERIFY( time03.tm_year == 3 );\n   VERIFY( time03.tm_mon == time_bday.tm_mon );\n   VERIFY( time03.tm_mday == time_bday.tm_mday );\n   VERIFY( errorstate == ios_base::failbit );\n-  VERIFY( *is_it03 == 'd');\n+  VERIFY( *ret03 == 'd' );\n }\n \n int main()"}, {"sha": "7a9f26d2d96c039f68e0c0bef907f2153be145c1", "filename": "libstdc++-v3/testsuite/22_locale/time_get/get_date/char/12791.cc", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c55f9f781b18b97847ca19703b37a57ca9b785d5/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_date%2Fchar%2F12791.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c55f9f781b18b97847ca19703b37a57ca9b785d5/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_date%2Fchar%2F12791.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_date%2Fchar%2F12791.cc?ref=c55f9f781b18b97847ca19703b37a57ca9b785d5", "patch": "@@ -1,6 +1,6 @@\n // 2003-12-03  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2003 Free Software Foundation\n+// Copyright (C) 2003, 2004 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -45,17 +45,19 @@ void test01()\n   iterator_type is_it01(iss);\n   tm time01;\n   errorstate = good;\n-  tim_get.get_date(is_it01, end, iss, errorstate, &time01);\n+  iterator_type ret01 = tim_get.get_date(is_it01, end, iss, errorstate,\n+\t\t\t\t\t &time01);\n   VERIFY( errorstate == ios_base::failbit );\n-  VERIFY( *is_it01 == '6' );\n+  VERIFY( *ret01 == '6' );\n \n   iss.str(\"04/38/71\");\n   iterator_type is_it02(iss);\n   tm time02;\n   errorstate = good;\n-  tim_get.get_date(is_it02, end, iss, errorstate, &time02);\n+  iterator_type ret02 = tim_get.get_date(is_it02, end, iss, errorstate,\n+\t\t\t\t\t &time02);\n   VERIFY( errorstate == ios_base::failbit );\n-  VERIFY( *is_it02 == '8' );\n+  VERIFY( *ret02 == '8' );\n }\n \n int main()"}, {"sha": "d6d5c8a040f634366c3311a4ea3b1acc6a3af491", "filename": "libstdc++-v3/testsuite/22_locale/time_get/get_date/wchar_t/1.cc", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c55f9f781b18b97847ca19703b37a57ca9b785d5/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_date%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c55f9f781b18b97847ca19703b37a57ca9b785d5/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_date%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_date%2Fwchar_t%2F1.cc?ref=c55f9f781b18b97847ca19703b37a57ca9b785d5", "patch": "@@ -41,7 +41,8 @@ void test01()\n \n   wistringstream iss;\n   iss.imbue(loc_c);\n-  const time_get<wchar_t>& tim_get = use_facet<time_get<wchar_t> >(iss.getloc()); \n+  const time_get<wchar_t>& tim_get =\n+    use_facet<time_get<wchar_t> >(iss.getloc()); \n \n   const ios_base::iostate good = ios_base::goodbit;\n   ios_base::iostate errorstate = good;\n@@ -67,24 +68,26 @@ void test01()\n   iterator_type is_it02(iss);\n   tm time02;\n   errorstate = good;\n-  tim_get.get_date(is_it02, end, iss, errorstate, &time02);\n+  iterator_type ret02 = tim_get.get_date(is_it02, end, iss, errorstate,\n+\t\t\t\t\t &time02);\n   VERIFY( time02.tm_year == time_bday.tm_year );\n   VERIFY( time02.tm_mon == time_bday.tm_mon );\n   VERIFY( time02.tm_mday == time_bday.tm_mday );\n   VERIFY( errorstate == good );\n-  VERIFY( *is_it02 == L' ' );\n+  VERIFY( *ret02 == L' ' );\n \n   iss.str(L\"04/04d/71 \");\n   iterator_type is_it03(iss);\n   tm time03;\n   time03.tm_year = 3;\n   errorstate = good;\n-  tim_get.get_date(is_it03, end, iss, errorstate, &time03);\n+  iterator_type ret03 = tim_get.get_date(is_it03, end, iss, errorstate,\n+\t\t\t\t\t &time03);\n   VERIFY( time03.tm_year == 3 );\n   VERIFY( time03.tm_mon == time_bday.tm_mon );\n   VERIFY( time03.tm_mday == time_bday.tm_mday );\n   VERIFY( errorstate == ios_base::failbit );\n-  VERIFY( *is_it03 == L'd' );\n+  VERIFY( *ret03 == L'd' );\n }\n \n int main()"}, {"sha": "1a63a0d625b2c8a5bd26349870e5a52236d68138", "filename": "libstdc++-v3/testsuite/22_locale/time_get/get_date/wchar_t/12791.cc", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c55f9f781b18b97847ca19703b37a57ca9b785d5/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_date%2Fwchar_t%2F12791.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c55f9f781b18b97847ca19703b37a57ca9b785d5/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_date%2Fwchar_t%2F12791.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_date%2Fwchar_t%2F12791.cc?ref=c55f9f781b18b97847ca19703b37a57ca9b785d5", "patch": "@@ -1,6 +1,6 @@\n // 2003-12-03  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2003 Free Software Foundation\n+// Copyright (C) 2003, 2004 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -36,7 +36,8 @@ void test01()\n   iterator_type end;\n \n   wistringstream iss;\n-  const time_get<wchar_t>& tim_get = use_facet<time_get<wchar_t> >(iss.getloc()); \n+  const time_get<wchar_t>& tim_get =\n+    use_facet<time_get<wchar_t> >(iss.getloc()); \n \n   const ios_base::iostate good = ios_base::goodbit;\n   ios_base::iostate errorstate = good;\n@@ -45,17 +46,19 @@ void test01()\n   iterator_type is_it01(iss);\n   tm time01;\n   errorstate = good;\n-  tim_get.get_date(is_it01, end, iss, errorstate, &time01);\n+  iterator_type ret01 = tim_get.get_date(is_it01, end, iss, errorstate,\n+\t\t\t\t\t &time01);\n   VERIFY( errorstate == ios_base::failbit );\n-  VERIFY( *is_it01 == L'6' );\n+  VERIFY( *ret01 == L'6' );\n \n   iss.str(L\"04/38/71\");\n   iterator_type is_it02(iss);\n   tm time02;\n   errorstate = good;\n-  tim_get.get_date(is_it02, end, iss, errorstate, &time02);\n+  iterator_type ret02 = tim_get.get_date(is_it02, end, iss, errorstate,\n+\t\t\t\t\t &time02);\n   VERIFY( errorstate == ios_base::failbit );\n-  VERIFY( *is_it02 == L'8' );\n+  VERIFY( *ret02 == L'8' );\n }\n \n int main()"}, {"sha": "5de1464dc7a56aa83ce95fab12a0170004885a23", "filename": "libstdc++-v3/testsuite/22_locale/time_get/get_monthname/char/1.cc", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c55f9f781b18b97847ca19703b37a57ca9b785d5/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_monthname%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c55f9f781b18b97847ca19703b37a57ca9b785d5/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_monthname%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_monthname%2Fchar%2F1.cc?ref=c55f9f781b18b97847ca19703b37a57ca9b785d5", "patch": "@@ -70,39 +70,43 @@ void test01()\n   iterator_type is_it03(iss);\n   tm time03;\n   errorstate = good;\n-  tim_get.get_monthname(is_it03, end, iss, errorstate, &time03);\n+  iterator_type ret03 = tim_get.get_monthname(is_it03, end, iss, errorstate,\n+\t\t\t\t\t     &time03);\n   VERIFY( time03.tm_mon == time_bday.tm_mon );\n   VERIFY( errorstate == good );\n-  VERIFY( *is_it03 == ' ');\n+  VERIFY( *ret03 == ' ' );\n \n   iss.str(\"Aar\");\n   iterator_type is_it04(iss);\n   tm time04;\n   time04.tm_mon = 5;\n   errorstate = good;\n-  tim_get.get_monthname(is_it04, end, iss, errorstate, &time04);\n+  iterator_type ret04 = tim_get.get_monthname(is_it04, end, iss, errorstate,\n+\t\t\t\t\t      &time04);\n   VERIFY( time04.tm_mon == 5 );\n-  VERIFY( *is_it04 == 'a');\n+  VERIFY( *ret04 == 'a' );\n   VERIFY( errorstate == ios_base::failbit );\n \n   iss.str(\"December \");\n   iterator_type is_it05(iss);\n   tm time05;\n   errorstate = good;\n-  tim_get.get_monthname(is_it05, end, iss, errorstate, &time05);\n+  iterator_type ret05 = tim_get.get_monthname(is_it05, end, iss, errorstate,\n+\t\t\t\t\t      &time05);\n   VERIFY( time05.tm_mon == 11 );\n   VERIFY( errorstate == good );\n-  VERIFY( *is_it05 == ' ');\n+  VERIFY( *ret05 == ' ' );\n \n   iss.str(\"Decelember \"); \n   iterator_type is_it06(iss);\n   tm time06;\n   time06.tm_mon = 4;\n   errorstate = good;\n-  tim_get.get_monthname(is_it06, end, iss, errorstate, &time06);\n+  iterator_type ret06 = tim_get.get_monthname(is_it06, end, iss, errorstate,\n+\t\t\t\t\t      &time06);\n   VERIFY( time06.tm_mon == 4 );\n   VERIFY( errorstate == ios_base::failbit );\n-  VERIFY( *is_it06 == 'l');\n+  VERIFY( *ret06 == 'l' );\n }\n \n int main()"}, {"sha": "0c97e6475ad8930443874fca198c2a1c37add2c1", "filename": "libstdc++-v3/testsuite/22_locale/time_get/get_monthname/wchar_t/1.cc", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c55f9f781b18b97847ca19703b37a57ca9b785d5/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_monthname%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c55f9f781b18b97847ca19703b37a57ca9b785d5/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_monthname%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_monthname%2Fwchar_t%2F1.cc?ref=c55f9f781b18b97847ca19703b37a57ca9b785d5", "patch": "@@ -70,39 +70,43 @@ void test01()\n   iterator_type is_it03(iss);\n   tm time03;\n   errorstate = good;\n-  tim_get.get_monthname(is_it03, end, iss, errorstate, &time03);\n+  iterator_type ret03 = tim_get.get_monthname(is_it03, end, iss, errorstate,\n+\t\t\t\t\t      &time03);\n   VERIFY( time03.tm_mon == time_bday.tm_mon );\n   VERIFY( errorstate == good );\n-  VERIFY( *is_it03 == L' ' );\n+  VERIFY( *ret03 == L' ' );\n \n   iss.str(L\"Aar\");\n   iterator_type is_it04(iss);\n   tm time04;\n   time04.tm_mon = 5;\n   errorstate = good;\n-  tim_get.get_monthname(is_it04, end, iss, errorstate, &time04);\n+  iterator_type ret04 = tim_get.get_monthname(is_it04, end, iss, errorstate,\n+\t\t\t\t\t      &time04);\n   VERIFY( time04.tm_mon == 5 );\n-  VERIFY( *is_it04 == L'a' );\n+  VERIFY( *ret04 == L'a' );\n   VERIFY( errorstate == ios_base::failbit );\n \n   iss.str(L\"December \");\n   iterator_type is_it05(iss);\n   tm time05;\n   errorstate = good;\n-  tim_get.get_monthname(is_it05, end, iss, errorstate, &time05);\n+  iterator_type ret05 = tim_get.get_monthname(is_it05, end, iss, errorstate,\n+\t\t\t\t\t      &time05);\n   VERIFY( time05.tm_mon == 11 );\n   VERIFY( errorstate == good );\n-  VERIFY( *is_it05 == L' ' );\n+  VERIFY( *ret05 == L' ' );\n \n   iss.str(L\"Decelember \"); \n   iterator_type is_it06(iss);\n   tm time06;\n   time06.tm_mon = 4;\n   errorstate = good;\n-  tim_get.get_monthname(is_it06, end, iss, errorstate, &time06);\n+  iterator_type ret06 = tim_get.get_monthname(is_it06, end, iss, errorstate,\n+\t\t\t\t\t      &time06);\n   VERIFY( time06.tm_mon == 4 );\n   VERIFY( errorstate == ios_base::failbit );\n-  VERIFY( *is_it06 == L'l' );\n+  VERIFY( *ret06 == L'l' );\n }\n \n int main()"}, {"sha": "a06b6bbbee5785318afac5abc0db71618204bc66", "filename": "libstdc++-v3/testsuite/22_locale/time_get/get_time/char/1.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c55f9f781b18b97847ca19703b37a57ca9b785d5/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_time%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c55f9f781b18b97847ca19703b37a57ca9b785d5/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_time%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_time%2Fchar%2F1.cc?ref=c55f9f781b18b97847ca19703b37a57ca9b785d5", "patch": "@@ -87,9 +87,10 @@ void test01()\n   iterator_type is_it04(iss);\n   tm time04;\n   errorstate = good;\n-  tim_get.get_time(is_it04, end, iss, errorstate, &time04);\n+  iterator_type ret04 = tim_get.get_time(is_it04, end, iss, errorstate,\n+\t\t\t\t\t &time04);\n   VERIFY( time01.tm_hour == time_bday.tm_hour );\n-  VERIFY( *is_it04 == 'a');\n+  VERIFY( *ret04 == 'a' );\n   VERIFY( errorstate == ios_base::failbit );\n \n   // inspection of named locales, de_DE"}, {"sha": "4e7137ed6a5eb8b0683a4efbc5c4974b2813384d", "filename": "libstdc++-v3/testsuite/22_locale/time_get/get_time/wchar_t/1.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c55f9f781b18b97847ca19703b37a57ca9b785d5/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_time%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c55f9f781b18b97847ca19703b37a57ca9b785d5/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_time%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_time%2Fwchar_t%2F1.cc?ref=c55f9f781b18b97847ca19703b37a57ca9b785d5", "patch": "@@ -87,9 +87,10 @@ void test01()\n   iterator_type is_it04(iss);\n   tm time04;\n   errorstate = good;\n-  tim_get.get_time(is_it04, end, iss, errorstate, &time04);\n+  iterator_type ret04 = tim_get.get_time(is_it04, end, iss, errorstate,\n+\t\t\t\t\t &time04);\n   VERIFY( time01.tm_hour == time_bday.tm_hour );\n-  VERIFY( *is_it04 == L'a' );\n+  VERIFY( *ret04 == L'a' );\n   VERIFY( errorstate == ios_base::failbit );\n \n   // inspection of named locales, de_DE"}, {"sha": "9141208754a7a971be3f63ccf84d3f7c3b43bc60", "filename": "libstdc++-v3/testsuite/22_locale/time_get/get_weekday/char/1.cc", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c55f9f781b18b97847ca19703b37a57ca9b785d5/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_weekday%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c55f9f781b18b97847ca19703b37a57ca9b785d5/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_weekday%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_weekday%2Fchar%2F1.cc?ref=c55f9f781b18b97847ca19703b37a57ca9b785d5", "patch": "@@ -74,39 +74,43 @@ void test01()\n   iterator_type is_it03(iss);\n   tm time03;\n   errorstate = good;\n-  tim_get.get_weekday(is_it03, end, iss, errorstate, &time03);\n+  iterator_type ret03 = tim_get.get_weekday(is_it03, end, iss, errorstate,\n+\t\t\t\t\t    &time03);\n   VERIFY( time03.tm_wday == time_bday.tm_wday );\n   VERIFY( errorstate == good );\n-  VERIFY( *is_it03 == ' ');\n+  VERIFY( *ret03 == ' ' );\n \n   iss.str(\"San\");\n   iterator_type is_it04(iss);\n   tm time04;\n   time04.tm_wday = 4;\n   errorstate = good;\n-  tim_get.get_weekday(is_it04, end, iss, errorstate, &time04);\n+  iterator_type ret04 = tim_get.get_weekday(is_it04, end, iss, errorstate,\n+\t\t\t\t\t    &time04);\n   VERIFY( time04.tm_wday == 4 );\n-  VERIFY( *is_it04 == 'n');\n+  VERIFY( *ret04 == 'n' );\n   VERIFY( errorstate == ios_base::failbit );\n \n   iss.str(\"Tuesday \");\n   iterator_type is_it05(iss);\n   tm time05;\n   errorstate = good;\n-  tim_get.get_weekday(is_it05, end, iss, errorstate, &time05);\n+  iterator_type ret05 = tim_get.get_weekday(is_it05, end, iss, errorstate,\n+\t\t\t\t\t    &time05);\n   VERIFY( time05.tm_wday == 2 );\n   VERIFY( errorstate == good );\n-  VERIFY( *is_it05 == ' ');\n+  VERIFY( *ret05 == ' ' );\n \n   iss.str(\"Tuesducky \"); // Kind of like Fryday, without the swirls.\n   iterator_type is_it06(iss);\n   tm time06;\n   time06.tm_wday = 4;\n   errorstate = good;\n-  tim_get.get_weekday(is_it06, end, iss, errorstate, &time06);\n+  iterator_type ret06 = tim_get.get_weekday(is_it06, end, iss, errorstate,\n+\t\t\t\t\t    &time06);\n   VERIFY( time06.tm_wday == 4 );\n   VERIFY( errorstate == ios_base::failbit );\n-  VERIFY( *is_it06 == 'u');\n+  VERIFY( *ret06 == 'u' );\n }\n \n int main()"}, {"sha": "76555aeb0173c0a71e77486d6cc582f25d62e0fd", "filename": "libstdc++-v3/testsuite/22_locale/time_get/get_weekday/wchar_t/1.cc", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c55f9f781b18b97847ca19703b37a57ca9b785d5/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_weekday%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c55f9f781b18b97847ca19703b37a57ca9b785d5/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_weekday%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_weekday%2Fwchar_t%2F1.cc?ref=c55f9f781b18b97847ca19703b37a57ca9b785d5", "patch": "@@ -74,39 +74,43 @@ void test01()\n   iterator_type is_it03(iss);\n   tm time03;\n   errorstate = good;\n-  tim_get.get_weekday(is_it03, end, iss, errorstate, &time03);\n+  iterator_type ret03 = tim_get.get_weekday(is_it03, end, iss, errorstate,\n+\t\t\t\t\t    &time03);\n   VERIFY( time03.tm_wday == time_bday.tm_wday );\n   VERIFY( errorstate == good );\n-  VERIFY( *is_it03 == L' ' );\n+  VERIFY( *ret03 == L' ' );\n \n   iss.str(L\"San\");\n   iterator_type is_it04(iss);\n   tm time04;\n   time04.tm_wday = 4;\n   errorstate = good;\n-  tim_get.get_weekday(is_it04, end, iss, errorstate, &time04);\n+  iterator_type ret04 = tim_get.get_weekday(is_it04, end, iss, errorstate,\n+\t\t\t\t\t    &time04);\n   VERIFY( time04.tm_wday == 4 );\n-  VERIFY( *is_it04 == L'n' );\n+  VERIFY( *ret04 == L'n' );\n   VERIFY( errorstate == ios_base::failbit );\n \n   iss.str(L\"Tuesday \");\n   iterator_type is_it05(iss);\n   tm time05;\n   errorstate = good;\n-  tim_get.get_weekday(is_it05, end, iss, errorstate, &time05);\n+  iterator_type ret05 = tim_get.get_weekday(is_it05, end, iss, errorstate,\n+\t\t\t\t\t    &time05);\n   VERIFY( time05.tm_wday == 2 );\n   VERIFY( errorstate == good );\n-  VERIFY( *is_it05 == L' ' );\n+  VERIFY( *ret05 == L' ' );\n \n   iss.str(L\"Tuesducky \"); // Kind of like Fryday, without the swirls.\n   iterator_type is_it06(iss);\n   tm time06;\n   time06.tm_wday = 4;\n   errorstate = good;\n-  tim_get.get_weekday(is_it06, end, iss, errorstate, &time06);\n+  iterator_type ret06 = tim_get.get_weekday(is_it06, end, iss, errorstate,\n+\t\t\t\t\t    &time06);\n   VERIFY( time06.tm_wday == 4 );\n   VERIFY( errorstate == ios_base::failbit );\n-  VERIFY( *is_it06 == L'u' );\n+  VERIFY( *ret06 == L'u' );\n }\n \n int main()"}, {"sha": "98c009c776f70264c97c8e67d9394e64b25b7c48", "filename": "libstdc++-v3/testsuite/22_locale/time_get/get_year/char/1.cc", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c55f9f781b18b97847ca19703b37a57ca9b785d5/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_year%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c55f9f781b18b97847ca19703b37a57ca9b785d5/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_year%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_year%2Fchar%2F1.cc?ref=c55f9f781b18b97847ca19703b37a57ca9b785d5", "patch": "@@ -65,29 +65,32 @@ void test01()\n   iterator_type is_it02(iss);\n   tm time02;\n   errorstate = good;\n-  tim_get.get_year(is_it02, end, iss, errorstate, &time02);\n+  iterator_type ret02 = tim_get.get_year(is_it02, end, iss, errorstate,\n+\t\t\t\t\t &time02);\n   VERIFY( time02.tm_year == time_bday.tm_year );\n   VERIFY( errorstate == good );\n-  VERIFY( *is_it02 == ' ');\n+  VERIFY( *ret02 == ' ' );\n \n   iss.str(\"197d1 \");\n   iterator_type is_it03(iss);\n   tm time03;\n   time03.tm_year = 3;\n   errorstate = good;\n-  tim_get.get_year(is_it03, end, iss, errorstate, &time03);\n+  iterator_type ret03 = tim_get.get_year(is_it03, end, iss, errorstate,\n+\t\t\t\t\t &time03);\n   VERIFY( time03.tm_year == 3 );\n   VERIFY( errorstate == ios_base::failbit );\n-  VERIFY( *is_it03 == 'd');\n+  VERIFY( *ret03 == 'd' );\n \n   iss.str(\"71d71\");\n   iterator_type is_it04(iss);\n   tm time04;\n   errorstate = good;\n-  tim_get.get_year(is_it04, end, iss, errorstate, &time04);\n+  iterator_type ret04 = tim_get.get_year(is_it04, end, iss, errorstate,\n+\t\t\t\t\t &time04);\n   VERIFY( time04.tm_year == time_bday.tm_year );\n   VERIFY( errorstate == good );\n-  VERIFY( *is_it03 == 'd');\n+  VERIFY( *ret04 == 'd' );\n \n   iss.str(\"71\");\n   iterator_type is_it05(iss);"}, {"sha": "876e57be83a4d1b3c774ed71b63fe8e79dcd9601", "filename": "libstdc++-v3/testsuite/22_locale/time_get/get_year/wchar_t/1.cc", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c55f9f781b18b97847ca19703b37a57ca9b785d5/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_year%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c55f9f781b18b97847ca19703b37a57ca9b785d5/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_year%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_year%2Fwchar_t%2F1.cc?ref=c55f9f781b18b97847ca19703b37a57ca9b785d5", "patch": "@@ -65,29 +65,32 @@ void test01()\n   iterator_type is_it02(iss);\n   tm time02;\n   errorstate = good;\n-  tim_get.get_year(is_it02, end, iss, errorstate, &time02);\n+  iterator_type ret02 = tim_get.get_year(is_it02, end, iss, errorstate,\n+\t\t\t\t\t &time02);\n   VERIFY( time02.tm_year == time_bday.tm_year );\n   VERIFY( errorstate == good );\n-  VERIFY( *is_it02 == L' ' );\n+  VERIFY( *ret02 == L' ' );\n \n   iss.str(L\"197d1 \");\n   iterator_type is_it03(iss);\n   tm time03;\n   time03.tm_year = 3;\n   errorstate = good;\n-  tim_get.get_year(is_it03, end, iss, errorstate, &time03);\n+  iterator_type ret03 = tim_get.get_year(is_it03, end, iss, errorstate,\n+\t\t\t\t\t &time03);\n   VERIFY( time03.tm_year == 3 );\n   VERIFY( errorstate == ios_base::failbit );\n-  VERIFY( *is_it03 == L'd' );\n+  VERIFY( *ret03 == L'd' );\n \n   iss.str(L\"71d71\");\n   iterator_type is_it04(iss);\n   tm time04;\n   errorstate = good;\n-  tim_get.get_year(is_it04, end, iss, errorstate, &time04);\n+  iterator_type ret04 = tim_get.get_year(is_it04, end, iss, errorstate,\n+\t\t\t\t\t &time04);\n   VERIFY( time04.tm_year == time_bday.tm_year );\n   VERIFY( errorstate == good );\n-  VERIFY( *is_it03 == L'd' );\n+  VERIFY( *ret04 == L'd' );\n \n   iss.str(L\"71\");\n   iterator_type is_it05(iss);"}]}