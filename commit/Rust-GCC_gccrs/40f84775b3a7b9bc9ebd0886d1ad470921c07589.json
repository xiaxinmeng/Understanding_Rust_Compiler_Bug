{"sha": "40f84775b3a7b9bc9ebd0886d1ad470921c07589", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDBmODQ3NzViM2E3YjliYzllYmQwODg2ZDFhZDQ3MDkyMWMwNzU4OQ==", "commit": {"author": {"name": "James A. Morrison", "email": "phython@gcc.gnu.org", "date": "2005-02-15T21:58:21Z"}, "committer": {"name": "James A. Morrison", "email": "phython@gcc.gnu.org", "date": "2005-02-15T21:58:21Z"}, "message": "fold-const.c (fold): Fold -(~A) to A + 1.\n\n2005-02-15  James A. Morrison  <phython@gcc.gnu.org>\n\n        * fold-const.c (fold): Fold -(~A) to A + 1.  Fold ~(-A) to A - 1.\n        Fold ~(A - 1) and ~(A + -1) to -A.\n\nFrom-SVN: r95074", "tree": {"sha": "0738a0f6031b2fb475ab674da3644b67dcb22345", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0738a0f6031b2fb475ab674da3644b67dcb22345"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40f84775b3a7b9bc9ebd0886d1ad470921c07589", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40f84775b3a7b9bc9ebd0886d1ad470921c07589", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40f84775b3a7b9bc9ebd0886d1ad470921c07589", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40f84775b3a7b9bc9ebd0886d1ad470921c07589/comments", "author": null, "committer": null, "parents": [{"sha": "14be52a22cda9918524fa0e4b6bb14ac1c466fdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14be52a22cda9918524fa0e4b6bb14ac1c466fdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14be52a22cda9918524fa0e4b6bb14ac1c466fdd"}], "stats": {"total": 67, "additions": 67, "deletions": 0}, "files": [{"sha": "a3b955e363e81dc22214516d320b882fc7b08135", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40f84775b3a7b9bc9ebd0886d1ad470921c07589/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40f84775b3a7b9bc9ebd0886d1ad470921c07589/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=40f84775b3a7b9bc9ebd0886d1ad470921c07589", "patch": "@@ -1,3 +1,8 @@\n+2005-02-15  James A. Morrison  <phython@gcc.gnu.org>\n+\n+\t* fold-const.c (fold): Fold -(~A) to A + 1.  Fold ~(-A) to A - 1.\n+\tFold ~(A - 1) and ~(A + -1) to -A.\n+\n 2005-02-15  James A. Morrison  <phython@gcc.gnu.org>\n \n \tPR pch/14940"}, {"sha": "ef31a32f54ef63a2f4630f92195659cffadb5c4a", "filename": "gcc/fold-const.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40f84775b3a7b9bc9ebd0886d1ad470921c07589/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40f84775b3a7b9bc9ebd0886d1ad470921c07589/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=40f84775b3a7b9bc9ebd0886d1ad470921c07589", "patch": "@@ -6931,6 +6931,10 @@ fold (tree expr)\n     case NEGATE_EXPR:\n       if (negate_expr_p (arg0))\n \treturn fold_convert (type, negate_expr (arg0));\n+      /* Convert - (~A) to A + 1.  */\n+      if (INTEGRAL_TYPE_P (type) && TREE_CODE (arg0) == BIT_NOT_EXPR)\n+\treturn fold (build2 (PLUS_EXPR, type, TREE_OPERAND (arg0, 0),\n+\t\t\t     build_int_cst (type, 1)));\n       return t;\n \n     case ABS_EXPR:\n@@ -6985,6 +6989,17 @@ fold (tree expr)\n         return fold_not_const (arg0, type);\n       else if (TREE_CODE (arg0) == BIT_NOT_EXPR)\n \treturn TREE_OPERAND (arg0, 0);\n+      /* Convert ~ (-A) to A - 1.  */\n+      else if (INTEGRAL_TYPE_P (type) && TREE_CODE (arg0) == NEGATE_EXPR)\n+\treturn fold (build2 (MINUS_EXPR, type, TREE_OPERAND (arg0, 0),\n+\t\t\t     build_int_cst (type, 1)));\n+      /* Convert ~ (A - 1) or ~ (A + -1) to -A.  */\n+      else if (INTEGRAL_TYPE_P (type)\n+\t       && ((TREE_CODE (arg0) == MINUS_EXPR\n+\t\t    && integer_onep (TREE_OPERAND (arg0, 1)))\n+\t\t   || (TREE_CODE (arg0) == PLUS_EXPR\n+\t\t       && integer_all_onesp (TREE_OPERAND (arg0, 1)))))\n+\treturn fold (build1 (NEGATE_EXPR, type, TREE_OPERAND (arg0, 0)));\n       return t;\n \n     case PLUS_EXPR:"}, {"sha": "fc56108b49e55dbe0addd8ec3921cda90f22c984", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40f84775b3a7b9bc9ebd0886d1ad470921c07589/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40f84775b3a7b9bc9ebd0886d1ad470921c07589/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=40f84775b3a7b9bc9ebd0886d1ad470921c07589", "patch": "@@ -1,3 +1,8 @@\n+2005-02-15  James A. Morrison  <phython@gcc.gnu.org>\n+\n+\tPR tree-optimization/15785\n+\t* gcc.dg/pr15785-1.c: New test.\n+\n 2005-02-15  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR c++/17788"}, {"sha": "47cd3d7b01bc90f74169f5d5a1d201b3508f5882", "filename": "gcc/testsuite/gcc.dg/pr15785-1.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40f84775b3a7b9bc9ebd0886d1ad470921c07589/gcc%2Ftestsuite%2Fgcc.dg%2Fpr15785-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40f84775b3a7b9bc9ebd0886d1ad470921c07589/gcc%2Ftestsuite%2Fgcc.dg%2Fpr15785-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr15785-1.c?ref=40f84775b3a7b9bc9ebd0886d1ad470921c07589", "patch": "@@ -0,0 +1,42 @@\n+/* { dg-do link } */\n+\n+extern void link_error ();\n+\n+void a (int x) {\n+\tif (~ (~x) - x)\n+\t\tlink_error ();\n+}\n+void b (int x) {\n+\tif (- (-x) - x)\n+\t\tlink_error ();\n+}\n+\n+void c (int x) {\n+\tif (!(- (~x) - x))\n+\t\tlink_error ();\n+}\n+\n+void d (int x) {\n+\tif (!(~ (-x) - x))\n+\t\tlink_error ();\n+}\n+\n+void e (int x) {\n+\tif (x + ~(x - 1))\n+\t\tlink_error ();\n+}\n+\n+void f (int x) {\n+\tif (x + ~(x + (-1)))\n+\t\tlink_error ();\n+}\n+\n+int main (int argc, char *argv[]) {\n+\ta(argc);\n+\tb(argc);\n+\tc(argc);\n+\td(argc);\n+\te(argc);\n+\tf(argc);\n+\treturn 0;\n+}"}]}