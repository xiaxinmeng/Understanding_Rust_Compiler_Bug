{"sha": "7ac75976af9e976a5ed9a127001a2e6c0ee237f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FjNzU5NzZhZjllOTc2YTVlZDlhMTI3MDAxYTJlNmMwZWUyMzdmOA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-02-20T09:23:12Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-02-20T09:23:12Z"}, "message": "Document Fortran header directive.\n\n2019-02-20  Martin Liska  <mliska@suse.cz>\n\n\t* gfortran.texi: Document Fortran header directive.\n\nFrom-SVN: r269035", "tree": {"sha": "3f39d851e9f4727c7d5acf2d27c4b4c077cc1753", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f39d851e9f4727c7d5acf2d27c4b4c077cc1753"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ac75976af9e976a5ed9a127001a2e6c0ee237f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ac75976af9e976a5ed9a127001a2e6c0ee237f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ac75976af9e976a5ed9a127001a2e6c0ee237f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ac75976af9e976a5ed9a127001a2e6c0ee237f8/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ea1c2a95bad9e11a1355f9ecd8f310f8eef1b718", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea1c2a95bad9e11a1355f9ecd8f310f8eef1b718", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea1c2a95bad9e11a1355f9ecd8f310f8eef1b718"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "525e8a5d68ce7d85d14ef3b15b97f2baa914bc0a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ac75976af9e976a5ed9a127001a2e6c0ee237f8/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ac75976af9e976a5ed9a127001a2e6c0ee237f8/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=7ac75976af9e976a5ed9a127001a2e6c0ee237f8", "patch": "@@ -1,3 +1,7 @@\n+2019-02-20  Martin Liska  <mliska@suse.cz>\n+\n+\t* gfortran.texi: Document Fortran header directive.\n+\n 2019-02-19  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/89384"}, {"sha": "39441bdd57f1369ef7b0fccb204934effc07e21b", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ac75976af9e976a5ed9a127001a2e6c0ee237f8/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ac75976af9e976a5ed9a127001a2e6c0ee237f8/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=7ac75976af9e976a5ed9a127001a2e6c0ee237f8", "patch": "@@ -3505,6 +3505,7 @@ as this requires the new array descriptor.\n @menu\n * ATTRIBUTES directive::\n * UNROLL directive::\n+* BUILTIN directive::\n @end menu\n \n @node ATTRIBUTES directive\n@@ -3596,6 +3597,25 @@ loop that follows.  N is an integer constant specifying the unrolling factor.\n The values of 0 and 1 block any unrolling of the loop.\n \n \n+@node BUILTIN directive\n+@subsection BUILTIN directive\n+\n+The syntax of the directive is\n+\n+@code{!GCC$ BUILTIN (B) attributes simd FLAGS IF('target')}\n+\n+You can use this directive to define which middle-end built-ins provide vector\n+implementations.  @code{B} is name of the middle-end built-in.  @code{FLAGS}\n+are optional and must be either \"(inbranch)\" or \"(notinbranch)\".\n+@code{IF} statement is optional and is used to filter multilib ABIs\n+for the built-in that should be vectorized.  Example usage:\n+\n+@smallexample\n+!GCC$ builtin (sinf) attributes simd (notinbranch) if('x86_64')\n+@end smallexample\n+\n+The purpose of the directive is to provide an API among the GCC compiler and\n+the GNU C Library which would define vector implementation of math routines.\n \n @node Non-Fortran Main Program\n @section Non-Fortran Main Program"}]}