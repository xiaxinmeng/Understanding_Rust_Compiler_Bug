{"sha": "f7c06c0f9955a6d12dd7eaef040de563fe279166", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdjMDZjMGY5OTU1YTZkMTJkZDdlYWVmMDQwZGU1NjNmZTI3OTE2Ng==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-01-26T21:44:49Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-01-26T21:44:49Z"}, "message": "re PR debug/78835 (ICE with -fdebug-types-section and member function)\n\n\tPR debug/78835\n\t* dwarf2out.c (prune_unused_types): Mark all functions with DIEs\n\twhich have direct callers with -fvar-tracking-assignments enabled\n\tin the current TU.\n\t(resolve_addr): Avoid adding skeleton DIEs for DW_AT_call_origin\n\tinside of type units.\n\n\t* g++.dg/debug/dwarf2/pr78835.C: New test.\n\nFrom-SVN: r244954", "tree": {"sha": "1f43f54af8acabd8d284a7ddcd24f5708f9f1963", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f43f54af8acabd8d284a7ddcd24f5708f9f1963"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7c06c0f9955a6d12dd7eaef040de563fe279166", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7c06c0f9955a6d12dd7eaef040de563fe279166", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7c06c0f9955a6d12dd7eaef040de563fe279166", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7c06c0f9955a6d12dd7eaef040de563fe279166/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5d93da1d112c93b38b6c68e3c51e20daefc01423", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d93da1d112c93b38b6c68e3c51e20daefc01423", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d93da1d112c93b38b6c68e3c51e20daefc01423"}], "stats": {"total": 75, "additions": 65, "deletions": 10}, "files": [{"sha": "553cf5ee0642da4f95d7472b107375181ba478ce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7c06c0f9955a6d12dd7eaef040de563fe279166/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7c06c0f9955a6d12dd7eaef040de563fe279166/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f7c06c0f9955a6d12dd7eaef040de563fe279166", "patch": "@@ -1,3 +1,12 @@\n+2017-01-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/78835\n+\t* dwarf2out.c (prune_unused_types): Mark all functions with DIEs\n+\twhich have direct callers with -fvar-tracking-assignments enabled\n+\tin the current TU.\n+\t(resolve_addr): Avoid adding skeleton DIEs for DW_AT_call_origin\n+\tinside of type units.\n+\n 2017-01-26  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/78703"}, {"sha": "f69c58850f3e2b4ba96762c9f5b34fb2d1be8a07", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 40, "deletions": 10, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7c06c0f9955a6d12dd7eaef040de563fe279166/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7c06c0f9955a6d12dd7eaef040de563fe279166/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=f7c06c0f9955a6d12dd7eaef040de563fe279166", "patch": "@@ -27793,6 +27793,25 @@ prune_unused_types (void)\n   for (i = 0; base_types.iterate (i, &base_type); i++)\n     prune_unused_types_mark (base_type, 1);\n \n+  /* For -fvar-tracking-assignments, also set the mark on nodes that could be\n+     referenced by DW_TAG_call_site DW_AT_call_origin (i.e. direct call\n+     callees).  */\n+  cgraph_node *cnode;\n+  FOR_EACH_FUNCTION (cnode)\n+    if (cnode->referred_to_p (false))\n+      {\n+\tdw_die_ref die = lookup_decl_die (cnode->decl);\n+\tif (die == NULL || die->die_mark)\n+\t  continue;\n+\tfor (cgraph_edge *e = cnode->callers; e; e = e->next_caller)\n+\t  if (e->caller != cnode\n+\t      && opt_for_fn (e->caller->decl, flag_var_tracking_assignments))\n+\t    {\n+\t      prune_unused_types_mark (die, 1);\n+\t      break;\n+\t    }\n+      }\n+\n   if (debug_str_hash)\n     debug_str_hash->empty ();\n   if (skeleton_debug_str_hash)\n@@ -28694,16 +28713,27 @@ resolve_addr (dw_die_ref die)\n \t\t&& DECL_ABSTRACT_ORIGIN (tdecl) == NULL_TREE\n \t\t&& (cdie = lookup_context_die (DECL_CONTEXT (tdecl))))\n \t      {\n-\t\t/* Creating a full DIE for tdecl is overly expensive and\n-\t\t   at this point even wrong when in the LTO phase\n-\t\t   as it can end up generating new type DIEs we didn't\n-\t\t   output and thus optimize_external_refs will crash.  */\n-\t\ttdie = new_die (DW_TAG_subprogram, cdie, NULL_TREE);\n-\t\tadd_AT_flag (tdie, DW_AT_external, 1);\n-\t\tadd_AT_flag (tdie, DW_AT_declaration, 1);\n-\t\tadd_linkage_attr (tdie, tdecl);\n-\t\tadd_name_and_src_coords_attributes (tdie, tdecl);\n-\t\tequate_decl_number_to_die (tdecl, tdie);\n+\t\tdw_die_ref pdie = cdie;\n+\t\t/* Make sure we don't add these DIEs into type units.\n+\t\t   We could emit skeleton DIEs for context (namespaces,\n+\t\t   outer structs/classes) and a skeleton DIE for the\n+\t\t   innermost context with DW_AT_signature pointing to the\n+\t\t   type unit.  See PR78835.  */\n+\t\twhile (pdie && pdie->die_tag != DW_TAG_type_unit)\n+\t\t  pdie = pdie->die_parent;\n+\t\tif (pdie == NULL)\n+\t\t  {\n+\t\t    /* Creating a full DIE for tdecl is overly expensive and\n+\t\t       at this point even wrong when in the LTO phase\n+\t\t       as it can end up generating new type DIEs we didn't\n+\t\t       output and thus optimize_external_refs will crash.  */\n+\t\t    tdie = new_die (DW_TAG_subprogram, cdie, NULL_TREE);\n+\t\t    add_AT_flag (tdie, DW_AT_external, 1);\n+\t\t    add_AT_flag (tdie, DW_AT_declaration, 1);\n+\t\t    add_linkage_attr (tdie, tdecl);\n+\t\t    add_name_and_src_coords_attributes (tdie, tdecl);\n+\t\t    equate_decl_number_to_die (tdecl, tdie);\n+\t\t  }\n \t      }\n \t    if (tdie)\n \t      {"}, {"sha": "bec6f154d4bc5e04bf42ba3c1fb927b24eead634", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7c06c0f9955a6d12dd7eaef040de563fe279166/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7c06c0f9955a6d12dd7eaef040de563fe279166/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f7c06c0f9955a6d12dd7eaef040de563fe279166", "patch": "@@ -1,3 +1,8 @@\n+2017-01-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/78835\n+\t* g++.dg/debug/dwarf2/pr78835.C: New test.\n+\n 2017-01-26  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/78703"}, {"sha": "0b54639a0e8e88b519ae5df08932264f2cb5dc39", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/pr78835.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7c06c0f9955a6d12dd7eaef040de563fe279166/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr78835.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7c06c0f9955a6d12dd7eaef040de563fe279166/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr78835.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr78835.C?ref=f7c06c0f9955a6d12dd7eaef040de563fe279166", "patch": "@@ -0,0 +1,11 @@\n+/* PR debug/78835 */\n+/* { dg-do compile } */\n+/* { dg-options \"-gdwarf-4 -O2 -fdebug-types-section\" } */\n+\n+struct A { void foo (); };\n+\n+void\n+bar (A &x)\n+{\n+  x.foo ();\n+}"}]}