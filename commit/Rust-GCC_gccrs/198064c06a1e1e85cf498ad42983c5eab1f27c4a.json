{"sha": "198064c06a1e1e85cf498ad42983c5eab1f27c4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk4MDY0YzA2YTFlMWU4NWNmNDk4YWQ0Mjk4M2M1ZWFiMWYyN2M0YQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-01-28T22:52:17Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-04T09:11:16Z"}, "message": "[Ada] Fix a couple of oversights in previous change\n\n2020-06-04  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch7.adb (Make_Final_Call): Add missing guard.\n\t* sem_ch3.adb (Copy_And_Build): Adjust recursive call for\n\tprivate types.\n\t(Build_Derived_Private_Type): Deal with underlying full views.", "tree": {"sha": "618446b3ba0b021d2dfa5bce1c6acaa899fc90a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/618446b3ba0b021d2dfa5bce1c6acaa899fc90a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/198064c06a1e1e85cf498ad42983c5eab1f27c4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/198064c06a1e1e85cf498ad42983c5eab1f27c4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/198064c06a1e1e85cf498ad42983c5eab1f27c4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/198064c06a1e1e85cf498ad42983c5eab1f27c4a/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "110d0820bfcb421b8c680409cf5c65aa2a0b4b8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/110d0820bfcb421b8c680409cf5c65aa2a0b4b8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/110d0820bfcb421b8c680409cf5c65aa2a0b4b8e"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "fbdef9be49743be0ff9dc6217f7e0d066c3012bf", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/198064c06a1e1e85cf498ad42983c5eab1f27c4a/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/198064c06a1e1e85cf498ad42983c5eab1f27c4a/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=198064c06a1e1e85cf498ad42983c5eab1f27c4a", "patch": "@@ -8290,6 +8290,7 @@ package body Exp_Ch7 is\n          Ref  := Convert_Concurrent (Ref, Typ);\n \n       elsif Is_Private_Type (Typ)\n+        and then Present (Underlying_Type (Typ))\n         and then Is_Concurrent_Type (Underlying_Type (Typ))\n       then\n          Utyp := Corresponding_Record_Type (Underlying_Type (Typ));"}, {"sha": "56e0aa26b53dace1d4c6486f78c17c5ccaf9add8", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/198064c06a1e1e85cf498ad42983c5eab1f27c4a/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/198064c06a1e1e85cf498ad42983c5eab1f27c4a/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=198064c06a1e1e85cf498ad42983c5eab1f27c4a", "patch": "@@ -7735,9 +7735,13 @@ package body Sem_Ch3 is\n                end if;\n \n             else\n+               --  If the parent type is private, this is not a completion and\n+               --  we build the full derivation recursively as a completion.\n+\n                Build_Derived_Type\n                  (Full_N, Full_Parent, Full_Der,\n-                  Is_Completion => False, Derive_Subps => False);\n+                  Is_Completion => Is_Private_Type (Full_Parent),\n+                  Derive_Subps => False);\n             end if;\n \n             --  The full declaration has been introduced into the tree and\n@@ -7925,7 +7929,9 @@ package body Sem_Ch3 is\n          --  case (see point 5. of its head comment) since we build it for the\n          --  derived subtype.\n \n-         if Present (Full_View (Parent_Type))\n+         if (Present (Full_View (Parent_Type))\n+             or else (Present (Underlying_Full_View (Parent_Type))\n+                       and then Is_Completion))\n            and then not Is_Itype (Derived_Type)\n          then\n             declare\n@@ -7977,8 +7983,14 @@ package body Sem_Ch3 is\n             end;\n          end if;\n \n-      elsif Present (Full_View (Parent_Type))\n-        and then Has_Discriminants (Full_View (Parent_Type))\n+      elsif (Present (Full_View (Parent_Type))\n+              and then\n+             Has_Discriminants (Full_View (Parent_Type)))\n+        or else (Present (Underlying_Full_View (Parent_Type))\n+                  and then\n+                 Has_Discriminants (Underlying_Full_View (Parent_Type))\n+                  and then\n+                 Is_Completion)\n       then\n          if Has_Unknown_Discriminants (Parent_Type)\n            and then Nkind (Subtype_Indication (Type_Definition (N))) ="}]}