{"sha": "d70d147e3cdb82621a0f61d70e6243d64395f062", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDcwZDE0N2UzY2RiODI2MjFhMGY2MWQ3MGU2MjQzZDY0Mzk1ZjA2Mg==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2008-05-20T12:45:27Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-05-20T12:45:27Z"}, "message": "2008-05-20  Gary Dismukes  <dismukes@adacore.com>\n\t    Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch3.adb\n\t(Expand_N_Object_Declaration): Correct the condition which triggers the\n\tgeneration of a call to Displace when initializing a class-wide object.\n\t(Build_Dcheck_Functions): Build discriminant-checking for null variants\n\twhen Frontend_Layout_On_Target is true to ensure that they're available\n\tfor calling when a record variant size function is built in Layout.\n\nFrom-SVN: r135621", "tree": {"sha": "c0c951398b320acd46e82831c203b69976e5d1d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0c951398b320acd46e82831c203b69976e5d1d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d70d147e3cdb82621a0f61d70e6243d64395f062", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d70d147e3cdb82621a0f61d70e6243d64395f062", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d70d147e3cdb82621a0f61d70e6243d64395f062", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d70d147e3cdb82621a0f61d70e6243d64395f062/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7e5ce5a8c48eeda48b61a1d82abddb76dd07f115", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e5ce5a8c48eeda48b61a1d82abddb76dd07f115", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e5ce5a8c48eeda48b61a1d82abddb76dd07f115"}], "stats": {"total": 61, "additions": 35, "deletions": 26}, "files": [{"sha": "1ed0703f25119f05c8a5c4e56314b9b32eb136ee", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 35, "deletions": 26, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d70d147e3cdb82621a0f61d70e6243d64395f062/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d70d147e3cdb82621a0f61d70e6243d64395f062/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=d70d147e3cdb82621a0f61d70e6243d64395f062", "patch": "@@ -1027,18 +1027,24 @@ package body Exp_Ch3 is\n          Saved_Enclosing_Func_Id : Entity_Id;\n \n       begin\n-         --  Build the discriminant checking function for each variant, label\n-         --  all components of that variant with the function's name.\n-         --  We only Generate a discriminant-checking function only if the\n+         --  Build the discriminant-checking function for each variant, and\n+         --  label all components of that variant with the function's name.\n+         --  We only Generate a discriminant-checking function when the\n          --  variant is not empty, to prevent the creation of dead code.\n+         --  The exception to that is when Frontend_Layout_On_Target is set,\n+         --  because the variant record size function generated in package\n+         --  Layout needs to generate calls to all discriminant-checking\n+         --  functions, including those for empty variants.\n \n          Discr_Name := Entity (Name (Variant_Part_Node));\n          Variant := First_Non_Pragma (Variants (Variant_Part_Node));\n \n          while Present (Variant) loop\n             Component_List_Node := Component_List (Variant);\n \n-            if not Null_Present (Component_List_Node) then\n+            if not Null_Present (Component_List_Node)\n+              or else Frontend_Layout_On_Target\n+            then\n                Func_Id := Build_Dcheck_Function (Discr_Name, Variant);\n                Decl :=\n                  First_Non_Pragma (Component_Items (Component_List_Node));\n@@ -4377,17 +4383,23 @@ package body Exp_Ch3 is\n \n             --  Ada 2005 (AI-251): Rewrite the expression that initializes a\n             --  class-wide object to ensure that we copy the full object,\n-            --  unless we're targetting a VM where interfaces are handled by\n-            --  VM itself.\n+            --  unless we are targetting a VM where interfaces are handled by\n+            --  VM itself. Note that if the root type of Typ is an ancestor\n+            --  of Expr's type, both types share the same dispatch table and\n+            --  there is no need to displace the pointer.\n \n             --  Replace\n-            --      CW : I'Class := Obj;\n+            --     CW : I'Class := Obj;\n             --  by\n-            --      CW__1 : I'Class := I'Class (Base_Address (Obj'Address));\n-            --      CW    : I'Class renames Displace (CW__1, I'Tag);\n+            --     Temp : I'Class := I'Class (Base_Address (Obj'Address));\n+            --     CW   : I'Class renames Displace (Temp, I'Tag);\n \n             if Is_Interface (Typ)\n-              and then Is_Class_Wide_Type (Etype (Expr))\n+              and then Is_Class_Wide_Type (Typ)\n+              and then\n+                (Is_Class_Wide_Type (Etype (Expr))\n+                   or else\n+                     not Is_Parent (Root_Type (Typ), Etype (Expr)))\n               and then Comes_From_Source (Def_Id)\n               and then VM_Target = No_VM\n             then\n@@ -5344,7 +5356,7 @@ package body Exp_Ch3 is\n                  and then Chars (Comp) = Chars (Old_Comp)\n                then\n                   Set_Discriminant_Checking_Func (Comp,\n-                     Discriminant_Checking_Func (Old_Comp));\n+                    Discriminant_Checking_Func (Old_Comp));\n                end if;\n \n                Next_Component (Old_Comp);\n@@ -5658,8 +5670,8 @@ package body Exp_Ch3 is\n             null;\n \n          --  Do not add the body of the predefined primitives if we are\n-         --  compiling under restriction No_Dispatching_Calls of if we\n-         --  are compiling a CPP tagged type.\n+         --  compiling under restriction No_Dispatching_Calls or if we are\n+         --  compiling a CPP tagged type.\n \n          elsif not Restriction_Active (No_Dispatching_Calls) then\n             Predef_List := Predefined_Primitive_Bodies (Def_Id, Renamed_Eq);\n@@ -6739,20 +6751,19 @@ package body Exp_Ch3 is\n \n          else\n             --  Don't need to set any value if this interface shares\n-            --  the primary dispatch table\n+            --  the primary dispatch table.\n \n             if not Is_Parent (Iface, Typ) then\n                Append_To (Stmts_List,\n                  Build_Set_Static_Offset_To_Top (Loc,\n-                   Iface_Tag =>\n-                     New_Reference_To (Iface_Tag, Loc),\n+                   Iface_Tag    => New_Reference_To (Iface_Tag, Loc),\n                    Offset_Value =>\n                      Unchecked_Convert_To (RTE (RE_Storage_Offset),\n                        Make_Attribute_Reference (Loc,\n                          Prefix =>\n                            Make_Selected_Component (Loc,\n-                             Prefix => New_Copy_Tree (Target),\n-                             Selector_Name  =>\n+                             Prefix        => New_Copy_Tree (Target),\n+                             Selector_Name =>\n                                New_Reference_To (Tag_Comp, Loc)),\n                          Attribute_Name => Name_Position))));\n             end if;\n@@ -6772,14 +6783,12 @@ package body Exp_Ch3 is\n                              (RTE (RE_Register_Interface_Offset), Loc),\n                    Parameter_Associations => New_List (\n                      Make_Attribute_Reference (Loc,\n-                       Prefix => New_Copy_Tree (Target),\n+                       Prefix         => New_Copy_Tree (Target),\n                        Attribute_Name => Name_Address),\n \n                      Unchecked_Convert_To (RTE (RE_Tag),\n                        New_Reference_To\n-                         (Node (First_Elmt\n-                                (Access_Disp_Table (Iface))),\n-                          Loc)),\n+                         (Node (First_Elmt (Access_Disp_Table (Iface))), Loc)),\n \n                      New_Occurrence_Of (Standard_True, Loc),\n \n@@ -6788,7 +6797,7 @@ package body Exp_Ch3 is\n                         Make_Attribute_Reference (Loc,\n                           Prefix =>\n                             Make_Selected_Component (Loc,\n-                              Prefix => New_Copy_Tree (Target),\n+                              Prefix         => New_Copy_Tree (Target),\n                               Selector_Name  =>\n                                 New_Reference_To (Tag_Comp, Loc)),\n                          Attribute_Name => Name_Position)),\n@@ -6841,7 +6850,7 @@ package body Exp_Ch3 is\n               Tag_Comp  => Tag_Comp,\n               Iface_Tag => Node (Iface_Tag_Elmt));\n \n-         --  Otherwise we generate code to initialize the tag\n+         --  Otherwise generate code to initialize the tag\n \n          else\n             --  Check if the parent of the record type has variable size\n@@ -7125,7 +7134,7 @@ package body Exp_Ch3 is\n    -- Make_Eq_Case --\n    ------------------\n \n-   --  <Make_Eq_if shared components>\n+   --  <Make_Eq_If shared components>\n    --  case X.D1 is\n    --     when V1 => <Make_Eq_Case> on subcomponents\n    --     ...\n@@ -7203,7 +7212,7 @@ package body Exp_Ch3 is\n    --       return False;\n    --    end if;\n \n-   --  or a null statement if the list L is empty\n+   --  or a null statement if the list L is empty.\n \n    function Make_Eq_If\n      (E : Entity_Id;"}]}