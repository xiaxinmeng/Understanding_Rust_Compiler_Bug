{"sha": "1a30353af83ec6fd6b8e7862511bec5c897e0790", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWEzMDM1M2FmODNlYzZmZDZiOGU3ODYyNTExYmVjNWM4OTdlMDc5MA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-11-28T13:24:23Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-11-28T13:24:23Z"}, "message": "re PR libstdc++/51288 ([C++0x] get_money implementation is missing the sentry object (does not skip leading whitespace))\n\n2011-11-28  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/51288\n\t* include/std/iomanip (get_money, put_money): Use sentry.\n\t* testsuite/27_io/manipulators/extended/get_money/char/51288.cc: New.\n\t* testsuite/27_io/manipulators/extended/get_money/wchar_t/51288.cc:\n\tLikewise.\n\t* testsuite/27_io/manipulators/extended/put_money/char/51288.cc:\n\tLikewise.\n\t* testsuite/27_io/manipulators/extended/put_money/wchar_t/51288.cc:\n\tLikewise.\n\nFrom-SVN: r181775", "tree": {"sha": "61eec1379f39f4ec6f58c7d4c6168d21fff6fa31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61eec1379f39f4ec6f58c7d4c6168d21fff6fa31"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a30353af83ec6fd6b8e7862511bec5c897e0790", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a30353af83ec6fd6b8e7862511bec5c897e0790", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a30353af83ec6fd6b8e7862511bec5c897e0790", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a30353af83ec6fd6b8e7862511bec5c897e0790/comments", "author": null, "committer": null, "parents": [{"sha": "49b2772e24f019808f0110b4cf22b3eda4706aab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49b2772e24f019808f0110b4cf22b3eda4706aab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49b2772e24f019808f0110b4cf22b3eda4706aab"}], "stats": {"total": 274, "additions": 251, "deletions": 23}, "files": [{"sha": "1d4dff8747caf230fad7dc0b569421e74add8c96", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a30353af83ec6fd6b8e7862511bec5c897e0790/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a30353af83ec6fd6b8e7862511bec5c897e0790/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1a30353af83ec6fd6b8e7862511bec5c897e0790", "patch": "@@ -1,3 +1,15 @@\n+2011-11-28  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/51288\n+\t* include/std/iomanip (get_money, put_money): Use sentry.\n+\t* testsuite/27_io/manipulators/extended/get_money/char/51288.cc: New.\n+\t* testsuite/27_io/manipulators/extended/get_money/wchar_t/51288.cc:\n+\tLikewise.\n+\t* testsuite/27_io/manipulators/extended/put_money/char/51288.cc:\n+\tLikewise.\n+\t* testsuite/27_io/manipulators/extended/put_money/wchar_t/51288.cc:\n+\tLikewise.\n+\n 2011-11-27  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* doc/xml/manual/using.xml (Prerequisites): Refer to x86 instead"}, {"sha": "e725b2514df412fdfe49c473d41ec34496e37293", "filename": "libstdc++-v3/include/std/iomanip", "status": "modified", "additions": 45, "deletions": 23, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a30353af83ec6fd6b8e7862511bec5c897e0790/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiomanip", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a30353af83ec6fd6b8e7862511bec5c897e0790/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiomanip", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiomanip?ref=1a30353af83ec6fd6b8e7862511bec5c897e0790", "patch": "@@ -1,7 +1,7 @@\n // Standard stream manipulators -*- C++ -*-\n \n // Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n-// 2006, 2007, 2008, 2009, 2010\n+// 2006, 2007, 2008, 2009, 2010, 2011\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -262,18 +262,29 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     basic_istream<_CharT, _Traits>&\n     operator>>(basic_istream<_CharT, _Traits>& __is, _Get_money<_MoneyT> __f)\n     {\n-      typedef istreambuf_iterator<_CharT, _Traits> _Iter;\n-      typedef money_get<_CharT, _Iter> _MoneyGet;\n-      \n-      ios_base::iostate __err = ios_base::goodbit;\n-      const _MoneyGet& __mg = use_facet<_MoneyGet>(__is.getloc());\n-\n-      __mg.get(_Iter(__is.rdbuf()), _Iter(), __f._M_intl,\n-\t       __is, __err, __f._M_mon);\n-\n-      if (ios_base::goodbit != __err)\n-\t__is.setstate(__err);\n-\n+      typename basic_istream<_CharT, _Traits>::sentry __cerb(__is, false);\n+      if (__cerb)\n+\t{\n+\t  ios_base::iostate __err = ios_base::goodbit;\n+\t  __try\n+\t    {\n+\t      typedef istreambuf_iterator<_CharT, _Traits>   _Iter;\n+\t      typedef money_get<_CharT, _Iter>               _MoneyGet;\n+\n+\t      const _MoneyGet& __mg = use_facet<_MoneyGet>(__is.getloc());\n+\t      __mg.get(_Iter(__is.rdbuf()), _Iter(), __f._M_intl,\n+\t\t       __is, __err, __f._M_mon);\n+\t    }\n+\t  __catch(__cxxabiv1::__forced_unwind&)\n+\t    {\n+\t      __is._M_setstate(ios_base::badbit);\n+\t      __throw_exception_again;\n+\t    }\n+\t  __catch(...)\n+\t    { __is._M_setstate(ios_base::badbit); }\n+\t  if (ios_base::goodbit != __err)\n+\t    __is.setstate(__err);\n+\t}\n       return __is; \n     }\n \n@@ -298,16 +309,27 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     basic_ostream<_CharT, _Traits>& \n     operator<<(basic_ostream<_CharT, _Traits>& __os, _Put_money<_MoneyT> __f)\n     {\n-      typedef ostreambuf_iterator<_CharT, _Traits> _Iter;\n-      typedef money_put<_CharT, _Iter> _MoneyPut;\n-      \n-      const _MoneyPut& __mp = use_facet<_MoneyPut>(__os.getloc());\n-      const _Iter __end = __mp.put(_Iter(__os.rdbuf()), __f._M_intl,\n-\t\t\t\t   __os, __os.fill(), __f._M_mon);\n-\n-      if (__end.failed())\n-\t__os.setstate(ios_base::badbit);\n-\n+      typename basic_ostream<_CharT, _Traits>::sentry __cerb(__os);\n+      if (__cerb)\n+\t{\n+\t  __try\n+\t    {\n+\t      typedef ostreambuf_iterator<_CharT, _Traits>   _Iter;\n+\t      typedef money_put<_CharT, _Iter>               _MoneyPut;\n+\t      const _MoneyPut& __mp = use_facet<_MoneyPut>(__os.getloc());\n+\t      const _Iter __end = __mp.put(_Iter(__os.rdbuf()), __f._M_intl,\n+\t\t\t\t\t   __os, __os.fill(), __f._M_mon);\n+\t      if (__end.failed())\n+\t\t__os.setstate(ios_base::badbit);\n+\t    }\n+\t  __catch(__cxxabiv1::__forced_unwind&)\n+\t    {\n+\t      __os._M_setstate(ios_base::badbit);\n+\t      __throw_exception_again;\n+\t    }\n+\t  __catch(...)\n+\t    { __os._M_setstate(ios_base::badbit); }\n+\t}\n       return __os; \n     }\n "}, {"sha": "281a2e2d39ced4721223ed52b359239df316fa7d", "filename": "libstdc++-v3/testsuite/27_io/manipulators/extended/get_money/char/51288.cc", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a30353af83ec6fd6b8e7862511bec5c897e0790/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fget_money%2Fchar%2F51288.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a30353af83ec6fd6b8e7862511bec5c897e0790/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fget_money%2Fchar%2F51288.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fget_money%2Fchar%2F51288.cc?ref=1a30353af83ec6fd6b8e7862511bec5c897e0790", "patch": "@@ -0,0 +1,48 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-namedlocale \"en_US.UTF-8\" }\n+\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <sstream>\n+#include <iomanip>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/51288\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  std::locale loc_us = std::locale(\"en_US.UTF-8\");\n+\n+  std::istringstream iss;\n+  iss.imbue(loc_us);\n+\n+  iss.str(\"   $1.23\");\n+\n+  std::string str;\n+  iss >> std::get_money(str);\n+\n+  VERIFY( str == \"123\" );\n+  VERIFY( iss.eof() );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "2ec02302c316543dba8a095b30cd09d309a3526a", "filename": "libstdc++-v3/testsuite/27_io/manipulators/extended/get_money/wchar_t/51288.cc", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a30353af83ec6fd6b8e7862511bec5c897e0790/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fget_money%2Fwchar_t%2F51288.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a30353af83ec6fd6b8e7862511bec5c897e0790/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fget_money%2Fwchar_t%2F51288.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fget_money%2Fwchar_t%2F51288.cc?ref=1a30353af83ec6fd6b8e7862511bec5c897e0790", "patch": "@@ -0,0 +1,48 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-namedlocale \"en_US.UTF-8\" }\n+\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <sstream>\n+#include <iomanip>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/51288\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  std::locale loc_us = std::locale(\"en_US.UTF-8\");\n+\n+  std::wistringstream iss;\n+  iss.imbue(loc_us);\n+\n+  iss.str(L\"   $1.23\");\n+\n+  std::wstring str;\n+  iss >> std::get_money(str);\n+\n+  VERIFY( str == L\"123\" );\n+  VERIFY( iss.eof() );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "d2cc9cb7012feaf7dab1468b44662d4af742ffc9", "filename": "libstdc++-v3/testsuite/27_io/manipulators/extended/put_money/char/51288.cc", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a30353af83ec6fd6b8e7862511bec5c897e0790/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fput_money%2Fchar%2F51288.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a30353af83ec6fd6b8e7862511bec5c897e0790/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fput_money%2Fchar%2F51288.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fput_money%2Fchar%2F51288.cc?ref=1a30353af83ec6fd6b8e7862511bec5c897e0790", "patch": "@@ -0,0 +1,49 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-namedlocale \"en_US.UTF-8\" }\n+\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <sstream>\n+#include <iomanip>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/51288\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  std::locale loc_us = std::locale(\"en_US.UTF-8\");\n+\n+  std::ostringstream oss;\n+  oss.imbue(loc_us);\n+\n+  const std::string str(\"123\");\n+\n+  oss.setstate(std::ios_base::failbit);\n+\n+  oss << std::put_money(str);\n+\n+  VERIFY( oss.str().empty() );\n+  VERIFY( oss.fail() );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "548c0a7c2b4ba36189b3a008bf3c1f7fb07aba98", "filename": "libstdc++-v3/testsuite/27_io/manipulators/extended/put_money/wchar_t/51288.cc", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a30353af83ec6fd6b8e7862511bec5c897e0790/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fput_money%2Fwchar_t%2F51288.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a30353af83ec6fd6b8e7862511bec5c897e0790/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fput_money%2Fwchar_t%2F51288.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fput_money%2Fwchar_t%2F51288.cc?ref=1a30353af83ec6fd6b8e7862511bec5c897e0790", "patch": "@@ -0,0 +1,49 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-namedlocale \"en_US.UTF-8\" }\n+\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <sstream>\n+#include <iomanip>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/51288\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  std::locale loc_us = std::locale(\"en_US.UTF-8\");\n+\n+  std::wostringstream oss;\n+  oss.imbue(loc_us);\n+\n+  const std::wstring str(L\"123\");\n+\n+  oss.setstate(std::ios_base::failbit);\n+\n+  oss << std::put_money(str);\n+\n+  VERIFY( oss.str().empty() );\n+  VERIFY( oss.fail() );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}