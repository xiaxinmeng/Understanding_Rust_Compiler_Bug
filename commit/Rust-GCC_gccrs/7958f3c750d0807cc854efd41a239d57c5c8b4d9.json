{"sha": "7958f3c750d0807cc854efd41a239d57c5c8b4d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzk1OGYzYzc1MGQwODA3Y2M4NTRlZmQ0MWEyMzlkNTdjNWM4YjRkOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2001-12-21T11:07:59Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2001-12-21T11:07:59Z"}, "message": "combine.c (nonzero_bits): If using reg_nonzero_bits, we don't know anything about bits outside of X mode.\n\n\t* combine.c (nonzero_bits): If using reg_nonzero_bits,\n\twe don't know anything about bits outside of X mode.\n\t(num_sign_bit_copies): Likewise.\n\nFrom-SVN: r48239", "tree": {"sha": "8cce78d4e8c0521a29bede0e4e841a0dcfe7d4d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8cce78d4e8c0521a29bede0e4e841a0dcfe7d4d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7958f3c750d0807cc854efd41a239d57c5c8b4d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7958f3c750d0807cc854efd41a239d57c5c8b4d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7958f3c750d0807cc854efd41a239d57c5c8b4d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7958f3c750d0807cc854efd41a239d57c5c8b4d9/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b7fb9feb713f47d880d251ff1323e40fc37c14c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7fb9feb713f47d880d251ff1323e40fc37c14c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7fb9feb713f47d880d251ff1323e40fc37c14c7"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "486394cc6942dd163b0052a96bcbaeca700713c8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7958f3c750d0807cc854efd41a239d57c5c8b4d9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7958f3c750d0807cc854efd41a239d57c5c8b4d9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7958f3c750d0807cc854efd41a239d57c5c8b4d9", "patch": "@@ -1,3 +1,9 @@\n+2001-12-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* combine.c (nonzero_bits): If using reg_nonzero_bits,\n+\twe don't know anything about bits outside of X mode.\n+\t(num_sign_bit_copies): Likewise.\n+\n 2001-12-21  Nick Clifton  <nickc@cambridge.redhat.com>\n \n \t* config/arm/arm.md (prefetch): Use 'a' operand code."}, {"sha": "1fa63b80c9e07370da91d6d2c8e3e2e3194141f0", "filename": "gcc/combine.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7958f3c750d0807cc854efd41a239d57c5c8b4d9/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7958f3c750d0807cc854efd41a239d57c5c8b4d9/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=7958f3c750d0807cc854efd41a239d57c5c8b4d9", "patch": "@@ -7990,7 +7990,14 @@ nonzero_bits (x, mode)\n \t  return nonzero_bits (tem, mode);\n \t}\n       else if (nonzero_sign_valid && reg_nonzero_bits[REGNO (x)])\n-\treturn reg_nonzero_bits[REGNO (x)] & nonzero;\n+\t{\n+\t  unsigned HOST_WIDE_INT mask = reg_nonzero_bits[REGNO (x)];\n+\n+\t  if (GET_MODE_BITSIZE (GET_MODE (x)) < mode_width)\n+\t    /* We don't know anything about the upper bits.  */\n+\t    mask |= GET_MODE_MASK (mode) ^ GET_MODE_MASK (GET_MODE (x));\n+\t  return nonzero & mask;\n+\t}\n       else\n \treturn nonzero;\n \n@@ -8385,7 +8392,8 @@ num_sign_bit_copies (x, mode)\n       if (tem != 0)\n \treturn num_sign_bit_copies (tem, mode);\n \n-      if (nonzero_sign_valid && reg_sign_bit_copies[REGNO (x)] != 0)\n+      if (nonzero_sign_valid && reg_sign_bit_copies[REGNO (x)] != 0\n+\t  && GET_MODE_BITSIZE (GET_MODE (x)) == bitwidth)\n \treturn reg_sign_bit_copies[REGNO (x)];\n       break;\n "}]}