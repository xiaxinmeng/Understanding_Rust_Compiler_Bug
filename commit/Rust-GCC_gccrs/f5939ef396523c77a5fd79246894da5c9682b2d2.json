{"sha": "f5939ef396523c77a5fd79246894da5c9682b2d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjU5MzllZjM5NjUyM2M3N2E1ZmQ3OTI0Njg5NGRhNWM5NjgyYjJkMg==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2009-05-28T23:13:32Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2009-05-28T23:13:32Z"}, "message": "thumb2.md (thumb2_zero_extendsidi2): Add a split component.\n\n\t* config/arm/thumb2.md (thumb2_zero_extendsidi2): Add a split\n\tcomponent.\n\t(thumb2_zero_extendqidi2): Likewise.\n\nFrom-SVN: r147962", "tree": {"sha": "ddbc27fd3495565c38203f3447d910318d040854", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ddbc27fd3495565c38203f3447d910318d040854"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5939ef396523c77a5fd79246894da5c9682b2d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5939ef396523c77a5fd79246894da5c9682b2d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5939ef396523c77a5fd79246894da5c9682b2d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5939ef396523c77a5fd79246894da5c9682b2d2/comments", "author": null, "committer": null, "parents": [{"sha": "c185de40a97582748af3d52de2125725625e333f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c185de40a97582748af3d52de2125725625e333f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c185de40a97582748af3d52de2125725625e333f"}], "stats": {"total": 40, "additions": 30, "deletions": 10}, "files": [{"sha": "afd6cc87347abab0c564b4033f508b493d2e0848", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5939ef396523c77a5fd79246894da5c9682b2d2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5939ef396523c77a5fd79246894da5c9682b2d2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f5939ef396523c77a5fd79246894da5c9682b2d2", "patch": "@@ -1,3 +1,9 @@\n+2009-05-29  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* config/arm/thumb2.md (thumb2_zero_extendsidi2): Add a split\n+\tcomponent.\n+\t(thumb2_zero_extendqidi2): Likewise.\n+\n 2009-05-28  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* config/sh/sh.c (sh_expand_t_scc): Use gen_xorsi3_movrt"}, {"sha": "eada5ca7479c59b789e5d157c454655ed9a22869", "filename": "gcc/config/arm/thumb2.md", "status": "modified", "additions": 24, "deletions": 10, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5939ef396523c77a5fd79246894da5c9682b2d2/gcc%2Fconfig%2Farm%2Fthumb2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5939ef396523c77a5fd79246894da5c9682b2d2/gcc%2Fconfig%2Farm%2Fthumb2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fthumb2.md?ref=f5939ef396523c77a5fd79246894da5c9682b2d2", "patch": "@@ -849,30 +849,44 @@\n \n ;; Zero and sign extension instructions.\n \n-(define_insn \"*thumb2_zero_extendsidi2\"\n+(define_insn_and_split \"*thumb2_zero_extendsidi2\"\n   [(set (match_operand:DI 0 \"s_register_operand\" \"=r\")\n         (zero_extend:DI (match_operand:SI 1 \"s_register_operand\" \"r\")))]\n   \"TARGET_THUMB2\"\n-  \"*\n-    /* ??? Output both instructions unconditionally, otherwise the conditional\n-       execution insn counter gets confused.\n-    if (REGNO (operands[1])\n-        != REGNO (operands[0]) + (WORDS_BIG_ENDIAN ? 1 : 0)) */\n-      output_asm_insn (\\\"mov%?\\\\t%Q0, %1\\\", operands);\n-    return \\\"mov%?\\\\t%R0, #0\\\";\n+  \"mov%?\\\\t%Q0, %1\\;mov%?\\\\t%R0, #0\"\n+  \"&& reload_completed\"\n+  [(set (match_dup 0) (match_dup 1))]\n+  \"\n+  {\n+    rtx lo_part = gen_lowpart (SImode, operands[0]);\n+    if (!REG_P (lo_part) || REGNO (lo_part) != REGNO (operands[1]))\n+      emit_move_insn (lo_part, operands[1]);\n+    operands[0] = gen_highpart (SImode, operands[0]);\n+    operands[1] = const0_rtx;\n+  }\n   \"\n   [(set_attr \"length\" \"8\")\n    (set_attr \"ce_count\" \"2\")\n    (set_attr \"predicable\" \"yes\")]\n )\n \n-(define_insn \"*thumb2_zero_extendqidi2\"\n+(define_insn_and_split \"*thumb2_zero_extendqidi2\"\n   [(set (match_operand:DI                 0 \"s_register_operand\"  \"=r,r\")\n \t(zero_extend:DI (match_operand:QI 1 \"nonimmediate_operand\" \"r,m\")))]\n   \"TARGET_THUMB2\"\n   \"@\n-   and%?\\\\t%Q0, %1, #255\\;mov%?\\\\t%R0, #0\n+   uxtb%?\\\\t%Q0, %1\\;mov%?\\\\t%R0, #0\n    ldr%(b%)\\\\t%Q0, %1\\;mov%?\\\\t%R0, #0\"\n+  \"&& reload_completed\"\n+  [(set (match_dup 0) (zero_extend:SI (match_dup 1)))\n+   (set (match_dup 2) (match_dup 3))]\n+  \"\n+  {\n+    operands[2] = gen_highpart (SImode, operands[0]);\n+    operands[0] = gen_lowpart (SImode, operands[0]);\n+    operands[3] = const0_rtx;\n+  }\n+  \"\n   [(set_attr \"length\" \"8\")\n    (set_attr \"ce_count\" \"2\")\n    (set_attr \"predicable\" \"yes\")"}]}