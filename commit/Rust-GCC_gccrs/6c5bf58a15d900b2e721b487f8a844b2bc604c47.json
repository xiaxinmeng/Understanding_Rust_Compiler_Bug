{"sha": "6c5bf58a15d900b2e721b487f8a844b2bc604c47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM1YmY1OGExNWQ5MDBiMmU3MjFiNDg3ZjhhODQ0YjJiYzYwNGM0Nw==", "commit": {"author": {"name": "Kai Tietz", "email": "ktietz@redhat.com", "date": "2012-11-29T15:26:29Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2012-11-29T15:26:29Z"}, "message": "re PR bootstrap/53912 (bootstrap fails using default c++ mode in stage 2 and 3 for native x86_64-w64-mingw32)\n\n\tPR target/53912\n\t* class.c (dump_class_hierarchy_r): Cast from pointer via uintptr_t.\n\t(dump_vtable): Likewise.\n\nFrom-SVN: r193934", "tree": {"sha": "df2ca83669c3b263cca4afefe920e0f413e18894", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df2ca83669c3b263cca4afefe920e0f413e18894"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c5bf58a15d900b2e721b487f8a844b2bc604c47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c5bf58a15d900b2e721b487f8a844b2bc604c47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c5bf58a15d900b2e721b487f8a844b2bc604c47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c5bf58a15d900b2e721b487f8a844b2bc604c47/comments", "author": null, "committer": null, "parents": [{"sha": "e3815735da8f006fa12d990733c55c8d251ab355", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3815735da8f006fa12d990733c55c8d251ab355", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3815735da8f006fa12d990733c55c8d251ab355"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "4f240e9f3b6ca208faa04bc4f1dd7a0eaad22159", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c5bf58a15d900b2e721b487f8a844b2bc604c47/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c5bf58a15d900b2e721b487f8a844b2bc604c47/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6c5bf58a15d900b2e721b487f8a844b2bc604c47", "patch": "@@ -1,3 +1,9 @@\n+2012-11-29  Kai Tietz  <ktietz@redhat.com>\n+\n+\tPR target/53912\n+\t* class.c (dump_class_hierarchy_r): Cast from pointer via uintptr_t.\n+\t(dump_vtable): Likewise.\n+\n 2012-11-29  Ed Smith-Rowland  <3dw4rd@verizon.net>\n \n \tPR c++/52654"}, {"sha": "82b2c0a3810e3795daea0c0bbbce11bab2e8f992", "filename": "gcc/cp/class.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c5bf58a15d900b2e721b487f8a844b2bc604c47/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c5bf58a15d900b2e721b487f8a844b2bc604c47/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=6c5bf58a15d900b2e721b487f8a844b2bc604c47", "patch": "@@ -7815,9 +7815,9 @@ dump_class_hierarchy_r (FILE *stream,\n   int i;\n \n   indented = maybe_indent_hierarchy (stream, indent, 0);\n-  fprintf (stream, \"%s (0x%lx) \",\n+  fprintf (stream, \"%s (0x\" HOST_WIDE_INT_PRINT_HEX \") \",\n \t   type_as_string (BINFO_TYPE (binfo), TFF_PLAIN_IDENTIFIER),\n-\t   (unsigned long) binfo);\n+\t   (HOST_WIDE_INT) (uintptr_t) binfo);\n   if (binfo != igo)\n     {\n       fprintf (stream, \"alternative-path\\n\");\n@@ -7839,10 +7839,10 @@ dump_class_hierarchy_r (FILE *stream,\n   if (BINFO_PRIMARY_P (binfo))\n     {\n       indented = maybe_indent_hierarchy (stream, indent + 3, indented);\n-      fprintf (stream, \" primary-for %s (0x%lx)\",\n+      fprintf (stream, \" primary-for %s (0x\" HOST_WIDE_INT_PRINT_HEX \")\",\n \t       type_as_string (BINFO_TYPE (BINFO_INHERITANCE_CHAIN (binfo)),\n \t\t\t       TFF_PLAIN_IDENTIFIER),\n-\t       (unsigned long)BINFO_INHERITANCE_CHAIN (binfo));\n+\t       (HOST_WIDE_INT) (uintptr_t) BINFO_INHERITANCE_CHAIN (binfo));\n     }\n   if (BINFO_LOST_PRIMARY_P (binfo))\n     {\n@@ -7975,7 +7975,8 @@ dump_vtable (tree t, tree binfo, tree vtable)\n       if (ctor_vtbl_p)\n \t{\n \t  if (!BINFO_VIRTUAL_P (binfo))\n-\t    fprintf (stream, \" (0x%lx instance)\", (unsigned long)binfo);\n+\t    fprintf (stream, \" (0x\" HOST_WIDE_INT_PRINT_HEX \" instance)\",\n+\t\t     (HOST_WIDE_INT) (uintptr_t) binfo);\n \t  fprintf (stream, \" in %s\", type_as_string (t, TFF_PLAIN_IDENTIFIER));\n \t}\n       fprintf (stream, \"\\n\");"}]}