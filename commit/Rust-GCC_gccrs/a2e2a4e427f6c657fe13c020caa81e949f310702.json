{"sha": "a2e2a4e427f6c657fe13c020caa81e949f310702", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJlMmE0ZTQyN2Y2YzY1N2ZlMTNjMDIwY2FhODFlOTQ5ZjMxMDcwMg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2015-12-17T15:06:03Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2015-12-17T15:06:03Z"}, "message": "nvptx.h (NVPTX_RETURN_REGNUM, [...]): Renumber.\n\n\t* config/nvptx/nvptx.h (NVPTX_RETURN_REGNUM, FRAME_POINTER_REGNUM,\n\tARG_POINTER_REGNUM, STATIC_CHAIN_REGNUM): Renumber.\n\t(REGISTER_NAMES): Update and rename.\n\t(FIXED_REGISTERS, CALL_USED_REGISTERS): Update.\n\t(enum_reg_class, REG_CLASS_NAMES, REG_CLASS_CONTENTS): Reformat.\n\nFrom-SVN: r231771", "tree": {"sha": "becc0b01c22f847f068ff06607503c8f268ec8fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/becc0b01c22f847f068ff06607503c8f268ec8fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2e2a4e427f6c657fe13c020caa81e949f310702", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2e2a4e427f6c657fe13c020caa81e949f310702", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2e2a4e427f6c657fe13c020caa81e949f310702", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2e2a4e427f6c657fe13c020caa81e949f310702/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6379dfb5fee9253b65af8db5cca6b8a6f71e457e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6379dfb5fee9253b65af8db5cca6b8a6f71e457e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6379dfb5fee9253b65af8db5cca6b8a6f71e457e"}], "stats": {"total": 60, "additions": 22, "deletions": 38}, "files": [{"sha": "f15d4428c7dea912ad817127c62a739bd3dea380", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2e2a4e427f6c657fe13c020caa81e949f310702/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2e2a4e427f6c657fe13c020caa81e949f310702/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a2e2a4e427f6c657fe13c020caa81e949f310702", "patch": "@@ -1,3 +1,11 @@\n+2015-12-17  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* config/nvptx/nvptx.h (NVPTX_RETURN_REGNUM, FRAME_POINTER_REGNUM,\n+\tARG_POINTER_REGNUM, STATIC_CHAIN_REGNUM): Renumber.\n+\t(REGISTER_NAMES): Update and rename.\n+\t(FIXED_REGISTERS, CALL_USED_REGISTERS): Update.\n+\t(enum_reg_class, REG_CLASS_NAMES, REG_CLASS_CONTENTS): Reformat.\n+\n 2015-12-17  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/68946"}, {"sha": "7f78dea72e9d8bd53d0b62e7623b8aba9b42d23f", "filename": "gcc/config/nvptx/nvptx.h", "status": "modified", "additions": 14, "deletions": 38, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2e2a4e427f6c657fe13c020caa81e949f310702/gcc%2Fconfig%2Fnvptx%2Fnvptx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2e2a4e427f6c657fe13c020caa81e949f310702/gcc%2Fconfig%2Fnvptx%2Fnvptx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.h?ref=a2e2a4e427f6c657fe13c020caa81e949f310702", "patch": "@@ -78,19 +78,15 @@\n #define PTRDIFF_TYPE (TARGET_ABI64 ? \"long int\" : \"int\")\n \n #define POINTER_SIZE (TARGET_ABI64 ? 64 : 32)\n-\n #define Pmode (TARGET_ABI64 ? DImode : SImode)\n \n /* Registers.  Since ptx is a virtual target, we just define a few\n-   hard registers for special purposes and leave pseudos unallocated.  */\n-\n-#define FIRST_PSEUDO_REGISTER 16\n-/* We have to have some available hard registers, to keep gcc setup\n+   hard registers for special purposes and leave pseudos unallocated.\n+   We have to have some available hard registers, to keep gcc setup\n    happy.  */\n-#define FIXED_REGISTERS\t\t\t\t\t\\\n-  { 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1 }\n-#define CALL_USED_REGISTERS\t\t\t\t\\\n-  { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 }\n+#define FIRST_PSEUDO_REGISTER 16\n+#define FIXED_REGISTERS\t    { 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }\n+#define CALL_USED_REGISTERS { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 }\n \n #define HARD_REGNO_NREGS(REG, MODE)\t\t\\\n   ((void)(REG), (void)(MODE), 1)\n@@ -100,32 +96,13 @@\n      ((void)(REG), (void)(MODE), true)\n \n /* Register Classes.  */\n-\n-enum reg_class\n-  {\n-    NO_REGS,\n-    ALL_REGS,\n-    LIM_REG_CLASSES\n-  };\n-\n+enum reg_class             {  NO_REGS,    ALL_REGS,\tLIM_REG_CLASSES };\n+#define REG_CLASS_NAMES    { \"NO_REGS\",  \"ALL_REGS\" }\n+#define REG_CLASS_CONTENTS { { 0x0000 }, { 0xFFFF } }\n #define N_REG_CLASSES (int) LIM_REG_CLASSES\n \n-#define REG_CLASS_NAMES {\t  \\\n-    \"NO_REGS\",\t\t\t  \\\n-    \"ALL_REGS\" }\n-\n-#define REG_CLASS_CONTENTS\t\\\n-{\t\t\t\t\\\n-  /* NO_REGS.  */\t\t\\\n-  { 0x0000 },\t\t\t\\\n-  /* ALL_REGS.  */\t\t\\\n-  { 0xFFFF },\t\t\t\\\n-}\n-\n #define GENERAL_REGS ALL_REGS\n-\n #define REGNO_REG_CLASS(R) ((void)(R), ALL_REGS)\n-\n #define BASE_REG_CLASS ALL_REGS\n #define INDEX_REG_CLASS NO_REGS\n \n@@ -151,17 +128,16 @@ enum reg_class\n #define FRAME_GROWS_DOWNWARD 0\n #define STACK_GROWS_DOWNWARD 1\n \n+#define NVPTX_RETURN_REGNUM 0\n #define STACK_POINTER_REGNUM 1\n-#define NVPTX_RETURN_REGNUM 4\n-#define FRAME_POINTER_REGNUM 15\n-#define ARG_POINTER_REGNUM 14\n-\n-#define STATIC_CHAIN_REGNUM 12\n+#define FRAME_POINTER_REGNUM 2\n+#define ARG_POINTER_REGNUM 3\n+#define STATIC_CHAIN_REGNUM 4\n \n #define REGISTER_NAMES\t\t\t\t\t\t\t\\\n   {\t\t\t\t\t\t\t\t\t\\\n-    \"%hr0\", \"%outargs\", \"%hfp\", \"%hr3\", \"%retval\", \"%hr5\", \"%hr6\", \"%hr7\",\t\\\n-    \"%hr8\", \"%hr9\", \"%hr10\", \"%hr11\", \"%chain_in\", \"%hr13\", \"%argp\", \"%frame\" \\\n+    \"%value\", \"%stack\", \"%frame\", \"%args\", \"%chain\", \"%hr5\", \"%hr6\", \"%hr7\", \\\n+    \"%hr8\", \"%hr9\", \"%hr10\", \"%hr11\", \"%hr12\", \"%hr13\", \"%hr14\", \"%hr15\" \\\n   }\n \n #define FIRST_PARM_OFFSET(FNDECL) ((void)(FNDECL), 0)"}]}