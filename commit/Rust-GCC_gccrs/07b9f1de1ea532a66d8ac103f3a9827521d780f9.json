{"sha": "07b9f1de1ea532a66d8ac103f3a9827521d780f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDdiOWYxZGUxZWE1MzJhNjZkOGFjMTAzZjNhOTgyNzUyMWQ3ODBmOQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-11-20T08:06:09Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-11-20T08:06:09Z"}, "message": "re PR lto/88087 (ICE in execute at tree-ssa-pre.c:4220 since r266183)\n\n2018-11-20  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/88087\n\t* tree-ssa-pre.c (create_expression_by_pieces): Re-materialize\n\tcall fntype.\n\t* tree-ssa-sccvn.c (copy_reference_ops_from_call): Remember\n\tcall fntype.\n\n\t* gcc.dg/tree-ssa/pr88087.c: New testcase.\n\nFrom-SVN: r266301", "tree": {"sha": "1de93f563d84b963315706bca28ba1aa89b3ec66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1de93f563d84b963315706bca28ba1aa89b3ec66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07b9f1de1ea532a66d8ac103f3a9827521d780f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07b9f1de1ea532a66d8ac103f3a9827521d780f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07b9f1de1ea532a66d8ac103f3a9827521d780f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07b9f1de1ea532a66d8ac103f3a9827521d780f9/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "14b6a72109964eaf00aa3a46f0f9776bbcaef067", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14b6a72109964eaf00aa3a46f0f9776bbcaef067", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14b6a72109964eaf00aa3a46f0f9776bbcaef067"}], "stats": {"total": 35, "additions": 33, "deletions": 2}, "files": [{"sha": "0c357fb4bed48c812975d75c2b0d7b21895c2e97", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b9f1de1ea532a66d8ac103f3a9827521d780f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b9f1de1ea532a66d8ac103f3a9827521d780f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=07b9f1de1ea532a66d8ac103f3a9827521d780f9", "patch": "@@ -1,3 +1,11 @@\n+2018-11-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/88087\n+\t* tree-ssa-pre.c (create_expression_by_pieces): Re-materialize\n+\tcall fntype.\n+\t* tree-ssa-sccvn.c (copy_reference_ops_from_call): Remember\n+\tcall fntype.\n+\n 2018-11-20  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/88089"}, {"sha": "4284ce25dab8c438329e75548d2341082d29033f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b9f1de1ea532a66d8ac103f3a9827521d780f9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b9f1de1ea532a66d8ac103f3a9827521d780f9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=07b9f1de1ea532a66d8ac103f3a9827521d780f9", "patch": "@@ -1,3 +1,8 @@\n+2018-11-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/88087\n+\t* gcc.dg/tree-ssa/pr88087.c: New testcase.\n+\n 2018-11-19  Paul Koning  <ni1d@arrl.net>\n \n \t* gcc.c-torture/execute/align-3.c: Skip if pdp11."}, {"sha": "d0061b61aedb0e11792f90ac81424b478b298aff", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr88087.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b9f1de1ea532a66d8ac103f3a9827521d780f9/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr88087.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b9f1de1ea532a66d8ac103f3a9827521d780f9/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr88087.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr88087.c?ref=07b9f1de1ea532a66d8ac103f3a9827521d780f9", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-pre-stats\" } */\n+\n+int f();\n+int d;\n+void c()\n+{\n+  for (;;)\n+    {\n+      f();\n+      int (*fp)() __attribute__((const)) = (void *)f;\n+      d = fp();\n+    }\n+}\n+\n+/* We shouldn't ICE and hoist the const call of fp out of the loop.  */\n+/* { dg-final { scan-tree-dump \"Eliminated: 1\" \"pre\" } } */"}, {"sha": "4d5bce83a2c0749cd1ffcbb053cfe77dfa0edf29", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b9f1de1ea532a66d8ac103f3a9827521d780f9/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b9f1de1ea532a66d8ac103f3a9827521d780f9/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=07b9f1de1ea532a66d8ac103f3a9827521d780f9", "patch": "@@ -2792,9 +2792,10 @@ create_expression_by_pieces (basic_block block, pre_expr expr,\n \t      args.quick_push (arg);\n \t    }\n \t  gcall *call = gimple_build_call_vec (fn, args);\n+\t  gimple_call_set_fntype (call, currop->type);\n \t  if (sc)\n \t    gimple_call_set_chain (call, sc);\n-\t  tree forcedname = make_ssa_name (currop->type);\n+\t  tree forcedname = make_ssa_name (TREE_TYPE (currop->type));\n \t  gimple_call_set_lhs (call, forcedname);\n \t  /* There's no CCP pass after PRE which would re-compute alignment\n \t     information so make sure we re-materialize this here.  */"}, {"sha": "01bedf56662aec710225298886b62ce7d2edb223", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b9f1de1ea532a66d8ac103f3a9827521d780f9/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b9f1de1ea532a66d8ac103f3a9827521d780f9/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=07b9f1de1ea532a66d8ac103f3a9827521d780f9", "patch": "@@ -1206,7 +1206,7 @@ copy_reference_ops_from_call (gcall *call,\n \n   /* Copy the type, opcode, function, static chain and EH region, if any.  */\n   memset (&temp, 0, sizeof (temp));\n-  temp.type = gimple_call_return_type (call);\n+  temp.type = gimple_call_fntype (call);\n   temp.opcode = CALL_EXPR;\n   temp.op0 = gimple_call_fn (call);\n   temp.op1 = gimple_call_chain (call);"}]}