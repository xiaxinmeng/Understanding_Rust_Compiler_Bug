{"sha": "1db0429a13b229a2a2ad43ca895786871f0b4834", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWRiMDQyOWExM2IyMjlhMmEyYWQ0M2NhODk1Nzg2ODcxZjBiNDgzNA==", "commit": {"author": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2010-05-24T14:36:32Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2010-05-24T14:36:32Z"}, "message": "re PR target/44132 (emutls is broken under a range of circumstances.)\n\n2010-05-24  Iain Sandoe  <iains@gcc.gnu.org>\n\n\tPR target/44132\n\tPR middle-end/43602\n\t* varasm.c (get_emutls_init_templ_addr): Copy DECL_PRESERVE_P,\n\tDECL_VISIBILITY_SPECIFIED.\n\t(emutls_decl): Set DECL_PRESERVE_P and copy\n\tDECL_VISIBILITY_SPECIFIED, DECL_RESTRICTED_P.\n\t(emutls_finalize_control_var): New callback.\n\t(emutls_finish): Finalize emutls control variables.\n\t* toplev.c (compile_file): Move the call to emutls_finish () \n\tbefore varpool_assemble_pending_decls ().\n\nFrom-SVN: r159781", "tree": {"sha": "572e1afe3e6475f92e50a9110276f5d8b13583fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/572e1afe3e6475f92e50a9110276f5d8b13583fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1db0429a13b229a2a2ad43ca895786871f0b4834", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1db0429a13b229a2a2ad43ca895786871f0b4834", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1db0429a13b229a2a2ad43ca895786871f0b4834", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1db0429a13b229a2a2ad43ca895786871f0b4834/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e72e2da4db2f88219961c6615f0d5a673be3aaa4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e72e2da4db2f88219961c6615f0d5a673be3aaa4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e72e2da4db2f88219961c6615f0d5a673be3aaa4"}], "stats": {"total": 61, "additions": 53, "deletions": 8}, "files": [{"sha": "c82178cb25d4164e28c5ba95c3189d35810160f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1db0429a13b229a2a2ad43ca895786871f0b4834/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1db0429a13b229a2a2ad43ca895786871f0b4834/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1db0429a13b229a2a2ad43ca895786871f0b4834", "patch": "@@ -1,3 +1,16 @@\n+2010-05-24  Iain Sandoe  <iains@gcc.gnu.org>\n+\n+\tPR target/44132\n+\tPR middle-end/43602\n+\t* varasm.c (get_emutls_init_templ_addr): Copy DECL_PRESERVE_P,\n+\tDECL_VISIBILITY_SPECIFIED.\n+\t(emutls_decl): Set DECL_PRESERVE_P and copy\n+\tDECL_VISIBILITY_SPECIFIED, DECL_RESTRICTED_P.\n+\t(emutls_finalize_control_var): New callback.\n+\t(emutls_finish): Finalize emutls control variables.\n+\t* toplev.c (compile_file): Move the call to emutls_finish () \n+\tbefore varpool_assemble_pending_decls ().\n+\n 2010-05-24  Daniel Gutson  <dgutson@codesourcery.com>\n \n \t* config/arm/lib1funcs.asm (__ARM_ARCH__): __ARM_ARCH_7EM__"}, {"sha": "fcd720dd9a98cbf1067132a04f39d0565bc6e680", "filename": "gcc/toplev.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1db0429a13b229a2a2ad43ca895786871f0b4834/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1db0429a13b229a2a2ad43ca895786871f0b4834/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=1db0429a13b229a2a2ad43ca895786871f0b4834", "patch": "@@ -1063,17 +1063,18 @@ compile_file (void)\n   if (errorcount || sorrycount)\n     return;\n \n+  /* Ensure that emulated TLS control vars are finalized and build \n+     a static constructor for them, when it is required.  */\n+  if (!targetm.have_tls)\n+    emutls_finish ();\n+\n   varpool_assemble_pending_decls ();\n   finish_aliases_2 ();\n \n   /* Likewise for mudflap static object registrations.  */\n   if (flag_mudflap)\n     mudflap_finish_file ();\n \n-  /* Likewise for emulated thread-local storage.  */\n-  if (!targetm.have_tls)\n-    emutls_finish ();\n-\n   output_shared_constant_pool ();\n   output_object_blocks ();\n "}, {"sha": "3f8fd02aa8f92f92d065dac0268e7112df564b8e", "filename": "gcc/varasm.c", "status": "modified", "additions": 35, "deletions": 4, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1db0429a13b229a2a2ad43ca895786871f0b4834/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1db0429a13b229a2a2ad43ca895786871f0b4834/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=1db0429a13b229a2a2ad43ca895786871f0b4834", "patch": "@@ -314,13 +314,14 @@ get_emutls_init_templ_addr (tree decl)\n   to = build_decl (DECL_SOURCE_LOCATION (decl),\n \t\t   VAR_DECL, name, TREE_TYPE (decl));\n   SET_DECL_ASSEMBLER_NAME (to, DECL_NAME (to));\n-  DECL_TLS_MODEL (to) = TLS_MODEL_EMULATED;\n+\n   DECL_ARTIFICIAL (to) = 1;\n   TREE_USED (to) = TREE_USED (decl);\n   TREE_READONLY (to) = 1;\n   DECL_IGNORED_P (to) = 1;\n   DECL_CONTEXT (to) = DECL_CONTEXT (decl);\n   DECL_SECTION_NAME (to) = DECL_SECTION_NAME (decl);\n+  DECL_PRESERVE_P (to) = DECL_PRESERVE_P (decl);\n \n   DECL_WEAK (to) = DECL_WEAK (decl);\n   if (DECL_ONE_ONLY (decl))\n@@ -333,6 +334,7 @@ get_emutls_init_templ_addr (tree decl)\n   else\n     TREE_STATIC (to) = 1;\n \n+  DECL_VISIBILITY_SPECIFIED (to) = DECL_VISIBILITY_SPECIFIED (decl);\n   DECL_INITIAL (to) = DECL_INITIAL (decl);\n   DECL_INITIAL (decl) = NULL;\n \n@@ -385,6 +387,8 @@ emutls_decl (tree decl)\n       DECL_TLS_MODEL (to) = TLS_MODEL_EMULATED;\n       DECL_ARTIFICIAL (to) = 1;\n       DECL_IGNORED_P (to) = 1;\n+      /* FIXME: work around PR44132.  */\n+      DECL_PRESERVE_P (to) = 1;\n       TREE_READONLY (to) = 0;\n       SET_DECL_ASSEMBLER_NAME (to, DECL_NAME (to));\n       if (DECL_ONE_ONLY (decl))\n@@ -412,6 +416,10 @@ emutls_decl (tree decl)\n   DECL_COMMON (to) = DECL_COMMON (decl);\n   DECL_WEAK (to) = DECL_WEAK (decl);\n   DECL_VISIBILITY (to) = DECL_VISIBILITY (decl);\n+  DECL_VISIBILITY_SPECIFIED (to) = DECL_VISIBILITY_SPECIFIED (decl);\n+  \n+  /* Fortran might pass this to us.  */\n+  DECL_RESTRICTED_P (to) = DECL_RESTRICTED_P (decl);\n \n   return to;\n }\n@@ -450,16 +458,39 @@ emutls_common_1 (void **loc, void *xstmts)\n   return 1;\n }\n \n+/* Callback to finalize one emutls control variable.  */\n+\n+static int\n+emutls_finalize_control_var (void **loc, \n+\t\t\t\tvoid *unused ATTRIBUTE_UNUSED)\n+{\n+  struct tree_map *h = *(struct tree_map **) loc;\n+  if (h != NULL) \n+    {\n+      struct varpool_node *node = varpool_node (h->to);\n+      /* Because varpool_finalize_decl () has side-effects,\n+         only apply to un-finalized vars.  */\n+      if (node && !node->finalized) \n+\tvarpool_finalize_decl (h->to);\n+    }\n+  return 1;\n+}\n+\n+/* Finalize emutls control vars and add a static constructor if\n+   required.  */\n+\n void\n emutls_finish (void)\n {\n+  if (emutls_htab == NULL)\n+    return;\n+  htab_traverse_noresize (emutls_htab, \n+\t\t\t  emutls_finalize_control_var, NULL);\n+\n   if (targetm.emutls.register_common)\n     {\n       tree body = NULL_TREE;\n \n-      if (emutls_htab == NULL)\n-\treturn;\n-\n       htab_traverse_noresize (emutls_htab, emutls_common_1, &body);\n       if (body == NULL_TREE)\n \treturn;"}]}