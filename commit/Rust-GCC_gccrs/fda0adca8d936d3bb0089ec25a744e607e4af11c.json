{"sha": "fda0adca8d936d3bb0089ec25a744e607e4af11c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmRhMGFkY2E4ZDkzNmQzYmIwMDg5ZWMyNWE3NDRlNjA3ZTRhZjExYw==", "commit": {"author": {"name": "Douglas Gregor", "email": "doug.gregor@gmail.com", "date": "2007-04-20T23:45:25Z"}, "committer": {"name": "Doug Gregor", "email": "dgregor@gcc.gnu.org", "date": "2007-04-20T23:45:25Z"}, "message": "standards.texi: Re-arrange into language-specific subsections.\n\n2007-04-21  Douglas Gregor  <doug.gregor@gmail.com>\n\n\t* doc/standards.texi: Re-arrange into language-specific\n\tsubsections. Add a C++ section, documenting which standards we\n\tsupport.\n\nFrom-SVN: r124013", "tree": {"sha": "b40dda98457a43e1c64cacf6e3ce4b3ebef41f14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b40dda98457a43e1c64cacf6e3ce4b3ebef41f14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fda0adca8d936d3bb0089ec25a744e607e4af11c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fda0adca8d936d3bb0089ec25a744e607e4af11c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fda0adca8d936d3bb0089ec25a744e607e4af11c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fda0adca8d936d3bb0089ec25a744e607e4af11c/comments", "author": {"login": "DougGregor", "id": 989428, "node_id": "MDQ6VXNlcjk4OTQyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/989428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DougGregor", "html_url": "https://github.com/DougGregor", "followers_url": "https://api.github.com/users/DougGregor/followers", "following_url": "https://api.github.com/users/DougGregor/following{/other_user}", "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}", "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions", "organizations_url": "https://api.github.com/users/DougGregor/orgs", "repos_url": "https://api.github.com/users/DougGregor/repos", "events_url": "https://api.github.com/users/DougGregor/events{/privacy}", "received_events_url": "https://api.github.com/users/DougGregor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "285463b5a2d1255c15f8e20cc899f0b1633b80be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/285463b5a2d1255c15f8e20cc899f0b1633b80be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/285463b5a2d1255c15f8e20cc899f0b1633b80be"}], "stats": {"total": 56, "additions": 51, "deletions": 5}, "files": [{"sha": "acab49212b8a83b6a0da030e1ede2aeab1ab0aaa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fda0adca8d936d3bb0089ec25a744e607e4af11c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fda0adca8d936d3bb0089ec25a744e607e4af11c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fda0adca8d936d3bb0089ec25a744e607e4af11c", "patch": "@@ -1,3 +1,9 @@\n+2007-04-21  Douglas Gregor  <doug.gregor@gmail.com>\n+\n+\t* doc/standards.texi: Re-arrange into language-specific\n+\tsubsections. Add a C++ section, documenting which standards we\n+\tsupport.\n+\n 2007-04-21  Zdenek Dvorak  <dvorakz@suse.cz>\n \n \t* tree-ssa-structalias.c (delete_points_to_sets): Free graph->complex."}, {"sha": "ddee01a5a0117259a94c532b565079d38ea7f297", "filename": "gcc/doc/standards.texi", "status": "modified", "additions": 45, "deletions": 5, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fda0adca8d936d3bb0089ec25a744e607e4af11c/gcc%2Fdoc%2Fstandards.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fda0adca8d936d3bb0089ec25a744e607e4af11c/gcc%2Fdoc%2Fstandards.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fstandards.texi?ref=fda0adca8d936d3bb0089ec25a744e607e4af11c", "patch": "@@ -4,6 +4,12 @@\n \n @node Standards\n @chapter Language Standards Supported by GCC\n+\n+For each language compiled by GCC for which there is a standard, GCC\n+attempts to follow one or more versions of that standard, possibly\n+with some exceptions, and possibly with some extensions.\n+\n+@section C language\n @cindex C standard\n @cindex C standards\n @cindex ANSI C standard\n@@ -38,10 +44,6 @@\n @cindex hosted environment\n @findex __STDC_HOSTED__\n \n-For each language compiled by GCC for which there is a standard, GCC\n-attempts to follow one or more versions of that standard, possibly\n-with some exceptions, and possibly with some extensions.\n-\n GCC supports three versions of the C standard, although support for\n the most recent version is not yet complete.\n \n@@ -154,8 +156,45 @@ For references to Technical Corrigenda, Rationale documents and\n information concerning the history of C that is available online, see\n @uref{http://gcc.gnu.org/readings.html}\n \n-@c FIXME: details of C++ standard.\n+@section C++ language\n+\n+GCC supports the ISO C++ standard (1998) and contains experimental\n+support for the upcoming ISO C++ standard (200x).\n+\n+The original ISO C++ standard was published as the ISO standard (ISO/IEC\n+14882:1998) and amended by a Technical Corrigenda published in 2003\n+(ISO/IEC 14882:2003). These standards are referred to as C++98 and\n+C++03, respectively. GCC implements the majority of C++98 (@code{export}\n+is a notable exception) and most of the changes in C++03.  To select\n+this standard in GCC, use one of the options @option{-ansi} or\n+@option{-std=c++98}; to obtain all the diagnostics required by the\n+standard, you should also specify @option{-pedantic} (or\n+@option{-pedantic-errors} if you want them to be errors rather than\n+warnings).\n+\n+The ISO C++ committee is working on a new ISO C++ standard, dubbed\n+C++0x, that is intended to be published by 2009. C++0x contains several\n+changes to the C++ language, some of which have been implemented in an\n+experimental C++0x mode in GCC. The C++0x mode in GCC tracks the draft\n+working paper for the C++0x standard; the latest working paper is\n+available on the ISO C++ committee's web site at\n+@uref{http://www.open-std.org/jtc1/sc22/wg21/}. For information\n+regarding the C++0x features available in the experimental C++0x mode,\n+see @uref{http://gcc.gnu.org/gcc-4.3/cxx0x_status.html}. To select this\n+standard in GCC, use the option @option{-std=c++0x}; to obtain all the\n+diagnostics required by the standard, you should also specify\n+@option{-pedantic} (or @option{-pedantic-errors} if you want them to be\n+errors rather than warnings).\n+\n+By default, GCC provides some extensions to the C++ language; @xref{C++\n+Dialect Options,Options Controlling C++ Dialect}.  Use of the\n+@option{-std} option listed above will disable these extensions.  You\n+may also select an extended version of the C++ language explicitly with\n+@option{-std=gnu++98} (for C++98 with GNU extensions) or\n+@option{-std=gnu++0x} (for C++0x with GNU extensions).  The default, if\n+no C++ language dialect options are given, is @option{-std=gnu++98}.\n \n+@section Objective-C and Objective-C++ languages\n @cindex Objective-C\n @cindex Objective-C++\n \n@@ -177,6 +216,7 @@ and\n have additional useful information.\n @end itemize\n \n+@section Treelang language\n @cindex treelang\n There is no standard for treelang, which is a sample language front end\n for GCC@.  Its only purpose is as a sample for people wishing to write a"}]}