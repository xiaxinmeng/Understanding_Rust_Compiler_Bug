{"sha": "9ca67d3f24e7386cf89c2ce2095677cd0e4c87de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNhNjdkM2YyNGU3Mzg2Y2Y4OWMyY2UyMDk1Njc3Y2QwZTRjODdkZQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2017-01-06T11:24:02Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-06T11:24:02Z"}, "message": "exp_ch6.adb (Expand_Protected_Subprogram_Call): Add guard to better detect call within an entry_wrapper.\n\n2017-01-06  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch6.adb (Expand_Protected_Subprogram_Call): Add guard to\n\tbetter detect call within an entry_wrapper.\n\t* sem_res.adb (Resolve_Call): A protected call within an\n\tentity_wrapper is analyzed in the context of the protected\n\tobject but corresponds to a pre-analysis and is not an access\n\tbefore elaboration.\n\t* sem_attr.adb: Minor reformatting.\n\nFrom-SVN: r244139", "tree": {"sha": "7f03c7a1cc81cdacb953ca528df650d4eb61fde6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f03c7a1cc81cdacb953ca528df650d4eb61fde6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ca67d3f24e7386cf89c2ce2095677cd0e4c87de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ca67d3f24e7386cf89c2ce2095677cd0e4c87de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ca67d3f24e7386cf89c2ce2095677cd0e4c87de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ca67d3f24e7386cf89c2ce2095677cd0e4c87de/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5e127570e2871666c51d6c27a05cc3297030a823", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e127570e2871666c51d6c27a05cc3297030a823", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e127570e2871666c51d6c27a05cc3297030a823"}], "stats": {"total": 38, "additions": 28, "deletions": 10}, "files": [{"sha": "5419627eafaae6fa6ba4e58179f3d2c6d7f80e40", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ca67d3f24e7386cf89c2ce2095677cd0e4c87de/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ca67d3f24e7386cf89c2ce2095677cd0e4c87de/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9ca67d3f24e7386cf89c2ce2095677cd0e4c87de", "patch": "@@ -1,3 +1,13 @@\n+2017-01-06  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch6.adb (Expand_Protected_Subprogram_Call): Add guard to\n+\tbetter detect call within an entry_wrapper.\n+\t* sem_res.adb (Resolve_Call): A protected call within an\n+\tentity_wrapper is analyzed in the context of the protected\n+\tobject but corresponds to a pre-analysis and is not an access\n+\tbefore elaboration.\n+\t* sem_attr.adb: Minor reformatting.\n+\n 2017-01-06  Justin Squirek  <squirek@adacore.com>\n \n \t* sem_attr.adb (Analyze_Attribute): Modify semantic checks for"}, {"sha": "3f201bb979adc7c8db1c42ec068edf18244cdda6", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ca67d3f24e7386cf89c2ce2095677cd0e4c87de/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ca67d3f24e7386cf89c2ce2095677cd0e4c87de/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=9ca67d3f24e7386cf89c2ce2095677cd0e4c87de", "patch": "@@ -6006,6 +6006,7 @@ package body Exp_Ch6 is\n       --  case this must be handled as an inter-object call.\n \n       if not In_Open_Scopes (Scop)\n+        or else Is_Entry_Wrapper (Current_Scope)\n         or else not Is_Entity_Name (Name (N))\n       then\n          if Nkind (Name (N)) = N_Selected_Component then"}, {"sha": "91d740a17ec696138d75c7bd1c4af7d742a3b9d9", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ca67d3f24e7386cf89c2ce2095677cd0e4c87de/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ca67d3f24e7386cf89c2ce2095677cd0e4c87de/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=9ca67d3f24e7386cf89c2ce2095677cd0e4c87de", "patch": "@@ -3840,24 +3840,29 @@ package body Sem_Attr is\n       when Attribute_Finalization_Size =>\n          Check_E0;\n \n+         --  The prefix denotes an object\n+\n          if Is_Object_Reference (P) then\n             Analyze_And_Resolve (P);\n             Check_Object_Reference (P);\n \n-         --  Redundant type verification for accurate error output\n+         --  Check the prefix is a type to avoid an error message stating the\n+         --  prefix must exclusively denote one\n+\n+         elsif Is_Entity_Name (P) and then Is_Type (Entity (P)) then\n \n-         elsif not Is_Entity_Name (P)\n-           or else not Is_Type (Entity (P))\n-         then\n-            Error_Attr_P (\"prefix of % attribute must be a definite type or\" &\n-                          \" an object\");\n-         else\n             Check_Type;\n             Check_Not_Incomplete_Type;\n             if Is_Class_Wide_Type (Etype (P)) then\n-               Error_Attr_P (\"prefix of % attribute cannot be applied to \" &\n-                             \"a class-wide type\");\n+               Error_Attr_P\n+                 (\"prefix of % attribute cannot denote a class-wide type\");\n             end if;\n+\n+         --  The prefix does not denote an object or a type\n+\n+         else\n+            Error_Attr_P\n+              (\"prefix of % attribute must be a definite type or an object\");\n          end if;\n \n          Set_Etype (N, Universal_Integer);"}, {"sha": "74dc0e19433f6e8db39d88c3786949e7d10c34a6", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ca67d3f24e7386cf89c2ce2095677cd0e4c87de/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ca67d3f24e7386cf89c2ce2095677cd0e4c87de/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=9ca67d3f24e7386cf89c2ce2095677cd0e4c87de", "patch": "@@ -6287,12 +6287,14 @@ package body Sem_Res is\n \n       --  A protected function cannot be called within the definition of the\n       --  enclosing protected type, unless it is part of a pre/postcondition\n-      --  on another protected operation.\n+      --  on another protected operation. This may appear in the entry\n+      --  wrapper created for an entry with preconditions.\n \n       if Is_Protected_Type (Scope (Nam))\n         and then In_Open_Scopes (Scope (Nam))\n         and then not Has_Completion (Scope (Nam))\n         and then not In_Spec_Expression\n+        and then not Is_Entry_Wrapper (Current_Scope)\n       then\n          Error_Msg_NE\n            (\"& cannot be called before end of protected definition\", N, Nam);"}]}