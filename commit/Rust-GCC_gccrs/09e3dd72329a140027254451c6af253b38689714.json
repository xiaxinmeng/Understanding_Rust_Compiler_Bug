{"sha": "09e3dd72329a140027254451c6af253b38689714", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDllM2RkNzIzMjlhMTQwMDI3MjU0NDUxYzZhZjI1M2IzODY4OTcxNA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-01T23:56:12Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-01T23:56:12Z"}, "message": "(decl_attributes): Allow format attributes on old style\n(non-prototype) function declarations.\n\nFrom-SVN: r6463", "tree": {"sha": "e204182d1644b678fbb0862b2e446f307287ceb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e204182d1644b678fbb0862b2e446f307287ceb7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09e3dd72329a140027254451c6af253b38689714", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09e3dd72329a140027254451c6af253b38689714", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09e3dd72329a140027254451c6af253b38689714", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09e3dd72329a140027254451c6af253b38689714/comments", "author": null, "committer": null, "parents": [{"sha": "e73735563717fa9dfaf10dfa7dfe8242026d6c67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e73735563717fa9dfaf10dfa7dfe8242026d6c67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e73735563717fa9dfaf10dfa7dfe8242026d6c67"}], "stats": {"total": 52, "additions": 28, "deletions": 24}, "files": [{"sha": "73ae7ebd686cc561089bc6e0d80a0b8d64f211ec", "filename": "gcc/c-common.c", "status": "modified", "additions": 28, "deletions": 24, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09e3dd72329a140027254451c6af253b38689714/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09e3dd72329a140027254451c6af253b38689714/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=09e3dd72329a140027254451c6af253b38689714", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines shared by all languages that are variants of C.\n-   Copyright (C) 1992, 1993 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 1993, 1994 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -345,35 +345,39 @@ decl_attributes (decl, attributes)\n \t    continue;\n \t  }\n \n-\t/* Verify that the format_num argument is actually a string, in case\n-\t   the format attribute is in error.  */\n+\t/* If a parameter list is specified, verify that the format_num\n+\t   argument is actually a string, in case the format attribute\n+\t   is in error.  */\n \targument = TYPE_ARG_TYPES (TREE_TYPE (decl));\n-\tfor (arg_num = 1; ; ++arg_num)\n+\tif (argument)\n \t  {\n-\t    if (argument == 0 || arg_num == format_num)\n-\t      break;\n-\t    argument = TREE_CHAIN (argument);\n-\t  }\n-\tif (! argument\n-\t    || TREE_CODE (TREE_VALUE (argument)) != POINTER_TYPE\n-\t    || (TYPE_MAIN_VARIANT (TREE_TYPE (TREE_VALUE (argument)))\n-\t\t!= char_type_node))\n-\t  {\n-\t    error_with_decl (decl,\n-\t\t\t     \"format string arg not a string type, for `%s'\");\n-\t    continue;\n-\t  }\n-\tif (first_arg_num != 0)\n-\t  {\n-\t    /* Verify that first_arg_num points to the last arg, the ... */\n-\t    while (argument)\n-\t      arg_num++, argument = TREE_CHAIN (argument);\n-\t    if (arg_num != first_arg_num)\n+\t    for (arg_num = 1; ; ++arg_num)\n+\t      {\n+\t\tif (argument == 0 || arg_num == format_num)\n+\t\t  break;\n+\t\targument = TREE_CHAIN (argument);\n+\t      }\n+\t    if (! argument\n+\t\t|| TREE_CODE (TREE_VALUE (argument)) != POINTER_TYPE\n+\t\t|| (TYPE_MAIN_VARIANT (TREE_TYPE (TREE_VALUE (argument)))\n+\t\t    != char_type_node))\n \t      {\n \t\terror_with_decl (decl,\n-\t\t\t\t \"args to be formatted is not ..., for `%s'\");\n+\t\t\t     \"format string arg not a string type, for `%s'\");\n \t\tcontinue;\n \t      }\n+\t    if (first_arg_num != 0)\n+\t      {\n+\t\t/* Verify that first_arg_num points to the last arg, the ... */\n+\t\twhile (argument)\n+\t\t  arg_num++, argument = TREE_CHAIN (argument);\n+\t\tif (arg_num != first_arg_num)\n+\t\t  {\n+\t\t    error_with_decl (decl,\n+\t\t\t\t \"args to be formatted is not ..., for `%s'\");\n+\t\t    continue;\n+\t\t  }\n+\t      }\n \t  }\n \n \trecord_function_format (DECL_NAME (decl), DECL_ASSEMBLER_NAME (decl),"}]}