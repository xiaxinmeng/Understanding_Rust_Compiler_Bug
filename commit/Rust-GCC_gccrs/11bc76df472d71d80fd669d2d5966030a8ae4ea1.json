{"sha": "11bc76df472d71d80fd669d2d5966030a8ae4ea1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTFiYzc2ZGY0NzJkNzFkODBmZDY2OWQyZDU5NjYwMzBhOGFlNGVhMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-31T09:18:57Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-31T09:18:57Z"}, "message": "[multiple changes]\n\n2011-08-31  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch4.adb: Minor reformatting.\n\t* sem_ch6.adb: Minor code reorganization (use Ekind_In).\n\n2011-08-31  Thomas Quinot  <quinot@adacore.com>\n\n\t* scos.ads: Minor documentation clarification.\n\t* put_scos.adb: Do not generate SCO unit header line for a unit that\n\thas no SCO lines.\n\nFrom-SVN: r178367", "tree": {"sha": "1e0e14b9fcdfad6fef24c03f9231abd24dda5d36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e0e14b9fcdfad6fef24c03f9231abd24dda5d36"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11bc76df472d71d80fd669d2d5966030a8ae4ea1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11bc76df472d71d80fd669d2d5966030a8ae4ea1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11bc76df472d71d80fd669d2d5966030a8ae4ea1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11bc76df472d71d80fd669d2d5966030a8ae4ea1/comments", "author": null, "committer": null, "parents": [{"sha": "876d4394d2e36fbfc16a6600763ca35b2d5624c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/876d4394d2e36fbfc16a6600763ca35b2d5624c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/876d4394d2e36fbfc16a6600763ca35b2d5624c5"}], "stats": {"total": 86, "additions": 60, "deletions": 26}, "files": [{"sha": "24abfaed4dbfec1377226968ebb6d57e6bdbff3f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11bc76df472d71d80fd669d2d5966030a8ae4ea1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11bc76df472d71d80fd669d2d5966030a8ae4ea1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=11bc76df472d71d80fd669d2d5966030a8ae4ea1", "patch": "@@ -1,3 +1,14 @@\n+2011-08-31  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch4.adb: Minor reformatting.\n+\t* sem_ch6.adb: Minor code reorganization (use Ekind_In).\n+\n+2011-08-31  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* scos.ads: Minor documentation clarification.\n+\t* put_scos.adb: Do not generate SCO unit header line for a unit that\n+\thas no SCO lines.\n+\n 2011-08-31  Robert Dewar  <dewar@adacore.com>\n \n \t* a-rbtgbo.adb, alfa_test.adb: Minor reformatting."}, {"sha": "32427df781736069414c71ef758e8c17f03053c6", "filename": "gcc/ada/put_scos.adb", "status": "modified", "additions": 35, "deletions": 17, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11bc76df472d71d80fd669d2d5966030a8ae4ea1/gcc%2Fada%2Fput_scos.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11bc76df472d71d80fd669d2d5966030a8ae4ea1/gcc%2Fada%2Fput_scos.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fput_scos.adb?ref=11bc76df472d71d80fd669d2d5966030a8ae4ea1", "patch": "@@ -28,7 +28,11 @@ with SCOs;    use SCOs;\n with Snames;  use Snames;\n \n procedure Put_SCOs is\n-   Ctr : Nat;\n+   Current_SCO_Unit : SCO_Unit_Index := 0;\n+   --  Initial value must not be a valid unit index\n+\n+   procedure Write_SCO_Initiate (SU : SCO_Unit_Index);\n+   --  Start SCO line for unit SU, also emitting SCO unit header if necessary\n \n    procedure Output_Range (T : SCO_Table_Entry);\n    --  Outputs T.From and T.To in line:col-line:col format\n@@ -72,10 +76,34 @@ procedure Put_SCOs is\n       end loop;\n    end Output_String;\n \n+   ------------------------\n+   -- Write_SCO_Initiate --\n+   ------------------------\n+\n+   procedure Write_SCO_Initiate (SU : SCO_Unit_Index) is\n+      SUT : SCO_Unit_Table_Entry renames SCO_Unit_Table.Table (SU);\n+   begin\n+      if Current_SCO_Unit /= SU then\n+         Write_Info_Initiate ('C');\n+         Write_Info_Char (' ');\n+         Write_Info_Nat (SUT.Dep_Num);\n+         Write_Info_Char (' ');\n+\n+         Output_String (SUT.File_Name.all);\n+\n+         Write_Info_Terminate;\n+\n+         Current_SCO_Unit := SU;\n+      end if;\n+\n+      Write_Info_Initiate ('C');\n+   end Write_SCO_Initiate;\n+\n --  Start of processing for Put_SCOs\n \n begin\n-   --  Loop through entries in SCO_Unit_Table\n+   --  Loop through entries in SCO_Unit_Table. Note that entry 0 is by\n+   --  convention present but unused.\n \n    for U in 1 .. SCO_Unit_Table.Last loop\n       declare\n@@ -88,19 +116,6 @@ begin\n          Start := SUT.From;\n          Stop  := SUT.To;\n \n-         --  Write unit header (omitted if no SCOs are generated for this unit)\n-\n-         if Start <= Stop then\n-            Write_Info_Initiate ('C');\n-            Write_Info_Char (' ');\n-            Write_Info_Nat (SUT.Dep_Num);\n-            Write_Info_Char (' ');\n-\n-            Output_String (SUT.File_Name.all);\n-\n-            Write_Info_Terminate;\n-         end if;\n-\n          --  Loop through SCO entries for this unit\n \n          loop\n@@ -111,6 +126,9 @@ begin\n                T            : SCO_Table_Entry renames SCO_Table.Table (Start);\n                Continuation : Boolean;\n \n+               Ctr          : Nat;\n+               --  Counter for statement entries\n+\n             begin\n                case T.C1 is\n \n@@ -127,7 +145,7 @@ begin\n                         end if;\n \n                         if Ctr = 0 then\n-                           Write_Info_Initiate ('C');\n+                           Write_SCO_Initiate (U);\n                            if not Continuation then\n                               Write_Info_Char ('S');\n                               Continuation := True;\n@@ -204,7 +222,7 @@ begin\n                      --  For all other cases output decision line\n \n                      else\n-                        Write_Info_Initiate ('C');\n+                        Write_SCO_Initiate (U);\n                         Write_Info_Char (T.C1);\n \n                         if T.C1 /= 'X' then"}, {"sha": "904c6bfe9b8011016464f8d61f9dbdd56c4166cd", "filename": "gcc/ada/scos.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11bc76df472d71d80fd669d2d5966030a8ae4ea1/gcc%2Fada%2Fscos.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11bc76df472d71d80fd669d2d5966030a8ae4ea1/gcc%2Fada%2Fscos.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscos.ads?ref=11bc76df472d71d80fd669d2d5966030a8ae4ea1", "patch": "@@ -458,8 +458,8 @@ package SCOs is\n \n    --  This table keeps track of the units and the corresponding starting and\n    --  ending indexes (From, To) in the SCO table. Note that entry zero is\n-   --  unused, it is for convenience in calling the sort routine. Thus the\n-   --  real lower bound for active entries is 1.\n+   --  present but unused, it is for convenience in calling the sort routine.\n+   --  Thus the lower bound for real entries is 1.\n \n    type SCO_Unit_Index is new Int;\n    --  Used to index values in this table. Values start at 1 and are assigned"}, {"sha": "e5299b2211c07b0403ba4cc1446063dc9546af01", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11bc76df472d71d80fd669d2d5966030a8ae4ea1/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11bc76df472d71d80fd669d2d5966030a8ae4ea1/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=11bc76df472d71d80fd669d2d5966030a8ae4ea1", "patch": "@@ -277,7 +277,8 @@ package body Sem_Ch4 is\n    --  the call may be overloaded with both interpretations.\n \n    function Try_Object_Operation\n-     (N : Node_Id; CW_Test_Only : Boolean := False) return Boolean;\n+     (N            : Node_Id;\n+      CW_Test_Only : Boolean := False) return Boolean;\n    --  Ada 2005 (AI-252): Support the object.operation notation. If node N\n    --  is a call in this notation, it is transformed into a normal subprogram\n    --  call where the prefix is a parameter, and True is returned. If node\n@@ -1763,6 +1764,9 @@ package body Sem_Ch4 is\n    --  Start of processing for Analyze_Explicit_Dereference\n \n    begin\n+      --  If source node, check SPARK restriction. We guard this with the\n+      --  source node check, because ???\n+\n       if Comes_From_Source (N) then\n          Check_SPARK_Restriction (\"explicit dereference is not allowed\", N);\n       end if;\n@@ -4185,15 +4189,17 @@ package body Sem_Ch4 is\n                --  Duplicate the call. This is required to avoid problems with\n                --  the tree transformations performed by Try_Object_Operation.\n \n-              and then Try_Object_Operation\n-                         (N => Sinfo.Name (New_Copy_Tree (Parent (N))),\n-                          CW_Test_Only => True)\n+              and then\n+                Try_Object_Operation\n+                  (N            => Sinfo.Name (New_Copy_Tree (Parent (N))),\n+                   CW_Test_Only => True)\n             then\n                return;\n             end if;\n          end if;\n \n          if Etype (N) = Any_Type and then Is_Protected_Type (Prefix_Type) then\n+\n             --  Case of a prefix of a protected type: selector might denote\n             --  an invisible private component.\n "}, {"sha": "290b53d7fcbdc102bf929002df8900e38355a947", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11bc76df472d71d80fd669d2d5966030a8ae4ea1/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11bc76df472d71d80fd669d2d5966030a8ae4ea1/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=11bc76df472d71d80fd669d2d5966030a8ae4ea1", "patch": "@@ -1355,9 +1355,8 @@ package body Sem_Ch6 is\n \n          for J in reverse 0 .. Scope_Stack.Last loop\n             Result := Scope_Stack.Table (J).Entity;\n-            exit when Ekind (Result) /= E_Block\n-              and then Ekind (Result) /= E_Loop\n-            and then Chars (Result) /= Name_uPostconditions;\n+            exit when not Ekind_In (Result, E_Block, E_Loop)\n+              and then Chars (Result) /= Name_uPostconditions;\n          end loop;\n \n          pragma Assert (Present (Result));"}]}