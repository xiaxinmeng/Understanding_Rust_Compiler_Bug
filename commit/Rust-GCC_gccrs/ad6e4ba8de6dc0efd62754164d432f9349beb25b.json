{"sha": "ad6e4ba8de6dc0efd62754164d432f9349beb25b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQ2ZTRiYThkZTZkYzBlZmQ2Mjc1NDE2NGQ0MzJmOTM0OWJlYjI1Yg==", "commit": {"author": {"name": "Bin Cheng", "email": "bin.cheng@arm.com", "date": "2016-10-27T08:31:01Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2016-10-27T08:31:01Z"}, "message": "match.pd ((convert1 (minmax ((convert2 (x) c)))) -> minmax (x c)): New pattern.\n\n\t* match.pd ((convert1 (minmax ((convert2 (x) c)))) -> minmax (x c)):\n\tNew pattern.\n\n\tgcc/testsuite\n\t* gcc.dg/fold-convmaxconv-1.c: New test.\n\t* gcc.dg/fold-convminconv-1.c: New test.\n\nFrom-SVN: r241612", "tree": {"sha": "410ba71c2e4974725417983c0c6b57a9f4cdf81c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/410ba71c2e4974725417983c0c6b57a9f4cdf81c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad6e4ba8de6dc0efd62754164d432f9349beb25b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad6e4ba8de6dc0efd62754164d432f9349beb25b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad6e4ba8de6dc0efd62754164d432f9349beb25b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad6e4ba8de6dc0efd62754164d432f9349beb25b/comments", "author": null, "committer": null, "parents": [{"sha": "fe14572b1ae8dc408645a0c4ce1d043d44acece6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe14572b1ae8dc408645a0c4ce1d043d44acece6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe14572b1ae8dc408645a0c4ce1d043d44acece6"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "ee733cf6ad219d02055a7d3ce298d3fbf1a5e33d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6e4ba8de6dc0efd62754164d432f9349beb25b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6e4ba8de6dc0efd62754164d432f9349beb25b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ad6e4ba8de6dc0efd62754164d432f9349beb25b", "patch": "@@ -1,3 +1,8 @@\n+2016-10-27  Bin Cheng  <bin.cheng@arm.com>\n+\n+\t* match.pd ((convert1 (minmax ((convert2 (x) c)))) -> minmax (x c)):\n+\tNew pattern.\n+\n 2016-10-26  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n \n \tPR target/78056"}, {"sha": "73bee34dcc5a82152952a02f1fc5afa9efac71ff", "filename": "gcc/match.pd", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6e4ba8de6dc0efd62754164d432f9349beb25b/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6e4ba8de6dc0efd62754164d432f9349beb25b/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=ad6e4ba8de6dc0efd62754164d432f9349beb25b", "patch": "@@ -1337,6 +1337,17 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n        && TYPE_MIN_VALUE (type)\n        && operand_equal_p (@1, TYPE_MIN_VALUE (type), OEP_ONLY_CONST))\n    @0)))\n+\n+/* (convert (minmax ((convert (x) c)))) -> minmax (x c) if x is promoted\n+   and the outer convert demotes the expression back to x's type.  */\n+(for minmax (min max)\n+ (simplify\n+  (convert (minmax@0 (convert @1) INTEGER_CST@2))\n+  (if (types_match (@1, type) && int_fits_type_p (@2, type)\n+       && TYPE_SIGN (TREE_TYPE (@0)) == TYPE_SIGN (type)\n+       && TYPE_PRECISION (TREE_TYPE (@0)) > TYPE_PRECISION (type))\n+   (minmax @1 (convert @2)))))\n+\n (for minmax (FMIN FMAX)\n  /* If either argument is NaN, return the other one.  Avoid the\n     transformation if we get (and honor) a signalling NaN.  */"}, {"sha": "512e9a63a96dee2417eb23945d3bb51fb311aca3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6e4ba8de6dc0efd62754164d432f9349beb25b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6e4ba8de6dc0efd62754164d432f9349beb25b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ad6e4ba8de6dc0efd62754164d432f9349beb25b", "patch": "@@ -1,3 +1,8 @@\n+2016-10-27  Bin Cheng  <bin.cheng@arm.com>\n+\n+\t* gcc.dg/fold-convmaxconv-1.c: New test.\n+\t* gcc.dg/fold-convminconv-1.c: New test.\n+\n 2016-10-26  Steven G. Kargl <kargl@gcc.gnu.org>\n \n \tPR fortran/78092"}, {"sha": "3ffff8bde426989405c2c84572cfaadcc5aaf0c5", "filename": "gcc/testsuite/gcc.dg/fold-convmaxconv-1.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6e4ba8de6dc0efd62754164d432f9349beb25b/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-convmaxconv-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6e4ba8de6dc0efd62754164d432f9349beb25b/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-convmaxconv-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-convmaxconv-1.c?ref=ad6e4ba8de6dc0efd62754164d432f9349beb25b", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-optimized\" } */\n+\n+int foo (short a[], int x)\n+{\n+  unsigned int i;\n+  for (i = 0; i < 1000; i++)\n+    {\n+      x = a[i];\n+      a[i] = (x <= 0 ? 0 : x);\n+    }\n+  return x;\n+}\n+\n+/* { dg-final { scan-tree-dump-not \" = MAX_EXPR <x_\\[0-9\\]*\" \"optimized\" } } */"}, {"sha": "f4a048e1f45031c1b9e75259870e78274594bf70", "filename": "gcc/testsuite/gcc.dg/fold-convminconv-1.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6e4ba8de6dc0efd62754164d432f9349beb25b/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-convminconv-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6e4ba8de6dc0efd62754164d432f9349beb25b/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-convminconv-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-convminconv-1.c?ref=ad6e4ba8de6dc0efd62754164d432f9349beb25b", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-optimized\" } */\n+\n+int foo (unsigned short a[], unsigned int x)\n+{\n+  unsigned int i;\n+  for (i = 0; i < 1000; i++)\n+    {\n+      x = a[i];\n+      a[i] = (x >= 255 ? 255 : x);\n+    }\n+  return x;\n+}\n+\n+/* { dg-final { scan-tree-dump-not \" = MIN_EXPR <x_\\[0-9\\]*\" \"optimized\" } } */"}]}