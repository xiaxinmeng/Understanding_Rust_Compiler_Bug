{"sha": "c34be55ec57157e7607728b303ba74a913cfc79f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM0YmU1NWVjNTcxNTdlNzYwNzcyOGIzMDNiYTc0YTkxM2NmYzc5Zg==", "commit": {"author": {"name": "Ziemowit Laski", "email": "zlaski@apple.com", "date": "2004-08-25T23:39:11Z"}, "committer": {"name": "Ziemowit Laski", "email": "zlaski@gcc.gnu.org", "date": "2004-08-25T23:39:11Z"}, "message": "c-decl.c (grokparm): New function.\n\n[gcc/ChangeLog]\n2004-08-25  Ziemowit Laski  <zlaski@apple.com>\n\n        * c-decl.c (grokparm): New function.\n        * c-tree.h (grokparm): New prototype.\n\nFrom-SVN: r86587", "tree": {"sha": "d46c9e1ac1b4f312097b3dbe8888b855482fd0fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d46c9e1ac1b4f312097b3dbe8888b855482fd0fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c34be55ec57157e7607728b303ba74a913cfc79f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c34be55ec57157e7607728b303ba74a913cfc79f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c34be55ec57157e7607728b303ba74a913cfc79f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c34be55ec57157e7607728b303ba74a913cfc79f/comments", "author": null, "committer": null, "parents": [{"sha": "cb7930898721b14def216a5cf3b8bd619b1dbc52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb7930898721b14def216a5cf3b8bd619b1dbc52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb7930898721b14def216a5cf3b8bd619b1dbc52"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "7770a07a8dc7b7252b8b7008fc730de4456204cb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c34be55ec57157e7607728b303ba74a913cfc79f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c34be55ec57157e7607728b303ba74a913cfc79f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c34be55ec57157e7607728b303ba74a913cfc79f", "patch": "@@ -1,3 +1,8 @@\n+2004-08-25  Ziemowit Laski  <zlaski@apple.com>\n+\n+\t* c-decl.c (grokparm): New function.\n+\t* c-tree.h (grokparm): New prototype.\n+\n 2004-08-25  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* tree-ssa-operands.h (struct ssa_operand_iterator_d): New.  SSA operand"}, {"sha": "6630d9a3488e82a34cb11046e1896c00b132a74c", "filename": "gcc/c-decl.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c34be55ec57157e7607728b303ba74a913cfc79f/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c34be55ec57157e7607728b303ba74a913cfc79f/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=c34be55ec57157e7607728b303ba74a913cfc79f", "patch": "@@ -3153,6 +3153,20 @@ finish_decl (tree decl, tree init, tree asmspec_tree)\n     }\n }\n \n+/* Given a parsed parameter declaration, decode it into a PARM_DECL.  */\n+\n+tree\n+grokparm (tree parm)\n+{\n+  tree decl = grokdeclarator (TREE_VALUE (TREE_PURPOSE (parm)),\n+\t\t\t      TREE_PURPOSE (TREE_PURPOSE (parm)),\n+\t\t\t      PARM, false, NULL);\n+\n+  decl_attributes (&decl, TREE_VALUE (parm), 0);\n+\n+  return decl;\n+}\n+\n /* Given a parsed parameter declaration, decode it into a PARM_DECL\n    and push that on the current scope.  */\n "}, {"sha": "5c99f47aa0ef773c250fa8c78b68a8af41ae8c2d", "filename": "gcc/c-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c34be55ec57157e7607728b303ba74a913cfc79f/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c34be55ec57157e7607728b303ba74a913cfc79f/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=c34be55ec57157e7607728b303ba74a913cfc79f", "patch": "@@ -180,6 +180,7 @@ extern tree get_parm_info (bool);\n extern tree grokfield (tree, tree, tree);\n extern tree groktypename (tree);\n extern tree groktypename_in_parm_context (tree);\n+extern tree grokparm (tree);\n extern tree implicitly_declare (tree);\n extern void keep_next_level (void);\n extern tree lookup_name (tree);"}]}