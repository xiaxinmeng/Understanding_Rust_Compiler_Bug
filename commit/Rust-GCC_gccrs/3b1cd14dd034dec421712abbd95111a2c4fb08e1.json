{"sha": "3b1cd14dd034dec421712abbd95111a2c4fb08e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2IxY2QxNGRkMDM0ZGVjNDIxNzEyYWJiZDk1MTExYTJjNGZiMDhlMQ==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2012-10-05T19:10:22Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2012-10-05T19:10:22Z"}, "message": "re PR target/54686 (std::abs (long long) resorts to std::abs (double) if llabs is absent)\n\n2012-10-05  Marc Glisse  <marc.glisse@inria.fr>\n\n\tPR libstdc++/54686\n\t* include/c_global/cstdlib (abs(long long)): Define with\n\t__builtin_llabs when we have long long.\n\t(abs(long)): Use __builtin_labs.\n\t(abs(__int128)): Define when we have __int128.\n\nFrom-SVN: r192138", "tree": {"sha": "8b8cdfa1b8934bc66cd9efe395649ab2032c1033", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b8cdfa1b8934bc66cd9efe395649ab2032c1033"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b1cd14dd034dec421712abbd95111a2c4fb08e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b1cd14dd034dec421712abbd95111a2c4fb08e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b1cd14dd034dec421712abbd95111a2c4fb08e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b1cd14dd034dec421712abbd95111a2c4fb08e1/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "67dd8d59381b8f0c3edf1191d408e13187392a21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67dd8d59381b8f0c3edf1191d408e13187392a21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67dd8d59381b8f0c3edf1191d408e13187392a21"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "45c6e69172b902084a651c4fc29df2b81e35eed4", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b1cd14dd034dec421712abbd95111a2c4fb08e1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b1cd14dd034dec421712abbd95111a2c4fb08e1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3b1cd14dd034dec421712abbd95111a2c4fb08e1", "patch": "@@ -1,3 +1,11 @@\n+2012-10-05  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR libstdc++/54686\n+\t* include/c_global/cstdlib (abs(long long)): Define with\n+\t__builtin_llabs when we have long long.\n+\t(abs(long)): Use __builtin_labs.\n+\t(abs(__int128)): Define when we have __int128.\n+\n 2012-10-05  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/c_global/cstdlib: Remove redundant pasto code protected"}, {"sha": "729a639c6e7e9f842f9649250a07dea901f694c2", "filename": "libstdc++-v3/include/c_global/cstdlib", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b1cd14dd034dec421712abbd95111a2c4fb08e1/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcstdlib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b1cd14dd034dec421712abbd95111a2c4fb08e1/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcstdlib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcstdlib?ref=3b1cd14dd034dec421712abbd95111a2c4fb08e1", "patch": "@@ -135,12 +135,22 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO\n   inline long\n-  abs(long __i) { return labs(__i); }\n+  abs(long __i) { return __builtin_labs(__i); }\n \n   inline ldiv_t\n   div(long __i, long __j) { return ldiv(__i, __j); }\n #endif\n \n+#ifdef _GLIBCXX_USE_LONG_LONG\n+  inline long long\n+  abs(long long __x) { return __builtin_llabs (__x); }\n+#endif\n+\n+#if !defined(__STRICT_ANSI__) && defined(_GLIBCXX_USE_INT128)\n+  inline __int128\n+  abs(__int128 __x) { return __x >= 0 ? __x : -__x; }\n+#endif\n+\n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace\n \n@@ -169,9 +179,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   using ::_Exit;\n #endif\n \n-  inline long long\n-  abs(long long __x) { return __x >= 0 ? __x : -__x; }\n-\n #if !_GLIBCXX_USE_C99_LONG_LONG_DYNAMIC\n   using ::llabs;\n \n@@ -206,7 +213,6 @@ namespace std\n   using ::__gnu_cxx::lldiv_t;\n #endif\n   using ::__gnu_cxx::_Exit;\n-  using ::__gnu_cxx::abs;\n #if !_GLIBCXX_USE_C99_LONG_LONG_DYNAMIC\n   using ::__gnu_cxx::llabs;\n   using ::__gnu_cxx::div;"}]}