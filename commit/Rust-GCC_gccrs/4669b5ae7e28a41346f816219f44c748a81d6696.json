{"sha": "4669b5ae7e28a41346f816219f44c748a81d6696", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDY2OWI1YWU3ZTI4YTQxMzQ2ZjgxNjIxOWY0NGM3NDhhODFkNjY5Ng==", "commit": {"author": {"name": "Alex Samuel", "email": "samuel@gcc.gnu.org", "date": "2000-04-07T03:33:15Z"}, "committer": {"name": "Alex Samuel", "email": "samuel@gcc.gnu.org", "date": "2000-04-07T03:33:15Z"}, "message": "Forgot the ChangeLog entry in this commit; here it is.\n\n\t* rtl.h (INSN_P): New macro.\n\t(successor_phi_fn): New typedef.\n\t(for_each_successor_phi): New prototype.\n\t(in_ssa_form): New variable.\n\t(PHI_NODE_P): Likewise.\n\t* flow.c (calculate_global_regs_live): Add to new_live_at_end from\n\tphi nodes in successors.\n\t(mark_used_regs): Add PHI case.\n\t(set_phi_alternative_reg): New function.\n\t(life_analysis): Assert that dead code elimination is not selected\n\twhen in SSA form.\n\t* toplev.c (to_ssa_time): New variable.\n\t(from_ssa_time): Likewise.\n\t(compile_file): Zero to_ssa_time and from_ssa_time.\n\tPrint time to convert to and from SSA.\n\t(rest_of_compilation): Time convert_to_ssa and convert_from_ssa.\n\t(print_time): Compute percent fraction as integer.\n\t* ssa.c (PHI_NODE_P): Moved to rtl.h.\n\t(convert_to_ssa): Check if we're already in SSA.\n\tDon't eliminate dead code in life_analysis.\n\tRerun flow and life analysis at bottom.\n\t(eliminate_phi): Use canonical regnos when adding nodes.\n\t(mark_reg_in_phi): New function.\n\t(mark_phi_and_copy_regs): Likewise.\n\t(convert_from_ssa): Rerun life analysis at top.\n\tUse coalesced partition.\n\tCheck for removing a phi node at the end of the block.\n\t(compute_coalesced_reg_partition): New function.\n\t(coalesce_regs_in_copies): Likewise.\n\t(coalesce_reg_in_phi): Likewise.\n\t(coalesce_regs_in_sucessor_phi_nodes): Likewise.\n\t(for_each_successor_phi): Likewise.\n\t(rename_context): New struct.\n\t(rename_block): Use a rename_context with rename_insn_1.  When\n\trenaming sets of a subreg, emit a copy of the entire reg first.\n\t(rename_insn_1): Treat data as a rename_context *.  Save current\n\tinsn in set_data.\n\t(rename_set_data): Add field set_insn.\n\t* Makefile.in (HASHTAB_H): Move up in file.\n\t(OBSTACK_H): New macro.\n\t(collect2.o): Use OBSTACK_H in dependencies.\n\t(sdbout.o): Likewise.\n\t(emit-rtl.o): Likewise.\n\t(simplify-rtx.o): Likewise.\n\t(fix-header.o): Likewise.\n\t(OBJS):\tAdd conflict.o.\n\t(conflict.o): New rule.\n\t* basic-block.h: Include partition.h.\n\t(conflict_graph): New typedef.\n\t(conflict_graph_enum_fn): Likewise.\n\t(conflict_graph_new): New prototype.\n\t(conflict_graph_delete): Likewise.\n\t(conflict_graph_add): Likewise.\n\t(conflict_graph_conflict_p): Likewise.\n\t(conflict_graph_enum): Likewise.\n\t(conflict_graph_merge_regs): Likewise.\n\t(conflict_graph_print): Likewise.\n\t(conflict_graph_compute): Likewise.\n\t* conflict.c: New file.\n\nFrom-SVN: r32981", "tree": {"sha": "295806fb19029b4be676418778e97ea153363443", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/295806fb19029b4be676418778e97ea153363443"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4669b5ae7e28a41346f816219f44c748a81d6696", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4669b5ae7e28a41346f816219f44c748a81d6696", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4669b5ae7e28a41346f816219f44c748a81d6696", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4669b5ae7e28a41346f816219f44c748a81d6696/comments", "author": null, "committer": null, "parents": [{"sha": "943aa13d716fd03818013b5ed94d4180f601a151", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/943aa13d716fd03818013b5ed94d4180f601a151", "html_url": "https://github.com/Rust-GCC/gccrs/commit/943aa13d716fd03818013b5ed94d4180f601a151"}], "stats": {"total": 62, "additions": 62, "deletions": 0}, "files": [{"sha": "6cc9587355fa8f963c0a31e94ac14c443242b6c1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4669b5ae7e28a41346f816219f44c748a81d6696/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4669b5ae7e28a41346f816219f44c748a81d6696/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4669b5ae7e28a41346f816219f44c748a81d6696", "patch": "@@ -1,3 +1,65 @@\n+2000-04-05  Alex Samuel  <samuel@codesourcery.com>\n+\n+\t* rtl.h (INSN_P): New macro.\n+\t(successor_phi_fn): New typedef.\n+\t(for_each_successor_phi): New prototype.\n+\t(in_ssa_form): New variable.\n+\t(PHI_NODE_P): Likewise.\n+\t* flow.c (calculate_global_regs_live): Add to new_live_at_end from\n+\tphi nodes in successors.\n+\t(mark_used_regs): Add PHI case.\n+\t(set_phi_alternative_reg): New function.\n+\t(life_analysis): Assert that dead code elimination is not selected\n+\twhen in SSA form.\n+\t* toplev.c (to_ssa_time): New variable.\n+\t(from_ssa_time): Likewise.\n+\t(compile_file): Zero to_ssa_time and from_ssa_time.\n+\tPrint time to convert to and from SSA.\n+\t(rest_of_compilation): Time convert_to_ssa and convert_from_ssa.\n+\t(print_time): Compute percent fraction as integer.\n+\t* ssa.c (PHI_NODE_P): Moved to rtl.h.\n+\t(convert_to_ssa): Check if we're already in SSA.  \n+\tDon't eliminate dead code in life_analysis.\n+\tRerun flow and life analysis at bottom.\n+\t(eliminate_phi): Use canonical regnos when adding nodes.\n+\t(mark_reg_in_phi): New function.\n+\t(mark_phi_and_copy_regs): Likewise.\n+\t(convert_from_ssa): Rerun life analysis at top.  \n+\tUse coalesced partition.\n+\tCheck for removing a phi node at the end of the block.\n+\t(compute_coalesced_reg_partition): New function.\n+\t(coalesce_regs_in_copies): Likewise.\n+\t(coalesce_reg_in_phi): Likewise.\n+\t(coalesce_regs_in_sucessor_phi_nodes): Likewise.\n+\t(for_each_successor_phi): Likewise.\n+\t(rename_context): New struct.\n+\t(rename_block): Use a rename_context with rename_insn_1.  When\n+\trenaming sets of a subreg, emit a copy of the entire reg first.\n+\t(rename_insn_1): Treat data as a rename_context *.  Save current\n+\tinsn in set_data.\n+\t(rename_set_data): Add field set_insn.\n+\t* Makefile.in (HASHTAB_H): Move up in file.\n+\t(OBSTACK_H): New macro.\n+\t(collect2.o): Use OBSTACK_H in dependencies.\n+\t(sdbout.o): Likewise.\n+\t(emit-rtl.o): Likewise.\n+\t(simplify-rtx.o): Likewise.\n+\t(fix-header.o): Likewise.\n+\t(OBJS):\tAdd conflict.o.\n+\t(conflict.o): New rule.\n+\t* basic-block.h: Include partition.h.\n+\t(conflict_graph): New typedef.\n+\t(conflict_graph_enum_fn): Likewise.\n+\t(conflict_graph_new): New prototype.\n+\t(conflict_graph_delete): Likewise.\n+\t(conflict_graph_add): Likewise.\n+\t(conflict_graph_conflict_p): Likewise.\n+\t(conflict_graph_enum): Likewise.\n+\t(conflict_graph_merge_regs): Likewise.\n+\t(conflict_graph_print): Likewise.\n+\t(conflict_graph_compute): Likewise.\n+\t* conflict.c: New file.\n+\n 2000-04-06  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* tlink.c (read_repo_files): Don't look for .rpo info for"}]}