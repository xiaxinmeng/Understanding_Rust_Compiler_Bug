{"sha": "ae0e50e87b2a7cf575ff2477ae9db3d9229642ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUwZTUwZTg3YjJhN2NmNTc1ZmYyNDc3YWU5ZGIzZDkyMjk2NDJlZg==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@redhat.com", "date": "2000-07-15T04:18:47Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2000-07-15T04:18:47Z"}, "message": "update portability guide\n\nFrom-SVN: r35041", "tree": {"sha": "6466798fe934097e747d92267fe4bdf6a10a1852", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6466798fe934097e747d92267fe4bdf6a10a1852"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae0e50e87b2a7cf575ff2477ae9db3d9229642ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae0e50e87b2a7cf575ff2477ae9db3d9229642ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae0e50e87b2a7cf575ff2477ae9db3d9229642ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae0e50e87b2a7cf575ff2477ae9db3d9229642ef/comments", "author": null, "committer": null, "parents": [{"sha": "7de515541f1d2325ef08839db0dd99a3b0e612a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7de515541f1d2325ef08839db0dd99a3b0e612a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7de515541f1d2325ef08839db0dd99a3b0e612a3"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "8a5201d1422a217dae4f85f17b0f3df9d5b8ec49", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae0e50e87b2a7cf575ff2477ae9db3d9229642ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae0e50e87b2a7cf575ff2477ae9db3d9229642ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae0e50e87b2a7cf575ff2477ae9db3d9229642ef", "patch": "@@ -1,3 +1,8 @@\n+2000-07-15  Michael Meissner  <meissner@redhat.com>\n+\n+\t* README.Portability: Update integer suffixes and function\n+\tprototype sections.\n+\n 2000-07-15  Neil Booth  <NeilB@earthling.net>\n \n \t* README.Portability: Small update."}, {"sha": "d6c8aecaa5df3255e0ac3a4c2f0fd890f225dc85", "filename": "gcc/README.Portability", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae0e50e87b2a7cf575ff2477ae9db3d9229642ef/gcc%2FREADME.Portability", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae0e50e87b2a7cf575ff2477ae9db3d9229642ef/gcc%2FREADME.Portability", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FREADME.Portability?ref=ae0e50e87b2a7cf575ff2477ae9db3d9229642ef", "patch": "@@ -155,6 +155,9 @@ ansidecl.h for the definitions of the above macros and more.\n #define PARAMS(paramlist)  ()         /* K+R C.  */\n #define VPARAMS(args)   (va_alist) va_dcl\n \n+One aspect of using K+R style function declarations, is you cannot have\n+arguments whose types are char, short, or float, since without prototypes (ie,\n+K+R rules), these types are promoted to int, int, and double respectively.\n \n Calling functions through pointers to functions\n -----------------------------------------------\n@@ -230,10 +233,6 @@ int is done as an unsigned comparison in K+R (since unsigned char\n promotes to unsigned) while it is signed in ISO (since all of the\n values in unsigned char fit in an int, it promotes to int).\n \n-** Not having any argument whose type is a short type (char, short,\n-float of any flavor) and subject to promotion. **\n-\n-\n Trigraphs\n ---------\n \n@@ -245,7 +244,11 @@ them.\n Suffixes on Integer Constants\n -----------------------------\n \n-**Using a 'u' suffix on integer constants.**\n+K+R C did not accept a 'u' suffix on integer constants.  If you want to declare\n+a constant to be be unsigned, you must use an explicit cast.\n+\n+You should never use a 'l' suffix on integer constants ('L' is fine), since it\n+can easily be confused with the number '1'.\n \n \n \t\t\tCommon Coding Pitfalls"}]}