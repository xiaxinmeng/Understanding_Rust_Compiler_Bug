{"sha": "be1c3b28b25c7086f5be41d003ff9cb321f057a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmUxYzNiMjhiMjVjNzA4NmY1YmU0MWQwMDNmZjljYjMyMWYwNTdhNg==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-02-11T19:43:05Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-02-11T19:43:05Z"}, "message": "Add testcase for PR42930.\n\n2010-02-10  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* g++.dg/graphite/pr42930.C: New.\n\nFrom-SVN: r156715", "tree": {"sha": "a41e8cc20f8548b1c9b3e74f81953103deb931b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a41e8cc20f8548b1c9b3e74f81953103deb931b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be1c3b28b25c7086f5be41d003ff9cb321f057a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be1c3b28b25c7086f5be41d003ff9cb321f057a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be1c3b28b25c7086f5be41d003ff9cb321f057a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be1c3b28b25c7086f5be41d003ff9cb321f057a6/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "141ecc2425ef0345aef3fd1f8e8d740956ae6f4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/141ecc2425ef0345aef3fd1f8e8d740956ae6f4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/141ecc2425ef0345aef3fd1f8e8d740956ae6f4c"}], "stats": {"total": 63, "additions": 63, "deletions": 0}, "files": [{"sha": "b047c2b6e5b1e398d35e1db275146c230798bd81", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be1c3b28b25c7086f5be41d003ff9cb321f057a6/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be1c3b28b25c7086f5be41d003ff9cb321f057a6/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=be1c3b28b25c7086f5be41d003ff9cb321f057a6", "patch": "@@ -1,3 +1,11 @@\n+2010-02-10  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+       * graphite.c (graphite_transform_loops): Re-enable dbg_cnt.\n+\n+2010-02-10  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* g++.dg/graphite/pr42930.C: New.\n+\n 2010-02-10  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR middle-end/42930"}, {"sha": "c1150ce935317e74f5167334b79a81e20f70de11", "filename": "gcc/testsuite/g++.dg/graphite/pr42930.C", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be1c3b28b25c7086f5be41d003ff9cb321f057a6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgraphite%2Fpr42930.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be1c3b28b25c7086f5be41d003ff9cb321f057a6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgraphite%2Fpr42930.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgraphite%2Fpr42930.C?ref=be1c3b28b25c7086f5be41d003ff9cb321f057a6", "patch": "@@ -0,0 +1,55 @@\n+/* { dg-options \"-O1 -floop-block\" } */\n+\n+typedef unsigned char byte;\n+typedef unsigned int uint;\n+typedef unsigned char uint8;\n+namespace Common {\n+class NonCopyable {\n+};\n+template<class In, class Out>\n+Out copy(In first, In last, Out dst) {\n+ while (first != last)\n+  *dst++ = *first++;\n+}\n+template<class T>\n+class Array {\n+ uint _size;\n+ T *_storage;\n+public:\n+ Array<T>& operator=(const Array<T> &array) {\n+  copy(array._storage, array._storage + _size, _storage);\n+ }\n+};\n+}\n+namespace Graphics {\n+struct PixelFormat {\n+ inline PixelFormat() {\n+ }\n+ inline PixelFormat(byte BytesPerPixel,\n+      byte RBits, byte GBits, byte BBits, byte ABits,\n+      byte RShift, byte GShift, byte BShift, byte AShift) {\n+ }\n+};\n+};\n+namespace Cine {\n+static const Graphics::PixelFormat kLowPalFormat(2, 3, 3, 3, 0, 8, 4, 0, 0);\n+class Palette {\n+public:\n+ struct Color {\n+  uint8 r, g, b;\n+ };\n+ Palette(const Graphics::PixelFormat format = Graphics::PixelFormat(), const uint numColors = 0);\n+ bool empty() const;\n+ bool isValid() const;\n+ Common::Array<Color> _colors;\n+};\n+class FWRenderer : public Common::NonCopyable {\n+ Cine::Palette _activePal;\n+ void drawCommand();\n+};\n+void FWRenderer::drawCommand() {\n+ if (!_activePal.isValid() || _activePal.empty()) {\n+  _activePal = Cine::Palette(kLowPalFormat, 16);\n+ }\n+}\n+}"}]}