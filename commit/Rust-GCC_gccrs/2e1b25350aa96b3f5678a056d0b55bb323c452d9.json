{"sha": "2e1b25350aa96b3f5678a056d0b55bb323c452d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmUxYjI1MzUwYWE5NmIzZjU2NzhhMDU2ZDBiNTViYjMyM2M0NTJkOQ==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2020-07-19T15:27:45Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2020-07-19T15:27:45Z"}, "message": "Always use name from c_interop_kinds_table for -fc-prototypes.\n\nWhen a user specified a KIND that was a parameter taking the value\nof an iso_c_binding KIND, the code used the name of that parameter\nto look up the type name.  Corrected by always looking it up in\nthe table of C interop kinds (which was previously done for\nnon-C-interop types, anyway).\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/96220\n\t* dump-parse-tree.c (get_c_type_name): Always use the entries from\n\tc_interop_kinds_table to find the correct C type.", "tree": {"sha": "412065965e273a9d2ea8e073ef297330306c8534", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/412065965e273a9d2ea8e073ef297330306c8534"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e1b25350aa96b3f5678a056d0b55bb323c452d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e1b25350aa96b3f5678a056d0b55bb323c452d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e1b25350aa96b3f5678a056d0b55bb323c452d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e1b25350aa96b3f5678a056d0b55bb323c452d9/comments", "author": null, "committer": null, "parents": [{"sha": "29e1039ca211c4e3f1053925eda0a81c57cbcb0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29e1039ca211c4e3f1053925eda0a81c57cbcb0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29e1039ca211c4e3f1053925eda0a81c57cbcb0c"}], "stats": {"total": 55, "additions": 19, "deletions": 36}, "files": [{"sha": "f9a6bf4f1f838a7f404fd9d9e7aeab784e18fab4", "filename": "gcc/fortran/dump-parse-tree.c", "status": "modified", "additions": 19, "deletions": 36, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e1b25350aa96b3f5678a056d0b55bb323c452d9/gcc%2Ffortran%2Fdump-parse-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e1b25350aa96b3f5678a056d0b55bb323c452d9/gcc%2Ffortran%2Fdump-parse-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdump-parse-tree.c?ref=2e1b25350aa96b3f5678a056d0b55bb323c452d9", "patch": "@@ -3257,45 +3257,28 @@ get_c_type_name (gfc_typespec *ts, gfc_array_spec *as, const char **pre,\n   if (ts->type == BT_REAL || ts->type == BT_INTEGER || ts->type == BT_COMPLEX)\n     {\n       if (ts->is_c_interop && ts->interop_kind)\n-\t{\n-\t  *type_name = ts->interop_kind->name + 2;\n-\t  if (strcmp (*type_name, \"signed_char\") == 0)\n-\t    *type_name = \"signed char\";\n-\t  else if (strcmp (*type_name, \"size_t\") == 0)\n-\t    *type_name = \"ssize_t\";\n-\t  else if (strcmp (*type_name, \"float_complex\") == 0)\n-\t    *type_name = \"__GFORTRAN_FLOAT_COMPLEX\";\n-\t  else if (strcmp (*type_name, \"double_complex\") == 0)\n-\t    *type_name = \"__GFORTRAN_DOUBLE_COMPLEX\";\n-\t  else if (strcmp (*type_name, \"long_double_complex\") == 0)\n-\t    *type_name = \"__GFORTRAN_LONG_DOUBLE_COMPLEX\";\n-\n-\t  ret = T_OK;\n-\t}\n+\tret = T_OK;\n       else\n+\tret = T_WARN;\n+\n+      for (int i = 0; i < ISOCBINDING_NUMBER; i++)\n \t{\n-\t  /* The user did not specify a C interop type.  Let's look through\n-\t     the available table and use the first one, but warn.  */\n-\t  for (int i = 0; i < ISOCBINDING_NUMBER; i++)\n+\t  if (c_interop_kinds_table[i].f90_type == ts->type\n+\t      && c_interop_kinds_table[i].value == ts->kind)\n \t    {\n-\t      if (c_interop_kinds_table[i].f90_type == ts->type\n-\t\t  && c_interop_kinds_table[i].value == ts->kind)\n-\t\t{\n-\t\t  *type_name = c_interop_kinds_table[i].name + 2;\n-\t\t  if (strcmp (*type_name, \"signed_char\") == 0)\n-\t\t    *type_name = \"signed char\";\n-\t\t  else if (strcmp (*type_name, \"size_t\") == 0)\n-\t\t    *type_name = \"ssize_t\";\n-\t\t  else if (strcmp (*type_name, \"float_complex\") == 0)\n-\t\t    *type_name = \"__GFORTRAN_FLOAT_COMPLEX\";\n-\t\t  else if (strcmp (*type_name, \"double_complex\") == 0)\n-\t\t    *type_name = \"__GFORTRAN_DOUBLE_COMPLEX\";\n-\t\t  else if (strcmp (*type_name, \"long_double_complex\") == 0)\n-\t\t    *type_name = \"__GFORTRAN_LONG_DOUBLE_COMPLEX\";\n-\n-\t\t  ret = T_WARN;\n-\t\t  break;\n-\t\t}\n+\t      *type_name = c_interop_kinds_table[i].name + 2;\n+\t      if (strcmp (*type_name, \"signed_char\") == 0)\n+\t\t*type_name = \"signed char\";\n+\t      else if (strcmp (*type_name, \"size_t\") == 0)\n+\t\t*type_name = \"ssize_t\";\n+\t      else if (strcmp (*type_name, \"float_complex\") == 0)\n+\t\t*type_name = \"__GFORTRAN_FLOAT_COMPLEX\";\n+\t      else if (strcmp (*type_name, \"double_complex\") == 0)\n+\t\t*type_name = \"__GFORTRAN_DOUBLE_COMPLEX\";\n+\t      else if (strcmp (*type_name, \"long_double_complex\") == 0)\n+\t\t*type_name = \"__GFORTRAN_LONG_DOUBLE_COMPLEX\";\n+\n+\t      break;\n \t    }\n \t}\n     }"}]}