{"sha": "e64d0626b4e19630c519fa054828b6e9c3e2b161", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTY0ZDA2MjZiNGUxOTYzMGM1MTlmYTA1NDgyOGI2ZTljM2UyYjE2MQ==", "commit": {"author": {"name": "Momchil Velikov", "email": "velco@fadata.bg", "date": "2002-01-22T22:31:52Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-01-22T22:31:52Z"}, "message": "configure.in (variable detection): Use arrays of unspecified size instead of plain integers.\n\n        * configure.in (variable detection): Use arrays of unspecified\n        size instead of plain integers.\n\nFrom-SVN: r49103", "tree": {"sha": "50776c386e475ef991d61b91cd8bd81eb7a69e3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50776c386e475ef991d61b91cd8bd81eb7a69e3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e64d0626b4e19630c519fa054828b6e9c3e2b161", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e64d0626b4e19630c519fa054828b6e9c3e2b161", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e64d0626b4e19630c519fa054828b6e9c3e2b161", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e64d0626b4e19630c519fa054828b6e9c3e2b161/comments", "author": null, "committer": null, "parents": [{"sha": "d04fd40f86bb40d9267ef40419f021d6bcdeda23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d04fd40f86bb40d9267ef40419f021d6bcdeda23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d04fd40f86bb40d9267ef40419f021d6bcdeda23"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "59f48d45976811d90dd69ddb397affbf05107a31", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64d0626b4e19630c519fa054828b6e9c3e2b161/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64d0626b4e19630c519fa054828b6e9c3e2b161/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=e64d0626b4e19630c519fa054828b6e9c3e2b161", "patch": "@@ -1,3 +1,8 @@\n+2002-01-22  Momchil Velikov  <velco@fadata.bg>\n+\n+\t* configure.in (variable detection): Use arrays of unspecified\n+\tsize instead of plain integers.\n+\n 2002-01-18  DJ Delorie  <dj@redhat.com>\n \n \t* Makefile.in (TESTLIB): New.  This library is for future"}, {"sha": "a406d28db626049c93b14184ab2673fa7a8dcfea", "filename": "libiberty/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64d0626b4e19630c519fa054828b6e9c3e2b161/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64d0626b4e19630c519fa054828b6e9c3e2b161/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=e64d0626b4e19630c519fa054828b6e9c3e2b161", "patch": "@@ -2803,7 +2803,7 @@ else\n #include \"confdefs.h\"\n int *p;\n int main() {\n-extern int $v; p = &$v;\n+extern int $v []; p = &$v;\n ; return 0; }\n EOF\n if { (eval echo configure:2810: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then"}, {"sha": "eed222d35d1cb514b868e4984a71b2258ee77999", "filename": "libiberty/configure.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64d0626b4e19630c519fa054828b6e9c3e2b161/libiberty%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64d0626b4e19630c519fa054828b6e9c3e2b161/libiberty%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure.in?ref=e64d0626b4e19630c519fa054828b6e9c3e2b161", "patch": "@@ -365,7 +365,7 @@ if test -z \"${setobjs}\"; then\n   for v in $vars; do\n     AC_MSG_CHECKING([for $v])\n     AC_CACHE_VAL(libiberty_cv_var_$v,\n-      [AC_TRY_LINK([int *p;], [extern int $v; p = &$v;],\n+      [AC_TRY_LINK([int *p;], [extern int $v []; p = &$v;],\n \t\t   [eval \"libiberty_cv_var_$v=yes\"],\n \t\t   [eval \"libiberty_cv_var_$v=no\"])])\n     if eval \"test \\\"`echo '$libiberty_cv_var_'$v`\\\" = yes\"; then"}]}