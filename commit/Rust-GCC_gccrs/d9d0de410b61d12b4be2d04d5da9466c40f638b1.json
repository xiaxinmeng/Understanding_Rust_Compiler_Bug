{"sha": "d9d0de410b61d12b4be2d04d5da9466c40f638b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDlkMGRlNDEwYjYxZDEyYjRiZTJkMDRkNWRhOTQ2NmM0MGY2MzhiMQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1995-02-08T20:09:08Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1995-02-08T20:09:08Z"}, "message": "(nonlocal_goto): Use Pmode instead of SImode.\n\nFrom-SVN: r8896", "tree": {"sha": "612cf1ea7beff66c97c7a5e46a76d72ec907a041", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/612cf1ea7beff66c97c7a5e46a76d72ec907a041"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9d0de410b61d12b4be2d04d5da9466c40f638b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9d0de410b61d12b4be2d04d5da9466c40f638b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9d0de410b61d12b4be2d04d5da9466c40f638b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9d0de410b61d12b4be2d04d5da9466c40f638b1/comments", "author": null, "committer": null, "parents": [{"sha": "cd5fb1eea736456e34ad9ac4da23f4b5f7cc8637", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd5fb1eea736456e34ad9ac4da23f4b5f7cc8637", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd5fb1eea736456e34ad9ac4da23f4b5f7cc8637"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "2f82d6346f073b459ec195b7749a16ae573caaef", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9d0de410b61d12b4be2d04d5da9466c40f638b1/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9d0de410b61d12b4be2d04d5da9466c40f638b1/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=d9d0de410b61d12b4be2d04d5da9466c40f638b1", "patch": "@@ -5146,7 +5146,7 @@\n   \"jmp %a0%#\"\n   [(set_attr \"type\" \"uncond_branch\")])\n \n-;; ??? This doesn't handle v9 yet.  It also doesn't work with -mflat.\n+;; ??? Doesn't work with -mflat.\n (define_expand \"nonlocal_goto\"\n   [(match_operand:SI 0 \"general_operand\" \"\")\n    (match_operand:SI 1 \"general_operand\" \"\")\n@@ -5163,11 +5163,11 @@\n      register.  Thus we must copy operands[0] into a register if it isn't\n      already one.  */\n   if (GET_CODE (operands[0]) != REG)\n-    operands[0] = force_reg (SImode, operands[0]);\n+    operands[0] = force_reg (Pmode, operands[0]);\n   emit_move_insn (virtual_stack_vars_rtx, operands[0]);\n   /* Find the containing function's current nonlocal goto handler,\n      which will do any cleanups and then jump to the label.  */\n-  emit_move_insn (gen_rtx (REG, SImode, 8), operands[1]);\n+  emit_move_insn (gen_rtx (REG, Pmode, 8), operands[1]);\n   /* Restore %fp from stack pointer value for containing function.\n      The restore insn that follows will move this to %sp,\n      and reload the appropriate value into %fp.  */\n@@ -5179,7 +5179,7 @@\n   emit_insn (gen_rtx (USE, VOIDmode, frame_pointer_rtx));\n   emit_insn (gen_rtx (USE, VOIDmode, stack_pointer_rtx));\n   emit_insn (gen_rtx (USE, VOIDmode, static_chain_rtx));\n-  emit_insn (gen_rtx (USE, VOIDmode, gen_rtx (REG, SImode, 8)));\n+  emit_insn (gen_rtx (USE, VOIDmode, gen_rtx (REG, Pmode, 8)));\n   /* Return, restoring reg window and jumping to goto handler.  */\n   emit_insn (gen_goto_handler_and_restore ());\n   DONE;"}]}