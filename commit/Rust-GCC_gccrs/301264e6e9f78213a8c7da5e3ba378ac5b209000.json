{"sha": "301264e6e9f78213a8c7da5e3ba378ac5b209000", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzAxMjY0ZTZlOWY3ODIxM2E4YzdkYTVlM2JhMzc4YWM1YjIwOTAwMA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1991-11-27T20:06:32Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1991-11-27T20:06:32Z"}, "message": "Initial revision\n\nFrom-SVN: r77", "tree": {"sha": "52cecabf42f61a36a60d342de05b511c7e67e1ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52cecabf42f61a36a60d342de05b511c7e67e1ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/301264e6e9f78213a8c7da5e3ba378ac5b209000", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/301264e6e9f78213a8c7da5e3ba378ac5b209000", "html_url": "https://github.com/Rust-GCC/gccrs/commit/301264e6e9f78213a8c7da5e3ba378ac5b209000", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/301264e6e9f78213a8c7da5e3ba378ac5b209000/comments", "author": null, "committer": null, "parents": [{"sha": "2055cea71dd5d95e0bb8c7bb9fa395a3729fe14a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2055cea71dd5d95e0bb8c7bb9fa395a3729fe14a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2055cea71dd5d95e0bb8c7bb9fa395a3729fe14a"}], "stats": {"total": 79, "additions": 79, "deletions": 0}, "files": [{"sha": "b94bef0bbf344ca3910ba59166a5b92d76e1dacd", "filename": "gcc/ginclude/stddef.h", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/301264e6e9f78213a8c7da5e3ba378ac5b209000/gcc%2Fginclude%2Fstddef.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/301264e6e9f78213a8c7da5e3ba378ac5b209000/gcc%2Fginclude%2Fstddef.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fstddef.h?ref=301264e6e9f78213a8c7da5e3ba378ac5b209000", "patch": "@@ -0,0 +1,79 @@\n+#ifndef _STDDEF_H\n+#ifndef _STDDEF_H_\n+#define _STDDEF_H\n+#define _STDDEF_H_\n+\n+#ifndef __sys_stdtypes_h\n+/* This avoids lossage on Sunos but only if stdtypes.h comes first.\n+   There's no way to win with the other order!  Sun lossage.  */\n+\n+/* Signed type of difference of two pointers.  */\n+\n+#ifndef _PTRDIFF_T\t/* in case <sys/types.h> has defined it. */\n+#ifndef _T_PTRDIFF\n+#ifndef __PTRDIFF_T\n+#ifndef _PTRDIFF_T_\n+#ifndef ___int_ptrdiff_t_h\n+#define _PTRDIFF_T\n+#define _T_PTRDIFF\n+#define __PTRDIFF_T\n+#define _PTRDIFF_T_\n+#define ___int_ptrdiff_t_h\n+typedef __PTRDIFF_TYPE__ ptrdiff_t;\n+#endif /* ___int_ptrdiff_t_h */\n+#endif /* _PTRDIFF_T_ */\n+#endif /* __PTRDIFF_T */\n+#endif /* _T_PTRDIFF */\n+#endif /* _PTRDIFF_T */\n+\n+/* Unsigned type of `sizeof' something.  */\n+\n+#ifndef _SIZE_T\t/* in case <sys/types.h> has defined it. */\n+#ifndef _T_SIZE\n+#ifndef __SIZE_T\n+#ifndef _SIZE_T_\n+#ifndef ___int_size_t_h\n+#define _SIZE_T\n+#define _T_SIZE\n+#define __SIZE_T\n+#define _SIZE_T_\n+#define ___int_size_t_h\n+typedef __SIZE_TYPE__ size_t;\n+#endif /* ___int_size_t_h */\n+#endif /* _SIZE_T_ */\n+#endif /* __SIZE_T */\n+#endif /* _T_SIZE */\n+#endif /* _SIZE_T */\n+\n+/* Data type for wide chars.  */\n+\n+#ifndef _WCHAR_T\n+#ifndef _T_WCHAR_\n+#ifndef __WCHAR_T\n+#ifndef _WCHAR_T_\n+#ifndef ___int_wchar_t_h\n+#define _WCHAR_T\n+#define _T_WCHAR_\n+#define __WCHAR_T\n+#define _WCHAR_T_\n+#define ___int_wchar_t_h\n+typedef __WCHAR_TYPE__ wchar_t;\n+#endif\n+#endif\n+#endif\n+#endif\n+#endif\n+\n+#endif /* __sys_stdtypes_h */\n+\n+/* A null pointer constant.  */\n+\n+#undef NULL\t\t/* in case <stdio.h> has defined it. */\n+#define NULL ((void *)0)\n+\n+/* Offset of member MEMBER in a struct of type TYPE.  */\n+\n+#define offsetof(TYPE, MEMBER) ((size_t) &((TYPE *)0)->MEMBER)\n+\n+#endif /* _STDDEF_H_ */\n+#endif /* _STDDEF_H */"}]}