{"sha": "5c89246dfba0114a9a5954a0ea00a9f06c7ff923", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM4OTI0NmRmYmEwMTE0YTlhNTk1NGEwZWEwMGE5ZjA2YzdmZjkyMw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2003-11-21T20:30:12Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-11-21T20:30:12Z"}, "message": "PR libstdc++/12882 (partial)\n\n2003-11-21  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/12882 (partial)\n\t* acinclude.m4 (GLIBCXX_CHECK_LFS): Check fseeko64\n\tand ftello64 too.\n\t* include/ext/stdio_sync_filebuf.h (seekoff): Use fseeko64\n\tand ftello64 if available.\n\t* aclocal.m4: Regenerate.\n\t* configure: Ditto.\n\nFrom-SVN: r73815", "tree": {"sha": "6deb989f1a08bf67e4fe02d7dbaee357ed2dddb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6deb989f1a08bf67e4fe02d7dbaee357ed2dddb0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c89246dfba0114a9a5954a0ea00a9f06c7ff923", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c89246dfba0114a9a5954a0ea00a9f06c7ff923", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c89246dfba0114a9a5954a0ea00a9f06c7ff923", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c89246dfba0114a9a5954a0ea00a9f06c7ff923/comments", "author": null, "committer": null, "parents": [{"sha": "9cca376f2deab04bbb8c358b67b09146af2943d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cca376f2deab04bbb8c358b67b09146af2943d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cca376f2deab04bbb8c358b67b09146af2943d7"}], "stats": {"total": 41, "additions": 33, "deletions": 8}, "files": [{"sha": "abce9042edd8c54c745f468f82edbfe338519dc7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c89246dfba0114a9a5954a0ea00a9f06c7ff923/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c89246dfba0114a9a5954a0ea00a9f06c7ff923/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5c89246dfba0114a9a5954a0ea00a9f06c7ff923", "patch": "@@ -1,3 +1,13 @@\n+2003-11-21  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/12882 (partial)\n+\t* acinclude.m4 (GLIBCXX_CHECK_LFS): Check fseeko64\n+\tand ftello64 too.\n+\t* include/ext/stdio_sync_filebuf.h (seekoff): Use fseeko64\n+\tand ftello64 if available.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Ditto.\n+\n 2003-11-20  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/debug/formatter.h: Use _Tp as template argument."}, {"sha": "7455b6965d54da0b6531aeb68acd299111052809", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c89246dfba0114a9a5954a0ea00a9f06c7ff923/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c89246dfba0114a9a5954a0ea00a9f06c7ff923/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=5c89246dfba0114a9a5954a0ea00a9f06c7ff923", "patch": "@@ -600,7 +600,10 @@ AC_DEFUN(GLIBCXX_CHECK_LFS, [\n       [#include <unistd.h>\n        #include <stdio.h>\n       ],\n-      [fopen64(\"t\", \"w\");\n+      [FILE* fp;\n+       fopen64(\"t\", \"w\");\n+       fseeko64(fp, 0, SEEK_CUR);\n+       ftello64(fp);\n        lseek64(1, 0, SEEK_CUR);],\t\n       [glibcxx_cv_LFS=yes],\n       [glibcxx_cv_LFS=no])"}, {"sha": "efbf8c3112fbc972c07cb4b6439a4aa7c32c2ebc", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c89246dfba0114a9a5954a0ea00a9f06c7ff923/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c89246dfba0114a9a5954a0ea00a9f06c7ff923/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=5c89246dfba0114a9a5954a0ea00a9f06c7ff923", "patch": "@@ -1,4 +1,4 @@\n-# generated automatically by aclocal 1.7.8 -*- Autoconf -*-\n+# generated automatically by aclocal 1.7.9 -*- Autoconf -*-\n \n # Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002\n # Free Software Foundation, Inc.\n@@ -613,7 +613,10 @@ AC_DEFUN(GLIBCXX_CHECK_LFS, [\n       [#include <unistd.h>\n        #include <stdio.h>\n       ],\n-      [fopen64(\"t\", \"w\");\n+      [FILE* fp;\n+       fopen64(\"t\", \"w\");\n+       fseeko64(fp, 0, SEEK_CUR);\n+       ftello64(fp);\n        lseek64(1, 0, SEEK_CUR);],\t\n       [glibcxx_cv_LFS=yes],\n       [glibcxx_cv_LFS=no])\n@@ -2009,7 +2012,7 @@ AC_DEFUN([AM_AUTOMAKE_VERSION],[am__api_version=\"1.7\"])\n # Call AM_AUTOMAKE_VERSION so it can be traced.\n # This function is AC_REQUIREd by AC_INIT_AUTOMAKE.\n AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION],\n-\t [AM_AUTOMAKE_VERSION([1.7.8])])\n+\t [AM_AUTOMAKE_VERSION([1.7.9])])\n \n # Helper functions for option handling.                    -*- Autoconf -*-\n "}, {"sha": "fa0050ad0e7ffd2aa9b1ad575950b9061b8d7d18", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c89246dfba0114a9a5954a0ea00a9f06c7ff923/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c89246dfba0114a9a5954a0ea00a9f06c7ff923/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=5c89246dfba0114a9a5954a0ea00a9f06c7ff923", "patch": "@@ -3795,6 +3795,7 @@ cygwin* | mingw* |pw32*)\n   ;;\n \n darwin* | rhapsody*)\n+  # this will be overwritten by pass_all, but leave it in just in case\n   lt_cv_deplibs_check_method='file_magic Mach-O dynamically linked shared library'\n   lt_cv_file_magic_cmd='/usr/bin/file -L'\n   case \"$host_os\" in\n@@ -3805,6 +3806,7 @@ darwin* | rhapsody*)\n     lt_cv_file_magic_test_file='/usr/lib/libSystem.dylib'\n     ;;\n   esac\n+  lt_cv_deplibs_check_method=pass_all\n   ;;\n \n freebsd* )\n@@ -4267,7 +4269,7 @@ test x\"$pic_mode\" = xno && libtool_flags=\"$libtool_flags --prefer-non-pic\"\n case $host in\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 4270 \"configure\"' > conftest.$ac_ext\n+  echo '#line 4272 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -4871,7 +4873,7 @@ fi;\n     #\n     # Fake what AC_TRY_COMPILE does.  XXX Look at redoing this new-style.\n     cat > conftest.$ac_ext << EOF\n-#line 4874 \"configure\"\n+#line 4876 \"configure\"\n struct S { ~S(); };\n void bar();\n void foo()\n@@ -26898,7 +26900,10 @@ cat >>conftest.$ac_ext <<_ACEOF\n int\n main ()\n {\n-fopen64(\"t\", \"w\");\n+FILE* fp;\n+       fopen64(\"t\", \"w\");\n+       fseeko64(fp, 0, SEEK_CUR);\n+       ftello64(fp);\n        lseek64(1, 0, SEEK_CUR);\n   ;\n   return 0;"}, {"sha": "e610912158552bd55e9540000342c5491f71f9d8", "filename": "libstdc++-v3/include/ext/stdio_sync_filebuf.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c89246dfba0114a9a5954a0ea00a9f06c7ff923/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstdio_sync_filebuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c89246dfba0114a9a5954a0ea00a9f06c7ff923/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstdio_sync_filebuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstdio_sync_filebuf.h?ref=5c89246dfba0114a9a5954a0ea00a9f06c7ff923", "patch": "@@ -180,9 +180,13 @@ namespace __gnu_cxx\n \t  __whence = SEEK_CUR;\n \telse\n \t  __whence = SEEK_END;\n-\t\n+#ifdef _GLIBCXX_USE_LFS\n+\tif (!fseeko64(_M_file, __off, __whence))\n+\t  __ret = std::streampos(ftello64(_M_file));\n+#else\t\n \tif (!fseek(_M_file, __off, __whence))\n \t  __ret = std::streampos(std::ftell(_M_file));\n+#endif\n \treturn __ret;\n       }\n "}]}