{"sha": "7b7d60003fdc93ba1be6b25fbb7c393e2837c0e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2I3ZDYwMDAzZmRjOTNiYTFiZTZiMjVmYmI3YzM5M2UyODM3YzBlNg==", "commit": {"author": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2009-01-27T16:14:13Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2009-01-27T16:14:13Z"}, "message": "Fix broken commit from r143594.\n\nFrom-SVN: r143705", "tree": {"sha": "9dbac1b325b59cb08340d90c1394377ec1bbfa05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9dbac1b325b59cb08340d90c1394377ec1bbfa05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b7d60003fdc93ba1be6b25fbb7c393e2837c0e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b7d60003fdc93ba1be6b25fbb7c393e2837c0e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b7d60003fdc93ba1be6b25fbb7c393e2837c0e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b7d60003fdc93ba1be6b25fbb7c393e2837c0e6/comments", "author": null, "committer": null, "parents": [{"sha": "b5c3dfbbfb5bd2c75b333b5ef99a06e57d790096", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5c3dfbbfb5bd2c75b333b5ef99a06e57d790096", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5c3dfbbfb5bd2c75b333b5ef99a06e57d790096"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "aa224ae59df1fe1a35e6822d55a6a672ae96eef8", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b7d60003fdc93ba1be6b25fbb7c393e2837c0e6/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b7d60003fdc93ba1be6b25fbb7c393e2837c0e6/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=7b7d60003fdc93ba1be6b25fbb7c393e2837c0e6", "patch": "@@ -760,7 +760,7 @@ arm*-*-eabi* | arm*-*-symbianelf* )\n \ttmake_file=\"arm/t-arm arm/t-arm-elf\"\n \tcase ${target} in\n \tarm*-*-eabi*)\n-\t  tm_file=\"$tm_file arm/eabi.h arm/nocrt0.h\"\n+\t  tm_file=\"$tm_file arm/eabi.h\"\n \t  tmake_file=\"${tmake_file} arm/t-bpabi\"\n \t  extra_options=\"${extra_options} arm/eabi.opt\"\n \t  ;;"}, {"sha": "7d87b6e126b59695d1d30a65aa5e486b8df122c0", "filename": "gcc/testsuite/gcc.target/arm/neon-cond-1.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b7d60003fdc93ba1be6b25fbb7c393e2837c0e6/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-cond-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b7d60003fdc93ba1be6b25fbb7c393e2837c0e6/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-cond-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-cond-1.c?ref=7b7d60003fdc93ba1be6b25fbb7c393e2837c0e6", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target arm_neon_hw } */\n+/* { dg-options \"-O2 -mfpu=neon -mfloat-abi=softfp\" } */\n+/* Check that the arm_final_prescan_insn ccfsm code does not try to\n+ * conditionally execute NEON instructions.  */\n+#include <arm_neon.h>\n+#include <stdlib.h>\n+\n+int __attribute__((noinline))\n+foo(uint32x2_t a, uint32_t *p, uint32_t *q)\n+{\n+  if (p != q)\n+    /* This vst1 instruction could be conditional, except that NEON\n+       instructions are never conditional in ARM mode.  */\n+    vst1_u32(p, a);\n+  return 0;\n+}\n+\n+int\n+main()\n+{\n+    uint32x2_t v;\n+    uint32_t a[2] = {1, 42};\n+    v = vld1_u32(a);\n+    v = vadd_u32(v, v);\n+    foo(v, a, a);\n+    if (a[0] != 1 || a[1] != 42)\n+      abort();\n+    exit(0);\n+}"}]}