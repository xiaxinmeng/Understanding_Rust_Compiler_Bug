{"sha": "7831ef177bd85529c59eac7b91681a95266bba37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzgzMWVmMTc3YmQ4NTUyOWM1OWVhYzdiOTE2ODFhOTUyNjZiYmEzNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-26T15:55:34Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-26T15:55:34Z"}, "message": "(expand_divmod): Correctly set CAN_CLOBBER_OP0 when we've converted OP0\nto COMPUTE_MODE.\n\nFrom-SVN: r7349", "tree": {"sha": "9c419b4b9c945d3e8a03412cf64775b030ad876d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c419b4b9c945d3e8a03412cf64775b030ad876d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7831ef177bd85529c59eac7b91681a95266bba37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7831ef177bd85529c59eac7b91681a95266bba37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7831ef177bd85529c59eac7b91681a95266bba37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7831ef177bd85529c59eac7b91681a95266bba37/comments", "author": null, "committer": null, "parents": [{"sha": "7beec59e8ad123102ffbadd07c75fa415cfaa326", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7beec59e8ad123102ffbadd07c75fa415cfaa326", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7beec59e8ad123102ffbadd07c75fa415cfaa326"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "09cbbaf2b97b421ac6d7440d245291e927751d89", "filename": "gcc/expmed.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7831ef177bd85529c59eac7b91681a95266bba37/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7831ef177bd85529c59eac7b91681a95266bba37/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=7831ef177bd85529c59eac7b91681a95266bba37", "patch": "@@ -2439,13 +2439,16 @@ expand_divmod (rem_flag, code, mode, op0, op1, target, unsignedp)\n      modifying it.  */\n   can_clobber_op0 = (GET_CODE (op0) == REG && op0 == target);\n \n-  /* Now convert to the best mode to use.  Show we made a copy of OP0\n+  /* Now convert to the best mode to use.  Normally show we made a copy of OP0\n      and hence we can clobber it (we cannot use a SUBREG to widen\n-     something.  */\n+     something), but check that the conversion wasn't a no-op due to\n+     promotion.  */\n   if (compute_mode != mode)\n     {\n-      adjusted_op0 = op0 = convert_modes (compute_mode, mode, op0, unsignedp);\n-      can_clobber_op0 = 1;\n+      adjusted_op0 = convert_modes (compute_mode, mode, op0, unsignedp);\n+      can_clobber_op0 = ! (GET_CODE (op0) == SUBREG \n+\t\t\t   && SUBREG_REG (op0) == adjusted_op0);\n+      op0 = adjusted_op0;\n       op1 = convert_modes (compute_mode, mode, op1, unsignedp);\n     }\n "}]}