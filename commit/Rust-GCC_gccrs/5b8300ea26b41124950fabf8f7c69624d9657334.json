{"sha": "5b8300ea26b41124950fabf8f7c69624d9657334", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWI4MzAwZWEyNmI0MTEyNDk1MGZhYmY4ZjdjNjk2MjRkOTY1NzMzNA==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2014-10-16T05:03:32Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2014-10-16T05:03:32Z"}, "message": "tree-core.h: Fix comment to not assume pointers are multiples of bytes.\n\n* tree-core.h: Fix comment to not assume pointers are multiples of\nbytes.\n* c-cppbuiltin.c (cpp_atomic_builtins): Don't assume pointers are\nmultiples of bytes.\n\nFrom-SVN: r216296", "tree": {"sha": "48885f2a8215f53261c5e511ea2890a09e02f1bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48885f2a8215f53261c5e511ea2890a09e02f1bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b8300ea26b41124950fabf8f7c69624d9657334", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b8300ea26b41124950fabf8f7c69624d9657334", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b8300ea26b41124950fabf8f7c69624d9657334", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b8300ea26b41124950fabf8f7c69624d9657334/comments", "author": null, "committer": null, "parents": [{"sha": "30b444d5d9fe5a2faa1cbe853944fda6d98f230f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30b444d5d9fe5a2faa1cbe853944fda6d98f230f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30b444d5d9fe5a2faa1cbe853944fda6d98f230f"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "a936c01681194b645c10bc17fceac99e8c00a902", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b8300ea26b41124950fabf8f7c69624d9657334/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b8300ea26b41124950fabf8f7c69624d9657334/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5b8300ea26b41124950fabf8f7c69624d9657334", "patch": "@@ -1,3 +1,8 @@\n+2014-10-16  DJ Delorie  <dj@redhat.com>\n+\n+\t* tree-core.h: Fix comment to not assume pointers are multiples of\n+\tbytes.\n+\n 2014-10-15  Tom Tromey  <tromey@redhat.com>\n \n \t* timevar.h (class auto_timevar): New class."}, {"sha": "ea7a990ff43d9ddde8893ad154ecedb96a26652f", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b8300ea26b41124950fabf8f7c69624d9657334/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b8300ea26b41124950fabf8f7c69624d9657334/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=5b8300ea26b41124950fabf8f7c69624d9657334", "patch": "@@ -1,3 +1,8 @@\n+2014-10-16  DJ Delorie  <dj@redhat.com>\n+\n+\t* c-cppbuiltin.c (cpp_atomic_builtins): Don't assume pointers are\n+\tmultiples of bytes.\n+\n 2014-10-14  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/63455"}, {"sha": "7e2ae672adc71f615385b310ae8f969e25a6e8bb", "filename": "gcc/c-family/c-cppbuiltin.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b8300ea26b41124950fabf8f7c69624d9657334/gcc%2Fc-family%2Fc-cppbuiltin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b8300ea26b41124950fabf8f7c69624d9657334/gcc%2Fc-family%2Fc-cppbuiltin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-cppbuiltin.c?ref=5b8300ea26b41124950fabf8f7c69624d9657334", "patch": "@@ -671,7 +671,7 @@ cpp_atomic_builtins (cpp_reader *pfile)\n \n   /* ptr_type_node can't be used here since ptr_mode is only set when\n      toplev calls backend_init which is not done with -E  or pch.  */\n-  psize = POINTER_SIZE / BITS_PER_UNIT;\n+  psize = POINTER_SIZE_UNITS;\n   if (psize >= SWAP_LIMIT)\n     psize = 0;\n   builtin_define_with_int_value (\"__GCC_ATOMIC_POINTER_LOCK_FREE\", "}, {"sha": "b69312b0c40d1d10c90e5e08f8d6bcc3a7350936", "filename": "gcc/tree-core.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b8300ea26b41124950fabf8f7c69624d9657334/gcc%2Ftree-core.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b8300ea26b41124950fabf8f7c69624d9657334/gcc%2Ftree-core.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-core.h?ref=5b8300ea26b41124950fabf8f7c69624d9657334", "patch": "@@ -1173,7 +1173,7 @@ enum omp_clause_map_kind\n   OMP_CLAUSE_MAP_TOFROM,\n   /* The following kind is an internal only map kind, used for pointer based\n      array sections.  OMP_CLAUSE_SIZE for these is not the pointer size,\n-     which is implicitly POINTER_SIZE / BITS_PER_UNIT, but the bias.  */\n+     which is implicitly POINTER_SIZE_UNITS, but the bias.  */\n   OMP_CLAUSE_MAP_POINTER,\n   /* Also internal, behaves like OMP_CLAUS_MAP_TO, but additionally any\n      OMP_CLAUSE_MAP_POINTER records consecutive after it which have addresses"}]}