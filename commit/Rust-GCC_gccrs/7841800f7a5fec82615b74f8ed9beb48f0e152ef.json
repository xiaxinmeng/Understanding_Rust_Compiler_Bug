{"sha": "7841800f7a5fec82615b74f8ed9beb48f0e152ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg0MTgwMGY3YTVmZWM4MjYxNWI3NGY4ZWQ5YmViNDhmMGUxNTJlZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-08-16T16:50:47Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-08-16T16:50:47Z"}, "message": "re PR target/71910 (ICE on valid OpenMP code)\n\n\tPR target/71910\n\t* tree-cfg.c (execute_fixup_cfg): Add node variable, use it.  Before inlining,\n\tadd cgraph edge for the added __builtin_unreachable call.\n\n\t* g++.dg/gomp/pr71910.C: New test.\n\nFrom-SVN: r239508", "tree": {"sha": "76e41ddbeef6acd461eab2ef7d383b9945cbd27e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76e41ddbeef6acd461eab2ef7d383b9945cbd27e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7841800f7a5fec82615b74f8ed9beb48f0e152ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7841800f7a5fec82615b74f8ed9beb48f0e152ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7841800f7a5fec82615b74f8ed9beb48f0e152ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7841800f7a5fec82615b74f8ed9beb48f0e152ef/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1b13411a13e274d5e01b73704df9edd2639eedb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b13411a13e274d5e01b73704df9edd2639eedb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b13411a13e274d5e01b73704df9edd2639eedb4"}], "stats": {"total": 45, "additions": 36, "deletions": 9}, "files": [{"sha": "b99c745c795eedd0c1a57bfe0ef97cbb81b54936", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7841800f7a5fec82615b74f8ed9beb48f0e152ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7841800f7a5fec82615b74f8ed9beb48f0e152ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7841800f7a5fec82615b74f8ed9beb48f0e152ef", "patch": "@@ -1,5 +1,9 @@\n 2016-08-16  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/71910\n+\t* tree-cfg.c (execute_fixup_cfg): Add node variable, use it.  Before inlining,\n+\tadd cgraph edge for the added __builtin_unreachable call.\n+\n \tPR middle-end/67485\n \t* expmed.c (expand_mult_const): Change val_so_far's type to UHWI,\n \tonly cast it to SHWI for the final comparison."}, {"sha": "3bc6028fa411d8b0ee08aa50bbedb31ca6e9214f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7841800f7a5fec82615b74f8ed9beb48f0e152ef/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7841800f7a5fec82615b74f8ed9beb48f0e152ef/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7841800f7a5fec82615b74f8ed9beb48f0e152ef", "patch": "@@ -1,5 +1,8 @@\n 2016-08-16  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/71910\n+\t* g++.dg/gomp/pr71910.C: New test.\n+\n \tPR middle-end/67485\n \t* gcc.c-torture/compile/pr67485.c: New test.\n "}, {"sha": "0063be8a9b0f968385846e06939ddd98ec590d9f", "filename": "gcc/testsuite/g++.dg/gomp/pr71910.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7841800f7a5fec82615b74f8ed9beb48f0e152ef/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr71910.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7841800f7a5fec82615b74f8ed9beb48f0e152ef/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr71910.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr71910.C?ref=7841800f7a5fec82615b74f8ed9beb48f0e152ef", "patch": "@@ -0,0 +1,13 @@\n+// PR target/71910\n+// { dg-do compile }\n+// { dg-additional-options \"-O2\" }\n+\n+#include <vector>\n+\n+int\n+main ()\n+{\n+  std::vector<double> vec(10);\n+#pragma omp parallel\n+  __builtin_exit (0);\n+}"}, {"sha": "4e55a83d38accc6c64e65e828b4da7839d96b4e3", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7841800f7a5fec82615b74f8ed9beb48f0e152ef/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7841800f7a5fec82615b74f8ed9beb48f0e152ef/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=7841800f7a5fec82615b74f8ed9beb48f0e152ef", "patch": "@@ -8987,16 +8987,14 @@ execute_fixup_cfg (void)\n   gcov_type count_scale;\n   edge e;\n   edge_iterator ei;\n+  cgraph_node *node = cgraph_node::get (current_function_decl);\n \n   count_scale\n-      = GCOV_COMPUTE_SCALE (cgraph_node::get (current_function_decl)->count,\n-\t\t\t    ENTRY_BLOCK_PTR_FOR_FN (cfun)->count);\n+    = GCOV_COMPUTE_SCALE (node->count, ENTRY_BLOCK_PTR_FOR_FN (cfun)->count);\n \n-  ENTRY_BLOCK_PTR_FOR_FN (cfun)->count =\n-\t\t\t    cgraph_node::get (current_function_decl)->count;\n-  EXIT_BLOCK_PTR_FOR_FN (cfun)->count =\n-\t\t\t    apply_scale (EXIT_BLOCK_PTR_FOR_FN (cfun)->count,\n-                                       count_scale);\n+  ENTRY_BLOCK_PTR_FOR_FN (cfun)->count = node->count;\n+  EXIT_BLOCK_PTR_FOR_FN (cfun)->count\n+    = apply_scale (EXIT_BLOCK_PTR_FOR_FN (cfun)->count, count_scale);\n \n   FOR_EACH_EDGE (e, ei, ENTRY_BLOCK_PTR_FOR_FN (cfun)->succs)\n     e->count = apply_scale (e->count, count_scale);\n@@ -9089,10 +9087,19 @@ execute_fixup_cfg (void)\n \t    {\n \t      if (stmt && is_gimple_call (stmt))\n \t\tgimple_call_set_ctrl_altering (stmt, false);\n-\t      stmt = gimple_build_call\n-\t\t  (builtin_decl_implicit (BUILT_IN_UNREACHABLE), 0);\n+\t      tree fndecl = builtin_decl_implicit (BUILT_IN_UNREACHABLE);\n+\t      stmt = gimple_build_call (fndecl, 0);\n \t      gimple_stmt_iterator gsi = gsi_last_bb (bb);\n \t      gsi_insert_after (&gsi, stmt, GSI_NEW_STMT);\n+\t      if (!cfun->after_inlining)\n+\t\t{\n+\t\t  gcall *call_stmt = dyn_cast <gcall *> (stmt);\n+\t\t  int freq\n+\t\t    = compute_call_stmt_bb_frequency (current_function_decl,\n+\t\t\t\t\t\t      bb);\n+\t\t  node->create_edge (cgraph_node::get_create (fndecl),\n+\t\t\t\t     call_stmt, bb->count, freq);\n+\t\t}\n \t    }\n \t}\n     }"}]}