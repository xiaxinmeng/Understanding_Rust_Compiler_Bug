{"sha": "18009d039eecc8f44b6993fa24997c99178cee5e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTgwMDlkMDM5ZWVjYzhmNDRiNjk5M2ZhMjQ5OTdjOTkxNzhjZWU1ZQ==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2003-07-14T21:35:37Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2003-07-14T21:35:37Z"}, "message": "objc-act.h (CLASS_SUPER_NAME): Add a little typechecking.\n\n\t* objc/objc-act.h (CLASS_SUPER_NAME): Add a little typechecking.\n\t(TYPE_PROTOCOL_LIST): Share use of type.context with C frontend.\n\t(SET_TYPE_PROTOCOL_LIST): New.\n\t* objc/objc-act.c (get_static_reference): Use SET_TYPE_PROTOCOL_LIST.\n\t(get_object_reference): Likewise.\n\nFrom-SVN: r69364", "tree": {"sha": "8b6abbcde0d4773318291e31a4e7d3d8da247b35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b6abbcde0d4773318291e31a4e7d3d8da247b35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18009d039eecc8f44b6993fa24997c99178cee5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18009d039eecc8f44b6993fa24997c99178cee5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18009d039eecc8f44b6993fa24997c99178cee5e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18009d039eecc8f44b6993fa24997c99178cee5e/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8d83f79225703195e325dba0138432382e4dfab0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d83f79225703195e325dba0138432382e4dfab0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d83f79225703195e325dba0138432382e4dfab0"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "d6bffed5b5eccc131674d26c3952bb307302a52a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18009d039eecc8f44b6993fa24997c99178cee5e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18009d039eecc8f44b6993fa24997c99178cee5e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=18009d039eecc8f44b6993fa24997c99178cee5e", "patch": "@@ -1,3 +1,11 @@\n+2003-07-14  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* objc/objc-act.h (CLASS_SUPER_NAME): Add a little typechecking.\n+\t(TYPE_PROTOCOL_LIST): Share use of type.context with C frontend.\n+\t(SET_TYPE_PROTOCOL_LIST): New.\n+\t* objc/objc-act.c (get_static_reference): Use SET_TYPE_PROTOCOL_LIST.\n+\t(get_object_reference): Likewise.\n+\n Mon Jul 14 23:14:28 CEST 2003  Jan Hubicka  <jh@suse.cz>\n \n \t* cfglayout.c (locator_file): Break out from ...."}, {"sha": "f84d9f202a49d0df5a284b2a2c18d4bebcf259e7", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18009d039eecc8f44b6993fa24997c99178cee5e/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18009d039eecc8f44b6993fa24997c99178cee5e/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=18009d039eecc8f44b6993fa24997c99178cee5e", "patch": "@@ -939,7 +939,7 @@ get_static_reference (interface, protocols)\n \n       /* Look up protocols and install in lang specific list.  Note\n \t that the protocol list can have a different lifetime than T!  */\n-      TYPE_PROTOCOL_LIST (t) = lookup_and_install_protocols (protocols);\n+      SET_TYPE_PROTOCOL_LIST (t, lookup_and_install_protocols (protocols));\n \n       /* This forces a new pointer type to be created later\n \t (in build_pointer_type)...so that the new template\n@@ -988,7 +988,7 @@ get_object_reference (protocols)\n       TYPE_NEXT_VARIANT (m) = t;\n \n       /* Look up protocols...and install in lang specific list */\n-      TYPE_PROTOCOL_LIST (t) = lookup_and_install_protocols (protocols);\n+      SET_TYPE_PROTOCOL_LIST (t, lookup_and_install_protocols (protocols));\n \n       /* This forces a new pointer type to be created later\n \t (in build_pointer_type)...so that the new template"}, {"sha": "94c7015395c44685a8d779a57fe249b0552e27f1", "filename": "gcc/objc/objc-act.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18009d039eecc8f44b6993fa24997c99178cee5e/gcc%2Fobjc%2Fobjc-act.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18009d039eecc8f44b6993fa24997c99178cee5e/gcc%2Fobjc%2Fobjc-act.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.h?ref=18009d039eecc8f44b6993fa24997c99178cee5e", "patch": "@@ -90,7 +90,7 @@ tree build_encode_expr\t\t\t\tPARAMS ((tree));\n    CATEGORY_INTERFACE_TYPE, CATEGORY_IMPLEMENTATION_TYPE,\n    PROTOCOL_INTERFACE_TYPE */\n #define CLASS_NAME(CLASS) ((CLASS)->type.name)\n-#define CLASS_SUPER_NAME(CLASS) ((CLASS)->type.context)\n+#define CLASS_SUPER_NAME(CLASS) (TYPE_CHECK (CLASS)->type.context)\n #define CLASS_IVARS(CLASS) TREE_VEC_ELT (TYPE_BINFO (CLASS), 0)\n #define CLASS_RAW_IVARS(CLASS) TREE_VEC_ELT (TYPE_BINFO (CLASS), 1)\n #define CLASS_NST_METHODS(CLASS) ((CLASS)->type.minval)\n@@ -105,7 +105,11 @@ tree build_encode_expr\t\t\t\tPARAMS ((tree));\n #define PROTOCOL_CLS_METHODS(CLASS) ((CLASS)->type.maxval)\n #define PROTOCOL_FORWARD_DECL(CLASS) TREE_VEC_ELT (TYPE_BINFO (CLASS), 1)\n #define PROTOCOL_DEFINED(CLASS) TREE_USED (CLASS)\n-#define TYPE_PROTOCOL_LIST(TYPE) ((TYPE)->type.context)\n+#define TYPE_PROTOCOL_LIST(TYPE)\t\t\t\t\t\\\n+  ((!TYPE_CHECK (TYPE)->type.context\t\t\t\t\t\\\n+    || TREE_CODE ((TYPE)->type.context) == TRANSLATION_UNIT_DECL)\t\\\n+   ? NULL_TREE : (TYPE)->type.context)\n+#define SET_TYPE_PROTOCOL_LIST(TYPE, P) (TYPE_CHECK (TYPE)->type.context = (P))\n \n /* Set by `continue_class' and checked by `is_public'.  */\n "}]}