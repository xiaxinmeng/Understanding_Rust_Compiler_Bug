{"sha": "7a7d8fab4cd57f072680cd11437056882c9d4b7e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2E3ZDhmYWI0Y2Q1N2YwNzI2ODBjZDExNDM3MDU2ODgyYzlkNGI3ZQ==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@au.ibm.com", "date": "2009-01-01T22:12:50Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2009-01-01T22:12:50Z"}, "message": "fp-bit.h (pack_d): Constify argument.\n\n\t* config/fp-bit.h (pack_d): Constify argument.\n\t* config/fp-bit.c (makenan): Constify return type. Remove casts.\n\t(isnan): Constify argument.\n\t(isinf): Likewise.\n\t(iszero): Likewise.\n\t(pack_d): Likewise.\n\t(_fpadd_parts): Constify return type.\n\t(_fpmul_parts): Likewise.\n\t(_fpdiv_parts): Likewise.\n\nFrom-SVN: r142999", "tree": {"sha": "427e2a9fd502b5c07bc77d559fdc611f0360e168", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/427e2a9fd502b5c07bc77d559fdc611f0360e168"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a7d8fab4cd57f072680cd11437056882c9d4b7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a7d8fab4cd57f072680cd11437056882c9d4b7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a7d8fab4cd57f072680cd11437056882c9d4b7e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a7d8fab4cd57f072680cd11437056882c9d4b7e/comments", "author": null, "committer": null, "parents": [{"sha": "b295aee2b10db8517f186af1bea7071bc95d5fcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b295aee2b10db8517f186af1bea7071bc95d5fcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b295aee2b10db8517f186af1bea7071bc95d5fcd"}], "stats": {"total": 50, "additions": 30, "deletions": 20}, "files": [{"sha": "8cb8a92304ad35b3a4d848a612f60a31720a73d1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a7d8fab4cd57f072680cd11437056882c9d4b7e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a7d8fab4cd57f072680cd11437056882c9d4b7e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7a7d8fab4cd57f072680cd11437056882c9d4b7e", "patch": "@@ -1,3 +1,15 @@\n+2009-01-02  Ben Elliston  <bje@au.ibm.com>\n+\n+\t* config/fp-bit.h (pack_d): Constify argument.\n+\t* config/fp-bit.c (makenan): Constify return type. Remove casts.\n+\t(isnan): Constify argument.\n+\t(isinf): Likewise.\n+\t(iszero): Likewise.\n+\t(pack_d): Likewise.\n+\t(_fpadd_parts): Constify return type.\n+\t(_fpmul_parts): Likewise.\n+\t(_fpdiv_parts): Likewise.\n+\n 2009-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/36489"}, {"sha": "fd56be77a64e9c5624ab43bd033e38defb63a923", "filename": "gcc/config/fp-bit.c", "status": "modified", "additions": 16, "deletions": 18, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a7d8fab4cd57f072680cd11437056882c9d4b7e/gcc%2Fconfig%2Ffp-bit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a7d8fab4cd57f072680cd11437056882c9d4b7e/gcc%2Fconfig%2Ffp-bit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffp-bit.c?ref=7a7d8fab4cd57f072680cd11437056882c9d4b7e", "patch": "@@ -139,30 +139,29 @@ extern const fp_number_type __thenan_df;\n #endif\n \n INLINE\n-static fp_number_type *\n+static const fp_number_type *\n makenan (void)\n {\n-  /* Discard the const qualifier...  */\n #ifdef TFLOAT\n-  return (fp_number_type *) (& __thenan_tf);\n+  return & __thenan_tf;\n #elif defined FLOAT  \n-  return (fp_number_type *) (& __thenan_sf);\n+  return & __thenan_sf;\n #else\n-  return (fp_number_type *) (& __thenan_df);\n+  return & __thenan_df;\n #endif\n }\n \n INLINE\n static int\n-isnan ( fp_number_type *  x)\n+isnan (const fp_number_type *x)\n {\n   return __builtin_expect (x->class == CLASS_SNAN || x->class == CLASS_QNAN,\n \t\t\t   0);\n }\n \n INLINE\n static int\n-isinf ( fp_number_type *  x)\n+isinf (const fp_number_type *  x)\n {\n   return __builtin_expect (x->class == CLASS_INFINITY, 0);\n }\n@@ -171,7 +170,7 @@ isinf ( fp_number_type *  x)\n \n INLINE\n static int\n-iszero ( fp_number_type *  x)\n+iszero (const fp_number_type *  x)\n {\n   return x->class == CLASS_ZERO;\n }\n@@ -199,11 +198,11 @@ clzusi (USItype n)\n     return __clzsi2 (n);\n }\n \n-extern FLO_type pack_d ( fp_number_type * );\n+extern FLO_type pack_d (const fp_number_type * );\n \n #if defined(L_pack_df) || defined(L_pack_sf) || defined(L_pack_tf)\n FLO_type\n-pack_d ( fp_number_type *  src)\n+pack_d (const fp_number_type *src)\n {\n   FLO_union_type dst;\n   fractype fraction = src->fraction.ll;\t/* wasn't unsigned before? */\n@@ -596,7 +595,7 @@ unpack_d (FLO_union_type * src, fp_number_type * dst)\n #endif /* L_unpack_df || L_unpack_sf */\n \n #if defined(L_addsub_sf) || defined(L_addsub_df) || defined(L_addsub_tf)\n-static fp_number_type *\n+static const fp_number_type *\n _fpadd_parts (fp_number_type * a,\n \t      fp_number_type * b,\n \t      fp_number_type * tmp)\n@@ -734,7 +733,6 @@ _fpadd_parts (fp_number_type * a,\n       tmp->normal_exp++;\n     }\n   return tmp;\n-\n }\n \n FLO_type\n@@ -743,7 +741,7 @@ add (FLO_type arg_a, FLO_type arg_b)\n   fp_number_type a;\n   fp_number_type b;\n   fp_number_type tmp;\n-  fp_number_type *res;\n+  const fp_number_type *res;\n   FLO_union_type au, bu;\n \n   au.value = arg_a;\n@@ -763,7 +761,7 @@ sub (FLO_type arg_a, FLO_type arg_b)\n   fp_number_type a;\n   fp_number_type b;\n   fp_number_type tmp;\n-  fp_number_type *res;\n+  const fp_number_type *res;\n   FLO_union_type au, bu;\n \n   au.value = arg_a;\n@@ -781,7 +779,7 @@ sub (FLO_type arg_a, FLO_type arg_b)\n #endif /* L_addsub_sf || L_addsub_df */\n \n #if defined(L_mul_sf) || defined(L_mul_df) || defined(L_mul_tf)\n-static inline __attribute__ ((__always_inline__)) fp_number_type *\n+static inline __attribute__ ((__always_inline__)) const fp_number_type *\n _fpmul_parts ( fp_number_type *  a,\n \t       fp_number_type *  b,\n \t       fp_number_type * tmp)\n@@ -949,7 +947,7 @@ multiply (FLO_type arg_a, FLO_type arg_b)\n   fp_number_type a;\n   fp_number_type b;\n   fp_number_type tmp;\n-  fp_number_type *res;\n+  const fp_number_type *res;\n   FLO_union_type au, bu;\n \n   au.value = arg_a;\n@@ -965,7 +963,7 @@ multiply (FLO_type arg_a, FLO_type arg_b)\n #endif /* L_mul_sf || L_mul_df || L_mul_tf */\n \n #if defined(L_div_sf) || defined(L_div_df) || defined(L_div_tf)\n-static inline __attribute__ ((__always_inline__)) fp_number_type *\n+static inline __attribute__ ((__always_inline__)) const fp_number_type *\n _fpdiv_parts (fp_number_type * a,\n \t      fp_number_type * b)\n {\n@@ -1067,7 +1065,7 @@ divide (FLO_type arg_a, FLO_type arg_b)\n {\n   fp_number_type a;\n   fp_number_type b;\n-  fp_number_type *res;\n+  const fp_number_type *res;\n   FLO_union_type au, bu;\n \n   au.value = arg_a;"}, {"sha": "289ed049497ce026edb276d72a2fd98471d6fffa", "filename": "gcc/config/fp-bit.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a7d8fab4cd57f072680cd11437056882c9d4b7e/gcc%2Fconfig%2Ffp-bit.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a7d8fab4cd57f072680cd11437056882c9d4b7e/gcc%2Fconfig%2Ffp-bit.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffp-bit.h?ref=7a7d8fab4cd57f072680cd11437056882c9d4b7e", "patch": "@@ -415,10 +415,10 @@ typedef union\n }\n FLO_union_type;\n \n-/* Prototypes */\n+/* Prototypes.  */\n \n #if defined(L_pack_df) || defined(L_pack_sf) || defined(L_pack_tf)\n-extern FLO_type pack_d (fp_number_type *);\n+extern FLO_type pack_d (const fp_number_type *);\n #endif\n \n extern void unpack_d (FLO_union_type *, fp_number_type *);"}]}