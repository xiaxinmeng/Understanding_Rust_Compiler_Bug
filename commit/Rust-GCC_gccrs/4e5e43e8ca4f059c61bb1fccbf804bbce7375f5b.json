{"sha": "4e5e43e8ca4f059c61bb1fccbf804bbce7375f5b", "node_id": "C_kwDOANBUbNoAKDRlNWU0M2U4Y2E0ZjA1OWM2MWJiMWZjY2JmODA0YmJjZTczNzVmNWI", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2021-12-03T15:23:01Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-01-06T17:11:32Z"}, "message": "[Ada] Justify false positive message from CodePeer analysis of GNAT\n\ngcc/ada/\n\n\t* libgnat/s-exponu.adb (Exponu): Add annotation.", "tree": {"sha": "f459c871617ad5a7cdf63de8c3937e7c9f1a7db4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f459c871617ad5a7cdf63de8c3937e7c9f1a7db4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e5e43e8ca4f059c61bb1fccbf804bbce7375f5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e5e43e8ca4f059c61bb1fccbf804bbce7375f5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e5e43e8ca4f059c61bb1fccbf804bbce7375f5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e5e43e8ca4f059c61bb1fccbf804bbce7375f5b/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4458909a806825bc9a74b69e14c7fb88a551b800", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4458909a806825bc9a74b69e14c7fb88a551b800", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4458909a806825bc9a74b69e14c7fb88a551b800"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "2885d6b4f1942a5d0ab68f1c3c560487afb1fa7d", "filename": "gcc/ada/libgnat/s-exponu.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e5e43e8ca4f059c61bb1fccbf804bbce7375f5b/gcc%2Fada%2Flibgnat%2Fs-exponu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e5e43e8ca4f059c61bb1fccbf804bbce7375f5b/gcc%2Fada%2Flibgnat%2Fs-exponu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-exponu.adb?ref=4e5e43e8ca4f059c61bb1fccbf804bbce7375f5b", "patch": "@@ -64,6 +64,9 @@ begin\n          pragma Loop_Invariant (Exp > 0);\n          pragma Loop_Invariant (Result * Factor ** Exp = Left ** Right);\n          pragma Loop_Variant (Decreases => Exp);\n+         pragma Annotate\n+           (CodePeer, False_Positive,\n+            \"validity check\", \"confusion on generated code\");\n \n          if Exp rem 2 /= 0 then\n             pragma Assert"}]}