{"sha": "860503d8cc91ca9a5d8bf3db0b88281f31257603", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODYwNTAzZDhjYzkxY2E5YTVkOGJmM2RiMGI4ODI4MWYzMTI1NzYwMw==", "commit": {"author": {"name": "Yury Gribov", "email": "y.gribov@samsung.com", "date": "2015-04-22T11:44:26Z"}, "committer": {"name": "Yury Gribov", "email": "ygribov@gcc.gnu.org", "date": "2015-04-22T11:44:26Z"}, "message": "Allow wildcards in -fsanitize-sections.\n\n2015-04-22  Yury Gribov  <y.gribov@samsung.com>\n\n\tAllow wildcards in -fsanitize-sections.\n\n\tgcc/\n\t* asan.c (set_sanitized_sections): Parse incoming arg.\n\t(section_sanitized_p): Support wildcards.\n\t* doc/invoke.texi (-fsanitize-sections): Update description.\n\n\tgcc/testsuite/\n\t* c-c++-common/asan/user-section-1.c: New test.\n\t* c-c++-common/asan/user-section-2.c: New test.\n\t* c-c++-common/asan/user-section-3.c: New test.\n\nFrom-SVN: r222322", "tree": {"sha": "2fa8400720fb57497963cddeeb781ee766598e6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2fa8400720fb57497963cddeeb781ee766598e6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/860503d8cc91ca9a5d8bf3db0b88281f31257603", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/860503d8cc91ca9a5d8bf3db0b88281f31257603", "html_url": "https://github.com/Rust-GCC/gccrs/commit/860503d8cc91ca9a5d8bf3db0b88281f31257603", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/860503d8cc91ca9a5d8bf3db0b88281f31257603/comments", "author": null, "committer": null, "parents": [{"sha": "5cf3629251b7551a6082c1dca59675f042f986f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cf3629251b7551a6082c1dca59675f042f986f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cf3629251b7551a6082c1dca59675f042f986f4"}], "stats": {"total": 84, "additions": 69, "deletions": 15}, "files": [{"sha": "27620dd3761c128e3bdbcae205a2339ef06cab64", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/860503d8cc91ca9a5d8bf3db0b88281f31257603/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/860503d8cc91ca9a5d8bf3db0b88281f31257603/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=860503d8cc91ca9a5d8bf3db0b88281f31257603", "patch": "@@ -1,3 +1,9 @@\n+2015-04-22  Yury Gribov  <y.gribov@samsung.com>\n+\n+\t* doc/invoke.texi (-fsanitize-sections): Update description.\n+\t* asan.c (set_sanitized_sections): Parse incoming arg.\n+\t(section_sanitized_p): Support wildcards.\n+\n 2015-04-22  Tom de Vries  <tom@codesourcery.com>\n \n \tPR tree-optimization/65823"}, {"sha": "479301ad2f07bd529045c35c159cf49e529f2664", "filename": "gcc/asan.c", "status": "modified", "additions": 22, "deletions": 14, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/860503d8cc91ca9a5d8bf3db0b88281f31257603/gcc%2Fasan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/860503d8cc91ca9a5d8bf3db0b88281f31257603/gcc%2Fasan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fasan.c?ref=860503d8cc91ca9a5d8bf3db0b88281f31257603", "patch": "@@ -88,6 +88,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ubsan.h\"\n #include \"params.h\"\n #include \"builtins.h\"\n+#include \"fnmatch.h\"\n \n /* AddressSanitizer finds out-of-bounds and use-after-free bugs\n    with <2x slowdown on average.\n@@ -272,7 +273,7 @@ along with GCC; see the file COPYING3.  If not see\n \n static unsigned HOST_WIDE_INT asan_shadow_offset_value;\n static bool asan_shadow_offset_computed;\n-static const char *sanitized_sections;\n+static vec<char *> sanitized_sections;\n \n /* Sets shadow offset to value in string VAL.  */\n \n@@ -298,27 +299,34 @@ set_asan_shadow_offset (const char *val)\n /* Set list of user-defined sections that need to be sanitized.  */\n \n void\n-set_sanitized_sections (const char *secs)\n+set_sanitized_sections (const char *sections)\n {\n-  sanitized_sections = secs;\n+  char *pat;\n+  unsigned i;\n+  FOR_EACH_VEC_ELT (sanitized_sections, i, pat)\n+    free (pat);\n+  sanitized_sections.truncate (0);\n+\n+  for (const char *s = sections; *s; )\n+    {\n+      const char *end;\n+      for (end = s; *end && *end != ','; ++end);\n+      size_t len = end - s;\n+      sanitized_sections.safe_push (xstrndup (s, len));\n+      s = *end ? end + 1 : end;\n+    }\n }\n \n /* Checks whether section SEC should be sanitized.  */\n \n static bool\n section_sanitized_p (const char *sec)\n {\n-  if (!sanitized_sections)\n-    return false;\n-  size_t len = strlen (sec);\n-  const char *p = sanitized_sections;\n-  while ((p = strstr (p, sec)))\n-    {\n-      if ((p == sanitized_sections || p[-1] == ',')\n-\t  && (p[len] == 0 || p[len] == ','))\n-\treturn true;\n-      ++p;\n-    }\n+  char *pat;\n+  unsigned i;\n+  FOR_EACH_VEC_ELT (sanitized_sections, i, pat)\n+    if (fnmatch (pat, sec, FNM_PERIOD) == 0)\n+      return true;\n   return false;\n }\n "}, {"sha": "a939ff7467065366880be8e1141f1bcaef4045b5", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/860503d8cc91ca9a5d8bf3db0b88281f31257603/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/860503d8cc91ca9a5d8bf3db0b88281f31257603/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=860503d8cc91ca9a5d8bf3db0b88281f31257603", "patch": "@@ -5806,7 +5806,8 @@ Kernel AddressSanitizer.\n \n @item -fsanitize-sections=@var{s1,s2,...}\n @opindex fsanitize-sections\n-Sanitize global variables in selected user-defined sections.\n+Sanitize global variables in selected user-defined sections.  @var{si} may\n+contain wildcards.\n \n @item -fsanitize-recover@r{[}=@var{opts}@r{]}\n @opindex fsanitize-recover"}, {"sha": "53667bc3c4a700741d1411cc9f41b4c4f41b49de", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/860503d8cc91ca9a5d8bf3db0b88281f31257603/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/860503d8cc91ca9a5d8bf3db0b88281f31257603/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=860503d8cc91ca9a5d8bf3db0b88281f31257603", "patch": "@@ -1,3 +1,9 @@\n+2015-04-22  Yury Gribov  <y.gribov@samsung.com>\n+\n+\t* c-c++-common/asan/user-section-1.c: New test.\n+\t* c-c++-common/asan/user-section-2.c: New test.\n+\t* c-c++-common/asan/user-section-3.c: New test.\n+\n 2015-04-22  Hale Wang  <hale.wang@arm.com>\n \t    Terry Guo  <terry.guo@arm.com>\n "}, {"sha": "51e2b9966d6e598ac9bfb3000b97c82bd0a2728b", "filename": "gcc/testsuite/c-c++-common/asan/user-section-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/860503d8cc91ca9a5d8bf3db0b88281f31257603/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fuser-section-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/860503d8cc91ca9a5d8bf3db0b88281f31257603/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fuser-section-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fuser-section-1.c?ref=860503d8cc91ca9a5d8bf3db0b88281f31257603", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fsanitize=address -fsanitize-sections=.xxx,.yyy -fdump-tree-sanopt\" } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-flto\" } { \"\" } } */\n+\n+int x __attribute__((section(\".xxx\"))) = 1;\n+int y __attribute__((section(\".yyy\"))) = 1;\n+int z __attribute__((section(\".zzz\"))) = 1;\n+\n+/* { dg-final { scan-tree-dump \"__builtin___asan_unregister_globals \\\\(.*, 2\\\\);\" \"sanopt\" } } */\n+/* { dg-final { cleanup-tree-dump \"sanopt\" } } */\n+"}, {"sha": "f602116fe2de651647bf1d5ec961841b310fa39d", "filename": "gcc/testsuite/c-c++-common/asan/user-section-2.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/860503d8cc91ca9a5d8bf3db0b88281f31257603/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fuser-section-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/860503d8cc91ca9a5d8bf3db0b88281f31257603/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fuser-section-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fuser-section-2.c?ref=860503d8cc91ca9a5d8bf3db0b88281f31257603", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fsanitize=address -fsanitize-sections=.x* -fdump-tree-sanopt\" } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-flto\" } { \"\" } } */\n+\n+int x __attribute__((section(\".x1\"))) = 1;\n+int y __attribute__((section(\".x2\"))) = 1;\n+int z __attribute__((section(\".x3\"))) = 1;\n+\n+/* { dg-final { scan-tree-dump \"__builtin___asan_unregister_globals \\\\(.*, 3\\\\);\" \"sanopt\" } } */\n+/* { dg-final { cleanup-tree-dump \"sanopt\" } } */\n+"}, {"sha": "66e5f9ac7708093785aa49ddc68421931ba919dc", "filename": "gcc/testsuite/c-c++-common/asan/user-section-3.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/860503d8cc91ca9a5d8bf3db0b88281f31257603/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fuser-section-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/860503d8cc91ca9a5d8bf3db0b88281f31257603/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fuser-section-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fuser-section-3.c?ref=860503d8cc91ca9a5d8bf3db0b88281f31257603", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fsanitize=address -fsanitize-sections=.x* -fsanitize-sections=.y* -fdump-tree-sanopt\" } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-flto\" } { \"\" } } */\n+\n+int x __attribute__((section(\".x1\"))) = 1;\n+int y __attribute__((section(\".x2\"))) = 1;\n+int z __attribute__((section(\".y1\"))) = 1;\n+\n+/* { dg-final { scan-tree-dump \"__builtin___asan_unregister_globals \\\\(.*, 1\\\\);\" \"sanopt\" } } */\n+/* { dg-final { cleanup-tree-dump \"sanopt\" } } */\n+"}]}