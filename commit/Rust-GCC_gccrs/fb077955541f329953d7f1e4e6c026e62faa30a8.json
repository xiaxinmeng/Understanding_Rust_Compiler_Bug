{"sha": "fb077955541f329953d7f1e4e6c026e62faa30a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmIwNzc5NTU1NDFmMzI5OTUzZDdmMWU0ZTZjMDI2ZTYyZmFhMzBhOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-03-30T21:19:23Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-03-30T21:19:23Z"}, "message": "re PR c++/41185 (size of array ... has non-integral type ...)\n\n\tPR c++/41185\n\tPR c++/41786\n\t* parser.c (cp_parser_direct_declarator): Don't allow VLAs in\n\tfunction parameter context.  Don't print an error if parsing\n\ttentatively.\n\nFrom-SVN: r157838", "tree": {"sha": "22d722eb9df61b144415c5522e89d9e303d6247a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22d722eb9df61b144415c5522e89d9e303d6247a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb077955541f329953d7f1e4e6c026e62faa30a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb077955541f329953d7f1e4e6c026e62faa30a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb077955541f329953d7f1e4e6c026e62faa30a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb077955541f329953d7f1e4e6c026e62faa30a8/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5847e8da2f62aa638ca037e2e02ef6f2de2975a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5847e8da2f62aa638ca037e2e02ef6f2de2975a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5847e8da2f62aa638ca037e2e02ef6f2de2975a0"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "2f6ae04daf9fec55966b6d22c0ebabb8feeda406", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb077955541f329953d7f1e4e6c026e62faa30a8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb077955541f329953d7f1e4e6c026e62faa30a8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=fb077955541f329953d7f1e4e6c026e62faa30a8", "patch": "@@ -1,5 +1,11 @@\n 2010-03-30  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/41185\n+\tPR c++/41786\n+\t* parser.c (cp_parser_direct_declarator): Don't allow VLAs in\n+\tfunction parameter context.  Don't print an error if parsing\n+\ttentatively.\n+\n \tPR c++/43559\n \t* pt.c (more_specialized_fn): Don't control cv-qualifier check\n \twith same_type_p."}, {"sha": "6b119b6907e17a3eb0d84de10f7b0e882a6e21f0", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb077955541f329953d7f1e4e6c026e62faa30a8/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb077955541f329953d7f1e4e6c026e62faa30a8/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=fb077955541f329953d7f1e4e6c026e62faa30a8", "patch": "@@ -14106,11 +14106,13 @@ cp_parser_direct_declarator (cp_parser* parser,\n \t\tbounds = fold_non_dependent_expr (bounds);\n \t      /* Normally, the array bound must be an integral constant\n \t\t expression.  However, as an extension, we allow VLAs\n-\t\t in function scopes.  */\n-\t      else if (!parser->in_function_body)\n+\t\t in function scopes as long as they aren't part of a\n+\t\t parameter declaration.  */\n+\t      else if (!parser->in_function_body\n+\t\t       || current_binding_level->kind == sk_function_parms)\n \t\t{\n-\t\t  error_at (token->location,\n-\t\t\t    \"array bound is not an integer constant\");\n+\t\t  cp_parser_error (parser,\n+\t\t\t\t   \"array bound is not an integer constant\");\n \t\t  bounds = error_mark_node;\n \t\t}\n \t      else if (processing_template_decl && !error_operand_p (bounds))"}, {"sha": "a561219e5aba8686e12a7206da885d0f2a66fd2b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb077955541f329953d7f1e4e6c026e62faa30a8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb077955541f329953d7f1e4e6c026e62faa30a8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fb077955541f329953d7f1e4e6c026e62faa30a8", "patch": "@@ -1,3 +1,8 @@\n+2010-03-30  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/41786\n+\t* g++.dg/parse/ambig5.C: New.\n+\n 2010-03-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/43593"}, {"sha": "e554d961f570a4e7012a955085706bc989325013", "filename": "gcc/testsuite/g++.dg/parse/ambig5.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb077955541f329953d7f1e4e6c026e62faa30a8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fambig5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb077955541f329953d7f1e4e6c026e62faa30a8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fambig5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fambig5.C?ref=fb077955541f329953d7f1e4e6c026e62faa30a8", "patch": "@@ -0,0 +1,7 @@\n+// PR c++/41786\n+\n+struct A { A(int, char const*); };\n+int main() {\n+  int i = 0, *b = &i;\n+  A a(int(b[i]), \"hello\");\n+}"}, {"sha": "d64f04b78859a7451797f73102ee9c56564d6906", "filename": "gcc/testsuite/g++.dg/parse/varmod1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb077955541f329953d7f1e4e6c026e62faa30a8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fvarmod1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb077955541f329953d7f1e4e6c026e62faa30a8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fvarmod1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fvarmod1.C?ref=fb077955541f329953d7f1e4e6c026e62faa30a8", "patch": "@@ -2,6 +2,6 @@ int main(int argc, char** argv) {\n   int nx = 2;\n   void theerror(double a[][nx+1]); // { dg-message \"\" }\n   double** a;\n-  theerror(a); // { dg-error \"\" }\n+  theerror(a);\n   return 0;\n }"}]}