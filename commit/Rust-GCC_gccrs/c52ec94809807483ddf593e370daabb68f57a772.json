{"sha": "c52ec94809807483ddf593e370daabb68f57a772", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzUyZWM5NDgwOTgwNzQ4M2RkZjU5M2UzNzBkYWFiYjY4ZjU3YTc3Mg==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2009-01-06T19:02:41Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2009-01-06T19:02:41Z"}, "message": "re PR c/34252 (DEC32_MIN_EXP, DEC32_MAX_EXP don't match TR 24732)\n\ngcc/\n\tPR c/34252\n\t* ginclude/float.h: Rename DECnn_DEN to DECnn_SUBNORMAL_MIN.\n\t* real.c (decimal_single_format): Correct values of emin and emax.\n\t(decimal_double_format): Ditto.\n\t(decimal_quad_format): Ditto.\n\t* c-cppbuiltin.c (builtin_define_decimal_float_constants): Adjust\n\tcomputation of DECnn_MIN and DECnn_MAX for corrected values of\n\temin and emax.  Define __DECnn_SUBNORMAL_MIN__ instead of\n\t__DECnn_MIN__, and adjust its computation for the corrected value\n\tof emin.\n\t\ngcc/testsuite/\n\tPR c/34252\n\t* gcc.dg/dfp/decfloat-constants.c: Check for DECnn_SUBNORMAL_MIN\n\tinstead of DECnn_DEN.  Support -DDBG to list lines that fail.\n\nFrom-SVN: r143128", "tree": {"sha": "093f146d6705962c90265309fe92cd0dc9fd825e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/093f146d6705962c90265309fe92cd0dc9fd825e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c52ec94809807483ddf593e370daabb68f57a772", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c52ec94809807483ddf593e370daabb68f57a772", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c52ec94809807483ddf593e370daabb68f57a772", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c52ec94809807483ddf593e370daabb68f57a772/comments", "author": null, "committer": null, "parents": [{"sha": "300240e181a3dd4823f47cfd62be2b0c23dd4342", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/300240e181a3dd4823f47cfd62be2b0c23dd4342", "html_url": "https://github.com/Rust-GCC/gccrs/commit/300240e181a3dd4823f47cfd62be2b0c23dd4342"}], "stats": {"total": 122, "additions": 78, "deletions": 44}, "files": [{"sha": "80fd4d09a9112032106bf2d4747a88ef0cfd366c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c52ec94809807483ddf593e370daabb68f57a772/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c52ec94809807483ddf593e370daabb68f57a772/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c52ec94809807483ddf593e370daabb68f57a772", "patch": "@@ -1,3 +1,16 @@\n+2009-01-06  Janis Johnson  <janis187@us.ibm.com>\n+\n+\tPR c/34252\n+\t* ginclude/float.h: Rename DECnn_DEN to DECnn_SUBNORMAL_MIN.\n+\t* real.c (decimal_single_format): Correct values of emin and emax.\n+\t(decimal_double_format): Ditto.\n+\t(decimal_quad_format): Ditto.\n+\t* c-cppbuiltin.c (builtin_define_decimal_float_constants): Adjust\n+\tcomputation of DECnn_MIN and DECnn_MAX for corrected values of\n+\temin and emax.  Define __DECnn_SUBNORMAL_MIN__ instead of\n+\t__DECnn_MIN__, and adjust its computation for the corrected value\n+\tof emin.\n+\n 2009-01-06  Jan Hubicka  <jh@suse.cz>\n \n \tPR target/38744"}, {"sha": "58b1796e797e7e0e71c0e650d927f2e35b438dc2", "filename": "gcc/c-cppbuiltin.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c52ec94809807483ddf593e370daabb68f57a772/gcc%2Fc-cppbuiltin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c52ec94809807483ddf593e370daabb68f57a772/gcc%2Fc-cppbuiltin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-cppbuiltin.c?ref=c52ec94809807483ddf593e370daabb68f57a772", "patch": "@@ -1,5 +1,5 @@\n /* Define builtin-in macros for the C family front ends.\n-   Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008\n+   Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -279,7 +279,7 @@ builtin_define_decimal_float_constants (const char *name_prefix,\n \n   /* Compute the minimum representable value.  */\n   sprintf (name, \"__%s_MIN__\", name_prefix);\n-  sprintf (buf, \"1E%d%s\", fmt->emin, suffix);\n+  sprintf (buf, \"1E%d%s\", fmt->emin - 1, suffix);\n   builtin_define_with_value (name, buf, 0); \n \n   /* Compute the maximum representable value.  */\n@@ -292,8 +292,9 @@ builtin_define_decimal_float_constants (const char *name_prefix,\n \t*p++ = '.';\n     }\n   *p = 0;\n-  /* fmt->p plus 1, to account for the decimal point.  */\n-  sprintf (&buf[fmt->p + 1], \"E%d%s\", fmt->emax, suffix); \n+  /* fmt->p plus 1, to account for the decimal point and fmt->emax\n+     minus 1 because the digits are nines, not 1.0.  */\n+  sprintf (&buf[fmt->p + 1], \"E%d%s\", fmt->emax - 1, suffix); \n   builtin_define_with_value (name, buf, 0);\n \n   /* Compute epsilon (the difference between 1 and least value greater\n@@ -302,8 +303,8 @@ builtin_define_decimal_float_constants (const char *name_prefix,\n   sprintf (buf, \"1E-%d%s\", fmt->p - 1, suffix);\n   builtin_define_with_value (name, buf, 0);\n \n-  /* Minimum denormalized positive decimal value.  */\n-  sprintf (name, \"__%s_DEN__\", name_prefix);\n+  /* Minimum subnormal positive decimal value.  */\n+  sprintf (name, \"__%s_SUBNORMAL_MIN__\", name_prefix);\n   p = buf;\n   for (digits = fmt->p; digits > 1; digits--)\n     {\n@@ -312,7 +313,7 @@ builtin_define_decimal_float_constants (const char *name_prefix,\n \t*p++ = '.';\n     }\n   *p = 0;\n-  sprintf (&buf[fmt->p], \"1E%d%s\", fmt->emin, suffix); \n+  sprintf (&buf[fmt->p], \"1E%d%s\", fmt->emin - 1, suffix); \n   builtin_define_with_value (name, buf, 0);\n }\n "}, {"sha": "e6b1bfbb184406b7f986298fe368191713c2aa60", "filename": "gcc/ginclude/float.h", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c52ec94809807483ddf593e370daabb68f57a772/gcc%2Fginclude%2Ffloat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c52ec94809807483ddf593e370daabb68f57a772/gcc%2Fginclude%2Ffloat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Ffloat.h?ref=c52ec94809807483ddf593e370daabb68f57a772", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2002, 2007 Free Software Foundation, Inc.\n+/* Copyright (C) 2002, 2007, 2009 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -214,13 +214,13 @@ Boston, MA 02110-1301, USA.  */\n #define DEC64_MIN\t__DEC64_MIN__\n #define DEC128_MIN\t__DEC128_MIN__\n \n-/* Minimum denormalized positive floating-point number. */\n-#undef DEC32_DEN\n-#undef DEC64_DEN\n-#undef DEC128_DEN\n-#define DEC32_DEN       __DEC32_DEN__\n-#define DEC64_DEN       __DEC64_DEN__\n-#define DEC128_DEN      __DEC128_DEN__\n+/* Minimum subnormal positive floating-point number. */\n+#undef DEC32_SUBNORMAL_MIN\n+#undef DEC64_SUBNORMAL_MIN\n+#undef DEC128_SUBNORMAL_MIN\n+#define DEC32_SUBNORMAL_MIN       __DEC32_SUBNORMAL_MIN__\n+#define DEC64_SUBNORMAL_MIN       __DEC64_SUBNORMAL_MIN__\n+#define DEC128_SUBNORMAL_MIN      __DEC128_SUBNORMAL_MIN__\n \n /* The floating-point expression evaluation method.\n          -1  indeterminate"}, {"sha": "d26b0cbd0c9e379574db015b365b03b7e7f865bb", "filename": "gcc/real.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c52ec94809807483ddf593e370daabb68f57a772/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c52ec94809807483ddf593e370daabb68f57a772/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=c52ec94809807483ddf593e370daabb68f57a772", "patch": "@@ -1,6 +1,6 @@\n /* real.c - software floating point emulation.\n-   Copyright (C) 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n-   2000, 2002, 2003, 2004, 2005, 2007, 2008 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002,\n+   2003, 2004, 2005, 2007, 2008, 2009 Free Software Foundation, Inc.\n    Contributed by Stephen L. Moshier (moshier@world.std.com).\n    Re-written by Richard Henderson <rth@redhat.com>\n \n@@ -4447,8 +4447,8 @@ const struct real_format decimal_single_format =\n     10, \n     7,\n     7,\n-    -95,\n-    96,\n+    -94,\n+    97,\n     31,\n     31,\n     false,\n@@ -4469,8 +4469,8 @@ const struct real_format decimal_double_format =\n     10,\n     16,\n     16,\n-    -383,\n-    384,\n+    -382,\n+    385,\n     63,\n     63,\n     false,\n@@ -4491,8 +4491,8 @@ const struct real_format decimal_quad_format =\n     10,\n     34,\n     34,\n-    -6143,\n-    6144,\n+    -6142,\n+    6145,\n     127,\n     127,\n     false,"}, {"sha": "07c2de13e5a687b39582744cf0c1dc8f406f6634", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c52ec94809807483ddf593e370daabb68f57a772/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c52ec94809807483ddf593e370daabb68f57a772/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c52ec94809807483ddf593e370daabb68f57a772", "patch": "@@ -1,3 +1,9 @@\n+2009-01-06  Janis Johnson  <janis187@us.ibm.com>\n+\n+\tPR c/34252\n+\t* gcc.dg/dfp/decfloat-constants.c: Check for DECnn_SUBNORMAL_MIN\n+\tinstead of DECnn_DEN.  Support -DDBG to list lines that fail.\n+\n 2009-01-06  Dominique Dhumieres  <dominiq@lps.ens.fr>\n \n \t* gfortran.dg/implicit_12.f90: Add space around dg directive."}, {"sha": "ec9d3816706b9a53a43ebcfa5f4900e8aaabf8be", "filename": "gcc/testsuite/gcc.dg/dfp/decfloat-constants.c", "status": "modified", "additions": 35, "deletions": 21, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c52ec94809807483ddf593e370daabb68f57a772/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fdecfloat-constants.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c52ec94809807483ddf593e370daabb68f57a772/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fdecfloat-constants.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fdecfloat-constants.c?ref=c52ec94809807483ddf593e370daabb68f57a772", "patch": "@@ -14,36 +14,50 @@\n #include <float.h>\n \n extern void abort (void);\n+static int failcnt;\n+\n+/* Support compiling the test to report individual failures; default is\n+   to abort as soon as a check fails.  */\n+#ifdef DBG\n+#include <stdio.h>\n+#define FAILURE { printf (\"failed at line %d\\n\", __LINE__); failcnt++; }\n+#else\n+#define FAILURE abort ();\n+#endif\n \n int main ()\n {\n-  if (DEC32_MANT_DIG != 7) abort();\n-  if (DEC64_MANT_DIG != 16) abort();\n-  if (DEC128_MANT_DIG != 34) abort();\n+  if (DEC32_MANT_DIG != 7) FAILURE\n+  if (DEC64_MANT_DIG != 16) FAILURE\n+  if (DEC128_MANT_DIG != 34) FAILURE\n \n-  if (DEC32_MIN_EXP != -95) abort();\n-  if (DEC64_MIN_EXP != -383) abort();\n-  if (DEC128_MIN_EXP != -6143) abort();\n+  if (DEC32_MIN_EXP != -94) FAILURE\n+  if (DEC64_MIN_EXP != -382) FAILURE\n+  if (DEC128_MIN_EXP != -6142) FAILURE\n \n-  if (DEC32_MAX_EXP != 96) abort();\n-  if (DEC64_MAX_EXP != 384) abort();\n-  if (DEC128_MAX_EXP != 6144) abort();\n+  if (DEC32_MAX_EXP != 97) FAILURE\n+  if (DEC64_MAX_EXP != 385) FAILURE\n+  if (DEC128_MAX_EXP != 6145) FAILURE\n \n-  if (DEC32_MAX != 9.999999E96DF) abort();\n-  if (DEC64_MAX != 9.999999999999999E384DD) abort();\n-  if (DEC128_MAX != 9.999999999999999999999999999999999E6144DL) abort();\n+  if (DEC32_MAX != 9.999999E96DF) FAILURE\n+  if (DEC64_MAX != 9.999999999999999E384DD) FAILURE\n+  if (DEC128_MAX != 9.999999999999999999999999999999999E6144DL) FAILURE\n \n-  if (DEC32_EPSILON != 1E-6DF) abort();\n-  if (DEC64_EPSILON != 1E-15DD) abort();\n-  if (DEC128_EPSILON != 1E-33DL) abort();\n+  if (DEC32_EPSILON != 1E-6DF) FAILURE\n+  if (DEC64_EPSILON != 1E-15DD) FAILURE\n+  if (DEC128_EPSILON != 1E-33DL) FAILURE\n   \n-  if (DEC32_MIN != 1E-95DF) abort();\n-  if (DEC64_MIN != 1E-383DD) abort();\n-  if (DEC128_MIN != 1E-6143DL) abort();\n+  if (DEC32_MIN != 1E-95DF) FAILURE\n+  if (DEC64_MIN != 1E-383DD) FAILURE\n+  if (DEC128_MIN != 1E-6143DL) FAILURE\n+\n+  if (DEC32_SUBNORMAL_MIN != 0.000001E-95DF) FAILURE\n+  if (DEC64_SUBNORMAL_MIN != 0.000000000000001E-383DD) FAILURE\n+  if (DEC128_SUBNORMAL_MIN != 0.000000000000000000000000000000001E-6143DL)\n+    FAILURE\n \n-  if (DEC32_DEN != 0.000001E-95DF) abort();\n-  if (DEC64_DEN != 0.000000000000001E-383DD) abort();\n-  if (DEC128_DEN != 0.000000000000000000000000000000001E-6143DL) abort();\n+  if (failcnt != 0)\n+    abort ();\n \n   return 0;\n }"}]}