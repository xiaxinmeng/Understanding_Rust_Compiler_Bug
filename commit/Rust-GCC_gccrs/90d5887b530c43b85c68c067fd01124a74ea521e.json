{"sha": "90d5887b530c43b85c68c067fd01124a74ea521e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBkNTg4N2I1MzBjNDNiODVjNjhjMDY3ZmQwMTEyNGE3NGVhNTIxZQ==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2004-07-26T21:45:57Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-07-26T21:45:57Z"}, "message": "i386.c (function_arg): Always treat 8- and 16-byte wide vectors the same, even if MMX/SSE are disabled.\n\n        * config/i386/i386.c (function_arg): Always treat 8-\n        and 16-byte wide vectors the same, even if MMX/SSE\n        are disabled.\n        (contains_128bit_aligned_vector_p): Add comment.\n\nFrom-SVN: r85207", "tree": {"sha": "9b88d09b0ab8831d4ff658a3874f03480192700c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b88d09b0ab8831d4ff658a3874f03480192700c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90d5887b530c43b85c68c067fd01124a74ea521e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90d5887b530c43b85c68c067fd01124a74ea521e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90d5887b530c43b85c68c067fd01124a74ea521e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90d5887b530c43b85c68c067fd01124a74ea521e/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9c18fb885230f8f75a7c5ac11479aaff15913ca0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c18fb885230f8f75a7c5ac11479aaff15913ca0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c18fb885230f8f75a7c5ac11479aaff15913ca0"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "c7e9705e3bf17136a5f94c0bd30da5df87a9989b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d5887b530c43b85c68c067fd01124a74ea521e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d5887b530c43b85c68c067fd01124a74ea521e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=90d5887b530c43b85c68c067fd01124a74ea521e", "patch": "@@ -1,3 +1,10 @@\n+2004-07-22  Paolo Bonzini  <bonzini@gnu.org>\n+                                                                                \n+        * config/i386/i386.c (function_arg): Always treat 8-\n+        and 16-byte wide vectors the same, even if MMX/SSE\n+        are disabled.\n+        (contains_128bit_aligned_vector_p): Add comment.\n+\n 2004-07-26  J\"orn Rennecke <joern.rennecke@superh.com>\n \n \t* ra.h (enum node_type): Rename to:"}, {"sha": "797f7c33204c1523c6db90bef48ed6c0f8f83860", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d5887b530c43b85c68c067fd01124a74ea521e/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d5887b530c43b85c68c067fd01124a74ea521e/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=90d5887b530c43b85c68c067fd01124a74ea521e", "patch": "@@ -2672,6 +2672,28 @@ function_arg (CUMULATIVE_ARGS *cum,\t/* current arg information */\n   int words = (bytes + UNITS_PER_WORD - 1) / UNITS_PER_WORD;\n   static bool warnedsse, warnedmmx;\n \n+  /* To simplify the code below, represent vector types with a vector mode\n+     even if MMX/SSE are not active.  */\n+  if (type\n+      && TREE_CODE (type) == VECTOR_TYPE\n+      && (bytes == 8 || bytes == 16)\n+      && GET_MODE_CLASS (TYPE_MODE (type)) != MODE_VECTOR_INT\n+      && GET_MODE_CLASS (TYPE_MODE (type)) != MODE_VECTOR_FLOAT)\n+    {\n+      enum machine_mode innermode = TYPE_MODE (TREE_TYPE (type));\n+      mode = TREE_CODE (TREE_TYPE (type)) == REAL_TYPE\n+\t     ? MIN_MODE_VECTOR_FLOAT : MIN_MODE_VECTOR_INT;\n+\n+      /* Get the mode which has this inner mode and number of units.  */\n+      while (GET_MODE_NUNITS (mode) != TYPE_VECTOR_SUBPARTS (type)\n+\t     || GET_MODE_INNER (mode) != innermode)\n+\t{\n+\t  mode = GET_MODE_WIDER_MODE (mode);\n+\t  if (mode == VOIDmode)\n+\t    abort ();\n+\t}\n+    }\n+\n   /* Handle a hidden AL argument containing number of registers for varargs\n      x86-64 functions.  For i386 ABI just return constm1_rtx to avoid\n      any AL settings.  */\n@@ -2802,7 +2824,7 @@ ix86_pass_by_reference (CUMULATIVE_ARGS *cum ATTRIBUTE_UNUSED,\n }\n \n /* Return true when TYPE should be 128bit aligned for 32bit argument passing\n-   ABI  */\n+   ABI.  Only called if TARGET_SSE.  */\n static bool\n contains_128bit_aligned_vector_p (tree type)\n {"}]}