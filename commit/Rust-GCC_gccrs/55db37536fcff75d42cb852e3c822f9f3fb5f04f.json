{"sha": "55db37536fcff75d42cb852e3c822f9f3fb5f04f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVkYjM3NTM2ZmNmZjc1ZDQyY2I4NTJlM2M4MjJmOWYzZmI1ZjA0Zg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-10-29T14:10:31Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-10-29T14:10:31Z"}, "message": "re PR middle-end/68142 (unsafe association of multiplication)\n\n2015-10-29  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/68142\n\t* fold-const.c (extract_muldiv_1): Avoid introducing undefined\n\toverflow.\n\n\t* c-c++-common/ubsan/pr68142.c: New testcase.\n\nFrom-SVN: r229528", "tree": {"sha": "af44e27e3907d99f2751ff4e4aa9f9a2f0ece228", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af44e27e3907d99f2751ff4e4aa9f9a2f0ece228"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55db37536fcff75d42cb852e3c822f9f3fb5f04f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55db37536fcff75d42cb852e3c822f9f3fb5f04f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55db37536fcff75d42cb852e3c822f9f3fb5f04f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55db37536fcff75d42cb852e3c822f9f3fb5f04f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "957060b5c5d272296ccd00ebdb5179ef25123fb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/957060b5c5d272296ccd00ebdb5179ef25123fb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/957060b5c5d272296ccd00ebdb5179ef25123fb5"}], "stats": {"total": 55, "additions": 53, "deletions": 2}, "files": [{"sha": "a088c13fd125b65542159cdb2eac0229cce90efa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55db37536fcff75d42cb852e3c822f9f3fb5f04f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55db37536fcff75d42cb852e3c822f9f3fb5f04f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=55db37536fcff75d42cb852e3c822f9f3fb5f04f", "patch": "@@ -1,3 +1,9 @@\n+2015-10-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/68142\n+\t* fold-const.c (extract_muldiv_1): Avoid introducing undefined\n+\toverflow.\n+\n 2015-10-29  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* alias.c: Reorder #include statements and remove duplicates."}, {"sha": "26fd735339991190d93b9beaea3be9854f410d1d", "filename": "gcc/fold-const.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55db37536fcff75d42cb852e3c822f9f3fb5f04f/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55db37536fcff75d42cb852e3c822f9f3fb5f04f/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=55db37536fcff75d42cb852e3c822f9f3fb5f04f", "patch": "@@ -6008,8 +6008,17 @@ extract_muldiv_1 (tree t, tree c, enum tree_code code, tree wide_type,\n \t or (for divide and modulus) if it is a multiple of our constant.  */\n       if (code == MULT_EXPR\n \t  || wi::multiple_of_p (t, c, TYPE_SIGN (type)))\n-\treturn const_binop (code, fold_convert (ctype, t),\n-\t\t\t    fold_convert (ctype, c));\n+\t{\n+\t  tree tem = const_binop (code, fold_convert (ctype, t),\n+\t\t\t\t  fold_convert (ctype, c));\n+\t  /* If the multiplication overflowed to INT_MIN then we lost sign\n+\t     information on it and a subsequent multiplication might\n+\t     spuriously overflow.  See PR68142.  */\n+\t  if (TREE_OVERFLOW (tem)\n+\t      && wi::eq_p (tem, wi::min_value (TYPE_PRECISION (ctype), SIGNED)))\n+\t    return NULL_TREE;\n+\t  return tem;\n+\t}\n       break;\n \n     CASE_CONVERT: case NON_LVALUE_EXPR:"}, {"sha": "9a7d5454e6cdec2d4c310c52fb5dc0fc1ec502e0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55db37536fcff75d42cb852e3c822f9f3fb5f04f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55db37536fcff75d42cb852e3c822f9f3fb5f04f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=55db37536fcff75d42cb852e3c822f9f3fb5f04f", "patch": "@@ -1,3 +1,8 @@\n+2015-10-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/68142\n+\t* c-c++-common/ubsan/pr68142.c: New testcase.\n+\n 2015-10-29  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/67845"}, {"sha": "9498f08ae416b58a6cc59bc7b94a17851fef7cad", "filename": "gcc/testsuite/c-c++-common/ubsan/pr68142.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55db37536fcff75d42cb852e3c822f9f3fb5f04f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr68142.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55db37536fcff75d42cb852e3c822f9f3fb5f04f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr68142.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr68142.c?ref=55db37536fcff75d42cb852e3c822f9f3fb5f04f", "patch": "@@ -0,0 +1,31 @@\n+/* { dg-do run } */\n+/* { dg-options \"-fsanitize=undefined -fsanitize-undefined-trap-on-error\" } */\n+\n+int __attribute__((noinline,noclone))\n+h(int a)\n+{\n+  return 2 * (a * (__INT_MAX__/2 + 1));\n+}\n+int __attribute__((noinline,noclone))\n+i(int a)\n+{\n+  return (2 * a) * (__INT_MAX__/2 + 1);\n+}\n+int __attribute__((noinline,noclone))\n+j(int a, int b)\n+{\n+  return (b * a) * (__INT_MAX__/2 + 1);\n+}\n+int __attribute__((noinline,noclone))\n+k(int a, int b)\n+{\n+  return (2 * a) * b;\n+}\n+int main()\n+{\n+  volatile int tem = h(-1);\n+  tem = i(-1);\n+  tem = j(-1, 2);\n+  tem = k(-1, __INT_MAX__/2 + 1);\n+  return 0;\n+}"}]}