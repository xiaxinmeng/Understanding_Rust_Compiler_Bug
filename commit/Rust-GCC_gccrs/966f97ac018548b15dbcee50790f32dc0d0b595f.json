{"sha": "966f97ac018548b15dbcee50790f32dc0d0b595f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY2Zjk3YWMwMTg1NDhiMTVkYmNlZTUwNzkwZjMyZGMwZDBiNTk1Zg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-10-01T13:33:02Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2013-10-01T13:33:02Z"}, "message": "re PR target/58574 (Wrong code due to s390x machine reorg pass)\n\n2013-10-01  Jakub Jelinek  <jakub@redhat.com>\n            Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n\n\tPR target/58574\n\t* config/s390/s390.c (s390_split_branches): Modify check for table\n\tjump insns.\n\t(s390_chunkify_start): Rearrange table jump insn check in order to\n\tdeal with compare and branch insns correctly.\n\n2013-10-01  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/58574\n\t* gcc.c-torture/execute/pr58574.c: New testcase.\n\n\n\nCo-Authored-By: Andreas Krebbel <Andreas.Krebbel@de.ibm.com>\n\nFrom-SVN: r203060", "tree": {"sha": "e70bb41a7e9ce45e2a6deaeca62b6af53435b0d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e70bb41a7e9ce45e2a6deaeca62b6af53435b0d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/966f97ac018548b15dbcee50790f32dc0d0b595f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/966f97ac018548b15dbcee50790f32dc0d0b595f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/966f97ac018548b15dbcee50790f32dc0d0b595f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/966f97ac018548b15dbcee50790f32dc0d0b595f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3a323a38467a2a052386f847a0c5519a8d78c044", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a323a38467a2a052386f847a0c5519a8d78c044", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a323a38467a2a052386f847a0c5519a8d78c044"}], "stats": {"total": 284, "additions": 259, "deletions": 25}, "files": [{"sha": "796fab7ad4938232e5db5f3cd3eb1feaca0aad4c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/966f97ac018548b15dbcee50790f32dc0d0b595f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/966f97ac018548b15dbcee50790f32dc0d0b595f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=966f97ac018548b15dbcee50790f32dc0d0b595f", "patch": "@@ -1,3 +1,12 @@\n+2013-10-01  Jakub Jelinek  <jakub@redhat.com>\n+            Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n+\n+\tPR target/58574\n+\t* config/s390/s390.c (s390_split_branches): Modify check for table\n+\tjump insns.\n+\t(s390_chunkify_start): Rearrange table jump insn check in order to\n+\tdeal with compare and branch insns correctly.\n+\n 2013-10-01  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \n \tPR target/58578"}, {"sha": "898e683641c799ec9559b63bef55fa52dbe2c44f", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 26, "deletions": 25, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/966f97ac018548b15dbcee50790f32dc0d0b595f/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/966f97ac018548b15dbcee50790f32dc0d0b595f/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=966f97ac018548b15dbcee50790f32dc0d0b595f", "patch": "@@ -6025,11 +6025,11 @@ s390_split_branches (void)\n \n   for (insn = get_insns (); insn; insn = NEXT_INSN (insn))\n     {\n-      if (! JUMP_P (insn))\n+      if (! JUMP_P (insn) || tablejump_p (insn, NULL, NULL))\n \tcontinue;\n \n       pat = PATTERN (insn);\n-      if (GET_CODE (pat) == PARALLEL && XVECLEN (pat, 0) > 2)\n+      if (GET_CODE (pat) == PARALLEL)\n \tpat = XVECEXP (pat, 0, 0);\n       if (GET_CODE (pat) != SET || SET_DEST (pat) != pc_rtx)\n \tcontinue;\n@@ -7049,6 +7049,8 @@ s390_chunkify_start (void)\n \n   for (insn = get_insns (); insn; insn = NEXT_INSN (insn))\n     {\n+      rtx table;\n+\n       /* Labels marked with LABEL_PRESERVE_P can be target\n \t of non-local jumps, so we have to mark them.\n \t The same holds for named labels.\n@@ -7063,42 +7065,41 @@ s390_chunkify_start (void)\n \t  if (! vec_insn || ! JUMP_TABLE_DATA_P (vec_insn))\n \t    bitmap_set_bit (far_labels, CODE_LABEL_NUMBER (insn));\n \t}\n+      /* Check potential targets in a table jump (casesi_jump).  */\n+      else if (tablejump_p (insn, NULL, &table))\n+\t{\n+\t  rtx vec_pat = PATTERN (table);\n+\t  int i, diff_p = GET_CODE (vec_pat) == ADDR_DIFF_VEC;\n+\n+\t  for (i = 0; i < XVECLEN (vec_pat, diff_p); i++)\n+\t    {\n+\t      rtx label = XEXP (XVECEXP (vec_pat, diff_p, i), 0);\n \n-      /* If we have a direct jump (conditional or unconditional)\n-\t or a casesi jump, check all potential targets.  */\n+\t      if (s390_find_pool (pool_list, label)\n+\t\t  != s390_find_pool (pool_list, insn))\n+\t\tbitmap_set_bit (far_labels, CODE_LABEL_NUMBER (label));\n+\t    }\n+\t}\n+      /* If we have a direct jump (conditional or unconditional),\n+\t check all potential targets.  */\n       else if (JUMP_P (insn))\n \t{\n-          rtx pat = PATTERN (insn);\n-          rtx table;\n+\t  rtx pat = PATTERN (insn);\n \n-\t  if (GET_CODE (pat) == PARALLEL && XVECLEN (pat, 0) > 2)\n+\t  if (GET_CODE (pat) == PARALLEL)\n \t    pat = XVECEXP (pat, 0, 0);\n \n-          if (GET_CODE (pat) == SET)\n-            {\n+\t  if (GET_CODE (pat) == SET)\n+\t    {\n \t      rtx label = JUMP_LABEL (insn);\n \t      if (label)\n \t\t{\n-\t          if (s390_find_pool (pool_list, label)\n+\t\t  if (s390_find_pool (pool_list, label)\n \t\t      != s390_find_pool (pool_list, insn))\n \t\t    bitmap_set_bit (far_labels, CODE_LABEL_NUMBER (label));\n \t\t}\n-            }\n-         else if (tablejump_p (insn, NULL, &table))\n-           {\n-             rtx vec_pat = PATTERN (table);\n-             int i, diff_p = GET_CODE (vec_pat) == ADDR_DIFF_VEC;\n-\n-             for (i = 0; i < XVECLEN (vec_pat, diff_p); i++)\n-               {\n-                 rtx label = XEXP (XVECEXP (vec_pat, diff_p, i), 0);\n-\n-                 if (s390_find_pool (pool_list, label)\n-                     != s390_find_pool (pool_list, insn))\n-                   bitmap_set_bit (far_labels, CODE_LABEL_NUMBER (label));\n-\t\t}\n \t    }\n-        }\n+\t}\n     }\n \n   /* Insert base register reload insns before every pool.  */"}, {"sha": "9d6e17db3e7b4eaa7d3d05777b54b7ce5fead2ab", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/966f97ac018548b15dbcee50790f32dc0d0b595f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/966f97ac018548b15dbcee50790f32dc0d0b595f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=966f97ac018548b15dbcee50790f32dc0d0b595f", "patch": "@@ -1,3 +1,8 @@\n+2013-10-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/58574\n+\t* gcc.c-torture/execute/pr58574.c: New testcase.\n+\n 2013-10-01  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \n \tPR Target/58578"}, {"sha": "44827eb781986ed1343cd4e2b444ded2047da426", "filename": "gcc/testsuite/gcc.c-torture/execute/pr58574.c", "status": "added", "additions": 219, "deletions": 0, "changes": 219, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/966f97ac018548b15dbcee50790f32dc0d0b595f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr58574.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/966f97ac018548b15dbcee50790f32dc0d0b595f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr58574.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr58574.c?ref=966f97ac018548b15dbcee50790f32dc0d0b595f", "patch": "@@ -0,0 +1,219 @@\n+/* PR target/58574 */\n+\n+__attribute__((noinline, noclone)) double\n+foo (double x)\n+{\n+  double t;\n+  switch ((int) x)\n+    {\n+    case 0:\n+      t = 2 * x - 1;\n+      return 0.70878e-3 + (0.71234e-3 + (0.35779e-5 + (0.17403e-7 + (0.81710e-10 + (0.36885e-12 + 0.15917e-14 * t) * t) * t) * t) * t) * t;\n+    case 1:\n+      t = 2 * x - 3;\n+      return 0.21479e-2 + (0.72686e-3 + (0.36843e-5 + (0.18071e-7 + (0.85496e-10 + (0.38852e-12 + 0.16868e-14 * t) * t) * t) * t) * t) * t;\n+    case 2:\n+      t = 2 * x - 5;\n+      return 0.36165e-2 + (0.74182e-3 + (0.37948e-5 + (0.18771e-7 + (0.89484e-10 + (0.40935e-12 + 0.17872e-14 * t) * t) * t) * t) * t) * t;\n+    case 3:\n+      t = 2 * x - 7;\n+      return 0.51154e-2 + (0.75722e-3 + (0.39096e-5 + (0.19504e-7 + (0.93687e-10 + (0.43143e-12 + 0.18939e-14 * t) * t) * t) * t) * t) * t;\n+    case 4:\n+      t = 2 * x - 9;\n+      return 0.66457e-2 + (0.77310e-3 + (0.40289e-5 + (0.20271e-7 + (0.98117e-10 + (0.45484e-12 + 0.20076e-14 * t) * t) * t) * t) * t) * t;\n+    case 5:\n+      t = 2 * x - 11;\n+      return 0.82082e-2 + (0.78946e-3 + (0.41529e-5 + (0.21074e-7 + (0.10278e-9 + (0.47965e-12 + 0.21285e-14 * t) * t) * t) * t) * t) * t;\n+    case 6:\n+      t = 2 * x - 13;\n+      return 0.98039e-2 + (0.80633e-3 + (0.42819e-5 + (0.21916e-7 + (0.10771e-9 + (0.50595e-12 + 0.22573e-14 * t) * t) * t) * t) * t) * t;\n+    case 7:\n+      t = 2 * x - 15;\n+      return 0.11433e-1 + (0.82372e-3 + (0.44160e-5 + (0.22798e-7 + (0.11291e-9 + (0.53386e-12 + 0.23944e-14 * t) * t) * t) * t) * t) * t;\n+    case 8:\n+      t = 2 * x - 17;\n+      return 0.13099e-1 + (0.84167e-3 + (0.45555e-5 + (0.23723e-7 + (0.11839e-9 + (0.56346e-12 + 0.25403e-14 * t) * t) * t) * t) * t) * t;\n+    case 9:\n+      t = 2 * x - 19;\n+      return 0.14800e-1 + (0.86018e-3 + (0.47008e-5 + (0.24694e-7 + (0.12418e-9 + (0.59486e-12 + 0.26957e-14 * t) * t) * t) * t) * t) * t;\n+    case 10:\n+      t = 2 * x - 21;\n+      return 0.16540e-1 + (0.87928e-3 + (0.48520e-5 + (0.25711e-7 + (0.13030e-9 + (0.62820e-12 + 0.28612e-14 * t) * t) * t) * t) * t) * t;\n+    case 11:\n+      t = 2 * x - 23;\n+      return 0.18318e-1 + (0.89900e-3 + (0.50094e-5 + (0.26779e-7 + (0.13675e-9 + (0.66358e-12 + 0.30375e-14 * t) * t) * t) * t) * t) * t;\n+    case 12:\n+      t = 2 * x - 25;\n+      return 0.20136e-1 + (0.91936e-3 + (0.51734e-5 + (0.27900e-7 + (0.14357e-9 + (0.70114e-12 + 0.32252e-14 * t) * t) * t) * t) * t) * t;\n+    case 13:\n+      t = 2 * x - 27;\n+      return 0.21996e-1 + (0.94040e-3 + (0.53443e-5 + (0.29078e-7 + (0.15078e-9 + (0.74103e-12 + 0.34251e-14 * t) * t) * t) * t) * t) * t;\n+    case 14:\n+      t = 2 * x - 29;\n+      return 0.23898e-1 + (0.96213e-3 + (0.55225e-5 + (0.30314e-7 + (0.15840e-9 + (0.78340e-12 + 0.36381e-14 * t) * t) * t) * t) * t) * t;\n+    case 15:\n+      t = 2 * x - 31;\n+      return 0.25845e-1 + (0.98459e-3 + (0.57082e-5 + (0.31613e-7 + (0.16646e-9 + (0.82840e-12 + 0.38649e-14 * t) * t) * t) * t) * t) * t;\n+    case 16:\n+      t = 2 * x - 33;\n+      return 0.27837e-1 + (0.10078e-2 + (0.59020e-5 + (0.32979e-7 + (0.17498e-9 + (0.87622e-12 + 0.41066e-14 * t) * t) * t) * t) * t) * t;\n+    case 17:\n+      t = 2 * x - 35;\n+      return 0.29877e-1 + (0.10318e-2 + (0.61041e-5 + (0.34414e-7 + (0.18399e-9 + (0.92703e-12 + 0.43639e-14 * t) * t) * t) * t) * t) * t;\n+    case 18:\n+      t = 2 * x - 37;\n+      return 0.31965e-1 + (0.10566e-2 + (0.63151e-5 + (0.35924e-7 + (0.19353e-9 + (0.98102e-12 + 0.46381e-14 * t) * t) * t) * t) * t) * t;\n+    case 19:\n+      t = 2 * x - 39;\n+      return 0.34104e-1 + (0.10823e-2 + (0.65354e-5 + (0.37512e-7 + (0.20362e-9 + (0.10384e-11 + 0.49300e-14 * t) * t) * t) * t) * t) * t;\n+    case 20:\n+      t = 2 * x - 41;\n+      return 0.36295e-1 + (0.11089e-2 + (0.67654e-5 + (0.39184e-7 + (0.21431e-9 + (0.10994e-11 + 0.52409e-14 * t) * t) * t) * t) * t) * t;\n+    case 21:\n+      t = 2 * x - 43;\n+      return 0.38540e-1 + (0.11364e-2 + (0.70058e-5 + (0.40943e-7 + (0.22563e-9 + (0.11642e-11 + 0.55721e-14 * t) * t) * t) * t) * t) * t;\n+    case 22:\n+      t = 2 * x - 45;\n+      return 0.40842e-1 + (0.11650e-2 + (0.72569e-5 + (0.42796e-7 + (0.23761e-9 + (0.12332e-11 + 0.59246e-14 * t) * t) * t) * t) * t) * t;\n+    case 23:\n+      t = 2 * x - 47;\n+      return 0.43201e-1 + (0.11945e-2 + (0.75195e-5 + (0.44747e-7 + (0.25030e-9 + (0.13065e-11 + 0.63000e-14 * t) * t) * t) * t) * t) * t;\n+    case 24:\n+      t = 2 * x - 49;\n+      return 0.45621e-1 + (0.12251e-2 + (0.77941e-5 + (0.46803e-7 + (0.26375e-9 + (0.13845e-11 + 0.66996e-14 * t) * t) * t) * t) * t) * t;\n+    case 25:\n+      t = 2 * x - 51;\n+      return 0.48103e-1 + (0.12569e-2 + (0.80814e-5 + (0.48969e-7 + (0.27801e-9 + (0.14674e-11 + 0.71249e-14 * t) * t) * t) * t) * t) * t;\n+    case 26:\n+      t = 2 * x - 59;\n+      return 0.58702e-1 + (0.13962e-2 + (0.93714e-5 + (0.58882e-7 + (0.34414e-9 + (0.18552e-11 + 0.91160e-14 * t) * t) * t) * t) * t) * t;\n+    case 30:\n+      t = 2 * x - 79;\n+      return 0.90908e-1 + (0.18544e-2 + (0.13903e-4 + (0.95549e-7 + (0.59752e-9 + (0.33656e-11 + 0.16815e-13 * t) * t) * t) * t) * t) * t;\n+    case 40:\n+      t = 2 * x - 99;\n+      return 0.13443e0 + (0.25474e-2 + (0.21385e-4 + (0.15996e-6 + (0.10585e-8 + (0.61258e-11 + 0.30412e-13 * t) * t) * t) * t) * t) * t;\n+    case 50:\n+      t = 2 * x - 119;\n+      return 0.19540e0 + (0.36342e-2 + (0.34096e-4 + (0.27479e-6 + (0.18934e-8 + (0.11021e-10 + 0.52931e-13 * t) * t) * t) * t) * t) * t;\n+    case 60:\n+      t = 2 * x - 121;\n+      return 0.20281e0 + (0.37739e-2 + (0.35791e-4 + (0.29038e-6 + (0.20068e-8 + (0.11673e-10 + 0.55790e-13 * t) * t) * t) * t) * t) * t;\n+    case 61:\n+      t = 2 * x - 123;\n+      return 0.21050e0 + (0.39206e-2 + (0.37582e-4 + (0.30691e-6 + (0.21270e-8 + (0.12361e-10 + 0.58770e-13 * t) * t) * t) * t) * t) * t;\n+    case 62:\n+      t = 2 * x - 125;\n+      return 0.21849e0 + (0.40747e-2 + (0.39476e-4 + (0.32443e-6 + (0.22542e-8 + (0.13084e-10 + 0.61873e-13 * t) * t) * t) * t) * t) * t;\n+    case 63:\n+      t = 2 * x - 127;\n+      return 0.22680e0 + (0.42366e-2 + (0.41477e-4 + (0.34300e-6 + (0.23888e-8 + (0.13846e-10 + 0.65100e-13 * t) * t) * t) * t) * t) * t;\n+    case 64:\n+      t = 2 * x - 129;\n+      return 0.23545e0 + (0.44067e-2 + (0.43594e-4 + (0.36268e-6 + (0.25312e-8 + (0.14647e-10 + 0.68453e-13 * t) * t) * t) * t) * t) * t;\n+    case 65:\n+      t = 2 * x - 131;\n+      return 0.24444e0 + (0.45855e-2 + (0.45832e-4 + (0.38352e-6 + (0.26819e-8 + (0.15489e-10 + 0.71933e-13 * t) * t) * t) * t) * t) * t;\n+    case 66:\n+      t = 2 * x - 133;\n+      return 0.25379e0 + (0.47735e-2 + (0.48199e-4 + (0.40561e-6 + (0.28411e-8 + (0.16374e-10 + 0.75541e-13 * t) * t) * t) * t) * t) * t;\n+    case 67:\n+      t = 2 * x - 135;\n+      return 0.26354e0 + (0.49713e-2 + (0.50702e-4 + (0.42901e-6 + (0.30095e-8 + (0.17303e-10 + 0.79278e-13 * t) * t) * t) * t) * t) * t;\n+    case 68:\n+      t = 2 * x - 137;\n+      return 0.27369e0 + (0.51793e-2 + (0.53350e-4 + (0.45379e-6 + (0.31874e-8 + (0.18277e-10 + 0.83144e-13 * t) * t) * t) * t) * t) * t;\n+    case 69:\n+      t = 2 * x - 139;\n+      return 0.28426e0 + (0.53983e-2 + (0.56150e-4 + (0.48003e-6 + (0.33752e-8 + (0.19299e-10 + 0.87139e-13 * t) * t) * t) * t) * t) * t;\n+    case 70:\n+      t = 2 * x - 141;\n+      return 0.29529e0 + (0.56288e-2 + (0.59113e-4 + (0.50782e-6 + (0.35735e-8 + (0.20369e-10 + 0.91262e-13 * t) * t) * t) * t) * t) * t;\n+    case 71:\n+      t = 2 * x - 143;\n+      return 0.30679e0 + (0.58714e-2 + (0.62248e-4 + (0.53724e-6 + (0.37827e-8 + (0.21490e-10 + 0.95513e-13 * t) * t) * t) * t) * t) * t;\n+    case 72:\n+      t = 2 * x - 145;\n+      return 0.31878e0 + (0.61270e-2 + (0.65564e-4 + (0.56837e-6 + (0.40035e-8 + (0.22662e-10 + 0.99891e-13 * t) * t) * t) * t) * t) * t;\n+    case 73:\n+      t = 2 * x - 147;\n+      return 0.33130e0 + (0.63962e-2 + (0.69072e-4 + (0.60133e-6 + (0.42362e-8 + (0.23888e-10 + 0.10439e-12 * t) * t) * t) * t) * t) * t;\n+    case 74:\n+      t = 2 * x - 149;\n+      return 0.34438e0 + (0.66798e-2 + (0.72783e-4 + (0.63619e-6 + (0.44814e-8 + (0.25168e-10 + 0.10901e-12 * t) * t) * t) * t) * t) * t;\n+    case 75:\n+      t = 2 * x - 151;\n+      return 0.35803e0 + (0.69787e-2 + (0.76710e-4 + (0.67306e-6 + (0.47397e-8 + (0.26505e-10 + 0.11376e-12 * t) * t) * t) * t) * t) * t;\n+    case 76:\n+      t = 2 * x - 153;\n+      return 0.37230e0 + (0.72938e-2 + (0.80864e-4 + (0.71206e-6 + (0.50117e-8 + (0.27899e-10 + 0.11862e-12 * t) * t) * t) * t) * t) * t;\n+    case 77:\n+      t = 2 * x - 155;\n+      return 0.38722e0 + (0.76260e-2 + (0.85259e-4 + (0.75329e-6 + (0.52979e-8 + (0.29352e-10 + 0.12360e-12 * t) * t) * t) * t) * t) * t;\n+    case 78:\n+      t = 2 * x - 157;\n+      return 0.40282e0 + (0.79762e-2 + (0.89909e-4 + (0.79687e-6 + (0.55989e-8 + (0.30866e-10 + 0.12868e-12 * t) * t) * t) * t) * t) * t;\n+    case 79:\n+      t = 2 * x - 159;\n+      return 0.41914e0 + (0.83456e-2 + (0.94827e-4 + (0.84291e-6 + (0.59154e-8 + (0.32441e-10 + 0.13387e-12 * t) * t) * t) * t) * t) * t;\n+    case 80:\n+      t = 2 * x - 161;\n+      return 0.43621e0 + (0.87352e-2 + (0.10002e-3 + (0.89156e-6 + (0.62480e-8 + (0.34079e-10 + 0.13917e-12 * t) * t) * t) * t) * t) * t;\n+    case 81:\n+      t = 2 * x - 163;\n+      return 0.45409e0 + (0.91463e-2 + (0.10553e-3 + (0.94293e-6 + (0.65972e-8 + (0.35782e-10 + 0.14455e-12 * t) * t) * t) * t) * t) * t;\n+    case 82:\n+      t = 2 * x - 165;\n+      return 0.47282e0 + (0.95799e-2 + (0.11135e-3 + (0.99716e-6 + (0.69638e-8 + (0.37549e-10 + 0.15003e-12 * t) * t) * t) * t) * t) * t;\n+    case 83:\n+      t = 2 * x - 167;\n+      return 0.49243e0 + (0.10037e-1 + (0.11750e-3 + (0.10544e-5 + (0.73484e-8 + (0.39383e-10 + 0.15559e-12 * t) * t) * t) * t) * t) * t;\n+    case 84:\n+      t = 2 * x - 169;\n+      return 0.51298e0 + (0.10520e-1 + (0.12400e-3 + (0.11147e-5 + (0.77517e-8 + (0.41283e-10 + 0.16122e-12 * t) * t) * t) * t) * t) * t;\n+    case 85:\n+      t = 2 * x - 171;\n+      return 0.53453e0 + (0.11030e-1 + (0.13088e-3 + (0.11784e-5 + (0.81743e-8 + (0.43252e-10 + 0.16692e-12 * t) * t) * t) * t) * t) * t;\n+    case 86:\n+      t = 2 * x - 173;\n+      return 0.55712e0 + (0.11568e-1 + (0.13815e-3 + (0.12456e-5 + (0.86169e-8 + (0.45290e-10 + 0.17268e-12 * t) * t) * t) * t) * t) * t;\n+    case 87:\n+      t = 2 * x - 175;\n+      return 0.58082e0 + (0.12135e-1 + (0.14584e-3 + (0.13164e-5 + (0.90803e-8 + (0.47397e-10 + 0.17850e-12 * t) * t) * t) * t) * t) * t;\n+    case 88:\n+      t = 2 * x - 177;\n+      return 0.60569e0 + (0.12735e-1 + (0.15396e-3 + (0.13909e-5 + (0.95651e-8 + (0.49574e-10 + 0.18435e-12 * t) * t) * t) * t) * t) * t;\n+    case 89:\n+      t = 2 * x - 179;\n+      return 0.63178e0 + (0.13368e-1 + (0.16254e-3 + (0.14695e-5 + (0.10072e-7 + (0.51822e-10 + 0.19025e-12 * t) * t) * t) * t) * t) * t;\n+    case 90:\n+      t = 2 * x - 181;\n+      return 0.65918e0 + (0.14036e-1 + (0.17160e-3 + (0.15521e-5 + (0.10601e-7 + (0.54140e-10 + 0.19616e-12 * t) * t) * t) * t) * t) * t;\n+    case 91:\n+      t = 2 * x - 183;\n+      return 0.68795e0 + (0.14741e-1 + (0.18117e-3 + (0.16392e-5 + (0.11155e-7 + (0.56530e-10 + 0.20209e-12 * t) * t) * t) * t) * t) * t;\n+    case 92:\n+      t = 2 * x - 185;\n+      return 0.71818e0 + (0.15486e-1 + (0.19128e-3 + (0.17307e-5 + (0.11732e-7 + (0.58991e-10 + 0.20803e-12 * t) * t) * t) * t) * t) * t;\n+    case 93:\n+      t = 2 * x - 187;\n+      return 0.74993e0 + (0.16272e-1 + (0.20195e-3 + (0.18269e-5 + (0.12335e-7 + (0.61523e-10 + 0.21395e-12 * t) * t) * t) * t) * t) * t;\n+    }\n+  return 1.0;\n+}\n+\n+int\n+main ()\n+{\n+#ifdef __s390x__\n+  {\n+    register unsigned long r5 __asm (\"r5\");\n+    r5 = 0xdeadbeefUL;\n+    asm volatile (\"\":\"+r\" (r5));\n+  }\n+#endif\n+  double d = foo (78.4);\n+  if (d < 0.38 || d > 0.42)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}