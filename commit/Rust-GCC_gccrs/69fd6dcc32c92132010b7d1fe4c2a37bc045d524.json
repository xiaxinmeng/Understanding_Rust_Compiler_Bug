{"sha": "69fd6dcc32c92132010b7d1fe4c2a37bc045d524", "node_id": "C_kwDOANBUbNoAKDY5ZmQ2ZGNjMzJjOTIxMzIwMTBiN2QxZmU0YzJhMzdiYzA0NWQ1MjQ", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-10-04T00:17:16Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-10-04T00:17:16Z"}, "message": "Daily bump.", "tree": {"sha": "60761d2dfc0f1c25cdd94351e553b235ad696833", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60761d2dfc0f1c25cdd94351e553b235ad696833"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69fd6dcc32c92132010b7d1fe4c2a37bc045d524", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69fd6dcc32c92132010b7d1fe4c2a37bc045d524", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69fd6dcc32c92132010b7d1fe4c2a37bc045d524", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69fd6dcc32c92132010b7d1fe4c2a37bc045d524/comments", "author": null, "committer": null, "parents": [{"sha": "c27ddea7465bfbc3b7077ddb13889014c9fd995e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c27ddea7465bfbc3b7077ddb13889014c9fd995e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c27ddea7465bfbc3b7077ddb13889014c9fd995e"}], "stats": {"total": 785, "additions": 784, "deletions": 1}, "files": [{"sha": "48397ffb1f90625dc26e822fb4f06152c7864cad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69fd6dcc32c92132010b7d1fe4c2a37bc045d524/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69fd6dcc32c92132010b7d1fe4c2a37bc045d524/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=69fd6dcc32c92132010b7d1fe4c2a37bc045d524", "patch": "@@ -1,3 +1,48 @@\n+2022-10-03  Sergei Trofimovich  <siarheit@google.com>\n+\n+\t* config/i386/t-i386: Add build-time dependencies against\n+\ti386-builtin-types.inc to i386-builtins.o, i386-expand.o,\n+\ti386-features.o.\n+\n+2022-10-03  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\t* config/gcn/gcn-valu.md (while_ultsidi): Limit mask length using\n+\toperand 3.\n+\t* doc/md.texi (while_ult): Document new operand 3 usage.\n+\t* internal-fn.cc (expand_while_optab_fn): Set operand 3 when lhs_type\n+\tmaps to a non-vector mode.\n+\n+2022-10-03  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR tree-optimization/107109\n+\t* range-op.cc (adjust_op1_for_overflow): Don't process undefined.\n+\n+2022-10-03  Christophe Lyon  <christophe.lyon@arm.com>\n+\n+\t* config/arm/mve.md (mve_vrev64q_m_<supf><mode>): Add early\n+\tclobber.\n+\t(mve_vrev64q_m_f<mode>): Likewise.\n+\n+2022-10-03  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* value-range.cc (irange::set_nonzero_bits): Do not pessimize range.\n+\t(range_tests_nonzero_bits): New test.\n+\n+2022-10-03  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* value-range.cc (irange::operator==): Early bail on m_num_ranges\n+\tequal to 0.\n+\n+2022-10-03  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* value-range.cc (irange::legacy_equal_p): Remove nonozero mask\n+\tcheck when comparing VR_VARYING ranges.\n+\n+2022-10-03  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* ipa-prop.cc (struct ipa_vr_ggc_hash_traits): Do not compare\n+\tincompatible ranges in ipa-prop.\n+\n 2022-10-02  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/107121"}, {"sha": "59c7fe23e2ac15e484b0c6e9099c08e777333caf", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69fd6dcc32c92132010b7d1fe4c2a37bc045d524/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69fd6dcc32c92132010b7d1fe4c2a37bc045d524/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=69fd6dcc32c92132010b7d1fe4c2a37bc045d524", "patch": "@@ -1 +1 @@\n-20221003\n+20221004"}, {"sha": "ea4b2546482a7e189c2618b2cbf08f6a8fde3c79", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69fd6dcc32c92132010b7d1fe4c2a37bc045d524/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69fd6dcc32c92132010b7d1fe4c2a37bc045d524/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=69fd6dcc32c92132010b7d1fe4c2a37bc045d524", "patch": "@@ -1,3 +1,13 @@\n+2022-10-03  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* c-common.cc (c_common_reswords): Use RID_IS_SAME instead of\n+\tRID_IS_SAME_AS.\n+\n+2022-10-03  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* c-cppbuiltin.cc (builtin_define_float_constants): Do not\n+\tspecial-case __*_EPSILON__ setting for IBM long double for C2x.\n+\n 2022-09-30  Patrick Palka  <ppalka@redhat.com>\n \n \t* c-common.cc (c_common_reswords): Use cp/cp-trait.def to handle"}, {"sha": "db6fea132ce33a84038803f122069c39fa2e291c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69fd6dcc32c92132010b7d1fe4c2a37bc045d524/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69fd6dcc32c92132010b7d1fe4c2a37bc045d524/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=69fd6dcc32c92132010b7d1fe4c2a37bc045d524", "patch": "@@ -1,3 +1,28 @@\n+2022-10-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* cp-tree.h (BCS_STMT_EXPR): New enumerator.\n+\t* name-lookup.h (enum scope_kind): Add sk_stmt_expr.\n+\t* name-lookup.cc (begin_scope): Handle sk_stmt_expr like sk_block.\n+\t* semantics.cc (begin_compound_stmt): For BCS_STMT_EXPR use\n+\tsk_stmt_expr.\n+\t* parser.cc (cp_parser_statement_expr): Use BCS_STMT_EXPR instead of\n+\tBCS_NORMAL.\n+\t* decl.cc (struct named_label_entry): Add in_stmt_expr.\n+\t(poplevel_named_label_1): Handle sk_stmt_expr.\n+\t(check_previous_goto_1): Diagnose entering of statement expression.\n+\t(check_goto): Likewise.\n+\n+2022-10-03  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* constraint.cc (diagnose_trait_expr): Use CPTK_IS_SAME instead\n+\tof CPTK_IS_SAME_AS.\n+\t* cp-trait.def (IS_SAME_AS): Rename to ...\n+\t(IS_SAME): ... this.\n+\t* pt.cc (alias_ctad_tweaks): Use CPTK_IS_SAME instead of\n+\tCPTK_IS_SAME_AS.\n+\t* semantics.cc (trait_expr_value): Likewise.\n+\t(finish_trait_expr): Likewise.\n+\n 2022-10-01  Patrick Palka  <ppalka@redhat.com>\n \n \t* semantics.cc (trait_expr_value): Make cp_trait_kind switch"}, {"sha": "9499a3dbd3df773446cfe3f3d30b9364a80a97eb", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69fd6dcc32c92132010b7d1fe4c2a37bc045d524/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69fd6dcc32c92132010b7d1fe4c2a37bc045d524/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=69fd6dcc32c92132010b7d1fe4c2a37bc045d524", "patch": "@@ -1,3 +1,7 @@\n+2022-10-03  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* sv.po: Update.\n+\n 2022-09-22  Joseph Myers  <joseph@codesourcery.com>\n \n \t* fr.po: Update."}, {"sha": "0c6e5d4b269494c7c3833a65e96362970a21ff42", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69fd6dcc32c92132010b7d1fe4c2a37bc045d524/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69fd6dcc32c92132010b7d1fe4c2a37bc045d524/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=69fd6dcc32c92132010b7d1fe4c2a37bc045d524", "patch": "@@ -1,3 +1,30 @@\n+2022-10-03  Torbj\u00f6rn SVENSSON  <torbjorn.svensson@foss.st.com>\n+\t    Yvan ROUX   <yvan.roux@foss.st.com>\n+\n+\t* gcc.target/arm/cmse/cmse-15.c: Align with -Os improvements.\n+\n+2022-10-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* g++.dg/ext/stmtexpr24.C: New test.\n+\n+2022-10-03  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* gcc.dg/pr107109.c: New.\n+\n+2022-10-03  Christophe Lyon  <christophe.lyon@arm.com>\n+\n+\t* gcc.target/arm/mve/intrinsics/vrev64q_m_s16-clobber.c: New test.\n+\n+2022-10-03  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.dg/c11-float-7.c, gcc.dg/c2x-float-12.c: New tests.\n+\n+2022-10-03  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/107062\n+\t* gfortran.dg/ieee/fma_1.f90: Fix test.\n+\t* gfortran.dg/ieee/modes_1.f90: Fix test.\n+\n 2022-10-01  Jos\u00e9 Rui Faustino de Sousa  <jrfsousa@gmail.com>\n \n \tPR fortran/100029"}, {"sha": "214094c4736107470d55391dfc3bb11e94785c9c", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69fd6dcc32c92132010b7d1fe4c2a37bc045d524/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69fd6dcc32c92132010b7d1fe4c2a37bc045d524/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=69fd6dcc32c92132010b7d1fe4c2a37bc045d524", "patch": "@@ -1,3 +1,9 @@\n+2022-10-03  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR sanitizer/105531\n+\t* sanitizer_common/sanitizer_procmaps_solaris.cpp: Cherry-pick\n+\tllvm-project revision 1cd4d63fb9ab0f04c7151911dde0d58b673823de.\n+\n 2022-09-04  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* LOCAL_PATCHES: Update."}, {"sha": "be69777d55e31979e50b3af69669f32e60bcdfa6", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 666, "deletions": 0, "changes": 666, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69fd6dcc32c92132010b7d1fe4c2a37bc045d524/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69fd6dcc32c92132010b7d1fe4c2a37bc045d524/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=69fd6dcc32c92132010b7d1fe4c2a37bc045d524", "patch": "@@ -1,3 +1,669 @@\n+2022-10-03  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/xml/manual/status_cxx2020.xml: Update C++20 status.\n+\t* doc/html/manual/status.html: Regenerate.\n+\n+2022-10-03  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\tPR libstdc++/103626\n+\t* testsuite/17_intro/headers/c++1998/stdc++_assert_neg.cc:\n+\tRequire ET hosted.\n+\t* testsuite/18_support/aligned_alloc/aligned_alloc.cc: Likewise.\n+\t* testsuite/18_support/new_nothrow.cc: Likewise.\n+\t* testsuite/20_util/allocator/105975.cc: Likewise.\n+\t* testsuite/20_util/allocator/14176.cc: Likewise.\n+\t* testsuite/20_util/allocator/64135.cc: Likewise.\n+\t* testsuite/20_util/allocator/89510.cc: Likewise.\n+\t* testsuite/20_util/allocator/lwg3190.cc: Likewise.\n+\t* testsuite/20_util/allocator/overaligned.cc: Likewise.\n+\t* testsuite/20_util/allocator/rebind_c++20.cc: Likewise.\n+\t* testsuite/20_util/allocator/requirements/constexpr.cc:\n+\tLikewise.\n+\t* testsuite/20_util/allocator/requirements/explicit_instantiation/1.cc:\n+\tLikewise.\n+\t* testsuite/20_util/allocator/requirements/typedefs.cc:\n+\tLikewise.\n+\t* testsuite/20_util/allocator/requirements/typedefs_c++20.cc:\n+\tLikewise.\n+\t* testsuite/20_util/allocator/void.cc: Likewise.\n+\t* testsuite/20_util/allocator_traits/header-2.cc: Likewise.\n+\t* testsuite/20_util/allocator_traits/header.cc: Likewise.\n+\t* testsuite/20_util/allocator_traits/members/92878_92947.cc:\n+\tLikewise.\n+\t* testsuite/20_util/allocator_traits/members/pointers.cc:\n+\tLikewise.\n+\t* testsuite/20_util/allocator_traits/requirements/typedefs.cc:\n+\tLikewise.\n+\t* testsuite/20_util/bad_function_call/cons_virtual_derivation.cc:\n+\tLikewise.\n+\t* testsuite/20_util/bind/42593.cc: Likewise.\n+\t* testsuite/20_util/bitset/access/dr396.cc: Likewise.\n+\t* testsuite/20_util/bitset/access/to_string.cc: Likewise.\n+\t* testsuite/20_util/bitset/cons/16020.cc: Likewise.\n+\t* testsuite/20_util/bitset/cons/dr1325-2.cc: Likewise.\n+\t* testsuite/20_util/bitset/cons/dr396.cc: Likewise.\n+\t* testsuite/20_util/bitset/debug/invalidation/1.cc: Likewise.\n+\t* testsuite/20_util/bitset/ext/15361.cc: Likewise.\n+\t* testsuite/20_util/bitset/operations/13838.cc: Likewise.\n+\t* testsuite/20_util/bitset/operations/96303.cc: Likewise.\n+\t* testsuite/20_util/bitset/version.cc: Likewise.\n+\t* testsuite/20_util/enable_shared_from_this/56383.cc: Likewise.\n+\t* testsuite/20_util/enable_shared_from_this/89303.cc: Likewise.\n+\t* testsuite/20_util/enable_shared_from_this/members/assign.cc:\n+\tLikewise.\n+\t* testsuite/20_util/enable_shared_from_this/members/const.cc:\n+\tLikewise.\n+\t* testsuite/20_util/enable_shared_from_this/members/reinit.cc:\n+\tLikewise.\n+\t* testsuite/20_util/enable_shared_from_this/members/unique_ptr.cc:\n+\tLikewise.\n+\t* testsuite/20_util/enable_shared_from_this/members/weak_from_this.cc:\n+\tLikewise.\n+\t* testsuite/20_util/enable_shared_from_this/requirements/explicit_instantiation.cc:\n+\tLikewise.\n+\t* testsuite/20_util/forward/1.cc: Likewise.\n+\t* testsuite/20_util/forward/1_neg.cc: Likewise.\n+\t* testsuite/20_util/function/1.cc: Likewise.\n+\t* testsuite/20_util/function/10.cc: Likewise.\n+\t* testsuite/20_util/function/2.cc: Likewise.\n+\t* testsuite/20_util/function/3.cc: Likewise.\n+\t* testsuite/20_util/function/4.cc: Likewise.\n+\t* testsuite/20_util/function/43397.cc: Likewise.\n+\t* testsuite/20_util/function/48541.cc: Likewise.\n+\t* testsuite/20_util/function/5.cc: Likewise.\n+\t* testsuite/20_util/function/58569.cc: Likewise.\n+\t* testsuite/20_util/function/6.cc: Likewise.\n+\t* testsuite/20_util/function/60594.cc: Likewise.\n+\t* testsuite/20_util/function/65760.cc: Likewise.\n+\t* testsuite/20_util/function/69222.cc: Likewise.\n+\t* testsuite/20_util/function/7.cc: Likewise.\n+\t* testsuite/20_util/function/77322.cc: Likewise.\n+\t* testsuite/20_util/function/8.cc: Likewise.\n+\t* testsuite/20_util/function/9.cc: Likewise.\n+\t* testsuite/20_util/function/91456.cc: Likewise.\n+\t* testsuite/20_util/function/assign/move.cc: Likewise.\n+\t* testsuite/20_util/function/assign/move_target.cc: Likewise.\n+\t* testsuite/20_util/function/cmp/cmp_neg.cc: Likewise.\n+\t* testsuite/20_util/function/cons/55320.cc: Likewise.\n+\t* testsuite/20_util/function/cons/57465.cc: Likewise.\n+\t* testsuite/20_util/function/cons/72820.cc: Likewise.\n+\t* testsuite/20_util/function/cons/addressof.cc: Likewise.\n+\t* testsuite/20_util/function/cons/callable.cc: Likewise.\n+\t* testsuite/20_util/function/cons/deduction.cc: Likewise.\n+\t* testsuite/20_util/function/cons/lwg2774.cc: Likewise.\n+\t* testsuite/20_util/function/cons/move.cc: Likewise.\n+\t* testsuite/20_util/function/cons/move_target.cc: Likewise.\n+\t* testsuite/20_util/function/cons/noexcept.cc: Likewise.\n+\t* testsuite/20_util/function/cons/non_copyconstructible.cc:\n+\tLikewise.\n+\t* testsuite/20_util/function/cons/refqual.cc: Likewise.\n+\t* testsuite/20_util/function/cons/70692.cc: Likewise.\n+\t* testsuite/20_util/function/cons/deduction_c++23.cc: Likewise.\n+\t* testsuite/20_util/function/invoke/forwarding.cc: Likewise.\n+\t* testsuite/20_util/function/invoke/move_only.cc: Likewise.\n+\t* testsuite/20_util/function/null_pointer_comparisons.cc:\n+\tLikewise.\n+\t* testsuite/20_util/function/requirements/explicit_instantiation.cc:\n+\tLikewise.\n+\t* testsuite/20_util/function/target_no_rtti.cc: Likewise.\n+\t* testsuite/20_util/function_objects/83607.cc: Likewise.\n+\t* testsuite/20_util/function_objects/mem_fn/adl.cc: Likewise.\n+\t* testsuite/20_util/headers/cstdlib/functions_std.cc: Likewise.\n+\t* testsuite/20_util/headers/functional/types_std_c++0x.cc:\n+\tLikewise.\n+\t* testsuite/20_util/headers/memory/types_std_c++0x.cc: Likewise.\n+\t* testsuite/20_util/is_function/35637.cc: Likewise.\n+\t* testsuite/20_util/move/1.cc: Likewise.\n+\t* testsuite/20_util/move_only_function/call.cc: Likewise.\n+\t* testsuite/20_util/move_only_function/cons.cc: Likewise.\n+\t* testsuite/20_util/move_only_function/move.cc: Likewise.\n+\t* testsuite/20_util/move_only_function/version.cc: Likewise.\n+\t* testsuite/20_util/owner_less/cmp.cc: Likewise.\n+\t* testsuite/20_util/owner_less/noexcept.cc: Likewise.\n+\t* testsuite/20_util/owner_less/void.cc: Likewise.\n+\t* testsuite/20_util/pointer_safety/1.cc: Likewise.\n+\t* testsuite/20_util/scoped_allocator/65279.cc: Likewise.\n+\t* testsuite/20_util/scoped_allocator/69293_neg.cc: Likewise.\n+\t* testsuite/20_util/scoped_allocator/construct_pair.cc:\n+\tLikewise.\n+\t* testsuite/20_util/scoped_allocator/dr2586.cc: Likewise.\n+\t* testsuite/20_util/scoped_allocator/requirements/explicit_instantiation.cc:\n+\tLikewise.\n+\t* testsuite/20_util/shared_ptr/assign/assign.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/assign/auto_ptr.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/assign/auto_ptr_neg.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/assign/auto_ptr_rvalue.cc:\n+\tLikewise.\n+\t* testsuite/20_util/shared_ptr/assign/dr541.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/assign/move.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/assign/sfinae.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/assign/shared_ptr.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/assign/shared_ptr_neg.cc:\n+\tLikewise.\n+\t* testsuite/20_util/shared_ptr/assign/unique_ptr_lvalue_neg.cc:\n+\tLikewise.\n+\t* testsuite/20_util/shared_ptr/assign/unique_ptr_rvalue.cc:\n+\tLikewise.\n+\t* testsuite/20_util/shared_ptr/atomic/1.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/atomic/2.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/casts/1.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/casts/reinterpret.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/casts/rval.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/comparison/42925.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/comparison/86537.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/comparison/cmp.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/comparison/cmp_c++20.cc:\n+\tLikewise.\n+\t* testsuite/20_util/shared_ptr/comparison/dr1401.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/comparison/less.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/39405.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/43820_neg.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/46910.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/51365.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/52924.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/55123.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/58659.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/58839.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/61036.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/79467.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/80229.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/alias-rval.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/alias.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/array.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/auto_ptr.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/auto_ptr_neg.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/copy.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/deduction.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/default.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/lwg2802.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/lwg3548.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/move.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/noexcept_move_construct.cc:\n+\tLikewise.\n+\t* testsuite/20_util/shared_ptr/cons/nullptr.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/pointer.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/unique_ptr.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/unique_ptr_array.cc:\n+\tLikewise.\n+\t* testsuite/20_util/shared_ptr/cons/unique_ptr_deleter.cc:\n+\tLikewise.\n+\t* testsuite/20_util/shared_ptr/cons/unique_ptr_deleter_ref_1.cc:\n+\tLikewise.\n+\t* testsuite/20_util/shared_ptr/cons/unique_ptr_deleter_ref_2.cc:\n+\tLikewise.\n+\t* testsuite/20_util/shared_ptr/cons/void_neg.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/weak_ptr.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/creation/36949.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/creation/58594-no-rtti.cc:\n+\tLikewise.\n+\t* testsuite/20_util/shared_ptr/creation/58594.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/creation/87278.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/creation/92878_92947.cc:\n+\tLikewise.\n+\t* testsuite/20_util/shared_ptr/creation/99006.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/creation/dr402.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/creation/dr925.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/creation/make.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/creation/no_rtti.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/creation/overwrite.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/creation/private.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/creation/single_allocation.cc:\n+\tLikewise.\n+\t* testsuite/20_util/shared_ptr/creation/single_allocation_no_rtti.cc:\n+\tLikewise.\n+\t* testsuite/20_util/shared_ptr/creation/version.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/dest/dest.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/hash/1.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/misc/24595.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/misc/42019.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/misc/get_deleter.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/misc/swap.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/modifiers/reset.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/modifiers/reset_neg.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/modifiers/reset_sfinae.cc:\n+\tLikewise.\n+\t* testsuite/20_util/shared_ptr/modifiers/swap.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/modifiers/swap_neg.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/observers/array.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/observers/bool_conv.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/observers/get.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/observers/owner_before.cc:\n+\tLikewise.\n+\t* testsuite/20_util/shared_ptr/observers/unique.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/observers/use_count.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/requirements/explicit_instantiation/1.cc:\n+\tLikewise.\n+\t* testsuite/20_util/shared_ptr/requirements/explicit_instantiation/2.cc:\n+\tLikewise.\n+\t* testsuite/20_util/shared_ptr/requirements/weak_type.cc:\n+\tLikewise.\n+\t* testsuite/20_util/specialized_algorithms/construct_at/95788.cc:\n+\tLikewise.\n+\t* testsuite/20_util/temporary_buffer.cc: Likewise.\n+\t* testsuite/20_util/tuple/48476.cc: Likewise.\n+\t* testsuite/20_util/tuple/cons/90700.cc: Likewise.\n+\t* testsuite/20_util/tuple/cons/96803.cc: Likewise.\n+\t* testsuite/20_util/tuple/cons/allocator_with_any.cc: Likewise.\n+\t* testsuite/20_util/tuple/cons/allocators.cc: Likewise.\n+\t* testsuite/20_util/tuple/cons/constexpr_allocator_arg_t.cc:\n+\tLikewise.\n+\t* testsuite/20_util/tuple/cons/explicit_construct.cc: Likewise.\n+\t* testsuite/20_util/tuple/p2321r2.cc: Likewise.\n+\t* testsuite/20_util/unique_ptr/creation/92878_92947.cc:\n+\tLikewise.\n+\t* testsuite/20_util/unique_ptr/creation/array.cc: Likewise.\n+\t* testsuite/20_util/unique_ptr/creation/array_neg.cc: Likewise.\n+\t* testsuite/20_util/unique_ptr/creation/constexpr.cc: Likewise.\n+\t* testsuite/20_util/unique_ptr/creation/for_overwrite.cc:\n+\tLikewise.\n+\t* testsuite/20_util/unique_ptr/creation/for_overwrite__neg.cc:\n+\tLikewise.\n+\t* testsuite/20_util/unique_ptr/creation/single.cc: Likewise.\n+\t* testsuite/20_util/uses_allocator/69293_neg.cc: Likewise.\n+\t* testsuite/20_util/uses_allocator/92878_92947.cc: Likewise.\n+\t* testsuite/20_util/uses_allocator/uninitialized_construct.cc:\n+\tLikewise.\n+\t* testsuite/20_util/weak_ptr/comparison/cmp_neg.cc: Likewise.\n+\t* testsuite/20_util/weak_ptr/cons/deduction.cc: Likewise.\n+\t* testsuite/20_util/weak_ptr/cons/noexcept_move_construct.cc:\n+\tLikewise.\n+\t* testsuite/20_util/weak_ptr/lock/1.cc: Likewise.\n+\t* testsuite/20_util/weak_ptr/observers/owner_before.cc:\n+\tLikewise.\n+\t* testsuite/20_util/weak_ptr/requirements/explicit_instantiation/1.cc:\n+\tLikewise.\n+\t* testsuite/20_util/weak_ptr/requirements/explicit_instantiation/2.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/version.cc: Likewise.\n+\t* testsuite/21_strings/basic_string_view/operations/contains/char/2.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/c_strings/char/69626.cc: Likewise.\n+\t* testsuite/21_strings/char_traits/requirements/version.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/vector/requirements/version.cc:\n+\tLikewise.\n+\t* testsuite/24_iterators/back_insert_iterator/requirements/base_classes.cc:\n+\tLikewise.\n+\t* testsuite/24_iterators/front_insert_iterator/requirements/base_classes.cc:\n+\tLikewise.\n+\t* testsuite/24_iterators/insert_iterator/requirements/base_classes.cc:\n+\tLikewise.\n+\t* testsuite/24_iterators/istream_iterator/requirements/base_classes.cc:\n+\tLikewise.\n+\t* testsuite/24_iterators/istreambuf_iterator/92285.cc: Likewise.\n+\t* testsuite/24_iterators/istreambuf_iterator/cons/sentinel.cc:\n+\tLikewise.\n+\t* testsuite/24_iterators/istreambuf_iterator/requirements/base_classes.cc:\n+\tLikewise.\n+\t* testsuite/24_iterators/istreambuf_iterator/requirements/dr445.cc:\n+\tLikewise.\n+\t* testsuite/24_iterators/ostream_iterator/requirements/base_classes.cc:\n+\tLikewise.\n+\t* testsuite/24_iterators/ostreambuf_iterator/requirements/base_classes.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/constexpr_macro.cc: Likewise.\n+\t* testsuite/25_algorithms/equal/constrained.cc: Likewise.\n+\t* testsuite/25_algorithms/headers/cstdlib/functions_std.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/inplace_merge/1.cc: Likewise.\n+\t* testsuite/25_algorithms/lexicographical_compare/constrained.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/make_heap/movable.cc: Likewise.\n+\t* testsuite/25_algorithms/pstl/feature_test-4.cc: Likewise.\n+\t* testsuite/25_algorithms/random_shuffle/1.cc: Likewise.\n+\t* testsuite/25_algorithms/random_shuffle/moveable.cc: Likewise.\n+\t* testsuite/25_algorithms/random_shuffle/requirements/explicit_instantiation/2.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/sort/35588.cc: Likewise.\n+\t* testsuite/25_algorithms/stable_partition/1.cc: Likewise.\n+\t* testsuite/25_algorithms/stable_partition/constrained.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/stable_partition/mem_check.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/stable_partition/moveable.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/stable_partition/requirements/explicit_instantiation/2.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/stable_partition/requirements/explicit_instantiation/pod.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/stable_sort/1.cc: Likewise.\n+\t* testsuite/26_numerics/complex/2.cc: Likewise.\n+\t* testsuite/26_numerics/headers/cstdlib/13943.cc: Likewise.\n+\t* testsuite/26_numerics/headers/cstdlib/2190.cc: Likewise.\n+\t* testsuite/26_numerics/headers/cstdlib/60401.cc: Likewise.\n+\t* testsuite/26_numerics/headers/cstdlib/dr2192.cc: Likewise.\n+\t* testsuite/26_numerics/headers/cstdlib/dr2192_neg.cc: Likewise.\n+\t* testsuite/26_numerics/headers/cstdlib/dr2735.cc: Likewise.\n+\t* testsuite/26_numerics/headers/cstdlib/functions_std.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/headers/cstdlib/macros.cc: Likewise.\n+\t* testsuite/26_numerics/headers/cstdlib/types_std.cc: Likewise.\n+\t* testsuite/26_numerics/headers/cstdlib/types_std_c++0x.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/lerp/version.cc: Likewise.\n+\t* testsuite/26_numerics/midpoint/version.cc: Likewise.\n+\t* testsuite/27_io/basic_syncbuf/2.cc: Likewise.\n+\t* testsuite/27_io/basic_syncstream/2.cc: Likewise.\n+\t* testsuite/27_io/fpos/14320-1.cc: Likewise.\n+\t* testsuite/27_io/fpos/14320-2.cc: Likewise.\n+\t* testsuite/27_io/fpos/14320-3.cc: Likewise.\n+\t* testsuite/27_io/fpos/14320-4.cc: Likewise.\n+\t* testsuite/27_io/spanstream/version.cc: Likewise.\n+\t* testsuite/29_atomics/atomic/lwg3220.cc: Likewise.\n+\t* testsuite/29_atomics/atomic/operators/51811.cc: Likewise.\n+\t* testsuite/29_atomics/atomic/wait_notify/1.cc: Likewise.\n+\t* testsuite/29_atomics/atomic/wait_notify/102994.cc: Likewise.\n+\t* testsuite/29_atomics/atomic/wait_notify/2.cc: Likewise.\n+\t* testsuite/29_atomics/headers/stdatomic.h/version.cc: Likewise.\n+\t* testsuite/30_threads/barrier/2.cc: Likewise.\n+\t* testsuite/30_threads/condition_variable_any/stop_token/2.cc:\n+\tLikewise.\n+\t* testsuite/30_threads/jthread/version.cc: Likewise.\n+\t* testsuite/30_threads/latch/2.cc: Likewise.\n+\t* testsuite/30_threads/semaphore/2.cc: Likewise.\n+\t* testsuite/30_threads/stop_token/2.cc: Likewise.\n+\t* testsuite/abi/pr42230.cc: Likewise.\n+\t* testsuite/ext/shared_ptr/1.cc: Likewise.\n+\t* testsuite/libstdc++-xmethods/shared_ptr.cc: Likewise.\n+\t* testsuite/std/ranges/adaptors/lazy_split_neg.cc: Likewise.\n+\t* testsuite/std/ranges/adaptors/p1739.cc: Likewise.\n+\t* testsuite/std/ranges/iota/lwg3292_neg.cc: Likewise.\n+\t* testsuite/std/ranges/p2325.cc: Likewise.\n+\n+2022-10-03  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/bitset (bitset(const C*, size_type n, C, C))\n+\t[!_GLIBCXX_HOSTED]: Remove std::basic_string dependency.\n+\t(_M_copy_from_ptr) [!_GLIBCXX_HOSTED]: Abort instead of\n+\tthrowing.\n+\n+2022-10-03  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\tPR libstdc++/103626\n+\t* include/std/bitset [!_GLIBCXX_HOSTED]: Re-enable std::hash.\n+\t* testsuite/20_util/bitset/cons/constexpr_c++23.cc: Require ET\n+\thosted.\n+\t* testsuite/20_util/bitset/ext/constexpr.cc: Likewise.\n+\n+2022-10-03  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/103626\n+\t* testsuite/lib/libstdc++.exp (check_effective_target_stacktrace):\n+\tAlso require hosted.\n+\t(check_effective_target_hosted): New proc.\n+\n+2022-10-03  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\t    Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/103626\n+\t* testsuite/17_intro/headers/c++1998/stdc++.cc [!__STDC_HOSTED__]:\n+\tDo not include C headers that aren't valid for freestanding.\n+\t* testsuite/17_intro/tag_type_explicit_ctor.cc [!__STDC_HOSTED__]:\n+\tDo not test tag types that aren't defined for freestanding.\n+\t* testsuite/18_support/headers/cstdlib/functions_std.cc: Do not\n+\tcheck for std::getenv and std::system for freestanding.\n+\t* testsuite/17_intro/using_namespace_std_exp_neg.cc [!__STDC_HOSTED__]:\n+\tDo not test hosted parts of the standard library.\n+\t* testsuite/17_intro/using_namespace_std_tr1_neg.cc [!__STDC_HOSTED__]:\n+\tLikewise.\n+\t* testsuite/20_util/allocator_traits/members/rebind_alloc.cc [!__STDC_HOSTED__]:\n+\tLikewise.\n+\t* testsuite/20_util/allocator_traits/requirements/explicit_instantiation.cc [!HOSTED]:\n+\tLikewise.\n+\t* testsuite/20_util/headers/bitset/synopsis.cc [!__STDC_HOSTED__]: Likewise.\n+\t* testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc [!__STDC_HOSTED__]:\n+\tLikewise.\n+\t* testsuite/20_util/pointer_traits/requirements/typedefs.cc [!__STDC_HOSTED__]:\n+\tLikewise.\n+\t* testsuite/20_util/tuple/cons/deduction.cc [!__STDC_HOSTED__]: Likewise.\n+\t* testsuite/25_algorithms/move/93872.cc [!__STDC_HOSTED__]: Likewise.\n+\t* testsuite/std/ranges/adaptors/100577.cc [!__STDC_HOSTED__]: Likewise.\n+\n+2022-10-03  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\tPR libstdc++/106953\n+\t* include/Makefile.am [!_GLIBCXX_HOSTED]: Remove\n+\tinstall-freestanding-headers, unifying it with the usual\n+\tinstall-headers\n+\t* include/Makefile.in: Regenerate.\n+\n+2022-10-03  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\t    Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/103626\n+\t* include/Makefile.am: Add new header.\n+\t* include/Makefile.in: Regenerate.\n+\t* include/bits/requires_hosted.h: New header.\n+\t* include/experimental/algorithm: Include\n+\t<bits/requires_hosted.h>.\n+\t* include/experimental/any: Likewise.\n+\t* include/experimental/array: Likewise.\n+\t* include/experimental/buffer: Likewise.\n+\t* include/experimental/chrono: Likewise.\n+\t* include/experimental/deque: Likewise.\n+\t* include/experimental/executor: Likewise.\n+\t* include/experimental/filesystem: Likewise.\n+\t* include/experimental/forward_list: Likewise.\n+\t* include/experimental/functional: Likewise.\n+\t* include/experimental/internet: Likewise.\n+\t* include/experimental/io_context: Likewise.\n+\t* include/experimental/iterator: Likewise.\n+\t* include/experimental/list: Likewise.\n+\t* include/experimental/map: Likewise.\n+\t* include/experimental/memory: Likewise.\n+\t* include/experimental/memory_resource: Likewise.\n+\t* include/experimental/net: Likewise.\n+\t* include/experimental/netfwd: Likewise.\n+\t* include/experimental/numeric: Likewise.\n+\t* include/experimental/optional: Likewise.\n+\t* include/experimental/propagate_const: Likewise.\n+\t* include/experimental/random: Likewise.\n+\t* include/experimental/ratio: Likewise.\n+\t* include/experimental/regex: Likewise.\n+\t* include/experimental/scope: Likewise.\n+\t* include/experimental/set: Likewise.\n+\t* include/experimental/simd: Likewise.\n+\t* include/experimental/socket: Likewise.\n+\t* include/experimental/source_location: Likewise.\n+\t* include/experimental/string: Likewise.\n+\t* include/experimental/string_view: Likewise.\n+\t* include/experimental/system_error: Likewise.\n+\t* include/experimental/timer: Likewise.\n+\t* include/experimental/tuple: Likewise.\n+\t* include/experimental/unordered_map: Likewise.\n+\t* include/experimental/unordered_set: Likewise.\n+\t* include/experimental/utility: Likewise.\n+\t* include/experimental/vector: Likewise.\n+\t* include/std/barrier: Likewise.\n+\t* include/std/chrono: Likewise.\n+\t* include/std/condition_variable: Likewise.\n+\t* include/std/deque: Likewise.\n+\t* include/std/execution: Likewise.\n+\t* include/std/filesystem: Likewise.\n+\t* include/std/forward_list: Likewise.\n+\t* include/std/fstream: Likewise.\n+\t* include/std/future: Likewise.\n+\t* include/std/iomanip: Likewise.\n+\t* include/std/ios: Likewise.\n+\t* include/std/iosfwd: Likewise.\n+\t* include/std/iostream: Likewise.\n+\t* include/std/istream: Likewise.\n+\t* include/std/latch: Likewise.\n+\t* include/std/list: Likewise.\n+\t* include/std/locale: Likewise.\n+\t* include/std/map: Likewise.\n+\t* include/std/memory_resource: Likewise.\n+\t* include/std/mutex: Likewise.\n+\t* include/std/ostream: Likewise.\n+\t* include/std/queue: Likewise.\n+\t* include/std/random: Likewise.\n+\t* include/std/regex: Likewise.\n+\t* include/std/semaphore: Likewise.\n+\t* include/std/set: Likewise.\n+\t* include/std/shared_mutex: Likewise.\n+\t* include/std/spanstream: Likewise.\n+\t* include/std/sstream: Likewise.\n+\t* include/std/stack: Likewise.\n+\t* include/std/stacktrace: Likewise.\n+\t* include/std/stop_token: Likewise.\n+\t* include/std/streambuf: Likewise.\n+\t* include/std/string: Likewise.\n+\t* include/std/syncstream: Likewise.\n+\t* include/std/system_error: Likewise.\n+\t* include/std/thread: Likewise.\n+\t* include/std/unordered_map: Likewise.\n+\t* include/std/unordered_set: Likewise.\n+\t* include/std/valarray: Likewise.\n+\t* include/std/vector: Likewise.\n+\t* include/tr1/array: Likewise.\n+\t* include/tr1/ccomplex: Likewise.\n+\t* include/tr1/cctype: Likewise.\n+\t* include/tr1/cfenv: Likewise.\n+\t* include/tr1/cfloat: Likewise.\n+\t* include/tr1/cinttypes: Likewise.\n+\t* include/tr1/climits: Likewise.\n+\t* include/tr1/cmath: Likewise.\n+\t* include/tr1/complex: Likewise.\n+\t* include/tr1/complex.h: Likewise.\n+\t* include/tr1/cstdarg: Likewise.\n+\t* include/tr1/cstdbool: Likewise.\n+\t* include/tr1/cstdint: Likewise.\n+\t* include/tr1/cstdio: Likewise.\n+\t* include/tr1/cstdlib: Likewise.\n+\t* include/tr1/ctgmath: Likewise.\n+\t* include/tr1/ctime: Likewise.\n+\t* include/tr1/ctype.h: Likewise.\n+\t* include/tr1/cwchar: Likewise.\n+\t* include/tr1/cwctype: Likewise.\n+\t* include/tr1/fenv.h: Likewise.\n+\t* include/tr1/float.h: Likewise.\n+\t* include/tr1/functional: Likewise.\n+\t* include/tr1/inttypes.h: Likewise.\n+\t* include/tr1/limits.h: Likewise.\n+\t* include/tr1/math.h: Likewise.\n+\t* include/tr1/memory: Likewise.\n+\t* include/tr1/random: Likewise.\n+\t* include/tr1/regex: Likewise.\n+\t* include/tr1/stdarg.h: Likewise.\n+\t* include/tr1/stdbool.h: Likewise.\n+\t* include/tr1/stdint.h: Likewise.\n+\t* include/tr1/stdio.h: Likewise.\n+\t* include/tr1/stdlib.h: Likewise.\n+\t* include/tr1/tgmath.h: Likewise.\n+\t* include/tr1/tuple: Likewise.\n+\t* include/tr1/type_traits: Likewise.\n+\t* include/tr1/unordered_map: Likewise.\n+\t* include/tr1/unordered_set: Likewise.\n+\t* include/tr1/utility: Likewise.\n+\t* include/tr1/wchar.h: Likewise.\n+\t* include/tr1/wctype.h: Likewise.\n+\t* include/c_global/cmath: Likewise.\n+\t* include/ext/algorithm: Include <bits/requires_hosted.h>.\n+\t* include/ext/bitmap_allocator.h: Likewise.\n+\t* include/ext/cmath: Likewise.\n+\t* include/ext/codecvt_specializations.h: Likewise.\n+\t* include/ext/debug_allocator.h: Likewise.\n+\t* include/ext/enc_filebuf.h: Likewise.\n+\t* include/ext/extptr_allocator.h: Likewise.\n+\t* include/ext/functional: Likewise.\n+\t* include/ext/malloc_allocator.h: Likewise.\n+\t* include/ext/memory: Likewise.\n+\t* include/ext/mt_allocator.h: Likewise.\n+\t* include/ext/new_allocator.h: Likewise.\n+\t* include/ext/numeric: Likewise.\n+\t* include/ext/pod_char_traits.h: Likewise.\n+\t* include/ext/pool_allocator.h: Likewise.\n+\t* include/ext/random: Likewise.\n+\t* include/ext/random.tcc: Likewise.\n+\t* include/ext/rb_tree: Likewise.\n+\t* include/ext/rc_string_base.h: Likewise.\n+\t* include/ext/rope: Likewise.\n+\t* include/ext/ropeimpl.h: Likewise.\n+\t* include/ext/slist: Likewise.\n+\t* include/ext/sso_string_base.h: Likewise.\n+\t* include/ext/stdio_filebuf.h: Likewise.\n+\t* include/ext/stdio_sync_filebuf.h: Likewise.\n+\t* include/ext/string_conversions.h: Likewise.\n+\t* include/ext/throw_allocator.h: Likewise.\n+\t* include/ext/vstring.h: Likewise.\n+\t* include/ext/vstring.tcc: Likewise.\n+\t* include/ext/vstring_fwd.h: Likewise.\n+\t* include/ext/vstring_util.h: Likewise.\n+\t* include/std/charconv: Likewise.\n+\t(__cpp_lib_to_chars): Do not define for freestanding.\n+\t* include/std/version: Adjust which macros get defined in\n+\tfreestanding.\n+\t* include/ext/pointer.h [!_GLIBCXX_HOSTED]: Omit iostream\n+\tfunctionality from freestanding.\n+\t* include/std/algorithm [!_GLIBCXX_HOSTED]: Omit PSTL algos.\n+\t* include/std/memory [!_GLIBCXX_HOSTED]: Omit\n+\t<bits/stl_tempbuf.h> in freestanding\n+\t* include/bits/algorithmfwd.h [!_GLIBCXX_HOSTED]: Omit leftover\n+\trandom_shuffle and stable_partition definition.\n+\t* include/bits/stl_algo.h [!_GLIBCXX_HOSTED]: Omit\n+\trandom_shuffle and stable_partition from freestanding.\n+\t* include/bits/ranges_algo.h [!_GLIBCXX_HOSTED]: Omit\n+\tstable_partition from freestanding.\n+\t* include/bits/concept_check.h: Remove needless HOSTED check.\n+\t* include/std/iterator: Include <bits/ranges_base.h>.\n+\t* include/std/numeric (__cpp_lib_parallel_algorithms): Do not\n+\tdefine for freestanding.\n+\t* include/std/functional (__cpp_lib_boyer_moore_searcher):\n+\tLikewise.\n+\t* testsuite/lib/prune.exp: Match error for hosted-only libstdc++\n+\ttests.\n+\n+2022-10-03  Jonathan Wakely  <jwakely@redhat.com>\n+\t    Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* include/precompiled/extc++.h [!_GLIBCXX_HOSTED]: Do not\n+\tinclude headers that aren't valid for freestanding.\n+\t* include/precompiled/stdc++.h [!_GLIBCXX_HOSTED]: Likewise.\n+\n+2022-10-03  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* configure.ac: Remove any lines that unconditionally include\n+\t<stdio.h> from ac_includes_default, when running Autoconf <2.70.\n+\t* configure: Regenerate.\n+\n+2022-10-03  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/103626\n+\t* acinclude.m4 (GLIBCXX_ENABLE_HOSTED): Define _GLIBCXX_HOSTED\n+\tto __STDC_HOSTED__ for non-freestanding installations.\n+\t* configure: Regenerate.\n+\t* include/Makefile.am (${host_builddir}/c++config.h): Adjust\n+\tgrep pattern.\n+\t* include/Makefile.in: Regenerate.\n+\t* testsuite/lib/libstdc++.exp (v3-build_support): Use\n+\t-fno-freestanding.\n+\t* testsuite/libstdc++-abi/abi.exp: Likewise.\n+\n+2022-10-03  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/27_io/basic_ostream/inserters_other/char/6.cc:\n+\tChange body of unused operator<< overload to throw if called.\n+\t* testsuite/27_io/basic_ostream/inserters_other/wchar_t/6.cc:\n+\tLikewise.\n+\n+2022-10-03  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n+\n+\t* python/libstdcxx/v6/printers.py (Printer.add_version): Do not add version\n+\tnamespace for __cxx11 symbols.\n+\t(add_one_template_type_printer): Likewise.\n+\t(add_one_type_printer): Likewise.\n+\t(FilteringTypePrinter._recognizer.recognize): Add a workaround for std::string & al\n+\tambiguous typedef matching both std:: and std::__cxx11:: symbols.\n+\t* testsuite/libstdc++-prettyprinters/cxx17.cc: Remove obsolete\n+\t\\#define _GLIBCXX_USE_CXX11_ABI 0.\n+\t* testsuite/libstdc++-prettyprinters/simple.cc: Likewise. Adapt test to accept\n+\tstd::__cxx11::list.\n+\t* testsuite/libstdc++-prettyprinters/simple11.cc: Likewise.\n+\t* testsuite/libstdc++-prettyprinters/whatis.cc: Likewise.\n+\t* testsuite/libstdc++-prettyprinters/80276.cc: Likewise and remove xfail for c++20\n+\tand debug mode.\n+\t* testsuite/libstdc++-prettyprinters/libfundts.cc: Likewise.\n+\n 2022-09-30  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* testsuite/20_util/bitset/access/to_ulong.cc: Construct bitset"}]}