{"sha": "85c4f26a8651192648d1d4ce37009d838abe4152", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODVjNGYyNmE4NjUxMTkyNjQ4ZDFkNGNlMzcwMDlkODM4YWJlNDE1Mg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2005-03-23T20:27:12Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2005-03-23T20:27:12Z"}, "message": "jvm.h (GCJ_40_BC_ABI_VERSION): New define.\n\nlibjava:\n\t* include/jvm.h (GCJ_40_BC_ABI_VERSION): New define.\n\t(_Jv_CheckABIVersion): Use it.\ngcc/java:\n\t* decl.c (GCJ_CURRENT_BC_ABI_VERSION): New define.\n\t(parse_version): Use it.\n\nFrom-SVN: r96948", "tree": {"sha": "bd69a3ee7525a63aa54ad42136e26863f186a9df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd69a3ee7525a63aa54ad42136e26863f186a9df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85c4f26a8651192648d1d4ce37009d838abe4152", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85c4f26a8651192648d1d4ce37009d838abe4152", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85c4f26a8651192648d1d4ce37009d838abe4152", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85c4f26a8651192648d1d4ce37009d838abe4152/comments", "author": null, "committer": null, "parents": [{"sha": "d101034cd879822fbb76d8a2a50e4e27959e9d5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d101034cd879822fbb76d8a2a50e4e27959e9d5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d101034cd879822fbb76d8a2a50e4e27959e9d5b"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "16b956e0bb80699b93d03d61f7351898290e1ef2", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85c4f26a8651192648d1d4ce37009d838abe4152/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85c4f26a8651192648d1d4ce37009d838abe4152/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=85c4f26a8651192648d1d4ce37009d838abe4152", "patch": "@@ -1,3 +1,8 @@\n+2005-03-23  Tom Tromey  <tromey@redhat.com>\n+\n+\t* decl.c (GCJ_CURRENT_BC_ABI_VERSION): New define.\n+\t(parse_version): Use it.\n+\n 2005-03-23  Joseph S. Myers  <joseph@codesourcery.com>\n \n \t* lang.c (LANG_HOOKS_TRUTHVALUE_CONVERSION): Remove."}, {"sha": "d462f269640c37cf18bbccecb304b160175858de", "filename": "gcc/java/decl.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85c4f26a8651192648d1d4ce37009d838abe4152/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85c4f26a8651192648d1d4ce37009d838abe4152/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=85c4f26a8651192648d1d4ce37009d838abe4152", "patch": "@@ -64,6 +64,13 @@ static void parse_version (void);\n /* Used when computing the ABI version.  */\n #define GCJ_BINARYCOMPAT_ADDITION 5\n \n+/* The version of the BC ABI that we generate.  At the moment we are\n+   compatible with what shipped in GCC 4.0.  This must be kept in sync\n+   with parse_version(), libgcj, and reality (if the BC format\n+   changes, this must change.  */\n+#define GCJ_CURRENT_BC_ABI_VERSION \\\n+  (4 * 10000 + 0 * 10 + GCJ_BINARYCOMPAT_ADDITION)\n+\n /* The ABI version number.  */\n tree gcj_abi_version;\n \n@@ -609,7 +616,7 @@ parse_version (void)\n      (objects generated by different version of gcj), but will\n      probably always require strict matching for ordinary ABI.  */\n   if (flag_indirect_dispatch)\n-    abi_version += GCJ_BINARYCOMPAT_ADDITION;\n+    abi_version = GCJ_CURRENT_BC_ABI_VERSION;\n \n   gcj_abi_version = build_int_cstu (ptr_type_node, abi_version);\n }"}, {"sha": "14c5079f3f91cb7131a550a7cbe0cead44b7fcf2", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85c4f26a8651192648d1d4ce37009d838abe4152/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85c4f26a8651192648d1d4ce37009d838abe4152/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=85c4f26a8651192648d1d4ce37009d838abe4152", "patch": "@@ -1,3 +1,8 @@\n+2005-03-23  Tom Tromey  <tromey@redhat.com>\n+ \n+\t* include/jvm.h (GCJ_40_BC_ABI_VERSION): New define.\n+\t(_Jv_CheckABIVersion): Use it.\n+\n 2005-03-22  Mike Stump  <mrs@apple.com>\n \n \t* stacktrace.cc: Delete unused _Jv_FindCallingClassState."}, {"sha": "7a5a4eaa28e0fb5027b34f377eb3d142d4996ffa", "filename": "libjava/include/jvm.h", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85c4f26a8651192648d1d4ce37009d838abe4152/libjava%2Finclude%2Fjvm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85c4f26a8651192648d1d4ce37009d838abe4152/libjava%2Finclude%2Fjvm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fjvm.h?ref=85c4f26a8651192648d1d4ce37009d838abe4152", "patch": "@@ -562,14 +562,17 @@ extern void _Jv_RegisterBootstrapPackages ();\n #define GCJ_VERSION (__GNUC__ * 10000 + __GNUC_MINOR__ * 10)\n #define GCJ_BINARYCOMPAT_ADDITION 5\n \n+// At present we know we are compatible with the BC ABI as used in GCC\n+// 4.0.\n+#define GCJ_40_BC_ABI_VERSION (4 * 10000 + 0 * 10 + GCJ_BINARYCOMPAT_ADDITION)\n+\n inline bool\n _Jv_CheckABIVersion (unsigned long value)\n {\n-  // For this release, recognize just our defined C++ ABI and our\n-  // defined BC ABI.  (In the future we may recognize past BC ABIs as\n-  // well.)\n+  // Recognize our defined C++ ABI.\n   return (value == GCJ_VERSION\n-\t  || value == (GCJ_VERSION + GCJ_BINARYCOMPAT_ADDITION));\n+\t  // At the moment this is the only BC ABI we recognize.\n+\t  || value == GCJ_40_BC_ABI_VERSION);\n }\n \n // It makes the source cleaner if we simply always define this"}]}