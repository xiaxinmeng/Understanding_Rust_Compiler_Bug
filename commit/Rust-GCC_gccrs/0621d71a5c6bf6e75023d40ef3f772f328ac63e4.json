{"sha": "0621d71a5c6bf6e75023d40ef3f772f328ac63e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDYyMWQ3MWE1YzZiZjZlNzUwMjNkNDBlZjNmNzcyZjMyOGFjNjNlNA==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2005-08-25T06:44:09Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2005-08-25T06:44:09Z"}, "message": "regmove.c (reg_is_remote_constant_p): Reorganize to not use log links.\n\n2005-08-24  Paolo Bonzini  <bonzini@gnu.org>\n\t    Jan Hubicka  <jh@suse.cz>\n\n\t* regmove.c (reg_is_remote_constant_p): Reorganize to not use log links.\n\nCo-Authored-By: Jan Hubicka <jh@suse.cz>\n\nFrom-SVN: r103472", "tree": {"sha": "823f54b30975a850af256dff54f3489758f7382c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/823f54b30975a850af256dff54f3489758f7382c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0621d71a5c6bf6e75023d40ef3f772f328ac63e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0621d71a5c6bf6e75023d40ef3f772f328ac63e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0621d71a5c6bf6e75023d40ef3f772f328ac63e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0621d71a5c6bf6e75023d40ef3f772f328ac63e4/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e2889823737cc577c5b0524bbf1a59426a1e0715", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2889823737cc577c5b0524bbf1a59426a1e0715", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2889823737cc577c5b0524bbf1a59426a1e0715"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "d9b9ae46ff16a0b43f13b84b6dca21195ef61783", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0621d71a5c6bf6e75023d40ef3f772f328ac63e4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0621d71a5c6bf6e75023d40ef3f772f328ac63e4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0621d71a5c6bf6e75023d40ef3f772f328ac63e4", "patch": "@@ -1,3 +1,8 @@\n+2005-08-24  Paolo Bonzini  <bonzini@gnu.org>\n+\t    Jan Hubicka  <jh@suse.cz>\n+\n+\t* regmove.c (reg_is_remote_constant_p): Reorganize to not use log links.\n+\n 2005-08-24  Paolo Bonzini  <bonzini@gnu.org>\n \n \tPR tree-optimization/23546"}, {"sha": "f74295834df2ce84fe49dff2f07b166b04c804c8", "filename": "gcc/regmove.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0621d71a5c6bf6e75023d40ef3f772f328ac63e4/gcc%2Fregmove.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0621d71a5c6bf6e75023d40ef3f772f328ac63e4/gcc%2Fregmove.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregmove.c?ref=0621d71a5c6bf6e75023d40ef3f772f328ac63e4", "patch": "@@ -859,13 +859,13 @@ reg_is_remote_constant_p (rtx reg, rtx insn, rtx first)\n     return 0;\n \n   /* Look for the set.  */\n-  for (p = LOG_LINKS (insn); p; p = XEXP (p, 1))\n+  for (p = BB_HEAD (BLOCK_FOR_INSN (insn)); p != insn; p = NEXT_INSN (p))\n     {\n       rtx s;\n \n-      if (REG_NOTE_KIND (p) != 0)\n+      if (!INSN_P (p))\n \tcontinue;\n-      s = single_set (XEXP (p, 0));\n+      s = single_set (p);\n       if (s != 0\n \t  && REG_P (SET_DEST (s))\n \t  && REGNO (SET_DEST (s)) == REGNO (reg))"}]}