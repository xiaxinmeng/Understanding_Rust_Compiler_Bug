{"sha": "9921ac3db381106b66b70d8bf99136b265ec07c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTkyMWFjM2RiMzgxMTA2YjY2YjcwZDhiZjk5MTM2YjI2NWVjMDdjMw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-10-29T17:15:04Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-10-29T17:15:04Z"}, "message": "Minor improvements to testsuite iterator utilities\n\n\t* testsuite/util/testsuite_iterators.h (BoundsContainer::size()): Add\n\tnew member function.\n\t(WritableObject::operator=): Constrain with enable_if when available.\n\t(remove_cv): Use std::remove_if when available.\n\t(test_container::it(int)): Use size().\n\t(test_container::size()): Use BoundsContainer::size().\n\nFrom-SVN: r277578", "tree": {"sha": "e2fb7ca1695880dffcc526615078c6b4e2c71dbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2fb7ca1695880dffcc526615078c6b4e2c71dbd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9921ac3db381106b66b70d8bf99136b265ec07c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9921ac3db381106b66b70d8bf99136b265ec07c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9921ac3db381106b66b70d8bf99136b265ec07c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9921ac3db381106b66b70d8bf99136b265ec07c3/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ed4d40833715b0650e9ed4d561ca9ea0dacf2b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ed4d40833715b0650e9ed4d561ca9ea0dacf2b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ed4d40833715b0650e9ed4d561ca9ea0dacf2b1"}], "stats": {"total": 34, "additions": 24, "deletions": 10}, "files": [{"sha": "0414f128e4ad38c6491995a7f7d8a76135a194b1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9921ac3db381106b66b70d8bf99136b265ec07c3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9921ac3db381106b66b70d8bf99136b265ec07c3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9921ac3db381106b66b70d8bf99136b265ec07c3", "patch": "@@ -1,5 +1,12 @@\n 2019-10-29  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* testsuite/util/testsuite_iterators.h (BoundsContainer::size()): Add\n+\tnew member function.\n+\t(WritableObject::operator=): Constrain with enable_if when available.\n+\t(remove_cv): Use std::remove_if when available.\n+\t(test_container::it(int)): Use size().\n+\t(test_container::size()): Use BoundsContainer::size().\n+\n \tPR libstdc++/92267\n \t* include/bits/stl_deque.h (_Deque_iterator(const _Deque_iterator&)):\n \tDo not define as defaulted."}, {"sha": "974490b1b6c3b5e65204d89e5b9e3d425a95add4", "filename": "libstdc++-v3/testsuite/util/testsuite_iterators.h", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9921ac3db381106b66b70d8bf99136b265ec07c3/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_iterators.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9921ac3db381106b66b70d8bf99136b265ec07c3/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_iterators.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_iterators.h?ref=9921ac3db381106b66b70d8bf99136b265ec07c3", "patch": "@@ -56,8 +56,11 @@ namespace __gnu_test\n     {\n       T* first;\n       T* last;\n+\n       BoundsContainer(T* _first, T* _last) : first(_first), last(_last)\n       { }\n+\n+      std::size_t size() const { return last - first; }\n     };\n \n   // Simple container for holding state of a set of output iterators.\n@@ -66,13 +69,11 @@ namespace __gnu_test\n     {\n       T* incrementedto;\n       bool* writtento;\n+\n       OutputContainer(T* _first, T* _last)\n-      : BoundsContainer<T>(_first, _last), incrementedto(_first)\n-      {\n-\twrittento = new bool[this->last - this->first];\n-\tfor(int i = 0; i < this->last - this->first; i++)\n-\t  writtento[i] = false;\n-      }\n+      : BoundsContainer<T>(_first, _last), incrementedto(_first),\n+\twrittento(new bool[this->size()]())\n+      { }\n \n       ~OutputContainer()\n       { delete[] writtento; }\n@@ -86,13 +87,14 @@ namespace __gnu_test\n \n     public:\n       OutputContainer<T>* SharedInfo;\n-      WritableObject(T* ptr_in,OutputContainer<T>* SharedInfo_in):\n+\n+      WritableObject(T* ptr_in, OutputContainer<T>* SharedInfo_in):\n \tptr(ptr_in), SharedInfo(SharedInfo_in)\n       { }\n \n #if __cplusplus >= 201103L\n       template<class U>\n-      void\n+      typename std::enable_if<std::is_assignable<T&, U>::value>::type\n       operator=(U&& new_val)\n       {\n \tITERATOR_VERIFY(SharedInfo->writtento[ptr - SharedInfo->first] == 0);\n@@ -182,10 +184,14 @@ namespace __gnu_test\n     void operator,(const T&, const output_iterator_wrapper<U>&) = delete;\n #endif\n \n+#if __cplusplus >= 2011L\n+  using std::remove_cv;\n+#else\n   template<typename T> struct remove_cv { typedef T type; };\n   template<typename T> struct remove_cv<const T> { typedef T type; };\n   template<typename T> struct remove_cv<volatile T> { typedef T type; };\n   template<typename T> struct remove_cv<const volatile T> { typedef T type; };\n+#endif\n \n   /**\n    * @brief input_iterator wrapper for pointer\n@@ -543,6 +549,7 @@ namespace __gnu_test\n   struct test_container\n   {\n     typename ItType<T>::ContainerType bounds;\n+\n     test_container(T* _first, T* _last) : bounds(_first, _last)\n     { }\n \n@@ -556,7 +563,7 @@ namespace __gnu_test\n     ItType<T>\n     it(int pos)\n     {\n-      ITERATOR_VERIFY(pos >= 0 && pos <= (bounds.last - bounds.first));\n+      ITERATOR_VERIFY(pos >= 0 && pos <= size());\n       return ItType<T>(bounds.first + pos, &bounds);\n     }\n \n@@ -581,7 +588,7 @@ namespace __gnu_test\n \n     std::size_t\n     size() const\n-    { return bounds.last - bounds.first; }\n+    { return bounds.size(); }\n   };\n }\n #endif"}]}