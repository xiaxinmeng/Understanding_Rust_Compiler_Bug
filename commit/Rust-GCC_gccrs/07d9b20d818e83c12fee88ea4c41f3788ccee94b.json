{"sha": "07d9b20d818e83c12fee88ea4c41f3788ccee94b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDdkOWIyMGQ4MThlODNjMTJmZWU4OGVhNGM0MWYzNzg4Y2NlZTk0Yg==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2003-01-25T17:42:39Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2003-01-25T17:42:39Z"}, "message": "function.h (struct function): New field calls_constant_p.\n\n\n\t* function.h (struct function): New field calls_constant_p.\n\t(current_function_calls_constant_p): New macro for above.\n\t* function.c (prepare_function_start): Initialize calls_eh_return\n\tand calls_constant_p.\n\t* builtins.c (expand_builtin_constant_p): Set calls_constant_p.\n\t* toplev.c (rest_of_compilation): Only call purge_builtin_constant_p\n\twhen the current_function_calls_constant_p.\n\t* integrate.c (expand_inline_function): Set calls_constant_p if\n\tthe function being inlined has calls_constant_p set.\n\nFrom-SVN: r61786", "tree": {"sha": "b21f72610d0ef15b8f89e3f3117d170b5ca05f55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b21f72610d0ef15b8f89e3f3117d170b5ca05f55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07d9b20d818e83c12fee88ea4c41f3788ccee94b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07d9b20d818e83c12fee88ea4c41f3788ccee94b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07d9b20d818e83c12fee88ea4c41f3788ccee94b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07d9b20d818e83c12fee88ea4c41f3788ccee94b/comments", "author": null, "committer": null, "parents": [{"sha": "415591122da665db1059faae87fb2d8c8097ffb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/415591122da665db1059faae87fb2d8c8097ffb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/415591122da665db1059faae87fb2d8c8097ffb6"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "942b37feabcc7b99291ddf29a79a54d66d5d36b8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d9b20d818e83c12fee88ea4c41f3788ccee94b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d9b20d818e83c12fee88ea4c41f3788ccee94b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=07d9b20d818e83c12fee88ea4c41f3788ccee94b", "patch": "@@ -1,3 +1,15 @@\n+2002-01-25  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* function.h (struct function): New field calls_constant_p.\n+\t(current_function_calls_constant_p): New macro for above.\n+\t* function.c (prepare_function_start): Initialize calls_eh_return\n+\tand calls_constant_p.\n+\t* builtins.c (expand_builtin_constant_p): Set calls_constant_p.\n+\t* toplev.c (rest_of_compilation): Only call purge_builtin_constant_p\n+\twhen the current_function_calls_constant_p.\n+\t* integrate.c (expand_inline_function): Set calls_constant_p if\n+\tthe function being inlined has calls_constant_p set.\n+\n 2002-01-25  Roger Sayle  <roger@eyesopen.com>\n \n \t* cse.c (fold_rtx): Instantiate CONSTANT_P_RTX to 0 when not"}, {"sha": "95f9494e242587ca10e0a23690998d7e9ba29310", "filename": "gcc/builtins.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d9b20d818e83c12fee88ea4c41f3788ccee94b/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d9b20d818e83c12fee88ea4c41f3788ccee94b/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=07d9b20d818e83c12fee88ea4c41f3788ccee94b", "patch": "@@ -1469,6 +1469,8 @@ expand_builtin_constant_p (exp)\n      case is not obvious, so emit (constant_p_rtx (ARGLIST)) and let CSE\n      get a chance to see if it can deduce whether ARGLIST is constant.  */\n \n+  current_function_calls_constant_p = 1;\n+\n   tmp = expand_expr (arglist, NULL_RTX, VOIDmode, 0);\n   tmp = gen_rtx_CONSTANT_P_RTX (value_mode, tmp);\n   return tmp;"}, {"sha": "9e907ea310978233cb437ead28189f027db693ae", "filename": "gcc/function.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d9b20d818e83c12fee88ea4c41f3788ccee94b/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d9b20d818e83c12fee88ea4c41f3788ccee94b/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=07d9b20d818e83c12fee88ea4c41f3788ccee94b", "patch": "@@ -6166,6 +6166,8 @@ prepare_function_start ()\n   current_function_calls_longjmp = 0;\n \n   current_function_calls_alloca = 0;\n+  current_function_calls_eh_return = 0;\n+  current_function_calls_constant_p = 0;\n   current_function_contains_functions = 0;\n   current_function_is_leaf = 0;\n   current_function_nothrow = 0;"}, {"sha": "22bb9da40179f8a3ca574ea17eff00c8adbc97aa", "filename": "gcc/function.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d9b20d818e83c12fee88ea4c41f3788ccee94b/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d9b20d818e83c12fee88ea4c41f3788ccee94b/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=07d9b20d818e83c12fee88ea4c41f3788ccee94b", "patch": "@@ -413,6 +413,9 @@ struct function GTY(())\n   /* Nonzero if the function calls __builtin_eh_return.  */\n   unsigned int calls_eh_return : 1;\n \n+  /* Nonzero if the function calls __builtin_constant_p.  */\n+  unsigned int calls_constant_p : 1;\n+\n   /* Nonzero if function being compiled receives nonlocal gotos\n      from nested functions.  */\n   unsigned int has_nonlocal_label : 1;\n@@ -518,6 +521,7 @@ extern int virtuals_instantiated;\n #define current_function_calls_alloca (cfun->calls_alloca)\n #define current_function_calls_longjmp (cfun->calls_longjmp)\n #define current_function_calls_eh_return (cfun->calls_eh_return)\n+#define current_function_calls_constant_p (cfun->calls_constant_p)\n #define current_function_has_computed_jump (cfun->has_computed_jump)\n #define current_function_contains_functions (cfun->contains_functions)\n #define current_function_is_thunk (cfun->is_thunk)"}, {"sha": "8ab4280efc9609a03677c4f715086b7454d73145", "filename": "gcc/integrate.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d9b20d818e83c12fee88ea4c41f3788ccee94b/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d9b20d818e83c12fee88ea4c41f3788ccee94b/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=07d9b20d818e83c12fee88ea4c41f3788ccee94b", "patch": "@@ -899,6 +899,11 @@ expand_inline_function (fndecl, parms, target, ignore, type,\n   if (inl_f->needs_context)\n     static_chain_value = lookup_static_chain (fndecl);\n \n+  /* If the inlined function calls __builtin_constant_p, then we'll\n+     need to call purge_builtin_constant_p on this function.  */\n+  if (inl_f->calls_constant_p)\n+    current_function_calls_constant_p = 1;\n+\n   if (GET_CODE (parm_insns) == NOTE\n       && NOTE_LINE_NUMBER (parm_insns) > 0)\n     {"}, {"sha": "a62492009d8775a9c26de48e91a04955ff880b7a", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d9b20d818e83c12fee88ea4c41f3788ccee94b/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d9b20d818e83c12fee88ea4c41f3788ccee94b/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=07d9b20d818e83c12fee88ea4c41f3788ccee94b", "patch": "@@ -2925,7 +2925,7 @@ rest_of_compilation (decl)\n     }\n \n   /* Instantiate any remaining CONSTANT_P_RTX nodes.  */\n-  if (optimize > 0 && flag_gcse)\n+  if (optimize > 0 && flag_gcse && current_function_calls_constant_p)\n     purge_builtin_constant_p ();\n \n   /* Move constant computations out of loops.  */"}]}