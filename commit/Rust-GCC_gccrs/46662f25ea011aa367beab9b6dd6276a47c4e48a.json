{"sha": "46662f25ea011aa367beab9b6dd6276a47c4e48a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDY2NjJmMjVlYTAxMWFhMzY3YmVhYjliNmRkNjI3NmE0N2M0ZTQ4YQ==", "commit": {"author": {"name": "Michael Matz", "email": "matz@suse.de", "date": "2008-08-06T15:34:45Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2008-08-06T15:34:45Z"}, "message": "re PR target/36613 (likely codegen bug)\n\n        PR target/36613\n\n        * reload.c (push_reload): Merge in,out,in_reg,out_reg members\n        for reused reload, instead of overwriting them.\n\n        * gcc.target/i386/pr36613.c: New testcase.\n\nFrom-SVN: r138807", "tree": {"sha": "a4d32cf8ff61e118247e78a10c552488a93ca876", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4d32cf8ff61e118247e78a10c552488a93ca876"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46662f25ea011aa367beab9b6dd6276a47c4e48a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46662f25ea011aa367beab9b6dd6276a47c4e48a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46662f25ea011aa367beab9b6dd6276a47c4e48a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46662f25ea011aa367beab9b6dd6276a47c4e48a/comments", "author": {"login": "susematz", "id": 4117296, "node_id": "MDQ6VXNlcjQxMTcyOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4117296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/susematz", "html_url": "https://github.com/susematz", "followers_url": "https://api.github.com/users/susematz/followers", "following_url": "https://api.github.com/users/susematz/following{/other_user}", "gists_url": "https://api.github.com/users/susematz/gists{/gist_id}", "starred_url": "https://api.github.com/users/susematz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/susematz/subscriptions", "organizations_url": "https://api.github.com/users/susematz/orgs", "repos_url": "https://api.github.com/users/susematz/repos", "events_url": "https://api.github.com/users/susematz/events{/privacy}", "received_events_url": "https://api.github.com/users/susematz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e94a448f66945080611074fc7859bea46e6fc688", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e94a448f66945080611074fc7859bea46e6fc688", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e94a448f66945080611074fc7859bea46e6fc688"}], "stats": {"total": 86, "additions": 82, "deletions": 4}, "files": [{"sha": "a08bd6e6f691208b73fb26f97cd37cb49cc998d0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46662f25ea011aa367beab9b6dd6276a47c4e48a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46662f25ea011aa367beab9b6dd6276a47c4e48a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=46662f25ea011aa367beab9b6dd6276a47c4e48a", "patch": "@@ -1,3 +1,9 @@\n+2008-08-06  Michael Matz  <matz@suse.de>\n+\n+\tPR target/36613\n+\t* reload.c (push_reload): Merge in,out,in_reg,out_reg members\n+\tfor reused reload, instead of overwriting them.\n+\n 2008-08-06  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR middle-end/37009"}, {"sha": "5a79c44e8745e44a4ad701796c57a4e1736edc40", "filename": "gcc/reload.c", "status": "modified", "additions": 27, "deletions": 4, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46662f25ea011aa367beab9b6dd6276a47c4e48a/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46662f25ea011aa367beab9b6dd6276a47c4e48a/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=46662f25ea011aa367beab9b6dd6276a47c4e48a", "patch": "@@ -1403,13 +1403,36 @@ push_reload (rtx in, rtx out, rtx *inloc, rtx *outloc,\n \t      else\n \t\tremove_address_replacements (rld[i].in);\n \t    }\n-\t  rld[i].in = in;\n-\t  rld[i].in_reg = in_reg;\n+\t  /* When emitting reloads we don't necessarily look at the in-\n+\t     and outmode, but also directly at the operands (in and out).\n+\t     So we can't simply overwrite them with whatever we have found\n+\t     for this (to-be-merged) reload, we have to \"merge\" that too.\n+\t     Reusing another reload already verified that we deal with the\n+\t     same operands, just possibly in different modes.  So we\n+\t     overwrite the operands only when the new mode is larger.\n+\t     See also PR33613.  */\n+\t  if (!rld[i].in\n+\t      || GET_MODE_SIZE (GET_MODE (in))\n+\t           > GET_MODE_SIZE (GET_MODE (rld[i].in)))\n+\t    rld[i].in = in;\n+\t  if (!rld[i].in_reg\n+\t      || (in_reg\n+\t\t  && GET_MODE_SIZE (GET_MODE (in_reg))\n+\t             > GET_MODE_SIZE (GET_MODE (rld[i].in_reg))))\n+\t    rld[i].in_reg = in_reg;\n \t}\n       if (out != 0)\n \t{\n-\t  rld[i].out = out;\n-\t  rld[i].out_reg = outloc ? *outloc : 0;\n+\t  if (!rld[i].out\n+\t      || (out\n+\t\t  && GET_MODE_SIZE (GET_MODE (out))\n+\t             > GET_MODE_SIZE (GET_MODE (rld[i].out))))\n+\t    rld[i].out = out;\n+\t  if (outloc\n+\t      && (!rld[i].out_reg\n+\t\t  || GET_MODE_SIZE (GET_MODE (*outloc))\n+\t\t     > GET_MODE_SIZE (GET_MODE (rld[i].out_reg))))\n+\t    rld[i].out_reg = *outloc;\n \t}\n       if (reg_class_subset_p (rclass, rld[i].rclass))\n \trld[i].rclass = rclass;"}, {"sha": "d5b229a70e23f44ad7c152bd005237aae2df0b5b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46662f25ea011aa367beab9b6dd6276a47c4e48a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46662f25ea011aa367beab9b6dd6276a47c4e48a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=46662f25ea011aa367beab9b6dd6276a47c4e48a", "patch": "@@ -1,3 +1,8 @@\n+2008-08-06  Michael Matz  <matz@suse.de>\n+\n+\tPR target/36613\n+\t* gcc.target/i386/pr36613.c: New testcase.\n+\n 2008-08-06  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR middle-end/37009"}, {"sha": "e9d7d11cedc854f88459a9108a371f1fd2abc4ee", "filename": "gcc/testsuite/gcc.target/i386/pr36613.c", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46662f25ea011aa367beab9b6dd6276a47c4e48a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr36613.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46662f25ea011aa367beab9b6dd6276a47c4e48a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr36613.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr36613.c?ref=46662f25ea011aa367beab9b6dd6276a47c4e48a", "patch": "@@ -0,0 +1,44 @@\n+/* { dg-do run { target { { i?86-*-linux* x86_64-*-linux* } && ilp32 } } } */\n+/* { dg-options \"-Os\" } */\n+/* PR target/36613 */\n+\n+extern void abort (void);\n+\n+static inline int\n+lshifts (int val, int cnt)\n+{\n+  if (val < 0)\n+    return val;\n+  return val << cnt;\n+}\n+\n+static inline unsigned int\n+lshiftu (unsigned int val, unsigned int cnt)\n+{\n+  if (cnt >= sizeof (unsigned int) * __CHAR_BIT__\n+      || val > ((__INT_MAX__ * 2U) >> cnt))\n+    return val;\n+  return val << cnt;\n+}\n+\n+static inline int\n+rshifts (int val, unsigned int cnt)\n+{\n+  if (val < 0 || cnt >= sizeof (int) * __CHAR_BIT__)\n+    return val;\n+  return val >> cnt;\n+}\n+\n+int\n+foo (unsigned int val)\n+{\n+  return rshifts (1 + val, lshifts (lshiftu (val, val), 1));\n+}\n+\n+int\n+main (void)\n+{\n+  if (foo (1) != 0)\n+    abort ();\n+  return 0;\n+}"}]}