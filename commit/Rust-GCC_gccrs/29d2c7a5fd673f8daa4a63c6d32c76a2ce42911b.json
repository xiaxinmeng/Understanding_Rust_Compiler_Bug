{"sha": "29d2c7a5fd673f8daa4a63c6d32c76a2ce42911b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjlkMmM3YTVmZDY3M2Y4ZGFhNGE2M2M2ZDMyYzc2YTJjZTQyOTExYg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-08-21T10:12:07Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-08-21T10:12:07Z"}, "message": "crtstuff.c: Fix thinko last change.\n\n        * crtstuff.c: Fix thinko last change.  Move list tails to start\n        of CRT_END section.  Tidy ifdefs.\n        (__EH_FRAME_BEGIN__): Always static for ELF.\n        (__do_global_ctors_1): Rename from __frame_dummy.\n        * config/mips/iris6.h (LINK_SPEC): Update for __do_global_ctors_1\n        name change; don't hide __EH_FRAME_BEGIN__.\n\nFrom-SVN: r45075", "tree": {"sha": "d6c29a072c0379bf650d4d87c7ece87ca36b4886", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6c29a072c0379bf650d4d87c7ece87ca36b4886"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29d2c7a5fd673f8daa4a63c6d32c76a2ce42911b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29d2c7a5fd673f8daa4a63c6d32c76a2ce42911b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29d2c7a5fd673f8daa4a63c6d32c76a2ce42911b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29d2c7a5fd673f8daa4a63c6d32c76a2ce42911b/comments", "author": null, "committer": null, "parents": [{"sha": "3aed19811b745b62c8d04aaa5dc6228524cc883b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3aed19811b745b62c8d04aaa5dc6228524cc883b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3aed19811b745b62c8d04aaa5dc6228524cc883b"}], "stats": {"total": 183, "additions": 92, "deletions": 91}, "files": [{"sha": "82411766053d15bd53767cd98a7dcdf162b37b56", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29d2c7a5fd673f8daa4a63c6d32c76a2ce42911b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29d2c7a5fd673f8daa4a63c6d32c76a2ce42911b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=29d2c7a5fd673f8daa4a63c6d32c76a2ce42911b", "patch": "@@ -1,3 +1,12 @@\n+2001-08-21  Richard Henderson  <rth@redhat.com>\n+\n+\t* crtstuff.c: Fix thinko last change.  Move list tails to start\n+\tof CRT_END section.  Tidy ifdefs.\n+\t(__EH_FRAME_BEGIN__): Always static for ELF.\n+\t(__do_global_ctors_1): Rename from __frame_dummy.\n+\t* config/mips/iris6.h (LINK_SPEC): Update for __do_global_ctors_1\n+\tname change; don't hide __EH_FRAME_BEGIN__.\n+\n 2001-08-21  Richard Henderson  <rth@redhat.com>\n \n \t* gdbinit.in: Move break on exit after break on fancy_abort."}, {"sha": "7a9f509c40e3a37861f386f561dad62ecf1fd70b", "filename": "gcc/config/mips/iris6.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29d2c7a5fd673f8daa4a63c6d32c76a2ce42911b/gcc%2Fconfig%2Fmips%2Firis6.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29d2c7a5fd673f8daa4a63c6d32c76a2ce42911b/gcc%2Fconfig%2Fmips%2Firis6.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis6.h?ref=29d2c7a5fd673f8daa4a63c6d32c76a2ce42911b", "patch": "@@ -505,6 +505,6 @@ do {\t\t\t\t\t\t\t\t\t \\\n %{call_shared} %{no_archive} %{exact_version} %{w} \\\n %{!shared: %{!non_shared: %{!call_shared: -call_shared -no_unresolved}}} \\\n %{rpath} -init __do_global_ctors -fini __do_global_dtors \\\n-%{shared:-hidden_symbol __do_global_ctors,__do_global_dtors,__EH_FRAME_BEGIN__,__frame_dummy} \\\n+%{shared:-hidden_symbol __do_global_ctors,__do_global_ctors_1,__do_global_dtors} \\\n -_SYSTYPE_SVR4 -woff 131 \\\n %{mabi=32: -32}%{mabi=n32: -n32}%{mabi=64: -64}%{!mabi*: -n32}\""}, {"sha": "53c76b39ba11dc6207a5e78f350256d1d103d9f3", "filename": "gcc/crtstuff.c", "status": "modified", "additions": 82, "deletions": 90, "changes": 172, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29d2c7a5fd673f8daa4a63c6d32c76a2ce42911b/gcc%2Fcrtstuff.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29d2c7a5fd673f8daa4a63c6d32c76a2ce42911b/gcc%2Fcrtstuff.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcrtstuff.c?ref=29d2c7a5fd673f8daa4a63c6d32c76a2ce42911b", "patch": "@@ -119,8 +119,6 @@ typedef void (*func_ptr) (void);\n \n #ifdef CRT_BEGIN\n \n-#ifdef INIT_SECTION_ASM_OP\n-\n /* NOTE:  In order to be able to support SVR4 shared libraries, we arrange\n    to have one set of symbols { __CTOR_LIST__, __DTOR_LIST__, __CTOR_END__,\n    __DTOR_END__ } per root executable and also one set of these symbols\n@@ -167,23 +165,21 @@ STATIC func_ptr __DTOR_LIST__[1]\n #ifdef EH_FRAME_SECTION_NAME\n /* Stick a label at the beginning of the frame unwind info so we can register\n    and deregister it with the exception handling library code.  */\n-#ifdef INIT_SECTION_ASM_OP\n-STATIC\n-#endif\n-char __EH_FRAME_BEGIN__[]\n+STATIC char __EH_FRAME_BEGIN__[]\n      __attribute__((section(EH_FRAME_SECTION_NAME), aligned(4)))\n      = { };\n #endif /* EH_FRAME_SECTION_NAME */\n \n #ifdef JCR_SECTION_NAME\n /* Stick a label at the beginning of the java class registration info\n    so we can register them properly.  */\n-\n STATIC void *__JCR_LIST__[]\n   __attribute__ ((unused, section(JCR_SECTION_NAME), aligned(sizeof(void*))))\n   = { };\n #endif /* JCR_SECTION_NAME */\n \n+#ifdef INIT_SECTION_ASM_OP\n+\n #ifdef OBJECT_FORMAT_ELF\n \n /* Declare the __dso_handle variable.  It should have a unique value\n@@ -338,12 +334,11 @@ static void __do_global_ctors_aux (void);\n void\n __do_global_ctors (void)\n {\n-#ifdef INVOKE__main  /* If __main won't actually call __do_global_ctors\n-\t\t\tthen it doesn't matter what's inside the function.\n-\t\t\tThe inside of __do_global_ctors_aux is called\n-\t\t\tautomatically in that case.\n-\t\t\tAnd the Alliant fx2800 linker crashes\n-\t\t\ton this reference.  So prevent the crash.  */\n+#ifdef INVOKE__main\n+  /* If __main won't actually call __do_global_ctors then it doesn't matter\n+     what's inside the function.  The inside of __do_global_ctors_aux is\n+     called automatically in that case.  And the Alliant fx2800 linker\n+     crashes on this reference.  So prevent the crash.  */\n   __do_global_ctors_aux ();\n #endif\n }\n@@ -378,9 +373,8 @@ __do_global_ctors_aux (void)\t/* prologue goes in .init section */\n \n #endif /* OBJECT_FORMAT_ELF */\n \n-#else /* INIT_SECTION_ASM_OP */\n+#elif defined(HAS_INIT_SECTION) /* ! INIT_SECTION_ASM_OP */\n \n-#ifdef HAS_INIT_SECTION\n /* This case is used by the Irix 6 port, which supports named sections but\n    not an SVR4-style .fini section.  __do_global_dtors can be non-static\n    in this case because we protect it with -hidden_symbol.  */\n@@ -399,11 +393,12 @@ __do_global_dtors (void)\n }\n \n #if defined(EH_FRAME_SECTION_NAME) || defined(JCR_SECTION_NAME)\n-/* Define a function here to call __register_frame.  crtend.o is linked in\n-   after libgcc.a, and hence can't call libgcc.a functions directly.  That\n-   can lead to unresolved function references.  */\n+/* A helper function for __do_global_ctors, which is in crtend.o.  Here\n+   in crtbegin.o, we can reference a couple of symbols not visible there.\n+   Plus, since we're before libgcc.a, we have no problems referencing\n+   functions from there.  */\n void\n-__frame_dummy (void)\n+__do_global_ctors_1(void)\n {\n #ifdef EH_FRAME_SECTION_NAME\n   static struct object object;\n@@ -417,17 +412,68 @@ __frame_dummy (void)\n }\n #endif /* EH_FRAME_SECTION_NAME || JCR_SECTION_NAME */\n \n-#endif /* HAS_INIT_SECTION */\n-#endif /* INIT_SECTION_ASM_OP */\n-#endif /* defined(CRT_BEGIN) */\n+#else /* ! INIT_SECTION_ASM_OP && ! HAS_INIT_SECTION */\n+#error \"What are you doing with crtstuff.c, then?\"\n+#endif\n+\n+#elif defined(CRT_END) /* ! CRT_BEGIN */\n+\n+/* Put a word containing zero at the end of each of our two lists of function\n+   addresses.  Note that the words defined here go into the .ctors and .dtors\n+   sections of the crtend.o file, and since that file is always linked in\n+   last, these words naturally end up at the very ends of the two lists\n+   contained in these two sections.  */\n+\n+#ifdef CTOR_LIST_END\n+CTOR_LIST_END;\n+#elif defined(CTORS_SECTION_ASM_OP)\n+/* Hack: force cc1 to switch to .data section early, so that assembling\n+   __CTOR_LIST__ does not undo our behind-the-back change to .ctors.  */\n+static func_ptr force_to_data[1] __attribute__ ((__unused__)) = { };\n+asm (CTORS_SECTION_ASM_OP);\n+STATIC func_ptr __CTOR_END__[1]\n+  __attribute__((aligned(sizeof(func_ptr))))\n+  = { (func_ptr) 0 };\n+#else\n+STATIC func_ptr __CTOR_END__[1]\n+  __attribute__((section(\".ctors\"), aligned(sizeof(func_ptr))))\n+  = { (func_ptr) 0 };\n+#endif\n+\n+#ifdef DTOR_LIST_END\n+DTOR_LIST_END;\n+#elif defined(DTORS_SECTION_ASM_OP)\n+asm (DTORS_SECTION_ASM_OP);\n+STATIC func_ptr __DTOR_END__[1]\n+  __attribute__ ((unused, aligned(sizeof(func_ptr))))\n+  = { (func_ptr) 0 };\n+#else\n+STATIC func_ptr __DTOR_END__[1]\n+  __attribute__((unused, section(\".dtors\"), aligned(sizeof(func_ptr))))\n+  = { (func_ptr) 0 };\n+#endif\n \n-#ifdef CRT_END\n+#ifdef EH_FRAME_SECTION_NAME\n+/* Terminate the frame unwind info section with a 4byte 0 as a sentinel;\n+   this would be the 'length' field in a real FDE.  */\n+STATIC int __FRAME_END__[]\n+     __attribute__ ((unused, mode(SI), section(EH_FRAME_SECTION_NAME),\n+\t\t     aligned(4)))\n+     = { 0 };\n+#endif /* EH_FRAME_SECTION */\n+\n+#ifdef JCR_SECTION_NAME\n+/* Null terminate the .jcr section array.  */\n+STATIC void *__JCR_END__[1] \n+   __attribute__ ((unused, section(JCR_SECTION_NAME),\n+\t\t   aligned(sizeof(void *))))\n+   = { 0 };\n+#endif /* JCR_SECTION_NAME */\n \n #ifdef INIT_SECTION_ASM_OP\n \n #ifdef OBJECT_FORMAT_ELF\n \n-static func_ptr __CTOR_END__[];\n static void\n __do_global_ctors_aux (void)\n {\n@@ -491,86 +537,31 @@ asm (TEXT_SECTION_ASM_OP);\n \n #endif /* OBJECT_FORMAT_ELF */\n \n-#else /* defined(INIT_SECTION_ASM_OP) */\n+#elif defined(HAS_INIT_SECTION) /* ! INIT_SECTION_ASM_OP */\n \n-#ifdef HAS_INIT_SECTION\n /* This case is used by the Irix 6 port, which supports named sections but\n    not an SVR4-style .init section.  __do_global_ctors can be non-static\n    in this case because we protect it with -hidden_symbol.  */\n-static func_ptr __CTOR_END__[];\n-extern void __frame_dummy (void);\n+extern void __do_global_ctors_1(void);\n void\n __do_global_ctors (void)\n {\n   func_ptr *p;\n #if defined(EH_FRAME_SECTION_NAME) || defined(JCR_SECTION_NAME)\n-  __frame_dummy ();\n+  __do_global_ctors_1();\n #endif\n   for (p = __CTOR_END__ - 1; *p != (func_ptr) -1; p--)\n     (*p) ();\n }\n-#endif\n-\n-#endif /* defined(INIT_SECTION_ASM_OP) */\n-\n-/* Put a word containing zero at the end of each of our two lists of function\n-   addresses.  Note that the words defined here go into the .ctors and .dtors\n-   sections of the crtend.o file, and since that file is always linked in\n-   last, these words naturally end up at the very ends of the two lists\n-   contained in these two sections.  */\n \n-#ifdef CTOR_LIST_END\n-CTOR_LIST_END;\n-\n-#elif defined(CTORS_SECTION_ASM_OP)\n-/* Hack: force cc1 to switch to .data section early, so that assembling\n-   __CTOR_LIST__ does not undo our behind-the-back change to .ctors.  */\n-static func_ptr force_to_data[1] __attribute__ ((__unused__)) = { };\n-asm (CTORS_SECTION_ASM_OP);\n-STATIC func_ptr __CTOR_END__[1]\n-  __attribute__((aligned(sizeof(func_ptr))))\n-  = { (func_ptr) 0 };\n-\n-#else\n-STATIC func_ptr __CTOR_END__[1]\n-  __attribute__((section(\".ctors\"), aligned(sizeof(func_ptr))))\n-  = { (func_ptr) 0 };\n+#else /* ! INIT_SECTION_ASM_OP && ! HAS_INIT_SECTION */\n+#error \"What are you doing with crtstuff.c, then?\"\n #endif\n \n-#ifdef DTOR_LIST_END\n-DTOR_LIST_END;\n-#elif defined(DTORS_SECTION_ASM_OP)\n-asm (DTORS_SECTION_ASM_OP);\n-STATIC func_ptr __DTOR_END__[1]\n-  __attribute__ ((unused, aligned(sizeof(func_ptr))))\n-  = { (func_ptr) 0 };\n-#else\n-STATIC func_ptr __DTOR_END__[1]\n-  __attribute__((unused, section(\".dtors\"), aligned(sizeof(func_ptr))))\n-  = { (func_ptr) 0 };\n+#else /* ! CRT_BEGIN && ! CRT_END */\n+#error \"One of CRT_BEGIN or CRT_END must be defined.\"\n #endif\n \n-#ifdef EH_FRAME_SECTION_NAME\n-/* Terminate the frame unwind info section with a 4byte 0 as a sentinel;\n-   this would be the 'length' field in a real FDE.  */\n-STATIC int __FRAME_END__[]\n-     __attribute__ ((unused, mode(SI), section(EH_FRAME_SECTION_NAME),\n-\t\t     aligned(4)))\n-     = { 0 };\n-#endif /* EH_FRAME_SECTION */\n-\n-#ifdef JCR_SECTION_NAME\n-/* Stick a label at the beginning of the java class registration info\n-   so we can register them properly.  */\n-\n-STATIC void *__JCR_END__[1] \n-   __attribute__ ((unused, section(JCR_SECTION_NAME),\n-\t\t   aligned(sizeof(func_ptr))))\n-   = { 0 };\n-#endif /* JCR_SECTION_NAME */\n-\n-#endif /* defined(CRT_END) */\n-\n #else  /* OBJECT_FORMAT_MACHO */\n \n /* For Mach-O format executables, we assume that the system's runtime is\n@@ -609,9 +600,7 @@ __reg_frame_ctor (void)\n   __register_frame_info ((void *) eh_frame->addr, &object);\n }\n \n-#endif /* CRT_BEGIN */\n-\n-#ifdef CRT_END\n+#elif defined(CRT_END)\n \n static void __dereg_frame_dtor (void) __attribute__ ((destructor));\n \n@@ -630,6 +619,9 @@ STATIC int __FRAME_END__[]\n      __attribute__ ((unused, mode(SI), section(EH_FRAME_SECTION_NAME),\n \t\t     aligned(4)))\n      = { 0 };\n-#endif /* CRT_END */\n+\n+#else /* ! CRT_BEGIN && ! CRT_END */\n+#error \"One of CRT_BEGIN or CRT_END must be defined.\"\n+#endif\n \n #endif /* OBJECT_FORMAT_MACHO */"}]}