{"sha": "2d9db8eb8d7554a60095e61841216031fa2c6174", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ5ZGI4ZWI4ZDc1NTRhNjAwOTVlNjE4NDEyMTYwMzFmYTJjNjE3NA==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2004-01-27T22:00:55Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2004-01-27T22:00:55Z"}, "message": "rs6000.c (rs6000_emit_move): #if 0 splitting slow, unaligned loads and stores while debugging.\n\n        * config/rs6000/rs6000.c (rs6000_emit_move): #if 0 splitting\n        slow, unaligned loads and stores while debugging.  Fix formatting.\n\nFrom-SVN: r76752", "tree": {"sha": "59750df8f259badf1fa235735bc52cb09a904c5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59750df8f259badf1fa235735bc52cb09a904c5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d9db8eb8d7554a60095e61841216031fa2c6174", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d9db8eb8d7554a60095e61841216031fa2c6174", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d9db8eb8d7554a60095e61841216031fa2c6174", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d9db8eb8d7554a60095e61841216031fa2c6174/comments", "author": null, "committer": null, "parents": [{"sha": "f2919ef38aef3ddfde42e8858fa1b7098a1bba5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2919ef38aef3ddfde42e8858fa1b7098a1bba5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2919ef38aef3ddfde42e8858fa1b7098a1bba5e"}], "stats": {"total": 34, "additions": 20, "deletions": 14}, "files": [{"sha": "e121b9b777e0097a3ad9c1a1704cf8856a5fb559", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d9db8eb8d7554a60095e61841216031fa2c6174/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d9db8eb8d7554a60095e61841216031fa2c6174/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2d9db8eb8d7554a60095e61841216031fa2c6174", "patch": "@@ -1,3 +1,8 @@\n+2004-01-27  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/rs6000.c (rs6000_emit_move): #if 0 splitting\n+\tslow, unaligned loads and stores while debugging.  Fix formatting.\n+\n 2004-01-27  David Edelsohn  <edelsohn@gnu.org>\n \n \t* config/rs6000/rs6000.md (save_stack_nonlocal): Use Pmode instead"}, {"sha": "4969cd14d7d69152e8b15e2900ca64b7a8e94076", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d9db8eb8d7554a60095e61841216031fa2c6174/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d9db8eb8d7554a60095e61841216031fa2c6174/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=2d9db8eb8d7554a60095e61841216031fa2c6174", "patch": "@@ -3426,6 +3426,7 @@ rs6000_emit_move (rtx dest, rtx source, enum machine_mode mode)\n \t\t      adjust_address (operands[1], SImode, 4));\n       return;\n     }\n+#if 0\n     else if (mode == DImode && TARGET_POWERPC64\n                && GET_CODE (operands[0]) == REG\n                && GET_CODE (operands[1]) == MEM && optimize > 0\n@@ -3435,16 +3436,15 @@ rs6000_emit_move (rtx dest, rtx source, enum machine_mode mode)\n                                          : MEM_ALIGN (operands[1]))\n                && !no_new_pseudos)\n       {\n-        rtx mem;\n         rtx reg = gen_reg_rtx (SImode);\n-        mem = adjust_address (operands[1], SImode, 0);\n-        emit_insn (gen_rtx_SET (SImode, reg, mem));\n-        reg  = simplify_gen_subreg (DImode, reg, SImode, 0);\n+\temit_insn (gen_rtx_SET (SImode, reg,\n+\t\t\t\tadjust_address (operands[1], SImode, 0)));\n+        reg = simplify_gen_subreg (DImode, reg, SImode, 0);\n         emit_insn (gen_insvdi (operands[0], GEN_INT (32), const0_rtx, reg));\n         reg = gen_reg_rtx (SImode);\n-        mem = adjust_address (operands[1], SImode, 4);\n-        emit_insn (gen_rtx_SET (SImode, reg, mem));\n-        reg  = simplify_gen_subreg (DImode, reg, SImode, 0);\n+\temit_insn (gen_rtx_SET (SImode, reg,\n+\t\t\t\tadjust_address (operands[1], SImode, 4)));\n+        reg = simplify_gen_subreg (DImode, reg, SImode, 0);\n         emit_insn (gen_insvdi (operands[0], GEN_INT (32), GEN_INT (32), reg));\n         return;\n       }\n@@ -3457,15 +3457,16 @@ rs6000_emit_move (rtx dest, rtx source, enum machine_mode mode)\n                                          : MEM_ALIGN (operands[0]))\n                && !no_new_pseudos)\n       {\n-        rtx mem;\n         rtx reg = gen_reg_rtx (DImode);\n-        emit_move_insn (reg, gen_rtx_LSHIFTRT (DImode, operands[1], GEN_INT (32)));\n-        mem = adjust_address (operands[0], SImode, 0);\n-        emit_move_insn (mem, simplify_gen_subreg (SImode, reg, DImode, 0));\n-        mem = adjust_address (operands[0], SImode, 4);\n-        emit_move_insn (mem, simplify_gen_subreg (SImode, operands[1], DImode, 0));\n+        emit_move_insn (reg,\n+\t\t\tgen_rtx_LSHIFTRT (DImode, operands[1], GEN_INT (32)));\n+        emit_move_insn (adjust_address (operands[0], SImode, 0),\n+\t\t\tsimplify_gen_subreg (SImode, reg, DImode, 0));\n+        emit_move_insn (adjust_address (operands[0], SImode, 4),\n+\t\t\tsimplify_gen_subreg (SImode, operands[1], DImode, 0));\n         return;\n       }\n+#endif\n   \n   if (!no_new_pseudos)\n     {\n@@ -4500,7 +4501,7 @@ function_arg_pass_by_reference (CUMULATIVE_ARGS *cum ATTRIBUTE_UNUSED,\n }\n \n static void\n-rs6000_move_block_from_reg(int regno, rtx x, int nregs)\n+rs6000_move_block_from_reg (int regno, rtx x, int nregs)\n {\n   int i;\n   enum machine_mode reg_mode = TARGET_32BIT ? SImode : DImode;"}]}