{"sha": "3334c725640bd74923323e9e728d348ff7ae7c5d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzMzNGM3MjU2NDBiZDc0OTIzMzIzZTllNzI4ZDM0OGZmN2FlN2M1ZA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2014-12-11T22:16:09Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2014-12-11T22:16:09Z"}, "message": "builtin-arith-overflow-1.c (fn2): Take signed char.\n\n\t* gcc.dg/builtin-arith-overflow-1.c (fn2): Take signed char.\n\t(fn3): Likewise.\n\nFrom-SVN: r218641", "tree": {"sha": "77bde088a6e08023b2ac567be1aafccec4da43e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77bde088a6e08023b2ac567be1aafccec4da43e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3334c725640bd74923323e9e728d348ff7ae7c5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3334c725640bd74923323e9e728d348ff7ae7c5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3334c725640bd74923323e9e728d348ff7ae7c5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3334c725640bd74923323e9e728d348ff7ae7c5d/comments", "author": null, "committer": null, "parents": [{"sha": "17e0fc9202d9edf96a8c70e54f9a105f8d477016", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17e0fc9202d9edf96a8c70e54f9a105f8d477016", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17e0fc9202d9edf96a8c70e54f9a105f8d477016"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "c9c94ff3eb8c24620ac26a60bea26623d1dc5ec7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3334c725640bd74923323e9e728d348ff7ae7c5d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3334c725640bd74923323e9e728d348ff7ae7c5d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3334c725640bd74923323e9e728d348ff7ae7c5d", "patch": "@@ -1,11 +1,15 @@\n+2014-12-11  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc.dg/builtin-arith-overflow-1.c (fn2): Take signed char.\n+\t(fn3): Likewise.\n+\n 2014-12-11  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR ipa/61324\n-\t* testsuite/g++.dg/pr61324.C: New testcase by Trevor Saunders.\n-\t* testsuite/g++.dg/tm/pr51411-2.C: Update se the extern function is\n+\t* g++.dg/pr61324.C: New testcase by Trevor Saunders.\n+\t* g++.dg/tm/pr51411-2.C: Update se the extern function is\n \tnot eliminated early.\n-\t* testsuite/gcc.target/i386/pr57756.c: Turn extern inline into static\n-\tinline.\n+\t* gcc.target/i386/pr57756.c: Turn extern inline into static inline.\n \n 2014-12-11  Richard Biener  <rguenther@suse.de>\n "}, {"sha": "4f4afd503fed109efdee8118b6baa4ab77449a78", "filename": "gcc/testsuite/gcc.dg/builtin-arith-overflow-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3334c725640bd74923323e9e728d348ff7ae7c5d/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-arith-overflow-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3334c725640bd74923323e9e728d348ff7ae7c5d/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-arith-overflow-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-arith-overflow-1.c?ref=3334c725640bd74923323e9e728d348ff7ae7c5d", "patch": "@@ -17,7 +17,7 @@ fn1 (int x, unsigned int y)\n /* MUL_OVERFLOW should be folded into unsigned multiplication,\n    because ovf is never used.  */\n __attribute__((noinline, noclone)) int\n-fn2 (char x, long int y)\n+fn2 (signed char x, long int y)\n {\n   short int res;\n   int ovf = __builtin_mul_overflow (x, y, &res);\n@@ -31,7 +31,7 @@ fn2 (char x, long int y)\n /* ADD_OVERFLOW should be folded into unsigned addition,\n    because it never overflows.  */\n __attribute__((noinline, noclone)) int\n-fn3 (char x, unsigned short y, int *ovf)\n+fn3 (signed char x, unsigned short y, int *ovf)\n {\n   int res;\n   *ovf = __builtin_add_overflow (x, y, &res);"}]}