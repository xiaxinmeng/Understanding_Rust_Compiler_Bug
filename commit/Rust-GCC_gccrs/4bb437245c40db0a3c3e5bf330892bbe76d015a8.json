{"sha": "4bb437245c40db0a3c3e5bf330892bbe76d015a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJiNDM3MjQ1YzQwZGIwYTNjM2U1YmYzMzA4OTJiYmU3NmQwMTVhOA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1997-09-15T22:36:34Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-09-15T22:36:34Z"}, "message": "Patch from Richard Henderson for alpha-linux ld.so bug.\n\n\t* alpha.md (movdi): Handle CONST_DOUBLE for TARGET_BUILD_CONSTANTS.\n\nFrom-SVN: r15459", "tree": {"sha": "ae5ba0bc3fb1155697a5cebbb5cdadc4a541e02d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae5ba0bc3fb1155697a5cebbb5cdadc4a541e02d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bb437245c40db0a3c3e5bf330892bbe76d015a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bb437245c40db0a3c3e5bf330892bbe76d015a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bb437245c40db0a3c3e5bf330892bbe76d015a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bb437245c40db0a3c3e5bf330892bbe76d015a8/comments", "author": null, "committer": null, "parents": [{"sha": "0d24ff5d2450f8de4c1b6aa1e7b727cf49bc2e1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d24ff5d2450f8de4c1b6aa1e7b727cf49bc2e1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d24ff5d2450f8de4c1b6aa1e7b727cf49bc2e1b"}], "stats": {"total": 49, "additions": 31, "deletions": 18}, "files": [{"sha": "a6daaa8fe2671e2b54c5c0042073e07e98939de1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb437245c40db0a3c3e5bf330892bbe76d015a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb437245c40db0a3c3e5bf330892bbe76d015a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4bb437245c40db0a3c3e5bf330892bbe76d015a8", "patch": "@@ -1,5 +1,7 @@\n Mon Sep 15 15:24:00 1997  Richard Henderson  <rth@cygnus.com>\n \n+\t* alpha.md (movdi): Handle CONST_DOUBLE for TARGET_BUILD_CONSTANTS.\n+\n \t* alpha/alpha.c (output_prolog): New variable sa_reg.  Use it for\n \tout-or-range reg_offset.\n \t(output_epilog): Likewise."}, {"sha": "d718481642c22805816a00d6b17e3337cf017fd9", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 29, "deletions": 18, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb437245c40db0a3c3e5bf330892bbe76d015a8/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb437245c40db0a3c3e5bf330892bbe76d015a8/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=4bb437245c40db0a3c3e5bf330892bbe76d015a8", "patch": "@@ -3830,30 +3830,41 @@\n       else\n \toperands[1] = tem;\n     }\n-  else if (TARGET_BUILD_CONSTANTS\n-\t   && GET_CODE (operands[1]) == CONST_INT)\n+  else if (CONSTANT_P (operands[1]))\n     {\n+      if (TARGET_BUILD_CONSTANTS)\n+\t{\n #if HOST_BITS_PER_WIDE_INT == 64\n-      tem = alpha_emit_set_long_const (operands[0], INTVAL (operands[1]));\n-      if (rtx_equal_p (tem, operands[0]))\n-\tDONE;\n-      else\n-\toperands[1] = tem;\n+\t  HOST_WIDE_INT i;\n+\n+\t  if (GET_CODE (operands[1]) == CONST_INT)\n+\t    i = INTVAL (operands[1]);\n+\t  else if (GET_CODE (operands[1]) == CONST_DOUBLE)\n+\t    i = CONST_DOUBLE_LOW (operands[1]);\n+\t  else\n+\t    abort();\n+\t  \n+          tem = alpha_emit_set_long_const (operands[0], i);\n+          if (rtx_equal_p (tem, operands[0]))\n+\t    DONE;\n+          else\n+\t    operands[1] = tem;\n #else\n-      abort();\n+          abort();\n #endif\n-    }\n-  else if (CONSTANT_P (operands[1]))\n-    {\n-      operands[1] = force_const_mem (DImode, operands[1]);\n-      if (reload_in_progress)\n-\t{\n-\t  emit_move_insn (operands[0], XEXP (operands[1], 0));\n-\t  operands[1] = copy_rtx (operands[1]);\n-\t  XEXP (operands[1], 0) = operands[0];\n \t}\n       else\n-\toperands[1] = validize_mem (operands[1]);\n+\t{\n+\t  operands[1] = force_const_mem (DImode, operands[1]);\n+\t  if (reload_in_progress)\n+\t    {\n+\t      emit_move_insn (operands[0], XEXP (operands[1], 0));\n+\t      operands[1] = copy_rtx (operands[1]);\n+\t      XEXP (operands[1], 0) = operands[0];\n+\t    }\n+\t  else\n+\t    operands[1] = validize_mem (operands[1]);\n+\t}\n     }\n   else\n     abort ();"}]}