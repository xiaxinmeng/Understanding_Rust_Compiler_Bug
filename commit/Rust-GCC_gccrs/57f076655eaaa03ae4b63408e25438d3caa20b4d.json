{"sha": "57f076655eaaa03ae4b63408e25438d3caa20b4d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTdmMDc2NjU1ZWFhYTAzYWU0YjYzNDA4ZTI1NDM4ZDNjYWEyMGI0ZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-11-11T09:18:47Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-11-11T10:50:17Z"}, "message": "Drop topological sort for PRE phi-translation\n\nThe topological sort sorted_array_from_bitmap_set is supposed to\nprovide isn't one since quite some time since value_ids are\nassigned first to SSA names in the order of SSA_NAME_VERSION\nand then to hashtable entries in the order they appear in the\ntable.  One can even argue that expression-ids provide a closer\napproximation of a topological sort since those are assigned\nduring AVAIL_OUT computation which is done in a dominator walk.\n\nNow - phi-translation is not even depending on topological sorting\nbut it essentially does a DFS walk, phi-translating expressions\nit depends on and relying on phi-translation caching to avoid\ndoing redundant work.\n\nSo this patch drops the use of sorted_array_from_bitmap_set from\nphi_translate_set because this function is quite expensive.\n\n2020-11-11  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-pre.c (phi_translate_set): Do not sort the\n\texpression set topologically.", "tree": {"sha": "6264b1dd475400a36d8b2495421b5a13c5f5bc5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6264b1dd475400a36d8b2495421b5a13c5f5bc5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57f076655eaaa03ae4b63408e25438d3caa20b4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57f076655eaaa03ae4b63408e25438d3caa20b4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57f076655eaaa03ae4b63408e25438d3caa20b4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57f076655eaaa03ae4b63408e25438d3caa20b4d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c76c23a0da27f6a5583490893b82a82002691a90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c76c23a0da27f6a5583490893b82a82002691a90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c76c23a0da27f6a5583490893b82a82002691a90"}], "stats": {"total": 17, "additions": 7, "deletions": 10}, "files": [{"sha": "da2b68909d92fecd39001a42d5a90c920205612a", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57f076655eaaa03ae4b63408e25438d3caa20b4d/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57f076655eaaa03ae4b63408e25438d3caa20b4d/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=57f076655eaaa03ae4b63408e25438d3caa20b4d", "patch": "@@ -1762,34 +1762,31 @@ phi_translate (bitmap_set_t dest, pre_expr expr,\n static void\n phi_translate_set (bitmap_set_t dest, bitmap_set_t set, edge e)\n {\n-  vec<pre_expr> exprs;\n-  pre_expr expr;\n-  int i;\n+  bitmap_iterator bi;\n+  unsigned int i;\n \n   if (gimple_seq_empty_p (phi_nodes (e->dest)))\n     {\n       bitmap_set_copy (dest, set);\n       return;\n     }\n \n-  exprs = sorted_array_from_bitmap_set (set);\n   /* Allocate the phi-translation cache where we have an idea about\n      its size.  hash-table implementation internals tell us that\n      allocating the table to fit twice the number of elements will\n      make sure we do not usually re-allocate.  */\n   if (!PHI_TRANS_TABLE (e->src))\n-    PHI_TRANS_TABLE (e->src)\n-      = new hash_table<expr_pred_trans_d> (2 * exprs.length ());\n-  FOR_EACH_VEC_ELT (exprs, i, expr)\n+    PHI_TRANS_TABLE (e->src) = new hash_table<expr_pred_trans_d>\n+\t\t\t\t   (2 * bitmap_count_bits (&set->expressions));\n+  FOR_EACH_EXPR_ID_IN_SET (set, i, bi)\n     {\n-      pre_expr translated;\n-      translated = phi_translate (dest, expr, set, NULL, e);\n+      pre_expr expr = expression_for_id (i);\n+      pre_expr translated = phi_translate (dest, expr, set, NULL, e);\n       if (!translated)\n \tcontinue;\n \n       bitmap_insert_into_set (dest, translated);\n     }\n-  exprs.release ();\n }\n \n /* Find the leader for a value (i.e., the name representing that"}]}