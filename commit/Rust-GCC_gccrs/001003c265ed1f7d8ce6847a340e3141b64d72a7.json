{"sha": "001003c265ed1f7d8ce6847a340e3141b64d72a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDAxMDAzYzI2NWVkMWY3ZDhjZTY4NDdhMzQwZTMxNDFiNjRkNzJhNw==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2008-10-01T12:22:17Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2008-10-01T12:22:17Z"}, "message": "re PR tree-optimization/37662 (ice: tree check: expected ssa_name, have integer_cst in get_value_range, at tree-vrp.c:612)\n\n2008-09-30  Paolo Bonzini  <bonzini@gnu.org>\n\n\tPR tree-optimization/37662\n\t* tree-ssa-ccp.c (fold_gimple_assign): Invert the operands of a\n\tcommutative binary operation if they are in the wrong order and\n\tfold_build2 produces non-GIMPLE.\n\nFrom-SVN: r140809", "tree": {"sha": "addc07606e7868c2c10e5917c7b181b4897efeab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/addc07606e7868c2c10e5917c7b181b4897efeab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/001003c265ed1f7d8ce6847a340e3141b64d72a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/001003c265ed1f7d8ce6847a340e3141b64d72a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/001003c265ed1f7d8ce6847a340e3141b64d72a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/001003c265ed1f7d8ce6847a340e3141b64d72a7/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9e81dbc753bb36f496b3566ad5d80ccced070fc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e81dbc753bb36f496b3566ad5d80ccced070fc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e81dbc753bb36f496b3566ad5d80ccced070fc5"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "b6f16013f8493bb765f4a51ad741225b356ad969", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/001003c265ed1f7d8ce6847a340e3141b64d72a7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/001003c265ed1f7d8ce6847a340e3141b64d72a7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=001003c265ed1f7d8ce6847a340e3141b64d72a7", "patch": "@@ -1,3 +1,10 @@\n+2008-09-30  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\tPR tree-optimization/37662\n+\t* tree-ssa-ccp.c (fold_gimple_assign): Invert the operands of a\n+\tcommutative binary operation if they are in the wrong order and\n+\tfold_build2 produces non-GIMPLE.\n+\n 2008-09-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/37662"}, {"sha": "383367e9fb1c1bd761c79002b2c7aab6f2083263", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/001003c265ed1f7d8ce6847a340e3141b64d72a7/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/001003c265ed1f7d8ce6847a340e3141b64d72a7/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=001003c265ed1f7d8ce6847a340e3141b64d72a7", "patch": "@@ -2711,6 +2711,17 @@ fold_gimple_assign (gimple_stmt_iterator *si)\n           STRIP_USELESS_TYPE_CONVERSION (result);\n           if (valid_gimple_rhs_p (result))\n \t    return result;\n+\n+\t  /* Fold might have produced non-GIMPLE, so if we trust it blindly\n+\t     we lose canonicalization opportunities.  Do not go again\n+\t     through fold here though, or the same non-GIMPLE will be\n+\t     produced.  */\n+          if (commutative_tree_code (subcode)\n+              && tree_swap_operands_p (gimple_assign_rhs1 (stmt),\n+                                       gimple_assign_rhs2 (stmt), false))\n+            return build2 (subcode, TREE_TYPE (gimple_assign_lhs (stmt)),\n+                           gimple_assign_rhs2 (stmt),\n+                           gimple_assign_rhs1 (stmt));\n         }\n       break;\n "}]}