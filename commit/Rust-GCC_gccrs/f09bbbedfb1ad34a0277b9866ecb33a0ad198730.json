{"sha": "f09bbbedfb1ad34a0277b9866ecb33a0ad198730", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA5YmJiZWRmYjFhZDM0YTAyNzdiOTg2NmVjYjMzYTBhZDE5ODczMA==", "commit": {"author": {"name": "Martin v. L\u00f6wis", "email": "loewis@informatik.hu-berlin.de", "date": "1998-10-22T14:52:02Z"}, "committer": {"name": "Martin v. L\u00f6wis", "email": "loewis@gcc.gnu.org", "date": "1998-10-22T14:52:02Z"}, "message": "parse.y (named_class_head): Push into class while parsing the base class list.\n\n\t* parse.y (named_class_head): Push into class while parsing the\n\tbase class list.\n\t* decl2.c (push_scope, pop_scope): New functions.\n\t* tree.h: Declare them.\n\nFrom-SVN: r23224", "tree": {"sha": "33a57098839059f547c9ca6f2bb7167cc36c0804", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33a57098839059f547c9ca6f2bb7167cc36c0804"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f09bbbedfb1ad34a0277b9866ecb33a0ad198730", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f09bbbedfb1ad34a0277b9866ecb33a0ad198730", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f09bbbedfb1ad34a0277b9866ecb33a0ad198730", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f09bbbedfb1ad34a0277b9866ecb33a0ad198730/comments", "author": null, "committer": null, "parents": [{"sha": "e0afe616d4883f8dcfdafda44373d3f8190b9e20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0afe616d4883f8dcfdafda44373d3f8190b9e20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0afe616d4883f8dcfdafda44373d3f8190b9e20"}], "stats": {"total": 43, "additions": 39, "deletions": 4}, "files": [{"sha": "e614e723c25596e9531d089a77d29a359cd4b269", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f09bbbedfb1ad34a0277b9866ecb33a0ad198730/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f09bbbedfb1ad34a0277b9866ecb33a0ad198730/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f09bbbedfb1ad34a0277b9866ecb33a0ad198730", "patch": "@@ -1,5 +1,9 @@\n-1998-10-22  Martin v. L\ufffdwis <loewis@informatik.hu-berlin.de>\n+1998-10-22  Martin von L\ufffdwis  <loewis@informatik.hu-berlin.de>\n \n+\t* parse.y (named_class_head): Push into class while parsing the\n+\tbase class list.\n+\t* decl2.c (push_scope, pop_scope): New functions.\n+\t* cp-tree.h: Declare them.\n         * init.c (build_new_1): Delay cleanup until end of full expression.\n \n 1998-10-21  Jason Merrill  <jason@yorick.cygnus.com>"}, {"sha": "51c531bb558e8722946b55a965f8757df36c9b08", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f09bbbedfb1ad34a0277b9866ecb33a0ad198730/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f09bbbedfb1ad34a0277b9866ecb33a0ad198730/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=f09bbbedfb1ad34a0277b9866ecb33a0ad198730", "patch": "@@ -2668,6 +2668,8 @@ extern void set_decl_namespace                  PROTO((tree, tree));\n extern tree current_decl_namespace              PROTO((void));\n extern void push_decl_namespace                 PROTO((tree));\n extern void pop_decl_namespace                  PROTO((void));\n+extern void push_scope\t\t\t\tPROTO((tree));\n+extern void pop_scope\t\t\t\tPROTO((tree));\n extern void do_namespace_alias\t\t\tPROTO((tree, tree));\n extern void do_toplevel_using_decl\t\tPROTO((tree));\n extern void do_local_using_decl                 PROTO((tree));"}, {"sha": "302138ab2d24df391f6dea9c294078c8cfdad351", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f09bbbedfb1ad34a0277b9866ecb33a0ad198730/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f09bbbedfb1ad34a0277b9866ecb33a0ad198730/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=f09bbbedfb1ad34a0277b9866ecb33a0ad198730", "patch": "@@ -4332,6 +4332,30 @@ check_decl_namespace ()\n   my_friendly_assert (decl_namespace_list == NULL_TREE, 980711);\n }\n \n+/* Enter a class or namespace scope. */\n+\n+void\n+push_scope (t)\n+     tree t;\n+{\n+  if (TREE_CODE (t) == NAMESPACE_DECL)\n+    push_decl_namespace (t);\n+  else\n+    pushclass (t, 2);\n+}\n+\n+/* Leave scope pushed by push_scope. */\n+\n+void\n+pop_scope (t)\n+     tree t;\n+{\n+  if (TREE_CODE (t) == NAMESPACE_DECL)\n+    pop_decl_namespace ();\n+  else\n+    popclass (1);\n+}\n+\n /* [basic.lookup.koenig] */\n /* A non-zero return value in the functions below indicates an error.\n    All nodes allocated in the procedure are on the scratch obstack. */"}, {"sha": "2aba4a5fea01d7f0125e6c3c935d4a23d9f88575", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f09bbbedfb1ad34a0277b9866ecb33a0ad198730/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f09bbbedfb1ad34a0277b9866ecb33a0ad198730/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=f09bbbedfb1ad34a0277b9866ecb33a0ad198730", "patch": "@@ -2235,25 +2235,30 @@ named_class_head:\n \t\t{ $$ = xref_tag (current_aggr, $1, 1); }\n \t| named_class_head_sans_basetype_defn \n                 { $<ttype>$ = xref_tag (current_aggr, $1, 0); }\n+          /* Class name is unqualified, so we look for base classes\n+             in the current scope.  */\n           maybe_base_class_list  %prec EMPTY\n \t\t{ \n \t\t  $$ = $<ttype>2;\n \t\t  if ($3)\n                     xref_basetypes (current_aggr, $1, $<ttype>2, $3); \n \t\t}\n-\t| named_complex_class_head_sans_basetype maybe_base_class_list\n+\t| named_complex_class_head_sans_basetype \n+                { push_scope (CP_DECL_CONTEXT ($1)); }\n+\t  maybe_base_class_list\n \t\t{ \n+                  pop_scope (CP_DECL_CONTEXT ($1));\n \t\t  $$ = TREE_TYPE ($1);\n \t\t  if (TREE_INT_CST_LOW (current_aggr) == union_type \n \t\t      && TREE_CODE ($$) != UNION_TYPE)\n \t\t    cp_pedwarn (\"`union' tag used in declaring `%#T'\", $$);\n \t\t  else if (TREE_CODE ($$) == UNION_TYPE\n \t\t\t   && TREE_INT_CST_LOW (current_aggr) != union_type)\n \t\t    cp_pedwarn (\"non-`union' tag used in declaring `%#T'\", $$);\n-\t\t  if ($2)\n+\t\t  if ($3)\n \t\t    {\n \t\t      maybe_process_partial_specialization ($$);\n-\t\t      xref_basetypes (current_aggr, $1, $$, $2); \n+\t\t      xref_basetypes (current_aggr, $1, $$, $3); \n \t\t    }\n \t\t}\n \t;"}]}