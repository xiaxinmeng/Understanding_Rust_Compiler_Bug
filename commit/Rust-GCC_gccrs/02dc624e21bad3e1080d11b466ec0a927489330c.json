{"sha": "02dc624e21bad3e1080d11b466ec0a927489330c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJkYzYyNGUyMWJhZDNlMTA4MGQxMWI0NjZlYzBhOTI3NDg5MzMwYw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-11-23T00:24:21Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-11-23T00:24:21Z"}, "message": "cmd/go, go/internal/gccgoimporter: pass -X to ar on AIX\n    \n    Reviewed-on: https://go-review.googlesource.com/72930\n\nFrom-SVN: r255090", "tree": {"sha": "1eb5e5702855281ed05d4fca66ee5d21676dbc10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1eb5e5702855281ed05d4fca66ee5d21676dbc10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02dc624e21bad3e1080d11b466ec0a927489330c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02dc624e21bad3e1080d11b466ec0a927489330c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02dc624e21bad3e1080d11b466ec0a927489330c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02dc624e21bad3e1080d11b466ec0a927489330c/comments", "author": null, "committer": null, "parents": [{"sha": "f6f28ab80749be4d221fc866e5b92c0265725cc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6f28ab80749be4d221fc866e5b92c0265725cc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6f28ab80749be4d221fc866e5b92c0265725cc4"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "8141a4efa691322793deb93edc29cc2f6336ef74", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02dc624e21bad3e1080d11b466ec0a927489330c/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02dc624e21bad3e1080d11b466ec0a927489330c/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=02dc624e21bad3e1080d11b466ec0a927489330c", "patch": "@@ -1,4 +1,4 @@\n-1db7dc97d01ee230ff4874ce1c9775a24ffd16ac\n+57adb928c3cc61ac8fa47554394670a1c455afc2\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "75f3c1a5058da38e675ed728d363341fa106cbe4", "filename": "libgo/go/cmd/go/internal/work/build.go", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02dc624e21bad3e1080d11b466ec0a927489330c/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fwork%2Fbuild.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02dc624e21bad3e1080d11b466ec0a927489330c/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fwork%2Fbuild.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fwork%2Fbuild.go?ref=02dc624e21bad3e1080d11b466ec0a927489330c", "patch": "@@ -2757,7 +2757,14 @@ func (gccgoToolchain) pack(b *Builder, p *load.Package, objDir, afile string, of\n \tabsAfile := mkAbs(objDir, afile)\n \t// Try with D modifier first, then without if that fails.\n \tif b.run(p.Dir, p.ImportPath, nil, \"ar\", \"rcD\", absAfile, absOfiles) != nil {\n-\t\treturn b.run(p.Dir, p.ImportPath, nil, \"ar\", \"rc\", absAfile, absOfiles)\n+\t\tif cfg.Goos == \"aix\" && cfg.Goarch == \"ppc64\" {\n+\t\t\t// AIX puts both 32-bit and 64-bit objects in the same archive.\n+\t\t\t// Tell the AIX \"ar\" command to only care about 64-bit objects.\n+\t\t\t// AIX \"ar\" command does not know D option.\n+\t\t\treturn b.run(p.Dir, p.ImportPath, nil, \"ar\", \"-X64\", \"rc\", absAfile, absOfiles)\n+\t\t} else {\n+\t\t\treturn b.run(p.Dir, p.ImportPath, nil, \"ar\", \"rc\", absAfile, absOfiles)\n+\t\t}\n \t}\n \treturn nil\n }"}, {"sha": "923f3689011b3f1a1ab309abb26d5978e54dd94b", "filename": "libgo/go/go/internal/gccgoimporter/importer.go", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02dc624e21bad3e1080d11b466ec0a927489330c/libgo%2Fgo%2Fgo%2Finternal%2Fgccgoimporter%2Fimporter.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02dc624e21bad3e1080d11b466ec0a927489330c/libgo%2Fgo%2Fgo%2Finternal%2Fgccgoimporter%2Fimporter.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fgo%2Finternal%2Fgccgoimporter%2Fimporter.go?ref=02dc624e21bad3e1080d11b466ec0a927489330c", "patch": "@@ -104,12 +104,14 @@ func openExportFile(fpath string) (reader io.ReadSeeker, closer io.Closer, err e\n \t\t// TODO(pcc): Read the archive directly instead of using \"ar\".\n \t\tf.Close()\n \t\tcloser = nil\n+\t\tvar cmd *exec.Cmd\n \n-\t\tcmd := exec.Command(\"ar\", \"p\", fpath)\n \t\tif runtime.GOOS == \"aix\" && runtime.GOARCH == \"ppc64\" {\n \t\t\t// AIX puts both 32-bit and 64-bit objects in the same archive.\n \t\t\t// Tell the AIX \"ar\" command to only care about 64-bit objects.\n-\t\t\tcmd.Env = append(os.Environ(), \"OBJECT_MODE=64\")\n+\t\t\tcmd = exec.Command(\"ar\", \"-X64\", \"p\", fpath)\n+\t\t} else {\n+\t\t\tcmd = exec.Command(\"ar\", \"p\", fpath)\n \t\t}\n \t\tvar out []byte\n \t\tout, err = cmd.Output()"}]}