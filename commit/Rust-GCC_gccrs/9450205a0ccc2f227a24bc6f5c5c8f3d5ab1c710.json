{"sha": "9450205a0ccc2f227a24bc6f5c5c8f3d5ab1c710", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQ1MDIwNWEwY2NjMmYyMjdhMjRiYzZmNWM1YzhmM2Q1YWIxYzcxMA==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2008-08-04T09:49:42Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-04T09:49:42Z"}, "message": "exp_ch4.adb (Get_Allocator_Final_List): Freeze anonymous type for chain at once...\n\n2008-08-04  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch4.adb (Get_Allocator_Final_List): Freeze anonymous type for\n\tchain at once, to ensure that type is properly decorated for back-end,\n\twhen allocator appears within a loop.\n\nFrom-SVN: r138597", "tree": {"sha": "e7547ada839b13810d2b13de0e3cd99cf78ccffe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7547ada839b13810d2b13de0e3cd99cf78ccffe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9450205a0ccc2f227a24bc6f5c5c8f3d5ab1c710", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9450205a0ccc2f227a24bc6f5c5c8f3d5ab1c710", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9450205a0ccc2f227a24bc6f5c5c8f3d5ab1c710", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9450205a0ccc2f227a24bc6f5c5c8f3d5ab1c710/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c18b3a998d1d0533759a5071d4309a34848a8ea3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c18b3a998d1d0533759a5071d4309a34848a8ea3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c18b3a998d1d0533759a5071d4309a34848a8ea3"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "1bef500b46a8b489cffe17f0f52be08b485df419", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9450205a0ccc2f227a24bc6f5c5c8f3d5ab1c710/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9450205a0ccc2f227a24bc6f5c5c8f3d5ab1c710/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=9450205a0ccc2f227a24bc6f5c5c8f3d5ab1c710", "patch": "@@ -977,8 +977,7 @@ package body Exp_Ch4 is\n          --  not allow sliding, but this check does (a relaxation from Ada 83).\n \n          if Is_Constrained (DesigT)\n-           and then not Subtypes_Statically_Match\n-                          (T, DesigT)\n+           and then not Subtypes_Statically_Match (T, DesigT)\n          then\n             Apply_Constraint_Check\n               (Exp, DesigT, No_Sliding => False);\n@@ -8354,7 +8353,9 @@ package body Exp_Ch4 is\n          --  chain. The Final_Chain that is thus created is shared by the\n          --  access parameter. The access type is tested against the result\n          --  type of the function to exclude allocators whose type is an\n-         --  anonymous access result type.\n+         --  anonymous access result type.  We freeze the type at once to\n+         --  ensure that it is properly decorated for the back-end, even\n+         --  if the context and current scope is a loop.\n \n          if Nkind (Associated_Node_For_Itype (PtrT))\n               in N_Subprogram_Specification\n@@ -8371,6 +8372,7 @@ package body Exp_Ch4 is\n                      Subtype_Indication =>\n                        New_Occurrence_Of (T, Loc))));\n \n+            Freeze_Before (N, Owner);\n             Build_Final_List (N, Owner);\n             Set_Associated_Final_Chain (PtrT, Associated_Final_Chain (Owner));\n "}]}