{"sha": "19523300a00967225f9d377b241c8442aa261792", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk1MjMzMDBhMDA5NjcyMjVmOWQzNzdiMjQxYzg0NDJhYTI2MTc5Mg==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@TechFak.Uni-Bielefeld.DE", "date": "2008-11-20T17:13:01Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2008-11-20T17:13:01Z"}, "message": "re PR bootstrap/33100 (on bootstrap getting section .eh_frame: bad cie version 0: offset 0x0)\n\n\tgcc:\n\tPR bootstrap/33100\n\t* config.gcc (i[34567]86-*-solaris2*): Don't include\n\ti386/t-crtstuff here.\n\tMove extra_parts, i386/t-sol2 in tmake_file to libgcc/config.host.\n\t* config/i386/t-sol2: Move to libgcc/config/i386.\n\t\n\tlibgcc:\n\tPR bootstrap/33100\n\t* configure.ac (i?86-*-solaris2.1[0-9]*): Only include\n\ti386/t-crtstuff if linker supports ZERO terminator unwind entries.\n\t* configure: Regenerate.\n\t* config.host (i[34567]86-*-solaris2*): Move i386/t-sol2 in\n\ttmake_file here from gcc/config.gcc.\n\tMove extra_parts here from gcc/config.gcc.\n\t* config/i386/t-sol2: Move here from gcc/config/i386.\n\tUse gcc_srcdir instead of srcdir.\n\nFrom-SVN: r142050", "tree": {"sha": "05532f9b36c19db3ba4c3c2a298e1d0c80348696", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05532f9b36c19db3ba4c3c2a298e1d0c80348696"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19523300a00967225f9d377b241c8442aa261792", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19523300a00967225f9d377b241c8442aa261792", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19523300a00967225f9d377b241c8442aa261792", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19523300a00967225f9d377b241c8442aa261792/comments", "author": null, "committer": null, "parents": [{"sha": "7391b59739f9c1dc026643d78f16ea6b0e0b3f7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7391b59739f9c1dc026643d78f16ea6b0e0b3f7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7391b59739f9c1dc026643d78f16ea6b0e0b3f7a"}], "stats": {"total": 109, "additions": 91, "deletions": 18}, "files": [{"sha": "af07c9306572bc12fffeb19e547f8eabd5a780c8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19523300a00967225f9d377b241c8442aa261792/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19523300a00967225f9d377b241c8442aa261792/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=19523300a00967225f9d377b241c8442aa261792", "patch": "@@ -1,3 +1,11 @@\n+2008-11-20  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\tPR bootstrap/33100\n+\t* config.gcc (i[34567]86-*-solaris2*): Don't include\n+\ti386/t-crtstuff here.\n+\tMove extra_parts, i386/t-sol2 in tmake_file to libgcc/config.host.\n+\t* config/i386/t-sol2: Move to libgcc/config/i386.\n+\n 2008-11-20  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n \n \tPR driver/21706"}, {"sha": "a78dcc04e57cf475438c963e48b420b66b05e8f5", "filename": "gcc/config.gcc", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19523300a00967225f9d377b241c8442aa261792/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19523300a00967225f9d377b241c8442aa261792/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=19523300a00967225f9d377b241c8442aa261792", "patch": "@@ -1173,7 +1173,7 @@ i[34567]86-*-solaris2*)\n \t\t;;\n \tesac\n \ttm_file=\"${tm_file} i386/sol2.h\"\n-\ttmake_file=\"${tmake_file} t-sol2 i386/t-sol2 t-svr4\"\n+\ttmake_file=\"${tmake_file} t-sol2 t-svr4\"\n \tc_target_objs=\"${c_target_objs} sol2-c.o\"\n \tcxx_target_objs=\"${cxx_target_objs} sol2-c.o\"\n \textra_objs=\"sol2.o\"\n@@ -1192,7 +1192,10 @@ i[34567]86-*-solaris2*)\n \t*-*-solaris2.1[0-9]*)\n \t\ttm_file=\"${tm_file} i386/x86-64.h i386/sol2-10.h\"\n \t\ttm_defines=\"${tm_defines} TARGET_BI_ARCH=1\"\n-\t\ttmake_file=\"$tmake_file i386/t-crtstuff i386/t-sol2-10\"\n+\t\ttmake_file=\"$tmake_file i386/t-sol2-10\"\n+\t\t# i386/t-crtstuff only affects libgcc.  Its inclusion\n+\t\t# depends on a runtime test and is thus performed in\n+\t\t# libgcc/configure.ac instead.\n \t\tneed_64bit_hwint=yes\n \t\tcase X\"${with_cpu}\" in\n \t\tXgeneric|Xcore2|Xnocona|Xx86-64|Xamdfam10|Xbarcelona|Xk8|Xopteron|Xathlon64|Xathlon-fx)\n@@ -1208,12 +1211,6 @@ i[34567]86-*-solaris2*)\n \t\t\texit 1\n \t\t\t;;\n \t\tesac\n-\t\t# Solaris 2.10 provides crt1.o, crti.o, crtn.o, and gcrt1.o as\n-\t\t# part of the base system.\n-\t\textra_parts=\"gmon.o crtbegin.o crtend.o\"\n-\t\t;;\n-\t*)\n-\t\textra_parts=\"crt1.o crti.o crtn.o gcrt1.o gmon.o crtbegin.o crtend.o\"\n \t\t;;\n \tesac\n \tcase ${enable_threads}:${have_pthread_h}:${have_thread_h} in"}, {"sha": "dd079c227ebe21d49d7f64713dfe380f39a801eb", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19523300a00967225f9d377b241c8442aa261792/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19523300a00967225f9d377b241c8442aa261792/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=19523300a00967225f9d377b241c8442aa261792", "patch": "@@ -1,3 +1,15 @@\n+2008-11-20  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\tPR bootstrap/33100\n+\t* configure.ac (i?86-*-solaris2.1[0-9]*): Only include\n+\ti386/t-crtstuff if linker supports ZERO terminator unwind entries.\n+\t* configure: Regenerate.\n+\t* config.host (i[34567]86-*-solaris2*): Move i386/t-sol2 in\n+\ttmake_file here from gcc/config.gcc.\n+\tMove extra_parts here from gcc/config.gcc.\n+\t* config/i386/t-sol2: Move here from gcc/config/i386.\n+\tUse gcc_srcdir instead of srcdir.\n+\n 2008-11-18  Adam Nemet  <anemet@caviumnetworks.com>\n \n \t* config.host (mipsisa64r2-*-elf* | mipsisa64r2el-*-elf*): New"}, {"sha": "f85f3cf32b4cf67cd6be817d2f10491b24b56474", "filename": "libgcc/config.host", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19523300a00967225f9d377b241c8442aa261792/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19523300a00967225f9d377b241c8442aa261792/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=19523300a00967225f9d377b241c8442aa261792", "patch": "@@ -318,6 +318,17 @@ i[34567]86-*-nto-qnx*)\n i[34567]86-*-rtems*)\n \t;;\n i[34567]86-*-solaris2*)\n+\ttmake_file=\"${tmake_file} i386/t-sol2\"\n+\tcase ${host} in\n+\t*-*-solaris2.1[0-9]*)\n+\t\t# Solaris 2.10 provides crt1.o, crti.o, crtn.o, and gcrt1.o as\n+\t\t# part of the base system.\n+\t\textra_parts=\"gmon.o crtbegin.o crtend.o\"\n+\t\t;;\n+\t*)\n+\t\textra_parts=\"crt1.o crti.o crtn.o gcrt1.o gmon.o crtbegin.o crtend.o\"\n+\t\t;;\n+\tesac\n \t;;\n i[4567]86-wrs-vxworks|i[4567]86-wrs-vxworksae)\n \t;;"}, {"sha": "24b7c7c10f41abdc76d17366d28fa867a1393ead", "filename": "libgcc/config/i386/t-sol2", "status": "renamed", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19523300a00967225f9d377b241c8442aa261792/libgcc%2Fconfig%2Fi386%2Ft-sol2", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19523300a00967225f9d377b241c8442aa261792/libgcc%2Fconfig%2Fi386%2Ft-sol2", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Ft-sol2?ref=19523300a00967225f9d377b241c8442aa261792", "patch": "@@ -1,23 +1,23 @@\n # gmon build rule:\n-$(T)gmon.o:\t$(srcdir)/config/i386/gmon-sol2.c $(GCC_PASSES) $(CONFIG_H)\n+$(T)gmon.o:\t$(gcc_srcdir)/config/i386/gmon-sol2.c $(GCC_PASSES) $(CONFIG_H)\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) \\\n-\t\t-c $(srcdir)/config/i386/gmon-sol2.c -o $(T)gmon.o\n+\t\t-c $(gcc_srcdir)/config/i386/gmon-sol2.c -o $(T)gmon.o\n \n # Assemble startup files.\n # Apparently Sun believes that assembler files don't need comments, because no\n # single ASCII character is valid (tried them all).  So we manually strip out\n # the comments with sed.  This bug may only be in the Early Access releases.\n-$(T)gcrt1.o: $(srcdir)/config/i386/sol2-gc1.asm $(GCC_PASSES)\n-\tsed -e '/^!/d' <$(srcdir)/config/i386/sol2-gc1.asm >gcrt1.s\n+$(T)gcrt1.o: $(gcc_srcdir)/config/i386/sol2-gc1.asm $(GCC_PASSES)\n+\tsed -e '/^!/d' <$(gcc_srcdir)/config/i386/sol2-gc1.asm >gcrt1.s\n \t$(GCC_FOR_TARGET) $(MULTILIB_CFLAGS) -c -o $(T)gcrt1.o gcrt1.s\n-$(T)crt1.o: $(srcdir)/config/i386/sol2-c1.asm $(GCC_PASSES)\n-\tsed -e '/^!/d' <$(srcdir)/config/i386/sol2-c1.asm >crt1.s\n+$(T)crt1.o: $(gcc_srcdir)/config/i386/sol2-c1.asm $(GCC_PASSES)\n+\tsed -e '/^!/d' <$(gcc_srcdir)/config/i386/sol2-c1.asm >crt1.s\n \t$(GCC_FOR_TARGET) $(MULTILIB_CFLAGS) -c -o $(T)crt1.o crt1.s\n-$(T)crti.o: $(srcdir)/config/i386/sol2-ci.asm $(GCC_PASSES)\n-\tsed -e '/^!/d' <$(srcdir)/config/i386/sol2-ci.asm >crti.s\n+$(T)crti.o: $(gcc_srcdir)/config/i386/sol2-ci.asm $(GCC_PASSES)\n+\tsed -e '/^!/d' <$(gcc_srcdir)/config/i386/sol2-ci.asm >crti.s\n \t$(GCC_FOR_TARGET) $(MULTILIB_CFLAGS) -c -o $(T)crti.o crti.s\n-$(T)crtn.o: $(srcdir)/config/i386/sol2-cn.asm $(GCC_PASSES)\n-\tsed -e '/^!/d' <$(srcdir)/config/i386/sol2-cn.asm >crtn.s\n+$(T)crtn.o: $(gcc_srcdir)/config/i386/sol2-cn.asm $(GCC_PASSES)\n+\tsed -e '/^!/d' <$(gcc_srcdir)/config/i386/sol2-cn.asm >crtn.s\n \t$(GCC_FOR_TARGET) $(MULTILIB_CFLAGS) -c -o $(T)crtn.o crtn.s\n \n # We need to use -fPIC when we are using gcc to compile the routines in", "previous_filename": "gcc/config/i386/t-sol2"}, {"sha": "6315ecd5cbc1e04e97d2999f44bb86ab490fc6dc", "filename": "libgcc/configure", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19523300a00967225f9d377b241c8442aa261792/libgcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19523300a00967225f9d377b241c8442aa261792/libgcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure?ref=19523300a00967225f9d377b241c8442aa261792", "patch": "@@ -3420,6 +3420,31 @@ esac\n # Collect host-machine-specific information.\n . ${srcdir}/config.host\n \n+# Check if Solaris/x86 linker supports ZERO terminator unwind entries.\n+# This is after config.host so we can augment tmake_file.\n+# Link with -nostartfiles -nodefaultlibs since neither are present while\n+# building libgcc.\n+case ${host} in\n+i?86-*-solaris2.1[0-9]*)\n+  cat > conftest.s <<EOF\n+\t.section\t.eh_frame,\"a\",@unwind\n+\t.zero\t4\n+\t.section\t.jcr,\"aw\",@progbits\n+\t.zero\t8\n+EOF\n+  if { ac_try='${CC-cc} -shared -nostartfiles -nodefaultlibs -o conftest.so conftest.s 1>&5'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+      # configure expects config files in libgcc/config, so need a relative\n+      # path here.\n+      tmake_file=\"${tmake_file} ../../gcc/config/i386/t-crtstuff\"\n+  fi\n+  ;;\n+esac\n+\n # Check for visibility support.  This is after config.host so that\n # we can check for asm_hidden_op.\n echo \"$as_me:$LINENO: checking for __attribute__((visibility(\\\"hidden\\\")))\" >&5"}, {"sha": "d48bccce0655fbc44db17eb574c343098fe96014", "filename": "libgcc/configure.ac", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19523300a00967225f9d377b241c8442aa261792/libgcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19523300a00967225f9d377b241c8442aa261792/libgcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure.ac?ref=19523300a00967225f9d377b241c8442aa261792", "patch": "@@ -171,6 +171,26 @@ esac\n # Collect host-machine-specific information.\n . ${srcdir}/config.host\n \n+# Check if Solaris/x86 linker supports ZERO terminator unwind entries.\n+# This is after config.host so we can augment tmake_file.\n+# Link with -nostartfiles -nodefaultlibs since neither are present while\n+# building libgcc.\n+case ${host} in\n+i?86-*-solaris2.1[[0-9]]*)\n+  cat > conftest.s <<EOF\n+\t.section\t.eh_frame,\"a\",@unwind\n+\t.zero\t4\n+\t.section\t.jcr,\"aw\",@progbits\n+\t.zero\t8\n+EOF\n+  if AC_TRY_COMMAND(${CC-cc} -shared -nostartfiles -nodefaultlibs -o conftest.so conftest.s 1>&AS_MESSAGE_LOG_FD); then\n+      # configure expects config files in libgcc/config, so need a relative\n+      # path here.\n+      tmake_file=\"${tmake_file} ../../gcc/config/i386/t-crtstuff\"\n+  fi\n+  ;;\n+esac\n+\n # Check for visibility support.  This is after config.host so that\n # we can check for asm_hidden_op.\n AC_CACHE_CHECK([for __attribute__((visibility(\"hidden\")))],"}]}