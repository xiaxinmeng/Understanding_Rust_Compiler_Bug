{"sha": "3ffa95c25f3f98adb2a5cdb7419a5ffa1e7bc753", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZmYTk1YzI1ZjNmOThhZGIyYTVjZGI3NDE5YTVmZmExZTdiYzc1Mw==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-08-25T20:15:36Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-08-25T20:15:36Z"}, "message": "Convert edge_def.insns.r to rtx_insn *\n\ngcc/\n\t* basic-block.h (struct edge_def). Strengthen \"r\" within\n\tunion edge_def_insns from rtx to rtx_insn *.\n\n\t* cfgexpand.c (pass_expand::execute): Remove now-redundant cast\n\tfrom rtx to rtx_insn *.  Strengthen local \"insns\" from rtx to\n\trtx_insn *.\n\t* cfgrtl.c (commit_one_edge_insertion): Remove now-redundant cast\n\tfrom rtx to rtx_insn *.\n\t* cprop.c (find_bypass_set): Strengthen local \"insn\" from rtx to\n\trtx_insn *.\n\t* postreload-gcse.c (reg_killed_on_edge): Likewise.\n\t(reg_used_on_edge): Likewise.\n\t* tree-cfg.c (gt_ggc_mx): New overload for rtx_insn *&.\n\t(gt_pch_nx): New overload for rtx_insn *&.\n\t* tree-outof-ssa.c (expand_phi_nodes): Strengthen local \"insns\"\n\tfrom rtx to rtx_insn *.\n\nFrom-SVN: r214471", "tree": {"sha": "32fa4b7ac18f8b0e215b46263ff0a089a70a3487", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32fa4b7ac18f8b0e215b46263ff0a089a70a3487"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ffa95c25f3f98adb2a5cdb7419a5ffa1e7bc753", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ffa95c25f3f98adb2a5cdb7419a5ffa1e7bc753", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ffa95c25f3f98adb2a5cdb7419a5ffa1e7bc753", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ffa95c25f3f98adb2a5cdb7419a5ffa1e7bc753/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d8ce2eae8471ebabcc3c7c8af1b0b992911543c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8ce2eae8471ebabcc3c7c8af1b0b992911543c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8ce2eae8471ebabcc3c7c8af1b0b992911543c3"}], "stats": {"total": 55, "additions": 44, "deletions": 11}, "files": [{"sha": "64808645a8c0482fb987bcc78bedfd5bcdf1b358", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ffa95c25f3f98adb2a5cdb7419a5ffa1e7bc753/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ffa95c25f3f98adb2a5cdb7419a5ffa1e7bc753/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ffa95c25f3f98adb2a5cdb7419a5ffa1e7bc753", "patch": "@@ -1,3 +1,22 @@\n+2014-08-25  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* basic-block.h (struct edge_def). Strengthen \"r\" within\n+\tunion edge_def_insns from rtx to rtx_insn *.\n+\n+\t* cfgexpand.c (pass_expand::execute): Remove now-redundant cast\n+\tfrom rtx to rtx_insn *.  Strengthen local \"insns\" from rtx to\n+\trtx_insn *.\n+\t* cfgrtl.c (commit_one_edge_insertion): Remove now-redundant cast\n+\tfrom rtx to rtx_insn *.\n+\t* cprop.c (find_bypass_set): Strengthen local \"insn\" from rtx to\n+\trtx_insn *.\n+\t* postreload-gcse.c (reg_killed_on_edge): Likewise.\n+\t(reg_used_on_edge): Likewise.\n+\t* tree-cfg.c (gt_ggc_mx): New overload for rtx_insn *&.\n+\t(gt_pch_nx): New overload for rtx_insn *&.\n+\t* tree-outof-ssa.c (expand_phi_nodes): Strengthen local \"insns\"\n+\tfrom rtx to rtx_insn *.\n+\n 2014-08-25  David Malcolm  <dmalcolm@redhat.com>\n \n \t* basic-block.h (struct rtl_bb_info): Strengthen field \"footer_\""}, {"sha": "5efe98e7408ddc680bc089fd50ee8cfdf8763bb3", "filename": "gcc/basic-block.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ffa95c25f3f98adb2a5cdb7419a5ffa1e7bc753/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ffa95c25f3f98adb2a5cdb7419a5ffa1e7bc753/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=3ffa95c25f3f98adb2a5cdb7419a5ffa1e7bc753", "patch": "@@ -39,7 +39,7 @@ struct GTY((user)) edge_def {\n   /* Instructions queued on the edge.  */\n   union edge_def_insns {\n     gimple_seq g;\n-    rtx r;\n+    rtx_insn *r;\n   } insns;\n \n   /* Auxiliary info specific to a pass.  */"}, {"sha": "6c2b693c3101100ac46b9e5816dfe492a894a783", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ffa95c25f3f98adb2a5cdb7419a5ffa1e7bc753/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ffa95c25f3f98adb2a5cdb7419a5ffa1e7bc753/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=3ffa95c25f3f98adb2a5cdb7419a5ffa1e7bc753", "patch": "@@ -5865,14 +5865,14 @@ pass_expand::execute (function *fun)\n \t{\n \t  if (e->insns.r)\n \t    {\n-\t      rebuild_jump_labels_chain (as_a <rtx_insn *> (e->insns.r));\n+\t      rebuild_jump_labels_chain (e->insns.r);\n \t      /* Put insns after parm birth, but before\n \t\t NOTE_INSNS_FUNCTION_BEG.  */\n \t      if (e->src == ENTRY_BLOCK_PTR_FOR_FN (fun)\n \t\t  && single_succ_p (ENTRY_BLOCK_PTR_FOR_FN (fun)))\n \t\t{\n-\t\t  rtx insns = e->insns.r;\n-\t\t  e->insns.r = NULL_RTX;\n+\t\t  rtx_insn *insns = e->insns.r;\n+\t\t  e->insns.r = NULL;\n \t\t  if (NOTE_P (parm_birth_insn)\n \t\t      && NOTE_KIND (parm_birth_insn) == NOTE_INSN_FUNCTION_BEG)\n \t\t    emit_insn_before_noloc (insns, parm_birth_insn, e->dest);"}, {"sha": "5a7c1351f74bdc0f4a288269438586c734518bf0", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ffa95c25f3f98adb2a5cdb7419a5ffa1e7bc753/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ffa95c25f3f98adb2a5cdb7419a5ffa1e7bc753/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=3ffa95c25f3f98adb2a5cdb7419a5ffa1e7bc753", "patch": "@@ -1950,8 +1950,8 @@ commit_one_edge_insertion (edge e)\n   basic_block bb;\n \n   /* Pull the insns off the edge now since the edge might go away.  */\n-  insns = safe_as_a <rtx_insn *> (e->insns.r);\n-  e->insns.r = NULL_RTX;\n+  insns = e->insns.r;\n+  e->insns.r = NULL;\n \n   /* Figure out where to put these insns.  If the destination has\n      one predecessor, insert there.  Except for the exit block.  */"}, {"sha": "fa77faac51f5806d014595743066681695910e2c", "filename": "gcc/cprop.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ffa95c25f3f98adb2a5cdb7419a5ffa1e7bc753/gcc%2Fcprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ffa95c25f3f98adb2a5cdb7419a5ffa1e7bc753/gcc%2Fcprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcprop.c?ref=3ffa95c25f3f98adb2a5cdb7419a5ffa1e7bc753", "patch": "@@ -1470,7 +1470,7 @@ find_bypass_set (int regno, int bb)\n static bool\n reg_killed_on_edge (const_rtx reg, const_edge e)\n {\n-  rtx insn;\n+  rtx_insn *insn;\n \n   for (insn = e->insns.r; insn; insn = NEXT_INSN (insn))\n     if (INSN_P (insn) && reg_set_p (reg, insn))"}, {"sha": "9c7b07fcdb49862939aa64621cbc1858a0cbf785", "filename": "gcc/postreload-gcse.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ffa95c25f3f98adb2a5cdb7419a5ffa1e7bc753/gcc%2Fpostreload-gcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ffa95c25f3f98adb2a5cdb7419a5ffa1e7bc753/gcc%2Fpostreload-gcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload-gcse.c?ref=3ffa95c25f3f98adb2a5cdb7419a5ffa1e7bc753", "patch": "@@ -860,7 +860,7 @@ compute_hash_table (void)\n static bool\n reg_killed_on_edge (rtx reg, edge e)\n {\n-  rtx insn;\n+  rtx_insn *insn;\n \n   for (insn = e->insns.r; insn; insn = NEXT_INSN (insn))\n     if (INSN_P (insn) && reg_set_p (reg, insn))\n@@ -877,7 +877,7 @@ reg_killed_on_edge (rtx reg, edge e)\n static bool\n reg_used_on_edge (rtx reg, edge e)\n {\n-  rtx insn;\n+  rtx_insn *insn;\n \n   for (insn = e->insns.r; insn; insn = NEXT_INSN (insn))\n     if (INSN_P (insn) && reg_overlap_mentioned_p (reg, PATTERN (insn)))"}, {"sha": "bdd309a62f6700189dcd42abd562cba1894c3517", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ffa95c25f3f98adb2a5cdb7419a5ffa1e7bc753/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ffa95c25f3f98adb2a5cdb7419a5ffa1e7bc753/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=3ffa95c25f3f98adb2a5cdb7419a5ffa1e7bc753", "patch": "@@ -8611,6 +8611,13 @@ extern void gt_ggc_mx (gimple&);\n extern void gt_ggc_mx (rtx&);\n extern void gt_ggc_mx (basic_block&);\n \n+static void\n+gt_ggc_mx (rtx_insn *& x)\n+{\n+  if (x)\n+    gt_ggc_mx_rtx_def ((void *) x);\n+}\n+\n void\n gt_ggc_mx (edge_def *e)\n {\n@@ -8631,6 +8638,13 @@ extern void gt_pch_nx (gimple&);\n extern void gt_pch_nx (rtx&);\n extern void gt_pch_nx (basic_block&);\n \n+static void\n+gt_pch_nx (rtx_insn *& x)\n+{\n+  if (x)\n+    gt_pch_nx_rtx_def ((void *) x);\n+}\n+\n void\n gt_pch_nx (edge_def *e)\n {"}, {"sha": "2d43bc20c9ba093cd4955e3b00ce9f892d5a9002", "filename": "gcc/tree-outof-ssa.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ffa95c25f3f98adb2a5cdb7419a5ffa1e7bc753/gcc%2Ftree-outof-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ffa95c25f3f98adb2a5cdb7419a5ffa1e7bc753/gcc%2Ftree-outof-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-outof-ssa.c?ref=3ffa95c25f3f98adb2a5cdb7419a5ffa1e7bc753", "patch": "@@ -958,9 +958,9 @@ expand_phi_nodes (struct ssaexpand *sa)\n \t    if (e->insns.r && (e->flags & EDGE_EH)\n \t\t&& !single_pred_p (e->dest))\n \t      {\n-\t\trtx insns = e->insns.r;\n+\t\trtx_insn *insns = e->insns.r;\n \t\tbasic_block bb;\n-\t\te->insns.r = NULL_RTX;\n+\t\te->insns.r = NULL;\n \t\tbb = split_edge (e);\n \t\tsingle_pred_edge (bb)->insns.r = insns;\n \t      }"}]}