{"sha": "88c04a5de2b5f1256f8bde89bc33c8f67c64383d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhjMDRhNWRlMmI1ZjEyNTZmOGJkZTg5YmMzM2M4ZjY3YzY0MzgzZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-05-14T18:09:14Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-05-14T18:09:14Z"}, "message": "re PR debug/44136 (ICE in expand_debug_expr with -mno-sse)\n\n\tPR debug/44136\n\t* cfgexpand.c (expand_debug_expr): If non-memory op0\n\thas BLKmode, return NULL.\n\n\t* gcc.dg/pr44136.c: New test.\n\nFrom-SVN: r159400", "tree": {"sha": "9ce6be546c9401ad7f197db1291d83b6fc4b8241", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ce6be546c9401ad7f197db1291d83b6fc4b8241"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88c04a5de2b5f1256f8bde89bc33c8f67c64383d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88c04a5de2b5f1256f8bde89bc33c8f67c64383d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88c04a5de2b5f1256f8bde89bc33c8f67c64383d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88c04a5de2b5f1256f8bde89bc33c8f67c64383d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1133125eb84a5326b5e59595b00b5ec8add169dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1133125eb84a5326b5e59595b00b5ec8add169dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1133125eb84a5326b5e59595b00b5ec8add169dc"}], "stats": {"total": 41, "additions": 39, "deletions": 2}, "files": [{"sha": "2aa0ddd470439a80de334981749ddbd459303ca0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88c04a5de2b5f1256f8bde89bc33c8f67c64383d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88c04a5de2b5f1256f8bde89bc33c8f67c64383d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=88c04a5de2b5f1256f8bde89bc33c8f67c64383d", "patch": "@@ -1,3 +1,9 @@\n+2010-05-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/44136\n+\t* cfgexpand.c (expand_debug_expr): If non-memory op0\n+\thas BLKmode, return NULL.\n+\n 2010-05-14  Harsha Jagasia  <harsha.jagasia@amd.com>\n \n \t* config.gcc: Add support for --with-cpu option for bdver1."}, {"sha": "5c42c1c1bf12e5e780f37e7ed4e14988b3c0a9e0", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88c04a5de2b5f1256f8bde89bc33c8f67c64383d/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88c04a5de2b5f1256f8bde89bc33c8f67c64383d/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=88c04a5de2b5f1256f8bde89bc33c8f67c64383d", "patch": "@@ -2561,13 +2561,14 @@ expand_debug_expr (tree exp)\n         if (bitpos < 0)\n           return NULL;\n \n+\tif (GET_MODE (op0) == BLKmode)\n+\t  return NULL;\n+\n \tif ((bitpos % BITS_PER_UNIT) == 0\n \t    && bitsize == GET_MODE_BITSIZE (mode1))\n \t  {\n \t    enum machine_mode opmode = GET_MODE (op0);\n \n-\t    gcc_assert (opmode != BLKmode);\n-\n \t    if (opmode == VOIDmode)\n \t      opmode = mode1;\n "}, {"sha": "92f955991be47bc46e21cf9bfbc524de7fce8cb0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88c04a5de2b5f1256f8bde89bc33c8f67c64383d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88c04a5de2b5f1256f8bde89bc33c8f67c64383d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=88c04a5de2b5f1256f8bde89bc33c8f67c64383d", "patch": "@@ -2,6 +2,9 @@\n \n \t* gfortran.dg/gomp/pr44036-1.f90: Adjust.\n \n+\tPR debug/44136\n+\t* gcc.dg/pr44136.c: New test.\n+\n 2010-05-14  Shujing Zhao  <pearly.zhao@oracle.com>\n \n \tPR c++/30566"}, {"sha": "71c21ab037146ffa99bd42e839240027680fab43", "filename": "gcc/testsuite/gcc.dg/pr44136.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88c04a5de2b5f1256f8bde89bc33c8f67c64383d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44136.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88c04a5de2b5f1256f8bde89bc33c8f67c64383d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44136.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44136.c?ref=88c04a5de2b5f1256f8bde89bc33c8f67c64383d", "patch": "@@ -0,0 +1,27 @@\n+/* PR debug/44136 */\n+/* { dg-do compile } */\n+/* { dg-options \"-w -O2 -g\" } */\n+/* { dg-options \"-w -O2 -g -mno-sse\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+\n+#define vector __attribute((vector_size(16)))\n+vector float a;\n+\n+float\n+foo (float b)\n+{\n+  vector float c = { 0, 0, 0, 0 };\n+  vector float d = { 0, 0, 0, 0 };\n+  d += c;\n+  return ((float *)&c)[2];\n+}\n+\n+float\n+bar (vector float a, int b, vector float c)\n+{\n+  vector float e = c * a;\n+  a = (vector float) { 0, 0, 0, 0 };\n+  c = (vector float) { 0, 0, 0, 0 };\n+  float d = ((float *)&a)[0];\n+  float f = ((float *)&c)[0];\n+  return d * f;\n+}"}]}