{"sha": "8673b6713e9457187cc9ecbefe949fb2393cb057", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY3M2I2NzEzZTk0NTcxODdjYzllY2JlZmU5NDlmYjIzOTNjYjA1Nw==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2015-01-14T13:58:35Z"}, "committer": {"name": "Andrew Macleod", "email": "amacleod@gcc.gnu.org", "date": "2015-01-14T13:58:35Z"}, "message": "re PR middle-end/59448 (Code generation doesn't respect C11 address-dependency)\n\n\n2015-01-14  Andrew MacLeod  <amacleod@redhat.com>\n\n\tPR middle-end/59448\n\t* builtins.c (get_memmodel): Promote consume to acquire always.\n\t* testsuite/gcc.dg/atomic-invalid.c: Remove obselete test for illegal\n\tconsume in an atomic_exchange.\n\nFrom-SVN: r219601", "tree": {"sha": "80e4f051bc5ec02d383c65782ba5694b86b0f3aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80e4f051bc5ec02d383c65782ba5694b86b0f3aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8673b6713e9457187cc9ecbefe949fb2393cb057", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8673b6713e9457187cc9ecbefe949fb2393cb057", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8673b6713e9457187cc9ecbefe949fb2393cb057", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8673b6713e9457187cc9ecbefe949fb2393cb057/comments", "author": null, "committer": null, "parents": [{"sha": "4b54ab976e5b0fd88580927adc6b8d5f2bd89044", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b54ab976e5b0fd88580927adc6b8d5f2bd89044", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b54ab976e5b0fd88580927adc6b8d5f2bd89044"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "a8dc1d36f7479629391b0290bc46fd37d0051bef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8673b6713e9457187cc9ecbefe949fb2393cb057/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8673b6713e9457187cc9ecbefe949fb2393cb057/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8673b6713e9457187cc9ecbefe949fb2393cb057", "patch": "@@ -1,3 +1,8 @@\n+2015-01-14  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR middle-end/59448\n+\t* builtins.c (get_memmodel): Promote consume to acquire always.\n+\n 2014-01-14  Ilya Tocar  <ilya.tocar@intel.com>\n \n \tPR target/64386"}, {"sha": "c8b1940e10a27f68c52afc0ac218d47420bcbffc", "filename": "gcc/builtins.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8673b6713e9457187cc9ecbefe949fb2393cb057/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8673b6713e9457187cc9ecbefe949fb2393cb057/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=8673b6713e9457187cc9ecbefe949fb2393cb057", "patch": "@@ -5365,6 +5365,11 @@ get_memmodel (tree exp)\n       return MEMMODEL_SEQ_CST;\n     }\n \n+  /* Workaround for Bugzilla 59448. GCC doesn't track consume properly, so\n+     be conservative and promote consume to acquire.  */\n+  if (val == MEMMODEL_CONSUME)\n+    val = MEMMODEL_ACQUIRE;\n+\n   return (enum memmodel) val;\n }\n "}, {"sha": "3df2a2c7185fea434d543069d4833e82645315d1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8673b6713e9457187cc9ecbefe949fb2393cb057/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8673b6713e9457187cc9ecbefe949fb2393cb057/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8673b6713e9457187cc9ecbefe949fb2393cb057", "patch": "@@ -1,3 +1,9 @@\n+2015-01-14  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR middle-end/59448\n+\t* gcc.dg/atomic-invalid.c: Remove obselete test for illegal consume in\n+\tan atomic_exchange.\n+\n 2014-01-14  Ilya Tocar  <ilya.tocar@intel.com>\n \n \tPR target/64386"}, {"sha": "6404ae86f5b39cf9c30e6155ebcc56054b62f4ff", "filename": "gcc/testsuite/gcc.dg/atomic-invalid.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8673b6713e9457187cc9ecbefe949fb2393cb057/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-invalid.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8673b6713e9457187cc9ecbefe949fb2393cb057/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-invalid.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-invalid.c?ref=8673b6713e9457187cc9ecbefe949fb2393cb057", "patch": "@@ -17,8 +17,6 @@ main ()\n   __atomic_compare_exchange_n (&i, &e, 1, 0, __ATOMIC_SEQ_CST, __ATOMIC_RELEASE); /* { dg-error \"invalid failure memory\" } */\n   __atomic_compare_exchange_n (&i, &e, 1, 1, __ATOMIC_SEQ_CST, __ATOMIC_ACQ_REL); /* { dg-error \"invalid failure memory\" } */\n \n-  __atomic_exchange_n (&i, 1, __ATOMIC_CONSUME); /* { dg-error \"invalid memory model\" } */\n-\n   __atomic_load_n (&i, __ATOMIC_RELEASE); /* { dg-error \"invalid memory model\" } */\n   __atomic_load_n (&i, __ATOMIC_ACQ_REL); /* { dg-error \"invalid memory model\" } */\n "}]}