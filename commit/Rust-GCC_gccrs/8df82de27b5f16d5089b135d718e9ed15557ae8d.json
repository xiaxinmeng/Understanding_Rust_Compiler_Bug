{"sha": "8df82de27b5f16d5089b135d718e9ed15557ae8d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGRmODJkZTI3YjVmMTZkNTA4OWIxMzVkNzE4ZTllZDE1NTU3YWU4ZA==", "commit": {"author": {"name": "Fei Yang", "email": "felix.yang@huawei.com", "date": "2020-06-13T02:42:49Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-06-15T09:10:58Z"}, "message": "vect: Use LOOP_VINFO_DATAREFS and LOOP_VINFO_DDRS consistently\n\nMinor code refactorings in tree-vect-data-refs.c and tree-vect-loop.c.\nUse LOOP_VINFO_DATAREFS and LOOP_VINFO_DDRS when possible and rename\nseveral parameters to make code more consistent.\n\n2020-06-13  Felix Yang  <felix.yang@huawei.com>\n\ngcc/\n\t* tree-vect-data-refs.c (vect_verify_datarefs_alignment): Rename\n\tparameter to loop_vinfo and update uses.  Use LOOP_VINFO_DATAREFS\n\twhen possible.\n\t(vect_analyze_data_refs_alignment): Likewise, and use LOOP_VINFO_DDRS\n\twhen possible.\n\t* tree-vect-loop.c (vect_dissolve_slp_only_groups): Use\n\tLOOP_VINFO_DATAREFS when possible.\n\t(update_epilogue_loop_vinfo): Likewise.", "tree": {"sha": "24d3ae1110f199cf5c6c80c8426d7c8ecc7155c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24d3ae1110f199cf5c6c80c8426d7c8ecc7155c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8df82de27b5f16d5089b135d718e9ed15557ae8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8df82de27b5f16d5089b135d718e9ed15557ae8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8df82de27b5f16d5089b135d718e9ed15557ae8d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8df82de27b5f16d5089b135d718e9ed15557ae8d/comments", "author": null, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4331490bc0ef959062e46d8133ae943cf0a05209", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4331490bc0ef959062e46d8133ae943cf0a05209", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4331490bc0ef959062e46d8133ae943cf0a05209"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "4164bf4743c53cff07e7e2432b5492110dd05d25", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8df82de27b5f16d5089b135d718e9ed15557ae8d/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8df82de27b5f16d5089b135d718e9ed15557ae8d/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=8df82de27b5f16d5089b135d718e9ed15557ae8d", "patch": "@@ -1189,19 +1189,19 @@ verify_data_ref_alignment (vec_info *vinfo, dr_vec_info *dr_info)\n    handled with respect to alignment.  */\n \n opt_result\n-vect_verify_datarefs_alignment (loop_vec_info vinfo)\n+vect_verify_datarefs_alignment (loop_vec_info loop_vinfo)\n {\n-  vec<data_reference_p> datarefs = vinfo->shared->datarefs;\n+  vec<data_reference_p> datarefs = LOOP_VINFO_DATAREFS (loop_vinfo);\n   struct data_reference *dr;\n   unsigned int i;\n \n   FOR_EACH_VEC_ELT (datarefs, i, dr)\n     {\n-      dr_vec_info *dr_info = vinfo->lookup_dr (dr);\n+      dr_vec_info *dr_info = loop_vinfo->lookup_dr (dr);\n       if (!vect_relevant_for_alignment_p (dr_info))\n \tcontinue;\n \n-      opt_result res = verify_data_ref_alignment (vinfo, dr_info);\n+      opt_result res = verify_data_ref_alignment (loop_vinfo, dr_info);\n       if (!res)\n \treturn res;\n     }\n@@ -2379,28 +2379,28 @@ vect_find_same_alignment_drs (vec_info *vinfo, data_dependence_relation *ddr)\n    Return FALSE if a data reference is found that cannot be vectorized.  */\n \n opt_result\n-vect_analyze_data_refs_alignment (loop_vec_info vinfo)\n+vect_analyze_data_refs_alignment (loop_vec_info loop_vinfo)\n {\n   DUMP_VECT_SCOPE (\"vect_analyze_data_refs_alignment\");\n \n   /* Mark groups of data references with same alignment using\n      data dependence information.  */\n-  vec<ddr_p> ddrs = vinfo->shared->ddrs;\n+  vec<ddr_p> ddrs = LOOP_VINFO_DDRS (loop_vinfo);\n   struct data_dependence_relation *ddr;\n   unsigned int i;\n \n   FOR_EACH_VEC_ELT (ddrs, i, ddr)\n-    vect_find_same_alignment_drs (vinfo, ddr);\n+    vect_find_same_alignment_drs (loop_vinfo, ddr);\n \n-  vec<data_reference_p> datarefs = vinfo->shared->datarefs;\n+  vec<data_reference_p> datarefs = LOOP_VINFO_DATAREFS (loop_vinfo);\n   struct data_reference *dr;\n \n-  vect_record_base_alignments (vinfo);\n+  vect_record_base_alignments (loop_vinfo);\n   FOR_EACH_VEC_ELT (datarefs, i, dr)\n     {\n-      dr_vec_info *dr_info = vinfo->lookup_dr (dr);\n+      dr_vec_info *dr_info = loop_vinfo->lookup_dr (dr);\n       if (STMT_VINFO_VECTORIZABLE (dr_info->stmt))\n-\tvect_compute_data_ref_alignment (vinfo, dr_info);\n+\tvect_compute_data_ref_alignment (loop_vinfo, dr_info);\n     }\n \n   return opt_result::success ();"}, {"sha": "08c9f1196260a3e981fdf016a7a54aa65b74df0d", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8df82de27b5f16d5089b135d718e9ed15557ae8d/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8df82de27b5f16d5089b135d718e9ed15557ae8d/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=8df82de27b5f16d5089b135d718e9ed15557ae8d", "patch": "@@ -1843,7 +1843,7 @@ vect_dissolve_slp_only_groups (loop_vec_info loop_vinfo)\n \n   DUMP_VECT_SCOPE (\"vect_dissolve_slp_only_groups\");\n \n-  vec<data_reference_p> datarefs = loop_vinfo->shared->datarefs;\n+  vec<data_reference_p> datarefs = LOOP_VINFO_DATAREFS (loop_vinfo);\n   FOR_EACH_VEC_ELT (datarefs, i, dr)\n     {\n       gcc_assert (DR_REF (dr));\n@@ -8478,7 +8478,7 @@ update_epilogue_loop_vinfo (class loop *epilogue, tree advance)\n     }\n \n   struct data_reference *dr;\n-  vec<data_reference_p> datarefs = epilogue_vinfo->shared->datarefs;\n+  vec<data_reference_p> datarefs = LOOP_VINFO_DATAREFS (epilogue_vinfo);\n   FOR_EACH_VEC_ELT (datarefs, i, dr)\n     {\n       orig_stmt = DR_STMT (dr);"}]}