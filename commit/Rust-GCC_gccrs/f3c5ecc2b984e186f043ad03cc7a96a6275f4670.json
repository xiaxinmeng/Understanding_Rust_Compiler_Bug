{"sha": "f3c5ecc2b984e186f043ad03cc7a96a6275f4670", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjNjNWVjYzJiOTg0ZTE4NmYwNDNhZDAzY2M3YTk2YTYyNzVmNDY3MA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-06-02T12:51:57Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-06-02T12:51:57Z"}, "message": "Fix first match heuristics\n\n\t* predict.c (combine_predictions_for_bb): Fix first match in\n\tcases where a first predictor contains more than one occurence\n\tin list of predictors.  Take the best value in such case.\n\t* gcc.dg/predict-9.c: New test.\n\nFrom-SVN: r237036", "tree": {"sha": "e39cf66c60d50eee2d9159123f798e6d3765277e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e39cf66c60d50eee2d9159123f798e6d3765277e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3c5ecc2b984e186f043ad03cc7a96a6275f4670", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3c5ecc2b984e186f043ad03cc7a96a6275f4670", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3c5ecc2b984e186f043ad03cc7a96a6275f4670", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3c5ecc2b984e186f043ad03cc7a96a6275f4670/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a91807c5fc51615156e6858ae530247450c8c0b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a91807c5fc51615156e6858ae530247450c8c0b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a91807c5fc51615156e6858ae530247450c8c0b8"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "d4af6afc87e3e1d1b78ad3d2ce2e92b8a6abd56e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3c5ecc2b984e186f043ad03cc7a96a6275f4670/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3c5ecc2b984e186f043ad03cc7a96a6275f4670/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f3c5ecc2b984e186f043ad03cc7a96a6275f4670", "patch": "@@ -1,3 +1,9 @@\n+2016-06-02  Martin Liska  <mliska@suse.cz>\n+\n+\t* predict.c (combine_predictions_for_bb): Fix first match in\n+\tcases where a first predictor contains more than one occurence\n+\tin list of predictors.  Take the best value in such case.\n+\n 2016-06-02  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR rtl-optimization/71295"}, {"sha": "429f44e02714db4efddd13aa940ad8167eca6584", "filename": "gcc/predict.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3c5ecc2b984e186f043ad03cc7a96a6275f4670/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3c5ecc2b984e186f043ad03cc7a96a6275f4670/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=f3c5ecc2b984e186f043ad03cc7a96a6275f4670", "patch": "@@ -939,7 +939,7 @@ combine_predictions_for_bb (basic_block bb, bool dry_run)\n \t\t   pred2; pred2 = pred2->ep_next)\n \t       if (pred2 != pred && pred2->ep_predictor == pred->ep_predictor)\n \t         {\n-\t           int probability2 = pred->ep_probability;\n+\t\t   int probability2 = pred2->ep_probability;\n \n \t\t   if (pred2->ep_edge != first)\n \t\t     probability2 = REG_BR_PROB_BASE - probability2;"}, {"sha": "fcf6bbd2279d079df479516416e8d2c2097b7726", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3c5ecc2b984e186f043ad03cc7a96a6275f4670/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3c5ecc2b984e186f043ad03cc7a96a6275f4670/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f3c5ecc2b984e186f043ad03cc7a96a6275f4670", "patch": "@@ -1,3 +1,7 @@\n+2016-06-02  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc.dg/predict-9.c: New test.\n+\n 2016-06-02  Jakub Jelinek  <jakub@redhat.com>\n \n \t* lib/gcc-dg.exp (cleanup-after-saved-dg-test): Add missing"}, {"sha": "59be16e6842b8a810303ca9f5bffb224b1576e72", "filename": "gcc/testsuite/gcc.dg/predict-9.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3c5ecc2b984e186f043ad03cc7a96a6275f4670/gcc%2Ftestsuite%2Fgcc.dg%2Fpredict-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3c5ecc2b984e186f043ad03cc7a96a6275f4670/gcc%2Ftestsuite%2Fgcc.dg%2Fpredict-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpredict-9.c?ref=f3c5ecc2b984e186f043ad03cc7a96a6275f4670", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-profile_estimate\" } */\n+\n+extern int global;\n+extern int global2;\n+extern int global3;\n+\n+void foo (int base)\n+{\n+  int i;\n+  while (global < 10)\n+  {\n+    if(global || global2 || global3)\n+      return;\n+\n+    for (i = base; i < 10; i++)\n+      if (i > 123)\n+\treturn;\n+  }\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"first match heuristics: 2.0%\" 4 \"profile_estimate\"} } */\n+/* { dg-final { scan-tree-dump-times \"first match heuristics: 4.5%\" 0 \"profile_estimate\"} } */"}]}