{"sha": "9105757a59b890194ebf5b4fcbacd58db34ef332", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTEwNTc1N2E1OWI4OTAxOTRlYmY1YjRmY2JhY2Q1OGRiMzRlZjMzMg==", "commit": {"author": {"name": "Vladimir N. Makarov", "email": "vmakarov@redhat.com", "date": "2021-03-05T16:41:25Z"}, "committer": {"name": "Vladimir N. Makarov", "email": "vmakarov@redhat.com", "date": "2021-03-05T16:44:06Z"}, "message": "[PR99378] LRA: Skip decomposing address\tfor asm insn operand with unknown constraint.\n\n  Function get_constraint_type returns CT__UNKNOWN for empty constraint\nand CT_FIXED_FORM for \"X\".  So process_address_1 skipped\ndecompose_mem_address only for \"X\" constraint.  To do the same for empty\nconstraint, skip decompose_mem_address for CT__UNKNOWN.\n\ngcc/ChangeLog:\n\n\tPR target/99378\n\t* lra-constraints.c (process_address_1): Skip decomposing address\n\tfor asm insn operand with unknown constraint.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/99378\n\t* gcc.target/i386/pr99123-2.c: New.", "tree": {"sha": "6078c3050951a6d80ed41effc1954f87182f5926", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6078c3050951a6d80ed41effc1954f87182f5926"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9105757a59b890194ebf5b4fcbacd58db34ef332", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9105757a59b890194ebf5b4fcbacd58db34ef332", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9105757a59b890194ebf5b4fcbacd58db34ef332", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9105757a59b890194ebf5b4fcbacd58db34ef332/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8188b7d7382e4a74af5dd6a125e76e8d43a68a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8188b7d7382e4a74af5dd6a125e76e8d43a68a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8188b7d7382e4a74af5dd6a125e76e8d43a68a5"}], "stats": {"total": 56, "additions": 54, "deletions": 2}, "files": [{"sha": "9253690561a2f0d860e46319e789f63e995ce87f", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9105757a59b890194ebf5b4fcbacd58db34ef332/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9105757a59b890194ebf5b4fcbacd58db34ef332/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=9105757a59b890194ebf5b4fcbacd58db34ef332", "patch": "@@ -3450,8 +3450,9 @@ process_address_1 (int nop, bool check_only_p,\n      i.e. bcst_mem_operand in i386 backend.  */\n   else if (MEM_P (mem)\n \t   && !(INSN_CODE (curr_insn) < 0\n-\t\t&& get_constraint_type (cn) == CT_FIXED_FORM\n-\t        && constraint_satisfied_p (op, cn)))\n+\t\t&& (cn == CONSTRAINT__UNKNOWN\n+\t\t    || (get_constraint_type (cn) == CT_FIXED_FORM\n+\t\t\t&& constraint_satisfied_p (op, cn)))))\n     decompose_mem_address (&ad, mem);\n   else if (GET_CODE (op) == SUBREG\n \t   && MEM_P (SUBREG_REG (op)))"}, {"sha": "def4eae3c9d171f622de0b36eb11d84f4871f58f", "filename": "gcc/testsuite/gcc.target/i386/pr99123-2.c", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9105757a59b890194ebf5b4fcbacd58db34ef332/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr99123-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9105757a59b890194ebf5b4fcbacd58db34ef332/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr99123-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr99123-2.c?ref=9105757a59b890194ebf5b4fcbacd58db34ef332", "patch": "@@ -0,0 +1,51 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -funroll-loops\" } */\n+\n+static inline void *\n+baz (void *s, unsigned long c, unsigned int count)\n+{\n+  int d0, d1;\n+  __asm__ __volatile__ (\"\"\n+                        : \"=&c\" (d0), \"=&D\" (d1)\n+                        :\"a\" (c), \"q\" (count), \"0\" (count / 4), \"\" ((long) s)   /// \"1\"\n+                        :\"memory\");\n+  return s;\n+}\n+\n+struct A\n+{\n+  unsigned long *a;\n+};\n+\n+inline static void *\n+bar (struct A *x, int y)\n+{\n+  char *ptr;\n+\n+  ptr = (void *) x->a[y >> 12];\n+  ptr += y % (1UL << 12);\n+  return (void *) ptr;\n+}\n+\n+int\n+foo (struct A *x, unsigned int *y, int z, int u)\n+{\n+  int a, b, c, d, e;\n+\n+  z += *y;\n+  c = z + u;\n+  a = (z >> 12) + 1;\n+  do\n+    {\n+      b = (a << 12);\n+      d = b - z;\n+      e = c - z;\n+      if (e < d)\n+        d = e;\n+      baz (bar (x, z), 0, d);\n+      z = b;\n+      a++;\n+    }\n+  while (z < c);\n+  return 0;\n+}"}]}