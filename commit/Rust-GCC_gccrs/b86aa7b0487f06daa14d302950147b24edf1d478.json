{"sha": "b86aa7b0487f06daa14d302950147b24edf1d478", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg2YWE3YjA0ODdmMDZkYWExNGQzMDI5NTAxNDdiMjRlZGYxZDQ3OA==", "commit": {"author": {"name": "Bo Thorsen", "email": "bo@suse.de", "date": "2002-05-27T13:54:44Z"}, "committer": {"name": "Bo Thorsen", "email": "bo@gcc.gnu.org", "date": "2002-05-27T13:54:44Z"}, "message": "ffi.c (ffi_prep_args): Remove unused variable and fix formatting.\n\n2002-05-27  Bo Thorsen  <bo@suse.de>\n\n\t* src/x86/ffi.c (ffi_prep_args): Remove unused variable and\n\tfix formatting.\n\nFrom-SVN: r53926", "tree": {"sha": "a73c432d6339233c1f180b6e58b4e4443d00a053", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a73c432d6339233c1f180b6e58b4e4443d00a053"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b86aa7b0487f06daa14d302950147b24edf1d478", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b86aa7b0487f06daa14d302950147b24edf1d478", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b86aa7b0487f06daa14d302950147b24edf1d478", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b86aa7b0487f06daa14d302950147b24edf1d478/comments", "author": null, "committer": null, "parents": [{"sha": "d55bc081750ac5dba90e6043071408ff6d7f29ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d55bc081750ac5dba90e6043071408ff6d7f29ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d55bc081750ac5dba90e6043071408ff6d7f29ba"}], "stats": {"total": 103, "additions": 51, "deletions": 52}, "files": [{"sha": "b510f51a41cf10bd415521150d4d0a1705523ba5", "filename": "libffi/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b86aa7b0487f06daa14d302950147b24edf1d478/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b86aa7b0487f06daa14d302950147b24edf1d478/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=b86aa7b0487f06daa14d302950147b24edf1d478", "patch": "@@ -1,3 +1,8 @@\n+2002-05-27  Bo Thorsen  <bo@suse.de>\n+\n+\t* src/x86/ffi.c (ffi_prep_args): Remove unused variable and\n+\tfix formatting.\n+\n 2002-05-13  Andreas Tobler  <a.tobler@schweiz.ch>\n \n \t* src/powerpc/ffi_darwin.c (ffi_prep_closure): Declare fd at"}, {"sha": "b64265bb3d4efe25819187db2ae8abab814a3d53", "filename": "libffi/src/x86/ffi.c", "status": "modified", "additions": 46, "deletions": 52, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b86aa7b0487f06daa14d302950147b24edf1d478/libffi%2Fsrc%2Fx86%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b86aa7b0487f06daa14d302950147b24edf1d478/libffi%2Fsrc%2Fx86%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fx86%2Fffi.c?ref=b86aa7b0487f06daa14d302950147b24edf1d478", "patch": "@@ -37,20 +37,19 @@ void ffi_prep_args(char *stack, extended_cif *ecif)\n {\n   register unsigned int i;\n   register int tmp;\n-  register unsigned int avn;\n   register void **p_argv;\n   register char *argp;\n   register ffi_type **p_arg;\n \n   tmp = 0;\n   argp = stack;\n \n-  if ( ecif->cif->rtype->type == FFI_TYPE_STRUCT ) {\n-    *(void **) argp = ecif->rvalue;\n-    argp += 4;\n-  }\n+  if (ecif->cif->rtype->type == FFI_TYPE_STRUCT)\n+    {\n+      *(void **) argp = ecif->rvalue;\n+      argp += 4;\n+    }\n \n-  avn = ecif->cif->nargs;\n   p_argv = ecif->avalue;\n \n   for (i = ecif->cif->nargs, p_arg = ecif->cif->arg_types;\n@@ -60,58 +59,53 @@ void ffi_prep_args(char *stack, extended_cif *ecif)\n       size_t z;\n \n       /* Align if necessary */\n-      if (((*p_arg)->alignment - 1) & (unsigned) argp) {\n+      if (((*p_arg)->alignment - 1) & (unsigned) argp)\n \targp = (char *) ALIGN(argp, (*p_arg)->alignment);\n-      }\n \n-      if (avn != 0) \n+      z = (*p_arg)->size;\n+      if (z < sizeof(int))\n \t{\n-\t  avn--;\n-\t  z = (*p_arg)->size;\n-\t  if (z < sizeof(int))\n-\t    {\n-\t      z = sizeof(int);\n-\t      switch ((*p_arg)->type)\n-\t\t{\n-\t\tcase FFI_TYPE_SINT8:\n-\t\t  *(signed int *) argp = (signed int)*(SINT8 *)(* p_argv);\n-\t\t  break;\n-\t\t  \n-\t\tcase FFI_TYPE_UINT8:\n-\t\t  *(unsigned int *) argp = (unsigned int)*(UINT8 *)(* p_argv);\n-\t\t  break;\n-\t\t  \n-\t\tcase FFI_TYPE_SINT16:\n-\t\t  *(signed int *) argp = (signed int)*(SINT16 *)(* p_argv);\n-\t\t  break;\n-\t\t  \n-\t\tcase FFI_TYPE_UINT16:\n-\t\t  *(unsigned int *) argp = (unsigned int)*(UINT16 *)(* p_argv);\n-\t\t  break;\n-\t\t  \n-\t\tcase FFI_TYPE_SINT32:\n-\t\t  *(signed int *) argp = (signed int)*(SINT32 *)(* p_argv);\n-\t\t  break;\n-\t\t  \n-\t\tcase FFI_TYPE_UINT32:\n-\t\t  *(unsigned int *) argp = (unsigned int)*(UINT32 *)(* p_argv);\n-\t\t  break;\n-\n-\t\tcase FFI_TYPE_STRUCT:\n-\t\t  *(unsigned int *) argp = (unsigned int)*(UINT32 *)(* p_argv);\n-\t\t  break;\n-\n-\t\tdefault:\n-\t\t  FFI_ASSERT(0);\n-\t\t}\n-\t    }\n-\t  else\n+\t  z = sizeof(int);\n+\t  switch ((*p_arg)->type)\n \t    {\n-\t      memcpy(argp, *p_argv, z);\n+\t    case FFI_TYPE_SINT8:\n+\t      *(signed int *) argp = (signed int)*(SINT8 *)(* p_argv);\n+\t      break;\n+\n+\t    case FFI_TYPE_UINT8:\n+\t      *(unsigned int *) argp = (unsigned int)*(UINT8 *)(* p_argv);\n+\t      break;\n+\n+\t    case FFI_TYPE_SINT16:\n+\t      *(signed int *) argp = (signed int)*(SINT16 *)(* p_argv);\n+\t      break;\n+\n+\t    case FFI_TYPE_UINT16:\n+\t      *(unsigned int *) argp = (unsigned int)*(UINT16 *)(* p_argv);\n+\t      break;\n+\n+\t    case FFI_TYPE_SINT32:\n+\t      *(signed int *) argp = (signed int)*(SINT32 *)(* p_argv);\n+\t      break;\n+\n+\t    case FFI_TYPE_UINT32:\n+\t      *(unsigned int *) argp = (unsigned int)*(UINT32 *)(* p_argv);\n+\t      break;\n+\n+\t    case FFI_TYPE_STRUCT:\n+\t      *(unsigned int *) argp = (unsigned int)*(UINT32 *)(* p_argv);\n+\t      break;\n+\n+\t    default:\n+\t      FFI_ASSERT(0);\n \t    }\n-\t  p_argv++;\n-\t  argp += z;\n \t}\n+      else\n+\t{\n+\t  memcpy(argp, *p_argv, z);\n+\t}\n+      p_argv++;\n+      argp += z;\n     }\n   \n   return;"}]}