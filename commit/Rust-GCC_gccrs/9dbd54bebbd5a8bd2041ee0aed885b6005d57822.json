{"sha": "9dbd54bebbd5a8bd2041ee0aed885b6005d57822", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWRiZDU0YmViYmQ1YThiZDIwNDFlZTBhZWQ4ODViNjAwNWQ1NzgyMg==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2008-03-11T23:37:11Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2008-03-11T23:37:11Z"}, "message": "pa.h (TARGET_LONG_PIC_SDIFF_CALL): Conditionalize define on TARGET_HPUX.\n\n\t* pa.h (TARGET_LONG_PIC_SDIFF_CALL): Conditionalize define on\n\tTARGET_HPUX.  Revise comment.\n\t(TARGET_LONG_PIC_PCREL_CALL): Revise comment.\n\t* pa.c (output_call): Update for revised TARGET_LONG_PIC_SDIFF_CALL.\n\tUse sr4 variant of `be' instruction when not generating PIC code.\n\t(attr_length_call): Adjust for above change.\n\nFrom-SVN: r133123", "tree": {"sha": "d6bba49c62a890cfdc564a3f9c7b0ec38bd48069", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6bba49c62a890cfdc564a3f9c7b0ec38bd48069"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9dbd54bebbd5a8bd2041ee0aed885b6005d57822", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dbd54bebbd5a8bd2041ee0aed885b6005d57822", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9dbd54bebbd5a8bd2041ee0aed885b6005d57822", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dbd54bebbd5a8bd2041ee0aed885b6005d57822/comments", "author": null, "committer": null, "parents": [{"sha": "76a7d3ca5162b468a9d44ecbc3efcd2ecfd15f9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76a7d3ca5162b468a9d44ecbc3efcd2ecfd15f9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76a7d3ca5162b468a9d44ecbc3efcd2ecfd15f9a"}], "stats": {"total": 56, "additions": 32, "deletions": 24}, "files": [{"sha": "f004924f8f27138196abf11cbe8f5650f6fa1ac2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dbd54bebbd5a8bd2041ee0aed885b6005d57822/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dbd54bebbd5a8bd2041ee0aed885b6005d57822/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9dbd54bebbd5a8bd2041ee0aed885b6005d57822", "patch": "@@ -1,3 +1,12 @@\n+2008-03-11  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\t* pa.h (TARGET_LONG_PIC_SDIFF_CALL): Conditionalize define on\n+\tTARGET_HPUX.  Revise comment.\n+\t(TARGET_LONG_PIC_PCREL_CALL): Revise comment.\n+\t* pa.c (output_call): Update for revised TARGET_LONG_PIC_SDIFF_CALL.\n+\tUse sr4 variant of `be' instruction when not generating PIC code.\n+\t(attr_length_call): Adjust for above change.\n+\n 2008-03-11  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \t* ipa-reference.c (static_execute): Remove module_statics_const and"}, {"sha": "8076c4073ff1d00382ec6a6dc3d03efcc6fe8698", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 11, "deletions": 13, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dbd54bebbd5a8bd2041ee0aed885b6005d57822/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dbd54bebbd5a8bd2041ee0aed885b6005d57822/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=9dbd54bebbd5a8bd2041ee0aed885b6005d57822", "patch": "@@ -7417,14 +7417,13 @@ attr_length_call (rtx insn, int sibcall)\n     length += 12;\n \n   /* long pc-relative branch sequence.  */\n-  else if ((TARGET_SOM && TARGET_LONG_PIC_SDIFF_CALL)\n-\t   || (TARGET_64BIT && !TARGET_GAS)\n+  else if (TARGET_LONG_PIC_SDIFF_CALL\n \t   || (TARGET_GAS && !TARGET_SOM\n \t       && (TARGET_LONG_PIC_PCREL_CALL || local_call)))\n     {\n       length += 20;\n \n-      if (!TARGET_PA_20 && !TARGET_NO_SPACE_REGS)\n+      if (!TARGET_PA_20 && !TARGET_NO_SPACE_REGS && flag_pic)\n \tlength += 8;\n     }\n \n@@ -7444,7 +7443,7 @@ attr_length_call (rtx insn, int sibcall)\n \t  if (!sibcall)\n \t    length += 8;\n \n-\t  if (!TARGET_NO_SPACE_REGS)\n+\t  if (!TARGET_NO_SPACE_REGS && flag_pic)\n \t    length += 8;\n \t}\n     }\n@@ -7528,7 +7527,7 @@ output_call (rtx insn, rtx call_dest, int sibcall)\n \t     of increasing length and complexity.  In most cases,\n              they don't allow an instruction in the delay slot.  */\n \t  if (!((TARGET_LONG_ABS_CALL || local_call) && !flag_pic)\n-\t      && !(TARGET_SOM && TARGET_LONG_PIC_SDIFF_CALL)\n+\t      && !TARGET_LONG_PIC_SDIFF_CALL\n \t      && !(TARGET_GAS && !TARGET_SOM\n \t\t   && (TARGET_LONG_PIC_PCREL_CALL || local_call))\n \t      && !TARGET_64BIT)\n@@ -7574,13 +7573,12 @@ output_call (rtx insn, rtx call_dest, int sibcall)\n \t    }\n \t  else\n \t    {\n-\t      if ((TARGET_SOM && TARGET_LONG_PIC_SDIFF_CALL)\n-\t\t  || (TARGET_64BIT && !TARGET_GAS))\n+\t      if (TARGET_LONG_PIC_SDIFF_CALL)\n \t\t{\n \t\t  /* The HP assembler and linker can handle relocations\n-\t\t     for the difference of two symbols.  GAS and the HP\n-\t\t     linker can't do this when one of the symbols is\n-\t\t     external.  */\n+\t\t     for the difference of two symbols.  The HP assembler\n+\t\t     recognizes the sequence as a pc-relative call and\n+\t\t     the linker provides stubs when needed.  */\n \t\t  xoperands[1] = gen_label_rtx ();\n \t\t  output_asm_insn (\"{bl|b,l} .+8,%%r1\", xoperands);\n \t\t  output_asm_insn (\"addil L'%0-%l1,%%r1\", xoperands);\n@@ -7665,20 +7663,20 @@ output_call (rtx insn, rtx call_dest, int sibcall)\n \t\t}\n \t      else\n \t\t{\n-\t\t  if (!TARGET_NO_SPACE_REGS)\n+\t\t  if (!TARGET_NO_SPACE_REGS && flag_pic)\n \t\t    output_asm_insn (\"ldsid (%%r1),%%r31\\n\\tmtsp %%r31,%%sr0\",\n \t\t\t\t     xoperands);\n \n \t\t  if (sibcall)\n \t\t    {\n-\t\t      if (TARGET_NO_SPACE_REGS)\n+\t\t      if (TARGET_NO_SPACE_REGS || !flag_pic)\n \t\t\toutput_asm_insn (\"be 0(%%sr4,%%r1)\", xoperands);\n \t\t      else\n \t\t\toutput_asm_insn (\"be 0(%%sr0,%%r1)\", xoperands);\n \t\t    }\n \t\t  else\n \t\t    {\n-\t\t      if (TARGET_NO_SPACE_REGS)\n+\t\t      if (TARGET_NO_SPACE_REGS || !flag_pic)\n \t\t\toutput_asm_insn (\"ble 0(%%sr4,%%r1)\", xoperands);\n \t\t      else\n \t\t\toutput_asm_insn (\"ble 0(%%sr0,%%r1)\", xoperands);"}, {"sha": "07f675e00ff62e8d6360bfc9788958c018e35019", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dbd54bebbd5a8bd2041ee0aed885b6005d57822/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dbd54bebbd5a8bd2041ee0aed885b6005d57822/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=9dbd54bebbd5a8bd2041ee0aed885b6005d57822", "patch": "@@ -101,17 +101,18 @@ extern int flag_pa_unix;\n    calls.  They are used only in non-pic code.  */\n #define TARGET_LONG_ABS_CALL (TARGET_SOM && !TARGET_GAS)\n \n-/* Define to a C expression evaluating to true to use long pic symbol\n-   difference calls.  This is a call variant similar to the long pic\n-   pc-relative call.  Long pic symbol difference calls are only used with\n-   the HP SOM linker.  Currently, only the HP assembler supports these\n-   calls.  GAS doesn't allow an arbitrary difference of two symbols.  */\n-#define TARGET_LONG_PIC_SDIFF_CALL (!TARGET_GAS)\n-\n-/* Define to a C expression evaluating to true to use long pic\n-   pc-relative calls.  Long pic pc-relative calls are only used with\n-   GAS.  Currently, they are usable for calls within a module but\n-   not for external calls.  */\n+/* Define to a C expression evaluating to true to use long PIC symbol\n+   difference calls.  Long PIC symbol difference calls are only used with\n+   the HP assembler and linker.  The HP assembler detects this instruction\n+   sequence and treats it as long pc-relative call.  Currently, GAS only\n+   allows a difference of two symbols in the same subspace, and it doesn't\n+   detect the sequence as a pc-relative call.  */\n+#define TARGET_LONG_PIC_SDIFF_CALL (!TARGET_GAS && TARGET_HPUX)\n+\n+/* Define to a C expression evaluating to true to use long PIC\n+   pc-relative calls.  Long PIC pc-relative calls are only used with\n+   GAS.  Currently, they are usable for calls which bind local to a\n+   module but not for external calls.  */\n #define TARGET_LONG_PIC_PCREL_CALL 0\n \n /* Define to a C expression evaluating to true to use SOM secondary"}]}