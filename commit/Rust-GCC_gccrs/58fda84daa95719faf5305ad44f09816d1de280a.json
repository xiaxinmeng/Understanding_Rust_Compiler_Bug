{"sha": "58fda84daa95719faf5305ad44f09816d1de280a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NThmZGE4NGRhYTk1NzE5ZmFmNTMwNWFkNDRmMDk4MTZkMWRlMjgwYQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2008-07-31T12:37:33Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-07-31T12:37:33Z"}, "message": "exp_aggr.adb (Aggr_Size_OK): If the aggregate has a single component and the context is an object...\n\n2008-07-31  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_aggr.adb (Aggr_Size_OK): If the aggregate has a single component\n\tand the context is an object declaration with non-static bounds, treat\n\tthe aggregate as non-static.\n\nFrom-SVN: r138393", "tree": {"sha": "9a5c1f12205e257fb869956506bf95645d055ea3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a5c1f12205e257fb869956506bf95645d055ea3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58fda84daa95719faf5305ad44f09816d1de280a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58fda84daa95719faf5305ad44f09816d1de280a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58fda84daa95719faf5305ad44f09816d1de280a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58fda84daa95719faf5305ad44f09816d1de280a/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "13342fb00afb562f5c7f7eac1c1e97d79b840ef6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13342fb00afb562f5c7f7eac1c1e97d79b840ef6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13342fb00afb562f5c7f7eac1c1e97d79b840ef6"}], "stats": {"total": 49, "additions": 45, "deletions": 4}, "files": [{"sha": "84aed96d9b9618c2487fb6356103428b3088edf7", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 45, "deletions": 4, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58fda84daa95719faf5305ad44f09816d1de280a/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58fda84daa95719faf5305ad44f09816d1de280a/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=58fda84daa95719faf5305ad44f09816d1de280a", "patch": "@@ -28,6 +28,7 @@ with Checks;   use Checks;\n with Debug;    use Debug;\n with Einfo;    use Einfo;\n with Elists;   use Elists;\n+with Errout;   use Errout;\n with Expander; use Expander;\n with Exp_Util; use Exp_Util;\n with Exp_Ch3;  use Exp_Ch3;\n@@ -169,12 +170,15 @@ package body Exp_Aggr is\n    -- Local Subprograms for Array Aggregate Expansion --\n    -----------------------------------------------------\n \n-   function Aggr_Size_OK (Typ : Entity_Id) return Boolean;\n+   function Aggr_Size_OK (N : Node_Id; Typ : Entity_Id) return Boolean;\n    --  Very large static aggregates present problems to the back-end, and\n    --  are transformed into assignments and loops. This function verifies\n    --  that the total number of components of an aggregate is acceptable\n    --  for transformation into a purely positional static form. It is called\n    --  prior to calling Flatten.\n+   --  This function also detects and warns about one-component aggregates\n+   --  that appear in a non-static context. Even if the component value is\n+   --  static, such an aggregate must be expanded into an assignment.\n \n    procedure Convert_Array_Aggr_In_Allocator\n      (Decl   : Node_Id;\n@@ -291,7 +295,7 @@ package body Exp_Aggr is\n    -- Aggr_Size_OK --\n    ------------------\n \n-   function Aggr_Size_OK (Typ : Entity_Id) return Boolean is\n+   function Aggr_Size_OK (N : Node_Id; Typ : Entity_Id) return Boolean is\n       Lo   : Node_Id;\n       Hi   : Node_Id;\n       Indx : Node_Id;\n@@ -399,6 +403,43 @@ package body Exp_Aggr is\n             return True;\n          end if;\n \n+         --  One-component aggregates are suspicious, and if the context\n+         --  type is an object declaration with non-static bounds it will\n+         --  trip gcc; such an aggregate must be expanded into a single\n+         --  assignment.\n+\n+         if Hiv = Lov\n+           and then Nkind (Parent (N)) = N_Object_Declaration\n+         then\n+            declare\n+               Index_Type : constant Entity_Id :=\n+                       Etype\n+                         (First_Index\n+                           (Etype (Defining_Identifier (Parent (N)))));\n+               Indx : Node_Id;\n+            begin\n+               if not Compile_Time_Known_Value (Type_Low_Bound (Index_Type))\n+                  or else not Compile_Time_Known_Value\n+                                (Type_High_Bound (Index_Type))\n+               then\n+                  if Present (Component_Associations (N)) then\n+                     Indx :=\n+                       First (Choices (First (Component_Associations (N))));\n+                     if Is_Entity_Name (Indx)\n+                       and then not Is_Type (Entity (Indx))\n+                     then\n+                        Error_Msg_N\n+                          (\"single component aggregate in non-static context?\",\n+                            Indx);\n+                        Error_Msg_N (\"\\maybe subtype name was meant?\", Indx);\n+                     end if;\n+                  end if;\n+\n+                  return False;\n+               end if;\n+            end;\n+         end if;\n+\n          declare\n             Rng : constant Uint := Hiv - Lov + 1;\n \n@@ -3847,7 +3888,7 @@ package body Exp_Aggr is\n       --  assignments to the target anyway, but it is conceivable that\n       --  it will eventually be able to treat such aggregates statically???\n \n-      if Aggr_Size_OK (Typ)\n+      if Aggr_Size_OK (N, Typ)\n         and then Flatten (N, First_Index (Typ), First_Index (Base_Type (Typ)))\n       then\n          if Static_Components then\n@@ -6383,7 +6424,7 @@ package body Exp_Aggr is\n                elsif Nkind (Expression (Expr)) /= N_Integer_Literal then\n                   return False;\n \n-               elsif not Aggr_Size_OK (Typ) then\n+               elsif not Aggr_Size_OK (N, Typ) then\n                   return False;\n                end if;\n "}]}