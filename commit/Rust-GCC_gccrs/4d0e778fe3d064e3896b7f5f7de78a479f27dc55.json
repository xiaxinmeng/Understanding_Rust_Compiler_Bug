{"sha": "4d0e778fe3d064e3896b7f5f7de78a479f27dc55", "node_id": "C_kwDOANBUbNoAKDRkMGU3NzhmZTNkMDY0ZTM4OTZiN2Y1ZjdkZTc4YTQ3OWYyN2RjNTU", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-01-07T17:42:46Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-01-11T22:49:52Z"}, "message": "libgfortran: Avoid using libquadmath APIs on powerpc64le on glibc 2.32+\n\nOn a glibc 2.32+ build, we still use some libquadmath APIs\nwhen we shouldn't:\nreadelf -Wr /home/jakub/gcc/obj/powerpc64le-unknown-linux-gnu/libgfortran/.libs/libgfortran.so.5 | grep QUADMATH\n00000000002502c8  0000002600000015 R_PPC64_JMP_SLOT       0000000000000000 fmaq@QUADMATH_1.0 + 0\n00000000002505f8  0000006700000015 R_PPC64_JMP_SLOT       0000000000000000 tanq@QUADMATH_1.0 + 0\n0000000000250930  0000009b00000015 R_PPC64_JMP_SLOT       0000000000000000 fabsq@QUADMATH_1.0 + 0\n0000000000250940  0000009d00000015 R_PPC64_JMP_SLOT       0000000000000000 sinq@QUADMATH_1.0 + 0\n0000000000250c98  000000cf00000015 R_PPC64_JMP_SLOT       0000000000000000 copysignq@QUADMATH_1.0 + 0\n0000000000251038  0000010700000015 R_PPC64_JMP_SLOT       0000000000000000 cosq@QUADMATH_1.0 + 0\n0000000000251068  0000010a00000015 R_PPC64_JMP_SLOT       0000000000000000 fmodq@QUADMATH_1.0 + 0\nThese should use __fmaieee128, __tanieee128 etc. instead.\n\n2022-01-07  Jakub Jelinek  <jakub@redhat.com>\n\n\t* libgfortran.h (__copysignieee128, __fmaieee128, __fmodieee128):\n\tDeclare.\n\t* intrinsics/trigd.c (COPYSIGN, FMOD, FABS, FMA, SIN, COS, TAN): If\n\tPOWER_IEEE128 is defined, define these for kind 17 include.\n\t* intrinsics/trigd_lib.inc (COPYSIGN, FMOD, FABS, FMA, SIN, COS, TAN):\n\tDon't define if COPYSIGN is already defined.", "tree": {"sha": "3de26d1dbab68a54880a376d6b2711a0465637f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3de26d1dbab68a54880a376d6b2711a0465637f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d0e778fe3d064e3896b7f5f7de78a479f27dc55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d0e778fe3d064e3896b7f5f7de78a479f27dc55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d0e778fe3d064e3896b7f5f7de78a479f27dc55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d0e778fe3d064e3896b7f5f7de78a479f27dc55/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d8011fa00fca283003c84e23a8ca66286f83dfa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d8011fa00fca283003c84e23a8ca66286f83dfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d8011fa00fca283003c84e23a8ca66286f83dfa"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "5268916a91b32e5d534f086420e29669838ecdc2", "filename": "libgfortran/intrinsics/trigd.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d0e778fe3d064e3896b7f5f7de78a479f27dc55/libgfortran%2Fintrinsics%2Ftrigd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d0e778fe3d064e3896b7f5f7de78a479f27dc55/libgfortran%2Fintrinsics%2Ftrigd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Ftrigd.c?ref=4d0e778fe3d064e3896b7f5f7de78a479f27dc55", "patch": "@@ -313,6 +313,16 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define HAVE_INFINITY_KIND\n #endif\n \n+#ifdef POWER_IEEE128\n+#define COPYSIGN __copysignieee128\n+#define FMOD __fmodieee128\n+#define FABS __fabsieee128\n+#define FMA __fmaieee128\n+#define SIN __sinieee128\n+#define COS __cosieee128\n+#define TAN __tanieee128\n+#endif\n+\n #include \"trigd_lib.inc\"\n \n #undef KIND"}, {"sha": "aea85ec84fdaf15f65c4c47d3fee922829f0faac", "filename": "libgfortran/intrinsics/trigd_lib.inc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d0e778fe3d064e3896b7f5f7de78a479f27dc55/libgfortran%2Fintrinsics%2Ftrigd_lib.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d0e778fe3d064e3896b7f5f7de78a479f27dc55/libgfortran%2Fintrinsics%2Ftrigd_lib.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Ftrigd_lib.inc?ref=4d0e778fe3d064e3896b7f5f7de78a479f27dc55", "patch": "@@ -65,13 +65,15 @@ PIO180L               -- lower bits of pi/180 for FMA\n #define CONCAT(x,y) x ## y\n #define CONCAT_EXPAND(x,y) CONCAT(x,y)\n \n+#ifndef COPYSIGN\n #define COPYSIGN LITERAL(copysign)\n #define FMOD LITERAL(fmod)\n #define FABS LITERAL(fabs)\n #define FMA LITERAL(fma)\n #define SIN LITERAL(sin)\n #define COS LITERAL(cos)\n #define TAN LITERAL(tan)\n+#endif\n \n #ifdef TINY\n #define TINY_LITERAL LITERAL(TINY)"}, {"sha": "2aec78fc4019b33fb01ee60d1a933782c22ef55a", "filename": "libgfortran/libgfortran.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d0e778fe3d064e3896b7f5f7de78a479f27dc55/libgfortran%2Flibgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d0e778fe3d064e3896b7f5f7de78a479f27dc55/libgfortran%2Flibgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Flibgfortran.h?ref=4d0e778fe3d064e3896b7f5f7de78a479f27dc55", "patch": "@@ -1968,6 +1968,8 @@ extern __float128 __atanhieee128 (__float128)\n   __attribute__ ((__nothrow__, __leaf__));\n extern __float128 __atanieee128 (__float128)\n   __attribute__ ((__nothrow__, __leaf__));\n+extern __float128 __copysignieee128 (__float128, __float128)\n+  __attribute__ ((__nothrow__, __leaf__));\n extern __float128 __coshieee128 (__float128)\n   __attribute__ ((__nothrow__, __leaf__));\n extern __float128 __cosieee128 (__float128)\n@@ -1980,6 +1982,10 @@ extern __float128 __expieee128 (__float128)\n   __attribute__ ((__nothrow__, __leaf__));\n extern __float128 __fabsieee128 (__float128)\n   __attribute__ ((__nothrow__, __leaf__));\n+extern __float128 __fmaieee128 (__float128, __float128, __float128)\n+  __attribute__ ((__nothrow__, __leaf__));\n+extern __float128 __fmodieee128 (__float128, __float128)\n+  __attribute__ ((__nothrow__, __leaf__));\n extern __float128 __jnieee128 (int, __float128)\n   __attribute__ ((__nothrow__, __leaf__));\n extern __float128 __log10ieee128 (__float128)"}]}