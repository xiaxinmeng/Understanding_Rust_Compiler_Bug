{"sha": "e47247850c490308bdc8986838a4005d4ce0ddf0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQ3MjQ3ODUwYzQ5MDMwOGJkYzg5ODY4MzhhNDAwNWQ0Y2UwZGRmMA==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2006-04-03T14:31:56Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2006-04-03T14:31:56Z"}, "message": "re PR libgcj/26858 (NullPointerException not generated for large classes...)\n\n2006-04-03  Andrew Haley  <aph@redhat.com>\n\n        PR java/26858\n        * expr.c (build_field_ref): Don't check the field offset if\n        flag_syntax_only.\n\nFrom-SVN: r112640", "tree": {"sha": "77c3c3a7b486b185794c3c7390c2b110ba59c0ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77c3c3a7b486b185794c3c7390c2b110ba59c0ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e47247850c490308bdc8986838a4005d4ce0ddf0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e47247850c490308bdc8986838a4005d4ce0ddf0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e47247850c490308bdc8986838a4005d4ce0ddf0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e47247850c490308bdc8986838a4005d4ce0ddf0/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4735cca6b1f8822356f229990c0a1232199d7bcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4735cca6b1f8822356f229990c0a1232199d7bcb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4735cca6b1f8822356f229990c0a1232199d7bcb"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "e3cde16e80f1ecd12b6c044801d27047299b8762", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e47247850c490308bdc8986838a4005d4ce0ddf0/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e47247850c490308bdc8986838a4005d4ce0ddf0/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=e47247850c490308bdc8986838a4005d4ce0ddf0", "patch": "@@ -1,3 +1,9 @@\n+2006-04-03  Andrew Haley  <aph@redhat.com>\n+\n+\tPR java/26858\n+\t* expr.c (build_field_ref): Don't check the field offset if\n+\tflag_syntax_only.\n+\n 2006-03-30  Andrew Haley  <aph@redhat.com>\n \n \tPR java/26858"}, {"sha": "4a6afaa5827171b8d237b38b9d5319c3c7ae12ab", "filename": "gcc/java/expr.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e47247850c490308bdc8986838a4005d4ce0ddf0/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e47247850c490308bdc8986838a4005d4ce0ddf0/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=e47247850c490308bdc8986838a4005d4ce0ddf0", "patch": "@@ -1696,7 +1696,8 @@ build_field_ref (tree self_value, tree self_class, tree name)\n \t memory may be allocated from any other page, so only field\n \t offsets < pagesize are guaratneed to trap.  We also assume\n \t the smallest page size we'll encounter is 4k bytes.  */\n-      if (check && ! flag_check_references && ! flag_indirect_dispatch)\n+      if (! flag_syntax_only && check && ! flag_check_references \n+\t  && ! flag_indirect_dispatch)\n \t{\n \t  tree field_offset = byte_position (field_decl);\n \t  if (! page_size)"}]}