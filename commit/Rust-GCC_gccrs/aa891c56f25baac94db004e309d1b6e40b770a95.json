{"sha": "aa891c56f25baac94db004e309d1b6e40b770a95", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE4OTFjNTZmMjViYWFjOTRkYjAwNGUzMDlkMWI2ZTQwYjc3MGE5NQ==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-05-11T00:16:36Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-05-11T00:16:36Z"}, "message": "Daily bump.", "tree": {"sha": "7db32cac8be9a1ff02ee87bbae27153d7bc20acc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7db32cac8be9a1ff02ee87bbae27153d7bc20acc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa891c56f25baac94db004e309d1b6e40b770a95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa891c56f25baac94db004e309d1b6e40b770a95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa891c56f25baac94db004e309d1b6e40b770a95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa891c56f25baac94db004e309d1b6e40b770a95/comments", "author": null, "committer": null, "parents": [{"sha": "0c54d25a7686406a11f44f58261a9e63821022b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c54d25a7686406a11f44f58261a9e63821022b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c54d25a7686406a11f44f58261a9e63821022b7"}], "stats": {"total": 1732, "additions": 1731, "deletions": 1}, "files": [{"sha": "0fa621418f1b50d226e63c59a3102aac3861a585", "filename": "c++tools/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa891c56f25baac94db004e309d1b6e40b770a95/c%2B%2Btools%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa891c56f25baac94db004e309d1b6e40b770a95/c%2B%2Btools%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2FChangeLog?ref=aa891c56f25baac94db004e309d1b6e40b770a95", "patch": "@@ -1,3 +1,7 @@\n+2021-05-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* Makefile.in: Include also ../gcc folder.\n+\n 2021-04-01  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* resolver.h: Do not include std headers directly when"}, {"sha": "2d6e29f74bb833e1260adaf69b2d382f487684db", "filename": "contrib/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa891c56f25baac94db004e309d1b6e40b770a95/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa891c56f25baac94db004e309d1b6e40b770a95/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=aa891c56f25baac94db004e309d1b6e40b770a95", "patch": "@@ -1,3 +1,40 @@\n+2021-05-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_email.py: Remove newlines when --help\n+\tis used.\n+\n+2021-05-10  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* gcc-changelog/git_check_commit.py (__Main__): State in --help\n+\tthe default value for 'revisions'.\n+\t* gcc-changelog/git_email.py (show_help): Add.\n+\t(__main__): Handle -h and --help.\n+\n+2021-05-10  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* gcc-changelog/git_commit.py (Error.__repr__): Add space after the colon.\n+\t(GitCommit.check_mentioned_files): Check whether the same file has been\n+\tspecified multiple times.\n+\t* gcc-changelog/test_email.py (TestGccChangelog.test_multi_same_file): New.\n+\t* gcc-changelog/test_patches.txt (0001-OpenMP-Fix-SIMT): New test.\n+\n+2021-05-10  Martin Liska  <mliska@suse.cz>\n+\n+\tRevert:\n+\t2021-05-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Remove components that will be\n+\tremoved.\n+\n+2021-05-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc_update: Start using reload.c instead of version.c.\n+\n+2021-05-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Remove components that will be\n+\tremoved.\n+\n 2021-04-27  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gennews (files): Add files for GCC 10 and GCC 11."}, {"sha": "02e66c8878a48895b956106cd66ec05ca5212895", "filename": "gcc/ChangeLog", "status": "modified", "additions": 372, "deletions": 0, "changes": 372, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa891c56f25baac94db004e309d1b6e40b770a95/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa891c56f25baac94db004e309d1b6e40b770a95/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aa891c56f25baac94db004e309d1b6e40b770a95", "patch": "@@ -1,3 +1,375 @@\n+2021-05-10  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* range-op.cc (get_bool_state): Adjust head comment.\n+\t(operator_not_equal::op1_range): Fix comment.\n+\t(operator_bitwise_xor::op1_range): Remove call to gcc_unreachable.\n+\n+2021-05-10  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/100425\n+\tPR middle-end/100510\n+\t* gimple-ssa-warn-alloca.c (pass_walloca::firast_time_p): Rename...\n+\t(pass_walloca::xlimit_certain_p): ...to this.\n+\t(pass_walloca::gate): Execute for any kind of handled warning.\n+\t(pass_walloca::execute): Avoid issuing \"maybe\" and \"unbounded\"\n+\twarnings when xlimit_certain_p is set.\n+\n+2021-05-10  Pat Haugen  <pthaugen@linux.ibm.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_ira_change_pseudo_allocno_class):\n+\tReturn ALTIVEC_REGS if that is best_class.\n+\t(rs6000_compute_pressure_classes): Add ALTIVEC_REGS.\n+\n+2021-05-10  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* config/arm/arm.h (CPP_SPEC): Remove error message about\n+\t-mfloat-abi.\n+\n+2021-05-10  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* ipa-prop.h (IPA_NODE_REF): Removed.\n+\t(IPA_NODE_REF_GET_CREATE): Likewise.\n+\t(IPA_EDGE_REF): Likewise.\n+\t(IPA_EDGE_REF_GET_CREATE): Likewise.\n+\t(IS_VALID_JUMP_FUNC_INDEX): Likewise.\n+\t* ipa-cp.c (print_all_lattices): Replaced IPA_NODE_REF with a direct\n+\tuse of ipa_node_params_sum.\n+\t(ipcp_versionable_function_p): Likewise.\n+\t(push_node_to_stack): Likewise.\n+\t(pop_node_from_stack): Likewise.\n+\t(set_single_call_flag): Replaced two IPA_NODE_REF with one single\n+\tdirect use of ipa_node_params_sum.\n+\t(initialize_node_lattices): Replaced IPA_NODE_REF with a direct use of\n+\tipa_node_params_sum.\n+\t(ipa_context_from_jfunc): Replaced IPA_EDGE_REF with a direct use of\n+\tipa_edge_args_sum.\n+\t(ipcp_verify_propagated_values): Replaced IPA_NODE_REF with a direct\n+\tuse of ipa_node_params_sum.\n+\t(self_recursively_generated_p): Likewise.\n+\t(propagate_scalar_across_jump_function): Likewise.\n+\t(propagate_context_across_jump_function): Replaced IPA_EDGE_REF with a\n+\tdirect use of ipa_edge_args_sum, moved the lookup after the early\n+\texit.  Replaced IPA_NODE_REF with a direct use of ipa_node_params_sum.\n+\t(propagate_bits_across_jump_function): Replaced IPA_NODE_REF with\n+\tdirect uses of ipa_node_params_sum.\n+\t(propagate_vr_across_jump_function): Likewise.\n+\t(propagate_aggregate_lattice): Likewise.\n+\t(propagate_aggs_across_jump_function): Likewise.\n+\t(propagate_constants_across_call): Likewise, also replaced\n+\tIPA_EDGE_REF with a direct use of ipa_edge_args_sum.\n+\t(good_cloning_opportunity_p): Replaced IPA_NODE_REF with a direct use\n+\tof ipa_node_params_sum.\n+\t(estimate_local_effects): Likewise.\n+\t(add_all_node_vals_to_toposort): Likewise.\n+\t(propagate_constants_topo): Likewise.\n+\t(ipcp_propagate_stage): Likewise.\n+\t(ipcp_discover_new_direct_edges): Likewise.\n+\t(calls_same_node_or_its_all_contexts_clone_p): Likewise.\n+\t(cgraph_edge_brings_value_p): Likewise (in both overloaded functions).\n+\t(get_info_about_necessary_edges): Likewise.\n+\t(want_remove_some_param_p): Likewise.\n+\t(create_specialized_node): Likewise.\n+\t(self_recursive_pass_through_p): Likewise.\n+\t(self_recursive_agg_pass_through_p): Likewise.\n+\t(find_more_scalar_values_for_callers_subset): Likewise and also\n+\treplaced IPA_EDGE_REF with direct uses of ipa_edge_args_sum, in one\n+\tcase replacing two of those with a single query.\n+\t(find_more_contexts_for_caller_subset): Likewise for the\n+\tipa_polymorphic_call_context overload.\n+\t(intersect_aggregates_with_edge): Replaced IPA_EDGE_REF with a direct\n+\tuse of ipa_edge_args_sum.  Replaced IPA_NODE_REF with direct uses of\n+\tipa_node_params_sum.\n+\t(find_aggregate_values_for_callers_subset): Likewise, also reusing\n+\tresults of ipa_edge_args_sum->get.\n+\t(cgraph_edge_brings_all_scalars_for_node): Replaced IPA_NODE_REF with\n+\tdirect uses of ipa_node_params_sum, replaced IPA_EDGE_REF with a\n+\tdirect use of ipa_edge_args_sum.\n+\t(cgraph_edge_brings_all_agg_vals_for_node): Likewise, moved node\n+\tsummary query after the early exit and reused the result later.\n+\t(decide_about_value): Replaced IPA_NODE_REF with a direct use of\n+\tipa_node_params_sum.\n+\t(decide_whether_version_node): Likewise.  Removed re-querying for\n+\tsummaries after cloning.\n+\t(spread_undeadness): Replaced IPA_NODE_REF with a direct use of\n+\tipa_node_params_sum.\n+\t(has_undead_caller_from_outside_scc_p): Likewise, reusing results of\n+\tsome queries.\n+\t(identify_dead_nodes): Likewise.\n+\t(ipcp_store_bits_results): Replaced IPA_NODE_REF with direct uses of\n+\tipa_node_params_sum.\n+\t(ipcp_store_vr_results): Likewise.\n+\t* ipa-fnsummary.c (evaluate_properties_for_edge): Likewise.\n+\t(ipa_fn_summary_t::duplicate): Likewise.\n+\t(analyze_function_body): Likewise.\n+\t(estimate_calls_size_and_time): Likewise.\n+\t(ipa_cached_call_context::duplicate_from): Likewise.\n+\t(ipa_call_context::equal_to): Likewise.\n+\t(remap_edge_params): Likewise.\n+\t(ipa_merge_fn_summary_after_inlining): Likewise.\n+\t(inline_read_section): Likewise.\n+\t* ipa-icf.c (sem_function::param_used_p): Likewise.\n+\t* ipa-modref.c (compute_parm_map): Likewise.\n+\t(compute_parm_map): Replaced IPA_EDGE_REF with a direct use of\n+\tipa_edge_args_sum.\n+\t(get_access_for_fnspec): Replaced IPA_NODE_REF with a direct use of\n+\tipa_node_params_sum and replaced IPA_EDGE_REF with a direct use of\n+\tipa_edge_args_sum.\n+\t* ipa-profile.c (check_argument_count): Likewise.\n+\t* ipa-prop.c (ipa_alloc_node_params): Replaced IPA_NODE_REF_GET_CREATE\n+\twith a direct use of ipa_node_params_sum.\n+\t(ipa_initialize_node_params): Likewise.\n+\t(ipa_print_node_jump_functions_for_edge): Replaced IPA_EDGE_REF with a\n+\tdirect use of ipa_edge_args_sum and reused the query result.\n+\t(ipa_compute_jump_functions_for_edge): Replaced IPA_NODE_REF with a\n+\tdirect use of ipa_node_params_sum and replaced IPA_EDGE_REF with a\n+\tdirect use of ipa_edge_args_sum.\n+\t(ipa_note_param_call): Replaced IPA_NODE_REF with a direct use of\n+\tipa_node_params_sum and reused the result of the query.\n+\t(ipa_analyze_node): Likewise.\n+\t(ipa_analyze_controlled_uses): Replaced IPA_NODE_REF with a direct use\n+\tof ipa_node_params_sum.\n+\t(update_jump_functions_after_inlining): Replaced IPA_EDGE_REF with\n+\tdirect uses of ipa_edge_args_sum.\n+\t(update_indirect_edges_after_inlining): Replaced IPA_NODE_REF with\n+\tdirect uses of ipa_node_params_sum and replaced IPA_EDGE_REF with a\n+\tdirect use of ipa_edge_args_sum.  Removed superficial re-querying the\n+\ttop edge summary.\n+\t(propagate_controlled_uses): Replaced IPA_NODE_REF with direct uses of\n+\tipa_node_params_sum and replaced IPA_EDGE_REF with a direct use of\n+\tipa_edge_args_sum.\n+\t(ipa_propagate_indirect_call_infos): Replaced IPA_EDGE_REF with a\n+\tdirect use of ipa_edge_args_sum.\n+\t(ipa_edge_args_sum_t::duplicate): Replaced IPA_NODE_REF with a direct\n+\tuse of ipa_node_params_sum.\n+\t(ipa_print_node_params): Likewise.\n+\t(ipa_write_node_info): Likewise and also replaced IPA_EDGE_REF with\n+\tdirect uses of ipa_edge_args_sum.\n+\t(ipa_read_edge_info): Replaced IPA_EDGE_REF with a direct use of\n+\tipa_edge_args_sum.\n+\t(ipa_read_node_info): Replaced IPA_NODE_REF with a direct use of\n+\tipa_node_params_sum.\n+\t(ipa_prop_write_jump_functions): Likewise.  Move variable node to the\n+\tscopes where it is used.\n+\n+2021-05-10  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386-expand.c (ix86_expand_sse_movcc)\n+\t<case E_V2SImode>: Force op_true to register.\n+\n+2021-05-10  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* config/arm/iterators.md (MVE_FP_COMPARISONS): New.\n+\t* config/arm/mve.md (mve_vcmp<mve_cmp_op>q_f<mode>)\n+\t(mve_vcmp<mve_cmp_op>q_n_f<mode>): New, merge all vcmp_*f*\n+\tpatterns.\n+\t(mve_vcmpeqq_f<mode>, mve_vcmpeqq_n_f<mode>, mve_vcmpgeq_f<mode>)\n+\t(mve_vcmpgeq_n_f<mode>, mve_vcmpgtq_f<mode>)\n+\t(mve_vcmpgtq_n_f<mode>, mve_vcmpleq_f<mode>)\n+\t(mve_vcmpleq_n_f<mode>, mve_vcmpltq_f<mode>)\n+\t(mve_vcmpltq_n_f<mode>, mve_vcmpneq_f<mode>)\n+\t(mve_vcmpneq_n_f<mode>): Remove.\n+\t* config/arm/unspecs.md (VCMPEQQ_F, VCMPEQQ_N_F, VCMPGEQ_F)\n+\t(VCMPGEQ_N_F, VCMPGTQ_F, VCMPGTQ_N_F, VCMPLEQ_F, VCMPLEQ_N_F)\n+\t(VCMPLTQ_F, VCMPLTQ_N_F, VCMPNEQ_F, VCMPNEQ_N_F): Remove.\n+\n+2021-05-10  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* config/arm/iterators.md (MVE_COMPARISONS): New.\n+\t(mve_cmp_op): New.\n+\t(mve_cmp_type): New.\n+\t* config/arm/mve.md (mve_vcmp<mve_cmp_op>q_<mode>): New, merge all\n+\tmve_vcmp patterns.\n+\t(mve_vcmpneq_<mode>, mve_vcmpcsq_n_<mode>, mve_vcmpcsq_<mode>)\n+\t(mve_vcmpeqq_n_<mode>, mve_vcmpeqq_<mode>, mve_vcmpgeq_n_<mode>)\n+\t(mve_vcmpgeq_<mode>, mve_vcmpgtq_n_<mode>, mve_vcmpgtq_<mode>)\n+\t(mve_vcmphiq_n_<mode>, mve_vcmphiq_<mode>, mve_vcmpleq_n_<mode>)\n+\t(mve_vcmpleq_<mode>, mve_vcmpltq_n_<mode>, mve_vcmpltq_<mode>)\n+\t(mve_vcmpneq_n_<mode>, mve_vcmpltq_n_<mode>, mve_vcmpltq_<mode>)\n+\t(mve_vcmpneq_n_<mode>): Remove.\n+\n+2021-05-10  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* config/arm/arm_mve.h (__arm_vcmp*): Remove 's' suffix.\n+\t* config/arm/arm_mve_builtins.def (vcmp*): Remove 's' suffix.\n+\t* config/arm/mve.md (mve_vcmp*): Remove 's' suffix in pattern\n+\tnames.\n+\n+2021-05-10  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* config/arm/arm_mve_builtins.def (vcmpneq_u): Remove.\n+\t(vcmpneq_n_u): Likewise.\n+\t(vcmpeqq_u,): Likewise.\n+\t(vcmpeqq_n_u): Likewise.\n+\t* config/arm/iterators.md (supf): Remove VCMPNEQ_U, VCMPEQQ_U,\n+\tVCMPEQQ_N_U and VCMPNEQ_N_U.\n+\t* config/arm/mve.md (mve_vcmpneq): Remove <supf> iteration.\n+\t(mve_vcmpeqq_n): Likewise.\n+\t(mve_vcmpeqq): Likewise.\n+\t(mve_vcmpneq_n): Likewise.\n+\n+2021-05-10  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* config/arm/arm_mve.h (__arm_vcmpeq*u*, __arm_vcmpne*u*): Call\n+\tthe 's' version of the builtin.\n+\n+2021-05-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/100492\n+\t* tree-loop-distribution.c (find_seed_stmts_for_distribution):\n+\tFind nothing when the loop contains an irreducible region.\n+\n+2021-05-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/100464\n+\tPR c++/100468\n+\t* gimple-fold.c (canonicalize_constructor_val): Do not set\n+\tTREE_ADDRESSABLE.\n+\n+2021-05-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/100434\n+\t* tree-ssa-dse.c (initialize_ao_ref_for_dse): Handle\n+\tcall LHS.\n+\t(dse_optimize_stmt): Handle call LHS by dropping the\n+\tLHS or the whole call if it doesn't have other\n+\tside-effects.\n+\t(pass_dse::execute): Adjust.\n+\n+2021-05-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* Makefile.in: Add missing genversion rule.\n+\n+2021-05-10  Alex Coplan  <alex.coplan@arm.com>\n+\n+\tPR target/99960\n+\t* config/arm/mve.md (*mve_mov<mode>): Simplify output code. Use\n+\tvldrw.u32 and vstrw.32 for V2D[IF]mode loads and stores.\n+\n+2021-05-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* builtins.c (is_builtin_name): Use startswith\n+\tfunction instead of strncmp.\n+\t* collect2.c (main): Likewise.\n+\t(has_lto_section): Likewise.\n+\t(scan_libraries): Likewise.\n+\t* coverage.c (coverage_checksum_string): Likewise.\n+\t(coverage_init): Likewise.\n+\t* dwarf2out.c (is_cxx): Likewise.\n+\t(gen_compile_unit_die): Likewise.\n+\t* gcc-ar.c (main): Likewise.\n+\t* gcc.c (init_spec): Likewise.\n+\t(read_specs): Likewise.\n+\t(execute): Likewise.\n+\t(check_live_switch): Likewise.\n+\t* genattrtab.c (write_attr_case): Likewise.\n+\t(IS_ATTR_GROUP): Likewise.\n+\t* gencfn-macros.c (main): Likewise.\n+\t* gengtype.c (type_for_name): Likewise.\n+\t(gen_rtx_next): Likewise.\n+\t(get_file_langdir): Likewise.\n+\t(write_local): Likewise.\n+\t* genmatch.c (get_operator): Likewise.\n+\t(get_operand_type): Likewise.\n+\t(expr::gen_transform): Likewise.\n+\t* genoutput.c (validate_optab_operands): Likewise.\n+\t* incpath.c (add_sysroot_to_chain): Likewise.\n+\t* langhooks.c (lang_GNU_C): Likewise.\n+\t(lang_GNU_CXX): Likewise.\n+\t(lang_GNU_Fortran): Likewise.\n+\t(lang_GNU_OBJC): Likewise.\n+\t* lto-wrapper.c (run_gcc): Likewise.\n+\t* omp-general.c (omp_max_simt_vf): Likewise.\n+\t* omp-low.c (omp_runtime_api_call): Likewise.\n+\t* opts-common.c (parse_options_from_collect_gcc_options): Likewise.\n+\t* read-rtl-function.c (function_reader::read_rtx_operand_r): Likewise.\n+\t* real.c (real_from_string): Likewise.\n+\t* selftest.c (assert_str_startswith): Likewise.\n+\t* timevar.c (timer::validate_phases): Likewise.\n+\t* tree.c (get_file_function_name): Likewise.\n+\t* ubsan.c (ubsan_use_new_style_p): Likewise.\n+\t* varasm.c (default_function_rodata_section): Likewise.\n+\t(incorporeal_function_p): Likewise.\n+\t(default_section_type_flags): Likewise.\n+\t* system.h (startswith): Define startswith.\n+\n+2021-05-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* bitmap.h (class auto_bitmap): Remove\n+\t__cplusplus >= 201103.\n+\t* config/aarch64/aarch64.c: Likewise.\n+\t* gimple-ssa-store-merging.c (store_immediate_info::store_immediate_info):\n+\tLikewise.\n+\t* sbitmap.h: Likewise.\n+\n+2021-05-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* Makefile.in: Rename gcov-iov to genversion and depend\n+\ton version.h (instead of gcov-iov.h).\n+\t* gcov-io.h: Include version.h instread of gcov-iov.h.\n+\t* gengtype-state.c (read_state_version): Likewise.\n+\t* gcov-iov.c: Moved to...\n+\t* genversion.c: ...here.\n+\t* lto-streamer.h (LTO_major_version): Define it with\n+\tGCC_major_version.\n+\t* version.c: Removed.\n+\t* version.h: Removed.\n+\n+2021-05-10  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* config/arc/arc.md (UNSPEC_ARC_DMPYWH): Define.\n+\t* config/arc/simdext.md (VCT): Add predicates for iterator\n+\telements.\n+\t(EMUVEC): Define.\n+\t(voptab): Likewise.\n+\t(vec_widen_<V_US>mult_hi_v4hi): Change pattern predicate.\n+\t(<voptab>v2si3): New patterns.\n+\t(neg): Likewise.\n+\t(reduc_plus_scal_v4hi): Likewise.\n+\t(reduc_plus_scal_v2si): Likewise.\n+\t(vec_duplicatev2si): Likewise.\n+\t(vec_duplicatev4hi): Likewise.\n+\n+2021-05-10  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* config/arc/simdext.md: Format and cleanup file.\n+\n+2021-05-10  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* config/arc/simdext.md (movmisalignv2hi): Allow misaligned access\n+\tonly when munaligned-access option is on.\n+\t(movmisalign<mode>): Likewise.\n+\n+2021-05-10  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* common/config/arc/arc-common.c (arc_handle_option): Remove dot\n+\tfrom string.\n+\t* config/arc/arc.c (arc_reorg): Remove underscore from string.\n+\n+2021-05-10  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* config/arc/arc.h (CLZ_DEFINED_VALUE_AT_ZERO): Define.\n+\t(CTZ_DEFINED_VALUE_AT_ZERO): Likewise.\n+\t* config/arc/arc.md (clrsbsi2): Cleanup pattern.\n+\t(norm_f): Likewise.\n+\t(ffs): Likewise.\n+\t(ffs_f): Likewise.\n+\t(clzsi2): Use fls instruction when available.\n+\t(arc_clzsi2): Likewise.\n+\n+2021-05-10  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* config/arc/arc.h (ADDITIONAL_REGISTER_NAMES): Add r26 and r27.\n+\n+2021-05-10  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* doc/extend.texi (__builtin_arc_sr): Swap arguments.\n+\n+2021-05-10  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\tPR middle-end/100467\n+\t* toplev.c (compile_file): Call insn_locations_init before\n+\ttargetm.asm_out.code_end.\n+\n 2021-05-07  Andrew Stubbs  <ams@codesourcery.com>\n \n \tRevert:"}, {"sha": "abf046def4857b23fd3b18851b0138c298ad8095", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa891c56f25baac94db004e309d1b6e40b770a95/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa891c56f25baac94db004e309d1b6e40b770a95/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=aa891c56f25baac94db004e309d1b6e40b770a95", "patch": "@@ -1 +1 @@\n-20210510\n+20210511"}, {"sha": "b956fea5e31e60dbc1c0aabb0b36ebbe5afd2358", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa891c56f25baac94db004e309d1b6e40b770a95/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa891c56f25baac94db004e309d1b6e40b770a95/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=aa891c56f25baac94db004e309d1b6e40b770a95", "patch": "@@ -1,3 +1,54 @@\n+2021-05-10  Martin Liska  <mliska@suse.cz>\n+\n+\tPR bootstrap/100506\n+\t* Make-generated.in: Replace version.c with ada/version.c.\n+\t* gcc-interface/Make-lang.in: Add version.o to GNAT1_C_OBJS.\n+\tAdd version.o to GNAT_ADA_OBJS and GNATBIND_OBJS.\n+\t* gcc-interface/Makefile.in: Add version.o to TOOLS_LIBS.\n+\t* gnatvsn.adb: Start using a new C symbol gnat_version_string.\n+\t* version.c: New file.\n+\n+2021-05-10  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* einfo-utils.ads (Classification Attributes): Add pragma Inline.\n+\t(Synthesized Attribute Functions): Move pragma Inline around.\n+\t(Type Representation Attribute Predicates): Likewise.\n+\t(Field Initialization Routines): Likewise.\n+\t(Miscellaneous Subprogram): Likewise.\n+\n+2021-05-10  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* atree.ads (Slot): Remove pragma Provide_Shift_Operators.\n+\t(Shift_Left): New intrinsic function.\n+\t(Shift_Right): Likewise.\n+\t* atree.adb (Get_1_Bit_Val): Use Natural instead of Integer.\n+\t(Get_2_Bit_Val): Likewise.\n+\t(Get_4_Bit_Val): Likewise.\n+\t(Get_8_Bit_Val): Likewise.\n+\t(Set_1_Bit_Val): Likewise.\n+\t(Set_2_Bit_Val): Likewise.\n+\t(Set_4_Bit_Val): Likewise.\n+\t(Set_8_Bit_Val): Likewise.\n+\n+2021-05-10  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* atree.adb (Zero_Slots): Remove obsolete comment and add header.\n+\n+2021-05-10  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* atree.h (Get_32_Bit_Field): Tidy up.\n+\t(Get_32_Bit_Field_With_Default): Likewise.\n+\n+2021-05-10  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* Make-generated.in (do_gen_il): Replace with...\n+\t(ada/stamp-gen_il): ...this.  Do not copy files into generated/.\n+\n+2021-05-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-interface/utils.c (def_builtin_1): Use startswith\n+\tfunction instead of strncmp.\n+\n 2021-05-07  Piotr Trojanek  <trojanek@adacore.com>\n \n \t* einfo-utils.adb (Is_Access_Object_Type): Use"}, {"sha": "e6c06312f8a2c9ba648bd323a1fffa880cbe5755", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa891c56f25baac94db004e309d1b6e40b770a95/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa891c56f25baac94db004e309d1b6e40b770a95/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=aa891c56f25baac94db004e309d1b6e40b770a95", "patch": "@@ -1,3 +1,16 @@\n+2021-05-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* sm-file.cc (is_file_using_fn_p): Use startswith\n+\tfunction instead of strncmp.\n+\n+2021-05-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* program-state.cc (program_state::operator=): Remove\n+\t__cplusplus >= 201103.\n+\t(program_state::program_state): Likewise.\n+\t* program-state.h: Likewise.\n+\t* region-model.h (class region_model): Remove dead code.\n+\n 2021-04-24  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/100244"}, {"sha": "e73c3ee9acfbce40f76eebabf0cdf430908df030", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa891c56f25baac94db004e309d1b6e40b770a95/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa891c56f25baac94db004e309d1b6e40b770a95/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=aa891c56f25baac94db004e309d1b6e40b770a95", "patch": "@@ -1,3 +1,14 @@\n+2021-05-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* c-ada-spec.c (print_destructor): Use startswith\n+\tfunction instead of strncmp.\n+\t(dump_ada_declaration): Likewise.\n+\t* c-common.c (disable_builtin_function): Likewise.\n+\t(def_builtin_1): Likewise.\n+\t* c-format.c (check_tokens): Likewise.\n+\t(check_plain): Likewise.\n+\t(convert_format_name_to_system_name): Likewise.\n+\n 2021-04-28  Patrick McGehearty  <patrick.mcgehearty@oracle.com>\n \n \t* c-cppbuiltin.c (c_cpp_builtins): Add supporting macros for new"}, {"sha": "d003883421fd1fdeb8a84416e4ac257e96a6d8e7", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa891c56f25baac94db004e309d1b6e40b770a95/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa891c56f25baac94db004e309d1b6e40b770a95/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=aa891c56f25baac94db004e309d1b6e40b770a95", "patch": "@@ -1,3 +1,10 @@\n+2021-05-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* c-aux-info.c (affix_data_type): Use startswith\n+\tfunction instead of strncmp.\n+\t* c-typeck.c (build_function_call_vec): Likewise.\n+\t* gimple-parser.c (c_parser_gimple_parse_bb_spec): Likewise.\n+\n 2021-05-07  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* c-typeck.c (build_unary_op) <ADDR_EXPR>: Do not issue an error"}, {"sha": "122808e4921d6826e3ea5da6a9d57c13f4efa2b1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa891c56f25baac94db004e309d1b6e40b770a95/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa891c56f25baac94db004e309d1b6e40b770a95/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=aa891c56f25baac94db004e309d1b6e40b770a95", "patch": "@@ -1,3 +1,31 @@\n+2021-05-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/100464\n+\tPR c++/100468\n+\t* call.c (set_up_extended_ref_temp): Mark the temporary\n+\taddressable if the TARGET_EXPR was.\n+\n+2021-05-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* decl.c (duplicate_decls): Use startswith\n+\tfunction instead of strncmp.\n+\t(cxx_builtin_function): Likewise.\n+\t(omp_declare_variant_finalize_one): Likewise.\n+\t(grokfndecl): Likewise.\n+\t* error.c (dump_decl_name): Likewise.\n+\t* mangle.c (find_decomp_unqualified_name): Likewise.\n+\t(write_guarded_var_name): Likewise.\n+\t(decl_tls_wrapper_p): Likewise.\n+\t* parser.c (cp_parser_simple_type_specifier): Likewise.\n+\t(cp_parser_tx_qualifier_opt): Likewise.\n+\t* pt.c (template_parm_object_p): Likewise.\n+\t(dguide_name_p): Likewise.\n+\n+2021-05-10  Martin Liska  <mliska@suse.cz>\n+\n+\tPR c++/99616\n+\t* decl.c (grokdeclarator): Remove redundant NULL check.\n+\n 2021-05-07  Jason Merrill  <jason@redhat.com>\n \n \t* tree.c (rvalue): Assert expr is not a class lvalue."}, {"sha": "2e66ed53efa9c299d1b56a88114c367959b83f79", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa891c56f25baac94db004e309d1b6e40b770a95/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa891c56f25baac94db004e309d1b6e40b770a95/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=aa891c56f25baac94db004e309d1b6e40b770a95", "patch": "@@ -1,3 +1,16 @@\n+2021-05-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* dmd/MERGE: Merge upstream dmd b7d146c4c.\n+\n+2021-05-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* d-builtins.cc (do_build_builtin_fn): Use startswith\n+\tfunction instead of strncmp.\n+\t* dmd/dinterpret.c (evaluateIfBuiltin): Likewise.\n+\t* dmd/dmangle.c: Likewise.\n+\t* dmd/hdrgen.c: Likewise.\n+\t* dmd/identifier.c (Identifier::toHChars2): Likewise.\n+\n 2021-04-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \tPR d/98457"}, {"sha": "71cc3d864917685c3d7aa45362b081472a4f20f6", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa891c56f25baac94db004e309d1b6e40b770a95/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa891c56f25baac94db004e309d1b6e40b770a95/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=aa891c56f25baac94db004e309d1b6e40b770a95", "patch": "@@ -1,3 +1,17 @@\n+2021-05-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* decl.c (variable_decl): Use startswith\n+\tfunction instead of strncmp.\n+\t(gfc_match_end): Likewise.\n+\t* gfortran.h (gfc_str_startswith): Likewise.\n+\t* module.c (load_omp_udrs): Likewise.\n+\t(read_module): Likewise.\n+\t* options.c (gfc_handle_runtime_check_option): Likewise.\n+\t* primary.c (match_arg_list_function): Likewise.\n+\t* trans-decl.c (gfc_get_symbol_decl): Likewise.\n+\t* trans-expr.c (gfc_conv_procedure_call): Likewise.\n+\t* trans-intrinsic.c (gfc_conv_ieee_arithmetic_function): Likewise.\n+\n 2021-05-06  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/46991"}, {"sha": "5c5d332917f0f5dfa9cf56cd57e25b373ea71540", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa891c56f25baac94db004e309d1b6e40b770a95/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa891c56f25baac94db004e309d1b6e40b770a95/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=aa891c56f25baac94db004e309d1b6e40b770a95", "patch": "@@ -1,3 +1,8 @@\n+2021-05-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* gofrontend/runtime.cc (Runtime::name_to_code): Use startswith\n+\tfunction instead of strncmp.\n+\n 2021-01-28  Ian Lance Taylor  <iant@golang.org>\n \n \t* gospec.c (lang_specific_driver): Add -g if no debugging options"}, {"sha": "94741355e3bc1b74808827653e134dbb6d04611f", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa891c56f25baac94db004e309d1b6e40b770a95/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa891c56f25baac94db004e309d1b6e40b770a95/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=aa891c56f25baac94db004e309d1b6e40b770a95", "patch": "@@ -1,3 +1,10 @@\n+2021-05-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* objc-act.c (objc_string_ref_type_p): Use startswith\n+\tfunction instead of strncmp.\n+\t* objc-encoding.c (encode_type): Likewise.\n+\t* objc-next-runtime-abi-02.c (has_load_impl): Likewise.\n+\n 2020-11-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR other/97911"}, {"sha": "75e235bfde29a32f953de61fefe7d0e81b78db32", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa891c56f25baac94db004e309d1b6e40b770a95/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa891c56f25baac94db004e309d1b6e40b770a95/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=aa891c56f25baac94db004e309d1b6e40b770a95", "patch": "@@ -1,3 +1,73 @@\n+2021-05-10  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/specs/opt5.ads: New test.\n+\t* gnat.dg/specs/opt5_pkg.ads: New helper.\n+\n+2021-05-10  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/100425\n+\tPR middle-end/100510\n+\t* c-c++-common/Walloca-larger-than.C: New test.\n+\t* gcc.dg/Walloca-larger-than-4.c: New test.\n+\t* gcc.dg/Wvla-larger-than-5.c: New test.\n+\t* gcc.dg/pr79972.c: Remove unexpected warning directive.\n+\n+2021-05-10  Pat Haugen  <pthaugen@linux.ibm.com>\n+\n+\t* gcc.target/powerpc/fold-vec-insert-float-p9.c: Adjust counts.\n+\t* gcc.target/powerpc/vec-rlmi-rlnm.c: Likewise.\n+\n+2021-05-10  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/arm/simd/mve-vmul-scalar-1.c: New.\n+\n+2021-05-10  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/arm/simd/mve-vsub-scalar-1.c: New test.\n+\n+2021-05-10  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR tree-optimization/42587\n+\t* gcc.dg/optimize-bswapsi-6.c: New test.\n+\n+2021-05-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR testsuite/100452\n+\t* g++.dg/vect/slp-pr99971.cc: Align data.\n+\n+2021-05-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/100492\n+\t* gcc.dg/torture/pr100492.c: New testcase.\n+\n+2021-05-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/100464\n+\tPR c++/100468\n+\t* gcc.dg/pr100464.c: New testcase.\n+\t* g++.dg/tree-ssa/array-temp1.C: Adjust.\n+\n+2021-05-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/100434\n+\t* gcc.dg/tree-ssa/ssa-dse-43.c: New testcase.\n+\n+2021-05-10  Alex Coplan  <alex.coplan@arm.com>\n+\n+\tPR target/99960\n+\t* gcc.target/arm/mve/intrinsics/vldrdq_gather_base_wb_s64.c:\n+\tUpdate now that we're (correctly) using full 128-bit vector\n+\tloads/stores.\n+\t* gcc.target/arm/mve/intrinsics/vldrdq_gather_base_wb_u64.c:\n+\tLikewise.\n+\t* gcc.target/arm/mve/intrinsics/vldrdq_gather_base_wb_z_s64.c:\n+\tLikewise.\n+\t* gcc.target/arm/mve/intrinsics/vldrdq_gather_base_wb_z_u64.c:\n+\tLikewise.\n+\t* gcc.target/arm/mve/intrinsics/vuninitializedq_int.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vuninitializedq_int1.c:\n+\tLikewise.\n+\n 2021-05-08  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/46991"}, {"sha": "a0bf18b051613e0e6428f497645350936423b4ba", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa891c56f25baac94db004e309d1b6e40b770a95/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa891c56f25baac94db004e309d1b6e40b770a95/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=aa891c56f25baac94db004e309d1b6e40b770a95", "patch": "@@ -1,3 +1,8 @@\n+2021-05-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* libgcov-driver.c (gcov_version): Use different name that does\n+\tnot clash with newly introduced macro.\n+\n 2021-04-29  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* libgcov.h: For the target, define GCOV_LOCKED_WITH_LOCKING"}, {"sha": "62118c0dbfc8697adcfd8892c741bc9ddcd27c00", "filename": "libphobos/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa891c56f25baac94db004e309d1b6e40b770a95/libphobos%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa891c56f25baac94db004e309d1b6e40b770a95/libphobos%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FChangeLog?ref=aa891c56f25baac94db004e309d1b6e40b770a95", "patch": "@@ -1,3 +1,7 @@\n+2021-05-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* src/MERGE: Merge upstream phobos 32cfe9b61.\n+\n 2021-04-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* libdruntime/core/thread/osthread.d (callWithStackShell): Statically"}, {"sha": "6ca96fd0c2601145f1d425ef06f669d5607d78af", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 1071, "deletions": 0, "changes": 1071, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa891c56f25baac94db004e309d1b6e40b770a95/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa891c56f25baac94db004e309d1b6e40b770a95/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=aa891c56f25baac94db004e309d1b6e40b770a95", "patch": "@@ -1,3 +1,1074 @@\n+2021-05-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/stop_token: Remove TODO comment.\n+\n+2021-05-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/shared_ptr_base.h (__shared_count(unique_ptr&&)):\n+\tInitialize a non-reference deleter from an rvalue, as per LWG\n+\t3548.\n+\t(__shared_ptr::_UniqCompatible): Add missing constraint.\n+\t* testsuite/20_util/shared_ptr/cons/lwg3548.cc: New test.\n+\t* testsuite/20_util/shared_ptr/cons/unique_ptr_deleter.cc: Check\n+\tconstraints.\n+\n+2021-05-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/17_intro/headers/c++2017/all_attributes.cc: Remove\n+\t-std=gnu++17 from dg-options directive.\n+\t* testsuite/17_intro/headers/c++2017/all_no_exceptions.cc:\n+\tLikewise.\n+\t* testsuite/17_intro/headers/c++2017/all_pedantic_errors.cc:\n+\tLikewise.\n+\t* testsuite/17_intro/headers/c++2017/operator_names.cc:\n+\tLikewise.\n+\t* testsuite/17_intro/headers/c++2017/parallel_mode.cc: Likewise.\n+\t* testsuite/17_intro/headers/c++2017/stdc++.cc: Likewise.\n+\t* testsuite/17_intro/headers/c++2017/stdc++_multiple_inclusion.cc:\n+\tLikewise.\n+\t* testsuite/18_support/aligned_alloc/aligned_alloc.cc: Likewise.\n+\t* testsuite/18_support/byte/81076.cc: Likewise.\n+\t* testsuite/18_support/byte/global_neg.cc: Likewise.\n+\t* testsuite/18_support/byte/ops.cc: Likewise.\n+\t* testsuite/18_support/byte/requirements.cc: Likewise.\n+\t* testsuite/18_support/headers/cfloat/values_c++17.cc: Likewise.\n+\t* testsuite/18_support/launder/1.cc: Likewise.\n+\t* testsuite/18_support/launder/nodiscard.cc: Likewise.\n+\t* testsuite/18_support/launder/requirements.cc: Likewise.\n+\t* testsuite/18_support/launder/requirements_neg.cc: Likewise.\n+\t* testsuite/18_support/new_aligned.cc: Likewise.\n+\t* testsuite/18_support/uncaught_exceptions/uncaught_exceptions.cc:\n+\tLikewise.\n+\t* testsuite/19_diagnostics/error_code/is_error_code_v.cc:\n+\tLikewise.\n+\t* testsuite/19_diagnostics/error_condition/hash.cc: Likewise.\n+\t* testsuite/20_util/addressof/requirements/constexpr.cc:\n+\tLikewise.\n+\t* testsuite/20_util/as_const/1.cc: Likewise.\n+\t* testsuite/20_util/as_const/rvalue_neg.cc: Likewise.\n+\t* testsuite/20_util/bind/83427.cc: Likewise.\n+\t* testsuite/20_util/bind/is_placeholder_v.cc: Likewise.\n+\t* testsuite/20_util/bool_constant/requirements.cc: Likewise.\n+\t* testsuite/20_util/duration/arithmetic/constexpr_c++17.cc:\n+\tLikewise.\n+\t* testsuite/20_util/duration/requirements/treat_as_floating_point_v.cc:\n+\tLikewise.\n+\t* testsuite/20_util/duration_cast/rounding.cc: Likewise.\n+\t* testsuite/20_util/enable_shared_from_this/members/weak_from_this.cc:\n+\tLikewise.\n+\t* testsuite/20_util/from_chars/1_neg.cc: Likewise.\n+\t* testsuite/20_util/from_chars/requirements.cc: Likewise.\n+\t* testsuite/20_util/function/91456.cc: Likewise.\n+\t* testsuite/20_util/function/cons/deduction.cc: Likewise.\n+\t* testsuite/20_util/function_objects/83607.cc: Likewise.\n+\t* testsuite/20_util/function_objects/invoke/59768.cc: Likewise.\n+\t* testsuite/20_util/function_objects/mem_fn/80478.cc: Likewise.\n+\t* testsuite/20_util/function_objects/not_fn/1.cc: Likewise.\n+\t* testsuite/20_util/function_objects/not_fn/87538.cc: Likewise.\n+\t* testsuite/20_util/has_unique_object_representations/requirements/explicit_instantiation.cc:\n+\tLikewise.\n+\t* testsuite/20_util/has_unique_object_representations/requirements/typedefs.cc:\n+\tLikewise.\n+\t* testsuite/20_util/has_unique_object_representations/value.cc:\n+\tLikewise.\n+\t* testsuite/20_util/hash/nullptr.cc: Likewise.\n+\t* testsuite/20_util/in_place/requirements.cc: Likewise.\n+\t* testsuite/20_util/is_aggregate/incomplete_neg.cc: Likewise.\n+\t* testsuite/20_util/is_aggregate/requirements/explicit_instantiation.cc:\n+\tLikewise.\n+\t* testsuite/20_util/is_aggregate/requirements/typedefs.cc:\n+\tLikewise.\n+\t* testsuite/20_util/is_aggregate/value.cc: Likewise.\n+\t* testsuite/20_util/is_invocable/83395.cc: Likewise.\n+\t* testsuite/20_util/is_invocable/91456.cc: Likewise.\n+\t* testsuite/20_util/is_invocable/requirements/explicit_instantiation.cc:\n+\tLikewise.\n+\t* testsuite/20_util/is_invocable/requirements/typedefs.cc:\n+\tLikewise.\n+\t* testsuite/20_util/is_invocable/value.cc: Likewise.\n+\t* testsuite/20_util/is_literal_type/deprecated-1z.cc: Likewise.\n+\t* testsuite/20_util/is_nothrow_constructible/94003.cc: Likewise.\n+\t* testsuite/20_util/is_nothrow_invocable/83395.cc: Likewise.\n+\t* testsuite/20_util/is_nothrow_invocable/requirements/explicit_instantiation.cc:\n+\tLikewise.\n+\t* testsuite/20_util/is_nothrow_invocable/requirements/typedefs.cc: Likewise.\n+\t* testsuite/20_util/is_nothrow_invocable/value.cc: Likewise.\n+\t* testsuite/20_util/is_nothrow_swappable/requirements/explicit_instantiation.cc:\n+\tLikewise.\n+\t* testsuite/20_util/is_nothrow_swappable/requirements/typedefs.cc:\n+\tLikewise.\n+\t* testsuite/20_util/is_nothrow_swappable/value.cc: Likewise.\n+\t* testsuite/20_util/is_nothrow_swappable_with/requirements/explicit_instantiation.cc:\n+\tLikewise.\n+\t* testsuite/20_util/is_nothrow_swappable_with/requirements/typedefs.cc:\n+\tLikewise.\n+\t* testsuite/20_util/is_nothrow_swappable_with/value.cc:\n+\tLikewise.\n+\t* testsuite/20_util/is_swappable/requirements/explicit_instantiation.cc:\n+\tLikewise.\n+\t* testsuite/20_util/is_swappable/requirements/typedefs.cc:\n+\tLikewise.\n+\t* testsuite/20_util/is_swappable/value.cc: Likewise.\n+\t* testsuite/20_util/is_swappable_with/requirements/explicit_instantiation.cc:\n+\tLikewise.\n+\t* testsuite/20_util/is_swappable_with/requirements/typedefs.cc:\n+\tLikewise.\n+\t* testsuite/20_util/is_swappable_with/value.cc: Likewise.\n+\t* testsuite/20_util/logical_traits/83134.cc: Likewise.\n+\t* testsuite/20_util/logical_traits/requirements/explicit_instantiation.cc:\n+\tLikewise.\n+\t* testsuite/20_util/logical_traits/requirements/typedefs.cc:\n+\tLikewise.\n+\t* testsuite/20_util/logical_traits/value.cc: Likewise.\n+\t* testsuite/20_util/pair/cons/deduction.cc: Likewise.\n+\t* testsuite/20_util/pair/swap_cxx17.cc: Likewise.\n+\t* testsuite/20_util/ratio/requirements/ratio_equal_v.cc:\n+\tLikewise.\n+\t* testsuite/20_util/reference_wrapper/83427.cc: Likewise.\n+\t* testsuite/20_util/reference_wrapper/deduction.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/casts/reinterpret.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/deduction.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/requirements/weak_type.cc:\n+\tLikewise.\n+\t* testsuite/20_util/time_point/arithmetic/constexpr.cc:\n+\tLikewise.\n+\t* testsuite/20_util/time_point_cast/rounding.cc: Likewise.\n+\t* testsuite/20_util/to_chars/3.cc: Likewise.\n+\t* testsuite/20_util/to_chars/chars_format.cc: Likewise.\n+\t* testsuite/20_util/to_chars/lwg3266.cc: Likewise.\n+\t* testsuite/20_util/to_chars/requirements.cc: Likewise.\n+\t* testsuite/20_util/tuple/78939.cc: Likewise.\n+\t* testsuite/20_util/tuple/apply/1.cc: Likewise.\n+\t* testsuite/20_util/tuple/apply/2.cc: Likewise.\n+\t* testsuite/20_util/tuple/cons/deduction.cc: Likewise.\n+\t* testsuite/20_util/tuple/make_from_tuple/1.cc: Likewise.\n+\t* testsuite/20_util/tuple/make_from_tuple/2.cc: Likewise.\n+\t* testsuite/20_util/tuple/swap_cxx17.cc: Likewise.\n+\t* testsuite/20_util/tuple/tuple_size_v.cc: Likewise.\n+\t* testsuite/20_util/unique_ptr/cons/deduction_neg.cc: Likewise.\n+\t* testsuite/20_util/uses_allocator/requirements/uses_allocator_v.cc:\n+\tLikewise.\n+\t* testsuite/20_util/variable_templates_for_traits.cc: Likewise.\n+\t* testsuite/20_util/void_t/1.cc: Likewise.\n+\t* testsuite/20_util/weak_ptr/cons/deduction.cc: Likewise.\n+\t* testsuite/24_iterators/container_access.cc: Likewise.\n+\t* testsuite/24_iterators/headers/iterator/range_access_c++17.cc:\n+\tLikewise.\n+\t* testsuite/24_iterators/headers/iterator/synopsis_c++17.cc:\n+\tLikewise.\n+\t* testsuite/24_iterators/range_access/range_access_cpp17.cc:\n+\tLikewise.\n+\t* testsuite/24_iterators/range_access/range_access_cpp17_neg.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/gcd/gcd_neg.cc: Likewise.\n+\t* testsuite/26_numerics/headers/cmath/functions_std_c++17.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/headers/cmath/hypot.cc: Likewise.\n+\t* testsuite/26_numerics/headers/cmath/special_functions_global.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/lcm/1.cc: Likewise.\n+\t* testsuite/26_numerics/lcm/lcm_neg.cc: Likewise.\n+\t* testsuite/26_numerics/valarray/deduction.cc: Likewise.\n+\t* testsuite/27_io/basic_ostream/inserters_other/char/lwg2221.cc:\n+\tLikewise.\n+\t* testsuite/27_io/manipulators/standard/char/quoted_sv.cc:\n+\tLikewise.\n+\t* testsuite/27_io/manipulators/standard/wchar_t/quoted_sv.cc:\n+\tLikewise.\n+\t* testsuite/27_io/types/4.cc: Likewise.\n+\t* testsuite/28_regex/basic_regex/ctors/deduction.cc: Likewise.\n+\t* testsuite/libstdc++-prettyprinters/91997.cc: Likewise.\n+\t* testsuite/libstdc++-prettyprinters/cxx17.cc: Likewise.\n+\n+2021-05-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/20_util/function_objects/searchers.cc: Remove\n+\t-std=gnu++17 from dg-options directive.\n+\t* testsuite/20_util/specialized_algorithms/memory_management_tools/1.cc:\n+\tLikewise.\n+\t* testsuite/20_util/specialized_algorithms/memory_management_tools/destroy_neg.cc:\n+\tLikewise.\n+\t* testsuite/20_util/specialized_algorithms/uninitialized_value_construct/94540.cc:\n+\tLikewise.\n+\t* testsuite/20_util/specialized_algorithms/uninitialized_value_construct/94831.cc:\n+\tLikewise.\n+\t* testsuite/20_util/specialized_algorithms/uninitialized_value_construct_n/94540.cc:\n+\tLikewise.\n+\t* testsuite/20_util/specialized_algorithms/uninitialized_value_construct_n/sizes.cc:\n+\tLikewise.\n+\t* testsuite/20_util/unique_ptr/specialized_algorithms/swap_cxx17.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/clamp/1.cc: Likewise.\n+\t* testsuite/25_algorithms/clamp/2.cc: Likewise.\n+\t* testsuite/25_algorithms/clamp/constexpr.cc: Likewise.\n+\t* testsuite/25_algorithms/clamp/requirements/explicit_instantiation/1.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/clamp/requirements/explicit_instantiation/pod.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/for_each/for_each_n.cc: Likewise.\n+\t* testsuite/25_algorithms/for_each/for_each_n_debug.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/sample/1.cc: Likewise.\n+\t* testsuite/25_algorithms/sample/2.cc: Likewise.\n+\t* testsuite/25_algorithms/sample/3.cc: Likewise.\n+\t* testsuite/25_algorithms/sample/81221.cc: Likewise.\n+\t* testsuite/25_algorithms/search/searcher.cc: Likewise.\n+\t* testsuite/26_numerics/exclusive_scan/1.cc: Likewise.\n+\t* testsuite/26_numerics/inclusive_scan/1.cc: Likewise.\n+\t* testsuite/26_numerics/reduce/1.cc: Likewise.\n+\t* testsuite/26_numerics/reduce/2.cc: Likewise.\n+\t* testsuite/26_numerics/transform_exclusive_scan/1.cc: Likewise.\n+\t* testsuite/26_numerics/transform_inclusive_scan/1.cc: Likewise.\n+\t* testsuite/26_numerics/transform_reduce/1.cc: Likewise.\n+\n+2021-05-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/23_containers/array/cons/deduction.cc: Remove\n+\t-std=gnu++17 from dg-options directive.\n+\t* testsuite/23_containers/array/cons/deduction_neg.cc: Likewise.\n+\t* testsuite/23_containers/array/element_access/constexpr_c++17.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/array/requirements/constexpr_iter.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/array/specialized_algorithms/swap_cxx17.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/deque/cons/deduction.cc: Likewise.\n+\t* testsuite/23_containers/deque/modifiers/emplace/cxx17_return.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/forward_list/cons/deduction.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/forward_list/modifiers/emplace_cxx17_return.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/list/cons/deduction.cc: Likewise.\n+\t* testsuite/23_containers/list/modifiers/emplace/cxx17_return.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/map/cons/deduction.cc: Likewise.\n+\t* testsuite/23_containers/map/modifiers/extract.cc: Likewise.\n+\t* testsuite/23_containers/map/modifiers/insert/83226.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/map/modifiers/insert_or_assign/1.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/map/modifiers/merge.cc: Likewise.\n+\t* testsuite/23_containers/map/modifiers/try_emplace/1.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/multimap/cons/deduction.cc: Likewise.\n+\t* testsuite/23_containers/multimap/modifiers/extract.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/multimap/modifiers/merge.cc: Likewise.\n+\t* testsuite/23_containers/multiset/cons/deduction.cc: Likewise.\n+\t* testsuite/23_containers/multiset/modifiers/extract.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/multiset/modifiers/merge.cc: Likewise.\n+\t* testsuite/23_containers/priority_queue/deduction.cc: Likewise.\n+\t* testsuite/23_containers/queue/deduction.cc: Likewise.\n+\t* testsuite/23_containers/queue/members/emplace_cxx17_return.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/set/cons/deduction.cc: Likewise.\n+\t* testsuite/23_containers/set/modifiers/extract.cc: Likewise.\n+\t* testsuite/23_containers/set/modifiers/merge.cc: Likewise.\n+\t* testsuite/23_containers/set/modifiers/node_swap.cc: Likewise.\n+\t* testsuite/23_containers/stack/deduction.cc: Likewise.\n+\t* testsuite/23_containers/stack/members/emplace_cxx17_return.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_map/cons/deduction.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_map/modifiers/extract.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_map/modifiers/insert_or_assign.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_map/modifiers/merge.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_map/modifiers/try_emplace.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_multimap/cons/deduction.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_multimap/modifiers/extract.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_multimap/modifiers/merge.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_multiset/cons/deduction.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_multiset/modifiers/extract.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_multiset/modifiers/merge.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_set/cons/deduction.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_set/modifiers/extract.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_set/modifiers/merge.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/vector/bool/emplace_cxx17_return.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/vector/cons/89164_c++17.cc: Likewise.\n+\t* testsuite/23_containers/vector/cons/deduction.cc: Likewise.\n+\t* testsuite/23_containers/vector/modifiers/emplace/cxx17_return.cc:\n+\tLikewise.\n+\n+2021-05-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/21_strings/basic_string/79162.cc: Remove\n+\t-std=gnu++17 from dg-options directive.\n+\t* testsuite/21_strings/basic_string/cons/char/7.cc: Likewise.\n+\t* testsuite/21_strings/basic_string/cons/char/79162.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/cons/char/86138.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/cons/char/9.cc: Likewise.\n+\t* testsuite/21_strings/basic_string/cons/char/deduction.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/cons/char/moveable2_c++17.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/cons/wchar_t/7.cc: Likewise.\n+\t* testsuite/21_strings/basic_string/cons/wchar_t/79162.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/cons/wchar_t/86138.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/cons/wchar_t/9.cc: Likewise.\n+\t* testsuite/21_strings/basic_string/cons/wchar_t/deduction.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/cons/wchar_t/moveable2_c++17.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/hash/hash.cc: Likewise.\n+\t* testsuite/21_strings/basic_string/lwg2758.cc: Likewise.\n+\t* testsuite/21_strings/basic_string/lwg2946.cc: Likewise.\n+\t* testsuite/21_strings/basic_string/modifiers/append/char/4.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/modifiers/append/wchar_t/4.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/modifiers/assign/char/4.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/modifiers/assign/wchar_t/4.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/modifiers/insert/char/3.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/modifiers/insert/wchar_t/3.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/modifiers/replace/char/7.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/modifiers/replace/wchar_t/7.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/operations/compare/char/2.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/operations/compare/wchar_t/2.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/operations/data/char/2.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/operations/data/char/86169.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/operations/data/wchar_t/2.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/operations/find/char/5.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/operations/find/wchar_t/5.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/operators/char/5.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/operators/wchar_t/5.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/capacity/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/capacity/empty_neg.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/cons/char/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/cons/char/2.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/cons/char/3.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/cons/char/nonnull.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/cons/wchar_t/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/cons/wchar_t/2.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/cons/wchar_t/3.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/cons/wchar_t/nonnull.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/element_access/char/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/element_access/char/2.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/element_access/char/back_constexpr_neg.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/element_access/char/constexpr.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/element_access/char/constexpr_neg.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/element_access/char/empty.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/element_access/char/front_back.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/element_access/char/front_back_constexpr.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/element_access/char/front_constexpr_neg.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/element_access/wchar_t/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/element_access/wchar_t/2.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/element_access/wchar_t/back_constexpr_neg.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/element_access/wchar_t/constexpr.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/element_access/wchar_t/constexpr_neg.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/element_access/wchar_t/empty.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/element_access/wchar_t/front_back.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/element_access/wchar_t/front_constexpr_neg.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/include.cc: Likewise.\n+\t* testsuite/21_strings/basic_string_view/inserters/94051.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/inserters/char/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/inserters/char/2.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/inserters/char/3.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/inserters/pod/10081-out.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/inserters/wchar_t/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/inserters/wchar_t/2.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/inserters/wchar_t/3.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/literals/types-char8_t.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/literals/types.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/literals/values-char8_t.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/literals/values.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/modifiers/remove_prefix/char/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/modifiers/remove_prefix/wchar_t/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/modifiers/remove_suffix/char/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/modifiers/remove_suffix/wchar_t/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/modifiers/swap/char/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/modifiers/swap/wchar_t/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/compare/char/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/compare/char/13650.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/compare/char/2.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/compare/char/70483.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/compare/char/nonnull.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/compare/wchar_t/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/compare/wchar_t/13650.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/compare/wchar_t/2.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/copy/char/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/copy/char/2.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/copy/wchar_t/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/copy/wchar_t/2.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/data/char/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/data/wchar_t/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/find/char/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/find/char/2.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/find/char/3.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/find/char/4.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/find/char/nonnull.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/find/wchar_t/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/find/wchar_t/2.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/find/wchar_t/3.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/find/wchar_t/4.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/rfind/char/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/rfind/char/2.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/rfind/char/3.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/rfind/char/nonnull.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/rfind/wchar_t/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/rfind/wchar_t/2.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/rfind/wchar_t/3.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/string_conversion/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/substr/char/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/substr/char/83511.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/substr/wchar_t/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/substr/wchar_t/83511.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operators/char/2.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operators/char/89446.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operators/wchar_t/2.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operators/wchar_t/89446.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/range_access/char/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/range_access/wchar_t/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/requirements/explicit_instantiation/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/requirements/explicit_instantiation/char/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/requirements/explicit_instantiation/char16_t/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/requirements/explicit_instantiation/char32_t/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/requirements/explicit_instantiation/char8_t/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/requirements/explicit_instantiation/wchar_t/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/requirements/traits_neg.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/requirements/typedefs.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/typedefs.cc: Likewise.\n+\t* testsuite/21_strings/basic_string_view/types/1.cc: Likewise.\n+\t* testsuite/21_strings/char_traits/requirements/char/99181.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/char_traits/requirements/constexpr_functions_c++17.cc:\n+\n+2021-05-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/20_util/memory_resource/1.cc: Remove -std=gnu++17\n+\tfrom dg-options directive.\n+\t* testsuite/20_util/memory_resource/2.cc: Likewise.\n+\t* testsuite/20_util/monotonic_buffer_resource/1.cc: Likewise.\n+\t* testsuite/20_util/monotonic_buffer_resource/93208.cc:\n+\tLikewise.\n+\t* testsuite/20_util/monotonic_buffer_resource/allocate.cc:\n+\tLikewise.\n+\t* testsuite/20_util/monotonic_buffer_resource/deallocate.cc:\n+\tLikewise.\n+\t* testsuite/20_util/monotonic_buffer_resource/release.cc:\n+\tLikewise.\n+\t* testsuite/20_util/monotonic_buffer_resource/upstream_resource.cc:\n+\tLikewise.\n+\t* testsuite/20_util/polymorphic_allocator/1.cc: Likewise.\n+\t* testsuite/20_util/polymorphic_allocator/construct_pair.cc:\n+\tLikewise.\n+\t* testsuite/20_util/polymorphic_allocator/resource.cc: Likewise.\n+\t* testsuite/20_util/polymorphic_allocator/select.cc: Likewise.\n+\t* testsuite/20_util/synchronized_pool_resource/allocate.cc:\n+\tLikewise.\n+\t* testsuite/20_util/synchronized_pool_resource/allocate_single.cc:\n+\tLikewise.\n+\t* testsuite/20_util/synchronized_pool_resource/cons.cc:\n+\tLikewise.\n+\t* testsuite/20_util/synchronized_pool_resource/cons_single.cc:\n+\tLikewise.\n+\t* testsuite/20_util/synchronized_pool_resource/is_equal.cc:\n+\tLikewise.\n+\t* testsuite/20_util/synchronized_pool_resource/multithreaded.cc:\n+\tLikewise.\n+\t* testsuite/20_util/synchronized_pool_resource/options.cc:\n+\tLikewise.\n+\t* testsuite/20_util/synchronized_pool_resource/release.cc:\n+\tLikewise.\n+\t* testsuite/20_util/synchronized_pool_resource/release_single.cc:\n+\tLikewise.\n+\t* testsuite/20_util/unsynchronized_pool_resource/allocate-max-chunks.cc:\n+\tLikewise.\n+\t* testsuite/20_util/unsynchronized_pool_resource/allocate.cc:\n+\tLikewise.\n+\t* testsuite/20_util/unsynchronized_pool_resource/cons.cc:\n+\tLikewise.\n+\t* testsuite/20_util/unsynchronized_pool_resource/is_equal.cc:\n+\tLikewise.\n+\t* testsuite/20_util/unsynchronized_pool_resource/options.cc:\n+\tLikewise.\n+\t* testsuite/20_util/unsynchronized_pool_resource/release.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/types/pmr_typedefs.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/deque/types/pmr_typedefs.cc: Likewise.\n+\t* testsuite/23_containers/deque/types/pmr_typedefs_debug.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/forward_list/pmr_typedefs.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/forward_list/pmr_typedefs_debug.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/list/pmr_typedefs.cc: Likewise.\n+\t* testsuite/23_containers/list/pmr_typedefs_debug.cc: Likewise.\n+\t* testsuite/23_containers/map/pmr_typedefs.cc: Likewise.\n+\t* testsuite/23_containers/map/pmr_typedefs_debug.cc: Likewise.\n+\t* testsuite/23_containers/multimap/pmr_typedefs.cc: Likewise.\n+\t* testsuite/23_containers/multimap/pmr_typedefs_debug.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/multiset/pmr_typedefs.cc: Likewise.\n+\t* testsuite/23_containers/multiset/pmr_typedefs_debug.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/set/pmr_typedefs.cc: Likewise.\n+\t* testsuite/23_containers/set/pmr_typedefs_debug.cc: Likewise.\n+\t* testsuite/23_containers/unordered_map/pmr_typedefs.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_map/pmr_typedefs_debug.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_multimap/pmr_typedefs.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_multimap/pmr_typedefs_debug.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_multiset/pmr_typedefs.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_multiset/pmr_typedefs_debug.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_set/pmr_typedefs.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_set/pmr_typedefs_debug.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/vector/pmr_typedefs.cc: Likewise.\n+\t* testsuite/23_containers/vector/types/pmr_typedefs_debug.cc:\n+\tLikewise.\n+\t* testsuite/28_regex/match_results/pmr_typedefs.cc: Likewise.\n+\n+2021-05-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/29_atomics/atomic/69769.cc: Remove -std=gnu++17 from\n+\tdg-options.\n+\t* testsuite/29_atomics/atomic/is_always_lock_free.cc:\n+\t* testsuite/29_atomics/atomic/requirements/typedefs.cc:\n+\t* testsuite/29_atomics/atomic_integral/is_always_lock_free.cc:\n+\t* testsuite/29_atomics/atomic_integral/requirements/typedefs.cc:\n+\t* testsuite/30_threads/lock_guard/cons/deduction.cc: Likewise.\n+\t* testsuite/30_threads/scoped_lock/cons/1.cc: Likewise.\n+\t* testsuite/30_threads/scoped_lock/cons/deduction.cc: Likewise.\n+\t* testsuite/30_threads/scoped_lock/requirements/explicit_instantiation.cc:\n+\tLikewise.\n+\t* testsuite/30_threads/scoped_lock/requirements/typedefs.cc:\n+\tLikewise.\n+\t* testsuite/30_threads/shared_lock/70766.cc: Likewise.\n+\t* testsuite/30_threads/shared_mutex/cons/1.cc: Likewise.\n+\t* testsuite/30_threads/shared_mutex/cons/assign_neg.cc:\n+\tLikewise.\n+\t* testsuite/30_threads/shared_mutex/cons/copy_neg.cc: Likewise.\n+\t* testsuite/30_threads/shared_mutex/requirements/standard_layout.cc:\n+\tLikewise.\n+\t* testsuite/30_threads/shared_mutex/try_lock/1.cc: Likewise.\n+\t* testsuite/30_threads/shared_mutex/try_lock/2.cc: Likewise.\n+\t* testsuite/30_threads/shared_mutex/unlock/1.cc: Likewise.\n+\t* testsuite/30_threads/unique_lock/cons/deduction.cc: Likewise.\n+\n+2021-05-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/20_util/any/assign/1.cc: Remove -std=gnu++17 from\n+\tdg-options directive.\n+\t* testsuite/20_util/any/assign/2.cc: Likewise.\n+\t* testsuite/20_util/any/assign/emplace.cc: Likewise.\n+\t* testsuite/20_util/any/assign/exception.cc: Likewise.\n+\t* testsuite/20_util/any/assign/self.cc: Likewise.\n+\t* testsuite/20_util/any/cons/1.cc: Likewise.\n+\t* testsuite/20_util/any/cons/2.cc: Likewise.\n+\t* testsuite/20_util/any/cons/90415.cc: Likewise.\n+\t* testsuite/20_util/any/cons/92156.cc: Likewise.\n+\t* testsuite/20_util/any/cons/aligned.cc: Likewise.\n+\t* testsuite/20_util/any/cons/explicit.cc: Likewise.\n+\t* testsuite/20_util/any/cons/in_place.cc: Likewise.\n+\t* testsuite/20_util/any/cons/nontrivial.cc: Likewise.\n+\t* testsuite/20_util/any/make_any.cc: Likewise.\n+\t* testsuite/20_util/any/misc/any_cast.cc: Likewise.\n+\t* testsuite/20_util/any/misc/any_cast_neg.cc: Likewise.\n+\t* testsuite/20_util/any/misc/any_cast_no_rtti.cc: Likewise.\n+\t* testsuite/20_util/any/misc/swap.cc: Likewise.\n+\t* testsuite/20_util/any/modifiers/1.cc: Likewise.\n+\t* testsuite/20_util/any/modifiers/83658.cc: Likewise.\n+\t* testsuite/20_util/any/modifiers/92156.cc: Likewise.\n+\t* testsuite/20_util/any/observers/type.cc: Likewise.\n+\t* testsuite/20_util/any/requirements.cc: Likewise.\n+\t* testsuite/20_util/any/typedefs.cc: Likewise.\n+\t* testsuite/20_util/optional/77288.cc: Likewise.\n+\t* testsuite/20_util/optional/84601.cc: Likewise.\n+\t* testsuite/20_util/optional/assignment/1.cc: Likewise.\n+\t* testsuite/20_util/optional/assignment/2.cc: Likewise.\n+\t* testsuite/20_util/optional/assignment/3.cc: Likewise.\n+\t* testsuite/20_util/optional/assignment/4.cc: Likewise.\n+\t* testsuite/20_util/optional/assignment/5.cc: Likewise.\n+\t* testsuite/20_util/optional/assignment/6.cc: Likewise.\n+\t* testsuite/20_util/optional/assignment/7.cc: Likewise.\n+\t* testsuite/20_util/optional/assignment/8.cc: Likewise.\n+\t* testsuite/20_util/optional/assignment/9.cc: Likewise.\n+\t* testsuite/20_util/optional/bad_access.cc: Likewise.\n+\t* testsuite/20_util/optional/cons/77727.cc: Likewise.\n+\t* testsuite/20_util/optional/cons/85642.cc: Likewise.\n+\t* testsuite/20_util/optional/cons/copy.cc: Likewise.\n+\t* testsuite/20_util/optional/cons/deduction.cc: Likewise.\n+\t* testsuite/20_util/optional/cons/default.cc: Likewise.\n+\t* testsuite/20_util/optional/cons/move.cc: Likewise.\n+\t* testsuite/20_util/optional/cons/trivial.cc: Likewise.\n+\t* testsuite/20_util/optional/cons/value.cc: Likewise.\n+\t* testsuite/20_util/optional/cons/value_neg.cc: Likewise.\n+\t* testsuite/20_util/optional/constexpr/cons/default.cc:\n+\tLikewise.\n+\t* testsuite/20_util/optional/constexpr/cons/value.cc: Likewise.\n+\t* testsuite/20_util/optional/constexpr/in_place.cc: Likewise.\n+\t* testsuite/20_util/optional/constexpr/make_optional.cc:\n+\tLikewise.\n+\t* testsuite/20_util/optional/constexpr/nullopt.cc: Likewise.\n+\t* testsuite/20_util/optional/constexpr/observers/1.cc: Likewise.\n+\t* testsuite/20_util/optional/constexpr/observers/2.cc: Likewise.\n+\t* testsuite/20_util/optional/constexpr/observers/3.cc: Likewise.\n+\t* testsuite/20_util/optional/constexpr/observers/4.cc: Likewise.\n+\t* testsuite/20_util/optional/constexpr/observers/5.cc: Likewise.\n+\t* testsuite/20_util/optional/constexpr/relops/1.cc: Likewise.\n+\t* testsuite/20_util/optional/constexpr/relops/2.cc: Likewise.\n+\t* testsuite/20_util/optional/constexpr/relops/3.cc: Likewise.\n+\t* testsuite/20_util/optional/constexpr/relops/4.cc: Likewise.\n+\t* testsuite/20_util/optional/constexpr/relops/5.cc: Likewise.\n+\t* testsuite/20_util/optional/constexpr/relops/6.cc: Likewise.\n+\t* testsuite/20_util/optional/hash.cc: Likewise.\n+\t* testsuite/20_util/optional/in_place.cc: Likewise.\n+\t* testsuite/20_util/optional/make_optional.cc: Likewise.\n+\t* testsuite/20_util/optional/nullopt.cc: Likewise.\n+\t* testsuite/20_util/optional/observers/1.cc: Likewise.\n+\t* testsuite/20_util/optional/observers/2.cc: Likewise.\n+\t* testsuite/20_util/optional/observers/3.cc: Likewise.\n+\t* testsuite/20_util/optional/observers/4.cc: Likewise.\n+\t* testsuite/20_util/optional/observers/5.cc: Likewise.\n+\t* testsuite/20_util/optional/observers/6.cc: Likewise.\n+\t* testsuite/20_util/optional/relops/1.cc: Likewise.\n+\t* testsuite/20_util/optional/relops/2.cc: Likewise.\n+\t* testsuite/20_util/optional/relops/3.cc: Likewise.\n+\t* testsuite/20_util/optional/relops/4.cc: Likewise.\n+\t* testsuite/20_util/optional/relops/5.cc: Likewise.\n+\t* testsuite/20_util/optional/relops/6.cc: Likewise.\n+\t* testsuite/20_util/optional/relops/7.cc: Likewise.\n+\t* testsuite/20_util/optional/requirements.cc: Likewise.\n+\t* testsuite/20_util/optional/swap/1.cc: Likewise.\n+\t* testsuite/20_util/optional/swap/2.cc: Likewise.\n+\t* testsuite/20_util/optional/typedefs.cc: Likewise.\n+\t* testsuite/20_util/variant/80165.cc: Likewise.\n+\t* testsuite/20_util/variant/85183.cc: Likewise.\n+\t* testsuite/20_util/variant/86874.cc: Likewise.\n+\t* testsuite/20_util/variant/87431.cc: Likewise.\n+\t* testsuite/20_util/variant/87619.cc: Likewise.\n+\t* testsuite/20_util/variant/91807.cc: Likewise.\n+\t* testsuite/20_util/variant/any.cc: Likewise.\n+\t* testsuite/20_util/variant/compile.cc: Likewise.\n+\t* testsuite/20_util/variant/deduction.cc: Likewise.\n+\t* testsuite/20_util/variant/exception_safety.cc: Likewise.\n+\t* testsuite/20_util/variant/hash.cc: Likewise.\n+\t* testsuite/20_util/variant/index_type.cc: Likewise.\n+\t* testsuite/20_util/variant/relops/89851.cc: Likewise.\n+\t* testsuite/20_util/variant/relops/90008.cc: Likewise.\n+\t* testsuite/20_util/variant/run.cc: Likewise.\n+\t* testsuite/20_util/variant/visit.cc: Likewise.\n+\n+2021-05-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/27_io/basic_filebuf/open/char/path.cc: Remove\n+\t-std=gnu++17 from dg-options directive.\n+\t* testsuite/27_io/basic_fstream/cons/char/path.cc: Likewise.\n+\t* testsuite/27_io/basic_fstream/open/char/path.cc: Likewise.\n+\t* testsuite/27_io/basic_ifstream/cons/char/path.cc: Likewise.\n+\t* testsuite/27_io/basic_ifstream/open/char/path.cc: Likewise.\n+\t* testsuite/27_io/basic_ofstream/cons/char/path.cc: Likewise.\n+\t* testsuite/27_io/basic_ofstream/open/char/path.cc: Likewise.\n+\t* testsuite/27_io/filesystem/directory_entry/86597.cc: Likewise.\n+\t* testsuite/27_io/filesystem/directory_entry/lwg3171.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/file_status/1.cc: Likewise.\n+\t* testsuite/27_io/filesystem/filesystem_error/cons.cc: Likewise.\n+\t* testsuite/27_io/filesystem/filesystem_error/copy.cc: Likewise.\n+\t* testsuite/27_io/filesystem/iterators/91067.cc: Likewise.\n+\t* testsuite/27_io/filesystem/iterators/caching.cc: Likewise.\n+\t* testsuite/27_io/filesystem/iterators/directory_iterator.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/iterators/pop.cc: Likewise.\n+\t* testsuite/27_io/filesystem/iterators/recursion_pending.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/iterators/recursive_directory_iterator.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/operations/absolute.cc: Likewise.\n+\t* testsuite/27_io/filesystem/operations/all.cc: Likewise.\n+\t* testsuite/27_io/filesystem/operations/canonical.cc: Likewise.\n+\t* testsuite/27_io/filesystem/operations/copy.cc: Likewise.\n+\t* testsuite/27_io/filesystem/operations/copy_file.cc: Likewise.\n+\t* testsuite/27_io/filesystem/operations/create_directories.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/operations/create_directory.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/operations/create_symlink.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/operations/current_path.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/operations/equivalent.cc: Likewise.\n+\t* testsuite/27_io/filesystem/operations/exists.cc: Likewise.\n+\t* testsuite/27_io/filesystem/operations/file_size.cc: Likewise.\n+\t* testsuite/27_io/filesystem/operations/is_empty.cc: Likewise.\n+\t* testsuite/27_io/filesystem/operations/last_write_time.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/operations/permissions.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/operations/proximate.cc: Likewise.\n+\t* testsuite/27_io/filesystem/operations/read_symlink.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/operations/relative.cc: Likewise.\n+\t* testsuite/27_io/filesystem/operations/remove.cc: Likewise.\n+\t* testsuite/27_io/filesystem/operations/remove_all.cc: Likewise.\n+\t* testsuite/27_io/filesystem/operations/rename.cc: Likewise.\n+\t* testsuite/27_io/filesystem/operations/resize_file.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/operations/space.cc: Likewise.\n+\t* testsuite/27_io/filesystem/operations/status.cc: Likewise.\n+\t* testsuite/27_io/filesystem/operations/symlink_status.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/operations/temp_directory_path.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/operations/weakly_canonical.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/path/append/path.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/append/source.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/assign/assign.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/assign/copy.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/compare/compare.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/compare/lwg2936.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/compare/path.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/compare/strings.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/concat/92853.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/concat/94063.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/concat/path.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/concat/strings.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/construct/80762.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/construct/90281.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/construct/90634.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/construct/copy.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/construct/default.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/path/construct/format.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/construct/locale.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/construct/range.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/construct/string_view.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/path/decompose/extension.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/path/decompose/filename.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/path/decompose/parent_path.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/path/decompose/relative_path.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/path/decompose/root_directory.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/path/decompose/root_name.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/path/decompose/root_path.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/path/decompose/stem.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/factory/u8path-char8_t.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/path/factory/u8path.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/generation/normal.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/path/generation/normal2.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/path/generation/proximate.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/path/generation/relative.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/path/generic/94242.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/generic/generic_string.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/path/generic/utf.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/generic/wchar_t.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/io/dr2989.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/itr/components.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/itr/traversal.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/modifiers/clear.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/modifiers/make_preferred.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/path/modifiers/remove_filename.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/path/modifiers/replace_extension.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/path/modifiers/replace_filename.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/path/modifiers/swap.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/native/alloc.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/native/string-char8_t.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/path/native/string.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/nonmember/append.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/nonmember/cmp.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/nonmember/hash_value.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/path/query/empty.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/query/empty_neg.cc:\n+\t* testsuite/27_io/filesystem/path/query/has_extension.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/path/query/has_filename.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/path/query/has_parent_path.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/path/query/has_relative_path.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/path/query/has_root_directory.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/path/query/has_root_name.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/path/query/has_root_path.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/path/query/has_stem.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/query/is_absolute.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/path/query/is_relative.cc:\n+\tLikewise.\n+\t* testsuite/experimental/filesystem/path/construct/string_view.cc:\n+\tLikewise.\n+\n+2021-05-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/20_util/specialized_algorithms/pstl/uninitialized_construct.cc:\n+\tRemove -std=gnu++17 from dg-options.\n+\t* testsuite/20_util/specialized_algorithms/pstl/uninitialized_copy_move.cc:\n+\tLikewise.\n+\t* testsuite/20_util/specialized_algorithms/pstl/uninitialized_fill_destroy.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_merge/inplace_merge.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_merge/merge.cc: Likewise.\n+\t* testsuite/25_algorithms/pstl/alg_modifying_operations/copy_if.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_modifying_operations/copy_move.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_modifying_operations/fill.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_modifying_operations/generate.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_modifying_operations/is_partitioned.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_modifying_operations/partition.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_modifying_operations/partition_copy.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_modifying_operations/remove.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_modifying_operations/remove_copy.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_modifying_operations/replace.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_modifying_operations/replace_copy.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_modifying_operations/rotate.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_modifying_operations/rotate_copy.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_modifying_operations/swap_ranges.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_modifying_operations/transform_binary.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_modifying_operations/transform_unary.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_modifying_operations/unique.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_modifying_operations/unique_copy_equal.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_nonmodifying/adjacent_find.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_nonmodifying/all_of.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_nonmodifying/any_of.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_nonmodifying/count.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_nonmodifying/equal.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_nonmodifying/find.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_nonmodifying/find_end.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_nonmodifying/find_first_of.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_nonmodifying/find_if.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_nonmodifying/for_each.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_nonmodifying/mismatch.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_nonmodifying/none_of.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_nonmodifying/nth_element.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_nonmodifying/reverse.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_nonmodifying/reverse_copy.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_nonmodifying/search_n.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_sorting/includes.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_sorting/is_heap.cc: Likewise.\n+\t* testsuite/25_algorithms/pstl/alg_sorting/is_sorted.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_sorting/lexicographical_compare.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_sorting/minmax_element.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_sorting/partial_sort.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_sorting/partial_sort_copy.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/pstl/alg_sorting/set.cc: Likewise.\n+\t* testsuite/25_algorithms/pstl/alg_sorting/sort.cc: Likewise.\n+\t* testsuite/25_algorithms/pstl/feature_test-2.cc: Likewise.\n+\t* testsuite/25_algorithms/pstl/feature_test-3.cc: Likewise.\n+\t* testsuite/25_algorithms/pstl/feature_test-4.cc: Likewise.\n+\t* testsuite/25_algorithms/pstl/feature_test-5.cc: Likewise.\n+\t* testsuite/25_algorithms/pstl/feature_test.cc: Likewise.\n+\t* testsuite/26_numerics/pstl/numeric_ops/adjacent_difference.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/pstl/numeric_ops/reduce.cc: Likewise.\n+\t* testsuite/26_numerics/pstl/numeric_ops/scan.cc: Likewise.\n+\t* testsuite/26_numerics/pstl/numeric_ops/transform_reduce.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/pstl/numeric_ops/transform_scan.cc:\n+\tLikewise.\n+\n+2021-05-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/20_util/scoped_allocator/69293_neg.cc: Add dg-error\n+\tfor additional errors in C++20.\n+\t* testsuite/20_util/specialized_algorithms/memory_management_tools/destroy_neg.cc:\n+\tLikewise.\n+\t* testsuite/20_util/uses_allocator/69293_neg.cc: Likewise.\n+\t* testsuite/27_io/filesystem/path/io/dr2989.cc: Likewise.\n+\n+2021-05-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/20_util/variant/compile.cc: Rename 'any' to avoid\n+\tclash with std::any.\n+\n 2021-05-07  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/std/istream (__rvalue_stream_extraction_t): Replace"}, {"sha": "d38aac9ad536dec5fad2e33170f409d2a75f428d", "filename": "lto-plugin/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa891c56f25baac94db004e309d1b6e40b770a95/lto-plugin%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa891c56f25baac94db004e309d1b6e40b770a95/lto-plugin%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FChangeLog?ref=aa891c56f25baac94db004e309d1b6e40b770a95", "patch": "@@ -1,3 +1,21 @@\n+2021-05-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* lto-plugin.c (LTO_SEGMENT_NAME): Remove.\n+\t(LTO_SYMTAB_PREFIX): Likewise.\n+\t(LTO_SYMTAB_PREFIX_LEN): Likewise.\n+\t(LTO_SYMTAB_EXT_PREFIX): Likewise.\n+\t(LTO_SYMTAB_EXT_PREFIX_LEN): Likewise.\n+\t(LTO_LTO_PREFIX): Likewise.\n+\t(LTO_LTO_PREFIX_LEN): Likewise.\n+\t(OFFLOAD_SECTION): Likewise.\n+\t(OFFLOAD_SECTION_LEN): Likewise.\n+\t(startswith): New function.\n+\t(all_symbols_read_handler): Use it.\n+\t(process_symtab): Likewise.\n+\t(process_symtab_extension): Likewise.\n+\t(process_offload_section): Likewise.\n+\t(process_option): Likewise.\n+\n 2021-05-03  H.J. Lu  <hjl.tools@gmail.com>\n \n \tPR bootstrap/99703"}]}