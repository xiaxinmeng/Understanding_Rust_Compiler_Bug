{"sha": "830e90dab3dee5c8129c7760ff09ab112c2cd271", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODMwZTkwZGFiM2RlZTVjODEyOWM3NzYwZmYwOWFiMTEyYzJjZDI3MQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-10-21T06:41:25Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-10-21T06:41:25Z"}, "message": "Pass a vec_info to vect_halve_mask_nunits\n\n2019-10-21  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* tree-vectorizer.h (vect_halve_mask_nunits): Take a vec_info.\n\t* tree-vect-loop.c (vect_halve_mask_nunits): Likewise.\n\t* tree-vect-loop-manip.c (vect_maybe_permute_loop_masks): Update\n\tcall accordingly.\n\t* tree-vect-stmts.c (supportable_widening_operation): Likewise.\n\nFrom-SVN: r277233", "tree": {"sha": "2bf4e4d0579a037c13060bc81260a98967b52a6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2bf4e4d0579a037c13060bc81260a98967b52a6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/830e90dab3dee5c8129c7760ff09ab112c2cd271", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/830e90dab3dee5c8129c7760ff09ab112c2cd271", "html_url": "https://github.com/Rust-GCC/gccrs/commit/830e90dab3dee5c8129c7760ff09ab112c2cd271", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/830e90dab3dee5c8129c7760ff09ab112c2cd271/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b0dab10e71b03441beefbbf951c0812056413cd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0dab10e71b03441beefbbf951c0812056413cd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0dab10e71b03441beefbbf951c0812056413cd3"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "8ae719252d398821391b0b533f5c29ae829f9873", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830e90dab3dee5c8129c7760ff09ab112c2cd271/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830e90dab3dee5c8129c7760ff09ab112c2cd271/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=830e90dab3dee5c8129c7760ff09ab112c2cd271", "patch": "@@ -1,3 +1,11 @@\n+2019-10-21  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* tree-vectorizer.h (vect_halve_mask_nunits): Take a vec_info.\n+\t* tree-vect-loop.c (vect_halve_mask_nunits): Likewise.\n+\t* tree-vect-loop-manip.c (vect_maybe_permute_loop_masks): Update\n+\tcall accordingly.\n+\t* tree-vect-stmts.c (supportable_widening_operation): Likewise.\n+\n 2019-10-21  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* tree-vect-loop-manip.c (vect_maybe_permute_loop_masks): Take"}, {"sha": "b3246bc7a099e491e5c2fd32835dc5c848931d0a", "filename": "gcc/tree-vect-loop-manip.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830e90dab3dee5c8129c7760ff09ab112c2cd271/gcc%2Ftree-vect-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830e90dab3dee5c8129c7760ff09ab112c2cd271/gcc%2Ftree-vect-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop-manip.c?ref=830e90dab3dee5c8129c7760ff09ab112c2cd271", "patch": "@@ -317,7 +317,7 @@ interleave_supported_p (vec_perm_indices *indices, tree vectype,\n    latter.  Return true on success, adding any new statements to SEQ.  */\n \n static bool\n-vect_maybe_permute_loop_masks (loop_vec_info, gimple_seq *seq,\n+vect_maybe_permute_loop_masks (loop_vec_info loop_vinfo, gimple_seq *seq,\n \t\t\t       rgroup_masks *dest_rgm,\n \t\t\t       rgroup_masks *src_rgm)\n {\n@@ -330,7 +330,7 @@ vect_maybe_permute_loop_masks (loop_vec_info, gimple_seq *seq,\n     {\n       /* Unpacking the source masks gives at least as many mask bits as\n \t we need.  We can then VIEW_CONVERT any excess bits away.  */\n-      tree unpack_masktype = vect_halve_mask_nunits (src_masktype);\n+      tree unpack_masktype = vect_halve_mask_nunits (loop_vinfo, src_masktype);\n       for (unsigned int i = 0; i < dest_rgm->masks.length (); ++i)\n \t{\n \t  tree src = src_rgm->masks[i / 2];"}, {"sha": "5c29084d6878e632509f27a2c35adfba3cc992ea", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830e90dab3dee5c8129c7760ff09ab112c2cd271/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830e90dab3dee5c8129c7760ff09ab112c2cd271/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=830e90dab3dee5c8129c7760ff09ab112c2cd271", "patch": "@@ -7745,7 +7745,7 @@ loop_niters_no_overflow (loop_vec_info loop_vinfo)\n /* Return a mask type with half the number of elements as TYPE.  */\n \n tree\n-vect_halve_mask_nunits (tree type)\n+vect_halve_mask_nunits (vec_info *, tree type)\n {\n   poly_uint64 nunits = exact_div (TYPE_VECTOR_SUBPARTS (type), 2);\n   return build_truth_vector_type (nunits, current_vector_size);"}, {"sha": "690e2c4012e33f83609563d3553cba809daff961", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830e90dab3dee5c8129c7760ff09ab112c2cd271/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830e90dab3dee5c8129c7760ff09ab112c2cd271/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=830e90dab3dee5c8129c7760ff09ab112c2cd271", "patch": "@@ -11385,6 +11385,7 @@ supportable_widening_operation (enum tree_code code, stmt_vec_info stmt_info,\n                                 int *multi_step_cvt,\n                                 vec<tree> *interm_types)\n {\n+  vec_info *vinfo = stmt_info->vinfo;\n   loop_vec_info loop_info = STMT_VINFO_LOOP_VINFO (stmt_info);\n   class loop *vect_loop = NULL;\n   machine_mode vec_mode;\n@@ -11570,7 +11571,7 @@ supportable_widening_operation (enum tree_code code, stmt_vec_info stmt_info,\n       intermediate_mode = insn_data[icode1].operand[0].mode;\n       if (VECTOR_BOOLEAN_TYPE_P (prev_type))\n \t{\n-\t  intermediate_type = vect_halve_mask_nunits (prev_type);\n+\t  intermediate_type = vect_halve_mask_nunits (vinfo, prev_type);\n \t  if (intermediate_mode != TYPE_MODE (intermediate_type))\n \t    return false;\n \t}"}, {"sha": "4199b7cb8ac9c32cf63decc12503192c8c4c80a5", "filename": "gcc/tree-vectorizer.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830e90dab3dee5c8129c7760ff09ab112c2cd271/gcc%2Ftree-vectorizer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830e90dab3dee5c8129c7760ff09ab112c2cd271/gcc%2Ftree-vectorizer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.h?ref=830e90dab3dee5c8129c7760ff09ab112c2cd271", "patch": "@@ -1705,7 +1705,7 @@ extern opt_loop_vec_info vect_analyze_loop (class loop *,\n extern tree vect_build_loop_niters (loop_vec_info, bool * = NULL);\n extern void vect_gen_vector_loop_niters (loop_vec_info, tree, tree *,\n \t\t\t\t\t tree *, bool);\n-extern tree vect_halve_mask_nunits (tree);\n+extern tree vect_halve_mask_nunits (vec_info *, tree);\n extern tree vect_double_mask_nunits (tree);\n extern void vect_record_loop_mask (loop_vec_info, vec_loop_masks *,\n \t\t\t\t   unsigned int, tree, tree);"}]}