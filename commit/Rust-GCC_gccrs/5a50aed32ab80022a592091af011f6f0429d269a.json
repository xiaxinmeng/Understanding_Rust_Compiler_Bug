{"sha": "5a50aed32ab80022a592091af011f6f0429d269a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE1MGFlZDMyYWI4MDAyMmE1OTIwOTFhZjAxMWY2ZjA0MjlkMjY5YQ==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2019-06-21T19:18:18Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2019-06-21T19:18:18Z"}, "message": "[Darwin, fixincludes] Fix Darwin9/10 math.h issues.\n\nDarwin has had long long functions for some considerable time and these are\nexposed in Darwin8 and Darwin11+ headers.  However, for some reason it was\nelected to hide them behind __STRICT_ANSI__ and __STDC_VERSION__ on Darwin9\nand Darwin10.  This is a problem for G++/libstdc++ that expects the functions\nto be available for strict ansi (-std=c++14, for example) and without\ndefining __STDC_VERSION__.  The fix here follows the pattern used in\nDarwin11+ headers where the functions may be explicitly hidden by defining\n__DARWIN_NO_LONG_LONG.\n\nThis fixes the tr1 testsuite fails seen on Darwin9 and 10.\n\n2019-06-21  Iain Sandoe  <iain@sandoe.co.uk>\n\n\t* inclhack.def: Replace the complex test using __STRICT_ANSI__ and\n\t__STDC_VERSION__ with a test using __DARWIN_NO_LONG_LONG.\n\tEnsure that the top level math.h uses <> to wrap included headers\n\trather than \"\".\n\t* fixincl.x: Regenerated.\n\t* tests/base/architecture/ppc/math.h: Update test to include the\n\t__DARWIN_NO_LONG_LONG case.\n\nFrom-SVN: r272563", "tree": {"sha": "5011a01629a2272159f6ed815d00b5c380275230", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5011a01629a2272159f6ed815d00b5c380275230"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a50aed32ab80022a592091af011f6f0429d269a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a50aed32ab80022a592091af011f6f0429d269a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a50aed32ab80022a592091af011f6f0429d269a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a50aed32ab80022a592091af011f6f0429d269a/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59a0b1db756fc17b952c8423b015154a7bd23d10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59a0b1db756fc17b952c8423b015154a7bd23d10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59a0b1db756fc17b952c8423b015154a7bd23d10"}], "stats": {"total": 93, "additions": 83, "deletions": 10}, "files": [{"sha": "be02029daffb4f7236cc58e189f12c3c180df492", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a50aed32ab80022a592091af011f6f0429d269a/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a50aed32ab80022a592091af011f6f0429d269a/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=5a50aed32ab80022a592091af011f6f0429d269a", "patch": "@@ -1,3 +1,13 @@\n+2019-06-21  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* inclhack.def: Replace the complex test using __STRICT_ANSI__ and\n+\t__STDC_VERSION__ with a test using __DARWIN_NO_LONG_LONG.\n+\tEnsure that the top level math.h uses <> to wrap included headers\n+\trather than \"\".\n+\t* fixincl.x: Regenerated.\n+\t* tests/base/architecture/ppc/math.h: Update test to include the\n+\t__DARWIN_NO_LONG_LONG case.\n+\n 2019-06-21  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* inclhack.def: Guard __has_attribute and __has_extension in"}, {"sha": "b9e029858430af0fa541e5666248db65bb3b04e4", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 48, "deletions": 6, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a50aed32ab80022a592091af011f6f0429d269a/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a50aed32ab80022a592091af011f6f0429d269a/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=5a50aed32ab80022a592091af011f6f0429d269a", "patch": "@@ -2,11 +2,11 @@\n  *\n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  *\n- * It has been AutoGen-ed  May 13, 2019 at 04:17:28 PM by AutoGen 5.17.4\n+ * It has been AutoGen-ed  June 21, 2019 at 08:06:27 PM by AutoGen 5.17.4\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Mon May 13 16:17:28 BST 2019\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Fri Jun 21 20:06:27 BST 2019\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 254 fixup descriptions.\n+ * This file contains 255 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -2650,7 +2650,7 @@ tSCC zDarwin_9_Long_Double_Funcs_2List[] =\n  *  Machine/OS name selection pattern\n  */\n tSCC* apzDarwin_9_Long_Double_Funcs_2Machs[] = {\n-        \"*-*-darwin7.9*\",\n+        \"*-*-darwin*\",\n         (const char*)NULL };\n \n /*\n@@ -2754,6 +2754,42 @@ static const char* apzDarwin_Gcc4_BreakagePatch[] = {\n     \"((__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 1))\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Darwin_Ll_Funcs_Avail fix\n+ */\n+tSCC zDarwin_Ll_Funcs_AvailName[] =\n+     \"darwin_ll_funcs_avail\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zDarwin_Ll_Funcs_AvailList[] =\n+  \"architecture/ppc/math.h\\0architecture/i386/math.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzDarwin_Ll_Funcs_AvailMachs[] = {\n+        \"*-*-darwin*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zDarwin_Ll_Funcs_AvailSelect0[] =\n+       \"#if[^_]*__STDC_VERSION__[^_]*__STDC_VERSION__[^1]*199901L[^_]*__STRICT_ANSI__[^_]*__GNUC__[^)]*\";\n+\n+#define    DARWIN_LL_FUNCS_AVAIL_TEST_CT  1\n+static tTestDesc aDarwin_Ll_Funcs_AvailTests[] = {\n+  { TT_EGREP,    zDarwin_Ll_Funcs_AvailSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Darwin_Ll_Funcs_Avail\n+ */\n+static const char* apzDarwin_Ll_Funcs_AvailPatch[] = { sed_cmd_z,\n+    \"-e\", \"s/#if[^_]*__STDC_VERSION__[^_]*__STDC_VERSION__[^_]*199901L[^_]*__STRICT_ANSI__[^_]*__GNUC__[^\\\\)]*)/#if !(__DARWIN_NO_LONG_LONG)/\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Darwin_Longjmp_Noreturn fix\n@@ -10310,9 +10346,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          292\n+#define REGEX_COUNT          293\n #define MACH_LIST_SIZE_LIMIT 187\n-#define FIX_COUNT            254\n+#define FIX_COUNT            255\n \n /*\n  *  Enumerate the fixes\n@@ -10383,6 +10419,7 @@ typedef enum {\n     DARWIN_9_LONG_DOUBLE_FUNCS_2_FIXIDX,\n     DARWIN_EXTERNC_FIXIDX,\n     DARWIN_GCC4_BREAKAGE_FIXIDX,\n+    DARWIN_LL_FUNCS_AVAIL_FIXIDX,\n     DARWIN_LONGJMP_NORETURN_FIXIDX,\n     DARWIN_OS_TRACE_1_FIXIDX,\n     DARWIN_OS_TRACE_2_FIXIDX,\n@@ -10900,6 +10937,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      DARWIN_GCC4_BREAKAGE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aDarwin_Gcc4_BreakageTests,   apzDarwin_Gcc4_BreakagePatch, 0 },\n \n+  {  zDarwin_Ll_Funcs_AvailName,    zDarwin_Ll_Funcs_AvailList,\n+     apzDarwin_Ll_Funcs_AvailMachs,\n+     DARWIN_LL_FUNCS_AVAIL_TEST_CT, FD_MACH_ONLY,\n+     aDarwin_Ll_Funcs_AvailTests,   apzDarwin_Ll_Funcs_AvailPatch, 0 },\n+\n   {  zDarwin_Longjmp_NoreturnName,    zDarwin_Longjmp_NoreturnList,\n      apzDarwin_Longjmp_NoreturnMachs,\n      DARWIN_LONGJMP_NORETURN_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "861532c2a1d8f2c625f06e7211ee77f72c26540c", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a50aed32ab80022a592091af011f6f0429d269a/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a50aed32ab80022a592091af011f6f0429d269a/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=5a50aed32ab80022a592091af011f6f0429d269a", "patch": "@@ -1298,20 +1298,20 @@ fix = {\n };\n \n /*\n- *  For the AAB_darwin7_9_long_double_funcs fix to be useful,\n- *  you have to not use \"\" includes.\n+ *  For the AAB_darwin7_9_long_double_funcs fix (and later fixes for long long)\n+ *  to be useful, the main math.h must use <> and not \"\" includes.\n  */\n fix = {\n     hackname  = darwin_9_long_double_funcs_2;\n-    mach      = \"*-*-darwin7.9*\";\n+    mach      = \"*-*-darwin*\";\n     files     = math.h;\n     select    = '#include[ \\t]+\\\"';\n     c_fix     = format;\n     c_fix_arg = \"%1<%2.h>\";\n   \n     c_fix_arg = '([ \\t]*#[ \\t]*include[ \\t]+)\"([a-z0-9/]+)\\.h\"';\n   \n-    test_text = '#include \"architecture/ppc/math.h\"';\n+    test_text = '#include <architecture/ppc/math.h>';\n };\n \n /*\n@@ -1354,6 +1354,22 @@ fix = {\n   \t      \"(__GNUC_MINOR__ >= 1)\\n\";\n };\n \n+/*\n+ * math.h hides the long long functions that are available on the system for\n+ * 10.5 and 10.6 SDKs, we expect to use them in G++ without specifying a value\n+ * for __STDC_VERSION__, or switching __STRICT_ANSI__ off.\n+ */\n+fix = {\n+  hackname  = darwin_ll_funcs_avail;\n+  mach      = \"*-*-darwin*\";\n+  files     = architecture/ppc/math.h, architecture/i386/math.h;\n+  select    = \"#if[^_]*__STDC_VERSION__[^_]*__STDC_VERSION__[^1]*199901L[^_]*\"\n+\t      \"__STRICT_ANSI__[^_]*__GNUC__[^\\)]*\";\n+  sed       = \"s/#if[^_]*__STDC_VERSION__[^_]*__STDC_VERSION__[^_]*199901L[^_]*\"\n+\t      \"__STRICT_ANSI__[^_]*__GNUC__[^\\\\)]*\\)/#if\\ !\\(__DARWIN_NO_LONG_LONG\\)/\";\n+  test_text = \"#if\\ !(__DARWIN_NO_LONG_LONG)\";\n+};\n+\n /*\n  *  Before Mac OS X 10.8 <i386/setjmp.h> doesn't mark longjump noreturn.\n  */"}, {"sha": "e7db705f5f9a7c483673825157af6bc5f03310ab", "filename": "fixincludes/tests/base/architecture/ppc/math.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a50aed32ab80022a592091af011f6f0429d269a/fixincludes%2Ftests%2Fbase%2Farchitecture%2Fppc%2Fmath.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a50aed32ab80022a592091af011f6f0429d269a/fixincludes%2Ftests%2Fbase%2Farchitecture%2Fppc%2Fmath.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Farchitecture%2Fppc%2Fmath.h?ref=5a50aed32ab80022a592091af011f6f0429d269a", "patch": "@@ -12,3 +12,8 @@\n #if defined( BROKEN_NAN_CHECK )\n #if 1\n #endif  /* BROKEN_NAN_CHECK */\n+\n+\n+#if defined( DARWIN_LL_FUNCS_AVAIL_CHECK )\n+#if !(__DARWIN_NO_LONG_LONG)\n+#endif  /* DARWIN_LL_FUNCS_AVAIL_CHECK */"}]}