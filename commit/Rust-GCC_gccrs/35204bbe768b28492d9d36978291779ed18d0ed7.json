{"sha": "35204bbe768b28492d9d36978291779ed18d0ed7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzUyMDRiYmU3NjhiMjg0OTJkOWQzNjk3ODI5MTc3OWVkMThkMGVkNw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2009-06-10T22:58:22Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2009-06-10T22:58:22Z"}, "message": "re PR libstdc++/40289 (share/libstdc++/python/ pollutes common namespace)\n\n\tPR libstdc++/40289:\n\t* python/Makefile.in: Rebuild.\n\t* python/hook.in: Compute module path relative to objfile.\n\t* python/Makefile.am (pythondir): Redefine.\n\t(gdb.py): Subst toolexeclibdir.\n\t(install-data-local): Rewrite.\n\nFrom-SVN: r148357", "tree": {"sha": "700389077d760887c668dca195c3a7ee1960fd8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/700389077d760887c668dca195c3a7ee1960fd8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35204bbe768b28492d9d36978291779ed18d0ed7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35204bbe768b28492d9d36978291779ed18d0ed7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35204bbe768b28492d9d36978291779ed18d0ed7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35204bbe768b28492d9d36978291779ed18d0ed7/comments", "author": null, "committer": null, "parents": [{"sha": "a567fa6a3d2847584d38c4cee35e2273c8315013", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a567fa6a3d2847584d38c4cee35e2273c8315013", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a567fa6a3d2847584d38c4cee35e2273c8315013"}], "stats": {"total": 82, "additions": 74, "deletions": 8}, "files": [{"sha": "642fff10c9863e9ba166e8d427648d6af4c4590c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35204bbe768b28492d9d36978291779ed18d0ed7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35204bbe768b28492d9d36978291779ed18d0ed7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=35204bbe768b28492d9d36978291779ed18d0ed7", "patch": "@@ -1,3 +1,12 @@\n+2009-06-10  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR libstdc++/40289:\n+\t* python/Makefile.in: Rebuild.\n+\t* python/hook.in: Compute module path relative to objfile.\n+\t* python/Makefile.am (pythondir): Redefine.\n+\t(gdb.py): Subst toolexeclibdir.\n+\t(install-data-local): Rewrite.\n+\n 2009-06-09  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/move.h: Doxygen group fixes."}, {"sha": "50cc6d94541089d1d077a90e4bd8a24e7a7d1767", "filename": "libstdc++-v3/python/Makefile.am", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35204bbe768b28492d9d36978291779ed18d0ed7/libstdc%2B%2B-v3%2Fpython%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35204bbe768b28492d9d36978291779ed18d0ed7/libstdc%2B%2B-v3%2Fpython%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2FMakefile.am?ref=35204bbe768b28492d9d36978291779ed18d0ed7", "patch": "@@ -24,7 +24,7 @@\n include $(top_srcdir)/fragment.am\n \n ## Where to install the module code.\n-pythondir = $(pkgdatadir)/python\n+pythondir = $(datadir)/gcc-$(gcc_version)/python\n \n all-local: gdb.py\n \n@@ -34,10 +34,27 @@ nobase_python_DATA = \\\n     libstdcxx/__init__.py\n \n gdb.py: hook.in Makefile\n-\tsed -e 's,@dir@,$(pythondir),' < $(srcdir)/hook.in > $@\n+\tsed -e 's,@pythondir@,$(pythondir),' \\\n+\t    -e 's,@toolexeclibdir@,$(toolexeclibdir),' < $(srcdir)/hook.in > $@\n \n install-data-local: gdb.py\n \t@$(mkdir_p) $(DESTDIR)$(toolexeclibdir)\n-\t@libname=`cd $(toolexeclibdir) && ls -r libstdc++* | fgrep -v gdb.py | sed 1q`; \\\n+## We want to install gdb.py as SOMETHING-gdb.py.  SOMETHING is the\n+## full name of the final library.  We want to ignore symlinks, the\n+## .la file, and any previous -gdb.py file.  This is inherently\n+## fragile, but there does not seem to be a better option, because\n+## libtool hides the real names from us.\n+\t@here=`pwd`; cd $(toolexeclibdir); \\\n+\t  for file in libstdc++*; do \\\n+\t    case $$file in \\\n+\t      *-gdb.py) ;; \\\n+\t      *.la) ;; \\\n+\t      *) if test -h $$file; then \\\n+\t           continue; \\\n+\t         fi; \\\n+\t         libname=$$file;; \\\n+\t    esac; \\\n+\t  done; \\\n+\tcd $$here; \\\n \techo \" $(INSTALL_DATA) gdb.py $(DESTDIR)$(toolexeclibdir)/$$libname-gdb.py\"; \\\n \t$(INSTALL_DATA) gdb.py $(DESTDIR)$(toolexeclibdir)/$$libname-gdb.py"}, {"sha": "88cc7ea34c3e3e41f83ea632a9b619dca6f73680", "filename": "libstdc++-v3/python/Makefile.in", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35204bbe768b28492d9d36978291779ed18d0ed7/libstdc%2B%2B-v3%2Fpython%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35204bbe768b28492d9d36978291779ed18d0ed7/libstdc%2B%2B-v3%2Fpython%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2FMakefile.in?ref=35204bbe768b28492d9d36978291779ed18d0ed7", "patch": "@@ -298,7 +298,7 @@ WARN_CXXFLAGS = \\\n \n # -I/-D flags to pass when compiling.\n AM_CPPFLAGS = $(GLIBCXX_INCLUDES)\n-pythondir = $(pkgdatadir)/python\n+pythondir = $(datadir)/gcc-$(gcc_version)/python\n nobase_python_DATA = \\\n     libstdcxx/v6/printers.py \\\n     libstdcxx/v6/__init__.py \\\n@@ -492,11 +492,23 @@ uninstall-am: uninstall-info-am uninstall-nobase_pythonDATA\n all-local: gdb.py\n \n gdb.py: hook.in Makefile\n-\tsed -e 's,@dir@,$(pythondir),' < $(srcdir)/hook.in > $@\n+\tsed -e 's,@pythondir@,$(pythondir),' \\\n+\t    -e 's,@toolexeclibdir@,$(toolexeclibdir),' < $(srcdir)/hook.in > $@\n \n install-data-local: gdb.py\n \t@$(mkdir_p) $(DESTDIR)$(toolexeclibdir)\n-\t@libname=`cd $(toolexeclibdir) && ls -r libstdc++* | fgrep -v gdb.py | sed 1q`; \\\n+\t@here=`pwd`; cd $(toolexeclibdir); \\\n+\t  for file in libstdc++*; do \\\n+\t    case $$file in \\\n+\t      *-gdb.py) ;; \\\n+\t      *.la) ;; \\\n+\t      *) if test -h $$file; then \\\n+\t           continue; \\\n+\t         fi; \\\n+\t         libname=$$file;; \\\n+\t    esac; \\\n+\t  done; \\\n+\tcd $$here; \\\n \techo \" $(INSTALL_DATA) gdb.py $(DESTDIR)$(toolexeclibdir)/$$libname-gdb.py\"; \\\n \t$(INSTALL_DATA) gdb.py $(DESTDIR)$(toolexeclibdir)/$$libname-gdb.py\n # Tell versions [3.59,3.63) of GNU make to not export all variables."}, {"sha": "f7bf1afb44d5f700ca4c7df5a784a61eb06b8786", "filename": "libstdc++-v3/python/hook.in", "status": "modified", "additions": 30, "deletions": 2, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35204bbe768b28492d9d36978291779ed18d0ed7/libstdc%2B%2B-v3%2Fpython%2Fhook.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35204bbe768b28492d9d36978291779ed18d0ed7/libstdc%2B%2B-v3%2Fpython%2Fhook.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2Fhook.in?ref=35204bbe768b28492d9d36978291779ed18d0ed7", "patch": "@@ -16,9 +16,37 @@\n \n import sys\n import gdb\n+import os\n+import os.path\n+\n+pythondir = '@pythondir@'\n+libdir = '@toolexeclibdir@'\n+\n+# Update module path.  We want to find the relative path from libdir\n+# to pythondir, and then we want to apply that relative path to the\n+# directory holding the objfile with which this file is associated.\n+# This preserves relocatability of the gcc tree.\n+\n+# Do a simple normalization that removes duplicate separators.\n+pythondir = os.path.join (*['/'] + pythondir.split (os.sep))\n+libdir = os.path.join (*['/'] + libdir.split (os.sep))\n+\n+prefix = os.path.commonprefix ([libdir, pythondir])\n+# In some bizarre configuration we might have found a match in the\n+# middle of a directory name.\n+if prefix[-1] != '/':\n+    prefix = os.path.dirname (prefix)\n+\n+# Strip off the prefix.\n+pythondir = pythondir[len (prefix):]\n+libdir = libdir[len (prefix):]\n+\n+# Compute the \"..\"s needed to get from libdir to the prefix.\n+dotdots = ('..' + os.sep) * len (libdir.split (os.sep))\n+\n+objfile = gdb.current_objfile ().filename\n+dir = os.path.join (os.path.dirname (objfile), dotdots, pythondir)\n \n-# Update module path.\n-dir = '@dir@'\n if not dir in sys.path:\n     sys.path.insert(0, dir)\n "}]}