{"sha": "e97a3063fb1936d6c36eeea720134d5675f73091", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTk3YTMwNjNmYjE5MzZkNmMzNmVlZWE3MjAxMzRkNTY3NWY3MzA5MQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-01-27T10:01:26Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-01-27T10:01:26Z"}, "message": "Filter out language specific options from --help=common.\n\n\tPR driver/91220\n\t* opts.c (print_filtered_help): Exclude language-specific\n\toptions from --help=common unless enabled in all FEs.", "tree": {"sha": "268d1e3c0a4ae3a7bbc87dc6c556c7d0f054c4f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/268d1e3c0a4ae3a7bbc87dc6c556c7d0f054c4f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e97a3063fb1936d6c36eeea720134d5675f73091", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl4utPYACgkQTcGC3A+n\nN4VOlggAnTwdj8zBT95ODMAPWSQ4x6wfCZuY5+e813+h2IH2Er4z+G+yvlLmXwMT\nU81F42B3m1lf40j4T7o0PH5gxTf9hMPYmnTLWKCCZy6aEBzpwtoe8NMFxvVSsBQV\nxVq/+AY0gy6hY1DXRK7X80h+xJ03jpWuT39TC4UId8bMRm2jLR0/NSrI3pZBpLa1\niY0xrGc8gFdLD27xXSrrzi0GxITo3PjbPwrg01lUYSMZi0aK9JkyGAgwaNavrqYh\nPFe36akeHi442f4hSCKRYTx4vdREpLSqrRIRKwTI8vyXvfhif97TSoxoRoKuxiT/\nxPXma8h7sjFC58YNgnm6Q6Fb9KBl5g==\n=SOoa\n-----END PGP SIGNATURE-----", "payload": "tree 268d1e3c0a4ae3a7bbc87dc6c556c7d0f054c4f0\nparent 10fe5cbe0047478b030c13c8537ef5bc752a2048\nauthor Martin Liska <mliska@suse.cz> 1580119286 +0100\ncommitter Martin Liska <mliska@suse.cz> 1580119286 +0100\n\nFilter out language specific options from --help=common.\n\n\tPR driver/91220\n\t* opts.c (print_filtered_help): Exclude language-specific\n\toptions from --help=common unless enabled in all FEs.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e97a3063fb1936d6c36eeea720134d5675f73091", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e97a3063fb1936d6c36eeea720134d5675f73091", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e97a3063fb1936d6c36eeea720134d5675f73091/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10fe5cbe0047478b030c13c8537ef5bc752a2048", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10fe5cbe0047478b030c13c8537ef5bc752a2048", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10fe5cbe0047478b030c13c8537ef5bc752a2048"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "3541c6638f96bde3a6e18b7733409c077d8bc2da", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e97a3063fb1936d6c36eeea720134d5675f73091/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e97a3063fb1936d6c36eeea720134d5675f73091/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e97a3063fb1936d6c36eeea720134d5675f73091", "patch": "@@ -1,3 +1,9 @@\n+2020-01-27  Martin Liska  <mliska@suse.cz>\n+\n+\tPR driver/91220\n+\t* opts.c (print_filtered_help): Exclude language-specific\n+\toptions from --help=common unless enabled in all FEs.\n+\n 2020-01-27  Martin Liska  <mliska@suse.cz>\n \n \t* opts.c (print_help): Exclude params from"}, {"sha": "7affeb41a96a997232bfe898d7932f7c151cc46a", "filename": "gcc/opts.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e97a3063fb1936d6c36eeea720134d5675f73091/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e97a3063fb1936d6c36eeea720134d5675f73091/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=e97a3063fb1936d6c36eeea720134d5675f73091", "patch": "@@ -1285,6 +1285,14 @@ print_filtered_help (unsigned int include_flags,\n \t\t\t       | CL_COMMON | CL_TARGET)) == 0)\n \tcontinue;\n \n+      /* If an option contains a language specification,\n+\t exclude it from common unless all languages are present.  */\n+      if ((include_flags & CL_COMMON)\n+\t  && !(option->flags & CL_DRIVER)\n+\t  && (option->flags & CL_LANG_ALL)\n+\t  && (option->flags & CL_LANG_ALL) != CL_LANG_ALL)\n+\tcontinue;\n+\n       found = true;\n       /* Skip switches that have already been printed.  */\n       if (opts->x_help_printed[i])"}]}