{"sha": "78004c41f7830fcef5bdefeec8edad6737c2af1a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzgwMDRjNDFmNzgzMGZjZWY1YmRlZmVlYzhlZGFkNjczN2MyYWYxYQ==", "commit": {"author": {"name": "Justin Squirek", "email": "squirek@adacore.com", "date": "2020-10-06T19:01:15Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-11-24T10:16:06Z"}, "message": "[Ada] Compiler crash on assertion pragma in ghost region\n\ngcc/ada/\n\n\t* sem_prag.adb (Analyze_Pragma): Mark relevant pragmas as ghost\n\twhen they are within a ghost region.", "tree": {"sha": "f561eb1ec035aeb4e050587df444dde62c62185a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f561eb1ec035aeb4e050587df444dde62c62185a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78004c41f7830fcef5bdefeec8edad6737c2af1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78004c41f7830fcef5bdefeec8edad6737c2af1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78004c41f7830fcef5bdefeec8edad6737c2af1a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78004c41f7830fcef5bdefeec8edad6737c2af1a/comments", "author": {"login": "AdaDoom3", "id": 3445599, "node_id": "MDQ6VXNlcjM0NDU1OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3445599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdaDoom3", "html_url": "https://github.com/AdaDoom3", "followers_url": "https://api.github.com/users/AdaDoom3/followers", "following_url": "https://api.github.com/users/AdaDoom3/following{/other_user}", "gists_url": "https://api.github.com/users/AdaDoom3/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdaDoom3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdaDoom3/subscriptions", "organizations_url": "https://api.github.com/users/AdaDoom3/orgs", "repos_url": "https://api.github.com/users/AdaDoom3/repos", "events_url": "https://api.github.com/users/AdaDoom3/events{/privacy}", "received_events_url": "https://api.github.com/users/AdaDoom3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42b91d9a746aa1736de6876a34b4d817591bffb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42b91d9a746aa1736de6876a34b4d817591bffb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42b91d9a746aa1736de6876a34b4d817591bffb1"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "a46f52f083857ad969666cd26aa996ff2a0e9a59", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78004c41f7830fcef5bdefeec8edad6737c2af1a/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78004c41f7830fcef5bdefeec8edad6737c2af1a/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=78004c41f7830fcef5bdefeec8edad6737c2af1a", "patch": "@@ -11437,6 +11437,12 @@ package body Sem_Prag is\n          end if;\n       end if;\n \n+      --  Mark assertion pragmas as Ghost depending on their enclosing context\n+\n+      if Assertion_Expression_Pragma (Prag_Id) then\n+         Mark_Ghost_Pragma (N, Current_Scope);\n+      end if;\n+\n       --  Preset arguments\n \n       Arg_Count := 0;"}]}