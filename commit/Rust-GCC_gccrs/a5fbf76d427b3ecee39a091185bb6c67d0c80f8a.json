{"sha": "a5fbf76d427b3ecee39a091185bb6c67d0c80f8a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVmYmY3NmQ0MjdiM2VjZWUzOWEwOTExODViYjZjNjdkMGM4MGY4YQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2016-05-12T10:59:11Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2016-05-12T10:59:11Z"}, "message": "re PR driver/71063 (ICE: Segmentation fault with --help=\"^\")\n\n\tPR driver/71063\n\t* opts.c (common_handle_option): Detect missing argument for --help^.\n\n\t* gcc.dg/opts-7.c: New test.\n\nFrom-SVN: r236170", "tree": {"sha": "b32bdfac1d9fb7e811bf88e877d9301ba135fdc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b32bdfac1d9fb7e811bf88e877d9301ba135fdc1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5fbf76d427b3ecee39a091185bb6c67d0c80f8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5fbf76d427b3ecee39a091185bb6c67d0c80f8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5fbf76d427b3ecee39a091185bb6c67d0c80f8a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5fbf76d427b3ecee39a091185bb6c67d0c80f8a/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5acc47a40d13af51cd1709f0238c798a666bcd7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5acc47a40d13af51cd1709f0238c798a666bcd7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5acc47a40d13af51cd1709f0238c798a666bcd7b"}], "stats": {"total": 45, "additions": 33, "deletions": 12}, "files": [{"sha": "711d8d590929ca17b11ae2f99b36c8b537f429dc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fbf76d427b3ecee39a091185bb6c67d0c80f8a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fbf76d427b3ecee39a091185bb6c67d0c80f8a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a5fbf76d427b3ecee39a091185bb6c67d0c80f8a", "patch": "@@ -1,3 +1,8 @@\n+2016-05-12  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR driver/71063\n+\t* opts.c (common_handle_option): Detect missing argument for --help^.\n+\n 2016-05-12  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR target/70830"}, {"sha": "63d41ca9deb5da2a0f9402a176669f9c8aead289", "filename": "gcc/opts.c", "status": "modified", "additions": 17, "deletions": 12, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fbf76d427b3ecee39a091185bb6c67d0c80f8a/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fbf76d427b3ecee39a091185bb6c67d0c80f8a/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=a5fbf76d427b3ecee39a091185bb6c67d0c80f8a", "patch": "@@ -1595,7 +1595,7 @@ common_handle_option (struct gcc_options *opts,\n \n     case OPT__help_:\n       {\n-\tconst char * a = arg;\n+\tconst char *a = arg;\n \tunsigned int include_flags = 0;\n \t/* Note - by default we include undocumented options when listing\n \t   specific classes.  If you only want to see documented options\n@@ -1612,11 +1612,11 @@ common_handle_option (struct gcc_options *opts,\n \t   arg = [^]{word}[,{arg}]\n \t   word = {optimizers|target|warnings|undocumented|\n \t\t   params|common|<language>}  */\n-\twhile (* a != 0)\n+\twhile (*a != 0)\n \t  {\n \t    static const struct\n \t    {\n-\t      const char * string;\n+\t      const char *string;\n \t      unsigned int flag;\n \t    }\n \t    specifics[] =\n@@ -1631,19 +1631,24 @@ common_handle_option (struct gcc_options *opts,\n \t      { \"common\", CL_COMMON },\n \t      { NULL, 0 }\n \t    };\n-\t    unsigned int * pflags;\n-\t    const char * comma;\n+\t    unsigned int *pflags;\n+\t    const char *comma;\n \t    unsigned int lang_flag, specific_flag;\n \t    unsigned int len;\n \t    unsigned int i;\n \n-\t    if (* a == '^')\n+\t    if (*a == '^')\n \t      {\n-\t\t++ a;\n-\t\tpflags = & exclude_flags;\n+\t\t++a;\n+\t\tif (*a == '\\0')\n+\t\t  {\n+\t\t    error_at (loc, \"missing argument to %qs\", \"--help=^\");\n+\t\t    break;\n+\t\t  }\n+\t\tpflags = &exclude_flags;\n \t      }\n \t    else\n-\t      pflags = & include_flags;\n+\t      pflags = &include_flags;\n \n \t    comma = strchr (a, ',');\n \t    if (comma == NULL)\n@@ -1680,7 +1685,7 @@ common_handle_option (struct gcc_options *opts,\n \t    if (specific_flag != 0)\n \t      {\n \t\tif (lang_flag == 0)\n-\t\t  * pflags |= specific_flag;\n+\t\t  *pflags |= specific_flag;\n \t\telse\n \t\t  {\n \t\t    /* The option's argument matches both the start of a\n@@ -1689,7 +1694,7 @@ common_handle_option (struct gcc_options *opts,\n \t\t       specified \"--help=c\", but otherwise we have to issue\n \t\t       a warning.  */\n \t\t    if (strncasecmp (a, \"c\", len) == 0)\n-\t\t      * pflags |= lang_flag;\n+\t\t      *pflags |= lang_flag;\n \t\t    else\n \t\t      warning_at (loc, 0,\n \t\t\t\t  \"--help argument %q.*s is ambiguous, \"\n@@ -1698,7 +1703,7 @@ common_handle_option (struct gcc_options *opts,\n \t\t  }\n \t      }\n \t    else if (lang_flag != 0)\n-\t      * pflags |= lang_flag;\n+\t      *pflags |= lang_flag;\n \t    else\n \t      warning_at (loc, 0,\n \t\t\t  \"unrecognized argument to --help= option: %q.*s\","}, {"sha": "c1b2323e07caa89500c63947187e0823701e34ef", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fbf76d427b3ecee39a091185bb6c67d0c80f8a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fbf76d427b3ecee39a091185bb6c67d0c80f8a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a5fbf76d427b3ecee39a091185bb6c67d0c80f8a", "patch": "@@ -1,3 +1,8 @@\n+2016-05-12  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR driver/71063\n+\t* gcc.dg/opts-7.c: New test.\n+\n 2016-05-12  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR target/70830"}, {"sha": "c54d0b8215ad1f8481c9e1120a337c9853204a26", "filename": "gcc/testsuite/gcc.dg/opts-7.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fbf76d427b3ecee39a091185bb6c67d0c80f8a/gcc%2Ftestsuite%2Fgcc.dg%2Fopts-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fbf76d427b3ecee39a091185bb6c67d0c80f8a/gcc%2Ftestsuite%2Fgcc.dg%2Fopts-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fopts-7.c?ref=a5fbf76d427b3ecee39a091185bb6c67d0c80f8a", "patch": "@@ -0,0 +1,6 @@\n+/* PR driver/71063 */\n+/* Test we don't ICE.  */\n+/* { dg-do compile } */\n+/* { dg-options \"--help=^\" } */\n+\n+/* { dg-error \"missing argument to\" \"\" { target *-*-* } 0 } */"}]}