{"sha": "15c908807e8865e5bda12942a68bc919a4a2957d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTVjOTA4ODA3ZTg4NjVlNWJkYTEyOTQyYTY4YmM5MTlhNGEyOTU3ZA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2020-10-27T00:46:48Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2020-10-27T00:55:30Z"}, "message": "[RS6000] Separate dg-require-effective-target options\n\n\t* gcc.target/powerpc/vsx_mask-count-runnable.c: Separate options\n\tpassed to dg-require-effective-target.\n\t* gcc.target/powerpc/vsx_mask-expand-runnable.c: Likewise.\n\t* gcc.target/powerpc/vsx_mask-extract-runnable.c: Likewise.\n\t* gcc.target/powerpc/vsx_mask-move-runnable.c: Likewise.", "tree": {"sha": "1d14bc0bf4ff2d7fa36e88dce92075dece54edaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d14bc0bf4ff2d7fa36e88dce92075dece54edaa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15c908807e8865e5bda12942a68bc919a4a2957d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15c908807e8865e5bda12942a68bc919a4a2957d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15c908807e8865e5bda12942a68bc919a4a2957d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15c908807e8865e5bda12942a68bc919a4a2957d/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f19e7c8d5b0d69511a67b718ba31df87f5be0e9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f19e7c8d5b0d69511a67b718ba31df87f5be0e9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f19e7c8d5b0d69511a67b718ba31df87f5be0e9f"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "28aa7da9d1f5335d7d9eee9afba79ef0aa5f97dd", "filename": "gcc/testsuite/gcc.target/powerpc/vsx_mask-count-runnable.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15c908807e8865e5bda12942a68bc919a4a2957d/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx_mask-count-runnable.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15c908807e8865e5bda12942a68bc919a4a2957d/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx_mask-count-runnable.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx_mask-count-runnable.c?ref=15c908807e8865e5bda12942a68bc919a4a2957d", "patch": "@@ -1,7 +1,8 @@\n /* { dg-do run { target { power10_hw } } } */\n /* { dg-do link { target { ! power10_hw } } } */\n /* { dg-options \"-mdejagnu-cpu=power10 -O2\" } */\n-/* { dg-require-effective-target { int128 && power10_ok } } */\n+/* { dg-require-effective-target power10_ok } */\n+/* { dg-require-effective-target int128 } */\n \n /* Check that the expected 128-bit instructions are generated if the processor\n    supports the 128-bit integer instructions. */"}, {"sha": "68c1c3f1c9a16dc227cdbeff38ebfc436ebdc474", "filename": "gcc/testsuite/gcc.target/powerpc/vsx_mask-expand-runnable.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15c908807e8865e5bda12942a68bc919a4a2957d/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx_mask-expand-runnable.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15c908807e8865e5bda12942a68bc919a4a2957d/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx_mask-expand-runnable.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx_mask-expand-runnable.c?ref=15c908807e8865e5bda12942a68bc919a4a2957d", "patch": "@@ -1,7 +1,8 @@\n /* { dg-do run { target { power10_hw } } } */\n /* { dg-do link { target { ! power10_hw } } } */\n /* { dg-options \"-mdejagnu-cpu=power10 -O2\" } */\n-/* { dg-require-effective-target { int128 && power10_ok } } */\n+/* { dg-require-effective-target power10_ok } */\n+/* { dg-require-effective-target int128 } */\n \n /* Check that the expected 128-bit instructions are generated if the processor\n    supports the 128-bit integer instructions. */"}, {"sha": "4664807a69e9f080d3af589c87f45fedd8c0119e", "filename": "gcc/testsuite/gcc.target/powerpc/vsx_mask-extract-runnable.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15c908807e8865e5bda12942a68bc919a4a2957d/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx_mask-extract-runnable.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15c908807e8865e5bda12942a68bc919a4a2957d/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx_mask-extract-runnable.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx_mask-extract-runnable.c?ref=15c908807e8865e5bda12942a68bc919a4a2957d", "patch": "@@ -1,7 +1,8 @@\n /* { dg-do run { target { power10_hw } } } */\n /* { dg-do link { target { ! power10_hw } } } */\n /* { dg-options \"-mdejagnu-cpu=power10 -O2\" } */\n-/* { dg-require-effective-target { int128 && power10_ok } } */\n+/* { dg-require-effective-target power10_ok } */\n+/* { dg-require-effective-target int128 } */\n \n /* Check that the expected 128-bit instructions are generated if the processor\n    supports the 128-bit integer instructions. */"}, {"sha": "58954dc5fc9e3c1ae2482eccb4c64e7fbaccc570", "filename": "gcc/testsuite/gcc.target/powerpc/vsx_mask-move-runnable.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15c908807e8865e5bda12942a68bc919a4a2957d/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx_mask-move-runnable.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15c908807e8865e5bda12942a68bc919a4a2957d/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx_mask-move-runnable.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx_mask-move-runnable.c?ref=15c908807e8865e5bda12942a68bc919a4a2957d", "patch": "@@ -1,7 +1,8 @@\n /* { dg-do run { target { power10_hw } } } */\n /* { dg-do link { target { ! power10_hw } } } */\n /* { dg-options \"-mdejagnu-cpu=power10 -O2\" } */\n-/* { dg-require-effective-target { int128 && power10_ok } } */\n+/* { dg-require-effective-target power10_ok } */\n+/* { dg-require-effective-target int128 } */\n \n /* Check that the expected 128-bit instructions are generated if the processor\n    supports the 128-bit integer instructions. */"}]}