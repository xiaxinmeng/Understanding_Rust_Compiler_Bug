{"sha": "dddb7af4e7f76eed190876427902d99016ded180", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRkYjdhZjRlN2Y3NmVlZDE5MDg3NjQyNzkwMmQ5OTAxNmRlZDE4MA==", "commit": {"author": {"name": "Sam Tebbs", "email": "sam.tebbs@arm.com", "date": "2018-12-14T15:52:05Z"}, "committer": {"name": "Sam Tebbs", "email": "samtebbs@gcc.gnu.org", "date": "2018-12-14T15:52:05Z"}, "message": "[PATCH 1/3][GCC] Add new target hook asm_post_cfi_startproc\n\n2018-12-14  Sam Tebbs  <sam.tebbs@arm.com>\n\n\t* doc/tm.texi (TARGET_ASM_POST_CFI_STARTPROC): Define.\n\t* doc/tm.texi.in (TARGET_ASM_POST_CFI_STARTPROC): Define.\n\t* dwarf2out.c (dwarf2out_do_cfi_startproc): Trigger the hook.\n\t* hooks.c (hook_void_FILEptr_tree): Define.\n\t* hooks.h (hook_void_FILEptr_tree): Define.\n\t* target.def (post_cfi_startproc): Define.\n\nFrom-SVN: r267135", "tree": {"sha": "1f77a258b59664ff2af4af19ca8099ebfe988ed3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f77a258b59664ff2af4af19ca8099ebfe988ed3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dddb7af4e7f76eed190876427902d99016ded180", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dddb7af4e7f76eed190876427902d99016ded180", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dddb7af4e7f76eed190876427902d99016ded180", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dddb7af4e7f76eed190876427902d99016ded180/comments", "author": null, "committer": null, "parents": [{"sha": "b0aba46ca6668ef16fa83ff146654a9bf946ff16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0aba46ca6668ef16fa83ff146654a9bf946ff16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0aba46ca6668ef16fa83ff146654a9bf946ff16"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "6ce06582e0f20c56d27ee25c20daa14eb39e62e1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dddb7af4e7f76eed190876427902d99016ded180/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dddb7af4e7f76eed190876427902d99016ded180/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dddb7af4e7f76eed190876427902d99016ded180", "patch": "@@ -1,3 +1,12 @@\n+2018-12-14  Sam Tebbs  <sam.tebbs@arm.com>\n+\n+\t* doc/tm.texi (TARGET_ASM_POST_CFI_STARTPROC): Define.\n+\t* doc/tm.texi.in (TARGET_ASM_POST_CFI_STARTPROC): Define.\n+\t* dwarf2out.c (dwarf2out_do_cfi_startproc): Trigger the hook.\n+\t* hooks.c (hook_void_FILEptr_tree): Define.\n+\t* hooks.h (hook_void_FILEptr_tree): Define.\n+\t* target.def (post_cfi_startproc): Define.\n+\n 2018-12-14  Tom de Vries  <tdevries@suse.de>\n \n \t* lto-cgraph.c (verify_node_partition): New function."}, {"sha": "c9a85606f1b2752c3a44845431464e3bcebe9bb1", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dddb7af4e7f76eed190876427902d99016ded180/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dddb7af4e7f76eed190876427902d99016ded180/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=dddb7af4e7f76eed190876427902d99016ded180", "patch": "@@ -9422,6 +9422,15 @@ If this macro is not defined, nothing special is output at the end of\n the jump-table.\n @end defmac\n \n+@deftypefn {Target Hook} void TARGET_ASM_POST_CFI_STARTPROC (FILE *@var{}, @var{tree})\n+This target hook is used to emit assembly strings required by the target\n+after the .cfi_startproc directive.  The first argument is the file stream to\n+write the strings to and the second argument is the function's declaration.  The\n+expected use is to add more .cfi_* directives.\n+\n+The default is to not output any assembly strings.\n+@end deftypefn\n+\n @deftypefn {Target Hook} void TARGET_ASM_EMIT_UNWIND_LABEL (FILE *@var{stream}, tree @var{decl}, int @var{for_eh}, int @var{empty})\n This target hook emits a label at the beginning of each FDE@.  It\n should be defined on targets where FDEs need special labels, and it"}, {"sha": "2205e2df46b8ab27982f2d25613ce3614a18857f", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dddb7af4e7f76eed190876427902d99016ded180/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dddb7af4e7f76eed190876427902d99016ded180/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=dddb7af4e7f76eed190876427902d99016ded180", "patch": "@@ -6429,6 +6429,8 @@ If this macro is not defined, nothing special is output at the end of\n the jump-table.\n @end defmac\n \n+@hook TARGET_ASM_POST_CFI_STARTPROC\n+\n @hook TARGET_ASM_EMIT_UNWIND_LABEL\n \n @hook TARGET_ASM_EMIT_EXCEPT_TABLE_LABEL"}, {"sha": "b238105699111f95b23acc3319d3cd581a1faa23", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dddb7af4e7f76eed190876427902d99016ded180/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dddb7af4e7f76eed190876427902d99016ded180/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=dddb7af4e7f76eed190876427902d99016ded180", "patch": "@@ -969,6 +969,8 @@ dwarf2out_do_cfi_startproc (bool second)\n \n   fprintf (asm_out_file, \"\\t.cfi_startproc\\n\");\n \n+  targetm.asm_out.post_cfi_startproc (asm_out_file, current_function_decl);\n+\n   /* .cfi_personality and .cfi_lsda are only relevant to DWARF2\n      eh unwinders.  */\n   if (targetm_common.except_unwind_info (&global_options) != UI_DWARF2)"}, {"sha": "46bf2a8cee0c755a94cbd42580974fb1e8e95038", "filename": "gcc/hooks.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dddb7af4e7f76eed190876427902d99016ded180/gcc%2Fhooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dddb7af4e7f76eed190876427902d99016ded180/gcc%2Fhooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhooks.c?ref=dddb7af4e7f76eed190876427902d99016ded180", "patch": "@@ -276,6 +276,11 @@ hook_void_tree (tree)\n {\n }\n \n+void\n+hook_void_FILEptr_tree (FILE *, tree)\n+{\n+}\n+\n void\n hook_void_rtx_tree (rtx, tree)\n {"}, {"sha": "bcfc2312516e439cf811737abab608aac14d1c54", "filename": "gcc/hooks.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dddb7af4e7f76eed190876427902d99016ded180/gcc%2Fhooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dddb7af4e7f76eed190876427902d99016ded180/gcc%2Fhooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhooks.h?ref=dddb7af4e7f76eed190876427902d99016ded180", "patch": "@@ -82,6 +82,7 @@ extern void hook_void_FILEptr_constcharptr_const_tree (FILE *, const char *,\n \t\t\t\t\t\t       const_tree);\n extern bool hook_bool_FILEptr_rtx_false (FILE *, rtx);\n extern void hook_void_rtx_tree (rtx, tree);\n+extern void hook_void_FILEptr_tree (FILE *, tree);\n extern void hook_void_tree (tree);\n extern void hook_void_tree_treeptr (tree, tree *);\n extern void hook_void_int_int (int, int);"}, {"sha": "c425341ac3a7d6e74a141bddcc22fed7017ee1fc", "filename": "gcc/target.def", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dddb7af4e7f76eed190876427902d99016ded180/gcc%2Ftarget.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dddb7af4e7f76eed190876427902d99016ded180/gcc%2Ftarget.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.def?ref=dddb7af4e7f76eed190876427902d99016ded180", "patch": "@@ -93,6 +93,17 @@ when the relevant string is @code{NULL}.\",\n  bool, (rtx x, unsigned int size, int aligned_p),\n  default_assemble_integer)\n \n+/* Assembly strings required after the .cfi_startproc label.  */\n+DEFHOOK\n+(post_cfi_startproc,\n+  \"This target hook is used to emit assembly strings required by the target\\n\\\n+after the .cfi_startproc directive.  The first argument is the file stream to\\n\\\n+write the strings to and the second argument is the function\\'s declaration.\\n\\\n+\\n\\\n+The default is to not output any assembly strings.\",\n+  void, (FILE *, tree),\n+  hook_void_FILEptr_tree)\n+\n /* Notify the backend that we have completed emitting the data for a\n    decl.  */\n DEFHOOK"}]}