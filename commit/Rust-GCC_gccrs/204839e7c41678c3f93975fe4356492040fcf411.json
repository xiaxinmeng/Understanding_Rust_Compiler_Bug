{"sha": "204839e7c41678c3f93975fe4356492040fcf411", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjA0ODM5ZTdjNDE2NzhjM2Y5Mzk3NWZlNDM1NjQ5MjA0MGZjZjQxMQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2018-11-08T15:31:13Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2018-11-08T15:31:13Z"}, "message": "Support %f in pp_format\n\nNumerous formatted messages from the inliner use %f, mostly as %f, but\noccasionally with length modifiers.\n\nThis patch implements the simplest case of \"%f\" for pp_format (with no\nmodifier support) to make it easier to port these messages from fprintf\nto dump_printf_loc.\n\nThe selftest has an assertion that %f on 1.0 is printed as \"1.000000\".\nThis comes from the host's sprintf, and I believe this is guaranteed by\nPOSIX: \"If the precision is missing, it shall be taken as 6\".  If this is\nan issue I can drop the selftest.\n\ngcc/c-family/ChangeLog:\n\t* c-format.c (gcc_dump_printf_char_table): Add entry for %f.\n\ngcc/ChangeLog:\n\t* pretty-print.c (pp_format): Handle %f.\n\t(selftest::test_pp_format): Add test of %f.\n\t* pretty-print.h (pp_double): New macro.\n\ngcc/testsuite/ChangeLog:\n\t* gcc.dg/format/gcc_diag-10.c: Add coverage for %f.\n\nFrom-SVN: r265919", "tree": {"sha": "165ff5ba4d3971a53895f9ffd34e233e26a72cc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/165ff5ba4d3971a53895f9ffd34e233e26a72cc2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/204839e7c41678c3f93975fe4356492040fcf411", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/204839e7c41678c3f93975fe4356492040fcf411", "html_url": "https://github.com/Rust-GCC/gccrs/commit/204839e7c41678c3f93975fe4356492040fcf411", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/204839e7c41678c3f93975fe4356492040fcf411/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d8010ee4560a947f690891f919db177b03581f9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8010ee4560a947f690891f919db177b03581f9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8010ee4560a947f690891f919db177b03581f9a"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "bc91ee298d856ac903ec09900ad60f8b177ea034", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/204839e7c41678c3f93975fe4356492040fcf411/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/204839e7c41678c3f93975fe4356492040fcf411/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=204839e7c41678c3f93975fe4356492040fcf411", "patch": "@@ -1,3 +1,9 @@\n+2018-11-08  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* pretty-print.c (pp_format): Handle %f.\n+\t(selftest::test_pp_format): Add test of %f.\n+\t* pretty-print.h (pp_double): New macro.\n+\n 2018-11-08  David Malcolm  <dmalcolm@redhat.com>\n \n \t* dump-context.h (ASSERT_IS_CGRAPH_NODE): New macro."}, {"sha": "ac2353978b111a6d719fbb67c5e289fc94f6880a", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/204839e7c41678c3f93975fe4356492040fcf411/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/204839e7c41678c3f93975fe4356492040fcf411/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=204839e7c41678c3f93975fe4356492040fcf411", "patch": "@@ -1,3 +1,7 @@\n+2018-11-08  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* c-format.c (gcc_dump_printf_char_table): Add entry for %f.\n+\n 2018-11-08  David Malcolm  <dmalcolm@redhat.com>\n \n \t* c-format.c (local_cgraph_node_ptr_node): New variable."}, {"sha": "6613092c6fdcab61403b87fc9085ec28556e6e35", "filename": "gcc/c-family/c-format.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/204839e7c41678c3f93975fe4356492040fcf411/gcc%2Fc-family%2Fc-format.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/204839e7c41678c3f93975fe4356492040fcf411/gcc%2Fc-family%2Fc-format.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-format.c?ref=204839e7c41678c3f93975fe4356492040fcf411", "patch": "@@ -810,6 +810,9 @@ static const format_char_info gcc_dump_printf_char_table[] =\n   /* T requires a \"tree\" at runtime.  */\n   { \"T\",   1, STD_C89, { T89_T,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, \"\", \"\\\"\",   NULL },\n \n+  /* %f requires a \"double\"; it doesn't support modifiers.  */\n+  { \"f\",   0, STD_C89, { T89_D,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, \"\", \"\\\"\",   NULL },\n+\n   { NULL,  0, STD_C89, NOLENGTHS, NULL, NULL, NULL }\n };\n "}, {"sha": "19ef75bdfcf6ddf59b67f927917f225d762f2311", "filename": "gcc/pretty-print.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/204839e7c41678c3f93975fe4356492040fcf411/gcc%2Fpretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/204839e7c41678c3f93975fe4356492040fcf411/gcc%2Fpretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpretty-print.c?ref=204839e7c41678c3f93975fe4356492040fcf411", "patch": "@@ -977,6 +977,7 @@ pp_indent (pretty_printer *pp)\n    %ld, %li, %lo, %lu, %lx: long versions of the above.\n    %lld, %lli, %llo, %llu, %llx: long long versions.\n    %wd, %wi, %wo, %wu, %wx: HOST_WIDE_INT versions.\n+   %f: double\n    %c: character.\n    %s: string.\n    %p: pointer (printed in a host-dependent manner).\n@@ -1307,6 +1308,10 @@ pp_format (pretty_printer *pp, text_info *text)\n \t      (pp, *text->args_ptr, precision, unsigned, \"u\");\n \t  break;\n \n+\tcase 'f':\n+\t  pp_double (pp, va_arg (*text->args_ptr, double));\n+\t  break;\n+\n \tcase 'Z':\n \t  {\n \t    int *v = va_arg (*text->args_ptr, int *);\n@@ -2160,6 +2165,7 @@ test_pp_format ()\n   ASSERT_PP_FORMAT_2 (\"17 12345678\", \"%wo %x\", (HOST_WIDE_INT)15, 0x12345678);\n   ASSERT_PP_FORMAT_2 (\"0xcafebabe 12345678\", \"%wx %x\", (HOST_WIDE_INT)0xcafebabe,\n \t\t      0x12345678);\n+  ASSERT_PP_FORMAT_2 (\"1.000000 12345678\", \"%f %x\", 1.0, 0x12345678);\n   ASSERT_PP_FORMAT_2 (\"A 12345678\", \"%c %x\", 'A', 0x12345678);\n   ASSERT_PP_FORMAT_2 (\"hello world 12345678\", \"%s %x\", \"hello world\",\n \t\t      0x12345678);"}, {"sha": "a6e60f110f07c097616f539ca23220c806d31aa8", "filename": "gcc/pretty-print.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/204839e7c41678c3f93975fe4356492040fcf411/gcc%2Fpretty-print.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/204839e7c41678c3f93975fe4356492040fcf411/gcc%2Fpretty-print.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpretty-print.h?ref=204839e7c41678c3f93975fe4356492040fcf411", "patch": "@@ -330,6 +330,7 @@ pp_get_prefix (const pretty_printer *pp) { return pp->prefix; }\n       pp_string (PP, pp_buffer (PP)->digit_buffer);\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n   while (0)\n+#define pp_double(PP, F)       pp_scalar (PP, \"%f\", F)\n #define pp_pointer(PP, P)      pp_scalar (PP, \"%p\", P)\n \n #define pp_identifier(PP, ID)  pp_string (PP, (pp_translate_identifiers (PP) \\"}, {"sha": "f4fd981d98caa1a7b56167a474fa95528189685f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/204839e7c41678c3f93975fe4356492040fcf411/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/204839e7c41678c3f93975fe4356492040fcf411/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=204839e7c41678c3f93975fe4356492040fcf411", "patch": "@@ -1,3 +1,7 @@\n+2018-11-08  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* gcc.dg/format/gcc_diag-10.c: Add coverage for %f.\n+\n 2018-11-08  David Malcolm  <dmalcolm@redhat.com>\n \n \t* gcc.dg/format/gcc_diag-10.c (cgraph_node): New typedef."}, {"sha": "ba2629b3ecbae24905ebb604030fc66bf2daacb3", "filename": "gcc/testsuite/gcc.dg/format/gcc_diag-10.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/204839e7c41678c3f93975fe4356492040fcf411/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fgcc_diag-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/204839e7c41678c3f93975fe4356492040fcf411/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fgcc_diag-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fgcc_diag-10.c?ref=204839e7c41678c3f93975fe4356492040fcf411", "patch": "@@ -183,4 +183,6 @@ void test_dump (tree t, gimple *stmt, cgraph_node *node)\n   dump (\"%T\", t);\n   dump (\"%G\", stmt);\n   dump (\"%C\", node);\n+  dump (\"%f\", 1.0);\n+  dump (\"%4.2f\", 1.0); /* { dg-warning \"format\" } */\n }"}]}