{"sha": "ea59b186fbc1648d23b266edb1f01c60b0ed72c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE1OWIxODZmYmMxNjQ4ZDIzYjI2NmVkYjFmMDFjNjBiMGVkNzJjMA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2012-05-06T20:30:05Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2012-05-06T20:30:05Z"}, "message": "re PR fortran/41587 ([OOP] ICE with ALLOCATABLE CLASS components)\n\n2012-05-06  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/41587\n        * decl.c (build_struct): Don't ignore FAILED status.\n\n2012-05-06  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/41587\n        * gfortran.dg/class_array_13.f90: New.\n\nFrom-SVN: r187214", "tree": {"sha": "4e328a32c3a57cc0680f637081db10df43b009d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e328a32c3a57cc0680f637081db10df43b009d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea59b186fbc1648d23b266edb1f01c60b0ed72c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea59b186fbc1648d23b266edb1f01c60b0ed72c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea59b186fbc1648d23b266edb1f01c60b0ed72c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea59b186fbc1648d23b266edb1f01c60b0ed72c0/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "91000c66b9eb9b3ec0a763c78c0f070b9b256850", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91000c66b9eb9b3ec0a763c78c0f070b9b256850", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91000c66b9eb9b3ec0a763c78c0f070b9b256850"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "277e86e041e306f0389c8934c2eb99c559a488f4", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea59b186fbc1648d23b266edb1f01c60b0ed72c0/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea59b186fbc1648d23b266edb1f01c60b0ed72c0/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ea59b186fbc1648d23b266edb1f01c60b0ed72c0", "patch": "@@ -1,3 +1,8 @@\n+2012-05-06  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/41587\n+\t* decl.c (build_struct): Don't ignore FAILED status.\n+\n 2012-05-05  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/41600"}, {"sha": "e166bc916b1911159377a1dbb05c394be6909852", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea59b186fbc1648d23b266edb1f01c60b0ed72c0/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea59b186fbc1648d23b266edb1f01c60b0ed72c0/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=ea59b186fbc1648d23b266edb1f01c60b0ed72c0", "patch": "@@ -1658,7 +1658,10 @@ build_struct (const char *name, gfc_charlen *cl, gfc_expr **init,\n       bool delayed = (gfc_state_stack->sym == c->ts.u.derived)\n \t\t     || (!c->ts.u.derived->components\n \t\t\t && !c->ts.u.derived->attr.zero_comp);\n-      return gfc_build_class_symbol (&c->ts, &c->attr, &c->as, delayed);\n+      gfc_try t2 = gfc_build_class_symbol (&c->ts, &c->attr, &c->as, delayed);\n+\n+      if (t != FAILURE)\n+\tt = t2;\n     }\n \n   return t;"}, {"sha": "6d831947fb80d60cedfa12ea769c39fa8b1a3575", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea59b186fbc1648d23b266edb1f01c60b0ed72c0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea59b186fbc1648d23b266edb1f01c60b0ed72c0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ea59b186fbc1648d23b266edb1f01c60b0ed72c0", "patch": "@@ -1,3 +1,8 @@\n+2012-05-06  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/41587\n+\t* gfortran.dg/class_array_13.f90: New.\n+\n 2012-05-06  Tristan Gingold  <gingold@adacore.com>\n \n \t* gnat.dg/warn7.adb: New test."}, {"sha": "567bbf81546e5ce4ed5d2310531aa0bf43f8ba92", "filename": "gcc/testsuite/gfortran.dg/class_array_13.f90", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea59b186fbc1648d23b266edb1f01c60b0ed72c0/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_array_13.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea59b186fbc1648d23b266edb1f01c60b0ed72c0/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_array_13.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_array_13.f90?ref=ea59b186fbc1648d23b266edb1f01c60b0ed72c0", "patch": "@@ -0,0 +1,26 @@\n+! { dg-do compile }\n+! { dg-options \"-fcoarray=single\" }\n+!\n+! PR fortran/41587\n+!\n+\n+type t0\n+  integer :: j = 42\n+end type t0\n+\n+type t\n+  integer :: i\n+  class(t0), allocatable :: foo(3) ! { dg-error \"must have a deferred shape\" }\n+end type t\n+\n+type t2\n+  integer :: i\n+  class(t0), pointer :: foo(3) ! { dg-error \"must have a deferred shape\" }\n+end type t2\n+\n+type t3\n+  integer :: i\n+  class(t0), allocatable :: foo[3] ! { dg-error \"Upper bound of last coarray dimension must be '\\\\*'\" }\n+end type t3\n+\n+end"}]}