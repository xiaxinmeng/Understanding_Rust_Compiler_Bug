{"sha": "a760d142461694eca613c9d9a19333416566241e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc2MGQxNDI0NjE2OTRlY2E2MTNjOWQ5YTE5MzMzNDE2NTY2MjQxZQ==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2019-12-18T07:14:59Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-12-18T07:14:59Z"}, "message": "[Ada] Missing accessibility actuals on calls to interface conversion functions\n\n2019-12-18  Gary Dismukes  <dismukes@adacore.com>\n\ngcc/ada/\n\n\t* sem_res.adb (Resolve_Type_Conversion): Add handling for access\n\ttypes with designated operand and target types that are\n\treferenced in places that have a limited view of an interface\n\ttype by retrieving the nonlimited view when it exists.  Add ???\n\tcomments related to missing limited_with_clause handling for\n\tTarget (in the non-access case).\n\nFrom-SVN: r279513", "tree": {"sha": "6c274cdd5fd2397d6f5503d0c7ac377cce3b0e68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c274cdd5fd2397d6f5503d0c7ac377cce3b0e68"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a760d142461694eca613c9d9a19333416566241e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a760d142461694eca613c9d9a19333416566241e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a760d142461694eca613c9d9a19333416566241e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a760d142461694eca613c9d9a19333416566241e/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "64c6e3673a9eddf168fbe8d5cfab70f55fea08f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64c6e3673a9eddf168fbe8d5cfab70f55fea08f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64c6e3673a9eddf168fbe8d5cfab70f55fea08f8"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "acf3b3b51677b0d98600e285ceae2b092b03f5f8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a760d142461694eca613c9d9a19333416566241e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a760d142461694eca613c9d9a19333416566241e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a760d142461694eca613c9d9a19333416566241e", "patch": "@@ -1,3 +1,12 @@\n+2019-12-18  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Type_Conversion): Add handling for access\n+\ttypes with designated operand and target types that are\n+\treferenced in places that have a limited view of an interface\n+\ttype by retrieving the nonlimited view when it exists.  Add ???\n+\tcomments related to missing limited_with_clause handling for\n+\tTarget (in the non-access case).\n+\n 2019-12-18  Ed Schonberg  <schonberg@adacore.com>\n \n \t* par-ch12.adb (P_Formal_Derived_Type_Definition): In Ada_2020"}, {"sha": "21cbe0aa8a58556ad3da61e098ced07ff26ad5f4", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a760d142461694eca613c9d9a19333416566241e/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a760d142461694eca613c9d9a19333416566241e/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=a760d142461694eca613c9d9a19333416566241e", "patch": "@@ -11827,19 +11827,46 @@ package body Sem_Res is\n                Set_Etype (Expression (N), Opnd);\n             end if;\n \n+            --  It seems that Non_Limited_View should also be applied for\n+            --  Target when it has a limited view, but that leads to missing\n+            --  error checks on interface conversions further below. ???\n+\n             if Is_Access_Type (Opnd) then\n                Opnd := Designated_Type (Opnd);\n+\n+               --  If the type of the operand is a limited view, use nonlimited\n+               --  view when available. If it is a class-wide type, recover the\n+               --  class-wide type of the nonlimited view.\n+\n+               if From_Limited_With (Opnd)\n+                 and then Has_Non_Limited_View (Opnd)\n+               then\n+                  Opnd := Non_Limited_View (Opnd);\n+               end if;\n             end if;\n \n             if Is_Access_Type (Target_Typ) then\n                Target := Designated_Type (Target);\n+\n+               --  If the target type is a limited view, use nonlimited view\n+               --  when available.\n+\n+               if From_Limited_With (Target)\n+                 and then Has_Non_Limited_View (Target)\n+               then\n+                  Target := Non_Limited_View (Target);\n+               end if;\n             end if;\n \n             if Opnd = Target then\n                null;\n \n             --  Conversion from interface type\n \n+            --  It seems that it would be better for the error checks below\n+            --  to be performed as part of Validate_Conversion (and maybe some\n+            --  of the error checks above could be moved as well?). ???\n+\n             elsif Is_Interface (Opnd) then\n \n                --  Ada 2005 (AI-217): Handle entities from limited views"}]}