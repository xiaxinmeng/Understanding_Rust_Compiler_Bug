{"sha": "33879b9fc7b04a5051c4a5508eda29c355de859d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM4NzliOWZjN2IwNGE1MDUxYzRhNTUwOGVkYTI5YzM1NWRlODU5ZA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2013-01-04T11:15:55Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2013-01-04T11:15:55Z"}, "message": "re PR middle-end/55859 (Mention -Og/-Ofast in \"error: argument to '-O' should be a non-negative integer\")\n\nPR55859.\n\nFrom-SVN: r194901", "tree": {"sha": "7ed36b5597dd47066b91b76874a32914bd496383", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ed36b5597dd47066b91b76874a32914bd496383"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33879b9fc7b04a5051c4a5508eda29c355de859d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33879b9fc7b04a5051c4a5508eda29c355de859d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33879b9fc7b04a5051c4a5508eda29c355de859d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33879b9fc7b04a5051c4a5508eda29c355de859d/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3068819a3af2da9cdab935d39b952912b1f63325", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3068819a3af2da9cdab935d39b952912b1f63325", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3068819a3af2da9cdab935d39b952912b1f63325"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "e31d6e7e050db382c3b2b98045dbc777c57f59db", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33879b9fc7b04a5051c4a5508eda29c355de859d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33879b9fc7b04a5051c4a5508eda29c355de859d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=33879b9fc7b04a5051c4a5508eda29c355de859d", "patch": "@@ -1,3 +1,8 @@\n+2013-01-04  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR middle-end/55859\n+\t* opts.c (default_options_optimization): Clarify error message.\n+\n 2013-01-04  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/55863"}, {"sha": "75e1d1c4343b63e38203b174a7affb50197f32e6", "filename": "gcc/opts.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33879b9fc7b04a5051c4a5508eda29c355de859d/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33879b9fc7b04a5051c4a5508eda29c355de859d/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=33879b9fc7b04a5051c4a5508eda29c355de859d", "patch": "@@ -1,7 +1,6 @@\n /* Command line option handling.\n    Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,\n-   2012\n-\n+   2012, 2013\n    Free Software Foundation, Inc.\n    Contributed by Neil Booth.\n \n@@ -542,9 +541,8 @@ default_options_optimization (struct gcc_options *opts,\n \t    {\n \t      const int optimize_val = integral_argument (opt->arg);\n \t      if (optimize_val == -1)\n-\t\terror_at (loc,\n-\t\t\t  \"argument to %qs should be a non-negative integer\",\n-\t\t\t  \"-O\");\n+\t\terror_at (loc, \"argument to %<-O%> should be a non-negative \"\n+\t\t\t       \"integer, %<g%>, %<s%> or %<fast%>\");\n \t      else\n \t\t{\n \t\t  opts->x_optimize = optimize_val;"}]}