{"sha": "c1db25ac14ae4bfd2278cd33cd63b9bacef1df0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFkYjI1YWMxNGFlNGJmZDIyNzhjZDMzY2Q2M2I5YmFjZWYxZGYwYg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-03-21T10:27:53Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-03-21T10:27:53Z"}, "message": "Retry to emit global variables in HSA (PR hsa/70234)\n\n\tPR hsa/70234\n\t* hsa-brig.c (emit_function_directives): Mark unemitted\n\tglobal variables for emission.\n\t* hsa-gen.c (hsa_symbol::hsa_symbol): Initialize a new flag.\n\t(get_symbol_for_decl): Likewise.\n\t* hsa.h (struct hsa_symbol): New flag.\n\nFrom-SVN: r234362", "tree": {"sha": "62ac1ef2ac57152f7ea38a44ad87544d217af2ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62ac1ef2ac57152f7ea38a44ad87544d217af2ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1db25ac14ae4bfd2278cd33cd63b9bacef1df0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1db25ac14ae4bfd2278cd33cd63b9bacef1df0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1db25ac14ae4bfd2278cd33cd63b9bacef1df0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1db25ac14ae4bfd2278cd33cd63b9bacef1df0b/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "56bbfaf62ca1d53c8016e0d9e00394a5f23c047a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56bbfaf62ca1d53c8016e0d9e00394a5f23c047a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56bbfaf62ca1d53c8016e0d9e00394a5f23c047a"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "7a918672563a7df1886a77bb62de15b842614928", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1db25ac14ae4bfd2278cd33cd63b9bacef1df0b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1db25ac14ae4bfd2278cd33cd63b9bacef1df0b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c1db25ac14ae4bfd2278cd33cd63b9bacef1df0b", "patch": "@@ -1,3 +1,12 @@\n+2016-03-21  Martin Liska  <mliska@suse.cz>\n+\n+\tPR hsa/70234\n+\t* hsa-brig.c (emit_function_directives): Mark unemitted\n+\tglobal variables for emission.\n+\t* hsa-gen.c (hsa_symbol::hsa_symbol): Initialize a new flag.\n+\t(get_symbol_for_decl): Likewise.\n+\t* hsa.h (struct hsa_symbol): New flag.\n+\n 2016-03-21  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/70288"}, {"sha": "9b6c0b888e0ed146f41f019d540071febd413bce", "filename": "gcc/hsa-brig.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1db25ac14ae4bfd2278cd33cd63b9bacef1df0b/gcc%2Fhsa-brig.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1db25ac14ae4bfd2278cd33cd63b9bacef1df0b/gcc%2Fhsa-brig.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhsa-brig.c?ref=c1db25ac14ae4bfd2278cd33cd63b9bacef1df0b", "patch": "@@ -643,6 +643,8 @@ emit_function_directives (hsa_function_representation *f, bool is_declaration)\n   if (!f->m_declaration_p)\n     for (int i = 0; f->m_global_symbols.iterate (i, &sym); i++)\n       {\n+\tgcc_assert (!sym->m_emitted_to_brig);\n+\tsym->m_emitted_to_brig = true;\n \temit_directive_variable (sym);\n \tbrig_insn_count++;\n       }"}, {"sha": "72eecf9462e5dbc3602c8f92efbfd6c94a4c5944", "filename": "gcc/hsa-gen.c", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1db25ac14ae4bfd2278cd33cd63b9bacef1df0b/gcc%2Fhsa-gen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1db25ac14ae4bfd2278cd33cd63b9bacef1df0b/gcc%2Fhsa-gen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhsa-gen.c?ref=c1db25ac14ae4bfd2278cd33cd63b9bacef1df0b", "patch": "@@ -162,7 +162,7 @@ hsa_symbol::hsa_symbol ()\n     m_directive_offset (0), m_type (BRIG_TYPE_NONE),\n     m_segment (BRIG_SEGMENT_NONE), m_linkage (BRIG_LINKAGE_NONE), m_dim (0),\n     m_cst_value (NULL), m_global_scope_p (false), m_seen_error (false),\n-    m_allocation (BRIG_ALLOCATION_AUTOMATIC)\n+    m_allocation (BRIG_ALLOCATION_AUTOMATIC), m_emitted_to_brig (false)\n {\n }\n \n@@ -174,7 +174,7 @@ hsa_symbol::hsa_symbol (BrigType16_t type, BrigSegment8_t segment,\n     m_directive_offset (0), m_type (type), m_segment (segment),\n     m_linkage (linkage), m_dim (0), m_cst_value (NULL),\n     m_global_scope_p (global_scope_p), m_seen_error (false),\n-    m_allocation (allocation)\n+    m_allocation (allocation), m_emitted_to_brig (false)\n {\n }\n \n@@ -880,11 +880,28 @@ get_symbol_for_decl (tree decl)\n   gcc_checking_assert (slot);\n   if (*slot)\n     {\n+      hsa_symbol *sym = (*slot);\n+\n       /* If the symbol is problematic, mark current function also as\n \t problematic.  */\n-      if ((*slot)->m_seen_error)\n+      if (sym->m_seen_error)\n \thsa_fail_cfun ();\n \n+      /* PR hsa/70234: If a global variable was marked to be emitted,\n+\t but HSAIL generation of a function using the variable fails,\n+\t we should retry to emit the variable in context of a different\n+\t function.\n+\n+\t Iterate elements whether a symbol is already in m_global_symbols\n+\t of not.  */\n+        if (is_in_global_vars && !sym->m_emitted_to_brig)\n+\t  {\n+\t    for (unsigned i = 0; i < hsa_cfun->m_global_symbols.length (); i++)\n+\t      if (hsa_cfun->m_global_symbols[i] == sym)\n+\t\treturn *slot;\n+\t    hsa_cfun->m_global_symbols.safe_push (sym);\n+\t  }\n+\n       return *slot;\n     }\n   else"}, {"sha": "1d6baaba9b5136fe7e6539dc631adeab7ef8435d", "filename": "gcc/hsa.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1db25ac14ae4bfd2278cd33cd63b9bacef1df0b/gcc%2Fhsa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1db25ac14ae4bfd2278cd33cd63b9bacef1df0b/gcc%2Fhsa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhsa.h?ref=c1db25ac14ae4bfd2278cd33cd63b9bacef1df0b", "patch": "@@ -110,6 +110,9 @@ struct hsa_symbol\n   /* Symbol allocation.  */\n   BrigAllocation m_allocation;\n \n+  /* Flag used for global variables if a variable is already emitted or not.  */\n+  bool m_emitted_to_brig;\n+\n private:\n   /* Default constructor.  */\n   hsa_symbol ();"}]}