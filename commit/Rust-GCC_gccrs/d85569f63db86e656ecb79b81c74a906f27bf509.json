{"sha": "d85569f63db86e656ecb79b81c74a906f27bf509", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDg1NTY5ZjYzZGI4NmU2NTZlY2I3OWI4MWM3NGE5MDZmMjdiZjUwOQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-09-10T21:04:33Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-09-10T21:04:33Z"}, "message": "PR c++/91705 - constexpr evaluation rejects ++/-- on floats.\n\n\t* constexpr.c (cxx_eval_increment_expression): Call fold_simple on\n\tthe offset.\n\n\t* g++.dg/cpp1y/constexpr-incr2.C: New test.\n\nFrom-SVN: r275613", "tree": {"sha": "78333e30ba6ed1884216dfdc8eb442aad4b91bdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78333e30ba6ed1884216dfdc8eb442aad4b91bdf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d85569f63db86e656ecb79b81c74a906f27bf509", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d85569f63db86e656ecb79b81c74a906f27bf509", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d85569f63db86e656ecb79b81c74a906f27bf509", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d85569f63db86e656ecb79b81c74a906f27bf509/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "efc864927f57fa1a4aa8d1f22e4071343f0b8cbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efc864927f57fa1a4aa8d1f22e4071343f0b8cbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efc864927f57fa1a4aa8d1f22e4071343f0b8cbb"}], "stats": {"total": 81, "additions": 81, "deletions": 0}, "files": [{"sha": "15b1fbfcd0d707fd893fd1c0a1d3f0ddd59d9318", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d85569f63db86e656ecb79b81c74a906f27bf509/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d85569f63db86e656ecb79b81c74a906f27bf509/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d85569f63db86e656ecb79b81c74a906f27bf509", "patch": "@@ -1,3 +1,9 @@\n+2019-09-10  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/91705 - constexpr evaluation rejects ++/-- on floats.\n+\t* constexpr.c (cxx_eval_increment_expression): Call fold_simple on\n+\tthe offset.\n+\n 2019-09-10  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* decl.c (has_designator_problem): Use cp_expr_loc_or_input_loc"}, {"sha": "58db691e134e7372a641b2a2fe9a33d968939b2a", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d85569f63db86e656ecb79b81c74a906f27bf509/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d85569f63db86e656ecb79b81c74a906f27bf509/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=d85569f63db86e656ecb79b81c74a906f27bf509", "patch": "@@ -4164,6 +4164,10 @@ cxx_eval_increment_expression (const constexpr_ctx *ctx, tree t,\n   tree offset = TREE_OPERAND (t, 1);\n   gcc_assert (TREE_CONSTANT (offset));\n \n+  /* OFFSET is constant, but perhaps not constant enough.  We need to\n+     e.g. bash FLOAT_EXPRs to REAL_CSTs.  */\n+  offset = fold_simple (offset);\n+\n   /* The operand as an lvalue.  */\n   op = cxx_eval_constant_expression (ctx, op, true,\n \t\t\t\t     non_constant_p, overflow_p);"}, {"sha": "464765d52938d4bf9d0cc436b099396b6518a838", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d85569f63db86e656ecb79b81c74a906f27bf509/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d85569f63db86e656ecb79b81c74a906f27bf509/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d85569f63db86e656ecb79b81c74a906f27bf509", "patch": "@@ -1,3 +1,8 @@\n+2019-09-10  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/91705 - constexpr evaluation rejects ++/-- on floats.\n+\t* g++.dg/cpp1y/constexpr-incr2.C: New test.\n+\n 2019-09-10  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* gfortran.dg/default_format_1.f90: Remove XFAIL AIX."}, {"sha": "0d22851e4b20431d246519e459573d31787d8bc6", "filename": "gcc/testsuite/g++.dg/cpp1y/constexpr-incr2.C", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d85569f63db86e656ecb79b81c74a906f27bf509/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-incr2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d85569f63db86e656ecb79b81c74a906f27bf509/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-incr2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-incr2.C?ref=d85569f63db86e656ecb79b81c74a906f27bf509", "patch": "@@ -0,0 +1,66 @@\n+// PR c++/91705 - constexpr evaluation rejects ++/-- on floats.\n+// { dg-do compile { target c++14 } }\n+\n+#define SA(X) static_assert((X),#X)\n+\n+template <class T>\n+constexpr T fn1(T t)\n+{\n+  return ++t;\n+}\n+\n+constexpr float fn2(float t)\n+{\n+  return ++t;\n+}\n+\n+template <class T>\n+constexpr T fn3(T t)\n+{\n+  return --t;\n+}\n+\n+constexpr float fn4(float t)\n+{\n+  return --t;\n+}\n+\n+template <class T>\n+constexpr T fn5(T t)\n+{\n+  return t++;\n+}\n+\n+constexpr float fn6(float t)\n+{\n+  return t++;\n+}\n+\n+template <class T>\n+constexpr T fn7(T t)\n+{\n+  return t--;\n+}\n+\n+constexpr float fn8(float t)\n+{\n+  return t--;\n+}\n+\n+constexpr double r1 = fn1(2.0f);\n+SA(r1 == 3);\n+constexpr double r2 = fn2(2.0f);\n+SA(r2 == 3);\n+constexpr double r3 = fn3(2.0f);\n+SA(r3 == 1);\n+constexpr double r4 = fn4(2.0f);\n+SA(r4 == 1);\n+\n+constexpr double r5 = fn5(2.0f);\n+SA(r5 == 2);\n+constexpr double r6 = fn6(2.0f);\n+SA(r6 == 2);\n+constexpr double r7 = fn7(2.0f);\n+SA(r7 == 2);\n+constexpr double r8 = fn8(2.0f);\n+SA(r8 == 2);"}]}