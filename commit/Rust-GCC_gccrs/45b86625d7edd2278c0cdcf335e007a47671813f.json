{"sha": "45b86625d7edd2278c0cdcf335e007a47671813f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDViODY2MjVkN2VkZDIyNzhjMGNkY2YzMzVlMDA3YTQ3NjcxODEzZg==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-11-02T15:03:19Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-11-02T15:03:19Z"}, "message": "Move libgcc1 to toplevel libgcc\n\n\tgcc:\n\t* Makefile.in (LIB1ASMSRC): Don't export.\n\t(libgcc.mvars): Don't emit LIB1ASMFUNCS, LIB1ASMSRC.\n\t* config/arm/arm.c: Update lib1funcs.asm filename.\n\t* config/arm/linux-eabi.h: Likewise.\n\t* config/arm/bpabi-v6m.S, config/arm/bpabi.S,\n\tconfig/arm/ieee754-df.S, config/arm/ieee754-sf.S: Move to\n\t../libgcc/config/arm.\n\t* config/arm/lib1funcs.asm: Move to ../libgcc/config/arm/lib1funcs.S.\n\t* config/arm/t-arm (LIB1ASMSRC, LIB1ASMFUNCS): Remove.\n\t* config/arm/t-arm-elf (LIB1ASMFUNCS): Remove.\n\t* config/arm/t-bpabi: Likewise.\n\t* config/arm/t-linux (LIB1ASMSRC, LIB1ASMFUNCS): Remove.\n\t* config/arm/t-linux-eabi (LIB1ASMFUNCS): Remove.\n\t* config/arm/t-strongarm-elf: Likewise.\n\t* config/arm/t-symbian: Likewise.\n\t* config/arm/t-vxworks: Likewise.\n\t* config/arm/t-wince-pe: Likewise.\n\t* config/avr/libgcc.S: Move to ../libgcc/config/avr.\n\t* config/avr/t-avr (LIB1ASMSRC, LIB1ASMFUNCS): Remove.\n\t* config/bfin/lib1funcs.asm: Move to\n\t../libgcc/config/bfin/lib1funcs.S.\n\t* config/bfin/t-bfin: Remove.\n\t* config/bfin/t-bfin-elf (LIB1ASMSRC, LIB1ASMFUNCS): Remove.\n\t* config/bfin/t-bfin-linux: Likewise.\n\t* config/bfin/t-bfin-uclinux: Likewise.\n\t* config/c6x/lib1funcs.asm: Move to\n\t../libgcc/config/c6x/lib1funcs.S.\n\t* config/c6x/t-c6x-elf (LIB1ASMSRC, LIB1ASMFUNCS): Remove.\n\t* config/fr30/lib1funcs.asm: Move to\n\t../libgcc/config/fr30/lib1funcs.S.\n\t* config/fr30/t-fr30 (LIB1ASMSRC, LIB1ASMFUNCS): Remove.\n\t* config/frv/lib1funcs.asm: Move to\n\t../libgcc/config/frv/lib1funcs.S.\n\t* config/frv/t-frv (CROSS_LIBGCC1, LIB1ASMSRC, LIB1ASMFUNCS): Remove.\n\t* config/h8300/fixunssfsi.c: Update lib1funcs.asm filename.\n\t* config/h8300/lib1funcs.asm: Move to\n\t../libgcc/config/h8300/lib1funcs.S.\n\t* config/h8300/t-h8300 (LIB1ASMSRC, LIB1ASMFUNCS): Remove.\n\t* config/i386/cygwin.asm: Move to ../libgcc/config/i386/cygwin.S.\n\t* config/i386/t-cygming (LIB1ASMSRC, LIB1ASMFUNCS): Remove.\n\t* config/i386/t-interix: Likewise.\n\t* config/ia64/lib1funcs.asm: Move to\n\t../libgcc/config/ia64/lib1funcs.S.\n\t* config/ia64/t-hpux (LIB1ASMFUNCS, LIBGCC1_TEST): Remove.\n\t* config/ia64/t-ia64 (LIB1ASMSRC, LIB1ASMFUNCS): Remove.\n\t* config/iq2000/t-iq2000 (LIBGCC1, CROSS_LIBGCC1): Remove.\n\t* config/m32c/m32c.c: Update m32c-lib1.S filename.\n\t* config/m32c/m32c-lib1.S: Move to ../libgcc/config/m32c/lib1funcs.S.\n\t* config/m32c/t-m32c (LIB1ASMSRC, LIB1ASMFUNCS): Remove.\n\t* config/m32r/t-linux (CROSS_LIBGCC1, LIBGCC1, LIBGCC1_TEST): Remove.\n\t* config/m68k/lb1sf68.asm: Move to ../libgcc/config/m68k/lb1sf68.S.\n\t* config/m68k/t-floatlib (LIB1ASMSRC, LIB1ASMFUNCS): New file.\n\t* config/mcore/lib1.asm: Move to ../libgcc/config/mcore/lib1funcs.S.\n\t* config/mcore/t-mcore (LIB1ASMSRC, LIB1ASMFUNCS): Remove.\n\t* config/mep/mep-lib1.asm: Move to ../libgcc/config/mep/lib1funcs.S.\n\t* config/mep/t-mep (LIB1ASMSRC, LIB1ASMFUNCS): Remove.\n\t* config/mips/mips16.S: Move to ../libgcc/config/mips.\n\t* config/mips/t-libgcc-mips16: Remove.\n\t* config/mips/t-sr71k (LIBGCC1, CROSS_LIBGCC1): Remove.\n\t* config/pa/milli64.S: Move to ../libgcc/config/pa.\n\t* config/pa/t-linux (LIB1ASMFUNCS, LIB1ASMSRC): Remove.\n\t* config/pa/t-linux64: Likewise.\n\t* config/picochip/libgccExtras/fake_libgcc.asm: Move to\n\t../libgcc/config/picochip/lib1funcs.S.\n\t* config/picochip/t-picochip (LIB1ASMFUNCS, LIB1ASMSRC): Remove.\n\t* config/sh/lib1funcs.asm: Move to ../libgcc/config/sh/lib1funcs.S.\n\t* config/sh/lib1funcs.h: Move to ../libgcc/config/sh.\n\t* config/sh/sh.h: Update lib1funcs.asm filename.\n\t* config/sh/t-linux (LIB1ASMFUNCS_CACHE): Remove.\n\t* config/sh/t-netbsd: Likewise.\n\t* config/sh/t-sh (LIB1ASMSRC, LIB1ASMFUNCS, LIB1ASMFUNCS_CACHE):\n\tRemove.\n\t* config/sh/t-sh64 (LIB1ASMFUNCS): Remove.\n\t* config/sparc/lb1spc.asm: Move to ../libgcc/config/sparc/lb1spc.S.\n\t* config/sparc/lb1spl.asm: Remove.\n\t* config/sparc/t-elf (LIB1ASMSRC, LIB1ASMFUNCS): Remove.\n\t* config/sparc/t-leon: Likewise.\n\t* config/spu/t-spu-elf (LIBGCC1, CROSS_LIBGCC1): Remove.\n\t* config/v850/lib1funcs.asm: Move to ../libgcc/config/v850/lib1funcs.S.\n\t* config/v850/t-v850 (LIB1ASMSRC, LIB1ASMFUNCS): Remove\n\t* config/vax/lib1funcs.asm: Move to ../libgcc/config/vax/lib1funcs.S.\n\t* config/vax/t-linux: Remove.\n\t* config/xtensa/ieee754-df.S, config/xtensa/ieee754-sf.S: Move to\n\t../libgcc/config/xtensa.\n\t* config/xtensa/lib1funcs.asm: Move to\n\t../libgcc/config/xtensa/lib1funcs.S.\n\t* config/xtensa/t-xtensa (LIB1ASMSRC, LIB1ASMFUNCS): Remove.\n\t* config.gcc (bfin*-rtems*): Remove bfin/t-bfin from tmake_file.\n\t(bfin*-*): Likewise.\n\t(mips64*-*-linux*, mipsisa64*-*-linux*): Remove\n\tmips/t-libgcc-mips16 from tmake_file.\n\t(mips*-*-linux*): Likewise.\n\t(mips*-sde-elf*): Likewise.\n\t(mipsisa32-*-elf*, mipsisa32el-*-elf*, mipsisa32r2-*-elf*)\n\t(mipsisa32r2el-*-elf*, mipsisa64-*-elf*, mipsisa64el-*-elf*)\n\t(mipsisa64r2-*-elf*, mipsisa64r2el-*-elf*): Likewise.\n\t(mipsisa64sb1-*-elf*, mipsisa64sb1el-*-elf*): Likewise.\n\t(mips-*-elf*, mipsel-*-elf*): Likewise.\n\t(mips64-*-elf*, mips64el-*-elf*): Likewise.\n\t(mips64orion-*-elf*, mips64orionel-*-elf*): Likewise.\n\t(mips*-*-rtems*): Likewise.\n\t(mipstx39-*-elf*, mipstx39el-*-elf*): Likewise.\n\t(vax-*-linux*): Remove vax/t-linux from tmake_file.\n\n\tlibgcc:\n\t* Makefile.in ($(lib1asmfuncs-o), $(lib1asmfuncs-s-o)): Use\n\t$(srcdir) to refer to $(LIB1ASMSRC).\n\tUse $<.\n\t* config/arm/bpabi-v6m.S, config/arm/bpabi.S,\n\tconfig/arm/ieee754-df.S, config/arm/ieee754-sf.S,\n\tconfig/arm/lib1funcs.S: New files.\n\t* config/arm/libunwind.S [!__symbian__]: Use lib1funcs.S.\n\t* config/arm/t-arm: New file.\n\t* config/arm/t-bpabi (LIB1ASMFUNCS): Set.\n\t* config/arm/t-elf, config/arm/t-linux, config/arm/t-linux-eabi,\n\tconfig/arm/t-strongarm-elf: New files.\n\t* config/arm/t-symbian (LIB1ASMFUNCS): Set.\n\t* config/arm/t-vxworks, config/arm/t-wince-pe: New files.\n\t* config/avr/lib1funcs.S: New file.\n\t* config/avr/t-avr (LIB1ASMSRC, LIB1ASMFUNCS): Set.\n\t* config/bfin/lib1funcs.S, config/bfin/t-bfin: New files.\n\t* config/c6x/lib1funcs.S: New file.\n\t* config/c6x/t-elf (LIB1ASMSRC, LIB1ASMFUNCS): Set.\n\t* config/fr30/lib1funcs.S, config/fr30/t-fr30: New files.\n\t* config/frv/lib1funcs.S: New file.\n\t* config/frv/t-frv (LIB1ASMSRC, LIB1ASMFUNCS): Set.\n\t* config/h8300/lib1funcs.S, config/h8300/t-h8300: New files.\n\t* config/i386/cygwin.S, config/i386/t-chkstk: New files.\n\t* config/ia64/__divxf3.asm: Rename to ...\n\t* config/ia64/__divxf3.S: ... this.\n\tAdapt lib1funcs.asm filename.\n\t* config/ia64/_fixtfdi.asm: Rename to ...\n\t* config/ia64/_fixtfdi.S: ... this.\n\tAdapt lib1funcs.asm filename.\n\t* config/ia64/_fixunstfdi.asm: Rename to ...\n\t* config/ia64/_fixunstfdi.S: ... this.\n\tAdapt lib1funcs.asm filename.\n\t* config/ia64/_floatditf.asm: Rename to ...\n\t* config/ia64/_floatditf.S: ... this.\n\tAdapt lib1funcs.asm filename.\n\t* config/ia64/lib1funcs.S: New file.\n\t* config/ia64/t-hpux (LIB1ASMFUNCS): Set.\n\t* config/ia64/t-ia64 (LIB1ASMSRC, LIB1ASMFUNCS): Set.\n\t* config/ia64/t-softfp-compat (libgcc1-tf-compats): Adapt suffix.\n\t* config/m32c/lib1funcs.S, config/m32c/t-m32c: New files.\n\t* config/m68k/lb1sf68.S, config/m68k/t-floatlib: New files.\n\t* config/mcore/lib1funcs.S, config/mcore/t-mcore: New files.\n\t* config/mep/lib1funcs.S: New file.\n\t* config/mep/t-mep (LIB1ASMSRC, LIB1ASMFUNCS): Set.\n\t* config/mips/mips16.S: New file.\n\t* config/mips/t-mips16 (LIB1ASMSRC, LIB1ASMFUNCS): Set.\n\t* config/pa/milli64.S: New file.\n\t* config/pa/t-linux, config/pa/t-linux64: New files.\n\t* config/picochip/lib1funcs.S: New file.\n\t* config/picochip/t-picochip (LIB1ASMSRC, LIB1ASMFUNCS): Set.\n\t* config/sh/lib1funcs.S, config/sh/lib1funcs.h: New files.\n\t* config/sh/t-linux (LIB1ASMFUNCS_CACHE): Set.\n\t* config/sh/t-netbsd: New file.\n\t* config/sh/t-sh (LIB1ASMSRC, LIB1ASMFUNCS, LIB1ASMFUNCS_CACHE): Set.\n\tUse $(srcdir) to refer to lib1funcs.S, adapt filename.\n\t* config/sh/t-sh64: New file.\n\t* config/sparc/lb1spc.S: New file.\n\t* config/sparc/t-softmul (LIB1ASMSRC): Adapt sparc/lb1spc.asm\n\tfilename.\n\t* config/v850/lib1funcs.S, config/v850/t-v850: New files.\n\t* config/vax/lib1funcs.S, config/vax/t-linux: New files.\n\t* config/xtensa/ieee754-df.S, config/xtensa/ieee754-sf.S,\n\tconfig/xtensa/lib1funcs.S: New files.\n\t* config/xtensa/t-xtensa (LIB1ASMSRC, LIB1ASMFUNCS): Set.\n\t* config.host (arm-wrs-vxworks): Add arm/t-arm, arm/t-vxworks to\n\ttmake_file.\n\t(arm*-*-freebsd*): Add arm/t-arm, arm/t-strongarm-elf to tmake_file.\n\t(arm*-*-netbsdelf*): Add arm/t-arm to tmake_file.\n\t(arm*-*-linux*): Likewise.\n\tAdd arm/t-elf, arm/t-bpabi, arm/t-linux-eabi to tmake_file for\n\tarm*-*-linux-*eabi, add arm/t-linux otherwise.\n\t(arm*-*-uclinux*): Add arm/t-arm, arm/t-elf to tmake_file.\n\t(arm*-*-ecos-elf): Likewise.\n\t(arm*-*-eabi*, arm*-*-symbianelf*): Likewise.\n\t(arm*-*-rtems*): Likewise.\n\t(arm*-*-elf): Likewise.\n\t(arm*-wince-pe*): Add arm/t-arm, arm/t-wince-pe to tmake_file.\n\t(avr-*-rtems*): Add to tmake_file, add avr/t-avr.\n\t(bfin*-elf*): Add bfin/t-bfin to tmake_file.\n\t(bfin*-uclinux*): Likewise.\n\t(bfin*-linux-uclibc*): Likewise.\n\t(bfin*-rtems*): Likewise.\n\t(bfin*-*): Likewise.\n\t(fido-*-elf): Merge into m68k-*-elf*.\n\t(fr30-*-elf)): Add fr30/t-fr30 to tmake_file.\n\t(frv-*-*linux*): Add frv/t-frv to tmake_file.\n\t(h8300-*-rtems*): Add h8300/t-h8300 to tmake_file.\n\t(h8300-*-elf*): Likewise.\n\t(hppa*64*-*-linux*): Add pa/t-linux, pa/t-linux64 to tmake_file.\n\t(hppa*-*-linux*): Add pa/t-linux to tmake_file.\n\t(i[34567]86-*-cygwin*): Add i386/t-chkstk to tmake_file.\n\t(i[34567]86-*-mingw*): Likewise.\n\t(x86_64-*-mingw*): Likewise.\n\t(i[34567]86-*-interix3*): Likewise.\n\t(ia64*-*-hpux*): Add ia64/t-ia64, ia64/t-hpux to tmake_file.\n\t(ia64-hp-*vms*): Add ia64/t-ia64 to tmake_file.\n\t(m68k-*-elf*): Also handle fido-*-elf.\n\tAdd m68k/t-floatlib to tmake_file.\n\t(m68k-*-uclinux*): Add m68k/t-floatlib to tmake_file.\n\t(m68k-*-linux*): Likewise.\n\t(m68k-*-rtems*): Likewise.\n\t(mcore-*-elf): Add mcore/t-mcore to tmake_file.\n\t(sh-*-elf*, sh[12346l]*-*-elf*): Add sh/t-sh64 to tmake_file for\n\tsh64*-*-*.\n\t(sh-*-linux*, sh[2346lbe]*-*-linux*): Add sh/t-sh to tmake_file.\n\tAdd sh/t-sh64 to tmake_file for sh64*-*-linux*.\n\t(sh-*-netbsdelf*, shl*-*-netbsdelf*, sh5-*-netbsd*)\n\t(sh5l*-*-netbsd*, sh64-*-netbsd*, sh64l*-*-netbsd*): Add sh/t-sh,\n\tsh/t-netbsd to tmake_file.\n\tAdd sh/t-sh64 to tmake_file for sh5*-*-netbsd*, sh64*-netbsd*.\n\t(sh-*-rtems*): Add sh/t-sh to tmake_file.\n\t(sh-wrs-vxworks): Likewise.\n\t(sparc-*-linux*): Add sparc/t-softmul to tmake_file except for\n\t*-leon[3-9]*.\n\t(v850*-*-*): Add v850/t-v850 to tmake_file.\n\t(vax-*-linux*): Add vax/t-linux to tmake_file.\n\t(m32c-*-elf*, m32c-*-rtems*): Add m32c/t-m32c to tmake_file.\n\nFrom-SVN: r180773", "tree": {"sha": "bfbde9a54f663fb7556b9dacd07709ef97c1961c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfbde9a54f663fb7556b9dacd07709ef97c1961c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45b86625d7edd2278c0cdcf335e007a47671813f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45b86625d7edd2278c0cdcf335e007a47671813f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45b86625d7edd2278c0cdcf335e007a47671813f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45b86625d7edd2278c0cdcf335e007a47671813f/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5f73c6ccf0d9c54714b162b9d314594311747de9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f73c6ccf0d9c54714b162b9d314594311747de9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f73c6ccf0d9c54714b162b9d314594311747de9"}], "stats": {"total": 1349, "additions": 627, "deletions": 722}, "files": [{"sha": "071cce6c29c67dc2b9357cc099ae3165fded0b2e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 106, "deletions": 0, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -1,3 +1,109 @@\n+2011-11-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* Makefile.in (LIB1ASMSRC): Don't export.\n+\t(libgcc.mvars): Don't emit LIB1ASMFUNCS, LIB1ASMSRC.\n+\t* config/arm/arm.c: Update lib1funcs.asm filename.\n+\t* config/arm/linux-eabi.h: Likewise.\n+\t* config/arm/bpabi-v6m.S, config/arm/bpabi.S,\n+\tconfig/arm/ieee754-df.S, config/arm/ieee754-sf.S: Move to\n+\t../libgcc/config/arm.\n+\t* config/arm/lib1funcs.asm: Move to ../libgcc/config/arm/lib1funcs.S.\n+\t* config/arm/t-arm (LIB1ASMSRC, LIB1ASMFUNCS): Remove.\n+\t* config/arm/t-arm-elf (LIB1ASMFUNCS): Remove.\n+\t* config/arm/t-bpabi: Likewise.\n+\t* config/arm/t-linux (LIB1ASMSRC, LIB1ASMFUNCS): Remove.\n+\t* config/arm/t-linux-eabi (LIB1ASMFUNCS): Remove.\n+\t* config/arm/t-strongarm-elf: Likewise.\n+\t* config/arm/t-symbian: Likewise.\n+\t* config/arm/t-vxworks: Likewise.\n+\t* config/arm/t-wince-pe: Likewise.\n+\t* config/avr/libgcc.S: Move to ../libgcc/config/avr.\n+\t* config/avr/t-avr (LIB1ASMSRC, LIB1ASMFUNCS): Remove.\n+\t* config/bfin/lib1funcs.asm: Move to\n+\t../libgcc/config/bfin/lib1funcs.S.\n+\t* config/bfin/t-bfin: Remove.\n+\t* config/bfin/t-bfin-elf (LIB1ASMSRC, LIB1ASMFUNCS): Remove.\n+\t* config/bfin/t-bfin-linux: Likewise.\n+\t* config/bfin/t-bfin-uclinux: Likewise.\n+\t* config/c6x/lib1funcs.asm: Move to\n+\t../libgcc/config/c6x/lib1funcs.S.\n+\t* config/c6x/t-c6x-elf (LIB1ASMSRC, LIB1ASMFUNCS): Remove.\n+\t* config/fr30/lib1funcs.asm: Move to\n+\t../libgcc/config/fr30/lib1funcs.S.\n+\t* config/fr30/t-fr30 (LIB1ASMSRC, LIB1ASMFUNCS): Remove.\n+\t* config/frv/lib1funcs.asm: Move to\n+\t../libgcc/config/frv/lib1funcs.S.\n+\t* config/frv/t-frv (CROSS_LIBGCC1, LIB1ASMSRC, LIB1ASMFUNCS): Remove.\n+\t* config/h8300/fixunssfsi.c: Update lib1funcs.asm filename.\n+\t* config/h8300/lib1funcs.asm: Move to\n+\t../libgcc/config/h8300/lib1funcs.S.\n+\t* config/h8300/t-h8300 (LIB1ASMSRC, LIB1ASMFUNCS): Remove.\n+\t* config/i386/cygwin.asm: Move to ../libgcc/config/i386/cygwin.S.\n+\t* config/i386/t-cygming (LIB1ASMSRC, LIB1ASMFUNCS): Remove.\n+\t* config/i386/t-interix: Likewise.\n+\t* config/ia64/lib1funcs.asm: Move to\n+\t../libgcc/config/ia64/lib1funcs.S.\n+\t* config/ia64/t-hpux (LIB1ASMFUNCS, LIBGCC1_TEST): Remove.\n+\t* config/ia64/t-ia64 (LIB1ASMSRC, LIB1ASMFUNCS): Remove.\n+\t* config/iq2000/t-iq2000 (LIBGCC1, CROSS_LIBGCC1): Remove.\n+\t* config/m32c/m32c.c: Update m32c-lib1.S filename.\n+\t* config/m32c/m32c-lib1.S: Move to ../libgcc/config/m32c/lib1funcs.S.\n+\t* config/m32c/t-m32c (LIB1ASMSRC, LIB1ASMFUNCS): Remove.\n+\t* config/m32r/t-linux (CROSS_LIBGCC1, LIBGCC1, LIBGCC1_TEST): Remove.\n+\t* config/m68k/lb1sf68.asm: Move to ../libgcc/config/m68k/lb1sf68.S.\n+\t* config/m68k/t-floatlib (LIB1ASMSRC, LIB1ASMFUNCS): New file.\n+\t* config/mcore/lib1.asm: Move to ../libgcc/config/mcore/lib1funcs.S.\n+\t* config/mcore/t-mcore (LIB1ASMSRC, LIB1ASMFUNCS): Remove.\n+\t* config/mep/mep-lib1.asm: Move to ../libgcc/config/mep/lib1funcs.S.\n+\t* config/mep/t-mep (LIB1ASMSRC, LIB1ASMFUNCS): Remove.\n+\t* config/mips/mips16.S: Move to ../libgcc/config/mips.\n+\t* config/mips/t-libgcc-mips16: Remove.\n+\t* config/mips/t-sr71k (LIBGCC1, CROSS_LIBGCC1): Remove.\n+\t* config/pa/milli64.S: Move to ../libgcc/config/pa.\n+\t* config/pa/t-linux (LIB1ASMFUNCS, LIB1ASMSRC): Remove.\n+\t* config/pa/t-linux64: Likewise.\n+\t* config/picochip/libgccExtras/fake_libgcc.asm: Move to\n+\t../libgcc/config/picochip/lib1funcs.S.\n+\t* config/picochip/t-picochip (LIB1ASMFUNCS, LIB1ASMSRC): Remove.\n+\t* config/sh/lib1funcs.asm: Move to ../libgcc/config/sh/lib1funcs.S.\n+\t* config/sh/lib1funcs.h: Move to ../libgcc/config/sh.\n+\t* config/sh/sh.h: Update lib1funcs.asm filename.\n+\t* config/sh/t-linux (LIB1ASMFUNCS_CACHE): Remove.\n+\t* config/sh/t-netbsd: Likewise.\n+\t* config/sh/t-sh (LIB1ASMSRC, LIB1ASMFUNCS, LIB1ASMFUNCS_CACHE):\n+\tRemove.\n+\t* config/sh/t-sh64 (LIB1ASMFUNCS): Remove.\n+\t* config/sparc/lb1spc.asm: Move to ../libgcc/config/sparc/lb1spc.S.\n+\t* config/sparc/lb1spl.asm: Remove.\n+\t* config/sparc/t-elf (LIB1ASMSRC, LIB1ASMFUNCS): Remove.\n+\t* config/sparc/t-leon: Likewise.\n+\t* config/spu/t-spu-elf (LIBGCC1, CROSS_LIBGCC1): Remove.\n+\t* config/v850/lib1funcs.asm: Move to ../libgcc/config/v850/lib1funcs.S.\n+\t* config/v850/t-v850 (LIB1ASMSRC, LIB1ASMFUNCS): Remove\n+\t* config/vax/lib1funcs.asm: Move to ../libgcc/config/vax/lib1funcs.S.\n+\t* config/vax/t-linux: Remove.\n+\t* config/xtensa/ieee754-df.S, config/xtensa/ieee754-sf.S: Move to\n+\t../libgcc/config/xtensa.\n+\t* config/xtensa/lib1funcs.asm: Move to\n+\t../libgcc/config/xtensa/lib1funcs.S.\n+\t* config/xtensa/t-xtensa (LIB1ASMSRC, LIB1ASMFUNCS): Remove.\n+\t* config.gcc (bfin*-rtems*): Remove bfin/t-bfin from tmake_file.\n+\t(bfin*-*): Likewise.\n+\t(mips64*-*-linux*, mipsisa64*-*-linux*): Remove\n+\tmips/t-libgcc-mips16 from tmake_file.\n+\t(mips*-*-linux*): Likewise.\n+\t(mips*-sde-elf*): Likewise.\n+\t(mipsisa32-*-elf*, mipsisa32el-*-elf*, mipsisa32r2-*-elf*)\n+\t(mipsisa32r2el-*-elf*, mipsisa64-*-elf*, mipsisa64el-*-elf*)\n+\t(mipsisa64r2-*-elf*, mipsisa64r2el-*-elf*): Likewise.\n+\t(mipsisa64sb1-*-elf*, mipsisa64sb1el-*-elf*): Likewise.\n+\t(mips-*-elf*, mipsel-*-elf*): Likewise.\n+\t(mips64-*-elf*, mips64el-*-elf*): Likewise.\n+\t(mips64orion-*-elf*, mips64orionel-*-elf*): Likewise.\n+\t(mips*-*-rtems*): Likewise.\n+\t(mipstx39-*-elf*, mipstx39el-*-elf*): Likewise.\n+\t(vax-*-linux*): Remove vax/t-linux from tmake_file.\n+\n 2011-11-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* config.gcc (extra_parts): Remove."}, {"sha": "38449d7c30e8b3ca46b6cbe663168c83605949e9", "filename": "gcc/Makefile.in", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -1110,7 +1110,6 @@ export DESTDIR\n export GCC_FOR_TARGET\n export INCLUDES\n export INSTALL_DATA\n-export LIB1ASMSRC\n export LIBGCC2_CFLAGS\n export LIPO_FOR_TARGET\n export MACHMODE_H\n@@ -1878,8 +1877,6 @@ libgcc-support: libgcc.mvars stmp-int-hdrs $(TCONFIG_H) \\\n libgcc.mvars: config.status Makefile $(LIB2ADD) $(LIB2ADD_ST) specs \\\n \t\txgcc$(exeext)\n \t: > tmp-libgcc.mvars\n-\techo LIB1ASMFUNCS = '$(LIB1ASMFUNCS)' >> tmp-libgcc.mvars\n-\techo LIB1ASMSRC = '$(LIB1ASMSRC)' >> tmp-libgcc.mvars\n \techo LIB2FUNCS_ST = '$(LIB2FUNCS_ST)' >> tmp-libgcc.mvars\n \techo LIB2FUNCS_EXCLUDE = '$(LIB2FUNCS_EXCLUDE)' >> tmp-libgcc.mvars\n \techo LIB2ADD = '$(call srcdirify,$(LIB2ADD))' >> tmp-libgcc.mvars"}, {"sha": "79230a6935ac0f7f7e2a0de9b24c03361537b216", "filename": "gcc/config.gcc", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -950,11 +950,10 @@ bfin*-linux-uclibc*)\n \t;;\n bfin*-rtems*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h bfin/elf.h bfin/rtems.h rtems.h newlib-stdint.h\"\n-\ttmake_file=\"bfin/t-bfin t-rtems bfin/t-rtems\"\n+\ttmake_file=\"t-rtems bfin/t-rtems\"\n \t;;\n bfin*-*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h newlib-stdint.h bfin/elf.h\"\n-\ttmake_file=bfin/t-bfin\n \tuse_collect2=no\n \tuse_gcc_stdint=wrap\n \t;;\n@@ -1737,7 +1736,7 @@ mips*-*-netbsd*)\t\t\t# NetBSD/mips, either endian.\n \t;;\n mips64*-*-linux* | mipsisa64*-*-linux*)\n \ttm_file=\"dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h ${tm_file} mips/gnu-user.h mips/gnu-user64.h mips/linux64.h\"\n-\ttmake_file=\"${tmake_file} mips/t-linux64 mips/t-libgcc-mips16\"\n+\ttmake_file=\"${tmake_file} mips/t-linux64\"\n \ttm_defines=\"${tm_defines} MIPS_ABI_DEFAULT=ABI_N32\"\n \tcase ${target} in\n \t\tmips64el-st-linux-gnu)\n@@ -1758,7 +1757,6 @@ mips64*-*-linux* | mipsisa64*-*-linux*)\n \t;;\n mips*-*-linux*)\t\t\t\t# Linux MIPS, either endian.\n         tm_file=\"dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h ${tm_file} mips/gnu-user.h mips/linux.h\"\n-\ttmake_file=\"${tmake_file} mips/t-libgcc-mips16\"\n \tif test x$enable_targets = xall; then\n \t\ttm_file=\"${tm_file} mips/gnu-user64.h mips/linux64.h\"\n \t\ttmake_file=\"${tmake_file} mips/t-linux64\"\n@@ -1785,7 +1783,7 @@ mips*-*-openbsd*)\n \t;;\n mips*-sde-elf*)\n \ttm_file=\"elfos.h newlib-stdint.h ${tm_file} mips/elf.h mips/sde.h\"\n-\ttmake_file=\"mips/t-sde mips/t-libgcc-mips16\"\n+\ttmake_file=\"mips/t-sde\"\n \textra_options=\"${extra_options} mips/sde.opt\"\n \tcase \"${with_newlib}\" in\n \t  yes)\n@@ -1822,7 +1820,7 @@ mipsisa32r2-*-elf* | mipsisa32r2el-*-elf* | \\\n mipsisa64-*-elf* | mipsisa64el-*-elf* | \\\n mipsisa64r2-*-elf* | mipsisa64r2el-*-elf*)\n \ttm_file=\"elfos.h newlib-stdint.h ${tm_file} mips/elf.h\"\n-\ttmake_file=\"mips/t-isa3264 mips/t-libgcc-mips16\"\n+\ttmake_file=\"mips/t-isa3264\"\n \tcase ${target} in\n \t  mipsisa32r2*)\n \t    tm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=33\"\n@@ -1859,17 +1857,17 @@ mipsisa64sr71k-*-elf*)\n         ;;\n mipsisa64sb1-*-elf* | mipsisa64sb1el-*-elf*)\n \ttm_file=\"elfos.h newlib-stdint.h ${tm_file} mips/elf.h\"\n-\ttmake_file=\"mips/t-elf mips/t-libgcc-mips16 mips/t-sb1\"\n+\ttmake_file=\"mips/t-elf mips/t-sb1\"\n \ttarget_cpu_default=\"MASK_64BIT|MASK_FLOAT64\"\n \ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=64 MIPS_CPU_STRING_DEFAULT=\\\\\\\"sb1\\\\\\\" MIPS_ABI_DEFAULT=ABI_O64\"\n \t;;\n mips-*-elf* | mipsel-*-elf*)\n \ttm_file=\"elfos.h newlib-stdint.h ${tm_file} mips/elf.h\"\n-\ttmake_file=\"mips/t-elf mips/t-libgcc-mips16\"\n+\ttmake_file=\"mips/t-elf\"\n \t;;\n mips64-*-elf* | mips64el-*-elf*)\n \ttm_file=\"elfos.h newlib-stdint.h ${tm_file} mips/elf.h\"\n-\ttmake_file=\"mips/t-elf mips/t-libgcc-mips16\"\n+\ttmake_file=\"mips/t-elf\"\n \ttarget_cpu_default=\"MASK_64BIT|MASK_FLOAT64\"\n \ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=3 MIPS_ABI_DEFAULT=ABI_O64\"\n \t;;\n@@ -1880,21 +1878,21 @@ mips64vr-*-elf* | mips64vrel-*-elf*)\n         ;;\n mips64orion-*-elf* | mips64orionel-*-elf*)\n \ttm_file=\"elfos.h newlib-stdint.h ${tm_file} mips/elforion.h mips/elf.h\"\n-\ttmake_file=\"mips/t-elf mips/t-libgcc-mips16\"\n+\ttmake_file=\"mips/t-elf\"\n \ttarget_cpu_default=\"MASK_64BIT|MASK_FLOAT64\"\n \ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=3 MIPS_ABI_DEFAULT=ABI_O64\"\n \t;;\n mips*-*-rtems*)\n \ttm_file=\"elfos.h newlib-stdint.h ${tm_file} mips/elf.h mips/rtems.h rtems.h\"\n-\ttmake_file=\"mips/t-elf mips/t-libgcc-mips16 t-rtems mips/t-rtems\"\n+\ttmake_file=\"mips/t-elf t-rtems mips/t-rtems\"\n \t;;\n mips-wrs-vxworks)\n \ttm_file=\"elfos.h ${tm_file} mips/elf.h vx-common.h vxworks.h mips/vxworks.h\"\n \ttmake_file=\"${tmake_file} mips/t-vxworks\"\n \t;;\n mipstx39-*-elf* | mipstx39el-*-elf*)\n \ttm_file=\"elfos.h newlib-stdint.h ${tm_file} mips/r3900.h mips/elf.h\"\n-\ttmake_file=\"mips/t-r3900 mips/t-libgcc-mips16\"\n+\ttmake_file=\"mips/t-r3900\"\n \t;;\n mmix-knuth-mmixware)\n \ttm_file=\"${tm_file} newlib-stdint.h\"\n@@ -2511,7 +2509,6 @@ v850*-*-*)\n vax-*-linux*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h linux.h vax/elf.h vax/linux.h\"\n \textra_options=\"${extra_options} vax/elf.opt\"\n-\ttmake_file=\"${tmake_file} vax/t-linux\"\n \t;;\n vax-*-netbsdelf*)\n \ttm_file=\"${tm_file} elfos.h netbsd.h netbsd-elf.h vax/elf.h vax/netbsd-elf.h\""}, {"sha": "5f0d5629462f6aebfd48e5bf85a2729c4b134f44", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -23495,7 +23495,7 @@ arm_small_register_classes_for_mode_p (enum machine_mode mode ATTRIBUTE_UNUSED)\n \n /* Implement TARGET_SHIFT_TRUNCATION_MASK.  SImode shifts use normal\n    ARM insns and therefore guarantee that the shift count is modulo 256.\n-   DImode shifts (those implemented by lib1funcs.asm or by optabs.c)\n+   DImode shifts (those implemented by lib1funcs.S or by optabs.c)\n    guarantee no particular behavior for out-of-range counts.  */\n \n static unsigned HOST_WIDE_INT"}, {"sha": "80bd82593757d215aa59fa349c190e566e73bf79", "filename": "gcc/config/arm/linux-eabi.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Farm%2Flinux-eabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Farm%2Flinux-eabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flinux-eabi.h?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -97,7 +97,7 @@\n #undef LIBGCC_SPEC\n \n /* Clear the instruction cache from `beg' to `end'.  This is\n-   implemented in lib1funcs.asm, so ensure an error if this definition\n+   implemented in lib1funcs.S, so ensure an error if this definition\n    is used.  */\n #undef  CLEAR_INSN_CACHE\n #define CLEAR_INSN_CACHE(BEG, END) not_used"}, {"sha": "a9a174d473db0d8a92770e787adcaa50705c04ed", "filename": "gcc/config/arm/t-arm", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Farm%2Ft-arm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Farm%2Ft-arm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-arm?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -40,9 +40,6 @@ MD_INCLUDES= \t$(srcdir)/config/arm/arm-tune.md \\\n \t\t$(srcdir)/config/arm/thumb2.md \\\n \t\t$(srcdir)/config/arm/arm-fixed.md\n \n-LIB1ASMSRC = arm/lib1funcs.asm\n-LIB1ASMFUNCS = _thumb1_case_sqi _thumb1_case_uqi _thumb1_case_shi \\\n-\t_thumb1_case_uhi _thumb1_case_si\n s-config s-conditions s-flags s-codes s-constants s-emit s-recog s-preds \\\n \ts-opinit s-extract s-peep s-attr s-attrtab s-output: $(MD_INCLUDES)\n "}, {"sha": "a605d26244f99b4236c66c502c3ae9c1f08a9ec3", "filename": "gcc/config/arm/t-arm-elf", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Farm%2Ft-arm-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Farm%2Ft-arm-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-arm-elf?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -17,20 +17,6 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-# For most CPUs we have an assembly soft-float implementations.\n-# However this is not true for ARMv6M.  Here we want to use the soft-fp C\n-# implementation.  The soft-fp code is only build for ARMv6M.  This pulls\n-# in the asm implementation for other CPUs.\n-LIB1ASMFUNCS += _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_tls _bb_init_func \\\n-\t_call_via_rX _interwork_call_via_rX \\\n-\t_lshrdi3 _ashrdi3 _ashldi3 \\\n-\t_arm_negdf2 _arm_addsubdf3 _arm_muldivdf3 _arm_cmpdf2 _arm_unorddf2 \\\n-\t_arm_fixdfsi _arm_fixunsdfsi \\\n-\t_arm_truncdfsf2 _arm_negsf2 _arm_addsubsf3 _arm_muldivsf3 \\\n-\t_arm_cmpsf2 _arm_unordsf2 _arm_fixsfsi _arm_fixunssfsi \\\n-\t_arm_floatdidf _arm_floatdisf _arm_floatundidf _arm_floatundisf \\\n-\t_clzsi2 _clzdi2 \n-\n MULTILIB_OPTIONS     = marm/mthumb\n MULTILIB_DIRNAMES    = arm thumb\n MULTILIB_EXCEPTIONS  = "}, {"sha": "c9d5ed4d674fbc45df88e5f8a3504a4ffe2cf69e", "filename": "gcc/config/arm/t-bpabi", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Farm%2Ft-bpabi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Farm%2Ft-bpabi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-bpabi?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -16,9 +16,6 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-# Add the bpabi.S functions.\n-LIB1ASMFUNCS += _aeabi_lcmp _aeabi_ulcmp _aeabi_ldivmod _aeabi_uldivmod\n-\n # Add the BPABI C functions.\n LIB2FUNCS_EXTRA = $(srcdir)/config/arm/bpabi.c \\\n \t\t  $(srcdir)/config/arm/unaligned-funcs.c"}, {"sha": "a204834014ebf0de0bdd9c0ffbe72f46f360a2b8", "filename": "gcc/config/arm/t-linux", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Farm%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Farm%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-linux?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -21,10 +21,6 @@\n # difference.\n TARGET_LIBGCC2_CFLAGS = -fomit-frame-pointer -fPIC\n \n-LIB1ASMSRC = arm/lib1funcs.asm\n-LIB1ASMFUNCS = _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_lnx _clzsi2 _clzdi2 \\\n-\t_arm_addsubdf3 _arm_addsubsf3\n-\n # MULTILIB_OPTIONS = mfloat-abi=hard/mfloat-abi=soft\n # MULTILIB_DIRNAMES = hard-float soft-float\n "}, {"sha": "3030229fafa06f7bb8fa89fef0b12da64e326196", "filename": "gcc/config/arm/t-linux-eabi", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Farm%2Ft-linux-eabi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Farm%2Ft-linux-eabi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-linux-eabi?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -28,8 +28,5 @@ MULTILIB_DIRNAMES\t=\n #MULTILIB_DIRNAMES    += fa606te fa626te fmp626 fa726te\n #MULTILIB_EXCEPTIONS  += *mthumb/*mcpu=fa606te *mthumb/*mcpu=fa626te *mthumb/*mcpu=fmp626 *mthumb/*mcpu=fa726te*\n \n-# Use a version of div0 which raises SIGFPE, and a special __clear_cache.\n-LIB1ASMFUNCS := $(filter-out _dvmd_tls,$(LIB1ASMFUNCS)) _dvmd_lnx _clear_cache\n-\n LIB2FUNCS_STATIC_EXTRA += $(srcdir)/config/arm/linux-atomic.c\n LIB2FUNCS_STATIC_EXTRA += $(srcdir)/config/arm/linux-atomic-64bit.c"}, {"sha": "4d51e660c8bf790370cf41a0653fa5fcb23e0d29", "filename": "gcc/config/arm/t-strongarm-elf", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Farm%2Ft-strongarm-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Farm%2Ft-strongarm-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-strongarm-elf?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -17,8 +17,6 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-LIB1ASMFUNCS += _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_tls _bb_init_func _clzsi2 _clzdi2\n-\n MULTILIB_OPTIONS     = mlittle-endian/mbig-endian mfloat-abi=hard/mfloat-abi=soft\n MULTILIB_DIRNAMES    = le be fpu soft\n MULTILIB_EXCEPTIONS  ="}, {"sha": "736a01d10f48fc4bed036c203740d09e1980756c", "filename": "gcc/config/arm/t-symbian", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Farm%2Ft-symbian", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Farm%2Ft-symbian", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-symbian?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -16,20 +16,6 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-LIB1ASMFUNCS += _bb_init_func _call_via_rX _interwork_call_via_rX _clzsi2 _clzdi2\n-\n-# These functions have __aeabi equivalents and will never be called by GCC.  \n-# By putting them in LIB1ASMFUNCS, we avoid the standard libgcc2.c code being\n-# used -- and we make sure that definitions are not available in lib1funcs.asm,\n-# either, so they end up undefined.\n-LIB1ASMFUNCS += \\\n-\t_ashldi3 _ashrdi3 _divdi3 _floatdidf _udivmoddi4 _umoddi3 \\\n-\t_udivdi3 _lshrdi3 _moddi3 _muldi3 _negdi2 _cmpdi2 \\\n-\t_fixdfdi _fixsfdi _fixunsdfdi _fixunssfdi _floatdisf \\\n-\t_negdf2 _addsubdf3 _muldivdf3 _cmpdf2 _unorddf2 _fixdfsi _fixunsdfsi \\\n-\t_truncdfsf2 _negsf2 _addsubsf3 _muldivsf3 _cmpsf2 _unordsf2 \\\n-\t_fixsfsi _fixunssfsi\n-\n EXTRA_HEADERS += $(srcdir)/ginclude/unwind-arm-common.h\n # Include half-float helpers.\n LIB2FUNCS_STATIC_EXTRA = $(srcdir)/config/arm/fp16.c"}, {"sha": "0900ffe15ed563508a17d2bd239697b1e139efa8", "filename": "gcc/config/arm/t-vxworks", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Farm%2Ft-vxworks", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Farm%2Ft-vxworks", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-vxworks?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -16,8 +16,6 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-LIB1ASMFUNCS += _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_tls _bb_init_func _call_via_rX _interwork_call_via_rX _clzsi2 _clzdi2\n-\n MULTILIB_OPTIONS = \\\n   mrtp fPIC \\\n   t4/t4be/t4t/t4tbe/t5/t5be/t5t/t5tbe/tstrongarm/txscale/txscalebe"}, {"sha": "8a8c65fd396c2941d5a654188149bfa76c26d29c", "filename": "gcc/config/arm/t-wince-pe", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Farm%2Ft-wince-pe", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Farm%2Ft-wince-pe", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-wince-pe?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -17,8 +17,6 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-LIB1ASMFUNCS += _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_tls _call_via_rX _interwork_call_via_rX _clzsi2 _clzdi2\n-\n pe.o: $(srcdir)/config/arm/pe.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   $(RTL_H) output.h flags.h $(TREE_H) expr.h $(TM_P_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\"}, {"sha": "3f37e591f8ecd205480ea47808d596fa15380214", "filename": "gcc/config/avr/t-avr", "status": "modified", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Favr%2Ft-avr", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Favr%2Ft-avr", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Ft-avr?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -39,54 +39,6 @@ $(srcdir)/config/avr/avr-tables.opt: $(srcdir)/config/avr/genopt.sh \\\n \t$(SHELL) $(srcdir)/config/avr/genopt.sh $(srcdir)/config/avr > \\\n \t\t$(srcdir)/config/avr/avr-tables.opt\n \n-LIB1ASMSRC = avr/libgcc.S\n-LIB1ASMFUNCS = \\\n-\t_mulqi3 \\\n-\t_mulhi3 \\\n-\t_mulhisi3 \\\n-\t_umulhisi3 \\\n-\t_usmulhisi3 \\\n-\t_muluhisi3 \\\n-\t_mulshisi3 \\\n-\t_mulsi3 \\\n-\t_udivmodqi4 \\\n-\t_divmodqi4 \\\n-\t_udivmodhi4 \\\n-\t_divmodhi4 \\\n-\t_udivmodsi4 \\\n-\t_divmodsi4 \\\n-\t_prologue \\\n-\t_epilogue \\\n-\t_exit \\\n-\t_cleanup \\\n-\t_tablejump \\\n-\t_tablejump_elpm \\\n-\t_copy_data \\\n-\t_clear_bss \\\n-\t_ctors \\\n-\t_dtors \\\n-\t_ffssi2 \\\n-\t_ffshi2 \\\n-\t_loop_ffsqi2 \\\n-\t_ctzsi2 \\\n-\t_ctzhi2 \\\n-\t_clzdi2 \\\n-\t_clzsi2 \\\n-\t_clzhi2 \\\n-\t_paritydi2 \\\n-\t_paritysi2 \\\n-\t_parityhi2 \\\n-\t_popcounthi2 \\\n-\t_popcountsi2 \\\n-\t_popcountdi2 \\\n-\t_popcountqi2 \\\n-\t_bswapsi2 \\\n-\t_bswapdi2 \\\n-\t_ashldi3 \\\n-\t_ashrdi3 \\\n-\t_lshrdi3 \\\n-\t_fmul _fmuls _fmulsu\n-\n LIB2FUNCS_EXCLUDE = \\\n \t_clz\n "}, {"sha": "bb95ab4139e6d837fe20bf3e7383b95d17d03c22", "filename": "gcc/config/bfin/t-bfin", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f73c6ccf0d9c54714b162b9d314594311747de9/gcc%2Fconfig%2Fbfin%2Ft-bfin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f73c6ccf0d9c54714b162b9d314594311747de9/gcc%2Fconfig%2Fbfin%2Ft-bfin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Ft-bfin?ref=5f73c6ccf0d9c54714b162b9d314594311747de9", "patch": "@@ -1,23 +0,0 @@\n-# Copyright (C) 2005, 2007, 2011 Free Software Foundation, Inc.\n-#\n-# This file is part of GCC.\n-#\n-# GCC is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 3, or (at your option)\n-# any later version.\n-#\n-# GCC is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with GCC; see the file COPYING3.  If not see\n-# <http://www.gnu.org/licenses/>.\n-\n-## Target part of the Makefile\n-\n-LIB1ASMSRC = bfin/lib1funcs.asm\n-LIB1ASMFUNCS = _divsi3 _udivsi3 _umodsi3 _modsi3 _muldi3 _umulsi3_highpart\n-LIB1ASMFUNCS += _smulsi3_highpart"}, {"sha": "5cbcfeeb87f7f01a9d27445d3a7a037a38b74ef8", "filename": "gcc/config/bfin/t-bfin-elf", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fbfin%2Ft-bfin-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fbfin%2Ft-bfin-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Ft-bfin-elf?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -18,10 +18,6 @@\n \n ## Target part of the Makefile\n \n-LIB1ASMSRC = bfin/lib1funcs.asm\n-LIB1ASMFUNCS = _divsi3 _udivsi3 _umodsi3 _modsi3 _muldi3 _umulsi3_highpart\n-LIB1ASMFUNCS += _smulsi3_highpart\n-\n TARGET_LIBGCC2_CFLAGS = -fpic\n \n MULTILIB_OPTIONS=mcpu=bf532-none"}, {"sha": "9a1d6a0943700fba3faf043c7b978163faa593fd", "filename": "gcc/config/bfin/t-bfin-linux", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fbfin%2Ft-bfin-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fbfin%2Ft-bfin-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Ft-bfin-linux?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -18,10 +18,6 @@\n \n ## Target part of the Makefile\n \n-LIB1ASMSRC = bfin/lib1funcs.asm\n-LIB1ASMFUNCS = _divsi3 _udivsi3 _umodsi3 _modsi3 _muldi3 _umulsi3_highpart\n-LIB1ASMFUNCS += _smulsi3_highpart\n-\n TARGET_LIBGCC2_CFLAGS = -fpic\n \n MULTILIB_OPTIONS=mcpu=bf532-none"}, {"sha": "b9fca803e0af4616655772eb3455f2641157a600", "filename": "gcc/config/bfin/t-bfin-uclinux", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fbfin%2Ft-bfin-uclinux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fbfin%2Ft-bfin-uclinux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Ft-bfin-uclinux?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -18,10 +18,6 @@\n \n ## Target part of the Makefile\n \n-LIB1ASMSRC = bfin/lib1funcs.asm\n-LIB1ASMFUNCS = _divsi3 _udivsi3 _umodsi3 _modsi3 _muldi3 _umulsi3_highpart\n-LIB1ASMFUNCS += _smulsi3_highpart\n-\n TARGET_LIBGCC2_CFLAGS = -fpic\n \n MULTILIB_OPTIONS=mcpu=bf532-none"}, {"sha": "6bc2832026d034724e9027fe60def0507ff72431", "filename": "gcc/config/c6x/t-c6x-elf", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fc6x%2Ft-c6x-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fc6x%2Ft-c6x-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc6x%2Ft-c6x-elf?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -18,11 +18,6 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-LIB1ASMSRC = c6x/lib1funcs.asm\n-LIB1ASMFUNCS = _divsi3 _udivsi3 _umodsi3 _modsi3 _udivmodsi4 _divmodsi4\n-LIB1ASMFUNCS += _strasgi _strasgi_64plus _clzsi2 _clzdi2 _clz\n-LIB1ASMFUNCS += _push_rts _pop_rts _call_stub\n-\n LIB2FUNCS_EXCLUDE = _cmpdi2 _ucmpdi2 _gcc_bcmp _eprintf _clzsi _clzdi\n EXTRA_HEADERS += $(srcdir)/ginclude/unwind-arm-common.h\n "}, {"sha": "e37921681d0c6edc1562f925641c258f94b5726c", "filename": "gcc/config/fr30/t-fr30", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Ffr30%2Ft-fr30", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Ffr30%2Ft-fr30", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ft-fr30?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -16,9 +16,6 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-LIB1ASMSRC    = fr30/lib1funcs.asm\n-LIB1ASMFUNCS  = _udivsi3 _divsi3 _umodsi3 _modsi3\n-\n # If any special flags are necessary when building libgcc2 put them here.\n #\n # TARGET_LIBGCC2_CFLAGS"}, {"sha": "e31f823c30ace42713fb0d43ec84f88c21dd2974", "filename": "gcc/config/frv/t-frv", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Ffrv%2Ft-frv", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Ffrv%2Ft-frv", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ft-frv?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -16,15 +16,6 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-# Name of assembly file containing libgcc1 functions.\n-# This entry must be present, but it can be empty if the target does\n-# not need any assembler functions to support its code generation.\n-#\n-# Alternatively if assembler functions *are* needed then define the\n-# entries below:\n-CROSS_LIBGCC1\t= libgcc1-asm.a\n-LIB1ASMSRC\t= frv/lib1funcs.asm\n-LIB1ASMFUNCS\t= _cmpll _cmpf _cmpd _addll _subll _andll _orll _xorll _notll _cmov\n LIB2FUNCS_EXTRA\t= cmovh.c cmovw.c cmovd.c modi.c umodi.c uitof.c uitod.c ulltof.c ulltod.c\n \n # If any special flags are necessary when building libgcc2 put them here."}, {"sha": "940d0c6dc6aff23552868c899595aee55d658d80", "filename": "gcc/config/h8300/fixunssfsi.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fh8300%2Ffixunssfsi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fh8300%2Ffixunssfsi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Ffixunssfsi.c?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -1,6 +1,6 @@\n /* More subroutines needed by GCC output code on some machines.  */\n /* Compile this one with gcc.  */\n-/* Copyright (C) 1989, 1992, 2001, 2002, 2003, 2004, 2009\n+/* Copyright (C) 1989, 1992, 2001, 2002, 2003, 2004, 2009, 2011\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -26,7 +26,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n /* The libgcc2.c implementation gets confused by our type setup and creates\n    a directly recursive call, so we do our own implementation.  For\n-   the H8/300, that's in lib1funcs.asm, for H8/300H and H8S, it's here.  */\n+   the H8/300, that's in lib1funcs.S, for H8/300H and H8S, it's here.  */\n \n #ifndef __H8300__\n long __fixunssfsi (float a);"}, {"sha": "7083c673acf84fb31e0be893e1d132bf9c367a1b", "filename": "gcc/config/h8300/t-h8300", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fh8300%2Ft-h8300", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fh8300%2Ft-h8300", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Ft-h8300?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -17,10 +17,6 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-LIB1ASMSRC = h8300/lib1funcs.asm\n-LIB1ASMFUNCS = _cmpsi2 _ucmpsi2 _divhi3 _divsi3 _mulhi3 _mulsi3 \\\n-  _fixunssfsi_asm\n-\n LIB2FUNCS_EXTRA = \\\n \t$(srcdir)/config/h8300/clzhi2.c \\\n \t$(srcdir)/config/h8300/ctzhi2.c \\"}, {"sha": "3e7f7cdd0363b082a5ae4daefa35bb6f83d6a30d", "filename": "gcc/config/i386/t-cygming", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fi386%2Ft-cygming", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fi386%2Ft-cygming", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-cygming?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -17,9 +17,6 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-LIB1ASMSRC = i386/cygwin.asm\n-LIB1ASMFUNCS = _chkstk _chkstk_ms\n-\n # cygwin and mingw always have a limits.h, but, depending upon how we are\n # doing the build, it may not be installed yet.\n LIMITS_H_TEST = true"}, {"sha": "09c9127f6af4748a37518ebcb4972335616fd598", "filename": "gcc/config/i386/t-interix", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fi386%2Ft-interix", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fi386%2Ft-interix", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-interix?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -1,6 +1,3 @@\n-LIB1ASMSRC = i386/cygwin.asm\n-LIB1ASMFUNCS = _chkstk _chkstk_ms\n-\n winnt.o: $(srcdir)/config/i386/winnt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(TM_H) $(RTL_H) $(REGS_H) hard-reg-set.h output.h $(TREE_H) flags.h \\\n   $(TM_P_H) $(HASHTAB_H) $(GGC_H)"}, {"sha": "23691f3856c1766cccd473dcf43334dcf59ab9e5", "filename": "gcc/config/ia64/t-hpux", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fia64%2Ft-hpux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fia64%2Ft-hpux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Ft-hpux?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -26,25 +26,13 @@ MULTILIB_OPTIONS = milp32/mlp64\n MULTILIB_DIRNAMES = hpux32 hpux64\n MULTILIB_MATCHES =\n \n-# On HP-UX we do not want _fixtfdi, _fixunstfdi, or _floatditf from\n-# LIB1ASMSRC.  These functions map the 128 bit conversion function names\n-# to 80 bit conversions and were done for Linux backwards compatibility.\n-\n-LIB1ASMFUNCS := $(filter-out _fixtfdi _fixunstfdi _floatditf,$(LIB1ASMFUNCS))\n-\n # Support routines for HP-UX 128 bit floats.\n \n LIB2FUNCS_EXTRA=quadlib.c $(srcdir)/config/floatunsitf.c\n \n quadlib.c: $(srcdir)/config/ia64/quadlib.c\n \tcat $(srcdir)/config/ia64/quadlib.c > quadlib.c\n \n-# We get an undefined main when building a cross compiler because our\n-# linkspec has \"-u main\" and we want that for linking but it makes\n-# LIBGCC1_TEST fail because it uses -nostdlib -nostartup.\n-\n-LIBGCC1_TEST =\n-\n # We do not want to include the EH stuff that linux uses, we want to use\n # the HP-UX libunwind library.\n "}, {"sha": "8a54d46b458775b203d999a3246c2d4188017e69", "filename": "gcc/config/ia64/t-ia64", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fia64%2Ft-ia64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fia64%2Ft-ia64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Ft-ia64?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -18,19 +18,6 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-LIB1ASMSRC    = ia64/lib1funcs.asm\n-\n-# We use different names for the DImode div/mod files so that they won't\n-# conflict with libgcc2.c files.  We used to use __ia64 as a prefix, now\n-# we use __ as the prefix.  Note that L_divdi3 in libgcc2.c actually defines\n-# a TImode divide function, so there is no actual overlap here between\n-# libgcc2.c and lib1funcs.asm.\n-LIB1ASMFUNCS  = __divxf3 __divdf3 __divsf3 \\\n-\t__divdi3 __moddi3 __udivdi3 __umoddi3 \\\n-\t__divsi3 __modsi3 __udivsi3 __umodsi3 __save_stack_nonlocal \\\n-\t__nonlocal_goto __restore_stack_nonlocal __trampoline \\\n-\t_fixtfdi _fixunstfdi _floatditf\n-\n # ??? Hack to get -P option used when compiling lib1funcs.asm, because Intel\n # assembler does not accept # line number as a comment.\n # ??? This breaks C++ pragma interface/implementation, which is used in the"}, {"sha": "c634e58646ee34930a2ea0af1b7195fef2c49b88", "filename": "gcc/config/iq2000/t-iq2000", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fiq2000%2Ft-iq2000", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fiq2000%2Ft-iq2000", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fiq2000%2Ft-iq2000?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -16,11 +16,6 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-# Suppress building libgcc1.a, since the MIPS compiler port is complete\n-# and does not need anything from libgcc1.a.\n-LIBGCC1 =\n-CROSS_LIBGCC1 =\n-\n LIB2FUNCS_EXTRA = $(srcdir)/config/udivmod.c $(srcdir)/config/divmod.c $(srcdir)/config/udivmodsi4.c $(srcdir)/config/iq2000/lib2extra-funcs.c\n \n # Enable the following if multilibs are needed."}, {"sha": "04f690506098fffc1669a62fb4b5343e4b08d63c", "filename": "gcc/config/m32c/m32c.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fm32c%2Fm32c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fm32c%2Fm32c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fm32c.c?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -391,7 +391,7 @@ class_can_hold_mode (reg_class_t rclass, enum machine_mode mode)\n    we allow the user to limit the number of memregs available, in\n    order to try to persuade gcc to try harder to use real registers.\n \n-   Memregs are provided by m32c-lib1.S.\n+   Memregs are provided by lib1funcs.S.\n */\n \n int ok_to_change_target_memregs = TRUE;"}, {"sha": "aad972a2575d632530d8c96f034d3459a60b6526", "filename": "gcc/config/m32c/t-m32c", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fm32c%2Ft-m32c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fm32c%2Ft-m32c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Ft-m32c?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -19,16 +19,6 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-LIB1ASMSRC = m32c/m32c-lib1.S\n-\n-LIB1ASMFUNCS = \\\n-\t__m32c_memregs \\\n-\t__m32c_eh_return \\\n-\t__m32c_mulsi3 \\\n-\t__m32c_cmpsi2 \\\n-\t__m32c_ucmpsi2 \\\n-\t__m32c_jsri16\n-\n LIB2FUNCS_EXTRA = $(srcdir)/config/m32c/m32c-lib2.c $(srcdir)/config/m32c/m32c-lib2-trapv.c\n \n # target-specific files"}, {"sha": "f3b89d21d0b8f80d6d038987186921aec45f454a", "filename": "gcc/config/m32r/t-linux", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fm32r%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fm32r%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Ft-linux?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -16,19 +16,10 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-# lib1funcs.asm is currently empty.\n-CROSS_LIBGCC1 =\n-\n # Turn off the SDA while compiling libgcc2.  There are no headers for it\n # and we want maximal upward compatibility here.\n \n TARGET_LIBGCC2_CFLAGS = -G 0 -fPIC\n \n # Don't install \"assert.h\" in gcc. We use the one in glibc.\n INSTALL_ASSERT_H =\n- \n-# Do not build libgcc1. Let gcc generate those functions. The GNU/Linux\n-# C library can handle them.\n-LIBGCC1 = \n-CROSS_LIBGCC1 =\n-LIBGCC1_TEST ="}, {"sha": "23734be40bdb2045c8c07fddc88f1c0ae4d0fa00", "filename": "gcc/config/m68k/t-floatlib", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fm68k%2Ft-floatlib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fm68k%2Ft-floatlib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Ft-floatlib?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2007 Free Software Foundation, Inc.\n+# Copyright (C) 2007, 2011 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -16,12 +16,6 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-LIB1ASMSRC = m68k/lb1sf68.asm\n-LIB1ASMFUNCS = _mulsi3 _udivsi3 _divsi3 _umodsi3 _modsi3 \\\n-   _double _float _floatex \\\n-   _eqdf2 _nedf2 _gtdf2 _gedf2 _ltdf2 _ledf2 \\\n-   _eqsf2 _nesf2 _gtsf2 _gesf2 _ltsf2 _lesf2\n-\n LIB2FUNCS_EXTRA = fpgnulib.c xfgnulib.c\n \n fpgnulib.c: $(srcdir)/config/m68k/fpgnulib.c"}, {"sha": "265399cecfeef8200ea17db3f70e2e6a4026e7ac", "filename": "gcc/config/mcore/t-mcore", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fmcore%2Ft-mcore", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fmcore%2Ft-mcore", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Ft-mcore?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -16,9 +16,6 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-LIB1ASMSRC    = mcore/lib1.asm\n-LIB1ASMFUNCS  = _divsi3 _udivsi3 _modsi3 _umodsi3\n-\n # could use -msifilter to be safe from interrupt/jmp interactions and others.\n TARGET_LIBGCC2_CFLAGS=-O3 -DNO_FLOATLIB_FIXUNSDFSI #-msifilter\n "}, {"sha": "ac4ad95bc872842a91fec5e26adc575284828399", "filename": "gcc/config/mep/t-mep", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fmep%2Ft-mep", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fmep%2Ft-mep", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Ft-mep?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -32,16 +32,6 @@ mep-pragma.o: $(srcdir)/config/mep/mep-pragma.c $(CONFIG_H) $(SYSTEM_H) \\\n \tfunction.h insn-config.h reload.h $(TARGET_H)\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n \n-# profiling support\n-\n-LIB1ASMSRC = mep/mep-lib1.asm\n-\n-LIB1ASMFUNCS = _mep_profile \\\n-\t       _mep_bb_init_trace \\\n-\t       _mep_bb_init \\\n-\t       _mep_bb_trace \\\n-\t       _mep_bb_increment\n-\n # multiply and divide routines\n \n LIB2FUNCS_EXTRA = \\"}, {"sha": "31a042bb75e3ce7024b71c5f1aca38bef9831cb5", "filename": "gcc/config/mips/t-libgcc-mips16", "status": "removed", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f73c6ccf0d9c54714b162b9d314594311747de9/gcc%2Fconfig%2Fmips%2Ft-libgcc-mips16", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f73c6ccf0d9c54714b162b9d314594311747de9/gcc%2Fconfig%2Fmips%2Ft-libgcc-mips16", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-libgcc-mips16?ref=5f73c6ccf0d9c54714b162b9d314594311747de9", "patch": "@@ -1,39 +0,0 @@\n-# Copyright (C) 2007, 2008, 2011 Free Software Foundation, Inc.\n-#\n-# This file is part of GCC.\n-#\n-# GCC is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 3, or (at your option)\n-# any later version.\n-#\n-# GCC is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with GCC; see the file COPYING3.  If not see\n-# <http://www.gnu.org/licenses/>.\n-\n-LIB1ASMSRC = mips/mips16.S\n-LIB1ASMFUNCS = _m16addsf3 _m16subsf3 _m16mulsf3 _m16divsf3 \\\n-\t_m16eqsf2 _m16nesf2 _m16gtsf2 _m16gesf2 _m16lesf2 _m16ltsf2 \\\n-\t_m16unordsf2 \\\n-\t_m16fltsisf _m16fix_truncsfsi _m16fltunsisf \\\n-\t_m16adddf3 _m16subdf3 _m16muldf3 _m16divdf3 \\\n-\t_m16extsfdf2 _m16trdfsf2 \\\n-\t_m16eqdf2 _m16nedf2 _m16gtdf2 _m16gedf2 _m16ledf2 _m16ltdf2 \\\n-\t_m16unorddf2 \\\n-\t_m16fltsidf _m16fix_truncdfsi _m16fltunsidf \\\n-\t_m16retsf _m16retdf \\\n-\t_m16retsc _m16retdc \\\n-\t_m16stub1 _m16stub2 _m16stub5 _m16stub6 _m16stub9 _m16stub10 \\\n-\t_m16stubsf0 _m16stubsf1 _m16stubsf2 _m16stubsf5 _m16stubsf6 \\\n-\t_m16stubsf9 _m16stubsf10 \\\n-\t_m16stubdf0 _m16stubdf1 _m16stubdf2 _m16stubdf5 _m16stubdf6 \\\n-\t_m16stubdf9 _m16stubdf10 \\\n-\t_m16stubsc0 _m16stubsc1 _m16stubsc2 _m16stubsc5 _m16stubsc6 \\\n-\t_m16stubsc9 _m16stubsc10 \\\n-\t_m16stubdc0 _m16stubdc1 _m16stubdc2 _m16stubdc5 _m16stubdc6 \\\n-\t_m16stubdc9 _m16stubdc10"}, {"sha": "f204017faa809ec510cd7525ff965fd5ec16b2ef", "filename": "gcc/config/mips/t-sr71k", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fmips%2Ft-sr71k", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fmips%2Ft-sr71k", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-sr71k?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -16,11 +16,6 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-# Suppress building libgcc1.a, since the MIPS compiler port is complete\n-# and does not need anything from libgcc1.a.\n-LIBGCC1 =\n-CROSS_LIBGCC1 =\n-\n # We must build libgcc2.a with -G 0, in case the user wants to link\n # without the $gp register.\n TARGET_LIBGCC2_CFLAGS = -G 0"}, {"sha": "b94ebd250a8a2589851404c00ebd2430eabf9fec", "filename": "gcc/config/pa/t-linux", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fpa%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fpa%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Ft-linux?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -16,13 +16,6 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-#Plug millicode routines into libgcc.a  We want these on both native and\n-#cross compiles.  We use the \"64-bit\" routines because the \"32-bit\" code\n-#is broken for certain corner cases.\n-\n-LIB1ASMFUNCS = _divI _divU _remI _remU _div_const _mulI _dyncall\n-LIB1ASMSRC = pa/milli64.S\n-\n # Compile libgcc2.a as PIC.\n TARGET_LIBGCC2_CFLAGS = -fPIC -DELF=1 -DLINUX=1\n "}, {"sha": "af803a27ed3ffe244d71eb672ca091794b23ddb8", "filename": "gcc/config/pa/t-linux64", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fpa%2Ft-linux64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fpa%2Ft-linux64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Ft-linux64?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -16,12 +16,6 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-#Plug millicode routines into libgcc.a  We want these on both native and\n-#cross compiles.\n-\n-LIB1ASMFUNCS =  _divI _divU _remI _remU _div_const _mulI\n-LIB1ASMSRC = pa/milli64.S\n-\n LIB2FUNCS_STATIC_EXTRA = $(srcdir)/config/pa/linux-atomic.c\n \n # Compile libgcc2.a as PIC."}, {"sha": "e4b78f1e1f1d076fa868296b971f1742e0e5571b", "filename": "gcc/config/picochip/libgccExtras/fake_libgcc.asm", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f73c6ccf0d9c54714b162b9d314594311747de9/gcc%2Fconfig%2Fpicochip%2FlibgccExtras%2Ffake_libgcc.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f73c6ccf0d9c54714b162b9d314594311747de9/gcc%2Fconfig%2Fpicochip%2FlibgccExtras%2Ffake_libgcc.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpicochip%2FlibgccExtras%2Ffake_libgcc.asm?ref=5f73c6ccf0d9c54714b162b9d314594311747de9", "patch": "@@ -1,6 +0,0 @@\n-// picoChip ASM file\n-// Fake libgcc asm file. This contains nothing, but is used to prevent gcc\n-// getting upset about the lack of a libgcc.S file when LIB1ASMFUNCS is defined\n-// to switch off the compilation of parts of libgcc.\n-\n-"}, {"sha": "0f3fe8c3d816fdc2bf140f864271709818d3d180", "filename": "gcc/config/picochip/t-picochip", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fpicochip%2Ft-picochip", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fpicochip%2Ft-picochip", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpicochip%2Ft-picochip?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -35,14 +35,6 @@ LIB2FUNCS_EXTRA = \\\n \t$(srcdir)/config/picochip/libgccExtras/parityhi2.asm\t\t\\\n \t$(srcdir)/config/picochip/libgccExtras/popcounthi2.asm\n \n-# Prevent some of the more complicated libgcc functions from being\n-# compiled. This is because they are generally too big to fit into an\n-# AE anyway, so there is no point in having them. Also, some don't\n-# compile properly so we'll ignore them for the moment.\n-\n-LIB1ASMFUNCS = _mulsc3 _divsc3\n-LIB1ASMSRC = picochip/libgccExtras/fake_libgcc.asm\n-\n # Turn off ranlib on target libraries.\n RANLIB_FOR_TARGET = cat\n "}, {"sha": "cc26e05a7642d993e03b617211a85be394183486", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -1983,7 +1983,7 @@ struct sh_args {\n    that the native compiler puts too large (> 32) immediate shift counts\n    into a register and shifts by the register, letting the SH decide what\n    to do instead of doing that itself.  */\n-/* ??? The library routines in lib1funcs.asm truncate the shift count.\n+/* ??? The library routines in lib1funcs.S truncate the shift count.\n    However, the SH3 has hardware shifts that do not truncate exactly as gcc\n    expects - the sign bit is significant - so it appears that we need to\n    leave this zero for correct SH3 code.  */"}, {"sha": "2304fb176cbedd0eaa3226977ace6e7af212c19a", "filename": "gcc/config/sh/t-linux", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fsh%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fsh%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Ft-linux?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -1,5 +1,3 @@\n-LIB1ASMFUNCS_CACHE = _ic_invalidate _ic_invalidate_array\n-\n LIB2FUNCS_EXTRA= $(srcdir)/config/sh/linux-atomic.asm\n \n MULTILIB_DIRNAMES= "}, {"sha": "dea1c478cb522236b232f89c1b6eda21054b0d1f", "filename": "gcc/config/sh/t-netbsd", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fsh%2Ft-netbsd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fsh%2Ft-netbsd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Ft-netbsd?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -17,6 +17,5 @@\n # <http://www.gnu.org/licenses/>.\n \n TARGET_LIBGCC2_CFLAGS = -fpic -mieee\n-LIB1ASMFUNCS_CACHE = _ic_invalidate\n \n LIB2FUNCS_EXTRA="}, {"sha": "56ea83e0697eeed57c5e0c05278ccb1d6882d664", "filename": "gcc/config/sh/t-sh", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fsh%2Ft-sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fsh%2Ft-sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Ft-sh?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -22,13 +22,6 @@ sh-c.o: $(srcdir)/config/sh/sh-c.c \\\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/sh/sh-c.c\n \n-LIB1ASMSRC = sh/lib1funcs.asm\n-LIB1ASMFUNCS = _ashiftrt _ashiftrt_n _ashiftlt _lshiftrt _movmem \\\n-  _movmem_i4 _mulsi3 _sdivsi3 _sdivsi3_i4 _udivsi3 _udivsi3_i4 _set_fpscr \\\n-  _div_table _udiv_qrnnd_16 \\\n-  $(LIB1ASMFUNCS_CACHE)\n-LIB1ASMFUNCS_CACHE = _ic_invalidate _ic_invalidate_array\n-\n TARGET_LIBGCC2_CFLAGS = -mieee\n \n DEFAULT_ENDIAN = $(word 1,$(TM_ENDIAN_CONFIG))"}, {"sha": "3bd9205079b6b3af464ef69fa3f05e000c0fecfb", "filename": "gcc/config/sh/t-sh64", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fsh%2Ft-sh64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fsh%2Ft-sh64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Ft-sh64?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2002, 2004, 2005 Free Software Foundation, Inc.\n+# Copyright (C) 2002, 2004, 2005, 2011 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -16,13 +16,6 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-LIB1ASMFUNCS = \\\n-  _sdivsi3 _sdivsi3_i4 _udivsi3 _udivsi3_i4 _set_fpscr \\\n-  _shcompact_call_trampoline _shcompact_return_trampoline \\\n-  _shcompact_incoming_args _ic_invalidate _nested_trampoline \\\n-  _push_pop_shmedia_regs \\\n-  _udivdi3 _divdi3 _umoddi3 _moddi3 _div_table\n-\n MULTILIB_CPU_DIRS= $(ML_sh1) $(ML_sh2e) $(ML_sh2) $(ML_sh3e) $(ML_sh3) $(ML_sh4_nofpu) $(ML_sh4_single_only) $(ML_sh4_single) $(ML_sh4) $(ML_sh5_32media:m5-32media/=media32) $(ML_sh5_32media_nofpu:m5-32media-nofpu/=nofpu/media32) $(ML_sh5_compact:m5-compact/=compact) $(ML_sh5_compact_nofpu:m5-compact-nofpu/=nofpu/compact) $(ML_sh5_64media:m5-64media/=media64) $(ML_sh5_64media_nofpu:m5-64media-nofpu/=nofpu/media64)\n \n MULTILIB_RAW_DIRNAMES= $(MULTILIB_ENDIAN:/mb= mb) $(MULTILIB_CPU_DIRS:/=)"}, {"sha": "973401f801826421c4fd01641722348edabbf653", "filename": "gcc/config/sparc/lb1spl.asm", "status": "removed", "additions": 0, "deletions": 246, "changes": 246, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f73c6ccf0d9c54714b162b9d314594311747de9/gcc%2Fconfig%2Fsparc%2Flb1spl.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f73c6ccf0d9c54714b162b9d314594311747de9/gcc%2Fconfig%2Fsparc%2Flb1spl.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flb1spl.asm?ref=5f73c6ccf0d9c54714b162b9d314594311747de9", "patch": "@@ -1,246 +0,0 @@\n-/* This is an assembly language implementation of mulsi3, divsi3, and modsi3\n-   for the sparclite processor.\n-\n-   These routines are all from the SPARClite User's Guide, slightly edited\n-   to match the desired calling convention, and also to optimize them.  */\n-\n-#ifdef L_udivsi3\n-.text\n-\t.align 4\n-\t.global .udiv\n-\t.proc\t04\n-.udiv:\n-\twr\t%g0,%g0,%y\t! Not a delayed write for sparclite\n-\ttst\t%g0\n-\tdivscc\t%o0,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tretl\n-\tdivscc\t%g1,%o1,%o0\n-#endif\n-\n-#ifdef L_umodsi3\n-.text\n-\t.align 4\n-\t.global .urem\n-\t.proc\t04\n-.urem:\n-\twr\t%g0,%g0,%y\t! Not a delayed write for sparclite\n-\ttst\t%g0\n-\tdivscc\t%o0,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tdivscc\t%g1,%o1,%g1\n-\tbl 1f\n-\trd\t%y,%o0\n-\tretl\n-\tnop\n-1:\tretl\n-\tadd\t%o0,%o1,%o0\n-#endif\n-\n-#ifdef L_divsi3\n-.text\n-\t.align 4\n-\t.global .div\n-\t.proc\t04\n-! ??? This routine could be made faster if was optimized, and if it was\n-! rewritten to only calculate the quotient.\n-.div:\n-\twr\t%g0,%g0,%y\t! Not a delayed write for sparclite\n-\tmov\t%o1,%o4\n-\ttst\t%o1\n-\tbl,a\t1f\n-\tsub\t%g0,%o4,%o4\n-1:\ttst\t%o0\n-\tbl,a\t2f\n-\tmov\t-1,%y\n-2:\tdivscc\t%o0,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tbe\t6f\n-\tmov\t%y,%o3\n-\tbg\t4f\n-\taddcc\t%o3,%o4,%g0\n-\tbe,a\t6f\n-\tmov\t%g0,%o3\n-\ttst\t%o0\n-\tbl\t5f\n-\ttst\t%g1\n-\tba\t5f\n-\tadd\t%o3,%o4,%o3\n-4:\tsubcc\t%o3,%o4,%g0\n-\tbe,a\t6f\n-\tmov\t%g0,%o3\n-\ttst\t%o0\n-\tbge\t5f\n-\ttst\t%g1\n-\tsub\t%o3,%o4,%o3\n-5:\tbl,a\t6f\n-\tadd\t%g1,1,%g1\n-6:\ttst\t%o1\n-\tbl,a\t7f\n-\tsub\t%g0,%g1,%g1\n-7:\tretl\n-\tmov\t%g1,%o0\t\t! Quotient is in %g1.\n-#endif\n-\n-#ifdef L_modsi3\n-.text\n-\t.align 4\n-\t.global .rem\n-\t.proc\t04\n-! ??? This routine could be made faster if was optimized, and if it was\n-! rewritten to only calculate the remainder.\n-.rem:\n-\twr\t%g0,%g0,%y\t! Not a delayed write for sparclite\n-\tmov\t%o1,%o4\n-\ttst\t%o1\n-\tbl,a\t1f\n-\tsub\t%g0,%o4,%o4\n-1:\ttst\t%o0\n-\tbl,a\t2f\n-\tmov\t-1,%y\n-2:\tdivscc\t%o0,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tdivscc\t%g1,%o4,%g1\n-\tbe\t6f\n-\tmov\t%y,%o3\n-\tbg\t4f\n-\taddcc\t%o3,%o4,%g0\n-\tbe,a\t6f\n-\tmov\t%g0,%o3\n-\ttst\t%o0\n-\tbl\t5f\n-\ttst\t%g1\n-\tba\t5f\n-\tadd\t%o3,%o4,%o3\n-4:\tsubcc\t%o3,%o4,%g0\n-\tbe,a\t6f\n-\tmov\t%g0,%o3\n-\ttst\t%o0\n-\tbge\t5f\n-\ttst\t%g1\n-\tsub\t%o3,%o4,%o3\n-5:\tbl,a\t6f\n-\tadd\t%g1,1,%g1\n-6:\ttst\t%o1\n-\tbl,a\t7f\n-\tsub\t%g0,%g1,%g1\n-7:\tretl\n-\tmov\t%o3,%o0\t\t! Remainder is in %o3.\n-#endif"}, {"sha": "be926585481a71c9be7b6d5dfb361d171c0eef59", "filename": "gcc/config/sparc/t-elf", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fsparc%2Ft-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fsparc%2Ft-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-elf?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -17,9 +17,6 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-LIB1ASMSRC = sparc/lb1spc.asm\n-LIB1ASMFUNCS = _mulsi3 _divsi3 _modsi3\n-\n MULTILIB_OPTIONS = msoft-float mcpu=v8 mflat\n MULTILIB_DIRNAMES = soft v8 flat\n MULTILIB_MATCHES = msoft-float=mno-fpu"}, {"sha": "8e5e30f7ff7ec924515f7e6d7eaa08528050b481", "filename": "gcc/config/sparc/t-leon", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fsparc%2Ft-leon", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fsparc%2Ft-leon", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-leon?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -16,9 +16,6 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-LIB1ASMSRC = sparc/lb1spc.asm\n-LIB1ASMFUNCS = _mulsi3 _divsi3 _modsi3\n-\n # Multilibs for LEON\n # LEON is a SPARC-V8, but the AT697 implementation has a bug in the\n # V8-specific instructions."}, {"sha": "45802499525c50d7df006fee15c6b35ac9164498", "filename": "gcc/config/spu/t-spu-elf", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fspu%2Ft-spu-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fspu%2Ft-spu-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Ft-spu-elf?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -15,10 +15,6 @@\n #  along with GCC; see the file COPYING3.  If not see\n #  <http://www.gnu.org/licenses/>.\n \n-# Suppress building libgcc1.a\n-LIBGCC1 =\n-CROSS_LIBGCC1 =\n-\n TARGET_LIBGCC2_CFLAGS = -fPIC -mwarn-reloc -D__IN_LIBGCC2\n \n # We exclude those because the libgcc2.c default versions do not support"}, {"sha": "7885229e631d0f044e4121120d5084c8a4e859d6", "filename": "gcc/config/v850/t-v850", "status": "modified", "additions": 0, "deletions": 61, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fv850%2Ft-v850", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fv850%2Ft-v850", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Ft-v850?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -17,67 +17,6 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-LIB1ASMSRC = v850/lib1funcs.asm\n-LIB1ASMFUNCS\t= _mulsi3 \\\n-\t\t  _divsi3 \\\n-\t\t  _udivsi3 \\\n-\t\t  _modsi3 \\\n-\t\t  _umodsi3 \\\n-\t\t  _save_2 \\\n-\t\t  _save_20 \\\n-\t\t  _save_21 \\\n-\t\t  _save_22 \\\n-\t\t  _save_23 \\\n-\t\t  _save_24 \\\n-\t\t  _save_25 \\\n-\t\t  _save_26 \\\n-\t\t  _save_27 \\\n-\t\t  _save_28 \\\n-\t\t  _save_29 \\\n-\t\t  _save_2c \\\n-\t\t  _save_20c \\\n-\t\t  _save_21c \\\n-\t\t  _save_22c \\\n-\t\t  _save_23c \\\n-\t\t  _save_24c \\\n-\t\t  _save_25c \\\n-\t\t  _save_26c \\\n-\t\t  _save_27c \\\n-\t\t  _save_28c \\\n-\t\t  _save_29c \\\n-\t\t  _save_31c \\\n-\t\t  _save_interrupt \\\n-\t\t  _save_all_interrupt \\\n-                  _callt_save_20 \\\n-\t\t  _callt_save_21 \\\n-\t\t  _callt_save_22 \\\n-\t\t  _callt_save_23 \\\n-\t\t  _callt_save_24 \\\n-\t\t  _callt_save_25 \\\n-\t\t  _callt_save_26 \\\n-\t\t  _callt_save_27 \\\n-\t\t  _callt_save_28 \\\n-\t\t  _callt_save_29 \\\n-\t\t  _callt_save_20c \\\n-\t\t  _callt_save_21c \\\n-\t\t  _callt_save_22c \\\n-\t\t  _callt_save_23c \\\n-\t\t  _callt_save_24c \\\n-\t\t  _callt_save_25c \\\n-\t\t  _callt_save_26c \\\n-\t\t  _callt_save_27c \\\n-\t\t  _callt_save_28c \\\n-\t\t  _callt_save_29c \\\n-\t\t  _callt_save_31c \\\n-\t\t  _callt_save_interrupt \\\n-\t\t  _callt_save_all_interrupt \\\n-\t\t  _callt_save_r2_r29 \\\n-\t\t  _callt_save_r2_r31 \\\n-\t\t  _negdi2 \\\n-\t\t  _cmpdi2 \\\n-\t\t  _ucmpdi2 \\\n-\t\t  _muldi3\n-\n # Create target-specific versions of the libraries\n MULTILIB_OPTIONS  = mv850/mv850e/mv850e2/mv850e2v3\n MULTILIB_DIRNAMES = v850 v850e v850e2 v850e2v3"}, {"sha": "31ac2ad2452bd815231656fce5b1d0b91b94a842", "filename": "gcc/config/xtensa/t-xtensa", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fxtensa%2Ft-xtensa", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/gcc%2Fconfig%2Fxtensa%2Ft-xtensa", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Ft-xtensa?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -17,18 +17,6 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-LIB1ASMSRC = xtensa/lib1funcs.asm\n-LIB1ASMFUNCS = _mulsi3 _divsi3 _modsi3 _udivsi3 _umodsi3 \\\n-\t_umulsidi3 _clz _clzsi2 _ctzsi2 _ffssi2 \\\n-\t_ashldi3 _ashrdi3 _lshrdi3 \\\n-\t_negsf2 _addsubsf3 _mulsf3 _divsf3 _cmpsf2 _fixsfsi _fixsfdi \\\n-\t_fixunssfsi _fixunssfdi _floatsisf _floatunsisf \\\n-\t_floatdisf _floatundisf \\\n-\t_negdf2 _addsubdf3 _muldf3 _divdf3 _cmpdf2 _fixdfsi _fixdfdi \\\n-\t_fixunsdfsi _fixunsdfdi _floatsidf _floatunsidf \\\n-\t_floatdidf _floatundidf \\\n-\t_truncdfsf2 _extendsfdf2\n-\n LIB2FUNCS_EXTRA = $(srcdir)/config/xtensa/lib2funcs.S\n \n $(out_object_file): gt-xtensa.h"}, {"sha": "6b2514aba9acbfb33009c6f2ca44e388b7c10d4f", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 120, "deletions": 0, "changes": 120, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -1,3 +1,123 @@\n+2011-11-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* Makefile.in ($(lib1asmfuncs-o), $(lib1asmfuncs-s-o)): Use\n+\t$(srcdir) to refer to $(LIB1ASMSRC).\n+\tUse $<.\n+\t* config/arm/bpabi-v6m.S, config/arm/bpabi.S,\n+\tconfig/arm/ieee754-df.S, config/arm/ieee754-sf.S,\n+\tconfig/arm/lib1funcs.S: New files.\n+\t* config/arm/libunwind.S [!__symbian__]: Use lib1funcs.S.\n+\t* config/arm/t-arm: New file.\n+\t* config/arm/t-bpabi (LIB1ASMFUNCS): Set.\n+\t* config/arm/t-elf, config/arm/t-linux, config/arm/t-linux-eabi,\n+\tconfig/arm/t-strongarm-elf: New files.\n+\t* config/arm/t-symbian (LIB1ASMFUNCS): Set.\n+\t* config/arm/t-vxworks, config/arm/t-wince-pe: New files.\n+\t* config/avr/lib1funcs.S: New file.\n+\t* config/avr/t-avr (LIB1ASMSRC, LIB1ASMFUNCS): Set.\n+\t* config/bfin/lib1funcs.S, config/bfin/t-bfin: New files.\n+\t* config/c6x/lib1funcs.S: New file.\n+\t* config/c6x/t-elf (LIB1ASMSRC, LIB1ASMFUNCS): Set.\n+\t* config/fr30/lib1funcs.S, config/fr30/t-fr30: New files.\n+\t* config/frv/lib1funcs.S: New file.\n+\t* config/frv/t-frv (LIB1ASMSRC, LIB1ASMFUNCS): Set.\n+\t* config/h8300/lib1funcs.S, config/h8300/t-h8300: New files.\n+\t* config/i386/cygwin.S, config/i386/t-chkstk: New files.\n+\t* config/ia64/__divxf3.asm: Rename to ...\n+\t* config/ia64/__divxf3.S: ... this.\n+\tAdapt lib1funcs.asm filename.\n+\t* config/ia64/_fixtfdi.asm: Rename to ...\n+\t* config/ia64/_fixtfdi.S: ... this.\n+\tAdapt lib1funcs.asm filename.\n+\t* config/ia64/_fixunstfdi.asm: Rename to ...\n+\t* config/ia64/_fixunstfdi.S: ... this.\n+\tAdapt lib1funcs.asm filename.\n+\t* config/ia64/_floatditf.asm: Rename to ...\n+\t* config/ia64/_floatditf.S: ... this.\n+\tAdapt lib1funcs.asm filename.\n+\t* config/ia64/lib1funcs.S: New file.\n+\t* config/ia64/t-hpux (LIB1ASMFUNCS): Set.\n+\t* config/ia64/t-ia64 (LIB1ASMSRC, LIB1ASMFUNCS): Set.\n+\t* config/ia64/t-softfp-compat (libgcc1-tf-compats): Adapt suffix.\n+\t* config/m32c/lib1funcs.S, config/m32c/t-m32c: New files.\n+\t* config/m68k/lb1sf68.S, config/m68k/t-floatlib: New files.\n+\t* config/mcore/lib1funcs.S, config/mcore/t-mcore: New files.\n+\t* config/mep/lib1funcs.S: New file.\n+\t* config/mep/t-mep (LIB1ASMSRC, LIB1ASMFUNCS): Set.\n+\t* config/mips/mips16.S: New file.\n+\t* config/mips/t-mips16 (LIB1ASMSRC, LIB1ASMFUNCS): Set.\n+\t* config/pa/milli64.S: New file.\n+\t* config/pa/t-linux, config/pa/t-linux64: New files.\n+\t* config/picochip/lib1funcs.S: New file.\n+\t* config/picochip/t-picochip (LIB1ASMSRC, LIB1ASMFUNCS): Set.\n+\t* config/sh/lib1funcs.S, config/sh/lib1funcs.h: New files.\n+\t* config/sh/t-linux (LIB1ASMFUNCS_CACHE): Set.\n+\t* config/sh/t-netbsd: New file.\n+\t* config/sh/t-sh (LIB1ASMSRC, LIB1ASMFUNCS, LIB1ASMFUNCS_CACHE): Set.\n+\tUse $(srcdir) to refer to lib1funcs.S, adapt filename.\n+\t* config/sh/t-sh64: New file.\n+\t* config/sparc/lb1spc.S: New file.\n+\t* config/sparc/t-softmul (LIB1ASMSRC): Adapt sparc/lb1spc.asm\n+\tfilename.\n+\t* config/v850/lib1funcs.S, config/v850/t-v850: New files.\n+\t* config/vax/lib1funcs.S, config/vax/t-linux: New files.\n+\t* config/xtensa/ieee754-df.S, config/xtensa/ieee754-sf.S,\n+\tconfig/xtensa/lib1funcs.S: New files.\n+\t* config/xtensa/t-xtensa (LIB1ASMSRC, LIB1ASMFUNCS): Set.\n+\t* config.host (arm-wrs-vxworks): Add arm/t-arm, arm/t-vxworks to\n+\ttmake_file.\n+\t(arm*-*-freebsd*): Add arm/t-arm, arm/t-strongarm-elf to tmake_file.\n+\t(arm*-*-netbsdelf*): Add arm/t-arm to tmake_file.\n+\t(arm*-*-linux*): Likewise.\n+\tAdd arm/t-elf, arm/t-bpabi, arm/t-linux-eabi to tmake_file for\n+\tarm*-*-linux-*eabi, add arm/t-linux otherwise.\n+\t(arm*-*-uclinux*): Add arm/t-arm, arm/t-elf to tmake_file.\n+\t(arm*-*-ecos-elf): Likewise.\n+\t(arm*-*-eabi*, arm*-*-symbianelf*): Likewise.\n+\t(arm*-*-rtems*): Likewise.\n+\t(arm*-*-elf): Likewise.\n+\t(arm*-wince-pe*): Add arm/t-arm, arm/t-wince-pe to tmake_file.\n+\t(avr-*-rtems*): Add to tmake_file, add avr/t-avr.\n+\t(bfin*-elf*): Add bfin/t-bfin to tmake_file.\n+\t(bfin*-uclinux*): Likewise.\n+\t(bfin*-linux-uclibc*): Likewise.\n+\t(bfin*-rtems*): Likewise.\n+\t(bfin*-*): Likewise.\n+\t(fido-*-elf): Merge into m68k-*-elf*.\n+\t(fr30-*-elf)): Add fr30/t-fr30 to tmake_file.\n+\t(frv-*-*linux*): Add frv/t-frv to tmake_file.\n+\t(h8300-*-rtems*): Add h8300/t-h8300 to tmake_file.\n+\t(h8300-*-elf*): Likewise.\n+\t(hppa*64*-*-linux*): Add pa/t-linux, pa/t-linux64 to tmake_file.\n+\t(hppa*-*-linux*): Add pa/t-linux to tmake_file.\n+\t(i[34567]86-*-cygwin*): Add i386/t-chkstk to tmake_file.\n+\t(i[34567]86-*-mingw*): Likewise.\n+\t(x86_64-*-mingw*): Likewise.\n+\t(i[34567]86-*-interix3*): Likewise.\n+\t(ia64*-*-hpux*): Add ia64/t-ia64, ia64/t-hpux to tmake_file.\n+\t(ia64-hp-*vms*): Add ia64/t-ia64 to tmake_file.\n+\t(m68k-*-elf*): Also handle fido-*-elf.\n+\tAdd m68k/t-floatlib to tmake_file.\n+\t(m68k-*-uclinux*): Add m68k/t-floatlib to tmake_file.\n+\t(m68k-*-linux*): Likewise.\n+\t(m68k-*-rtems*): Likewise.\n+\t(mcore-*-elf): Add mcore/t-mcore to tmake_file.\n+\t(sh-*-elf*, sh[12346l]*-*-elf*): Add sh/t-sh64 to tmake_file for\n+\tsh64*-*-*.\n+\t(sh-*-linux*, sh[2346lbe]*-*-linux*): Add sh/t-sh to tmake_file.\n+\tAdd sh/t-sh64 to tmake_file for sh64*-*-linux*.\n+\t(sh-*-netbsdelf*, shl*-*-netbsdelf*, sh5-*-netbsd*)\n+\t(sh5l*-*-netbsd*, sh64-*-netbsd*, sh64l*-*-netbsd*): Add sh/t-sh,\n+\tsh/t-netbsd to tmake_file.\n+\tAdd sh/t-sh64 to tmake_file for sh5*-*-netbsd*, sh64*-netbsd*.\n+\t(sh-*-rtems*): Add sh/t-sh to tmake_file.\n+\t(sh-wrs-vxworks): Likewise.\n+\t(sparc-*-linux*): Add sparc/t-softmul to tmake_file except for\n+\t*-leon[3-9]*.\n+\t(v850*-*-*): Add v850/t-v850 to tmake_file.\n+\t(vax-*-linux*): Add vax/t-linux to tmake_file.\n+\t(m32c-*-elf*, m32c-*-rtems*): Add m32c/t-m32c to tmake_file.\n+\n 2011-11-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* crtstuff.c: New file."}, {"sha": "6bbb369f8e814ddb7f1ffb9b5d8c99637465efb6", "filename": "libgcc/Makefile.in", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FMakefile.in?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -394,25 +394,22 @@ LIB2_DIVMOD_FUNCS := $(filter-out $(LIB2FUNCS_EXCLUDE) $(LIB1ASMFUNCS), \\\n ifeq ($(enable_shared),yes)\n \n lib1asmfuncs-o = $(patsubst %,%$(objext),$(LIB1ASMFUNCS))\n-$(lib1asmfuncs-o): %$(objext): $(gcc_srcdir)/config/$(LIB1ASMSRC) %.vis\n-\t$(gcc_compile) -DL$* -xassembler-with-cpp \\\n-\t  -c $(gcc_srcdir)/config/$(LIB1ASMSRC) -include $*.vis\n+$(lib1asmfuncs-o): %$(objext): $(srcdir)/config/$(LIB1ASMSRC) %.vis\n+\t$(gcc_compile) -DL$* -xassembler-with-cpp -c $< -include $*.vis\n $(patsubst %,%.vis,$(LIB1ASMFUNCS)): %.vis: %_s$(objext)\n \t$(gen-hide-list)\n libgcc-objects += $(lib1asmfuncs-o)\n \n lib1asmfuncs-s-o = $(patsubst %,%_s$(objext),$(LIB1ASMFUNCS))\n-$(lib1asmfuncs-s-o): %_s$(objext): $(gcc_srcdir)/config/$(LIB1ASMSRC)\n-\t$(gcc_s_compile) -DL$* -xassembler-with-cpp \\\n-\t  -c $(gcc_srcdir)/config/$(LIB1ASMSRC)\n+$(lib1asmfuncs-s-o): %_s$(objext): $(srcdir)/config/$(LIB1ASMSRC)\n+\t$(gcc_s_compile) -DL$* -xassembler-with-cpp -c $<\n libgcc-s-objects += $(lib1asmfuncs-s-o)\n \n else\n \n lib1asmfuncs-o = $(patsubst %,%$(objext),$(LIB1ASMFUNCS))\n-$(lib1asmfuncs-o): %$(objext): $(gcc_srcdir)/config/$(LIB1ASMSRC)\n-\t$(gcc_compile) -DL$* -xassembler-with-cpp \\\n-\t  -c $(gcc_srcdir)/config/$(LIB1ASMSRC)\n+$(lib1asmfuncs-o): %$(objext): $(srcdir)/config/$(LIB1ASMSRC)\n+\t$(gcc_compile) -DL$* -xassembler-with-cpp -c $<\n libgcc-objects += $(lib1asmfuncs-o)\n \n endif"}, {"sha": "0a05ea184b067b3569caf48aacfb5b68f1b673cc", "filename": "libgcc/config.host", "status": "modified", "additions": 65, "deletions": 34, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -306,22 +306,25 @@ alpha*-dec-*vms*)\n \tmd_unwind_header=alpha/vms-unwind.h\n \t;;\n arm-wrs-vxworks)\n-\ttmake_file=\"$tmake_file t-fdpbit\"\n+\ttmake_file=\"$tmake_file arm/t-arm arm/t-vxworks t-fdpbit\"\n \textra_parts=\"$extra_parts crti.o crtn.o\"\n \t;;\n arm*-*-freebsd*)\n-\ttmake_file=\"$tmake_file t-fdpbit\"\n+\ttmake_file=\"$tmake_file arm/t-arm arm/t-strongarm-elf t-fdpbit\"\n \t;;\n arm*-*-netbsdelf*)\n-\ttmake_file=\"$tmake_file t-slibgcc-gld-nover\"\n+\ttmake_file=\"$tmake_file arm/t-arm t-slibgcc-gld-nover\"\n \t;;\n arm*-*-linux*)\t\t\t# ARM GNU/Linux with ELF\n-\ttmake_file=\"${tmake_file} t-fixedpoint-gnu-prefix\"\n+\ttmake_file=\"${tmake_file} arm/t-arm t-fixedpoint-gnu-prefix\"\n \tcase ${host} in\n \tarm*-*-linux-*eabi)\n-\t  tmake_file=\"${tmake_file} arm/t-bpabi t-slibgcc-libgcc\"\n+\t  tmake_file=\"${tmake_file} arm/t-elf arm/t-bpabi arm/t-linux-eabi t-slibgcc-libgcc\"\n \t  unwind_header=config/arm/unwind-arm.h\n \t  ;;\n+\t*)\n+\t  tmake_file=\"$tmake_file arm/t-linux\"\n+ \t  ;;\n \tesac\n \ttmake_file=\"$tmake_file t-softfp-sfdf t-softfp-excl arm/t-softfp t-softfp\"\n \t;;\n@@ -333,15 +336,15 @@ arm*-*-uclinux*)\t\t# ARM ucLinux\n \t  unwind_header=config/arm/unwind-arm.h\n \t  ;;\n \tesac\n-\ttmake_file=\"$tmake_file t-softfp-sfdf t-softfp-excl arm/t-softfp t-softfp\"\n+\ttmake_file=\"$tmake_file arm/t-arm arm/t-elf t-softfp-sfdf t-softfp-excl arm/t-softfp t-softfp\"\n \textra_parts=\"$extra_parts crti.o crtn.o\"\n \t;;\n arm*-*-ecos-elf)\n-\ttmake_file=\"$tmake_file t-softfp-sfdf t-softfp-excl arm/t-softfp t-softfp\"\n+\ttmake_file=\"$tmake_file arm/t-arm arm/t-elf t-softfp-sfdf t-softfp-excl arm/t-softfp t-softfp\"\n \textra_parts=\"$extra_parts crti.o crtn.o\"\n \t;;\n arm*-*-eabi* | arm*-*-symbianelf* )\n-\ttmake_file=\"${tmake_file} t-fixedpoint-gnu-prefix\"\n+\ttmake_file=\"${tmake_file} arm/t-arm arm/t-elf t-fixedpoint-gnu-prefix\"\n \tcase ${host} in\n \tarm*-*-eabi*)\n \t  tmake_file=\"${tmake_file} arm/t-bpabi\"\n@@ -356,17 +359,18 @@ arm*-*-eabi* | arm*-*-symbianelf* )\n \tunwind_header=config/arm/unwind-arm.h\n \t;;\n arm*-*-rtems*)\n-\ttmake_file=\"$tmake_file t-softfp-sfdf t-softfp-excl arm/t-softfp t-softfp\"\n+\ttmake_file=\"$tmake_file arm/t-arm arm/t-elf t-softfp-sfdf t-softfp-excl arm/t-softfp t-softfp\"\n \textra_parts=\"$extra_parts crti.o crtn.o\"\n \t;;\n arm*-*-elf)\n-\ttmake_file=\"$tmake_file t-softfp-sfdf t-softfp-excl arm/t-softfp t-softfp\"\n+\ttmake_file=\"$tmake_file arm/t-arm arm/t-elf t-softfp-sfdf t-softfp-excl arm/t-softfp t-softfp\"\n \textra_parts=\"$extra_parts crti.o crtn.o\"\n \t;;\n arm*-wince-pe*)\n+\ttmake_file=\"$tmake_file arm/t-arm arm/t-wince-pe\"\n \t;;\n avr-*-rtems*)\n-\ttmake_file=t-fpbit\n+\ttmake_file=\"$tmake_file avr/t-avr t-fpbit\"\n \t# Don't use default.\n \textra_parts=\n \t;;\n@@ -375,27 +379,27 @@ avr-*-*)\n \ttmake_file=\"${cpu_type}/t-avr t-fpbit\"\n \t;;\n bfin*-elf*)\n-\ttmake_file=\"bfin/t-crtlibid bfin/t-crtstuff t-fdpbit\"\n+\ttmake_file=\"bfin/t-bfin bfin/t-crtlibid bfin/t-crtstuff t-fdpbit\"\n \textra_parts=\"$extra_parts crtbeginS.o crtendS.o crti.o crtn.o crtlibid.o\"\n         ;;\n bfin*-uclinux*)\n-\ttmake_file=\"bfin/t-crtlibid bfin/t-crtstuff t-fdpbit\"\n+\ttmake_file=\"bfin/t-bfin bfin/t-crtlibid bfin/t-crtstuff t-fdpbit\"\n \textra_parts=\"$extra_parts crtbeginS.o crtendS.o crtlibid.o\"\n \tmd_unwind_header=bfin/linux-unwind.h\n         ;;\n bfin*-linux-uclibc*)\n-\ttmake_file=\"$tmake_file bfin/t-crtstuff t-fdpbit bfin/t-linux\"\n+\ttmake_file=\"$tmake_file bfin/t-bfin bfin/t-crtstuff t-fdpbit bfin/t-linux\"\n \t# No need to build crtbeginT.o on uClibc systems.  Should probably\n \t# be moved to the OS specific section above.\n \textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n \tmd_unwind_header=bfin/linux-unwind.h\n \t;;\n bfin*-rtems*)\n-\ttmake_file=\"$tmake_file t-fdpbit\"\n+\ttmake_file=\"$tmake_file bfin/t-bfin t-fdpbit\"\n \textra_parts=\"$extra_parts crti.o crtn.o\"\n \t;;\n bfin*-*)\n-\ttmake_file=\"$tmake_file t-fdpbit\"\n+\ttmake_file=\"$tmake_file bfin/t-bfin t-fdpbit\"\n \textra_parts=\"crtbegin.o crtend.o crti.o crtn.o\"\n         ;;\n crisv32-*-elf)\n@@ -415,10 +419,8 @@ cris-*-none)\n cris-*-linux* | crisv32-*-linux*)\n \ttmake_file=\"$tmake_file t-fdpbit cris/t-linux\"\n \t;;\n-fido-*-elf)\n-\t;;\n fr30-*-elf)\n-\ttmake_file=\"$tmake_file t-fdpbit\"\n+\ttmake_file=\"$tmake_file fr30/t-fr30 t-fdpbit\"\n \textra_parts=\"$extra_parts crti.o crtn.o\"\n \t;;\n frv-*-elf)\n@@ -427,20 +429,21 @@ frv-*-elf)\n \textra_parts=\"frvbegin.o frvend.o\"\n \t;;\n frv-*-*linux*)\n-\ttmake_file=\"$tmake_file t-fdpbit frv/t-linux\"\n+\ttmake_file=\"$tmake_file frv/t-frv frv/t-linux t-fdpbit\"\n \t;;\n h8300-*-rtems*)\n-\ttmake_file=\"$tmake_file t-fpbit\"\n+\ttmake_file=\"$tmake_file h8300/t-h8300 t-fpbit\"\n \textra_parts=\"$extra_parts crti.o crtn.o\"\n \t;;\n h8300-*-elf*)\n-\ttmake_file=\"$tmake_file t-fpbit\"\n+\ttmake_file=\"$tmake_file h8300/t-h8300 t-fpbit\"\n \textra_parts=\"$extra_parts crti.o crtn.o\"\n \t;;\n hppa*64*-*-linux*)\n+\ttmake_file=\"$tmake_file pa/t-linux pa/t-linux64\"\n \t;;\n hppa*-*-linux*)\n-\ttmake_file=\"$tmake_file t-slibgcc-libgcc\"\n+\ttmake_file=\"$tmake_file pa/t-linux t-slibgcc-libgcc\"\n \t# Set the libgcc version number\n \tif test x$enable_sjlj_exceptions = xyes; then\n \t    tmake_file=\"$tmake_file pa/t-slibgcc-sjlj-ver\"\n@@ -565,7 +568,7 @@ i[34567]86-*-cygwin*)\n \telse\n \t\ttmake_dlldir_file=\"i386/t-dlldir-x\"\n \tfi\n-\ttmake_file=\"${tmake_file} ${tmake_eh_file} ${tmake_dlldir_file} i386/t-slibgcc-cygming i386/t-cygming i386/t-cygwin i386/t-crtfm t-dfprules\"\n+\ttmake_file=\"${tmake_file} ${tmake_eh_file} ${tmake_dlldir_file} i386/t-slibgcc-cygming i386/t-cygming i386/t-cygwin i386/t-crtfm i386/t-chkstk t-dfprules\"\n \tcase ${target_thread_file} in\n \t  posix)\n \t    tmake_file=\"i386/t-mingw-pthread $tmake_file\"\n@@ -586,7 +589,7 @@ i[34567]86-*-mingw*)\n \telse\n \t\ttmake_dlldir_file=\"i386/t-dlldir-x\"\n \tfi\n-\ttmake_file=\"${tmake_file} ${tmake_eh_file} ${tmake_dlldir_file} i386/t-slibgcc-cygming i386/t-cygming i386/t-mingw32 i386/t-crtfm t-dfprules\"\n+\ttmake_file=\"${tmake_file} ${tmake_eh_file} ${tmake_dlldir_file} i386/t-slibgcc-cygming i386/t-cygming i386/t-mingw32 i386/t-crtfm i386/t-chkstk t-dfprules\"\n \tmd_unwind_header=i386/w32-unwind.h\n \t;;\n x86_64-*-mingw*)\n@@ -602,10 +605,11 @@ x86_64-*-mingw*)\n \telse\n \t\ttmake_dlldir_file=\"i386/t-dlldir-x\"\n \tfi\n-\ttmake_file=\"${tmake_file} ${tmake_eh_file} ${tmake_dlldir_file} i386/t-slibgcc-cygming i386/t-mingw32 t-dfprules i386/t-crtfm\"\n+\ttmake_file=\"${tmake_file} ${tmake_eh_file} ${tmake_dlldir_file} i386/t-slibgcc-cygming i386/t-mingw32 t-dfprules i386/t-crtfm i386/t-chkstk\"\n \textra_parts=\"$extra_parts crtfastmath.o\"\n \t;;\n i[34567]86-*-interix3*)\n+\ttmake_file=\"$tmake_file i386/t-chkstk\"\n \t;;\n ia64*-*-elf*)\n \textra_parts=\"$extra_parts crtbeginS.o crtendS.o crtfastmath.o\"\n@@ -625,10 +629,10 @@ ia64*-*-linux*)\n \tmd_unwind_header=ia64/linux-unwind.h\n \t;;\n ia64*-*-hpux*)\n-\ttmake_file=\"ia64/t-hpux t-slibgcc ia64/t-slibgcc-hpux t-slibgcc-hpux\"\n+\ttmake_file=\"ia64/t-ia64 ia64/t-hpux t-slibgcc ia64/t-slibgcc-hpux t-slibgcc-hpux\"\n \t;;\n ia64-hp-*vms*)\n-\ttmake_file=\"$tmake_file ia64/t-eh-ia64 ia64/t-vms t-slibgcc-vms\"\n+\ttmake_file=\"$tmake_file ia64/t-ia64 ia64/t-eh-ia64 ia64/t-vms t-slibgcc-vms\"\n \textra_parts=\"$extra_parts crtinitS.o\"\n \tmd_unwind_header=ia64/vms-unwind.h\n \t;;\n@@ -660,18 +664,21 @@ m32r-*-linux*)\n m32rle-*-linux*)\n \ttmake_file=\"$tmake_file m32r/t-linux t-fdpbit\"\n \t;;\n-m68k-*-elf*)\n+m68k-*-elf* | fido-*-elf)\n+\ttmake_file=\"$tmake_file m68k/t-floatlib\"\n \t;;\n m68k*-*-netbsdelf*)\n \t;;\n m68k*-*-openbsd*)\n \t;;\n m68k-*-uclinux*)\t\t# Motorola m68k/ColdFire running uClinux with uClibc\n+\ttmake_file=\"$tmake_file m68k/t-floatlib\"\n \tmd_unwind_header=m68k/linux-unwind.h\n \t;;\n m68k-*-linux*)\t\t\t# Motorola m68k's running GNU/Linux\n \t\t\t\t# with ELF format using glibc 2\n \t\t\t\t# aka the GNU/Linux C library 6.\n+\ttmake_file=\"$tmake_file m68k/t-floatlib\"\n \t# If not configured with --enable-sjlj-exceptions, bump the\n \t# libgcc version number.\n \tif test x$enable_sjlj_exceptions != xyes; then\n@@ -680,10 +687,11 @@ m68k-*-linux*)\t\t\t# Motorola m68k's running GNU/Linux\n \tmd_unwind_header=m68k/linux-unwind.h\n \t;;\n m68k-*-rtems*)\n+\ttmake_file=\"$tmake_file m68k/t-floatlib\"\n \textra_parts=\"$extra_parts crti.o crtn.o\"\n \t;;\n mcore-*-elf)\n-\ttmake_file=t-fdpbit\n+\ttmake_file=\"mcore/t-mcore t-fdpbit\"\n \textra_parts=\"$extra_parts crti.o crtn.o\"\n \t;;\n microblaze*-linux*)\n@@ -905,6 +913,10 @@ sh-*-elf* | sh[12346l]*-*-elf*)\n \t\tlibic_invalidate_array_4-200.a \\\n \t\tlibic_invalidate_array_4a.a \\\n \t\tlibgcc-Os-4-200.a libgcc-4-300.a\"\n+\tcase ${host} in sh64*-*-*)\n+\t\ttmake_file=\"$tmake_file sh/t-sh64\"\n+\t\t;;\n+\tesac\n \tcase ${host} in\n \tsh*-superh-elf)\n \t\ttmake_file=\"$tmake_file sh/t-superh\"\n@@ -913,23 +925,33 @@ sh-*-elf* | sh[12346l]*-*-elf*)\n  \tesac\n \t;;\n sh-*-linux* | sh[2346lbe]*-*-linux*)\n-\ttmake_file=\"${tmake_file} t-slibgcc-libgcc sh/t-linux t-fdpbit\"\n+\ttmake_file=\"${tmake_file} sh/t-sh t-slibgcc-libgcc sh/t-linux t-fdpbit\"\n+\tcase ${host} in sh64*-*-linux*)\n+\t\ttmake_file=\"$tmake_file sh/t-sh64\"\n+\t\t;;\n+\tesac\n \tmd_unwind_header=sh/linux-unwind.h\n \t;;\n sh-*-netbsdelf* | shl*-*-netbsdelf* | sh5-*-netbsd* | sh5l*-*-netbsd* | \\\n   sh64-*-netbsd* | sh64l*-*-netbsd*)\n+\ttmake_file=\"$tmake_file sh/t-sh sh/t-netbsd\"\n+\tcase ${host} in\n+\tsh5*-*-netbsd* | sh64*-netbsd*)\n+\t\ttmake_file=\"$tmake_file sh/t-sh64\"\n+\t\t;;\n+\tesac\n \t# NetBSD's C library includes a fast software FP library that\n \t# has support for setting/setting the rounding mode, exception\n \t# mask, etc.  Therefore, we don't want to include software FP\n \t# in libgcc.\n \t;;\n sh-*-rtems*)\n-\ttmake_file=\"$tmake_file t-crtstuff-pic t-fdpbit\"\n+\ttmake_file=\"$tmake_file sh/t-sh t-crtstuff-pic t-fdpbit\"\n \textra_parts=\"$extra_parts crt1.o crti.o crtn.o crtbeginS.o crtendS.o \\\n \t\t$sh_ic_extra_parts $sh_opt_extra_parts\"\n \t;;\n sh-wrs-vxworks)\n-\ttmake_file=\"$tmake_file t-crtstuff-pic t-fdpbit\"\n+\ttmake_file=\"$tmake_file sh/t-sh t-crtstuff-pic t-fdpbit\"\n \t;;\n sparc-*-netbsdelf*)\n \t;;\n@@ -956,6 +978,13 @@ sparc-*-linux*)\t\t# SPARC's running GNU/Linux, libc6\n \t\ttmake_file=\"${tmake_file} sparc/t-linux\"\n \t\t;;\n \tesac\n+\tcase ${host} in\n+\t*-leon[3-9]*)\n+\t\t;;\n+\t*)\n+\t  \ttmake_file=\"$tmake_file sparc/t-softmul\"\n+\t  \t;;\n+\tesac\n \textra_parts=\"$extra_parts crtfastmath.o\"\n \tmd_unwind_header=sparc/linux-unwind.h\n \t;;\n@@ -1007,9 +1036,10 @@ tic6x-*-elf)\n \tunwind_header=config/c6x/unwind-c6x.h\n \t;;\n v850*-*-*)\n-\ttmake_file=t-fdpbit\n+\ttmake_file=\"v850/t-v850 t-fdpbit\"\n \t;;\n vax-*-linux*)\n+\ttmake_file=\"$tmake_file vax/t-linux\"\n \t;;\n vax-*-netbsdelf*)\n \t;;\n@@ -1032,6 +1062,7 @@ am33_2.0-*-linux*)\n \ttmake_file=\"$tmake_file t-fdpbit\"\n \t;;\n m32c-*-elf*|m32c-*-rtems*)\n+\ttmake_file=\"$tmake_file m32c/t-m32c\"\n  \t;;\n mep*-*-*)\n \ttmake_file=\"mep/t-mep t-fdpbit\""}, {"sha": "4ecea6da5a624396e364fc7a5ed0e41a2ee8bd53", "filename": "libgcc/config/arm/bpabi-v6m.S", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Farm%2Fbpabi-v6m.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Farm%2Fbpabi-v6m.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Fbpabi-v6m.S?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "previous_filename": "gcc/config/arm/bpabi-v6m.S"}, {"sha": "2ff338927fa871b7b936c1299534964a3103773e", "filename": "libgcc/config/arm/bpabi.S", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Farm%2Fbpabi.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Farm%2Fbpabi.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Fbpabi.S?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "previous_filename": "gcc/config/arm/bpabi.S"}, {"sha": "eb0c38632d01aa53f08bef7ad9dee872eab837b9", "filename": "libgcc/config/arm/ieee754-df.S", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Farm%2Fieee754-df.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Farm%2Fieee754-df.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Fieee754-df.S?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "previous_filename": "gcc/config/arm/ieee754-df.S"}, {"sha": "c93f66d8ff8cfb23ec1d163f5b66fc79ab7834db", "filename": "libgcc/config/arm/ieee754-sf.S", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Farm%2Fieee754-sf.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Farm%2Fieee754-sf.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Fieee754-sf.S?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "previous_filename": "gcc/config/arm/ieee754-sf.S"}, {"sha": "2e76c01df4b3b127f51b45d74efd49c1aaf9def9", "filename": "libgcc/config/arm/lib1funcs.S", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Farm%2Flib1funcs.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Farm%2Flib1funcs.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Flib1funcs.S?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "previous_filename": "gcc/config/arm/lib1funcs.asm"}, {"sha": "8166cd86e478a16d707ee81668ef0c53931f4ea4", "filename": "libgcc/config/arm/libunwind.S", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Farm%2Flibunwind.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Farm%2Flibunwind.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Flibunwind.S?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -40,7 +40,7 @@\n \n #ifndef __symbian__\n \n-#include \"config/arm/lib1funcs.asm\"\n+#include \"lib1funcs.S\"\n \n .macro UNPREFIX name\n \t.global SYM (\\name)"}, {"sha": "4e17e99b4a53bbafc0f1f8dddd02000f0e8f4f48", "filename": "libgcc/config/arm/t-arm", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Farm%2Ft-arm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Farm%2Ft-arm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Ft-arm?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -0,0 +1,3 @@\n+LIB1ASMSRC = arm/lib1funcs.S\n+LIB1ASMFUNCS = _thumb1_case_sqi _thumb1_case_uqi _thumb1_case_shi \\\n+\t_thumb1_case_uhi _thumb1_case_si"}, {"sha": "8787285ab1fbc71bc9665a6d6fb8db0fa8296d23", "filename": "libgcc/config/arm/t-bpabi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Farm%2Ft-bpabi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Farm%2Ft-bpabi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Ft-bpabi?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -1,3 +1,6 @@\n+# Add the bpabi.S functions.\n+LIB1ASMFUNCS += _aeabi_lcmp _aeabi_ulcmp _aeabi_ldivmod _aeabi_uldivmod\n+\n LIB2ADDEH = $(srcdir)/config/arm/unwind-arm.c \\\n   $(srcdir)/config/arm/libunwind.S \\\n   $(srcdir)/config/arm/pr-support.c $(srcdir)/unwind-c.c"}, {"sha": "fab32e445be9575b3214542d6b6afe057ac3b970", "filename": "libgcc/config/arm/t-elf", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Farm%2Ft-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Farm%2Ft-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Ft-elf?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -0,0 +1,13 @@\n+# For most CPUs we have an assembly soft-float implementations.\n+# However this is not true for ARMv6M.  Here we want to use the soft-fp C\n+# implementation.  The soft-fp code is only build for ARMv6M.  This pulls\n+# in the asm implementation for other CPUs.\n+LIB1ASMFUNCS += _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_tls _bb_init_func \\\n+\t_call_via_rX _interwork_call_via_rX \\\n+\t_lshrdi3 _ashrdi3 _ashldi3 \\\n+\t_arm_negdf2 _arm_addsubdf3 _arm_muldivdf3 _arm_cmpdf2 _arm_unorddf2 \\\n+\t_arm_fixdfsi _arm_fixunsdfsi \\\n+\t_arm_truncdfsf2 _arm_negsf2 _arm_addsubsf3 _arm_muldivsf3 \\\n+\t_arm_cmpsf2 _arm_unordsf2 _arm_fixsfsi _arm_fixunssfsi \\\n+\t_arm_floatdidf _arm_floatdisf _arm_floatundidf _arm_floatundisf \\\n+\t_clzsi2 _clzdi2 "}, {"sha": "a154f775a0f0603eb1a1cbb390067e3d12903625", "filename": "libgcc/config/arm/t-linux", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Farm%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Farm%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Ft-linux?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -0,0 +1,3 @@\n+LIB1ASMSRC = arm/lib1funcs.S\n+LIB1ASMFUNCS = _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_lnx _clzsi2 _clzdi2 \\\n+\t_arm_addsubdf3 _arm_addsubsf3"}, {"sha": "dfc9197ea455b29331da1469f471b6a5172203dd", "filename": "libgcc/config/arm/t-linux-eabi", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Farm%2Ft-linux-eabi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Farm%2Ft-linux-eabi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Ft-linux-eabi?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -0,0 +1,2 @@\n+# Use a version of div0 which raises SIGFPE, and a special __clear_cache.\n+LIB1ASMFUNCS := $(filter-out _dvmd_tls,$(LIB1ASMFUNCS)) _dvmd_lnx _clear_cache"}, {"sha": "cd9f9667ddf152e6bef6f56ee1a142a7faa6dcea", "filename": "libgcc/config/arm/t-strongarm-elf", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Farm%2Ft-strongarm-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Farm%2Ft-strongarm-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Ft-strongarm-elf?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -0,0 +1 @@\n+LIB1ASMFUNCS += _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_tls _bb_init_func _clzsi2 _clzdi2"}, {"sha": "1989696c8a3e4a999522fd5213e411d0adf0509a", "filename": "libgcc/config/arm/t-symbian", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Farm%2Ft-symbian", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Farm%2Ft-symbian", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Ft-symbian?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -1,2 +1,16 @@\n+LIB1ASMFUNCS += _bb_init_func _call_via_rX _interwork_call_via_rX _clzsi2 _clzdi2\n+\n+# These functions have __aeabi equivalents and will never be called by GCC.  \n+# By putting them in LIB1ASMFUNCS, we avoid the standard libgcc2.c code being\n+# used -- and we make sure that definitions are not available in lib1funcs.S,\n+# either, so they end up undefined.\n+LIB1ASMFUNCS += \\\n+\t_ashldi3 _ashrdi3 _divdi3 _floatdidf _udivmoddi4 _umoddi3 \\\n+\t_udivdi3 _lshrdi3 _moddi3 _muldi3 _negdi2 _cmpdi2 \\\n+\t_fixdfdi _fixsfdi _fixunsdfdi _fixunssfdi _floatdisf \\\n+\t_negdf2 _addsubdf3 _muldivdf3 _cmpdf2 _unorddf2 _fixdfsi _fixunsdfsi \\\n+\t_truncdfsf2 _negsf2 _addsubsf3 _muldivsf3 _cmpsf2 _unordsf2 \\\n+\t_fixsfsi _fixunssfsi\n+\n # Include the gcc personality routine\n LIB2ADDEH = $(srcdir)/unwind-c.c $(srcdir)/config/arm/pr-support.c"}, {"sha": "70ccdc1556aad248ddc56ee5ab9f492fec44409a", "filename": "libgcc/config/arm/t-vxworks", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Farm%2Ft-vxworks", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Farm%2Ft-vxworks", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Ft-vxworks?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -0,0 +1 @@\n+LIB1ASMFUNCS += _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_tls _bb_init_func _call_via_rX _interwork_call_via_rX _clzsi2 _clzdi2"}, {"sha": "33ea969ccf4b55a225f65b822861a71102a5d013", "filename": "libgcc/config/arm/t-wince-pe", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Farm%2Ft-wince-pe", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Farm%2Ft-wince-pe", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Ft-wince-pe?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -0,0 +1 @@\n+LIB1ASMFUNCS += _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_tls _call_via_rX _interwork_call_via_rX _clzsi2 _clzdi2"}, {"sha": "8c369c96a7717b79ec09f57655f0ab842bc1e468", "filename": "libgcc/config/avr/lib1funcs.S", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Favr%2Flib1funcs.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Favr%2Flib1funcs.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Favr%2Flib1funcs.S?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "previous_filename": "gcc/config/avr/libgcc.S"}, {"sha": "f1c114a6dd69b218e1080a7ce6a62b077dfe3270", "filename": "libgcc/config/avr/t-avr", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Favr%2Ft-avr", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Favr%2Ft-avr", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Favr%2Ft-avr?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -1,3 +1,51 @@\n+LIB1ASMSRC = avr/lib1funcs.S\n+LIB1ASMFUNCS = \\\n+\t_mulqi3 \\\n+\t_mulhi3 \\\n+\t_mulhisi3 \\\n+\t_umulhisi3 \\\n+\t_usmulhisi3 \\\n+\t_muluhisi3 \\\n+\t_mulshisi3 \\\n+\t_mulsi3 \\\n+\t_udivmodqi4 \\\n+\t_divmodqi4 \\\n+\t_udivmodhi4 \\\n+\t_divmodhi4 \\\n+\t_udivmodsi4 \\\n+\t_divmodsi4 \\\n+\t_prologue \\\n+\t_epilogue \\\n+\t_exit \\\n+\t_cleanup \\\n+\t_tablejump \\\n+\t_tablejump_elpm \\\n+\t_copy_data \\\n+\t_clear_bss \\\n+\t_ctors \\\n+\t_dtors \\\n+\t_ffssi2 \\\n+\t_ffshi2 \\\n+\t_loop_ffsqi2 \\\n+\t_ctzsi2 \\\n+\t_ctzhi2 \\\n+\t_clzdi2 \\\n+\t_clzsi2 \\\n+\t_clzhi2 \\\n+\t_paritydi2 \\\n+\t_paritysi2 \\\n+\t_parityhi2 \\\n+\t_popcounthi2 \\\n+\t_popcountsi2 \\\n+\t_popcountdi2 \\\n+\t_popcountqi2 \\\n+\t_bswapsi2 \\\n+\t_bswapdi2 \\\n+\t_ashldi3 \\\n+\t_ashrdi3 \\\n+\t_lshrdi3 \\\n+\t_fmul _fmuls _fmulsu\n+\n # Extra 16-bit integer functions.\n intfuncs16 = _absvXX2 _addvXX3 _subvXX3 _mulvXX3 _negvXX2 _clrsbXX2\n "}, {"sha": "c7bf4f3f05c4fcfd2f9352a9e632d1497cf83b70", "filename": "libgcc/config/bfin/lib1funcs.S", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fbfin%2Flib1funcs.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fbfin%2Flib1funcs.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fbfin%2Flib1funcs.S?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "previous_filename": "gcc/config/bfin/lib1funcs.asm"}, {"sha": "bc2b088ffc13e307311672d4019faff4c2e83214", "filename": "libgcc/config/bfin/t-bfin", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fbfin%2Ft-bfin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fbfin%2Ft-bfin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fbfin%2Ft-bfin?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -0,0 +1,3 @@\n+LIB1ASMSRC = bfin/lib1funcs.S\n+LIB1ASMFUNCS = _divsi3 _udivsi3 _umodsi3 _modsi3 _muldi3 _umulsi3_highpart\n+LIB1ASMFUNCS += _smulsi3_highpart"}, {"sha": "5bf34474bbd75204b176d5a3ac462728a212b2e6", "filename": "libgcc/config/c6x/lib1funcs.S", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fc6x%2Flib1funcs.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fc6x%2Flib1funcs.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fc6x%2Flib1funcs.S?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "previous_filename": "gcc/config/c6x/lib1funcs.asm"}, {"sha": "e01c4109e52300aea2429559211c0424728fb94b", "filename": "libgcc/config/c6x/t-elf", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fc6x%2Ft-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fc6x%2Ft-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fc6x%2Ft-elf?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -1,6 +1,11 @@\n # Cannot use default rules due to $(CRTSTUFF_T_CFLAGS).\n CUSTOM_CRTIN = yes\n \n+LIB1ASMSRC = c6x/lib1funcs.S\n+LIB1ASMFUNCS = _divsi3 _udivsi3 _umodsi3 _modsi3 _udivmodsi4 _divmodsi4\n+LIB1ASMFUNCS += _strasgi _strasgi_64plus _clzsi2 _clzdi2 _clz\n+LIB1ASMFUNCS += _push_rts _pop_rts _call_stub\n+\n # Assemble startup files.\n crti.o: $(srcdir)/config/c6x/crti.S\n \t$(crt_compile) -c $(CRTSTUFF_T_CFLAGS) $<"}, {"sha": "7c63453123a9f930c70ebaaa8e5bc2ea2dc59468", "filename": "libgcc/config/fr30/lib1funcs.S", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Ffr30%2Flib1funcs.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Ffr30%2Flib1funcs.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ffr30%2Flib1funcs.S?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "previous_filename": "gcc/config/fr30/lib1funcs.asm"}, {"sha": "ee5ed9a127ee55c237db3bd6fabfd0c43e7141e7", "filename": "libgcc/config/fr30/t-fr30", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Ffr30%2Ft-fr30", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Ffr30%2Ft-fr30", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ffr30%2Ft-fr30?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -0,0 +1,2 @@\n+LIB1ASMSRC    = fr30/lib1funcs.S\n+LIB1ASMFUNCS  = _udivsi3 _divsi3 _umodsi3 _modsi3"}, {"sha": "d1ffcab61338f637f9bfa031177a40e57d3fc00d", "filename": "libgcc/config/frv/lib1funcs.S", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Ffrv%2Flib1funcs.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Ffrv%2Flib1funcs.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ffrv%2Flib1funcs.S?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "previous_filename": "gcc/config/frv/lib1funcs.asm"}, {"sha": "9773722d8e7021b0724139fff284d550210a489d", "filename": "libgcc/config/frv/t-frv", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Ffrv%2Ft-frv", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Ffrv%2Ft-frv", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ffrv%2Ft-frv?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -1,3 +1,6 @@\n+LIB1ASMSRC\t= frv/lib1funcs.S\n+LIB1ASMFUNCS\t= _cmpll _cmpf _cmpd _addll _subll _andll _orll _xorll _notll _cmov\n+\n # Compile two additional files that are linked with every program\n # linked using GCC on systems using COFF or ELF, for the sake of C++\n # constructors."}, {"sha": "1b75b73269df9f63a7226aa9a4d56a348a6c3167", "filename": "libgcc/config/h8300/lib1funcs.S", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fh8300%2Flib1funcs.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fh8300%2Flib1funcs.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fh8300%2Flib1funcs.S?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "previous_filename": "gcc/config/h8300/lib1funcs.asm"}, {"sha": "4602ff8b9ef40cd46487e134ce01d4cfeab511b9", "filename": "libgcc/config/h8300/t-h8300", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fh8300%2Ft-h8300", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fh8300%2Ft-h8300", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fh8300%2Ft-h8300?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -0,0 +1,3 @@\n+LIB1ASMSRC = h8300/lib1funcs.S\n+LIB1ASMFUNCS = _cmpsi2 _ucmpsi2 _divhi3 _divsi3 _mulhi3 _mulsi3 \\\n+  _fixunssfsi_asm"}, {"sha": "8f9c486850e82429f87761a52faced29bf67d941", "filename": "libgcc/config/i386/cygwin.S", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fi386%2Fcygwin.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fi386%2Fcygwin.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fcygwin.S?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "previous_filename": "gcc/config/i386/cygwin.asm"}, {"sha": "822981faab853c5a50d019e0c14c47775bae02c0", "filename": "libgcc/config/i386/t-chkstk", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fi386%2Ft-chkstk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fi386%2Ft-chkstk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Ft-chkstk?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -0,0 +1,2 @@\n+LIB1ASMSRC = i386/cygwin.S\n+LIB1ASMFUNCS = _chkstk _chkstk_ms"}, {"sha": "9cba8f594233107d4d985e7d399826ed366a5ded", "filename": "libgcc/config/ia64/__divxf3.S", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fia64%2F__divxf3.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fia64%2F__divxf3.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fia64%2F__divxf3.S?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -3,7 +3,7 @@\n #endif\n \n #define L__divxf3\n-#include \"config/ia64/lib1funcs.asm\"\n+#include \"config/ia64/lib1funcs.S\"\n \n #ifdef SHARED\n #undef __divtf3", "previous_filename": "libgcc/config/ia64/__divxf3.asm"}, {"sha": "863b70f7edc0a0c4a85c946e299f83d1b2999297", "filename": "libgcc/config/ia64/_fixtfdi.S", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fia64%2F_fixtfdi.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fia64%2F_fixtfdi.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fia64%2F_fixtfdi.S?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -3,7 +3,7 @@\n #endif\n \n #define L_fixtfdi\n-#include \"config/ia64/lib1funcs.asm\"\n+#include \"config/ia64/lib1funcs.S\"\n \n #ifdef SHARED\n #undef __fixtfti", "previous_filename": "libgcc/config/ia64/_fixtfdi.asm"}, {"sha": "aac6a284eaa455c452d9de4140d36f3e55a05e19", "filename": "libgcc/config/ia64/_fixunstfdi.S", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fia64%2F_fixunstfdi.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fia64%2F_fixunstfdi.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fia64%2F_fixunstfdi.S?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -3,7 +3,7 @@\n #endif\n \n #define L_fixunstfdi\n-#include \"config/ia64/lib1funcs.asm\"\n+#include \"config/ia64/lib1funcs.S\"\n \n #ifdef SHARED\n #undef __fixunstfti", "previous_filename": "libgcc/config/ia64/_fixunstfdi.asm"}, {"sha": "e37404d26d521a6ca3a41bfede21e9ee087ebdc2", "filename": "libgcc/config/ia64/_floatditf.S", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fia64%2F_floatditf.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fia64%2F_floatditf.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fia64%2F_floatditf.S?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -3,7 +3,7 @@\n #endif\n \n #define L_floatditf\n-#include \"config/ia64/lib1funcs.asm\"\n+#include \"config/ia64/lib1funcs.S\"\n \n #ifdef SHARED\n #undef __floattitf", "previous_filename": "libgcc/config/ia64/_floatditf.asm"}, {"sha": "b7eaa6eca3c0f8efe9a498e39fd006ad7a6fde20", "filename": "libgcc/config/ia64/lib1funcs.S", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fia64%2Flib1funcs.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fia64%2Flib1funcs.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fia64%2Flib1funcs.S?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "previous_filename": "gcc/config/ia64/lib1funcs.asm"}, {"sha": "1fee41385c0aa058b7ca43655970cd10ffa9a936", "filename": "libgcc/config/ia64/t-hpux", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fia64%2Ft-hpux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fia64%2Ft-hpux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fia64%2Ft-hpux?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -1 +1,6 @@\n+# On HP-UX we do not want _fixtfdi, _fixunstfdi, or _floatditf from\n+# LIB1ASMSRC.  These functions map the 128 bit conversion function names\n+# to 80 bit conversions and were done for Linux backwards compatibility.\n+LIB1ASMFUNCS := $(filter-out _fixtfdi _fixunstfdi _floatditf,$(LIB1ASMFUNCS))\n+\n LIB2ADDEH = $(srcdir)/unwind-c.c"}, {"sha": "80445d8a2a87ea993ccb3979f6d266e930c28305", "filename": "libgcc/config/ia64/t-ia64", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fia64%2Ft-ia64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fia64%2Ft-ia64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fia64%2Ft-ia64?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -1,3 +1,16 @@\n+LIB1ASMSRC    = ia64/lib1funcs.S\n+\n+# We use different names for the DImode div/mod files so that they won't\n+# conflict with libgcc2.c files.  We used to use __ia64 as a prefix, now\n+# we use __ as the prefix.  Note that L_divdi3 in libgcc2.c actually defines\n+# a TImode divide function, so there is no actual overlap here between\n+# libgcc2.c and lib1funcs.S.\n+LIB1ASMFUNCS  = __divxf3 __divdf3 __divsf3 \\\n+\t__divdi3 __moddi3 __udivdi3 __umoddi3 \\\n+\t__divsi3 __modsi3 __udivsi3 __umodsi3 __save_stack_nonlocal \\\n+\t__nonlocal_goto __restore_stack_nonlocal __trampoline \\\n+\t_fixtfdi _fixunstfdi _floatditf\n+\n CUSTOM_CRTSTUFF = yes\n \n # Assemble startup files."}, {"sha": "00f45d51cd02f18cee46e55723658a3002d3b648", "filename": "libgcc/config/ia64/t-softfp-compat", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fia64%2Ft-softfp-compat", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fia64%2Ft-softfp-compat", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fia64%2Ft-softfp-compat?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -3,5 +3,5 @@\n # Replace __dvxf3 _fixtfdi _fixunstfdi _floatditf\n libgcc1-tf-functions = __divxf3  _fixtfdi _fixunstfdi _floatditf\n LIB1ASMFUNCS := $(filter-out $(libgcc1-tf-functions), $(LIB1ASMFUNCS))\n-libgcc1-tf-compats = $(addsuffix .asm, $(libgcc1-tf-functions))\n+libgcc1-tf-compats = $(addsuffix .S, $(libgcc1-tf-functions))\n LIB2ADD += $(addprefix $(srcdir)/config/ia64/, $(libgcc1-tf-compats))"}, {"sha": "9b6577871877b1e2b35a7cb0ee0833ba7bc0446a", "filename": "libgcc/config/m32c/lib1funcs.S", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fm32c%2Flib1funcs.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fm32c%2Flib1funcs.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fm32c%2Flib1funcs.S?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "previous_filename": "gcc/config/m32c/m32c-lib1.S"}, {"sha": "d21483750fdaa3de51ce718ef98b6cccc8ff2a05", "filename": "libgcc/config/m32c/t-m32c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fm32c%2Ft-m32c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fm32c%2Ft-m32c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fm32c%2Ft-m32c?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -0,0 +1,9 @@\n+LIB1ASMSRC = m32c/lib1funcs.S\n+\n+LIB1ASMFUNCS = \\\n+\t__m32c_memregs \\\n+\t__m32c_eh_return \\\n+\t__m32c_mulsi3 \\\n+\t__m32c_cmpsi2 \\\n+\t__m32c_ucmpsi2 \\\n+\t__m32c_jsri16"}, {"sha": "5633245922313129da08881e624b42e3009435e6", "filename": "libgcc/config/m32r/initfini.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fm32r%2Finitfini.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fm32r%2Finitfini.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fm32r%2Finitfini.c?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -1,5 +1,5 @@\n /* .init/.fini section handling + C++ global constructor/destructor handling.\n-   This file is based on crtstuff.c, sol2-crti.asm, sol2-crtn.asm.\n+   This file is based on crtstuff.c, sol2-crti.S, sol2-crtn.S.\n \n    Copyright (C) 1996, 1997, 1998, 2006, 2009 Free Software Foundation, Inc.\n "}, {"sha": "0339a092c4f7fa68f8f506d3c183747372c61d4e", "filename": "libgcc/config/m68k/lb1sf68.S", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fm68k%2Flb1sf68.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fm68k%2Flb1sf68.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fm68k%2Flb1sf68.S?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "previous_filename": "gcc/config/m68k/lb1sf68.asm"}, {"sha": "4160eb9f53723c1d869518bc5276348fa58fd07d", "filename": "libgcc/config/m68k/t-floatlib", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fm68k%2Ft-floatlib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fm68k%2Ft-floatlib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fm68k%2Ft-floatlib?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -0,0 +1,5 @@\n+LIB1ASMSRC = m68k/lb1sf68.S\n+LIB1ASMFUNCS = _mulsi3 _udivsi3 _divsi3 _umodsi3 _modsi3 \\\n+   _double _float _floatex \\\n+   _eqdf2 _nedf2 _gtdf2 _gedf2 _ltdf2 _ledf2 \\\n+   _eqsf2 _nesf2 _gtsf2 _gesf2 _ltsf2 _lesf2"}, {"sha": "701762f2a3c66671c01ddae552aec791841b7c56", "filename": "libgcc/config/mcore/lib1funcs.S", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fmcore%2Flib1funcs.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fmcore%2Flib1funcs.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmcore%2Flib1funcs.S?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "previous_filename": "gcc/config/mcore/lib1.asm"}, {"sha": "19c4c15cd0bb454dd7e0a1788b93316ced1c94d6", "filename": "libgcc/config/mcore/t-mcore", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fmcore%2Ft-mcore", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fmcore%2Ft-mcore", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmcore%2Ft-mcore?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -0,0 +1,2 @@\n+LIB1ASMSRC    = mcore/lib1funcs.S\n+LIB1ASMFUNCS  = _divsi3 _udivsi3 _modsi3 _umodsi3"}, {"sha": "0a18913f927640cae1ce4aa4293b19b3dbd98300", "filename": "libgcc/config/mep/lib1funcs.S", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fmep%2Flib1funcs.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fmep%2Flib1funcs.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmep%2Flib1funcs.S?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "previous_filename": "gcc/config/mep/mep-lib1.asm"}, {"sha": "d1fb094a41e43e1f82e6ba94b24f0cd5a1167e94", "filename": "libgcc/config/mep/t-mep", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fmep%2Ft-mep", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fmep%2Ft-mep", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmep%2Ft-mep?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -1,2 +1,11 @@\n+# profiling support\n+LIB1ASMSRC = mep/lib1funcs.S\n+\n+LIB1ASMFUNCS = _mep_profile \\\n+\t       _mep_bb_init_trace \\\n+\t       _mep_bb_init \\\n+\t       _mep_bb_trace \\\n+\t       _mep_bb_increment\n+\n # Use -O0 instead of -O2 so we don't get complex relocations\n CRTSTUFF_CFLAGS += -O0"}, {"sha": "ec331b5f65e1c7dd0a10cfb7874c2d6165b8ace9", "filename": "libgcc/config/mips/mips16.S", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fmips%2Fmips16.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fmips%2Fmips16.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmips%2Fmips16.S?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "previous_filename": "gcc/config/mips/mips16.S"}, {"sha": "5553ed76e2d5a5602fcea8bdbd8b43a04838155c", "filename": "libgcc/config/mips/t-mips16", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fmips%2Ft-mips16", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fmips%2Ft-mips16", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmips%2Ft-mips16?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -1,3 +1,43 @@\n+# Copyright (C) 2007, 2008, 2011 Free Software Foundation, Inc.\n+#\n+# This file is part of GCC.\n+#\n+# GCC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3, or (at your option)\n+# any later version.\n+#\n+# GCC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+LIB1ASMSRC = mips/mips16.S\n+LIB1ASMFUNCS = _m16addsf3 _m16subsf3 _m16mulsf3 _m16divsf3 \\\n+\t_m16eqsf2 _m16nesf2 _m16gtsf2 _m16gesf2 _m16lesf2 _m16ltsf2 \\\n+\t_m16unordsf2 \\\n+\t_m16fltsisf _m16fix_truncsfsi _m16fltunsisf \\\n+\t_m16adddf3 _m16subdf3 _m16muldf3 _m16divdf3 \\\n+\t_m16extsfdf2 _m16trdfsf2 \\\n+\t_m16eqdf2 _m16nedf2 _m16gtdf2 _m16gedf2 _m16ledf2 _m16ltdf2 \\\n+\t_m16unorddf2 \\\n+\t_m16fltsidf _m16fix_truncdfsi _m16fltunsidf \\\n+\t_m16retsf _m16retdf \\\n+\t_m16retsc _m16retdc \\\n+\t_m16stub1 _m16stub2 _m16stub5 _m16stub6 _m16stub9 _m16stub10 \\\n+\t_m16stubsf0 _m16stubsf1 _m16stubsf2 _m16stubsf5 _m16stubsf6 \\\n+\t_m16stubsf9 _m16stubsf10 \\\n+\t_m16stubdf0 _m16stubdf1 _m16stubdf2 _m16stubdf5 _m16stubdf6 \\\n+\t_m16stubdf9 _m16stubdf10 \\\n+\t_m16stubsc0 _m16stubsc1 _m16stubsc2 _m16stubsc5 _m16stubsc6 \\\n+\t_m16stubsc9 _m16stubsc10 \\\n+\t_m16stubdc0 _m16stubdc1 _m16stubdc2 _m16stubdc5 _m16stubdc6 \\\n+\t_m16stubdc9 _m16stubdc10\n+\n SYNC = yes\n SYNC_CFLAGS = -mno-mips16\n "}, {"sha": "2e9c4f741b61a1a6b0d847590753e5cb177d6bfa", "filename": "libgcc/config/pa/milli64.S", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fpa%2Fmilli64.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fpa%2Fmilli64.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpa%2Fmilli64.S?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "previous_filename": "gcc/config/pa/milli64.S"}, {"sha": "d396bf7705aa89debc048d36b793dd11dc7708d7", "filename": "libgcc/config/pa/t-linux", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fpa%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fpa%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpa%2Ft-linux?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -0,0 +1,6 @@\n+#Plug millicode routines into libgcc.a  We want these on both native and\n+#cross compiles.  We use the \"64-bit\" routines because the \"32-bit\" code\n+#is broken for certain corner cases.\n+\n+LIB1ASMSRC = pa/milli64.S\n+LIB1ASMFUNCS = _divI _divU _remI _remU _div_const _mulI _dyncall"}, {"sha": "6cb9806ff2e930373904b88843c0bb7b219b630a", "filename": "libgcc/config/pa/t-linux64", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fpa%2Ft-linux64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fpa%2Ft-linux64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpa%2Ft-linux64?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -0,0 +1,4 @@\n+# Plug millicode routines into libgcc.a  We want these on both native and\n+# cross compiles.\n+# FIXME: Explain.\n+LIB1ASMFUNCS := $(filter-out _dyncall, $(LIB1ASMFUNCS))"}, {"sha": "d344170d248406c50fdbd2a0460eac26abaf3abd", "filename": "libgcc/config/picochip/lib1funcs.S", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fpicochip%2Flib1funcs.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fpicochip%2Flib1funcs.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpicochip%2Flib1funcs.S?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -0,0 +1,4 @@\n+// picoChip ASM file\n+// Fake libgcc asm file. This contains nothing, but is used to prevent gcc\n+// getting upset about the lack of a lib1funcs.S file when LIB1ASMFUNCS is\n+// defined to switch off the compilation of parts of libgcc."}, {"sha": "a596ec989472cbbf9d91073981a6d0bca8040194", "filename": "libgcc/config/picochip/t-picochip", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fpicochip%2Ft-picochip", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fpicochip%2Ft-picochip", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpicochip%2Ft-picochip?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -1,2 +1,9 @@\n+# Prevent some of the more complicated libgcc functions from being\n+# compiled.  This is because they are generally too big to fit into an\n+# AE anyway, so there is no point in having them.  Also, some don't\n+# compile properly so we'll ignore them for the moment.\n+LIB1ASMSRC = picochip/lib1funcs.S\n+LIB1ASMFUNCS = _mulsc3 _divsc3\n+\n # Turn off the building of exception handling libraries.\n LIB2ADDEH ="}, {"sha": "2f0ca16cd91937963a711b37930710552517b6d8", "filename": "libgcc/config/sh/lib1funcs.S", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fsh%2Flib1funcs.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fsh%2Flib1funcs.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsh%2Flib1funcs.S?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "previous_filename": "gcc/config/sh/lib1funcs.asm"}, {"sha": "af4b41cc31412d4336e9b3833dcf5673221d72da", "filename": "libgcc/config/sh/lib1funcs.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fsh%2Flib1funcs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fsh%2Flib1funcs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsh%2Flib1funcs.h?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "previous_filename": "gcc/config/sh/lib1funcs.h"}, {"sha": "9b1feacd1f319dabf0360fbf42ff48b37113e581", "filename": "libgcc/config/sh/t-linux", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fsh%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fsh%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsh%2Ft-linux?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -1,3 +1,5 @@\n+LIB1ASMFUNCS_CACHE = _ic_invalidate _ic_invalidate_array\n+\n HOST_LIBGCC2_CFLAGS = -fpic -mieee -DNO_FPSCR_VALUES\n \n # Override t-slibgcc-elf-ver to export some libgcc symbols with"}, {"sha": "663edbf4187319df6919f7d747a8fd92f720db98", "filename": "libgcc/config/sh/t-netbsd", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fsh%2Ft-netbsd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fsh%2Ft-netbsd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsh%2Ft-netbsd?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -0,0 +1 @@\n+LIB1ASMFUNCS_CACHE = _ic_invalidate"}, {"sha": "2319adbef1d0b1b8544e43cf3d54f7dc71d442ef", "filename": "libgcc/config/sh/t-sh", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fsh%2Ft-sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fsh%2Ft-sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsh%2Ft-sh?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -17,26 +17,33 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n+LIB1ASMSRC = sh/lib1funcs.S\n+LIB1ASMFUNCS = _ashiftrt _ashiftrt_n _ashiftlt _lshiftrt _movmem \\\n+  _movmem_i4 _mulsi3 _sdivsi3 _sdivsi3_i4 _udivsi3 _udivsi3_i4 _set_fpscr \\\n+  _div_table _udiv_qrnnd_16 \\\n+  $(LIB1ASMFUNCS_CACHE)\n+LIB1ASMFUNCS_CACHE = _ic_invalidate _ic_invalidate_array\n+\n crt1.o: $(srcdir)/config/sh/crt1.S\n \t$(gcc_compile) -c $<\n \n-ic_invalidate_array_4-100.o: $(gcc_srcdir)/config/sh/lib1funcs.asm\n+ic_invalidate_array_4-100.o: $(srcdir)/config/sh/lib1funcs.S\n \t$(gcc_compile) -c -DL_ic_invalidate_array -DWAYS=1 -DWAY_SIZE=0x2000 $<\n libic_invalidate_array_4-100.a: ic_invalidate_array_4-100.o\n \t$(AR_CREATE_FOR_TARGET) $@ $<\n \n-ic_invalidate_array_4-200.o: $(gcc_srcdir)/config/sh/lib1funcs.asm\n+ic_invalidate_array_4-200.o: $(srcdir)/config/sh/lib1funcs.S\n \t$(gcc_compile) -c -DL_ic_invalidate_array -DWAYS=2 -DWAY_SIZE=0x2000 $<\n libic_invalidate_array_4-200.a: ic_invalidate_array_4-200.o\n \t$(AR_CREATE_FOR_TARGET) $@ $<\n \n-ic_invalidate_array_4a.o: $(gcc_srcdir)/config/sh/lib1funcs.asm\n+ic_invalidate_array_4a.o: $(srcdir)/config/sh/lib1funcs.S\n \t$(gcc_compile) -c -DL_ic_invalidate_array -D__FORCE_SH4A__ $<\n libic_invalidate_array_4a.a: ic_invalidate_array_4a.o\n \t$(AR_CREATE_FOR_TARGET) $@ $<\n \n sdivsi3_i4i-Os-4-200.o: $(srcdir)/config/sh/lib1funcs-Os-4-200.S\n-\t$(gcc_compile) -c -DL_sdivsi3_i4i $<\n+\t$(compile) -c -DL_sdivsi3_i4i $<\n udivsi3_i4i-Os-4-200.o: $(srcdir)/config/sh/lib1funcs-Os-4-200.S\n \t$(gcc_compile) -c -DL_udivsi3_i4i $<\n unwind-dw2-Os-4-200.o: $(gcc_srcdir)/unwind-dw2.c"}, {"sha": "fa9950e03b2a8c359af957f206ce6dac8eb1c4a2", "filename": "libgcc/config/sh/t-sh64", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fsh%2Ft-sh64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fsh%2Ft-sh64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsh%2Ft-sh64?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -0,0 +1,6 @@\n+LIB1ASMFUNCS = \\\n+  _sdivsi3 _sdivsi3_i4 _udivsi3 _udivsi3_i4 _set_fpscr \\\n+  _shcompact_call_trampoline _shcompact_return_trampoline \\\n+  _shcompact_incoming_args _ic_invalidate _nested_trampoline \\\n+  _push_pop_shmedia_regs \\\n+  _udivdi3 _divdi3 _umoddi3 _moddi3 _div_table"}, {"sha": "b60bd5740e76bce5e8bfc2187b4ba2523a3500b9", "filename": "libgcc/config/sparc/lb1spc.S", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fsparc%2Flb1spc.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fsparc%2Flb1spc.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsparc%2Flb1spc.S?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "previous_filename": "gcc/config/sparc/lb1spc.asm"}, {"sha": "7142200600f461e1507890a17bc04f4134893b68", "filename": "libgcc/config/sparc/t-softmul", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fsparc%2Ft-softmul", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fsparc%2Ft-softmul", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsparc%2Ft-softmul?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -1,2 +1,2 @@\n-LIB1ASMSRC = sparc/lb1spc.asm\n+LIB1ASMSRC = sparc/lb1spc.S\n LIB1ASMFUNCS = _mulsi3 _divsi3 _modsi3"}, {"sha": "04e9b1e0ad4667a9ac21b1c858bb126faefbf5d4", "filename": "libgcc/config/v850/lib1funcs.S", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fv850%2Flib1funcs.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fv850%2Flib1funcs.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fv850%2Flib1funcs.S?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "previous_filename": "gcc/config/v850/lib1funcs.asm"}, {"sha": "b61703ace0971aa95009a00fcb853f9569ccef19", "filename": "libgcc/config/v850/t-v850", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fv850%2Ft-v850", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fv850%2Ft-v850", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fv850%2Ft-v850?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -0,0 +1,60 @@\n+LIB1ASMSRC = v850/lib1funcs.S\n+LIB1ASMFUNCS\t= _mulsi3 \\\n+\t\t  _divsi3 \\\n+\t\t  _udivsi3 \\\n+\t\t  _modsi3 \\\n+\t\t  _umodsi3 \\\n+\t\t  _save_2 \\\n+\t\t  _save_20 \\\n+\t\t  _save_21 \\\n+\t\t  _save_22 \\\n+\t\t  _save_23 \\\n+\t\t  _save_24 \\\n+\t\t  _save_25 \\\n+\t\t  _save_26 \\\n+\t\t  _save_27 \\\n+\t\t  _save_28 \\\n+\t\t  _save_29 \\\n+\t\t  _save_2c \\\n+\t\t  _save_20c \\\n+\t\t  _save_21c \\\n+\t\t  _save_22c \\\n+\t\t  _save_23c \\\n+\t\t  _save_24c \\\n+\t\t  _save_25c \\\n+\t\t  _save_26c \\\n+\t\t  _save_27c \\\n+\t\t  _save_28c \\\n+\t\t  _save_29c \\\n+\t\t  _save_31c \\\n+\t\t  _save_interrupt \\\n+\t\t  _save_all_interrupt \\\n+                  _callt_save_20 \\\n+\t\t  _callt_save_21 \\\n+\t\t  _callt_save_22 \\\n+\t\t  _callt_save_23 \\\n+\t\t  _callt_save_24 \\\n+\t\t  _callt_save_25 \\\n+\t\t  _callt_save_26 \\\n+\t\t  _callt_save_27 \\\n+\t\t  _callt_save_28 \\\n+\t\t  _callt_save_29 \\\n+\t\t  _callt_save_20c \\\n+\t\t  _callt_save_21c \\\n+\t\t  _callt_save_22c \\\n+\t\t  _callt_save_23c \\\n+\t\t  _callt_save_24c \\\n+\t\t  _callt_save_25c \\\n+\t\t  _callt_save_26c \\\n+\t\t  _callt_save_27c \\\n+\t\t  _callt_save_28c \\\n+\t\t  _callt_save_29c \\\n+\t\t  _callt_save_31c \\\n+\t\t  _callt_save_interrupt \\\n+\t\t  _callt_save_all_interrupt \\\n+\t\t  _callt_save_r2_r29 \\\n+\t\t  _callt_save_r2_r31 \\\n+\t\t  _negdi2 \\\n+\t\t  _cmpdi2 \\\n+\t\t  _ucmpdi2 \\\n+\t\t  _muldi3"}, {"sha": "1d57b56dad96eb6ce84de40ad29ad59bc33b9602", "filename": "libgcc/config/vax/lib1funcs.S", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fvax%2Flib1funcs.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fvax%2Flib1funcs.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fvax%2Flib1funcs.S?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "previous_filename": "gcc/config/vax/lib1funcs.asm"}, {"sha": "17929c8717c0f130a4d82165fe60cba806c72c82", "filename": "libgcc/config/vax/t-linux", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fvax%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fvax%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fvax%2Ft-linux?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -1,2 +1,2 @@\n-LIB1ASMSRC = vax/lib1funcs.asm\n+LIB1ASMSRC = vax/lib1funcs.S\n LIB1ASMFUNCS = _udivsi3 _umodsi3", "previous_filename": "gcc/config/vax/t-linux"}, {"sha": "9b46889bdc27aab1f7b8e1fcf5f4fb2ed2562e71", "filename": "libgcc/config/xtensa/ieee754-df.S", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fxtensa%2Fieee754-df.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fxtensa%2Fieee754-df.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fxtensa%2Fieee754-df.S?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "previous_filename": "gcc/config/xtensa/ieee754-df.S"}, {"sha": "d75be0e5ae55dbfb91bc50bf94578c012d237295", "filename": "libgcc/config/xtensa/ieee754-sf.S", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fxtensa%2Fieee754-sf.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fxtensa%2Fieee754-sf.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fxtensa%2Fieee754-sf.S?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "previous_filename": "gcc/config/xtensa/ieee754-sf.S"}, {"sha": "071b9171177c81e7638acc3eb4d1dee075b2386a", "filename": "libgcc/config/xtensa/lib1funcs.S", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fxtensa%2Flib1funcs.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fxtensa%2Flib1funcs.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fxtensa%2Flib1funcs.S?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "previous_filename": "gcc/config/xtensa/lib1funcs.asm"}, {"sha": "5bcc0946243767dd5f24238795dec831420a07f7", "filename": "libgcc/config/xtensa/t-xtensa", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fxtensa%2Ft-xtensa", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b86625d7edd2278c0cdcf335e007a47671813f/libgcc%2Fconfig%2Fxtensa%2Ft-xtensa", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fxtensa%2Ft-xtensa?ref=45b86625d7edd2278c0cdcf335e007a47671813f", "patch": "@@ -1,2 +1,14 @@\n+LIB1ASMSRC = xtensa/lib1funcs.S\n+LIB1ASMFUNCS = _mulsi3 _divsi3 _modsi3 _udivsi3 _umodsi3 \\\n+\t_umulsidi3 _clz _clzsi2 _ctzsi2 _ffssi2 \\\n+\t_ashldi3 _ashrdi3 _lshrdi3 \\\n+\t_negsf2 _addsubsf3 _mulsf3 _divsf3 _cmpsf2 _fixsfsi _fixsfdi \\\n+\t_fixunssfsi _fixunssfdi _floatsisf _floatunsisf \\\n+\t_floatdisf _floatundisf \\\n+\t_negdf2 _addsubdf3 _muldf3 _divdf3 _cmpdf2 _fixdfsi _fixdfdi \\\n+\t_fixunsdfsi _fixunsdfdi _floatsidf _floatunsidf \\\n+\t_floatdidf _floatundidf \\\n+\t_truncdfsf2 _extendsfdf2\n+\n LIB2ADDEH = $(srcdir)/config/xtensa/unwind-dw2-xtensa.c \\\n    $(srcdir)/unwind-dw2-fde.c $(srcdir)/unwind-sjlj.c $(srcdir)/unwind-c.c"}]}