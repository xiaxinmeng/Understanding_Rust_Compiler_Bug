{"sha": "7fe6bc1ba1a8d296262e1e06ac067190c8ab3ebb", "node_id": "C_kwDOANBUbNoAKDdmZTZiYzFiYTFhOGQyOTYyNjJlMWUwNmFjMDY3MTkwYzhhYjNlYmI", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-04-28T13:42:15Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-04-28T13:43:08Z"}, "message": "Add an assertion to avoid peeking when the stack is empty", "tree": {"sha": "c50e88cbab503b66d537b7450f9dde9d69a6ace3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c50e88cbab503b66d537b7450f9dde9d69a6ace3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7fe6bc1ba1a8d296262e1e06ac067190c8ab3ebb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fe6bc1ba1a8d296262e1e06ac067190c8ab3ebb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fe6bc1ba1a8d296262e1e06ac067190c8ab3ebb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fe6bc1ba1a8d296262e1e06ac067190c8ab3ebb/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ada076b9324982fd6f49aea6456e99613e394a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ada076b9324982fd6f49aea6456e99613e394a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ada076b9324982fd6f49aea6456e99613e394a8"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "d17034b51df78ce53a69fdc4a1cd2a03119f9f19", "filename": "gcc/rust/backend/rust-compile-context.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fe6bc1ba1a8d296262e1e06ac067190c8ab3ebb/gcc%2Frust%2Fbackend%2Frust-compile-context.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fe6bc1ba1a8d296262e1e06ac067190c8ab3ebb/gcc%2Frust%2Fbackend%2Frust-compile-context.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-context.h?ref=7fe6bc1ba1a8d296262e1e06ac067190c8ab3ebb", "patch": "@@ -254,7 +254,11 @@ class Context\n   bool in_fn () { return fn_stack.size () != 0; }\n \n   // Note: it is undefined behavior to call peek_fn () if fn_stack is empty.\n-  fncontext peek_fn () { return fn_stack.back (); }\n+  fncontext peek_fn ()\n+  {\n+    rust_assert (!fn_stack.empty ());\n+    return fn_stack.back ();\n+  }\n \n   void push_type (tree t) { type_decls.push_back (t); }\n   void push_var (::Bvariable *v) { var_decls.push_back (v); }"}]}