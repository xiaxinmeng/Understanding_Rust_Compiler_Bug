{"sha": "08934aed39a38858e45af891cf75e02867ee040a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg5MzRhZWQzOWEzODg1OGU0NWFmODkxY2Y3NWUwMjg2N2VlMDQwYQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-01-06T16:04:01Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-01-06T16:04:01Z"}, "message": "re PR go/78978 (runtime/pprof FAILs on Solaris 2/x86)\n\n\tPR go/78978\n    libgo: build with -Wa,-nH if possible on Solaris\n    \n    By default the Solaris assembler records the required hardware\n    capability in the object file.  This means that the AES hashing code\n    breaks on systems that do not support AES, even though the code uses a\n    runtime check to only actually invoke the AES instructions on systems\n    that support it.  An earlier fix for the problem only fixed the shared\n    library, not the static libgo.a.  Fix the problem for real by using an\n    assembler option to not record the hardware capability.\n    \n    For GCC PR 78978.\n    \n    Patch by Rainer Orth.\n    \n    Reviewed-on: https://go-review.googlesource.com/34910\n\nFrom-SVN: r244165", "tree": {"sha": "10d4a7092944ea178088d808d553d35c8b6effe1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10d4a7092944ea178088d808d553d35c8b6effe1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08934aed39a38858e45af891cf75e02867ee040a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08934aed39a38858e45af891cf75e02867ee040a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08934aed39a38858e45af891cf75e02867ee040a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08934aed39a38858e45af891cf75e02867ee040a/comments", "author": null, "committer": null, "parents": [{"sha": "8a123229ae34a3e81811e54341d629712f16ac1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a123229ae34a3e81811e54341d629712f16ac1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a123229ae34a3e81811e54341d629712f16ac1a"}], "stats": {"total": 88, "additions": 37, "deletions": 51}, "files": [{"sha": "d42c54072a88c5dbdf00d77fa1088b6bbbb69927", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08934aed39a38858e45af891cf75e02867ee040a/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08934aed39a38858e45af891cf75e02867ee040a/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=08934aed39a38858e45af891cf75e02867ee040a", "patch": "@@ -1,4 +1,4 @@\n-dfe446c5a54ca0febabb81b542cc4e634c6f5c30\n+eef0fb3b092dc22d9830cac15a536760da5d033a\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "93eaa9f2046b0f95390434bdf41a2de43625a1a2", "filename": "libgo/Makefile.am", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08934aed39a38858e45af891cf75e02867ee040a/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08934aed39a38858e45af891cf75e02867ee040a/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=08934aed39a38858e45af891cf75e02867ee040a", "patch": "@@ -42,14 +42,12 @@ ACLOCAL_AMFLAGS = -I ./config -I ../config\n \n AM_CFLAGS = -fexceptions -fnon-call-exceptions -fplan9-extensions \\\n \t$(SPLIT_STACK) $(WARN_CFLAGS) \\\n-\t$(STRINGOPS_FLAG) $(OSCFLAGS) \\\n+\t$(STRINGOPS_FLAG) $(HWCAP_CFLAGS) $(OSCFLAGS) \\\n \t-I $(srcdir)/../libgcc -I $(srcdir)/../libbacktrace \\\n \t-I $(MULTIBUILDTOP)../../gcc/include\n \n-AM_LDFLAGS = $(HWCAP_LDFLAGS)\n-\n if USING_SPLIT_STACK\n-AM_LDFLAGS += -XCClinker $(SPLIT_STACK)\n+AM_LDFLAGS = -XCClinker $(SPLIT_STACK)\n endif\n \n # Multilib support."}, {"sha": "424e41b6333d38b87da63b0ffaf913d1d639f982", "filename": "libgo/Makefile.in", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08934aed39a38858e45af891cf75e02867ee040a/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08934aed39a38858e45af891cf75e02867ee040a/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=08934aed39a38858e45af891cf75e02867ee040a", "patch": "@@ -62,9 +62,8 @@ POST_UNINSTALL = :\n build_triplet = @build@\n host_triplet = @host@\n target_triplet = @target@\n-@USING_SPLIT_STACK_TRUE@am__append_1 = -XCClinker $(SPLIT_STACK)\n-@GOC_IS_LLGO_TRUE@am__append_2 = libgo-llgo.la libgobegin-llgo.a\n-@GOC_IS_LLGO_FALSE@am__append_3 = libgo.la libgobegin.a\n+@GOC_IS_LLGO_TRUE@am__append_1 = libgo-llgo.la libgobegin-llgo.a\n+@GOC_IS_LLGO_FALSE@am__append_2 = libgo.la libgobegin.a\n subdir = .\n DIST_COMMON = README $(srcdir)/Makefile.in $(srcdir)/Makefile.am \\\n \t$(top_srcdir)/configure $(am__configure_deps) \\\n@@ -321,7 +320,7 @@ GO_SPLIT_STACK = @GO_SPLIT_STACK@\n GO_SYSCALL_OS_ARCH_FILE = @GO_SYSCALL_OS_ARCH_FILE@\n GO_SYSCALL_OS_FILE = @GO_SYSCALL_OS_FILE@\n GREP = @GREP@\n-HWCAP_LDFLAGS = @HWCAP_LDFLAGS@\n+HWCAP_CFLAGS = @HWCAP_CFLAGS@\n INSTALL = @INSTALL@\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n@@ -459,11 +458,11 @@ AM_CPPFLAGS = -I $(srcdir)/runtime $(LIBFFIINCS) $(PTHREAD_CFLAGS)\n ACLOCAL_AMFLAGS = -I ./config -I ../config\n AM_CFLAGS = -fexceptions -fnon-call-exceptions -fplan9-extensions \\\n \t$(SPLIT_STACK) $(WARN_CFLAGS) \\\n-\t$(STRINGOPS_FLAG) $(OSCFLAGS) \\\n+\t$(STRINGOPS_FLAG) $(HWCAP_CFLAGS) $(OSCFLAGS) \\\n \t-I $(srcdir)/../libgcc -I $(srcdir)/../libbacktrace \\\n \t-I $(MULTIBUILDTOP)../../gcc/include\n \n-AM_LDFLAGS = $(HWCAP_LDFLAGS) $(am__append_1)\n+@USING_SPLIT_STACK_TRUE@AM_LDFLAGS = -XCClinker $(SPLIT_STACK)\n \n # Multilib support.\n MAKEOVERRIDES = \n@@ -1120,7 +1119,7 @@ CHECK_DEPS = $(toolexeclibgo_DATA) $(toolexeclibgoarchive_DATA) \\\n \t$(toolexeclibgorpc_DATA) $(toolexeclibgoruntime_DATA) \\\n \t$(toolexeclibgosync_DATA) $(toolexeclibgotesting_DATA) \\\n \t$(toolexeclibgotext_DATA) $(toolexeclibgotexttemplate_DATA) \\\n-\t$(toolexeclibgounicode_DATA) $(am__append_2) $(am__append_3)\n+\t$(toolexeclibgounicode_DATA) $(am__append_1) $(am__append_2)\n \n # Pass -ffp-contract=off, or 386-specific options, when building the\n # math package.  MATH_FLAG is defined in configure.ac."}, {"sha": "06532d3089156989030244ed66abc6c2d4359637", "filename": "libgo/configure", "status": "modified", "additions": 25, "deletions": 36, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08934aed39a38858e45af891cf75e02867ee040a/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08934aed39a38858e45af891cf75e02867ee040a/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=08934aed39a38858e45af891cf75e02867ee040a", "patch": "@@ -624,9 +624,7 @@ GO_SPLIT_STACK\n USING_SPLIT_STACK_FALSE\n USING_SPLIT_STACK_TRUE\n SPLIT_STACK\n-HAVE_HWCAP_FALSE\n-HAVE_HWCAP_TRUE\n-HWCAP_LDFLAGS\n+HWCAP_CFLAGS\n OSCFLAGS\n GO_SYSCALL_OS_ARCH_FILE\n GO_SYSCALL_OS_FILE\n@@ -11106,7 +11104,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11109 \"configure\"\n+#line 11107 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11212,7 +11210,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11215 \"configure\"\n+#line 11213 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13912,15 +13910,18 @@ esac\n \n \n \n-  test -z \"$HWCAP_LDFLAGS\" && HWCAP_LDFLAGS=''\n+  test -z \"$HWCAP_CFLAGS\" && HWCAP_CFLAGS=''\n \n+  # Restrict the test to Solaris, other assemblers (e.g. AIX as) have -nH\n+  # with a different meaning.\n+  case ${target_os} in\n+    solaris2*)\n+      ac_save_CFLAGS=\"$CFLAGS\"\n+      CFLAGS=\"$CFLAGS -Wa,-nH\"\n \n-  ac_save_LDFLAGS=\"$LDFLAGS\"\n-  LDFLAGS=\"$LFLAGS -mclear-hwcap\"\n-\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -mclear-hwcap\" >&5\n-$as_echo_n \"checking for -mclear-hwcap... \" >&6; }\n-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for as that supports -Wa,-nH\" >&5\n+$as_echo_n \"checking for as that supports -Wa,-nH... \" >&6; }\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n int\n@@ -13931,31 +13932,23 @@ return 0;\n   return 0;\n }\n _ACEOF\n-if ac_fn_c_try_link \"$LINENO\"; then :\n-  ac_hwcap_ldflags=yes\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  ac_hwcap_flags=yes\n else\n-  ac_hwcap_ldflags=no\n+  ac_hwcap_flags=no\n fi\n-rm -f core conftest.err conftest.$ac_objext \\\n-    conftest$ac_exeext conftest.$ac_ext\n-  if test \"$ac_hwcap_ldflags\" = \"yes\"; then\n-    HWCAP_LDFLAGS=\"-mclear-hwcap $HWCAP_LDFLAGS\"\n-  fi\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_hwcap_ldflags\" >&5\n-$as_echo \"$ac_hwcap_ldflags\" >&6; }\n-\n-  LDFLAGS=\"$ac_save_LDFLAGS\"\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+      if test \"$ac_hwcap_flags\" = \"yes\"; then\n+\tHWCAP_CFLAGS=\"-Wa,-nH $HWCAP_CFLAGS\"\n+      fi\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_hwcap_flags\" >&5\n+$as_echo \"$ac_hwcap_flags\" >&6; }\n \n+      CFLAGS=\"$ac_save_CFLAGS\"\n+      ;;\n+  esac\n \n \n-   if test $ac_hwcap_ldflags != no; then\n-  HAVE_HWCAP_TRUE=\n-  HAVE_HWCAP_FALSE='#'\n-else\n-  HAVE_HWCAP_TRUE='#'\n-  HAVE_HWCAP_FALSE=\n-fi\n-\n \n \n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether -fsplit-stack is supported\" >&5\n@@ -15764,10 +15757,6 @@ if test -z \"${LIBGO_IS_BSD_TRUE}\" && test -z \"${LIBGO_IS_BSD_FALSE}\"; then\n   as_fn_error \"conditional \\\"LIBGO_IS_BSD\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n-if test -z \"${HAVE_HWCAP_TRUE}\" && test -z \"${HAVE_HWCAP_FALSE}\"; then\n-  as_fn_error \"conditional \\\"HAVE_HWCAP\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n-fi\n if test -z \"${USING_SPLIT_STACK_TRUE}\" && test -z \"${USING_SPLIT_STACK_FALSE}\"; then\n   as_fn_error \"conditional \\\"USING_SPLIT_STACK\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5"}, {"sha": "6deafda68f14de5b4e5d5abe9284ac0a1a116b05", "filename": "libgo/configure.ac", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08934aed39a38858e45af891cf75e02867ee040a/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08934aed39a38858e45af891cf75e02867ee040a/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=08934aed39a38858e45af891cf75e02867ee040a", "patch": "@@ -421,8 +421,8 @@ case \"$target\" in\n esac\n AC_SUBST(OSCFLAGS)\n \n-dnl Check linker hardware capability support.\n-GCC_CHECK_LINKER_HWCAP\n+dnl Check if assembler supports disabling hardware capability support.\n+GCC_CHECK_ASSEMBLER_HWCAP\n \n dnl Use -fsplit-stack when compiling C code if available.\n AC_CACHE_CHECK([whether -fsplit-stack is supported],"}, {"sha": "79da1c91ff6901e57d9befef535938e9b198a333", "filename": "libgo/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08934aed39a38858e45af891cf75e02867ee040a/libgo%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08934aed39a38858e45af891cf75e02867ee040a/libgo%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Ftestsuite%2FMakefile.in?ref=08934aed39a38858e45af891cf75e02867ee040a", "patch": "@@ -124,7 +124,7 @@ GO_SPLIT_STACK = @GO_SPLIT_STACK@\n GO_SYSCALL_OS_ARCH_FILE = @GO_SYSCALL_OS_ARCH_FILE@\n GO_SYSCALL_OS_FILE = @GO_SYSCALL_OS_FILE@\n GREP = @GREP@\n-HWCAP_LDFLAGS = @HWCAP_LDFLAGS@\n+HWCAP_CFLAGS = @HWCAP_CFLAGS@\n INSTALL = @INSTALL@\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@"}]}