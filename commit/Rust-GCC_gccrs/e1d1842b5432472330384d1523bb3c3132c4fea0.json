{"sha": "e1d1842b5432472330384d1523bb3c3132c4fea0", "node_id": "C_kwDOANBUbNoAKGUxZDE4NDJiNTQzMjQ3MjMzMDM4NGQxNTIzYmIzYzMxMzJjNGZlYTA", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-10-07T08:22:24Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-10-07T08:22:24Z"}, "message": "fix clang warnings\n\nFixes:\n\ngcc/c-family/name-hint.h:109:66: warning: unqualified call to 'std::move' [-Wunqualified-std-cast-call]\ngcc/config/i386/i386-expand.cc:1351:9: warning: argument 'operands' of type 'rtx[3]' (aka 'rtx_def *[3]') with mismatched bound [-Warray-parameter]\ngcc/config/i386/i386.cc:15635:8: warning: argument 'operands' of type 'rtx[2]' (aka 'rtx_def *[2]') with mismatched bound [-Warray-parameter]\ngcc/cp/module.cc:17482:51: warning: argument 'counts' of type 'unsigned int[8]' with mismatched bound [-Warray-parameter]\ngcc/cp/module.cc:17508:37: warning: argument 'counts' of type 'unsigned int[8]' with mismatched bound [-Warray-parameter]\ngcc/cp/name-lookup.cc:6385:16: warning: unqualified call to 'std::move' [-Wunqualified-std-cast-call]\n\ngcc/c-family/ChangeLog:\n\n\t* name-hint.h: Use std::move.\n\ngcc/ChangeLog:\n\n\t* config/i386/i386-protos.h (ix86_binary_operator_ok): Add array\n\t  size to function parameter.\n\t(ix86_unary_operator_ok): Likewise.\n\ngcc/cp/ChangeLog:\n\n\t* module.cc (enum module_state_counts): Use array size.\n\t* name-lookup.cc (class namespace_limit_reached): Likewise.\n\t(class module_state): Move up in the file.", "tree": {"sha": "5aca250d577366471d12bf8d8501157d8c0876ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5aca250d577366471d12bf8d8501157d8c0876ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1d1842b5432472330384d1523bb3c3132c4fea0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1d1842b5432472330384d1523bb3c3132c4fea0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1d1842b5432472330384d1523bb3c3132c4fea0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1d1842b5432472330384d1523bb3c3132c4fea0/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd0e35188f2a40a428314ad10e10ab5b0926f935", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd0e35188f2a40a428314ad10e10ab5b0926f935", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd0e35188f2a40a428314ad10e10ab5b0926f935"}], "stats": {"total": 40, "additions": 20, "deletions": 20}, "files": [{"sha": "98392ce51c2e39509473c8c3484b30769f52f6bf", "filename": "gcc/c-family/name-hint.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1d1842b5432472330384d1523bb3c3132c4fea0/gcc%2Fc-family%2Fname-hint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1d1842b5432472330384d1523bb3c3132c4fea0/gcc%2Fc-family%2Fname-hint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fname-hint.h?ref=e1d1842b5432472330384d1523bb3c3132c4fea0", "patch": "@@ -106,7 +106,7 @@ class name_hint\n \n   /* Take ownership of this name_hint's deferred_diagnostic, for use\n      in chaining up deferred diagnostics.  */\n-  std::unique_ptr<deferred_diagnostic> take_deferred () { return move (m_deferred); }\n+  std::unique_ptr<deferred_diagnostic> take_deferred () { return std::move (m_deferred); }\n \n   /* Call this on a name_hint if the corresponding warning was not emitted,\n      in which case we should also not emit the deferred_diagnostic.  */"}, {"sha": "5318fc7fddfe7b7b36cca4490793f6f06ef10bb5", "filename": "gcc/config/i386/i386-protos.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1d1842b5432472330384d1523bb3c3132c4fea0/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1d1842b5432472330384d1523bb3c3132c4fea0/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-protos.h?ref=e1d1842b5432472330384d1523bb3c3132c4fea0", "patch": "@@ -109,7 +109,7 @@ extern void ix86_expand_binary_operator (enum rtx_code,\n \t\t\t\t\t machine_mode, rtx[]);\n extern void ix86_expand_vector_logical_operator (enum rtx_code,\n \t\t\t\t\t\t machine_mode, rtx[]);\n-extern bool ix86_binary_operator_ok (enum rtx_code, machine_mode, rtx[]);\n+extern bool ix86_binary_operator_ok (enum rtx_code, machine_mode, rtx[3]);\n extern bool ix86_avoid_lea_for_add (rtx_insn *, rtx[]);\n extern bool ix86_use_lea_for_mov (rtx_insn *, rtx[]);\n extern bool ix86_avoid_lea_for_addr (rtx_insn *, rtx[]);\n@@ -140,7 +140,7 @@ extern void ix86_split_fp_absneg_operator (enum rtx_code, machine_mode,\n \t\t\t\t\t   rtx[]);\n extern void ix86_expand_copysign (rtx []);\n extern void ix86_expand_xorsign (rtx []);\n-extern bool ix86_unary_operator_ok (enum rtx_code, machine_mode, rtx[]);\n+extern bool ix86_unary_operator_ok (enum rtx_code, machine_mode, rtx[2]);\n extern bool ix86_match_ccmode (rtx, machine_mode);\n extern void ix86_expand_branch (enum rtx_code, rtx, rtx, rtx);\n extern void ix86_expand_setcc (rtx, enum rtx_code, rtx, rtx);"}, {"sha": "c5eff2199095f265fdccfb541ef45d7e4cfc4b4f", "filename": "gcc/cp/module.cc", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1d1842b5432472330384d1523bb3c3132c4fea0/gcc%2Fcp%2Fmodule.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1d1842b5432472330384d1523bb3c3132c4fea0/gcc%2Fcp%2Fmodule.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmodule.cc?ref=e1d1842b5432472330384d1523bb3c3132c4fea0", "patch": "@@ -3469,6 +3469,20 @@ enum streamed_extensions {\n   SE_BITS = 1\n };\n \n+/* Counter indices.  */\n+enum module_state_counts\n+{\n+  MSC_sec_lwm,\n+  MSC_sec_hwm,\n+  MSC_pendings,\n+  MSC_entities,\n+  MSC_namespaces,\n+  MSC_bindings,\n+  MSC_macros,\n+  MSC_inits,\n+  MSC_HWM\n+};\n+\n /********************************************************************/\n struct module_state_config;\n \n@@ -3666,8 +3680,8 @@ class GTY((chain_next (\"%h.parent\"), for_user)) module_state {\n  private:\n   void write_config (elf_out *to, struct module_state_config &, unsigned crc);\n   bool read_config (struct module_state_config &);\n-  static void write_counts (elf_out *to, unsigned [], unsigned *crc_ptr);\n-  bool read_counts (unsigned []);\n+  static void write_counts (elf_out *to, unsigned [MSC_HWM], unsigned *crc_ptr);\n+  bool read_counts (unsigned *);\n \n  public:\n   void note_cmi_name ();\n@@ -14541,20 +14555,6 @@ module_state::read_partitions (unsigned count)\n   return true;\n }\n \n-/* Counter indices.  */\n-enum module_state_counts\n-{\n-  MSC_sec_lwm,\n-  MSC_sec_hwm,\n-  MSC_pendings,\n-  MSC_entities,\n-  MSC_namespaces,\n-  MSC_bindings,\n-  MSC_macros,\n-  MSC_inits,\n-  MSC_HWM\n-};\n-\n /* Data for config reading and writing.  */\n struct module_state_config {\n   const char *dialect_str;"}, {"sha": "25657cfd4c655c6d35393499e5f955f4aecff4e0", "filename": "gcc/cp/name-lookup.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1d1842b5432472330384d1523bb3c3132c4fea0/gcc%2Fcp%2Fname-lookup.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1d1842b5432472330384d1523bb3c3132c4fea0/gcc%2Fcp%2Fname-lookup.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.cc?ref=e1d1842b5432472330384d1523bb3c3132c4fea0", "patch": "@@ -6382,7 +6382,7 @@ class namespace_limit_reached : public deferred_diagnostic\n \t\t\t   std::unique_ptr<deferred_diagnostic> wrapped)\n   : deferred_diagnostic (loc),\n     m_limit (limit), m_name (name),\n-    m_wrapped (move (wrapped))\n+    m_wrapped (std::move (wrapped))\n   {\n   }\n "}]}