{"sha": "c73d295c48fd246c2fd85827ab798e894f600033", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzczZDI5NWM0OGZkMjQ2YzJmZDg1ODI3YWI3OThlODk0ZjYwMDAzMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-03-16T17:52:20Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-03-16T17:52:20Z"}, "message": "re PR middle-end/70245 (Miscompilation of ICU on i386 with atom tuning starting with r227382)\n\n\tPR target/70245\n\t* rtlanal.c (replace_rtx): For REG, if from is a REG,\n\treturn to even if only REGNO is equal, and assert\n\tmode is the same.\n\n\t* g++.dg/opt/pr70245.C: New test.\n\t* g++.dg/opt/pr70245.h: New file.\n\t* g++.dg/opt/pr70245-aux.cc: New file.\n\nCo-Authored-By: Richard Biener <rguenther@suse.de>\n\nFrom-SVN: r234265", "tree": {"sha": "0708e09e5edd3bef4be596c6056156cb9c994023", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0708e09e5edd3bef4be596c6056156cb9c994023"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c73d295c48fd246c2fd85827ab798e894f600033", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c73d295c48fd246c2fd85827ab798e894f600033", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c73d295c48fd246c2fd85827ab798e894f600033", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c73d295c48fd246c2fd85827ab798e894f600033/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b2794066f3691f020a0fa096c4bab76fe94d7957", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2794066f3691f020a0fa096c4bab76fe94d7957", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2794066f3691f020a0fa096c4bab76fe94d7957"}], "stats": {"total": 148, "additions": 147, "deletions": 1}, "files": [{"sha": "ab80ce4120a8d98c529570c215e452a756c0dbdf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c73d295c48fd246c2fd85827ab798e894f600033/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c73d295c48fd246c2fd85827ab798e894f600033/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c73d295c48fd246c2fd85827ab798e894f600033", "patch": "@@ -1,3 +1,11 @@\n+2016-03-16  Jakub Jelinek  <jakub@redhat.com>\n+\t    Richard Biener  <rguenth@suse.de>\n+\n+\tPR target/70245\n+\t* rtlanal.c (replace_rtx): For REG, if from is a REG,\n+\treturn to even if only REGNO is equal, and assert\n+\tmode is the same.\n+\n 2016-03-11  Jeff Law  <law@redhat.com>\n \n \tPR rtl-optimization/70224"}, {"sha": "74b593d6935fca944704842efb210ddb3440dfeb", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c73d295c48fd246c2fd85827ab798e894f600033/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c73d295c48fd246c2fd85827ab798e894f600033/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=c73d295c48fd246c2fd85827ab798e894f600033", "patch": "@@ -2961,7 +2961,16 @@ replace_rtx (rtx x, rtx from, rtx to)\n   if (x == 0)\n     return 0;\n \n-  if (GET_CODE (x) == SUBREG)\n+  if (GET_CODE (x) == REG)\n+    {\n+      if (GET_CODE (from) == REG\n+\t  && REGNO (x) == REGNO (from))\n+\t{\n+\t  gcc_assert (GET_MODE (x) == GET_MODE (from));\n+\t  return to;\n+\t}\n+    }\n+  else if (GET_CODE (x) == SUBREG)\n     {\n       rtx new_rtx = replace_rtx (SUBREG_REG (x), from, to);\n "}, {"sha": "a215b0ca51958a8740ce83421dc0c9db118e7abf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c73d295c48fd246c2fd85827ab798e894f600033/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c73d295c48fd246c2fd85827ab798e894f600033/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c73d295c48fd246c2fd85827ab798e894f600033", "patch": "@@ -1,3 +1,10 @@\n+2016-03-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/70245\n+\t* g++.dg/opt/pr70245.C: New test.\n+\t* g++.dg/opt/pr70245.h: New file.\n+\t* g++.dg/opt/pr70245-aux.cc: New file.\n+\n 2016-03-16  Martin Sebor  <msebor@redhat.com>\n \n \t* g++.dg/cpp1y/constexpr-instantiate.C: Correct DejaGnu directives."}, {"sha": "7f65f20174f3df0cbb6c006f5b8c0da4a87fc0bc", "filename": "gcc/testsuite/g++.dg/opt/pr70245-aux.cc", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c73d295c48fd246c2fd85827ab798e894f600033/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr70245-aux.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c73d295c48fd246c2fd85827ab798e894f600033/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr70245-aux.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr70245-aux.cc?ref=c73d295c48fd246c2fd85827ab798e894f600033", "patch": "@@ -0,0 +1,56 @@\n+// PR target/70245\n+// { dg-do compile }\n+// { dg-options \"\" }\n+\n+#include \"pr70245.h\"\n+\n+D m;\n+A n, o;\n+int p, q;\n+\n+int *\n+fn1 (char *x, int *y)\n+{\n+  *y = 0;\n+  return &p;\n+}\n+\n+void\n+fn2 ()\n+{\n+  __builtin_abort ();\n+}\n+\n+void *\n+fn3 (int *x)\n+{\n+  *x = 0;\n+  return (void *) &m;\n+}\n+\n+void *\n+fn4 ()\n+{\n+  a = &o;\n+  o.a1.d = 9;\n+  m.d = sizeof (D);\n+  __builtin_memcpy (o.a2.c, \"abcdefghijklmnop\", 16);\n+  return (void *) &n;\n+}\n+\n+void\n+fn5 (A *x, B *y, unsigned char *z, int *w)\n+{\n+  if (x != &n || y != &k || z != (unsigned char *) (&m + 1))\n+    __builtin_abort ();\n+  q++;\n+}\n+\n+int\n+main ()\n+{\n+  d = fn5;\n+  baz (0);\n+  if (q != 1)\n+    __builtin_abort ();\n+}"}, {"sha": "21280b7aaf51e11402cd1d1c22177c3577c63745", "filename": "gcc/testsuite/g++.dg/opt/pr70245.C", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c73d295c48fd246c2fd85827ab798e894f600033/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr70245.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c73d295c48fd246c2fd85827ab798e894f600033/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr70245.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr70245.C?ref=c73d295c48fd246c2fd85827ab798e894f600033", "patch": "@@ -0,0 +1,52 @@\n+// PR target/70245\n+// { dg-do run }\n+// { dg-additional-sources \"pr70245-aux.cc\" }\n+// { dg-options \"-O2\" }\n+// { dg-additional-options \"-fPIC\" { target fpic } }\n+// { dg-additional-options \"-march=i386 -mtune=atom\" { target ia32 } }\n+\n+#include \"pr70245.h\"\n+\n+struct A *a, *i;\n+int b, c, e, l;\n+F d;\n+\n+static A *\n+foo (B *x, int *y, int *z)\n+{\n+  unsigned char *f = (unsigned char *) fn3 (y);\n+  D *g = (D *) f;\n+  A *h;\n+  if (e || a || c || b || g->d)\n+    return 0;\n+  h = (A *) fn4 ();\n+  __builtin_memcpy (h, a, sizeof (A));\n+  h->a1 = *(D *) f;\n+  if (d)\n+    {\n+      d (h, x, f + g->d, z);\n+      if (*z)\n+\tfn2 ();\n+    }\n+  return h;\n+}\n+\n+static A *\n+bar (B *x, int *y)\n+{\n+  int *j = fn1 (x->b, y);\n+  if (*y > 0)\n+    return 0;\n+  i = foo (x, j, y);\n+  return i;\n+}\n+\n+B k;\n+\n+void\n+baz (int x)\n+{\n+  if (x)\n+    bar (0, 0);\n+  bar (&k, &l);\n+}"}, {"sha": "b0c540647255791857681d1a4abac8fab422cd67", "filename": "gcc/testsuite/g++.dg/opt/pr70245.h", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c73d295c48fd246c2fd85827ab798e894f600033/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr70245.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c73d295c48fd246c2fd85827ab798e894f600033/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr70245.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr70245.h?ref=c73d295c48fd246c2fd85827ab798e894f600033", "patch": "@@ -0,0 +1,14 @@\n+extern struct A *a, *i;\n+extern int b, c, e, l;\n+int *fn1 (char *, int *);\n+void fn2 ();\n+void *fn3 (int *);\n+struct B { char *b; };\n+typedef void (*F) (A *, B *, unsigned char *, int *);\n+struct C { int c[16]; };\n+struct D { int d; };\n+struct A { D a1; C a2; };\n+void *fn4 ();\n+extern F d;\n+extern B k;\n+extern void baz (int);"}]}