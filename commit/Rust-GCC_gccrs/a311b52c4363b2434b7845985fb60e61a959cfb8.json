{"sha": "a311b52c4363b2434b7845985fb60e61a959cfb8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTMxMWI1MmM0MzYzYjI0MzRiNzg0NTk4NWZiNjBlNjFhOTU5Y2ZiOA==", "commit": {"author": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1995-01-31T00:40:42Z"}, "committer": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1995-01-31T00:40:42Z"}, "message": "(type_for_*): Check integer_type_node first.\n\nFrom-SVN: r8840", "tree": {"sha": "ea4b73686a6064ed81be0d4d95525e4a465a15f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea4b73686a6064ed81be0d4d95525e4a465a15f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a311b52c4363b2434b7845985fb60e61a959cfb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a311b52c4363b2434b7845985fb60e61a959cfb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a311b52c4363b2434b7845985fb60e61a959cfb8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a311b52c4363b2434b7845985fb60e61a959cfb8/comments", "author": null, "committer": null, "parents": [{"sha": "2458b9c0940deccc2be82309e59d38a8623d0f2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2458b9c0940deccc2be82309e59d38a8623d0f2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2458b9c0940deccc2be82309e59d38a8623d0f2e"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "f7cbabec6fd0fed2ff8124618eea61f2b434da30", "filename": "gcc/c-common.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a311b52c4363b2434b7845985fb60e61a959cfb8/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a311b52c4363b2434b7845985fb60e61a959cfb8/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=a311b52c4363b2434b7845985fb60e61a959cfb8", "patch": "@@ -1331,15 +1331,15 @@ type_for_size (bits, unsignedp)\n      unsigned bits;\n      int unsignedp;\n {\n+  if (bits == TYPE_PRECISION (integer_type_node))\n+    return unsignedp ? unsigned_type_node : integer_type_node;\n+\n   if (bits == TYPE_PRECISION (signed_char_type_node))\n     return unsignedp ? unsigned_char_type_node : signed_char_type_node;\n \n   if (bits == TYPE_PRECISION (short_integer_type_node))\n     return unsignedp ? short_unsigned_type_node : short_integer_type_node;\n \n-  if (bits == TYPE_PRECISION (integer_type_node))\n-    return unsignedp ? unsigned_type_node : integer_type_node;\n-\n   if (bits == TYPE_PRECISION (long_integer_type_node))\n     return unsignedp ? long_unsigned_type_node : long_integer_type_node;\n \n@@ -1371,15 +1371,15 @@ type_for_mode (mode, unsignedp)\n      enum machine_mode mode;\n      int unsignedp;\n {\n+  if (mode == TYPE_MODE (integer_type_node))\n+    return unsignedp ? unsigned_type_node : integer_type_node;\n+\n   if (mode == TYPE_MODE (signed_char_type_node))\n     return unsignedp ? unsigned_char_type_node : signed_char_type_node;\n \n   if (mode == TYPE_MODE (short_integer_type_node))\n     return unsignedp ? short_unsigned_type_node : short_integer_type_node;\n \n-  if (mode == TYPE_MODE (integer_type_node))\n-    return unsignedp ? unsigned_type_node : integer_type_node;\n-\n   if (mode == TYPE_MODE (long_integer_type_node))\n     return unsignedp ? long_unsigned_type_node : long_integer_type_node;\n "}]}