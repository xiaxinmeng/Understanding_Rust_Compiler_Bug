{"sha": "aa4b71172e97ace10387de90ac6aee72381dc6f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE0YjcxMTcyZTk3YWNlMTAzODdkZTkwYWM2YWVlNzIzODFkYzZmMA==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2006-01-13T16:00:13Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2006-01-13T16:00:13Z"}, "message": "re PR tree-optimization/25771 (ice in coalesce_abnormal_edges, at tree-outof-ssa.c:621)\n\n2006-01-13  Daniel Berlin  <dberlin@dberlin.org>\n\n\tPR tree-optimization/25771\n\t* tree-ssa-pre.c (insert_extra_phis): Don't insert merges of abnormal\n\tSSA_NAMES.\n\nFrom-SVN: r109669", "tree": {"sha": "e61cc80ff03aedc183ea12bb3869e159392b1a20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e61cc80ff03aedc183ea12bb3869e159392b1a20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa4b71172e97ace10387de90ac6aee72381dc6f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa4b71172e97ace10387de90ac6aee72381dc6f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa4b71172e97ace10387de90ac6aee72381dc6f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa4b71172e97ace10387de90ac6aee72381dc6f0/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "22918034f8e5ff75c20da27f988301b23a531975", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22918034f8e5ff75c20da27f988301b23a531975", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22918034f8e5ff75c20da27f988301b23a531975"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "6d2d109752ad8b31bce19ac2983206a466b7e9c1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa4b71172e97ace10387de90ac6aee72381dc6f0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa4b71172e97ace10387de90ac6aee72381dc6f0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aa4b71172e97ace10387de90ac6aee72381dc6f0", "patch": "@@ -1,3 +1,9 @@\n+2006-01-13  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\tPR tree-optimization/25771\n+\t* tree-ssa-pre.c (insert_extra_phis): Don't insert merges of abnormal\n+\tSSA_NAMES.\n+\n 2006-01-13  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR tree-opt/24365"}, {"sha": "1a59f59c355c675a66f0a53417a04f6455c5dd15", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa4b71172e97ace10387de90ac6aee72381dc6f0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa4b71172e97ace10387de90ac6aee72381dc6f0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=aa4b71172e97ace10387de90ac6aee72381dc6f0", "patch": "@@ -1,3 +1,8 @@\n+2006-01-13 Daniel Berlin  <dberlin@dberlin.org>\n+\n+\tPR tree-optimization/25771\n+\t* g++.dg/tree-ssa/pr25771.C: New test\n+\n 2006-01-13  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR tree-opt/24365"}, {"sha": "e9e53360ebfeff9e9df5e97ce2232648124377e0", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr25771.C", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa4b71172e97ace10387de90ac6aee72381dc6f0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr25771.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa4b71172e97ace10387de90ac6aee72381dc6f0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr25771.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr25771.C?ref=aa4b71172e97ace10387de90ac6aee72381dc6f0", "patch": "@@ -0,0 +1,32 @@\n+int  ggggg();\n+struct string {\n+  static int _S_empty_rep_storage[];\n+  void  _M_destroy();\n+  char* _M_rep;\n+  ~string()\n+  {\n+    if (_M_rep != (char*)&_S_empty_rep_storage )\n+      if (ggggg() <= 0)\n+        _M_destroy();\n+  }\n+};\n+extern void SDL_FreeSurface(int surface);\n+struct scoped_resource {\n+  ~scoped_resource()  {\n+    SDL_FreeSurface(1);\n+  }\n+};\n+struct surface {\n+  scoped_resource surface_;\n+};\n+struct button {\n+  string help_text_;\n+  string label_;\n+  surface image_;\n+};\n+struct scrollbar {\n+  string help_text_;\n+  button uparrow_;\n+};\n+scrollbar a;\n+"}, {"sha": "ada654b17c1d1225616358c088c1434c4e6e0baa", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa4b71172e97ace10387de90ac6aee72381dc6f0/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa4b71172e97ace10387de90ac6aee72381dc6f0/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=aa4b71172e97ace10387de90ac6aee72381dc6f0", "patch": "@@ -2768,6 +2768,9 @@ insert_extra_phis (basic_block block, basic_block dom)\n \t      tree val = get_value_handle (name);\n \t      tree temp;\n \n+\t      if (SSA_NAME_OCCURS_IN_ABNORMAL_PHI (name))\n+\t\tcontinue;\n+\n \t      if (!mergephitemp\n \t\t  || TREE_TYPE (name) != TREE_TYPE (mergephitemp))\n \t\t{"}]}