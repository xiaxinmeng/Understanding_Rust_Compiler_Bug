{"sha": "3c0121e4ebbef242d704631435f009c695202eb1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MwMTIxZTRlYmJlZjI0MmQ3MDQ2MzE0MzVmMDA5YzY5NTIwMmViMQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2003-01-15T07:42:21Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2003-01-15T07:42:21Z"}, "message": "mips.h (CRT_CALL_STATIC_FUNCTION): Define so as to set $gp before the call.\n\n* config/mips/mips.h (CRT_CALL_STATIC_FUNCTION): Define so as\nto set $gp before the call.\n\nFrom-SVN: r61310", "tree": {"sha": "48f065a1fa990b46bdfa5f3b3e157f4e93046073", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48f065a1fa990b46bdfa5f3b3e157f4e93046073"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c0121e4ebbef242d704631435f009c695202eb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c0121e4ebbef242d704631435f009c695202eb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c0121e4ebbef242d704631435f009c695202eb1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c0121e4ebbef242d704631435f009c695202eb1/comments", "author": null, "committer": null, "parents": [{"sha": "553eb139b1b989269a513ea578c8888374554e69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/553eb139b1b989269a513ea578c8888374554e69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/553eb139b1b989269a513ea578c8888374554e69"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "dba42fb5323097e4f04b7e139e31d41a1738e040", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0121e4ebbef242d704631435f009c695202eb1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0121e4ebbef242d704631435f009c695202eb1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3c0121e4ebbef242d704631435f009c695202eb1", "patch": "@@ -1,3 +1,8 @@\n+2003-01-15  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* config/mips/mips.h (CRT_CALL_STATIC_FUNCTION): Define so as\n+\tto set $gp before the call.\n+\n 2003-01-14  Richard Henderson  <rth@redhat.com>\n \n \t* config/alpha/alpha.c (alpha_expand_mov): Use correct mode"}, {"sha": "3e1918001148127822e37fc8db5fa21f1376f406", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0121e4ebbef242d704631435f009c695202eb1/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0121e4ebbef242d704631435f009c695202eb1/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=3c0121e4ebbef242d704631435f009c695202eb1", "patch": "@@ -4674,3 +4674,31 @@ while (0)\n \n /* Generate calls to memcpy, etc., not bcopy, etc.  */\n #define TARGET_MEM_FUNCTIONS\n+\n+/* Since the bits of the _init and _fini function is spread across\n+   many object files, each potentially with its own GP, we must assume\n+   we need to load our GP.  We don't preserve $gp or $ra, since each\n+   init/fini chunk is supposed to initialize $gp, and crti/crtn\n+   already take care of preserving $ra and, when appropriate, $gp.  */\n+#if _MIPS_SIM == _MIPS_SIM_ABI32\n+#define CRT_CALL_STATIC_FUNCTION(SECTION_OP, FUNC)\t\\\n+   asm (SECTION_OP \"\\n\\\n+\t.set noreorder\\n\\\n+\tbal 1f\\n\\\n+\tnop\\n\\\n+1:\t.cpload $31\\n\\\n+\t.set reorder\\n\\\n+\tjal \" USER_LABEL_PREFIX #FUNC \"\\n\\\n+\t\" TEXT_SECTION_ASM_OP);\n+#elif (defined _ABIN32 && _MIPS_SIM == _ABIN32) \\\n+   || (defined _ABI64 && _MIPS_SIM == _ABI64)\n+#define CRT_CALL_STATIC_FUNCTION(SECTION_OP, FUNC)\t\\\n+   asm (SECTION_OP \"\\n\\\n+\t.set noreorder\\n\\\n+\tbal 1f\\n\\\n+\tnop\\n\\\n+1:\t.set reorder\\n\\\n+\t.cpsetup $31, $2, 1b\\n\\\n+\tjal \" USER_LABEL_PREFIX #FUNC \"\\n\\\n+\t\" TEXT_SECTION_ASM_OP);\n+#endif"}]}