{"sha": "f12e8bd5c3e7063f4e616bda3cab540ea73ac446", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjEyZThiZDVjM2U3MDYzZjRlNjE2YmRhM2NhYjU0MGVhNzNhYzQ0Ng==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2012-04-22T18:51:44Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-04-22T18:51:44Z"}, "message": "godump.c (go_output_typedef): Dump size of structs.\n\n\t* godump.c (go_output_typedef): Dump size of structs.\n\nmksysinfo, syscall: Change Sizeof names from var to const.\n\nFrom-SVN: r186678", "tree": {"sha": "dc74fb1f36cb378bbb8295d9aa9daefe37eff0f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc74fb1f36cb378bbb8295d9aa9daefe37eff0f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f12e8bd5c3e7063f4e616bda3cab540ea73ac446", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f12e8bd5c3e7063f4e616bda3cab540ea73ac446", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f12e8bd5c3e7063f4e616bda3cab540ea73ac446", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f12e8bd5c3e7063f4e616bda3cab540ea73ac446/comments", "author": null, "committer": null, "parents": [{"sha": "970aa0b9a95103d518c7e96c70794ba32d074368", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/970aa0b9a95103d518c7e96c70794ba32d074368", "html_url": "https://github.com/Rust-GCC/gccrs/commit/970aa0b9a95103d518c7e96c70794ba32d074368"}], "stats": {"total": 103, "additions": 57, "deletions": 46}, "files": [{"sha": "6756c5df84505c8f141e1bfe54d055be9e153959", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12e8bd5c3e7063f4e616bda3cab540ea73ac446/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12e8bd5c3e7063f4e616bda3cab540ea73ac446/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f12e8bd5c3e7063f4e616bda3cab540ea73ac446", "patch": "@@ -1,3 +1,7 @@\n+2012-04-22  Ian Lance Taylor  <iant@google.com>\n+\n+\t* godump.c (go_output_typedef): Dump size of structs.\n+\n 2012-04-22  Razya Ladelsky  <razya@il.ibm.com>\n \n \tCorrecting transform_to_exit_first_loop + fix to PR46886"}, {"sha": "ab1edc620f916f1c92ad544bf6139dab9f463139", "filename": "gcc/godump.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12e8bd5c3e7063f4e616bda3cab540ea73ac446/gcc%2Fgodump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12e8bd5c3e7063f4e616bda3cab540ea73ac446/gcc%2Fgodump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgodump.c?ref=f12e8bd5c3e7063f4e616bda3cab540ea73ac446", "patch": "@@ -1024,12 +1024,25 @@ go_output_typedef (struct godump_container *container, tree decl)\n       fprintf (go_dump_file, \"type _%s \",\n \t       IDENTIFIER_POINTER (DECL_NAME (decl)));\n       go_output_type (container);\n+\n+      if (RECORD_OR_UNION_TYPE_P (TREE_TYPE (decl)))\n+\t{\n+\t  HOST_WIDE_INT size = int_size_in_bytes (TREE_TYPE (decl));\n+\n+\t  if (size > 0)\n+\t    fprintf (go_dump_file,\n+\t\t     \"\\nconst _sizeof_%s = \" HOST_WIDE_INT_PRINT_DEC,\n+\t\t     IDENTIFIER_POINTER (DECL_NAME (decl)),\n+\t\t     size);\n+\t}\n+\n       pointer_set_insert (container->decls_seen, decl);\n     }\n   else if (RECORD_OR_UNION_TYPE_P (TREE_TYPE (decl)))\n     {\n        void **slot;\n        const char *type;\n+       HOST_WIDE_INT size;\n \n        type = IDENTIFIER_POINTER (TYPE_NAME (TREE_TYPE ((decl))));\n        /* If type defined already, skip.  */\n@@ -1047,6 +1060,13 @@ go_output_typedef (struct godump_container *container, tree decl)\n        fprintf (go_dump_file, \"type _%s \",\n \t       IDENTIFIER_POINTER (TYPE_NAME (TREE_TYPE (decl))));\n        go_output_type (container);\n+\n+       size = int_size_in_bytes (TREE_TYPE (decl));\n+       if (size > 0)\n+\t fprintf (go_dump_file,\n+\t\t  \"\\nconst _sizeof_%s = \" HOST_WIDE_INT_PRINT_DEC,\n+\t\t  IDENTIFIER_POINTER (TYPE_NAME (TREE_TYPE (decl))),\n+\t\t  size);\n     }\n   else\n     return;"}, {"sha": "943ebdd72096fcc4164202d9a345a7f61b301152", "filename": "libgo/go/syscall/sockcmsg_unix.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12e8bd5c3e7063f4e616bda3cab540ea73ac446/libgo%2Fgo%2Fsyscall%2Fsockcmsg_unix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12e8bd5c3e7063f4e616bda3cab540ea73ac446/libgo%2Fgo%2Fsyscall%2Fsockcmsg_unix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fsockcmsg_unix.go?ref=f12e8bd5c3e7063f4e616bda3cab540ea73ac446", "patch": "@@ -39,7 +39,7 @@ func CmsgSpace(datalen int) int {\n }\n \n func cmsgData(cmsg *Cmsghdr) unsafe.Pointer {\n-\treturn unsafe.Pointer(uintptr(unsafe.Pointer(cmsg)) + uintptr(SizeofCmsghdr))\n+\treturn unsafe.Pointer(uintptr(unsafe.Pointer(cmsg)) + SizeofCmsghdr)\n }\n \n type SocketControlMessage struct {\n@@ -72,7 +72,7 @@ func ParseSocketControlMessage(buf []byte) ([]SocketControlMessage, error) {\n \n func socketControlMessageHeaderAndData(buf []byte) (*Cmsghdr, []byte, error) {\n \th := (*Cmsghdr)(unsafe.Pointer(&buf[0]))\n-\tif int(h.Len) < SizeofCmsghdr || int(h.Len) > len(buf) {\n+\tif h.Len < SizeofCmsghdr || int(h.Len) > len(buf) {\n \t\treturn nil, nil, EINVAL\n \t}\n \treturn h, buf[cmsgAlignOf(SizeofCmsghdr):], nil"}, {"sha": "e49056d0eb21be9d7f4dec4d2229218ca2348893", "filename": "libgo/mksysinfo.sh", "status": "modified", "additions": 31, "deletions": 44, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12e8bd5c3e7063f4e616bda3cab540ea73ac446/libgo%2Fmksysinfo.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12e8bd5c3e7063f4e616bda3cab540ea73ac446/libgo%2Fmksysinfo.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fmksysinfo.sh?ref=f12e8bd5c3e7063f4e616bda3cab540ea73ac446", "patch": "@@ -586,9 +586,6 @@ if test -n \"$cmsghdr\"; then\n         -e 's/cmsg_type/Type/' \\\n         -e 's/\\[\\]/[0]/' \\\n       >> ${OUT}\n-\n-  # The size of the cmsghdr struct.\n-  echo 'var SizeofCmsghdr = int(unsafe.Sizeof(Cmsghdr{}))' >> ${OUT}\n fi\n \n # The SCM_ flags for Cmsghdr.\n@@ -603,11 +600,6 @@ grep '^type _ucred ' gen-sysinfo.go | \\\n       -e 's/gid/Gid/' \\\n     >> ${OUT}\n \n-# The size of the ucred struct.\n-if grep 'type Ucred ' ${OUT} >/dev/null 2>&1; then\n-  echo 'var SizeofUcred = int(unsafe.Sizeof(Ucred{}))' >> ${OUT}\n-fi  \n-\n # The ip_mreq struct.\n grep '^type _ip_mreq ' gen-sysinfo.go | \\\n     sed -e 's/_ip_mreq/IPMreq/' \\\n@@ -621,9 +613,6 @@ if ! grep 'type IPMreq ' ${OUT} >/dev/null 2>&1; then\n   echo 'type IPMreq struct { Multiaddr [4]byte; Interface [4]byte; }' >> ${OUT}\n fi\n \n-# The size of the ip_mreq struct.\n-echo 'var SizeofIPMreq = int(unsafe.Sizeof(IPMreq{}))' >> ${OUT}\n-\n # The ipv6_mreq struct.\n grep '^type _ipv6_mreq ' gen-sysinfo.go | \\\n     sed -e 's/_ipv6_mreq/IPv6Mreq/' \\\n@@ -637,9 +626,6 @@ if ! grep 'type IPv6Mreq ' ${OUT} >/dev/null 2>&1; then\n   echo 'type IPv6Mreq struct { Multiaddr [16]byte; Interface uint32; }' >> ${OUT}\n fi\n \n-# The size of the ipv6_mreq struct.\n-echo 'var SizeofIPv6Mreq = int(unsafe.Sizeof(IPv6Mreq{}))' >> ${OUT}\n-\n # The ip_mreqn struct.\n grep '^type _ip_mreqn ' gen-sysinfo.go | \\\n     sed -e 's/_ip_mreqn/IPMreqn/' \\\n@@ -654,9 +640,6 @@ if ! grep 'type IPMreqn ' ${OUT} >/dev/null 2>&1; then\n   echo 'type IPMreqn struct { Multiaddr [4]byte; Interface [4]byte; Ifindex int32 }' >> ${OUT}\n fi\n \n-# The size of the ip_mreqn struct.\n-echo 'var SizeofIPMreqn = int(unsafe.Sizeof(IPMreqn{}))' >> ${OUT}\n-\n # Try to guess the type to use for fd_set.\n fd_set=`grep '^type _fd_set ' gen-sysinfo.go || true`\n fds_bits_type=\"_C_long\"\n@@ -722,8 +705,8 @@ grep '^const _NLM' gen-sysinfo.go | \\\n \n # NLMSG_HDRLEN is defined as an expression using sizeof.\n if ! grep '^const NLMSG_HDRLEN' ${OUT} > /dev/null 2>&1; then\n-  if grep '^type NlMsghdr ' ${OUT} > /dev/null 2>&1; then\n-    echo 'var NLMSG_HDRLEN = int((unsafe.Sizeof(NlMsghdr{}) + (NLMSG_ALIGNTO-1)) &^ (NLMSG_ALIGNTO-1))' >> ${OUT}\n+  if grep '^const _sizeof_nlmsghdr ' ${OUT} > /dev/null 2>&1; then\n+    echo 'const NLMSG_HDRLEN = (_sizeof_nlmsghdr + (NLMSG_ALIGNTO-1)) &^ (NLMSG_ALIGNTO-1)' >> ${OUT}\n   fi\n fi\n \n@@ -741,11 +724,6 @@ grep '^type _rtmsg ' gen-sysinfo.go | \\\n       -e 's/rtm_flags/Flags/' \\\n     >> ${OUT}\n \n-# The size of the rtmsg struct.\n-if grep 'type RtMsg ' ${OUT} > /dev/null 2>&1; then\n-  echo 'var SizeofRtMsg = int(unsafe.Sizeof(RtMsg{}))' >> ${OUT}\n-fi\n-\n # The rtgenmsg struct.\n grep '^type _rtgenmsg ' gen-sysinfo.go | \\\n     sed -e 's/_rtgenmsg/RtGenmsg/' \\\n@@ -768,11 +746,6 @@ grep '^const _RTN' gen-sysinfo.go | \\\n grep '^const _RTPROT' gen-sysinfo.go | \\\n     sed -e 's/^\\(const \\)_\\(RTPROT[^= ]*\\)\\(.*\\)$/\\1\\2 = _\\2/' >> ${OUT}\n \n-# The size of the rtgenmsg struct.\n-if grep 'type RtGenmsg ' ${OUT} > /dev/null 2>&1; then\n-  echo 'var SizeofRtGenmsg = int(unsafe.Sizeof(RtGenmsg{}))' >> ${OUT}\n-fi\n-\n # The ifinfomsg struct.\n grep '^type _ifinfomsg ' gen-sysinfo.go | \\\n     sed -e 's/_ifinfomsg/IfInfomsg/' \\\n@@ -795,11 +768,6 @@ grep '^const _IFNAMSIZ' gen-sysinfo.go | \\\n grep '^const _SIOC' gen-sysinfo.go |\n     sed -e 's/^\\(const \\)_\\(SIOC[^= ]*\\)\\(.*\\)$/\\1\\2 = _\\2/' >> ${OUT}\n \n-# The size of the ifinfomsg struct.\n-if grep 'type IfInfomsg ' ${OUT} > /dev/null 2>&1; then\n-  echo 'var SizeofIfInfomsg = int(unsafe.Sizeof(IfInfomsg{}))' >> ${OUT}\n-fi\n-\n # The ifaddrmsg struct.\n grep '^type _ifaddrmsg ' gen-sysinfo.go | \\\n     sed -e 's/_ifaddrmsg/IfAddrmsg/' \\\n@@ -810,23 +778,13 @@ grep '^type _ifaddrmsg ' gen-sysinfo.go | \\\n       -e 's/ifa_index/Index/' \\\n     >> ${OUT}\n \n-# The size of the ifaddrmsg struct.\n-if grep 'type IfAddrmsg ' ${OUT} > /dev/null 2>&1; then\n-  echo 'var SizeofIfAddrmsg = int(unsafe.Sizeof(IfAddrmsg{}))' >> ${OUT}\n-fi\n-\n # The rtattr struct.\n grep '^type _rtattr ' gen-sysinfo.go | \\\n     sed -e 's/_rtattr/RtAttr/' \\\n       -e 's/rta_len/Len/' \\\n       -e 's/rta_type/Type/' \\\n     >> ${OUT}\n \n-# The size of the rtattr struct.\n-if grep 'type RtAttr ' ${OUT} > /dev/null 2>&1; then\n-  echo 'var SizeofRtAttr = int(unsafe.Sizeof(RtAttr{}))' >> ${OUT}\n-fi\n-\n # The termios struct.\n grep '^type _termios ' gen-sysinfo.go | \\\n     sed -e 's/_termios/Termios/' \\\n@@ -1017,4 +975,33 @@ grep '^type _zone_net_addr_t ' gen-sysinfo.go | \\\n     sed -e 's/_in6_addr/[16]byte/' \\\n     >> ${OUT}\n \n+# Struct sizes.\n+set cmsghdr Cmsghdr ip_mreq IPMreq ip_mreqn IPMreqn ipv6_mreq IPv6Mreq \\\n+    ifaddrmsg IfAddrmsg ifinfomsg IfInfomsg in_pktinfo Inet4Pktinfo \\\n+    in6_pktinfo Inet6PktInfo inotify_event InotifyEvent linger Linger \\\n+    msghdr Msghdr nlattr NlAttr nlmsgerr NlMsgerr nlmsghdr NlMsghdr \\\n+    rtattr RtAttr rtgenmsg RtGenmsg rtmsg RtMsg rtnexthop RtNexthop \\\n+    sock_filter SockFilter sock_fprog SockFprog ucred Ucred\n+while test $# != 0; do\n+    nc=$1\n+    ngo=$2\n+    shift\n+    shift\n+    if grep \"^const _sizeof_$nc =\" gen-sysinfo.go >/dev/null 2>&1; then\n+\techo \"const Sizeof$ngo = _sizeof_$nc\" >> ${OUT}\n+    fi\n+done\n+\n+# In order to compile the net package, we need some sizes to exist\n+# even if the types do not.\n+if ! grep 'const SizeofIPMreq ' ${OUT} >/dev/null 2>&1; then\n+    echo 'const SizeofIPMreq = 8' >> ${OUT}\n+fi\n+if ! grep 'const SizeofIPv6Mreq ' ${OUT} >/dev/null 2>&1; then\n+    echo 'const SizeofIPv6Mreq = 20' >> ${OUT}\n+fi\n+if ! grep 'const SizeofIPMreqn ' ${OUT} >/dev/null 2>&1; then\n+    echo 'const SizeofIPMreqn = 12' >> ${OUT}\n+fi\n+\n exit $?"}]}