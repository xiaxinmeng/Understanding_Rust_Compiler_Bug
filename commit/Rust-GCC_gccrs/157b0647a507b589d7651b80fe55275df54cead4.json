{"sha": "157b0647a507b589d7651b80fe55275df54cead4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU3YjA2NDdhNTA3YjU4OWQ3NjUxYjgwZmU1NTI3NWRmNTRjZWFkNA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-08-14T19:04:05Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-08-14T19:04:05Z"}, "message": "re PR c++/34485 (ICE with undefined type in template parameter)\n\n/cp\n2008-08-14  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/34485\n\t* pt.c (check_template_shadow): Change to return a bool.\n\t* name-lookup.c (push_class_level_binding): Early return if\n\tcheck_template_shadow returns false.\n\t* cp-tree.h (check_template_shadow): Adjust declaration.\n\n/testsuite\n2008-08-14  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/34485\n\t* g++.dg/template/crash81.C: New.\n\t* g++.old-deja/g++.benjamin/tem03.C: Adjust.\n\t* g++.old-deja/g++.benjamin/tem04.C: Likewise.\n\t* g++.old-deja/g++.brendan/crash7.C: Likewise.\n\nFrom-SVN: r139114", "tree": {"sha": "76389064c647faca3282ba0ac417b8bb8b80faf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76389064c647faca3282ba0ac417b8bb8b80faf1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/157b0647a507b589d7651b80fe55275df54cead4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/157b0647a507b589d7651b80fe55275df54cead4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/157b0647a507b589d7651b80fe55275df54cead4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/157b0647a507b589d7651b80fe55275df54cead4/comments", "author": null, "committer": null, "parents": [{"sha": "c2b00cdcaaef76f88c770351803dcb7040338d58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2b00cdcaaef76f88c770351803dcb7040338d58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2b00cdcaaef76f88c770351803dcb7040338d58"}], "stats": {"total": 57, "additions": 42, "deletions": 15}, "files": [{"sha": "29159480da5b116bacd72911bac3435678529618", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/157b0647a507b589d7651b80fe55275df54cead4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/157b0647a507b589d7651b80fe55275df54cead4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=157b0647a507b589d7651b80fe55275df54cead4", "patch": "@@ -1,3 +1,11 @@\n+2008-08-14  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/34485\n+\t* pt.c (check_template_shadow): Change to return a bool.\n+\t* name-lookup.c (push_class_level_binding): Early return if\n+\tcheck_template_shadow returns false.\n+\t* cp-tree.h (check_template_shadow): Adjust declaration.\n+\n 2008-08-14  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/34600"}, {"sha": "a80027ef27dd559aea123136c8dbd436b3d97437", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/157b0647a507b589d7651b80fe55275df54cead4/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/157b0647a507b589d7651b80fe55275df54cead4/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=157b0647a507b589d7651b80fe55275df54cead4", "patch": "@@ -4450,7 +4450,7 @@ extern tree locate_dtor\t\t\t\t(tree, void *);\n extern bool maybe_clone_body\t\t\t(tree);\n \n /* in pt.c */\n-extern void check_template_shadow\t\t(tree);\n+extern bool check_template_shadow\t\t(tree);\n extern tree get_innermost_template_args\t\t(tree, int);\n extern void maybe_begin_member_template_processing (tree);\n extern void maybe_end_member_template_processing (void);"}, {"sha": "60050b8f3393262143b277708ade00bb8c922351", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/157b0647a507b589d7651b80fe55275df54cead4/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/157b0647a507b589d7651b80fe55275df54cead4/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=157b0647a507b589d7651b80fe55275df54cead4", "patch": "@@ -2753,7 +2753,8 @@ push_class_level_binding (tree name, tree x)\n       && TREE_TYPE (decl) == error_mark_node)\n     decl = TREE_VALUE (decl);\n \n-  check_template_shadow (decl);\n+  if (!check_template_shadow (decl))\n+    POP_TIMEVAR_AND_RETURN (TV_NAME_LOOKUP, false);\n \n   /* [class.mem]\n "}, {"sha": "4a9e571a70aaf5f889c505c5777523982d2e7571", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/157b0647a507b589d7651b80fe55275df54cead4/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/157b0647a507b589d7651b80fe55275df54cead4/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=157b0647a507b589d7651b80fe55275df54cead4", "patch": "@@ -2809,20 +2809,23 @@ expand_template_argument_pack (tree args)\n   return result_args;\n }\n \n-/* Complain if DECL shadows a template parameter.\n+/* Checks if DECL shadows a template parameter.\n \n    [temp.local]: A template-parameter shall not be redeclared within its\n-   scope (including nested scopes).  */\n+   scope (including nested scopes).\n \n-void\n+   Emits an error and returns TRUE if the DECL shadows a parameter,\n+   returns FALSE otherwise.  */\n+\n+bool\n check_template_shadow (tree decl)\n {\n   tree olddecl;\n \n   /* If we're not in a template, we can't possibly shadow a template\n      parameter.  */\n   if (!current_template_parms)\n-    return;\n+    return true;\n \n   /* Figure out what we're shadowing.  */\n   if (TREE_CODE (decl) == OVERLOAD)\n@@ -2832,24 +2835,25 @@ check_template_shadow (tree decl)\n   /* If there's no previous binding for this name, we're not shadowing\n      anything, let alone a template parameter.  */\n   if (!olddecl)\n-    return;\n+    return true;\n \n   /* If we're not shadowing a template parameter, we're done.  Note\n      that OLDDECL might be an OVERLOAD (or perhaps even an\n      ERROR_MARK), so we can't just blithely assume it to be a _DECL\n      node.  */\n   if (!DECL_P (olddecl) || !DECL_TEMPLATE_PARM_P (olddecl))\n-    return;\n+    return true;\n \n   /* We check for decl != olddecl to avoid bogus errors for using a\n      name inside a class.  We check TPFI to avoid duplicate errors for\n      inline member templates.  */\n   if (decl == olddecl\n       || TEMPLATE_PARMS_FOR_INLINE (current_template_parms))\n-    return;\n+    return true;\n \n   error (\"declaration of %q+#D\", decl);\n   error (\" shadows template parm %q+#D\", olddecl);\n+  return false;\n }\n \n /* Return a new TEMPLATE_PARM_INDEX with the indicated INDEX, LEVEL,"}, {"sha": "9a8f5f5b87692949abc805a0d9d65c9871f57fc7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/157b0647a507b589d7651b80fe55275df54cead4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/157b0647a507b589d7651b80fe55275df54cead4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=157b0647a507b589d7651b80fe55275df54cead4", "patch": "@@ -1,3 +1,11 @@\n+2008-08-14  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/34485\n+\t* g++.dg/template/crash81.C: New.\n+\t* g++.old-deja/g++.benjamin/tem03.C: Adjust.\n+\t* g++.old-deja/g++.benjamin/tem04.C: Likewise.\n+\t* g++.old-deja/g++.brendan/crash7.C: Likewise.\n+\n 2008-08-14  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR libfortran/36886"}, {"sha": "f2b76744f3312c6d97b2dfe9aaaf3396bef7b926", "filename": "gcc/testsuite/g++.dg/template/crash81.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/157b0647a507b589d7651b80fe55275df54cead4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash81.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/157b0647a507b589d7651b80fe55275df54cead4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash81.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash81.C?ref=157b0647a507b589d7651b80fe55275df54cead4", "patch": "@@ -0,0 +1,6 @@\n+// PR c++/34485\n+\n+struct A\n+{\n+  template<T::X> struct X; // { dg-error \"error: 'T' has not been declared|error: declaration of 'template<int X> struct A::X'|error:  shadows template parm 'int X'\" }\n+};"}, {"sha": "8f7459f17fb4d58537175d3a22e16c51ec535cb3", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/tem03.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/157b0647a507b589d7651b80fe55275df54cead4/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Ftem03.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/157b0647a507b589d7651b80fe55275df54cead4/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Ftem03.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Ftem03.C?ref=157b0647a507b589d7651b80fe55275df54cead4", "patch": "@@ -83,7 +83,7 @@ public:\n template <class T10, int i> struct Xfour {// { dg-error \"\" } .*\n   int T10; // { dg-error \"\" } .*\n   void f(){\n-    char T10;\n+    char T10; // { dg-error \"error: declaration of 'char T10'\" }\n   }\n };\n \n@@ -123,11 +123,11 @@ public:\n   template <class U>\n   friend bool fooy(U u);\n \n-  template <class T161>\n+  template <class T161> // { dg-error \"error: declaration of 'class T161'\" }\n   friend bool foo(T161 u)\n     {\n-      Xseven<T161, 5, int> obj; // { dg-error \"\" } .*\n-      return (obj.inst == u.inst); // { dg-error \"\" } .*\n+      Xseven<T161, 5, int> obj;\n+      return (obj.inst == u.inst);\n     }\n \n };"}, {"sha": "7dd7462c334be46c5d23c9c38a31962af8ad09af", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/tem04.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/157b0647a507b589d7651b80fe55275df54cead4/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Ftem04.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/157b0647a507b589d7651b80fe55275df54cead4/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Ftem04.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Ftem04.C?ref=157b0647a507b589d7651b80fe55275df54cead4", "patch": "@@ -91,7 +91,7 @@ public:\n template <typename T14, template <typename T15> class C12>// { dg-error \"\" } .*\n class Xeighteen {\n protected:\n-  C12<T14> value; // { dg-error \"\" }\n+  C12<T14> value;\n   int C12; // { dg-error \"\" } .*\n };\n "}, {"sha": "d53dee77dd3265e54399c8870314171181a270c9", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/157b0647a507b589d7651b80fe55275df54cead4/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/157b0647a507b589d7651b80fe55275df54cead4/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash7.C?ref=157b0647a507b589d7651b80fe55275df54cead4", "patch": "@@ -44,5 +44,5 @@ void Sort<Comp>::sort (Vector<Comp::T> &v)// { dg-error \"\" } use of bad T\n void\n f (Vector<int> &vi)\n {\n-  Sort<Comparator<int> >::sort (vi);\n+  Sort<Comparator<int> >::sort (vi); // { dg-error \"error: 'sort' is not a member of 'Sort<Comparator<int> >'\" }\n }"}]}