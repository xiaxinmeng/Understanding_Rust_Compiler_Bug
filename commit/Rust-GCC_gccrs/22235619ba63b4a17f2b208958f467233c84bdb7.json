{"sha": "22235619ba63b4a17f2b208958f467233c84bdb7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjIyMzU2MTliYTYzYjRhMTdmMmIyMDg5NThmNDY3MjMzYzg0YmRiNw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2017-06-24T19:31:24Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2017-06-24T19:31:24Z"}, "message": "re PR c++/62315 (do not print typename in diagnostic if the original code does not have it)\n\n/cp\n2017-06-24  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/62315\n\t* parser.c (cp_parser_diagnose_invalid_type_name): Don't print\n\t'typename' in error messages about missing 'typename'.\n\n/testsuite\n2017-06-24  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/62315\n\t* g++.dg/parse/typedef2.C: Specify a dg-error string.\n\nFrom-SVN: r249626", "tree": {"sha": "2889dba40a175463ca568790a086f71d98ad18b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2889dba40a175463ca568790a086f71d98ad18b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22235619ba63b4a17f2b208958f467233c84bdb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22235619ba63b4a17f2b208958f467233c84bdb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22235619ba63b4a17f2b208958f467233c84bdb7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22235619ba63b4a17f2b208958f467233c84bdb7/comments", "author": null, "committer": null, "parents": [{"sha": "e56e3fda6092548f3cd5336d131b412be986b1e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e56e3fda6092548f3cd5336d131b412be986b1e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e56e3fda6092548f3cd5336d131b412be986b1e6"}], "stats": {"total": 32, "additions": 27, "deletions": 5}, "files": [{"sha": "a06de8ba8c73e7982e25d19e1455463f836840e0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22235619ba63b4a17f2b208958f467233c84bdb7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22235619ba63b4a17f2b208958f467233c84bdb7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=22235619ba63b4a17f2b208958f467233c84bdb7", "patch": "@@ -1,3 +1,9 @@\n+2017-06-24  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/62315\n+\t* parser.c (cp_parser_diagnose_invalid_type_name): Don't print\n+\t'typename' in error messages about missing 'typename'.\n+\n 2017-06-23  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/79056 - C++17 ICE with invalid template syntax."}, {"sha": "634047e5d05d167a8e5e15dcbbac71f0a125f38c", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22235619ba63b4a17f2b208958f467233c84bdb7/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22235619ba63b4a17f2b208958f467233c84bdb7/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=22235619ba63b4a17f2b208958f467233c84bdb7", "patch": "@@ -3272,9 +3272,21 @@ cp_parser_diagnose_invalid_type_name (cp_parser *parser, tree id,\n \t}\n       else if (TYPE_P (parser->scope)\n \t       && dependent_scope_p (parser->scope))\n-\terror_at (location, \"need %<typename%> before %<%T::%E%> because \"\n-\t\t  \"%qT is a dependent scope\",\n-\t\t  parser->scope, id, parser->scope);\n+\t{\n+\t  if (TREE_CODE (parser->scope) == TYPENAME_TYPE)\n+\t    error_at (location,\n+\t\t      \"need %<typename%> before %<%T::%D::%E%> because \"\n+\t\t      \"%<%T::%D%> is a dependent scope\",\n+\t\t      TYPE_CONTEXT (parser->scope),\n+\t\t      TYPENAME_TYPE_FULLNAME (parser->scope),\n+\t\t      id,\n+\t\t      TYPE_CONTEXT (parser->scope),\n+\t\t      TYPENAME_TYPE_FULLNAME (parser->scope));\n+\t  else\n+\t    error_at (location, \"need %<typename%> before %<%T::%E%> because \"\n+\t\t      \"%qT is a dependent scope\",\n+\t\t      parser->scope, id, parser->scope);\n+\t}\n       else if (TYPE_P (parser->scope))\n \t{\n \t  if (!COMPLETE_TYPE_P (parser->scope))"}, {"sha": "ad5ccb7dc64a5461c91658c98021a0bc54aade6e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22235619ba63b4a17f2b208958f467233c84bdb7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22235619ba63b4a17f2b208958f467233c84bdb7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=22235619ba63b4a17f2b208958f467233c84bdb7", "patch": "@@ -1,3 +1,8 @@\n+2017-06-24  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/62315\n+\t* g++.dg/parse/typedef2.C: Specify a dg-error string.\n+\n 2017-06-24  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n         PR fortran/52473"}, {"sha": "1cc1ea0d58ff26f178e1e69cfb961ec5f24166c4", "filename": "gcc/testsuite/g++.dg/parse/typedef2.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22235619ba63b4a17f2b208958f467233c84bdb7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypedef2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22235619ba63b4a17f2b208958f467233c84bdb7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypedef2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypedef2.C?ref=22235619ba63b4a17f2b208958f467233c84bdb7", "patch": "@@ -1,3 +1,2 @@\n template <typename T> struct B { typedef typename T::X X; };\n-template <typename T> struct A { typedef B<T>::X::Y Z; }; // { dg-error \"\" }\n- \n+template <typename T> struct A { typedef B<T>::X::Y Z; }; // { dg-error \"before 'B<T>::X::Y' because 'B<T>::X'\" }"}]}