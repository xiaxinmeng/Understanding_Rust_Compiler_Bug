{"sha": "4f4b0b73e9c56aa71acd787c8eb40121fbfa80e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY0YjBiNzNlOWM1NmFhNzFhY2Q3ODdjOGViNDAxMjFmYmZhODBlNg==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2013-09-09T03:07:28Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2013-09-09T03:07:28Z"}, "message": "tree-ssa-threadedge.c (thread_across_edge): Fix initialization of 'found'.\n\n       * tree-ssa-threadedge.c (thread_across_edge): Fix initialization\n        of 'found'.\n\n        * gcc.c-torture/compile/pr58340.c: New test.\n\nFrom-SVN: r202379", "tree": {"sha": "9de6c025b07b3b64c45272efcbe12c7de6629d7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9de6c025b07b3b64c45272efcbe12c7de6629d7c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f4b0b73e9c56aa71acd787c8eb40121fbfa80e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f4b0b73e9c56aa71acd787c8eb40121fbfa80e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f4b0b73e9c56aa71acd787c8eb40121fbfa80e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f4b0b73e9c56aa71acd787c8eb40121fbfa80e6/comments", "author": null, "committer": null, "parents": [{"sha": "1db60b9ca827f9edceb2bd537c3d3220a3d5eb86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1db60b9ca827f9edceb2bd537c3d3220a3d5eb86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1db60b9ca827f9edceb2bd537c3d3220a3d5eb86"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "c7ac8f092c81aafbbd5cb29626dc389ea68b866b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f4b0b73e9c56aa71acd787c8eb40121fbfa80e6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f4b0b73e9c56aa71acd787c8eb40121fbfa80e6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4f4b0b73e9c56aa71acd787c8eb40121fbfa80e6", "patch": "@@ -1,3 +1,9 @@\n+2013-09-08  Jeff Law  <law@redhat.com>\n+\n+\tPR bootstrap/58340\n+\t* tree-ssa-threadedge.c (thread_across_edge): Fix initialization\n+\tof 'found'.\n+\n 2013-09-08  Andi Kleen  <ak@linux.intel.com>\n \n \t* tree-inline.c (estimate_num_insns): Limit asm cost to 1000."}, {"sha": "756611dc80c18c9f6ed7732b9ad9ec180afba8f6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f4b0b73e9c56aa71acd787c8eb40121fbfa80e6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f4b0b73e9c56aa71acd787c8eb40121fbfa80e6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4f4b0b73e9c56aa71acd787c8eb40121fbfa80e6", "patch": "@@ -1,3 +1,7 @@\n+2013-09-08  Jeff Law  <law@redhat.com>\n+\n+\t* gcc.c-torture/compile/pr58340.c: New test.\n+\n 2013-09-08  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* g++.dg/debug/ra1.C: New test."}, {"sha": "ca3ccda0a472a176e70b273fc1d36d513956db23", "filename": "gcc/testsuite/gcc.c-torture/compile/pr58340.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f4b0b73e9c56aa71acd787c8eb40121fbfa80e6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr58340.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f4b0b73e9c56aa71acd787c8eb40121fbfa80e6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr58340.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr58340.c?ref=4f4b0b73e9c56aa71acd787c8eb40121fbfa80e6", "patch": "@@ -0,0 +1,16 @@\n+int a, b, c, d;\n+\n+int foo (int x, int y)\n+{\n+  return y == 0 ? x : 1 % y;\n+}\n+\n+int main ()\n+{\n+  c = 0 || a;\n+\n+  for (;;)\n+    b = foo (d, c) && 1;\n+\n+  return 0;\n+}"}, {"sha": "f2051d7e7d00f271152a2153b1e6925ec035e71f", "filename": "gcc/tree-ssa-threadedge.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f4b0b73e9c56aa71acd787c8eb40121fbfa80e6/gcc%2Ftree-ssa-threadedge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f4b0b73e9c56aa71acd787c8eb40121fbfa80e6/gcc%2Ftree-ssa-threadedge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadedge.c?ref=4f4b0b73e9c56aa71acd787c8eb40121fbfa80e6", "patch": "@@ -978,7 +978,7 @@ thread_across_edge (gimple dummy_cond,\n   {\n     edge taken_edge;\n     edge_iterator ei;\n-    bool found = false;\n+    bool found;\n     bitmap visited = BITMAP_ALLOC (NULL);\n \n     /* Look at each successor of E->dest to see if we can thread through it.  */\n@@ -994,6 +994,7 @@ thread_across_edge (gimple dummy_cond,\n \t   of E->dest.  */\n \tpath.safe_push (e);\n \tpath.safe_push (taken_edge);\n+\tfound = false;\n \tif ((e->flags & EDGE_DFS_BACK) == 0\n \t    || ! cond_arg_set_in_bb (path[path.length () - 1], e->dest))\n \t  found = thread_around_empty_blocks (taken_edge,"}]}