{"sha": "c8c77ed747abb61a7f3cf34f71539bc87a5d6c3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzhjNzdlZDc0N2FiYjYxYTdmM2NmMzRmNzE1MzliYzg3YTVkNmMzYw==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2020-10-02T14:23:19Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2020-10-02T14:23:19Z"}, "message": "AArch64: Add neoversev1_tunings struct\n\nThis patch adds a Neoverse V1-specific tuning struct that currently is\njust a deduplication of the N1 struct it was using before and specifying\nthe SVE width.\nThis will allow us to tweak Neoverse V1 things in the future as needed.\n\nBootstrapped and tested on aarch64-none-linux-gnu.\n\ngcc/\n\t* config/aarch64/aarch64.c (neoversev1_tunings): Define.\n\t* config/aarch64/aarch64-cores.def (zeus): Use it.\n\t(neoverse-v1): Likewise.", "tree": {"sha": "9959406ad4a3321b84ecb6ef6d3c044ce98eeed9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9959406ad4a3321b84ecb6ef6d3c044ce98eeed9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8c77ed747abb61a7f3cf34f71539bc87a5d6c3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8c77ed747abb61a7f3cf34f71539bc87a5d6c3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8c77ed747abb61a7f3cf34f71539bc87a5d6c3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8c77ed747abb61a7f3cf34f71539bc87a5d6c3c/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "762cca0023c9bdbd762c44f33a954845bbccd568", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/762cca0023c9bdbd762c44f33a954845bbccd568", "html_url": "https://github.com/Rust-GCC/gccrs/commit/762cca0023c9bdbd762c44f33a954845bbccd568"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "b2e1932d1200d38b461aecaa7779841ac0f2232c", "filename": "gcc/config/aarch64/aarch64-cores.def", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8c77ed747abb61a7f3cf34f71539bc87a5d6c3c/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8c77ed747abb61a7f3cf34f71539bc87a5d6c3c/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def?ref=c8c77ed747abb61a7f3cf34f71539bc87a5d6c3c", "patch": "@@ -136,8 +136,8 @@ AARCH64_CORE(\"thunderx3t110\",  thunderx3t110,  thunderx3t110, 8_3A,  AARCH64_FL_\n /* ARMv8.4-A Architecture Processors.  */\n \n /* Arm ('A') cores.  */\n-AARCH64_CORE(\"zeus\", zeus, cortexa57, 8_4A,  AARCH64_FL_FOR_ARCH8_4 | AARCH64_FL_SVE | AARCH64_FL_RCPC | AARCH64_FL_I8MM | AARCH64_FL_BF16 | AARCH64_FL_F16 | AARCH64_FL_PROFILE | AARCH64_FL_SSBS | AARCH64_FL_RNG, neoversen1, 0x41, 0xd40, -1)\n-AARCH64_CORE(\"neoverse-v1\", neoversev1, cortexa57, 8_4A,  AARCH64_FL_FOR_ARCH8_4 | AARCH64_FL_SVE | AARCH64_FL_RCPC | AARCH64_FL_I8MM | AARCH64_FL_BF16 | AARCH64_FL_F16 | AARCH64_FL_PROFILE | AARCH64_FL_SSBS | AARCH64_FL_RNG, neoversen1, 0x41, 0xd40, -1)\n+AARCH64_CORE(\"zeus\", zeus, cortexa57, 8_4A,  AARCH64_FL_FOR_ARCH8_4 | AARCH64_FL_SVE | AARCH64_FL_RCPC | AARCH64_FL_I8MM | AARCH64_FL_BF16 | AARCH64_FL_F16 | AARCH64_FL_PROFILE | AARCH64_FL_SSBS | AARCH64_FL_RNG, neoversev1, 0x41, 0xd40, -1)\n+AARCH64_CORE(\"neoverse-v1\", neoversev1, cortexa57, 8_4A,  AARCH64_FL_FOR_ARCH8_4 | AARCH64_FL_SVE | AARCH64_FL_RCPC | AARCH64_FL_I8MM | AARCH64_FL_BF16 | AARCH64_FL_F16 | AARCH64_FL_PROFILE | AARCH64_FL_SSBS | AARCH64_FL_RNG, neoversev1, 0x41, 0xd40, -1)\n \n /* Qualcomm ('Q') cores. */\n AARCH64_CORE(\"saphira\",     saphira,    saphira,    8_4A,  AARCH64_FL_FOR_ARCH8_4 | AARCH64_FL_CRYPTO | AARCH64_FL_RCPC, saphira,   0x51, 0xC01, -1)"}, {"sha": "3cf20ea5ab7130ec43109037877736ca6fcaa037", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8c77ed747abb61a7f3cf34f71539bc87a5d6c3c/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8c77ed747abb61a7f3cf34f71539bc87a5d6c3c/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=c8c77ed747abb61a7f3cf34f71539bc87a5d6c3c", "patch": "@@ -1336,6 +1336,32 @@ static const struct tune_params neoversen1_tunings =\n   &generic_prefetch_tune\n };\n \n+static const struct tune_params neoversev1_tunings =\n+{\n+  &cortexa57_extra_costs,\n+  &generic_addrcost_table,\n+  &generic_regmove_cost,\n+  &cortexa57_vector_cost,\n+  &generic_branch_cost,\n+  &generic_approx_modes,\n+  SVE_256, /* sve_width  */\n+  4, /* memmov_cost  */\n+  3, /* issue_rate  */\n+  (AARCH64_FUSE_AES_AESMC | AARCH64_FUSE_CMP_BRANCH), /* fusible_ops  */\n+  \"32:16\",\t/* function_align.  */\n+  \"4\",\t\t/* jump_align.  */\n+  \"32:16\",\t/* loop_align.  */\n+  2,\t/* int_reassoc_width.  */\n+  4,\t/* fp_reassoc_width.  */\n+  2,\t/* vec_reassoc_width.  */\n+  2,\t/* min_div_recip_mul_sf.  */\n+  2,\t/* min_div_recip_mul_df.  */\n+  0,\t/* max_case_values.  */\n+  tune_params::AUTOPREFETCHER_WEAK,\t/* autoprefetcher_model.  */\n+  (AARCH64_EXTRA_TUNE_NONE),\t/* tune_flags.  */\n+  &generic_prefetch_tune\n+};\n+\n static const struct tune_params a64fx_tunings =\n {\n   &generic_extra_costs,"}]}