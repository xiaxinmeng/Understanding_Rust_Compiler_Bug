{"sha": "5a9a196102ff0d1bf27831e0ce396049cc334db8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE5YTE5NjEwMmZmMGQxYmYyNzgzMWUwY2UzOTYwNDljYzMzNGRiOA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2002-09-30T19:33:06Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2002-09-30T19:33:06Z"}, "message": "tree.c (really_overloaded_fn): TEMPLATE_ID_EXPRs are also overloaded.\n\ncp:\n\t* tree.c (really_overloaded_fn): TEMPLATE_ID_EXPRs are also\n\toverloaded.\ntestsuite:\n\t* g++.dg/overload/member1.C: New test.\n\nFrom-SVN: r57662", "tree": {"sha": "d1b0e26175f544e3bcc5c964303ca75c1a2cdef0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1b0e26175f544e3bcc5c964303ca75c1a2cdef0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a9a196102ff0d1bf27831e0ce396049cc334db8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a9a196102ff0d1bf27831e0ce396049cc334db8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a9a196102ff0d1bf27831e0ce396049cc334db8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a9a196102ff0d1bf27831e0ce396049cc334db8/comments", "author": null, "committer": null, "parents": [{"sha": "7befdb9fca2b38967408c54b4f2179f1f25875ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7befdb9fca2b38967408c54b4f2179f1f25875ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7befdb9fca2b38967408c54b4f2179f1f25875ae"}], "stats": {"total": 38, "additions": 35, "deletions": 3}, "files": [{"sha": "e6ea3fe23064eba1df3850e4dba6093303ccb9bb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a9a196102ff0d1bf27831e0ce396049cc334db8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a9a196102ff0d1bf27831e0ce396049cc334db8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5a9a196102ff0d1bf27831e0ce396049cc334db8", "patch": "@@ -1,3 +1,8 @@\n+2002-09-30  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* tree.c (really_overloaded_fn): TEMPLATE_ID_EXPRs are also\n+\toverloaded.\n+\n 2002-09-30  Steve Ellcey  <sje@cup.hp.com>\n \n \t* class.c (build_vtbl_initializer): Add cast."}, {"sha": "4b1142b11545a62851892cb6b2e7d888ba4ddd80", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a9a196102ff0d1bf27831e0ce396049cc334db8/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a9a196102ff0d1bf27831e0ce396049cc334db8/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=5a9a196102ff0d1bf27831e0ce396049cc334db8", "patch": "@@ -1012,9 +1012,10 @@ really_overloaded_fn (x)\n     x = TREE_OPERAND (x, 1);\n   if (BASELINK_P (x))\n     x = BASELINK_FUNCTIONS (x);\n-  return (TREE_CODE (x) == OVERLOAD \n-\t  && (OVL_CHAIN (x)\n-\t      || DECL_FUNCTION_TEMPLATE_P (OVL_FUNCTION (x))));\n+  \n+  return ((TREE_CODE (x) == OVERLOAD && OVL_CHAIN (x))\n+\t  || DECL_FUNCTION_TEMPLATE_P (OVL_CURRENT (x))\n+\t  || TREE_CODE (x) == TEMPLATE_ID_EXPR);\n }\n \n /* Return the OVERLOAD or FUNCTION_DECL inside FNS.  FNS can be an"}, {"sha": "2a84ea84780a69735bb164bc3340c639ee1bc3f0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a9a196102ff0d1bf27831e0ce396049cc334db8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a9a196102ff0d1bf27831e0ce396049cc334db8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5a9a196102ff0d1bf27831e0ce396049cc334db8", "patch": "@@ -1,3 +1,7 @@\n+2002-09-30  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.dg/overload/member1.C: New test.\n+\n 2002-09-30  Mark Mitchell  <mark@codesourcery.com>\n \n \t* g++.dg/abi/empty7.C: New test."}, {"sha": "29896a5110fafb5441f5a5435e93c2e520954dc8", "filename": "gcc/testsuite/g++.dg/overload/member1.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a9a196102ff0d1bf27831e0ce396049cc334db8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fmember1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a9a196102ff0d1bf27831e0ce396049cc334db8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fmember1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fmember1.C?ref=5a9a196102ff0d1bf27831e0ce396049cc334db8", "patch": "@@ -0,0 +1,22 @@\n+// { dg-do compile }\n+\n+// Copyright (C) 2002 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 29 Sep 2002 <nathan@codesourcery.com>\n+\n+struct X\n+{\n+  template<typename T> static void ProcessProxy ();\n+  typedef void (*Callback) ();\n+  void Process (Callback);\n+  \n+  template<typename T> void Process ()\n+  {\n+    Process (&ProcessProxy<T>);\n+  }\n+  \n+};\n+\n+void foo (X *x)\n+{\n+  x->Process<int> ();\n+}"}]}