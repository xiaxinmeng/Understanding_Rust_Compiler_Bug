{"sha": "0ba6aff37954721a287391ae505ef0aface6b533", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGJhNmFmZjM3OTU0NzIxYTI4NzM5MWFlNTA1ZWYwYWZhY2U2YjUzMw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-07-05T19:30:57Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-07-05T19:30:57Z"}, "message": "ChangeLog: Fix whitespace.\n\n\t* ChangeLog: Fix whitespace.\n\t* testsuite/ChangeLog: Ditto.\n\nFrom-SVN: r200721", "tree": {"sha": "da90cd3e3c4d2fad4714cfd820e9de8ca785298b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da90cd3e3c4d2fad4714cfd820e9de8ca785298b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ba6aff37954721a287391ae505ef0aface6b533", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ba6aff37954721a287391ae505ef0aface6b533", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ba6aff37954721a287391ae505ef0aface6b533", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ba6aff37954721a287391ae505ef0aface6b533/comments", "author": null, "committer": null, "parents": [{"sha": "fb506173362d3c63534281fb88bdaecf1a86caf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb506173362d3c63534281fb88bdaecf1a86caf1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb506173362d3c63534281fb88bdaecf1a86caf1"}], "stats": {"total": 67, "additions": 30, "deletions": 37}, "files": [{"sha": "fef987619944bbd16881778f2c02505c8c72a163", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 28, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ba6aff37954721a287391ae505ef0aface6b533/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ba6aff37954721a287391ae505ef0aface6b533/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0ba6aff37954721a287391ae505ef0aface6b533", "patch": "@@ -52,8 +52,8 @@\n \n 2013-07-02  Sriraman Tallam  <tmsriram@google.com>\n \n-\t* config/i386/i386.c (gate_insert_vzeroupper): Check if target\n-\tISA is AVX.\n+\t* config/i386/i386.c (gate_insert_vzeroupper): Check if\n+\ttarget ISA is AVX.\n \t(ix86_option_override_internal):Turn on all -mavx target flags by\n \tdefault as they are dependent on AVX anyway.\n \n@@ -75,8 +75,7 @@\n \n 2013-07-02  Ian Bolton  <ian.bolton@arm.com>\n \n-\t* config/aarch64/aarch64-simd.md (absdi2): Support abs for\n-\tDI mode.\n+\t* config/aarch64/aarch64-simd.md (absdi2): Support abs for DI mode.\n \n 2013-07-02  Ian Bolton  <ian.bolton@arm.com>\n \n@@ -285,8 +284,7 @@\n \n 2013-06-29  Yufeng Zhang  <yufeng.zhang@arm.com>\n \n-\t* config/aarch64/aarch64.c: Remove junk from the beginning of the\n-\tfile.\n+\t* config/aarch64/aarch64.c: Remove junk from the beginning of the file.\n \n 2013-06-28  Vladimir Makarov  <vmakarov@redhat.com>\n \n@@ -301,9 +299,8 @@\n 2013-06-28  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/57736\n-\t* config/i386/i386.c (ix86_expand_builtin): If target == NULL\n-\tand mode is VOIDmode, don't create a VOIDmode pseudo to copy result\n-\tinto.\n+\t* config/i386/i386.c (ix86_expand_builtin): If target == NULL and\n+\tmode is VOIDmode, don't create a VOIDmode pseudo to copy result into.\n \n 2013-06-28  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n \n@@ -335,8 +332,8 @@\n \n 2013-06-28  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n \n-\t* config/aarch64/aarch64-protos.h\n-\taarch64_classify_symbol_expression): Define.\n+\t* config/aarch64/aarch64-protos.h (aarch64_classify_symbol_expression):\n+\tDefine.\n \t(aarch64_symbolic_constant_p): Remove.\n \t* config/aarch64/aarch64.c (aarch64_classify_symbol_expression): Remove\n \tstatic.  Fix line length and white space.\n@@ -469,8 +466,7 @@\n \n \t* config/mips/mips-tables.opt: Regenerate.\n \t* config/mips/mips-cpus.def: Add m14ke and m14kec.\n-\t* config/mips/mips.h (BASE_DRIVER_SELF_SPECS): m14ke* implies\n-\t-mdspr2.\n+\t* config/mips/mips.h (BASE_DRIVER_SELF_SPECS): m14ke* implies -mdspr2.\n \t* doc/invoke.texi: Add -m14kc.\n \n 2013-06-27  Jakub Jelinek  <jakub@redhat.com>\n@@ -486,8 +482,8 @@\n \n 2013-06-27  Vladimir Makarov  <vmakarov@redhat.com>\n \n-\t* lra-constraints.c (inherit_in_ebb): Process static hard regs\n-\ttoo.  Process OP_INOUT regs for splitting too.\n+\t* lra-constraints.c (inherit_in_ebb): Process static hard regs too.\n+\tProcess OP_INOUT regs for splitting too.\n \n 2013-06-27  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -543,8 +539,7 @@\n \t(s390_expand_builtin): New function.\n \t(TARGET_INIT_BUILTINS): Define.\n \t(TARGET_EXPAND_BUILTIN): Define.\n-\t* common/config/s390/s390-common.c (processor_flags_table): Add\n-\tPF_TX.\n+\t* common/config/s390/s390-common.c (processor_flags_table): Add PF_TX.\n \t* config/s390/predicates.md (s390_comparison): Handle CCRAWmode.\n \t(s390_alc_comparison): Likewise.\n \t* config/s390/s390-modes.def: Add CCRAWmode.\n@@ -555,8 +550,7 @@\n \t* config/s390/s390.md: Rename UNSPEC_CCU_TO_INT to\n \tUNSPEC_STRCMPCC_TO_INT and UNSPEC_CCZ_TO_INT to UNSPEC_CC_TO_INT.\n \t(UNSPECV_TBEGIN, UNSPECV_TBEGINC, UNSPECV_TEND, UNSPECV_TABORT)\n-\t(UNSPECV_ETND, UNSPECV_NTSTG, UNSPECV_PPA): New unspecv enum\n-\tvalues.\n+\t(UNSPECV_ETND, UNSPECV_NTSTG, UNSPECV_PPA): New unspecv enum values.\n \t(TBEGIN_MASK, TBEGINC_MASK): New constants.\n \t(\"*cc_to_int\"): Move up.\n \t(\"*mov<mode>cc\", \"*cjump_64\", \"*cjump_31\"): Accept integer\n@@ -578,8 +572,7 @@\n 2013-06-26  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* config/i386/gnu.h [TARGET_LIBC_PROVIDES_SSP]\n-\t(TARGET_CAN_SPLIT_STACK, TARGET_THREAD_SPLIT_STACK_OFFSET):\n-\tUndefine.\n+\t(TARGET_CAN_SPLIT_STACK, TARGET_THREAD_SPLIT_STACK_OFFSET): Undefine.\n \n 2013-06-26  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \t    Pat Haugen <pthaugen@us.ibm.com>\n@@ -612,8 +605,7 @@\n \tPR tree-optimization/57705\n \t* tree-vect-loop.c (vect_is_simple_iv_evolution): Allow\n \tSSA_NAME step, provided that it is not defined inside the loop.\n-\t(vect_analyze_scalar_cycles_1): Disallow SSA_NAME step in nested\n-\tloop.\n+\t(vect_analyze_scalar_cycles_1): Disallow SSA_NAME step in nested loop.\n \t(get_initial_def_for_induction): Handle SSA_NAME IV step.\n \n 2013-06-25  Martin Jambor  <mjambor@suse.cz>\n@@ -663,8 +655,7 @@\n \n 2013-06-24  Richard Biener  <rguenther@suse.de>\n \n-\t* pointer-set.h (struct pointer_set_t): Move here from\n-\tpointer-set.c.\n+\t* pointer-set.h (struct pointer_set_t): Move here from pointer-set.c.\n \t(pointer_set_lookup): Declare.\n \t(class pointer_map): New template class implementing a\n \tgeneric pointer to T map.\n@@ -728,7 +719,8 @@\n \twhen current target options does not apply.\n \t* config/i386/i386-protos.h (ix86_reset_previous_fndecl): New function.\n \t* config/i386/i386.c (ix86_reset_previous_fndecl): Ditto.\n-\t* config/i386/bmiintrin.h: Pass appropriate target attributes to header.\n+\t* config/i386/bmiintrin.h: Pass appropriate target\n+\tattributes to header.\n \t* config/i386/mmintrin.h: Ditto.\n \t* config/i386/nmmintrin.h: Ditto.\n \t* config/i386/avx2intrin.h: Ditto.\n@@ -776,8 +768,7 @@\n \n 2013-06-21  Andi Kleen  <ak@linux.intel.com>\n \n-\t* doc/extend.texi: Dont use __atomic_clear in HLE\n-\texample.  Fix typo.\n+\t* doc/extend.texi: Dont use __atomic_clear in HLE example.  Fix typo.\n \n 2013-06-21  Andi Kleen  <ak@linux.intel.com>\n "}, {"sha": "b37d8d58bc5e8dcae32b6e2b27053678eae2fd33", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ba6aff37954721a287391ae505ef0aface6b533/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ba6aff37954721a287391ae505ef0aface6b533/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0ba6aff37954721a287391ae505ef0aface6b533", "patch": "@@ -256,18 +256,19 @@\n 2013-06-21  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n \n \t* c-c++-common/cilk-plus/AN/array_test1.c: Make this an execution test.\n-\tAlso changed the returns from error as distinct values so that debugging\n-\tcan get easier.\n+\tAlso changed the returns from error as distinct values so that\n+\tdebugging can get easier.\n \t* c-c++-common/cilk-plus/AN/if_test_errors.c (main): Made certain\n-\terrors specific to C, if necessary.  Also added new error hooks for C++.\n+\terrors specific to C, if necessary.  Also added new error\n+\thooks for C++.\n \t* c-c++-common/cilk-plus/AN/misc.c (main): Likewise.\n \t* c-c++-common/cilk-plus/AN/parser_errors.c (main): Likewise.\n \t* c-c++-common/cilk-plus/AN/parser_errors2.c (main): Likewise.\n \t* c-c++-common/cilk-plus/AN/parser_errors3.c (main): Likewise.\n \t* c-c++-common/cilk-plus/AN/pr57541.c (main): Likewise.\n-\t* c-c++-common/cilk-plus/AN/parser_errors4.c (main): In addition to the\n-\tsame changes as parser_errors3.c, spaces were added between colons to\n-\tnot confuse C++ compiler with 2 colons as scope.\n+\t* c-c++-common/cilk-plus/AN/parser_errors4.c (main): In addition to\n+\tthe same changes as parser_errors3.c, spaces were added between colons\n+\tto not confuse C++ compiler with 2 colons as scope.\n \t* c-c++-common/cilk-plus/AN/vla.c: Make this test C specific.\n \t* g++.dg/cilk-plus/AN/array_test1_tplt.cc: New test.\n \t* g++.dg/cilk-plus/AN/array_test2_tplt.cc: Likewise.\n@@ -279,7 +280,8 @@\n \t* g++.dg/cilk-plus/AN/preincr_test.cc: Likewise.\n \t* g++.dg/cilk-plus/AN/postincr_test.cc: Likewise.\n \t* g++.dg/cilk-plus/cilk-plus.exp: New script.\n-\t* gcc/testsuite/g++.dg/dg.exp: Included Cilk Plus C++ tests in the list.\n+\t* gcc/testsuite/g++.dg/dg.exp: Included Cilk Plus C++ tests\n+\tin the list.\n \n 2013-06-21  Joseph Myers  <joseph@codesourcery.com>\n \n@@ -314,7 +316,7 @@\n \tPR tree-optimization/57584\n \t* gcc.dg/torture/pr57584.c: New testcase.\n \n-2013-06-19    <singhai@google.com>\n+2013-06-19  Sharad Singhai  <singhai@google.com>\n \n \t* g++.dg/gcov/gcov-8.C: New testcase.\n \t* lib/gcov.exp: Handle intermediate format.\n@@ -1689,7 +1691,7 @@\n 2013-05-14  Joern Rennecke <joern.rennecke@embecosm.com>\n \n \t* gcc.c-torture/compile/limits-externdecl.c [target avr-*-*]:\n-        Expect \"size of array is too large\" error.\n+\tExpect \"size of array is too large\" error.\n \n 2013-05-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n "}]}