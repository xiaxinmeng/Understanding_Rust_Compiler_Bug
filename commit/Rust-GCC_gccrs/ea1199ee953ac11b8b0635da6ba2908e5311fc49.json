{"sha": "ea1199ee953ac11b8b0635da6ba2908e5311fc49", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWExMTk5ZWU5NTNhYzExYjhiMDYzNWRhNmJhMjkwOGU1MzExZmM0OQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-03-19T15:34:00Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-03-19T15:34:00Z"}, "message": "re PR c/39495 (OMP parallel loop w/ unsigned index var rejected)\n\n\tPR c/39495\n\t* c-omp.c (c_finish_omp_for): Allow NE_EXPR with TREE_TYPE (decl)'s\n\tminimum or maximum value.\n\n\t* parser.c (cp_parser_omp_for_cond): Don't check lhs if decl is NULL.\n\t(cp_parser_omp_for_loop): Always use cp_parser_omp_for_cond.\n\n\t* gcc.dg/gomp/pr39495-1.c: New test.\n\t* gcc.dg/gomp/pr39495-2.c: New test.\n\t* g++.dg/gomp/pr39495-1.C: New test.\n\t* g++.dg/gomp/pr39495-2.C: New test.\n\nFrom-SVN: r144965", "tree": {"sha": "3413aca2f5e318c5d2997003e2eef0683021ee20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3413aca2f5e318c5d2997003e2eef0683021ee20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea1199ee953ac11b8b0635da6ba2908e5311fc49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea1199ee953ac11b8b0635da6ba2908e5311fc49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea1199ee953ac11b8b0635da6ba2908e5311fc49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea1199ee953ac11b8b0635da6ba2908e5311fc49/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "58929c1068f0550be90d3921305b14fb3dc37132", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58929c1068f0550be90d3921305b14fb3dc37132", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58929c1068f0550be90d3921305b14fb3dc37132"}], "stats": {"total": 320, "additions": 307, "deletions": 13}, "files": [{"sha": "a6aefeefa7ca3ae36646ed84941ffaf833f3c062", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1199ee953ac11b8b0635da6ba2908e5311fc49/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1199ee953ac11b8b0635da6ba2908e5311fc49/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ea1199ee953ac11b8b0635da6ba2908e5311fc49", "patch": "@@ -1,3 +1,9 @@\n+2009-03-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/39495\n+\t* c-omp.c (c_finish_omp_for): Allow NE_EXPR with TREE_TYPE (decl)'s\n+\tminimum or maximum value.\n+\n 2009-03-19  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* reginfo.c (globalize_reg): Recompute derived reg sets."}, {"sha": "33f0a83e1a8711b4687f8fa7abd9cd83443ba5cd", "filename": "gcc/c-omp.c", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1199ee953ac11b8b0635da6ba2908e5311fc49/gcc%2Fc-omp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1199ee953ac11b8b0635da6ba2908e5311fc49/gcc%2Fc-omp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-omp.c?ref=ea1199ee953ac11b8b0635da6ba2908e5311fc49", "patch": "@@ -1,7 +1,7 @@\n /* This file contains routines to construct GNU OpenMP constructs, \n    called from parsing in the C and C++ front ends.\n \n-   Copyright (C) 2005, 2007, 2008 Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2007, 2008, 2009 Free Software Foundation, Inc.\n    Contributed by Richard Henderson <rth@redhat.com>,\n \t\t  Diego Novillo <dnovillo@redhat.com>.\n \n@@ -280,7 +280,8 @@ c_finish_omp_for (location_t locus, tree declv, tree initv, tree condv,\n \t  if (TREE_CODE (cond) == LT_EXPR\n \t      || TREE_CODE (cond) == LE_EXPR\n \t      || TREE_CODE (cond) == GT_EXPR\n-\t      || TREE_CODE (cond) == GE_EXPR)\n+\t      || TREE_CODE (cond) == GE_EXPR\n+\t      || TREE_CODE (cond) == NE_EXPR)\n \t    {\n \t      tree op0 = TREE_OPERAND (cond, 0);\n \t      tree op1 = TREE_OPERAND (cond, 1);\n@@ -324,6 +325,22 @@ c_finish_omp_for (location_t locus, tree declv, tree initv, tree condv,\n \t\t  TREE_OPERAND (cond, 0) = decl;\n \t\t  cond_ok = true;\n \t\t}\n+\n+\t      if (TREE_CODE (cond) == NE_EXPR)\n+\t\t{\n+\t\t  if (!INTEGRAL_TYPE_P (TREE_TYPE (decl)))\n+\t\t    cond_ok = false;\n+\t\t  else if (operand_equal_p (TREE_OPERAND (cond, 1),\n+\t\t\t\t\t    TYPE_MIN_VALUE (TREE_TYPE (decl)),\n+\t\t\t\t\t    0))\n+\t\t    TREE_SET_CODE (cond, GT_EXPR);\n+\t\t  else if (operand_equal_p (TREE_OPERAND (cond, 1),\n+\t\t\t\t\t    TYPE_MAX_VALUE (TREE_TYPE (decl)),\n+\t\t\t\t\t    0))\n+\t\t    TREE_SET_CODE (cond, LT_EXPR);\n+\t\t  else\n+\t\t    cond_ok = false;\n+\t\t}\n \t    }\n \n \t  if (!cond_ok)"}, {"sha": "f53394424bfe92c7abf56c1e0c6cf05884208ec3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1199ee953ac11b8b0635da6ba2908e5311fc49/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1199ee953ac11b8b0635da6ba2908e5311fc49/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ea1199ee953ac11b8b0635da6ba2908e5311fc49", "patch": "@@ -1,3 +1,9 @@\n+2009-03-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/39495\n+\t* parser.c (cp_parser_omp_for_cond): Don't check lhs if decl is NULL.\n+\t(cp_parser_omp_for_loop): Always use cp_parser_omp_for_cond.\n+\n 2009-03-18  Jakub Jelinek  <jakub@redhat.com>\n \n \t* parser.c (struct cp_token): Reorder fields for 64-bit hosts."}, {"sha": "60787b026f001d706d00ec268ad2ad9bdd57eb33", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1199ee953ac11b8b0635da6ba2908e5311fc49/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1199ee953ac11b8b0635da6ba2908e5311fc49/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=ea1199ee953ac11b8b0635da6ba2908e5311fc49", "patch": "@@ -21012,7 +21012,7 @@ cp_parser_omp_for_cond (cp_parser *parser, tree decl)\n   enum tree_code op;\n   cp_token *token;\n \n-  if (lhs != decl)\n+  if (decl && lhs != decl)\n     {\n       cp_parser_skip_to_end_of_statement (parser);\n       return error_mark_node;\n@@ -21414,16 +21414,7 @@ cp_parser_omp_for_loop (cp_parser *parser, tree clauses, tree *par_clauses)\n \n       cond = NULL;\n       if (cp_lexer_next_token_is_not (parser->lexer, CPP_SEMICOLON))\n-\t{\n-\t  /* If decl is an iterator, preserve LHS and RHS of the relational\n-\t     expr until finish_omp_for.  */\n-\t  if (decl\n-\t      && (type_dependent_expression_p (decl)\n-\t\t  || CLASS_TYPE_P (TREE_TYPE (decl))))\n-\t    cond = cp_parser_omp_for_cond (parser, decl);\n-\t  else\n-\t    cond = cp_parser_condition (parser);\n-\t}\n+\tcond = cp_parser_omp_for_cond (parser, decl);\n       cp_parser_require (parser, CPP_SEMICOLON, \"%<;%>\");\n \n       incr = NULL;"}, {"sha": "6f5dfa92b979ae5903ca598baa8cb1d49a5e2354", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1199ee953ac11b8b0635da6ba2908e5311fc49/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1199ee953ac11b8b0635da6ba2908e5311fc49/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ea1199ee953ac11b8b0635da6ba2908e5311fc49", "patch": "@@ -1,5 +1,11 @@\n 2009-03-19  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c/39495\n+\t* gcc.dg/gomp/pr39495-1.c: New test.\n+\t* gcc.dg/gomp/pr39495-2.c: New test.\n+\t* g++.dg/gomp/pr39495-1.C: New test.\n+\t* g++.dg/gomp/pr39495-2.C: New test.\n+\n \tPR target/39496\n \t* gcc.target/i386/pr39496.c: New test.\n \t* g++.dg/other/pr39496.C: New test."}, {"sha": "8563e684fff896a6644fdd7ea820b02875a01485", "filename": "gcc/testsuite/g++.dg/gomp/pr39495-1.C", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1199ee953ac11b8b0635da6ba2908e5311fc49/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr39495-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1199ee953ac11b8b0635da6ba2908e5311fc49/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr39495-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr39495-1.C?ref=ea1199ee953ac11b8b0635da6ba2908e5311fc49", "patch": "@@ -0,0 +1,95 @@\n+// PR c/39495\n+// { dg-do compile }\n+// { dg-options \"-fopenmp\" }\n+\n+#define INT_MIN (-__INT_MAX__ - 1)\n+#define INT_MAX __INT_MAX__\n+#define UINT_MAX (2U * __INT_MAX__ + 1)\n+\n+int\n+foo (void)\n+{\n+  int i;\n+  unsigned int u;\n+\n+#pragma omp for\n+  for (i = INT_MIN + 6; i > INT_MIN + 1; i--)\n+    ;\n+#pragma omp for\n+  for (i = INT_MIN + 6; i >= INT_MIN + 1; i--)\n+    ;\n+#pragma omp for\n+  for (i = INT_MIN + 6; i > INT_MIN; i--)\n+    ;\n+#pragma omp for\n+  for (i = INT_MAX - 6; i < INT_MAX - 1; i++)\n+    ;\n+#pragma omp for\n+  for (i = INT_MAX - 6; i <= INT_MAX - 1; i++)\n+    ;\n+#pragma omp for\n+  for (i = INT_MAX - 6; i < INT_MAX; i++)\n+    ;\n+#pragma omp for\n+  for (u = 6; u > 1; u--)\n+    ;\n+#pragma omp for\n+  for (u = 6; u >= 1; u--)\n+    ;\n+#pragma omp for\n+  for (u = 6; u > 0; u--)\n+    ;\n+#pragma omp for\n+  for (u = UINT_MAX - 6; u < UINT_MAX - 1; u++)\n+    ;\n+#pragma omp for\n+  for (u = UINT_MAX - 6; u <= UINT_MAX - 1; u++)\n+    ;\n+#pragma omp for\n+  for (u = UINT_MAX - 6; u < UINT_MAX; u++)\n+    ;\n+}\n+\n+int\n+bar (void)\n+{\n+  int i;\n+  unsigned int u;\n+\n+#pragma omp for\n+  for (i = INT_MIN + 6; i > INT_MIN + 1; i -= 2)\n+    ;\n+#pragma omp for\n+  for (i = INT_MIN + 6; i >= INT_MIN + 1; i -= 2)\n+    ;\n+#pragma omp for\n+  for (i = INT_MIN + 6; i > INT_MIN; i -= 2)\n+    ;\n+#pragma omp for\n+  for (i = INT_MAX - 6; i < INT_MAX - 1; i += 2)\n+    ;\n+#pragma omp for\n+  for (i = INT_MAX - 6; i <= INT_MAX - 1; i += 2)\n+    ;\n+#pragma omp for\n+  for (i = INT_MAX - 6; i < INT_MAX; i += 2)\n+    ;\n+#pragma omp for\n+  for (u = 6; u > 1; u -= 2)\n+    ;\n+#pragma omp for\n+  for (u = 6; u >= 1; u -= 2)\n+    ;\n+#pragma omp for\n+  for (u = 6; u > 0; u -= 2)\n+    ;\n+#pragma omp for\n+  for (u = UINT_MAX - 6; u < UINT_MAX - 1; u += 2)\n+    ;\n+#pragma omp for\n+  for (u = UINT_MAX - 6; u <= UINT_MAX - 1; u += 2)\n+    ;\n+#pragma omp for\n+  for (u = UINT_MAX - 6; u < UINT_MAX; u += 2)\n+    ;\n+}"}, {"sha": "c0b4d5dbdeeaaaeaeee01106323ecac3e188d6f2", "filename": "gcc/testsuite/g++.dg/gomp/pr39495-2.C", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1199ee953ac11b8b0635da6ba2908e5311fc49/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr39495-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1199ee953ac11b8b0635da6ba2908e5311fc49/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr39495-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr39495-2.C?ref=ea1199ee953ac11b8b0635da6ba2908e5311fc49", "patch": "@@ -0,0 +1,39 @@\n+// PR c/39495\n+// { dg-do compile }\n+// { dg-options \"-fopenmp\" }\n+\n+#define INT_MIN (-__INT_MAX__ - 1)\n+#define INT_MAX __INT_MAX__\n+#define UINT_MAX (2U * __INT_MAX__ + 1)\n+\n+int\n+foo (void)\n+{\n+  int i;\n+  unsigned int u;\n+\n+#pragma omp for\n+  for (i = INT_MIN + 6; i != INT_MIN; i--)\t// { dg-error \"invalid controlling predicate\" }\n+    ;\n+#pragma omp for\n+  for (i = INT_MIN + 6; i == INT_MIN; i--)\t// { dg-error \"invalid controlling predicate\" }\n+    ;\n+#pragma omp for\n+  for (i = INT_MAX - 6; i != INT_MAX; i++)\t// { dg-error \"invalid controlling predicate\" }\n+    ;\n+#pragma omp for\n+  for (i = INT_MAX - 6; i == INT_MAX; i++)\t// { dg-error \"invalid controlling predicate\" }\n+    ;\n+#pragma omp for\n+  for (u = 6; u != 0; u--)\t\t\t// { dg-error \"invalid controlling predicate\" }\n+    ;\n+#pragma omp for\n+  for (u = 6; u == 0; u--)\t\t\t// { dg-error \"invalid controlling predicate\" }\n+    ;\n+#pragma omp for\n+  for (u = UINT_MAX - 6; u != UINT_MAX; u++)\t// { dg-error \"invalid controlling predicate\" }\n+    ;\n+#pragma omp for\n+  for (u = UINT_MAX - 6; u == UINT_MAX; u++)\t// { dg-error \"invalid controlling predicate\" }\n+    ;\n+}"}, {"sha": "cc165ca52db905e86765fee4199d828b16df3834", "filename": "gcc/testsuite/gcc.dg/gomp/pr39495-1.c", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1199ee953ac11b8b0635da6ba2908e5311fc49/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr39495-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1199ee953ac11b8b0635da6ba2908e5311fc49/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr39495-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr39495-1.c?ref=ea1199ee953ac11b8b0635da6ba2908e5311fc49", "patch": "@@ -0,0 +1,95 @@\n+/* PR c/39495 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fopenmp\" } */\n+\n+#define INT_MIN (-__INT_MAX__ - 1)\n+#define INT_MAX __INT_MAX__\n+#define UINT_MAX (2U * __INT_MAX__ + 1)\n+\n+int\n+foo (void)\n+{\n+  int i;\n+  unsigned int u;\n+\n+#pragma omp for\n+  for (i = INT_MIN + 6; i > INT_MIN + 1; i--)\n+    ;\n+#pragma omp for\n+  for (i = INT_MIN + 6; i >= INT_MIN + 1; i--)\n+    ;\n+#pragma omp for\n+  for (i = INT_MIN + 6; i > INT_MIN; i--)\n+    ;\n+#pragma omp for\n+  for (i = INT_MAX - 6; i < INT_MAX - 1; i++)\n+    ;\n+#pragma omp for\n+  for (i = INT_MAX - 6; i <= INT_MAX - 1; i++)\n+    ;\n+#pragma omp for\n+  for (i = INT_MAX - 6; i < INT_MAX; i++)\n+    ;\n+#pragma omp for\n+  for (u = 6; u > 1; u--)\n+    ;\n+#pragma omp for\n+  for (u = 6; u >= 1; u--)\n+    ;\n+#pragma omp for\n+  for (u = 6; u > 0; u--)\n+    ;\n+#pragma omp for\n+  for (u = UINT_MAX - 6; u < UINT_MAX - 1; u++)\n+    ;\n+#pragma omp for\n+  for (u = UINT_MAX - 6; u <= UINT_MAX - 1; u++)\n+    ;\n+#pragma omp for\n+  for (u = UINT_MAX - 6; u < UINT_MAX; u++)\n+    ;\n+}\n+\n+int\n+bar (void)\n+{\n+  int i;\n+  unsigned int u;\n+\n+#pragma omp for\n+  for (i = INT_MIN + 6; i > INT_MIN + 1; i -= 2)\n+    ;\n+#pragma omp for\n+  for (i = INT_MIN + 6; i >= INT_MIN + 1; i -= 2)\n+    ;\n+#pragma omp for\n+  for (i = INT_MIN + 6; i > INT_MIN; i -= 2)\n+    ;\n+#pragma omp for\n+  for (i = INT_MAX - 6; i < INT_MAX - 1; i += 2)\n+    ;\n+#pragma omp for\n+  for (i = INT_MAX - 6; i <= INT_MAX - 1; i += 2)\n+    ;\n+#pragma omp for\n+  for (i = INT_MAX - 6; i < INT_MAX; i += 2)\n+    ;\n+#pragma omp for\n+  for (u = 6; u > 1; u -= 2)\n+    ;\n+#pragma omp for\n+  for (u = 6; u >= 1; u -= 2)\n+    ;\n+#pragma omp for\n+  for (u = 6; u > 0; u -= 2)\n+    ;\n+#pragma omp for\n+  for (u = UINT_MAX - 6; u < UINT_MAX - 1; u += 2)\n+    ;\n+#pragma omp for\n+  for (u = UINT_MAX - 6; u <= UINT_MAX - 1; u += 2)\n+    ;\n+#pragma omp for\n+  for (u = UINT_MAX - 6; u < UINT_MAX; u += 2)\n+    ;\n+}"}, {"sha": "e46369637b75eabaeec0f9773789cd673178903f", "filename": "gcc/testsuite/gcc.dg/gomp/pr39495-2.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1199ee953ac11b8b0635da6ba2908e5311fc49/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr39495-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1199ee953ac11b8b0635da6ba2908e5311fc49/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr39495-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr39495-2.c?ref=ea1199ee953ac11b8b0635da6ba2908e5311fc49", "patch": "@@ -0,0 +1,39 @@\n+/* PR c/39495 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fopenmp\" } */\n+\n+#define INT_MIN (-__INT_MAX__ - 1)\n+#define INT_MAX __INT_MAX__\n+#define UINT_MAX (2U * __INT_MAX__ + 1)\n+\n+int\n+foo (void)\n+{\n+  int i;\n+  unsigned int u;\n+\n+#pragma omp for\n+  for (i = INT_MIN + 6; i != INT_MIN; i--)\t/* { dg-error \"invalid controlling predicate\" \"\" { xfail *-*-* } } */\n+    ;\n+#pragma omp for\n+  for (i = INT_MIN + 6; i == INT_MIN; i--)\t/* { dg-error \"invalid controlling predicate\" } */\n+    ;\n+#pragma omp for\n+  for (i = INT_MAX - 6; i != INT_MAX; i++)\t/* { dg-error \"invalid controlling predicate\" \"\" { xfail *-*-* }  } */\n+    ;\n+#pragma omp for\n+  for (i = INT_MAX - 6; i == INT_MAX; i++)\t/* { dg-error \"invalid controlling predicate\" } */\n+    ;\n+#pragma omp for\n+  for (u = 6; u != 0; u--)\t\t\t/* { dg-error \"invalid controlling predicate\" \"\" { xfail *-*-* }  } */\n+    ;\n+#pragma omp for\n+  for (u = 6; u == 0; u--)\t\t\t/* { dg-error \"invalid controlling predicate\" } */\n+    ;\n+#pragma omp for\n+  for (u = UINT_MAX - 6; u != UINT_MAX; u++)\t/* { dg-error \"invalid controlling predicate\" \"\" { xfail *-*-* }  } */\n+    ;\n+#pragma omp for\n+  for (u = UINT_MAX - 6; u == UINT_MAX; u++)\t/* { dg-error \"invalid controlling predicate\" } */\n+    ;\n+}"}]}