{"sha": "7356fbde50dd4bfd55eaa0bed31b31da55d1461c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM1NmZiZGU1MGRkNGJmZDU1ZWFhMGJlZDMxYjMxZGE1NWQxNDYxYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-02-05T15:38:57Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-02-05T15:38:57Z"}, "message": "re PR rtl-optimization/89195 (Corrupted stack offset after combine)\n\n\tPR rtl-optimization/89195\n\t* combine.c (make_extraction): For MEMs, don't extract bytes outside\n\tof the original MEM.\n\n\t* gcc.c-torture/execute/pr89195.c: New test.\n\nFrom-SVN: r268542", "tree": {"sha": "7e1963ea7a68f515f1a35d79294711996b35c81e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e1963ea7a68f515f1a35d79294711996b35c81e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7356fbde50dd4bfd55eaa0bed31b31da55d1461c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7356fbde50dd4bfd55eaa0bed31b31da55d1461c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7356fbde50dd4bfd55eaa0bed31b31da55d1461c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7356fbde50dd4bfd55eaa0bed31b31da55d1461c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cff2ddc9c7ece6413e77625e58edc71b88bb58bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cff2ddc9c7ece6413e77625e58edc71b88bb58bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cff2ddc9c7ece6413e77625e58edc71b88bb58bb"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "c3340dbaf4085dce6599e1118fc98fe5e99b7e18", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7356fbde50dd4bfd55eaa0bed31b31da55d1461c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7356fbde50dd4bfd55eaa0bed31b31da55d1461c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7356fbde50dd4bfd55eaa0bed31b31da55d1461c", "patch": "@@ -1,3 +1,9 @@\n+2019-02-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/89195\n+\t* combine.c (make_extraction): For MEMs, don't extract bytes outside\n+\tof the original MEM.\n+\n 2019-02-05  Martin Liska  <mliska@suse.cz>\n \n \tPR gcov-profile/89000"}, {"sha": "a24924816933affe25bb073f78a4bcfcd35295a6", "filename": "gcc/combine.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7356fbde50dd4bfd55eaa0bed31b31da55d1461c/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7356fbde50dd4bfd55eaa0bed31b31da55d1461c/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=7356fbde50dd4bfd55eaa0bed31b31da55d1461c", "patch": "@@ -7687,6 +7687,7 @@ make_extraction (machine_mode mode, rtx inner, HOST_WIDE_INT pos,\n \t      /* We can't do this if we are widening INNER_MODE (it\n \t\t may not be aligned, for one thing).  */\n \t      && !paradoxical_subreg_p (tmode, inner_mode)\n+\t      && known_le (pos + len, GET_MODE_PRECISION (is_mode))\n \t      && (inner_mode == tmode\n \t\t  || (! mode_dependent_address_p (XEXP (inner, 0),\n \t\t\t\t\t\t  MEM_ADDR_SPACE (inner))"}, {"sha": "b232907be17c2925ffaabcbe134baff8449ff3a8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7356fbde50dd4bfd55eaa0bed31b31da55d1461c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7356fbde50dd4bfd55eaa0bed31b31da55d1461c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7356fbde50dd4bfd55eaa0bed31b31da55d1461c", "patch": "@@ -1,3 +1,8 @@\n+2019-02-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/89195\n+\t* gcc.c-torture/execute/pr89195.c: New test.\n+\n 2019-02-05  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n \n \t* gcc.target/powerpc/vec-extract-slong-1.c: Require p8 execution"}, {"sha": "017f5b4309aa5a670ce1261c73cabfed967237a6", "filename": "gcc/testsuite/gcc.c-torture/execute/pr89195.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7356fbde50dd4bfd55eaa0bed31b31da55d1461c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr89195.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7356fbde50dd4bfd55eaa0bed31b31da55d1461c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr89195.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr89195.c?ref=7356fbde50dd4bfd55eaa0bed31b31da55d1461c", "patch": "@@ -0,0 +1,22 @@\n+/* PR rtl-optimization/89195 */\n+/* { dg-require-effective-target int32plus } */\n+\n+struct S { unsigned i : 24; };\n+\n+volatile unsigned char x;\n+\n+__attribute__((noipa)) int\n+foo (struct S d) \n+{\n+  return d.i & x;\n+}\n+\n+int\n+main ()\n+{\n+  struct S d = { 0x123456 };\n+  x = 0x75;\n+  if (foo (d) != (0x56 & 0x75))\n+    __builtin_abort ();\n+  return 0;\n+}"}]}