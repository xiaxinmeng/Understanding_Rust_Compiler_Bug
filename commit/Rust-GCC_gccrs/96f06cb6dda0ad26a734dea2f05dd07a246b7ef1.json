{"sha": "96f06cb6dda0ad26a734dea2f05dd07a246b7ef1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZmMDZjYjZkZGEwYWQyNmE3MzRkZWEyZjA1ZGQwN2EyNDZiN2VmMQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-05-08T17:20:18Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-05-08T17:20:18Z"}, "message": "(fold, truth_andor): Disable optimization for side effects on RHS.\n\nFrom-SVN: r14047", "tree": {"sha": "880d3ba72df0358a5622b61385ba909ee7c49f28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/880d3ba72df0358a5622b61385ba909ee7c49f28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96f06cb6dda0ad26a734dea2f05dd07a246b7ef1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96f06cb6dda0ad26a734dea2f05dd07a246b7ef1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96f06cb6dda0ad26a734dea2f05dd07a246b7ef1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96f06cb6dda0ad26a734dea2f05dd07a246b7ef1/comments", "author": null, "committer": null, "parents": [{"sha": "95e8f2f3064f8ac1e9b6be9a25afb1d123b7ec4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95e8f2f3064f8ac1e9b6be9a25afb1d123b7ec4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95e8f2f3064f8ac1e9b6be9a25afb1d123b7ec4f"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "45311c91ed34347d9b695b4a463eb5b1c958e982", "filename": "gcc/fold-const.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96f06cb6dda0ad26a734dea2f05dd07a246b7ef1/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96f06cb6dda0ad26a734dea2f05dd07a246b7ef1/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=96f06cb6dda0ad26a734dea2f05dd07a246b7ef1", "patch": "@@ -4791,12 +4791,14 @@ fold (expr)\n \t to A || (B && C).  Note that either operator can be any of the four\n \t truth and/or operations and the transformation will still be\n \t valid.   Also note that we only care about order for the\n-\t ANDIF and ORIF operators.  */\n+\t ANDIF and ORIF operators.  If B contains side effects, this\n+\t might change the truth-value of A. */\n       if (TREE_CODE (arg0) == TREE_CODE (arg1)\n \t  && (TREE_CODE (arg0) == TRUTH_ANDIF_EXPR\n \t      || TREE_CODE (arg0) == TRUTH_ORIF_EXPR\n \t      || TREE_CODE (arg0) == TRUTH_AND_EXPR\n-\t      || TREE_CODE (arg0) == TRUTH_OR_EXPR))\n+\t      || TREE_CODE (arg0) == TRUTH_OR_EXPR)\n+\t  && ! TREE_SIDE_EFFECTS (TREE_OPERAND (arg0, 1)))\n \t{\n \t  tree a00 = TREE_OPERAND (arg0, 0);\n \t  tree a01 = TREE_OPERAND (arg0, 1);"}]}