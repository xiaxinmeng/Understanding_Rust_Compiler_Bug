{"sha": "cca3f03dfe3b3ab4d06353e541e17daa700f019c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NhM2YwM2RmZTNiM2FiNGQwNjM1M2U1NDFlMTdkYWE3MDBmMDE5Yw==", "commit": {"author": {"name": "David S. Miller", "email": "davem@davemloft.net", "date": "2011-10-24T23:04:40Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2011-10-24T23:04:40Z"}, "message": "Segregate sparc FP/VEC constant constraints.\n\n\t* config/sparc/sparc.md: Only use F, G, and C constraints in FP\n\tinsns.  Only use D, Y, and Z constraints in vector insns.\n\nFrom-SVN: r180410", "tree": {"sha": "eb258b3c72030955615aa020121b59e00772e0b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb258b3c72030955615aa020121b59e00772e0b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cca3f03dfe3b3ab4d06353e541e17daa700f019c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cca3f03dfe3b3ab4d06353e541e17daa700f019c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cca3f03dfe3b3ab4d06353e541e17daa700f019c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cca3f03dfe3b3ab4d06353e541e17daa700f019c/comments", "author": {"login": "davem330", "id": 1053866, "node_id": "MDQ6VXNlcjEwNTM4NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1053866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davem330", "html_url": "https://github.com/davem330", "followers_url": "https://api.github.com/users/davem330/followers", "following_url": "https://api.github.com/users/davem330/following{/other_user}", "gists_url": "https://api.github.com/users/davem330/gists{/gist_id}", "starred_url": "https://api.github.com/users/davem330/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davem330/subscriptions", "organizations_url": "https://api.github.com/users/davem330/orgs", "repos_url": "https://api.github.com/users/davem330/repos", "events_url": "https://api.github.com/users/davem330/events{/privacy}", "received_events_url": "https://api.github.com/users/davem330/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ce835863bad152d433fb7fb81a23b0eaae43671f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce835863bad152d433fb7fb81a23b0eaae43671f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce835863bad152d433fb7fb81a23b0eaae43671f"}], "stats": {"total": 27, "additions": 15, "deletions": 12}, "files": [{"sha": "a49628d5641f5944714f29c3c407b1d47ebae76d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cca3f03dfe3b3ab4d06353e541e17daa700f019c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cca3f03dfe3b3ab4d06353e541e17daa700f019c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cca3f03dfe3b3ab4d06353e541e17daa700f019c", "patch": "@@ -5,6 +5,9 @@\n \n 2011-10-24  David S. Miller  <davem@davemloft.net>\n \n+\t* config/sparc/sparc.md: Only use F, G, and C constraints in FP\n+\tinsns.  Only use D, Y, and Z constraints in vector insns.\n+\n \t* config/sparc/sparc.md (cpu_feature, enabled): New attributes.\n \t(*movsi_insn_novis3, *movsi_insn_vis3): Consolidate into one pattern\n \tcalled *movsi_insn."}, {"sha": "d1ebb24c25f5ee18620c7598cf421e8017762864", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cca3f03dfe3b3ab4d06353e541e17daa700f019c/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cca3f03dfe3b3ab4d06353e541e17daa700f019c/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=cca3f03dfe3b3ab4d06353e541e17daa700f019c", "patch": "@@ -1930,8 +1930,8 @@\n })\n \n (define_insn \"*movsf_insn\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=d, d,f,  *r,*r,*r,*r, f, f,*r, m,   m\")\n-\t(match_operand:SF 1 \"input_operand\"        \"GY,ZC,f,*rRY, Q, S, f,*r, m, m, f,*rGY\"))]\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=d,d,f, *r,*r,*r,*r, f, f,*r, m,   m\")\n+\t(match_operand:SF 1 \"input_operand\"         \"G,C,f,*rR, Q, S, f,*r, m, m, f,*rG\"))]\n   \"(register_operand (operands[0], SFmode)\n     || register_or_zero_or_all_ones_operand (operands[1], SFmode))\"\n {\n@@ -2027,8 +2027,8 @@\n })\n \n (define_insn \"*movdf_insn_sp32\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=b, b,e,e,*r, f,  e, T,W,U,T,  f,     *r,   o,o\")\n-        (match_operand:DF 1 \"input_operand\"        \"GY,ZC,e,e, f,*r,W#F,GY,e,T,U,o#F,*roGYDF,*rGY,f\"))]\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=b,b,e,e,*r, f,  e,T,W,U,T,  f,   *r,  o,o\")\n+        (match_operand:DF 1 \"input_operand\"         \"G,C,e,e, f,*r,W#F,G,e,T,U,o#F,*roGF,*rG,f\"))]\n   \"! TARGET_ARCH64\n    && (register_operand (operands[0], DFmode)\n        || register_or_zero_or_all_ones_operand (operands[1], DFmode))\"\n@@ -2054,8 +2054,8 @@\n    (set_attr \"cpu_feature\" \"vis,vis,v9,fpunotv9,vis3,vis3,fpu,v9,fpu,*,*,fpu,*,*,fpu\")])\n \n (define_insn \"*movdf_insn_sp64\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=b, b,e,*r, e,  e,W,  *r,*r,   m,*r\")\n-        (match_operand:DF 1 \"input_operand\"        \"GY,ZC,e, e,*r,W#F,e,*rGY, m,*rGY,DF\"))]\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=b,b,e,*r, e,  e,W, *r,*r,  m,*r\")\n+        (match_operand:DF 1 \"input_operand\"         \"G,C,e, e,*r,W#F,e,*rG, m,*rG, F\"))]\n   \"TARGET_ARCH64\n    && (register_operand (operands[0], DFmode)\n        || register_or_zero_or_all_ones_operand (operands[1], DFmode))\"\n@@ -7669,8 +7669,8 @@\n })\n \n (define_insn \"*mov<VM32:mode>_insn\"\n-  [(set (match_operand:VM32 0 \"nonimmediate_operand\" \"=f, f,f,f,m, m,*r, m,*r,*r, f\")\n-\t(match_operand:VM32 1 \"input_operand\"        \"GY,ZC,f,m,f,GY, m,*r,*r, f,*r\"))]\n+  [(set (match_operand:VM32 0 \"nonimmediate_operand\" \"=f,f,f,f,m,m,*r, m,*r,*r, f\")\n+\t(match_operand:VM32 1 \"input_operand\"         \"Y,Z,f,m,f,Y, m,*r,*r, f,*r\"))]\n   \"TARGET_VIS\n    && (register_operand (operands[0], <VM32:MODE>mode)\n        || register_or_zero_or_all_ones_operand (operands[1], <VM32:MODE>mode))\"\n@@ -7690,8 +7690,8 @@\n    (set_attr \"cpu_feature\" \"vis,vis,vis,*,*,*,*,*,*,vis3,vis3\")])\n \n (define_insn \"*mov<VM64:mode>_insn_sp64\"\n-  [(set (match_operand:VM64 0 \"nonimmediate_operand\" \"=e, e,e,e,m, m,*r, m,*r, f,*r\")\n-\t(match_operand:VM64 1 \"input_operand\"        \"GY,ZC,e,m,e,GY, m,*r, f,*r,*r\"))]\n+  [(set (match_operand:VM64 0 \"nonimmediate_operand\" \"=e,e,e,e,m,m,*r, m,*r, f,*r\")\n+\t(match_operand:VM64 1 \"input_operand\"         \"Y,C,e,m,e,Y, m,*r, f,*r,*r\"))]\n   \"TARGET_VIS\n    && TARGET_ARCH64\n    && (register_operand (operands[0], <VM64:MODE>mode)\n@@ -7712,8 +7712,8 @@\n    (set_attr \"cpu_feature\" \"vis,vis,vis,*,*,*,*,*,vis3,vis3,*\")])\n \n (define_insn \"*mov<VM64:mode>_insn_sp32\"\n-  [(set (match_operand:VM64 0 \"nonimmediate_operand\" \"=e, e,e,*r, f,e,m, m,U,T, o,*r\")\n-\t(match_operand:VM64 1 \"input_operand\"        \"GY,ZC,e, f,*r,m,e,GY,T,U,*r,*r\"))]\n+  [(set (match_operand:VM64 0 \"nonimmediate_operand\" \"=e,e,e,*r, f,e,m,m,U,T, o,*r\")\n+\t(match_operand:VM64 1 \"input_operand\"         \"Y,C,e, f,*r,m,e,Y,T,U,*r,*r\"))]\n   \"TARGET_VIS\n    && ! TARGET_ARCH64\n    && (register_operand (operands[0], <VM64:MODE>mode)"}]}