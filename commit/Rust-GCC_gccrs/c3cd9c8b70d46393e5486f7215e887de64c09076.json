{"sha": "c3cd9c8b70d46393e5486f7215e887de64c09076", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNjZDljOGI3MGQ0NjM5M2U1NDg2ZjcyMTVlODg3ZGU2NGMwOTA3Ng==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2001-04-23T22:55:32Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2001-04-23T22:55:32Z"}, "message": "c-convert.c (convert): When converting to a BOOLEAN_TYPE, avoid passing nested NOP_EXPRs to fold.\n\n\t* c-convert.c (convert): When converting to a BOOLEAN_TYPE, avoid\n\tpassing nested NOP_EXPRs to fold.\n\ntestsuite:\n\t* gcc.c-torture/compile/20010423-1.c: New test.\n\nFrom-SVN: r41508", "tree": {"sha": "e56281c646b5d3025e6590d3b59fc38691173903", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e56281c646b5d3025e6590d3b59fc38691173903"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3cd9c8b70d46393e5486f7215e887de64c09076", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3cd9c8b70d46393e5486f7215e887de64c09076", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3cd9c8b70d46393e5486f7215e887de64c09076", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3cd9c8b70d46393e5486f7215e887de64c09076/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "910e8539cb5a59b129ae4a95b6ffd47d88bbad41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/910e8539cb5a59b129ae4a95b6ffd47d88bbad41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/910e8539cb5a59b129ae4a95b6ffd47d88bbad41"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "fca2bcffc1a1511f9f08902dc2b2144acd1b4102", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cd9c8b70d46393e5486f7215e887de64c09076/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cd9c8b70d46393e5486f7215e887de64c09076/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c3cd9c8b70d46393e5486f7215e887de64c09076", "patch": "@@ -1,3 +1,8 @@\n+2001-04-23  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* c-convert.c (convert): When converting to a BOOLEAN_TYPE, avoid\n+\tpassing nested NOP_EXPRs to fold.\n+\n Mon Apr 23 14:32:12 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* reg-stack.c (emit_swap_insn): Do not get pass CALL_INSNs."}, {"sha": "6585f3cb4f638b074d8542949656f3c42c180446", "filename": "gcc/c-convert.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cd9c8b70d46393e5486f7215e887de64c09076/gcc%2Fc-convert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cd9c8b70d46393e5486f7215e887de64c09076/gcc%2Fc-convert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-convert.c?ref=c3cd9c8b70d46393e5486f7215e887de64c09076", "patch": "@@ -89,7 +89,15 @@ convert (type, expr)\n   if (code == INTEGER_TYPE || code == ENUMERAL_TYPE)\n     return fold (convert_to_integer (type, e));\n   if (code == BOOLEAN_TYPE)\n-    return fold (build1 (NOP_EXPR, type, truthvalue_conversion (expr)));\n+    {\n+      tree t = truthvalue_conversion (expr);\n+      /* If truthvalue_conversion returns a NOP_EXPR, we must fold it here\n+\t to avoid infinite recursion between fold () and convert ().  */\n+      if (TREE_CODE (t) == NOP_EXPR)\n+\treturn fold (build1 (NOP_EXPR, type, TREE_OPERAND (t, 0)));\n+      else\n+\treturn fold (build1 (NOP_EXPR, type, t));\n+    }\n   if (code == POINTER_TYPE || code == REFERENCE_TYPE)\n     return fold (convert_to_pointer (type, e));\n   if (code == REAL_TYPE)"}, {"sha": "aa168b69cb7713e1404bc0e33ea8d33cffc2a073", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cd9c8b70d46393e5486f7215e887de64c09076/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cd9c8b70d46393e5486f7215e887de64c09076/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c3cd9c8b70d46393e5486f7215e887de64c09076", "patch": "@@ -1,3 +1,7 @@\n+2001-04-23  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* gcc.c-torture/compile/20010423-1.c: New test.\n+\n 2001-04-20  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.old-deja/g++.pt/typename28.C: New test."}, {"sha": "ef7771f8e6be46265607cb47e332d60d2c1c9189", "filename": "gcc/testsuite/gcc.c-torture/compile/20010423-1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cd9c8b70d46393e5486f7215e887de64c09076/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010423-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cd9c8b70d46393e5486f7215e887de64c09076/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010423-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010423-1.c?ref=c3cd9c8b70d46393e5486f7215e887de64c09076", "patch": "@@ -0,0 +1,16 @@\n+/* Origin: PR c/2618 from Cesar Eduardo Barros <cesarb@nitnet.com.br>,\n+   adapted to a testcase by Joseph Myers <jsm28@cam.ac.uk>.\n+\n+   Boolean conversions were causing infinite recursion between convert\n+   and fold in certain cases.  */\n+\n+#include <stdbool.h>\n+\n+bool x;\n+unsigned char y;\n+\n+void\n+fn (void)\n+{\n+  x = y & 0x1 ? 1 : 0;\n+}"}]}