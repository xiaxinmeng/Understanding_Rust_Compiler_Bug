{"sha": "079a5ca908d071303b0133eb93d2a7db5ff55330", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDc5YTVjYTkwOGQwNzEzMDNiMDEzM2ViOTNkMmE3ZGI1ZmY1NTMzMA==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@normalesup.org", "date": "2011-08-18T16:56:55Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-08-18T16:56:55Z"}, "message": "cmath: Extend/update comment.\n\n2011-08-18  Marc Glisse  <marc.glisse@normalesup.org>\n\n\t* include/tr1/cmath: Extend/update comment.\n\nFrom-SVN: r177873", "tree": {"sha": "210f2ae634b1527078a0e328a7267b6eb8a3ee20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/210f2ae634b1527078a0e328a7267b6eb8a3ee20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/079a5ca908d071303b0133eb93d2a7db5ff55330", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/079a5ca908d071303b0133eb93d2a7db5ff55330", "html_url": "https://github.com/Rust-GCC/gccrs/commit/079a5ca908d071303b0133eb93d2a7db5ff55330", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/079a5ca908d071303b0133eb93d2a7db5ff55330/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6ba30237b918e2d8c35bf481767ccd525499625e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ba30237b918e2d8c35bf481767ccd525499625e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ba30237b918e2d8c35bf481767ccd525499625e"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "cd89789538eac76c3e32d21be6e5ad9e0098d6e4", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/079a5ca908d071303b0133eb93d2a7db5ff55330/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/079a5ca908d071303b0133eb93d2a7db5ff55330/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=079a5ca908d071303b0133eb93d2a7db5ff55330", "patch": "@@ -1,3 +1,7 @@\n+2011-08-18  Marc Glisse  <marc.glisse@normalesup.org>\n+\n+\t* include/tr1/cmath: Extend/update comment.\n+\n 2011-08-18  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/50119"}, {"sha": "06631e51e97303a3596d8b4802e688e05c9cc423", "filename": "libstdc++-v3/include/tr1/cmath", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/079a5ca908d071303b0133eb93d2a7db5ff55330/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcmath", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/079a5ca908d071303b0133eb93d2a7db5ff55330/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcmath", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcmath?ref=079a5ca908d071303b0133eb93d2a7db5ff55330", "patch": "@@ -567,6 +567,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   // Note: we deal with fabs in a special way, because an using std::fabs\n   // would bring in also the overloads for complex types, which in C++0x\n   // mode have a different return type.\n+  // With __CORRECT_ISO_CPP_MATH_H_PROTO1, math.h imports std::fabs in the\n+  // global namespace after the declarations of the float / double / long\n+  // double overloads but before the std::complex overloads.\n   using ::fabs;\n \n #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO1"}]}