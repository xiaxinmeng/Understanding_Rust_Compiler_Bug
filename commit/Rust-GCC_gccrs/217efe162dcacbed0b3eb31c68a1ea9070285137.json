{"sha": "217efe162dcacbed0b3eb31c68a1ea9070285137", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjE3ZWZlMTYyZGNhY2JlZDBiM2ViMzFjNjhhMWVhOTA3MDI4NTEzNw==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2005-06-16T08:42:37Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-06-16T08:42:37Z"}, "message": "lib-xref.ads, [...] (Generate_Definition): Treat any entity declared within an inlined body as referenced...\n\n2005-06-14  Ed Schonberg  <schonberg@adacore.com>\n\t    Emmanuel Briot  <briot@adacore.com>\n\n\t* lib-xref.ads, lib-xref.adb (Generate_Definition): Treat any entity\n\tdeclared within an inlined body as referenced, to prevent spurious\n\twarnings.\n\t(Output_One_Ref): If an entity renames an array component, indicate in\n\tthe ALI file that this aliases (renames) the array. Capture as well\n\tfunction renamings that rename predefined operations.\n\tAdd information about generic parent for package and subprogram\n\tinstances.\n\t(Get_Type_Reference): For a subtype that is the renaming of an actual in\n\tan instantiation, use the first_subtype to ensure that we don't generate\n\tcross-reference information for internal types.\n\tFor objects and parameters of a generic private type, retain the '*'\n\tindicator to distinguish such an entity from its type.\n\n        * ali.ads (Xref_Entity_Record): New fields Iref_File_Num and Iref_Line,\n        to store information about instantiated entities.\n\n        * ali.adb (Scan_ALI): Add support for parsing the reference to the\n        generic parent\n\n        * xref_lib.adb (Skip_To_Matching_Closing_Bracket): New subprogram\n        (Parse_Identifier_Info, Parse_Token): Add support for the generic parent\n        information.\n\nFrom-SVN: r101046", "tree": {"sha": "899ff257fa91dd9472295e0c76d8f9c924e4a50a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/899ff257fa91dd9472295e0c76d8f9c924e4a50a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/217efe162dcacbed0b3eb31c68a1ea9070285137", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/217efe162dcacbed0b3eb31c68a1ea9070285137", "html_url": "https://github.com/Rust-GCC/gccrs/commit/217efe162dcacbed0b3eb31c68a1ea9070285137", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/217efe162dcacbed0b3eb31c68a1ea9070285137/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e9437007b8d68b91b2d1ac803f8938c54b6c4188", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9437007b8d68b91b2d1ac803f8938c54b6c4188", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9437007b8d68b91b2d1ac803f8938c54b6c4188"}], "stats": {"total": 192, "additions": 161, "deletions": 31}, "files": [{"sha": "22c5e526968c020030e43519d284dd5d02b0c38e", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/217efe162dcacbed0b3eb31c68a1ea9070285137/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/217efe162dcacbed0b3eb31c68a1ea9070285137/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=217efe162dcacbed0b3eb31c68a1ea9070285137", "patch": "@@ -439,6 +439,7 @@ package body ALI is\n                  or else Nextc = '(' or else Nextc = ')'\n                  or else Nextc = '{' or else Nextc = '}'\n                  or else Nextc = '<' or else Nextc = '>'\n+                 or else Nextc = '[' or else Nextc = ']'\n                  or else Nextc = '=';\n             end if;\n          end loop;\n@@ -1886,6 +1887,31 @@ package body ALI is\n                   XE.Lib    := (Getc = '*');\n                   XE.Entity := Get_Name;\n \n+                  --  Handle the information about generic instantiations\n+\n+                  if Nextc = '[' then\n+                     Skipc; --  Opening '['\n+                     N := Get_Nat;\n+\n+                     if Nextc /= '|' then\n+                        XE.Iref_File_Num := Current_File_Num;\n+                        XE.Iref_Line     := N;\n+                     else\n+                        XE.Iref_File_Num :=\n+                          Sdep_Id (N + Nat (First_Sdep_Entry) - 1);\n+                        Skipc;\n+                        XE.Iref_Line := Get_Nat;\n+                     end if;\n+\n+                     if Getc /= ']' then\n+                        Fatal_Error;\n+                     end if;\n+\n+                  else\n+                     XE.Iref_File_Num := No_Sdep_Id;\n+                     XE.Iref_Line     := 0;\n+                  end if;\n+\n                   Current_File_Num := XS.File_Num;\n \n                   --  Renaming reference is present"}, {"sha": "91ecd2dd16c2662fdd1e5b1739e32908005c9ee5", "filename": "gcc/ada/ali.ads", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/217efe162dcacbed0b3eb31c68a1ea9070285137/gcc%2Fada%2Fali.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/217efe162dcacbed0b3eb31c68a1ea9070285137/gcc%2Fada%2Fali.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.ads?ref=217efe162dcacbed0b3eb31c68a1ea9070285137", "patch": "@@ -593,7 +593,7 @@ package ALI is\n       --  ALI File containing tne entry\n \n       No_Dep_Unit : Name_Id;\n-      --  Id for names table entry including entire name, including periods.\n+      --  Id for names table entry including entire name, including periods\n    end record;\n \n    package No_Deps is new Table.Table (\n@@ -731,6 +731,16 @@ package ALI is\n       Entity : Name_Id;\n       --  Name of entity\n \n+      Iref_File_Num : Sdep_Id;\n+      --  This field is set to the dependency reference for the file containing\n+      --  the generic entity that this one instantiates, or to No_Sdep_Id if\n+      --  the current entity is not an instantiation\n+\n+      Iref_Line : Nat;\n+      --  This field is set to the line number in Iref_File_Num of the generic\n+      --  entity that this one instantiates, or to zero if the current entity\n+      --  is not an instantiation.\n+\n       Rref_Line : Nat;\n       --  This field is set to the line number of a renaming reference if\n       --  one is present, or to zero if no renaming reference is present\n@@ -815,6 +825,11 @@ package ALI is\n \n       --  Note: for instantiation references, Rtype is set to ' ', and Col is\n       --  set to zero. One or more such entries can follow any other reference.\n+      --  When there is more than one such entry, this is to be read as:\n+      --     e.g. ref1  ref2  ref3\n+      --     ref1 is a reference to an entity that was instantied at ref2.\n+      --     ref2 itself is also the result of an instantiation, that took\n+      --     place at ref3\n    end record;\n \n    package Xref is new Table.Table (\n@@ -848,7 +863,8 @@ package ALI is\n    --\n    --    Ignore_ED is normally False. If set to True, it indicates that\n    --    all ED (elaboration desirable) indications in the ALI file are\n-   --    to be ignored.\n+   --    to be ignored. This parameter is obsolete now that the -f switch\n+   --    is removed from gnatbind, and should be removed ???\n    --\n    --    Err determines the action taken on an incorrectly formatted file.\n    --    If Err is False, then an error message is output, and the program"}, {"sha": "78e14b2d49355ae3dbeeeded6899e7ab51b9b4b0", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 66, "deletions": 7, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/217efe162dcacbed0b3eb31c68a1ea9070285137/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/217efe162dcacbed0b3eb31c68a1ea9070285137/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=217efe162dcacbed0b3eb31c68a1ea9070285137", "patch": "@@ -34,6 +34,7 @@ with Nlists;   use Nlists;\n with Opt;      use Opt;\n with Restrict; use Restrict;\n with Rident;   use Rident;\n+with Sem;      use Sem;\n with Sem_Prag; use Sem_Prag;\n with Sem_Util; use Sem_Util;\n with Sinfo;    use Sinfo;\n@@ -133,6 +134,10 @@ package body Lib.Xref is\n          Xrefs.Table (Indx).Eun := Get_Source_Unit (Loc);\n          Xrefs.Table (Indx).Lun := No_Unit;\n          Set_Has_Xref_Entry (E);\n+\n+         if In_Inlined_Body then\n+            Set_Referenced (E);\n+         end if;\n       end if;\n    end Generate_Definition;\n \n@@ -269,7 +274,10 @@ package body Lib.Xref is\n \n       --  Warn if reference to Ada 2005 entity not in Ada 2005 mode\n \n-      if Is_Ada_2005 (E) and then Ada_Version < Ada_05 then\n+      if Is_Ada_2005 (E)\n+        and then Ada_Version < Ada_05\n+        and then Warn_On_Ada_2005_Compatibility\n+      then\n          Error_Msg_NE (\"& is only defined in Ada 2005?\", N, E);\n       end if;\n \n@@ -534,7 +542,7 @@ package body Lib.Xref is\n \n          Xrefs.Table (Indx).Loc := Ref;\n \n-         --  Overriding operations are marked with 'P'.\n+         --  Overriding operations are marked with 'P'\n \n          if Typ = 'p'\n            and then Is_Subprogram (N)\n@@ -723,7 +731,7 @@ package body Lib.Xref is\n                      exit;\n                   end if;\n \n-               --  For a subtype, go to ancestor subtype.\n+               --  For a subtype, go to ancestor subtype\n \n                else\n                   Tref := Ancestor_Subtype (Tref);\n@@ -778,7 +786,7 @@ package body Lib.Xref is\n                   (Is_Wrapper_Package (Scope (Tref))\n                      or else Is_Generic_Instance (Scope (Tref)))\n                then\n-                  Tref := Base_Type (Tref);\n+                  Tref := First_Subtype (Base_Type (Tref));\n                end if;\n \n                return;\n@@ -810,7 +818,7 @@ package body Lib.Xref is\n             Language_Name := Name_Ada;\n \n          else\n-            --  These are the only languages that GPS knows about.\n+            --  These are the only languages that GPS knows about\n \n             return;\n          end if;\n@@ -1260,6 +1268,14 @@ package body Lib.Xref is\n                      if Present (Ent) then\n                         Ctyp := Fold_Lower (Xref_Entity_Letters (Ekind (Ent)));\n                      end if;\n+\n+                  elsif Is_Generic_Type (Ent) then\n+\n+                     --  If the type of the entity is a  generic private type\n+                     --  there is no usable full view, so retain the indication\n+                     --  that this is an object.\n+\n+                     Ctyp := '*';\n                   end if;\n \n                   --  Special handling for access parameter\n@@ -1285,7 +1301,7 @@ package body Lib.Xref is\n                   end;\n                end if;\n \n-               --  Special handling for abstract types and operations.\n+               --  Special handling for abstract types and operations\n \n                if Is_Abstract (XE.Ent) then\n \n@@ -1524,7 +1540,25 @@ package body Lib.Xref is\n                            Rref := Selector_Name (Rref);\n                         end if;\n \n-                        if Nkind (Rref) /= N_Identifier then\n+                        if Nkind (Rref) = N_Identifier\n+                          or else Nkind (Rref) = N_Operator_Symbol\n+                        then\n+                           null;\n+\n+                        --  For renamed array components, use the array name\n+                        --  for the renamed entity, which reflect the fact that\n+                        --  in general the whole array is aliased.\n+\n+                        elsif Nkind (Rref) = N_Indexed_Component then\n+                           if Nkind (Prefix (Rref)) = N_Identifier then\n+                              Rref := Prefix (Rref);\n+                           elsif Nkind (Prefix (Rref)) = N_Expanded_Name then\n+                              Rref := Selector_Name (Prefix (Rref));\n+                           else\n+                              Rref := Empty;\n+                           end if;\n+\n+                        else\n                            Rref := Empty;\n                         end if;\n                      end if;\n@@ -1545,6 +1579,31 @@ package body Lib.Xref is\n \n                      Curru := Curxu;\n \n+                     --  Write out information about generic parent,\n+                     --  if entity is an instance.\n+\n+                     if  Is_Generic_Instance (XE.Ent) then\n+                        declare\n+                           Gen_Par : constant Entity_Id :=\n+                             Generic_Parent\n+                               (Specification\n+                                  (Unit_Declaration_Node (XE.Ent)));\n+                           Loc : constant Source_Ptr := Sloc (Gen_Par);\n+                           Gen_U : constant Unit_Number_Type :=\n+                                     Get_Source_Unit (Loc);\n+                        begin\n+                           Write_Info_Char ('[');\n+                           if Curru /= Gen_U then\n+                              Write_Info_Nat (Dependency_Num (Gen_U));\n+                              Write_Info_Char ('|');\n+                           end if;\n+\n+                           Write_Info_Nat\n+                             (Int (Get_Logical_Line_Number (Loc)));\n+                           Write_Info_Char (']');\n+                        end;\n+                     end if;\n+\n                      --  See if we have a type reference and if so output\n \n                      Get_Type_Reference (XE.Ent, Tref, Left, Right);"}, {"sha": "1a0055e5c2b786c46864b01f861887f9b99cec6e", "filename": "gcc/ada/lib-xref.ads", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/217efe162dcacbed0b3eb31c68a1ea9070285137/gcc%2Fada%2Flib-xref.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/217efe162dcacbed0b3eb31c68a1ea9070285137/gcc%2Fada%2Flib-xref.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.ads?ref=217efe162dcacbed0b3eb31c68a1ea9070285137", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1998-2004, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -54,7 +54,7 @@ package Lib.Xref is\n \n    --  The lines following the header look like\n \n-   --     line type col level entity renameref typeref ref  ref  ref\n+   --     line type col level entity renameref instref typeref ref  ref  ref\n \n    --        line is the line number of the referenced entity. The name of\n    --        the entity starts in column col. Columns are numbered from one,\n@@ -93,6 +93,17 @@ package Lib.Xref is\n    --        reference is a complex expressions, then renameref is omitted.\n    --        Here line/col give line/column as defined above.\n \n+   --        instref is only present for package and subprogram instances.\n+   --        The information in instref is the location of the point of\n+   --        declaration of the generic parent unit. This part has the form:\n+\n+   --            [file|line]\n+\n+   --        without column information, on the reasonable assumption that\n+   --        there is only one unit per line (the same assumption is made\n+   --        in references to entities that are declared within instances,\n+   --        see below).\n+\n    --        typeref is the reference for a related type. This part is\n    --        optional. It is present for the following cases:\n \n@@ -130,7 +141,7 @@ package Lib.Xref is\n \n    --           line is the line number of the reference\n \n-   --           col is the column number of the reference, as defined above.\n+   --           col is the column number of the reference, as defined above\n \n    --           type is one of\n    --              b = body entity\n@@ -296,7 +307,7 @@ package Lib.Xref is\n    --              the END line of the body has an explict reference to\n    --              the name of the procedure at line 12, column 13.\n \n-   --              the body ends at line 12, column 15, just past this label.\n+   --              the body ends at line 12, column 15, just past this label\n \n    --        16I9*My_Type<2|4I9> 18r8\n \n@@ -350,7 +361,9 @@ package Lib.Xref is\n    --  For private types, the character + appears in the table. In this\n    --  case the kind of the underlying type is used, if available, to\n    --  determine the character to use in the xref listing. The listing\n-   --  will still include a '+' for a generic private type, for example.\n+   --  will still include a '+' for a generic private type, for example,\n+   --  but will retain the '*' for an object or formal parameter of such\n+   --  a type.\n \n    --  For subprograms, the characters 'U' and 'V' appear in the table,\n    --  indicating procedures and functions. If the operation is abstract,\n@@ -597,6 +610,6 @@ package Lib.Xref is\n    --  Output references to the current ali file\n \n    procedure Initialize;\n-   --  Initialize internal tables.\n+   --  Initialize internal tables\n \n end Lib.Xref;"}, {"sha": "b6054b622853508210861a51c0566d8485cfd6bc", "filename": "gcc/ada/xref_lib.adb", "status": "modified", "additions": 32, "deletions": 16, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/217efe162dcacbed0b3eb31c68a1ea9070285137/gcc%2Fada%2Fxref_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/217efe162dcacbed0b3eb31c68a1ea9070285137/gcc%2Fada%2Fxref_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxref_lib.adb?ref=217efe162dcacbed0b3eb31c68a1ea9070285137", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1998-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1998-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -755,6 +755,10 @@ package body Xref_Lib is\n       --  to parse the ali file again because the parent entity is not in\n       --  the declaration table if it did not match the search pattern.\n \n+      procedure Skip_To_Matching_Closing_Bracket;\n+      --  When Ptr points to an opening square bracket, moves it to the\n+      --  character following the matching closing bracket\n+\n       ---------------------\n       -- Get_Symbol_Name --\n       ---------------------\n@@ -806,6 +810,27 @@ package body Xref_Lib is\n          return \"???\";\n       end Get_Symbol_Name;\n \n+      --------------------------------------\n+      -- Skip_To_Matching_Closing_Bracket --\n+      --------------------------------------\n+\n+      procedure Skip_To_Matching_Closing_Bracket is\n+         Num_Brackets : Natural;\n+\n+      begin\n+         Num_Brackets := 1;\n+         while Num_Brackets /= 0 loop\n+            Ptr := Ptr + 1;\n+            if Ali (Ptr) = '[' then\n+               Num_Brackets := Num_Brackets + 1;\n+            elsif Ali (Ptr) = ']' then\n+               Num_Brackets := Num_Brackets - 1;\n+            end if;\n+         end loop;\n+\n+         Ptr := Ptr + 1;\n+      end Skip_To_Matching_Closing_Bracket;\n+\n    --  Start of processing for Parse_Identifier_Info\n \n    begin\n@@ -862,7 +887,10 @@ package body Xref_Lib is\n       Decl_Ref := Add_Declaration\n         (File.X_File, Ali (E_Name .. Ptr - 1), E_Line, E_Col, E_Type);\n \n-      if Ali (Ptr) = '<'\n+      if Ali (Ptr) = '[' then\n+         Skip_To_Matching_Closing_Bracket;\n+\n+      elsif Ali (Ptr) = '<'\n         or else Ali (Ptr) = '('\n         or else Ali (Ptr) = '{'\n       then\n@@ -918,20 +946,7 @@ package body Xref_Lib is\n                --  Skip the information for generics instantiations\n \n                if Ali (Ptr) = '[' then\n-                  declare\n-                     Num_Brackets : Natural := 1;\n-                  begin\n-                     while Num_Brackets /= 0 loop\n-                        Ptr := Ptr + 1;\n-                        if Ali (Ptr) = '[' then\n-                           Num_Brackets := Num_Brackets + 1;\n-                        elsif Ali (Ptr) = ']' then\n-                           Num_Brackets := Num_Brackets - 1;\n-                        end if;\n-                     end loop;\n-\n-                     Ptr := Ptr + 1;\n-                  end;\n+                  Skip_To_Matching_Closing_Bracket;\n                end if;\n \n                --  Skip '>', or ')' or '>'\n@@ -1169,6 +1184,7 @@ package body Xref_Lib is\n                      or else Source (Ptr) = ASCII.HT\n                      or else Source (Ptr) = '<'\n                      or else Source (Ptr) = '{'\n+                     or else Source (Ptr) = '['\n                      or else Source (Ptr) = '='\n                      or else Source (Ptr) = '('))\n         and then Source (Ptr) >= ' '"}]}