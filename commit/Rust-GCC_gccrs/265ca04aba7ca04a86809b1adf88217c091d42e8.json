{"sha": "265ca04aba7ca04a86809b1adf88217c091d42e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY1Y2EwNGFiYTdjYTA0YTg2ODA5YjFhZGY4ODIxN2MwOTFkNDJlOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-23T10:49:44Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-23T10:49:44Z"}, "message": "[multiple changes]\n\n2015-10-23  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_dim.adb (Analyze_Dimension_Extension_Or_Record_Aggregate):\n\tHandle properly a box-initialized aggregate component.\n\n2015-10-23  Yannick Moy  <moy@adacore.com>\n\n\t* sem_prag.adb (Analyze_Pragma): Reject Volatile_Function not placed\n\ton a function.\n\n2015-10-23  Yannick Moy  <moy@adacore.com>\n\n\t* a-extiin.ads, a-reatim.ads, a-interr.ads, a-exetim-mingw.ads,\n\ta-exetim-default.ads, a-exetim.ads, a-taside.ads: Add \"Global => null\"\n\tcontract on subprograms.\n\t* lib-xref-spark_specific.adb: collect scopes for stubs of\n\tprotected objects\n\n2015-10-23  Arnaud Charlet  <charlet@adacore.com>\n\n\t* gnat1drv.adb (Adjust_Global_Switches): Enable\n\tBack_Annotate_Rep_Info to get size information from gigi.\n\t(Gnat1drv): Code clean ups.\n\t* frontend.adb (Frontend): Ditto.\n\nFrom-SVN: r229231", "tree": {"sha": "530c94ce4d6a30f8ade550d63e95bdef926af889", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/530c94ce4d6a30f8ade550d63e95bdef926af889"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/265ca04aba7ca04a86809b1adf88217c091d42e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/265ca04aba7ca04a86809b1adf88217c091d42e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/265ca04aba7ca04a86809b1adf88217c091d42e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/265ca04aba7ca04a86809b1adf88217c091d42e8/comments", "author": null, "committer": null, "parents": [{"sha": "45969c973faf786d16c198c42c4055903d08658f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45969c973faf786d16c198c42c4055903d08658f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45969c973faf786d16c198c42c4055903d08658f"}], "stats": {"total": 304, "additions": 227, "deletions": 77}, "files": [{"sha": "9a521162c7f8e0ed64e0535f7b07dc4b8518d188", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265ca04aba7ca04a86809b1adf88217c091d42e8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265ca04aba7ca04a86809b1adf88217c091d42e8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=265ca04aba7ca04a86809b1adf88217c091d42e8", "patch": "@@ -1,3 +1,28 @@\n+2015-10-23  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_dim.adb (Analyze_Dimension_Extension_Or_Record_Aggregate):\n+\tHandle properly a box-initialized aggregate component.\n+\n+2015-10-23  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Pragma): Reject Volatile_Function not placed\n+\ton a function.\n+\n+2015-10-23  Yannick Moy  <moy@adacore.com>\n+\n+\t* a-extiin.ads, a-reatim.ads, a-interr.ads, a-exetim-mingw.ads,\n+\ta-exetim-default.ads, a-exetim.ads, a-taside.ads: Add \"Global => null\"\n+\tcontract on subprograms.\n+\t* lib-xref-spark_specific.adb: collect scopes for stubs of\n+\tprotected objects\n+\n+2015-10-23  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gnat1drv.adb (Adjust_Global_Switches): Enable\n+\tBack_Annotate_Rep_Info to get size information from gigi.\n+\t(Gnat1drv): Code clean ups.\n+\t* frontend.adb (Frontend): Ditto.\n+\n 2015-10-23  Arnaud Charlet  <charlet@adacore.com>\n \n \t* gnat1drv.adb (Adjust_Global_Switches): Adjust settings."}, {"sha": "5877fc535fe6bcd96c9129a9ee1d01118cbd441b", "filename": "gcc/ada/a-exetim-default.ads", "status": "modified", "additions": 26, "deletions": 10, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265ca04aba7ca04a86809b1adf88217c091d42e8/gcc%2Fada%2Fa-exetim-default.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265ca04aba7ca04a86809b1adf88217c091d42e8/gcc%2Fada%2Fa-exetim-default.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exetim-default.ads?ref=265ca04aba7ca04a86809b1adf88217c091d42e8", "patch": "@@ -57,34 +57,50 @@ is\n \n    function \"+\"\n      (Left  : CPU_Time;\n-      Right : Ada.Real_Time.Time_Span) return CPU_Time;\n+      Right : Ada.Real_Time.Time_Span) return CPU_Time\n+   with\n+     Global => null;\n \n    function \"+\"\n      (Left  : Ada.Real_Time.Time_Span;\n-      Right : CPU_Time) return CPU_Time;\n+      Right : CPU_Time) return CPU_Time\n+   with\n+     Global => null;\n \n    function \"-\"\n      (Left  : CPU_Time;\n-      Right : Ada.Real_Time.Time_Span) return CPU_Time;\n+      Right : Ada.Real_Time.Time_Span) return CPU_Time\n+   with\n+     Global => null;\n \n    function \"-\"\n      (Left  : CPU_Time;\n-      Right : CPU_Time) return Ada.Real_Time.Time_Span;\n+      Right : CPU_Time) return Ada.Real_Time.Time_Span\n+   with\n+     Global => null;\n \n-   function \"<\"  (Left, Right : CPU_Time) return Boolean;\n-   function \"<=\" (Left, Right : CPU_Time) return Boolean;\n-   function \">\"  (Left, Right : CPU_Time) return Boolean;\n-   function \">=\" (Left, Right : CPU_Time) return Boolean;\n+   function \"<\"  (Left, Right : CPU_Time) return Boolean with\n+     Global => null;\n+   function \"<=\" (Left, Right : CPU_Time) return Boolean with\n+     Global => null;\n+   function \">\"  (Left, Right : CPU_Time) return Boolean with\n+     Global => null;\n+   function \">=\" (Left, Right : CPU_Time) return Boolean with\n+     Global => null;\n \n    procedure Split\n      (T  : CPU_Time;\n       SC : out Ada.Real_Time.Seconds_Count;\n-      TS : out Ada.Real_Time.Time_Span);\n+      TS : out Ada.Real_Time.Time_Span)\n+   with\n+     Global => null;\n \n    function Time_Of\n      (SC : Ada.Real_Time.Seconds_Count;\n       TS : Ada.Real_Time.Time_Span := Ada.Real_Time.Time_Span_Zero)\n-      return CPU_Time;\n+      return CPU_Time\n+   with\n+     Global => null;\n \n    Interrupt_Clocks_Supported          : constant Boolean := False;\n    Separate_Interrupt_Clocks_Supported : constant Boolean := False;"}, {"sha": "8e1e764e50bf5411112380fa48904a6a4eb380b0", "filename": "gcc/ada/a-exetim-mingw.ads", "status": "modified", "additions": 23, "deletions": 9, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265ca04aba7ca04a86809b1adf88217c091d42e8/gcc%2Fada%2Fa-exetim-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265ca04aba7ca04a86809b1adf88217c091d42e8/gcc%2Fada%2Fa-exetim-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exetim-mingw.ads?ref=265ca04aba7ca04a86809b1adf88217c091d42e8", "patch": "@@ -59,34 +59,48 @@ is\n \n    function \"+\"\n      (Left  : CPU_Time;\n-      Right : Ada.Real_Time.Time_Span) return CPU_Time;\n+      Right : Ada.Real_Time.Time_Span) return CPU_Time\n+   with\n+     Global => null;\n \n    function \"+\"\n      (Left  : Ada.Real_Time.Time_Span;\n-      Right : CPU_Time) return CPU_Time;\n+      Right : CPU_Time) return CPU_Time\n+   with\n+     Global => null;\n \n    function \"-\"\n      (Left  : CPU_Time;\n-      Right : Ada.Real_Time.Time_Span) return CPU_Time;\n+      Right : Ada.Real_Time.Time_Span) return CPU_Time\n+   with\n+     Global => null;\n \n    function \"-\"\n      (Left  : CPU_Time;\n       Right : CPU_Time) return Ada.Real_Time.Time_Span;\n \n-   function \"<\"  (Left, Right : CPU_Time) return Boolean;\n-   function \"<=\" (Left, Right : CPU_Time) return Boolean;\n-   function \">\"  (Left, Right : CPU_Time) return Boolean;\n-   function \">=\" (Left, Right : CPU_Time) return Boolean;\n+   function \"<\"  (Left, Right : CPU_Time) return Boolean with\n+     Global => null;\n+   function \"<=\" (Left, Right : CPU_Time) return Boolean with\n+     Global => null;\n+   function \">\"  (Left, Right : CPU_Time) return Boolean with\n+     Global => null;\n+   function \">=\" (Left, Right : CPU_Time) return Boolean with\n+     Global => null;\n \n    procedure Split\n      (T  : CPU_Time;\n       SC : out Ada.Real_Time.Seconds_Count;\n-      TS : out Ada.Real_Time.Time_Span);\n+      TS : out Ada.Real_Time.Time_Span)\n+   with\n+     Global => null;\n \n    function Time_Of\n      (SC : Ada.Real_Time.Seconds_Count;\n       TS : Ada.Real_Time.Time_Span := Ada.Real_Time.Time_Span_Zero)\n-      return CPU_Time;\n+      return CPU_Time\n+   with\n+     Global => null;\n \n    Interrupt_Clocks_Supported          : constant Boolean := False;\n    Separate_Interrupt_Clocks_Supported : constant Boolean := False;"}, {"sha": "951c3ed09e9a7f79a8894fb2fc0c12934e79712c", "filename": "gcc/ada/a-exetim.ads", "status": "modified", "additions": 26, "deletions": 10, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265ca04aba7ca04a86809b1adf88217c091d42e8/gcc%2Fada%2Fa-exetim.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265ca04aba7ca04a86809b1adf88217c091d42e8/gcc%2Fada%2Fa-exetim.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exetim.ads?ref=265ca04aba7ca04a86809b1adf88217c091d42e8", "patch": "@@ -48,34 +48,50 @@ is\n \n    function \"+\"\n      (Left  : CPU_Time;\n-      Right : Ada.Real_Time.Time_Span) return CPU_Time;\n+      Right : Ada.Real_Time.Time_Span) return CPU_Time\n+   with\n+     Global => null;\n \n    function \"+\"\n      (Left  : Ada.Real_Time.Time_Span;\n-      Right : CPU_Time) return CPU_Time;\n+      Right : CPU_Time) return CPU_Time\n+   with\n+     Global => null;\n \n    function \"-\"\n      (Left  : CPU_Time;\n-      Right : Ada.Real_Time.Time_Span) return CPU_Time;\n+      Right : Ada.Real_Time.Time_Span) return CPU_Time\n+   with\n+     Global => null;\n \n    function \"-\"\n      (Left  : CPU_Time;\n-      Right : CPU_Time) return Ada.Real_Time.Time_Span;\n+      Right : CPU_Time) return Ada.Real_Time.Time_Span\n+   with\n+     Global => null;\n \n-   function \"<\"  (Left, Right : CPU_Time) return Boolean;\n-   function \"<=\" (Left, Right : CPU_Time) return Boolean;\n-   function \">\"  (Left, Right : CPU_Time) return Boolean;\n-   function \">=\" (Left, Right : CPU_Time) return Boolean;\n+   function \"<\"  (Left, Right : CPU_Time) return Boolean with\n+     Global => null;\n+   function \"<=\" (Left, Right : CPU_Time) return Boolean with\n+     Global => null;\n+   function \">\"  (Left, Right : CPU_Time) return Boolean with\n+     Global => null;\n+   function \">=\" (Left, Right : CPU_Time) return Boolean with\n+     Global => null;\n \n    procedure Split\n      (T  : CPU_Time;\n       SC : out Ada.Real_Time.Seconds_Count;\n-      TS : out Ada.Real_Time.Time_Span);\n+      TS : out Ada.Real_Time.Time_Span)\n+   with\n+     Global => null;\n \n    function Time_Of\n      (SC : Ada.Real_Time.Seconds_Count;\n       TS : Ada.Real_Time.Time_Span := Ada.Real_Time.Time_Span_Zero)\n-      return CPU_Time;\n+      return CPU_Time\n+   with\n+     Global => null;\n \n    Interrupt_Clocks_Supported          : constant Boolean := False;\n    Separate_Interrupt_Clocks_Supported : constant Boolean := False;"}, {"sha": "e35c32df37d8c3273ab6c4b9c275e47491de9756", "filename": "gcc/ada/a-extiin.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265ca04aba7ca04a86809b1adf88217c091d42e8/gcc%2Fada%2Fa-extiin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265ca04aba7ca04a86809b1adf88217c091d42e8/gcc%2Fada%2Fa-extiin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-extiin.ads?ref=265ca04aba7ca04a86809b1adf88217c091d42e8", "patch": "@@ -27,6 +27,8 @@ is\n      Volatile_Function,\n      Global => Ada.Real_Time.Clock_Time;\n \n-   function Supported (Interrupt : Ada.Interrupts.Interrupt_ID) return Boolean;\n+   function Supported (Interrupt : Ada.Interrupts.Interrupt_ID) return Boolean\n+   with\n+     Global => null;\n \n end Ada.Execution_Time.Interrupts;"}, {"sha": "0ce2ed66d95cc1e16f2cecc68aa3bc2573772f26", "filename": "gcc/ada/a-interr.ads", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265ca04aba7ca04a86809b1adf88217c091d42e8/gcc%2Fada%2Fa-interr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265ca04aba7ca04a86809b1adf88217c091d42e8/gcc%2Fada%2Fa-interr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-interr.ads?ref=265ca04aba7ca04a86809b1adf88217c091d42e8", "patch": "@@ -55,27 +55,31 @@ package Ada.Interrupts is\n    function Current_Handler\n      (Interrupt : Interrupt_ID) return Parameterless_Handler\n    with\n-     SPARK_Mode => Off;\n+     SPARK_Mode => Off,\n+     Global     => null;\n \n    procedure Attach_Handler\n      (New_Handler : Parameterless_Handler;\n       Interrupt   : Interrupt_ID)\n    with\n-     SPARK_Mode => Off;\n+     SPARK_Mode => Off,\n+     Global     => null;\n \n    procedure Exchange_Handler\n      (Old_Handler : out Parameterless_Handler;\n       New_Handler : Parameterless_Handler;\n       Interrupt   : Interrupt_ID)\n    with\n-     SPARK_Mode => Off;\n+     SPARK_Mode => Off,\n+     Global     => null;\n \n    procedure Detach_Handler (Interrupt : Interrupt_ID) with\n      SPARK_Mode,\n      Global => (In_Out => Ada.Task_Identification.Tasking_State);\n \n    function Reference (Interrupt : Interrupt_ID) return System.Address with\n-     SPARK_Mode => Off;\n+     SPARK_Mode => Off,\n+     Global     => null;\n \n private\n    pragma Inline (Is_Reserved);"}, {"sha": "98d97156a029c660c98c6564bfdcea6978677cfd", "filename": "gcc/ada/a-reatim.ads", "status": "modified", "additions": 67, "deletions": 36, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265ca04aba7ca04a86809b1adf88217c091d42e8/gcc%2Fada%2Fa-reatim.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265ca04aba7ca04a86809b1adf88217c091d42e8/gcc%2Fada%2Fa-reatim.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-reatim.ads?ref=265ca04aba7ca04a86809b1adf88217c091d42e8", "patch": "@@ -62,42 +62,69 @@ is\n      Volatile_Function,\n      Global => Clock_Time;\n \n-   function \"+\"  (Left : Time;      Right : Time_Span) return Time;\n-   function \"+\"  (Left : Time_Span; Right : Time)      return Time;\n-   function \"-\"  (Left : Time;      Right : Time_Span) return Time;\n-   function \"-\"  (Left : Time;      Right : Time)      return Time_Span;\n-\n-   function \"<\"  (Left, Right : Time) return Boolean;\n-   function \"<=\" (Left, Right : Time) return Boolean;\n-   function \">\"  (Left, Right : Time) return Boolean;\n-   function \">=\" (Left, Right : Time) return Boolean;\n-\n-   function \"+\"  (Left, Right : Time_Span)             return Time_Span;\n-   function \"-\"  (Left, Right : Time_Span)             return Time_Span;\n-   function \"-\"  (Right : Time_Span)                   return Time_Span;\n-   function \"*\"  (Left : Time_Span; Right : Integer)   return Time_Span;\n-   function \"*\"  (Left : Integer;   Right : Time_Span) return Time_Span;\n-   function \"/\"  (Left, Right : Time_Span)             return Integer;\n-   function \"/\"  (Left : Time_Span; Right : Integer)   return Time_Span;\n-\n-   function \"abs\" (Right : Time_Span) return Time_Span;\n-\n-   function \"<\"  (Left, Right : Time_Span) return Boolean;\n-   function \"<=\" (Left, Right : Time_Span) return Boolean;\n-   function \">\"  (Left, Right : Time_Span) return Boolean;\n-   function \">=\" (Left, Right : Time_Span) return Boolean;\n-\n-   function To_Duration  (TS : Time_Span) return Duration;\n-   function To_Time_Span (D : Duration)   return Time_Span;\n-\n-   function Nanoseconds  (NS : Integer) return Time_Span;\n-   function Microseconds (US : Integer) return Time_Span;\n-   function Milliseconds (MS : Integer) return Time_Span;\n-\n-   function Seconds (S : Integer) return Time_Span;\n+   function \"+\"  (Left : Time;      Right : Time_Span) return Time with\n+     Global => null;\n+   function \"+\"  (Left : Time_Span; Right : Time)      return Time with\n+     Global => null;\n+   function \"-\"  (Left : Time;      Right : Time_Span) return Time with\n+     Global => null;\n+   function \"-\"  (Left : Time;      Right : Time)      return Time_Span with\n+     Global => null;\n+\n+   function \"<\"  (Left, Right : Time) return Boolean with\n+     Global => null;\n+   function \"<=\" (Left, Right : Time) return Boolean with\n+     Global => null;\n+   function \">\"  (Left, Right : Time) return Boolean with\n+     Global => null;\n+   function \">=\" (Left, Right : Time) return Boolean with\n+     Global => null;\n+\n+   function \"+\"  (Left, Right : Time_Span)             return Time_Span with\n+     Global => null;\n+   function \"-\"  (Left, Right : Time_Span)             return Time_Span with\n+     Global => null;\n+   function \"-\"  (Right : Time_Span)                   return Time_Span with\n+     Global => null;\n+   function \"*\"  (Left : Time_Span; Right : Integer)   return Time_Span with\n+     Global => null;\n+   function \"*\"  (Left : Integer;   Right : Time_Span) return Time_Span with\n+     Global => null;\n+   function \"/\"  (Left, Right : Time_Span)             return Integer with\n+     Global => null;\n+   function \"/\"  (Left : Time_Span; Right : Integer)   return Time_Span with\n+     Global => null;\n+\n+   function \"abs\" (Right : Time_Span) return Time_Span with\n+     Global => null;\n+\n+   function \"<\"  (Left, Right : Time_Span) return Boolean with\n+     Global => null;\n+   function \"<=\" (Left, Right : Time_Span) return Boolean with\n+     Global => null;\n+   function \">\"  (Left, Right : Time_Span) return Boolean with\n+     Global => null;\n+   function \">=\" (Left, Right : Time_Span) return Boolean with\n+     Global => null;\n+\n+   function To_Duration  (TS : Time_Span) return Duration with\n+     Global => null;\n+   function To_Time_Span (D : Duration)   return Time_Span with\n+     Global => null;\n+\n+   function Nanoseconds  (NS : Integer) return Time_Span with\n+     Global => null;\n+   function Microseconds (US : Integer) return Time_Span with\n+     Global => null;\n+   function Milliseconds (MS : Integer) return Time_Span with\n+     Global => null;\n+\n+   function Seconds (S : Integer) return Time_Span with\n+     Global => null;\n    pragma Ada_05 (Seconds);\n \n-   function Minutes (M : Integer) return Time_Span;\n+   function Minutes (M : Integer) return Time_Span with\n+     Global => null;\n    pragma Ada_05 (Minutes);\n \n    type Seconds_Count is new Long_Long_Integer;\n@@ -109,8 +136,12 @@ is\n    --  in the case of CodePeer with a target configuration file with a maximum\n    --  integer size of 32, it allows analysis of this unit.\n \n-   procedure Split (T : Time; SC : out Seconds_Count; TS : out Time_Span);\n-   function Time_Of (SC : Seconds_Count; TS : Time_Span) return Time;\n+   procedure Split (T : Time; SC : out Seconds_Count; TS : out Time_Span)\n+   with\n+     Global => null;\n+   function Time_Of (SC : Seconds_Count; TS : Time_Span) return Time\n+   with\n+     Global => null;\n \n private\n    pragma SPARK_Mode (Off);"}, {"sha": "353475ea14638c729e939f9e1511d5bfd6d9108d", "filename": "gcc/ada/a-taside.ads", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265ca04aba7ca04a86809b1adf88217c091d42e8/gcc%2Fada%2Fa-taside.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265ca04aba7ca04a86809b1adf88217c091d42e8/gcc%2Fada%2Fa-taside.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-taside.ads?ref=265ca04aba7ca04a86809b1adf88217c091d42e8", "patch": "@@ -49,21 +49,25 @@ is\n \n    Null_Task_Id : constant Task_Id;\n \n-   function \"=\" (Left, Right : Task_Id) return Boolean;\n+   function \"=\" (Left, Right : Task_Id) return Boolean with\n+     Global => null;\n    pragma Inline (\"=\");\n \n-   function Image (T : Task_Id) return String;\n+   function Image (T : Task_Id) return String with\n+     Global => null;\n \n    function Current_Task return Task_Id with\n      Volatile_Function,\n      Global => Tasking_State;\n    pragma Inline (Current_Task);\n \n    function Environment_Task return Task_Id with\n-     SPARK_Mode => Off;\n+     SPARK_Mode => Off,\n+     Global     => null;\n    pragma Inline (Environment_Task);\n \n-   procedure Abort_Task (T : Task_Id);\n+   procedure Abort_Task (T : Task_Id) with\n+     Global => null;\n    pragma Inline (Abort_Task);\n    --  Note: parameter is mode IN, not IN OUT, per AI-00101\n "}, {"sha": "ba541e4bb03f37b095108739effe097e0056605b", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265ca04aba7ca04a86809b1adf88217c091d42e8/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265ca04aba7ca04a86809b1adf88217c091d42e8/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=265ca04aba7ca04a86809b1adf88217c091d42e8", "patch": "@@ -27,6 +27,7 @@ with Atree;    use Atree;\n with Back_End; use Back_End;\n with Checks;\n with Comperr;\n+with Cprint;\n with Csets;    use Csets;\n with Debug;    use Debug;\n with Elists;\n@@ -148,6 +149,7 @@ procedure Gnat1drv is\n          Generate_C_Code := True;\n          Modify_Tree_For_C := True;\n          Unnest_Subprogram_Mode := True;\n+         Back_Annotate_Rep_Info := True;\n \n          --  Enable some restrictions systematically to simplify the generated\n          --  code. Note that restriction checks are also disabled in C mode,\n@@ -1356,6 +1358,13 @@ begin\n \n       Namet.Unlock;\n \n+      --  Finally generate C source code if needed. Note that this needs to\n+      --  happen after calling gigi to take advantage of the back annotation.\n+\n+      if Generate_C_Code then\n+         Cprint.Source_Dump;\n+      end if;\n+\n       --  Generate the call-graph output of dispatching calls\n \n       Exp_CG.Generate_CG_Output;"}, {"sha": "8d7615979fee9fdd3e638bb4f203ba81e534d332", "filename": "gcc/ada/lib-xref-spark_specific.adb", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265ca04aba7ca04a86809b1adf88217c091d42e8/gcc%2Fada%2Flib-xref-spark_specific.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265ca04aba7ca04a86809b1adf88217c091d42e8/gcc%2Fada%2Flib-xref-spark_specific.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref-spark_specific.adb?ref=265ca04aba7ca04a86809b1adf88217c091d42e8", "patch": "@@ -112,6 +112,10 @@ package body SPARK_Specific is\n      (N            : Node_Id;\n       Process      : Node_Processing;\n       Inside_Stubs : Boolean);\n+   procedure Traverse_Protected_Body\n+     (N            : Node_Id;\n+      Process      : Node_Processing;\n+      Inside_Stubs : Boolean);\n    procedure Traverse_Package_Body\n      (N            : Node_Id;\n       Process      : Node_Processing;\n@@ -1201,6 +1205,9 @@ package body SPARK_Specific is\n       elsif Nkind (Lu) = N_Package_Body then\n          Traverse_Package_Body (Lu, Process, Inside_Stubs);\n \n+      elsif Nkind (Lu) = N_Protected_Body then\n+         Traverse_Protected_Body (Lu, Process, Inside_Stubs);\n+\n       --  All other cases of compilation units (e.g. renamings), are not\n       --  declarations, or else generic declarations which are ignored.\n \n@@ -1298,8 +1305,7 @@ package body SPARK_Specific is\n                  (Private_Declarations (N), Process, Inside_Stubs);\n \n             when N_Protected_Body =>\n-               Traverse_Declarations_Or_Statements\n-                 (Declarations (N), Process, Inside_Stubs);\n+               Traverse_Protected_Body (N, Process, Inside_Stubs);\n \n             when N_Protected_Body_Stub =>\n                if Present (Library_Unit (N)) then\n@@ -1475,6 +1481,19 @@ package body SPARK_Specific is\n         (Private_Declarations (Spec), Process, Inside_Stubs);\n    end Traverse_Package_Declaration;\n \n+   -----------------------------\n+   -- Traverse_Protected_Body --\n+   -----------------------------\n+\n+   procedure Traverse_Protected_Body\n+     (N            : Node_Id;\n+      Process      : Node_Processing;\n+      Inside_Stubs : Boolean) is\n+   begin\n+      Traverse_Declarations_Or_Statements\n+        (Declarations (N), Process, Inside_Stubs);\n+   end Traverse_Protected_Body;\n+\n    ------------------------------\n    -- Traverse_Subprogram_Body --\n    ------------------------------"}, {"sha": "1706f5e96cc6cd5e64e3b53013be80dd632cd653", "filename": "gcc/ada/sem_dim.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265ca04aba7ca04a86809b1adf88217c091d42e8/gcc%2Fada%2Fsem_dim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265ca04aba7ca04a86809b1adf88217c091d42e8/gcc%2Fada%2Fsem_dim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dim.adb?ref=265ca04aba7ca04a86809b1adf88217c091d42e8", "patch": "@@ -1817,10 +1817,15 @@ package body Sem_Dim is\n          if Has_Dimension_System (Base_Type (Comp_Typ)) then\n             Expr := Expression (Comp);\n \n+            --  A box-initialized component needs no checking.\n+\n+            if No (Expr) and then Box_Present (Comp) then\n+               null;\n+\n             --  Issue an error if the dimensions of the component type and the\n             --  dimensions of the component mismatch.\n \n-            if Dimensions_Of (Expr) /= Dimensions_Of (Comp_Typ) then\n+            elsif Dimensions_Of (Expr) /= Dimensions_Of (Comp_Typ) then\n \n                --  Check if an error has already been encountered so far\n "}, {"sha": "d7b588352c1db9a1b7d646d96e95627a0282a4c0", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265ca04aba7ca04a86809b1adf88217c091d42e8/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265ca04aba7ca04a86809b1adf88217c091d42e8/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=265ca04aba7ca04a86809b1adf88217c091d42e8", "patch": "@@ -21580,6 +21580,11 @@ package body Sem_Prag is\n             Spec_Id := Corresponding_Spec_Of (Subp_Decl);\n             Over_Id := Overridden_Operation (Spec_Id);\n \n+            if not Ekind_In (Spec_Id, E_Function, E_Generic_Function) then\n+               Pragma_Misplaced;\n+               return;\n+            end if;\n+\n             --  A pragma that applies to a Ghost entity becomes Ghost for the\n             --  purposes of legality checks and removal of ignored Ghost code.\n "}]}