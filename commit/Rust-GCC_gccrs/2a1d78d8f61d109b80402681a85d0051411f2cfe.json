{"sha": "2a1d78d8f61d109b80402681a85d0051411f2cfe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmExZDc4ZDhmNjFkMTA5YjgwNDAyNjgxYTg1ZDAwNTE0MTFmMmNmZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-02-03T20:41:38Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-02-03T20:41:38Z"}, "message": "re PR rtl-optimization/64756 (wrong code at -O3 on x86_64-linux-gnu (in 32-bit mode))\n\n\tPR rtl-optimization/64756\n\t* cse.c (invalidate_dest): New function.\n\t(cse_insn): Use it.  If dest != SET_DEST (sets[i].rtl) and\n\tHASH (SET_DEST (sets[i].rtl), mode) computation sets do_not_record,\n\tinvalidate and do not record it.\n\n\t* gcc.c-torture/execute/pr64756.c: New test.\n\nFrom-SVN: r220377", "tree": {"sha": "1eaac6ad59091097ae8b08e988c7ffa361d92f59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1eaac6ad59091097ae8b08e988c7ffa361d92f59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a1d78d8f61d109b80402681a85d0051411f2cfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a1d78d8f61d109b80402681a85d0051411f2cfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a1d78d8f61d109b80402681a85d0051411f2cfe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a1d78d8f61d109b80402681a85d0051411f2cfe/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3548abca0218168da1bb9f8cace29282a7495fbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3548abca0218168da1bb9f8cace29282a7495fbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3548abca0218168da1bb9f8cace29282a7495fbf"}], "stats": {"total": 77, "additions": 69, "deletions": 8}, "files": [{"sha": "fdea07e8a775eddb4f2a3558669294864eab03df", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a1d78d8f61d109b80402681a85d0051411f2cfe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a1d78d8f61d109b80402681a85d0051411f2cfe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2a1d78d8f61d109b80402681a85d0051411f2cfe", "patch": "@@ -1,3 +1,11 @@\n+2015-02-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/64756\n+\t* cse.c (invalidate_dest): New function.\n+\t(cse_insn): Use it.  If dest != SET_DEST (sets[i].rtl) and\n+\tHASH (SET_DEST (sets[i].rtl), mode) computation sets do_not_record,\n+\tinvalidate and do not record it.\n+\n 2015-02-03  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/64660"}, {"sha": "2a33827a61c9f3d28afde01296c1161b3463805a", "filename": "gcc/cse.c", "status": "modified", "additions": 26, "deletions": 8, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a1d78d8f61d109b80402681a85d0051411f2cfe/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a1d78d8f61d109b80402681a85d0051411f2cfe/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=2a1d78d8f61d109b80402681a85d0051411f2cfe", "patch": "@@ -1984,6 +1984,22 @@ invalidate (rtx x, machine_mode full_mode)\n       gcc_unreachable ();\n     }\n }\n+\n+/* Invalidate DEST.  Used when DEST is not going to be added\n+   into the hash table for some reason, e.g. do_not_record\n+   flagged on it.  */\n+\n+static void\n+invalidate_dest (rtx dest)\n+{\n+  if (REG_P (dest)\n+      || GET_CODE (dest) == SUBREG\n+      || MEM_P (dest))\n+    invalidate (dest, VOIDmode);\n+  else if (GET_CODE (dest) == STRICT_LOW_PART\n+\t   || GET_CODE (dest) == ZERO_EXTRACT)\n+    invalidate (XEXP (dest, 0), GET_MODE (dest));\n+}\n \f\n /* Remove all expressions that refer to register REGNO,\n    since they are already invalid, and we are about to\n@@ -5510,18 +5526,20 @@ cse_insn (rtx_insn *insn)\n \n       else if (do_not_record)\n \t{\n-\t  if (REG_P (dest) || GET_CODE (dest) == SUBREG)\n-\t    invalidate (dest, VOIDmode);\n-\t  else if (MEM_P (dest))\n-\t    invalidate (dest, VOIDmode);\n-\t  else if (GET_CODE (dest) == STRICT_LOW_PART\n-\t\t   || GET_CODE (dest) == ZERO_EXTRACT)\n-\t    invalidate (XEXP (dest, 0), GET_MODE (dest));\n+\t  invalidate_dest (dest);\n \t  sets[i].rtl = 0;\n \t}\n \n       if (sets[i].rtl != 0 && dest != SET_DEST (sets[i].rtl))\n-\tsets[i].dest_hash = HASH (SET_DEST (sets[i].rtl), mode);\n+\t{\n+\t  do_not_record = 0;\n+\t  sets[i].dest_hash = HASH (SET_DEST (sets[i].rtl), mode);\n+\t  if (do_not_record)\n+\t    {\n+\t      invalidate_dest (SET_DEST (sets[i].rtl));\n+\t      sets[i].rtl = 0;\n+\t    }\n+\t}\n \n #ifdef HAVE_cc0\n       /* If setting CC0, record what it was set to, or a constant, if it"}, {"sha": "7b2b03d318213cbbc695956b160d27a7d91daa92", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a1d78d8f61d109b80402681a85d0051411f2cfe/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a1d78d8f61d109b80402681a85d0051411f2cfe/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2a1d78d8f61d109b80402681a85d0051411f2cfe", "patch": "@@ -1,3 +1,8 @@\n+2015-02-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/64756\n+\t* gcc.c-torture/execute/pr64756.c: New test.\n+\n 2015-02-03  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/64660"}, {"sha": "b76f278291db7c0f8819a7530a2a3d479924e459", "filename": "gcc/testsuite/gcc.c-torture/execute/pr64756.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a1d78d8f61d109b80402681a85d0051411f2cfe/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr64756.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a1d78d8f61d109b80402681a85d0051411f2cfe/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr64756.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr64756.c?ref=2a1d78d8f61d109b80402681a85d0051411f2cfe", "patch": "@@ -0,0 +1,30 @@\n+/* PR rtl-optimization/64756 */\n+\n+int a, *tmp, **c = &tmp;\n+volatile int d;\n+static int *volatile *e = &tmp;\n+unsigned int f;\n+\n+static void\n+fn1 (int *p)\n+{\n+  int g;\n+  for (; f < 1; f++)\n+    for (g = 1; g >= 0; g--)\n+      {\n+\td || d;\n+\t*c = p;\n+\n+\tif (tmp != &a)\n+\t  __builtin_abort ();\n+\n+\t*e = 0;\n+      }\n+}\n+\n+int\n+main ()\n+{\n+  fn1 (&a);\n+  return 0;\n+}"}]}