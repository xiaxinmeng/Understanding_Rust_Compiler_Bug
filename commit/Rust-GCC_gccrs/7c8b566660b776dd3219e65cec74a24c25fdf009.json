{"sha": "7c8b566660b776dd3219e65cec74a24c25fdf009", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M4YjU2NjY2MGI3NzZkZDMyMTllNjVjZWM3NGEyNGMyNWZkZjAwOQ==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2008-12-11T19:57:18Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2008-12-11T19:57:18Z"}, "message": "re PR middle-end/38459 ([graphite] SEGFAULT in cloog_clast_create)\n\n2008-12-11  Sebastian Pop  <sebastian.pop@amd.com>\n\n\tPR middle-end/38459\n\t* gfortran.dg/graphite/pr37857.f90: New.\n\nFrom-SVN: r142690", "tree": {"sha": "f66419cd87649ec1fcddd6d22c858a41e83fcd2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f66419cd87649ec1fcddd6d22c858a41e83fcd2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c8b566660b776dd3219e65cec74a24c25fdf009", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c8b566660b776dd3219e65cec74a24c25fdf009", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c8b566660b776dd3219e65cec74a24c25fdf009", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c8b566660b776dd3219e65cec74a24c25fdf009/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc87337fc836e553b90e43550976b5c3ba45960c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc87337fc836e553b90e43550976b5c3ba45960c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc87337fc836e553b90e43550976b5c3ba45960c"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "75297a2be39d7221ce29383cd32703b488605ce6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c8b566660b776dd3219e65cec74a24c25fdf009/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c8b566660b776dd3219e65cec74a24c25fdf009/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7c8b566660b776dd3219e65cec74a24c25fdf009", "patch": "@@ -1,3 +1,8 @@\n+2008-12-11  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR middle-end/38459\n+\t* gfortran.dg/graphite/pr37857.f90: New.\n+\n 2008-12-11  Harsha Jagasia  <harsha.jagasia@amd.com>\n \n \tPR tree-optimization/38446"}, {"sha": "de2d3a124ee9556a12dba566fb26c9c469343190", "filename": "gcc/testsuite/gfortran.dg/graphite/pr37857.f90", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c8b566660b776dd3219e65cec74a24c25fdf009/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr37857.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c8b566660b776dd3219e65cec74a24c25fdf009/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr37857.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr37857.f90?ref=7c8b566660b776dd3219e65cec74a24c25fdf009", "patch": "@@ -0,0 +1,9 @@\n+! { dg-options \"-O2 -floop-block\" }\n+\n+program superficie_proteina\n+  integer, parameter :: LONGreal = selected_real_kind(12,90)\n+  integer :: number_of_polypeptides, maximum_polypeptide_length\n+  real (kind = LONGreal), dimension (:,:), allocatable :: individual_conformations\n+  allocate (individual_conformations(-number_of_bins:0,number_of_polypeptides))\n+  individual_conformations = 0.0_LONGreal\n+end program superficie_proteina"}]}