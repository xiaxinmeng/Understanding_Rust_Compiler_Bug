{"sha": "85a0921018ab2278d383d5f26a64e8f0352c6f14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODVhMDkyMTAxOGFiMjI3OGQzODNkNWYyNmE2NGU4ZjAzNTJjNmYxNA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-04-01T00:17:10Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-04-01T00:17:10Z"}, "message": "libgo: Recognize MIPS ABIs.\n\nFrom-SVN: r171809", "tree": {"sha": "1d35f4a468c6955c0b5b5237323b06554d53e500", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d35f4a468c6955c0b5b5237323b06554d53e500"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85a0921018ab2278d383d5f26a64e8f0352c6f14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85a0921018ab2278d383d5f26a64e8f0352c6f14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85a0921018ab2278d383d5f26a64e8f0352c6f14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85a0921018ab2278d383d5f26a64e8f0352c6f14/comments", "author": null, "committer": null, "parents": [{"sha": "3c16cf85177836abb4a771683fe30c3ee7e3d432", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c16cf85177836abb4a771683fe30c3ee7e3d432", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c16cf85177836abb4a771683fe30c3ee7e3d432"}], "stats": {"total": 169, "additions": 134, "deletions": 35}, "files": [{"sha": "375406d9e95c8907c4e3b512ecbfde784ce0a5d0", "filename": "libgo/configure", "status": "modified", "additions": 102, "deletions": 23, "changes": 125, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85a0921018ab2278d383d5f26a64e8f0352c6f14/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85a0921018ab2278d383d5f26a64e8f0352c6f14/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=85a0921018ab2278d383d5f26a64e8f0352c6f14", "patch": "@@ -629,8 +629,14 @@ LIBGO_IS_PPC64_FALSE\n LIBGO_IS_PPC64_TRUE\n LIBGO_IS_PPC_FALSE\n LIBGO_IS_PPC_TRUE\n-LIBGO_IS_MIPS64_FALSE\n-LIBGO_IS_MIPS64_TRUE\n+LIBGO_IS_MIPSO64_FALSE\n+LIBGO_IS_MIPSO64_TRUE\n+LIBGO_IS_MIPSN64_FALSE\n+LIBGO_IS_MIPSN64_TRUE\n+LIBGO_IS_MIPSN32_FALSE\n+LIBGO_IS_MIPSN32_TRUE\n+LIBGO_IS_MIPSO32_FALSE\n+LIBGO_IS_MIPSO32_TRUE\n LIBGO_IS_MIPS_FALSE\n LIBGO_IS_MIPS_TRUE\n LIBGO_IS_M68K_FALSE\n@@ -10904,7 +10910,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10907 \"configure\"\n+#line 10913 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11010,7 +11016,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11013 \"configure\"\n+#line 11019 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13285,8 +13291,7 @@ fi\n is_386=no\n is_arm=no\n is_m68k=no\n-is_mips=no\n-is_mips64=no\n+mips_abi=\"\"\n is_ppc=no\n is_ppc64=no\n is_sparc=no\n@@ -13326,21 +13331,59 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n-#ifdef __mips64\n-#error 64-bit\n+#if _MIPS_SIM != _ABIO32\n+#error not o32\n+#endif\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  mips_abi=\"o32\"\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if _MIPS_SIM != _ABIN32\n+#error not n32\n #endif\n _ACEOF\n if ac_fn_c_try_compile \"$LINENO\"; then :\n-  is_mips=yes\n+  mips_abi=\"n32\"\n else\n-  is_mips64=yes\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if _MIPS_SIM != _ABI64\n+#error not n64\n+#endif\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  mips_abi=\"n64\"\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if _MIPS_SIM != _ABIO64\n+#error not o64\n+#endif\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  mips_abi=\"o64\"\n+else\n+  as_fn_error \"unknown MIPS ABI\" \"$LINENO\" 5\n+mips_abi=\"n32\"\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-    if test \"$is_mips\" = \"yes\"; then\n-      GOARCH=mips\n-    else\n-      GOARCH=mips64\n-    fi\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+    case \"$mips_abi\" in\n+    \"o32\") GOARCH=mipso32 ;;\n+    \"n32\") GOARCH=mipsn32 ;;\n+    \"n64\") GOARCH=mipsn64 ;;\n+    \"o64\") GOARCH=mipso64 ;;\n+    esac\n     ;;\n   rs6000*-*-* | powerpc*-*-*)\n     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n@@ -13407,20 +13450,44 @@ else\n   LIBGO_IS_M68K_FALSE=\n fi\n \n- if test $is_mips = yes; then\n+ if test $mips_abi != \"\"; then\n   LIBGO_IS_MIPS_TRUE=\n   LIBGO_IS_MIPS_FALSE='#'\n else\n   LIBGO_IS_MIPS_TRUE='#'\n   LIBGO_IS_MIPS_FALSE=\n fi\n \n- if test $is_mips64 = yes; then\n-  LIBGO_IS_MIPS64_TRUE=\n-  LIBGO_IS_MIPS64_FALSE='#'\n+ if test $mips_abi = o32; then\n+  LIBGO_IS_MIPSO32_TRUE=\n+  LIBGO_IS_MIPSO32_FALSE='#'\n+else\n+  LIBGO_IS_MIPSO32_TRUE='#'\n+  LIBGO_IS_MIPSO32_FALSE=\n+fi\n+\n+ if test $mips_abi = n32; then\n+  LIBGO_IS_MIPSN32_TRUE=\n+  LIBGO_IS_MIPSN32_FALSE='#'\n else\n-  LIBGO_IS_MIPS64_TRUE='#'\n-  LIBGO_IS_MIPS64_FALSE=\n+  LIBGO_IS_MIPSN32_TRUE='#'\n+  LIBGO_IS_MIPSN32_FALSE=\n+fi\n+\n+ if test $mips_abi = n64; then\n+  LIBGO_IS_MIPSN64_TRUE=\n+  LIBGO_IS_MIPSN64_FALSE='#'\n+else\n+  LIBGO_IS_MIPSN64_TRUE='#'\n+  LIBGO_IS_MIPSN64_FALSE=\n+fi\n+\n+ if test $mips_abi = o64; then\n+  LIBGO_IS_MIPSO64_TRUE=\n+  LIBGO_IS_MIPSO64_FALSE='#'\n+else\n+  LIBGO_IS_MIPSO64_TRUE='#'\n+  LIBGO_IS_MIPSO64_FALSE=\n fi\n \n  if test $is_ppc = yes; then\n@@ -14541,8 +14608,20 @@ if test -z \"${LIBGO_IS_MIPS_TRUE}\" && test -z \"${LIBGO_IS_MIPS_FALSE}\"; then\n   as_fn_error \"conditional \\\"LIBGO_IS_MIPS\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n-if test -z \"${LIBGO_IS_MIPS64_TRUE}\" && test -z \"${LIBGO_IS_MIPS64_FALSE}\"; then\n-  as_fn_error \"conditional \\\"LIBGO_IS_MIPS64\\\" was never defined.\n+if test -z \"${LIBGO_IS_MIPSO32_TRUE}\" && test -z \"${LIBGO_IS_MIPSO32_FALSE}\"; then\n+  as_fn_error \"conditional \\\"LIBGO_IS_MIPSO32\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n+if test -z \"${LIBGO_IS_MIPSN32_TRUE}\" && test -z \"${LIBGO_IS_MIPSN32_FALSE}\"; then\n+  as_fn_error \"conditional \\\"LIBGO_IS_MIPSN32\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n+if test -z \"${LIBGO_IS_MIPSN64_TRUE}\" && test -z \"${LIBGO_IS_MIPSN64_FALSE}\"; then\n+  as_fn_error \"conditional \\\"LIBGO_IS_MIPSN64\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n+if test -z \"${LIBGO_IS_MIPSO64_TRUE}\" && test -z \"${LIBGO_IS_MIPSO64_FALSE}\"; then\n+  as_fn_error \"conditional \\\"LIBGO_IS_MIPSO64\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n if test -z \"${LIBGO_IS_PPC_TRUE}\" && test -z \"${LIBGO_IS_PPC_FALSE}\"; then"}, {"sha": "0a98a1e2e2b3faa655eaf606e3097b45b246783e", "filename": "libgo/configure.ac", "status": "modified", "additions": 32, "deletions": 12, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85a0921018ab2278d383d5f26a64e8f0352c6f14/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85a0921018ab2278d383d5f26a64e8f0352c6f14/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=85a0921018ab2278d383d5f26a64e8f0352c6f14", "patch": "@@ -139,8 +139,7 @@ dnl N.B. Keep in sync with gcc/testsuite/go.test/go-test.exp (go-set-goarch).\n is_386=no\n is_arm=no\n is_m68k=no\n-is_mips=no\n-is_mips64=no\n+mips_abi=\"\"\n is_ppc=no\n is_ppc64=no\n is_sparc=no\n@@ -172,15 +171,33 @@ changequote([,])dnl\n     ;;\n   mips*-*-*)\n     AC_COMPILE_IFELSE([\n-#ifdef __mips64\n-#error 64-bit\n+#if _MIPS_SIM != _ABIO32\n+#error not o32\n #endif],\n-[is_mips=yes], [is_mips64=yes])\n-    if test \"$is_mips\" = \"yes\"; then\n-      GOARCH=mips\n-    else\n-      GOARCH=mips64\n-    fi\n+[mips_abi=\"o32\"],\n+\t[AC_COMPILE_IFELSE([\n+#if _MIPS_SIM != _ABIN32\n+#error not n32\n+#endif],\n+[mips_abi=\"n32\"],\n+\t[AC_COMPILE_IFELSE([\n+#if _MIPS_SIM != _ABI64\n+#error not n64\n+#endif],\n+[mips_abi=\"n64\"],\n+\t[AC_COMPILE_IFELSE([\n+#if _MIPS_SIM != _ABIO64\n+#error not o64\n+#endif],\n+[mips_abi=\"o64\"],\n+\t[AC_MSG_ERROR([unknown MIPS ABI])\n+[mips_abi=\"n32\"]])])])])\n+    case \"$mips_abi\" in\n+    \"o32\") GOARCH=mipso32 ;;\n+    \"n32\") GOARCH=mipsn32 ;;\n+    \"n64\") GOARCH=mipsn64 ;;\n+    \"o64\") GOARCH=mipso64 ;;\n+    esac\n     ;;\n   rs6000*-*-* | powerpc*-*-*)\n     AC_COMPILE_IFELSE([\n@@ -210,8 +227,11 @@ esac\n AM_CONDITIONAL(LIBGO_IS_386, test $is_386 = yes)\n AM_CONDITIONAL(LIBGO_IS_ARM, test $is_arm = yes)\n AM_CONDITIONAL(LIBGO_IS_M68K, test $is_m68k = yes)\n-AM_CONDITIONAL(LIBGO_IS_MIPS, test $is_mips = yes)\n-AM_CONDITIONAL(LIBGO_IS_MIPS64, test $is_mips64 = yes)\n+AM_CONDITIONAL(LIBGO_IS_MIPS, test $mips_abi != \"\")\n+AM_CONDITIONAL(LIBGO_IS_MIPSO32, test $mips_abi = o32)\n+AM_CONDITIONAL(LIBGO_IS_MIPSN32, test $mips_abi = n32)\n+AM_CONDITIONAL(LIBGO_IS_MIPSN64, test $mips_abi = n64)\n+AM_CONDITIONAL(LIBGO_IS_MIPSO64, test $mips_abi = o64)\n AM_CONDITIONAL(LIBGO_IS_PPC, test $is_ppc = yes)\n AM_CONDITIONAL(LIBGO_IS_PPC64, test $is_ppc64 = yes)\n AM_CONDITIONAL(LIBGO_IS_SPARC, test $is_sparc = yes)"}]}