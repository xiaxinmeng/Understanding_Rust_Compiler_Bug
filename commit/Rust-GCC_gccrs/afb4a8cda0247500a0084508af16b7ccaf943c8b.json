{"sha": "afb4a8cda0247500a0084508af16b7ccaf943c8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZiNGE4Y2RhMDI0NzUwMGEwMDg0NTA4YWYxNmI3Y2NhZjk0M2M4Yg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-11T12:46:16Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-11T12:46:16Z"}, "message": "[multiple changes]\n\n2013-04-11  Ed Schonberg  <schonberg@adacore.com>\n\n\t* par-ch6.adb (P_Subprogram): Attach aspects to subprogram stub.\n\t* sem_ch6.adb (Analyze_Subprogram_Body_Helper): Allow aspects on\n\tsubprogram stubs.\n\t* sem_ch13.adb (Analyze_Aspect_Specifications): Analyze generated\n\tpre/post pragmas at once before analyzing the proper body.\n\t* sem_prag.adb (Chain_PPC): Handle pragma that comes from an\n\taspect on a subprogram stub.\n\t* aspects.adb: Aspect specifications can appear on a\n\tsubprogram_Body_Stub.\n\n2013-04-11  Vincent Celier  <celier@adacore.com>\n\n\t* gnatname.adb: Minor comment fix.\n\n2013-04-11  Vincent Celier  <celier@adacore.com>\n\n\t* prj-makr.adb (Process_Directory): Create a new temporary\n\tfile for each invocation of the compiler, in directory pointed\n\tby environment variable TMPDIR if it exists.\n\n2013-04-11  Arnaud Charlet  <charlet@adacore.com>\n\n\t* gnat_ugn.texi: Minor editing/clean ups.\n\nFrom-SVN: r197781", "tree": {"sha": "e729035d907f2265386759e1f898a7a50170d459", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e729035d907f2265386759e1f898a7a50170d459"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afb4a8cda0247500a0084508af16b7ccaf943c8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afb4a8cda0247500a0084508af16b7ccaf943c8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afb4a8cda0247500a0084508af16b7ccaf943c8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afb4a8cda0247500a0084508af16b7ccaf943c8b/comments", "author": null, "committer": null, "parents": [{"sha": "7c55f4101789d76d1a9bab69631edb171321f12f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c55f4101789d76d1a9bab69631edb171321f12f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c55f4101789d76d1a9bab69631edb171321f12f"}], "stats": {"total": 109, "additions": 73, "deletions": 36}, "files": [{"sha": "918408fd82523e5062f9d649ba825f5f12a5ec11", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afb4a8cda0247500a0084508af16b7ccaf943c8b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afb4a8cda0247500a0084508af16b7ccaf943c8b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=afb4a8cda0247500a0084508af16b7ccaf943c8b", "patch": "@@ -1,3 +1,29 @@\n+2013-04-11  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* par-ch6.adb (P_Subprogram): Attach aspects to subprogram stub.\n+\t* sem_ch6.adb (Analyze_Subprogram_Body_Helper): Allow aspects on\n+\tsubprogram stubs.\n+\t* sem_ch13.adb (Analyze_Aspect_Specifications): Analyze generated\n+\tpre/post pragmas at once before analyzing the proper body.\n+\t* sem_prag.adb (Chain_PPC): Handle pragma that comes from an\n+\taspect on a subprogram stub.\n+\t* aspects.adb: Aspect specifications can appear on a\n+\tsubprogram_Body_Stub.\n+\n+2013-04-11  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnatname.adb: Minor comment fix.\n+\n+2013-04-11  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-makr.adb (Process_Directory): Create a new temporary\n+\tfile for each invocation of the compiler, in directory pointed\n+\tby environment variable TMPDIR if it exists.\n+\n+2013-04-11  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gnat_ugn.texi: Minor editing/clean ups.\n+\n 2013-04-11  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch6.adb (Analyze_Null_Procedure): New subprogram, mostly"}, {"sha": "2ef728c8476917d2ae26494d4327fc290b5878de", "filename": "gcc/ada/aspects.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afb4a8cda0247500a0084508af16b7ccaf943c8b/gcc%2Fada%2Faspects.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afb4a8cda0247500a0084508af16b7ccaf943c8b/gcc%2Fada%2Faspects.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.adb?ref=afb4a8cda0247500a0084508af16b7ccaf943c8b", "patch": "@@ -220,6 +220,7 @@ package body Aspects is\n       N_Subprogram_Body                        => True,\n       N_Subprogram_Declaration                 => True,\n       N_Subprogram_Renaming_Declaration        => True,\n+      N_Subprogram_Body_Stub                   => True,\n       N_Subtype_Declaration                    => True,\n       N_Task_Body                              => True,\n       N_Task_Type_Declaration                  => True,"}, {"sha": "52107510c06b9239ad081e38e7c3dad75c316e88", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afb4a8cda0247500a0084508af16b7ccaf943c8b/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afb4a8cda0247500a0084508af16b7ccaf943c8b/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=afb4a8cda0247500a0084508af16b7ccaf943c8b", "patch": "@@ -3926,23 +3926,19 @@ files.\n \n It is possible to supply several file names on the same @command{gcc}\n command. This causes @command{gcc} to call the appropriate compiler for\n-each file. For example, the following command lists three separate\n+each file. For example, the following command lists two separate\n files to be compiled:\n \n @smallexample\n-$ gcc -c x.adb y.adb z.c\n+$ gcc -c x.adb y.adb\n @end smallexample\n \n @noindent\n calls @code{gnat1} (the Ada compiler) twice to compile @file{x.adb} and\n-@file{y.adb}, and @code{cc1} (the C compiler) once to compile @file{z.c}.\n-The compiler generates three object files @file{x.o}, @file{y.o} and\n-@file{z.o} and the two ALI files @file{x.ali} and @file{y.ali} from the\n-Ada compilations. Any switches apply to all the files ^listed,^listed.^\n-@ifclear vms\n-except for\n-@option{-gnat@var{x}} switches, which apply only to Ada compilations.\n-@end ifclear\n+@file{y.adb}.\n+The compiler generates two object files @file{x.o} and @file{y.o}\n+and the two ALI files @file{x.ali} and @file{y.ali}.\n+Any switches apply to all the files ^listed,^listed.^\n \n @node Switches for gcc\n @section Switches for @command{gcc}"}, {"sha": "56157ead462eddfff733c759374ed8280fc2ee48", "filename": "gcc/ada/gnatname.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afb4a8cda0247500a0084508af16b7ccaf943c8b/gcc%2Fada%2Fgnatname.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afb4a8cda0247500a0084508af16b7ccaf943c8b/gcc%2Fada%2Fgnatname.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatname.adb?ref=afb4a8cda0247500a0084508af16b7ccaf943c8b", "patch": "@@ -88,7 +88,7 @@ procedure Gnatname is\n       Table_Initial        => 10,\n       Table_Increment      => 100,\n       Table_Name           => \"Gnatname.Arguments\");\n-   --  Table to accumulate the foreign patterns\n+   --  Table to accumulate directories and patterns\n \n    package Preprocessor_Switches is new Table.Table\n      (Table_Component_Type => String_Access,"}, {"sha": "42c2a8594e6b73a43790cd793e90fa98c72d1356", "filename": "gcc/ada/par-ch6.adb", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afb4a8cda0247500a0084508af16b7ccaf943c8b/gcc%2Fada%2Fpar-ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afb4a8cda0247500a0084508af16b7ccaf943c8b/gcc%2Fada%2Fpar-ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch6.adb?ref=afb4a8cda0247500a0084508af16b7ccaf943c8b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -684,6 +684,15 @@ package body Ch6 is\n             Stub_Node :=\n               New_Node (N_Subprogram_Body_Stub, Sloc (Specification_Node));\n             Set_Specification (Stub_Node, Specification_Node);\n+\n+            --  The specification has been parsed as part of a subprogram\n+            --  declaration, and aspects have already been collected.\n+\n+            if Is_Non_Empty_List (Aspects) then\n+               Set_Parent (Aspects, Stub_Node);\n+               Set_Aspect_Specifications (Stub_Node, Aspects);\n+            end if;\n+\n             Scan; -- past SEPARATE\n             Pop_Scope_Stack;\n             TF_Semicolon;"}, {"sha": "0ed805021f9a2b1e5b01d630ecd36095502623ed", "filename": "gcc/ada/prj-makr.adb", "status": "modified", "additions": 12, "deletions": 21, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afb4a8cda0247500a0084508af16b7ccaf943c8b/gcc%2Fada%2Fprj-makr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afb4a8cda0247500a0084508af16b7ccaf943c8b/gcc%2Fada%2Fprj-makr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-makr.adb?ref=afb4a8cda0247500a0084508af16b7ccaf943c8b", "patch": "@@ -38,6 +38,7 @@ with Prj.Util; use Prj.Util;\n with Sdefault;\n with Snames;   use Snames;\n with Table;    use Table;\n+with Tempdir;\n \n with Ada.Characters.Handling;   use Ada.Characters.Handling;\n with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n@@ -1235,6 +1236,7 @@ package body Prj.Makr is\n                         Success : Boolean;\n                         Saved_Output : File_Descriptor;\n                         Saved_Error  : File_Descriptor;\n+                        Tmp_File     : Path_Name_Type;\n \n                      begin\n                         --  If we don't have the path of the compiler yet,\n@@ -1256,36 +1258,24 @@ package body Prj.Makr is\n                            end if;\n                         end if;\n \n-                        --  If we don't have yet the file name of the\n-                        --  temporary file, get it now.\n+                        --  Create the temporary file\n \n-                        if Temp_File_Name = null then\n-                           Create_Temp_File (FD, Temp_File_Name);\n+                        Tempdir.Create_Temp_File (FD, Tmp_File);\n \n-                           if FD = Invalid_FD then\n-                              Prj.Com.Fail\n-                                (\"could not create temporary file\");\n-                           end if;\n+                        if FD = Invalid_FD then\n+                           Prj.Com.Fail\n+                             (\"could not create temporary file\");\n \n-                           Close (FD);\n-                           Delete_File (Temp_File_Name.all, Success);\n+                        else\n+                           Temp_File_Name :=\n+                             new String'(Get_Name_String (Tmp_File));\n                         end if;\n \n                         Args (Args'Last) := new String'\n                           (Dir_Name &\n                            Directory_Separator &\n                            Str (1 .. Last));\n \n-                        --  Create the temporary file\n-\n-                        FD := Create_Output_Text_File\n-                          (Name => Temp_File_Name.all);\n-\n-                        if FD = Invalid_FD then\n-                           Prj.Com.Fail\n-                             (\"could not create temporary file\");\n-                        end if;\n-\n                         --  Save the standard output and error\n \n                         Saved_Output := Dup (Standout);\n@@ -1331,7 +1321,8 @@ package body Prj.Makr is\n \n                            if not Is_Valid (File) then\n                               Prj.Com.Fail\n-                                (\"could not read temporary file\");\n+                                (\"could not read temporary file \" &\n+                                 Temp_File_Name.all);\n                            end if;\n \n                            Save_Last_Source_Index := Sources.Last;"}, {"sha": "6c19a551408e2737f86c91f2a12ed250b7da7f4f", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afb4a8cda0247500a0084508af16b7ccaf943c8b/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afb4a8cda0247500a0084508af16b7ccaf943c8b/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=afb4a8cda0247500a0084508af16b7ccaf943c8b", "patch": "@@ -1693,6 +1693,14 @@ package body Sem_Ch13 is\n \n                   else\n                      Insert_After (N, Aitem);\n+\n+                     --  Pre/Postconditions on stubs are analyzed at once,\n+                     --  because the proper body is analyzed next, and the\n+                     --  contract must be captured before the body.\n+\n+                     if Nkind (N) = N_Subprogram_Body_Stub then\n+                        Analyze (Aitem);\n+                     end if;\n                   end if;\n \n                   goto Continue;"}, {"sha": "e34154c38c797ff83bb5b467ba04f9c3151ed6bc", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afb4a8cda0247500a0084508af16b7ccaf943c8b/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afb4a8cda0247500a0084508af16b7ccaf943c8b/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=afb4a8cda0247500a0084508af16b7ccaf943c8b", "patch": "@@ -2681,10 +2681,11 @@ package body Sem_Ch6 is\n       end if;\n \n       --  Ada 2012 aspects may appear in a subprogram body, but only if there\n-      --  is no previous spec.\n+      --  is no previous spec. Ditto for a subprogram stub that does not have\n+      --  a corresponding spec, but for which there may also be a spec_id.\n \n       if Has_Aspects (N) then\n-         if Present (Corresponding_Spec (N)) then\n+         if Present (Spec_Id) then\n             Error_Msg_N\n               (\"aspect specifications must appear in subprogram declaration\",\n                 N);"}, {"sha": "32d3979728bf03725fc48547441f29c08cfd328b", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afb4a8cda0247500a0084508af16b7ccaf943c8b/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afb4a8cda0247500a0084508af16b7ccaf943c8b/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=afb4a8cda0247500a0084508af16b7ccaf943c8b", "patch": "@@ -2187,13 +2187,18 @@ package body Sem_Prag is\n                  (\"aspect % requires ''Class for null procedure\");\n \n             --  Pre/postconditions are legal on a subprogram body if it is not\n-            --  a completion of a declaration.\n+            --  a completion of a declaration. They are also legal on a stub\n+            --  with no previous declarations (this is checked when processing\n+            --  the corresponding aspects).\n \n             elsif Nkind (PO) = N_Subprogram_Body\n               and then Acts_As_Spec (PO)\n             then\n                null;\n \n+            elsif Nkind (PO) = N_Subprogram_Body_Stub then\n+               null;\n+\n             elsif not Nkind_In (PO, N_Subprogram_Declaration,\n                                     N_Expression_Function,\n                                     N_Generic_Subprogram_Declaration,"}]}