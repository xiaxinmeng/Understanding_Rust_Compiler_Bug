{"sha": "0c2466035d83c57a77653edc273ff783ec8c4847", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGMyNDY2MDM1ZDgzYzU3YTc3NjUzZWRjMjczZmY3ODNlYzhjNDg0Nw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-01T09:31:42Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-01T09:31:42Z"}, "message": "par-ch3.adb (P_Type_Declaration): Properly handle missing type keyword\n\n2008-08-01  Robert Dewar  <dewar@adacore.com>\n\n\t* par-ch3.adb (P_Type_Declaration): Properly handle missing type\n\tkeyword\n\nFrom-SVN: r138503", "tree": {"sha": "42ea8fe8295fb97d6917cdd8422a2cca34240010", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42ea8fe8295fb97d6917cdd8422a2cca34240010"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c2466035d83c57a77653edc273ff783ec8c4847", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c2466035d83c57a77653edc273ff783ec8c4847", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c2466035d83c57a77653edc273ff783ec8c4847", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c2466035d83c57a77653edc273ff783ec8c4847/comments", "author": null, "committer": null, "parents": [{"sha": "2fc66c69c78fd0877b042dacb124b2c99f8f3477", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fc66c69c78fd0877b042dacb124b2c99f8f3477", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fc66c69c78fd0877b042dacb124b2c99f8f3477"}], "stats": {"total": 45, "additions": 36, "deletions": 9}, "files": [{"sha": "2e8aa97fa61181b1583d04b960a57dfa57eff84a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c2466035d83c57a77653edc273ff783ec8c4847/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c2466035d83c57a77653edc273ff783ec8c4847/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0c2466035d83c57a77653edc273ff783ec8c4847", "patch": "@@ -1,3 +1,37 @@\n+2008-08-01  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_ch6.adb (Expand_Call): Adjustment to previous fix for passing\n+\tcorrect accessibility levels. In the \"when others\" case, retrieve the\n+\taccess level of the Etype of Prev rather than Prev_Orig, because the\n+\toriginal exression has not always been analyzed.\n+\n+2008-08-01  Robert Dewar  <dewar@adacore.com>\n+\n+\t* prj-nmsc.adb: Minor reformatting\n+\n+\t* sem_ch4.adb: Minor reformatting\n+\tMinor code reorganization\n+\n+\t* prj.ads: Minor reformatting\n+\n+\t* s-os_lib.adb: Minor reformatting\n+\n+\t* par-prag.adb (Prag, case Wide_Character_Encoding): Deal with upper\n+\thalf encodings\n+\n+\t* scans.ads: Minor reformatting.\n+\n+\t* sem_prag.adb (Analyze_Pragma): Put entries in alpha order\n+\t(Analyze_Pragma): Make sure all GNAT pragmas call GNAT_Pragma\n+\n+\t* sem_res.adb:\n+\t(Resolve_Call): Check violation of No_Specific_Termination_Handlers\n+\n+\t* sem_ch12.adb: Minor comment reformatting\n+\n+\t* par-ch3.adb (P_Type_Declaration): Properly handle missing type\n+\tkeyword\n+\n 2008-08-01  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/utils.c (convert_vms_descriptor): Add gnu_expr_alt_type"}, {"sha": "87ea4007d479c99eac9a517792aae3efb1be84e7", "filename": "gcc/ada/par-ch3.adb", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c2466035d83c57a77653edc273ff783ec8c4847/gcc%2Fada%2Fpar-ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c2466035d83c57a77653edc273ff783ec8c4847/gcc%2Fada%2Fpar-ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch3.adb?ref=0c2466035d83c57a77653edc273ff783ec8c4847", "patch": "@@ -295,15 +295,8 @@ package body Ch3 is\n \n       else\n          T_Type;\n-\n-         if Token = Tok_Identifier\n-           and then Nkind (Token_Node) = N_Defining_Identifier\n-         then\n-            Ident_Node := Token_Node;\n-            Scan; -- past defining identifier\n-         else\n-            Ident_Node := P_Defining_Identifier (C_Is);\n-         end if;\n+         Type_Token_Location := Type_Loc;\n+         Ident_Node := P_Defining_Identifier (C_Is);\n       end if;\n \n       Discr_Sloc := Token_Ptr;"}]}