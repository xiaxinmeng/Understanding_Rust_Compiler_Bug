{"sha": "945bf9e13f706bed44ec760ac60693e00c59b146", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQ1YmY5ZTEzZjcwNmJlZDQ0ZWM3NjBhYzYwNjkzZTAwYzU5YjE0Ng==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-05-26T18:13:53Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-05-26T18:13:53Z"}, "message": "Implement DR2061\n\n\tgcc/\n\tImplement DR2061\n\t* name-lookup.c (push_inline_namespaces): New.\n\t(push_namespace): Look inside inline namespaces.\n\n\ttestsuite/\n\t* g++.dg/cpp0x/dr2061.C: New.\n\t* g++.dg/parse/namespace-alias-1.C: Add more test.\n\nFrom-SVN: r248521", "tree": {"sha": "1e04f598dbc5f8f70a5b6c8ed07b67188c211a11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e04f598dbc5f8f70a5b6c8ed07b67188c211a11"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/945bf9e13f706bed44ec760ac60693e00c59b146", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/945bf9e13f706bed44ec760ac60693e00c59b146", "html_url": "https://github.com/Rust-GCC/gccrs/commit/945bf9e13f706bed44ec760ac60693e00c59b146", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/945bf9e13f706bed44ec760ac60693e00c59b146/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3c9feefc8d6372d0e24070b53b40c2a36026e798", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c9feefc8d6372d0e24070b53b40c2a36026e798", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c9feefc8d6372d0e24070b53b40c2a36026e798"}], "stats": {"total": 150, "additions": 115, "deletions": 35}, "files": [{"sha": "8e3530fb4409877d6e58b7bc49c1d660e7bdc9dc", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/945bf9e13f706bed44ec760ac60693e00c59b146/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/945bf9e13f706bed44ec760ac60693e00c59b146/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=945bf9e13f706bed44ec760ac60693e00c59b146", "patch": "@@ -1,5 +1,9 @@\n 2017-05-26  Nathan Sidwell  <nathan@acm.org>\n \n+\tImplement DR2061\n+\t* name-lookup.c (push_inline_namespaces): New.\n+\t(push_namespace): Look inside inline namespaces.\n+\n \tInline and using namespace representation change.\n \t* cp-tree.h (struct lang_decl_ns): Delete ns_using.  Add usings,\n \tinlinees as vector."}, {"sha": "9c0390175b3bdb4b2d0074e409b34e5ad82e49f8", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 45, "deletions": 35, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/945bf9e13f706bed44ec760ac60693e00c59b146/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/945bf9e13f706bed44ec760ac60693e00c59b146/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=945bf9e13f706bed44ec760ac60693e00c59b146", "patch": "@@ -6057,6 +6057,23 @@ pushdecl_top_level_and_finish (tree x, tree init)\n   return x;\n }\n \n+/* Enter the namespaces from current_namerspace to NS.  */\n+\n+static int\n+push_inline_namespaces (tree ns)\n+{\n+  int count = 0;\n+  if (ns != current_namespace)\n+    {\n+      gcc_assert (ns != global_namespace);\n+      count += push_inline_namespaces (CP_DECL_CONTEXT (ns));\n+      resume_scope (NAMESPACE_LEVEL (ns));\n+      current_namespace = ns;\n+      count++;\n+    }\n+  return count;\n+}\n+\n /* Push into the scope of the NAME namespace.  If NAME is NULL_TREE,\n    then we enter an anonymous namespace.  If MAKE_INLINE is true, then\n    we create an inline namespace (it is up to the caller to check upon\n@@ -6076,43 +6093,36 @@ push_namespace (tree name, bool make_inline)\n   if (!name)\n     name = anon_identifier;\n \n-  /* Check whether this is an extended namespace definition.  */\n-  tree ns = get_namespace_binding (current_namespace, name);\n-  if (ns && TREE_CODE (ns) == NAMESPACE_DECL)\n-    {\n-      if (tree dna = DECL_NAMESPACE_ALIAS (ns))\n-\t{\n-\t  /* We do some error recovery for, eg, the redeclaration of M\n-\t     here:\n-\n-\t     namespace N {}\n-\t     namespace M = N;\n-\t     namespace M {}\n-\n-\t     However, in nasty cases like:\n-\n-\t     namespace N\n-\t     {\n-\t       namespace M = N;\n-\t       namespace M {}\n-\t     }\n-\n-\t     we just error out below, in duplicate_decls.  */\n-\t  if (NAMESPACE_LEVEL (dna)->level_chain == current_binding_level)\n-\t    {\n-\t      error (\"namespace alias %qD not allowed here, \"\n-\t\t     \"assuming %qD\", ns, dna);\n-\t      ns = dna;\n-\t    }\n-\t  else\n-\t    ns = NULL_TREE;\n-\t}\n-    }\n-  else\n-    ns = NULL_TREE;\n+  tree ns = NULL_TREE;\n+  {\n+    name_lookup lookup (name, 0);\n+    if (!lookup.search_qualified (current_namespace, /*usings=*/false))\n+      ;\n+    else if (TREE_CODE (lookup.value) != NAMESPACE_DECL)\n+      ;\n+    else if (tree dna = DECL_NAMESPACE_ALIAS (lookup.value))\n+      {\n+\t/* A namespace alias is not allowed here, but if the alias\n+\t   is for a namespace also inside the current scope,\n+\t   accept it with a diagnostic.  That's better than dying\n+\t   horribly.  */\n+\tif (is_nested_namespace (current_namespace, CP_DECL_CONTEXT (dna)))\n+\t  {\n+\t    error (\"namespace alias %qD not allowed here, \"\n+\t\t   \"assuming %qD\", lookup.value, dna);\n+\t    ns = dna;\n+\t  }\n+      }\n+    else\n+      ns = lookup.value;\n+  }\n \n   bool new_ns = false;\n-  if (!ns)\n+  if (ns)\n+    /* DR2061.  NS might be a member of an inline namespace.  We\n+       need to push into those namespaces.  */\n+    count += push_inline_namespaces (CP_DECL_CONTEXT (ns));\n+  else\n     {\n       ns = build_lang_decl (NAMESPACE_DECL, name, void_type_node);\n       SCOPE_DEPTH (ns) = SCOPE_DEPTH (current_namespace) + 1;"}, {"sha": "8eca177d4854b40fbaa3f512e5956e761d7cef3b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/945bf9e13f706bed44ec760ac60693e00c59b146/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/945bf9e13f706bed44ec760ac60693e00c59b146/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=945bf9e13f706bed44ec760ac60693e00c59b146", "patch": "@@ -1,3 +1,8 @@\n+2017-05-26  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* g++.dg/cpp0x/dr2061.C: New.\n+\t* g++.dg/parse/namespace-alias-1.C: Add more test.\n+\n 2017-05-26  Bin Cheng  <bin.cheng@arm.com>\n \n \tPR tree-optimization/80815"}, {"sha": "302279b6631042da81f92cdd3fee8ccee250577f", "filename": "gcc/testsuite/g++.dg/cpp0x/dr2061.C", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/945bf9e13f706bed44ec760ac60693e00c59b146/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdr2061.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/945bf9e13f706bed44ec760ac60693e00c59b146/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdr2061.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdr2061.C?ref=945bf9e13f706bed44ec760ac60693e00c59b146", "patch": "@@ -0,0 +1,46 @@\n+// { dg-do compile { target c++11 } }\n+\n+// DR2061, look inside inline namespace when pushing a namespace.\n+\n+inline namespace One\n+{\n+  namespace Term \n+  {\n+  }\n+  inline namespace Two\n+  {\n+    namespace Space\n+    {\n+    }\n+  }\n+}\n+\n+namespace Term\n+{\n+  void bob ();\n+}\n+\n+namespace Space\n+{\n+  void bill ();\n+}\n+\n+inline namespace Two\n+{\n+  void weed ();\n+}\n+\n+void One::Term::bob () {}\n+void One::Two::Space::bill () {}\n+void One::Two::weed () {}\n+\n+void Thing ()\n+{\n+  Term::bob ();\n+  Space::bill ();\n+  weed ();\n+}\n+\n+// { dg-final { scan-assembler \"_ZN3One4Term3bobEv:\" } }\n+// { dg-final { scan-assembler \"_ZN3One3Two5Space4billEv:\" } }\n+// { dg-final { scan-assembler \"_ZN3One3Two4weedEv:\" } }"}, {"sha": "5986ab69d0064e901a71686997218ebebe367a06", "filename": "gcc/testsuite/g++.dg/parse/namespace-alias-1.C", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/945bf9e13f706bed44ec760ac60693e00c59b146/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fnamespace-alias-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/945bf9e13f706bed44ec760ac60693e00c59b146/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fnamespace-alias-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fnamespace-alias-1.C?ref=945bf9e13f706bed44ec760ac60693e00c59b146", "patch": "@@ -5,3 +5,18 @@ namespace N\n   namespace M = N;  // { dg-message \"previous declaration\" }\n   namespace M {}    // { dg-error \"declaration of namespace\" }\n }\n+\n+namespace A\n+{\n+  namespace B \n+  {\n+    namespace C\n+    {\n+    }\n+  }\n+\n+  namespace D = B::C;\n+  namespace D  // { dg-error \"not allowed\" }\n+  {\n+  }\n+}"}]}