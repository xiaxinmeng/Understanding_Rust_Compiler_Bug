{"sha": "c38daa7976886a59a3cd496b5c776d75f3cdb056", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM4ZGFhNzk3Njg4NmE1OWEzY2Q0OTZiNWM3NzZkNzVmM2NkYjA1Ng==", "commit": {"author": {"name": "Mark Eggleston", "email": "markeggleston@gcc.gnu.org", "date": "2020-03-25T08:33:03Z"}, "committer": {"name": "Mark Eggleston", "email": "markeggleston@gcc.gnu.org", "date": "2020-03-25T08:34:50Z"}, "message": "fortran: ICE using undeclared symbol in array constructor PR93484\n\nUsing undeclared symbol k in an expression in the following\narray constructor results in an ICE:\n\n    print *, [real(x(k))]\n\nIf the call to the intrinsic is not in a constructor a no IMPLICIT\ntype error is reported and the ICE does not occur.\n\nMatching on an expression instead of an initialisation express an\nand not converting a MATCH_ERROR return value into MATCH_NO results\nin the no IMPLICIT error and no ICE.\n\nNote: Steven G. Kargl  <kargl@gcc.gnu.org> is the author of the\nchanges except for the test cases.\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/93484\n\t* match.c (gfc_match_type_spec): Replace gfc_match_init_expr with\n\tgfc_match_expr. Return m if m is MATCH_NO or MATCH_ERROR.\n\ngcc/testsuite\n\n\tPR fortran/93484\n\t* gfortran.dg/pr93484_1.f90: New test.\n\t* gfortran.dg/pr93484_2.f90: New test.", "tree": {"sha": "6e2d35208f1e7b5926619c3c086827cabf87cdec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e2d35208f1e7b5926619c3c086827cabf87cdec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c38daa7976886a59a3cd496b5c776d75f3cdb056", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c38daa7976886a59a3cd496b5c776d75f3cdb056", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c38daa7976886a59a3cd496b5c776d75f3cdb056", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c38daa7976886a59a3cd496b5c776d75f3cdb056/comments", "author": null, "committer": null, "parents": [{"sha": "5f18995e23edc944af3a401d9d9d3320a9362652", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f18995e23edc944af3a401d9d9d3320a9362652", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f18995e23edc944af3a401d9d9d3320a9362652"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "0f6dab3b3c2e843638eda90f3ac67ceef6970b07", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c38daa7976886a59a3cd496b5c776d75f3cdb056/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c38daa7976886a59a3cd496b5c776d75f3cdb056/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c38daa7976886a59a3cd496b5c776d75f3cdb056", "patch": "@@ -1,3 +1,9 @@\n+2020-03-25  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/93484\n+\t* match.c (gfc_match_type_spec): Replace gfc_match_init_expr with\n+\tgfc_match_expr. Return m if m is MATCH_NO or MATCH_ERROR.\n+\n 2020-03-23  Mark Eggleston  <mark.eggleston@codethink.com>\n \tSteven G. Kargl  <kargl@gcc.gnu.org>\n "}, {"sha": "8443d20dc4f921019dfb2a99c9dd7655d4cc057b", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c38daa7976886a59a3cd496b5c776d75f3cdb056/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c38daa7976886a59a3cd496b5c776d75f3cdb056/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=c38daa7976886a59a3cd496b5c776d75f3cdb056", "patch": "@@ -2248,9 +2248,9 @@ gfc_match_type_spec (gfc_typespec *ts)\n \n found:\n \n-      m = gfc_match_init_expr (&e);\n+      m = gfc_match_expr (&e);\n       if (m == MATCH_NO || m == MATCH_ERROR)\n-\treturn MATCH_NO;\n+\treturn m;\n \n       /* If a comma appears, it is an intrinsic subprogram. */\n       gfc_gobble_whitespace ();"}, {"sha": "4711a09c2240ffcf1661261e9ca4bd94a33d1e06", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c38daa7976886a59a3cd496b5c776d75f3cdb056/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c38daa7976886a59a3cd496b5c776d75f3cdb056/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c38daa7976886a59a3cd496b5c776d75f3cdb056", "patch": "@@ -1,3 +1,9 @@\n+2020-03-25  Mark Eggleston  <mark.eggleston@codethink.com>\n+\n+\tPR fortran/93484\n+\t* gfortran.dg/pr93484_1.f90: New test.\n+\t* gfortran.dg/pr93484_2.f90: New test.\n+\n 2020-03-25  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/94303"}, {"sha": "3b6dbc9ad79eb3880fb5dc797ad2da23a1b3ac88", "filename": "gcc/testsuite/gfortran.dg/pr93484_1.f90", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c38daa7976886a59a3cd496b5c776d75f3cdb056/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93484_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c38daa7976886a59a3cd496b5c776d75f3cdb056/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93484_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93484_1.f90?ref=c38daa7976886a59a3cd496b5c776d75f3cdb056", "patch": "@@ -0,0 +1,8 @@\n+! { dg-do compile }\n+!\n+program p\n+  implicit none\n+  integer :: x(4) = [1,2,3,4]\n+  print *, [real(x(k))] ! { dg-error \"Symbol 'k' at .1. has no IMPLICIT type\" } \n+end\n+"}, {"sha": "4a7f4330ed9856ea96e9a79f1192a8fe72503abf", "filename": "gcc/testsuite/gfortran.dg/pr93484_2.f90", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c38daa7976886a59a3cd496b5c776d75f3cdb056/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93484_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c38daa7976886a59a3cd496b5c776d75f3cdb056/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93484_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93484_2.f90?ref=c38daa7976886a59a3cd496b5c776d75f3cdb056", "patch": "@@ -0,0 +1,8 @@\n+! { dg-do compile }\n+!\n+program p\n+  implicit none\n+  integer, parameter :: x(4) = [1,2,3,4]\n+  print *, [real(x(k))] ! { dg-error \"Symbol 'k' at .1. has no IMPLICIT type\" }\n+end\n+"}]}