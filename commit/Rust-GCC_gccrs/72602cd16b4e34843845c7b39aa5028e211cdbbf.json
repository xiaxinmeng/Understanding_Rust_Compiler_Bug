{"sha": "72602cd16b4e34843845c7b39aa5028e211cdbbf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzI2MDJjZDE2YjRlMzQ4NDM4NDVjN2IzOWFhNTAyOGUyMTFjZGJiZg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2011-02-10T16:03:48Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2011-02-10T16:03:48Z"}, "message": "predicates.md (rx_zs_comparison_operator): Revert change from 2011-02-03.\n\n        * config/rx/predicates.md (rx_zs_comparison_operator): Revert\n        change from 2011-02-03.\n        * config/rx/rx.c (flags_from_code): Likewise.\n        (rx_print_operand) ['B']: For LT/GE, use lt/ge if overflow flag\n        is valid, n/pz otherwise.\n        (rx_select_cc_mode): Return CCmode if Y is not zero.\n\nFrom-SVN: r170004", "tree": {"sha": "ae0c12be4ddef98fca95763b928c8115814d8a99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae0c12be4ddef98fca95763b928c8115814d8a99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72602cd16b4e34843845c7b39aa5028e211cdbbf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72602cd16b4e34843845c7b39aa5028e211cdbbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72602cd16b4e34843845c7b39aa5028e211cdbbf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72602cd16b4e34843845c7b39aa5028e211cdbbf/comments", "author": null, "committer": null, "parents": [{"sha": "ea57f5739f724a9512743d18c3093f276b92c5f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea57f5739f724a9512743d18c3093f276b92c5f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea57f5739f724a9512743d18c3093f276b92c5f5"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "b46b1bf1952bdd3a8667e908b1112b6251944d70", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72602cd16b4e34843845c7b39aa5028e211cdbbf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72602cd16b4e34843845c7b39aa5028e211cdbbf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=72602cd16b4e34843845c7b39aa5028e211cdbbf", "patch": "@@ -1,3 +1,12 @@\n+2011-02-10  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/rx/predicates.md (rx_zs_comparison_operator): Revert\n+\tchange from 2011-02-03.\n+\t* config/rx/rx.c (flags_from_code): Likewise.\n+\t(rx_print_operand) ['B']: For LT/GE, use lt/ge if overflow flag\n+\tis valid, n/pz otherwise.\n+\t(rx_select_cc_mode): Return CCmode if Y is not zero.\n+\n 2011-02-10  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-structalias.c (bitpos_of_field): Use BITS_PER_UNIT,"}, {"sha": "77b3353ac3e338ced850c4d53b7e06986a364b51", "filename": "gcc/config/rx/predicates.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72602cd16b4e34843845c7b39aa5028e211cdbbf/gcc%2Fconfig%2Frx%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72602cd16b4e34843845c7b39aa5028e211cdbbf/gcc%2Fconfig%2Frx%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Fpredicates.md?ref=72602cd16b4e34843845c7b39aa5028e211cdbbf", "patch": "@@ -284,7 +284,7 @@\n )\n \n (define_predicate \"rx_zs_comparison_operator\"\n-  (match_code \"eq,ne\")\n+  (match_code \"eq,ne,lt,ge\")\n )\n \n ;; GT and LE omitted due to operand swap required."}, {"sha": "e01f4539ed4f4f9a956a5c9e155624a2ea138a43", "filename": "gcc/config/rx/rx.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72602cd16b4e34843845c7b39aa5028e211cdbbf/gcc%2Fconfig%2Frx%2Frx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72602cd16b4e34843845c7b39aa5028e211cdbbf/gcc%2Fconfig%2Frx%2Frx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.c?ref=72602cd16b4e34843845c7b39aa5028e211cdbbf", "patch": "@@ -447,13 +447,14 @@ rx_print_operand (FILE * file, rtx op, int letter)\n \t  }\n \telse\n \t  {\n+\t    unsigned int flags = flags_from_mode (mode);\n \t    switch (code)\n \t      {\n \t      case LT:\n-\t\tret = \"lt\";\n+\t\tret = (flags & CC_FLAG_O ? \"lt\" : \"n\");\n \t\tbreak;\n \t      case GE:\n-\t\tret = \"ge\";\n+\t\tret = (flags & CC_FLAG_O ? \"ge\" : \"pz\");\n \t\tbreak;\n \t      case GT:\n \t\tret = \"gt\";\n@@ -482,8 +483,7 @@ rx_print_operand (FILE * file, rtx op, int letter)\n \t      default:\n \t\tgcc_unreachable ();\n \t      }\n-\t    gcc_checking_assert ((flags_from_code (code)\n-\t\t\t\t  & ~flags_from_mode (mode)) == 0);\n+\t    gcc_checking_assert ((flags_from_code (code) & ~flags) == 0);\n \t  }\n \tfputs (ret, file);\n \tbreak;\n@@ -2625,7 +2625,7 @@ flags_from_code (enum rtx_code code)\n     {\n     case LT:\n     case GE:\n-      return CC_FLAG_S | CC_FLAG_O;\n+      return CC_FLAG_S;\n     case GT:\n     case LE:\n       return CC_FLAG_S | CC_FLAG_O | CC_FLAG_Z;\n@@ -2666,11 +2666,14 @@ rx_cc_modes_compatible (enum machine_mode m1, enum machine_mode m2)\n /* Return the minimal CC mode needed to implement (CMP_CODE X Y).  */\n \n enum machine_mode\n-rx_select_cc_mode (enum rtx_code cmp_code, rtx x, rtx y ATTRIBUTE_UNUSED)\n+rx_select_cc_mode (enum rtx_code cmp_code, rtx x, rtx y)\n {\n   if (GET_MODE_CLASS (GET_MODE (x)) == MODE_FLOAT)\n     return CC_Fmode;\n \n+  if (y != const0_rtx)\n+    return CCmode;\n+\n   return mode_from_flags (flags_from_code (cmp_code));\n }\n "}]}