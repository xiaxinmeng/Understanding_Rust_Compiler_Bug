{"sha": "285e4952c1e61a57b537f29479860d81bf50ce3a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg1ZTQ5NTJjMWU2MWE1N2I1MzdmMjk0Nzk4NjBkODFiZjUwY2UzYQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2006-11-07T17:29:34Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-11-07T17:29:34Z"}, "message": "re PR middle-end/29610 (ICE when compiling c++ code with -O2 -funswitch-loops)\n\n2006-11-07  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/29610\n\t* tree-cfgcleanup.c (cleanup_control_flow): Honor return value\n\tof tree_purge_dead_eh_edges as it may free dominators.\n\n\t* g++.dg/other/pr29610.C: New testcase.\n\nFrom-SVN: r118555", "tree": {"sha": "43a4661bd4f33505eafe2a4e1140839bd673f679", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43a4661bd4f33505eafe2a4e1140839bd673f679"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/285e4952c1e61a57b537f29479860d81bf50ce3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/285e4952c1e61a57b537f29479860d81bf50ce3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/285e4952c1e61a57b537f29479860d81bf50ce3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/285e4952c1e61a57b537f29479860d81bf50ce3a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8fafc2d3a071e8ed0a09ce52df5578e38be489d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fafc2d3a071e8ed0a09ce52df5578e38be489d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fafc2d3a071e8ed0a09ce52df5578e38be489d0"}], "stats": {"total": 48, "additions": 47, "deletions": 1}, "files": [{"sha": "a35e5d9b1792f19a030c66c98f6831a4aa69f5a0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/285e4952c1e61a57b537f29479860d81bf50ce3a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/285e4952c1e61a57b537f29479860d81bf50ce3a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=285e4952c1e61a57b537f29479860d81bf50ce3a", "patch": "@@ -1,3 +1,11 @@\n+2006-11-07  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/29610\n+\t* tree-cfgcleanup.c (cleanup_control_flow): Honor return value\n+\tof tree_purge_dead_eh_edges as it may free dominators.\n+\n+\t* g++.dg/other/pr29610.C: New testcase.\n+\n 2006-11-07  David Ung  <davidu@mips.com>\n \n \t* config/mips/mips.c (mips_rtx_cost_optimize_size): New table of"}, {"sha": "6566fb9a20483d605f97760f976dcda300f83b86", "filename": "gcc/testsuite/g++.dg/other/pr29610.C", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/285e4952c1e61a57b537f29479860d81bf50ce3a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr29610.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/285e4952c1e61a57b537f29479860d81bf50ce3a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr29610.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr29610.C?ref=285e4952c1e61a57b537f29479860d81bf50ce3a", "patch": "@@ -0,0 +1,38 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -funswitch-loops\" } */\n+\n+struct __normal_iterator \n+{\n+  typedef int*const *_Iterator;\n+  int*const * _M_current;\n+  __normal_iterator(const _Iterator& __i) : _M_current(__i){}\n+  const _Iterator& base() const {}\n+};\n+struct string { ~string(){} };\n+struct vector \n+{\n+  int** _M_finish;\n+  __normal_iterator end() const   { return __normal_iterator (_M_finish); }\n+  int size() const   { return end().base() - end().base(); }\n+};\n+class Painter\n+{\n+  int redraw_window(void);\n+  typedef int (Painter::* SliceWindowFunc)(void);\n+  int for_each(vector&, SliceWindowFunc);\n+  void tcl_command(void);\n+};\n+inline int Painter::for_each(vector &layout, SliceWindowFunc func)\n+{\n+    for (unsigned int window = 0; window < layout.size();++window)\n+        (this->*func)();\n+}\n+int t;\n+int Painter::redraw_window(void) {t = 1;}\n+string t2(int);\n+vector *g(const string&);\n+void Painter::tcl_command(void)\n+{\n+     for_each(*g(t2(2)), &Painter::redraw_window);\n+}\n+"}, {"sha": "dbcfd4d2a3479899cc674843dd204caf76045c37", "filename": "gcc/tree-cfgcleanup.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/285e4952c1e61a57b537f29479860d81bf50ce3a/gcc%2Ftree-cfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/285e4952c1e61a57b537f29479860d81bf50ce3a/gcc%2Ftree-cfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfgcleanup.c?ref=285e4952c1e61a57b537f29479860d81bf50ce3a", "patch": "@@ -160,7 +160,7 @@ cleanup_control_flow (void)\n \n       /* If the last statement of the block could throw and now cannot,\n \t we need to prune cfg.  */\n-      tree_purge_dead_eh_edges (bb);\n+      retval |= tree_purge_dead_eh_edges (bb);\n \n       if (bsi_end_p (bsi))\n \tcontinue;"}]}