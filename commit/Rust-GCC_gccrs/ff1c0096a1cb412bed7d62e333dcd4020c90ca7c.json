{"sha": "ff1c0096a1cb412bed7d62e333dcd4020c90ca7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmYxYzAwOTZhMWNiNDEyYmVkN2Q2MmUzMzNkY2Q0MDIwYzkwY2E3Yw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "2000-06-16T01:11:12Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-06-16T01:11:12Z"}, "message": "natIconv.cc (iconv_adapter): New function.\n\n\t* gnu/gcj/convert/natIconv.cc (iconv_adapter): New function.\n\t(read): Use it.\n\t(write): Likewise.\n\nFrom-SVN: r34570", "tree": {"sha": "dcf162256b88b044be7c99f67cd75e2958425eac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dcf162256b88b044be7c99f67cd75e2958425eac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff1c0096a1cb412bed7d62e333dcd4020c90ca7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff1c0096a1cb412bed7d62e333dcd4020c90ca7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff1c0096a1cb412bed7d62e333dcd4020c90ca7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff1c0096a1cb412bed7d62e333dcd4020c90ca7c/comments", "author": null, "committer": null, "parents": [{"sha": "8bad71361f493d775af6e90757fc8f8c0549d44d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bad71361f493d775af6e90757fc8f8c0549d44d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bad71361f493d775af6e90757fc8f8c0549d44d"}], "stats": {"total": 32, "additions": 24, "deletions": 8}, "files": [{"sha": "70d443047284c95b85ca385ceff0ae3f7f8bdcb6", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff1c0096a1cb412bed7d62e333dcd4020c90ca7c/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff1c0096a1cb412bed7d62e333dcd4020c90ca7c/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=ff1c0096a1cb412bed7d62e333dcd4020c90ca7c", "patch": "@@ -1,3 +1,9 @@\n+2000-06-15  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* gnu/gcj/convert/natIconv.cc (iconv_adapter): New function.\n+\t(read): Use it.\n+\t(write): Likewise.\n+\n 2000-06-15  Bryce McKinlay  <bryce@albatross.co.nz>\n \n \tFix for PR java.lang/258:"}, {"sha": "7875e9b7922bddafe1cd6c4cccb6e8e67e9bda37", "filename": "libjava/gnu/gcj/convert/natIconv.cc", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff1c0096a1cb412bed7d62e333dcd4020c90ca7c/libjava%2Fgnu%2Fgcj%2Fconvert%2FnatIconv.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff1c0096a1cb412bed7d62e333dcd4020c90ca7c/libjava%2Fgnu%2Fgcj%2Fconvert%2FnatIconv.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fconvert%2FnatIconv.cc?ref=ff1c0096a1cb412bed7d62e333dcd4020c90ca7c", "patch": "@@ -21,6 +21,16 @@ details.  */\n \n #ifdef HAVE_ICONV\n #include <iconv.h>\n+\n+template<typename T>\n+static inline size_t\n+iconv_adapter (size_t (*iconv_f) (iconv_t, T, size_t *, char **, size_t *),\n+\t       iconv_t handle, char **inbuf, size_t *inavail,\n+\t       char **outbuf, size_t *outavail)\n+{\n+  return (*iconv_f) (handle, (T) inbuf, inavail, outbuf, outavail);\n+}\n+\n #endif\n \n void\n@@ -69,12 +79,12 @@ gnu::gcj::convert::Input_iconv::read (jcharArray outbuffer,\n   size_t outavail = count;\n   size_t old_out = outavail;\n \n-  const char *inbuf = (const char *) &bytes[inpos];\n+  char *inbuf = (char *) &bytes[inpos];\n   char *outbuf = (char *) &out[outpos];\n \n-  size_t r = iconv ((iconv_t) handle,\n-\t\t    &inbuf, &inavail,\n-\t\t    &outbuf, &outavail);\n+  size_t r = iconv_adapter (iconv, (iconv_t) handle,\n+\t\t\t    &inbuf, &inavail,\n+\t\t\t    &outbuf, &outavail);\n   // FIXME: what if R==-1?\n \n   inpos += old_in - inavail;\n@@ -132,12 +142,12 @@ gnu::gcj::convert::Output_iconv::write (jcharArray inbuffer,\n   size_t outavail = buf->length - count;\n   size_t old_out = outavail;\n \n-  const char *inbuf = (const char *) &chars[inpos];\n+  char *inbuf = (char *) &chars[inpos];\n   char *outbuf = (char *) &out[count];\n \n-  size_t r = iconv ((iconv_t) handle,\n-\t\t    &inbuf, &inavail,\n-\t\t    &outbuf, &outavail);\n+  size_t r = iconv_adapter (iconv, (iconv_t) handle,\n+\t\t\t    &inbuf, &inavail,\n+\t\t\t    &outbuf, &outavail);\n   // FIXME: what if R==-1?\n \n   count += old_out - outavail;"}]}