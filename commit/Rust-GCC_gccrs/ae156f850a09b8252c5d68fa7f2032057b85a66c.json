{"sha": "ae156f850a09b8252c5d68fa7f2032057b85a66c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUxNTZmODUwYTA5YjgyNTJjNWQ2OGZhN2YyMDMyMDU3Yjg1YTY2Yw==", "commit": {"author": {"name": "Adrian Straetling", "email": "straetling@de.ibm.com", "date": "2005-05-09T17:37:42Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2005-05-09T17:37:42Z"}, "message": "s390.h: Move xxx_REGNUM definitions to s390.md.\n\n2005-05-09  Adrian Straetling  <straetling@de.ibm.com>\n\n\t* config/s390/s390.h: Move xxx_REGNUM definitions to s390.md.\n\t* config/s390/s390.md: (\"SIBCALL_REGNUM\", \"BASE_REGNUM\",\n\t\"RETURN_REGNUM\", \"CC_REGNUM\", \"TP_REGNUM\"): New constants.\n\tReplace every occurrence of '(reg:<MODE> 33)' by '(reg:<MODE>\n\tCC_REGNUM)'.\n\t(\"get_tp_64\", \"get_tp_31\", \"set_tp_64\", \"set_tp_31\"): Replace\n\t'(reg:<MODE> 36)' by '(reg:<MODE> TP_REGNUM)'.\n\t(\"*sibcall_br\", \"*sibcall_value_br\"): Replace '(reg:DI 1)' by '(reg:DI\n\tREG_SC)'.\n\nFrom-SVN: r99459", "tree": {"sha": "bf4487808f8035868c6c1ec52448699ebcd87e1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf4487808f8035868c6c1ec52448699ebcd87e1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae156f850a09b8252c5d68fa7f2032057b85a66c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae156f850a09b8252c5d68fa7f2032057b85a66c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae156f850a09b8252c5d68fa7f2032057b85a66c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae156f850a09b8252c5d68fa7f2032057b85a66c/comments", "author": null, "committer": null, "parents": [{"sha": "2f8f843440b5d89e6087e41b37bda69f44e8a758", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f8f843440b5d89e6087e41b37bda69f44e8a758", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f8f843440b5d89e6087e41b37bda69f44e8a758"}], "stats": {"total": 712, "additions": 368, "deletions": 344}, "files": [{"sha": "ddc10d75b79ee7e3879a83c7908984a26fb992ec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae156f850a09b8252c5d68fa7f2032057b85a66c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae156f850a09b8252c5d68fa7f2032057b85a66c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae156f850a09b8252c5d68fa7f2032057b85a66c", "patch": "@@ -1,3 +1,15 @@\n+2005-05-09  Adrian Straetling  <straetling@de.ibm.com>\n+\n+\t* config/s390/s390.h: Move xxx_REGNUM definitions to s390.md.\n+\t* config/s390/s390.md: (\"SIBCALL_REGNUM\", \"BASE_REGNUM\",\n+\t\"RETURN_REGNUM\", \"CC_REGNUM\", \"TP_REGNUM\"): New constants.\n+\tReplace every occurrence of '(reg:<MODE> 33)' by '(reg:<MODE>\n+\tCC_REGNUM)'.\n+\t(\"get_tp_64\", \"get_tp_31\", \"set_tp_64\", \"set_tp_31\"): Replace\n+\t'(reg:<MODE> 36)' by '(reg:<MODE> TP_REGNUM)'.\n+\t(\"*sibcall_br\", \"*sibcall_value_br\"): Replace '(reg:DI 1)' by '(reg:DI\n+\tREG_SC)'.\n+\n 2005-05-09  Adrian Straetling  <straetling@de.ibm.com>\n \n \t* config/s390/s390.md: (\"gf\") New mode attribute."}, {"sha": "06c8bc435d21ff43e65f512f2322571867ce6d49", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae156f850a09b8252c5d68fa7f2032057b85a66c/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae156f850a09b8252c5d68fa7f2032057b85a66c/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=ae156f850a09b8252c5d68fa7f2032057b85a66c", "patch": "@@ -253,12 +253,6 @@ if (INTEGRAL_MODE_P (MODE) &&\t        \t    \t\\\n #define FRAME_REG_P(X)\t\t(REG_P (X) && FRAME_REGNO_P (REGNO (X)))\n #define ACCESS_REG_P(X)\t\t(REG_P (X) && ACCESS_REGNO_P (REGNO (X)))\n \n-#define SIBCALL_REGNUM 1\n-#define BASE_REGNUM 13\n-#define RETURN_REGNUM 14\n-#define CC_REGNUM 33\n-#define TP_REGNUM 36\n-\n /* Set up fixed registers and calling convention:\n \n    GPRs 0-5 are always call-clobbered,"}, {"sha": "3feb8c2dfee7b44f0e136959265ed4ccf4ead1e3", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 356, "deletions": 338, "changes": 694, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae156f850a09b8252c5d68fa7f2032057b85a66c/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae156f850a09b8252c5d68fa7f2032057b85a66c/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=ae156f850a09b8252c5d68fa7f2032057b85a66c", "patch": "@@ -145,6 +145,24 @@\n    (UNSPECV_SET_TP\t\t500)\n   ])\n \n+;;\n+;; Registers\n+;;\n+\n+(define_constants\n+  [\n+   ; Sibling call register.\n+   (SIBCALL_REGNUM\t\t 1)\n+   ; Literal pool base register.\n+   (BASE_REGNUM\t\t\t13)\n+   ; Return address register.\n+   (RETURN_REGNUM\t\t14)\n+   ; Condition code register.\n+   (CC_REGNUM\t\t\t33)\n+   ; Thread local storage pointer register. \n+   (TP_REGNUM\t\t\t36)\n+  ])\n+\n \n ;; Instruction operand type as used in the Principles of Operation.\n ;; Used to determine defaults for length and other attribute values.\n@@ -317,7 +335,7 @@\n ;;\n \n (define_expand \"cmp<mode>\"\n-  [(set (reg:CC 33)\n+  [(set (reg:CC CC_REGNUM)\n         (compare:CC (match_operand:GPR 0 \"register_operand\" \"\")\n                     (match_operand:GPR 1 \"general_operand\" \"\")))]\n   \"\"\n@@ -328,7 +346,7 @@\n })\n \n (define_expand \"cmp<mode>\"\n-  [(set (reg:CC 33)\n+  [(set (reg:CC CC_REGNUM)\n         (compare:CC (match_operand:FPR 0 \"register_operand\" \"\")\n                     (match_operand:FPR 1 \"general_operand\" \"\")))]\n   \"TARGET_HARD_FLOAT\"\n@@ -342,7 +360,7 @@\n ; Test-under-Mask instructions\n \n (define_insn \"*tmqi_mem\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (and:QI (match_operand:QI 0 \"memory_operand\" \"Q,S\")\n                          (match_operand:QI 1 \"immediate_operand\" \"n,n\"))\n                  (match_operand:QI 2 \"immediate_operand\" \"n,n\")))]\n@@ -353,7 +371,7 @@\n   [(set_attr \"op_type\" \"SI,SIY\")])\n \n (define_insn \"*tmdi_reg\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (and:DI (match_operand:DI 0 \"nonimmediate_operand\" \"d,d,d,d\")\n                          (match_operand:DI 1 \"immediate_operand\"\n \t\t\t\t\t     \"N0HD0,N1HD0,N2HD0,N3HD0\"))\n@@ -369,7 +387,7 @@\n   [(set_attr \"op_type\" \"RI\")])\n \n (define_insn \"*tmsi_reg\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (and:SI (match_operand:SI 0 \"nonimmediate_operand\" \"d,d\")\n                          (match_operand:SI 1 \"immediate_operand\" \"N0HS0,N1HS0\"))\n                  (match_operand:SI 2 \"immediate_operand\" \"n,n\")))]\n@@ -381,7 +399,7 @@\n   [(set_attr \"op_type\" \"RI\")])\n \n (define_insn \"*tm<mode>_full\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (match_operand:HQI 0 \"register_operand\" \"d\")\n                  (match_operand:HQI 1 \"immediate_operand\" \"n\")))]\n   \"s390_match_ccmode (insn, s390_tm_ccmode (constm1_rtx, operands[1], 1))\"\n@@ -392,7 +410,7 @@\n ; Load-and-Test instructions\n \n (define_insn \"*tstdi_sign\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (ashiftrt:DI (ashift:DI (subreg:DI (match_operand:SI 0 \"register_operand\" \"d\") 0)\n \t\t\t\t\t (const_int 32)) (const_int 32))\n                  (match_operand:DI 1 \"const0_operand\" \"\")))\n@@ -403,7 +421,7 @@\n   [(set_attr \"op_type\" \"RRE\")])\n \n (define_insn \"*tstdi\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (match_operand:DI 0 \"register_operand\" \"d\")\n                  (match_operand:DI 1 \"const0_operand\" \"\")))\n    (set (match_operand:DI 2 \"register_operand\" \"=d\")\n@@ -413,15 +431,15 @@\n   [(set_attr \"op_type\" \"RRE\")])\n \n (define_insn \"*tstdi_cconly\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (match_operand:DI 0 \"register_operand\" \"d\")\n                  (match_operand:DI 1 \"const0_operand\" \"\")))]\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_64BIT\"\n   \"ltgr\\t%0,%0\"\n   [(set_attr \"op_type\" \"RRE\")])\n \n (define_insn \"*tstdi_cconly_31\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (match_operand:DI 0 \"register_operand\" \"d\")\n                  (match_operand:DI 1 \"const0_operand\" \"\")))]\n   \"s390_match_ccmode(insn, CCSmode) && !TARGET_64BIT\"\n@@ -431,7 +449,7 @@\n \n \n (define_insn \"*tstsi\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (match_operand:SI 0 \"nonimmediate_operand\" \"d,Q,S\")\n                  (match_operand:SI 1 \"const0_operand\" \"\")))\n    (set (match_operand:SI 2 \"register_operand\" \"=d,d,d\")\n@@ -444,7 +462,7 @@\n   [(set_attr \"op_type\" \"RR,RS,RSY\")])\n \n (define_insn \"*tstsi_cconly\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (match_operand:SI 0 \"nonimmediate_operand\" \"d,Q,S\")\n                  (match_operand:SI 1 \"const0_operand\" \"\")))\n    (clobber (match_scratch:SI 2 \"=X,d,d\"))]\n@@ -456,15 +474,15 @@\n   [(set_attr \"op_type\" \"RR,RS,RSY\")])\n \n (define_insn \"*tstsi_cconly2\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (match_operand:SI 0 \"register_operand\" \"d\")\n                  (match_operand:SI 1 \"const0_operand\" \"\")))]\n   \"s390_match_ccmode(insn, CCSmode)\"\n   \"ltr\\t%0,%0\"\n   [(set_attr \"op_type\" \"RR\")])\n \n (define_insn \"*tst<mode>CCT\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (match_operand:HQI 0 \"nonimmediate_operand\" \"?Q,?S,d\")\n                  (match_operand:HQI 1 \"const0_operand\" \"\")))\n    (set (match_operand:HQI 2 \"register_operand\" \"=d,d,0\")\n@@ -477,7 +495,7 @@\n   [(set_attr \"op_type\" \"RS,RSY,RI\")])\n \n (define_insn \"*tsthiCCT_cconly\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (match_operand:HI 0 \"nonimmediate_operand\" \"Q,S,d\")\n                  (match_operand:HI 1 \"const0_operand\" \"\")))\n    (clobber (match_scratch:HI 2 \"=d,d,X\"))]\n@@ -489,7 +507,7 @@\n   [(set_attr \"op_type\" \"RS,RSY,RI\")])\n \n (define_insn \"*tstqiCCT_cconly\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (match_operand:QI 0 \"nonimmediate_operand\" \"?Q,?S,d\")\n                  (match_operand:QI 1 \"const0_operand\" \"\")))]\n   \"s390_match_ccmode(insn, CCTmode)\"\n@@ -500,7 +518,7 @@\n   [(set_attr \"op_type\" \"SI,SIY,RI\")])\n \n (define_insn \"*tst<mode>\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (match_operand:HQI 0 \"s_operand\" \"Q,S\")\n                  (match_operand:HQI 1 \"const0_operand\" \"\")))\n    (set (match_operand:HQI 2 \"register_operand\" \"=d,d\")\n@@ -512,7 +530,7 @@\n   [(set_attr \"op_type\" \"RS,RSY\")])\n \n (define_insn \"*tst<mode>_cconly\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (match_operand:HQI 0 \"s_operand\" \"Q,S\")\n                  (match_operand:HQI 1 \"const0_operand\" \"\")))\n    (clobber (match_scratch:HQI 2 \"=d,d\"))]\n@@ -526,7 +544,7 @@\n ; Compare (equality) instructions\n \n (define_insn \"*cmpdi_cct\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (match_operand:DI 0 \"nonimmediate_operand\" \"%d,d,d,Q\")\n                  (match_operand:DI 1 \"general_operand\" \"d,K,m,BQ\")))]\n   \"s390_match_ccmode (insn, CCTmode) && TARGET_64BIT\"\n@@ -538,7 +556,7 @@\n   [(set_attr \"op_type\" \"RRE,RI,RXY,SS\")])\n \n (define_insn \"*cmpsi_cct\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (match_operand:SI 0 \"nonimmediate_operand\" \"%d,d,d,d,Q\")\n                  (match_operand:SI 1 \"general_operand\" \"d,K,R,T,BQ\")))]\n   \"s390_match_ccmode (insn, CCTmode)\"\n@@ -554,7 +572,7 @@\n ; Compare (signed) instructions\n \n (define_insn \"*cmpdi_ccs_sign\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (sign_extend:DI (match_operand:SI 1 \"nonimmediate_operand\" \"d,m\"))\n                  (match_operand:DI 0 \"register_operand\" \"d,d\")))]\n   \"s390_match_ccmode(insn, CCSRmode) && TARGET_64BIT\"\n@@ -564,7 +582,7 @@\n   [(set_attr \"op_type\" \"RRE,RXY\")])\n \n (define_insn \"*cmpdi_ccs\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (match_operand:DI 0 \"register_operand\" \"d,d,d\")\n                  (match_operand:DI 1 \"general_operand\" \"d,K,m\")))]\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_64BIT\"\n@@ -575,7 +593,7 @@\n   [(set_attr \"op_type\" \"RRE,RI,RXY\")])\n \n (define_insn \"*cmpsi_ccs_sign\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (sign_extend:SI (match_operand:HI 1 \"memory_operand\" \"R,T\"))\n                  (match_operand:SI 0 \"register_operand\" \"d,d\")))]\n   \"s390_match_ccmode(insn, CCSRmode)\"\n@@ -585,7 +603,7 @@\n   [(set_attr \"op_type\" \"RX,RXY\")])\n \n (define_insn \"*cmpsi_ccs\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (match_operand:SI 0 \"register_operand\" \"d,d,d,d\")\n                  (match_operand:SI 1 \"general_operand\" \"d,K,R,T\")))]\n   \"s390_match_ccmode(insn, CCSmode)\"\n@@ -600,7 +618,7 @@\n ; Compare (unsigned) instructions\n \n (define_insn \"*cmpdi_ccu_zero\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (zero_extend:DI (match_operand:SI 1 \"nonimmediate_operand\" \"d,m\"))\n                  (match_operand:DI 0 \"register_operand\" \"d,d\")))]\n   \"s390_match_ccmode (insn, CCURmode) && TARGET_64BIT\"\n@@ -610,7 +628,7 @@\n   [(set_attr \"op_type\" \"RRE,RXY\")])\n \n (define_insn \"*cmpdi_ccu\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (match_operand:DI 0 \"nonimmediate_operand\" \"d,d,Q,BQ\")\n                  (match_operand:DI 1 \"general_operand\" \"d,m,BQ,Q\")))]\n   \"s390_match_ccmode (insn, CCUmode) && TARGET_64BIT\"\n@@ -622,7 +640,7 @@\n   [(set_attr \"op_type\" \"RRE,RXY,SS,SS\")])\n \n (define_insn \"*cmpsi_ccu\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (match_operand:SI 0 \"nonimmediate_operand\" \"d,d,d,Q,BQ\")\n                  (match_operand:SI 1 \"general_operand\" \"d,R,T,BQ,Q\")))]\n   \"s390_match_ccmode (insn, CCUmode)\"\n@@ -635,7 +653,7 @@\n   [(set_attr \"op_type\" \"RR,RX,RXY,SS,SS\")])\n \n (define_insn \"*cmphi_ccu\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (match_operand:HI 0 \"nonimmediate_operand\" \"d,d,Q,BQ\")\n                  (match_operand:HI 1 \"general_operand\" \"Q,S,BQ,Q\")))]\n   \"s390_match_ccmode (insn, CCUmode)\n@@ -648,7 +666,7 @@\n   [(set_attr \"op_type\" \"RS,RSY,SS,SS\")])\n \n (define_insn \"*cmpqi_ccu\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (match_operand:QI 0 \"nonimmediate_operand\" \"d,d,Q,S,Q,BQ\")\n                  (match_operand:QI 1 \"general_operand\" \"Q,S,n,n,BQ,Q\")))]\n   \"s390_match_ccmode (insn, CCUmode)\n@@ -666,7 +684,7 @@\n ; Block compare (CLC) instruction patterns.\n \n (define_insn \"*clc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (match_operand:BLK 0 \"memory_operand\" \"Q\")\n                  (match_operand:BLK 1 \"memory_operand\" \"Q\")))\n    (use (match_operand 2 \"const_int_operand\" \"n\"))]\n@@ -676,7 +694,7 @@\n   [(set_attr \"op_type\" \"SS\")])\n \n (define_split\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (match_operand 0 \"memory_operand\" \"\")\n                  (match_operand 1 \"memory_operand\" \"\")))]\n   \"reload_completed\n@@ -700,7 +718,7 @@\n ; (DF|SF) instructions\n \n (define_insn \"*cmp<mode>_ccs_0\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (match_operand:FPR 0 \"register_operand\" \"f\")\n                  (match_operand:FPR 1 \"const0_operand\" \"\")))]\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n@@ -709,7 +727,7 @@\n     (set_attr \"type\"  \"fsimp<mode>\")])\n \n (define_insn \"*cmp<mode>_ccs_0_ibm\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (match_operand:FPR 0 \"register_operand\" \"f\")\n                  (match_operand:FPR 1 \"const0_operand\" \"\")))]\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n@@ -718,7 +736,7 @@\n     (set_attr \"type\"  \"fsimp<mode>\")])\n \n (define_insn \"*cmp<mode>_ccs\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (match_operand:FPR 0 \"register_operand\" \"f,f\")\n                  (match_operand:FPR 1 \"general_operand\" \"f,R\")))]\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n@@ -729,7 +747,7 @@\n     (set_attr \"type\"  \"fsimp<mode>\")])\n \n (define_insn \"*cmp<mode>_ccs_ibm\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (match_operand:FPR 0 \"register_operand\" \"f,f\")\n                  (match_operand:FPR 1 \"general_operand\" \"f,R\")))]\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n@@ -999,7 +1017,7 @@\n   [(parallel\n     [(set (match_operand:DI 0 \"register_operand\" \"\")\n           (match_operand:QI 1 \"address_operand\" \"\"))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"TARGET_64BIT\n    && preferred_la_operand_p (operands[1], const0_rtx)\"\n   [(set (match_dup 0) (match_dup 1))]\n@@ -1012,7 +1030,7 @@\n     [(set (match_dup 0)\n           (plus:DI (match_dup 0)\n                    (match_operand:DI 2 \"nonmemory_operand\" \"\")))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"TARGET_64BIT\n    && !reg_overlap_mentioned_p (operands[0], operands[2])\n    && preferred_la_operand_p (operands[1], operands[2])\"\n@@ -1128,7 +1146,7 @@\n   [(parallel\n     [(set (match_operand:SI 0 \"register_operand\" \"\")\n           (match_operand:QI 1 \"address_operand\" \"\"))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"!TARGET_64BIT\n    && preferred_la_operand_p (operands[1], const0_rtx)\"\n   [(set (match_dup 0) (match_dup 1))]\n@@ -1141,7 +1159,7 @@\n     [(set (match_dup 0)\n           (plus:SI (match_dup 0)\n                    (match_operand:SI 2 \"nonmemory_operand\" \"\")))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"!TARGET_64BIT\n    && !reg_overlap_mentioned_p (operands[0], operands[2])\n    && preferred_la_operand_p (operands[1], operands[2])\"\n@@ -1163,7 +1181,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n         (and:SI (match_operand:QI 1 \"address_operand\" \"p\")\n                 (const_int 2147483647)))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"!TARGET_64BIT\"\n   \"#\"\n   \"&& reload_completed\"\n@@ -1310,7 +1328,7 @@\n (define_insn \"*movstricthi\"\n   [(set (strict_low_part (match_operand:HI 0 \"register_operand\" \"+d,d\"))\n                          (match_operand:HI 1 \"memory_operand\" \"Q,S\"))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"\"\n   \"@\n    icm\\t%0,3,%S1\n@@ -1735,11 +1753,11 @@\n \t\t      (reg:QI 0)\n \t\t      (match_operand 3 \"immediate_operand\" \"\")] UNSPEC_SRST))\n      (clobber (scratch:P))\n-     (clobber (reg:CC 33))])\n+     (clobber (reg:CC CC_REGNUM))])\n    (parallel\n     [(set (match_operand:P 0 \"register_operand\" \"\")\n           (minus:P (match_dup 4) (match_dup 5)))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"\"\n {\n   operands[4] = gen_reg_rtx (Pmode);\n@@ -1755,7 +1773,7 @@\n \t\t    (reg:QI 0)\n \t\t    (match_operand 4 \"immediate_operand\" \"\")] UNSPEC_SRST))\n    (clobber (match_scratch:P 1 \"=a\"))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"\"\n   \"srst\\t%0,%1\\;jo\\t.-4\"\n   [(set_attr \"length\" \"8\")\n@@ -1848,7 +1866,7 @@\n           (match_operand:BLK 1 \"memory_operand\" \"\"))\n      (use (match_operand 2 \"general_operand\" \"\"))\n      (use (match_dup 3))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"\"\n {\n   enum machine_mode dword_mode = word_mode == DImode ? TImode : DImode;\n@@ -1880,7 +1898,7 @@\n         (mem:BLK (subreg:DI (match_operand:TI 3 \"register_operand\" \"1\") 0)))\n    (use (match_dup 2))\n    (use (match_dup 3))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT\"\n   \"mvcle\\t%0,%1,0\\;jo\\t.-4\"\n   [(set_attr \"length\" \"8\")\n@@ -1893,7 +1911,7 @@\n         (mem:BLK (subreg:SI (match_operand:DI 3 \"register_operand\" \"1\") 0)))\n    (use (match_dup 2))\n    (use (match_dup 3))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"!TARGET_64BIT\"\n   \"mvcle\\t%0,%1,0\\;jo\\t.-4\"\n   [(set_attr \"length\" \"8\")\n@@ -1921,7 +1939,7 @@\n      (use (match_operand 1 \"nonmemory_operand\" \"\"))\n      (use (const:BLK (unspec:BLK [(const_int 0)] UNSPEC_INSN)))\n      (clobber (match_dup 2))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"\"\n   \"operands[2] = gen_rtx_SCRATCH (Pmode);\")\n \n@@ -1931,7 +1949,7 @@\n    (use (match_operand 1 \"nonmemory_operand\" \"n,a,a\"))\n    (use (match_operand 2 \"immediate_operand\" \"X,R,X\"))\n    (clobber (match_scratch 3 \"=X,X,&a\"))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"(GET_MODE (operands[1]) == Pmode || GET_MODE (operands[1]) == VOIDmode)\n    && GET_MODE (operands[3]) == Pmode\"\n   \"#\"\n@@ -1943,12 +1961,12 @@\n    (use (match_operand 1 \"const_int_operand\" \"\"))\n    (use (match_operand 2 \"immediate_operand\" \"\"))\n    (clobber (scratch))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"reload_completed\"\n   [(parallel\n     [(set (match_dup 0) (const_int 0))\n      (use (match_dup 1))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"operands[1] = GEN_INT ((INTVAL (operands[1]) & 0xff) + 1);\")\n \n (define_split\n@@ -1957,14 +1975,14 @@\n    (use (match_operand 1 \"register_operand\" \"\"))\n    (use (match_operand 2 \"memory_operand\" \"\"))\n    (clobber (scratch))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"reload_completed\"\n   [(parallel\n     [(unspec [(match_dup 1) (match_dup 2)\n               (const_int 0)] UNSPEC_EXECUTE)\n      (set (match_dup 0) (const_int 0))\n      (use (const_int 1))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"\")\n \n (define_split\n@@ -1973,15 +1991,15 @@\n    (use (match_operand 1 \"register_operand\" \"\"))\n    (use (const:BLK (unspec:BLK [(const_int 0)] UNSPEC_INSN)))\n    (clobber (match_operand 2 \"register_operand\" \"\"))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"reload_completed && TARGET_CPU_ZARCH\"\n   [(set (match_dup 2) (label_ref (match_dup 3)))\n    (parallel\n     [(unspec [(match_dup 1) (mem:BLK (match_dup 2)) \n               (label_ref (match_dup 3))] UNSPEC_EXECUTE)\n      (set (match_dup 0) (const_int 0))\n      (use (const_int 1))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"operands[3] = gen_label_rtx ();\")\n \n ; Clear a block of arbitrary length.\n@@ -1993,7 +2011,7 @@\n           (const_int 0))\n      (use (match_operand 1 \"general_operand\" \"\"))\n      (use (match_dup 2))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"\"\n {\n   enum machine_mode dword_mode = word_mode == DImode ? TImode : DImode;\n@@ -2019,7 +2037,7 @@\n         (const_int 0))\n    (use (match_dup 2))\n    (use (match_operand:TI 1 \"register_operand\" \"d\"))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT\"\n   \"mvcle\\t%0,%1,0\\;jo\\t.-4\"\n   [(set_attr \"length\" \"8\")\n@@ -2031,7 +2049,7 @@\n         (const_int 0))\n    (use (match_dup 2))\n    (use (match_operand:DI 1 \"register_operand\" \"d\"))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"!TARGET_64BIT\"\n   \"mvcle\\t%0,%1,0\\;jo\\t.-4\"\n   [(set_attr \"length\" \"8\")\n@@ -2056,7 +2074,7 @@\n \n (define_expand \"cmpmem_short\"\n   [(parallel\n-    [(set (reg:CCU 33)\n+    [(set (reg:CCU CC_REGNUM)\n           (compare:CCU (match_operand:BLK 0 \"memory_operand\" \"\")\n                        (match_operand:BLK 1 \"memory_operand\" \"\")))\n      (use (match_operand 2 \"nonmemory_operand\" \"\"))\n@@ -2066,7 +2084,7 @@\n   \"operands[3] = gen_rtx_SCRATCH (Pmode);\")\n \n (define_insn \"*cmpmem_short\"\n-  [(set (reg:CCU 33)\n+  [(set (reg:CCU CC_REGNUM)\n         (compare:CCU (match_operand:BLK 0 \"memory_operand\" \"Q,Q,Q\")\n                      (match_operand:BLK 1 \"memory_operand\" \"Q,Q,Q\")))\n    (use (match_operand 2 \"nonmemory_operand\" \"n,a,a\"))\n@@ -2078,20 +2096,20 @@\n   [(set_attr \"type\" \"cs\")])\n \n (define_split\n-  [(set (reg:CCU 33)\n+  [(set (reg:CCU CC_REGNUM)\n         (compare:CCU (match_operand:BLK 0 \"memory_operand\" \"\")\n                      (match_operand:BLK 1 \"memory_operand\" \"\")))\n    (use (match_operand 2 \"const_int_operand\" \"\"))\n    (use (match_operand 3 \"immediate_operand\" \"\"))\n    (clobber (scratch))]\n   \"reload_completed\"\n   [(parallel\n-    [(set (reg:CCU 33) (compare:CCU (match_dup 0) (match_dup 1)))\n+    [(set (reg:CCU CC_REGNUM) (compare:CCU (match_dup 0) (match_dup 1)))\n      (use (match_dup 2))])]\n   \"operands[2] = GEN_INT ((INTVAL (operands[2]) & 0xff) + 1);\")\n \n (define_split\n-  [(set (reg:CCU 33)\n+  [(set (reg:CCU CC_REGNUM)\n         (compare:CCU (match_operand:BLK 0 \"memory_operand\" \"\")\n                      (match_operand:BLK 1 \"memory_operand\" \"\")))\n    (use (match_operand 2 \"register_operand\" \"\"))\n@@ -2101,12 +2119,12 @@\n   [(parallel\n     [(unspec [(match_dup 2) (match_dup 3)\n               (const_int 0)] UNSPEC_EXECUTE)\n-     (set (reg:CCU 33) (compare:CCU (match_dup 0) (match_dup 1)))\n+     (set (reg:CCU CC_REGNUM) (compare:CCU (match_dup 0) (match_dup 1)))\n      (use (const_int 1))])]\n   \"\")\n \n (define_split\n-  [(set (reg:CCU 33)\n+  [(set (reg:CCU CC_REGNUM)\n         (compare:CCU (match_operand:BLK 0 \"memory_operand\" \"\")\n                      (match_operand:BLK 1 \"memory_operand\" \"\")))\n    (use (match_operand 2 \"register_operand\" \"\"))\n@@ -2117,7 +2135,7 @@\n    (parallel\n     [(unspec [(match_dup 2) (mem:BLK (match_dup 3)) \n               (label_ref (match_dup 4))] UNSPEC_EXECUTE)\n-     (set (reg:CCU 33) (compare:CCU (match_dup 0) (match_dup 1)))\n+     (set (reg:CCU CC_REGNUM) (compare:CCU (match_dup 0) (match_dup 1)))\n      (use (const_int 1))])]\n   \"operands[4] = gen_label_rtx ();\")\n \n@@ -2127,7 +2145,7 @@\n   [(parallel\n     [(clobber (match_dup 2))\n      (clobber (match_dup 3))\n-     (set (reg:CCU 33)\n+     (set (reg:CCU CC_REGNUM)\n           (compare:CCU (match_operand:BLK 0 \"memory_operand\" \"\")\n                        (match_operand:BLK 1 \"memory_operand\" \"\")))\n      (use (match_operand 2 \"general_operand\" \"\"))\n@@ -2159,7 +2177,7 @@\n (define_insn \"*cmpmem_long_64\"\n   [(clobber (match_operand:TI 0 \"register_operand\" \"=d\"))\n    (clobber (match_operand:TI 1 \"register_operand\" \"=d\"))\n-   (set (reg:CCU 33)\n+   (set (reg:CCU CC_REGNUM)\n         (compare:CCU (mem:BLK (subreg:DI (match_operand:TI 2 \"register_operand\" \"0\") 0))\n                      (mem:BLK (subreg:DI (match_operand:TI 3 \"register_operand\" \"1\") 0))))\n    (use (match_dup 2))\n@@ -2172,7 +2190,7 @@\n (define_insn \"*cmpmem_long_31\"\n   [(clobber (match_operand:DI 0 \"register_operand\" \"=d\"))\n    (clobber (match_operand:DI 1 \"register_operand\" \"=d\"))\n-   (set (reg:CCU 33)\n+   (set (reg:CCU CC_REGNUM)\n         (compare:CCU (mem:BLK (subreg:SI (match_operand:DI 2 \"register_operand\" \"0\") 0))\n                      (mem:BLK (subreg:SI (match_operand:DI 3 \"register_operand\" \"1\") 0))))\n    (use (match_dup 2))\n@@ -2189,17 +2207,17 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n         (unspec:SI [(match_operand:CCU 1 \"register_operand\" \"0\")]\n                    UNSPEC_CMPINT))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"\"\n   \"#\"\n   \"reload_completed\"\n   [(set (match_dup 0) (ashift:SI (match_dup 0) (const_int 2)))\n    (parallel\n     [(set (match_dup 0) (ashiftrt:SI (match_dup 0) (const_int 30)))\n-     (clobber (reg:CC 33))])])\n+     (clobber (reg:CC CC_REGNUM))])])\n \n (define_insn_and_split \"*cmpint_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (unspec:SI [(match_operand:CCU 1 \"register_operand\" \"0\")]\n                             UNSPEC_CMPINT)\n                  (const_int 0)))\n@@ -2222,17 +2240,17 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n         (sign_extend:DI (unspec:SI [(match_operand:CCU 1 \"register_operand\" \"0\")]\n                                    UNSPEC_CMPINT)))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT\"\n   \"#\"\n   \"&& reload_completed\"\n   [(set (match_dup 0) (ashift:DI (match_dup 0) (const_int 34)))\n    (parallel\n     [(set (match_dup 0) (ashiftrt:DI (match_dup 0) (const_int 62)))\n-     (clobber (reg:CC 33))])])\n+     (clobber (reg:CC CC_REGNUM))])])\n \n (define_insn_and_split \"*cmpint_sign_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (ashiftrt:DI (ashift:DI (subreg:DI \n                    (unspec:SI [(match_operand:CCU 1 \"register_operand\" \"0\")]\n                               UNSPEC_CMPINT) 0)\n@@ -2262,7 +2280,7 @@\n (define_insn \"*sethigh<mode>si\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n         (unspec:SI [(match_operand:HQI 1 \"s_operand\" \"Q,S\")] UNSPEC_SETHIGH))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"\"\n   \"@\n    icm\\t%0,<icm_hi>,%S1\n@@ -2272,15 +2290,15 @@\n (define_insn \"*sethighqidi_64\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n         (unspec:DI [(match_operand:QI 1 \"s_operand\" \"QS\")] UNSPEC_SETHIGH))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT\"\n   \"icmh\\t%0,8,%S1\"\n   [(set_attr \"op_type\" \"RSY\")])\n \n (define_insn \"*sethighqidi_31\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n         (unspec:DI [(match_operand:QI 1 \"s_operand\" \"Q,S\")] UNSPEC_SETHIGH))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"!TARGET_64BIT\"\n   \"@\n    icm\\t%0,8,%S1\n@@ -2292,14 +2310,14 @@\n         (zero_extract:SI (match_operand:QI 1 \"s_operand\" \"Q\")\n                          (match_operand 2 \"const_int_operand\" \"n\")\n                          (const_int 0)))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"!TARGET_64BIT\n    && INTVAL (operands[2]) > 0 && INTVAL (operands[2]) < 8\"\n   \"#\"\n   \"&& reload_completed\"\n   [(parallel\n     [(set (match_dup 0) (unspec:SI [(match_dup 1)] UNSPEC_SETHIGH))\n-     (clobber (reg:CC 33))])\n+     (clobber (reg:CC CC_REGNUM))])\n     (set (match_dup 0) (lshiftrt:SI (match_dup 0) (match_dup 2)))]\n {\n   operands[2] = GEN_INT (32 - INTVAL (operands[2]));\n@@ -2311,14 +2329,14 @@\n         (zero_extract:SI (match_operand:QI 1 \"s_operand\" \"Q\")\n                          (match_operand 2 \"const_int_operand\" \"n\")\n                          (const_int 0)))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"!TARGET_64BIT\n    && INTVAL (operands[2]) >= 8 && INTVAL (operands[2]) < 16\"\n   \"#\"\n   \"&& reload_completed\"\n   [(parallel\n     [(set (match_dup 0) (unspec:SI [(match_dup 1)] UNSPEC_SETHIGH))\n-     (clobber (reg:CC 33))])\n+     (clobber (reg:CC CC_REGNUM))])\n     (set (match_dup 0) (lshiftrt:SI (match_dup 0) (match_dup 2)))]\n {\n   operands[2] = GEN_INT (32 - INTVAL (operands[2]));\n@@ -2401,16 +2419,16 @@\n (define_insn_and_split \"*extendqidi2_short_displ\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n         (sign_extend:DI (match_operand:QI 1 \"s_operand\" \"Q\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT && !TARGET_LONG_DISPLACEMENT\"\n   \"#\"\n   \"&& reload_completed\"\n   [(parallel\n     [(set (match_dup 0) (unspec:DI [(match_dup 1)] UNSPEC_SETHIGH))\n-     (clobber (reg:CC 33))])\n+     (clobber (reg:CC CC_REGNUM))])\n    (parallel\n     [(set (match_dup 0) (ashiftrt:DI (match_dup 0) (const_int 56)))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"\")\n \n ;\n@@ -2451,16 +2469,16 @@\n (define_insn_and_split \"*extendqisi2_short_displ\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n         (sign_extend:SI (match_operand:QI 1 \"s_operand\" \"Q\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"!TARGET_LONG_DISPLACEMENT\"\n   \"#\"\n   \"&& reload_completed\"\n   [(parallel\n     [(set (match_dup 0) (unspec:SI [(match_dup 1)] UNSPEC_SETHIGH))\n-     (clobber (reg:CC 33))])\n+     (clobber (reg:CC CC_REGNUM))])\n    (parallel\n     [(set (match_dup 0) (ashiftrt:SI (match_dup 0) (const_int 24)))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"\")\n \n ;\n@@ -2549,7 +2567,7 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n         (and:DI (subreg:DI (match_operand:SI 1 \"memory_operand\" \"m\") 0)\n \t\t(const_int 2147483647)))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT\"\n   \"#\"\n   \"&& reload_completed\"\n@@ -2582,7 +2600,7 @@\n   [(set (match_operand:GPR 0 \"register_operand\" \"\")\n         (and:GPR (match_operand:GPR 1 \"nonimmediate_operand\" \"\")\n                  (const_int 2147483647)))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT && reload_completed\"\n   [(set (match_dup 0)\n         (and:GPR (match_dup 1)\n@@ -2616,14 +2634,14 @@\n (define_insn_and_split \"*zero_extendhisi2_31\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=&d\")\n         (zero_extend:SI (match_operand:HI 1 \"s_operand\" \"QS\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"!TARGET_ZARCH\"\n   \"#\"\n   \"&& reload_completed\"\n   [(set (match_dup 0) (const_int 0))\n    (parallel\n     [(set (strict_low_part (match_dup 2)) (match_dup 1))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"operands[2] = gen_lowpart (HImode, operands[0]);\")\n \n (define_insn_and_split \"*zero_extendqisi2_31\"\n@@ -2719,7 +2737,7 @@\n   [(set (match_operand:GPR 0 \"register_operand\" \"=d\")\n         (fix:GPR (match_operand:FPR 1 \"register_operand\" \"f\")))\n    (unspec:GPR [(match_operand:GPR 2 \"immediate_operand\" \"K\")] UNSPEC_ROUND)\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"c<GPR:gf><FPR:de>br\\t%0,%h2,%1\"\n   [(set_attr \"op_type\" \"RRE\")\n@@ -2761,7 +2779,7 @@\n    (use (match_operand:DI 2 \"immediate_operand\" \"m\"))\n    (use (match_operand:DI 3 \"immediate_operand\" \"m\"))\n    (use (match_operand:BLK 4 \"memory_operand\" \"m\"))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n {\n    output_asm_insn (\"sd\\t%1,%2\", operands);\n@@ -2843,7 +2861,7 @@\n         (float:DF (match_operand:SI 1 \"register_operand\" \"d\")))\n    (use (match_operand:DI 2 \"immediate_operand\" \"m\"))\n    (use (match_operand:BLK 3 \"memory_operand\" \"m\"))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n {\n    output_asm_insn (\"st\\t%1,%N3\", operands);\n@@ -2937,7 +2955,7 @@\n (define_insn \"extendsfdf2_ibm\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n         (float_extend:DF (match_operand:SF 1 \"nonimmediate_operand\" \"f,R\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"@\n    sdr\\t%0,%0\\;ler\\t%0,%1\n@@ -2965,19 +2983,19 @@\n   [(set (match_operand:TI 0 \"register_operand\" \"=&d\")\n         (plus:TI (match_operand:TI 1 \"nonimmediate_operand\" \"%0\")\n                  (match_operand:TI 2 \"general_operand\" \"do\") ) )\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT\"\n   \"#\"\n   \"&& reload_completed\"\n   [(parallel\n-    [(set (reg:CCL1 33)\n+    [(set (reg:CCL1 CC_REGNUM)\n           (compare:CCL1 (plus:DI (match_dup 7) (match_dup 8))\n                         (match_dup 7)))\n      (set (match_dup 6) (plus:DI (match_dup 7) (match_dup 8)))])\n    (parallel\n     [(set (match_dup 3) (plus:DI (plus:DI (match_dup 4) (match_dup 5))\n-                                 (ltu:DI (reg:CCL1 33) (const_int 0))))\n-     (clobber (reg:CC 33))])]\n+                                 (ltu:DI (reg:CCL1 CC_REGNUM) (const_int 0))))\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"operands[3] = operand_subword (operands[0], 0, 0, TImode);\n    operands[4] = operand_subword (operands[1], 0, 0, TImode);\n    operands[5] = operand_subword (operands[2], 0, 0, TImode);\n@@ -2993,15 +3011,15 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n         (plus:DI (sign_extend:DI (match_operand:SI 2 \"general_operand\" \"d,m\"))\n                  (match_operand:DI 1 \"register_operand\" \"0,0\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT\"\n   \"@\n    agfr\\t%0,%2\n    agf\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*adddi3_zero_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (plus:DI (zero_extend:DI (match_operand:SI 2 \"general_operand\" \"d,m\"))\n                           (match_operand:DI 1 \"register_operand\" \"0,0\"))\n                  (const_int 0)))\n@@ -3014,7 +3032,7 @@\n   [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*adddi3_zero_cconly\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (plus:DI (zero_extend:DI (match_operand:SI 2 \"general_operand\" \"d,m\"))\n                           (match_operand:DI 1 \"register_operand\" \"0,0\"))\n                  (const_int 0)))\n@@ -3029,15 +3047,15 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n         (plus:DI (zero_extend:DI (match_operand:SI 2 \"general_operand\" \"d,m\"))\n                  (match_operand:DI 1 \"register_operand\" \"0,0\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT\"\n   \"@\n    algfr\\t%0,%2\n    algf\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*adddi3_imm_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (plus:DI (match_operand:DI 1 \"nonimmediate_operand\" \"0\")\n                           (match_operand:DI 2 \"const_int_operand\" \"K\"))\n                  (const_int 0)))\n@@ -3050,7 +3068,7 @@\n   [(set_attr \"op_type\"  \"RI\")])\n \n (define_insn \"*adddi3_carry1_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (plus:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n                           (match_operand:DI 2 \"general_operand\" \"d,m\"))\n                  (match_dup 1)))\n@@ -3063,7 +3081,7 @@\n   [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*adddi3_carry1_cconly\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (plus:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n                           (match_operand:DI 2 \"general_operand\" \"d,m\"))\n                  (match_dup 1)))\n@@ -3075,7 +3093,7 @@\n   [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*adddi3_carry2_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (plus:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n                           (match_operand:DI 2 \"general_operand\" \"d,m\"))\n                  (match_dup 2)))\n@@ -3088,7 +3106,7 @@\n   [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*adddi3_carry2_cconly\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (plus:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n                           (match_operand:DI 2 \"general_operand\" \"d,m\"))\n                  (match_dup 2)))\n@@ -3100,7 +3118,7 @@\n   [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*adddi3_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (plus:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n                           (match_operand:DI 2 \"general_operand\" \"d,m\"))\n                  (const_int 0)))\n@@ -3113,7 +3131,7 @@\n   [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*adddi3_cconly\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (plus:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n                           (match_operand:DI 2 \"general_operand\" \"d,m\"))\n                  (const_int 0)))\n@@ -3125,7 +3143,7 @@\n   [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*adddi3_cconly2\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n                  (neg:SI (match_operand:DI 2 \"general_operand\" \"d,m\"))))\n    (clobber (match_scratch:DI 0 \"=d,d\"))]\n@@ -3139,7 +3157,7 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d,d\")\n         (plus:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0,0\")\n                  (match_operand:DI 2 \"general_operand\" \"d,K,m\") ) )\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT\"\n   \"@\n    agr\\t%0,%2\n@@ -3151,19 +3169,19 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=&d\")\n         (plus:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0\")\n                  (match_operand:DI 2 \"general_operand\" \"do\") ) )\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"!TARGET_64BIT && TARGET_CPU_ZARCH\"\n   \"#\"\n   \"&& reload_completed\"\n   [(parallel\n-    [(set (reg:CCL1 33)\n+    [(set (reg:CCL1 CC_REGNUM)\n           (compare:CCL1 (plus:SI (match_dup 7) (match_dup 8))\n                         (match_dup 7)))\n      (set (match_dup 6) (plus:SI (match_dup 7) (match_dup 8)))])\n    (parallel\n     [(set (match_dup 3) (plus:SI (plus:SI (match_dup 4) (match_dup 5))\n-                                 (ltu:SI (reg:CCL1 33) (const_int 0))))\n-     (clobber (reg:CC 33))])]\n+                                 (ltu:SI (reg:CCL1 CC_REGNUM) (const_int 0))))\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"operands[3] = operand_subword (operands[0], 0, 0, DImode);\n    operands[4] = operand_subword (operands[1], 0, 0, DImode);\n    operands[5] = operand_subword (operands[2], 0, 0, DImode);\n@@ -3175,25 +3193,25 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=&d\")\n         (plus:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0\")\n                  (match_operand:DI 2 \"general_operand\" \"do\") ) )\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"!TARGET_CPU_ZARCH\"\n   \"#\"\n   \"&& reload_completed\"\n   [(parallel\n     [(set (match_dup 3) (plus:SI (match_dup 4) (match_dup 5)))\n-     (clobber (reg:CC 33))])\n+     (clobber (reg:CC CC_REGNUM))])\n    (parallel\n-    [(set (reg:CCL1 33)\n+    [(set (reg:CCL1 CC_REGNUM)\n           (compare:CCL1 (plus:SI (match_dup 7) (match_dup 8))\n                         (match_dup 7)))\n      (set (match_dup 6) (plus:SI (match_dup 7) (match_dup 8)))])\n    (set (pc)\n-        (if_then_else (ltu (reg:CCL1 33) (const_int 0))\n+        (if_then_else (ltu (reg:CCL1 CC_REGNUM) (const_int 0))\n                       (pc)\n                       (label_ref (match_dup 9))))\n    (parallel\n     [(set (match_dup 3) (plus:SI (match_dup 3) (const_int 1)))\n-     (clobber (reg:CC 33))])\n+     (clobber (reg:CC CC_REGNUM))])\n    (match_dup 9)]\n   \"operands[3] = operand_subword (operands[0], 0, 0, DImode);\n    operands[4] = operand_subword (operands[1], 0, 0, DImode);\n@@ -3208,7 +3226,7 @@\n     [(set (match_operand:DI 0 \"register_operand\" \"\")\n           (plus:DI (match_operand:DI 1 \"nonimmediate_operand\" \"\")\n                    (match_operand:DI 2 \"general_operand\" \"\")))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"\"\n   \"\")\n \n@@ -3217,7 +3235,7 @@\n ;\n \n (define_insn \"*addsi3_imm_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"0\")\n                           (match_operand:SI 2 \"const_int_operand\" \"K\"))\n                  (const_int 0)))\n@@ -3229,7 +3247,7 @@\n   [(set_attr \"op_type\"  \"RI\")])\n \n (define_insn \"*addsi3_carry1_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n                           (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n                  (match_dup 1)))\n@@ -3243,7 +3261,7 @@\n   [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"*addsi3_carry1_cconly\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n                           (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n                  (match_dup 1)))\n@@ -3256,7 +3274,7 @@\n   [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"*addsi3_carry2_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n                           (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n                  (match_dup 2)))\n@@ -3270,7 +3288,7 @@\n   [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"*addsi3_carry2_cconly\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n                           (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n                  (match_dup 2)))\n@@ -3283,7 +3301,7 @@\n   [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"*addsi3_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n                           (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n                  (const_int 0)))\n@@ -3297,7 +3315,7 @@\n   [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"*addsi3_cconly\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n                           (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n                  (const_int 0)))\n@@ -3310,7 +3328,7 @@\n   [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"*addsi3_cconly2\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n                  (neg:SI (match_operand:SI 2 \"general_operand\" \"d,R,T\"))))\n    (clobber (match_scratch:SI 0 \"=d,d,d\"))]\n@@ -3325,7 +3343,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n         (plus:SI (sign_extend:SI (match_operand:HI 2 \"memory_operand\" \"R,T\"))\n                  (match_operand:SI 1 \"register_operand\" \"0,0\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"\"\n   \"@\n    ah\\t%0,%2\n@@ -3336,7 +3354,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=d,d,d,d\")\n         (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0,0\")\n                  (match_operand:SI 2 \"general_operand\" \"d,K,R,T\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"\"\n   \"@\n    ar\\t%0,%2\n@@ -3354,15 +3372,15 @@\n     [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n           (plus:FPR (match_operand:FPR 1 \"nonimmediate_operand\" \"%0,0\")\n                     (match_operand:FPR 2 \"general_operand\" \"f,R\")))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"TARGET_HARD_FLOAT\"\n   \"\")\n \n (define_insn \"*add<mode>3\"\n   [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n         (plus:FPR (match_operand:FPR 1 \"nonimmediate_operand\" \"%0,0\")\n                   (match_operand:FPR 2 \"general_operand\" \"f,R\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n    a<de>br\\t%0,%2\n@@ -3371,7 +3389,7 @@\n    (set_attr \"type\"     \"fsimp<mode>\")])\n \n (define_insn \"*add<mode>3_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n \t(compare (plus:FPR (match_operand:FPR 1 \"nonimmediate_operand\" \"%0,0\")\n \t\t\t   (match_operand:FPR 2 \"general_operand\" \"f,R\"))\n \t\t (match_operand:FPR 3 \"const0_operand\" \"\")))\n@@ -3385,7 +3403,7 @@\n    (set_attr \"type\"     \"fsimp<mode>\")])\n \n (define_insn \"*add<mode>3_cconly\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n \t(compare (plus:FPR (match_operand:FPR 1 \"nonimmediate_operand\" \"%0,0\")\n \t\t\t   (match_operand:FPR 2 \"general_operand\" \"f,R\"))\n \t\t (match_operand:FPR 3 \"const0_operand\" \"\")))\n@@ -3401,7 +3419,7 @@\n   [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n         (plus:FPR (match_operand:FPR 1 \"nonimmediate_operand\" \"%0,0\")\n                   (match_operand:FPR 2 \"general_operand\" \"f,R\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"@\n    a<de>r\\t%0,%2\n@@ -3422,19 +3440,19 @@\n   [(set (match_operand:TI 0 \"register_operand\" \"=&d\")\n         (minus:TI (match_operand:TI 1 \"register_operand\" \"0\")\n                   (match_operand:TI 2 \"general_operand\" \"do\") ) )\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT\"\n   \"#\"\n   \"&& reload_completed\"\n   [(parallel\n-    [(set (reg:CCL2 33)\n+    [(set (reg:CCL2 CC_REGNUM)\n           (compare:CCL2 (minus:DI (match_dup 7) (match_dup 8))\n                         (match_dup 7)))\n      (set (match_dup 6) (minus:DI (match_dup 7) (match_dup 8)))])\n    (parallel\n     [(set (match_dup 3) (minus:DI (minus:DI (match_dup 4) (match_dup 5))\n-                                  (gtu:DI (reg:CCL2 33) (const_int 0))))\n-     (clobber (reg:CC 33))])]\n+                                  (gtu:DI (reg:CCL2 CC_REGNUM) (const_int 0))))\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"operands[3] = operand_subword (operands[0], 0, 0, TImode);\n    operands[4] = operand_subword (operands[1], 0, 0, TImode);\n    operands[5] = operand_subword (operands[2], 0, 0, TImode);\n@@ -3450,15 +3468,15 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n         (minus:DI (match_operand:DI 1 \"register_operand\" \"0,0\")\n                   (sign_extend:DI (match_operand:SI 2 \"general_operand\" \"d,m\"))))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT\"\n   \"@\n    sgfr\\t%0,%2\n    sgf\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*subdi3_zero_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (minus:DI (match_operand:DI 1 \"register_operand\" \"0,0\")\n                            (zero_extend:DI (match_operand:SI 2 \"general_operand\" \"d,m\")))\n                  (const_int 0)))\n@@ -3471,7 +3489,7 @@\n   [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*subdi3_zero_cconly\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (minus:DI (match_operand:DI 1 \"register_operand\" \"0,0\")\n                            (zero_extend:DI (match_operand:SI 2 \"general_operand\" \"d,m\")))\n                  (const_int 0)))\n@@ -3486,15 +3504,15 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n         (minus:DI (match_operand:DI 1 \"register_operand\" \"0,0\")\n                   (zero_extend:DI (match_operand:SI 2 \"general_operand\" \"d,m\"))))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT\"\n   \"@\n    slgfr\\t%0,%2\n    slgf\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*subdi3_borrow_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (minus:DI (match_operand:DI 1 \"register_operand\" \"0,0\")\n                            (match_operand:DI 2 \"general_operand\" \"d,m\"))\n                  (match_dup 1)))\n@@ -3507,7 +3525,7 @@\n   [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*subdi3_borrow_cconly\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (minus:DI (match_operand:DI 1 \"register_operand\" \"0,0\")\n                            (match_operand:DI 2 \"general_operand\" \"d,m\"))\n                  (match_dup 1)))\n@@ -3519,7 +3537,7 @@\n   [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*subdi3_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (minus:DI (match_operand:DI 1 \"register_operand\" \"0,0\")\n                            (match_operand:DI 2 \"general_operand\" \"d,m\"))\n                  (const_int 0)))\n@@ -3532,7 +3550,7 @@\n   [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*subdi3_cc2\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (match_operand:DI 1 \"register_operand\" \"0,0\")\n                  (match_operand:DI 2 \"general_operand\" \"d,m\")))\n    (set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n@@ -3544,7 +3562,7 @@\n   [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*subdi3_cconly\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (minus:DI (match_operand:DI 1 \"register_operand\" \"0,0\")\n                            (match_operand:DI 2 \"general_operand\" \"d,m\"))\n                  (const_int 0)))\n@@ -3556,7 +3574,7 @@\n   [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*subdi3_cconly2\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (match_operand:DI 1 \"register_operand\" \"0,0\")\n                  (match_operand:DI 2 \"general_operand\" \"d,m\")))\n    (clobber (match_scratch:DI 0 \"=d,d\"))]\n@@ -3570,7 +3588,7 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n         (minus:DI (match_operand:DI 1 \"register_operand\" \"0,0\")\n                   (match_operand:DI 2 \"general_operand\" \"d,m\") ) )\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT\"\n   \"@\n    sgr\\t%0,%2\n@@ -3581,19 +3599,19 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=&d\")\n         (minus:DI (match_operand:DI 1 \"register_operand\" \"0\")\n                   (match_operand:DI 2 \"general_operand\" \"do\") ) )\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"!TARGET_64BIT && TARGET_CPU_ZARCH\"\n   \"#\"\n   \"&& reload_completed\"\n   [(parallel\n-    [(set (reg:CCL2 33)\n+    [(set (reg:CCL2 CC_REGNUM)\n           (compare:CCL2 (minus:SI (match_dup 7) (match_dup 8))\n                         (match_dup 7)))\n      (set (match_dup 6) (minus:SI (match_dup 7) (match_dup 8)))])\n    (parallel\n     [(set (match_dup 3) (minus:SI (minus:SI (match_dup 4) (match_dup 5))\n-                                  (gtu:SI (reg:CCL2 33) (const_int 0))))\n-     (clobber (reg:CC 33))])]\n+                                  (gtu:SI (reg:CCL2 CC_REGNUM) (const_int 0))))\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"operands[3] = operand_subword (operands[0], 0, 0, DImode);\n    operands[4] = operand_subword (operands[1], 0, 0, DImode);\n    operands[5] = operand_subword (operands[2], 0, 0, DImode);\n@@ -3605,25 +3623,25 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=&d\")\n         (minus:DI (match_operand:DI 1 \"register_operand\" \"0\")\n                   (match_operand:DI 2 \"general_operand\" \"do\") ) )\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"!TARGET_CPU_ZARCH\"\n   \"#\"\n   \"&& reload_completed\"\n   [(parallel\n     [(set (match_dup 3) (minus:SI (match_dup 4) (match_dup 5)))\n-     (clobber (reg:CC 33))])\n+     (clobber (reg:CC CC_REGNUM))])\n    (parallel\n-    [(set (reg:CCL2 33)\n+    [(set (reg:CCL2 CC_REGNUM)\n           (compare:CCL2 (minus:SI (match_dup 7) (match_dup 8))\n                         (match_dup 7)))\n      (set (match_dup 6) (minus:SI (match_dup 7) (match_dup 8)))])\n    (set (pc)\n-        (if_then_else (gtu (reg:CCL2 33) (const_int 0))\n+        (if_then_else (gtu (reg:CCL2 CC_REGNUM) (const_int 0))\n                       (pc)\n                       (label_ref (match_dup 9))))\n    (parallel\n     [(set (match_dup 3) (plus:SI (match_dup 3) (const_int -1)))\n-     (clobber (reg:CC 33))])\n+     (clobber (reg:CC CC_REGNUM))])\n    (match_dup 9)]\n   \"operands[3] = operand_subword (operands[0], 0, 0, DImode);\n    operands[4] = operand_subword (operands[1], 0, 0, DImode);\n@@ -3638,7 +3656,7 @@\n     [(set (match_operand:DI 0 \"register_operand\" \"\")\n           (minus:DI (match_operand:DI 1 \"register_operand\" \"\")\n                     (match_operand:DI 2 \"general_operand\" \"\")))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"\"\n   \"\")\n \n@@ -3647,7 +3665,7 @@\n ;\n \n (define_insn \"*subsi3_borrow_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (minus:SI (match_operand:SI 1 \"register_operand\" \"0,0,0\")\n                            (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n                  (match_dup 1)))\n@@ -3661,7 +3679,7 @@\n   [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"*subsi3_borrow_cconly\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (minus:SI (match_operand:SI 1 \"register_operand\" \"0,0,0\")\n                            (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n                  (match_dup 1)))\n@@ -3674,7 +3692,7 @@\n   [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"*subsi3_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (minus:SI (match_operand:SI 1 \"register_operand\" \"0,0,0\")\n                            (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n                  (const_int 0)))\n@@ -3688,7 +3706,7 @@\n   [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"*subsi3_cc2\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (match_operand:SI 1 \"register_operand\" \"0,0,0\")\n                  (match_operand:SI 2 \"general_operand\" \"d,R,T\")))\n    (set (match_operand:SI 0 \"register_operand\" \"=d,d,d\")\n@@ -3701,7 +3719,7 @@\n   [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"*subsi3_cconly\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (minus:SI (match_operand:SI 1 \"register_operand\" \"0,0,0\")\n                            (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n                  (const_int 0)))\n@@ -3714,7 +3732,7 @@\n   [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"*subsi3_cconly2\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (match_operand:SI 1 \"register_operand\" \"0,0,0\")\n                  (match_operand:SI 2 \"general_operand\" \"d,R,T\")))\n    (clobber (match_scratch:SI 0 \"=d,d,d\"))]\n@@ -3729,7 +3747,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n         (minus:SI (match_operand:SI 1 \"register_operand\" \"0,0\")\n                   (sign_extend:SI (match_operand:HI 2 \"memory_operand\" \"R,T\"))))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"\"\n   \"@\n    sh\\t%0,%2\n@@ -3740,7 +3758,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=d,d,d\")\n         (minus:SI (match_operand:SI 1 \"register_operand\" \"0,0,0\")\n                   (match_operand:SI 2 \"general_operand\" \"d,R,T\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"\"\n   \"@\n    sr\\t%0,%2\n@@ -3758,15 +3776,15 @@\n     [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n           (minus:FPR (match_operand:FPR 1 \"register_operand\" \"0,0\")\n                      (match_operand:FPR 2 \"general_operand\" \"f,R\")))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"TARGET_HARD_FLOAT\"\n   \"\")\n \n (define_insn \"*sub<mode>3\"\n   [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n         (minus:FPR (match_operand:FPR 1 \"register_operand\" \"0,0\")\n                    (match_operand:FPR 2 \"general_operand\" \"f,R\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n    s<de>br\\t%0,%2\n@@ -3775,7 +3793,7 @@\n    (set_attr \"type\"     \"fsimp<mode>\")])\n \n (define_insn \"*sub<mode>3_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n \t(compare (minus:FPR (match_operand:FPR 1 \"nonimmediate_operand\" \"0,0\")\n \t\t\t    (match_operand:FPR 2 \"general_operand\" \"f,R\"))\n \t\t (match_operand:FPR 3 \"const0_operand\" \"\")))\n@@ -3789,7 +3807,7 @@\n    (set_attr \"type\"     \"fsimp<mode>\")])\n \n (define_insn \"*sub<mode>3_cconly\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n \t(compare (minus:FPR (match_operand:FPR 1 \"nonimmediate_operand\" \"0,0\")\n \t\t\t    (match_operand:FPR 2 \"general_operand\" \"f,R\"))\n \t\t (match_operand:FPR 3 \"const0_operand\" \"\")))\n@@ -3805,7 +3823,7 @@\n   [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n         (minus:FPR (match_operand:FPR 1 \"register_operand\" \"0,0\")\n                    (match_operand:FPR 2 \"general_operand\" \"f,R\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"@\n    s<de>r\\t%0,%2\n@@ -3823,7 +3841,7 @@\n ;\n \n (define_insn \"*add<mode>3_alc_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare\n           (plus:GPR (plus:GPR (match_operand:GPR 1 \"nonimmediate_operand\" \"%0,0\")\n                               (match_operand:GPR 2 \"general_operand\" \"d,m\"))\n@@ -3842,15 +3860,15 @@\n         (plus:GPR (plus:GPR (match_operand:GPR 1 \"nonimmediate_operand\" \"%0,0\")\n                             (match_operand:GPR 2 \"general_operand\" \"d,m\"))\n                   (match_operand:GPR 3 \"s390_alc_comparison\" \"\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_CPU_ZARCH\"\n   \"@\n    alc<g>r\\t%0,%2\n    alc<g>\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*sub<mode>3_slb_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare\n           (minus:GPR (minus:GPR (match_operand:GPR 1 \"nonimmediate_operand\" \"0,0\")\n                                 (match_operand:GPR 2 \"general_operand\" \"d,m\"))\n@@ -3869,7 +3887,7 @@\n         (minus:GPR (minus:GPR (match_operand:GPR 1 \"nonimmediate_operand\" \"0,0\")\n                               (match_operand:GPR 2 \"general_operand\" \"d,m\"))\n                    (match_operand:GPR 3 \"s390_slb_comparison\" \"\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_CPU_ZARCH\"\n   \"@\n    slb<g>r\\t%0,%2\n@@ -3894,32 +3912,32 @@\n (define_insn_and_split \"*scond<mode>\"\n   [(set (match_operand:GPR 0 \"register_operand\" \"=&d\")\n         (match_operand:GPR 1 \"s390_alc_comparison\" \"\"))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_CPU_ZARCH\"\n   \"#\"\n   \"&& reload_completed\"\n   [(set (match_dup 0) (const_int 0))\n    (parallel\n     [(set (match_dup 0) (plus:GPR (plus:GPR (match_dup 0) (match_dup 0))\n                                   (match_dup 1)))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"\")\n \n (define_insn_and_split \"*scond<mode>_neg\"\n   [(set (match_operand:GPR 0 \"register_operand\" \"=&d\")\n         (match_operand:GPR 1 \"s390_slb_comparison\" \"\"))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_CPU_ZARCH\"\n   \"#\"\n   \"&& reload_completed\"\n   [(set (match_dup 0) (const_int 0))\n    (parallel\n     [(set (match_dup 0) (minus:GPR (minus:GPR (match_dup 0) (match_dup 0))\n                                    (match_dup 1)))\n-     (clobber (reg:CC 33))])\n+     (clobber (reg:CC CC_REGNUM))])\n    (parallel\n     [(set (match_dup 0) (neg:GPR (match_dup 0)))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"\")\n \n \n@@ -4559,7 +4577,7 @@\n ;\n \n (define_insn \"*anddi3_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (and:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n                          (match_operand:DI 2 \"general_operand\" \"d,m\"))\n                  (const_int 0)))\n@@ -4572,7 +4590,7 @@\n   [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*anddi3_cconly\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (and:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n                          (match_operand:DI 2 \"general_operand\" \"d,m\"))\n                  (const_int 0)))\n@@ -4591,7 +4609,7 @@\n                                     \"%d,o,0,0,0,0,0,0,0,0\")\n                 (match_operand:DI 2 \"general_operand\"\n                                     \"M,M,N0HDF,N1HDF,N2HDF,N3HDF,d,m,NxQDF,Q\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT && s390_logical_operator_ok_p (operands)\"\n   \"@\n    #\n@@ -4609,18 +4627,18 @@\n (define_split\n   [(set (match_operand:DI 0 \"s_operand\" \"\")\n         (and:DI (match_dup 0) (match_operand:DI 1 \"immediate_operand\" \"\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"reload_completed\"\n   [(parallel\n     [(set (match_dup 0) (and:QI (match_dup 0) (match_dup 1)))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"s390_narrow_logical_operator (AND, &operands[0], &operands[1]);\")\n \n (define_expand \"anddi3\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"\")\n         (and:DI (match_operand:DI 1 \"nonimmediate_operand\" \"\")\n                 (match_operand:DI 2 \"general_operand\" \"\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT\"\n   \"s390_expand_logical_operator (AND, DImode, operands); DONE;\")\n \n@@ -4629,7 +4647,7 @@\n ;\n \n (define_insn \"*andsi3_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (and:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n                          (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n                  (const_int 0)))\n@@ -4643,7 +4661,7 @@\n   [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"*andsi3_cconly\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (and:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n                          (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n                  (const_int 0)))\n@@ -4663,7 +4681,7 @@\n                                     \"%d,o,0,0,0,0,0,0,0\")\n                 (match_operand:SI 2 \"general_operand\"\n                                     \"M,M,N0HSF,N1HSF,d,R,T,NxQSF,Q\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ZARCH && s390_logical_operator_ok_p (operands)\"\n   \"@\n    #\n@@ -4681,7 +4699,7 @@\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=d,d,AQ,Q\")\n         (and:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0,0\")\n                 (match_operand:SI 2 \"general_operand\" \"d,R,NxQSF,Q\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"!TARGET_ZARCH && s390_logical_operator_ok_p (operands)\"\n   \"@\n    nr\\t%0,%2\n@@ -4693,18 +4711,18 @@\n (define_split\n   [(set (match_operand:SI 0 \"s_operand\" \"\")\n         (and:SI (match_dup 0) (match_operand:SI 1 \"immediate_operand\" \"\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"reload_completed\"\n   [(parallel\n     [(set (match_dup 0) (and:QI (match_dup 0) (match_dup 1)))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"s390_narrow_logical_operator (AND, &operands[0], &operands[1]);\")\n \n (define_expand \"andsi3\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n         (and:SI (match_operand:SI 1 \"nonimmediate_operand\" \"\")\n                 (match_operand:SI 2 \"general_operand\" \"\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"\"\n   \"s390_expand_logical_operator (AND, SImode, operands); DONE;\")\n \n@@ -4716,7 +4734,7 @@\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=d,d,AQ,Q\")\n         (and:HI (match_operand:HI 1 \"nonimmediate_operand\" \"%0,0,0,0\")\n                 (match_operand:HI 2 \"general_operand\" \"d,n,NxQHF,Q\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ZARCH && s390_logical_operator_ok_p (operands)\"\n   \"@\n    nr\\t%0,%2\n@@ -4729,7 +4747,7 @@\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=d,AQ,Q\")\n         (and:HI (match_operand:HI 1 \"nonimmediate_operand\" \"%0,0,0\")\n                 (match_operand:HI 2 \"general_operand\" \"d,NxQHF,Q\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"!TARGET_ZARCH && s390_logical_operator_ok_p (operands)\"\n   \"@\n    nr\\t%0,%2\n@@ -4740,18 +4758,18 @@\n (define_split\n   [(set (match_operand:HI 0 \"s_operand\" \"\")\n         (and:HI (match_dup 0) (match_operand:HI 1 \"immediate_operand\" \"\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"reload_completed\"\n   [(parallel\n     [(set (match_dup 0) (and:QI (match_dup 0) (match_dup 1)))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"s390_narrow_logical_operator (AND, &operands[0], &operands[1]);\")\n \n (define_expand \"andhi3\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"\")\n         (and:HI (match_operand:HI 1 \"nonimmediate_operand\" \"\")\n                 (match_operand:HI 2 \"general_operand\" \"\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"\"\n   \"s390_expand_logical_operator (AND, HImode, operands); DONE;\")\n \n@@ -4763,7 +4781,7 @@\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=d,d,Q,S,Q\")\n         (and:QI (match_operand:QI 1 \"nonimmediate_operand\" \"%0,0,0,0,0\")\n                 (match_operand:QI 2 \"general_operand\" \"d,n,n,n,Q\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ZARCH && s390_logical_operator_ok_p (operands)\"\n   \"@\n    nr\\t%0,%2\n@@ -4777,7 +4795,7 @@\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=d,Q,Q\")\n         (and:QI (match_operand:QI 1 \"nonimmediate_operand\" \"%0,0,0\")\n                 (match_operand:QI 2 \"general_operand\" \"d,n,Q\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"!TARGET_ZARCH && s390_logical_operator_ok_p (operands)\"\n   \"@\n    nr\\t%0,%2\n@@ -4789,7 +4807,7 @@\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n         (and:QI (match_operand:QI 1 \"nonimmediate_operand\" \"\")\n                 (match_operand:QI 2 \"general_operand\" \"\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"\"\n   \"s390_expand_logical_operator (AND, QImode, operands); DONE;\")\n \n@@ -4802,7 +4820,7 @@\n         (and:BLK (match_dup 0)\n                  (match_operand:BLK 1 \"memory_operand\" \"Q\")))\n    (use (match_operand 2 \"const_int_operand\" \"n\"))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"INTVAL (operands[2]) >= 1 && INTVAL (operands[2]) <= 256\"\n   \"nc\\t%O0(%2,%R0),%S1\"\n   [(set_attr \"op_type\" \"SS\")])\n@@ -4811,14 +4829,14 @@\n   [(set (match_operand 0 \"memory_operand\" \"\")\n         (and (match_dup 0)\n              (match_operand 1 \"memory_operand\" \"\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"reload_completed\n    && GET_MODE (operands[0]) == GET_MODE (operands[1])\n    && GET_MODE_SIZE (GET_MODE (operands[0])) > 0\"\n   [(parallel\n     [(set (match_dup 0) (and:BLK (match_dup 0) (match_dup 1)))\n      (use (match_dup 2))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n {\n   operands[2] = GEN_INT (GET_MODE_SIZE (GET_MODE (operands[0])));\n   operands[0] = adjust_address (operands[0], BLKmode, 0);\n@@ -4831,20 +4849,20 @@\n           (and:BLK (match_dup 0)\n                    (match_operand:BLK 1 \"memory_operand\" \"\")))\n      (use (match_operand 2 \"const_int_operand\" \"\"))\n-     (clobber (reg:CC 33))])\n+     (clobber (reg:CC CC_REGNUM))])\n    (parallel\n     [(set (match_operand:BLK 3 \"memory_operand\" \"\")\n           (and:BLK (match_dup 3)\n                    (match_operand:BLK 4 \"memory_operand\" \"\")))\n      (use (match_operand 5 \"const_int_operand\" \"\"))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"s390_offset_p (operands[0], operands[3], operands[2])\n    && s390_offset_p (operands[1], operands[4], operands[2])\n    && INTVAL (operands[2]) + INTVAL (operands[5]) <= 256\"\n   [(parallel\n     [(set (match_dup 6) (and:BLK (match_dup 6) (match_dup 7)))\n      (use (match_dup 8))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"operands[6] = gen_rtx_MEM (BLKmode, XEXP (operands[0], 0));\n    operands[7] = gen_rtx_MEM (BLKmode, XEXP (operands[1], 0));\n    operands[8] = GEN_INT (INTVAL (operands[2]) + INTVAL (operands[5]));\")\n@@ -4859,7 +4877,7 @@\n ;\n \n (define_insn \"*iordi3_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (ior:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n                          (match_operand:DI 2 \"general_operand\" \"d,m\"))\n                  (const_int 0)))\n@@ -4872,7 +4890,7 @@\n   [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*iordi3_cconly\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (ior:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n                          (match_operand:DI 2 \"general_operand\" \"d,m\"))\n                  (const_int 0)))\n@@ -4888,7 +4906,7 @@\n         (ior:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0,0,0,0,0,0,0\")\n                 (match_operand:DI 2 \"general_operand\"\n                                     \"N0HD0,N1HD0,N2HD0,N3HD0,d,m,NxQD0,Q\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT && s390_logical_operator_ok_p (operands)\"\n   \"@\n    oihh\\t%0,%i2\n@@ -4904,18 +4922,18 @@\n (define_split\n   [(set (match_operand:DI 0 \"s_operand\" \"\")\n         (ior:DI (match_dup 0) (match_operand:DI 1 \"immediate_operand\" \"\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"reload_completed\"\n   [(parallel\n     [(set (match_dup 0) (ior:QI (match_dup 0) (match_dup 1)))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"s390_narrow_logical_operator (IOR, &operands[0], &operands[1]);\")\n \n (define_expand \"iordi3\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"\")\n         (ior:DI (match_operand:DI 1 \"nonimmediate_operand\" \"\")\n                 (match_operand:DI 2 \"general_operand\" \"\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT\"\n   \"s390_expand_logical_operator (IOR, DImode, operands); DONE;\")\n \n@@ -4924,7 +4942,7 @@\n ;\n \n (define_insn \"*iorsi3_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (ior:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n                          (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n                  (const_int 0)))\n@@ -4938,7 +4956,7 @@\n   [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"*iorsi3_cconly\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (ior:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n                          (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n                  (const_int 0)))\n@@ -4954,7 +4972,7 @@\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=d,d,d,d,d,AQ,Q\")\n         (ior:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0,0,0,0,0\")\n                 (match_operand:SI 2 \"general_operand\" \"N0HS0,N1HS0,d,R,T,NxQS0,Q\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ZARCH && s390_logical_operator_ok_p (operands)\"\n   \"@\n    oilh\\t%0,%i2\n@@ -4970,7 +4988,7 @@\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=d,d,AQ,Q\")\n         (ior:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0,0\")\n                 (match_operand:SI 2 \"general_operand\" \"d,R,NxQS0,Q\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"!TARGET_ZARCH && s390_logical_operator_ok_p (operands)\"\n   \"@\n    or\\t%0,%2\n@@ -4982,18 +5000,18 @@\n (define_split\n   [(set (match_operand:SI 0 \"s_operand\" \"\")\n         (ior:SI (match_dup 0) (match_operand:SI 1 \"immediate_operand\" \"\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"reload_completed\"\n   [(parallel\n     [(set (match_dup 0) (ior:QI (match_dup 0) (match_dup 1)))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"s390_narrow_logical_operator (IOR, &operands[0], &operands[1]);\")\n \n (define_expand \"iorsi3\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n         (ior:SI (match_operand:SI 1 \"nonimmediate_operand\" \"\")\n                 (match_operand:SI 2 \"general_operand\" \"\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"\"\n   \"s390_expand_logical_operator (IOR, SImode, operands); DONE;\")\n \n@@ -5005,7 +5023,7 @@\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=d,d,AQ,Q\")\n         (ior:HI (match_operand:HI 1 \"nonimmediate_operand\" \"%0,0,0,0\")\n                 (match_operand:HI 2 \"general_operand\" \"d,n,NxQH0,Q\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ZARCH && s390_logical_operator_ok_p (operands)\"\n   \"@\n    or\\t%0,%2\n@@ -5018,7 +5036,7 @@\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=d,AQ,Q\")\n         (ior:HI (match_operand:HI 1 \"nonimmediate_operand\" \"%0,0,0\")\n                 (match_operand:HI 2 \"general_operand\" \"d,NxQH0,Q\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"!TARGET_ZARCH && s390_logical_operator_ok_p (operands)\"\n   \"@\n    or\\t%0,%2\n@@ -5029,18 +5047,18 @@\n (define_split\n   [(set (match_operand:HI 0 \"s_operand\" \"\")\n         (ior:HI (match_dup 0) (match_operand:HI 1 \"immediate_operand\" \"\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"reload_completed\"\n   [(parallel\n     [(set (match_dup 0) (ior:QI (match_dup 0) (match_dup 1)))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"s390_narrow_logical_operator (IOR, &operands[0], &operands[1]);\")\n \n (define_expand \"iorhi3\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"\")\n         (ior:HI (match_operand:HI 1 \"nonimmediate_operand\" \"\")\n                 (match_operand:HI 2 \"general_operand\" \"\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"\"\n   \"s390_expand_logical_operator (IOR, HImode, operands); DONE;\")\n \n@@ -5052,7 +5070,7 @@\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=d,d,Q,S,Q\")\n         (ior:QI (match_operand:QI 1 \"nonimmediate_operand\" \"%0,0,0,0,0\")\n                 (match_operand:QI 2 \"general_operand\" \"d,n,n,n,Q\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ZARCH && s390_logical_operator_ok_p (operands)\"\n   \"@\n    or\\t%0,%2\n@@ -5066,7 +5084,7 @@\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=d,Q,Q\")\n         (ior:QI (match_operand:QI 1 \"nonimmediate_operand\" \"%0,0,0\")\n                 (match_operand:QI 2 \"general_operand\" \"d,n,Q\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"!TARGET_ZARCH && s390_logical_operator_ok_p (operands)\"\n   \"@\n    or\\t%0,%2\n@@ -5078,7 +5096,7 @@\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n         (ior:QI (match_operand:QI 1 \"nonimmediate_operand\" \"\")\n                 (match_operand:QI 2 \"general_operand\" \"\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"\"\n   \"s390_expand_logical_operator (IOR, QImode, operands); DONE;\")\n \n@@ -5091,7 +5109,7 @@\n         (ior:BLK (match_dup 0)\n                  (match_operand:BLK 1 \"memory_operand\" \"Q\")))\n    (use (match_operand 2 \"const_int_operand\" \"n\"))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"INTVAL (operands[2]) >= 1 && INTVAL (operands[2]) <= 256\"\n   \"oc\\t%O0(%2,%R0),%S1\"\n   [(set_attr \"op_type\" \"SS\")])\n@@ -5100,14 +5118,14 @@\n   [(set (match_operand 0 \"memory_operand\" \"\")\n         (ior (match_dup 0)\n              (match_operand 1 \"memory_operand\" \"\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"reload_completed\n    && GET_MODE (operands[0]) == GET_MODE (operands[1])\n    && GET_MODE_SIZE (GET_MODE (operands[0])) > 0\"\n   [(parallel\n     [(set (match_dup 0) (ior:BLK (match_dup 0) (match_dup 1)))\n      (use (match_dup 2))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n {\n   operands[2] = GEN_INT (GET_MODE_SIZE (GET_MODE (operands[0])));\n   operands[0] = adjust_address (operands[0], BLKmode, 0);\n@@ -5120,20 +5138,20 @@\n           (ior:BLK (match_dup 0)\n                    (match_operand:BLK 1 \"memory_operand\" \"\")))\n      (use (match_operand 2 \"const_int_operand\" \"\"))\n-     (clobber (reg:CC 33))])\n+     (clobber (reg:CC CC_REGNUM))])\n    (parallel\n     [(set (match_operand:BLK 3 \"memory_operand\" \"\")\n           (ior:BLK (match_dup 3)\n                    (match_operand:BLK 4 \"memory_operand\" \"\")))\n      (use (match_operand 5 \"const_int_operand\" \"\"))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"s390_offset_p (operands[0], operands[3], operands[2])\n    && s390_offset_p (operands[1], operands[4], operands[2])\n    && INTVAL (operands[2]) + INTVAL (operands[5]) <= 256\"\n   [(parallel\n     [(set (match_dup 6) (ior:BLK (match_dup 6) (match_dup 7)))\n      (use (match_dup 8))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"operands[6] = gen_rtx_MEM (BLKmode, XEXP (operands[0], 0));\n    operands[7] = gen_rtx_MEM (BLKmode, XEXP (operands[1], 0));\n    operands[8] = GEN_INT (INTVAL (operands[2]) + INTVAL (operands[5]));\")\n@@ -5148,7 +5166,7 @@\n ;\n \n (define_insn \"*xordi3_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (xor:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n                          (match_operand:DI 2 \"general_operand\" \"d,m\"))\n                  (const_int 0)))\n@@ -5161,7 +5179,7 @@\n   [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*xordi3_cconly\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (xor:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n                          (match_operand:DI 2 \"general_operand\" \"d,m\"))\n                  (const_int 0)))\n@@ -5176,7 +5194,7 @@\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=d,d,AQ,Q\")\n         (xor:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0,0,0\")\n                 (match_operand:DI 2 \"general_operand\" \"d,m,NxQD0,Q\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT && s390_logical_operator_ok_p (operands)\"\n   \"@\n    xgr\\t%0,%2\n@@ -5188,18 +5206,18 @@\n (define_split\n   [(set (match_operand:DI 0 \"s_operand\" \"\")\n         (xor:DI (match_dup 0) (match_operand:DI 1 \"immediate_operand\" \"\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"reload_completed\"\n   [(parallel\n     [(set (match_dup 0) (xor:QI (match_dup 0) (match_dup 1)))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"s390_narrow_logical_operator (XOR, &operands[0], &operands[1]);\")\n \n (define_expand \"xordi3\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"\")\n         (xor:DI (match_operand:DI 1 \"nonimmediate_operand\" \"\")\n                 (match_operand:DI 2 \"general_operand\" \"\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT\"\n   \"s390_expand_logical_operator (XOR, DImode, operands); DONE;\")\n \n@@ -5208,7 +5226,7 @@\n ;\n \n (define_insn \"*xorsi3_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (xor:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n                          (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n                  (const_int 0)))\n@@ -5222,7 +5240,7 @@\n   [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n \n (define_insn \"*xorsi3_cconly\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (xor:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n                          (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n                  (const_int 0)))\n@@ -5238,7 +5256,7 @@\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=d,d,d,AQ,Q\")\n         (xor:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0,0,0\")\n                 (match_operand:SI 2 \"general_operand\" \"d,R,T,NxQS0,Q\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"s390_logical_operator_ok_p (operands)\"\n   \"@\n    xr\\t%0,%2\n@@ -5251,18 +5269,18 @@\n (define_split\n   [(set (match_operand:SI 0 \"s_operand\" \"\")\n         (xor:SI (match_dup 0) (match_operand:SI 1 \"immediate_operand\" \"\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"reload_completed\"\n   [(parallel\n     [(set (match_dup 0) (xor:QI (match_dup 0) (match_dup 1)))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"s390_narrow_logical_operator (XOR, &operands[0], &operands[1]);\")\n \n (define_expand \"xorsi3\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n         (xor:SI (match_operand:SI 1 \"nonimmediate_operand\" \"\")\n                 (match_operand:SI 2 \"general_operand\" \"\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"\"\n   \"s390_expand_logical_operator (XOR, SImode, operands); DONE;\")\n \n@@ -5274,7 +5292,7 @@\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=d,AQ,Q\")\n         (xor:HI (match_operand:HI 1 \"nonimmediate_operand\" \"%0,0,0\")\n                 (match_operand:HI 2 \"general_operand\" \"d,NxQH0,Q\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"s390_logical_operator_ok_p (operands)\"\n   \"@\n    xr\\t%0,%2\n@@ -5285,18 +5303,18 @@\n (define_split\n   [(set (match_operand:HI 0 \"s_operand\" \"\")\n         (xor:HI (match_dup 0) (match_operand:HI 1 \"immediate_operand\" \"\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"reload_completed\"\n   [(parallel\n     [(set (match_dup 0) (xor:QI (match_dup 0) (match_dup 1)))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"s390_narrow_logical_operator (XOR, &operands[0], &operands[1]);\")\n \n (define_expand \"xorhi3\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"\")\n         (xor:HI (match_operand:HI 1 \"nonimmediate_operand\" \"\")\n                 (match_operand:HI 2 \"general_operand\" \"\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"\"\n   \"s390_expand_logical_operator (XOR, HImode, operands); DONE;\")\n \n@@ -5308,7 +5326,7 @@\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=d,Q,S,Q\")\n         (xor:QI (match_operand:QI 1 \"nonimmediate_operand\" \"%0,0,0,0\")\n                 (match_operand:QI 2 \"general_operand\" \"d,n,n,Q\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"s390_logical_operator_ok_p (operands)\"\n   \"@\n    xr\\t%0,%2\n@@ -5321,7 +5339,7 @@\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n         (xor:QI (match_operand:QI 1 \"nonimmediate_operand\" \"\")\n                 (match_operand:QI 2 \"general_operand\" \"\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"\"\n   \"s390_expand_logical_operator (XOR, QImode, operands); DONE;\")\n \n@@ -5334,7 +5352,7 @@\n         (xor:BLK (match_dup 0)\n                  (match_operand:BLK 1 \"memory_operand\" \"Q\")))\n    (use (match_operand 2 \"const_int_operand\" \"n\"))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"INTVAL (operands[2]) >= 1 && INTVAL (operands[2]) <= 256\"\n   \"xc\\t%O0(%2,%R0),%S1\"\n   [(set_attr \"op_type\" \"SS\")])\n@@ -5343,14 +5361,14 @@\n   [(set (match_operand 0 \"memory_operand\" \"\")\n         (xor (match_dup 0)\n              (match_operand 1 \"memory_operand\" \"\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"reload_completed\n    && GET_MODE (operands[0]) == GET_MODE (operands[1])\n    && GET_MODE_SIZE (GET_MODE (operands[0])) > 0\"\n   [(parallel\n     [(set (match_dup 0) (xor:BLK (match_dup 0) (match_dup 1)))\n      (use (match_dup 2))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n {\n   operands[2] = GEN_INT (GET_MODE_SIZE (GET_MODE (operands[0])));\n   operands[0] = adjust_address (operands[0], BLKmode, 0);\n@@ -5363,20 +5381,20 @@\n           (xor:BLK (match_dup 0)\n                    (match_operand:BLK 1 \"memory_operand\" \"\")))\n      (use (match_operand 2 \"const_int_operand\" \"\"))\n-     (clobber (reg:CC 33))])\n+     (clobber (reg:CC CC_REGNUM))])\n    (parallel\n     [(set (match_operand:BLK 3 \"memory_operand\" \"\")\n           (xor:BLK (match_dup 3)\n                    (match_operand:BLK 4 \"memory_operand\" \"\")))\n      (use (match_operand 5 \"const_int_operand\" \"\"))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"s390_offset_p (operands[0], operands[3], operands[2])\n    && s390_offset_p (operands[1], operands[4], operands[2])\n    && INTVAL (operands[2]) + INTVAL (operands[5]) <= 256\"\n   [(parallel\n     [(set (match_dup 6) (xor:BLK (match_dup 6) (match_dup 7)))\n      (use (match_dup 8))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"operands[6] = gen_rtx_MEM (BLKmode, XEXP (operands[0], 0));\n    operands[7] = gen_rtx_MEM (BLKmode, XEXP (operands[1], 0));\n    operands[8] = GEN_INT (INTVAL (operands[2]) + INTVAL (operands[5]));\")\n@@ -5389,7 +5407,7 @@\n   [(set (match_operand:BLK 0 \"memory_operand\" \"=Q\")\n         (const_int 0))\n    (use (match_operand 1 \"const_int_operand\" \"n\"))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"INTVAL (operands[1]) >= 1 && INTVAL (operands[1]) <= 256\"\n   \"xc\\t%O0(%1,%R0),%S0\"\n   [(set_attr \"op_type\" \"SS\")])\n@@ -5399,18 +5417,18 @@\n     [(set (match_operand:BLK 0 \"memory_operand\" \"\")\n           (const_int 0))\n      (use (match_operand 1 \"const_int_operand\" \"\"))\n-     (clobber (reg:CC 33))])\n+     (clobber (reg:CC CC_REGNUM))])\n    (parallel\n     [(set (match_operand:BLK 2 \"memory_operand\" \"\")\n           (const_int 0))\n      (use (match_operand 3 \"const_int_operand\" \"\"))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"s390_offset_p (operands[0], operands[2], operands[1])\n    && INTVAL (operands[1]) + INTVAL (operands[3]) <= 256\"\n   [(parallel\n     [(set (match_dup 4) (const_int 0))\n      (use (match_dup 5))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"operands[4] = gen_rtx_MEM (BLKmode, XEXP (operands[0], 0));\n    operands[5] = GEN_INT (INTVAL (operands[1]) + INTVAL (operands[3]));\")\n \n@@ -5427,12 +5445,12 @@\n   [(parallel\n     [(set (match_operand:DSI 0 \"register_operand\" \"=d\")\n           (neg:DSI (match_operand:DSI 1 \"register_operand\" \"d\")))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"\"\n   \"\")\n \n (define_insn \"*negdi2_sign_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (neg:DI (ashiftrt:DI (ashift:DI (subreg:DI\n                            (match_operand:SI 1 \"register_operand\" \"d\") 0)\n                            (const_int 32)) (const_int 32)))\n@@ -5446,13 +5464,13 @@\n (define_insn \"*negdi2_sign\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n         (neg:DI (sign_extend:DI (match_operand:SI 1 \"register_operand\" \"d\"))))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT\"\n   \"lcgfr\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")])\n \n (define_insn \"*neg<mode>2_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (neg:GPR (match_operand:GPR 1 \"register_operand\" \"d\"))\n                  (const_int 0)))\n    (set (match_operand:GPR 0 \"register_operand\" \"=d\")\n@@ -5462,7 +5480,7 @@\n   [(set_attr \"op_type\"  \"RR<E>\")])\n   \n (define_insn \"*neg<mode>2_cconly\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (neg:GPR (match_operand:GPR 1 \"register_operand\" \"d\"))\n                  (const_int 0)))\n    (clobber (match_scratch:GPR 0 \"=d\"))]\n@@ -5473,32 +5491,32 @@\n (define_insn \"*neg<mode>2\"\n   [(set (match_operand:GPR 0 \"register_operand\" \"=d\")\n         (neg:GPR (match_operand:GPR 1 \"register_operand\" \"d\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"\"\n   \"lc<g>r\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RR<E>\")])\n \n (define_insn_and_split \"*negdi2_31\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n         (neg:DI (match_operand:DI 1 \"register_operand\" \"d\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"!TARGET_64BIT\"\n   \"#\"\n   \"&& reload_completed\"\n   [(parallel\n     [(set (match_dup 2) (neg:SI (match_dup 3)))\n-     (clobber (reg:CC 33))])\n+     (clobber (reg:CC CC_REGNUM))])\n    (parallel\n-    [(set (reg:CCAP 33)\n+    [(set (reg:CCAP CC_REGNUM)\n           (compare:CCAP (neg:SI (match_dup 5)) (const_int 0)))\n      (set (match_dup 4) (neg:SI (match_dup 5)))])\n    (set (pc)\n-        (if_then_else (ne (reg:CCAP 33) (const_int 0))\n+        (if_then_else (ne (reg:CCAP CC_REGNUM) (const_int 0))\n                       (pc)\n                       (label_ref (match_dup 6))))\n    (parallel\n     [(set (match_dup 2) (plus:SI (match_dup 2) (const_int -1)))\n-     (clobber (reg:CC 33))])\n+     (clobber (reg:CC CC_REGNUM))])\n    (match_dup 6)]\n   \"operands[2] = operand_subword (operands[0], 0, 0, DImode);\n    operands[3] = operand_subword (operands[1], 0, 0, DImode);\n@@ -5514,12 +5532,12 @@\n   [(parallel\n     [(set (match_operand:FPR 0 \"register_operand\" \"=f\")\n           (neg:FPR (match_operand:FPR 1 \"register_operand\" \"f\")))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"TARGET_HARD_FLOAT\"\n   \"\")\n \n (define_insn \"*neg<mode>2_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (neg:FPR (match_operand:FPR 1 \"register_operand\" \"f\"))\n                  (match_operand:FPR 2 \"const0_operand\" \"\")))\n    (set (match_operand:FPR 0 \"register_operand\" \"=f\")\n@@ -5530,7 +5548,7 @@\n    (set_attr \"type\"     \"fsimp<mode>\")])\n   \n (define_insn \"*neg<mode>2_cconly\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (neg:FPR (match_operand:FPR 1 \"register_operand\" \"f\"))\n                  (match_operand:FPR 2 \"const0_operand\" \"\")))\n    (clobber (match_scratch:FPR 0 \"=f\"))]\n@@ -5542,7 +5560,7 @@\n (define_insn \"*neg<mode>2\"\n   [(set (match_operand:FPR 0 \"register_operand\" \"=f\")\n         (neg:FPR (match_operand:FPR 1 \"register_operand\" \"f\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lc<de>br\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n@@ -5551,7 +5569,7 @@\n (define_insn \"*neg<mode>2_ibm\"\n   [(set (match_operand:FPR 0 \"register_operand\" \"=f\")\n         (neg:FPR (match_operand:FPR 1 \"register_operand\" \"f\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"lc<de>r\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RR\")\n@@ -5567,7 +5585,7 @@\n ;\n \n (define_insn \"*absdi2_sign_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (abs:DI (ashiftrt:DI (ashift:DI (subreg:DI\n                            (match_operand:SI 1 \"register_operand\" \"d\") 0)\n                            (const_int 32)) (const_int 32)))\n@@ -5581,13 +5599,13 @@\n (define_insn \"*absdi2_sign\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n         (abs:DI (sign_extend:DI (match_operand:SI 1 \"register_operand\" \"d\"))))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT\"\n   \"lpgfr\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")])\n \n (define_insn \"*abs<mode>2_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (abs:GPR (match_operand:DI 1 \"register_operand\" \"d\"))\n                  (const_int 0)))\n    (set (match_operand:GPR 0 \"register_operand\" \"=d\")\n@@ -5597,7 +5615,7 @@\n   [(set_attr \"op_type\"  \"RR<E>\")])\n   \n (define_insn \"*abs<mode>2_cconly\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (abs:GPR (match_operand:GPR 1 \"register_operand\" \"d\"))\n                  (const_int 0)))\n    (clobber (match_scratch:GPR 0 \"=d\"))]\n@@ -5608,7 +5626,7 @@\n (define_insn \"abs<mode>2\"\n   [(set (match_operand:GPR 0 \"register_operand\" \"=d\")\n         (abs:GPR (match_operand:GPR 1 \"register_operand\" \"d\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"\"\n   \"lp<g>r\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RR<E>\")])\n@@ -5621,12 +5639,12 @@\n   [(parallel\n     [(set (match_operand:FPR 0 \"register_operand\" \"=f\")\n           (abs:FPR (match_operand:FPR 1 \"register_operand\" \"f\")))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"TARGET_HARD_FLOAT\"\n   \"\")\n \n (define_insn \"*abs<mode>2_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (abs:FPR (match_operand:FPR 1 \"register_operand\" \"f\"))\n                  (match_operand:FPR 2 \"const0_operand\" \"\")))\n    (set (match_operand:FPR 0 \"register_operand\" \"=f\")\n@@ -5637,7 +5655,7 @@\n    (set_attr \"type\"     \"fsimp<mode>\")])\n   \n (define_insn \"*abs<mode>2_cconly\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (abs:FPR (match_operand:FPR 1 \"register_operand\" \"f\"))\n                  (match_operand:FPR 2 \"const0_operand\" \"\")))\n    (clobber (match_scratch:FPR 0 \"=f\"))]\n@@ -5649,7 +5667,7 @@\n (define_insn \"*abs<mode>2\"\n   [(set (match_operand:FPR 0 \"register_operand\" \"=f\")\n         (abs:FPR (match_operand:FPR 1 \"register_operand\" \"f\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lp<de>br\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n@@ -5658,7 +5676,7 @@\n (define_insn \"*abs<mode>2_ibm\"\n   [(set (match_operand:FPR 0 \"register_operand\" \"=f\")\n         (abs:FPR (match_operand:FPR 1 \"register_operand\" \"f\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"lp<de>r\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RR\")\n@@ -5673,7 +5691,7 @@\n ;\n \n (define_insn \"*negabsdi2_sign_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (neg:DI (abs:DI (ashiftrt:DI (ashift:DI (subreg:DI\n                            (match_operand:SI 1 \"register_operand\" \"d\") 0)\n                            (const_int 32)) (const_int 32))))\n@@ -5688,13 +5706,13 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n \t(neg:DI (abs:DI (sign_extend:DI\n                           (match_operand:SI 1 \"register_operand\" \"d\")))))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT\"\n   \"lngfr\\t%0,%1\"\n   [(set_attr \"op_type\" \"RRE\")])\n \n (define_insn \"*negabs<mode>2_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (neg:GPR (abs:GPR (match_operand:GPR 1 \"register_operand\" \"d\")))\n                  (const_int 0)))\n    (set (match_operand:GPR 0 \"register_operand\" \"=d\")\n@@ -5704,7 +5722,7 @@\n   [(set_attr \"op_type\"  \"RR<E>\")])\n   \n (define_insn \"*negabs<mode>2_cconly\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (neg:GPR (abs:GPR (match_operand:GPR 1 \"register_operand\" \"d\")))\n                  (const_int 0)))\n    (clobber (match_scratch:GPR 0 \"=d\"))]\n@@ -5715,7 +5733,7 @@\n (define_insn \"*negabs<mode>2\"\n   [(set (match_operand:GPR 0 \"register_operand\" \"=d\")\n \t(neg:GPR (abs:GPR (match_operand:GPR 1 \"register_operand\" \"d\"))))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"\"\n   \"ln<g>r\\t%0,%1\"\n   [(set_attr \"op_type\" \"RR<E>\")])\n@@ -5725,7 +5743,7 @@\n ;\n \n (define_insn \"*negabs<mode>2_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (neg:FPR (abs:FPR (match_operand:FPR 1 \"register_operand\" \"f\")))\n                  (match_operand:FPR 2 \"const0_operand\" \"\")))\n    (set (match_operand:FPR 0 \"register_operand\" \"=f\")\n@@ -5736,7 +5754,7 @@\n    (set_attr \"type\"     \"fsimp<mode>\")])\n   \n (define_insn \"*negabs<mode>2_cconly\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (neg:FPR (abs:FPR (match_operand:FPR 1 \"register_operand\" \"f\")))\n                  (match_operand:FPR 2 \"const0_operand\" \"\")))\n    (clobber (match_scratch:FPR 0 \"=f\"))]\n@@ -5748,7 +5766,7 @@\n (define_insn \"*negabs<mode>2\"\n   [(set (match_operand:FPR 0 \"register_operand\" \"=f\")\n         (neg:FPR (abs:FPR (match_operand:FPR 1 \"register_operand\" \"f\"))))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"ln<de>br\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n@@ -5786,7 +5804,7 @@\n     [(set (match_operand:INT 0 \"register_operand\" \"\")\n           (xor:INT (match_operand:INT 1 \"register_operand\" \"\")\n \t\t   (const_int -1)))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"\"\n   \"\")\n \n@@ -5851,12 +5869,12 @@\n     [(set (match_operand:DI 0 \"register_operand\" \"\")\n           (ashiftrt:DI (match_operand:DI 1 \"register_operand\" \"\")\n                        (match_operand:SI 2 \"shift_count_operand\" \"\")))\n-     (clobber (reg:CC 33))])]\n+     (clobber (reg:CC CC_REGNUM))])]\n   \"\"\n   \"\")\n \n (define_insn \"*ashrdi3_cc_31\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (ashiftrt:DI (match_operand:DI 1 \"register_operand\" \"0\")\n                               (match_operand:SI 2 \"shift_count_operand\" \"Y\"))\n                  (const_int 0)))\n@@ -5868,7 +5886,7 @@\n    (set_attr \"atype\"    \"reg\")])\n \n (define_insn \"*ashrdi3_cconly_31\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (ashiftrt:DI (match_operand:DI 1 \"register_operand\" \"0\")\n                               (match_operand:SI 2 \"shift_count_operand\" \"Y\"))\n                  (const_int 0)))\n@@ -5882,14 +5900,14 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n         (ashiftrt:DI (match_operand:DI 1 \"register_operand\" \"0\")\n                      (match_operand:SI 2 \"shift_count_operand\" \"Y\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"!TARGET_64BIT\"\n   \"srda\\t%0,%Y2\"\n   [(set_attr \"op_type\"  \"RS\")\n    (set_attr \"atype\"    \"reg\")])\n \n (define_insn \"*ashrdi3_cc_64\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (ashiftrt:DI (match_operand:DI 1 \"register_operand\" \"d\")\n                               (match_operand:SI 2 \"shift_count_operand\" \"Y\"))\n                  (const_int 0)))\n@@ -5901,7 +5919,7 @@\n    (set_attr \"atype\"    \"reg\")])\n \n (define_insn \"*ashrdi3_cconly_64\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (ashiftrt:DI (match_operand:DI 1 \"register_operand\" \"d\")\n                               (match_operand:SI 2 \"shift_count_operand\" \"Y\"))\n                  (const_int 0)))\n@@ -5915,7 +5933,7 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n         (ashiftrt:DI (match_operand:DI 1 \"register_operand\" \"d\")\n                      (match_operand:SI 2 \"shift_count_operand\" \"Y\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT\"\n   \"srag\\t%0,%1,%Y2\"\n   [(set_attr \"op_type\"  \"RSE\")\n@@ -5940,7 +5958,7 @@\n ;\n \n (define_insn \"*ashrsi3_cc\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (ashiftrt:SI (match_operand:SI 1 \"register_operand\" \"0\")\n                               (match_operand:SI 2 \"shift_count_operand\" \"Y\"))\n                  (const_int 0)))\n@@ -5953,7 +5971,7 @@\n \n \n (define_insn \"*ashrsi3_cconly\"\n-  [(set (reg 33)\n+  [(set (reg CC_REGNUM)\n         (compare (ashiftrt:SI (match_operand:SI 1 \"register_operand\" \"0\")\n                               (match_operand:SI 2 \"shift_count_operand\" \"Y\"))\n                  (const_int 0)))\n@@ -5967,7 +5985,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n         (ashiftrt:SI (match_operand:SI 1 \"register_operand\" \"0\")\n                      (match_operand:SI 2 \"shift_count_operand\" \"Y\")))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"\"\n   \"sra\\t%0,%Y2\"\n   [(set_attr \"op_type\"  \"RS\")\n@@ -5996,7 +6014,7 @@\n (define_insn \"*cjump_64\"\n   [(set (pc)\n         (if_then_else\n-          (match_operator 1 \"s390_comparison\" [(reg 33) (const_int 0)])\n+          (match_operator 1 \"s390_comparison\" [(reg CC_REGNUM) (const_int 0)])\n           (label_ref (match_operand 0 \"\" \"\"))\n           (pc)))]\n   \"TARGET_CPU_ZARCH\"\n@@ -6015,7 +6033,7 @@\n (define_insn \"*cjump_31\"\n   [(set (pc)\n         (if_then_else\n-          (match_operator 1 \"s390_comparison\" [(reg 33) (const_int 0)])\n+          (match_operator 1 \"s390_comparison\" [(reg CC_REGNUM) (const_int 0)])\n           (label_ref (match_operand 0 \"\" \"\"))\n           (pc)))]\n   \"!TARGET_CPU_ZARCH\"\n@@ -6037,7 +6055,7 @@\n (define_insn \"*cjump_long\"\n   [(set (pc)\n         (if_then_else\n-          (match_operator 1 \"s390_comparison\" [(reg 33) (const_int 0)])\n+          (match_operator 1 \"s390_comparison\" [(reg CC_REGNUM) (const_int 0)])\n           (match_operand 0 \"address_operand\" \"U\")\n           (pc)))]\n   \"\"\n@@ -6061,7 +6079,7 @@\n (define_insn \"*icjump_64\"\n   [(set (pc)\n         (if_then_else\n-          (match_operator 1 \"s390_comparison\" [(reg 33) (const_int 0)])\n+          (match_operator 1 \"s390_comparison\" [(reg CC_REGNUM) (const_int 0)])\n           (pc)\n           (label_ref (match_operand 0 \"\" \"\"))))]\n   \"TARGET_CPU_ZARCH\"\n@@ -6080,7 +6098,7 @@\n (define_insn \"*icjump_31\"\n   [(set (pc)\n         (if_then_else\n-          (match_operator 1 \"s390_comparison\" [(reg 33) (const_int 0)])\n+          (match_operator 1 \"s390_comparison\" [(reg CC_REGNUM) (const_int 0)])\n           (pc)\n           (label_ref (match_operand 0 \"\" \"\"))))]\n   \"!TARGET_CPU_ZARCH\"\n@@ -6102,7 +6120,7 @@\n (define_insn \"*icjump_long\"\n   [(set (pc)\n         (if_then_else\n-          (match_operator 1 \"s390_comparison\" [(reg 33) (const_int 0)])\n+          (match_operator 1 \"s390_comparison\" [(reg CC_REGNUM) (const_int 0)])\n           (pc)\n           (match_operand 0 \"address_operand\" \"U\")))]\n   \"\"\n@@ -6140,7 +6158,7 @@\n })\n \n (define_insn \"*trap\"\n-  [(trap_if (match_operator 0 \"s390_comparison\" [(reg 33) (const_int 0)])\n+  [(trap_if (match_operator 0 \"s390_comparison\" [(reg CC_REGNUM) (const_int 0)])\n \t    (const_int 0))]\n   \"\"\n   \"j%C0\\t.+2\";\n@@ -6183,7 +6201,7 @@\n    (set (match_operand:SI 2 \"nonimmediate_operand\" \"=1,?*m*d\")\n         (plus:SI (match_dup 1) (const_int -1)))\n    (clobber (match_scratch:SI 3 \"=X,&1\"))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_CPU_ZARCH\"\n {\n   if (which_alternative != 0)\n@@ -6196,12 +6214,12 @@\n   \"&& reload_completed\n    && (! REG_P (operands[2])\n        || ! rtx_equal_p (operands[1], operands[2]))\"\n-  [(parallel [(set (reg:CCAN 33)\n+  [(parallel [(set (reg:CCAN CC_REGNUM)\n                    (compare:CCAN (plus:SI (match_dup 3) (const_int -1))\n                                  (const_int 0)))\n               (set (match_dup 3) (plus:SI (match_dup 3) (const_int -1)))])\n    (set (match_dup 2) (match_dup 3))\n-   (set (pc) (if_then_else (ne (reg:CCAN 33) (const_int 0))\n+   (set (pc) (if_then_else (ne (reg:CCAN CC_REGNUM) (const_int 0))\n                            (label_ref (match_dup 0))\n                            (pc)))]\n   \"\"\n@@ -6221,7 +6239,7 @@\n    (set (match_operand:SI 2 \"nonimmediate_operand\" \"=1,?*m*d\")\n         (plus:SI (match_dup 1) (const_int -1)))\n    (clobber (match_scratch:SI 3 \"=X,&1\"))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"!TARGET_CPU_ZARCH\"\n {\n   if (which_alternative != 0)\n@@ -6234,12 +6252,12 @@\n   \"&& reload_completed\n    && (! REG_P (operands[2])\n        || ! rtx_equal_p (operands[1], operands[2]))\"\n-  [(parallel [(set (reg:CCAN 33)\n+  [(parallel [(set (reg:CCAN CC_REGNUM)\n                    (compare:CCAN (plus:SI (match_dup 3) (const_int -1))\n                                  (const_int 0)))\n               (set (match_dup 3) (plus:SI (match_dup 3) (const_int -1)))])\n    (set (match_dup 2) (match_dup 3))\n-   (set (pc) (if_then_else (ne (reg:CCAN 33) (const_int 0))\n+   (set (pc) (if_then_else (ne (reg:CCAN CC_REGNUM) (const_int 0))\n                            (label_ref (match_dup 0))\n                            (pc)))]\n   \"\"\n@@ -6262,7 +6280,7 @@\n    (set (match_operand:SI 2 \"register_operand\" \"=1,?*m*d\")\n         (plus:SI (match_dup 1) (const_int -1)))\n    (clobber (match_scratch:SI 3 \"=X,&1\"))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"!TARGET_CPU_ZARCH\"\n {\n   if (get_attr_op_type (insn) == OP_TYPE_RR)\n@@ -6286,7 +6304,7 @@\n    (set (match_operand:DI 2 \"nonimmediate_operand\" \"=1,?*m*d\")\n         (plus:DI (match_dup 1) (const_int -1)))\n    (clobber (match_scratch:DI 3 \"=X,&1\"))\n-   (clobber (reg:CC 33))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT\"\n {\n   if (which_alternative != 0)\n@@ -6299,12 +6317,12 @@\n   \"&& reload_completed\n    && (! REG_P (operands[2])\n        || ! rtx_equal_p (operands[1], operands[2]))\"\n-  [(parallel [(set (reg:CCAN 33)\n+  [(parallel [(set (reg:CCAN CC_REGNUM)\n                    (compare:CCAN (plus:DI (match_dup 3) (const_int -1))\n                                  (const_int 0)))\n               (set (match_dup 3) (plus:DI (match_dup 3) (const_int -1)))])\n    (set (match_dup 2) (match_dup 3))\n-   (set (pc) (if_then_else (ne (reg:CCAN 33) (const_int 0))\n+   (set (pc) (if_then_else (ne (reg:CCAN CC_REGNUM) (const_int 0))\n                            (label_ref (match_dup 0))\n                            (pc)))]\n   \"\"\n@@ -6499,7 +6517,7 @@\n })\n \n (define_insn \"*sibcall_br\"\n-  [(call (mem:QI (reg 1))\n+  [(call (mem:QI (reg SIBCALL_REGNUM))\n          (match_operand 0 \"const_int_operand\" \"n\"))]\n   \"SIBLING_CALL_P (insn)\n    && GET_MODE (XEXP (XEXP (PATTERN (insn), 0), 0)) == Pmode\"\n@@ -6540,7 +6558,7 @@\n \n (define_insn \"*sibcall_value_br\"\n   [(set (match_operand 0 \"\" \"\")\n-\t(call (mem:QI (reg 1))\n+\t(call (mem:QI (reg SIBCALL_REGNUM))\n \t      (match_operand 1 \"const_int_operand\" \"n\")))]\n   \"SIBLING_CALL_P (insn)\n    && GET_MODE (XEXP (XEXP (XEXP (PATTERN (insn), 1), 0), 0)) == Pmode\"\n@@ -6685,29 +6703,29 @@\n ;;\n \n (define_expand \"get_tp_64\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"\") (reg:DI 36))]\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"\") (reg:DI TP_REGNUM))]\n   \"TARGET_64BIT\"\n   \"\")\n \n (define_expand \"get_tp_31\"\n-  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\") (reg:SI 36))]\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\") (reg:SI TP_REGNUM))]\n   \"!TARGET_64BIT\"\n   \"\")\n \n (define_expand \"set_tp_64\"\n-  [(set (reg:DI 36) (match_operand:DI 0 \"nonimmediate_operand\" \"\"))\n-   (set (reg:DI 36) (unspec_volatile:DI [(reg:DI 36)] UNSPECV_SET_TP))]\n+  [(set (reg:DI TP_REGNUM) (match_operand:DI 0 \"nonimmediate_operand\" \"\"))\n+   (set (reg:DI TP_REGNUM) (unspec_volatile:DI [(reg:DI TP_REGNUM)] UNSPECV_SET_TP))]\n   \"TARGET_64BIT\"\n   \"\")\n \n (define_expand \"set_tp_31\"\n-  [(set (reg:SI 36) (match_operand:SI 0 \"nonimmediate_operand\" \"\"))\n-   (set (reg:SI 36) (unspec_volatile:SI [(reg:SI 36)] UNSPECV_SET_TP))]\n+  [(set (reg:SI TP_REGNUM) (match_operand:SI 0 \"nonimmediate_operand\" \"\"))\n+   (set (reg:SI TP_REGNUM) (unspec_volatile:SI [(reg:SI TP_REGNUM)] UNSPECV_SET_TP))]\n   \"!TARGET_64BIT\"\n   \"\")\n \n (define_insn \"*set_tp\"\n-  [(set (reg 36) (unspec_volatile [(reg 36)] UNSPECV_SET_TP))]\n+  [(set (reg TP_REGNUM) (unspec_volatile [(reg TP_REGNUM)] UNSPECV_SET_TP))]\n   \"\"\n   \"\"\n   [(set_attr \"type\" \"none\")"}]}