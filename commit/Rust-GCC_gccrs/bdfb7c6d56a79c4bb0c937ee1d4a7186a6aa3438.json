{"sha": "bdfb7c6d56a79c4bb0c937ee1d4a7186a6aa3438", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmRmYjdjNmQ1NmE3OWM0YmIwYzkzN2VlMWQ0YTcxODZhNmFhMzQzOA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2007-09-18T15:25:39Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2007-09-18T15:25:39Z"}, "message": "configure.host: Set atomic_flags on i486.\n\n2007-09-17  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* configure.host: Set atomic_flags on i486.\n\n\t* include/Makefile.am: Remove parallel-mode pch.\t\n\t* include/Makefile.in: Regenerate.\n\n\t* testsuite/lib/libstdc++.exp: Set ld_library_flags for libgomp if\n\tpresent.\n\n\t* acinclude.m4 (GLIBCXX_ENABLE_PARALLEL): Comment.\n\t* configure: Regenerate.\n\nFrom-SVN: r128579", "tree": {"sha": "7dfd6d902afc3f5556fd29d225efd38e8f66583f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7dfd6d902afc3f5556fd29d225efd38e8f66583f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bdfb7c6d56a79c4bb0c937ee1d4a7186a6aa3438", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdfb7c6d56a79c4bb0c937ee1d4a7186a6aa3438", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdfb7c6d56a79c4bb0c937ee1d4a7186a6aa3438", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdfb7c6d56a79c4bb0c937ee1d4a7186a6aa3438/comments", "author": null, "committer": null, "parents": [{"sha": "e74392f0a8f7e617180f5bc034ff4c12b5fa8405", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e74392f0a8f7e617180f5bc034ff4c12b5fa8405", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e74392f0a8f7e617180f5bc034ff4c12b5fa8405"}], "stats": {"total": 88, "additions": 59, "deletions": 29}, "files": [{"sha": "d8e8666d7f47f9ae42582d9cb06c8f0a1e479ba1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdfb7c6d56a79c4bb0c937ee1d4a7186a6aa3438/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdfb7c6d56a79c4bb0c937ee1d4a7186a6aa3438/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=bdfb7c6d56a79c4bb0c937ee1d4a7186a6aa3438", "patch": "@@ -1,3 +1,16 @@\n+2007-09-17  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* configure.host: Set atomic_flags on i486.\n+\n+\t* include/Makefile.am: Remove parallel-mode pch.\t\n+\t* include/Makefile.in: Regenerate.\n+\n+\t* testsuite/lib/libstdc++.exp: Set ld_library_flags for libgomp if\n+\tpresent.\n+\n+\t* acinclude.m4 (GLIBCXX_ENABLE_PARALLEL): Comment.\n+\t* configure: Regenerate.\n+\n 2007-09-17  Johannes Singler  <singler@ira.uka.de>\n \n         * include/parallel/for_each.h: Fixed comment/doxygen markup typos."}, {"sha": "c26225ee27ca3f7cb17f9f853b3d2d1cf478d248", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdfb7c6d56a79c4bb0c937ee1d4a7186a6aa3438/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdfb7c6d56a79c4bb0c937ee1d4a7186a6aa3438/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=bdfb7c6d56a79c4bb0c937ee1d4a7186a6aa3438", "patch": "@@ -1732,11 +1732,23 @@ dnl  +  Usage:  GLIBCXX_ENABLE_PARALLEL\n dnl\n AC_DEFUN([GLIBCXX_ENABLE_PARALLEL], [\n \n+  # NB: libstdc++ may be configured before libgomp: can't check for the actual\n+  # dependencies (omp.h and libgomp). \n   enable_parallel=no;\n-  if test -f \"${glibcxx_builddir}/../libgomp/omp.h\"; then\n+  if test -f $glibcxx_builddir/../libgomp/omp.h; then\n     enable_parallel=yes;\n+  else\n+    AC_MSG_NOTICE([$glibcxx_builddir/../libgomp/omp.h not found])\n   fi\n \n+  # Check to see if it's explicitly disabled.\n+#  GLIBCXX_ENABLE(libgomp,$1,,[enable code depending on libgomp],\n+#\t[permit yes|no])\n+\n+#  if test x$enable_libgomp = xno; then\n+#    enable_parallel=no\n+#  fi\n+\n   AC_MSG_CHECKING([for parallel mode support])\n   AC_MSG_RESULT([$enable_parallel])\n   GLIBCXX_CONDITIONAL(ENABLE_PARALLEL, test $enable_parallel = yes)"}, {"sha": "e42e1bbaf4f9de72d80dd3844ff3c08cbb7b822b", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdfb7c6d56a79c4bb0c937ee1d4a7186a6aa3438/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdfb7c6d56a79c4bb0c937ee1d4a7186a6aa3438/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=bdfb7c6d56a79c4bb0c937ee1d4a7186a6aa3438", "patch": "@@ -16470,11 +16470,24 @@ echo \"${ECHO_T}$enable_libstdcxx_debug\" >&6\n \n \n \n+  # NB: libstdc++ may be configured before libgomp: can't check for the actual\n+  # dependencies (omp.h and libgomp).\n   enable_parallel=no;\n-  if test -f \"${glibcxx_builddir}/../libgomp/omp.h\"; then\n+  if test -f $glibcxx_builddir/../libgomp/omp.h; then\n     enable_parallel=yes;\n+  else\n+    { echo \"$as_me:$LINENO: $glibcxx_builddir/../libgomp/omp.h not found\" >&5\n+echo \"$as_me: $glibcxx_builddir/../libgomp/omp.h not found\" >&6;}\n   fi\n \n+  # Check to see if it's explicitly disabled.\n+#  GLIBCXX_ENABLE(libgomp,,,[enable code depending on libgomp],\n+#\t[permit yes|no])\n+\n+#  if test x$enable_libgomp = xno; then\n+#    enable_parallel=no\n+#  fi\n+\n   echo \"$as_me:$LINENO: checking for parallel mode support\" >&5\n echo $ECHO_N \"checking for parallel mode support... $ECHO_C\" >&6\n   echo \"$as_me:$LINENO: result: $enable_parallel\" >&5\n@@ -17292,7 +17305,7 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n \n   # Fake what AC_TRY_COMPILE does.  XXX Look at redoing this new-style.\n     cat > conftest.$ac_ext << EOF\n-#line 17295 \"configure\"\n+#line 17308 \"configure\"\n int main()\n {\n   // NB: _Atomic_word not necessarily int."}, {"sha": "17421286f06a2e851faf051c3862b1c848b6b50f", "filename": "libstdc++-v3/configure.host", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdfb7c6d56a79c4bb0c937ee1d4a7186a6aa3438/libstdc%2B%2B-v3%2Fconfigure.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdfb7c6d56a79c4bb0c937ee1d4a7186a6aa3438/libstdc%2B%2B-v3%2Fconfigure.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.host?ref=bdfb7c6d56a79c4bb0c937ee1d4a7186a6aa3438", "patch": "@@ -147,7 +147,7 @@ case \"${host_cpu}\" in\n   ia64)\n     atomic_word_dir=cpu/ia64\n     ;;\n-  i[567]86 | x86_64)\n+  i[4567]86 | x86_64)\n     atomic_flags=\"-march=native\"\n     ;;\n   powerpc* | rs6000)"}, {"sha": "017ffcb3901001ba71013774f90ef89cc13fda2c", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdfb7c6d56a79c4bb0c937ee1d4a7186a6aa3438/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdfb7c6d56a79c4bb0c937ee1d4a7186a6aa3438/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=bdfb7c6d56a79c4bb0c937ee1d4a7186a6aa3438", "patch": "@@ -844,8 +844,7 @@ pch1_output_anchor = ${host_builddir}/stdc++.h\n pch1_output_installdir = ${host_installdir}/stdc++.h.gch\n pch1a_output = ${pch1_output_builddir}/O0g.gch\n pch1b_output = ${pch1_output_builddir}/O2g.gch\n-pch1c_output = ${pch1_output_builddir}/O2gp.gch\n-pch1_output = ${pch1a_output} ${pch1b_output} ${pch1c_output}\n+pch1_output = ${pch1a_output} ${pch1b_output}\n \n pch2_source = ${glibcxx_srcdir}/include/precompiled/stdtr1c++.h\n pch2_output_builddir = ${host_builddir}/stdtr1c++.h.gch\n@@ -1154,7 +1153,7 @@ ${host_builddir}/gthr-default.h: ${toplevel_srcdir}/gcc/${glibcxx_thread_h} \\\n \t    -e 's,^#include \"\\(.*\\)\",#include <bits/\\1>,g' \\\n \t    < ${toplevel_srcdir}/gcc/${glibcxx_thread_h} > $@\n \n-# Build three precompiled C++ includes, stdc++.h.gch/*.gch\n+# Build two precompiled C++ includes, stdc++.h.gch/*.gch\n ${pch1a_output}: ${allstamped} ${host_builddir}/c++config.h ${pch1_source}\n \tif [ ! -d \"${pch1_output_builddir}\" ]; then \\\n \t  mkdir -p ${pch1_output_builddir}; \\\n@@ -1169,14 +1168,6 @@ ${pch1b_output}: ${allstamped} ${host_builddir}/c++config.h ${pch1_source}\n \t$(CXX) $(PCHFLAGS) $(AM_CPPFLAGS) -O2 -g ${pch1_source} -o $@\n \ttouch ${pch1_output_anchor}\n \n-${pch1c_output}: ${allstamped} ${host_builddir}/c++config.h ${pch1_source}\n-\tif [ ! -d \"${pch1_output_builddir}\" ]; then \\\n-\t  mkdir -p ${pch1_output_builddir}; \\\n-\tfi; \\\n-\tCXX_PARALLEL_FLAGS=\"-fgomp -march=native\";\n-\t$(CXX) $(PCHFLAGS) $(AM_CPPFLAGS) -O2 -g $(CXX_PARALLEL_FLAGS) ${pch1_source} -o $@\n-\ttouch ${pch1_output_anchor}\n-\n # Build a precompiled TR1 include, stdtr1c++.h.gch/O2.gch\n ${pch2_output}: ${pch2_source} ${pch1_output}\n \tif [ ! -d \"${pch2_output_builddir}\" ]; then \\"}, {"sha": "0558c6658e96af251fa2e9365066d340d21a6dcb", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdfb7c6d56a79c4bb0c937ee1d4a7186a6aa3438/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdfb7c6d56a79c4bb0c937ee1d4a7186a6aa3438/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=bdfb7c6d56a79c4bb0c937ee1d4a7186a6aa3438", "patch": "@@ -1076,8 +1076,7 @@ pch1_output_anchor = ${host_builddir}/stdc++.h\n pch1_output_installdir = ${host_installdir}/stdc++.h.gch\n pch1a_output = ${pch1_output_builddir}/O0g.gch\n pch1b_output = ${pch1_output_builddir}/O2g.gch\n-pch1c_output = ${pch1_output_builddir}/O2gp.gch\n-pch1_output = ${pch1a_output} ${pch1b_output} ${pch1c_output}\n+pch1_output = ${pch1a_output} ${pch1b_output}\n pch2_source = ${glibcxx_srcdir}/include/precompiled/stdtr1c++.h\n pch2_output_builddir = ${host_builddir}/stdtr1c++.h.gch\n pch2_output_anchor = ${host_builddir}/stdtr1c++.h\n@@ -1542,7 +1541,7 @@ ${host_builddir}/gthr-default.h: ${toplevel_srcdir}/gcc/${glibcxx_thread_h} \\\n \t    -e 's,^#include \"\\(.*\\)\",#include <bits/\\1>,g' \\\n \t    < ${toplevel_srcdir}/gcc/${glibcxx_thread_h} > $@\n \n-# Build three precompiled C++ includes, stdc++.h.gch/*.gch\n+# Build two precompiled C++ includes, stdc++.h.gch/*.gch\n ${pch1a_output}: ${allstamped} ${host_builddir}/c++config.h ${pch1_source}\n \tif [ ! -d \"${pch1_output_builddir}\" ]; then \\\n \t  mkdir -p ${pch1_output_builddir}; \\\n@@ -1557,14 +1556,6 @@ ${pch1b_output}: ${allstamped} ${host_builddir}/c++config.h ${pch1_source}\n \t$(CXX) $(PCHFLAGS) $(AM_CPPFLAGS) -O2 -g ${pch1_source} -o $@\n \ttouch ${pch1_output_anchor}\n \n-${pch1c_output}: ${allstamped} ${host_builddir}/c++config.h ${pch1_source}\n-\tif [ ! -d \"${pch1_output_builddir}\" ]; then \\\n-\t  mkdir -p ${pch1_output_builddir}; \\\n-\tfi; \\\n-\tCXX_PARALLEL_FLAGS=\"-fgomp -march=native\";\n-\t$(CXX) $(PCHFLAGS) $(AM_CPPFLAGS) -O2 -g $(CXX_PARALLEL_FLAGS) ${pch1_source} -o $@\n-\ttouch ${pch1_output_anchor}\n-\n # Build a precompiled TR1 include, stdtr1c++.h.gch/O2.gch\n ${pch2_output}: ${pch2_source} ${pch1_output}\n \tif [ ! -d \"${pch2_output_builddir}\" ]; then \\"}, {"sha": "4ba9dc57ef3e6ccfbfed77b2e3dbd2b7e05696ed", "filename": "libstdc++-v3/testsuite/lib/libstdc++.exp", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdfb7c6d56a79c4bb0c937ee1d4a7186a6aa3438/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdfb7c6d56a79c4bb0c937ee1d4a7186a6aa3438/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp?ref=bdfb7c6d56a79c4bb0c937ee1d4a7186a6aa3438", "patch": "@@ -123,15 +123,26 @@ proc libstdc++_init { testfile } {\n     v3-copy-files [glob -nocomplain \"$srcdir/data/*.tst\"]\n     v3-copy-files [glob -nocomplain \"$srcdir/data/*.txt\"]\n \n+    set ld_library_path_tmp \"\"\n+\n     # Locate libgcc.a so we don't need to account for different values of\n     # SHLIB_EXT on different platforms\n     set gccdir [lookfor_file $tool_root_dir gcc/libgcc.a]\n     if {$gccdir != \"\"} {\n         set gccdir [file dirname $gccdir]\n+\tappend ld_library_path_tmp \":${gccdir}\"\n     }\n     v3track gccdir 3\n \n-    # Look for shared library. (ie libstdc++.so.)\n+    # Locate libgomp. This is only required for parallel mode.\n+    set libgompdir [lookfor_file $blddir/../libgomp .libs/libgomp.so]\n+    if {$libgompdir != \"\"} {\n+        set libgompdir [file dirname $libgompdir]\n+\tappend ld_library_path_tmp \":${libgompdir}\"\n+    }\n+    v3track libgompdir 3\n+\n+    # Locate libstdc++ shared library. (ie libstdc++.so.)\n     set v3-sharedlib 0\n     set sharedlibdir [lookfor_file $blddir src/.libs/libstdc++.so]\n     if {$sharedlibdir != \"\"} {\n@@ -144,9 +155,8 @@ proc libstdc++_init { testfile } {\n \n     # Compute what needs to be added to the existing LD_LIBRARY_PATH.\n     if {$gccdir != \"\"} {\n-\tset ld_library_path \"\"\n-\tappend ld_library_path \":${gccdir}\"\n \tset compiler ${gccdir}/g++\n+\tset ld_library_path ${ld_library_path_tmp}\n \tappend ld_library_path \":${blddir}/src/.libs\"\n \n \tif { [is_remote host] == 0 && [which $compiler] != 0 } {"}]}