{"sha": "c896ecfeab0658dc61ed0a9ad4b649c69d1d8679", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg5NmVjZmVhYjA2NThkYzYxZWQwYTlhZDRiNjQ5YzY5ZDFkODY3OQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2018-09-17T20:31:01Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2018-09-17T20:31:01Z"}, "message": "substring-locations: add class format_string_diagnostic_t\n\nWith the addition of ranges in r263564, format_warning_at_substring_n\nhas 10 arguments.\n\nReduce the number of args by bundling the shared ones into a\nclass format_string_diagnostic_t.\n\ngcc/c-family/ChangeLog:\n\t* c-format.c (format_warning_at_char): Update for introduction of\n\tformat_string_diagnostic_t.\n\t(format_type_warning): Likewise.\n\ngcc/ChangeLog:\n\t* gimple-ssa-sprintf.c (fmtwarn): Update for introduction of\n\tformat_string_diagnostic_t.\n\t(fmtwarn_n): Likewise.\n\t* substring-locations.c\n\t(format_string_diagnostic_t::format_string_diagnostic_t) New ctor.\n\t(format_warning_n_va): Convert to...\n\t(format_string_diagnostic_t::emit_warning_n_va): ...this.\n\t(format_warning_va): Convert to...\n\t(format_string_diagnostic_t::emit_warning_va): ...this.\n\t(format_warning_at_substring): Convert to...\n\t(format_string_diagnostic_t::emit_warning): ...this.\n\t(format_warning_at_substring_n): Convert to...\n\t(format_string_diagnostic_t::emit_warning_n): ...this.\n\t* substring-locations.h (class format_string_diagnostic_t): New\n\tclass.\n\t(format_warning_va): Convert to\n\tformat_string_diagnostic_t::emit_warning_va.\n\t(format_warning_n_va): Convert to\n\tformat_string_diagnostic_t::emit_warning_n_va.\n\t(format_warning_at_substring): Convert to\n\tformat_string_diagnostic_t::emit_warning.\n\t(format_warning_at_substring_n): Convert to\n\tformat_string_diagnostic_t::emit_warning_n.\n\nFrom-SVN: r264372", "tree": {"sha": "c755d1e0d94404c15b74070d31c234e3d0d6d0e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c755d1e0d94404c15b74070d31c234e3d0d6d0e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c896ecfeab0658dc61ed0a9ad4b649c69d1d8679", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c896ecfeab0658dc61ed0a9ad4b649c69d1d8679", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c896ecfeab0658dc61ed0a9ad4b649c69d1d8679", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c896ecfeab0658dc61ed0a9ad4b649c69d1d8679/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "69d7aabfd8fec442047cefb136b1fd2680310fa9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69d7aabfd8fec442047cefb136b1fd2680310fa9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69d7aabfd8fec442047cefb136b1fd2680310fa9"}], "stats": {"total": 263, "additions": 147, "deletions": 116}, "files": [{"sha": "26d7be6584f2352a2c6f73a64277b5aa7b7eceae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c896ecfeab0658dc61ed0a9ad4b649c69d1d8679/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c896ecfeab0658dc61ed0a9ad4b649c69d1d8679/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c896ecfeab0658dc61ed0a9ad4b649c69d1d8679", "patch": "@@ -1,3 +1,29 @@\n+2018-09-17  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* gimple-ssa-sprintf.c (fmtwarn): Update for introduction of\n+\tformat_string_diagnostic_t.\n+\t(fmtwarn_n): Likewise.\n+\t* substring-locations.c\n+\t(format_string_diagnostic_t::format_string_diagnostic_t) New ctor.\n+\t(format_warning_n_va): Convert to...\n+\t(format_string_diagnostic_t::emit_warning_n_va): ...this.\n+\t(format_warning_va): Convert to...\n+\t(format_string_diagnostic_t::emit_warning_va): ...this.\n+\t(format_warning_at_substring): Convert to...\n+\t(format_string_diagnostic_t::emit_warning): ...this.\n+\t(format_warning_at_substring_n): Convert to...\n+\t(format_string_diagnostic_t::emit_warning_n): ...this.\n+\t* substring-locations.h (class format_string_diagnostic_t): New\n+\tclass.\n+\t(format_warning_va): Convert to\n+\tformat_string_diagnostic_t::emit_warning_va.\n+\t(format_warning_n_va): Convert to\n+\tformat_string_diagnostic_t::emit_warning_n_va.\n+\t(format_warning_at_substring): Convert to\n+\tformat_string_diagnostic_t::emit_warning.\n+\t(format_warning_at_substring_n): Convert to\n+\tformat_string_diagnostic_t::emit_warning_n.\n+\n 2018-09-17  Cesar Philippidis  <cesar@codesourcery.com>\n \t    Bernd Schmidt <bernds_cb1@t-online.de>\n "}, {"sha": "b70d77a72193da517e89a5f1f614aa38505536a1", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c896ecfeab0658dc61ed0a9ad4b649c69d1d8679/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c896ecfeab0658dc61ed0a9ad4b649c69d1d8679/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=c896ecfeab0658dc61ed0a9ad4b649c69d1d8679", "patch": "@@ -1,3 +1,9 @@\n+2018-09-17  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* c-format.c (format_warning_at_char): Update for introduction of\n+\tformat_string_diagnostic_t.\n+\t(format_type_warning): Likewise.\n+\n 2018-09-17  Martin Jambor  <mjambor@suse.cz>\n \n \tPR c/63886"}, {"sha": "a7edfca4aa947216a736ff4b418bde1e9c59cacd", "filename": "gcc/c-family/c-format.c", "status": "modified", "additions": 13, "deletions": 15, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c896ecfeab0658dc61ed0a9ad4b649c69d1d8679/gcc%2Fc-family%2Fc-format.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c896ecfeab0658dc61ed0a9ad4b649c69d1d8679/gcc%2Fc-family%2Fc-format.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-format.c?ref=c896ecfeab0658dc61ed0a9ad4b649c69d1d8679", "patch": "@@ -100,8 +100,9 @@ format_warning_at_char (location_t fmt_string_loc, tree format_string_cst,\n \n   substring_loc fmt_loc (fmt_string_loc, string_type, char_idx, char_idx,\n \t\t\t char_idx);\n-  bool warned = format_warning_va (fmt_loc, NULL, UNKNOWN_LOCATION, NULL,\n-\t\t\t\t   NULL, opt, gmsgid, &ap);\n+  format_string_diagnostic_t diag (fmt_loc, NULL, UNKNOWN_LOCATION, NULL,\n+\t\t\t\t   NULL);\n+  bool warned = diag.emit_warning_va (opt, gmsgid, &ap);\n   va_end (ap);\n \n   return warned;\n@@ -3694,23 +3695,22 @@ format_type_warning (const substring_loc &whole_fmt_loc,\n   char *corrected_substring\n     = get_corrected_substring (fmt_loc, type, arg_type, fki,\n \t\t\t       offset_to_type_start, conversion_char);\n-\n+  format_string_diagnostic_t diag (fmt_loc, &fmt_label, param_loc, &param_label,\n+\t\t\t\t   corrected_substring);\n   if (wanted_type_name)\n     {\n       if (arg_type)\n-\tformat_warning_at_substring\n-\t  (fmt_loc, &fmt_label, param_loc, &param_label,\n-\t   corrected_substring, OPT_Wformat_,\n+\tdiag.emit_warning\n+\t  (OPT_Wformat_,\n \t   \"%s %<%s%.*s%> expects argument of type %<%s%s%>, \"\n \t   \"but argument %d has type %qT\",\n \t   gettext (kind_descriptions[kind]),\n \t   (kind == CF_KIND_FORMAT ? \"%\" : \"\"),\n \t   format_length, format_start,\n \t   wanted_type_name, p, arg_num, arg_type);\n       else\n-\tformat_warning_at_substring\n-\t  (fmt_loc, &fmt_label, param_loc, &param_label,\n-\t   corrected_substring, OPT_Wformat_,\n+\tdiag.emit_warning\n+\t  (OPT_Wformat_,\n \t   \"%s %<%s%.*s%> expects a matching %<%s%s%> argument\",\n \t   gettext (kind_descriptions[kind]),\n \t   (kind == CF_KIND_FORMAT ? \"%\" : \"\"),\n@@ -3719,19 +3719,17 @@ format_type_warning (const substring_loc &whole_fmt_loc,\n   else\n     {\n       if (arg_type)\n-\tformat_warning_at_substring\n-\t  (fmt_loc, &fmt_label, param_loc, &param_label,\n-\t   corrected_substring, OPT_Wformat_,\n+\tdiag.emit_warning\n+\t  (OPT_Wformat_,\n \t   \"%s %<%s%.*s%> expects argument of type %<%T%s%>, \"\n \t   \"but argument %d has type %qT\",\n \t   gettext (kind_descriptions[kind]),\n \t   (kind == CF_KIND_FORMAT ? \"%\" : \"\"),\n \t   format_length, format_start,\n \t   wanted_type, p, arg_num, arg_type);\n       else\n-\tformat_warning_at_substring\n-\t  (fmt_loc, &fmt_label, param_loc, &param_label,\n-\t   corrected_substring, OPT_Wformat_,\n+\tdiag.emit_warning\n+\t  (OPT_Wformat_,\n \t   \"%s %<%s%.*s%> expects a matching %<%T%s%> argument\",\n \t   gettext (kind_descriptions[kind]),\n \t   (kind == CF_KIND_FORMAT ? \"%\" : \"\"),"}, {"sha": "9b6f6e6019251a01e8190d9f15074f4072d2fc01", "filename": "gcc/gimple-ssa-sprintf.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c896ecfeab0658dc61ed0a9ad4b649c69d1d8679/gcc%2Fgimple-ssa-sprintf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c896ecfeab0658dc61ed0a9ad4b649c69d1d8679/gcc%2Fgimple-ssa-sprintf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-sprintf.c?ref=c896ecfeab0658dc61ed0a9ad4b649c69d1d8679", "patch": "@@ -455,7 +455,8 @@ get_format_string (tree format, location_t *ploc)\n }\n \n /* For convenience and brevity, shorter named entrypoints of\n-   format_warning_at_substring and format_warning_at_substring_n.\n+   format_string_diagnostic_t::emit_warning_va and\n+   format_string_diagnostic_t::emit_warning_n_va.\n    These have to be functions with the attribute so that exgettext\n    works properly.  */\n \n@@ -464,10 +465,11 @@ ATTRIBUTE_GCC_DIAG (5, 6)\n fmtwarn (const substring_loc &fmt_loc, location_t param_loc,\n \t const char *corrected_substring, int opt, const char *gmsgid, ...)\n {\n+  format_string_diagnostic_t diag (fmt_loc, NULL, param_loc, NULL,\n+\t\t\t\t   corrected_substring);\n   va_list ap;\n   va_start (ap, gmsgid);\n-  bool warned = format_warning_va (fmt_loc, NULL, param_loc, NULL,\n-\t\t\t\t   corrected_substring, opt, gmsgid, &ap);\n+  bool warned = diag.emit_warning_va (opt, gmsgid, &ap);\n   va_end (ap);\n \n   return warned;\n@@ -479,12 +481,12 @@ fmtwarn_n (const substring_loc &fmt_loc, location_t param_loc,\n \t   const char *corrected_substring, int opt, unsigned HOST_WIDE_INT n,\n \t   const char *singular_gmsgid, const char *plural_gmsgid, ...)\n {\n+  format_string_diagnostic_t diag (fmt_loc, NULL, param_loc, NULL,\n+\t\t\t\t   corrected_substring);\n   va_list ap;\n   va_start (ap, plural_gmsgid);\n-  bool warned = format_warning_n_va (fmt_loc, NULL, param_loc, NULL,\n-\t\t\t\t     corrected_substring,\n-\t\t\t\t     opt, n, singular_gmsgid, plural_gmsgid,\n-\t\t\t\t     &ap);\n+  bool warned = diag.emit_warning_n_va (opt, n, singular_gmsgid, plural_gmsgid,\n+\t\t\t\t\t&ap);\n   va_end (ap);\n \n   return warned;"}, {"sha": "db88f2048010f1f96c876635d33649e07641c1ce", "filename": "gcc/substring-locations.c", "status": "modified", "additions": 56, "deletions": 57, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c896ecfeab0658dc61ed0a9ad4b649c69d1d8679/gcc%2Fsubstring-locations.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c896ecfeab0658dc61ed0a9ad4b649c69d1d8679/gcc%2Fsubstring-locations.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsubstring-locations.c?ref=c896ecfeab0658dc61ed0a9ad4b649c69d1d8679", "patch": "@@ -28,12 +28,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"substring-locations.h\"\n #include \"gcc-rich-location.h\"\n \n-/* Emit a warning governed by option OPT, using SINGULAR_GMSGID as the\n-   format string (or if PLURAL_GMSGID is different from SINGULAR_GMSGID,\n-   using SINGULAR_GMSGID, PLURAL_GMSGID and N as arguments to ngettext)\n-   and AP as its arguments.\n+/* format_string_diagnostic_t's ctor, giving information for use by\n+   the emit_warning* member functions, as follows:\n \n-   Attempt to obtain precise location information within a string\n+   They attempt to obtain precise location information within a string\n    literal from FMT_LOC.\n \n    Case 1: if substring location is available, and is within the range of\n@@ -49,7 +47,7 @@ along with GCC; see the file COPYING3.  If not see\n \n    Case 2: if the substring location is available, but is not within\n    the range of the format string, the primary location is that of the\n-   format string, and an note is emitted showing the substring location.\n+   format string, and a note is emitted showing the substring location.\n \n    For example:\n      test.c:90:10: warning: problem with '%i' here [-Wformat=]\n@@ -120,29 +118,47 @@ along with GCC; see the file COPYING3.  If not see\n                     ~^\n                     %s\n \n+*/\n+\n+format_string_diagnostic_t::\n+format_string_diagnostic_t (const substring_loc &fmt_loc,\n+\t\t\t    const range_label *fmt_label,\n+\t\t\t    location_t param_loc,\n+\t\t\t    const range_label *param_label,\n+\t\t\t    const char *corrected_substring)\n+: m_fmt_loc (fmt_loc),\n+  m_fmt_label (fmt_label),\n+  m_param_loc (param_loc),\n+  m_param_label (param_label),\n+  m_corrected_substring (corrected_substring)\n+{\n+}\n+\n+/* Emit a warning governed by option OPT, using SINGULAR_GMSGID as the\n+   format string (or if PLURAL_GMSGID is different from SINGULAR_GMSGID,\n+   using SINGULAR_GMSGID, PLURAL_GMSGID and N as arguments to ngettext)\n+   and AP as its arguments.\n+\n    Return true if a warning was emitted, false otherwise.  */\n \n bool\n-format_warning_n_va (const substring_loc &fmt_loc,\n-\t\t     const range_label *fmt_label,\n-\t\t     location_t param_loc,\n-\t\t     const range_label *param_label,\n-\t\t     const char *corrected_substring,\n-\t\t     int opt, unsigned HOST_WIDE_INT n,\n-\t\t     const char *singular_gmsgid,\n-\t\t     const char *plural_gmsgid, va_list *ap)\n+format_string_diagnostic_t::emit_warning_n_va (int opt,\n+\t\t\t\t\t       unsigned HOST_WIDE_INT n,\n+\t\t\t\t\t       const char *singular_gmsgid,\n+\t\t\t\t\t       const char *plural_gmsgid,\n+\t\t\t\t\t       va_list *ap) const\n {\n   bool substring_within_range = false;\n   location_t primary_loc;\n   location_t fmt_substring_loc = UNKNOWN_LOCATION;\n   source_range fmt_loc_range\n-    = get_range_from_loc (line_table, fmt_loc.get_fmt_string_loc ());\n-  const char *err = fmt_loc.get_location (&fmt_substring_loc);\n+    = get_range_from_loc (line_table, m_fmt_loc.get_fmt_string_loc ());\n+  const char *err = m_fmt_loc.get_location (&fmt_substring_loc);\n   source_range fmt_substring_range\n     = get_range_from_loc (line_table, fmt_substring_loc);\n   if (err)\n     /* Case 3: unable to get substring location.  */\n-    primary_loc = fmt_loc.get_fmt_string_loc ();\n+    primary_loc = m_fmt_loc.get_fmt_string_loc ();\n   else\n     {\n       if (fmt_substring_range.m_start >= fmt_loc_range.m_start\n@@ -158,23 +174,23 @@ format_warning_n_va (const substring_loc &fmt_loc,\n \t/* Case 2.  */\n \t{\n \t  substring_within_range = false;\n-\t  primary_loc = fmt_loc.get_fmt_string_loc ();\n+\t  primary_loc = m_fmt_loc.get_fmt_string_loc ();\n \t}\n     }\n \n   /* Only use fmt_label in the initial warning for case 1.  */\n   const range_label *primary_label = NULL;\n   if (substring_within_range)\n-    primary_label = fmt_label;\n+    primary_label = m_fmt_label;\n \n   auto_diagnostic_group d;\n   gcc_rich_location richloc (primary_loc, primary_label);\n \n-  if (param_loc != UNKNOWN_LOCATION)\n-    richloc.add_range (param_loc, SHOW_RANGE_WITHOUT_CARET, param_label);\n+  if (m_param_loc != UNKNOWN_LOCATION)\n+    richloc.add_range (m_param_loc, SHOW_RANGE_WITHOUT_CARET, m_param_label);\n \n-  if (!err && corrected_substring && substring_within_range)\n-    richloc.add_fixit_replace (fmt_substring_range, corrected_substring);\n+  if (!err && m_corrected_substring && substring_within_range)\n+    richloc.add_fixit_replace (fmt_substring_range, m_corrected_substring);\n \n   diagnostic_info diagnostic;\n   if (singular_gmsgid != plural_gmsgid)\n@@ -205,10 +221,10 @@ format_warning_n_va (const substring_loc &fmt_loc,\n       {\n \t/* Use fmt_label in the note for case 2.  */\n \trich_location substring_richloc (line_table, fmt_substring_loc,\n-\t\t\t\t\t fmt_label);\n-\tif (corrected_substring)\n+\t\t\t\t\t m_fmt_label);\n+\tif (m_corrected_substring)\n \t  substring_richloc.add_fixit_replace (fmt_substring_range,\n-\t\t\t\t\t       corrected_substring);\n+\t\t\t\t\t       m_corrected_substring);\n \tinform (&substring_richloc,\n \t\t\"format string is defined here\");\n       }\n@@ -219,55 +235,38 @@ format_warning_n_va (const substring_loc &fmt_loc,\n /* Singular-only version of the above.  */\n \n bool\n-format_warning_va (const substring_loc &fmt_loc,\n-\t\t   const range_label *fmt_label,\n-\t\t   location_t param_loc,\n-\t\t   const range_label *param_label,\n-\t\t   const char *corrected_substring,\n-\t\t   int opt, const char *gmsgid, va_list *ap)\n+format_string_diagnostic_t::emit_warning_va (int opt, const char *gmsgid,\n+\t\t\t\t\t     va_list *ap) const\n {\n-  return format_warning_n_va (fmt_loc, fmt_label, param_loc, param_label,\n-\t\t\t      corrected_substring, opt,\n-\t\t\t      0, gmsgid, gmsgid, ap);\n+  return emit_warning_n_va (opt, 0, gmsgid, gmsgid, ap);\n }\n \n-/* Variadic call to format_warning_va.  */\n+/* Variadic version of the above (singular only).  */\n \n bool\n-format_warning_at_substring (const substring_loc &fmt_loc,\n-\t\t\t     const range_label *fmt_label,\n-\t\t\t     location_t param_loc,\n-\t\t\t     const range_label *param_label,\n-\t\t\t     const char *corrected_substring,\n-\t\t\t     int opt, const char *gmsgid, ...)\n+format_string_diagnostic_t::emit_warning (int opt, const char *gmsgid,\n+\t\t\t\t\t  ...) const\n {\n   va_list ap;\n   va_start (ap, gmsgid);\n-  bool warned = format_warning_va (fmt_loc, fmt_label, param_loc, param_label,\n-\t\t\t\t   corrected_substring, opt, gmsgid, &ap);\n+  bool warned = emit_warning_va (opt, gmsgid, &ap);\n   va_end (ap);\n \n   return warned;\n }\n \n-/* Variadic call to format_warning_n_va.  */\n+/* Variadic version of the above (singular vs plural).  */\n \n bool\n-format_warning_at_substring_n (const substring_loc &fmt_loc,\n-\t\t\t       const range_label *fmt_label,\n-\t\t\t       location_t param_loc,\n-\t\t\t       const range_label *param_label,\n-\t\t\t       const char *corrected_substring,\n-\t\t\t       int opt, unsigned HOST_WIDE_INT n,\n-\t\t\t       const char *singular_gmsgid,\n-\t\t\t       const char *plural_gmsgid, ...)\n+format_string_diagnostic_t::emit_warning_n (int opt, unsigned HOST_WIDE_INT n,\n+\t\t\t\t\t    const char *singular_gmsgid,\n+\t\t\t\t\t    const char *plural_gmsgid,\n+\t\t\t\t\t    ...) const\n {\n   va_list ap;\n   va_start (ap, plural_gmsgid);\n-  bool warned = format_warning_n_va (fmt_loc, fmt_label, param_loc, param_label,\n-\t\t\t\t     corrected_substring,\n-\t\t\t\t     opt, n, singular_gmsgid, plural_gmsgid,\n-\t\t\t\t     &ap);\n+  bool warned = emit_warning_n_va (opt, n, singular_gmsgid, plural_gmsgid,\n+\t\t\t\t   &ap);\n   va_end (ap);\n \n   return warned;"}, {"sha": "caac5376aeb484cf26db3e55d6e6f490fdc7defc", "filename": "gcc/substring-locations.h", "status": "modified", "additions": 37, "deletions": 37, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c896ecfeab0658dc61ed0a9ad4b649c69d1d8679/gcc%2Fsubstring-locations.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c896ecfeab0658dc61ed0a9ad4b649c69d1d8679/gcc%2Fsubstring-locations.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsubstring-locations.h?ref=c896ecfeab0658dc61ed0a9ad4b649c69d1d8679", "patch": "@@ -74,43 +74,43 @@ class substring_loc\n   int m_end_idx;\n };\n \n-/* Functions for emitting a warning about a format string.  */\n-\n-extern bool format_warning_va (const substring_loc &fmt_loc,\n-\t\t\t       const range_label *fmt_label,\n-\t\t\t       location_t param_loc,\n-\t\t\t       const range_label *param_label,\n-\t\t\t       const char *corrected_substring,\n-\t\t\t       int opt, const char *gmsgid, va_list *ap)\n-  ATTRIBUTE_GCC_DIAG (7, 0);\n-\n-extern bool format_warning_n_va (const substring_loc &fmt_loc,\n-\t\t\t\t const range_label *fmt_label,\n-\t\t\t\t location_t param_loc,\n-\t\t\t\t const range_label *param_label,\n-\t\t\t\t const char *corrected_substring,\n-\t\t\t\t int opt, unsigned HOST_WIDE_INT n,\n-\t\t\t\t const char *singular_gmsgid,\n-\t\t\t\t const char *plural_gmsgid, va_list *ap)\n-  ATTRIBUTE_GCC_DIAG (8, 0) ATTRIBUTE_GCC_DIAG (9, 0);\n-\n-extern bool format_warning_at_substring (const substring_loc &fmt_loc,\n-\t\t\t\t\t const range_label *fmt_label,\n-\t\t\t\t\t location_t param_loc,\n-\t\t\t\t\t const range_label *param_label,\n-\t\t\t\t\t const char *corrected_substring,\n-\t\t\t\t\t int opt, const char *gmsgid, ...)\n-  ATTRIBUTE_GCC_DIAG (7, 8);\n-\n-extern bool format_warning_at_substring_n (const substring_loc &fmt_loc,\n-\t\t\t\t\t   const range_label *fmt_label,\n-\t\t\t\t\t   location_t param_loc,\n-\t\t\t\t\t   const range_label *param_label,\n-\t\t\t\t\t   const char *corrected_substring,\n-\t\t\t\t\t   int opt, unsigned HOST_WIDE_INT n,\n-\t\t\t\t\t   const char *singular_gmsgid,\n-\t\t\t\t\t   const char *plural_gmsgid, ...)\n-  ATTRIBUTE_GCC_DIAG (8, 10) ATTRIBUTE_GCC_DIAG (9, 10);\n+/* A bundle of state for emitting a diagnostic relating to a format string.  */\n+\n+class format_string_diagnostic_t\n+{\n+ public:\n+  format_string_diagnostic_t (const substring_loc &fmt_loc,\n+\t\t\t      const range_label *fmt_label,\n+\t\t\t      location_t param_loc,\n+\t\t\t      const range_label *param_label,\n+\t\t\t      const char *corrected_substring);\n+\n+  /* Functions for emitting a warning about a format string.  */\n+\n+  bool emit_warning_va (int opt, const char *gmsgid, va_list *ap) const\n+    ATTRIBUTE_GCC_DIAG (3, 0);\n+\n+  bool emit_warning_n_va (int opt, unsigned HOST_WIDE_INT n,\n+\t\t\t  const char *singular_gmsgid,\n+\t\t\t  const char *plural_gmsgid, va_list *ap) const\n+  ATTRIBUTE_GCC_DIAG (4, 0) ATTRIBUTE_GCC_DIAG (5, 0);\n+\n+  bool emit_warning (int opt, const char *gmsgid, ...) const\n+    ATTRIBUTE_GCC_DIAG (3, 4);\n+\n+  bool emit_warning_n (int opt, unsigned HOST_WIDE_INT n,\n+\t\t       const char *singular_gmsgid,\n+\t\t       const char *plural_gmsgid, ...) const\n+  ATTRIBUTE_GCC_DIAG (4, 6) ATTRIBUTE_GCC_DIAG (5, 6);\n+\n+ private:\n+  const substring_loc &m_fmt_loc;\n+  const range_label *m_fmt_label;\n+  location_t m_param_loc;\n+  const range_label *m_param_label;\n+  const char *m_corrected_substring;\n+};\n+\n \n /* Implementation detail, for use when implementing\n    LANG_HOOKS_GET_SUBSTRING_LOCATION.  */"}]}