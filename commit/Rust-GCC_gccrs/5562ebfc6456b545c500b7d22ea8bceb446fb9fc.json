{"sha": "5562ebfc6456b545c500b7d22ea8bceb446fb9fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTU2MmViZmM2NDU2YjU0NWM1MDBiN2QyMmVhOGJjZWI0NDZmYjlmYw==", "commit": {"author": {"name": "Carl Love", "email": "cel@us.ibm.com", "date": "2017-05-10T15:54:41Z"}, "committer": {"name": "Carl Love", "email": "carll@gcc.gnu.org", "date": "2017-05-10T15:54:41Z"}, "message": "rs6000-c: Add support for built-in functions vector signed char vec_neg (vector...\n\ngcc/ChangeLog:\n\n2017-05-10  Carl Love  <cel@us.ibm.com>\n\n   * config/rs6000/rs6000-c: Add support for built-in functions\n   vector signed char        vec_neg (vector signed char)\n   vector signed short int   vec_neg (vector short int)\n   vector signed int         vec_neg (vector signed int)\n   vector signed long long   vec_neg (vector signed long long)\n   vector float              vec_neg (vector float)\n   vector double             vec_neg (vector double)\n   * config/rs6000/rs6000-builtin.def: Add definitions for NEG function\n   overload.\n   * config/rs6000/altivec.h: Add define for vec_neg\n   * doc/extend.texi: Update the built-in documentation for the\n   new built-in functions.\n\ngcc/testsuite/ChangeLog:\n\n2017-05-10  Carl Love  <cel@us.ibm.com>\n   * gcc.target/powerpc/builtins-3.c: Add tests for the new built-ins to\n   to the test suite file.\n   * gcc.target/powerpc/builtins-3-p8.c: Add tests for the new built-ins to\n   to the test suite file.\n\nFrom-SVN: r247841", "tree": {"sha": "959bca95f6b285b26140d8471b51231b5badc09f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/959bca95f6b285b26140d8471b51231b5badc09f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5562ebfc6456b545c500b7d22ea8bceb446fb9fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5562ebfc6456b545c500b7d22ea8bceb446fb9fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5562ebfc6456b545c500b7d22ea8bceb446fb9fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5562ebfc6456b545c500b7d22ea8bceb446fb9fc/comments", "author": {"login": "carlelove", "id": 86435705, "node_id": "MDQ6VXNlcjg2NDM1NzA1", "avatar_url": "https://avatars.githubusercontent.com/u/86435705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlelove", "html_url": "https://github.com/carlelove", "followers_url": "https://api.github.com/users/carlelove/followers", "following_url": "https://api.github.com/users/carlelove/following{/other_user}", "gists_url": "https://api.github.com/users/carlelove/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlelove/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlelove/subscriptions", "organizations_url": "https://api.github.com/users/carlelove/orgs", "repos_url": "https://api.github.com/users/carlelove/repos", "events_url": "https://api.github.com/users/carlelove/events{/privacy}", "received_events_url": "https://api.github.com/users/carlelove/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b1ce66fa69ba89a8a63da74780283bff20f98331", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1ce66fa69ba89a8a63da74780283bff20f98331", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1ce66fa69ba89a8a63da74780283bff20f98331"}], "stats": {"total": 112, "additions": 104, "deletions": 8}, "files": [{"sha": "788b33306f1d52edd90ef564e7732f83f0ed9523", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5562ebfc6456b545c500b7d22ea8bceb446fb9fc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5562ebfc6456b545c500b7d22ea8bceb446fb9fc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5562ebfc6456b545c500b7d22ea8bceb446fb9fc", "patch": "@@ -1,3 +1,18 @@\n+2017-05-10  Carl Love  <cel@us.ibm.com>\n+\n+\t* config/rs6000/rs6000-c: Add support for built-in functions\n+\tvector signed char        vec_neg (vector signed char)\n+\tvector signed short int   vec_neg (vector short int)\n+\tvector signed int         vec_neg (vector signed int)\n+\tvector signed long long   vec_neg (vector signed long long)\n+\tvector float              vec_neg (vector float)\n+\tvector double             vec_neg (vector double)\n+\t* config/rs6000/rs6000-builtin.def: Add definitions for NEG function\n+\toverload.\n+\t* config/rs6000/altivec.h: Add define for vec_neg\n+\t* doc/extend.texi: Update the built-in documentation for the\n+\tnew built-in functions.\n+\n 2017-05-10  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n \tPR tree-optimization/77644"}, {"sha": "49b2a34de65de37c4ecdf5a333ac24e49c434275", "filename": "gcc/config/rs6000/altivec.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5562ebfc6456b545c500b7d22ea8bceb446fb9fc/gcc%2Fconfig%2Frs6000%2Faltivec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5562ebfc6456b545c500b7d22ea8bceb446fb9fc/gcc%2Fconfig%2Frs6000%2Faltivec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.h?ref=5562ebfc6456b545c500b7d22ea8bceb446fb9fc", "patch": "@@ -213,6 +213,7 @@\n #define vec_lvebx __builtin_vec_lvebx\n #define vec_lvehx __builtin_vec_lvehx\n #define vec_lvewx __builtin_vec_lvewx\n+#define vec_neg __builtin_vec_neg\n #define vec_pmsum_be __builtin_vec_vpmsum\n #define vec_shasigma_be __builtin_crypto_vshasigma\n /* Cell only intrinsics.  */"}, {"sha": "50b1588e0c202a2b9439e0600f033bc80041b0c7", "filename": "gcc/config/rs6000/rs6000-builtin.def", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5562ebfc6456b545c500b7d22ea8bceb446fb9fc/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5562ebfc6456b545c500b7d22ea8bceb446fb9fc/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def?ref=5562ebfc6456b545c500b7d22ea8bceb446fb9fc", "patch": "@@ -1133,6 +1133,14 @@ BU_ALTIVEC_A (NABS_V16QI,     \"nabs_v16qi\",\tCONST,\tnabsv16qi2)\n BU_ALTIVEC_A (NABS_V4SF,      \"nabs_v4sf\",\tCONST,\tvsx_nabsv4sf2)\n BU_ALTIVEC_A (NABS_V2DF,      \"nabs_v2df\",\tCONST,\tvsx_nabsv2df2)\n \n+/* Altivec NEG functions.  */\n+BU_ALTIVEC_A (NEG_V2DI,      \"neg_v2di\",\tCONST,\tnegv2di2)\n+BU_ALTIVEC_A (NEG_V4SI,      \"neg_v4si\",\tCONST,\tnegv4si2)\n+BU_ALTIVEC_A (NEG_V8HI,      \"neg_v8hi\",\tCONST,\tnegv8hi2)\n+BU_ALTIVEC_A (NEG_V16QI,     \"neg_v16qi\",\tCONST,\tnegv16qi2)\n+BU_ALTIVEC_A (NEG_V4SF,      \"neg_v4sf\",\tCONST,\tnegv4sf2)\n+BU_ALTIVEC_A (NEG_V2DF,      \"neg_v2df\",\tCONST,\tnegv2df2)\n+\n /* 1 argument Altivec builtin functions.  */\n BU_ALTIVEC_1 (VEXPTEFP,\t      \"vexptefp\",\tFP,\taltivec_vexptefp)\n BU_ALTIVEC_1 (VLOGEFP,\t      \"vlogefp\",\tFP,\taltivec_vlogefp)\n@@ -1420,6 +1428,7 @@ BU_ALTIVEC_OVERLOAD_1 (FLOOR,\t   \"floor\")\n BU_ALTIVEC_OVERLOAD_1 (LOGE,\t   \"loge\")\n BU_ALTIVEC_OVERLOAD_1 (MTVSCR,\t   \"mtvscr\")\n BU_ALTIVEC_OVERLOAD_1 (NEARBYINT,  \"nearbyint\")\n+BU_ALTIVEC_OVERLOAD_1 (NEG,\t   \"neg\")\n BU_ALTIVEC_OVERLOAD_1 (RE,\t   \"re\")\n BU_ALTIVEC_OVERLOAD_1 (RINT,       \"rint\")\n BU_ALTIVEC_OVERLOAD_1 (ROUND,\t   \"round\")"}, {"sha": "3309f8de2d9bbdb16e985d9d3747df6e43fe797e", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5562ebfc6456b545c500b7d22ea8bceb446fb9fc/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5562ebfc6456b545c500b7d22ea8bceb446fb9fc/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=5562ebfc6456b545c500b7d22ea8bceb446fb9fc", "patch": "@@ -2222,6 +2222,20 @@ const struct altivec_builtin_types altivec_overloaded_builtins[] = {\n     RS6000_BTI_V2DF, RS6000_BTI_V2DF, 0, 0 },\n   { ALTIVEC_BUILTIN_VEC_NEARBYINT, VSX_BUILTIN_XVRSPI,\n     RS6000_BTI_V4SF, RS6000_BTI_V4SF, 0, 0 },\n+\n+  { ALTIVEC_BUILTIN_VEC_NEG, ALTIVEC_BUILTIN_NEG_V16QI,\n+    RS6000_BTI_V16QI, RS6000_BTI_V16QI, 0, 0 },\n+  { ALTIVEC_BUILTIN_VEC_NEG, ALTIVEC_BUILTIN_NEG_V8HI,\n+    RS6000_BTI_V8HI, RS6000_BTI_V8HI, 0, 0 },\n+  { ALTIVEC_BUILTIN_VEC_NEG, ALTIVEC_BUILTIN_NEG_V4SI,\n+    RS6000_BTI_V4SI, RS6000_BTI_V4SI, 0, 0 },\n+  { ALTIVEC_BUILTIN_VEC_NEG, ALTIVEC_BUILTIN_NEG_V2DI,\n+    RS6000_BTI_V2DI, RS6000_BTI_V2DI, 0, 0 },\n+  { ALTIVEC_BUILTIN_VEC_NEG, ALTIVEC_BUILTIN_NEG_V4SF,\n+    RS6000_BTI_V4SF, RS6000_BTI_V4SF, 0, 0 },\n+  { ALTIVEC_BUILTIN_VEC_NEG, ALTIVEC_BUILTIN_NEG_V2DF,\n+    RS6000_BTI_V2DF, RS6000_BTI_V2DF, 0, 0 },\n+\n   { ALTIVEC_BUILTIN_VEC_NOR, ALTIVEC_BUILTIN_VNOR,\n     RS6000_BTI_V4SF, RS6000_BTI_V4SF, RS6000_BTI_V4SF, 0 },\n   { ALTIVEC_BUILTIN_VEC_NOR, ALTIVEC_BUILTIN_VNOR,"}, {"sha": "f2b304211eb9c0dcbdf8a49a967840bf52cd2eb3", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5562ebfc6456b545c500b7d22ea8bceb446fb9fc/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5562ebfc6456b545c500b7d22ea8bceb446fb9fc/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=5562ebfc6456b545c500b7d22ea8bceb446fb9fc", "patch": "@@ -16343,6 +16343,13 @@ vector signed int vec_nabs (vector signed int);\n vector float vec_nabs (vector float);\n vector double vec_nabs (vector double);\n \n+vector signed char vec_neg (vector signed char);\n+vector signed short vec_neg (vector signed short);\n+vector signed int vec_neg (vector signed int);\n+vector signed long long vec_neg (vector signed long long);\n+vector float  char vec_neg (vector float);\n+vector double vec_neg (vector double);\n+\n vector float vec_nor (vector float, vector float);\n vector signed int vec_nor (vector signed int, vector signed int);\n vector unsigned int vec_nor (vector unsigned int, vector unsigned int);"}, {"sha": "ef45039217cc570bc20550351164a54ce5061a9e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5562ebfc6456b545c500b7d22ea8bceb446fb9fc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5562ebfc6456b545c500b7d22ea8bceb446fb9fc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5562ebfc6456b545c500b7d22ea8bceb446fb9fc", "patch": "@@ -1,3 +1,9 @@\n+2017-05-10  Carl Love  <cel@us.ibm.com>\n+\t* gcc.target/powerpc/builtins-3.c: Add tests for the new built-ins to\n+\tto the test suite file.\n+\t* gcc.target/powerpc/builtins-3-p8.c: Add tests for the new built-ins to\n+\tto the test suite file.\n+\n 2017-05-10  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n \tPR tree-optimization/77644"}, {"sha": "629a692541ac28e384e3bcf934214531f77fb692", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-3-p8.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5562ebfc6456b545c500b7d22ea8bceb446fb9fc/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-p8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5562ebfc6456b545c500b7d22ea8bceb446fb9fc/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-p8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-p8.c?ref=5562ebfc6456b545c500b7d22ea8bceb446fb9fc", "patch": "@@ -36,18 +36,25 @@ test_vui_packs_vull_vull (vector unsigned long long x,\n   return vec_packs (x, y);\n }\n \n+vector long long\n+test_neg_long_long (vector long long x)\n+{\n+\treturn vec_neg (x);\n+}\n+\n /* Expected test results:\n \n      test_eq_long_long          1 vcmpequd inst\n      test_pack_float            1 vpkudum inst\n      test_nabs_long_long        1 vspltisw, 1 vsubudm, 1 vminsd\n      test_vsi_packs_vsll_vsll   1 vpksdss\n-     test_vui_packs_vull_vull   1 vpkudus */\n+     test_vui_packs_vull_vull   1 vpkudus\n+     test_neg_long_long         1 vspltisw, 1 vsubudm */\n \n /* { dg-final { scan-assembler-times \"vcmpequd\" 1 } } */\n /* { dg-final { scan-assembler-times \"vpkudum\"  1 } } */\n-/* { dg-final { scan-assembler-times \"vspltisw\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vsubudm\"  1 } } */\n+/* { dg-final { scan-assembler-times \"vspltisw\" 2 } } */\n+/* { dg-final { scan-assembler-times \"vsubudm\"  2 } } */\n /* { dg-final { scan-assembler-times \"vminsd\"   1 } } */\n /* { dg-final { scan-assembler-times \"vpksdss\"  1 } } */\n /* { dg-final { scan-assembler-times \"vpkudus\"  1 } } */  "}, {"sha": "5998c0833477bbac48c14bc1a478a2e613eabec1", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-3.c", "status": "modified", "additions": 42, "deletions": 5, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5562ebfc6456b545c500b7d22ea8bceb446fb9fc/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5562ebfc6456b545c500b7d22ea8bceb446fb9fc/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3.c?ref=5562ebfc6456b545c500b7d22ea8bceb446fb9fc", "patch": "@@ -58,6 +58,36 @@ test_nabs_double (vector double x)\n \treturn vec_nabs (x);\n }\n \n+vector signed char\n+test_neg_char (vector signed char x)\n+{\n+\treturn vec_neg (x);\n+}\n+\n+vector short\n+test_neg_short (vector short x)\n+{\n+\treturn vec_neg (x);\n+}\n+\n+vector int\n+test_neg_int (vector int x)\n+{\n+\treturn vec_neg (x);\n+}\n+\n+vector float\n+test_neg_float (vector float x)\n+{\n+\treturn vec_neg (x);\n+}\n+\n+vector double\n+test_neg_double (vector double x)\n+{\n+\treturn vec_neg (x);\n+}\n+\n /* Expected test results:\n \n      test_eq_char              1 vcmpequb inst\n@@ -68,19 +98,26 @@ test_nabs_double (vector double x)\n      test_nabs_short           1 vspltisw, 1 vsubuhm, 1 vminsh\n      test_nabs_int             1 vspltisw, 1 vsubuwm, 1 vminsw\n      test_nabs_float           1 xvnabssp\n-     test_nabs_double          1 xvnabsdp */\n+     test_nabs_double          1 xvnabsdp\n+     test_neg_char             1 vspltisw, 1 vsububm\n+     test_neg_short            1 vspltisw, 1 vsubuhm\n+     test_neg_int              1 vspltisw, 1 vsubuwm\n+     test_neg_float            1 xvnegsp\n+     test_neg_float            1 xvnegdp */\n \n /* { dg-final { scan-assembler-times \"vcmpequb\" 1 } } */\n /* { dg-final { scan-assembler-times \"vcmpequh\" 1 } } */\n /* { dg-final { scan-assembler-times \"vcmpequw\" 1 } } */\n /* { dg-final { scan-assembler-times \"vsldoi\"   1 } } */\n-/* { dg-final { scan-assembler-times \"vsububm\"  1 } } */\n-/* { dg-final { scan-assembler-times \"vsubuhm\"  1 } } */\n-/* { dg-final { scan-assembler-times \"vsubuwm\"  1 } } */\n+/* { dg-final { scan-assembler-times \"vsububm\"  2 } } */\n+/* { dg-final { scan-assembler-times \"vsubuhm\"  2 } } */\n+/* { dg-final { scan-assembler-times \"vsubuwm\"  2 } } */\n /* { dg-final { scan-assembler-times \"vminsb\"   1 } } */\n /* { dg-final { scan-assembler-times \"vminsh\"   1 } } */\n /* { dg-final { scan-assembler-times \"vminsw\"   1 } } */\n-/* { dg-final { scan-assembler-times \"vspltisw\" 3 } } */\n+/* { dg-final { scan-assembler-times \"vspltisw\" 6 } } */\n /* { dg-final { scan-assembler-times \"xvnabssp\" 1 } } */\n /* { dg-final { scan-assembler-times \"xvnabsdp\" 1 } } */\n+/* { dg-final { scan-assembler-times \"xvnegsp\"  1 } } */\n+/* { dg-final { scan-assembler-times \"xvnegdp\"  1 } } */\n "}]}