{"sha": "50d440bc05a1da6908672ac75fde55a13c491744", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTBkNDQwYmMwNWExZGE2OTA4NjcyYWM3NWZkZTU1YTEzYzQ5MTc0NA==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2003-04-13T16:59:45Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2003-04-13T16:59:45Z"}, "message": "config-ml.in: Remove support for --disable-aix removing call-aix multilibs.\n\nconfig/rs6000/sysv4.h (SUBTARGET_OVERRIDE_OPTIONS): Delete support for\n -mcall-aix switch.\nconfig/rs6000/eabiaix.h: Delete.\nconfig/rs6000/rs6000.h (rs6000_abi): Remove ABI_AIX_NODESC.\n (RS6000_REG_SAVE, RS6000_SAVE_AREA, FP_ARGS_MAX_REG, RETURN_ADDRESS_OFFSET):\n Remove use of ABI_AIX_NODESC.\nconfig/rs6000/rs6000-c.c (rs6000_cpu_cpp_builtins): Likewise.\nconfig/rs6000/rs6000.c (print_operand, rs6000_stack_info, debug_stack_info,\n output_function_profiler, rs6000_trampoline_size,\n rs6000_initialise_trampoline): Likewise.\nconfig/rs6000/rs6000.md (call, call_value, call_nonlocal_sysv,\n call_indirect_nonlocal_sysv, call_value_indirect_nonlocal_sysv,\n call_value_nonlocal_sysv, sibcall_value_nonlocal_sysv, sibcall_nonlocal_sysv,\n sibcall_value_local64): Likewise.\nconfig/rs6000/t-ppcgas (MULTILIB_OPTIONS): Remove mcall-aix multilibs.\n (MULTILIB_DIRNAMES): Remove mcall-aix directories.\n (MULTILIB_EXCEPTIONS): Delete.\n (MULTILIB_MATCHES): Remove mcall-aix matches.\ndoc/fragments.texi: Replace -mcall-aix example with an ARM one.\ndoc/install.texi: Delete powerpc-*-eabiaix target.\ndoc/invoke.texi: Remove documentation of mcall-aix switch.\ndoc/tm.texi: Remove mcall-aix from example CPP_SPEC.\nconfig.gcc: Delete powerpc-*-eabiaix target.\n\nFrom-SVN: r65546", "tree": {"sha": "54f559a3bce434f7377dc74058b680e7235fbb46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54f559a3bce434f7377dc74058b680e7235fbb46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50d440bc05a1da6908672ac75fde55a13c491744", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50d440bc05a1da6908672ac75fde55a13c491744", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50d440bc05a1da6908672ac75fde55a13c491744", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50d440bc05a1da6908672ac75fde55a13c491744/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "62b9c42c443c31cd6b3480e8a7216777f9291447", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62b9c42c443c31cd6b3480e8a7216777f9291447", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62b9c42c443c31cd6b3480e8a7216777f9291447"}], "stats": {"total": 186, "additions": 55, "deletions": 131}, "files": [{"sha": "828bc8b083d0a4f290148409f22217e73df09cfd", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d440bc05a1da6908672ac75fde55a13c491744/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d440bc05a1da6908672ac75fde55a13c491744/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=50d440bc05a1da6908672ac75fde55a13c491744", "patch": "@@ -1,3 +1,8 @@\n+2003-04-13  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config-ml.in: Remove support for --disable-aix removing\n+\tcall-aix multilibs.\n+\n 2003-04-10  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* libtool.m4 (lt_cv_deplibs_check_method): Use pass_all on mips*."}, {"sha": "e227500c4a048e3b9bcd21578951bf21f85ddf5b", "filename": "config-ml.in", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d440bc05a1da6908672ac75fde55a13c491744/config-ml.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d440bc05a1da6908672ac75fde55a13c491744/config-ml.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config-ml.in?ref=50d440bc05a1da6908672ac75fde55a13c491744", "patch": "@@ -464,17 +464,6 @@ powerpc*-*-* | rs6000*-*-*)\n \t    esac\n \t  done\n \tfi\n-\tif [ x$enable_aix = xno ]\n-\tthen\n-\t  old_multidirs=\"${multidirs}\"\n-\t  multidirs=\"\"\n-\t  for x in ${old_multidirs}; do\n-\t    case \"$x\" in\n-\t      *mcall-aix* ) : ;;\n-\t      *) multidirs=\"${multidirs} ${x}\" ;;\n-\t    esac\n-\t  done\n-\tfi\n \t;;\n sparc*-*-*)\n \tcase \" $multidirs \" in"}, {"sha": "d65be511aefad2d6b852e0f46fb9fb4fe7d3e920", "filename": "gcc/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d440bc05a1da6908672ac75fde55a13c491744/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d440bc05a1da6908672ac75fde55a13c491744/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=50d440bc05a1da6908672ac75fde55a13c491744", "patch": "@@ -1,3 +1,32 @@\n+2003-04-13  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/rs6000/sysv4.h (SUBTARGET_OVERRIDE_OPTIONS): Delete\n+\tsupport for -mcall-aix switch.\n+\t* config/rs6000/eabiaix.h: Delete.\n+\t* config/rs6000/rs6000.h (rs6000_abi): Remove ABI_AIX_NODESC.\n+\t(RS6000_REG_SAVE, RS6000_SAVE_AREA, FP_ARGS_MAX_REG,\n+\tRETURN_ADDRESS_OFFSET): Remove use of ABI_AIX_NODESC.\n+\t* config/rs6000/rs6000-c.c (rs6000_cpu_cpp_builtins): Likewise.\n+\t* config/rs6000/rs6000.c (print_operand, rs6000_stack_info,\n+\tdebug_stack_info, output_function_profiler,\n+\trs6000_trampoline_size, rs6000_initialise_trampoline): Likewise.\n+\t* config/rs6000/rs6000.md (call, call_value, call_nonlocal_sysv,\n+\tcall_indirect_nonlocal_sysv, call_value_indirect_nonlocal_sysv,\n+\tcall_value_nonlocal_sysv, sibcall_value_nonlocal_sysv,\n+\tsibcall_nonlocal_sysv, sibcall_value_local64): Likewise.\n+\t* config/rs6000/t-ppcgas (MULTILIB_OPTIONS): Remove mcall-aix\n+\tmultilibs.\n+\t(MULTILIB_DIRNAMES): Remove mcall-aix directories.\n+\t(MULTILIB_EXCEPTIONS): Delete.\n+\t(MULTILIB_MATCHES): Remove mcall-aix matches.\n+\n+\t* doc/fragments.texi: Replace -mcall-aix example with an ARM\n+\tone.\n+\t* doc/install.texi: Delete powerpc-*-eabiaix target.\n+\t* doc/invoke.texi: Remove documentation of mcall-aix switch.\n+\t* doc/tm.texi: Remove mcall-aix from example CPP_SPEC.\n+\t* config.gcc: Delete powerpc-*-eabiaix target.\n+\n 2003-04-13  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* doc/invoke.texi: Fix typos."}, {"sha": "68b06c5cd2515fbdd52180f0d23633f898e0542e", "filename": "gcc/config.gcc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d440bc05a1da6908672ac75fde55a13c491744/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d440bc05a1da6908672ac75fde55a13c491744/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=50d440bc05a1da6908672ac75fde55a13c491744", "patch": "@@ -1961,10 +1961,6 @@ powerpc-*-chorusos*)\n \t\t;;\n \tesac\n \t;;\n-powerpc-*-eabiaix*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/eabi.h rs6000/eabiaix.h\"\n-\ttmake_file=\"rs6000/t-fprules rs6000/t-ppcgas rs6000/t-ppccomm\"\n-\t;;\n powerpc-*-eabispe*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/eabi.h rs6000/eabispe.h\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcendian rs6000/t-ppccomm\""}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "gcc/config/rs6000/eabiaix.h", "status": "modified", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d440bc05a1da6908672ac75fde55a13c491744/gcc%2Fconfig%2Frs6000%2Feabiaix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d440bc05a1da6908672ac75fde55a13c491744/gcc%2Fconfig%2Frs6000%2Feabiaix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabiaix.h?ref=50d440bc05a1da6908672ac75fde55a13c491744", "patch": "@@ -1,36 +0,0 @@\n-/* Embedded ELF system support, using old AIX based calling sequence.\n-   Copyright (C) 1995, 1996, 2000 Free Software Foundation, Inc.\n-   Contributed by Cygnus Support.\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* Default ABI to use */\n-#undef\tRS6000_ABI_NAME\n-#define RS6000_ABI_NAME \"aix\"\n-\n-/* Define this macro as a C expression for the initializer of an\n-   array of string to tell the driver program which options are\n-   defaults for this target and thus do not need to be handled\n-   specially when using `MULTILIB_OPTIONS'.\n-\n-   Do not define this macro if `MULTILIB_OPTIONS' is not defined in\n-   the target makefile fragment or if none of the options listed in\n-   `MULTILIB_OPTIONS' are set by default.  *Note Target Fragment::.  */\n-\n-#undef\tMULTILIB_DEFAULTS\n-#define\tMULTILIB_DEFAULTS { \"mbig\", \"mcall-aix\" }"}, {"sha": "01048dcd025351e4796732b3084e0a416dbb67cd", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d440bc05a1da6908672ac75fde55a13c491744/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d440bc05a1da6908672ac75fde55a13c491744/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=50d440bc05a1da6908672ac75fde55a13c491744", "patch": "@@ -114,9 +114,6 @@ rs6000_cpu_cpp_builtins (pfile)\n     case ABI_V4:\n       builtin_define (\"_CALL_SYSV\");\n       break;\n-    case ABI_AIX_NODESC:\n-      builtin_define (\"_CALL_AIX\");\n-      break;\n     case ABI_AIX:\n       builtin_define (\"_CALL_AIXDESC\");\n       builtin_define (\"_CALL_AIX\");"}, {"sha": "8e9870a25ef43dc07bf4486c59dc10b70f473d27", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 4, "deletions": 24, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d440bc05a1da6908672ac75fde55a13c491744/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d440bc05a1da6908672ac75fde55a13c491744/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=50d440bc05a1da6908672ac75fde55a13c491744", "patch": "@@ -8185,7 +8185,6 @@ print_operand (file, x, code)\n \t      break;\n \n \t    case ABI_V4:\n-\t    case ABI_AIX_NODESC:\n \t    case ABI_DARWIN:\n \t      break;\n \t    }\n@@ -9293,8 +9292,7 @@ is_altivec_return_reg (reg, xyes)\n    align the stack at program startup.  A happy side-effect is that\n    -mno-eabi libraries can be used with -meabi programs.)\n \n-   The EABI configuration defaults to the V.4 layout, unless\n-   -mcall-aix is used, in which case the AIX layout is used.  However,\n+   The EABI configuration defaults to the V.4 layout.  However,\n    the stack alignment requirements may differ.  If -mno-eabi is not\n    given, the required stack alignment is 8 bytes; if -mno-eabi is\n    given, the required alignment is 16 bytes.  (But see V.4 comment\n@@ -9447,7 +9445,6 @@ rs6000_stack_info ()\n       abort ();\n \n     case ABI_AIX:\n-    case ABI_AIX_NODESC:\n     case ABI_DARWIN:\n       info_ptr->fp_save_offset   = - info_ptr->fp_size;\n       info_ptr->gp_save_offset   = info_ptr->fp_save_offset - info_ptr->gp_size;\n@@ -9663,8 +9660,7 @@ debug_stack_info (info)\n     {\n     default:\t\t abi_string = \"Unknown\";\tbreak;\n     case ABI_NONE:\t abi_string = \"NONE\";\t\tbreak;\n-    case ABI_AIX:\n-    case ABI_AIX_NODESC: abi_string = \"AIX\";\t\tbreak;\n+    case ABI_AIX:\t abi_string = \"AIX\";\t\tbreak;\n     case ABI_DARWIN:\t abi_string = \"Darwin\";\t\tbreak;\n     case ABI_V4:\t abi_string = \"V.4\";\t\tbreak;\n     }\n@@ -12447,9 +12443,6 @@ output_function_profiler (file, labelno)\n \n     case ABI_V4:\n       save_lr = 4;\n-      /* Fall through.  */\n-\n-    case ABI_AIX_NODESC:\n       if (!TARGET_32BIT)\n \t{\n \t  warning (\"no profiling of 64-bit code for this ABI\");\n@@ -12493,19 +12486,8 @@ output_function_profiler (file, labelno)\n \t  asm_fprintf (file, \"@l(%s)\\n\", reg_names[12]);\n \t}\n \n-      if (current_function_needs_context && DEFAULT_ABI == ABI_AIX_NODESC)\n-\t{\n-\t  asm_fprintf (file, \"\\t{st|stw} %s,%d(%s)\\n\",\n-\t\t       reg_names[STATIC_CHAIN_REGNUM],\n-\t\t       12, reg_names[1]);\n-\t  fprintf (file, \"\\tbl %s\\n\", RS6000_MCOUNT);\n-\t  asm_fprintf (file, \"\\t{l|lwz} %s,%d(%s)\\n\",\n-\t\t       reg_names[STATIC_CHAIN_REGNUM],\n-\t\t       12, reg_names[1]);\n-\t}\n-      else\n-\t/* ABI_V4 saves the static chain reg with ASM_OUTPUT_REG_PUSH.  */\n-\tfprintf (file, \"\\tbl %s\\n\", RS6000_MCOUNT);\n+      /* ABI_V4 saves the static chain reg with ASM_OUTPUT_REG_PUSH.  */\n+      fprintf (file, \"\\tbl %s\\n\", RS6000_MCOUNT);\n       break;\n \n     case ABI_AIX:\n@@ -12748,7 +12730,6 @@ rs6000_trampoline_size ()\n \n     case ABI_DARWIN:\n     case ABI_V4:\n-    case ABI_AIX_NODESC:\n       ret = (TARGET_32BIT) ? 40 : 48;\n       break;\n     }\n@@ -12796,7 +12777,6 @@ rs6000_initialize_trampoline (addr, fnaddr, cxt)\n     /* Under V.4/eabi/darwin, __trampoline_setup does the real work.  */\n     case ABI_DARWIN:\n     case ABI_V4:\n-    case ABI_AIX_NODESC:\n       emit_library_call (gen_rtx_SYMBOL_REF (SImode, \"__trampoline_setup\"),\n \t\t\t FALSE, VOIDmode, 4,\n \t\t\t addr, pmode,"}, {"sha": "6bb65d8afa002435ce956065e2eaa7be02558e76", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d440bc05a1da6908672ac75fde55a13c491744/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d440bc05a1da6908672ac75fde55a13c491744/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=50d440bc05a1da6908672ac75fde55a13c491744", "patch": "@@ -1386,8 +1386,6 @@ enum reg_class\n enum rs6000_abi {\n   ABI_NONE,\n   ABI_AIX,\t\t\t/* IBM's AIX */\n-  ABI_AIX_NODESC,\t\t/* AIX calling sequence minus\n-\t\t\t\t   function descriptors */\n   ABI_V4,\t\t\t/* System V.4/eabi */\n   ABI_DARWIN\t\t\t/* Apple's Darwin (OS X kernel) */\n };\n@@ -1452,14 +1450,13 @@ typedef struct rs6000_stack {\n \n /* Size of the outgoing register save area */\n #define RS6000_REG_SAVE ((DEFAULT_ABI == ABI_AIX\t\t\t\\\n-\t\t\t  || DEFAULT_ABI == ABI_AIX_NODESC\t\t\\\n \t\t\t  || DEFAULT_ABI == ABI_DARWIN)\t\t\t\\\n \t\t\t ? (TARGET_64BIT ? 64 : 32)\t\t\t\\\n \t\t\t : 0)\n \n /* Size of the fixed area on the stack */\n #define RS6000_SAVE_AREA \\\n-  (((DEFAULT_ABI == ABI_AIX || DEFAULT_ABI == ABI_AIX_NODESC || DEFAULT_ABI == ABI_DARWIN) ? 24 : 8)\t\\\n+  (((DEFAULT_ABI == ABI_AIX || DEFAULT_ABI == ABI_DARWIN) ? 24 : 8)\t\\\n    << (TARGET_64BIT ? 1 : 0))\n \n /* MEM representing address to save the TOC register */\n@@ -1625,7 +1622,6 @@ typedef struct rs6000_stack {\n #define\tFP_ARG_AIX_MAX_REG 45\n #define\tFP_ARG_V4_MAX_REG  40\n #define\tFP_ARG_MAX_REG ((DEFAULT_ABI == ABI_AIX\t\t\t\t\\\n-\t\t\t || DEFAULT_ABI == ABI_AIX_NODESC\t\t\\\n \t\t\t || DEFAULT_ABI == ABI_DARWIN)\t\t\t\\\n \t\t\t? FP_ARG_AIX_MAX_REG : FP_ARG_V4_MAX_REG)\n #define FP_ARG_NUM_REG (FP_ARG_MAX_REG - FP_ARG_MIN_REG + 1)\n@@ -1900,8 +1896,7 @@ typedef struct rs6000_args\n    abi's store the return address.  */\n #define RETURN_ADDRESS_OFFSET\t\t\t\t\t\t\\\n  ((DEFAULT_ABI == ABI_AIX\t\t\t\t\t\t\\\n-   || DEFAULT_ABI == ABI_DARWIN\t\t\t\t\t\t\\\n-   || DEFAULT_ABI == ABI_AIX_NODESC)\t? (TARGET_32BIT ? 8 : 16) :\t\\\n+   || DEFAULT_ABI == ABI_DARWIN)\t? (TARGET_32BIT ? 8 : 16) :\t\\\n   (DEFAULT_ABI == ABI_V4)\t\t? 4 :\t\t\t\t\\\n   (internal_error (\"RETURN_ADDRESS_OFFSET not supported\"), 0))\n "}, {"sha": "a51c81ccab3d2eb18f067ea1af7d4d3c08bf3c4d", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d440bc05a1da6908672ac75fde55a13c491744/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d440bc05a1da6908672ac75fde55a13c491744/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=50d440bc05a1da6908672ac75fde55a13c491744", "patch": "@@ -10064,7 +10064,6 @@\n \toperands[0] = rs6000_longcall_ref (operands[0]);\n \n       if (DEFAULT_ABI == ABI_V4\n-          || DEFAULT_ABI == ABI_AIX_NODESC\n \t  || DEFAULT_ABI == ABI_DARWIN)\n \toperands[0] = force_reg (Pmode, operands[0]);\n \n@@ -10112,7 +10111,6 @@\n \toperands[1] = rs6000_longcall_ref (operands[1]);\n \n       if (DEFAULT_ABI == ABI_V4\n-\t  || DEFAULT_ABI == ABI_AIX_NODESC\n \t  || DEFAULT_ABI == ABI_DARWIN)\n \toperands[0] = force_reg (Pmode, operands[0]);\n \n@@ -10343,8 +10341,7 @@\n \t (match_operand 1 \"\" \"g,g\"))\n    (use (match_operand:SI 2 \"immediate_operand\" \"O,n\"))\n    (clobber (match_scratch:SI 3 \"=l,l\"))]\n-  \"DEFAULT_ABI == ABI_AIX_NODESC\n-   || DEFAULT_ABI == ABI_V4\n+  \"DEFAULT_ABI == ABI_V4\n    || DEFAULT_ABI == ABI_DARWIN\"\n {\n   if (INTVAL (operands[2]) & CALL_V4_SET_FP_ARGS)\n@@ -10363,8 +10360,7 @@\n \t (match_operand 1 \"\" \"g,g\"))\n    (use (match_operand:SI 2 \"immediate_operand\" \"O,n\"))\n    (clobber (match_scratch:SI 3 \"=l,l\"))]\n-  \"(DEFAULT_ABI == ABI_AIX_NODESC\n-    || DEFAULT_ABI == ABI_V4\n+  \"(DEFAULT_ABI == ABI_V4\n     || DEFAULT_ABI == ABI_DARWIN)\n    && (INTVAL (operands[2]) & CALL_LONG) == 0\"\n {\n@@ -10385,8 +10381,7 @@\n \t      (match_operand 2 \"\" \"g,g\")))\n    (use (match_operand:SI 3 \"immediate_operand\" \"O,n\"))\n    (clobber (match_scratch:SI 4 \"=l,l\"))]\n-  \"DEFAULT_ABI == ABI_AIX_NODESC\n-   || DEFAULT_ABI == ABI_V4\n+  \"DEFAULT_ABI == ABI_V4\n    || DEFAULT_ABI == ABI_DARWIN\"\n {\n   if (INTVAL (operands[3]) & CALL_V4_SET_FP_ARGS)\n@@ -10406,8 +10401,7 @@\n \t      (match_operand 2 \"\" \"g,g\")))\n    (use (match_operand:SI 3 \"immediate_operand\" \"O,n\"))\n    (clobber (match_scratch:SI 4 \"=l,l\"))]\n-  \"(DEFAULT_ABI == ABI_AIX_NODESC\n-    || DEFAULT_ABI == ABI_V4\n+  \"(DEFAULT_ABI == ABI_V4\n     || DEFAULT_ABI == ABI_DARWIN)\n    && (INTVAL (operands[3]) & CALL_LONG) == 0\"\n {\n@@ -10621,8 +10615,7 @@\n    (use (match_operand:SI 3 \"register_operand\" \"l,l\"))\n    (return)]\n   \"(DEFAULT_ABI == ABI_DARWIN\n-     || DEFAULT_ABI == ABI_V4\n-     || DEFAULT_ABI == ABI_AIX_NODESC)\n+     || DEFAULT_ABI == ABI_V4)\n    && (INTVAL (operands[2]) & CALL_LONG) == 0\"\n   \"*\n {\n@@ -10668,8 +10661,7 @@\n    (use (match_operand:SI 4 \"register_operand\" \"l,l\"))\n    (return)]\n   \"(DEFAULT_ABI == ABI_DARWIN\n-       || DEFAULT_ABI == ABI_V4\n-       || DEFAULT_ABI == ABI_AIX_NODESC)\n+       || DEFAULT_ABI == ABI_V4)\n    && (INTVAL (operands[3]) & CALL_LONG) == 0\"\n   \"*\n {"}, {"sha": "0a072a7c5bb0e5d234022072c2a5ad25f59ec29f", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d440bc05a1da6908672ac75fde55a13c491744/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d440bc05a1da6908672ac75fde55a13c491744/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=50d440bc05a1da6908672ac75fde55a13c491744", "patch": "@@ -185,11 +185,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n       rs6000_current_abi = ABI_V4;\t\t\t\t\t\\\n       target_flags |= MASK_EABI;\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n-  else if (!strcmp (rs6000_abi_name, \"aix\"))\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      rs6000_current_abi = ABI_AIX_NODESC;\t\t\t\t\\\n-      target_flags |= MASK_EABI;\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n   else if (!strcmp (rs6000_abi_name, \"aixdesc\"))\t\t\t\\\n     rs6000_current_abi = ABI_AIX;\t\t\t\t\t\\\n   else if (!strcmp (rs6000_abi_name, \"freebsd\"))\t\t\t\\"}, {"sha": "120aef4467c17c286ff4a55beaa1aed1e9721b5c", "filename": "gcc/config/rs6000/t-ppcgas", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d440bc05a1da6908672ac75fde55a13c491744/gcc%2Fconfig%2Frs6000%2Ft-ppcgas", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d440bc05a1da6908672ac75fde55a13c491744/gcc%2Fconfig%2Frs6000%2Ft-ppcgas", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-ppcgas?ref=50d440bc05a1da6908672ac75fde55a13c491744", "patch": "@@ -2,18 +2,13 @@\n \n MULTILIB_OPTIONS\t= msoft-float \\\n \t\t\t  mlittle/mbig \\\n-\t\t\t  mcall-sysv/mcall-aix \\\n \t\t\t  fleading-underscore\n \n MULTILIB_DIRNAMES\t= nof \\\n \t\t\t  le be \\\n-\t\t\t  cs ca \\\n \t\t\t  und\n \n MULTILIB_EXTRA_OPTS\t= mrelocatable-lib mno-eabi mstrict-align\n-MULTILIB_EXCEPTIONS\t= *mcall-aix/*fleading-underscore* \\\n-\t\t\t  *mlittle/*mcall-aix*\n \n MULTILIB_MATCHES\t= ${MULTILIB_MATCHES_FLOAT} \\\n-\t\t\t  ${MULTILIB_MATCHES_ENDIAN} \\\n-\t\t\t  ${MULTILIB_MATCHES_SYSV}\n+\t\t\t  ${MULTILIB_MATCHES_ENDIAN}"}, {"sha": "c9ebcf9145d6f88c6211df46afd6a4d9e6aea938", "filename": "gcc/doc/fragments.texi", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d440bc05a1da6908672ac75fde55a13c491744/gcc%2Fdoc%2Ffragments.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d440bc05a1da6908672ac75fde55a13c491744/gcc%2Fdoc%2Ffragments.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ffragments.texi?ref=50d440bc05a1da6908672ac75fde55a13c491744", "patch": "@@ -134,12 +134,12 @@ specified, there are combinations that should not be built.  In that\n case, set @code{MULTILIB_EXCEPTIONS} to be all of the switch exceptions\n in shell case syntax that should not be built.\n \n-For example, in the PowerPC embedded ABI support, it is not desirable\n-to build libraries compiled with the @option{-mcall-aix} option\n-and either of the @option{-fleading-underscore} or @option{-mlittle} options\n-at the same time.  Therefore @code{MULTILIB_EXCEPTIONS} is set to\n+For example the ARM processor cannot execute both hardware floating\n+point instructions and the reduced size THUMB instructions at the same\n+time, so there is no need to build libraries with both of these\n+options enabled.  Therefore @code{MULTILIB_EXCEPTIONS} is set to:\n @smallexample\n-*mcall-aix/*fleading-underscore* *mlittle/*mcall-aix*\n+*mthumb/*mhard-float*\n @end smallexample\n \n @findex MULTILIB_EXTRA_OPTS"}, {"sha": "43c62fa76715d40c9caa1d5a2623698a7f9fc722", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d440bc05a1da6908672ac75fde55a13c491744/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d440bc05a1da6908672ac75fde55a13c491744/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=50d440bc05a1da6908672ac75fde55a13c491744", "patch": "@@ -2994,13 +2994,6 @@ PowerPC system in big endian mode running NetBSD@.  To build the\n documentation you will need Texinfo version 4.2 (NetBSD 1.5.1 included\n Texinfo version 3.12).\n \n-@html\n-<hr />\n-@end html\n-@heading @anchor{powerpc-*-eabiaix}powerpc-*-eabiaix\n-Embedded PowerPC system in big endian mode with @option{-mcall-aix} selected as\n-the default.\n-\n @html\n <hr />\n @end html"}, {"sha": "689d2cea6235d009568e7a20bfb22d8c069af470", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d440bc05a1da6908672ac75fde55a13c491744/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d440bc05a1da6908672ac75fde55a13c491744/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=50d440bc05a1da6908672ac75fde55a13c491744", "patch": "@@ -420,7 +420,7 @@ in the following sections.\n -mno-relocatable  -mrelocatable-lib  -mno-relocatable-lib @gol\n -mtoc  -mno-toc  -mlittle  -mlittle-endian  -mbig  -mbig-endian @gol\n -mdynamic-no-pic @gol\n--mcall-aix  -mcall-sysv  -mcall-netbsd @gol\n+-mcall-sysv  -mcall-netbsd @gol\n -maix-struct-return  -msvr4-struct-return @gol\n -mabi=altivec  -mabi=no-altivec @gol\n -mabi=spe  -mabi=no-spe @gol\n@@ -7220,12 +7220,6 @@ Specify both @option{-mcall-sysv} and @option{-meabi} options.\n @opindex mcall-sysv-noeabi\n Specify both @option{-mcall-sysv} and @option{-mno-eabi} options.\n \n-@item -mcall-aix\n-@opindex mcall-aix\n-On System V.4 and embedded PowerPC systems compile code using calling\n-conventions that are similar to those used on AIX@.  This is the\n-default if you configured GCC using @samp{powerpc-*-eabiaix}.\n-\n @item -mcall-solaris\n @opindex mcall-solaris\n On System V.4 and embedded PowerPC systems compile code for the Solaris"}, {"sha": "84643b549beadd1d230ee9d3c0620d75a0aedc4d", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d440bc05a1da6908672ac75fde55a13c491744/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d440bc05a1da6908672ac75fde55a13c491744/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=50d440bc05a1da6908672ac75fde55a13c491744", "patch": "@@ -337,8 +337,8 @@ The @file{config/rs6000/sysv.h} target file defines:\n #undef CPP_SPEC\n #define CPP_SPEC \\\n \"%@{posix: -D_POSIX_SOURCE @} \\\n-%@{mcall-sysv: -D_CALL_SYSV @} %@{mcall-aix: -D_CALL_AIX @} \\\n-%@{!mcall-sysv: %@{!mcall-aix: %(cpp_sysv_default) @}@} \\\n+%@{mcall-sysv: -D_CALL_SYSV @} \\\n+%@{!mcall-sysv: %(cpp_sysv_default) @} \\\n %@{msoft-float: -D_SOFT_FLOAT@} %@{mcpu=403: -D_SOFT_FLOAT@}\"\n \n #undef CPP_SYSV_DEFAULT"}]}