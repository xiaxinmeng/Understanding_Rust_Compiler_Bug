{"sha": "e91a2ddc1feff4f55ee037a8888c57e133274386", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTkxYTJkZGMxZmVmZjRmNTVlZTAzN2E4ODg4YzU3ZTEzMzI3NDM4Ng==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-06-21T07:04:13Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-06-21T07:04:13Z"}, "message": "configure.ac: Add AC_SYS_LARGEFILE.\n\n2017-06-21  Richard Biener  <rguenther@suse.de>\n\n\t* configure.ac: Add AC_SYS_LARGEFILE.\n\t* config.h.in: Regenerate.\n\t* configure: Likewise.\n\nFrom-SVN: r249436", "tree": {"sha": "fed861dce90b5d7e552233d0027519aeba74d4ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fed861dce90b5d7e552233d0027519aeba74d4ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e91a2ddc1feff4f55ee037a8888c57e133274386", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e91a2ddc1feff4f55ee037a8888c57e133274386", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e91a2ddc1feff4f55ee037a8888c57e133274386", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e91a2ddc1feff4f55ee037a8888c57e133274386/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a51a76e59415f391ed277429cd1af023ef6e534c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a51a76e59415f391ed277429cd1af023ef6e534c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a51a76e59415f391ed277429cd1af023ef6e534c"}], "stats": {"total": 219, "additions": 217, "deletions": 2}, "files": [{"sha": "eb9bb6ab889047125dd717503baa88470fa4f232", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e91a2ddc1feff4f55ee037a8888c57e133274386/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e91a2ddc1feff4f55ee037a8888c57e133274386/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=e91a2ddc1feff4f55ee037a8888c57e133274386", "patch": "@@ -1,3 +1,9 @@\n+2017-06-21  Richard Biener  <rguenther@suse.de>\n+\n+\t* configure.ac: Add AC_SYS_LARGEFILE.\n+\t* config.h.in: Regenerate.\n+\t* configure: Likewise.\n+\n 2017-06-11  Ian Lance Taylor  <iant@golang.org>\n \n \t* elf.c (backtrace_initialize): Always set *fileline_fn."}, {"sha": "06f91f2e29f513e1abf35b987a154d667597c8a1", "filename": "libbacktrace/config.h.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e91a2ddc1feff4f55ee037a8888c57e133274386/libbacktrace%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e91a2ddc1feff4f55ee037a8888c57e133274386/libbacktrace%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfig.h.in?ref=e91a2ddc1feff4f55ee037a8888c57e133274386", "patch": "@@ -123,6 +123,12 @@\n #endif\n \n \n+/* Number of bits in a file offset, on hosts where this is settable. */\n+#undef _FILE_OFFSET_BITS\n+\n+/* Define for large files, on AIX-style hosts. */\n+#undef _LARGE_FILES\n+\n /* Define to 1 if on MINIX. */\n #undef _MINIX\n "}, {"sha": "e6420ea94daaf68abdbabaec452e6966b5b8b96e", "filename": "libbacktrace/configure", "status": "modified", "additions": 203, "deletions": 2, "changes": 205, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e91a2ddc1feff4f55ee037a8888c57e133274386/libbacktrace%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e91a2ddc1feff4f55ee037a8888c57e133274386/libbacktrace%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure?ref=e91a2ddc1feff4f55ee037a8888c57e133274386", "patch": "@@ -734,6 +734,7 @@ with_pic\n enable_fast_install\n with_gnu_ld\n enable_libtool_lock\n+enable_largefile\n with_system_libunwind\n enable_host_shared\n '\n@@ -1374,6 +1375,7 @@ Optional Features:\n   --enable-fast-install[=PKGS]\n                           optimize for fast installation [default=yes]\n   --disable-libtool-lock  avoid locking (might break parallel builds)\n+  --disable-largefile     omit support for large files\n   --enable-host-shared    build host code as shared libraries\n \n Optional Packages:\n@@ -11134,7 +11136,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11137 \"configure\"\n+#line 11139 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11240,7 +11242,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11243 \"configure\"\n+#line 11245 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11479,6 +11481,205 @@ CC=\"$lt_save_CC\"\n \n \n \n+# Check whether --enable-largefile was given.\n+if test \"${enable_largefile+set}\" = set; then :\n+  enableval=$enable_largefile;\n+fi\n+\n+if test \"$enable_largefile\" != no; then\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for special C compiler options needed for large files\" >&5\n+$as_echo_n \"checking for special C compiler options needed for large files... \" >&6; }\n+if test \"${ac_cv_sys_largefile_CC+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_cv_sys_largefile_CC=no\n+     if test \"$GCC\" != yes; then\n+       ac_save_CC=$CC\n+       while :; do\n+\t # IRIX 6.2 and later do not support large files by default,\n+\t # so use the C compiler's -n32 option if that helps.\n+\t cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <sys/types.h>\n+ /* Check that off_t can represent 2**63 - 1 correctly.\n+    We can't simply define LARGE_OFF_T to be 9223372036854775807,\n+    since some C++ compilers masquerading as C compilers\n+    incorrectly reject 9223372036854775807.  */\n+#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+  int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n+\t\t       && LARGE_OFF_T % 2147483647 == 1)\n+\t\t      ? 1 : -1];\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+\t if ac_fn_c_try_compile \"$LINENO\"; then :\n+  break\n+fi\n+rm -f core conftest.err conftest.$ac_objext\n+\t CC=\"$CC -n32\"\n+\t if ac_fn_c_try_compile \"$LINENO\"; then :\n+  ac_cv_sys_largefile_CC=' -n32'; break\n+fi\n+rm -f core conftest.err conftest.$ac_objext\n+\t break\n+       done\n+       CC=$ac_save_CC\n+       rm -f conftest.$ac_ext\n+    fi\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_sys_largefile_CC\" >&5\n+$as_echo \"$ac_cv_sys_largefile_CC\" >&6; }\n+  if test \"$ac_cv_sys_largefile_CC\" != no; then\n+    CC=$CC$ac_cv_sys_largefile_CC\n+  fi\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for _FILE_OFFSET_BITS value needed for large files\" >&5\n+$as_echo_n \"checking for _FILE_OFFSET_BITS value needed for large files... \" >&6; }\n+if test \"${ac_cv_sys_file_offset_bits+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  while :; do\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <sys/types.h>\n+ /* Check that off_t can represent 2**63 - 1 correctly.\n+    We can't simply define LARGE_OFF_T to be 9223372036854775807,\n+    since some C++ compilers masquerading as C compilers\n+    incorrectly reject 9223372036854775807.  */\n+#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+  int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n+\t\t       && LARGE_OFF_T % 2147483647 == 1)\n+\t\t      ? 1 : -1];\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  ac_cv_sys_file_offset_bits=no; break\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#define _FILE_OFFSET_BITS 64\n+#include <sys/types.h>\n+ /* Check that off_t can represent 2**63 - 1 correctly.\n+    We can't simply define LARGE_OFF_T to be 9223372036854775807,\n+    since some C++ compilers masquerading as C compilers\n+    incorrectly reject 9223372036854775807.  */\n+#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+  int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n+\t\t       && LARGE_OFF_T % 2147483647 == 1)\n+\t\t      ? 1 : -1];\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  ac_cv_sys_file_offset_bits=64; break\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+  ac_cv_sys_file_offset_bits=unknown\n+  break\n+done\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_sys_file_offset_bits\" >&5\n+$as_echo \"$ac_cv_sys_file_offset_bits\" >&6; }\n+case $ac_cv_sys_file_offset_bits in #(\n+  no | unknown) ;;\n+  *)\n+cat >>confdefs.h <<_ACEOF\n+#define _FILE_OFFSET_BITS $ac_cv_sys_file_offset_bits\n+_ACEOF\n+;;\n+esac\n+rm -rf conftest*\n+  if test $ac_cv_sys_file_offset_bits = unknown; then\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for _LARGE_FILES value needed for large files\" >&5\n+$as_echo_n \"checking for _LARGE_FILES value needed for large files... \" >&6; }\n+if test \"${ac_cv_sys_large_files+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  while :; do\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <sys/types.h>\n+ /* Check that off_t can represent 2**63 - 1 correctly.\n+    We can't simply define LARGE_OFF_T to be 9223372036854775807,\n+    since some C++ compilers masquerading as C compilers\n+    incorrectly reject 9223372036854775807.  */\n+#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+  int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n+\t\t       && LARGE_OFF_T % 2147483647 == 1)\n+\t\t      ? 1 : -1];\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  ac_cv_sys_large_files=no; break\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#define _LARGE_FILES 1\n+#include <sys/types.h>\n+ /* Check that off_t can represent 2**63 - 1 correctly.\n+    We can't simply define LARGE_OFF_T to be 9223372036854775807,\n+    since some C++ compilers masquerading as C compilers\n+    incorrectly reject 9223372036854775807.  */\n+#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+  int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n+\t\t       && LARGE_OFF_T % 2147483647 == 1)\n+\t\t      ? 1 : -1];\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  ac_cv_sys_large_files=1; break\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+  ac_cv_sys_large_files=unknown\n+  break\n+done\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_sys_large_files\" >&5\n+$as_echo \"$ac_cv_sys_large_files\" >&6; }\n+case $ac_cv_sys_large_files in #(\n+  no | unknown) ;;\n+  *)\n+cat >>confdefs.h <<_ACEOF\n+#define _LARGE_FILES $ac_cv_sys_large_files\n+_ACEOF\n+;;\n+esac\n+rm -rf conftest*\n+  fi\n+fi\n+\n+\n backtrace_supported=yes\n \n if test -n \"${with_target_subdir}\"; then"}, {"sha": "47ebdc18af201b4ea327fc1e178616282d01a9b5", "filename": "libbacktrace/configure.ac", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e91a2ddc1feff4f55ee037a8888c57e133274386/libbacktrace%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e91a2ddc1feff4f55ee037a8888c57e133274386/libbacktrace%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure.ac?ref=e91a2ddc1feff4f55ee037a8888c57e133274386", "patch": "@@ -82,6 +82,8 @@ esac\n LT_INIT\n AM_PROG_LIBTOOL\n \n+AC_SYS_LARGEFILE\n+\n backtrace_supported=yes\n \n if test -n \"${with_target_subdir}\"; then"}]}