{"sha": "d570872da175ccdd8f3e7326e8051fa5c3ec020a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU3MDg3MmRhMTc1Y2NkZDhmM2U3MzI2ZTgwNTFmYTVjM2VjMDIwYQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2013-10-27T18:50:01Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2013-10-27T18:50:01Z"}, "message": "c-lex.c (interpret_integer): Remove call to cpp_num_sign_extend.\n\ngcc/c-family/\n\t* c-lex.c (interpret_integer): Remove call to cpp_num_sign_extend.\n\nFrom-SVN: r204108", "tree": {"sha": "3f7bc77dbb234a30b5ea4a59ad21c1c815a437dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f7bc77dbb234a30b5ea4a59ad21c1c815a437dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d570872da175ccdd8f3e7326e8051fa5c3ec020a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d570872da175ccdd8f3e7326e8051fa5c3ec020a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d570872da175ccdd8f3e7326e8051fa5c3ec020a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d570872da175ccdd8f3e7326e8051fa5c3ec020a/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4962e51350ed05a4ebc5e5dc123ac744ce5c5d59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4962e51350ed05a4ebc5e5dc123ac744ce5c5d59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4962e51350ed05a4ebc5e5dc123ac744ce5c5d59"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "87d003479da395770dc82cd518e8ca23b9f8c7ba", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d570872da175ccdd8f3e7326e8051fa5c3ec020a/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d570872da175ccdd8f3e7326e8051fa5c3ec020a/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=d570872da175ccdd8f3e7326e8051fa5c3ec020a", "patch": "@@ -1,3 +1,7 @@\n+2013-10-27  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* c-lex.c (interpret_integer): Remove call to cpp_num_sign_extend.\n+\n 2013-10-26  Jeff Law  <law@redhat.com>\n \n \t* c-family/c-common.c (c_define_builtins): Remove mudflap support."}, {"sha": "4dfd5d9f4e8e4010ebc1572f64a2853079b79020", "filename": "gcc/c-family/c-lex.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d570872da175ccdd8f3e7326e8051fa5c3ec020a/gcc%2Fc-family%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d570872da175ccdd8f3e7326e8051fa5c3ec020a/gcc%2Fc-family%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-lex.c?ref=d570872da175ccdd8f3e7326e8051fa5c3ec020a", "patch": "@@ -595,12 +595,10 @@ interpret_integer (const cpp_token *token, unsigned int flags,\n   tree value, type;\n   enum integer_type_kind itk;\n   cpp_num integer;\n-  cpp_options *options = cpp_get_options (parse_in);\n \n   *overflow = OT_NONE;\n \n   integer = cpp_interpret_integer (parse_in, token, flags);\n-  integer = cpp_num_sign_extend (integer, options->precision);\n   if (integer.overflow)\n     *overflow = OT_OVERFLOW;\n "}]}