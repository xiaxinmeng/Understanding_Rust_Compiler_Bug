{"sha": "295d875ce02f75bf3485027a91642a2c31ab01e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk1ZDg3NWNlMDJmNzViZjM0ODUwMjdhOTE2NDJhMmMzMWFiMDFlNA==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2012-11-17T17:59:35Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2012-11-17T17:59:35Z"}, "message": "re PR rtl-optimization/55342 ([LRA,x86] Non-optimal code for simple loop with LRA)\n\n2012-11-17  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/55342\n\t* lra-assigns.c (spill_for): Try to allocate other reload pseudos\n\tbefore and after spilling.\n\nFrom-SVN: r193588", "tree": {"sha": "d47ce3fbe09125429dbe8e60b5cbc0cb23fedb6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d47ce3fbe09125429dbe8e60b5cbc0cb23fedb6b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/295d875ce02f75bf3485027a91642a2c31ab01e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/295d875ce02f75bf3485027a91642a2c31ab01e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/295d875ce02f75bf3485027a91642a2c31ab01e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/295d875ce02f75bf3485027a91642a2c31ab01e4/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e9e9638d472a0c6f4614df4abbf31f0461da6fce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9e9638d472a0c6f4614df4abbf31f0461da6fce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9e9638d472a0c6f4614df4abbf31f0461da6fce"}], "stats": {"total": 47, "additions": 24, "deletions": 23}, "files": [{"sha": "68a5ac1fdfc4a632a8c02d52e66f26ca6304155b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/295d875ce02f75bf3485027a91642a2c31ab01e4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/295d875ce02f75bf3485027a91642a2c31ab01e4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=295d875ce02f75bf3485027a91642a2c31ab01e4", "patch": "@@ -1,3 +1,9 @@\n+2012-11-17  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/55342\n+\t* lra-assigns.c (spill_for): Try to allocate other reload pseudos\n+\tbefore and after spilling.\n+\n 2012-11-16  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* doc/extend.texi: Various copy-edits to comply with GCC coding"}, {"sha": "b1a1c3d66ec248ab7d174a2008892a3efb0df3c0", "filename": "gcc/lra-assigns.c", "status": "modified", "additions": 18, "deletions": 23, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/295d875ce02f75bf3485027a91642a2c31ab01e4/gcc%2Flra-assigns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/295d875ce02f75bf3485027a91642a2c31ab01e4/gcc%2Flra-assigns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-assigns.c?ref=295d875ce02f75bf3485027a91642a2c31ab01e4", "patch": "@@ -795,9 +795,8 @@ spill_for (int regno, bitmap spilled_pseudo_bitmap)\n {\n   int i, j, n, p, hard_regno, best_hard_regno, cost, best_cost, rclass_size;\n   int reload_hard_regno, reload_cost;\n-  enum machine_mode mode, mode2;\n+  enum machine_mode mode;\n   enum reg_class rclass;\n-  HARD_REG_SET spilled_hard_regs;\n   unsigned int spill_regno, reload_regno, uid;\n   int insn_pseudos_num, best_insn_pseudos_num;\n   lra_live_range_t r;\n@@ -838,7 +837,6 @@ spill_for (int regno, bitmap spilled_pseudo_bitmap)\n \t\t\t   &try_hard_reg_pseudos[hard_regno + j]);\n \t}\n       /* Spill pseudos.\t */\n-      CLEAR_HARD_REG_SET (spilled_hard_regs);\n       EXECUTE_IF_SET_IN_BITMAP (&spill_pseudos_bitmap, 0, spill_regno, bi)\n \tif ((int) spill_regno >= lra_constraint_new_regno_start\n \t    && ! bitmap_bit_p (&lra_inheritance_pseudos, spill_regno)\n@@ -853,13 +851,6 @@ spill_for (int regno, bitmap spilled_pseudo_bitmap)\n \t{\n \t  if (bitmap_bit_p (&insn_conflict_pseudos, spill_regno))\n \t    insn_pseudos_num++;\n-\t  mode2 = PSEUDO_REGNO_MODE (spill_regno);\n-\t  update_lives (spill_regno, true);\n-\t  if (lra_dump_file != NULL)\n-\t    fprintf (lra_dump_file, \" spill %d(freq=%d)\",\n-\t\t     spill_regno, lra_reg_info[spill_regno].freq);\n-\t  add_to_hard_reg_set (&spilled_hard_regs,\n-\t\t\t       mode2, reg_renumber[spill_regno]);\n \t  for (r = lra_reg_info[spill_regno].live_ranges;\n \t       r != NULL;\n \t       r = r->next)\n@@ -877,19 +868,26 @@ spill_for (int regno, bitmap spilled_pseudo_bitmap)\n \t\t}\n \t    }\n \t}\n+      n = 0;\n+      EXECUTE_IF_SET_IN_SPARSESET (live_range_reload_inheritance_pseudos,\n+\t\t\t\t   reload_regno)\n+\tif ((int) reload_regno != regno\n+\t    && (ira_reg_classes_intersect_p\n+\t\t[rclass][regno_allocno_class_array[reload_regno]])\n+\t    && live_pseudos_reg_renumber[reload_regno] < 0\n+\t    && find_hard_regno_for (reload_regno, &cost, -1) < 0)\n+\t  sorted_reload_pseudos[n++] = reload_regno;\n+      EXECUTE_IF_SET_IN_BITMAP (&spill_pseudos_bitmap, 0, spill_regno, bi)\n+\t{\n+\t  update_lives (spill_regno, true);\n+\t  if (lra_dump_file != NULL)\n+\t    fprintf (lra_dump_file, \" spill %d(freq=%d)\",\n+\t\t     spill_regno, lra_reg_info[spill_regno].freq);\n+\t}\n       hard_regno = find_hard_regno_for (regno, &cost, -1);\n       if (hard_regno >= 0)\n \t{\n \t  assign_temporarily (regno, hard_regno);\n-\t  n = 0;\n-\t  EXECUTE_IF_SET_IN_SPARSESET (live_range_reload_inheritance_pseudos,\n-\t\t\t\t       reload_regno)\n-\t    if (live_pseudos_reg_renumber[reload_regno] < 0\n-\t\t&& (hard_reg_set_intersect_p\n-\t\t    (reg_class_contents\n-\t\t     [regno_allocno_class_array[reload_regno]],\n-\t\t     spilled_hard_regs)))\n-\t      sorted_reload_pseudos[n++] = reload_regno;\n \t  qsort (sorted_reload_pseudos, n, sizeof (int),\n \t\t reload_pseudo_compare_func);\n \t  for (j = 0; j < n; j++)\n@@ -898,10 +896,7 @@ spill_for (int regno, bitmap spilled_pseudo_bitmap)\n \t      lra_assert (live_pseudos_reg_renumber[reload_regno] < 0);\n \t      if ((reload_hard_regno\n \t\t   = find_hard_regno_for (reload_regno,\n-\t\t\t\t\t  &reload_cost, -1)) >= 0\n-\t\t  && (overlaps_hard_reg_set_p\n-\t\t      (spilled_hard_regs,\n-\t\t       PSEUDO_REGNO_MODE (reload_regno), reload_hard_regno)))\n+\t\t\t\t\t  &reload_cost, -1)) >= 0)\n \t\t{\n \t\t  if (lra_dump_file != NULL)\n \t\t    fprintf (lra_dump_file, \" assign %d(cost=%d)\","}]}