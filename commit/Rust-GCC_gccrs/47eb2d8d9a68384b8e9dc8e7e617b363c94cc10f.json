{"sha": "47eb2d8d9a68384b8e9dc8e7e617b363c94cc10f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdlYjJkOGQ5YTY4Mzg0YjhlOWRjOGU3ZTYxN2IzNjNjOTRjYzEwZg==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2007-06-06T10:22:30Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-06-06T10:22:30Z"}, "message": "bindusg.adb: Add line for @<response file> Add lines for new switches -R and -Z\n\n2007-04-20  Vincent Celier  <celier@adacore.com>\n\n\t* bindusg.adb: Add line for @<response file>\n\tAdd lines for new switches -R and -Z\n\n\t* gnatbind.adb (Gnatbind): Do not include sources from the GNAT\n\thierarchy in the list of files of the closure when -R is used\n\t(Gnatbind): Accept arguments starting with '@' to indicate response\n\tfiles and take the arguments from the response files.\n\tIf List_Closure is set, display the referenced files\n\nFrom-SVN: r125387", "tree": {"sha": "fdb8f8f89acbaf2c58ed8c7d3df6017495c6f704", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fdb8f8f89acbaf2c58ed8c7d3df6017495c6f704"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47eb2d8d9a68384b8e9dc8e7e617b363c94cc10f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47eb2d8d9a68384b8e9dc8e7e617b363c94cc10f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47eb2d8d9a68384b8e9dc8e7e617b363c94cc10f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47eb2d8d9a68384b8e9dc8e7e617b363c94cc10f/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6644b368bec2f708896c6d668ac2af2c0a7e970b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6644b368bec2f708896c6d668ac2af2c0a7e970b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6644b368bec2f708896c6d668ac2af2c0a7e970b"}], "stats": {"total": 102, "additions": 93, "deletions": 9}, "files": [{"sha": "4efb5fe19c228ccb4c9694fdb4aeadc8091a96fc", "filename": "gcc/ada/bindusg.adb", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47eb2d8d9a68384b8e9dc8e7e617b363c94cc10f/gcc%2Fada%2Fbindusg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47eb2d8d9a68384b8e9dc8e7e617b363c94cc10f/gcc%2Fada%2Fbindusg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindusg.adb?ref=47eb2d8d9a68384b8e9dc8e7e617b363c94cc10f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                B o d y                                   --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -54,6 +54,11 @@ package body Bindusg is\n       Write_Eol;\n       Write_Eol;\n \n+      --  Line for @response_file\n+\n+      Write_Line (\"  @<resp_file> Get arguments from response file\");\n+      Write_Eol;\n+\n       --  Line for -aO switch\n \n       Write_Line (\"  -aOdir    Specify library files search path\");\n@@ -176,6 +181,11 @@ package body Bindusg is\n       Write_Line (\"  -r        List restrictions that could be applied \" &\n                   \"to this partition\");\n \n+      --  Line for -R switch\n+\n+      Write_Line\n+        (\"  -R        List sources referenced in closure (implies -c)\");\n+\n       --  Line for -s switch\n \n       Write_Line (\"  -s        Require all source files to be present\");\n@@ -233,6 +243,13 @@ package body Bindusg is\n \n       --  Line for --RTS\n \n+      --  Line for -Z switch\n+\n+      Write_Line (\"  -Z        \" &\n+                  \"Zero formatting in auxiliary outputs (-e, -K, -l, -R)\");\n+\n+      --  Line for --RTS\n+\n       Write_Line (\"  --RTS=dir specify the default source and \" &\n                   \"object search path\");\n "}, {"sha": "758613da504e8abf6ab7e8b9c2f74b301d9b448f", "filename": "gcc/ada/gnatbind.adb", "status": "modified", "additions": 75, "deletions": 8, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47eb2d8d9a68384b8e9dc8e7e617b363c94cc10f/gcc%2Fada%2Fgnatbind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47eb2d8d9a68384b8e9dc8e7e617b363c94cc10f/gcc%2Fada%2Fgnatbind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatbind.adb?ref=47eb2d8d9a68384b8e9dc8e7e617b363c94cc10f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,6 +36,7 @@ with Casing;   use Casing;\n with Csets;\n with Debug;    use Debug;\n with Fmap;\n+with Fname;    use Fname;\n with Gnatvsn;  use Gnatvsn;\n with Namet;    use Namet;\n with Opt;      use Opt;\n@@ -50,6 +51,9 @@ with Targparm; use Targparm;\n with Types;    use Types;\n \n with System.Case_Util; use System.Case_Util;\n+with System.OS_Lib;    use System.OS_Lib;\n+\n+with Ada.Command_Line.Response_File; use Ada.Command_Line;\n \n procedure Gnatbind is\n \n@@ -427,7 +431,28 @@ begin\n          Next_Argv : String (1 .. Len_Arg (Next_Arg));\n       begin\n          Fill_Arg (Next_Argv'Address, Next_Arg);\n-         Scan_Bind_Arg (Next_Argv);\n+\n+         if Next_Argv'Length > 0 then\n+            if Next_Argv (1) = '@' then\n+               if Next_Argv'Length > 1 then\n+                  declare\n+                     Arguments : constant Argument_List :=\n+                                   Response_File.Arguments_From\n+                                     (Response_File_Name        =>\n+                                        Next_Argv (2 .. Next_Argv'Last),\n+                                      Recursive                 => True,\n+                                      Ignore_Non_Existing_Files => True);\n+                  begin\n+                     for J in Arguments'Range loop\n+                        Scan_Bind_Arg (Arguments (J).all);\n+                     end loop;\n+                  end;\n+               end if;\n+\n+            else\n+               Scan_Bind_Arg (Next_Argv);\n+            end if;\n+         end if;\n       end;\n \n       Next_Arg := Next_Arg + 1;\n@@ -666,7 +691,7 @@ begin\n         and then ALIs.Table (ALIs.First).Main_Program = None\n         and then not No_Main_Subprogram\n       then\n-         Error_Msg_Name_1 := Main_Lib_File;\n+         Error_Msg_File_1 := Main_Lib_File;\n          Error_Msg (\"% does not contain a unit that can be a main program\");\n       end if;\n \n@@ -689,26 +714,68 @@ begin\n          Find_Elab_Order;\n \n          if Errors_Detected = 0 then\n+            --  Display elaboration order if -l was specified\n+\n             if Elab_Order_Output then\n-               Write_Eol;\n-               Write_Str (\"ELABORATION ORDER\");\n-               Write_Eol;\n+               if not Zero_Formatting then\n+                  Write_Eol;\n+                  Write_Str (\"ELABORATION ORDER\");\n+                  Write_Eol;\n+               end if;\n \n                for J in Elab_Order.First .. Elab_Order.Last loop\n                   if not Units.Table (Elab_Order.Table (J)).SAL_Interface then\n-                     Write_Str (\"   \");\n+                     if not Zero_Formatting then\n+                        Write_Str (\"   \");\n+                     end if;\n+\n                      Write_Unit_Name\n                        (Units.Table (Elab_Order.Table (J)).Uname);\n                      Write_Eol;\n                   end if;\n                end loop;\n \n-               Write_Eol;\n+               if not Zero_Formatting then\n+                  Write_Eol;\n+               end if;\n             end if;\n \n             if not Check_Only then\n                Gen_Output_File (Output_File_Name.all);\n             end if;\n+\n+            --  Display list of sources in the closure (except predefined\n+            --  sources) if -R was used.\n+\n+            if List_Closure then\n+               if not Zero_Formatting then\n+                  Write_Eol;\n+                  Write_Str (\"REFERENCED SOURCES\");\n+                  Write_Eol;\n+               end if;\n+\n+               for J in reverse Elab_Order.First .. Elab_Order.Last loop\n+\n+                  --  Do not include the sources of the runtime\n+\n+                  if not Is_Internal_File_Name\n+                           (Units.Table (Elab_Order.Table (J)).Sfile)\n+                  then\n+                     if not Zero_Formatting then\n+                        Write_Str (\"   \");\n+                     end if;\n+\n+                     Write_Str\n+                       (Get_Name_String\n+                          (Units.Table (Elab_Order.Table (J)).Sfile));\n+                     Write_Eol;\n+                  end if;\n+               end loop;\n+\n+               if not Zero_Formatting then\n+                  Write_Eol;\n+               end if;\n+            end if;\n          end if;\n       end if;\n "}]}