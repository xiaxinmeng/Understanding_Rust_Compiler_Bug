{"sha": "64a40f1320c0edc160796266876958ffae8fdd96", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRhNDBmMTMyMGMwZWRjMTYwNzk2MjY2ODc2OTU4ZmZhZThmZGQ5Ng==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2019-03-21T19:44:45Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2019-03-21T19:44:45Z"}, "message": "[PR72741] Encode OpenACC 'routine' directive's level of parallelism inside Fortran module files\n\nIf 'use'ing with an old GCC a new module file (with OpenACC 'routine'\ndirective's level of parallelism encoded), then that expectedly fails as\nfollows:\n\n    f951: Fatal Error: Reading module 'routine_module_mod_1' at line 27 column 21: find_enum(): Enum not found\n\nIf 'use'ing with a new GCC an old module file (without OpenACC 'routine'\ndirective's level of parallelism encoded), then that (silently) continues to\naccept the module file, and will proceed with the previous, erroneous behavior.\n\nThese seem to be acceptable compromises, instead of incrementing 'MOD_VERSION'.\n\n\tgcc/fortran/\n\tPR fortran/72741\n\t* module.c (verify_OACC_ROUTINE_LOP_NONE): New function.\n\t(enum ab_attribute): Add AB_OACC_ROUTINE_LOP_GANG,\n\tAB_OACC_ROUTINE_LOP_WORKER, AB_OACC_ROUTINE_LOP_VECTOR,\n\tAB_OACC_ROUTINE_LOP_SEQ.\n\t(attr_bits): Add these.\n\t(mio_symbol_attribute): Handle these.\n\tgcc/testsuite/\n\tPR fortran/72741\n\t* gfortran.dg/goacc/routine-module-1.f90: New file.\n\t* gfortran.dg/goacc/routine-module-2.f90: Likewise.\n\t* gfortran.dg/goacc/routine-module-mod-1.f90: Likewise.\n\nFrom-SVN: r269855", "tree": {"sha": "c6693f7c88b6234ff4e8278093dafbab7279e3c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6693f7c88b6234ff4e8278093dafbab7279e3c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64a40f1320c0edc160796266876958ffae8fdd96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64a40f1320c0edc160796266876958ffae8fdd96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64a40f1320c0edc160796266876958ffae8fdd96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64a40f1320c0edc160796266876958ffae8fdd96/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "33fc9dc962db960bde7473ef392ad3f9b4701ced", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33fc9dc962db960bde7473ef392ad3f9b4701ced", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33fc9dc962db960bde7473ef392ad3f9b4701ced"}], "stats": {"total": 229, "additions": 228, "deletions": 1}, "files": [{"sha": "2afab3920bda413c51ea83541bfee368b4361e55", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64a40f1320c0edc160796266876958ffae8fdd96/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64a40f1320c0edc160796266876958ffae8fdd96/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=64a40f1320c0edc160796266876958ffae8fdd96", "patch": "@@ -1,3 +1,13 @@\n+2019-03-21  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR fortran/72741\n+\t* module.c (verify_OACC_ROUTINE_LOP_NONE): New function.\n+\t(enum ab_attribute): Add AB_OACC_ROUTINE_LOP_GANG,\n+\tAB_OACC_ROUTINE_LOP_WORKER, AB_OACC_ROUTINE_LOP_VECTOR,\n+\tAB_OACC_ROUTINE_LOP_SEQ.\n+\t(attr_bits): Add these.\n+\t(mio_symbol_attribute): Handle these.\n+\n 2019-03-20  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/71861"}, {"sha": "3d4b17b599ee1495ad7a0289ad21d4ff202701db", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 56, "deletions": 1, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64a40f1320c0edc160796266876958ffae8fdd96/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64a40f1320c0edc160796266876958ffae8fdd96/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=64a40f1320c0edc160796266876958ffae8fdd96", "patch": "@@ -2011,7 +2011,9 @@ enum ab_attribute\n   AB_OACC_DECLARE_COPYIN, AB_OACC_DECLARE_DEVICEPTR,\n   AB_OACC_DECLARE_DEVICE_RESIDENT, AB_OACC_DECLARE_LINK,\n   AB_OMP_DECLARE_TARGET_LINK, AB_PDT_KIND, AB_PDT_LEN, AB_PDT_TYPE,\n-  AB_PDT_TEMPLATE, AB_PDT_ARRAY, AB_PDT_STRING\n+  AB_PDT_TEMPLATE, AB_PDT_ARRAY, AB_PDT_STRING,\n+  AB_OACC_ROUTINE_LOP_GANG, AB_OACC_ROUTINE_LOP_WORKER,\n+  AB_OACC_ROUTINE_LOP_VECTOR, AB_OACC_ROUTINE_LOP_SEQ\n };\n \n static const mstring attr_bits[] =\n@@ -2081,6 +2083,10 @@ static const mstring attr_bits[] =\n     minit (\"PDT_TEMPLATE\", AB_PDT_TEMPLATE),\n     minit (\"PDT_ARRAY\", AB_PDT_ARRAY),\n     minit (\"PDT_STRING\", AB_PDT_STRING),\n+    minit (\"OACC_ROUTINE_LOP_GANG\", AB_OACC_ROUTINE_LOP_GANG),\n+    minit (\"OACC_ROUTINE_LOP_WORKER\", AB_OACC_ROUTINE_LOP_WORKER),\n+    minit (\"OACC_ROUTINE_LOP_VECTOR\", AB_OACC_ROUTINE_LOP_VECTOR),\n+    minit (\"OACC_ROUTINE_LOP_SEQ\", AB_OACC_ROUTINE_LOP_SEQ),\n     minit (NULL, -1)\n };\n \n@@ -2128,6 +2134,15 @@ DECL_MIO_NAME (sym_intent)\n DECL_MIO_NAME (inquiry_type)\n #undef DECL_MIO_NAME\n \n+/* Verify OACC_ROUTINE_LOP_NONE.  */\n+\n+static void\n+verify_OACC_ROUTINE_LOP_NONE (enum oacc_routine_lop lop)\n+{\n+  if (lop != OACC_ROUTINE_LOP_NONE)\n+    bad_module (\"Unsupported: multiple OpenACC 'routine' levels of parallelism\");\n+}\n+\n /* Symbol attributes are stored in list with the first three elements\n    being the enumerated fields, while the remaining elements (if any)\n    indicate the individual attribute bits.  The access field is not\n@@ -2292,6 +2307,30 @@ mio_symbol_attribute (symbol_attribute *attr)\n \tMIO_NAME (ab_attribute) (AB_PDT_ARRAY, attr_bits);\n       if (attr->pdt_string)\n \tMIO_NAME (ab_attribute) (AB_PDT_STRING, attr_bits);\n+      switch (attr->oacc_routine_lop)\n+\t{\n+\tcase OACC_ROUTINE_LOP_NONE:\n+\t  /* This is the default anyway, and for maintaining compatibility with\n+\t     the current MOD_VERSION, we're not emitting anything in that\n+\t     case.  */\n+\t  break;\n+\tcase OACC_ROUTINE_LOP_GANG:\n+\t  MIO_NAME (ab_attribute) (AB_OACC_ROUTINE_LOP_GANG, attr_bits);\n+\t  break;\n+\tcase OACC_ROUTINE_LOP_WORKER:\n+\t  MIO_NAME (ab_attribute) (AB_OACC_ROUTINE_LOP_WORKER, attr_bits);\n+\t  break;\n+\tcase OACC_ROUTINE_LOP_VECTOR:\n+\t  MIO_NAME (ab_attribute) (AB_OACC_ROUTINE_LOP_VECTOR, attr_bits);\n+\t  break;\n+\tcase OACC_ROUTINE_LOP_SEQ:\n+\t  MIO_NAME (ab_attribute) (AB_OACC_ROUTINE_LOP_SEQ, attr_bits);\n+\t  break;\n+\tcase OACC_ROUTINE_LOP_ERROR:\n+\t  /* ... intentionally omitted here; it's only unsed internally.  */\n+\tdefault:\n+\t  gcc_unreachable ();\n+\t}\n \n       mio_rparen ();\n \n@@ -2503,6 +2542,22 @@ mio_symbol_attribute (symbol_attribute *attr)\n \t    case AB_PDT_STRING:\n \t      attr->pdt_string = 1;\n \t      break;\n+\t    case AB_OACC_ROUTINE_LOP_GANG:\n+\t      verify_OACC_ROUTINE_LOP_NONE (attr->oacc_routine_lop);\n+\t      attr->oacc_routine_lop = OACC_ROUTINE_LOP_GANG;\n+\t      break;\n+\t    case AB_OACC_ROUTINE_LOP_WORKER:\n+\t      verify_OACC_ROUTINE_LOP_NONE (attr->oacc_routine_lop);\n+\t      attr->oacc_routine_lop = OACC_ROUTINE_LOP_WORKER;\n+\t      break;\n+\t    case AB_OACC_ROUTINE_LOP_VECTOR:\n+\t      verify_OACC_ROUTINE_LOP_NONE (attr->oacc_routine_lop);\n+\t      attr->oacc_routine_lop = OACC_ROUTINE_LOP_VECTOR;\n+\t      break;\n+\t    case AB_OACC_ROUTINE_LOP_SEQ:\n+\t      verify_OACC_ROUTINE_LOP_NONE (attr->oacc_routine_lop);\n+\t      attr->oacc_routine_lop = OACC_ROUTINE_LOP_SEQ;\n+\t      break;\n \t    }\n \t}\n     }"}, {"sha": "8afdf3e980e9b93341622e381b0da23bbd23a1f6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64a40f1320c0edc160796266876958ffae8fdd96/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64a40f1320c0edc160796266876958ffae8fdd96/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=64a40f1320c0edc160796266876958ffae8fdd96", "patch": "@@ -1,5 +1,10 @@\n 2019-03-21  Thomas Schwinge  <thomas@codesourcery.com>\n \n+\tPR fortran/72741\n+\t* gfortran.dg/goacc/routine-module-1.f90: New file.\n+\t* gfortran.dg/goacc/routine-module-2.f90: Likewise.\n+\t* gfortran.dg/goacc/routine-module-mod-1.f90: Likewise.\n+\n \t* gfortran.dg/goacc/goacc.exp (dg-compile-aux-modules): New proc.\n \n \tPR fortran/56408"}, {"sha": "4e81f11fec86dac8153d454f542b3427ff964b57", "filename": "gcc/testsuite/gfortran.dg/goacc/routine-module-1.f90", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64a40f1320c0edc160796266876958ffae8fdd96/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Froutine-module-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64a40f1320c0edc160796266876958ffae8fdd96/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Froutine-module-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Froutine-module-1.f90?ref=64a40f1320c0edc160796266876958ffae8fdd96", "patch": "@@ -0,0 +1,47 @@\n+! Valid use of routines defined inside a Fortran module.\n+\n+! { dg-compile-aux-modules \"routine-module-mod-1.f90\" }\n+! { dg-additional-options \"-fopt-info-optimized-omp\" }\n+\n+program main\n+  use routine_module_mod_1\n+  implicit none\n+\n+  integer :: i\n+\n+  call pl_1\n+\n+  !$acc parallel loop seq ! { dg-message \"optimized: assigned OpenACC seq loop parallelism\" }\n+  do i = 1, 10\n+     call s_1 ! { dg-message \"optimized: assigned OpenACC seq loop parallelism\" }\n+     call s_2 ! { dg-message \"optimized: assigned OpenACC seq loop parallelism\" }\n+     call g_1 ! { dg-message \"optimized: assigned OpenACC gang worker vector loop parallelism\" }\n+     call w_1 ! { dg-message \"optimized: assigned OpenACC worker vector loop parallelism\" }\n+     call v_1 ! { dg-message \"optimized: assigned OpenACC vector loop parallelism\" }\n+  end do\n+  !$acc end parallel loop\n+\n+  !$acc parallel loop gang ! { dg-message \"optimized: assigned OpenACC gang loop parallelism\" }\n+  do i = 1, 10\n+     call s_1 ! { dg-message \"optimized: assigned OpenACC seq loop parallelism\" }\n+     call s_2 ! { dg-message \"optimized: assigned OpenACC seq loop parallelism\" }\n+     call w_1 ! { dg-message \"optimized: assigned OpenACC worker vector loop parallelism\" }\n+     call v_1 ! { dg-message \"optimized: assigned OpenACC vector loop parallelism\" }\n+  end do\n+  !$acc end parallel loop\n+\n+  !$acc parallel loop worker ! { dg-message \"optimized: assigned OpenACC worker loop parallelism\" }\n+  do i = 1, 10\n+     call s_1 ! { dg-message \"optimized: assigned OpenACC seq loop parallelism\" }\n+     call s_2 ! { dg-message \"optimized: assigned OpenACC seq loop parallelism\" }\n+     call v_1 ! { dg-message \"optimized: assigned OpenACC vector loop parallelism\" }\n+  end do\n+  !$acc end parallel loop\n+\n+  !$acc parallel loop vector ! { dg-message \"optimized: assigned OpenACC vector loop parallelism\" }\n+  do i = 1, 10\n+     call s_1 ! { dg-message \"optimized: assigned OpenACC seq loop parallelism\" }\n+     call s_2 ! { dg-message \"optimized: assigned OpenACC seq loop parallelism\" }\n+  end do\n+  !$acc end parallel loop\n+end program main"}, {"sha": "eae0807643c99d1b3d5415389114d96aae30563f", "filename": "gcc/testsuite/gfortran.dg/goacc/routine-module-2.f90", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64a40f1320c0edc160796266876958ffae8fdd96/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Froutine-module-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64a40f1320c0edc160796266876958ffae8fdd96/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Froutine-module-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Froutine-module-2.f90?ref=64a40f1320c0edc160796266876958ffae8fdd96", "patch": "@@ -0,0 +1,31 @@\n+! Invalid use of routines defined inside a Fortran module.\n+\n+! { dg-compile-aux-modules \"routine-module-mod-1.f90\" }\n+\n+program main\n+  use routine_module_mod_1\n+  implicit none\n+\n+  integer :: i\n+\n+  !$acc parallel loop gang\n+  do i = 1, 10\n+     call g_1 ! { dg-error \"routine call uses same OpenACC parallelism as containing loop\" }\n+  end do\n+  !$acc end parallel loop\n+\n+  !$acc parallel loop worker\n+  do i = 1, 10\n+     call g_1 ! { dg-error \"routine call uses same OpenACC parallelism as containing loop\" }\n+     call w_1 ! { dg-error \"routine call uses same OpenACC parallelism as containing loop\" }\n+  end do\n+  !$acc end parallel loop\n+\n+  !$acc parallel loop vector\n+  do i = 1, 10\n+     call g_1 ! { dg-error \"routine call uses same OpenACC parallelism as containing loop\" }\n+     call w_1 ! { dg-error \"routine call uses same OpenACC parallelism as containing loop\" }\n+     call v_1 ! { dg-error \"routine call uses same OpenACC parallelism as containing loop\" }\n+  end do\n+  !$acc end parallel loop\n+end program main"}, {"sha": "3855b8c88596c7ff3a93be7b713b80613d578ad2", "filename": "gcc/testsuite/gfortran.dg/goacc/routine-module-mod-1.f90", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64a40f1320c0edc160796266876958ffae8fdd96/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Froutine-module-mod-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64a40f1320c0edc160796266876958ffae8fdd96/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Froutine-module-mod-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Froutine-module-mod-1.f90?ref=64a40f1320c0edc160796266876958ffae8fdd96", "patch": "@@ -0,0 +1,79 @@\n+! OpenACC 'routine' directives inside a Fortran module.\n+\n+! { dg-additional-options \"-fopt-info-optimized-omp\" }\n+\n+module routine_module_mod_1\n+contains\n+  subroutine s_1\n+    implicit none\n+    !$acc routine\n+\n+    integer :: i\n+\n+    !$acc loop ! { dg-message \"optimized: assigned OpenACC seq loop parallelism\" }\n+    ! { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n+    do i = 1, 3\n+    end do\n+  end subroutine s_1\n+\n+  subroutine s_2\n+    implicit none\n+    !$acc routine seq\n+\n+    integer :: i\n+\n+    !$acc loop ! { dg-message \"optimized: assigned OpenACC seq loop parallelism\" }\n+    ! { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n+    do i = 1, 3\n+    end do\n+  end subroutine s_2\n+\n+  subroutine v_1\n+    implicit none\n+    !$acc routine vector\n+\n+    integer :: i\n+\n+    !$acc loop ! { dg-message \"optimized: assigned OpenACC vector loop parallelism\" }\n+    do i = 1, 3\n+    end do\n+  end subroutine v_1\n+\n+  subroutine w_1\n+    implicit none\n+    !$acc routine worker\n+\n+    integer :: i\n+\n+    !$acc loop ! { dg-message \"optimized: assigned OpenACC worker vector loop parallelism\" }\n+    do i = 1, 3\n+    end do\n+  end subroutine w_1\n+\n+  subroutine g_1\n+    implicit none\n+    !$acc routine gang\n+\n+    integer :: i\n+\n+    !$acc loop ! { dg-message \"optimized: assigned OpenACC gang vector loop parallelism\" }\n+    do i = 1, 3\n+    end do\n+  end subroutine g_1\n+\n+  subroutine pl_1\n+    implicit none\n+\n+    integer :: i\n+\n+    !$acc parallel loop ! { dg-message \"optimized: assigned OpenACC seq loop parallelism\" }\n+    ! { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n+    do i = 1, 3\n+       call s_1 ! { dg-message \"optimized: assigned OpenACC seq loop parallelism\" }\n+       call s_2 ! { dg-message \"optimized: assigned OpenACC seq loop parallelism\" }\n+       call v_1 ! { dg-message \"optimized: assigned OpenACC vector loop parallelism\" }\n+       call w_1 ! { dg-message \"optimized: assigned OpenACC worker vector loop parallelism\" }\n+       call g_1 ! { dg-message \"optimized: assigned OpenACC gang worker vector loop parallelism\" }\n+    end do\n+  end subroutine pl_1\n+end module routine_module_mod_1"}]}