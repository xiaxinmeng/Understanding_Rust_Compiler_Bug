{"sha": "7ffedfee02df8cf8123b4fe756bdd1f820c6fa47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZmZWRmZWUwMmRmOGNmODEyM2I0ZmU3NTZiZGQxZjgyMGM2ZmE0Nw==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2016-08-05T01:29:05Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2016-08-05T01:29:05Z"}, "message": "[RS6000] rs6000_preferred_reload_class\n\n\t* config/rs6000/rs6000.c (rs6000_preferred_reload_class): Delete\n\tcode accidentally committed 2016-05-02 providing class when given\n\tNO_REGS.\n\nFrom-SVN: r239161", "tree": {"sha": "ce765379a691f06f3625ca6aaf306e6880e6ad58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce765379a691f06f3625ca6aaf306e6880e6ad58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ffedfee02df8cf8123b4fe756bdd1f820c6fa47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ffedfee02df8cf8123b4fe756bdd1f820c6fa47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ffedfee02df8cf8123b4fe756bdd1f820c6fa47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ffedfee02df8cf8123b4fe756bdd1f820c6fa47/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eedd464b2c0a126196d9a1313220b3cc50bc2fd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eedd464b2c0a126196d9a1313220b3cc50bc2fd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eedd464b2c0a126196d9a1313220b3cc50bc2fd9"}], "stats": {"total": 27, "additions": 7, "deletions": 20}, "files": [{"sha": "30ef9f36a7d73f53e1be3d4f7b59bffba7801def", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ffedfee02df8cf8123b4fe756bdd1f820c6fa47/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ffedfee02df8cf8123b4fe756bdd1f820c6fa47/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7ffedfee02df8cf8123b4fe756bdd1f820c6fa47", "patch": "@@ -1,3 +1,9 @@\n+2016-08-05  Alan Modra  <amodra@gmail.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_preferred_reload_class): Delete\n+\tcode accidentally committed 2016-05-02 providing class when given\n+\tNO_REGS.\n+\n 2016-08-04  Patrick Palka  <ppalka@gcc.gnu.org>\n \n \t* tree-vrp.c (simplify_switch_using_ranges): Try to truncate\n@@ -15603,7 +15609,7 @@\n 2016-02-14  Alan Modra  <amodra@gmail.com>\n \n \tPR target/68973\n-\t* reloads.c (find_reloads_address_1): For pre/post-inc/dec\n+\t* reload.c (find_reloads_address_1): For pre/post-inc/dec\n \twith an invalid hard reg, reload just the reg not the entire\n \tpre/post-inc/dec address expression.\n "}, {"sha": "779ba1fb002520b11a8a2cdb0a1b0d13b89f71d6", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ffedfee02df8cf8123b4fe756bdd1f820c6fa47/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ffedfee02df8cf8123b4fe756bdd1f820c6fa47/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=7ffedfee02df8cf8123b4fe756bdd1f820c6fa47", "patch": "@@ -20407,25 +20407,6 @@ rs6000_preferred_reload_class (rtx x, enum reg_class rclass)\n       return NO_REGS;\n     }\n \n-  /* If we haven't picked a register class, and the type is a vector or\n-     floating point type, prefer to use the VSX, FPR, or Altivec register\n-     classes.  */\n-  if (rclass == NO_REGS)\n-    {\n-      if (TARGET_VSX && VECTOR_MEM_VSX_OR_P8_VECTOR_P (mode))\n-\treturn VSX_REGS;\n-\n-      if (TARGET_ALTIVEC && VECTOR_MEM_ALTIVEC_P (mode))\n-\treturn ALTIVEC_REGS;\n-\n-      if (DECIMAL_FLOAT_MODE_P (mode))\n-\treturn TARGET_DFP ? FLOAT_REGS : NO_REGS;\n-\n-      if (TARGET_FPRS && TARGET_HARD_FLOAT && FLOAT_MODE_P (mode)\n-\t  && (reg_addr[mode].addr_mask[RELOAD_REG_FPR] & RELOAD_REG_VALID) == 0)\n-\treturn FLOAT_REGS;\n-    }\n-\n   if (GET_MODE_CLASS (mode) == MODE_INT && rclass == NON_SPECIAL_REGS)\n     return GENERAL_REGS;\n "}]}