{"sha": "2d53d9ebe7443d7fc11ef7e635aaca15cd0f500f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ1M2Q5ZWJlNzQ0M2Q3ZmMxMWVmN2U2MzVhYWNhMTVjZDBmNTAwZg==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-12-27T07:26:00Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-12-27T07:26:00Z"}, "message": "re PR libstdc++/3829 (missing template instantiations)\n\n2001-12-27  Phil Edwards  <pme@gcc.gnu.org>\n\n\tPR libstdc++/3829\n\t* src/misc-inst.cc:  Many additional I/O-related instantiations.\n\t* testsuite/27_io/instantiations.cc:  New file.\n\nFrom-SVN: r48324", "tree": {"sha": "d18406ff2b15a17ed0dbfc1e7b6295f787ffbb7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d18406ff2b15a17ed0dbfc1e7b6295f787ffbb7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d53d9ebe7443d7fc11ef7e635aaca15cd0f500f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d53d9ebe7443d7fc11ef7e635aaca15cd0f500f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d53d9ebe7443d7fc11ef7e635aaca15cd0f500f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d53d9ebe7443d7fc11ef7e635aaca15cd0f500f/comments", "author": null, "committer": null, "parents": [{"sha": "7f729bc6b88d155bf60665d706350c7847345c98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f729bc6b88d155bf60665d706350c7847345c98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f729bc6b88d155bf60665d706350c7847345c98"}], "stats": {"total": 104, "additions": 104, "deletions": 0}, "files": [{"sha": "ffdc436a8690c0518d87d1748e18a1899365d1c1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d53d9ebe7443d7fc11ef7e635aaca15cd0f500f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d53d9ebe7443d7fc11ef7e635aaca15cd0f500f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2d53d9ebe7443d7fc11ef7e635aaca15cd0f500f", "patch": "@@ -1,3 +1,9 @@\n+2001-12-27  Phil Edwards  <pme@gcc.gnu.org>\n+\n+\tPR libstdc++/3829\n+\t* src/misc-inst.cc:  Many additional I/O-related instantiations.\n+\t* testsuite/27_io/instantiations.cc:  New file.\n+\n 2001-12-26  Benjamin Kosnik  <bkoz@waller.constant.com>\n \n \t* testsuite/24_iterators/insert_iterator.cc (test02): Add."}, {"sha": "ab2f2aa6385462794ba926f32ef9812e1124e725", "filename": "libstdc++-v3/src/misc-inst.cc", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d53d9ebe7443d7fc11ef7e635aaca15cd0f500f/libstdc%2B%2B-v3%2Fsrc%2Fmisc-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d53d9ebe7443d7fc11ef7e635aaca15cd0f500f/libstdc%2B%2B-v3%2Fsrc%2Fmisc-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fmisc-inst.cc?ref=2d53d9ebe7443d7fc11ef7e635aaca15cd0f500f", "patch": "@@ -44,6 +44,7 @@\n #include <bits/std_istream.h>\n #include <bits/std_ostream.h>\n #include <bits/std_string.h>\n+#include <bits/std_iomanip.h>\n \n // NB: unnecessary if the .h headers include these\n #ifndef  _GLIBCPP_FULLY_COMPLIANT_HEADERS\n@@ -93,6 +94,17 @@ namespace std\n #endif\n \n \n+  //\n+  // iomanip\n+  //\n+  template class _Setfill<char>;\n+  template _Setfill<char> setfill(char);\n+#ifdef _GLIBCPP_USE_WCHAR_T\n+  template class _Setfill<wchar_t>;\n+  template _Setfill<wchar_t> setfill(wchar_t);\n+#endif\n+\n+\n   //\n   // istream\n   //\n@@ -104,11 +116,20 @@ namespace std\n   template istream& operator>>(istream&, char*);\n   template istream& operator>>(istream&, unsigned char*);\n   template istream& operator>>(istream&, signed char*);\n+\n+  template istream& operator>>(istream&, _Setiosflags);\n+  template istream& operator>>(istream&, _Resetiosflags);\n+  template istream& operator>>(istream&, _Setbase);\n+  template istream& operator>>(istream&, _Setfill<char>);\n+  template istream& operator>>(istream&, _Setprecision);\n+  template istream& operator>>(istream&, _Setw);\n+\n #ifdef _GLIBCPP_USE_WCHAR_T\n   template class basic_istream<wchar_t>;\n   template wistream& ws(wistream&);\n   template wistream& operator>>(wistream&, wchar_t&);\n   template wistream& operator>>(wistream&, wchar_t*);\n+  template wistream& operator>>(wistream&, _Setfill<wchar_t>);\n #endif\n \n \n@@ -125,6 +146,14 @@ namespace std\n   template ostream& operator<<(ostream&, const char*);\n   template ostream& operator<<(ostream&, const unsigned char*);\n   template ostream& operator<<(ostream&, const signed char*);\n+\n+  template ostream& operator<<(ostream&, _Setiosflags);\n+  template ostream& operator<<(ostream&, _Resetiosflags);\n+  template ostream& operator<<(ostream&, _Setbase);\n+  template ostream& operator<<(ostream&, _Setfill<char>);\n+  template ostream& operator<<(ostream&, _Setprecision);\n+  template ostream& operator<<(ostream&, _Setw);\n+\n #ifdef _GLIBCPP_USE_WCHAR_T\n   template class basic_ostream<wchar_t>;\n   template wostream& endl(wostream&);\n@@ -134,6 +163,7 @@ namespace std\n   template wostream& operator<<(wostream&, char);\n   template wostream& operator<<(wostream&, const wchar_t*);\n   template wostream& operator<<(wostream&, const char*);\n+  template wostream& operator<<(wostream&, _Setfill<wchar_t>);\n #endif\n   \n "}, {"sha": "6f87982c98022fed8e50d1bf5e2e5f4f8c015ae9", "filename": "libstdc++-v3/testsuite/27_io/instantiations.cc", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d53d9ebe7443d7fc11ef7e635aaca15cd0f500f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Finstantiations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d53d9ebe7443d7fc11ef7e635aaca15cd0f500f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Finstantiations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Finstantiations.cc?ref=2d53d9ebe7443d7fc11ef7e635aaca15cd0f500f", "patch": "@@ -0,0 +1,68 @@\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// Some members need to be explicitly instantiated, so that users can build\n+// their own code with -fno-implicit-templates and not suffer from a zillion\n+// link errors.\n+\n+// { dg-options \"-fno-implicit-templates\" }\n+\n+#include <fstream>\n+#include <istream>\n+#include <ostream>\n+#include <sstream>\n+#include <iomanip>\n+#include <testsuite_hooks.h>\n+\n+\n+// PR libstdc++/3829\n+void\n+test01()\n+{\n+  using namespace std;\n+  string x (\"   this is text\");\n+  istringstream  sin (x);\n+  ostringstream  sout;\n+\n+  // same order as in bits/std_iomanip.h\n+  sin >> resetiosflags(ios_base::dec)\n+      >> setiosflags(ios_base::dec)\n+      >> setbase(ios_base::dec)\n+      >> setfill('c')\n+      >> setprecision(5)\n+      >> setw(20)\n+      >> ws;\n+  VERIFY(sin);\n+\n+  sout << resetiosflags(ios_base::dec)\n+       << setiosflags(ios_base::dec)\n+       << setbase(ios_base::dec)\n+       << setfill('c')\n+       << setprecision(5)\n+       << setw(20)\n+       << ends << flush << endl;\n+  VERIFY(sout);\n+}\n+\n+\n+int\n+main()\n+{\n+  test01();\n+  return 0;\n+}"}]}