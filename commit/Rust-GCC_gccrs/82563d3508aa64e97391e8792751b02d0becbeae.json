{"sha": "82563d3508aa64e97391e8792751b02d0becbeae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI1NjNkMzUwOGFhNjRlOTczOTFlODc5Mjc1MWIwMmQwYmVjYmVhZQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2004-08-20T10:21:02Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2004-08-20T10:21:02Z"}, "message": "configure.ac (mips*-*-*): Print an error if not using GAS.\n\n\t* configure.ac (mips*-*-*): Print an error if not using GAS.\n\t* configure: Regenerated.\n\t* doc/install.texi: Remove irix5 bullet from --with-gnu-as.  Remove\n\tcomments about buggy MIPSpro assemblers.\n\t* config.gcc (mips-sgi-irix[56]*): Combine stanzas.  Include elfos.h\n\tbefore mips.h and iris.h after it.  Use t-iris and t-slibgcc-irix.\n\tUse iris5.h only for IRIX 5 configs.  Use iris6.h and t-iris6 for\n\tIRIX 6 configs.  Define IRIX_USING_GNU_LD if using GNU ld.\n\t* config/mips/iris5.h (TARGET_IRIX, SWITCHES_NEED_SPACES)\n\t(DEFAULT_SIGNED_CHAR, WORD_SWITCH_TAKES_ARG, SUBTARGET_CC1_SPEC)\n\t(NO_IMPLICIT_EXTERN_C, MIPS_DEFAULT_GVALUE)\n\t(TARGET_ASM_EXTERNAL_LIBCALL): Move to iris.h.\n\t(WCHAR_TYPE, WCHAR_TYPE_SIZE, TARGET_OS_CPP_BUILTINS): Delete in favor\n\tof more general IRIX 6 definitions.\n\t(OBJECT_FORMAT_ELF, ASM_OUTPUT_ASCII, ASM_WEAKEN_LABEL)\n\t(HANDLE_SYSV_PRAGMA): Delete in favor of elfos.h definitions.\n\t(TARGET_IRIX5, ABICALLS_ASM_OP, BSS_SECTION_ASM_OP, HAS_INIT_SECTION)\n\t(LD_INIT_SWITCH, LD_FINI_SWITCH, SUBTARGET_ASM_OPTIMIZING_SPEC)\n\t(ASM_FINAL_SPEC, DBX_DEBUGGING_INFO, MIPS_DEBUGGING_INFO)\n\t(PREFERRED_DEBUGGING_TYPE, DWARF2_UNWIND_INFO, SET_FILE_NUMBER)\n\t(LABEL_AFTER_LOC, DOLLARS_IN_IDENTIFIERS, NO_DOLLAR_IN_LABEL)\n\t(TARGET_ASM_NAMED_SECTION, EXTRA_SECTION_FUNCTIONS)\n\t(ASM_DECLARE_FUNCTION_SIZE, ASM_OUTPUT_WEAK_ALIAS)\n\t(SUBTARGET_EXTRA_SPECS): Delete definitions or undefs.\n\t(LINK_SPEC): Move most of definition to iris.h.\n\t(SUBTARGET_LINK_SPEC): New macro.\n\t(IRIX_STARTFILE_SPEC): Fold into...\n\t(STARTFILE_SPEC): ...here.\n\t(IRIX_ENDFILE_SPEC): Fold into...\n\t(ENDFILE_SPEC): ...here.\n\t* config/mips/iris6.h (TARGET_IRIX5): Remove override.\n\t(WCHAR_TYPE, WCHAR_TYPE_SIZE, WINT_TYPE, WINT_TYPE_SIZE)\n\t(DWARF_OFFSET_SIZE, DWARF_INITIAL_LENGTH_SIZE, SET_ASM_OP)\n\t(LINK_ELIMINATE_DUPLICATE_LDIRECTORIES, ASM_DECLARE_OBJECT_NAME)\n\t(ASM_FINISH_DECLARE_OBJECT, LOCAL_LABEL_PREFIX): Move to iris.h.\n\t(TARGET_OS_CPP_BUILTINS): Likewise.  Guard IRIX6-specific bits.\n\t(DWARF2_UNWIND_INFO, DWARF2_GENERATE_TEXT_SECTION_LABEL)\n\t(SUBTARGET_CPP_SPEC, DWARF2_DEBUGGING_INFO, MIPS_DEBUGGING_INFO)\n\t(PREFERRED_DEBUGGING_TYPE, DWARF2_FRAME_INFO, MD_EXEC_PREFIX)\n\t(ASM_DECLARE_FUNCTION_NAME, ASM_DECLARE_FUNCTION_SIZE)\n\t(FUNCTION_NAME_ALREADY_DECLARED, SUPPORTS_INIT_PRIORITY)\n\t(POPSECTION_ASM_OP, SUBTARGET_ASM_SPEC, SUBTARGET_MIPS_AS_ASM_SPEC)\n\t(SUBTARGET_ASM_DEBUGGING_SPEC, SUBTARGET_ASM_OPTIMIZING_SPEC)\n\t(BSS_SECTION_ASM_OP*, READONLY_DATA_SECTION_ASM_OP*)\n\t(EH_FRAME_SECTION_NAME, MUST_USE_SJLJ_EXCEPTIONS, CTORS_SECTION_ASM_OP)\n\t(DTORS_SECTION_ASM_OP, TARGET_ASM_NAMED_SECTION, EH_FRAME_SECTION_NAME)\n\t(ASM_OUTPUT_ALIGN, ASM_OUTPUT_FILENAME, ASM_OUTPUT_ALIGNED_LOCAL)\n\t(ASM_OUTPUT_ALIGNED_BSS): Remove definitions or undefs.\n\t(TARGET_IRIX6): Define to 1.\n\t(DRIVER_SELF_SPECS): Define.\n\t(DWARF2_FRAME_INFO): Define to 1 rather than !TARGET_SGI_O32_AS.\n\t(SUBTARGET_CC1_SPEC): Remove in favor of DRIVER_SELF_SPECS.\n\t(SUBTARGET_LINK_SPEC): New macro.\n\t(IRIX_STARTFILE_SPEC): Fold into...\n\t(STARTFILE_SPEC): ...here.  Remove !mabi=* case.\n\t(SUBTARGET_{,DONT_}WARN_UNUSED_SPEC): New macros.\n\t(LIB_SPEC, LIBGCC_SPEC): Use them.\n\t(LIB_SPEC): Remove !mabi=* case.\n\t(IRIX_ENDFILE_SPEC): Fold into...\n\t(ENDFILE_SPEC): ...here.  Remove !mabi=* case.\n\t* config/mips/mips-protos.h (irix_output_external_libcall): Delete.\n\t* config/mips/mips.h (TARGET_IRIX5, TARGET_SGI_O32_AS): Delete.\n\t(TARGET_IRIX6): New macro.\n\t(ASM_ABI_DEFAULT_SPEC): Remove !ELF definition.\n\t(MD_EXEC_PREFIX, MD_STARTFILE_PREFIX, SET_FILE_NUMBER)\n\t(LABEL_AFTER_LOC): Delete.\n\t* config/mips/mips.c (TARGET_ASM_FILE_START, TARGET_ASM_FILE_END)\n\t(TARGET_SECTION_TYPE_FLAGS): Remove TARGET_IRIX versions.\n\t(mips_build_builtin_va_list): Check TARGET_IRIX6.\n\t(override_options): Remove TARGET_SGI_O32_AS-related code.\n\t(irix_output_external_libcall): Make static.\n\t(mips_output_filename): Avoid use of SET_FILE_NUMBER and\n\tLABEL_AFTER_LOC.\n\t(mips_file_start): Tidy guard for ABI sections.  Remove use of\n\tABICALLS_ASM_OP; use .abicalls instead.\n\t(mips_output_aligned_decl_common, mips_declare_object_name)\n\t(mips_finish_declare_object): Remove use of TARGET_SGI_O32_AS.\n\t(mips_output_function_prologue): Set TREE_ASM_WRITTEN if emitting\n\t.globl foo .text directives.\n\t(irix_asm_named_section_1, irix_asm_named_section)\n\t(irix_section_align_entry, irix_section_align_htab)\n\t(irix_orig_asm_out_file, irix_section_align_entry_eq)\n\t(irix_section_align_entry_hash, irix_asm_output_align)\n\t(irix_file_start, irix_section_align_1, copy_file_data)\n\t(irix_file_end, irix_section_type_flags): Delete.\n\t* config/mips/irix-crti.asm (__gcc_init): Move to .gcc_init section.\n\tUse standard section syntax.  Remove protective \"jr $31\".\n\t(__gcc_fini): Likewise .gcc_fini.\n\t* config/mips/irix-crtn.asm: Adjust sections accordingly.\n\t* config/mips/sdb.h (PUT_SDB_SIZE, PUT_SDB_TYPE): Moved from\n\tiris5gas.h.\n\t* config/mips/t-iris (irix-crti.o, irix-crtn.o): New rules, moved\n\tfrom t-irix-gld.\n\t(EXTRA_MULTILIB_PARTS): Define.\n\t* config/mips/t-iris6: Remove bogus comment.\n\t(EXTRA_MULTILIB_PARTS, CRTSTUFF_T_CFLAGS): Delete.\n\t* config/mips/iris5gas.h, config/mips/iris5gld.h,\n\tconfig/mips/iris6gas.h, config/mips/iris6gld.h,\n\tconfig/mips/t-iris5-as, config/mips/t-iris5-gas\n\tconfig/mips/t-irix-gld: Delete.\n\t* config/mips/iris.h: New file.\n\t* config/mips/t-slibgcc-irix: Renamed from t-iris5-6.\n\nFrom-SVN: r86309", "tree": {"sha": "f38f76d059ddd6a2dbbc016b6ec7b452efa6f72c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f38f76d059ddd6a2dbbc016b6ec7b452efa6f72c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82563d3508aa64e97391e8792751b02d0becbeae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82563d3508aa64e97391e8792751b02d0becbeae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82563d3508aa64e97391e8792751b02d0becbeae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82563d3508aa64e97391e8792751b02d0becbeae/comments", "author": null, "committer": null, "parents": [{"sha": "c4cdb8e1d07a732cbe0ed4ff923cefd427cb5285", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4cdb8e1d07a732cbe0ed4ff923cefd427cb5285", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4cdb8e1d07a732cbe0ed4ff923cefd427cb5285"}], "stats": {"total": 2140, "additions": 648, "deletions": 1492}, "files": [{"sha": "013240c3fe87b14fabae3946e2c739695d8fc85d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 105, "deletions": 0, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=82563d3508aa64e97391e8792751b02d0becbeae", "patch": "@@ -1,3 +1,108 @@\n+2004-08-20  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* configure.ac (mips*-*-*): Print an error if not using GAS.\n+\t* configure: Regenerated.\n+\t* doc/install.texi: Remove irix5 bullet from --with-gnu-as.  Remove\n+\tcomments about buggy MIPSpro assemblers.\n+\t* config.gcc (mips-sgi-irix[56]*): Combine stanzas.  Include elfos.h\n+\tbefore mips.h and iris.h after it.  Use t-iris and t-slibgcc-irix.\n+\tUse iris5.h only for IRIX 5 configs.  Use iris6.h and t-iris6 for\n+\tIRIX 6 configs.  Define IRIX_USING_GNU_LD if using GNU ld.\n+\t* config/mips/iris5.h (TARGET_IRIX, SWITCHES_NEED_SPACES)\n+\t(DEFAULT_SIGNED_CHAR, WORD_SWITCH_TAKES_ARG, SUBTARGET_CC1_SPEC)\n+\t(NO_IMPLICIT_EXTERN_C, MIPS_DEFAULT_GVALUE)\n+\t(TARGET_ASM_EXTERNAL_LIBCALL): Move to iris.h.\n+\t(WCHAR_TYPE, WCHAR_TYPE_SIZE, TARGET_OS_CPP_BUILTINS): Delete in favor\n+\tof more general IRIX 6 definitions.\n+\t(OBJECT_FORMAT_ELF, ASM_OUTPUT_ASCII, ASM_WEAKEN_LABEL)\n+\t(HANDLE_SYSV_PRAGMA): Delete in favor of elfos.h definitions.\n+\t(TARGET_IRIX5, ABICALLS_ASM_OP, BSS_SECTION_ASM_OP, HAS_INIT_SECTION)\n+\t(LD_INIT_SWITCH, LD_FINI_SWITCH, SUBTARGET_ASM_OPTIMIZING_SPEC)\n+\t(ASM_FINAL_SPEC, DBX_DEBUGGING_INFO, MIPS_DEBUGGING_INFO)\n+\t(PREFERRED_DEBUGGING_TYPE, DWARF2_UNWIND_INFO, SET_FILE_NUMBER)\n+\t(LABEL_AFTER_LOC, DOLLARS_IN_IDENTIFIERS, NO_DOLLAR_IN_LABEL)\n+\t(TARGET_ASM_NAMED_SECTION, EXTRA_SECTION_FUNCTIONS)\n+\t(ASM_DECLARE_FUNCTION_SIZE, ASM_OUTPUT_WEAK_ALIAS)\n+\t(SUBTARGET_EXTRA_SPECS): Delete definitions or undefs.\n+\t(LINK_SPEC): Move most of definition to iris.h.\n+\t(SUBTARGET_LINK_SPEC): New macro.\n+\t(IRIX_STARTFILE_SPEC): Fold into...\n+\t(STARTFILE_SPEC): ...here.\n+\t(IRIX_ENDFILE_SPEC): Fold into...\n+\t(ENDFILE_SPEC): ...here.\n+\t* config/mips/iris6.h (TARGET_IRIX5): Remove override.\n+\t(WCHAR_TYPE, WCHAR_TYPE_SIZE, WINT_TYPE, WINT_TYPE_SIZE)\n+\t(DWARF_OFFSET_SIZE, DWARF_INITIAL_LENGTH_SIZE, SET_ASM_OP)\n+\t(LINK_ELIMINATE_DUPLICATE_LDIRECTORIES, ASM_DECLARE_OBJECT_NAME)\n+\t(ASM_FINISH_DECLARE_OBJECT, LOCAL_LABEL_PREFIX): Move to iris.h.\n+\t(TARGET_OS_CPP_BUILTINS): Likewise.  Guard IRIX6-specific bits.\n+\t(DWARF2_UNWIND_INFO, DWARF2_GENERATE_TEXT_SECTION_LABEL)\n+\t(SUBTARGET_CPP_SPEC, DWARF2_DEBUGGING_INFO, MIPS_DEBUGGING_INFO)\n+\t(PREFERRED_DEBUGGING_TYPE, DWARF2_FRAME_INFO, MD_EXEC_PREFIX)\n+\t(ASM_DECLARE_FUNCTION_NAME, ASM_DECLARE_FUNCTION_SIZE)\n+\t(FUNCTION_NAME_ALREADY_DECLARED, SUPPORTS_INIT_PRIORITY)\n+\t(POPSECTION_ASM_OP, SUBTARGET_ASM_SPEC, SUBTARGET_MIPS_AS_ASM_SPEC)\n+\t(SUBTARGET_ASM_DEBUGGING_SPEC, SUBTARGET_ASM_OPTIMIZING_SPEC)\n+\t(BSS_SECTION_ASM_OP*, READONLY_DATA_SECTION_ASM_OP*)\n+\t(EH_FRAME_SECTION_NAME, MUST_USE_SJLJ_EXCEPTIONS, CTORS_SECTION_ASM_OP)\n+\t(DTORS_SECTION_ASM_OP, TARGET_ASM_NAMED_SECTION, EH_FRAME_SECTION_NAME)\n+\t(ASM_OUTPUT_ALIGN, ASM_OUTPUT_FILENAME, ASM_OUTPUT_ALIGNED_LOCAL)\n+\t(ASM_OUTPUT_ALIGNED_BSS): Remove definitions or undefs.\n+\t(TARGET_IRIX6): Define to 1.\n+\t(DRIVER_SELF_SPECS): Define.\n+\t(DWARF2_FRAME_INFO): Define to 1 rather than !TARGET_SGI_O32_AS.\n+\t(SUBTARGET_CC1_SPEC): Remove in favor of DRIVER_SELF_SPECS.\n+\t(SUBTARGET_LINK_SPEC): New macro.\n+\t(IRIX_STARTFILE_SPEC): Fold into...\n+\t(STARTFILE_SPEC): ...here.  Remove !mabi=* case.\n+\t(SUBTARGET_{,DONT_}WARN_UNUSED_SPEC): New macros.\n+\t(LIB_SPEC, LIBGCC_SPEC): Use them.\n+\t(LIB_SPEC): Remove !mabi=* case.\n+\t(IRIX_ENDFILE_SPEC): Fold into...\n+\t(ENDFILE_SPEC): ...here.  Remove !mabi=* case.\n+\t* config/mips/mips-protos.h (irix_output_external_libcall): Delete.\n+\t* config/mips/mips.h (TARGET_IRIX5, TARGET_SGI_O32_AS): Delete.\n+\t(TARGET_IRIX6): New macro.\n+\t(ASM_ABI_DEFAULT_SPEC): Remove !ELF definition.\n+\t(MD_EXEC_PREFIX, MD_STARTFILE_PREFIX, SET_FILE_NUMBER)\n+\t(LABEL_AFTER_LOC): Delete.\n+\t* config/mips/mips.c (TARGET_ASM_FILE_START, TARGET_ASM_FILE_END)\n+\t(TARGET_SECTION_TYPE_FLAGS): Remove TARGET_IRIX versions.\n+\t(mips_build_builtin_va_list): Check TARGET_IRIX6.\n+\t(override_options): Remove TARGET_SGI_O32_AS-related code.\n+\t(irix_output_external_libcall): Make static.\n+\t(mips_output_filename): Avoid use of SET_FILE_NUMBER and\n+\tLABEL_AFTER_LOC.\n+\t(mips_file_start): Tidy guard for ABI sections.  Remove use of\n+\tABICALLS_ASM_OP; use .abicalls instead.\n+\t(mips_output_aligned_decl_common, mips_declare_object_name)\n+\t(mips_finish_declare_object): Remove use of TARGET_SGI_O32_AS.\n+\t(mips_output_function_prologue): Set TREE_ASM_WRITTEN if emitting\n+\t.globl foo .text directives.\n+\t(irix_asm_named_section_1, irix_asm_named_section)\n+\t(irix_section_align_entry, irix_section_align_htab)\n+\t(irix_orig_asm_out_file, irix_section_align_entry_eq)\n+\t(irix_section_align_entry_hash, irix_asm_output_align)\n+\t(irix_file_start, irix_section_align_1, copy_file_data)\n+\t(irix_file_end, irix_section_type_flags): Delete.\n+\t* config/mips/irix-crti.asm (__gcc_init): Move to .gcc_init section.\n+\tUse standard section syntax.  Remove protective \"jr $31\".\n+\t(__gcc_fini): Likewise .gcc_fini.\n+\t* config/mips/irix-crtn.asm: Adjust sections accordingly.\n+\t* config/mips/sdb.h (PUT_SDB_SIZE, PUT_SDB_TYPE): Moved from\n+\tiris5gas.h.\n+\t* config/mips/t-iris (irix-crti.o, irix-crtn.o): New rules, moved\n+\tfrom t-irix-gld.\n+\t(EXTRA_MULTILIB_PARTS): Define.\n+\t* config/mips/t-iris6: Remove bogus comment.\n+\t(EXTRA_MULTILIB_PARTS, CRTSTUFF_T_CFLAGS): Delete.\n+\t* config/mips/iris5gas.h, config/mips/iris5gld.h,\n+\tconfig/mips/iris6gas.h, config/mips/iris6gld.h,\n+\tconfig/mips/t-iris5-as, config/mips/t-iris5-gas\n+\tconfig/mips/t-irix-gld: Delete.\n+\t* config/mips/iris.h: New file.\n+\t* config/mips/t-slibgcc-irix: Renamed from t-iris5-6.\n+\n 2004-08-20  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* postreload.c (reload_cse_move2add): Allow any condjump, but check"}, {"sha": "b9023243acd76c73a7dc0a9b3856c8f8a70e292c", "filename": "gcc/config.gcc", "status": "modified", "additions": 18, "deletions": 58, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=82563d3508aa64e97391e8792751b02d0becbeae", "patch": "@@ -1274,68 +1274,28 @@ mcore-*-pe*)\n \ttmake_file=mcore/t-mcore-pe\n \tuse_fixproto=yes\n \t;;\n-mips-sgi-irix6*)\t\t# SGI System V.4., IRIX 6\n-\ttm_file=\"${tm_file} mips/iris5.h mips/iris6.h\"\n-\ttmake_file=\"mips/t-iris mips/t-iris5-6 mips/t-iris6\"\n-\tif test x$gas = xyes\n-\tthen\n-\t\ttm_file=\"${tm_file} mips/iris6gas.h\"\n-\tfi\n-\tif test \"x$gnu_ld\" = xyes\n-\tthen\n-\t\ttm_file=\"${tm_file} mips/iris6gld.h\"\n-\t\ttmake_file=\"$tmake_file mips/t-irix-gld\"\n-\tfi\n-\ttarget_cpu_default=\"MASK_ABICALLS|MASK_FLOAT64|MASK_64BIT\"\n-\ttm_defines=\"MIPS_ISA_DEFAULT=3 MIPS_ABI_DEFAULT=ABI_N32\"\n-\t# See comment in mips/iris5.h file.  Only enabled for O32 ABI\n-\t# without GNU as.\n-\tif test x$gas = xno\n-\tthen\n-\t\tuse_collect2=yes\n-\tfi\n-#\tif test x$enable_threads = xyes; then\n-#\t\tthread_file='irix'\n-#\tfi\n-\tuse_fixproto=yes\n-\t;;\n-mips-sgi-irix5cross64)\t\t# Irix5 host, Irix 6 target, cross64\n-\ttm_file=\"${tm_file} mips/iris5.h mips/iris6.h mips/cross64.h\"\n-\ttmake_file=\"mips/t-iris mips/t-cross64\"\n-\ttarget_cpu_default=\"MASK_ABICALLS|MASK_FLOAT64|MASK_64BIT\"\n-\ttm_defines=\"MIPS_ISA_DEFAULT=3 MIPS_ABI_DEFAULT=ABI_N32\"\n-\t# See comment in mips/iris[56].h files.\n-\tuse_collect2=yes\n-#\tif test x$enable_threads = xyes; then\n-#\t\tthread_file='irix'\n-#\tfi\n-\tuse_fixproto=yes\n-\t;;\n-mips-sgi-irix5*)\t\t# SGI System V.4., IRIX 5\n-\ttm_file=\"${tm_file} mips/iris5.h\"\n-\tif test x$gas = xyes\n+mips-sgi-irix[56]*)\n+\ttm_file=\"elfos.h ${tm_file} mips/iris.h\"\n+\ttmake_file=\"mips/t-iris mips/t-slibgcc-irix\"\n+\ttarget_cpu_default=\"MASK_GAS|MASK_ABICALLS\"\n+\tcase ${target} in\n+\t*-*-irix5*)\n+\t\ttm_file=\"${tm_file} mips/iris5.h\"\n+\t\t;;\n+\n+\t*-*-irix6*)\n+\t\ttm_file=\"${tm_file} mips/iris6.h\"\n+\t\ttmake_file=\"${tmake_file} mips/t-iris6\"\n+\t\ttm_defines=\"MIPS_ISA_DEFAULT=3 MIPS_ABI_DEFAULT=ABI_N32\"\n+\t\t;;\n+\tesac\n+\tif test \"x$stabs\" = xyes\n \tthen\n-\t\ttm_file=\"${tm_file} mips/sdb.h mips/iris5gas.h\"\n-\t\tif test x$stabs = xyes\n-\t\tthen\n-\t\t\ttm_file=\"${tm_file} dbx.h mips/dbxmdebug.h\"\n-\t\tfi\n-\t\ttmake_file=mips/t-iris5-gas\n-\telse\n-\t\ttmake_file=mips/t-iris5-as\n+\t\ttm_file=\"${tm_file} dbx.h mips/dbxmdebug.h\"\n \tfi\n \tif test \"x$gnu_ld\" = xyes\n \tthen\n-\t\ttm_file=\"${tm_file} mips/iris5gld.h\"\n-\t\ttmake_file=\"$tmake_file mips/t-irix-gld\"\n-\tfi\n-\ttmake_file=\"${tmake_file} mips/t-iris mips/t-iris5-6\"\n-\ttarget_cpu_default=\"MASK_ABICALLS\"\n-\t# mips-tfile doesn't work yet\n-\t# See comment in mips/iris5.h file.\n-\tif test x$gas = xno\n-\tthen\n-\t\tuse_collect2=yes\n+\t\ttm_defines=\"${tm_defines} IRIX_USING_GNU_LD\"\n \tfi\n #\tif test x$enable_threads = xyes; then\n #\t\tthread_file='irix'"}, {"sha": "e9c16e5111e9cf93c037370e71bb34a0c6d03c9a", "filename": "gcc/config/mips/iris.h", "status": "added", "additions": 222, "deletions": 0, "changes": 222, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fconfig%2Fmips%2Firis.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fconfig%2Fmips%2Firis.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis.h?ref=82563d3508aa64e97391e8792751b02d0becbeae", "patch": "@@ -0,0 +1,222 @@\n+/* Definitions of target machine for GNU compiler.  Generic IRIX version.\n+   Copyright (C) 1993, 1995, 1996, 1998, 2000,\n+   2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+/* We are compiling for IRIX now.  */\n+#undef TARGET_IRIX\n+#define TARGET_IRIX 1\n+\n+/* The size in bytes of a DWARF field indicating an offset or length\n+   relative to a debug info section, specified to be 4 bytes in the DWARF-2\n+   specification.  The SGI/MIPS ABI defines it to be the same as PTR_SIZE.  */\n+#define DWARF_OFFSET_SIZE PTR_SIZE\n+\n+/* The size in bytes of the initial length field in a debug info\n+   section.  The DWARF 3 (draft) specification defines this to be\n+   either 4 or 12 (with a 4-byte \"escape\" word when it's 12), but the\n+   SGI/MIPS ABI predates this standard and defines it to be the same\n+   as DWARF_OFFSET_SIZE.  */\n+#define DWARF_INITIAL_LENGTH_SIZE DWARF_OFFSET_SIZE\n+\n+/* MIPS assemblers don't have the usual .set foo,bar construct;\n+   .set is used for assembler options instead.  */\n+#undef SET_ASM_OP\n+#define ASM_OUTPUT_DEF(FILE, LABEL1, LABEL2)\t\t\t\\\n+  do\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      fputc ('\\t', FILE);\t\t\t\t\t\\\n+      assemble_name (FILE, LABEL1);\t\t\t\t\\\n+      fputs (\" = \", FILE);\t\t\t\t\t\\\n+      assemble_name (FILE, LABEL2);\t\t\t\t\\\n+      fputc ('\\n', FILE);\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+  while (0)\n+\n+/* The MIPSpro o32 linker warns about not linking .comment sections.  */\n+#undef IDENT_ASM_OP\n+\n+#undef LOCAL_LABEL_PREFIX\n+#define LOCAL_LABEL_PREFIX (TARGET_NEWABI ? \".\" : \"$\")\n+\n+#undef ASM_DECLARE_OBJECT_NAME\n+#define ASM_DECLARE_OBJECT_NAME mips_declare_object_name\n+\n+#undef ASM_FINISH_DECLARE_OBJECT\n+#define ASM_FINISH_DECLARE_OBJECT mips_finish_declare_object\n+\n+/* Also do this for libcalls.  */\n+#undef TARGET_ASM_EXTERNAL_LIBCALL\n+#define TARGET_ASM_EXTERNAL_LIBCALL irix_output_external_libcall\n+\n+/* The linker needs a space after \"-o\".  */\n+#define SWITCHES_NEED_SPACES \"o\"\n+\n+/* Specify wchar_t types.  */\n+#undef WCHAR_TYPE\n+#define WCHAR_TYPE (Pmode == DImode ? \"int\" : \"long int\")\n+\n+#undef WCHAR_TYPE_SIZE\n+#define WCHAR_TYPE_SIZE INT_TYPE_SIZE\n+\n+/* Same for wint_t.  */\n+#undef WINT_TYPE\n+#define WINT_TYPE (Pmode == DImode ? \"int\" : \"long int\")\n+\n+#undef WINT_TYPE_SIZE\n+#define WINT_TYPE_SIZE 32\n+\n+/* Plain char is unsigned in the SGI compiler.  */\n+#undef DEFAULT_SIGNED_CHAR\n+#define DEFAULT_SIGNED_CHAR 0\n+\n+#define WORD_SWITCH_TAKES_ARG(STR)\t\t\t\\\n+  (DEFAULT_WORD_SWITCH_TAKES_ARG (STR)\t\t\t\\\n+   || strcmp (STR, \"rpath\") == 0)\n+\n+#define TARGET_OS_CPP_BUILTINS()\t\t\t\t\\\n+  do\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      builtin_define_std (\"host_mips\");\t\t\t\t\\\n+      builtin_define_std (\"sgi\");\t\t\t\t\\\n+      builtin_define_std (\"unix\");\t\t\t\t\\\n+      builtin_define_std (\"SYSTYPE_SVR4\");\t\t\t\\\n+      builtin_define (\"_MODERN_C\");\t\t\t\t\\\n+      builtin_define (\"_SVR4_SOURCE\");\t\t\t\t\\\n+      builtin_define (\"__DSO__\");\t\t\t\t\\\n+      builtin_assert (\"system=unix\");\t\t\t\t\\\n+      builtin_assert (\"system=svr4\");\t\t\t\t\\\n+      builtin_assert (\"machine=sgi\");\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+      if (mips_abi == ABI_32)\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\\\n+\t  builtin_define (\"_ABIO32=1\");\t\t\t\t\\\n+\t  builtin_define (\"_MIPS_SIM=_ABIO32\");\t\t\t\\\n+\t  builtin_define (\"_MIPS_SZINT=32\");\t\t\t\\\n+\t  builtin_define (\"_MIPS_SZLONG=32\");\t\t\t\\\n+\t  builtin_define (\"_MIPS_SZPTR=32\");\t\t\t\\\n+\t}\t\t\t\t\t\t\t\\\n+      else if (mips_abi == ABI_64)\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\\\n+\t  builtin_define (\"_ABI64=3\");\t\t\t\t\\\n+\t  builtin_define (\"_MIPS_SIM=_ABI64\");\t\t\t\\\n+\t  builtin_define (\"_MIPS_SZINT=32\");\t\t\t\\\n+\t  builtin_define (\"_MIPS_SZLONG=64\");\t\t\t\\\n+\t  builtin_define (\"_MIPS_SZPTR=64\");\t\t\t\\\n+\t}\t\t\t\t\t\t\t\\\n+      else\t\t\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\\\n+\t  builtin_define (\"_ABIN32=2\");\t\t\t\t\\\n+\t  builtin_define (\"_MIPS_SIM=_ABIN32\");\t\t\t\\\n+\t  builtin_define (\"_MIPS_SZINT=32\");\t\t\t\\\n+\t  builtin_define (\"_MIPS_SZLONG=32\");\t\t\t\\\n+\t  builtin_define (\"_MIPS_SZPTR=32\");\t\t\t\\\n+        }\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+      if (!ISA_MIPS1 && !ISA_MIPS2)\t\t\t\t\\\n+\tbuiltin_define (\"_COMPILER_VERSION=601\");\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+      if (!TARGET_FLOAT64)\t\t\t\t\t\\\n+\tbuiltin_define (\"_MIPS_FPSET=16\");\t\t\t\\\n+      else\t\t\t\t\t\t\t\\\n+\tbuiltin_define (\"_MIPS_FPSET=32\");\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+      /* We must always define _LONGLONG, even when -ansi is\t\\\n+\t used, because IRIX 5 system header files require it.\t\\\n+\t This is OK, because gcc never warns when long long\t\\\n+\t is used in system header files.\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+\t An alternative would be to support the SGI builtin\t\\\n+\t type __long_long.  */\t\t\t\t\t\\\n+      builtin_define (\"_LONGLONG\");\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+      /* IRIX 6.5.18 and above provide many ISO C99\t\t\\\n+\t features protected by the __c99 macro.\t\t\t\\\n+\t libstdc++ v3 needs them as well.  */\t\t\t\\\n+      if (TARGET_IRIX6)\t\t\t\t\t\t\\\n+\tif (flag_isoc99 || c_dialect_cxx ())\t\t\t\\\n+\t  builtin_define (\"__c99\");\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+      /* The GNU C++ standard library requires that\t\t\\\n+\t __EXTENSIONS__ and _SGI_SOURCE be defined on at\t\\\n+\t least IRIX 6.2 and probably all IRIX 6 prior to 6.5.\t\\\n+\t We don't need this on IRIX 6.5 itself, but it\t\t\\\n+\t shouldn't hurt other than the namespace pollution.  */\t\\\n+      if (!flag_iso || (TARGET_IRIX6 && c_dialect_cxx ()))\t\\\n+\t{\t\t\t\t\t\t\t\\\n+\t  builtin_define (\"__EXTENSIONS__\");\t\t\t\\\n+\t  builtin_define (\"_SGI_SOURCE\");\t\t\t\\\n+\t}\t\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+  while (0)\n+\n+#undef SUBTARGET_CC1_SPEC\n+#define SUBTARGET_CC1_SPEC \"%{static: -mno-abicalls}\"\n+\n+#undef INIT_SECTION_ASM_OP\n+#define INIT_SECTION_ASM_OP \"\\t.section\\t.gcc_init,\\\"ax\\\",@progbits\"\n+\n+#undef FINI_SECTION_ASM_OP\n+#define FINI_SECTION_ASM_OP \"\\t.section\\t.gcc_fini,\\\"ax\\\",@progbits\"\n+\n+#ifdef IRIX_USING_GNU_LD\n+#define IRIX_NO_UNRESOLVED \"\"\n+#else\n+#define IRIX_NO_UNRESOLVED \"-no_unresolved\"\n+#endif\n+\n+/* Generic part of the LINK_SPEC.  */\n+#undef LINK_SPEC\n+#define LINK_SPEC \"\\\n+%{G*} %{EB} %{EL} %{mips1} %{mips2} %{mips3} %{mips4} \\\n+%{bestGnum} %{shared} %{non_shared} \\\n+%{call_shared} %{no_archive} %{exact_version} \\\n+%{!shared: \\\n+  %{!non_shared: %{!call_shared:%{!r: -call_shared \" IRIX_NO_UNRESOLVED \"}}}} \\\n+%{rpath} -init __gcc_init -fini __gcc_fini \" IRIX_SUBTARGET_LINK_SPEC\n+\n+/* A linker error can empirically be avoided by removing duplicate\n+   library search directories.  */\n+#define LINK_ELIMINATE_DUPLICATE_LDIRECTORIES 1\n+\n+/* Add -g to mips.h default to avoid confusing gas with local symbols\n+   generated from stabs info.  */\n+#undef NM_FLAGS\n+#define NM_FLAGS \"-Bng\"\n+\n+/* The system header files are C++ aware.  */\n+/* ??? Unfortunately, most but not all of the headers are C++ aware.\n+   Specifically, curses.h is not, and as a consequence, defining this\n+   used to prevent libg++ building.  This is no longer the case so\n+   define it again to prevent other problems, e.g. with getopt in\n+   unistd.h.  We still need some way to fix just those files that need\n+   fixing.  */\n+#define NO_IMPLICIT_EXTERN_C 1\n+\n+/* -G is incompatible with -KPIC which is the default, so only allow objects\n+   in the small data section if the user explicitly asks for it.  */\n+#undef MIPS_DEFAULT_GVALUE\n+#define MIPS_DEFAULT_GVALUE 0\n+\n+/* The native o32 IRIX linker does not support merging without a\n+   special elspec(5) file.  */\n+#ifndef IRIX_USING_GNU_LD\n+#undef HAVE_GAS_SHF_MERGE\n+#define HAVE_GAS_SHF_MERGE 0\n+#endif"}, {"sha": "7d9832c88d9bbdd7903039066cf7b95433522019", "filename": "gcc/config/mips/iris5.h", "status": "modified", "additions": 10, "deletions": 269, "changes": 279, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fconfig%2Fmips%2Firis5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fconfig%2Fmips%2Firis5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis5.h?ref=82563d3508aa64e97391e8792751b02d0becbeae", "patch": "@@ -19,286 +19,27 @@ along with GCC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-/* We are compiling for IRIX now.  */\n-#undef TARGET_IRIX\n-#define TARGET_IRIX 1\n+#ifdef IRIX_USING_GNU_LD\n+#define IRIX_SUBTARGET_LINK_SPEC \"-melf32bsmip\"\n+#else\n+#define IRIX_SUBTARGET_LINK_SPEC \"-_SYSTYPE_SVR4\"\n+#endif\n \n-/* Allow some special handling for IRIX 5.  */\n-#undef TARGET_IRIX5\n-#define TARGET_IRIX5 1\n-\n-#define ABICALLS_ASM_OP \"\\t.option pic2\"\n-\n-/* Dummy definition which allows EXTRA_SECTION_FUNCTIONS to be the same\n-   for IRIX 5 and 6.  */\n-#define BSS_SECTION_ASM_OP \"\\t.data\"\n-\n-/* ??? This is correct, but not very useful, because there is no file that\n-   uses this macro.  */\n-/* ??? The best way to handle global constructors under ELF is to use .init\n-   and .fini sections.  Unfortunately, there is apparently no way to get\n-   the IRIX 5.x (x <= 2) assembler to create these sections.  So we instead\n-   use collect.  The linker can create these sections via -init and -fini\n-   options, but using this would require modifying how crtstuff works, and\n-   I will leave that for another time (or someone else).  */\n-#define OBJECT_FORMAT_ELF\n-#define HAS_INIT_SECTION\n-#define LD_INIT_SWITCH \"-init\"\n-#define LD_FINI_SWITCH \"-fini\"\n-\n-/* The linker needs a space after \"-o\".  */\n-#define SWITCHES_NEED_SPACES \"o\"\n-\n-/* Specify wchar_t types.  */\n-#undef\tWCHAR_TYPE\n-#undef\tWCHAR_TYPE_SIZE\n-\n-#define WCHAR_TYPE     \"int\"\n-#define WCHAR_TYPE_SIZE        INT_TYPE_SIZE\n-\n-/* Plain char is unsigned in the SGI compiler.  */\n-#undef DEFAULT_SIGNED_CHAR\n-#define DEFAULT_SIGNED_CHAR 0\n-\n-#define WORD_SWITCH_TAKES_ARG(STR)\t\t\t\\\n- (DEFAULT_WORD_SWITCH_TAKES_ARG (STR)\t\t\t\\\n-  || !strcmp (STR, \"rpath\"))\n-\n-/* We must pass -D_LONGLONG always, even when -ansi is used, because IRIX 5\n-   system header files require it.  This is OK, because gcc never warns\n-   when long long is used in system header files.  Alternatively, we can\n-   add support for the SGI builtin type __long_long.  */\n-\n-#define TARGET_OS_CPP_BUILTINS()\t\t\t\\\n-    do {\t\t\t\t\t\t\\\n-\tbuiltin_define_std (\"host_mips\");\t\t\\\n-\tbuiltin_define_std (\"sgi\");\t\t\t\\\n-\tbuiltin_define_std (\"unix\");\t\t\t\\\n-\tbuiltin_define_std (\"SYSTYPE_SVR4\");\t\t\\\n-\tbuiltin_define (\"_LONGLONG\");\t\t\t\\\n-\tbuiltin_define (\"_MODERN_C\");\t\t\t\\\n-\tbuiltin_define (\"_SVR4_SOURCE\");\t\t\\\n-\tbuiltin_define (\"__DSO__\");\t\t\t\\\n-\tbuiltin_define (\"_ABIO32=1\");\t\t\t\\\n-\tbuiltin_define (\"_MIPS_SIM=_ABIO32\");\t\t\\\n-\tbuiltin_define (\"_MIPS_SZPTR=32\");\t\t\\\n-\tbuiltin_assert (\"system=unix\");\t\t\t\\\n-\tbuiltin_assert (\"system=svr4\");\t\t\t\\\n-\tbuiltin_assert (\"machine=sgi\");\t\t\t\\\n-\t\t\t\t\t\t\t\\\n-     if (!TARGET_FLOAT64)                               \\\n-        builtin_define (\"_MIPS_FPSET=16\");              \\\n-     else                                               \\\n-        builtin_define (\"_MIPS_FPSET=32\");              \\\n-\t\t\t\t\t\t\t\\\n-     if (!TARGET_INT64)                                 \\\n-        builtin_define (\"_MIPS_SZINT=32\");              \\\n-     else                                               \\\n-        builtin_define (\"_MIPS_SZINT=64\");              \\\n-\t\t\t\t\t\t\t\\\n-     if (!TARGET_LONG64)\t\t\t\t\\\n-\tbuiltin_define (\"_MIPS_SZLONG=32\");\t\t\\\n-     else\t\t\t\t\t\t\\\n-\tbuiltin_define (\"_MIPS_SZLONG=64\");\t\t\\\n-\t\t\t\t\t\t\t\\\n-     if (!flag_iso)\t\t\t\t\t\\\n-       {\t\t\t\t\t\t\\\n-\t builtin_define (\"__EXTENSIONS__\");\t\t\\\n-\t builtin_define (\"_SGI_SOURCE\");\t\t\\\n-       }\t\t\t\t\t\t\\\n-} while (0);\n-\n-#undef SUBTARGET_CC1_SPEC\n-#define SUBTARGET_CC1_SPEC \"%{static: -mno-abicalls}\"\n-\n-/* Override mips.h default: the IRIX 5 assembler warns about -O3:\n-\n-   as1: Warning: <file>.s, line 1: Binasm file dictates -pic: 2\n-   uld:\n-   No ucode object file linked -- please use -O2 or lower.\n-   \n-   So avoid passing it in the first place.  */\n-#undef SUBTARGET_ASM_OPTIMIZING_SPEC\n-#define SUBTARGET_ASM_OPTIMIZING_SPEC \"\\\n-%{noasmopt:-O0} \\\n-%{!noasmopt:%{O|O1|O2|O3:-O2}}\"\n-\n-#undef LINK_SPEC\n-#define LINK_SPEC \"\\\n-%{G*} %{EB} %{EL} %{mips1} %{mips2} %{mips3} \\\n-%{bestGnum} %{shared} %{non_shared} \\\n-%{call_shared} %{no_archive} %{exact_version} \\\n-%{static: -non_shared} \\\n-%{!static: \\\n-  %{!shared:%{!non_shared:%{!call_shared: -call_shared -no_unresolved}}}} \\\n-%{rpath} \\\n--_SYSTYPE_SVR4\"\n-\n-/* We now support shared libraries.  */\n-#define IRIX_STARTFILE_SPEC \"\\\n+#undef STARTFILE_SPEC\n+#define STARTFILE_SPEC \"\\\n %{!static: \\\n   %{!shared:%{pg:gcrt1.o%s}%{!pg:%{p:mcrt1.o%s libprof1.a%s}%{!p:crt1.o%s}}}} \\\n %{static: \\\n   %{pg:gcrt1.o%s} \\\n   %{!pg:%{p:/usr/lib/nonshared/mcrt1.o%s libprof1.a%s} \\\n-  %{!p:/usr/lib/nonshared/crt1.o%s}}}\"\n-\n-#undef STARTFILE_SPEC\n-#define STARTFILE_SPEC \"%(irix_startfile_spec)\"\n+  %{!p:/usr/lib/nonshared/crt1.o%s}}} \\\n+irix-crti.o%s crtbegin.o%s\"\n \n #undef LIB_SPEC\n #define LIB_SPEC \"%{!shared:%{p:-lprof1} %{pg:-lprof1} -lc}\"\n \n-#define IRIX_ENDFILE_SPEC \"%{!shared:crtn.o%s}\"\n-\n #undef ENDFILE_SPEC\n-#define ENDFILE_SPEC \"%(irix_endfile_spec)\"\n-\n-/* We do not want to run mips-tfile!  */\n-#undef ASM_FINAL_SPEC\n-\n-/* The system header files are C++ aware.  */\n-/* ??? Unfortunately, most but not all of the headers are C++ aware.\n-   Specifically, curses.h is not, and as a consequence, defining this\n-   used to prevent libg++ building.  This is no longer the case so\n-   define it again to prevent other problems, e.g. with getopt in\n-   unistd.h.  We still need some way to fix just those files that need\n-   fixing.  */\n-#define NO_IMPLICIT_EXTERN_C 1\n-\n-/* We don't support debugging info for now.  */\n-#undef DBX_DEBUGGING_INFO\n-#undef MIPS_DEBUGGING_INFO\n-#undef PREFERRED_DEBUGGING_TYPE\n-\n-/* Likewise, the assembler doesn't handle DWARF2 directives.  */\n-#define DWARF2_UNWIND_INFO 0\n+#define ENDFILE_SPEC \"crtend.o%s irix-crtn.o%s %{!shared:crtn.o%s}\"\n \n #undef MACHINE_TYPE\n #define MACHINE_TYPE \"SGI running IRIX 5.x\"\n-\n-/* Always use 1 for .file number.  I [meissner@osf.org] wonder why\n-   IRIX needs this.  */\n-\n-#undef SET_FILE_NUMBER\n-#define SET_FILE_NUMBER() num_source_filenames = 1\n-\n-/* Put out a label after a .loc.  I [meissner@osf.org] wonder why\n-   IRIX needs this.  */\n-\n-#undef LABEL_AFTER_LOC\n-#define LABEL_AFTER_LOC(STREAM) fprintf (STREAM, \"LM%d:\\n\", ++sym_lineno)\n-\n- /* Dollar signs are OK in IRIX 5 but not in IRIX 3.  */\n-#undef DOLLARS_IN_IDENTIFIERS\n-#undef NO_DOLLAR_IN_LABEL\n-\n-/* -G is incompatible with -KPIC which is the default, so only allow objects\n-   in the small data section if the user explicitly asks for it.  */\n-#undef MIPS_DEFAULT_GVALUE\n-#define MIPS_DEFAULT_GVALUE 0\n-\n-/* Switch into a generic section.  */\n-#undef TARGET_ASM_NAMED_SECTION\n-#define TARGET_ASM_NAMED_SECTION  irix_asm_named_section\n-\n-/* Define functions to read the name and flags of the current section.\n-   They are used by irix_asm_output_align.  */\n-\n-#undef EXTRA_SECTION_FUNCTIONS\n-#define EXTRA_SECTION_FUNCTIONS\t\t\t\t\t\t\\\n-const char *\t\t\t\t\t\t\t\t\\\n-current_section_name (void)\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  switch (in_section)\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-    case no_section:\treturn NULL;\t\t\t\t\t\\\n-    case in_unlikely_executed_text:\t\t\t\t\t\\\n-    case in_text:\treturn \".text\";\t\t\t\t\t\\\n-    case in_data:\treturn \".data\";\t\t\t\t\t\\\n-    case in_bss:\treturn \".bss\";\t\t\t\t\t\\\n-    case in_readonly_data:\t\t\t\t\t\t\\\n-      if (mips_abi != ABI_32 && mips_abi != ABI_O64)\t\t\t\\\n-\treturn \".rodata\";\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\treturn \".rdata\";\t\t\t\t\t\t\\\n-    case in_named:\t\t\t\t\t\t\t\\\n-      return in_named_name;\t\t\t\t\t\t\\\n-    default: abort();\t\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-}\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-unsigned int\t\t\t\t\t\t\t\t\\\n-current_section_flags (void)\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  switch (in_section)\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-    case no_section:\treturn 0;\t\t\t\t\t\\\n-    case in_unlikely_executed_text:\t\t\t\t\t\\\n-    case in_text:\treturn SECTION_CODE;\t\t\t\t\\\n-    case in_data:\treturn SECTION_WRITE;\t\t\t\t\\\n-    case in_bss:\treturn SECTION_WRITE | SECTION_BSS;\t\t\\\n-    case in_readonly_data: return 0;\t\t\t\t\t\\\n-    case in_named:\treturn get_named_section_flags (in_named_name);\t\\\n-    default: abort ();\t\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-}\n-\n-/* Some assemblers have a bug that causes backslash escaped chars in .ascii\n-   to be misassembled, so avoid it by using .byte instead.  Write the original\n-   string in a comment, partly to improve readability and partly for the sake\n-   of scan-assembler-type tests.  */\n-#undef ASM_OUTPUT_ASCII\n-#define ASM_OUTPUT_ASCII(FILE,PTR,LEN)\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\\\n-  const unsigned char *s_ = (const unsigned char *)(PTR);\t\\\n-  unsigned len_ = (LEN);\t\t\t\t\t\\\n-  unsigned i_;\t\t\t\t\t\t\t\\\n-  mips_output_ascii (FILE, (const char *) s_, len_, \"\\t# \");\t\\\n-  for (i_ = 0; i_ < len_; s_++, i_++)\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      if ((i_ % 8) == 0)\t\t\t\t\t\\\n-\tfputs (\"\\n\\t.byte\\t\", (FILE));\t\t\t\t\\\n-      fprintf ((FILE), \"%s0x%x\", (i_%8?\",\":\"\"), *s_);\t\t\\\n-    }\t\t\t\t\t\t\t\t\\\n-  fputs (\"\\n\", (FILE));\t\t\t\t\t\t\\\n-} while (0)\n-\n-/* Also do this for libcalls.  */\n-#undef TARGET_ASM_EXTERNAL_LIBCALL\n-#define TARGET_ASM_EXTERNAL_LIBCALL irix_output_external_libcall\n-\n-/* This does for functions what ASM_DECLARE_OBJECT_NAME does for variables.\n-   This is used indirectly by ASM_OUTPUT_EXTERNAL.  */\n-#define ASM_DECLARE_FUNCTION_SIZE(STREAM, NAME, DECL)\t\\\n-do {\t\t\t\t\t\t\t\\\n-  tree name_tree = get_identifier (NAME);\t\t\\\n-  TREE_ASM_WRITTEN (name_tree) = 1;\t\t\t\\\n-} while (0)\n-\n-/* This is how we tell the assembler that a symbol is weak.  */\n-\n-#define ASM_OUTPUT_WEAK_ALIAS(FILE, NAME, VALUE)\t\\\n-  do\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\\\n-      (*targetm.asm_out.globalize_label) (FILE, NAME);  \\\n-      fputs (\"\\t.weakext\\t\", FILE);\t\t\t\\\n-      assemble_name (FILE, NAME);\t\t\t\\\n-      if (VALUE)\t\t\t\t\t\\\n-        {\t\t\t\t\t\t\\\n-          fputc (' ', FILE);\t\t\t\t\\\n-          assemble_name (FILE, VALUE);\t\t\t\\\n-        }\t\t\t\t\t\t\\\n-      fputc ('\\n', FILE);\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\\\n-  while (0)\n-\n-#define ASM_WEAKEN_LABEL(FILE, NAME) ASM_OUTPUT_WEAK_ALIAS(FILE, NAME, 0)\n-\n-/* Handle #pragma weak and #pragma pack.  */\n-#define HANDLE_SYSV_PRAGMA 1\n-\n-#undef SUBTARGET_EXTRA_SPECS\n-#define SUBTARGET_EXTRA_SPECS \\\n-  { \"irix_startfile_spec\", IRIX_STARTFILE_SPEC }, \\\n-  { \"irix_endfile_spec\", IRIX_ENDFILE_SPEC },"}, {"sha": "49af06b5367adebc2876c06da74d407aecb9d299", "filename": "gcc/config/mips/iris5gas.h", "status": "removed", "additions": 0, "deletions": 83, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4cdb8e1d07a732cbe0ed4ff923cefd427cb5285/gcc%2Fconfig%2Fmips%2Firis5gas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4cdb8e1d07a732cbe0ed4ff923cefd427cb5285/gcc%2Fconfig%2Fmips%2Firis5gas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis5gas.h?ref=c4cdb8e1d07a732cbe0ed4ff923cefd427cb5285", "patch": "@@ -1,83 +0,0 @@\n-/* Definitions of target machine for GNU compiler.  IRIX version 5 with gas.\n-   Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004\n-   Free Software Foundation, Inc.\n-\n-   This file is part of GCC.\n-\n-   GCC is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 2, or (at your option)\n-   any later version.\n-\n-   GCC is distributed in the hope that it will be useful,\n-   but WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-   GNU General Public License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with GCC; see the file COPYING.  If not, write to\n-   the Free Software Foundation, 59 Temple Place - Suite 330,\n-   Boston, MA 02111-1307, USA.  */\n-\n-/* Reenable debugging.  */\n-#define PREFERRED_DEBUGGING_TYPE DWARF2_DEBUG\n-\n-/* GNU as does handle DWARF2 directives.  */\n-#undef DWARF2_UNWIND_INFO\n-#define DWARF2_UNWIND_INFO 1\n-\n-/* Override iris5.h version to invoke [cd]tors and register eh frame\n-   information.  */\n-#undef LINK_SPEC\n-#define LINK_SPEC \"\\\n-%{G*} %{EB} %{EL} %{mips1} %{mips2} %{mips3} \\\n-%{bestGnum} %{shared} %{non_shared} \\\n-%{call_shared} %{no_archive} %{exact_version} \\\n-%{static: -non_shared} \\\n-%{!static: \\\n-  %{!shared:%{!non_shared:%{!call_shared: -call_shared -no_unresolved}}}} \\\n-%{rpath} -init __do_global_ctors -fini __do_global_dtors \\\n-%{shared:-hidden_symbol __do_global_ctors,__do_global_ctors_1,__do_global_dtors} \\\n--_SYSTYPE_SVR4\"\n-\n-/* Override iris5.h versions to include crtbegin.o and crtend.o.  */\n-\n-#undef STARTFILE_SPEC\n-#define STARTFILE_SPEC \"%(irix_startfile_spec) crtbegin.o%s\"\n-\n-#undef ENDFILE_SPEC\n-#define ENDFILE_SPEC \"crtend.o%s %(irix_endfile_spec)\"\n-\n-/* Irix 5 does not have some strange restrictions that Irix 3 had.  */\n-#undef SET_FILE_NUMBER\n-#define SET_FILE_NUMBER() ++num_source_filenames\n-#undef LABEL_AFTER_LOC\n-#define LABEL_AFTER_LOC(STREAM)\n-\n-/* We need to use .esize and .etype instead of .size and .type to\n-   avoid conflicting with ELF directives.  These are only recognized\n-   by gas, anyhow, not the native assembler.  */\n-#undef PUT_SDB_SIZE\n-#define PUT_SDB_SIZE(a)\t\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\\\n-  fprintf (asm_out_file, \"\\t.esize\\t\" HOST_WIDE_INT_PRINT_DEC \";\", \\\n- \t   (HOST_WIDE_INT) (a));\t\t\t\\\n-} while (0)\n-\n-#undef PUT_SDB_TYPE\n-#define PUT_SDB_TYPE(a)\t\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\\\n-  fprintf (asm_out_file, \"\\t.etype\\t0x%x;\", (a));\t\\\n-} while (0)\n-\n-/* Add -g to mips.h default to avoid confusing gas with local symbols\n-   generated from stabs info.  */\n-#undef NM_FLAGS\n-#define NM_FLAGS \"-Bng\"\n-\n-/* Disable SHF_MERGE support.  Even if gas supports it, the IRIX ld does not\n-   without a special elspec(5) file.\n-\n-   FIXME: Only do this if not using GNU ld.  */\n-#undef HAVE_GAS_SHF_MERGE\n-#define HAVE_GAS_SHF_MERGE 0"}, {"sha": "cd4eb86a889643f2d98001fc1ecfba2ab96888de", "filename": "gcc/config/mips/iris5gld.h", "status": "removed", "additions": 0, "deletions": 75, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4cdb8e1d07a732cbe0ed4ff923cefd427cb5285/gcc%2Fconfig%2Fmips%2Firis5gld.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4cdb8e1d07a732cbe0ed4ff923cefd427cb5285/gcc%2Fconfig%2Fmips%2Firis5gld.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis5gld.h?ref=c4cdb8e1d07a732cbe0ed4ff923cefd427cb5285", "patch": "@@ -1,75 +0,0 @@\n-/* Definitions of target machine for GNU compiler.  IRIX 5 with GNU ld.\n-   Copyright (C) 2004 Free Software Foundation, Inc.\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-#undef LINK_SPEC\n-#define LINK_SPEC \"\\\n-%{G*} %{EB} %{EL} %{mips1} %{mips2} %{mips3} \\\n-%{bestGnum} %{shared} %{non_shared} \\\n-%{call_shared} %{no_archive} %{exact_version} \\\n-%{static: -non_shared} \\\n-%{!static: \\\n-  %{!shared: %{!non_shared: %{!call_shared: -call_shared}}}} \\\n-%{rpath} -init __gcc_init -fini __gcc_fini \\\n--melf32bsmip\"\n-\n-#undef STARTFILE_SPEC\n-#define STARTFILE_SPEC \"%(irix_startfile_spec) irix-crti.o%s crtbegin.o%s\"\n-\n-#undef ENDFILE_SPEC\n-#define ENDFILE_SPEC \"crtend.o%s irix-crtn.o%s %(irix_endfile_spec)\"\n-\n-/* The GNU linker supports one-only sections.  */\n-#define MAKE_DECL_ONE_ONLY(DECL) (DECL_WEAK (DECL) = 1)\n-\n-#define INIT_SECTION_ASM_OP \"\\t.section\\t.init,0x1,0x6,4,4\"\n-#define FINI_SECTION_ASM_OP \"\\t.section\\t.fini,0x1,0x6,4,4\"\n-/* Definitions of target machine for GNU compiler.  IRIX 5 with GNU ld.\n-   Copyright (C) 2003 Free Software Foundation, Inc.\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-#undef LINK_SPEC\n-#define LINK_SPEC \"\\\n-%{G*} %{EB} %{EL} %{mips1} %{mips2} %{mips3} \\\n-%{bestGnum} %{shared} %{non_shared} \\\n-%{call_shared} %{no_archive} %{exact_version} \\\n-%{static: -non_shared} \\\n-%{!static: \\\n-  %{!shared: %{!non_shared: %{!call_shared: -call_shared}}}} \\\n-%{rpath} -init __do_global_ctors -fini __do_global_dtors \\\n--melf32bsmip\"\n-\n-/* The GNU linker supports one-only sections.  */\n-#define MAKE_DECL_ONE_ONLY(DECL) (DECL_WEAK (DECL) = 1)"}, {"sha": "9ce17f82bacfa2c7720065cd188644e7a3775ece", "filename": "gcc/config/mips/iris6.h", "status": "modified", "additions": 39, "deletions": 412, "changes": 451, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fconfig%2Fmips%2Firis6.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fconfig%2Fmips%2Firis6.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis6.h?ref=82563d3508aa64e97391e8792751b02d0becbeae", "patch": "@@ -19,384 +19,39 @@ along with GCC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-/* No more special IRIX 5 handling.  */\n-#undef TARGET_IRIX5\n-#define TARGET_IRIX5 0\n+/* Allow some special handling for IRIX 6.  */\n+#undef TARGET_IRIX6\n+#define TARGET_IRIX6 1\n \n /* Default to -mabi=n32 and -mips3.  */\n #undef MULTILIB_DEFAULTS\n #define MULTILIB_DEFAULTS { \"mabi=n32\" }\n \n-/* The IRIX 6 O32 assembler cannot calculate label differences, while both\n-   the N32/N64 assembler and gas can.  Override setting in iris5.h file.  */\n-#undef DWARF2_UNWIND_INFO\n-#define DWARF2_UNWIND_INFO !TARGET_SGI_O32_AS\n-\n-/* The IRIX 6 assembler will sometimes assign labels to the wrong\n-   section unless the labels are within .ent/.end blocks.  Therefore,\n-   we avoid creating such labels.  */\n-#define DWARF2_GENERATE_TEXT_SECTION_LABEL 0\n-\n-/* wchar_t is defined differently with and without -mabi=64.  */\n-\n-#undef WCHAR_TYPE\n-#define WCHAR_TYPE (Pmode == DImode ? \"int\" : \"long int\")\n-\n-#undef WCHAR_TYPE_SIZE\n-#define WCHAR_TYPE_SIZE 32\n-\n-/* Same for wint_t.  */\n-\n-#undef WINT_TYPE\n-#define WINT_TYPE (Pmode == DImode ? \"int\" : \"long int\")\n-\n-#undef WINT_TYPE_SIZE\n-#define WINT_TYPE_SIZE 32\n-\n-/* For IRIX 6, -mabi=64 implies TARGET_LONG64.  */\n-/* This is handled in override_options.  */\n-\n-/* Default to the mips2 ISA for the O32 ABI.  */\n-#undef SUBTARGET_CC1_SPEC\n-#define SUBTARGET_CC1_SPEC \"%{mabi=32: %{!mips*: -mips2}}\"\n-\n-/* #line directives let the O32 assembler create object files that cause the\n-   O32 linker to crash.  */\n-#undef SUBTARGET_CPP_SPEC\n-#define SUBTARGET_CPP_SPEC \"%{mabi=32: %{.S:-P}}\"\n-\n-/* We must pass -D_LONGLONG always, even when -ansi is used, because IRIX 6\n-   system header files require it.  This is OK, because gcc never warns\n-   when long long is used in system header files.  Alternatively, we can\n-   add support for the SGI builtin type __long_long.  */\n-\n-/* The GNU C++ standard library requires that __EXTENSIONS__ and\n-   _SGI_SOURCE be defined on at least IRIX 6.2 and probably all IRIX 6\n-   prior to 6.5.  They normally get defined if !ansi, for g++ we want\n-   them regardless.  We don't need this on IRIX 6.5 itself, but it\n-   shouldn't hurt other than the namespace pollution.  */\n-\n-/* Undefine because this includes iris5.h.  */\n-#undef  TARGET_OS_CPP_BUILTINS\n-#define TARGET_OS_CPP_BUILTINS()\t\t\t\\\n-    do {\t\t\t\t\t\t\\\n-\tbuiltin_define_std (\"host_mips\");\t\t\\\n-\tbuiltin_define (\"_LONGLONG\");\t\t\t\\\n-\tbuiltin_define (\"_MODERN_C\");\t\t\t\\\n-\tbuiltin_define (\"_SVR4_SOURCE\");\t\t\\\n-\tbuiltin_define_std (\"SYSTYPE_SVR4\");\t\t\\\n-\tbuiltin_define (\"__DSO__\");\t\t\t\\\n-\tbuiltin_define_std (\"unix\");\t\t\t\\\n-\tbuiltin_define_std (\"sgi\");\t\t\t\\\n-\tbuiltin_assert (\"system=svr4\");\t\t\t\\\n-\tbuiltin_assert (\"system=unix\");\t\t\t\\\n-\tbuiltin_assert (\"machine=sgi\");\t\t\t\\\n-\t\t\t\t\t\t\t\\\n-     if (mips_abi == ABI_32)\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\\\n-\tbuiltin_define (\"_ABIO32=1\");\t\t\t\\\n-\tbuiltin_define (\"_MIPS_SIM=_ABIO32\");\t\t\\\n-\tbuiltin_define (\"_MIPS_SZLONG=32\");\t\t\\\n-\tbuiltin_define (\"_MIPS_SZPTR=32\");\t\t\\\n-      }\t\t\t\t\t\t\t\\\n-     else if (mips_abi == ABI_64)\t\t\t\\\n-      {\t\t\t\t\t\t\t\\\n-\tbuiltin_define (\"_ABI64=3\");\t\t\t\\\n-\tbuiltin_define (\"_MIPS_SIM=_ABI64\");\t\t\\\n-\tbuiltin_define (\"_MIPS_SZLONG=64\");\t\t\\\n-\tbuiltin_define (\"_MIPS_SZPTR=64\");\t\t\\\n-      }\t\t\t\t\t\t\t\\\n-     else\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\\\n-\tbuiltin_define (\"_ABIN32=2\");\t\t\t\\\n-\tbuiltin_define (\"_MIPS_SIM=_ABIN32\");\t\t\\\n-\tbuiltin_define (\"_MIPS_SZLONG=32\");\t\t\\\n-\tbuiltin_define (\"_MIPS_SZPTR=32\");\t\t\\\n-      }\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\\\n-     if (!TARGET_FLOAT64)\t\t\t\t\\\n-\tbuiltin_define (\"_MIPS_FPSET=16\");\t\t\\\n-     else\t\t\t\t\t\t\\\n-\tbuiltin_define (\"_MIPS_FPSET=32\");\t\t\\\n-\t\t\t\t\t\t\t\\\n-     if (!TARGET_INT64)\t\t\t\t\t\\\n-\tbuiltin_define (\"_MIPS_SZINT=32\");\t\t\\\n-     else\t\t\t\t\t\t\\\n-\tbuiltin_define (\"_MIPS_SZINT=64\");\t\t\\\n-\t\t\t\t\t\t\t\\\n-     if (!ISA_MIPS1 && !ISA_MIPS2)\t\t\t\\\n-\tbuiltin_define (\"_COMPILER_VERSION=601\");\t\\\n-\t\t\t\t\t\t\t\\\n-     /* IRIX 6.5.18 and above provide many ISO C99\t\\\n-\tfeatures protected by the __c99 macro.\t\t\\\n-\tlibstdc++ v3 needs them as well.  */\t\t\\\n-     if ((!c_dialect_cxx () && flag_isoc99)\t\t\\\n-\t || c_dialect_cxx ())\t\t\t\t\\\n-\tbuiltin_define (\"__c99\");\t\t\t\\\n-\t\t\t\t\t\t\t\\\n-     if (c_dialect_cxx ())\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\\\n-\tbuiltin_define (\"__EXTENSIONS__\");\t\t\\\n-\tbuiltin_define (\"_SGI_SOURCE\");\t\t\t\\\n-      }\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\\\n-     if (!flag_iso)\t\t\t\t\t\\\n-       {\t\t\t\t\t\t\\\n-\t builtin_define (\"__EXTENSIONS__\");\t\t\\\n-\t builtin_define (\"_SGI_SOURCE\");\t\t\\\n-       }\t\t\t\t\t\t\\\n-} while (0)\n-\n-/* IRIX 6 uses DWARF-2.  */\n-#define DWARF2_DEBUGGING_INFO 1\n-#define MIPS_DEBUGGING_INFO 1\n-#undef PREFERRED_DEBUGGING_TYPE\n-#define PREFERRED_DEBUGGING_TYPE DWARF2_DEBUG\n+/* Force the default ABI onto the command line in order to make the specs\n+   easier to write.  Default to the mips2 ISA for the O32 ABI.  */\n+#define DRIVER_SELF_SPECS \\\n+  \"%{!mabi=*: -mabi=n32}\", \\\n+  \"%{mabi=32: %{!mips*: -mips2}}\"\n \n /* Force the generation of dwarf .debug_frame sections even if not\n    compiling -g.  This guarantees that we can unwind the stack.  */\n-#define DWARF2_FRAME_INFO !TARGET_SGI_O32_AS\n-\n-/* The size in bytes of a DWARF field indicating an offset or length\n-   relative to a debug info section, specified to be 4 bytes in the DWARF-2\n-   specification.  The SGI/MIPS ABI defines it to be the same as PTR_SIZE.  */\n-#define DWARF_OFFSET_SIZE PTR_SIZE\n-\n-/* The size in bytes of the initial length field in a debug info\n-   section.  The DWARF 3 (draft) specification defines this to be\n-   either 4 or 12 (with a 4-byte \"escape\" word when it's 12), but the\n-   SGI/MIPS ABI predates this standard and defines it to be the same\n-   as DWARF_OFFSET_SIZE.  */\n-#define DWARF_INITIAL_LENGTH_SIZE DWARF_OFFSET_SIZE\n-\n-/* There is no GNU as port for IRIX 6 yet, so we set MD_EXEC_PREFIX so that\n-   gcc will automatically find SGI as instead of searching the user's path.\n-   The latter can fail when building a cross compiler if the user has . in\n-   the path before /usr/bin, since then gcc will find and try to use the link\n-   to the cross assembler which can't possibly work.  */\n-\n-#undef MD_EXEC_PREFIX\n-#define MD_EXEC_PREFIX \"/usr/bin/\"\n-\n-/* We have no need for MD_STARTFILE_PREFIX.  */\n-#undef MD_STARTFILE_PREFIX\n+#define DWARF2_FRAME_INFO 1\n \n #undef MACHINE_TYPE\n #define MACHINE_TYPE \"SGI running IRIX 6.x\"\n \n-/* Stuff we need for IRIX 6 that isn't in IRIX 5.  */\n-\n-/* The SGI assembler doesn't like labels before the .ent, so we must output\n-   the .ent and function name here, which is the normal place for it.  */\n-\n-#undef ASM_DECLARE_FUNCTION_NAME\n-#define ASM_DECLARE_FUNCTION_NAME(STREAM, NAME, DECL)\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    if (mips_abi != ABI_32)\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-        fputs (\"\\t.ent\\t\", STREAM);\t\t\t\t\t\\\n-        assemble_name (STREAM, NAME);\t\t\t\t\t\\\n-        fputs (\"\\n\", STREAM);\t\t\t\t\t\t\\\n-        assemble_name (STREAM, NAME);\t\t\t\t\t\\\n-        fputs (\":\\n\", STREAM);\t\t\t\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-  } while (0)\n-\n-/* Likewise, the SGI assembler doesn't like labels after the .end, so we\n-   must output the .end here.  */\n-#undef ASM_DECLARE_FUNCTION_SIZE\n-#define ASM_DECLARE_FUNCTION_SIZE(STREAM, NAME, DECL)\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    if (mips_abi == ABI_32)\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-        tree name_tree = get_identifier (NAME);\t\t\t\t\\\n-        TREE_ASM_WRITTEN (name_tree) = 1;\t\t\t\t\\\n-      } \t\t\t\t\t\t\t\t\\\n-    else\t\t\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-        fputs (\"\\t.end\\t\", STREAM);\t\t\t\t\t\\\n-        assemble_name (STREAM, NAME);\t\t\t\t\t\\\n-        fputs (\"\\n\", STREAM);\t\t\t\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-  } while (0)\n-\n-/* Tell function_prologue in mips.c that we have already output the .ent/.end\n-   pseudo-ops.  */\n-#undef FUNCTION_NAME_ALREADY_DECLARED\n-#define FUNCTION_NAME_ALREADY_DECLARED (mips_abi != ABI_32)\n-\n-#undef SET_ASM_OP\t/* Has no equivalent.  See ASM_OUTPUT_DEF below.  */\n-\n-#if 0\n-/* This is *NOT* how to equate one symbol to another symbol.  The assembler\n-   '=' syntax just equates a name to a constant expression.\n-   See ASM_OUTPUT_WEAK_ALIAS.  */\n-\n-#define ASM_OUTPUT_DEF(FILE,LABEL1,LABEL2)\t\t\t\t\\\n- do {\tfprintf ((FILE), \"\\t\");\t\t\t\t\t\t\\\n-\tassemble_name (FILE, LABEL1);\t\t\t\t\t\\\n-\tfprintf (FILE, \" = \");\t\t\t\t\t\t\\\n-\tassemble_name (FILE, LABEL2);\t\t\t\t\t\\\n-\tfprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n-  } while (0)\n-#endif\n-\n-/* Define the strings used for the special svr4 .type and .size directives.  */\n-\n-#define TYPE_ASM_OP\t\"\\t.type\\t\"\n-#define SIZE_ASM_OP\t\"\\t.size\\t\"\n-\n-/* IRIX assembler does not support the init_priority C++ attribute.  */\n-#undef SUPPORTS_INIT_PRIORITY\n-#define SUPPORTS_INIT_PRIORITY 0\n-\n-/* A linker error can empirically be avoided by removing duplicate\n-   library search directories.  */\n-#define LINK_ELIMINATE_DUPLICATE_LDIRECTORIES 1\n-\n-#define POPSECTION_ASM_OP\t\"\\t.popsection\"\n-\n-/* ??? If no mabi=X option give, but a mipsX option is, then should depend\n-   on the mipsX option.  */\n-/* If no mips[3,4] option given, give the appropriate default for mabi=X */\n-#undef SUBTARGET_ASM_SPEC\n-#define SUBTARGET_ASM_SPEC \"%{!mabi*:-n32} %{mabi=32:-32} %{!mips*: %{!mabi*:-mips3} %{mabi=32:-mips2} %{mabi=n32|mabi=64:-mips3}}\"\n-\n-/* Must pass -g0 to the assembler, otherwise it may overwrite our\n-   debug info with its own debug info.  */\n-/* Must pass -show instead of -v.  */\n-/* Must pass -G 0 to the assembler, otherwise we may get warnings about\n-   GOT overflow.  */\n-/* Must pass -w to the assembler to quiet warnings about .ent/.end for dwarf2.  */\n-#if ((TARGET_CPU_DEFAULT | TARGET_DEFAULT) & MASK_GAS) == 0\n-/* We have a separate file for gas.  */\n-#undef SUBTARGET_MIPS_AS_ASM_SPEC\n-#define SUBTARGET_MIPS_AS_ASM_SPEC \"%{v:-show} -G 0 -w\"\n-\n-#undef SUBTARGET_ASM_DEBUGGING_SPEC\n-#define SUBTARGET_ASM_DEBUGGING_SPEC \"-g0\"\n-\n-/* The MIPS assembler occasionally misoptimizes.  Since GCC should be\n-   doing scheduling anyhow, just turn off optimization in the assembler.  */\n-#undef SUBTARGET_ASM_OPTIMIZING_SPEC\n-#define SUBTARGET_ASM_OPTIMIZING_SPEC \"-O0\"\n+#ifdef IRIX_USING_GNU_LD\n+#define IRIX_SUBTARGET_LINK_SPEC \\\n+  \"%{mabi=32: -melf32bsmip}%{mabi=n32: -melf32bmipn32}%{mabi=64: -melf64bmip}\"\n+#else\n+#define IRIX_SUBTARGET_LINK_SPEC \\\n+  \"%{w} -_SYSTYPE_SVR4 -woff 131 \\\n+   %{mabi=32: -32}%{mabi=n32: -n32}%{mabi=64: -64}%{!mabi*: -n32}\"\n #endif\n \n-/* The assembler now accepts .section pseudo-ops, but it does not allow\n-   one to change the section in the middle of a function, so we can't use\n-   the INIT_SECTION_ASM_OP code in crtstuff.  But we can build up the ctor\n-   and dtor lists this way, so we use -init and -fini to invoke the\n-   do_global_* functions instead of running collect2.  */\n-\n-#undef BSS_SECTION_ASM_OP\n-#define BSS_SECTION_ASM_OP_32\t\"\\t.data\"\n-#define BSS_SECTION_ASM_OP_64\t\"\\t.section\\t.bss\"\n-#define BSS_SECTION_ASM_OP\t\t\t\\\n-  (mips_abi != ABI_32 && mips_abi != ABI_O64\t\\\n-   ? BSS_SECTION_ASM_OP_64\t\t\t\\\n-   : BSS_SECTION_ASM_OP_32)\n-\n-#undef READONLY_DATA_SECTION_ASM_OP\n-#define READONLY_DATA_SECTION_ASM_OP_32\t\"\\t.rdata\"\n-#define READONLY_DATA_SECTION_ASM_OP_64\t\"\\t.section\\t.rodata\"\n-#define READONLY_DATA_SECTION_ASM_OP\t\t\\\n-  (mips_abi != ABI_32 && mips_abi != ABI_O64\t\\\n-   ? READONLY_DATA_SECTION_ASM_OP_64\t\t\\\n-   : READONLY_DATA_SECTION_ASM_OP_32)\n-\n-/* The default definition in defaults.h cannot cope with the runtime-variable\n-   definition of DWARF2_UNWIND_INFO above, so define here explicitly.  */\n-#define EH_FRAME_SECTION_NAME \".eh_frame\"\n-\n-/* MUST_USE_SJLJ_EXCEPTIONS has the same problem.  */\n-#define MUST_USE_SJLJ_EXCEPTIONS (DWARF2_UNWIND_INFO == 0)\n-\n-/* The native IRIX 6 O32 assembler doesn't support named sections, while\n-   the N32/N64 assembler does.  We need crt{begin, end}.o for the N32/N64\n-   ABIs, but there's no way to disable them for just one multilib.\n-   Therefore we provide dummy definitions to allow crtstuff.c to compile,\n-   but the resulting files are not used for the O32 ABI.  */\n-\n-#if (defined _ABIO32 && _MIPS_SIM == _ABIO32) \\\n-  && ((TARGET_CPU_DEFAULT | TARGET_DEFAULT) & MASK_GAS) == 0\n-\n-/* Provide dummy definitions.  */\n-#define CTORS_SECTION_ASM_OP \"\"\n-#define DTORS_SECTION_ASM_OP \"\"\n-\n-/* Undef so JCR_SECTION_NAME isn't defined and __JCR_{LIST, END}__ are not\n-   used.  */\n-#undef TARGET_ASM_NAMED_SECTION\n-\n-/* Undef so __EH_FRAME_BEGIN__/__FRAME_END__ are not used.  */\n-#undef EH_FRAME_SECTION_NAME\n-\n-#endif /* _MIPS_SIM == _ABIO32 && !GAS */\n-\n-/* SGI assembler needs all sorts of extra help to do alignment properly.  */\n-#undef ASM_OUTPUT_ALIGN\n-#define ASM_OUTPUT_ALIGN irix_asm_output_align\n-\n-#undef MAX_OFILE_ALIGNMENT\n-#define MAX_OFILE_ALIGNMENT (32768*8)\n-\n-/* ??? SGI assembler may core dump when compiling with -g.\n-   Sometimes as succeeds, but then we get a linker error. (cmds.c in 072.sc)\n-   Getting rid of .file solves both problems.  */\n-#undef ASM_OUTPUT_FILENAME\n-#define ASM_OUTPUT_FILENAME(STREAM, NUM_SOURCE_FILENAMES, NAME) \\\n-do\t\t\t\t\t\t\t\t\\\n-  {\t\t\t\t\t\t\t\t\\\n-    if (mips_abi == ABI_32)\t\t\t\t\t\\\n-      fprintf (STREAM, \"\\t.file\\t%d \", NUM_SOURCE_FILENAMES);\t\\\n-    else\t\t\t\t\t\t\t\\\n-      fprintf (STREAM, \"\\t#.file\\t%d \", NUM_SOURCE_FILENAMES);\t\\\n-    output_quoted_string (STREAM, NAME);\t\t\t\\\n-    fputs (\"\\n\", STREAM);\t\t\t\t\t\\\n-  }\t\t\t\t\t\t\t\t\\\n-while (0)\n-\n-/* ??? SGI assembler gives warning whenever .lcomm is used.  */\n-#undef ASM_OUTPUT_ALIGNED_LOCAL\n-#define ASM_OUTPUT_ALIGNED_LOCAL(STREAM, NAME, SIZE, ALIGN)\t\t   \\\n-do\t\t\t\t\t\t\t\t\t   \\\n-  {\t\t\t\t\t\t\t\t\t   \\\n-    if (mips_abi != ABI_32 && mips_abi != ABI_O64)\t\t\t   \\\n-      {\t\t\t\t\t\t\t\t\t   \\\n-\tbss_section ();\t\t\t\t\t\t\t   \\\n-\tmips_declare_object (STREAM, NAME, \"\", \":\\n\", 0);\t\t   \\\n-\tASM_OUTPUT_ALIGN (STREAM, floor_log2 (ALIGN / BITS_PER_UNIT));\t   \\\n-\tASM_OUTPUT_SKIP (STREAM, SIZE);\t\t\t\t\t   \\\n-      }\t\t\t\t\t\t\t\t\t   \\\n-    else\t\t\t\t\t\t\t\t   \\\n-      mips_declare_common_object (STREAM, NAME, \"\\n\\t.lcomm\\t\",\t\t   \\\n-\t\t\t\t  SIZE, ALIGN, false);\t\t\t   \\\n-  }\t\t\t\t\t\t\t\t\t   \\\n-while (0)\n-\n-/* A C statement (sans semicolon) to output to the stdio stream\n-   FILE the assembler definition of uninitialized global DECL named\n-   NAME whose size is SIZE bytes and alignment is ALIGN bytes.\n-   Try to use asm_output_aligned_bss to implement this macro.  */\n-\n-#define ASM_OUTPUT_ALIGNED_BSS(FILE, DECL, NAME, SIZE, ALIGN) \\\n-  asm_output_aligned_bss (FILE, DECL, NAME, SIZE, ALIGN)\n-\n-#undef ASM_DECLARE_OBJECT_NAME\n-#define ASM_DECLARE_OBJECT_NAME mips_declare_object_name\n-\n-#undef ASM_FINISH_DECLARE_OBJECT\n-#define ASM_FINISH_DECLARE_OBJECT mips_finish_declare_object\n-\n-#undef LOCAL_LABEL_PREFIX\n-#define LOCAL_LABEL_PREFIX ((mips_abi == ABI_32 || mips_abi == ABI_O64) \\\n-\t\t\t    ? \"$\" : \".\")\n-\n /* Profiling is supported via libprof1.a not -lc_p as in IRIX 3.  */\n-/* ??? If no mabi=X option give, but a mipsX option is, then should depend\n-   on the mipsX option.  */\n-#undef IRIX_STARTFILE_SPEC\n-#define IRIX_STARTFILE_SPEC \\\n+#undef STARTFILE_SPEC\n+#define STARTFILE_SPEC \\\n   \"%{!shared: \\\n      %{mabi=32:%{pg:gcrt1.o%s} \\\n        %{!pg:%{p:mcrt1.o%s libprof1.a%s}%{!p:crt1.o%s}}} \\\n@@ -413,69 +68,41 @@ while (0)\n            %{!p:/usr/lib64/mips4/crt1.o}}} \\\n        %{!mips4:%{pg:/usr/lib64/mips3/gcrt1.o} \\\n          %{!pg:%{p:/usr/lib64/mips3/mcrt1.o /usr/lib64/mips3/libprof1.a} \\\n-           %{!p:/usr/lib64/mips3/crt1.o}}}} \\\n-     %{!mabi*: \\\n-       %{mips4:%{pg:/usr/lib32/mips4/gcrt1.o%s} \\\n-         %{!pg:%{p:/usr/lib32/mips4/mcrt1.o%s /usr/lib32/mips4/libprof1.a%s} \\\n-           %{!p:/usr/lib32/mips4/crt1.o%s}}} \\\n-       %{!mips4:%{pg:/usr/lib32/mips3/gcrt1.o%s} \\\n-         %{!pg:%{p:/usr/lib32/mips3/mcrt1.o%s /usr/lib32/mips3/libprof1.a%s} \\\n-           %{!p:/usr/lib32/mips3/crt1.o%s}}}}}\"\n-\n-#undef STARTFILE_SPEC\n-#define STARTFILE_SPEC \"%(irix_startfile_spec) crtbegin.o%s\"\n+           %{!p:/usr/lib64/mips3/crt1.o}}}}} \\\n+  irix-crti.o%s crtbegin.o%s\"\n+\n+#ifdef IRIX_USING_GNU_LD\n+#define SUBTARGET_DONT_WARN_UNUSED_SPEC \"\"\n+#define SUBTARGET_WARN_UNUSED_SPEC \"\"\n+#else\n+#define SUBTARGET_DONT_WARN_UNUSED_SPEC \"-dont_warn_unused\"\n+#define SUBTARGET_WARN_UNUSED_SPEC \"-warn_unused\"\n+#endif\n \n #undef LIB_SPEC\n #define LIB_SPEC \\\n   \"%{mabi=n32: %{mips4:-L/usr/lib32/mips4} %{!mips4:-L/usr/lib32/mips3} \\\n      -L/usr/lib32} \\\n    %{mabi=64: %{mips4:-L/usr/lib64/mips4} %{!mips4:-L/usr/lib64/mips3} \\\n      -L/usr/lib64} \\\n-   %{!mabi*: %{mips4:-L/usr/lib32/mips4} %{!mips4:-L/usr/lib32/mips3} \\\n-     -L/usr/lib32} \\\n-   %{!shared: \\\n-     -dont_warn_unused %{p:libprof1.a%s}%{pg:libprof1.a%s} -lc -warn_unused}\"\n+   %{!shared:\" \\\n+     SUBTARGET_DONT_WARN_UNUSED_SPEC \\\n+     \" %{p:libprof1.a%s}%{pg:libprof1.a%s} -lc \" \\\n+     SUBTARGET_WARN_UNUSED_SPEC \"}\"\n \n /* Avoid getting two warnings for libgcc.a everytime we link.  */\n #undef LIBGCC_SPEC\n-#define LIBGCC_SPEC \"-dont_warn_unused -lgcc -warn_unused\"\n+#define LIBGCC_SPEC \\\n+  SUBTARGET_DONT_WARN_UNUSED_SPEC \" -lgcc \" SUBTARGET_WARN_UNUSED_SPEC\n \n-/* ??? If no mabi=X option give, but a mipsX option is, then should depend\n-   on the mipsX option.  */\n-#undef IRIX_ENDFILE_SPEC\n-#define IRIX_ENDFILE_SPEC \\\n-  \"%{!shared: \\\n+#undef ENDFILE_SPEC\n+#define ENDFILE_SPEC \\\n+  \"crtend.o%s irix-crtn.o%s \\\n+   %{!shared: \\\n      %{mabi=32:crtn.o%s}\\\n      %{mabi=n32:%{mips4:/usr/lib32/mips4/crtn.o%s}\\\n        %{!mips4:/usr/lib32/mips3/crtn.o%s}}\\\n      %{mabi=64:%{mips4:/usr/lib64/mips4/crtn.o%s}\\\n-       %{!mips4:/usr/lib64/mips3/crtn.o%s}}\\\n-     %{!mabi*:%{mips4:/usr/lib32/mips4/crtn.o%s}\\\n-       %{!mips4:/usr/lib32/mips3/crtn.o%s}}}\"\n-\n-#undef ENDFILE_SPEC\n-#define ENDFILE_SPEC \"crtend.o%s %(irix_endfile_spec)\"\n-\n-/* ??? If no mabi=X option give, but a mipsX option is, then should depend\n-   on the mipsX option.  */\n-#undef LINK_SPEC\n-#define LINK_SPEC \"\\\n-%{G*} %{EB} %{EL} %{mips1} %{mips2} %{mips3} %{mips4} \\\n-%{bestGnum} %{shared} %{non_shared} \\\n-%{call_shared} %{no_archive} %{exact_version} %{w} \\\n-%{!shared: %{!non_shared: %{!call_shared:%{!r: -call_shared -no_unresolved}}}} \\\n-%{rpath} %{!mabi=32: -init __do_global_ctors -fini __do_global_dtors} \\\n-%{shared:-hidden_symbol __do_global_ctors,__do_global_ctors_1,__do_global_dtors} \\\n--_SYSTYPE_SVR4 -woff 131 \\\n-%{mabi=32: -32}%{mabi=n32: -n32}%{mabi=64: -64}%{!mabi*: -n32}\"\n-\n-/* We need to disable collecting for the N32 and N64 ABIs.  */\n-#define COLLECT_PARSE_FLAG(FLAG)\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\\\n-  if (! strcmp (FLAG, \"-n32\") || ! strcmp (FLAG, \"-64\"))\t\\\n-    do_collecting = 0;\t\t\t\t\t\t\\\n-  if (! strcmp (FLAG, \"-32\") || ! strcmp (FLAG, \"-o32\"))\t\\\n-    do_collecting = 1;\t\t\t\t\t\t\\\n-} while (0)\n+       %{!mips4:/usr/lib64/mips3/crtn.o%s}}}\"\n \n #define MIPS_TFMODE_FORMAT mips_extended_format"}, {"sha": "01634faa41472c0c962c3f094652c2dd9f3154db", "filename": "gcc/config/mips/iris6gas.h", "status": "removed", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4cdb8e1d07a732cbe0ed4ff923cefd427cb5285/gcc%2Fconfig%2Fmips%2Firis6gas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4cdb8e1d07a732cbe0ed4ff923cefd427cb5285/gcc%2Fconfig%2Fmips%2Firis6gas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis6gas.h?ref=c4cdb8e1d07a732cbe0ed4ff923cefd427cb5285", "patch": "@@ -1,48 +0,0 @@\n-/* Definitions for MIPS running IRIX 6 using GNU AS\n-   Copyright (C) 2003, 2004\n-   Free Software Foundation, Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* Definitions of target machine for GNU compiler.  IRIX 6 with GNU as.  */\n-\n-/* Override iris6.h version to always use -init/-fini.\n-\n-   FIXME: integrate those use separate spec/define for this?  */\n-#undef LINK_SPEC\n-#define LINK_SPEC \"\\\n-%{G*} %{EB} %{EL} %{mips1} %{mips2} %{mips3} %{mips4} \\\n-%{bestGnum} %{shared} %{non_shared} \\\n-%{call_shared} %{no_archive} %{exact_version} %{w} \\\n-%{!shared: %{!non_shared: %{!call_shared:%{!r: -call_shared -no_unresolved}}}} \\\n-%{rpath} -init __do_global_ctors -fini __do_global_dtors \\\n-%{shared:-hidden_symbol __do_global_ctors,__do_global_ctors_1,__do_global_dtors} \\\n--_SYSTYPE_SVR4 -woff 131 \\\n-%{mabi=32: -32}%{mabi=n32: -n32}%{mabi=64: -64}%{!mabi*: -n32}\"\n-\n-/* Disable SHF_MERGE support.  Even if gas supports it, the IRIX 6 O32 ld\n-   does not without a special elspec(5) file.\n-\n-   FIXME: Only do this if not using GNU ld.  */\n-#if HAVE_GAS_SHF_MERGE\n-#undef HAVE_GAS_SHF_MERGE\n-#define HAVE_GAS_SHF_MERGE (mips_abi != ABI_32)\n-#endif /* HAVE_GAS_SHF_MERGE */\n-\n-/* There's no need to perform collecting with GNU as.  */\n-#undef COLLECT_PARSE_FLAG"}, {"sha": "c6e04e14cee5cfe51b41b668655e69299897f060", "filename": "gcc/config/mips/iris6gld.h", "status": "removed", "additions": 0, "deletions": 60, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4cdb8e1d07a732cbe0ed4ff923cefd427cb5285/gcc%2Fconfig%2Fmips%2Firis6gld.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4cdb8e1d07a732cbe0ed4ff923cefd427cb5285/gcc%2Fconfig%2Fmips%2Firis6gld.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis6gld.h?ref=c4cdb8e1d07a732cbe0ed4ff923cefd427cb5285", "patch": "@@ -1,60 +0,0 @@\n-/* Definitions of target machine for GNU compiler.  Iris version 6 with\n-   GNU ld.\n-   Copyright (C) 1999, 2000, 2002, 2004 Free Software Foundation, Inc.\n-   Written by Mark Mitchell <mark@codesourcery.com>.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-#undef LIB_SPEC\n-#define LIB_SPEC \\\n-  \"%{mabi=n32: %{mips4:-L/usr/lib32/mips4} %{!mips4:-L/usr/lib32/mips3} \\\n-     -L/usr/lib32} \\\n-   %{mabi=64: %{mips4:-L/usr/lib64/mips4} %{!mips4:-L/usr/lib64/mips3} \\\n-     -L/usr/lib64} \\\n-   %{!mabi*: %{mips4:-L/usr/lib32/mips4} %{!mips4:-L/usr/lib32/mips3} \\\n-     -L/usr/lib32} \\\n-   %{!shared: \\\n-     %{p:libprof1.a%s}%{pg:libprof1.a%s} -lc}\"\n-\n-/* Use the default libgcc spec.  */\n-#undef LIBGCC_SPEC\n-\n-/* ??? If no mabi=X option give, but a mipsX option is, then should depend\n-   on the mipsX option.  */\n-#undef LINK_SPEC\n-#define LINK_SPEC \"\\\n-%{G*} %{EB} %{EL} %{mips1} %{mips2} %{mips3} %{mips4} \\\n-%{bestGnum} %{shared} %{non_shared} \\\n-%{call_shared} %{no_archive} %{exact_version} \\\n-%{static: -non_shared} \\\n-%{!static: \\\n-  %{!shared: %{!non_shared: %{!call_shared: -call_shared}}}} \\\n-%{rpath} -init __gcc_init -fini __gcc_fini \\\n-%{mabi=32: -melf32bsmip}%{mabi=n32: -melf32bmipn32}%{mabi=64: -melf64bmip}%{!mabi*: -melf32bmipn32}\"\n-\n-#undef STARTFILE_SPEC\n-#define STARTFILE_SPEC \"%(irix_startfile_spec) irix-crti.o%s crtbegin.o%s\"\n-\n-#undef ENDFILE_SPEC\n-#define ENDFILE_SPEC \"crtend.o%s irix-crtn.o%s %(irix_endfile_spec)\"\n-\n-/* The GNU linker supports one-only sections.  */\n-#define MAKE_DECL_ONE_ONLY(DECL) (DECL_WEAK (DECL) = 1)\n-\n-#define INIT_SECTION_ASM_OP \"\\t.section\\t.init,0x1,0x6,4,4\"\n-#define FINI_SECTION_ASM_OP \"\\t.section\\t.fini,0x1,0x6,4,4\""}, {"sha": "d6888bbf014343e57729ee579bd4c0e169ff718f", "filename": "gcc/config/mips/irix-crti.asm", "status": "modified", "additions": 25, "deletions": 7, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fconfig%2Fmips%2Firix-crti.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fconfig%2Fmips%2Firix-crti.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firix-crti.asm?ref=82563d3508aa64e97391e8792751b02d0becbeae", "patch": "@@ -2,10 +2,31 @@\n \t.set\tnoreorder\n \t.set\tnomacro\n \n-\t.section .init,0x1,0x6,4,4\n-\tjr\t$31\n-\tnop\n+/* The GNU and SGI linkers differ in their implementation of -init and -fini.\n+   With the GNU linker, there can only be a single -init option, and the\n+   linker simply sets DT_INIT to that value.  gcc's initialization and\n+   finalization code can go directly in .init, with the prologue and\n+   epilogue of the main initialization routine being provided by external\n+   object files (*crti.o and *crtn.o in this case).\n \n+   The SGI linker instead accepts several -init options.  It will set DT_INIT\n+   to a linker-created function (placed in .init) that calls each of the -init\n+   functions in turn.  If there is any user code in .init, this linker-created\n+   function will be placed after it.  Note that such user code is not treated\n+   specially; it will only be called if the -init options arrange for it to\n+   be called.\n+\n+   In theory, the SGI model should allow the crti, crtn and intermediate code\n+   to go in .init, just like it can with the GNU linker.  However, doing this\n+   seems to confuse the linker and triggers an internal error:\n+\n+      ld32: FATAL   2  : Internal: at ../../ld/mips_code.c mips_code_fixup()\n+\t text section overflow!\n+\n+   (seen with MIPSpro 7.30).  We therefore put everything in a special\n+   .gcc_init section instead.  */\n+\n+\t.section .gcc_init,\"ax\",@progbits\n \t.globl\t__gcc_init\n __gcc_init:\n #if _MIPS_SIM == _ABIO32\n@@ -17,10 +38,7 @@ __gcc_init:\n \tsd\t$28,8($sp)\n #endif\n \n-\t.section .fini,0x1,0x6,4,4\n-\tjr\t$31\n-\tnop\n-\n+\t.section .gcc_fini,\"ax\",@progbits\n \t.globl\t__gcc_fini\n __gcc_fini:\n #if _MIPS_SIM == _ABIO32"}, {"sha": "600576cb1d7001d2c0d05bf1289b566b7357f777", "filename": "gcc/config/mips/irix-crtn.asm", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fconfig%2Fmips%2Firix-crtn.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fconfig%2Fmips%2Firix-crtn.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firix-crtn.asm?ref=82563d3508aa64e97391e8792751b02d0becbeae", "patch": "@@ -2,7 +2,7 @@\n \t.set\tnoreorder\n \t.set\tnomacro\n \n-\t.section .init,0x1,0x6,4,4\n+\t.section .gcc_init,\"ax\",@progbits\n #if _MIPS_SIM == _ABIO32\n \tlw\t$31,0($sp)\n \tjr\t$31\n@@ -14,7 +14,7 @@\n \tdaddiu\t$sp,$sp,16\n #endif\n \n-\t.section .fini,0x1,0x6,4,4\n+\t.section .gcc_fini,\"ax\",@progbits\n #if _MIPS_SIM == _ABIO32\n \tlw\t$31,0($sp)\n \tjr\t$31"}, {"sha": "6b785fac62c177db7575e91287644a9cfdd22fe3", "filename": "gcc/config/mips/mips-protos.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-protos.h?ref=82563d3508aa64e97391e8792751b02d0becbeae", "patch": "@@ -157,9 +157,6 @@ extern HOST_WIDE_INT mips_debugger_offset (rtx, HOST_WIDE_INT);\n extern void print_operand (FILE *, rtx, int);\n extern void print_operand_address (FILE *, rtx);\n extern int mips_output_external (FILE *, tree, const char *);\n-#if TARGET_IRIX\n-extern void irix_output_external_libcall (rtx);\n-#endif\n extern void mips_output_filename (FILE *, const char *);\n extern void mips_output_lineno (FILE *, int);\n extern void mips_output_ascii (FILE *, const char *, size_t, const char *);"}, {"sha": "edb673b69356491c2afddf2a3a629105d560c47f", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 23, "deletions": 301, "changes": 324, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=82563d3508aa64e97391e8792751b02d0becbeae", "patch": "@@ -181,6 +181,9 @@ static void mips_set_tune (const struct mips_cpu_info *);\n static struct machine_function *mips_init_machine_status (void);\n static void print_operand_reloc (FILE *, rtx, const char **);\n static bool mips_assemble_integer (rtx, unsigned int, int);\n+#if TARGET_IRIX\n+static void irix_output_external_libcall (rtx);\n+#endif\n static void mips_file_start (void);\n static void mips_file_end (void);\n static bool mips_rewrite_small_data_p (rtx);\n@@ -265,19 +268,6 @@ static tree mips_gimplify_va_arg_expr (tree, tree, tree *, tree *);\n static bool mips_pass_by_reference (CUMULATIVE_ARGS *, enum machine_mode mode,\n \t\t\t\t    tree, bool);\n \n-#if TARGET_IRIX\n-static void irix_asm_named_section_1 (const char *, unsigned int,\n-\t\t\t\t      unsigned int);\n-static void irix_asm_named_section (const char *, unsigned int);\n-static int irix_section_align_entry_eq (const void *, const void *);\n-static hashval_t irix_section_align_entry_hash (const void *);\n-static void irix_file_start (void);\n-static int irix_section_align_1 (void **, void *);\n-static void copy_file_data (FILE *, FILE *);\n-static void irix_file_end (void);\n-static unsigned int irix_section_type_flags (tree, const char *, int);\n-#endif\n-\n /* Structure to be filled in by compute_frame_size with register\n    save masks, and offsets for the current function.  */\n \n@@ -663,21 +653,11 @@ const struct mips_cpu_info mips_cpu_info_table[] = {\n \n #undef TARGET_ASM_FILE_START\n #undef TARGET_ASM_FILE_END\n-#if TARGET_IRIX\n-#define TARGET_ASM_FILE_START irix_file_start\n-#define TARGET_ASM_FILE_END irix_file_end\n-#else\n #define TARGET_ASM_FILE_START mips_file_start\n #define TARGET_ASM_FILE_END mips_file_end\n-#endif\n #undef TARGET_ASM_FILE_START_FILE_DIRECTIVE\n #define TARGET_ASM_FILE_START_FILE_DIRECTIVE true\n \n-#if TARGET_IRIX\n-#undef TARGET_SECTION_TYPE_FLAGS\n-#define TARGET_SECTION_TYPE_FLAGS irix_section_type_flags\n-#endif\n-\n #undef TARGET_INIT_LIBFUNCS\n #define TARGET_INIT_LIBFUNCS mips_init_libfuncs\n \n@@ -3432,7 +3412,7 @@ mips_build_builtin_va_list (void)\n       layout_type (record);\n       return record;\n     }\n-  else if (TARGET_IRIX && !TARGET_IRIX5)\n+  else if (TARGET_IRIX && TARGET_IRIX6)\n     /* On IRIX 6, this type is 'char *'.  */\n     return build_pointer_type (char_type_node);\n   else\n@@ -4037,58 +4017,6 @@ override_options (void)\n   if (!TARGET_OLDABI)\n     flag_pcc_struct_return = 0;\n \n-#if defined(USE_COLLECT2)\n-  /* For IRIX 5 or IRIX 6 with integrated O32 ABI support, USE_COLLECT2 is\n-     always defined when GNU as is not in use, but collect2 is only used\n-     for the O32 ABI, so override the toplev.c and target-def.h defaults\n-     for flag_gnu_linker, TARGET_ASM_{CONSTRUCTOR, DESTRUCTOR} and\n-     TARGET_HAVE_CTORS_DTORS.\n-\n-     Since the IRIX 5 and IRIX 6 O32 assemblers cannot handle named\n-     sections, constructor/destructor handling depends on the ABI in use.\n-\n-     Since USE_COLLECT2 is defined, we only need to restore the non-collect2\n-     defaults for the N32/N64 ABIs.  */\n-  if (TARGET_IRIX && !TARGET_SGI_O32_AS)\n-    {\n-      targetm.have_ctors_dtors = true;\n-      targetm.asm_out.constructor = default_named_section_asm_out_constructor;\n-      targetm.asm_out.destructor = default_named_section_asm_out_destructor;\n-    }\n-#endif\n-\n-  /* Handle some quirks of the IRIX 5 and IRIX 6 O32 assemblers.  */\n-\n-  if (TARGET_SGI_O32_AS)\n-    {\n-      /* They don't recognize `.[248]byte'.  */\n-      targetm.asm_out.unaligned_op.hi = \"\\t.align 0\\n\\t.half\\t\";\n-      targetm.asm_out.unaligned_op.si = \"\\t.align 0\\n\\t.word\\t\";\n-      /* The IRIX 6 O32 assembler gives an error for `align 0; .dword',\n-\t contrary to the documentation, so disable it.  */\n-      targetm.asm_out.unaligned_op.di = NULL;\n-\n-      /* They cannot handle named sections.  */\n-      targetm.have_named_sections = false;\n-      /* Therefore, EH_FRAME_SECTION_NAME isn't defined and we must use\n-\t collect2.  */\n-      targetm.terminate_dw2_eh_frame_info = true;\n-      targetm.asm_out.eh_frame_section = collect2_eh_frame_section;\n-\n-      /* They cannot handle debug information.  */\n-      if (write_symbols != NO_DEBUG)\n-\t{\n-\t  /* Adapt wording to IRIX version: IRIX 5 only had a single ABI,\n-\t     so -mabi=32 isn't usually specified.  */\n-\t  if (TARGET_IRIX5)\n-\t    inform (\"-g is only supported using GNU as,\");\n-\t  else\n-\t    inform (\"-g is only supported using GNU as with -mabi=32,\");\n-\t  inform (\"-g option disabled\");\n-\t  write_symbols = NO_DEBUG;\n-\t}\n-    }\n-\n   if ((target_flags_explicit & MASK_BRANCHLIKELY) == 0)\n     {\n       /* If neither -mbranch-likely nor -mno-branch-likely was given\n@@ -4996,7 +4924,7 @@ mips_output_external (FILE *file ATTRIBUTE_UNUSED, tree decl, const char *name)\n }\n \n #if TARGET_IRIX\n-void\n+static void\n irix_output_external_libcall (rtx fun)\n {\n   register struct extern_list *p;\n@@ -5027,7 +4955,7 @@ mips_output_filename (FILE *stream, const char *name)\n   else if (mips_output_filename_first_time)\n     {\n       mips_output_filename_first_time = 0;\n-      SET_FILE_NUMBER ();\n+      num_source_filenames += 1;\n       current_function_file = name;\n       ASM_OUTPUT_FILENAME (stream, num_source_filenames, name);\n       /* This tells mips-tfile that stabs will follow.  */\n@@ -5046,7 +4974,7 @@ mips_output_filename (FILE *stream, const char *name)\n   else if (name != current_function_file\n \t   && strcmp (name, current_function_file) != 0)\n     {\n-      SET_FILE_NUMBER ();\n+      num_source_filenames += 1;\n       current_function_file = name;\n       ASM_OUTPUT_FILENAME (stream, num_source_filenames, name);\n     }\n@@ -5070,7 +4998,6 @@ mips_output_lineno (FILE *stream, int line)\n   else\n     {\n       fprintf (stream, \"\\n\\t.loc\\t%d %d\\n\", num_source_filenames, line);\n-      LABEL_AFTER_LOC (stream);\n     }\n }\n \f\n@@ -5168,9 +5095,8 @@ mips_file_start (void)\n   if (TARGET_MIPS_AS && optimize && flag_delayed_branch)\n     fprintf (asm_out_file, \"\\t.set\\tnobopt\\n\");\n \n-  if (TARGET_GAS)\n+  if (TARGET_GAS && !TARGET_IRIX)\n     {\n-#if defined(OBJECT_FORMAT_ELF) && !TARGET_IRIX\n       /* Generate a special section to describe the ABI switches used to\n \t produce the resultant binary.  This used to be done by the assembler\n \t setting bits in the ELF header's flags field, but we have run out of\n@@ -5205,16 +5131,12 @@ mips_file_start (void)\n \n       /* Restore the default section.  */\n       fprintf (asm_out_file, \"\\t.previous\\n\");\n-#endif\n     }\n \n   /* Generate the pseudo ops that System V.4 wants.  */\n-#ifndef ABICALLS_ASM_OP\n-#define ABICALLS_ASM_OP \"\\t.abicalls\"\n-#endif\n   if (TARGET_ABICALLS)\n     /* ??? but do not want this (or want pic0) if -non-shared? */\n-    fprintf (asm_out_file, \"%s\\n\", ABICALLS_ASM_OP);\n+    fprintf (asm_out_file, \"\\t.abicalls\\n\");\n \n   if (TARGET_MIPS16)\n     fprintf (asm_out_file, \"\\t.set\\tmips16\\n\");\n@@ -5317,7 +5239,7 @@ mips_output_aligned_decl_common (FILE *stream, tree decl, const char *name,\n   else\n     /* The SGI o32 assembler doesn't accept an alignment.  */\n     mips_declare_common_object (stream, name, \"\\n\\t.comm\\t\",\n-\t\t\t\tsize, align, !TARGET_SGI_O32_AS);\n+\t\t\t\tsize, align, true);\n }\n \n /* Declare a common object of SIZE bytes using asm directive INIT_STRING.\n@@ -5380,21 +5302,18 @@ void\n mips_declare_object_name (FILE *stream, const char *name,\n \t\t\t  tree decl ATTRIBUTE_UNUSED)\n {\n-  if (!TARGET_SGI_O32_AS)\n-    {\n #ifdef ASM_OUTPUT_TYPE_DIRECTIVE\n-      ASM_OUTPUT_TYPE_DIRECTIVE (stream, name, \"object\");\n+  ASM_OUTPUT_TYPE_DIRECTIVE (stream, name, \"object\");\n #endif\n \n-      size_directive_output = 0;\n-      if (!flag_inhibit_size_directive && DECL_SIZE (decl))\n-\t{\n-\t  HOST_WIDE_INT size;\n+  size_directive_output = 0;\n+  if (!flag_inhibit_size_directive && DECL_SIZE (decl))\n+    {\n+      HOST_WIDE_INT size;\n \n-\t  size_directive_output = 1;\n-\t  size = int_size_in_bytes (TREE_TYPE (decl));\n-\t  ASM_OUTPUT_SIZE_DIRECTIVE (stream, name, size);\n-\t}\n+      size_directive_output = 1;\n+      size = int_size_in_bytes (TREE_TYPE (decl));\n+      ASM_OUTPUT_SIZE_DIRECTIVE (stream, name, size);\n     }\n \n   mips_declare_object (stream, name, \"\", \":\\n\", 0);\n@@ -5408,8 +5327,7 @@ mips_finish_declare_object (FILE *stream, tree decl, int top_level, int at_end)\n   const char *name;\n \n   name = XSTR (XEXP (DECL_RTL (decl), 0), 0);\n-  if (!TARGET_SGI_O32_AS\n-      && !flag_inhibit_size_directive\n+  if (!flag_inhibit_size_directive\n       && DECL_SIZE (decl) != 0\n       && !at_end && top_level\n       && DECL_INITIAL (decl) == error_mark_node\n@@ -5981,6 +5899,10 @@ mips_output_function_prologue (FILE *file, HOST_WIDE_INT size ATTRIBUTE_UNUSED)\n       fputs (\":\\n\", file);\n     }\n \n+  /* Stop mips_file_end from treating this function as external.  */\n+  if (TARGET_IRIX && mips_abi == ABI_32)\n+    TREE_ASM_WRITTEN (DECL_NAME (cfun->decl)) = 1;\n+\n   if (!flag_inhibit_size_directive)\n     {\n       /* .frame FRAMEREG, FRAMESIZE, RETREG */\n@@ -9265,204 +9187,4 @@ mips_emit_prefetch (rtx *operands)\n   return \"\";\n }\n \n-\n-\f\n-#if TARGET_IRIX\n-/* Output assembly to switch to section NAME with attribute FLAGS.  */\n-\n-static void\n-irix_asm_named_section_1 (const char *name, unsigned int flags,\n-\t\t\t   unsigned int align)\n-{\n-  unsigned int sh_type, sh_flags, sh_entsize;\n-\n-  sh_flags = 0;\n-  if (!(flags & SECTION_DEBUG))\n-    sh_flags |= 2; /* SHF_ALLOC */\n-  if (flags & SECTION_WRITE)\n-    sh_flags |= 1; /* SHF_WRITE */\n-  if (flags & SECTION_CODE)\n-    sh_flags |= 4; /* SHF_EXECINSTR */\n-  if (flags & SECTION_SMALL)\n-    sh_flags |= 0x10000000; /* SHF_MIPS_GPREL */\n-  if (strcmp (name, \".debug_frame\") == 0)\n-    sh_flags |= 0x08000000; /* SHF_MIPS_NOSTRIP */\n-  if (flags & SECTION_DEBUG)\n-    sh_type = 0x7000001e; /* SHT_MIPS_DWARF */\n-  else if (flags & SECTION_BSS)\n-    sh_type = 8; /* SHT_NOBITS */\n-  else\n-    sh_type = 1; /* SHT_PROGBITS */\n-\n-  if (flags & SECTION_CODE)\n-    sh_entsize = 4;\n-  else\n-    sh_entsize = 0;\n-\n-  fprintf (asm_out_file, \"\\t.section %s,%#x,%#x,%u,%u\\n\",\n-\t   name, sh_type, sh_flags, sh_entsize, align);\n-}\n-\n-static void\n-irix_asm_named_section (const char *name, unsigned int flags)\n-{\n-  if (TARGET_SGI_O32_AS)\n-    default_no_named_section (name, flags);\n-  else if (mips_abi == ABI_32 && TARGET_GAS)\n-    default_elf_asm_named_section (name, flags);\n-  else\n-    irix_asm_named_section_1 (name, flags, 0);\n-}\n-\n-/* In addition to emitting a .align directive, record the maximum\n-   alignment requested for the current section.  */\n-\n-struct irix_section_align_entry GTY (())\n-{\n-  const char *name;\n-  unsigned int log;\n-  unsigned int flags;\n-};\n-\n-static htab_t irix_section_align_htab;\n-static FILE *irix_orig_asm_out_file;\n-\n-static int\n-irix_section_align_entry_eq (const void *p1, const void *p2)\n-{\n-  const struct irix_section_align_entry *old = p1;\n-  const char *new = p2;\n-\n-  return strcmp (old->name, new) == 0;\n-}\n-\n-static hashval_t\n-irix_section_align_entry_hash (const void *p)\n-{\n-  const struct irix_section_align_entry *old = p;\n-  return htab_hash_string (old->name);\n-}\n-\n-void\n-irix_asm_output_align (FILE *file, unsigned int log)\n-{\n-  const char *section = current_section_name ();\n-  struct irix_section_align_entry **slot, *entry;\n-\n-  if (mips_abi != ABI_32)\n-    {\n-      if (! section)\n-\tabort ();\n-\n-      slot = (struct irix_section_align_entry **)\n-\thtab_find_slot_with_hash (irix_section_align_htab, section,\n-\t\t\t\t  htab_hash_string (section), INSERT);\n-      entry = *slot;\n-      if (! entry)\n-\t{\n-\t  entry = (struct irix_section_align_entry *)\n-\t    xmalloc (sizeof (struct irix_section_align_entry));\n-\t  *slot = entry;\n-\t  entry->name = section;\n-\t  entry->log = log;\n-\t  entry->flags = current_section_flags ();\n-\t}\n-      else if (entry->log < log)\n-\tentry->log = log;\n-    }\n-\n-  fprintf (file, \"\\t.align\\t%u\\n\", log);\n-}\n-\n-/* The IRIX assembler does not record alignment from .align directives,\n-   but takes it from the first .section directive seen.  Play file\n-   switching games so that we can emit a .section directive at the\n-   beginning of the file with the proper alignment attached.  */\n-\n-static void\n-irix_file_start (void)\n-{\n-  mips_file_start ();\n-\n-  if (mips_abi == ABI_32)\n-    return;\n-\n-  irix_orig_asm_out_file = asm_out_file;\n-  asm_out_file = tmpfile ();\n-\n-  irix_section_align_htab = htab_create (31, irix_section_align_entry_hash,\n-\t\t\t\t\t irix_section_align_entry_eq, NULL);\n-}\n-\n-static int\n-irix_section_align_1 (void **slot, void *data ATTRIBUTE_UNUSED)\n-{\n-  const struct irix_section_align_entry *entry\n-    = *(const struct irix_section_align_entry **) slot;\n-\n-  irix_asm_named_section_1 (entry->name, entry->flags, 1 << entry->log);\n-  return 1;\n-}\n-\n-static void\n-copy_file_data (FILE *to, FILE *from)\n-{\n-  char buffer[8192];\n-  size_t len;\n-  rewind (from);\n-  if (ferror (from))\n-    fatal_error (\"can't rewind temp file: %m\");\n-\n-  while ((len = fread (buffer, 1, sizeof (buffer), from)) > 0)\n-    if (fwrite (buffer, 1, len, to) != len)\n-      fatal_error (\"can't write to output file: %m\");\n-\n-  if (ferror (from))\n-    fatal_error (\"can't read from temp file: %m\");\n-\n-  if (fclose (from))\n-    fatal_error (\"can't close temp file: %m\");\n-}\n-\n-static void\n-irix_file_end (void)\n-{\n-  if (mips_abi != ABI_32)\n-    {\n-      /* Emit section directives with the proper alignment at the top of the\n-\t real output file.  */\n-      FILE *temp = asm_out_file;\n-      asm_out_file = irix_orig_asm_out_file;\n-      htab_traverse (irix_section_align_htab, irix_section_align_1, NULL);\n-\n-      /* Copy the data emitted to the temp file to the real output file.  */\n-      copy_file_data (asm_out_file, temp);\n-    }\n-\n-  mips_file_end ();\n-}\n-\n-\n-/* Implement TARGET_SECTION_TYPE_FLAGS.  Make sure that .sdata and\n-   .sbss sections get the SECTION_SMALL flag: this isn't set by the\n-   default code.  */\n-\n-static unsigned int\n-irix_section_type_flags (tree decl, const char *section, int relocs_p)\n-{\n-  unsigned int flags;\n-\n-  flags = default_section_type_flags (decl, section, relocs_p);\n-\n-  if (strcmp (section, \".sdata\") == 0\n-      || strcmp (section, \".sbss\") == 0\n-      || strncmp (section, \".gnu.linkonce.s.\", 16) == 0\n-      || strncmp (section, \".gnu.linkonce.sb.\", 17) == 0)\n-    flags |= SECTION_SMALL;\n-\n-  return flags;\n-}\n-\n-#endif /* TARGET_IRIX */\n-\n #include \"gt-mips.h\""}, {"sha": "0ff8642f27964b3e9d90ff58f52e605b007c85f9", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 1, "deletions": 33, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=82563d3508aa64e97391e8792751b02d0becbeae", "patch": "@@ -365,8 +365,7 @@ extern const struct mips_cpu_info *mips_tune_info;\n \n /* IRIX specific stuff.  */\n #define TARGET_IRIX\t   0\n-#define TARGET_IRIX5\t   0\n-#define TARGET_SGI_O32_AS  (TARGET_IRIX && mips_abi == ABI_32 && !TARGET_GAS)\n+#define TARGET_IRIX6\t   0\n \n /* Define preprocessor macros for the -march and -mtune options.\n    PREFIX is either _MIPS_ARCH or _MIPS_TUNE, INFO is the selected\n@@ -1060,12 +1059,6 @@ extern const struct mips_cpu_info *mips_tune_info;\n #define ASM_ABI_DEFAULT_SPEC \"-mabi=eabi\"\n #endif\n \n-/* Only ELF targets can switch the ABI.  */\n-#ifndef OBJECT_FORMAT_ELF\n-#undef ASM_ABI_DEFAULT_SPEC\n-#define ASM_ABI_DEFAULT_SPEC \"\"\n-#endif\n-\n /* TARGET_ASM_SPEC is used to select either MIPS_AS_ASM_SPEC or\n    GAS_ASM_SPEC as the default, depending upon the value of\n    TARGET_DEFAULT.  */\n@@ -1210,18 +1203,6 @@ extern const struct mips_cpu_info *mips_tune_info;\n #ifndef SUBTARGET_EXTRA_SPECS\n #define SUBTARGET_EXTRA_SPECS\n #endif\n-\n-/* If defined, this macro is an additional prefix to try after\n-   `STANDARD_EXEC_PREFIX'.  */\n-\n-#ifndef MD_EXEC_PREFIX\n-#define MD_EXEC_PREFIX \"/usr/lib/cmplrs/cc/\"\n-#endif\n-\n-#ifndef MD_STARTFILE_PREFIX\n-#define MD_STARTFILE_PREFIX \"/usr/lib/cmplrs/cc/\"\n-#endif\n-\n \f\n #define DBX_DEBUGGING_INFO 1\t\t/* generate stabs (OSF/rose) */\n #define MIPS_DEBUGGING_INFO 1\t\t/* MIPS specific debugging info */\n@@ -2858,11 +2839,6 @@ while (0)\n \n \n /* How to tell the debugger about changes of source files.  */\n-\n-#ifndef SET_FILE_NUMBER\n-#define SET_FILE_NUMBER() ++num_source_filenames\n-#endif\n-\n #define ASM_OUTPUT_SOURCE_FILENAME(STREAM, NAME)\t\t\t\\\n   mips_output_filename (STREAM, NAME)\n \n@@ -2876,14 +2852,6 @@ do\t\t\t\t\t\t\t\t\\\n   }\t\t\t\t\t\t\t\t\\\n while (0)\n \n-/* This is how to output a note the debugger telling it the line number\n-   to which the following sequence of instructions corresponds.\n-   Silicon graphics puts a label after each .loc.  */\n-\n-#ifndef LABEL_AFTER_LOC\n-#define LABEL_AFTER_LOC(STREAM)\n-#endif\n-\n #ifndef ASM_OUTPUT_SOURCE_LINE\n #define ASM_OUTPUT_SOURCE_LINE(STREAM, LINE, COUNTER)\t\t\\\n   mips_output_lineno (STREAM, LINE)"}, {"sha": "c0859c0cecdefe9372aa48766e1c71bac432f0eb", "filename": "gcc/config/mips/sdb.h", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fconfig%2Fmips%2Fsdb.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fconfig%2Fmips%2Fsdb.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fsdb.h?ref=82563d3508aa64e97391e8792751b02d0becbeae", "patch": "@@ -87,3 +87,18 @@ do {\t\t\t\t\t\t\t\\\n } while (0)\n \n #define PUT_SDB_EPILOGUE_END(NAME)\n+\n+/* We need to use .esize and .etype instead of .size and .type to\n+   avoid conflicting with ELF directives.  */\n+#undef PUT_SDB_SIZE\n+#define PUT_SDB_SIZE(a)\t\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\\\n+  fprintf (asm_out_file, \"\\t.esize\\t\" HOST_WIDE_INT_PRINT_DEC \";\", \\\n+ \t   (HOST_WIDE_INT) (a));\t\t\t\\\n+} while (0)\n+\n+#undef PUT_SDB_TYPE\n+#define PUT_SDB_TYPE(a)\t\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\\\n+  fprintf (asm_out_file, \"\\t.etype\\t0x%x;\", (a));\t\\\n+} while (0)"}, {"sha": "4a7143f9ddd26b612efcb0784e6df3efadd5f6eb", "filename": "gcc/config/mips/t-iris", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fconfig%2Fmips%2Ft-iris", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fconfig%2Fmips%2Ft-iris", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-iris?ref=82563d3508aa64e97391e8792751b02d0becbeae", "patch": "@@ -1,2 +1,12 @@\n # Find all of the declarations from the header files\n-FIXPROTO_DEFINES= -D__EXTENSIONS__ -D_SGI_SOURCE -D_LANGUAGE_C_PLUS_PLUS\n+FIXPROTO_DEFINES = -D__EXTENSIONS__ -D_SGI_SOURCE -D_LANGUAGE_C_PLUS_PLUS\n+\n+$(T)irix-crti.o: $(srcdir)/config/mips/irix-crti.asm $(GCC_PASSES)\n+\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(MULTILIB_CFLAGS) $(INCLUDES) \\\n+\t-c -o $@ -x assembler-with-cpp $<\n+\n+$(T)irix-crtn.o: $(srcdir)/config/mips/irix-crtn.asm $(GCC_PASSES)\n+\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(MULTILIB_CFLAGS) $(INCLUDES) \\\n+\t-c -o $@ -x assembler-with-cpp $<\n+\n+EXTRA_MULTILIB_PARTS = crtbegin.o crtend.o irix-crti.o irix-crtn.o"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "gcc/config/mips/t-iris5-6", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fconfig%2Fmips%2Ft-iris5-6", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fconfig%2Fmips%2Ft-iris5-6", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-iris5-6?ref=82563d3508aa64e97391e8792751b02d0becbeae", "patch": "@@ -1,30 +0,0 @@\n-# Build a shared libgcc library.\n-SHLIB_EXT = .so\n-SHLIB_SOLINK = @shlib_base_name@.so\n-SHLIB_SONAME = @shlib_so_name@.so.1\n-SHLIB_NAME = @shlib_dir@@shlib_so_name@.so.1\n-SHLIB_MAP = @shlib_map_file@\n-SHLIB_OBJS = @shlib_objs@\n-SHLIB_SLIBDIR_QUAL = @shlib_slibdir_qual@\n-\n-SHLIB_LINK = $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -shared -nodefaultlibs \\\n-        -Wl,-soname,$(SHLIB_SONAME) \\\n-\t-o $(SHLIB_NAME) @multilib_flags@ $(SHLIB_OBJS) -lc && \\\n-\trm -f $(SHLIB_SOLINK) && \\\n-\t$(LN_S) $(SHLIB_NAME) $(SHLIB_SOLINK)\n-# ??? Irix 6.5 seems to eat the option fine (if we somehow remove the\n-# -hidden_symbol option, which is documented to be ignored in conjunction\n-# with -exports_file), but fails to actually hide any symbols.\n-#\t-Wl,-exports_file,$(SHLIB_MAP)\n-\n-# $(slibdir) double quoted to protect it from expansion while building\n-# libgcc.mk.  We want this delayed until actual install time.\n-SHLIB_INSTALL = \\\n-\t$$(mkinstalldirs) $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL); \\\n-\t$(INSTALL_DATA) $(SHLIB_NAME) \\\n-\t  $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SONAME); \\\n-\trm -f $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SOLINK); \\\n-\t$(LN_S) $(SHLIB_SONAME) \\\n-\t  $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SOLINK)\n-SHLIB_MKMAP = $(srcdir)/mkmap-flat.awk\n-SHLIB_MAPFILES = $(srcdir)/libgcc-std.ver"}, {"sha": "4e111fa75a03dd68f4c05c7a64a31fa525090279", "filename": "gcc/config/mips/t-iris5-as", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4cdb8e1d07a732cbe0ed4ff923cefd427cb5285/gcc%2Fconfig%2Fmips%2Ft-iris5-as", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4cdb8e1d07a732cbe0ed4ff923cefd427cb5285/gcc%2Fconfig%2Fmips%2Ft-iris5-as", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-iris5-as?ref=c4cdb8e1d07a732cbe0ed4ff923cefd427cb5285", "patch": "@@ -1,11 +0,0 @@\n-# omit -g, gcc doesn't support the o32 mdebug debugging format and warns about\n-# every invocation with -g*\n-# add -save-temps to avoid comparison failure due to embedded temp file names\n-BOOT_CFLAGS = -O2 -save-temps\n-\n-# omit -g1\n-LIBGCC2_DEBUG_CFLAGS =\n-\n-# omit -g\n-FORCE_DEBUG_ADAFLAGS =\n-GNATLIBCFLAGS = -O2"}, {"sha": "5d70c3f19257cc14c45452f134267825f52739ef", "filename": "gcc/config/mips/t-iris5-gas", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4cdb8e1d07a732cbe0ed4ff923cefd427cb5285/gcc%2Fconfig%2Fmips%2Ft-iris5-gas", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4cdb8e1d07a732cbe0ed4ff923cefd427cb5285/gcc%2Fconfig%2Fmips%2Ft-iris5-gas", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-iris5-gas?ref=c4cdb8e1d07a732cbe0ed4ff923cefd427cb5285", "patch": "@@ -1,5 +0,0 @@\n-# For svr4 we build crtbegin.o and crtend.o which serve to add begin and\n-# end labels to the .ctors and .dtors section when we link using gcc.\n-\n-EXTRA_MULTILIB_PARTS=crtbegin.o crtend.o\n-CRTSTUFF_T_CFLAGS=-g1"}, {"sha": "87361f1ebfdbbe4b68cce6ec7ab74d4f674f299f", "filename": "gcc/config/mips/t-iris6", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fconfig%2Fmips%2Ft-iris6", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fconfig%2Fmips%2Ft-iris6", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-iris6?ref=82563d3508aa64e97391e8792751b02d0becbeae", "patch": "@@ -1,5 +1,3 @@\n-# ??? If no mabi=X option given, but a mipsX option is, then should deal\n-# with that.\n MULTILIB_OPTIONS=mabi=n32/mabi=32/mabi=64\n MULTILIB_DIRNAMES=\n MULTILIB_MATCHES=\n@@ -8,12 +6,6 @@ MULTILIB_OSDIRNAMES=. mabi=32 mabi=64\n LIBGCC = stmp-multilib\n INSTALL_LIBGCC = install-multilib\n \n-# For svr4 we build crtbegin.o and crtend.o which serve to add begin and\n-# end labels to the .ctors and .dtors section when we link using gcc.\n-EXTRA_MULTILIB_PARTS=crtbegin.o crtend.o\n-\n-CRTSTUFF_T_CFLAGS=-g1\n-\n LIB2FUNCS_EXTRA = $(srcdir)/config/mips/_tilib.c\n \n TPBIT = tp-bit.c"}, {"sha": "1e7ceafaff9398661a02cd93b28deb9a663f0801", "filename": "gcc/config/mips/t-irix-gld", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4cdb8e1d07a732cbe0ed4ff923cefd427cb5285/gcc%2Fconfig%2Fmips%2Ft-irix-gld", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4cdb8e1d07a732cbe0ed4ff923cefd427cb5285/gcc%2Fconfig%2Fmips%2Ft-irix-gld", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-irix-gld?ref=c4cdb8e1d07a732cbe0ed4ff923cefd427cb5285", "patch": "@@ -1,9 +0,0 @@\n-$(T)irix-crti.o: $(srcdir)/config/mips/irix-crti.asm $(GCC_PASSES)\n-\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(MULTILIB_CFLAGS) $(INCLUDES) \\\n-\t-c -o $@ -x assembler-with-cpp $<\n-\n-$(T)irix-crtn.o: $(srcdir)/config/mips/irix-crtn.asm $(GCC_PASSES)\n-\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(MULTILIB_CFLAGS) $(INCLUDES) \\\n-\t-c -o $@ -x assembler-with-cpp $<\n-\n-EXTRA_MULTILIB_PARTS += irix-crti.o irix-crtn.o"}, {"sha": "0d814e40d62e95970ba59e1903c9dd3c78ea4756", "filename": "gcc/config/mips/t-slibgcc-irix", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fconfig%2Fmips%2Ft-slibgcc-irix", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fconfig%2Fmips%2Ft-slibgcc-irix", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-slibgcc-irix?ref=82563d3508aa64e97391e8792751b02d0becbeae", "patch": "@@ -0,0 +1,28 @@\n+# Build a shared libgcc library.\n+\n+SHLIB_EXT = .so\n+SHLIB_SOLINK = @shlib_base_name@.so\n+SHLIB_SOVERSION = 1\n+SHLIB_SONAME = @shlib_so_name@.so.$(SHLIB_SOVERSION)\n+SHLIB_NAME = @shlib_dir@@shlib_so_name@.so.$(SHLIB_SOVERSION)\n+SHLIB_MAP = @shlib_map_file@\n+SHLIB_OBJS = @shlib_objs@\n+SHLIB_SLIBDIR_QUAL = @shlib_slibdir_qual@\n+SHLIB_LC = -lc\n+\n+SHLIB_LINK = $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -shared -nodefaultlibs \\\n+\t-Wl,-soname,$(SHLIB_SONAME) \\\n+\t-o $(SHLIB_NAME) @multilib_flags@ $(SHLIB_OBJS) $(SHLIB_LC) && \\\n+\trm -f $(SHLIB_SOLINK) && \\\n+\t$(LN_S) $(SHLIB_NAME) $(SHLIB_SOLINK)\n+# $(slibdir) double quoted to protect it from expansion while building\n+# libgcc.mk.  We want this delayed until actual install time.\n+SHLIB_INSTALL = \\\n+\t$$(mkinstalldirs) $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL); \\\n+\t$(INSTALL_DATA) $(SHLIB_NAME) \\\n+\t  $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SONAME); \\\n+\trm -f $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SOLINK); \\\n+\t$(LN_S) $(SHLIB_SONAME) \\\n+\t  $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SOLINK)\n+SHLIB_MKMAP = $(srcdir)/mkmap-flat.awk\n+SHLIB_MAPFILES = $(srcdir)/libgcc-std.ver"}, {"sha": "32703b8eecfcb44faa2936f65636cc3a0979e62f", "filename": "gcc/configure", "status": "modified", "additions": 130, "deletions": 65, "changes": 195, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=82563d3508aa64e97391e8792751b02d0becbeae", "patch": "@@ -1030,7 +1030,7 @@ esac\n     else\n       echo \"$as_me: WARNING: no configuration information is in $ac_dir\" >&2\n     fi\n-    cd \"$ac_popdir\"\n+    cd $ac_popdir\n   done\n fi\n \n@@ -2379,7 +2379,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -2437,7 +2438,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -2553,7 +2555,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -2607,7 +2610,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -2652,7 +2656,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -2696,7 +2701,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -3102,7 +3108,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -3173,7 +3180,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -3232,7 +3240,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -3298,7 +3307,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -3368,7 +3378,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -3438,7 +3449,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -3508,7 +3520,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -3579,7 +3592,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -3651,7 +3665,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -3724,7 +3739,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -3774,7 +3790,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -3832,7 +3849,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -4044,7 +4062,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -4214,7 +4233,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -4277,7 +4297,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -5242,7 +5263,7 @@ if test \"${gcc_cv_prog_makeinfo_modern+set}\" = set; then\n else\n     ac_prog_version=`$MAKEINFO --version 2>&1 |\n                    sed -n 's/^.*GNU texinfo.* \\([0-9][0-9.]*\\).*$/\\1/p'`\n-  echo \"configure:5245: version of makeinfo is $ac_prog_version\" >&5\n+  echo \"configure:5266: version of makeinfo is $ac_prog_version\" >&5\n   case $ac_prog_version in\n     '')     gcc_cv_prog_makeinfo_modern=no;;\n     4.[2-9]*)\n@@ -5497,7 +5518,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -5567,7 +5589,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -5732,7 +5755,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -5793,7 +5817,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -5863,7 +5888,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -6137,7 +6163,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -6210,7 +6237,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -6251,7 +6279,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -6453,7 +6482,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -6527,7 +6557,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -6581,7 +6612,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -6659,7 +6691,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -6713,7 +6746,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -6781,7 +6815,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -6911,7 +6946,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -7032,7 +7068,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -7383,7 +7420,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -7500,7 +7538,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -7612,7 +7651,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -7770,7 +7810,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -8139,7 +8180,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -8189,7 +8231,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -8264,7 +8307,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -8338,7 +8382,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -8440,7 +8485,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -8525,7 +8571,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -8594,7 +8641,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -8663,7 +8711,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -8746,7 +8795,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -8822,7 +8872,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -8888,7 +8939,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -9024,7 +9076,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -9107,7 +9160,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -9397,7 +9451,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -9666,7 +9721,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -9720,7 +9776,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -11728,6 +11785,15 @@ if test $gcc_cv_as_mips_explicit_relocs = yes; then\n        fi\n fi\n \n+    if test x$gas_flag = xyes \\\n+       || test x\"$host\" != x\"$build\" \\\n+       || test ! -x \"$gcc_cv_as\" \\\n+       || \"$gcc_cv_as\" -v < /dev/null 2>&1 | grep GNU > /dev/null; then\n+      :\n+    else\n+      echo \"*** This configuration requires the GNU assembler\" >&2\n+      exit 1\n+    fi\n     ;;\n esac\n # ??? Not all targets support dwarf2 debug_line, even within a version\n@@ -13408,6 +13474,11 @@ esac\n \n \n \n+  if test x\"$ac_file\" != x-; then\n+    { echo \"$as_me:$LINENO: creating $ac_file\" >&5\n+echo \"$as_me: creating $ac_file\" >&6;}\n+    rm -f \"$ac_file\"\n+  fi\n   # Let's still pretend it is `configure' which instantiates (i.e., don't\n   # use $as_me), people would be surprised to read:\n   #    /* config.h.  Generated by config.status.  */\n@@ -13446,12 +13517,6 @@ echo \"$as_me: error: cannot find input file: $f\" >&2;}\n \t fi;;\n       esac\n     done` || { (exit 1); exit 1; }\n-\n-  if test x\"$ac_file\" != x-; then\n-    { echo \"$as_me:$LINENO: creating $ac_file\" >&5\n-echo \"$as_me: creating $ac_file\" >&6;}\n-    rm -f \"$ac_file\"\n-  fi\n _ACEOF\n cat >>$CONFIG_STATUS <<_ACEOF\n   sed \"$ac_vpsub"}, {"sha": "7c520308cf051f15155529a0feaa6a23c5fbbf5e", "filename": "gcc/configure.ac", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=82563d3508aa64e97391e8792751b02d0becbeae", "patch": "@@ -2674,6 +2674,15 @@ foo:\tnop\n        else target_cpu_default=\"($target_cpu_default)|MASK_EXPLICIT_RELOCS\"\n        fi])\n \n+    if test x$gas_flag = xyes \\\n+       || test x\"$host\" != x\"$build\" \\\n+       || test ! -x \"$gcc_cv_as\" \\\n+       || \"$gcc_cv_as\" -v < /dev/null 2>&1 | grep GNU > /dev/null; then\n+      :\n+    else\n+      echo \"*** This configuration requires the GNU assembler\" >&2\n+      exit 1\n+    fi\n     ;;\n esac\n # ??? Not all targets support dwarf2 debug_line, even within a version"}, {"sha": "93c0bd5fa143063eb967ad60b6ea30b340e74cd4", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82563d3508aa64e97391e8792751b02d0becbeae/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=82563d3508aa64e97391e8792751b02d0becbeae", "patch": "@@ -788,14 +788,13 @@ whether you use the GNU assembler.  On any other system,\n @item @samp{m68k-hp-hpux}\n @item @samp{m68000-hp-hpux}\n @item @samp{m68000-att-sysv}\n-@item @samp{mips-@var{any}}\n @item @samp{sparc-sun-solaris2.@var{any}}\n @item @samp{sparc64-@var{any}-solaris2.@var{any}}\n @end itemize\n \n On the systems listed above (except for the HP-PA, the SPARC, for ISC on\n-the 386, and for @samp{mips-sgi-irix5.*}), if you use the GNU assembler,\n-you should also use the GNU linker (and specify @option{--with-gnu-ld}).\n+the 386, if you use the GNU assembler, you should also use the GNU linker\n+(and specify @option{--with-gnu-ld}).\n \n @item @anchor{with-as}--with-as=@var{pathname}\n Specify that the\n@@ -3199,9 +3198,9 @@ to increase its table size for switch statements with the\n optimization option, you also need to use @option{-Olimit 3000}.\n \n To enable debugging under IRIX 5, you must use GNU binutils 2.15 or\n-later, and use the @option{--with-gnu-as} and @option{--with-gnu-ld}\n-@command{configure} options when configuring GCC@.  You need to use GNU\n-@command{ar} and @command{nm}, also distributed with GNU binutils.\n+later, and use the @option{--with-gnu-ld} @command{configure} option\n+when configuring GCC@.  You need to use GNU @command{ar} and @command{nm},\n+also distributed with GNU binutils.\n \n @html\n <hr />\n@@ -3231,12 +3230,7 @@ test.o: ELF 64-bit MSB @dots{}\n \n then your version of @command{cc} uses the O32 or N64 ABI by default.  You\n should set the environment variable @env{CC} to @samp{cc -n32}\n-before configuring GCC@.  SGI's MIPSpro 7.2 assembler may misassemble\n-parts of the compiler, causing bootstrap failures.  MIPSpro 7.3 is\n-known to work.  MIPSpro C 7.4 may cause bootstrap failures, too, due\n-to a bug when inlining @code{memcmp}.  Either add @code{-U__INLINE_INTRINSICS}\n-to the @env{CC} environment variable as a workaround or upgrade to\n-MIPSpro C 7.4.1m.\n+before configuring GCC@.\n \n If you want the resulting @command{gcc} to run on old 32-bit systems\n with the MIPS R4400 CPU, you need to ensure that only code for the @samp{mips3}\n@@ -3259,6 +3253,10 @@ test.o: ELF N32 MSB mips-4 @dots{}\n instead, you should set the environment variable @env{CC} to @samp{cc\n -n32 -mips3} or @samp{gcc -mips3} respectively before configuring GCC@.\n \n+MIPSpro C 7.4 may cause bootstrap failures, due to a bug when inlining\n+@code{memcmp}.  Either add @code{-U__INLINE_INTRINSICS} to the @env{CC}\n+environment variable as a workaround or upgrade to MIPSpro C 7.4.1m.\n+\n GCC on IRIX 6 is usually built to support the N32, O32 and N64 ABIs.  If\n you build GCC on a system that doesn't have the N64 libraries installed\n or cannot run 64-bit binaries,"}]}