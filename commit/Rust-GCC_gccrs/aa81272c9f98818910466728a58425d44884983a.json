{"sha": "aa81272c9f98818910466728a58425d44884983a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE4MTI3MmM5Zjk4ODE4OTEwNDY2NzI4YTU4NDI1ZDQ0ODg0OTgzYQ==", "commit": {"author": {"name": "Ilmir Usmanov", "email": "me@ilmir.us", "date": "2015-11-25T14:37:36Z"}, "committer": {"name": "Cesar Philippidis", "email": "cesar@gcc.gnu.org", "date": "2015-11-25T14:37:36Z"}, "message": "re PR fortran/63858 (fixed form OpenACC directive ICE with -fopenacc -fopenmp)\n\n\tPR fortran/63858\n\n\tgcc/fortran/\n\t* scanner.c (skip_oacc_attribute): Remove continue_flag parameter.\n\tRename as ...\n\t(skip_free_oacc_sentinel): ... this.\n\t(skip_omp_attribute): Remove continue_flag parameter. Rename as ...\n\t(skip_free_omp_sentinel): ... this.\n\t(skip_free_comments): Update to call skip_free_oacc_sentinel and\n\tskip_free_omp_sentinel.\n\t(skip_fixed_omp_sentinel): New function.\n\t(skip_fixed_oacc_sentinel): New function.\n\t(skip_fixed_comments): Fix mix of OpenACC and OpenMP sentinels in\n\tcontinuation.\n\n\tgcc/testsuite/\n\t* goacc/omp-fixed.f: New test.\n\t* goacc/omp.f95: Add check for mis-matched omp and acc continuations.\n\n\nCo-Authored-By: Cesar Philippidis <cesar@codesourcery.com>\n\nFrom-SVN: r230872", "tree": {"sha": "52b1541b1db6fe53914d05a1f4d4e68fc9e68de7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52b1541b1db6fe53914d05a1f4d4e68fc9e68de7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa81272c9f98818910466728a58425d44884983a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa81272c9f98818910466728a58425d44884983a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa81272c9f98818910466728a58425d44884983a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa81272c9f98818910466728a58425d44884983a/comments", "author": {"login": "ilmirus", "id": 943991, "node_id": "MDQ6VXNlcjk0Mzk5MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/943991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilmirus", "html_url": "https://github.com/ilmirus", "followers_url": "https://api.github.com/users/ilmirus/followers", "following_url": "https://api.github.com/users/ilmirus/following{/other_user}", "gists_url": "https://api.github.com/users/ilmirus/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilmirus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilmirus/subscriptions", "organizations_url": "https://api.github.com/users/ilmirus/orgs", "repos_url": "https://api.github.com/users/ilmirus/repos", "events_url": "https://api.github.com/users/ilmirus/events{/privacy}", "received_events_url": "https://api.github.com/users/ilmirus/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "af11fcfdcfa7d9c2aea6defbf713afe6061511bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af11fcfdcfa7d9c2aea6defbf713afe6061511bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af11fcfdcfa7d9c2aea6defbf713afe6061511bf"}], "stats": {"total": 336, "additions": 228, "deletions": 108}, "files": [{"sha": "da29a9d8f42058e7e70fed74ed778ee6a36731c2", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa81272c9f98818910466728a58425d44884983a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa81272c9f98818910466728a58425d44884983a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=aa81272c9f98818910466728a58425d44884983a", "patch": "@@ -1,3 +1,19 @@\n+2015-11-25  Ilmir Usmanov <me@ilmir.us>\n+\t    Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\tPR fortran/63858\n+\t* scanner.c (skip_oacc_attribute): Remove continue_flag parameter.\n+\tRename as ...\n+\t(skip_free_oacc_sentinel): ... this.\n+\t(skip_omp_attribute): Remove continue_flag parameter. Rename as ...\n+\t(skip_free_omp_sentinel): ... this.\n+\t(skip_free_comments): Update to call skip_free_oacc_sentinel and\n+\tskip_free_omp_sentinel.\n+\t(skip_fixed_omp_sentinel): New function.\n+\t(skip_fixed_oacc_sentinel): New function.\n+\t(skip_fixed_comments): Fix mix of OpenACC and OpenMP sentinels in\n+\tcontinuation.\n+\n 2015-11-24  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/68486"}, {"sha": "86441199b4623dcecb07f1de0e72e4b1eb233daa", "filename": "gcc/fortran/scanner.c", "status": "modified", "additions": 164, "deletions": 107, "changes": 271, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa81272c9f98818910466728a58425d44884983a/gcc%2Ffortran%2Fscanner.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa81272c9f98818910466728a58425d44884983a/gcc%2Ffortran%2Fscanner.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fscanner.c?ref=aa81272c9f98818910466728a58425d44884983a", "patch": "@@ -712,7 +712,7 @@ skip_gcc_attribute (locus start)\n \n /* Return true if CC was matched.  */\n static bool\n-skip_oacc_attribute (locus start, locus old_loc, bool continue_flag)\n+skip_free_oacc_sentinel (locus start, locus old_loc)\n {\n   bool r = false;\n   char c;\n@@ -752,7 +752,7 @@ skip_oacc_attribute (locus start, locus old_loc, bool continue_flag)\n \n /* Return true if MP was matched.  */\n static bool\n-skip_omp_attribute (locus start, locus old_loc, bool continue_flag)\n+skip_free_omp_sentinel (locus start, locus old_loc)\n {\n   bool r = false;\n   char c;\n@@ -841,15 +841,15 @@ skip_free_comments (void)\n \t\t    c = next_char ();\n \t\t    if (c == 'o' || c == 'O')\n \t\t      {\n-\t\t\tif (skip_omp_attribute (start, old_loc, continue_flag))\n+\t\t\tif (skip_free_omp_sentinel (start, old_loc))\n \t\t\t  return false;\n \t\t\tgfc_current_locus = old_loc;\n \t\t\tnext_char ();\n \t\t\tc = next_char ();\n \t\t      }\n \t\t    else if (c == 'a' || c == 'A')\n \t\t      {\n-\t\t\tif (skip_oacc_attribute (start, old_loc, continue_flag))\n+\t\t\tif (skip_free_oacc_sentinel (start, old_loc))\n \t\t\t  return false;\n \t\t\tgfc_current_locus = old_loc;\n \t\t\tnext_char ();\n@@ -874,7 +874,7 @@ skip_free_comments (void)\n \t\t    c = next_char ();\n \t\t    if (c == 'o' || c == 'O')\n \t\t      {\n-\t\t\tif (skip_omp_attribute (start, old_loc, continue_flag))\n+\t\t\tif (skip_free_omp_sentinel (start, old_loc))\n \t\t\t  return false;\n \t\t\tgfc_current_locus = old_loc;\n \t\t\tnext_char ();\n@@ -899,8 +899,7 @@ skip_free_comments (void)\n \t\t    c = next_char ();\n \t\t      if (c == 'a' || c == 'A')\n \t\t\t{\n-\t\t\t  if (skip_oacc_attribute (start, old_loc, \n-\t\t\t\t\t\t   continue_flag))\n+\t\t\t  if (skip_free_oacc_sentinel (start, old_loc))\n \t\t\t    return false;\n \t\t\t  gfc_current_locus = old_loc;\n \t\t\t  next_char();\n@@ -935,6 +934,63 @@ skip_free_comments (void)\n   return false;\n }\n \n+/* Return true if MP was matched in fixed form.  */\n+static bool\n+skip_fixed_omp_sentinel (locus *start)\n+{\n+  gfc_char_t c;\n+  if (((c = next_char ()) == 'm' || c == 'M')\n+      && ((c = next_char ()) == 'p' || c == 'P'))\n+    {\n+      c = next_char ();\n+      if (c != '\\n'\n+\t  && (continue_flag\n+\t      || c == ' ' || c == '\\t' || c == '0'))\n+\t{\n+\t  do\n+\t    c = next_char ();\n+\t  while (gfc_is_whitespace (c));\n+\t  if (c != '\\n' && c != '!')\n+\t    {\n+\t      /* Canonicalize to *$omp.  */\n+\t      *start->nextc = '*';\n+\t      openmp_flag = 1;\n+\t      gfc_current_locus = *start;\n+\t      return true;\n+\t    }\n+\t}\n+    }\n+  return false;\n+}\n+\n+/* Return true if CC was matched in fixed form.  */\n+static bool\n+skip_fixed_oacc_sentinel (locus *start)\n+{\n+  gfc_char_t c;\n+  if (((c = next_char ()) == 'c' || c == 'C')\n+      && ((c = next_char ()) == 'c' || c == 'C'))\n+    {\n+      c = next_char ();\n+      if (c != '\\n'\n+\t  && (continue_flag\n+\t      || c == ' ' || c == '\\t' || c == '0'))\n+\t{\n+\t  do\n+\t    c = next_char ();\n+\t  while (gfc_is_whitespace (c));\n+\t  if (c != '\\n' && c != '!')\n+\t    {\n+\t      /* Canonicalize to *$acc.  */\n+\t      *start->nextc = '*';\n+\t      openacc_flag = 1;\n+\t      gfc_current_locus = *start;\n+\t      return true;\n+\t    }\n+\t}\n+    }\n+  return false;\n+}\n \n /* Skip comment lines in fixed source mode.  We have the same rules as\n    in skip_free_comment(), except that we can have a 'c', 'C' or '*'\n@@ -1003,128 +1059,92 @@ skip_fixed_comments (void)\n \t      && continue_line < gfc_linebuf_linenum (gfc_current_locus.lb))\n \t    continue_line = gfc_linebuf_linenum (gfc_current_locus.lb);\n \n-\t  if (flag_openmp || flag_openmp_simd)\n+\t  if ((flag_openmp || flag_openmp_simd) && !flag_openacc)\n \t    {\n \t      if (next_char () == '$')\n \t\t{\n \t\t  c = next_char ();\n \t\t  if (c == 'o' || c == 'O')\n \t\t    {\n-\t\t      if (((c = next_char ()) == 'm' || c == 'M')\n-\t\t\t  && ((c = next_char ()) == 'p' || c == 'P'))\n-\t\t\t{\n-\t\t\t  c = next_char ();\n-\t\t\t  if (c != '\\n'\n-\t\t\t      && ((openmp_flag && continue_flag)\n-\t\t\t\t  || c == ' ' || c == '\\t' || c == '0'))\n-\t\t\t    {\n-\t\t\t      do\n-\t\t\t\tc = next_char ();\n-\t\t\t      while (gfc_is_whitespace (c));\n-\t\t\t      if (c != '\\n' && c != '!')\n-\t\t\t\t{\n-\t\t\t\t  /* Canonicalize to *$omp.  */\n-\t\t\t\t  *start.nextc = '*';\n-\t\t\t\t  openmp_flag = 1;\n-\t\t\t\t  gfc_current_locus = start;\n-\t\t\t\t  return;\n-\t\t\t\t}\n-\t\t\t    }\n-\t\t\t}\n+\t\t      if (skip_fixed_omp_sentinel (&start))\n+\t\t\treturn;\n \t\t    }\n \t\t  else\n+\t\t    goto check_for_digits;\n+\t\t}\n+\t      gfc_current_locus = start;\n+\t    }\n+\n+\t  if (flag_openacc && !(flag_openmp || flag_openmp_simd))\n+\t    {\n+\t      if (next_char () == '$')\n+\t\t{\n+\t\t  c = next_char ();\n+\t\t  if (c == 'a' || c == 'A')\n \t\t    {\n-\t\t      int digit_seen = 0;\n-\n-\t\t      for (col = 3; col < 6; col++, c = next_char ())\n-\t\t\tif (c == ' ')\n-\t\t\t  continue;\n-\t\t\telse if (c == '\\t')\n-\t\t\t  {\n-\t\t\t    col = 6;\n-\t\t\t    break;\n-\t\t\t  }\n-\t\t\telse if (c < '0' || c > '9')\n-\t\t\t  break;\n-\t\t\telse\n-\t\t\t  digit_seen = 1;\n-\n-\t\t      if (col == 6 && c != '\\n'\n-\t\t\t  && ((continue_flag && !digit_seen)\n-\t\t\t      || c == ' ' || c == '\\t' || c == '0'))\n-\t\t\t{\n-\t\t\t  gfc_current_locus = start;\n-\t\t\t  start.nextc[0] = ' ';\n-\t\t\t  start.nextc[1] = ' ';\n-\t\t\t  continue;\n-\t\t\t}\n+\t\t      if (skip_fixed_oacc_sentinel (&start))\n+\t\t\treturn;\n \t\t    }\n+\t\t  else\n+\t\t    goto check_for_digits;\n \t\t}\n \t      gfc_current_locus = start;\n \t    }\n \n-\t  if (flag_openacc)\n+\t  if (flag_openacc || flag_openmp || flag_openmp_simd)\n \t    {\n \t      if (next_char () == '$')\n \t\t{\n \t\t  c = next_char ();\n \t\t  if (c == 'a' || c == 'A')\n \t\t    {\n-\t\t      if (((c = next_char ()) == 'c' || c == 'C')\n-\t\t\t  && ((c = next_char ()) == 'c' || c == 'C'))\n-\t\t\t{\n-\t\t\t  c = next_char ();\n-\t\t\t  if (c != '\\n'\n-\t\t\t      && ((openacc_flag && continue_flag)\n-\t\t\t\t  || c == ' ' || c == '\\t' || c == '0'))\n-\t\t\t    {\n-\t\t\t      do\n-\t\t\t\tc = next_char ();\n-\t\t\t      while (gfc_is_whitespace (c));\n-\t\t\t      if (c != '\\n' && c != '!')\n-\t\t\t\t{\n-\t\t\t\t  /* Canonicalize to *$acc. */\n-\t\t\t\t  *start.nextc = '*';\n-\t\t\t\t  openacc_flag = 1;\n-\t\t\t\t  gfc_current_locus = start;\n-\t\t\t\t  return;\n-\t\t\t\t}\n-\t\t\t    }\n-\t\t\t}\n+\t\t      if (skip_fixed_oacc_sentinel (&start))\n+\t\t\treturn;\n \t\t    }\n-\t\t  else\n+\t\t  else if (c == 'o' || c == 'O')\n \t\t    {\n-\t\t      int digit_seen = 0;\n-\n-\t\t      for (col = 3; col < 6; col++, c = next_char ())\n-\t\t\tif (c == ' ')\n-\t\t\t  continue;\n-\t\t\telse if (c == '\\t')\n-\t\t\t  {\n-\t\t\t    col = 6;\n-\t\t\t    break;\n-\t\t\t  }\n-\t\t\telse if (c < '0' || c > '9')\n-\t\t\t  break;\n-\t\t\telse\n-\t\t\t  digit_seen = 1;\n-\n-\t\t      if (col == 6 && c != '\\n'\n-\t\t\t  && ((continue_flag && !digit_seen)\n-\t\t\t      || c == ' ' || c == '\\t' || c == '0'))\n-\t\t\t{\n-\t\t\t  gfc_current_locus = start;\n-\t\t\t  start.nextc[0] = ' ';\n-\t\t\t  start.nextc[1] = ' ';\n-\t\t\t  continue;\n-\t\t\t}\n+\t\t      if (skip_fixed_omp_sentinel (&start))\n+\t\t\treturn;\n \t\t    }\n+\t\t  else\n+\t\t    goto check_for_digits;\n \t\t}\n \t      gfc_current_locus = start;\n \t    }\n \n \t  skip_comment_line ();\n \t  continue;\n+\n+\t  gcc_unreachable ();\n+check_for_digits:\n+\t  {\n+\t    int digit_seen = 0;\n+\n+\t    for (col = 3; col < 6; col++, c = next_char ())\n+\t      if (c == ' ')\n+\t\tcontinue;\n+\t      else if (c == '\\t')\n+\t\t{\n+\t\t  col = 6;\n+\t\t  break;\n+\t\t}\n+\t      else if (c < '0' || c > '9')\n+\t\tbreak;\n+\t      else\n+\t\tdigit_seen = 1;\n+\n+\t    if (col == 6 && c != '\\n'\n+\t\t&& ((continue_flag && !digit_seen)\n+\t\t    || c == ' ' || c == '\\t' || c == '0'))\n+\t      {\n+\t\tgfc_current_locus = start;\n+\t\tstart.nextc[0] = ' ';\n+\t\tstart.nextc[1] = ' ';\n+\t\tcontinue;\n+\t      }\n+\t    }\n+\t  skip_comment_line ();\n+\t  continue;\n \t}\n \n       if (gfc_option.flag_d_lines != -1 && (c == 'd' || c == 'D'))\n@@ -1321,7 +1341,7 @@ gfc_next_char_literal (gfc_instring in_string)\n \tcontinue_line = gfc_linebuf_linenum (gfc_current_locus.lb);\n \n       if (flag_openmp)\n-\tif (prev_openmp_flag != openmp_flag)\n+\tif (prev_openmp_flag != openmp_flag && !openacc_flag)\n \t  {\n \t    gfc_current_locus = old_loc;\n \t    openmp_flag = prev_openmp_flag;\n@@ -1330,7 +1350,7 @@ gfc_next_char_literal (gfc_instring in_string)\n \t  }\n \n       if (flag_openacc)\n-\tif (prev_openacc_flag != openacc_flag)\n+\tif (prev_openacc_flag != openacc_flag && !openmp_flag)\n \t  {\n \t    gfc_current_locus = old_loc;\n \t    openacc_flag = prev_openacc_flag;\n@@ -1349,7 +1369,7 @@ gfc_next_char_literal (gfc_instring in_string)\n       while (gfc_is_whitespace (c))\n \tc = next_char ();\n \n-      if (openmp_flag)\n+      if (openmp_flag && !openacc_flag)\n \t{\n \t  for (i = 0; i < 5; i++, c = next_char ())\n \t    {\n@@ -1360,7 +1380,7 @@ gfc_next_char_literal (gfc_instring in_string)\n \t  while (gfc_is_whitespace (c))\n \t    c = next_char ();\n \t}\n-      if (openacc_flag)\n+      if (openacc_flag && !openmp_flag)\n \t{\n \t  for (i = 0; i < 5; i++, c = next_char ())\n \t    {\n@@ -1372,6 +1392,26 @@ gfc_next_char_literal (gfc_instring in_string)\n \t    c = next_char ();\n \t}\n \n+      /* In case we have an OpenMP directive continued by OpenACC\n+\t sentinel, or vice versa, we get both openmp_flag and\n+\t openacc_flag on.  */\n+\n+      if (openacc_flag && openmp_flag)\n+\t{\n+\t  int is_openmp = 0;\n+\t  for (i = 0; i < 5; i++, c = next_char ())\n+\t    {\n+\t      if (gfc_wide_tolower (c) != (unsigned char) \"!$acc\"[i])\n+\t\tis_openmp = 1;\n+\t      if (i == 4)\n+\t\told_loc = gfc_current_locus;\n+\t    }\n+\t  gfc_error (is_openmp ? \"Wrong OpenACC continuation at %C: \"\n+\t\t     \"expected !$ACC, got !$OMP\"\n+\t\t     : \"Wrong OpenMP continuation at %C: \"\n+\t\t     \"expected !$OMP, got !$ACC\");\n+\t}\n+\n       if (c != '&')\n \t{\n \t  if (in_string)\n@@ -1436,18 +1476,35 @@ gfc_next_char_literal (gfc_instring in_string)\n       skip_fixed_comments ();\n \n       /* See if this line is a continuation line.  */\n-      if (flag_openmp && openmp_flag != prev_openmp_flag)\n+      if (flag_openmp && openmp_flag != prev_openmp_flag && !openacc_flag)\n \t{\n \t  openmp_flag = prev_openmp_flag;\n \t  goto not_continuation;\n \t}\n-      if (flag_openacc && openacc_flag != prev_openacc_flag)\n+      if (flag_openacc && openacc_flag != prev_openacc_flag && !openmp_flag)\n \t{\n \t  openacc_flag = prev_openacc_flag;\n \t  goto not_continuation;\n \t}\n \n-      if (!openmp_flag && !openacc_flag)\n+      /* In case we have an OpenMP directive continued by OpenACC\n+\t sentinel, or vice versa, we get both openmp_flag and\n+\t openacc_flag on.  */\n+      if (openacc_flag && openmp_flag)\n+\t{\n+\t  int is_openmp = 0;\n+\t  for (i = 0; i < 5; i++)\n+\t    {\n+\t      c = next_char ();\n+\t      if (gfc_wide_tolower (c) != (unsigned char) \"*$acc\"[i])\n+\t\tis_openmp = 1;\n+\t    }\n+\t  gfc_error (is_openmp ? \"Wrong OpenACC continuation at %C: \"\n+\t\t     \"expected !$ACC, got !$OMP\"\n+\t\t     : \"Wrong OpenMP continuation at %C: \"\n+\t\t     \"expected !$OMP, got !$ACC\");\n+\t}\n+      else if (!openmp_flag && !openacc_flag)\n \tfor (i = 0; i < 5; i++)\n \t  {\n \t    c = next_char ();"}, {"sha": "58bd40ab40432adc4ef75ca1aea3fc3340c21ddc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa81272c9f98818910466728a58425d44884983a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa81272c9f98818910466728a58425d44884983a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=aa81272c9f98818910466728a58425d44884983a", "patch": "@@ -1,3 +1,10 @@\n+2015-11-25  Ilmir Usmanov <me@ilmir.us>\n+\t    Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\tPR fortran/63858\n+\t* goacc/omp-fixed.f: New test.\n+\t* goacc/omp.f95: Add check for mis-matched omp and acc continuations.\n+\n 2015-11-25  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/68528"}, {"sha": "e715673de16d2d0680967946cd5e289631e6d379", "filename": "gcc/testsuite/gfortran.dg/goacc/omp-fixed.f", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa81272c9f98818910466728a58425d44884983a/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fomp-fixed.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa81272c9f98818910466728a58425d44884983a/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fomp-fixed.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fomp-fixed.f?ref=aa81272c9f98818910466728a58425d44884983a", "patch": "@@ -0,0 +1,32 @@\n+! { dg-do compile }\n+! { dg-additional-options \"-fopenmp\" }\n+      SUBROUTINE ICHI\n+      INTEGER :: ARGC\n+      ARGC = COMMAND_ARGUMENT_COUNT ()\n+\n+!$OMP PARALLEL\n+!$ACC PARALLEL                                                          &\n+!$ACC& COPYIN(ARGC) ! { dg-error \"directive cannot be specified within\" }\n+      IF (ARGC .NE. 0) THEN\n+         CALL ABORT\n+      END IF\n+!$ACC END PARALLEL\n+!$OMP END PARALLEL\n+\n+      END SUBROUTINE ICHI\n+\n+\n+      SUBROUTINE NI\n+      IMPLICIT NONE\n+      INTEGER :: I\n+\n+!$ACC PARALLEL                                                          &\n+!$OMP& DO ! { dg-error \"Wrong OpenACC continuation\" }\n+      DO I = 1, 10\n+      ENDDO\n+\n+!$OMP PARALLEL                                                          &\n+!$ACC& LOOP ! { dg-error \"Wrong OpenMP continuation\" }\n+      DO I = 1, 10\n+      ENDDO\n+      END SUBROUTINE NI"}, {"sha": "339438ab7728d8e68afdf558a308f0aa3339a232", "filename": "gcc/testsuite/gfortran.dg/goacc/omp.f95", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa81272c9f98818910466728a58425d44884983a/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fomp.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa81272c9f98818910466728a58425d44884983a/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fomp.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fomp.f95?ref=aa81272c9f98818910466728a58425d44884983a", "patch": "@@ -63,4 +63,12 @@ subroutine roku\n      !$omp end parallel\n      !$acc end data\n    end subroutine roku\n-end module test\n\\ No newline at end of file\n+\n+   subroutine nana\n+     !$acc parallel &\n+     !$omp do ! { dg-error \"Wrong OpenACC continuation\" }\n+\n+     !$omp parallel &\n+     !$acc loop ! { dg-error \"Wrong OpenMP continuation\" }\n+   end subroutine nana\n+end module test"}]}