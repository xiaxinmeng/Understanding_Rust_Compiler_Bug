{"sha": "9a6ac4b0c286968d9a74833e200cdb27760f5658", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE2YWM0YjBjMjg2OTY4ZDlhNzQ4MzNlMjAwY2RiMjc3NjBmNTY1OA==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl@gnu.org", "date": "1999-04-01T02:56:31Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-04-01T02:56:31Z"}, "message": "i386.c (output_int_conditional_move): Use \"enum rtx_code\" for code type.\n\n        * i386.c (output_int_conditional_move): Use \"enum rtx_code\" for code\n        type.\n\nFrom-SVN: r26098", "tree": {"sha": "e6709a0997c69df0e79812ff722e9e74de22dec4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6709a0997c69df0e79812ff722e9e74de22dec4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a6ac4b0c286968d9a74833e200cdb27760f5658", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a6ac4b0c286968d9a74833e200cdb27760f5658", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a6ac4b0c286968d9a74833e200cdb27760f5658", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a6ac4b0c286968d9a74833e200cdb27760f5658/comments", "author": null, "committer": null, "parents": [{"sha": "a32126ad0457f7e754ff7ef7fc2cbd18a6331dae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a32126ad0457f7e754ff7ef7fc2cbd18a6331dae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a32126ad0457f7e754ff7ef7fc2cbd18a6331dae"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "237c5edb9503b47c931ee8947e5d897fad9390f2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a6ac4b0c286968d9a74833e200cdb27760f5658/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a6ac4b0c286968d9a74833e200cdb27760f5658/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9a6ac4b0c286968d9a74833e200cdb27760f5658", "patch": "@@ -1,5 +1,8 @@\n Thu Apr  1 03:48:34 1999  H.J. Lu  (hjl@gnu.org)\n \n+\t* i386.c (output_int_conditional_move): Use \"enum rtx_code\" for code\n+\ttype.\n+\n \t* i386.c (notice_update_cc): No need to check the INT mode for\n \tconditional moves since FLOAT conditional moves don't affect cc0.\n "}, {"sha": "323838e2bb4c0efd23da9a0b4a608b7d595917c7", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a6ac4b0c286968d9a74833e200cdb27760f5658/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a6ac4b0c286968d9a74833e200cdb27760f5658/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=9a6ac4b0c286968d9a74833e200cdb27760f5658", "patch": "@@ -5515,7 +5515,7 @@ output_int_conditional_move (which_alternative, operands)\n      int which_alternative;\n      rtx operands[];\n {\n-  int code = GET_CODE (operands[1]);\n+  enum rtx_code code = GET_CODE (operands[1]);\n \n   /* This is very tricky. We have to do it right. For a code segement\n      like:"}]}