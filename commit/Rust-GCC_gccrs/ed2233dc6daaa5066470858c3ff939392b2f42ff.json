{"sha": "ed2233dc6daaa5066470858c3ff939392b2f42ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQyMjMzZGM2ZGFhYTUwNjY0NzA4NThjM2ZmOTM5MzkyYjJmNDJmZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2010-06-18T12:14:52Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-18T12:14:52Z"}, "message": "par-ch9.adb, [...]: Update comments.\n\n\t* par-ch9.adb, sem_aggr.adb, sem_ch3.adb, layout.adb, sem_ch4.adb,\n\tsem_ch5.adb, sem_mech.adb, exp_util.adb, par-ch10.adb, sem_ch6.adb,\n\tpar-ch11.adb, sem_ch7.adb, par-prag.adb, exp_disp.adb, par-ch12.adb,\n\tsem_ch8.adb, style.adb, sem_ch9.adb, sem_ch10.adb, prep.adb,\n\tsem_warn.adb, par-util.adb, scng.adb, sem_eval.adb, checks.adb,\n\tsem_prag.adb, sem_ch12.adb, styleg.adb, sem_ch13.adb, par-ch3.adb,\n\tpar-tchk.adb, freeze.adb, sfn_scan.adb, par-ch4.adb, sem_util.adb,\n\tsem_res.adb, par-ch5.adb, lib-xref.adb, sem_attr.adb, par-ch6.adb,\n\tsem_disp.adb, prepcomp.adb, par-ch7.adb, sem_elab.adb, exp_ch4.adb,\n\terrout.ads: Update comments. Minor reformatting.\n\nFrom-SVN: r160979", "tree": {"sha": "bef0d0f79e8fa4b8956e144ca031f29b858f8ed9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bef0d0f79e8fa4b8956e144ca031f29b858f8ed9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed2233dc6daaa5066470858c3ff939392b2f42ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed2233dc6daaa5066470858c3ff939392b2f42ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed2233dc6daaa5066470858c3ff939392b2f42ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed2233dc6daaa5066470858c3ff939392b2f42ff/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9628d8f6670fcf721ce6c96619820e9fe6f90174", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9628d8f6670fcf721ce6c96619820e9fe6f90174", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9628d8f6670fcf721ce6c96619820e9fe6f90174"}], "stats": {"total": 1241, "additions": 614, "deletions": 627}, "files": [{"sha": "c6cc579757a54508e2528529748252a37d7d5b2a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -1,3 +1,16 @@\n+2010-06-18  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* par-ch9.adb, sem_aggr.adb, sem_ch3.adb, layout.adb, sem_ch4.adb,\n+\tsem_ch5.adb, sem_mech.adb, exp_util.adb, par-ch10.adb, sem_ch6.adb,\n+\tpar-ch11.adb, sem_ch7.adb, par-prag.adb, exp_disp.adb, par-ch12.adb,\n+\tsem_ch8.adb, style.adb, sem_ch9.adb, sem_ch10.adb, prep.adb,\n+\tsem_warn.adb, par-util.adb, scng.adb, sem_eval.adb, checks.adb,\n+\tsem_prag.adb, sem_ch12.adb, styleg.adb, sem_ch13.adb, par-ch3.adb,\n+\tpar-tchk.adb, freeze.adb, sfn_scan.adb, par-ch4.adb, sem_util.adb,\n+\tsem_res.adb, par-ch5.adb, lib-xref.adb, sem_attr.adb, par-ch6.adb,\n+\tsem_disp.adb, prepcomp.adb, par-ch7.adb, sem_elab.adb, exp_ch4.adb,\n+\terrout.ads: Update comments. Minor reformatting.\n+\n 2010-06-18  Geert Bosch  <bosch@adacore.com>\n \n \t* i-forbla-darwin.adb: Include -lgnala and -lm in linker options for"}, {"sha": "6e39661213fe8fef9b14357e94db2d940feee919", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -2851,7 +2851,7 @@ package body Checks is\n          --  applied to an access [sub]type.\n \n          if not Is_Access_Type (Typ) then\n-            Error_Msg_N -- CODEFIX???\n+            Error_Msg_N\n               (\"`NOT NULL` allowed only for an access type\", Error_Node);\n \n          --  Enforce legality rule RM 3.10(14/1): A null exclusion can only\n@@ -2860,7 +2860,7 @@ package body Checks is\n          elsif Can_Never_Be_Null (Typ)\n            and then Comes_From_Source (Typ)\n          then\n-            Error_Msg_NE -- CODEFIX???\n+            Error_Msg_NE\n               (\"`NOT NULL` not allowed (& already excludes null)\",\n                Error_Node, Typ);\n          end if;"}, {"sha": "a6a72aeffbf8c304c84aa5ce1266ff15aa99eea7", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -601,13 +601,6 @@ package Errout is\n    --  without appropriate coordination. If new messages are added which may\n    --  be susceptible to automatic codefix action, they are marked using:\n \n-   --     Error_Msg -- CODEFIX???\n-   --       (parameters)\n-\n-   --  And subsequently either the appropriate code is added to codefix and the\n-   --  ??? are removed, or it is determined that this is not an appropriate\n-   --  case for codefix action, and the comment is removed.\n-\n    ------------------------------\n    -- Error Output Subprograms --\n    ------------------------------"}, {"sha": "81e042a7d155dbe15ee42d5462862b1959ce51d1", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 16, "deletions": 24, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -4433,10 +4433,8 @@ package body Exp_Ch4 is\n \n             if Lcheck = LT or else Ucheck = GT then\n                if Warn1 then\n-                  Error_Msg_N -- CODEFIX???\n-                    (\"?range test optimized away\", N);\n-                  Error_Msg_N -- CODEFIX???\n-                    (\"\\?value is known to be out of range\", N);\n+                  Error_Msg_N (\"?range test optimized away\", N);\n+                  Error_Msg_N (\"\\?value is known to be out of range\", N);\n                end if;\n \n                Rewrite (N,\n@@ -4451,10 +4449,8 @@ package body Exp_Ch4 is\n \n             elsif Lcheck in Compare_GE and then Ucheck in Compare_LE then\n                if Warn1 then\n-                  Error_Msg_N -- CODEFIX???\n-                    (\"?range test optimized away\", N);\n-                  Error_Msg_N -- CODEFIX???\n-                    (\"\\?value is known to be in range\", N);\n+                  Error_Msg_N (\"?range test optimized away\", N);\n+                  Error_Msg_N (\"\\?value is known to be in range\", N);\n                end if;\n \n                Rewrite (N,\n@@ -4470,10 +4466,8 @@ package body Exp_Ch4 is\n \n             elsif Lcheck in Compare_GE then\n                if Warn2 and then not In_Instance then\n-                  Error_Msg_N -- CODEFIX???\n-                    (\"?lower bound test optimized away\", Lo);\n-                  Error_Msg_N -- CODEFIX???\n-                    (\"\\?value is known to be in range\", Lo);\n+                  Error_Msg_N (\"?lower bound test optimized away\", Lo);\n+                  Error_Msg_N (\"\\?value is known to be in range\", Lo);\n                end if;\n \n                Rewrite (N,\n@@ -4490,10 +4484,8 @@ package body Exp_Ch4 is\n \n             elsif Ucheck in Compare_LE then\n                if Warn2 and then not In_Instance then\n-                  Error_Msg_N -- CODEFIX???\n-                    (\"?upper bound test optimized away\", Hi);\n-                  Error_Msg_N -- CODEFIX???\n-                    (\"\\?value is known to be in range\", Hi);\n+                  Error_Msg_N (\"?upper bound test optimized away\", Hi);\n+                  Error_Msg_N (\"\\?value is known to be in range\", Hi);\n                end if;\n \n                Rewrite (N,\n@@ -4517,25 +4509,25 @@ package body Exp_Ch4 is\n                --  Result is out of range for valid value\n \n                if Lcheck = LT or else Ucheck = GT then\n-                  Error_Msg_N -- CODEFIX???\n+                  Error_Msg_N\n                     (\"?value can only be in range if it is invalid\", N);\n \n                --  Result is in range for valid value\n \n                elsif Lcheck in Compare_GE and then Ucheck in Compare_LE then\n-                  Error_Msg_N -- CODEFIX???\n+                  Error_Msg_N\n                     (\"?value can only be out of range if it is invalid\", N);\n \n                --  Lower bound check succeeds if value is valid\n \n                elsif Warn2 and then Lcheck in Compare_GE then\n-                  Error_Msg_N -- CODEFIX???\n+                  Error_Msg_N\n                     (\"?lower bound check only fails if it is invalid\", Lo);\n \n                --  Upper bound  check succeeds if value is valid\n \n                elsif Warn2 and then Ucheck in Compare_LE then\n-                  Error_Msg_N -- CODEFIX???\n+                  Error_Msg_N\n                     (\"?upper bound check only fails for invalid values\", Hi);\n                end if;\n             end if;\n@@ -9867,7 +9859,7 @@ package body Exp_Ch4 is\n                  and then Is_Integer_Type (Etype (Left_Opnd (N)))\n                  and then not Has_Warnings_Off (Etype (Left_Opnd (N)))\n                then\n-                  Error_Msg_N -- CODEFIX???\n+                  Error_Msg_N\n                     (\"can never be greater than, could replace by \"\"'=\"\"?\", N);\n                   Warning_Generated := True;\n                end if;\n@@ -9892,7 +9884,7 @@ package body Exp_Ch4 is\n                  and then Is_Integer_Type (Etype (Left_Opnd (N)))\n                  and then not Has_Warnings_Off (Etype (Left_Opnd (N)))\n                then\n-                  Error_Msg_N -- CODEFIX???\n+                  Error_Msg_N\n                     (\"can never be less than, could replace by \"\"'=\"\"?\", N);\n                   Warning_Generated := True;\n                end if;\n@@ -9930,11 +9922,11 @@ package body Exp_Ch4 is\n               and then not In_Instance\n             then\n                if True_Result then\n-                  Error_Msg_N -- CODEFIX???\n+                  Error_Msg_N\n                     (\"condition can only be False if invalid values present?\",\n                      N);\n                elsif False_Result then\n-                  Error_Msg_N -- CODEFIX???\n+                  Error_Msg_N\n                     (\"condition can only be True if invalid values present?\",\n                      N);\n                end if;"}, {"sha": "16baf0ce76d8300940a0dc7f2a54a714cd727864", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -3520,7 +3520,7 @@ package body Exp_Disp is\n            and then not Is_Frozen (Typ)\n          then\n             Error_Msg_Sloc := Sloc (Subp);\n-            Error_Msg_NE -- CODEFIX???\n+            Error_Msg_NE\n               (\"declaration must appear after completion of type &\", N, Typ);\n             Error_Msg_NE\n               (\"\\which is an untagged type in the profile of\"\n@@ -7317,11 +7317,11 @@ package body Exp_Disp is\n             Adjusted := True;\n          end if;\n \n-         --  An abstract operation cannot be declared in the private part\n-         --  for a visible abstract type, because it could never be over-\n-         --  ridden. For explicit declarations this is checked at the\n-         --  point of declaration, but for inherited operations it must\n-         --  be done when building the dispatch table.\n+         --  An abstract operation cannot be declared in the private part for a\n+         --  visible abstract type, because it can't be overridden outside this\n+         --  package hierarchy. For explicit declarations this is checked at\n+         --  the point of declaration, but for inherited operations it must be\n+         --  done when building the dispatch table.\n \n          --  Ada 2005 (AI-251): Primitives associated with interfaces are\n          --  excluded from this check because interfaces must be visible in\n@@ -7350,7 +7350,7 @@ package body Exp_Disp is\n                  and then\n                not Is_TSS (Prim, TSS_Stream_Output)\n             then\n-               Error_Msg_NE -- CODEFIX???\n+               Error_Msg_NE\n                  (\"abstract inherited private operation&\" &\n                   \" must be overridden (RM 3.9.3(10))\",\n                  Parent (Typ), Prim);\n@@ -7364,11 +7364,11 @@ package body Exp_Disp is\n \n       if Is_Controlled (Typ) then\n          if not Finalized then\n-            Error_Msg_N -- CODEFIX???\n+            Error_Msg_N\n               (\"controlled type has no explicit Finalize method?\", Typ);\n \n          elsif not Adjusted then\n-            Error_Msg_N -- CODEFIX???\n+            Error_Msg_N\n               (\"controlled type has no explicit Adjust method?\", Typ);\n          end if;\n       end if;"}, {"sha": "1c4bc5bf2c4c1da1685b076f945591b9add606f7", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -3491,7 +3491,7 @@ package body Exp_Util is\n             --  Generate warning if not suppressed\n \n             if W then\n-               Error_Msg_F -- CODEFIX???\n+               Error_Msg_F\n                  (\"?this code can never be executed and has been deleted!\", N);\n             end if;\n          end if;"}, {"sha": "1c24d74a4fb4533e09a9e5dfbcda4d464c15d5ed", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2004,8 +2004,7 @@ package body Freeze is\n             if not Placed_Component then\n                ADC :=\n                  Get_Attribute_Definition_Clause (Rec, Attribute_Bit_Order);\n-               Error_Msg_N\n-                 (\"?Bit_Order specification has no effect\", ADC);\n+               Error_Msg_N (\"?Bit_Order specification has no effect\", ADC);\n                Error_Msg_N\n                  (\"\\?since no component clauses were specified\", ADC);\n \n@@ -2063,7 +2062,7 @@ package body Freeze is\n             --  Give warning if redundant constructs warnings on\n \n             if Warn_On_Redundant_Constructs then\n-               Error_Msg_N\n+               Error_Msg_N -- CODEFIX\n                  (\"?pragma Pack has no effect, no unplaced components\",\n                   Get_Rep_Pragma (Rec, Name_Pack));\n             end if;\n@@ -2232,9 +2231,9 @@ package body Freeze is\n                declare\n                   Sz : constant Node_Id := Size_Clause (Rec);\n                begin\n-                  Error_Msg_NE --  CODEFIX\n+                  Error_Msg_NE -- CODEFIX\n                     (\"size given for& too small\", Sz, Rec);\n-                  Error_Msg_N --  CODEFIX\n+                  Error_Msg_N -- CODEFIX\n                     (\"\\use explicit pragma Pack \"\n                      & \"or use pragma Implicit_Packing\", Sz);\n                end;\n@@ -2463,8 +2462,7 @@ package body Freeze is\n                           and then not Has_Size_Clause (F_Type)\n                           and then VM_Target = No_VM\n                         then\n-                           Error_Msg_N\n-                             (\"& is an 8-bit Ada Boolean?\", Formal);\n+                           Error_Msg_N (\"& is an 8-bit Ada Boolean?\", Formal);\n                            Error_Msg_N\n                              (\"\\use appropriate corresponding type in C \"\n                               & \"(e.g. char)?\", Formal);\n@@ -2731,7 +2729,8 @@ package body Freeze is\n                                Object_Definition (Parent (E)));\n \n                   if Is_CPP_Class (Etype (E)) then\n-                     Error_Msg_NE (\"\\} may need a cpp_constructor\",\n+                     Error_Msg_NE\n+                       (\"\\} may need a cpp_constructor\",\n                        Object_Definition (Parent (E)), Etype (E));\n                   end if;\n                end if;\n@@ -3011,7 +3010,7 @@ package body Freeze is\n                               else\n                                  Error_Msg_NE\n                                    (\"size given for& too small\", SZ, E);\n-                                 Error_Msg_N\n+                                 Error_Msg_N -- CODEFIX\n                                    (\"\\use explicit pragma Pack \"\n                                     & \"or use pragma Implicit_Packing\", SZ);\n                               end if;"}, {"sha": "be2bd802317cab2585b78798804804137c36d1ec", "filename": "gcc/ada/layout.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Flayout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Flayout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flayout.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2736,8 +2736,7 @@ package body Layout is\n       begin\n          if Spec < Min then\n             Error_Msg_Uint_1 := Min;\n-            Error_Msg_NE\n-              (\"size for & too small, minimum allowed is ^\", SC, E);\n+            Error_Msg_NE (\"size for & too small, minimum allowed is ^\", SC, E);\n             Init_Esize   (E);\n             Init_RM_Size (E);\n          end if;"}, {"sha": "e0050c020369437e763e764be72edd238f6e0702", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -699,7 +699,7 @@ package body Lib.Xref is\n                   BE := First_Entity (Current_Scope);\n                   while Present (BE) loop\n                      if Chars (BE) = Chars (E) then\n-                        Error_Msg_NE\n+                        Error_Msg_NE -- CODEFIX\n                           (\"?pragma Unreferenced given for&!\", N, BE);\n                         exit;\n                      end if;\n@@ -711,7 +711,8 @@ package body Lib.Xref is\n             --  Here we issue the warning, since this is a real reference\n \n             else\n-               Error_Msg_NE (\"?pragma Unreferenced given for&!\", N, E);\n+               Error_Msg_NE -- CODEFIX\n+                 (\"?pragma Unreferenced given for&!\", N, E);\n             end if;\n          end if;\n "}, {"sha": "e321affbfb98bfdc67a4eb2ac248c1c2b21fa175", "filename": "gcc/ada/par-ch10.adb", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fpar-ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fpar-ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch10.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -344,7 +344,8 @@ package body Ch10 is\n              Get_Expected_Unit_Type\n                (File_Name (Current_Source_File)) = Expect_Body\n          then\n-            Error_Msg_BC (\"keyword BODY expected here [see file name]\");\n+            Error_Msg_BC -- CODEFIX\n+              (\"keyword BODY expected here [see file name]\");\n             Restore_Scan_State (Scan_State);\n             Set_Unit (Comp_Unit_Node, P_Package (Pf_Pbod));\n          else\n@@ -395,7 +396,8 @@ package body Ch10 is\n                --  Otherwise we saved the semicolon position, so complain\n \n                else\n-                  Error_Msg (\"\"\";\"\" should be IS\", SIS_Semicolon_Sloc);\n+                  Error_Msg -- CODEFIX\n+                    (\"\"\";\"\" should be IS\", SIS_Semicolon_Sloc);\n                end if;\n \n                Body_Node := Unit (Comp_Unit_Node);\n@@ -836,7 +838,8 @@ package body Ch10 is\n             end if;\n \n             if Token /= Tok_With then\n-               Error_Msg_SC (\"unexpected LIMITED ignored\");\n+               Error_Msg_SC -- CODEFIX\n+                 (\"unexpected LIMITED ignored\");\n             end if;\n \n             if Ada_Version < Ada_05 then\n@@ -876,8 +879,7 @@ package body Ch10 is\n \n                --  WITH TYPE is an obsolete GNAT specific extension\n \n-               Error_Msg_SP\n-                 (\"`WITH TYPE` is an obsolete 'G'N'A'T extension\");\n+               Error_Msg_SP (\"`WITH TYPE` is an obsolete 'G'N'A'T extension\");\n                Error_Msg_SP (\"\\use Ada 2005 `LIMITED WITH` clause instead\");\n \n                Scan;  -- past TYPE"}, {"sha": "62887237aa8cc3d88d58c49d32be40e779a64ccd", "filename": "gcc/ada/par-ch11.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fpar-ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fpar-ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch11.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -119,7 +119,8 @@ package body Ch11 is\n             Set_Choice_Parameter (Handler_Node, Choice_Param_Node);\n \n          elsif Token = Tok_Others then\n-            Error_Msg_AP (\"missing \"\":\"\"\");\n+            Error_Msg_AP -- CODEFIX\n+              (\"missing \"\":\"\"\");\n             Change_Identifier_To_Defining_Identifier (Choice_Param_Node);\n             Set_Choice_Parameter (Handler_Node, Choice_Param_Node);\n "}, {"sha": "642c05a331baccb6bcaa6ea74ece671e5a636802", "filename": "gcc/ada/par-ch12.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fpar-ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fpar-ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch12.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -346,7 +346,7 @@ package body Ch12 is\n          Scan;  --  past OTHERS\n \n          if Token /= Tok_Arrow then\n-            Error_Msg_BC (\"expect arrow after others\");\n+            Error_Msg_BC  (\"expect arrow after others\");\n          else\n             Scan;  --  past arrow\n          end if;\n@@ -912,7 +912,8 @@ package body Ch12 is\n          Scan;\n \n          if Token = Tok_Private then\n-            Error_Msg_SC (\"TAGGED should be WITH\");\n+            Error_Msg_SC  -- CODEFIX\n+              (\"TAGGED should be WITH\");\n             Set_Private_Present (Def_Node, True);\n             T_Private;\n          else"}, {"sha": "5285e8fdf87fdecaad3263c565f4c59d5cd1ea33", "filename": "gcc/ada/par-ch3.adb", "status": "modified", "additions": 37, "deletions": 63, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fpar-ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fpar-ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch3.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -124,8 +124,7 @@ package body Ch3 is\n       elsif Nkind_In (N, N_In, N_Not_In)\n         and then Paren_Count (N) = 0\n       then\n-         Error_Msg_N -- CODEFIX???\n-           (\"|this expression must be parenthesized!\", N);\n+         Error_Msg_N (\"|this expression must be parenthesized!\", N);\n          Error_Msg_N\n            (\"\\|since extensions (and set notation) are allowed\", N);\n       end if;\n@@ -440,8 +439,7 @@ package body Ch3 is\n            or else Token = Tok_Record\n            or else Token = Tok_Null\n          then\n-            Error_Msg_AP -- CODEFIX???\n-              (\"TAGGED expected\");\n+            Error_Msg_AP (\"TAGGED expected\");\n          end if;\n       end if;\n \n@@ -456,8 +454,7 @@ package body Ch3 is\n       --  Special check for misuse of Aliased\n \n       if Token = Tok_Aliased or else Token_Name = Name_Aliased then\n-         Error_Msg_SC -- CODEFIX???\n-           (\"ALIASED not allowed in type definition\");\n+         Error_Msg_SC (\"ALIASED not allowed in type definition\");\n          Scan; -- past ALIASED\n       end if;\n \n@@ -679,8 +676,7 @@ package body Ch3 is\n                   elsif Abstract_Present\n                     and then Prev_Token /= Tok_Tagged\n                   then\n-                     Error_Msg_SP -- CODEFIX???\n-                       (\"TAGGED expected\");\n+                     Error_Msg_SP (\"TAGGED expected\");\n                   end if;\n \n                   Typedef_Node := P_Record_Definition;\n@@ -815,7 +811,7 @@ package body Ch3 is\n                         if Nkind (Typedef_Node) =\n                           N_Derived_Type_Definition\n                         then\n-                           Error_Msg_N -- CODEFIX???\n+                           Error_Msg_N\n                              (\"SYNCHRONIZED not allowed for record extension\",\n                               Typedef_Node);\n                         else\n@@ -830,8 +826,7 @@ package body Ch3 is\n \n                   else\n                      if Token /= Tok_Interface then\n-                        Error_Msg_SC -- CODEFIX???\n-                          (\"NEW or INTERFACE expected\");\n+                        Error_Msg_SC (\"NEW or INTERFACE expected\");\n                      end if;\n \n                      Typedef_Node :=\n@@ -922,8 +917,7 @@ package body Ch3 is\n             Set_Abstract_Present (Typedef_Node, Abstract_Present);\n \n          elsif Abstract_Present then\n-            Error_Msg -- CODEFIX???\n-              (\"ABSTRACT not allowed here, ignored\", Abstract_Loc);\n+            Error_Msg (\"ABSTRACT not allowed here, ignored\", Abstract_Loc);\n          end if;\n \n          Decl_Node := New_Node (N_Full_Type_Declaration, Type_Loc);\n@@ -1040,13 +1034,11 @@ package body Ch3 is\n             end if;\n \n          else\n-            Error_Msg_SP -- CODEFIX???\n-              (\"NULL expected\");\n+            Error_Msg_SP (\"NULL expected\");\n          end if;\n \n          if Token = Tok_New then\n-            Error_Msg -- CODEFIX???\n-              (\"`NOT NULL` comes after NEW, not before\", Not_Loc);\n+            Error_Msg (\"`NOT NULL` comes after NEW, not before\", Not_Loc);\n          end if;\n \n          return True;\n@@ -1098,8 +1090,7 @@ package body Ch3 is\n          return Subtype_Mark;\n       else\n          if Not_Null_Present then\n-            Error_Msg_SP -- CODEFIX???\n-              (\"`NOT NULL` not allowed if constraint given\");\n+            Error_Msg_SP (\"`NOT NULL` not allowed if constraint given\");\n          end if;\n \n          Indic_Node := New_Node (N_Subtype_Indication, Sloc (Subtype_Mark));\n@@ -1367,7 +1358,7 @@ package body Ch3 is\n       procedure No_List is\n       begin\n          if Num_Idents > 1 then\n-            Error_Msg -- CODEFIX???\n+            Error_Msg\n               (\"identifier list not allowed for RENAMES\",\n                Sloc (Idents (2)));\n          end if;\n@@ -1444,8 +1435,7 @@ package body Ch3 is\n          Scan; -- past :=\n \n          if Token = Tok_Constant then\n-            Error_Msg_SP -- CODEFIX???\n-              (\"colon expected\");\n+            Error_Msg_SP (\"colon expected\");\n \n          else\n             Restore_Scan_State (Scan_State);\n@@ -1565,7 +1555,7 @@ package body Ch3 is\n \n             if Present (Init_Expr) then\n                if Not_Null_Present then\n-                  Error_Msg_SP -- CODEFIX???\n+                  Error_Msg_SP\n                     (\"`NOT NULL` not allowed in numeric expression\");\n                end if;\n \n@@ -1616,7 +1606,7 @@ package body Ch3 is\n                end if;\n \n                if Token = Tok_Renames then\n-                  Error_Msg -- CODEFIX???\n+                  Error_Msg\n                     (\"CONSTANT not permitted in renaming declaration\",\n                      Con_Loc);\n                   Scan; -- Past renames\n@@ -1732,7 +1722,7 @@ package body Ch3 is\n \n                if Token_Is_Renames then\n                   if Ada_Version < Ada_05 then\n-                     Error_Msg_SP -- CODEFIX???\n+                     Error_Msg_SP\n                        (\"`NOT NULL` not allowed in object renaming\");\n                      raise Error_Resync;\n \n@@ -1762,7 +1752,7 @@ package body Ch3 is\n                   --  illegal\n \n                   if Token_Is_Renames then\n-                     Error_Msg_N -- CODEFIX???\n+                     Error_Msg_N\n                        (\"constraint not allowed in object renaming \"\n                         & \"declaration\",\n                         Constraint (Object_Definition (Decl_Node)));\n@@ -1825,7 +1815,7 @@ package body Ch3 is\n                --  a constraint on the Type_Node and renames, which is illegal\n \n                if Token_Is_Renames then\n-                  Error_Msg_N -- CODEFIX???\n+                  Error_Msg_N\n                     (\"constraint not allowed in object renaming declaration\",\n                      Constraint (Object_Definition (Decl_Node)));\n                   raise Error_Resync;\n@@ -1978,8 +1968,7 @@ package body Ch3 is\n          end loop;\n \n          if Token /= Tok_With then\n-            Error_Msg_SC -- CODEFIX???\n-              (\"WITH expected\");\n+            Error_Msg_SC (\"WITH expected\");\n             raise Error_Resync;\n          end if;\n       end if;\n@@ -1995,8 +1984,7 @@ package body Ch3 is\n          T_With; -- past WITH or give error message\n \n          if Token = Tok_Limited then\n-            Error_Msg_SC -- CODEFIX???\n-              (\"LIMITED keyword not allowed in private extension\");\n+            Error_Msg_SC (\"LIMITED keyword not allowed in private extension\");\n             Scan; -- ignore LIMITED\n          end if;\n \n@@ -2195,8 +2183,7 @@ package body Ch3 is\n          if Nkind (Expr_Node) in N_Subexpr\n            and then Paren_Count (Expr_Node) /= 0\n          then\n-            Error_Msg -- CODEFIX???\n-              (\"|parentheses not allowed for subtype mark\", Save_Loc);\n+            Error_Msg (\"|parentheses not allowed for subtype mark\", Save_Loc);\n             Set_Paren_Count (Expr_Node, 0);\n          end if;\n \n@@ -2671,8 +2658,7 @@ package body Ch3 is\n          end if;\n \n          if Aliased_Present then\n-            Error_Msg_SP -- CODEFIX???\n-              (\"ALIASED not allowed here\");\n+            Error_Msg_SP (\"ALIASED not allowed here\");\n          end if;\n \n          Set_Subtype_Indication     (CompDef_Node, Empty);\n@@ -3319,8 +3305,7 @@ package body Ch3 is\n \n                if Token = Tok_Colon then\n                   Restore_Scan_State (Scan_State);\n-                  Error_Msg_SC -- CODEFIX???\n-                    (\"component may not follow variant part\");\n+                  Error_Msg_SC (\"component may not follow variant part\");\n                   Discard_Junk_Node (P_Component_List);\n \n                elsif Token = Tok_Case then\n@@ -3413,8 +3398,7 @@ package body Ch3 is\n             Set_Defining_Identifier (Decl_Node, Idents (Ident));\n \n             if Token = Tok_Constant then\n-               Error_Msg_SC -- CODEFIX???\n-                 (\"constant components are not permitted\");\n+               Error_Msg_SC (\"constant components are not permitted\");\n                Scan;\n             end if;\n \n@@ -3442,8 +3426,7 @@ package body Ch3 is\n                end if;\n \n                if Aliased_Present then\n-                  Error_Msg_SP -- CODEFIX???\n-                    (\"ALIASED not allowed here\");\n+                  Error_Msg_SP (\"ALIASED not allowed here\");\n                end if;\n \n                Set_Subtype_Indication (CompDef_Node, Empty);\n@@ -3457,8 +3440,7 @@ package body Ch3 is\n                Set_Null_Exclusion_Present (CompDef_Node, Not_Null_Present);\n \n                if Token = Tok_Array then\n-                  Error_Msg_SC -- CODEFIX???\n-                    (\"anonymous arrays not allowed as components\");\n+                  Error_Msg_SC (\"anonymous arrays not allowed as components\");\n                   raise Error_Resync;\n                end if;\n \n@@ -3537,7 +3519,7 @@ package body Ch3 is\n          Error_Msg (\"discriminant name expected\", Sloc (Case_Node));\n \n       elsif Paren_Count (Case_Node) /= 0 then\n-         Error_Msg -- CODEFIX???\n+         Error_Msg\n            (\"|discriminant name may not be parenthesized\",\n                     Sloc (Case_Node));\n          Set_Paren_Count (Case_Node, 0);\n@@ -3770,7 +3752,7 @@ package body Ch3 is\n       end if;\n \n       if Abstract_Present then\n-         Error_Msg_SP -- CODEFIX???\n+         Error_Msg_SP\n            (\"ABSTRACT not allowed in interface type definition \" &\n             \"(RM 3.9.4(2/2))\");\n       end if;\n@@ -3794,8 +3776,7 @@ package body Ch3 is\n \n       else\n          if Token /= Tok_And then\n-            Error_Msg_AP -- CODEFIX???\n-              (\"AND expected\");\n+            Error_Msg_AP (\"AND expected\");\n          else\n             Scan; -- past AND\n          end if;\n@@ -3881,8 +3862,7 @@ package body Ch3 is\n             Scan; -- past possible junk subprogram name\n \n             if Token = Tok_Left_Paren or else Token = Tok_Semicolon then\n-               Error_Msg_SP -- CODEFIX???\n-                 (\"unexpected subprogram name ignored\");\n+               Error_Msg_SP (\"unexpected subprogram name ignored\");\n                return;\n \n             else\n@@ -4063,7 +4043,7 @@ package body Ch3 is\n \n          if Token = Tok_All then\n             if Ada_Version < Ada_05 then\n-               Error_Msg_SP -- CODEFIX???\n+               Error_Msg_SP\n                  (\"ALL is not permitted for anonymous access types\");\n             end if;\n \n@@ -4274,8 +4254,7 @@ package body Ch3 is\n \n          when Tok_With =>\n             Check_Bad_Layout;\n-            Error_Msg_SC -- CODEFIX???\n-              (\"WITH can only appear in context clause\");\n+            Error_Msg_SC (\"WITH can only appear in context clause\");\n             raise Error_Resync;\n \n          --  BEGIN terminates the scan of a sequence of declarations unless\n@@ -4440,8 +4419,7 @@ package body Ch3 is\n             if In_Spec then\n                Done := True;\n             else\n-               Error_Msg_SC -- CODEFIX???\n-                 (\"PRIVATE not allowed in body\");\n+               Error_Msg_SC (\"PRIVATE not allowed in body\");\n                Scan; -- past PRIVATE\n             end if;\n \n@@ -4550,17 +4528,15 @@ package body Ch3 is\n             Kind = N_Task_Body or else\n             Kind = N_Protected_Body\n          then\n-            Error_Msg -- CODEFIX???\n-              (\"proper body not allowed in package spec\", Sloc (Decl));\n+            Error_Msg (\"proper body not allowed in package spec\", Sloc (Decl));\n \n          --  Test for body stub scanned, not acceptable as basic decl item\n \n          elsif Kind in N_Body_Stub then\n-            Error_Msg -- CODEFIX???\n-              (\"body stub not allowed in package spec\", Sloc (Decl));\n+            Error_Msg (\"body stub not allowed in package spec\", Sloc (Decl));\n \n          elsif Kind = N_Assignment_Statement then\n-            Error_Msg -- CODEFIX???\n+            Error_Msg\n               (\"assignment statement not allowed in package spec\",\n                  Sloc (Decl));\n          end if;\n@@ -4649,17 +4625,15 @@ package body Ch3 is\n          --  not allowed in package spec. This message never gets changed.\n \n          if In_Spec then\n-            Error_Msg_SC -- CODEFIX???\n-              (\"statement not allowed in package spec\");\n+            Error_Msg_SC (\"statement not allowed in package spec\");\n \n          --  If in declarative part, then we give the message complaining\n          --  about finding a statement when a declaration is expected. This\n          --  gets changed to a complaint about a missing BEGIN if we later\n          --  find that no BEGIN is present.\n \n          else\n-            Error_Msg_SC -- CODEFIX???\n-              (\"statement not allowed in declarative part\");\n+            Error_Msg_SC (\"statement not allowed in declarative part\");\n          end if;\n \n          --  Capture message Id. This is used for two purposes, first to"}, {"sha": "7b1b87c1ce61875651202986ebdec4785910f992", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 10, "deletions": 16, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -367,8 +367,7 @@ package body Ch4 is\n             begin\n                if Token_Is_At_Start_Of_Line then\n                   Restore_Scan_State (Scan_State); -- to apostrophe\n-                  Error_Msg_SC -- CODEFIX???\n-                    (\"|\"\"''\"\" should be \"\";\"\"\");\n+                  Error_Msg_SC (\"|\"\"''\"\" should be \"\";\"\"\");\n                   Token := Tok_Semicolon;\n                   return True;\n                else\n@@ -567,8 +566,7 @@ package body Ch4 is\n \n          elsif Token = Tok_Range then\n             if Expr_Form /= EF_Simple_Name then\n-               Error_Msg_SC -- CODEFIX???\n-                 (\"subtype mark must precede RANGE\");\n+               Error_Msg_SC (\"subtype mark must precede RANGE\");\n                raise Error_Resync;\n             end if;\n \n@@ -740,8 +738,7 @@ package body Ch4 is\n          --  a possible fix.\n \n          if Nkind (Expr_Node) = N_Op_Eq then\n-            Error_Msg_N -- CODEFIX???\n-              (\"\\maybe `='>` was intended\", Expr_Node);\n+            Error_Msg_N (\"\\maybe `='>` was intended\", Expr_Node);\n          end if;\n \n          --  We go back to scanning out expressions, so that we do not get\n@@ -1092,7 +1089,7 @@ package body Ch4 is\n            and then\n          Nkind (Aggr_Node) /= N_Extension_Aggregate\n       then\n-         Error_Msg -- CODEFIX???\n+         Error_Msg\n            (\"aggregate may not have single positional component\", Aggr_Sloc);\n          return Error;\n       else\n@@ -1264,7 +1261,7 @@ package body Ch4 is\n             if Nkind (Expr_Node) = N_Attribute_Reference\n               and then Attribute_Name (Expr_Node) = Name_Range\n             then\n-               Error_Msg -- CODEFIX???\n+               Error_Msg\n                  (\"|parentheses not allowed for range attribute\", Lparen_Sloc);\n                Scan; -- past right paren\n                return Expr_Node;\n@@ -2131,8 +2128,7 @@ package body Ch4 is\n                   Scan; -- scan past right paren if present\n                end if;\n \n-               Error_Msg -- CODEFIX???\n-                 (\"parentheses not allowed for range attribute\", Lptr);\n+               Error_Msg (\"parentheses not allowed for range attribute\", Lptr);\n \n                return Attr_Node;\n             end if;\n@@ -2357,7 +2353,7 @@ package body Ch4 is\n                --  that way with an error message.\n \n                elsif Extensions_Allowed then\n-                  Error_Msg_SC -- CODEFIX???\n+                  Error_Msg_SC\n                     (\"conditional expression must be parenthesized\");\n                   return P_Conditional_Expression;\n \n@@ -2383,8 +2379,7 @@ package body Ch4 is\n                --  with an error message.\n \n                elsif Extensions_Allowed then\n-                  Error_Msg_SC -- CODEFIX???\n-                    (\"case expression must be parenthesized\");\n+                  Error_Msg_SC (\"case expression must be parenthesized\");\n                   return P_Case_Expression;\n \n                --  Otherwise treat as misused identifier\n@@ -2717,8 +2712,7 @@ package body Ch4 is\n       --  If we have an END CASE, diagnose as not needed\n \n       if Token = Tok_End then\n-         Error_Msg_SC -- CODEFIX???\n-           (\"`END CASE` not allowed at end of case expression\");\n+         Error_Msg_SC (\"`END CASE` not allowed at end of case expression\");\n          Scan; -- past END\n \n          if Token = Tok_Case then\n@@ -2817,7 +2811,7 @@ package body Ch4 is\n       --  If we have an END IF, diagnose as not needed\n \n       if Token = Tok_End then\n-         Error_Msg_SC -- CODEFIX???\n+         Error_Msg_SC\n            (\"`END IF` not allowed at end of conditional expression\");\n          Scan; -- past END\n "}, {"sha": "ec1bcebb8fee15e8d402486e9acd29805bbe831b", "filename": "gcc/ada/par-ch5.adb", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fpar-ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fpar-ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch5.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -193,7 +193,8 @@ package body Ch5 is\n       procedure Test_Statement_Required is\n       begin\n          if Statement_Required then\n-            Error_Msg_BC (\"statement expected\");\n+            Error_Msg_BC -- CODEFIX\n+              (\"statement expected\");\n          end if;\n       end Test_Statement_Required;\n \n@@ -607,7 +608,8 @@ package body Ch5 is\n                                    or else\n                                  Nkind (Name_Node) = N_Selected_Component)\n                      then\n-                        Error_Msg_SC (\"\"\"/\"\" should be \"\".\"\"\");\n+                        Error_Msg_SC -- CODEFIX\n+                          (\"\"\"/\"\" should be \"\".\"\"\");\n                         Statement_Required := False;\n                         raise Error_Resync;\n \n@@ -857,7 +859,8 @@ package body Ch5 is\n                      Junk_Declaration;\n \n                   else\n-                     Error_Msg_BC (\"statement expected\");\n+                     Error_Msg_BC -- CODEFIX\n+                       (\"statement expected\");\n                      raise Error_Resync;\n                   end if;\n             end case;\n@@ -1172,7 +1175,8 @@ package body Ch5 is\n          --  of WHEN expression =>\n \n          if Token = Tok_Arrow then\n-            Error_Msg_SC (\"THEN expected\");\n+            Error_Msg_SC -- CODEFIX\n+              (\"THEN expected\");\n             Scan; -- past the arrow\n             Pop_Scope_Stack; -- remove unneeded entry\n             raise Error_Resync;\n@@ -1208,7 +1212,8 @@ package body Ch5 is\n             Scan; -- past ELSE\n \n             if Else_Should_Be_Elsif then\n-               Error_Msg_SP (\"ELSE should be ELSIF\");\n+               Error_Msg_SP -- CODEFIX\n+                 (\"ELSE should be ELSIF\");\n                Add_Elsif_Part;\n \n             else\n@@ -1258,7 +1263,8 @@ package body Ch5 is\n \n       if Token = Tok_Colon_Equal then\n          while Token = Tok_Colon_Equal loop\n-            Error_Msg_SC (\"\"\":=\"\" should be \"\"=\"\"\");\n+            Error_Msg_SC -- CODEFIX\n+              (\"\"\":=\"\" should be \"\"=\"\"\");\n             Scan; -- past junk :=\n             Discard_Junk_Node (P_Expression_No_Right_Paren);\n          end loop;\n@@ -2196,7 +2202,8 @@ package body Ch5 is\n       --  What we are interested in is whether it was a case of a bad IS.\n \n       if Scope.Table (Scope.Last + 1).Etyp = E_Bad_Is then\n-         Error_Msg (\"|IS should be \"\";\"\"\", Scope.Table (Scope.Last + 1).S_Is);\n+         Error_Msg -- CODEFIX\n+           (\"|IS should be \"\";\"\"\", Scope.Table (Scope.Last + 1).S_Is);\n          Set_Bad_Is_Detected (Parent, True);\n       end if;\n \n@@ -2225,7 +2232,8 @@ package body Ch5 is\n       TF_Then;\n \n       while Token = Tok_Then loop\n-         Error_Msg_SC (\"redundant THEN\");\n+         Error_Msg_SC -- CODEFIX\n+           (\"redundant THEN\");\n          TF_Then;\n       end loop;\n "}, {"sha": "fc9a37413666d2f005fea568f0004e6830a4d82f", "filename": "gcc/ada/par-ch6.adb", "status": "modified", "additions": 24, "deletions": 14, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fpar-ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fpar-ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch6.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -64,7 +64,8 @@ package body Ch6 is\n \n          if Token = Tok_Return then\n             Restore_Scan_State (Scan_State);\n-            Error_Msg_SC (\"|extra \"\";\"\" ignored\");\n+            Error_Msg_SC -- CODEFIX\n+              (\"|extra \"\";\"\" ignored\");\n             Scan; -- rescan past junk semicolon\n          else\n             Restore_Scan_State (Scan_State);\n@@ -195,7 +196,8 @@ package body Ch6 is\n             Not_Overriding := True;\n \n          else\n-            Error_Msg_SC (\"OVERRIDING expected!\");\n+            Error_Msg_SC -- CODEFIX\n+              (\"OVERRIDING expected!\");\n          end if;\n \n       --  Ada 2005: scan leading OVERRIDING indicator\n@@ -348,7 +350,8 @@ package body Ch6 is\n \n       if Token = Tok_Return then\n          if not Func then\n-            Error_Msg (\"PROCEDURE should be FUNCTION\", Fproc_Sloc);\n+            Error_Msg -- CODEFIX\n+              (\"PROCEDURE should be FUNCTION\", Fproc_Sloc);\n             Func := True;\n          end if;\n \n@@ -421,7 +424,8 @@ package body Ch6 is\n          Scan; -- past semicolon\n \n          if Token = Tok_Is then\n-            Error_Msg_SP (\"extra \"\";\"\" ignored\");\n+            Error_Msg_SP -- CODEFIX\n+              (\"extra \"\";\"\" ignored\");\n          else\n             Restore_Scan_State (Scan_State);\n          end if;\n@@ -440,7 +444,8 @@ package body Ch6 is\n          --  semicolon, and go process the body.\n \n          if Token = Tok_Is then\n-            Error_Msg_SP (\"|extra \"\";\"\" ignored\");\n+            Error_Msg_SP -- CODEFIX\n+              (\"|extra \"\";\"\" ignored\");\n             T_Is; -- scan past IS\n             goto Subprogram_Body;\n \n@@ -452,7 +457,8 @@ package body Ch6 is\n          elsif Token = Tok_Begin\n             and then Start_Column >= Scope.Table (Scope.Last).Ecol\n          then\n-            Error_Msg_SP (\"|\"\";\"\" should be IS!\");\n+            Error_Msg_SP -- CODEFIX\n+              (\"|\"\";\"\" should be IS!\");\n             goto Subprogram_Body;\n \n          else\n@@ -492,7 +498,8 @@ package body Ch6 is\n             --  Deal nicely with (now obsolete) use of <> in place of abstract\n \n             if Token = Tok_Box then\n-               Error_Msg_SC (\"ABSTRACT expected\");\n+               Error_Msg_SC -- CODEFIX\n+                 (\"ABSTRACT expected\");\n                Token := Tok_Abstract;\n             end if;\n \n@@ -556,7 +563,8 @@ package body Ch6 is\n          --  semicolon which should really be an IS\n \n          else\n-            Error_Msg_AP (\"|missing \"\";\"\"\");\n+            Error_Msg_AP -- CODEFIX\n+              (\"|missing \"\";\"\"\");\n             SIS_Missing_Semicolon_Message := Get_Msg_Id;\n             goto Subprogram_Declaration;\n          end if;\n@@ -1219,15 +1227,17 @@ package body Ch6 is\n             --  that semicolon should have been a right parenthesis and exit\n \n             if Token = Tok_Is or else Token = Tok_Return then\n-               Error_Msg_SP (\"|\"\";\"\" should be \"\")\"\"\");\n+               Error_Msg_SP -- CODEFIX\n+                 (\"|\"\";\"\" should be \"\")\"\"\");\n                exit Specification_Loop;\n             end if;\n \n             --  If we have a declaration keyword after the semicolon, then\n             --  assume we had a missing right parenthesis and terminate list\n \n             if Token in Token_Class_Declk then\n-               Error_Msg_AP (\"missing \"\")\"\"\");\n+               Error_Msg_AP -- CODEFIX\n+                 (\"missing \"\")\"\"\");\n                Restore_Scan_State (Scan_State);\n                exit Specification_Loop;\n             end if;\n@@ -1290,7 +1300,8 @@ package body Ch6 is\n          Set_In_Present (Node, True);\n \n          if Style.Mode_In_Check and then Token /= Tok_Out then\n-            Error_Msg_SP (\"(style) IN should be omitted\");\n+            Error_Msg_SP -- CODEFIX\n+              (\"(style) IN should be omitted\");\n          end if;\n \n          if Token = Tok_Access then\n@@ -1305,8 +1316,7 @@ package body Ch6 is\n       end if;\n \n       if Token = Tok_In then\n-         Error_Msg_SC -- CODEFIX ???\n-           (\"IN must precede OUT in parameter mode\");\n+         Error_Msg_SC (\"IN must precede OUT in parameter mode\");\n          Scan; -- past IN\n          Set_In_Present (Node, True);\n       end if;"}, {"sha": "d4d168de7bc21d9eb397bea7bae95a20749976e7", "filename": "gcc/ada/par-ch7.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fpar-ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fpar-ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch7.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -205,7 +205,7 @@ package body Ch7 is\n                      if Token_Is_At_Start_Of_Line\n                        and then Start_Column /= Error_Msg_Col\n                      then\n-                        Error_Msg_SC -- CODEFIX???\n+                        Error_Msg_SC\n                           (\"(style) PRIVATE in wrong column, should be@\");\n                      end if;\n                   end if;\n@@ -217,7 +217,7 @@ package body Ch7 is\n                   --  Deal gracefully with multiple PRIVATE parts\n \n                   while Token = Tok_Private loop\n-                     Error_Msg_SC -- CODEFIX???\n+                     Error_Msg_SC\n                        (\"only one private part allowed per package\");\n                      Scan; -- past PRIVATE\n                      Append_List (P_Basic_Declarative_Items,\n@@ -234,8 +234,7 @@ package body Ch7 is\n                end if;\n \n                if Token = Tok_Begin then\n-                  Error_Msg_SC -- CODEFIX???\n-                    (\"begin block not allowed in package spec\");\n+                  Error_Msg_SC (\"begin block not allowed in package spec\");\n                   Scan; -- past BEGIN\n                   Discard_Junk_List (P_Sequence_Of_Statements (SS_None));\n                end if;"}, {"sha": "23b27c7774ed6d78102cf8aa6814d9f786fba0d2", "filename": "gcc/ada/par-ch9.adb", "status": "modified", "additions": 21, "deletions": 13, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fpar-ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fpar-ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch9.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -154,7 +154,8 @@ package body Ch9 is\n             Scan; -- past semicolon\n \n             if Token = Tok_Entry then\n-               Error_Msg_SP (\"|\"\";\"\" should be IS\");\n+               Error_Msg_SP -- CODEFIX\n+                 (\"|\"\";\"\" should be IS\");\n                Set_Task_Definition (Task_Node, P_Task_Definition);\n             else\n                Pop_Scope_Stack; -- Remove unused entry\n@@ -181,13 +182,14 @@ package body Ch9 is\n                end loop;\n \n                if Token /= Tok_With then\n-                  Error_Msg_SC (\"WITH expected\");\n+                  Error_Msg_SC -- CODEFIX\n+                    (\"WITH expected\");\n                end if;\n \n                Scan; -- past WITH\n \n                if Token = Tok_Private then\n-                  Error_Msg_SP\n+                  Error_Msg_SP -- CODEFIX\n                     (\"PRIVATE not allowed in task type declaration\");\n                end if;\n             end if;\n@@ -454,7 +456,8 @@ package body Ch9 is\n \n             if Token /= Tok_Is then\n                Restore_Scan_State (Scan_State);\n-               Error_Msg_SC (\"missing IS\");\n+               Error_Msg_SC -- CODEFIX\n+                 (\"missing IS\");\n                Set_Protected_Definition (Protected_Node,\n                  Make_Protected_Definition (Token_Ptr,\n                    Visible_Declarations => Empty_List,\n@@ -466,7 +469,8 @@ package body Ch9 is\n                return Protected_Node;\n             end if;\n \n-            Error_Msg_SP (\"|extra \"\"(\"\" ignored\");\n+            Error_Msg_SP -- CODEFIX\n+              (\"|extra \"\"(\"\" ignored\");\n          end if;\n \n          T_Is;\n@@ -492,7 +496,8 @@ package body Ch9 is\n             end loop;\n \n             if Token /= Tok_With then\n-               Error_Msg_SC (\"WITH expected\");\n+               Error_Msg_SC -- CODEFIX\n+                 (\"WITH expected\");\n             end if;\n \n             Scan; -- past WITH\n@@ -625,7 +630,8 @@ package body Ch9 is\n                Scan;  -- past OVERRIDING\n                Not_Overriding := True;\n             else\n-               Error_Msg_SC (\"OVERRIDING expected!\");\n+               Error_Msg_SC -- CODEFIX\n+                 (\"OVERRIDING expected!\");\n             end if;\n \n          else\n@@ -758,8 +764,7 @@ package body Ch9 is\n             Scan; -- past PRIVATE\n \n          elsif Token = Tok_Identifier then\n-            Error_Msg_SC\n-              (\"all components must be declared in spec!\");\n+            Error_Msg_SC (\"all components must be declared in spec!\");\n             Resync_Past_Semicolon;\n \n          elsif Token in Token_Class_Declk then\n@@ -809,7 +814,8 @@ package body Ch9 is\n             Scan;  -- part OVERRIDING\n             Not_Overriding := True;\n          else\n-            Error_Msg_SC (\"OVERRIDING expected!\");\n+            Error_Msg_SC -- CODEFIX\n+              (\"OVERRIDING expected!\");\n          end if;\n \n       elsif Token = Tok_Overriding then\n@@ -823,7 +829,8 @@ package body Ch9 is\n             Error_Msg_SP (\"\\unit must be compiled with -gnat05 switch\");\n \n          elsif Token /= Tok_Entry then\n-            Error_Msg_SC (\"ENTRY expected!\");\n+            Error_Msg_SC -- CODEFIX\n+              (\"ENTRY expected!\");\n          end if;\n       end if;\n \n@@ -1115,7 +1122,8 @@ package body Ch9 is\n          Bnode := P_Expression_No_Right_Paren;\n \n          if Token = Tok_Colon_Equal then\n-            Error_Msg_SC (\"|\"\":=\"\" should be \"\"=\"\"\");\n+            Error_Msg_SC -- CODEFIX\n+              (\"|\"\":=\"\" should be \"\"=\"\"\");\n             Scan;\n             Bnode := P_Expression_No_Right_Paren;\n          end if;"}, {"sha": "06c69747ec26bcacc6f35704a02ac29ec6ed02ae", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -150,8 +150,7 @@ function Prag (Pragma_Node : Node_Id; Semi : Source_Ptr) return Node_Id is\n          Error_Msg_Name_2 := Name_On;\n          Error_Msg_Name_3 := Name_Off;\n \n-         Error_Msg -- CODEFIX???\n-           (\"argument for pragma% must be% or%\", Sloc (Argx));\n+         Error_Msg (\"argument for pragma% must be% or%\", Sloc (Argx));\n          raise Error_Resync;\n       end if;\n    end Check_Arg_Is_On_Or_Off;\n@@ -539,7 +538,7 @@ begin\n \n                for J in 1 .. Name_Len loop\n                   if Is_Directory_Separator (Name_Buffer (J)) then\n-                     Error_Msg -- CODEFIX???\n+                     Error_Msg\n                        (\"directory separator character not allowed\",\n                         Sloc (Expression (Arg)) + Source_Ptr (J));\n                   end if;\n@@ -606,7 +605,7 @@ begin\n                   end if;\n                end if;\n \n-               Error_Msg_N -- CODEFIX???\n+               Error_Msg_N\n                  (\"Casing argument for pragma% must be \" &\n                   \"one of Mixedcase, Lowercase, Uppercase\",\n                   Arg);"}, {"sha": "c92b20fbfe2ccfca9695eb7aff3a3972d6fd7994", "filename": "gcc/ada/par-tchk.adb", "status": "modified", "additions": 59, "deletions": 30, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fpar-tchk.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fpar-tchk.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-tchk.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -83,15 +83,18 @@ package body Tchk is\n       --  A little recovery helper, accept then in place of =>\n \n       elsif Token = Tok_Then then\n-         Error_Msg_BC (\"|THEN should be \"\"='>\"\"\");\n+         Error_Msg_BC -- CODEFIX\n+           (\"|THEN should be \"\"='>\"\"\");\n          Scan; -- past THEN used in place of =>\n \n       elsif Token = Tok_Colon_Equal then\n-         Error_Msg_SC (\"|\"\":=\"\" should be \"\"='>\"\"\");\n+         Error_Msg_SC -- CODEFIX\n+           (\"|\"\":=\"\" should be \"\"='>\"\"\");\n          Scan; -- past := used in place of =>\n \n       else\n-         Error_Msg_AP (\"missing \"\"='>\"\"\");\n+         Error_Msg_AP -- CODEFIX\n+           (\"missing \"\"='>\"\"\");\n       end if;\n    end T_Arrow;\n \n@@ -122,7 +125,8 @@ package body Tchk is\n       if Token = Tok_Box then\n          Scan;\n       else\n-         Error_Msg_AP (\"missing \"\"'<'>\"\"\");\n+         Error_Msg_AP -- CODEFIX\n+           (\"missing \"\"'<'>\"\"\");\n       end if;\n    end T_Box;\n \n@@ -135,7 +139,8 @@ package body Tchk is\n       if Token = Tok_Colon then\n          Scan;\n       else\n-         Error_Msg_AP (\"missing \"\":\"\"\");\n+         Error_Msg_AP -- CODEFIX\n+           (\"missing \"\":\"\"\");\n       end if;\n    end T_Colon;\n \n@@ -149,19 +154,23 @@ package body Tchk is\n          Scan;\n \n       elsif Token = Tok_Equal then\n-         Error_Msg_SC (\"|\"\"=\"\" should be \"\":=\"\"\");\n+         Error_Msg_SC -- CODEFIX\n+           (\"|\"\"=\"\" should be \"\":=\"\"\");\n          Scan;\n \n       elsif Token = Tok_Colon then\n-         Error_Msg_SC (\"|\"\":\"\" should be \"\":=\"\"\");\n+         Error_Msg_SC -- CODEFIX\n+           (\"|\"\":\"\" should be \"\":=\"\"\");\n          Scan;\n \n       elsif Token = Tok_Is then\n-         Error_Msg_SC (\"|IS should be \"\":=\"\"\");\n+         Error_Msg_SC -- CODEFIX\n+           (\"|IS should be \"\":=\"\"\");\n          Scan;\n \n       else\n-         Error_Msg_AP (\"missing \"\":=\"\"\");\n+         Error_Msg_AP -- CODEFIX\n+           (\"missing \"\":=\"\"\");\n       end if;\n    end T_Colon_Equal;\n \n@@ -182,7 +191,8 @@ package body Tchk is\n          if Token = Tok_Comma then\n             Scan;\n          else\n-            Error_Msg_AP (\"missing \"\",\"\"\");\n+            Error_Msg_AP -- CODEFIX\n+              (\"missing \"\",\"\"\");\n          end if;\n       end if;\n \n@@ -200,7 +210,8 @@ package body Tchk is\n       if Token = Tok_Dot_Dot then\n          Scan;\n       else\n-         Error_Msg_AP (\"missing \"\"..\"\"\");\n+         Error_Msg_AP -- CODEFIX\n+           (\"missing \"\"..\"\"\");\n       end if;\n    end T_Dot_Dot;\n \n@@ -222,7 +233,8 @@ package body Tchk is\n       if Token = Tok_Greater_Greater then\n          Scan;\n       else\n-         Error_Msg_AP (\"missing \"\"'>'>\"\"\");\n+         Error_Msg_AP -- CODEFIX\n+           (\"missing \"\"'>'>\"\"\");\n       end if;\n    end T_Greater_Greater;\n \n@@ -271,15 +283,18 @@ package body Tchk is\n       --  Allow OF, => or = to substitute for IS with complaint\n \n       elsif Token = Tok_Arrow then\n-         Error_Msg_SC (\"|\"\"=>\"\" should be IS\");\n+         Error_Msg_SC -- CODEFIX\n+           (\"|\"\"=>\"\" should be IS\");\n          Scan; -- past =>\n \n       elsif Token = Tok_Of then\n-         Error_Msg_SC (\"|OF should be IS\");\n+         Error_Msg_SC -- CODEFIX\n+           (\"|OF should be IS\");\n          Scan; -- past OF\n \n       elsif Token = Tok_Equal then\n-         Error_Msg_SC (\"|\"\"=\"\" should be IS\");\n+         Error_Msg_SC -- CODEFIX\n+           (\"|\"\"=\"\" should be IS\");\n          Scan; -- past =\n \n       else\n@@ -289,7 +304,8 @@ package body Tchk is\n       --  Ignore extra IS keywords\n \n       while Token = Tok_Is loop\n-         Error_Msg_SC (\"|extra IS ignored\");\n+         Error_Msg_SC -- CODEFIX\n+           (\"|extra IS ignored\");\n          Scan;\n       end loop;\n    end T_Is;\n@@ -303,7 +319,8 @@ package body Tchk is\n       if Token = Tok_Left_Paren then\n          Scan;\n       else\n-         Error_Msg_AP (\"missing \"\"(\"\"\");\n+         Error_Msg_AP -- CODEFIX\n+           (\"missing \"\"(\"\"\");\n       end if;\n    end T_Left_Paren;\n \n@@ -314,7 +331,8 @@ package body Tchk is\n    procedure T_Loop is\n    begin\n       if Token = Tok_Do then\n-         Error_Msg_SC (\"LOOP expected\");\n+         Error_Msg_SC -- CODEFIX\n+           (\"LOOP expected\");\n          Scan;\n       else\n          Check_Token (Tok_Loop, AP);\n@@ -393,7 +411,8 @@ package body Tchk is\n       if Token = Tok_Right_Paren then\n          Scan;\n       else\n-         Error_Msg_AP (\"|missing \"\")\"\"\");\n+         Error_Msg_AP -- CODEFIX\n+           (\"|missing \"\")\"\"\");\n       end if;\n    end T_Right_Paren;\n \n@@ -408,24 +427,28 @@ package body Tchk is\n          Scan;\n \n          if Token = Tok_Semicolon then\n-            Error_Msg_SC (\"|extra \"\";\"\" ignored\");\n+            Error_Msg_SC -- CODEFIX\n+              (\"|extra \"\";\"\" ignored\");\n             Scan;\n          end if;\n \n          return;\n \n       elsif Token = Tok_Colon then\n-         Error_Msg_SC (\"|\"\":\"\" should be \"\";\"\"\");\n+         Error_Msg_SC -- CODEFIX\n+           (\"|\"\":\"\" should be \"\";\"\"\");\n          Scan;\n          return;\n \n       elsif Token = Tok_Comma then\n-         Error_Msg_SC (\"|\"\",\"\" should be \"\";\"\"\");\n+         Error_Msg_SC -- CODEFIX\n+           (\"|\"\",\"\" should be \"\";\"\"\");\n          Scan;\n          return;\n \n       elsif Token = Tok_Dot then\n-         Error_Msg_SC (\"|\"\".\"\" should be \"\";\"\"\");\n+         Error_Msg_SC -- CODEFIX\n+           (\"|\"\".\"\" should be \"\";\"\"\");\n          Scan;\n          return;\n \n@@ -464,7 +487,8 @@ package body Tchk is\n \n       --  If none of those tests return, we really have a missing semicolon\n \n-      Error_Msg_AP (\"|missing \"\";\"\"\");\n+      Error_Msg_AP -- CODEFIX\n+        (\"|missing \"\";\"\"\");\n       return;\n    end T_Semicolon;\n \n@@ -646,7 +670,8 @@ package body Tchk is\n          Scan; -- skip RETURN and we are done\n \n       else\n-         Error_Msg_SC (\"missing RETURN\");\n+         Error_Msg_SC -- CODEFIX\n+           (\"missing RETURN\");\n          Save_Scan_State (Scan_State); -- at start of junk tokens\n \n          loop\n@@ -814,7 +839,8 @@ package body Tchk is\n       if Token = Tok_Left_Paren then\n          Scan;\n       else\n-         Error_Msg_AP (\"missing \"\"(\"\"!\");\n+         Error_Msg_AP -- CODEFIX\n+           (\"missing \"\"(\"\"!\");\n       end if;\n    end U_Left_Paren;\n \n@@ -827,7 +853,8 @@ package body Tchk is\n       if Token = Tok_Right_Paren then\n          Scan;\n       else\n-         Error_Msg_AP (\"|missing \"\")\"\"!\");\n+         Error_Msg_AP -- CODEFIX\n+           (\"|missing \"\")\"\"!\");\n       end if;\n    end U_Right_Paren;\n \n@@ -846,7 +873,8 @@ package body Tchk is\n          Scan;\n \n          if Token = T then\n-            Error_Msg_SP (\"|extra \"\";\"\" ignored\");\n+            Error_Msg_SP -- CODEFIX\n+              (\"|extra \"\";\"\" ignored\");\n             Scan;\n          else\n             Error_Msg_SP (M);\n@@ -856,7 +884,8 @@ package body Tchk is\n          Scan;\n \n          if Token = T then\n-            Error_Msg_SP (\"|extra \"\",\"\" ignored\");\n+            Error_Msg_SP -- CODEFIX\n+              (\"|extra \"\",\"\" ignored\");\n             Scan;\n \n          else"}, {"sha": "6a0e8efc6cbdd156c5b7a7daad4deeb1ca75f0c9", "filename": "gcc/ada/par-util.adb", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fpar-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fpar-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-util.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -72,7 +72,8 @@ package body Util is\n         and then Name_Len = 7\n         and then Name_Buffer (1 .. 7) = \"program\"\n       then\n-         Error_Msg_SC (\"PROCEDURE expected\");\n+         Error_Msg_SC -- CODEFIX\n+           (\"PROCEDURE expected\");\n          Token := T;\n          return True;\n \n@@ -86,8 +87,7 @@ package body Util is\n             M2 (P2 + J - 1) := Fold_Upper (S (J));\n          end loop;\n \n-         Error_Msg_SC -- CODEFIX???\n-           (M2 (1 .. P2 - 1 + S'Last));\n+         Error_Msg_SC (M2 (1 .. P2 - 1 + S'Last));\n          Token := T;\n          return True;\n       end if;\n@@ -334,7 +334,8 @@ package body Util is\n \n          <<Assume_Comma>>\n             Restore_Scan_State (Scan_State);\n-            Error_Msg_SC (\"|\"\";\"\" should be \"\",\"\"\");\n+            Error_Msg_SC -- CODEFIX\n+              (\"|\"\";\"\" should be \"\",\"\"\");\n             Scan; -- past the semicolon\n             return True;\n \n@@ -384,26 +385,30 @@ package body Util is\n    begin\n       while Token = T loop\n          if T = Tok_Comma then\n-            Error_Msg_SC (\"|extra \"\",\"\" ignored\");\n+            Error_Msg_SC -- CODEFIX\n+              (\"|extra \"\",\"\" ignored\");\n \n          elsif T = Tok_Left_Paren then\n-            Error_Msg_SC (\"|extra \"\"(\"\" ignored\");\n+            Error_Msg_SC -- CODEFIX\n+              (\"|extra \"\"(\"\" ignored\");\n \n          elsif T = Tok_Right_Paren then\n-            Error_Msg_SC (\"|extra \"\")\"\" ignored\");\n+            Error_Msg_SC -- CODEFIX\n+              (\"|extra \"\")\"\" ignored\");\n \n          elsif T = Tok_Semicolon then\n-            Error_Msg_SC (\"|extra \"\";\"\" ignored\");\n+            Error_Msg_SC -- CODEFIX\n+              (\"|extra \"\";\"\" ignored\");\n \n          elsif T = Tok_Colon then\n-            Error_Msg_SC (\"|extra \"\":\"\" ignored\");\n+            Error_Msg_SC -- CODEFIX\n+              (\"|extra \"\":\"\" ignored\");\n \n          else\n             declare\n                Tname : constant String := Token_Type'Image (Token);\n             begin\n-               Error_Msg_SC\n-                 (\"|extra \" & Tname (5 .. Tname'Last) & \"ignored\");\n+               Error_Msg_SC (\"|extra \" & Tname (5 .. Tname'Last) & \"ignored\");\n             end;\n          end if;\n \n@@ -567,8 +572,7 @@ package body Util is\n       end;\n \n       Error_Msg_Node_1 := Prev;\n-      Error_Msg_SC\n-        (\"unexpected identifier, possibly & was meant here\");\n+      Error_Msg_SC (\"unexpected identifier, possibly & was meant here\");\n       Scan;\n    end Merge_Identifier;\n "}, {"sha": "2fb64cc614d30857921bf304f08995e5a90b54c6", "filename": "gcc/ada/prep.adb", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fprep.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fprep.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprep.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2002-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2002-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -411,7 +411,8 @@ package body Prep is\n                   Scan.all;\n \n                else\n-                  Error_Msg (\"`)` expected\", Token_Ptr);\n+                  Error_Msg -- CODEFIX\n+                    (\"`)` expected\", Token_Ptr);\n                end if;\n \n             when Tok_Not =>\n@@ -906,7 +907,8 @@ package body Prep is\n             Scan.all;\n \n             if Token /= Tok_Colon_Equal then\n-               Error_Msg (\"`:=` expected\", Token_Ptr);\n+               Error_Msg -- CODEFIX\n+                 (\"`:=` expected\", Token_Ptr);\n                goto Cleanup;\n             end if;\n \n@@ -1219,7 +1221,8 @@ package body Prep is\n                      elsif\n                        Pp_States.Table (Pp_States.Last).Else_Ptr /= 0\n                      then\n-                        Error_Msg (\"duplicate ELSE line\", Token_Ptr);\n+                        Error_Msg -- CODEFIX\n+                          (\"duplicate ELSE line\", Token_Ptr);\n                         No_Error_Found := False;\n                      end if;\n \n@@ -1269,14 +1272,16 @@ package body Prep is\n                      Scan.all;\n \n                      if Token /= Tok_If then\n-                        Error_Msg (\"IF expected\", Token_Ptr);\n+                        Error_Msg -- CODEFIX\n+                          (\"IF expected\", Token_Ptr);\n                         No_Error_Found := False;\n \n                      else\n                         Scan.all;\n \n                         if Token /= Tok_Semicolon then\n-                           Error_Msg (\"`;` Expected\", Token_Ptr);\n+                           Error_Msg -- CODEFIX\n+                             (\"`;` Expected\", Token_Ptr);\n                            No_Error_Found := False;\n \n                         else\n@@ -1312,13 +1317,15 @@ package body Prep is\n                      No_Error_Found := False;\n \n                      if Pp_States.Last = 0 then\n-                        Error_Msg (\"IF expected\", Token_Ptr);\n+                        Error_Msg -- CODEFIX\n+                          (\"IF expected\", Token_Ptr);\n \n                      elsif\n                        Pp_States.Table (Pp_States.Last).Else_Ptr = 0\n                      then\n-                        Error_Msg (\"IF, ELSIF, ELSE, or `END IF` expected\",\n-                                   Token_Ptr);\n+                        Error_Msg\n+                          (\"IF, ELSIF, ELSE, or `END IF` expected\",\n+                           Token_Ptr);\n \n                      else\n                         Error_Msg (\"IF or `END IF` expected\", Token_Ptr);"}, {"sha": "e36d59944cad7105a41df5b383fc86d1e4327b14", "filename": "gcc/ada/prepcomp.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fprepcomp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fprepcomp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprepcomp.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2003-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -342,7 +342,8 @@ package body Prepcomp is\n \n          while Token /= Tok_End_Of_Line and then Token /= Tok_EOF loop\n             if Token /= Tok_Minus then\n-               Error_Msg (\"`'-` expected\", Token_Ptr);\n+               Error_Msg -- CODEFIX\n+                 (\"`'-` expected\", Token_Ptr);\n                Skip_To_End_Of_Line;\n                goto Scan_Line;\n             end if;\n@@ -463,7 +464,8 @@ package body Prepcomp is\n                         Scan;\n \n                         if Token /= Tok_Equal then\n-                           Error_Msg (\"`=` expected\", Token_Ptr);\n+                           Error_Msg -- CODEFIX\n+                             (\"`=` expected\", Token_Ptr);\n                            Skip_To_End_Of_Line;\n                            goto Scan_Line;\n                         end if;"}, {"sha": "5a2dc00a6c4bd4cba20a48c7539d108e0fff3be8", "filename": "gcc/ada/scng.adb", "status": "modified", "additions": 28, "deletions": 27, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fscng.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fscng.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscng.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -325,7 +325,8 @@ package body Scng is\n            and then Source (Scan_Ptr + 2) = C\n          then\n             Scan_Ptr := Scan_Ptr + 1;\n-            Error_Msg_S (\"no space allowed here\");\n+            Error_Msg_S -- CODEFIX\n+              (\"no space allowed here\");\n             Scan_Ptr := Scan_Ptr + 2;\n             return True;\n \n@@ -380,16 +381,14 @@ package body Scng is\n                Error_Msg_S -- CODEFIX\n                  (\"two consecutive underlines not permitted\");\n             else\n-               Error_Msg_S -- CODEFIX???\n-                 (\"underline cannot follow punctuation character\");\n+               Error_Msg_S (\"underline cannot follow punctuation character\");\n             end if;\n \n          else\n             if Source (Scan_Ptr - 1) = '_' then\n-               Error_Msg_S -- CODEFIX???\n-                 (\"punctuation character cannot follow underline\");\n+               Error_Msg_S (\"punctuation character cannot follow underline\");\n             else\n-               Error_Msg_S -- CODEFIX???\n+               Error_Msg_S\n                  (\"two consecutive punctuation characters not permitted\");\n             end if;\n          end if;\n@@ -572,8 +571,7 @@ package body Scng is\n                if Warn_On_Obsolescent_Feature then\n                   Error_Msg_S\n                     (\"use of \"\":\"\" is an obsolescent feature (RM J.2(3))?\");\n-                  Error_Msg_S\n-                    (\"\\use \"\"'#\"\" instead?\");\n+                  Error_Msg_S (\"\\use \"\"'#\"\" instead?\");\n                end if;\n             end if;\n \n@@ -658,9 +656,11 @@ package body Scng is\n \n                elsif not Identifier_Char (C) then\n                   if Base_Char = '#' then\n-                     Error_Msg_S (\"missing '#\");\n+                     Error_Msg_S -- CODEFIX\n+                       (\"missing '#\");\n                   else\n-                     Error_Msg_S (\"missing ':\");\n+                     Error_Msg_S -- CODEFIX\n+                       (\"missing ':\");\n                   end if;\n \n                   exit;\n@@ -875,7 +875,7 @@ package body Scng is\n                end if;\n             end if;\n \n-            Error_Msg_S --  CODEFIX\n+            Error_Msg_S -- CODEFIX\n               (\"missing string quote\");\n          end Error_Unterminated_String;\n \n@@ -1215,7 +1215,8 @@ package body Scng is\n             Accumulate_Checksum ('&');\n \n             if Source (Scan_Ptr + 1) = '&' then\n-               Error_Msg_S (\"'&'& should be `AND THEN`\");\n+               Error_Msg_S -- CODEFIX\n+                 (\"'&'& should be `AND THEN`\");\n                Scan_Ptr := Scan_Ptr + 2;\n                Token := Tok_And;\n                return;\n@@ -1263,7 +1264,8 @@ package body Scng is\n               and then Source (Scan_Ptr + 2) /= '-'\n             then\n                Token := Tok_Colon_Equal;\n-               Error_Msg (\":- should be :=\", Scan_Ptr);\n+               Error_Msg -- CODEFIX\n+                 (\":- should be :=\", Scan_Ptr);\n                Scan_Ptr := Scan_Ptr + 2;\n                return;\n \n@@ -1367,7 +1369,8 @@ package body Scng is\n                return;\n \n             elsif Source (Scan_Ptr + 1) = '=' then\n-               Error_Msg_S (\"== should be =\");\n+               Error_Msg_S -- CODEFIX\n+                 (\"== should be =\");\n                Scan_Ptr := Scan_Ptr + 1;\n             end if;\n \n@@ -1588,8 +1591,7 @@ package body Scng is\n             if Warn_On_Obsolescent_Feature then\n                Error_Msg_S\n                  (\"use of \"\"'%\"\" is an obsolescent feature (RM J.2(4))?\");\n-               Error_Msg_S\n-                 (\"\\use \"\"\"\"\"\" instead?\");\n+               Error_Msg_S (\"\\use \"\"\"\"\"\" instead?\");\n             end if;\n \n             Slit;\n@@ -1669,13 +1671,13 @@ package body Scng is\n                   elsif Ada_Version >= Ada_05\n                     and then Is_UTF_32_Non_Graphic (UTF_32 (Code))\n                   then\n-                     Error_Msg\n+                     Error_Msg -- CODEFIX????\n                        (\"(Ada 2005) non-graphic character not permitted \" &\n                         \"in character literal\", Wptr);\n                   end if;\n \n                   if Source (Scan_Ptr) /= ''' then\n-                     Error_Msg_S (\"missing apostrophe\");\n+                        Error_Msg_S (\"missing apostrophe\");\n                   else\n                      Scan_Ptr := Scan_Ptr + 1;\n                   end if;\n@@ -1789,7 +1791,8 @@ package body Scng is\n             --  Special check for || to give nice message\n \n             if Source (Scan_Ptr + 1) = '|' then\n-               Error_Msg_S (\"\"\"'|'|\"\" should be `OR ELSE`\");\n+               Error_Msg_S -- CODEFIX\n+                 (\"\"\"'|'|\"\" should be `OR ELSE`\");\n                Scan_Ptr := Scan_Ptr + 2;\n                Token := Tok_Or;\n                return;\n@@ -1815,12 +1818,12 @@ package body Scng is\n             if Warn_On_Obsolescent_Feature then\n                Error_Msg_S\n                  (\"use of \"\"'!\"\" is an obsolescent feature (RM J.2(2))?\");\n-               Error_Msg_S\n-                 (\"\\use \"\"'|\"\" instead?\");\n+               Error_Msg_S (\"\\use \"\"'|\"\" instead?\");\n             end if;\n \n             if Source (Scan_Ptr + 1) = '=' then\n-               Error_Msg_S (\"'!= should be /=\");\n+               Error_Msg_S -- CODEFIX\n+                 (\"'!= should be /=\");\n                Scan_Ptr := Scan_Ptr + 2;\n                Token := Tok_Not_Equal;\n                return;\n@@ -2068,8 +2071,7 @@ package body Scng is\n             --  Punctuation is an error (at start of identifier)\n \n             elsif Is_UTF_32_Punctuation (Cat) then\n-               Error_Msg\n-                 (\"identifier cannot start with punctuation\", Wptr);\n+               Error_Msg (\"identifier cannot start with punctuation\", Wptr);\n                Scan_Ptr := Wptr;\n                Name_Len := 0;\n                Underline_Found := False;\n@@ -2078,8 +2080,7 @@ package body Scng is\n             --  Mark character is an error (at start of identifier)\n \n             elsif Is_UTF_32_Mark (Cat) then\n-               Error_Msg\n-                 (\"identifier cannot start with mark character\", Wptr);\n+               Error_Msg (\"identifier cannot start with mark character\", Wptr);\n                Scan_Ptr := Wptr;\n                Name_Len := 0;\n                Underline_Found := False;"}, {"sha": "be264dbad155cfb29fc095ab3aded21f925f6a80", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -1431,8 +1431,7 @@ package body Sem_Aggr is\n                   --  aggregate must not be enclosed in parentheses.\n \n                   if Paren_Count (Expr) /= 0 then\n-                     Error_Msg_N -- CODEFIX???\n-                       (\"no parenthesis allowed here\", Expr);\n+                     Error_Msg_N (\"no parenthesis allowed here\", Expr);\n                   end if;\n \n                   Make_String_Into_Aggregate (Expr);\n@@ -1444,7 +1443,7 @@ package body Sem_Aggr is\n                   --  a missing component association for a 1-aggregate.\n \n                   if Paren_Count (Expr) > 0 then\n-                     Error_Msg_N -- CODEFIX???\n+                     Error_Msg_N\n                        (\"\\if single-component aggregate is intended,\"\n                         & \" write e.g. (1 ='> ...)\", Expr);\n                   end if;\n@@ -1549,13 +1548,13 @@ package body Sem_Aggr is\n                   if Choice /= First (Choices (Assoc))\n                     or else Present (Next (Choice))\n                   then\n-                     Error_Msg_N -- CODEFIX???\n+                     Error_Msg_N\n                        (\"OTHERS must appear alone in a choice list\", Choice);\n                      return Failure;\n                   end if;\n \n                   if Present (Next (Assoc)) then\n-                     Error_Msg_N -- CODEFIX???\n+                     Error_Msg_N\n                        (\"OTHERS must appear last in an aggregate\", Choice);\n                      return Failure;\n                   end if;\n@@ -3025,13 +3024,13 @@ package body Sem_Aggr is\n                   if Selector_Name /= First (Choices (Assoc))\n                     or else Present (Next (Selector_Name))\n                   then\n-                     Error_Msg_N -- CODEFIX???\n+                     Error_Msg_N\n                        (\"OTHERS must appear alone in a choice list\",\n                         Selector_Name);\n                      return;\n \n                   elsif Present (Next (Assoc)) then\n-                     Error_Msg_N -- CODEFIX???\n+                     Error_Msg_N\n                        (\"OTHERS must appear last in an aggregate\",\n                         Selector_Name);\n                      return;\n@@ -3246,11 +3245,10 @@ package body Sem_Aggr is\n                if Nkind (Parent (Base_Type (Root_Typ))) =\n                                                N_Private_Type_Declaration\n                then\n-                  Error_Msg_NE -- CODEFIX???\n+                  Error_Msg_NE\n                     (\"type of aggregate has private ancestor&!\",\n                      N, Root_Typ);\n-                  Error_Msg_N -- CODEFIX???\n-                    (\"must use extension aggregate!\", N);\n+                  Error_Msg_N (\"must use extension aggregate!\", N);\n                   return;\n                end if;\n \n@@ -3283,11 +3281,10 @@ package body Sem_Aggr is\n                                         N_Private_Extension_Declaration\n                then\n                   if Nkind (N) /= N_Extension_Aggregate then\n-                     Error_Msg_NE -- CODEFIX???\n+                     Error_Msg_NE\n                        (\"type of aggregate has private ancestor&!\",\n                         N, Parent_Typ);\n-                     Error_Msg_N  -- CODEFIX???\n-                       (\"must use extension aggregate!\", N);\n+                     Error_Msg_N  (\"must use extension aggregate!\", N);\n                      return;\n \n                   elsif Parent_Typ /= Root_Typ then\n@@ -3772,7 +3769,7 @@ package body Sem_Aggr is\n                if No (Others_Etype)\n                   and then not Others_Box\n                then\n-                  Error_Msg_N -- CODEFIX???\n+                  Error_Msg_N\n                     (\"OTHERS must represent at least one component\", Selectr);\n                end if;\n "}, {"sha": "bfd434373b20e5159eb037443eab122412759bc9", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2384,8 +2384,8 @@ package body Sem_Attr is\n            and then Base_Type (Typ) = Typ\n            and then Warn_On_Redundant_Constructs\n          then\n-               Error_Msg_NE\n-                 (\"?redundant attribute, & is its own base type\", N, Typ);\n+            Error_Msg_NE -- CODEFIX\n+              (\"?redundant attribute, & is its own base type\", N, Typ);\n          end if;\n \n          Set_Etype (N, Base_Type (Entity (P)));\n@@ -7643,8 +7643,7 @@ package body Sem_Attr is\n          --  know will fail, so generate an appropriate warning.\n \n          if In_Instance_Body then\n-            Error_Msg_F\n-              (\"?non-local pointer cannot point to local object\", P);\n+            Error_Msg_F (\"?non-local pointer cannot point to local object\", P);\n             Error_Msg_F\n               (\"\\?Program_Error will be raised at run time\", P);\n             Rewrite (N,\n@@ -7654,8 +7653,7 @@ package body Sem_Attr is\n             return;\n \n          else\n-            Error_Msg_F\n-              (\"non-local pointer cannot point to local object\", P);\n+            Error_Msg_F (\"non-local pointer cannot point to local object\", P);\n \n             --  Check for case where we have a missing access definition\n "}, {"sha": "cc47653da1c754fa61086f0ebe2b7261c4c18ec0", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 12, "deletions": 17, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -692,9 +692,8 @@ package body Sem_Ch10 is\n             end if;\n \n             if Circularity then\n-               Error_Msg_N -- CODEFIX???\n-                 (\"circular dependency caused by with_clauses\", N);\n-               Error_Msg_N -- CODEFIX???\n+               Error_Msg_N (\"circular dependency caused by with_clauses\", N);\n+               Error_Msg_N\n                  (\"\\possibly missing limited_with clause\"\n                   & \" in one of the following\", N);\n \n@@ -1472,11 +1471,11 @@ package body Sem_Ch10 is\n                                                       Unit_Name)\n                               then\n                                  Error_Msg_Sloc := Sloc (It);\n-                                 Error_Msg_N -- CODEFIX???\n+                                 Error_Msg_N\n                                    (\"simultaneous visibility of limited \"\n                                     & \"and unlimited views not allowed\",\n                                     Item);\n-                                 Error_Msg_NE -- CODEFIX???\n+                                 Error_Msg_NE\n                                    (\"\\unlimited view visible through \"\n                                     & \"context clause #\",\n                                     Item, It);\n@@ -1855,8 +1854,7 @@ package body Sem_Ch10 is\n       if No (Nam)\n         or else not Is_Protected_Type (Etype (Nam))\n       then\n-         Error_Msg_N -- CODEFIX???\n-           (\"missing specification for Protected body\", N);\n+         Error_Msg_N (\"missing specification for Protected body\", N);\n       else\n          Set_Scope (Defining_Entity (N), Current_Scope);\n          Set_Has_Completion (Etype (Nam));\n@@ -2255,8 +2253,7 @@ package body Sem_Ch10 is\n       end if;\n \n       if No (Nam) or else not Is_Task_Type (Etype (Nam)) then\n-         Error_Msg_N -- CODEFIX???\n-           (\"missing specification for task body\", N);\n+         Error_Msg_N (\"missing specification for task body\", N);\n       else\n          Set_Scope (Defining_Entity (N), Current_Scope);\n          Generate_Reference (Nam, Defining_Identifier (N), 'b');\n@@ -2397,15 +2394,13 @@ package body Sem_Ch10 is\n \n             begin\n                if U_Kind = Implementation_Unit then\n-                  Error_Msg_F -- CODEFIX???\n-                    (\"& is an internal 'G'N'A'T unit?\", Name (N));\n+                  Error_Msg_F (\"& is an internal 'G'N'A'T unit?\", Name (N));\n \n                   --  Add alternative name if available, otherwise issue a\n                   --  general warning message.\n \n                   if Error_Msg_Strlen /= 0 then\n-                     Error_Msg_F -- CODEFIX???\n-                       (\"\\use \"\"~\"\" instead\", Name (N));\n+                     Error_Msg_F (\"\\use \"\"~\"\" instead\", Name (N));\n                   else\n                      Error_Msg_F\n                        (\"\\use of this unit is non-portable \" &\n@@ -3455,7 +3450,7 @@ package body Sem_Ch10 is\n                      end loop;\n \n                      if E2 = WEnt then\n-                        Error_Msg_N -- CODEFIX???\n+                        Error_Msg_N\n                           (\"unlimited view visible through use clause \", W);\n                         return;\n                      end if;\n@@ -3805,7 +3800,7 @@ package body Sem_Ch10 is\n                                          N_Generic_Package_Declaration)\n         and then Nkind (Lib_Unit) not in N_Generic_Renaming_Declaration\n       then\n-         Error_Msg_N -- CODEFIX???\n+         Error_Msg_N\n            (\"child of a generic package must be a generic unit\", Lib_Unit);\n \n       elsif not Is_Package_Or_Generic_Package (P_Name) then\n@@ -4497,11 +4492,11 @@ package body Sem_Ch10 is\n                         --  installed.\n \n                         if Kind = N_Package_Declaration then\n-                           Error_Msg_N -- CODEFIX???\n+                           Error_Msg_N\n                              (\"simultaneous visibility of the limited and \" &\n                               \"unlimited views not allowed\", N);\n                            Error_Msg_Sloc := Sloc (Item);\n-                           Error_Msg_NE -- CODEFIX???\n+                           Error_Msg_NE\n                              (\"\\\\  unlimited view of & visible through the \" &\n                               \"context clause #\", N, P);\n                            Error_Msg_Sloc := Sloc (Decl);"}, {"sha": "4c98f39f2074e79e6257c63c618952be9bcadae9", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 18, "deletions": 19, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -1144,8 +1144,7 @@ package body Sem_Ch12 is\n                Others_Present := True;\n \n                if Present (Next (Actual)) then\n-                  Error_Msg_N -- CODEFIX???\n-                    (\"others must be last association\", Actual);\n+                  Error_Msg_N (\"others must be last association\", Actual);\n                end if;\n \n                --  This subprogram is used both for formal packages and for\n@@ -1835,11 +1834,11 @@ package body Sem_Ch12 is\n \n          if Null_Exclusion_Present (N) then\n             if not Is_Access_Type (T) then\n-               Error_Msg_N -- CODEFIX???\n+               Error_Msg_N\n                  (\"null exclusion can only apply to an access type\", N);\n \n             elsif Can_Never_Be_Null (T) then\n-               Error_Msg_NE -- CODEFIX???\n+               Error_Msg_NE\n                  (\"`NOT NULL` not allowed (& already excludes null)\",\n                     N, T);\n             end if;\n@@ -4089,7 +4088,7 @@ package body Sem_Ch12 is\n         and then Ekind (Gen_Unit) /= E_Generic_Procedure\n       then\n          if Ekind (Gen_Unit) = E_Generic_Function then\n-            Error_Msg_N -- CODEFIX???\n+            Error_Msg_N\n               (\"cannot instantiate generic function as procedure\", Gen_Id);\n          else\n             Error_Msg_N\n@@ -4100,7 +4099,7 @@ package body Sem_Ch12 is\n         and then Ekind (Gen_Unit) /= E_Generic_Function\n       then\n          if Ekind (Gen_Unit) = E_Generic_Procedure then\n-            Error_Msg_N -- CODEFIX???\n+            Error_Msg_N\n               (\"cannot instantiate generic procedure as function\", Gen_Id);\n          else\n             Error_Msg_N\n@@ -4228,7 +4227,7 @@ package body Sem_Ch12 is\n                   then\n                      Error_Msg_NE (\"access parameter& is controlling,\",\n                        N, Formal);\n-                     Error_Msg_NE -- CODEFIX???\n+                     Error_Msg_NE\n                        (\"\\corresponding parameter of & must be\"\n                        & \" explicitly null-excluding\", N, Gen_Id);\n                   end if;\n@@ -5045,7 +5044,7 @@ package body Sem_Ch12 is\n                   if Is_Child_Unit (E)\n                     and then not Is_Visible_Child_Unit (E)\n                   then\n-                     Error_Msg_NE -- CODEFIX???\n+                     Error_Msg_NE\n                        (\"generic child unit& is not visible\", Gen_Id, E);\n                   end if;\n \n@@ -8356,14 +8355,14 @@ package body Sem_Ch12 is\n          if Is_Atomic_Object (Actual)\n            and then not Is_Atomic (Orig_Ftyp)\n          then\n-            Error_Msg_N -- CODEFIX???\n+            Error_Msg_N\n               (\"cannot instantiate non-atomic formal object \" &\n                \"with atomic actual\", Actual);\n \n          elsif Is_Volatile_Object (Actual)\n            and then not Is_Volatile (Orig_Ftyp)\n          then\n-            Error_Msg_N -- CODEFIX???\n+            Error_Msg_N\n               (\"cannot instantiate non-volatile formal object \" &\n                \"with volatile actual\", Actual);\n          end if;\n@@ -8530,7 +8529,7 @@ package body Sem_Ch12 is\n         and then Has_Null_Exclusion (Analyzed_Formal)\n       then\n          Error_Msg_Sloc := Sloc (Analyzed_Formal);\n-         Error_Msg_N -- CODEFIX???\n+         Error_Msg_N\n            (\"actual must exclude null to match generic formal#\", Actual);\n       end if;\n \n@@ -9214,13 +9213,13 @@ package body Sem_Ch12 is\n \n          if Is_Access_Constant (A_Gen_T) then\n             if not Is_Access_Constant (Act_T) then\n-               Error_Msg_N -- CODEFIX???\n+               Error_Msg_N\n                  (\"actual type must be access-to-constant type\", Actual);\n                Abandon_Instantiation (Actual);\n             end if;\n          else\n             if Is_Access_Constant (Act_T) then\n-               Error_Msg_N -- CODEFIX???\n+               Error_Msg_N\n                  (\"actual type must be access-to-variable type\", Actual);\n                Abandon_Instantiation (Actual);\n \n@@ -9270,7 +9269,7 @@ package body Sem_Ch12 is\n          --  Ada 2005: null-exclusion indicators of the two types must agree\n \n          if Can_Never_Be_Null (A_Gen_T) /=  Can_Never_Be_Null (Act_T) then\n-            Error_Msg_NE -- CODEFIX???\n+            Error_Msg_NE\n               (\"non null exclusion of actual and formal & do not match\",\n                  Actual, Gen_T);\n          end if;\n@@ -9392,7 +9391,7 @@ package body Sem_Ch12 is\n          if Has_Aliased_Components (A_Gen_T)\n            and then not Has_Aliased_Components (Act_T)\n          then\n-            Error_Msg_NE -- CODEFIX???\n+            Error_Msg_NE\n               (\"actual must have aliased components to match formal type &\",\n                Actual, Gen_T);\n          end if;\n@@ -9581,15 +9580,15 @@ package body Sem_Ch12 is\n          --  Perform atomic/volatile checks (RM C.6(12))\n \n          if Is_Atomic (Act_T) and then not Is_Atomic (Ancestor) then\n-            Error_Msg_N -- CODEFIX???\n+            Error_Msg_N\n               (\"cannot have atomic actual type for non-atomic formal type\",\n                Actual);\n \n          elsif Is_Volatile (Act_T)\n            and then not Is_Volatile (Ancestor)\n            and then Is_By_Reference_Type (Ancestor)\n          then\n-            Error_Msg_N -- CODEFIX???\n+            Error_Msg_N\n               (\"cannot have volatile actual type for non-volatile formal type\",\n                Actual);\n          end if;\n@@ -9944,7 +9943,7 @@ package body Sem_Ch12 is\n            and then not Is_Limited_Type (A_Gen_T)\n            and then False\n          then\n-            Error_Msg_NE -- CODEFIX???\n+            Error_Msg_NE\n               (\"actual for non-limited & cannot be a limited type\", Actual,\n                Gen_T);\n             Explain_Limited_Type (Act_T, Actual);\n@@ -9992,7 +9991,7 @@ package body Sem_Ch12 is\n          if Is_Limited_Type (Act_T)\n            and then not Is_Limited_Type (A_Gen_T)\n          then\n-            Error_Msg_NE -- CODEFIX???\n+            Error_Msg_NE\n               (\"actual for non-limited & cannot be a limited type\", Actual,\n                Gen_T);\n             Explain_Limited_Type (Act_T, Actual);"}, {"sha": "5a375f5831c02421ec426d41b79ade62785e0965", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1810,8 +1810,7 @@ package body Sem_Ch13 is\n                   Error_Msg_N\n                     (\"storage size clause for task is an \" &\n                      \"obsolescent feature (RM J.9)?\", N);\n-                  Error_Msg_N\n-                    (\"\\use Storage_Size pragma instead?\", N);\n+                  Error_Msg_N (\"\\use Storage_Size pragma instead?\", N);\n                end if;\n \n                FOnly := True;\n@@ -4243,8 +4242,7 @@ package body Sem_Ch13 is\n       elsif Is_Type (T)\n         and then Is_Generic_Type (Root_Type (T))\n       then\n-         Error_Msg_N\n-           (\"representation item not allowed for generic type\", N);\n+         Error_Msg_N (\"representation item not allowed for generic type\", N);\n          return True;\n       end if;\n "}, {"sha": "27cb478e72b9e6691936e6fcad244b016b74ac68", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 22, "deletions": 24, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1912,8 +1912,7 @@ package body Sem_Ch3 is\n             if Is_Interface (Root_Type (Current_Scope)) then\n                Error_Msg_N\n                  (\"\\limitedness is not inherited from limited interface\", N);\n-               Error_Msg_N\n-                 (\"\\add LIMITED to type indication\", N);\n+               Error_Msg_N (\"\\add LIMITED to type indication\", N);\n             end if;\n \n             Explain_Limited_Type (T, N);\n@@ -8573,8 +8572,7 @@ package body Sem_Ch3 is\n                --  them all, and not just the first one).\n \n                Error_Msg_Node_2 := Subp;\n-               Error_Msg_N\n-                 (\"nonabstract type& has abstract subprogram&!\", T);\n+               Error_Msg_N (\"nonabstract type& has abstract subprogram&!\", T);\n             end if;\n          end if;\n \n@@ -8775,8 +8773,7 @@ package body Sem_Ch3 is\n                   Error_Msg_NE\n                     (\"missing full declaration for }\", Parent (E), E);\n                else\n-                  Error_Msg_NE\n-                    (\"missing body for &\", Parent (E), E);\n+                  Error_Msg_NE (\"missing body for &\", Parent (E), E);\n                end if;\n \n             --  Package body has no completion for a declaration that appears\n@@ -8787,8 +8784,7 @@ package body Sem_Ch3 is\n                Error_Msg_Sloc := Sloc (E);\n \n                if Is_Type (E) then\n-                  Error_Msg_NE\n-                    (\"missing full declaration for }!\", Body_Id, E);\n+                  Error_Msg_NE (\"missing full declaration for }!\", Body_Id, E);\n \n                elsif Is_Overloadable (E)\n                  and then Current_Entity_In_Scope (E) /= E\n@@ -9811,8 +9807,9 @@ package body Sem_Ch3 is\n            and then not In_Private_Part (Current_Scope)\n          then\n             Error_Msg_Sloc := Sloc (Prev);\n-            Error_Msg_N (\"full constant for declaration#\"\n-                         & \" must be in private part\", N);\n+            Error_Msg_N\n+              (\"full constant for declaration#\"\n+               & \" must be in private part\", N);\n \n          elsif Ekind (Current_Scope) = E_Package\n            and then\n@@ -10065,8 +10062,7 @@ package body Sem_Ch3 is\n       --  is such an array type... (RM 3.6.1)\n \n       if Is_Constrained (T) then\n-         Error_Msg_N\n-           (\"array type is already constrained\", Subtype_Mark (SI));\n+         Error_Msg_N (\"array type is already constrained\", Subtype_Mark (SI));\n          Constraint_OK := False;\n \n       else\n@@ -10814,8 +10810,7 @@ package body Sem_Ch3 is\n             Error_Msg_N\n               (\"(Ada 2005) incomplete subtype may not be constrained\", C);\n          else\n-            Error_Msg_N\n-              (\"invalid constraint: type has no discriminant\", C);\n+            Error_Msg_N (\"invalid constraint: type has no discriminant\", C);\n          end if;\n \n          Fixup_Bad_Constraint;\n@@ -13489,8 +13484,9 @@ package body Sem_Ch3 is\n              (not Is_Interface (Parent_Type)\n                or else not Is_Limited_Interface (Parent_Type))\n          then\n-            Error_Msg_NE (\"parent type& of limited type must be limited\",\n-              N, Parent_Type);\n+            Error_Msg_NE\n+              (\"parent type& of limited type must be limited\",\n+               N, Parent_Type);\n          end if;\n       end if;\n    end Derived_Type_Declaration;\n@@ -13943,9 +13939,9 @@ package body Sem_Ch3 is\n \n             elsif Nkind (Type_Definition (N)) = N_Derived_Type_Definition then\n                if No (Record_Extension_Part (Type_Definition (N))) then\n-                  Error_Msg_NE (\n-                    \"full declaration of } must be a record extension\",\n-                    Prev, Id);\n+                  Error_Msg_NE\n+                    (\"full declaration of } must be a record extension\",\n+                     Prev, Id);\n \n                   --  Set some attributes to produce a usable full view\n \n@@ -16253,15 +16249,17 @@ package body Sem_Ch3 is\n             Iface := Find_Hidden_Interface (Priv_T_Ifaces, Full_T_Ifaces);\n \n             if Present (Iface) then\n-               Error_Msg_NE (\"interface & not implemented by full type \" &\n-                             \"(RM-2005 7.3 (7.3/2))\", Priv_T, Iface);\n+               Error_Msg_NE\n+                 (\"interface & not implemented by full type \" &\n+                  \"(RM-2005 7.3 (7.3/2))\", Priv_T, Iface);\n             end if;\n \n             Iface := Find_Hidden_Interface (Full_T_Ifaces, Priv_T_Ifaces);\n \n             if Present (Iface) then\n-               Error_Msg_NE (\"interface & not implemented by partial view \" &\n-                             \"(RM-2005 7.3 (7.3/2))\", Full_T, Iface);\n+               Error_Msg_NE\n+                 (\"interface & not implemented by partial view \" &\n+                  \"(RM-2005 7.3 (7.3/2))\", Full_T, Iface);\n             end if;\n          end;\n       end if;"}, {"sha": "6a8c994c7df42085f8a3b04f86f3e173a1f83865", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 22, "deletions": 35, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -307,10 +307,9 @@ package body Sem_Ch4 is\n          end if;\n \n          if Opnd = Left_Opnd (N) then\n-            Error_Msg_N -- CODEFIX???\n-              (\"\\left operand has the following interpretations\", N);\n+            Error_Msg_N (\"\\left operand has the following interpretations\", N);\n          else\n-            Error_Msg_N -- CODEFIX???\n+            Error_Msg_N\n               (\"\\right operand has the following interpretations\", N);\n             Err := Opnd;\n          end if;\n@@ -322,16 +321,13 @@ package body Sem_Ch4 is\n \n    begin\n       if Nkind (N) in N_Membership_Test then\n-         Error_Msg_N -- CODEFIX???\n-           (\"ambiguous operands for membership\",  N);\n+         Error_Msg_N (\"ambiguous operands for membership\",  N);\n \n       elsif Nkind_In (N, N_Op_Eq, N_Op_Ne) then\n-         Error_Msg_N -- CODEFIX???\n-           (\"ambiguous operands for equality\",  N);\n+         Error_Msg_N (\"ambiguous operands for equality\",  N);\n \n       else\n-         Error_Msg_N -- CODEFIX???\n-           (\"ambiguous operands for comparison\",  N);\n+         Error_Msg_N (\"ambiguous operands for comparison\",  N);\n       end if;\n \n       if All_Errors_Mode then\n@@ -4148,33 +4144,28 @@ package body Sem_Ch4 is\n \n       elsif Nkind (Expr) = N_Null then\n          Error_Msg_N (\"argument of conversion cannot be null\", N);\n-         Error_Msg_N -- CODEFIX???\n-           (\"\\use qualified expression instead\", N);\n+         Error_Msg_N (\"\\use qualified expression instead\", N);\n          Set_Etype (N, Any_Type);\n \n       elsif Nkind (Expr) = N_Aggregate then\n          Error_Msg_N (\"argument of conversion cannot be aggregate\", N);\n-         Error_Msg_N -- CODEFIX???\n-           (\"\\use qualified expression instead\", N);\n+         Error_Msg_N (\"\\use qualified expression instead\", N);\n \n       elsif Nkind (Expr) = N_Allocator then\n          Error_Msg_N (\"argument of conversion cannot be an allocator\", N);\n-         Error_Msg_N -- CODEFIX???\n-           (\"\\use qualified expression instead\", N);\n+         Error_Msg_N (\"\\use qualified expression instead\", N);\n \n       elsif Nkind (Expr) = N_String_Literal then\n          Error_Msg_N (\"argument of conversion cannot be string literal\", N);\n-         Error_Msg_N -- CODEFIX???\n-           (\"\\use qualified expression instead\", N);\n+         Error_Msg_N (\"\\use qualified expression instead\", N);\n \n       elsif Nkind (Expr) = N_Character_Literal then\n          if Ada_Version = Ada_83 then\n             Resolve (Expr, T);\n          else\n             Error_Msg_N (\"argument of conversion cannot be character literal\",\n               N);\n-            Error_Msg_N -- CODEFIX???\n-              (\"\\use qualified expression instead\", N);\n+            Error_Msg_N (\"\\use qualified expression instead\", N);\n          end if;\n \n       elsif Nkind (Expr) = N_Attribute_Reference\n@@ -4184,8 +4175,7 @@ package body Sem_Ch4 is\n            Attribute_Name (Expr) = Name_Unrestricted_Access)\n       then\n          Error_Msg_N (\"argument of conversion cannot be access\", N);\n-         Error_Msg_N -- CODEFIX???\n-           (\"\\use qualified expression instead\", N);\n+         Error_Msg_N (\"\\use qualified expression instead\", N);\n       end if;\n    end Analyze_Type_Conversion;\n \n@@ -4659,7 +4649,7 @@ package body Sem_Ch4 is\n              and then From_With_Type (Etype (Actual))\n             then\n                Error_Msg_Qual_Level := 1;\n-               Error_Msg_NE -- CODEFIX???\n+               Error_Msg_NE\n                 (\"missing with_clause for scope of imported type&\",\n                   Actual, Etype (Actual));\n                Error_Msg_Qual_Level := 0;\n@@ -5680,9 +5670,9 @@ package body Sem_Ch4 is\n                                  (R,\n                                   Etype (Next_Formal (First_Formal (Op_Id))))\n                            then\n-                              Error_Msg_N -- CODEFIX???\n+                              Error_Msg_N\n                                 (\"No legal interpretation for operator&\", N);\n-                              Error_Msg_NE -- CODEFIX???\n+                              Error_Msg_NE\n                                 (\"\\use clause on& would make operation legal\",\n                                    N, Scope (Op_Id));\n                               exit;\n@@ -6373,7 +6363,7 @@ package body Sem_Ch4 is\n                 Prefix => Relocate_Node (Obj)));\n \n             if not Is_Aliased_View (Obj) then\n-               Error_Msg_NE -- CODEFIX???\n+               Error_Msg_NE\n                  (\"object in prefixed call to& must be aliased\"\n                       & \" (RM-2005 4.3.1 (13))\",\n                  Prefix (First_Actual), Subprog);\n@@ -6428,28 +6418,27 @@ package body Sem_Ch4 is\n \n          if Access_Formal and then not Access_Actual then\n             if Nkind (Parent (Op)) = N_Full_Type_Declaration then\n-               Error_Msg_N -- CODEFIX???\n+               Error_Msg_N\n                  (\"\\possible interpretation\"\n                    & \" (inherited, with implicit 'Access) #\", N);\n             else\n-               Error_Msg_N -- CODEFIX???\n+               Error_Msg_N\n                  (\"\\possible interpretation (with implicit 'Access) #\", N);\n             end if;\n \n          elsif not Access_Formal and then Access_Actual then\n             if Nkind (Parent (Op)) = N_Full_Type_Declaration then\n-               Error_Msg_N -- CODEFIX???\n+               Error_Msg_N\n                  (\"\\possible interpretation\"\n                    & \" ( inherited, with implicit dereference) #\", N);\n             else\n-               Error_Msg_N -- CODEFIX???\n+               Error_Msg_N\n                  (\"\\possible interpretation (with implicit dereference) #\", N);\n             end if;\n \n          else\n             if Nkind (Parent (Op)) = N_Full_Type_Declaration then\n-               Error_Msg_N -- CODEFIX???\n-                 (\"\\possible interpretation (inherited)#\", N);\n+               Error_Msg_N (\"\\possible interpretation (inherited)#\", N);\n             else\n                Error_Msg_N -- CODEFIX\n                  (\"\\possible interpretation#\", N);\n@@ -6650,8 +6639,7 @@ package body Sem_Ch4 is\n                      if Present (Valid_Candidate (Success, Call_Node, Hom))\n                        and then Nkind (Call_Node) /= N_Function_Call\n                      then\n-                        Error_Msg_NE -- CODEFIX???\n-                          (\"ambiguous call to&\", N, Hom);\n+                        Error_Msg_NE (\"ambiguous call to&\", N, Hom);\n                         Report_Ambiguity (Matching_Op);\n                         Report_Ambiguity (Hom);\n                         Error := True;\n@@ -7068,8 +7056,7 @@ package body Sem_Ch4 is\n                   if Present (Valid_Candidate (Success, Call_Node, Prim_Op))\n                     and then Nkind (Call_Node) /= N_Function_Call\n                   then\n-                     Error_Msg_NE -- CODEFIX???\n-                       (\"ambiguous call to&\", N, Prim_Op);\n+                     Error_Msg_NE (\"ambiguous call to&\", N, Prim_Op);\n                      Report_Ambiguity (Matching_Op);\n                      Report_Ambiguity (Prim_Op);\n                      return True;"}, {"sha": "22897a35e2b687ddc408be9f5314d4fe35d9eaaf", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -558,8 +558,7 @@ package body Sem_Ch5 is\n         and then not Is_Tag_Indeterminate (Rhs)\n         and then not Is_Dynamically_Tagged (Rhs)\n       then\n-         Error_Msg_N -- CODEFIX???\n-           (\"dynamically tagged expression required!\", Rhs);\n+         Error_Msg_N (\"dynamically tagged expression required!\", Rhs);\n       end if;\n \n       --  Propagate the tag from a class-wide target to the rhs when the rhs\n@@ -573,7 +572,7 @@ package body Sem_Ch5 is\n               and then Is_Entity_Name (Name (Rhs))\n               and then Is_Abstract_Subprogram (Entity (Name (Rhs)))\n          then\n-            Error_Msg_N -- CODEFIX???\n+            Error_Msg_N\n               (\"call to abstract function must be dispatching\", Name (Rhs));\n \n          elsif Nkind (Rhs) = N_Qualified_Expression\n@@ -582,7 +581,7 @@ package body Sem_Ch5 is\n               and then\n                 Is_Abstract_Subprogram (Entity (Name (Expression (Rhs))))\n          then\n-            Error_Msg_N -- CODEFIX???\n+            Error_Msg_N\n               (\"call to abstract function must be dispatching\",\n                 Name (Expression (Rhs)));\n          end if;\n@@ -1636,11 +1635,10 @@ package body Sem_Ch5 is\n                         else\n                            --  Both of them are user-defined\n \n-                           Error_Msg_N -- CODEFIX???\n+                           Error_Msg_N\n                              (\"ambiguous bounds in range of iteration\",\n                                R_Copy);\n-                           Error_Msg_N -- CODEFIX???\n-                             (\"\\possible interpretations:\", R_Copy);\n+                           Error_Msg_N (\"\\possible interpretations:\", R_Copy);\n                            Error_Msg_NE (\"\\\\} \", R_Copy, Found);\n                            Error_Msg_NE (\"\\\\} \", R_Copy, It.Typ);\n                            exit;\n@@ -1892,7 +1890,7 @@ package body Sem_Ch5 is\n                               if Compile_Time_Compare\n                                    (L, H, Assume_Valid => False) = GT\n                               then\n-                                 Error_Msg_N -- CODEFIX???\n+                                 Error_Msg_N\n                                    (\"?loop range is null, \"\n                                     & \"loop will not execute\",\n                                     DS);\n@@ -1946,8 +1944,7 @@ package body Sem_Ch5 is\n                                     Intval (Original_Node (H)) = Uint_1)\n                         then\n                            Error_Msg_N (\"?loop range may be null\", DS);\n-                           Error_Msg_N -- CODEFIX???\n-                             (\"\\?bounds may be wrong way round\", DS);\n+                           Error_Msg_N (\"\\?bounds may be wrong way round\", DS);\n                         end if;\n                      end;\n                   end if;\n@@ -2244,8 +2241,7 @@ package body Sem_Ch5 is\n \n                   --  Now issue the warning\n \n-                  Error_Msg -- CODEFIX???\n-                    (\"?unreachable code!\", Error_Loc);\n+                  Error_Msg (\"?unreachable code!\", Error_Loc);\n                end if;\n \n             --  If the unconditional transfer of control instruction is"}, {"sha": "76c521c42d161293a99564d7f130484341370bd4", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 36, "deletions": 44, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -315,7 +315,7 @@ package body Sem_Ch6 is\n          --  extended_return_statement.\n \n          if Returns_Object then\n-            Error_Msg_N -- CODEFIX???\n+            Error_Msg_N\n               (\"extended_return_statement cannot return value; \" &\n                \"use `\"\"RETURN;\"\"`\", N);\n          end if;\n@@ -1126,8 +1126,7 @@ package body Sem_Ch6 is\n            and then No (Actuals)\n            and then Comes_From_Source (N)\n          then\n-            Error_Msg_N -- CODEFIX???\n-              (\"missing explicit dereference in call\", N);\n+            Error_Msg_N (\"missing explicit dereference in call\", N);\n          end if;\n \n          Analyze_Call_And_Resolve;\n@@ -1175,8 +1174,7 @@ package body Sem_Ch6 is\n          if Present (Actuals) then\n             Analyze_Call_And_Resolve;\n          else\n-            Error_Msg_N -- CODEFIX???\n-              (\"missing explicit dereference in call \", N);\n+            Error_Msg_N (\"missing explicit dereference in call \", N);\n          end if;\n \n       --  If not an access to subprogram, then the prefix must resolve to the\n@@ -1829,20 +1827,20 @@ package body Sem_Ch6 is\n                null;\n \n             elsif not Is_Overriding_Operation (Spec_Id) then\n-               Error_Msg_NE -- CODEFIX???\n+               Error_Msg_NE\n                  (\"subprogram& is not overriding\", Body_Spec, Spec_Id);\n             end if;\n \n          elsif Must_Not_Override (Body_Spec) then\n             if Is_Overriding_Operation (Spec_Id) then\n-               Error_Msg_NE -- CODEFIX???\n+               Error_Msg_NE\n                  (\"subprogram& overrides inherited operation\",\n                   Body_Spec, Spec_Id);\n \n             elsif Nkind (Spec_Id) = N_Defining_Operator_Symbol\n               and then  Operator_Matches_Spec (Spec_Id, Spec_Id)\n             then\n-               Error_Msg_NE -- CODEFIX???\n+               Error_Msg_NE\n                  (\"subprogram & overrides predefined operator \",\n                     Body_Spec, Spec_Id);\n \n@@ -1852,7 +1850,7 @@ package body Sem_Ch6 is\n             elsif not Is_Primitive (Spec_Id)\n               and then Ekind (Scope (Spec_Id)) /= E_Protected_Type\n             then\n-               Error_Msg_N -- CODEFIX???\n+               Error_Msg_N\n                  (\"overriding indicator only allowed \" &\n                   \"if subprogram is primitive\",\n                   Body_Spec);\n@@ -2060,8 +2058,7 @@ package body Sem_Ch6 is\n          Set_Is_Child_Unit       (Body_Id, Is_Child_Unit       (Spec_Id));\n \n          if Is_Abstract_Subprogram (Spec_Id) then\n-            Error_Msg_N -- CODEFIX???\n-              (\"an abstract subprogram cannot have a body\", N);\n+            Error_Msg_N (\"an abstract subprogram cannot have a body\", N);\n             return;\n \n          else\n@@ -2638,8 +2635,7 @@ package body Sem_Ch6 is\n          end loop;\n \n          if Is_Protected_Type (Current_Scope) then\n-            Error_Msg_N -- CODEFIX???\n-              (\"protected operation cannot be a null procedure\", N);\n+            Error_Msg_N (\"protected operation cannot be a null procedure\", N);\n          end if;\n       end if;\n \n@@ -2735,7 +2731,7 @@ package body Sem_Ch6 is\n                               and then Null_Present (Specification (N)))\n             then\n                Error_Msg_Name_1 := Chars (Defining_Entity (N));\n-               Error_Msg_N -- CODEFIX???\n+               Error_Msg_N\n                  (\"(Ada 2005) interface subprogram % must be abstract or null\",\n                   N);\n             end if;\n@@ -2912,7 +2908,7 @@ package body Sem_Ch6 is\n            and then\n              (Nkind (Parent (N))) /= N_Formal_Abstract_Subprogram_Declaration\n          then\n-            Error_Msg_N -- CODEFIX???\n+            Error_Msg_N\n               (\"function that returns abstract type must be abstract\", N);\n          end if;\n       end if;\n@@ -3520,21 +3516,21 @@ package body Sem_Ch6 is\n \n                when Mode_Conformant =>\n                   if Nkind (Parent (Old_Id)) = N_Full_Type_Declaration then\n-                     Error_Msg_N -- CODEFIX???\n+                     Error_Msg_N\n                        (\"not mode conformant with operation inherited#!\",\n                          Enode);\n                   else\n-                     Error_Msg_N -- CODEFIX???\n+                     Error_Msg_N\n                        (\"not mode conformant with declaration#!\", Enode);\n                   end if;\n \n                when Subtype_Conformant =>\n                   if Nkind (Parent (Old_Id)) = N_Full_Type_Declaration then\n-                     Error_Msg_N -- CODEFIX???\n+                     Error_Msg_N\n                        (\"not subtype conformant with operation inherited#!\",\n                          Enode);\n                   else\n-                     Error_Msg_N -- CODEFIX???\n+                     Error_Msg_N\n                        (\"not subtype conformant with declaration#!\", Enode);\n                   end if;\n \n@@ -4007,7 +4003,7 @@ package body Sem_Ch6 is\n                if Is_Interface_Conformant (Typ, Iface_Prim, Op)\n                  and then Convention (Iface_Prim) /= Convention (Op)\n                then\n-                  Error_Msg_N -- CODEFIX???\n+                  Error_Msg_N\n                     (\"inconsistent conventions in primitive operations\", Typ);\n \n                   Error_Msg_Name_1 := Chars (Op);\n@@ -4016,17 +4012,16 @@ package body Sem_Ch6 is\n \n                   if Comes_From_Source (Op) then\n                      if not Is_Overriding_Operation (Op) then\n-                        Error_Msg_N -- CODEFIX???\n-                          (\"\\\\primitive % defined #\", Typ);\n+                        Error_Msg_N (\"\\\\primitive % defined #\", Typ);\n                      else\n-                        Error_Msg_N -- CODEFIX???\n+                        Error_Msg_N\n                           (\"\\\\overriding operation % with \" &\n                            \"convention % defined #\", Typ);\n                      end if;\n \n                   else pragma Assert (Present (Alias (Op)));\n                      Error_Msg_Sloc := Sloc (Alias (Op));\n-                     Error_Msg_N -- CODEFIX???\n+                     Error_Msg_N\n                        (\"\\\\inherited operation % with \" &\n                         \"convention % defined #\", Typ);\n                   end if;\n@@ -4035,7 +4030,7 @@ package body Sem_Ch6 is\n                   Error_Msg_Name_2 :=\n                     Get_Convention_Name (Convention (Iface_Prim));\n                   Error_Msg_Sloc := Sloc (Iface_Prim);\n-                  Error_Msg_N -- CODEFIX???\n+                  Error_Msg_N\n                     (\"\\\\overridden operation % with \" &\n                      \"convention % defined #\", Typ);\n \n@@ -4455,7 +4450,7 @@ package body Sem_Ch6 is\n                then\n                   Error_Msg_Node_2 := Alias (Overridden_Subp);\n                   Error_Msg_Sloc := Sloc (Error_Msg_Node_2);\n-                  Error_Msg_NE -- CODEFIX???\n+                  Error_Msg_NE\n                     (\"& does not match corresponding formal of&#\",\n                      Form1, Form1);\n                   exit;\n@@ -4490,10 +4485,10 @@ package body Sem_Ch6 is\n             Error_Msg_Sloc := Sloc (Overridden_Subp);\n \n             if Ekind (Subp) = E_Entry then\n-               Error_Msg_NE -- CODEFIX???\n+               Error_Msg_NE\n                  (\"entry & overrides inherited operation #\", Spec, Subp);\n             else\n-               Error_Msg_NE -- CODEFIX???\n+               Error_Msg_NE\n                  (\"subprogram & overrides inherited operation #\", Spec, Subp);\n             end if;\n \n@@ -4544,12 +4539,12 @@ package body Sem_Ch6 is\n                if not Is_Primitive\n                  and then Ekind (Scope (Subp)) /= E_Protected_Type\n                then\n-                  Error_Msg_N -- CODEFIX???\n+                  Error_Msg_N\n                     (\"overriding indicator only allowed \"\n                      & \"if subprogram is primitive\", Subp);\n \n                elsif Can_Override then\n-                  Error_Msg_NE -- CODEFIX???\n+                  Error_Msg_NE\n                     (\"subprogram & overrides predefined operator \",\n                        Spec, Subp);\n                end if;\n@@ -4559,8 +4554,7 @@ package body Sem_Ch6 is\n                   Set_Is_Overriding_Operation (Subp);\n \n                elsif not Can_Override then\n-                  Error_Msg_NE -- CODEFIX???\n-                    (\"subprogram & is not overriding\", Spec, Subp);\n+                  Error_Msg_NE (\"subprogram & is not overriding\", Spec, Subp);\n                end if;\n \n             elsif not Error_Posted (Subp)\n@@ -4589,11 +4583,9 @@ package body Sem_Ch6 is\n \n       elsif Must_Override (Spec) then\n          if Ekind (Subp) = E_Entry then\n-            Error_Msg_NE -- CODEFIX???\n-              (\"entry & is not overriding\", Spec, Subp);\n+            Error_Msg_NE (\"entry & is not overriding\", Spec, Subp);\n          else\n-            Error_Msg_NE -- CODEFIX???\n-              (\"subprogram & is not overriding\", Spec, Subp);\n+            Error_Msg_NE (\"subprogram & is not overriding\", Spec, Subp);\n          end if;\n \n       --  If the operation is marked \"not overriding\" and it's not primitive\n@@ -4606,7 +4598,7 @@ package body Sem_Ch6 is\n         and then Ekind (Subp) /= E_Entry\n         and then Ekind (Scope (Subp)) /= E_Protected_Type\n       then\n-         Error_Msg_N -- CODEFIX???\n+         Error_Msg_N\n            (\"overriding indicator only allowed if subprogram is primitive\",\n             Subp);\n          return;\n@@ -6916,7 +6908,7 @@ package body Sem_Ch6 is\n                  and then (not Is_Overriding\n                             or else not Is_Abstract_Subprogram (E))\n                then\n-                  Error_Msg_N -- CODEFIX???\n+                  Error_Msg_N\n                     (\"abstract subprograms must be visible \"\n                      & \"(RM 3.9.3(10))!\", S);\n \n@@ -6925,10 +6917,10 @@ package body Sem_Ch6 is\n                  and then T = Base_Type (Etype (S))\n                  and then not Is_Overriding\n                then\n-                  Error_Msg_N -- CODEFIX???\n+                  Error_Msg_N\n                     (\"private function with tagged result must\"\n                      & \" override visible-part function\", S);\n-                  Error_Msg_N -- CODEFIX???\n+                  Error_Msg_N\n                     (\"\\move subprogram to the visible part\"\n                      & \" (RM 3.9.3(10))\", S);\n                end if;\n@@ -8084,14 +8076,14 @@ package body Sem_Ch6 is\n               and then Null_Exclusion_Present (Param_Spec)\n             then\n                if not Is_Access_Type (Formal_Type) then\n-                  Error_Msg_N -- CODEFIX???\n+                  Error_Msg_N\n                     (\"`NOT NULL` allowed only for an access type\", Param_Spec);\n \n                else\n                   if Can_Never_Be_Null (Formal_Type)\n                     and then Comes_From_Source (Related_Nod)\n                   then\n-                     Error_Msg_NE -- CODEFIX???\n+                     Error_Msg_NE\n                        (\"`NOT NULL` not allowed (& already excludes null)\",\n                         Param_Spec,\n                         Formal_Type);\n@@ -8149,7 +8141,7 @@ package body Sem_Ch6 is\n \n          if Present (Default) then\n             if Out_Present (Param_Spec) then\n-               Error_Msg_N -- CODEFIX???\n+               Error_Msg_N\n                  (\"default initialization only allowed for IN parameters\",\n                   Param_Spec);\n             end if;\n@@ -8813,7 +8805,7 @@ package body Sem_Ch6 is\n          N := N + 1;\n \n          if Present (Default_Value (F)) then\n-            Error_Msg_N -- CODEFIX???\n+            Error_Msg_N\n               (\"default values not allowed for operator parameters\",\n                Parent (F));\n          end if;"}, {"sha": "b797791c24f802444f799fcb860517b1b1dc5bb9", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -261,8 +261,7 @@ package body Sem_Ch7 is\n                Error_Msg_N\n                  (\"optional package body (not allowed in Ada 95)?\", N);\n             else\n-               Error_Msg_N\n-                 (\"spec of this package does not allow a body\", N);\n+               Error_Msg_N (\"spec of this package does not allow a body\", N);\n             end if;\n          end if;\n       end if;"}, {"sha": "c95b8e54d12cfc67c9922daaf48b3f8cee58f856", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 29, "deletions": 26, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -893,7 +893,7 @@ package body Sem_Ch8 is\n                   Error_Msg_NE\n                     (\"\\?function & will be called only once\", Nam,\n                      Entity (Name (Nam)));\n-                  Error_Msg_N\n+                  Error_Msg_N -- CODEFIX\n                     (\"\\?suggest using an initialized constant object instead\",\n                      Nam);\n                end if;\n@@ -2581,8 +2581,7 @@ package body Sem_Ch8 is\n                    (\"a generic package is not allowed in a use clause\",\n                       Pack_Name);\n                else\n-                  Error_Msg_N -- CODEFIX???\n-                    (\"& is not a usable package\", Pack_Name);\n+                  Error_Msg_N (\"& is not a usable package\", Pack_Name);\n                end if;\n \n             else\n@@ -2703,7 +2702,7 @@ package body Sem_Ch8 is\n          if Warn_On_Redundant_Constructs\n            and then Pack = Current_Scope\n          then\n-            Error_Msg_NE\n+            Error_Msg_NE -- CODEFIX\n               (\"& is already use-visible within itself?\", Pack_Name, Pack);\n          end if;\n \n@@ -3071,8 +3070,7 @@ package body Sem_Ch8 is\n             end loop;\n \n             if Is_Child_Unit (Entity (Original_Node (Par))) then\n-               Error_Msg_NE\n-                 (\"& is not directly visible\", Par, Entity (Par));\n+               Error_Msg_NE (\"& is not directly visible\", Par, Entity (Par));\n             else\n                return;\n             end if;\n@@ -3836,7 +3834,8 @@ package body Sem_Ch8 is\n                          Nkind (Parent (Parent (N))) = N_Use_Package_Clause\n                      then\n                         Error_Msg_Qual_Level := 99;\n-                        Error_Msg_NE (\"\\\\missing `WITH &;`\", N, Ent);\n+                        Error_Msg_NE -- CODEFIX\n+                          (\"\\\\missing `WITH &;`\", N, Ent);\n                         Error_Msg_Qual_Level := 0;\n                      end if;\n \n@@ -3914,7 +3913,7 @@ package body Sem_Ch8 is\n                   if Chars (Lit) /= Chars (N)\n                     and then Is_Bad_Spelling_Of (Chars (N), Chars (Lit)) then\n                      Error_Msg_Node_2 := Lit;\n-                     Error_Msg_N\n+                     Error_Msg_N -- CODEFIX\n                        (\"& is undefined, assume misspelling of &\", N);\n                      Rewrite (N, New_Occurrence_Of (Lit, Sloc (N)));\n                      return;\n@@ -3978,7 +3977,7 @@ package body Sem_Ch8 is\n             --  this is a very common error for beginners to make).\n \n             if Chars (N) = Name_Put or else Chars (N) = Name_Put_Line then\n-               Error_Msg_N\n+               Error_Msg_N -- CODEFIX\n                  (\"\\\\possible missing `WITH Ada.Text_'I'O; \" &\n                   \"USE Ada.Text_'I'O`!\", N);\n \n@@ -3991,7 +3990,8 @@ package body Sem_Ch8 is\n               and then Is_Known_Unit (Parent (N))\n             then\n                Error_Msg_Node_2 := Selector_Name (Parent (N));\n-               Error_Msg_N (\"\\\\missing `WITH &.&;`\", Prefix (Parent (N)));\n+               Error_Msg_N -- CODEFIX\n+                 (\"\\\\missing `WITH &.&;`\", Prefix (Parent (N)));\n             end if;\n \n             --  Now check for possible misspellings\n@@ -4729,7 +4729,8 @@ package body Sem_Ch8 is\n \n                   else\n                      Error_Msg_Qual_Level := 99;\n-                     Error_Msg_NE (\"missing `WITH &;`\", Selector, Candidate);\n+                     Error_Msg_NE -- CODEFIX\n+                       (\"missing `WITH &;`\", Selector, Candidate);\n                      Error_Msg_Qual_Level := 0;\n                   end if;\n \n@@ -4786,7 +4787,8 @@ package body Sem_Ch8 is\n                if Is_Known_Unit (N) then\n                   if not Error_Posted (N) then\n                      Error_Msg_Node_2 := Selector;\n-                     Error_Msg_N (\"missing `WITH &.&;`\", Prefix (N));\n+                     Error_Msg_N -- CODEFIX\n+                       (\"missing `WITH &.&;`\", Prefix (N));\n                   end if;\n \n                --  If this is a selection from a dummy package, then suppress\n@@ -4867,7 +4869,8 @@ package body Sem_Ch8 is\n                                (Generic_Parent (Parent (Entity (Prefix (N)))))\n                   then\n                      Error_Msg_Node_2 := Selector;\n-                     Error_Msg_N (\"\\missing `WITH &.&;`\", Prefix (N));\n+                     Error_Msg_N -- CODEFIX\n+                       (\"\\missing `WITH &.&;`\", Prefix (N));\n                   end if;\n                end if;\n             end if;\n@@ -5159,11 +5162,11 @@ package body Sem_Ch8 is\n       function Report_Overload return Entity_Id is\n       begin\n          if Is_Actual then\n-            Error_Msg_NE\n+            Error_Msg_NE -- CODEFIX\n               (\"ambiguous actual subprogram&, \" &\n                  \"possible interpretations:\", N, Nam);\n          else\n-            Error_Msg_N\n+            Error_Msg_N -- CODEFIX\n               (\"ambiguous subprogram, \" &\n                  \"possible interpretations:\", N);\n          end if;\n@@ -5743,7 +5746,7 @@ package body Sem_Ch8 is\n                  and then Base_Type (Typ) = Typ\n                  and then Warn_On_Redundant_Constructs\n                then\n-                  Error_Msg_NE\n+                  Error_Msg_NE -- CODEFIX\n                     (\"?redundant attribute, & is its own base type\", N, Typ);\n                end if;\n \n@@ -6544,7 +6547,7 @@ package body Sem_Ch8 is\n \n       if Present (Redundant) then\n          Error_Msg_Sloc := Sloc (Prev_Use);\n-         Error_Msg_NE\n+         Error_Msg_NE -- CODEFIX\n            (\"& is already use-visible through previous use clause #?\",\n             Redundant, Pack_Name);\n       end if;\n@@ -7522,14 +7525,14 @@ package body Sem_Ch8 is\n \n                      if Unit1 = Unit2 then\n                         Error_Msg_Sloc := Sloc (Current_Use_Clause (T));\n-                        Error_Msg_NE\n+                        Error_Msg_NE -- CODEFIX\n                           (\"& is already use-visible through previous \"\n                            & \"use_type_clause #?\", Clause1, T);\n                         return;\n \n                      elsif Nkind (Unit1) = N_Subunit then\n                         Error_Msg_Sloc := Sloc (Current_Use_Clause (T));\n-                        Error_Msg_NE\n+                        Error_Msg_NE -- CODEFIX\n                           (\"& is already use-visible through previous \"\n                            & \"use_type_clause #?\", Clause1, T);\n                         return;\n@@ -7539,7 +7542,7 @@ package body Sem_Ch8 is\n                        and then Nkind (Unit1) /= N_Subunit\n                      then\n                         Error_Msg_Sloc := Sloc (Clause1);\n-                        Error_Msg_NE\n+                        Error_Msg_NE -- CODEFIX\n                           (\"& is already use-visible through previous \"\n                            & \"use_type_clause #?\", Current_Use_Clause (T), T);\n                         return;\n@@ -7590,7 +7593,7 @@ package body Sem_Ch8 is\n                         end;\n                      end if;\n \n-                     Error_Msg_NE\n+                     Error_Msg_NE -- CODEFIX\n                        (\"& is already use-visible through previous \"\n                         & \"use_type_clause #?\", Err_No, Id);\n \n@@ -7599,7 +7602,7 @@ package body Sem_Ch8 is\n                   --  level. In this case we don't have location information.\n \n                   else\n-                     Error_Msg_NE\n+                     Error_Msg_NE -- CODEFIX\n                        (\"& is already use-visible through previous \"\n                         & \"use type clause?\", Id, T);\n                   end if;\n@@ -7609,7 +7612,7 @@ package body Sem_Ch8 is\n             --  where we do not have the location information available.\n \n             else\n-               Error_Msg_NE\n+               Error_Msg_NE -- CODEFIX\n                  (\"& is already use-visible through previous \"\n                   & \"use type clause?\", Id, T);\n             end if;\n@@ -7618,15 +7621,15 @@ package body Sem_Ch8 is\n \n          elsif In_Use (Scope (T)) then\n             Error_Msg_Sloc := Sloc (Current_Use_Clause (Scope (T)));\n-            Error_Msg_NE\n+            Error_Msg_NE -- CODEFIX\n               (\"& is already use-visible through package use clause #?\",\n                Id, T);\n \n          --  The current scope is the package where T is declared\n \n          else\n             Error_Msg_Node_2 := Scope (T);\n-            Error_Msg_NE\n+            Error_Msg_NE -- CODEFIX\n               (\"& is already use-visible inside package &?\", Id, T);\n          end if;\n       end if;"}, {"sha": "df7d50acc66152d95dfec5b9e96e987eac01cc02", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2424,15 +2424,17 @@ package body Sem_Ch9 is\n                Iface := Find_Hidden_Interface (Priv_T_Ifaces, Full_T_Ifaces);\n \n                if Present (Iface) then\n-                  Error_Msg_NE (\"interface & not implemented by full type \" &\n-                                \"(RM-2005 7.3 (7.3/2))\", Priv_T, Iface);\n+                  Error_Msg_NE\n+                    (\"interface & not implemented by full type \" &\n+                     \"(RM-2005 7.3 (7.3/2))\", Priv_T, Iface);\n                end if;\n \n                Iface := Find_Hidden_Interface (Full_T_Ifaces, Priv_T_Ifaces);\n \n                if Present (Iface) then\n-                  Error_Msg_NE (\"interface & not implemented by partial \" &\n-                                \"view (RM-2005 7.3 (7.3/2))\", T, Iface);\n+                  Error_Msg_NE\n+                    (\"interface & not implemented by partial \" &\n+                     \"view (RM-2005 7.3 (7.3/2))\", T, Iface);\n                end if;\n             end if;\n          end if;"}, {"sha": "3f09a3ecf7641bc08d0346186863ff3aabcac5e8", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -640,8 +640,8 @@ package body Sem_Disp is\n                   end if;\n \n                   if Present (Func) and then Is_Abstract_Subprogram (Func) then\n-                     Error_Msg_N (\n-                       \"call to abstract function must be dispatching\", N);\n+                     Error_Msg_N\n+                       (\"call to abstract function must be dispatching\", N);\n                   end if;\n                end if;\n \n@@ -746,7 +746,7 @@ package body Sem_Disp is\n                  and then not In_Instance\n                then\n                   Error_Msg_N (\"?declaration of& is too late!\", Subp);\n-                  Error_Msg_NE\n+                  Error_Msg_NE -- CODEFIX??\n                     (\"\\spec should appear immediately after declaration of &!\",\n                      Subp, Typ);\n                   exit;"}, {"sha": "452f1e36e53163688e69f8d57a13f18fa6e0ce37", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1997-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1997-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2432,7 +2432,8 @@ package body Sem_Elab is\n               and then not Elaboration_Checks_Suppressed (Task_Scope)\n             then\n                Error_Msg_Node_2 := Task_Scope;\n-               Error_Msg_NE (\"activation of an instance of task type&\" &\n+               Error_Msg_NE\n+                 (\"activation of an instance of task type&\" &\n                   \" requires pragma Elaborate_All on &?\", N, Ent);\n             end if;\n "}, {"sha": "81522486926af7c2a989fc5d0c04a0dace1c15f4", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -3058,8 +3058,7 @@ package body Sem_Eval is\n                     = Entity (Drange)\n                then\n                   if Warn_On_Redundant_Constructs then\n-                     Error_Msg_N -- CODEFIX???\n-                       (\"redundant slice denotes whole array?\", N);\n+                     Error_Msg_N (\"redundant slice denotes whole array?\", N);\n                   end if;\n \n                   --  The following might be a useful optimization????"}, {"sha": "1954b3deb7413db0ebab400c3336a93175d50034", "filename": "gcc/ada/sem_mech.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_mech.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_mech.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_mech.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -92,8 +92,7 @@ package body Sem_Mech is\n             return;\n \n          elsif Chars (Mech_Name) = Name_Copy then\n-            Error_Msg_N\n-              (\"bad mechanism name, Value assumed\", Mech_Name);\n+            Error_Msg_N (\"bad mechanism name, Value assumed\", Mech_Name);\n             Set_Mechanism (Ent, By_Copy);\n \n          else"}, {"sha": "81dc1d1c321c74d82c8b26f4beefa0025354e172", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 29, "deletions": 37, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -1049,8 +1049,7 @@ package body Sem_Prag is\n                           (\"parameters out of order for pragma%\", Arg);\n                         Error_Msg_Name_1 := Names (K);\n                         Error_Msg_Name_2 := Names (Highest_So_Far);\n-                        Error_Msg_N -- CODEFIX???\n-                          (\"\\% must appear before %\", Arg);\n+                        Error_Msg_N (\"\\% must appear before %\", Arg);\n                         raise Pragma_Exit;\n \n                      else\n@@ -2618,7 +2617,7 @@ package body Sem_Prag is\n \n          else\n             if Warn_On_Export_Import and not OpenVMS_On_Target then\n-               Error_Msg_N -- CODEFIX???\n+               Error_Msg_N\n                  (\"?unrecognized convention name, C assumed\",\n                   Expression (Arg1));\n             end if;\n@@ -3270,7 +3269,7 @@ package body Sem_Prag is\n             Prag_Id = Pragma_Import_Valued_Procedure\n          then\n             if not Is_Imported (Ent) then\n-               Error_Pragma -- CODEFIX???\n+               Error_Pragma\n                  (\"pragma Import or Interface must precede pragma%\");\n             end if;\n \n@@ -3729,11 +3728,11 @@ package body Sem_Prag is\n             --  these types have been supported this way for some time.\n \n             if not Is_Limited_Type (Def_Id) then\n-               Error_Msg_N -- CODEFIX???\n+               Error_Msg_N\n                  (\"imported 'C'P'P type should be \" &\n                     \"explicitly declared limited?\",\n                   Get_Pragma_Arg (Arg2));\n-               Error_Msg_N -- CODEFIX???\n+               Error_Msg_N\n                  (\"\\type will be considered limited\",\n                   Get_Pragma_Arg (Arg2));\n             end if;\n@@ -3855,8 +3854,7 @@ package body Sem_Prag is\n                if Front_End_Inlining\n                  and then Analyzed (Corresponding_Body (Decl))\n                then\n-                  Error_Msg_N -- CODEFIX???\n-                    (\"pragma appears too late, ignored?\", N);\n+                  Error_Msg_N (\"pragma appears too late, ignored?\", N);\n                   return True;\n \n                --  If the subprogram is a renaming as body, the body is just a\n@@ -4080,10 +4078,10 @@ package body Sem_Prag is\n               and then not Suppress_All_Inlining\n             then\n                if Inlining_Not_Possible (Subp) then\n-                  Error_Msg_NE -- CODEFIX???\n+                  Error_Msg_NE\n                     (\"pragma Inline for& is ignored?\", N, Entity (Subp_Id));\n                else\n-                  Error_Msg_NE -- CODEFIX???\n+                  Error_Msg_NE\n                     (\"pragma Inline for& is redundant?\", N, Entity (Subp_Id));\n                end if;\n             end if;\n@@ -4155,7 +4153,7 @@ package body Sem_Prag is\n                                         or else\n                                       Get_Character (C) = '/'))\n                then\n-                  Error_Msg -- CODEFIX???\n+                  Error_Msg\n                     (\"?interface name contains illegal character\",\n                      Sloc (SN) + Source_Ptr (J));\n                end if;\n@@ -4689,11 +4687,11 @@ package body Sem_Prag is\n       procedure Set_Exported (E : Entity_Id; Arg : Node_Id) is\n       begin\n          if Is_Imported (E) then\n-            Error_Pragma_Arg -- CODEFIX???\n+            Error_Pragma_Arg\n               (\"cannot export entity& that was previously imported\", Arg);\n \n          elsif Present (Address_Clause (E)) then\n-            Error_Pragma_Arg -- CODEFIX???\n+            Error_Pragma_Arg\n               (\"cannot export entity& that has an address clause\", Arg);\n          end if;\n \n@@ -4712,8 +4710,7 @@ package body Sem_Prag is\n             --  Not allowed at all for subprograms\n \n             if Is_Subprogram (E) then\n-               Error_Pragma_Arg -- CODEFIX???\n-                 (\"local subprogram& cannot be exported\", Arg);\n+               Error_Pragma_Arg (\"local subprogram& cannot be exported\", Arg);\n \n             --  Otherwise set public and statically allocated\n \n@@ -4739,8 +4736,7 @@ package body Sem_Prag is\n          end if;\n \n          if Warn_On_Export_Import and then Is_Type (E) then\n-            Error_Msg_NE -- CODEFIX???\n-              (\"exporting a type has no effect?\", Arg, E);\n+            Error_Msg_NE (\"exporting a type has no effect?\", Arg, E);\n          end if;\n \n          if Warn_On_Export_Import and Inside_A_Generic then\n@@ -4862,8 +4858,7 @@ package body Sem_Prag is\n               (\"\\(pragma% applies to all previous entities)\", N);\n \n             Error_Msg_Sloc  := Sloc (E);\n-            Error_Msg_NE -- CODEFIX???\n-              (\"\\import not allowed for& declared#\", N, E);\n+            Error_Msg_NE (\"\\import not allowed for& declared#\", N, E);\n \n          --  Here if not previously imported or exported, OK to import\n \n@@ -6376,7 +6371,7 @@ package body Sem_Prag is\n \n          begin\n             if Warn_On_Obsolescent_Feature then\n-               Error_Msg_N -- CODEFIX???\n+               Error_Msg_N\n                  (\"'G'N'A'T pragma cpp'_class is now obsolete; replace it\" &\n                   \" by pragma import?\", N);\n             end if;\n@@ -6412,7 +6407,7 @@ package body Sem_Prag is\n             --  been supported this way for some time.\n \n             if not Is_Limited_Type (Typ) then\n-               Error_Msg_N -- CODEFIX???\n+               Error_Msg_N\n                  (\"imported 'C'P'P type should be \" &\n                     \"explicitly declared limited?\",\n                   Get_Pragma_Arg (Arg1));\n@@ -6575,7 +6570,7 @@ package body Sem_Prag is\n             GNAT_Pragma;\n \n             if Warn_On_Obsolescent_Feature then\n-               Error_Msg_N -- CODEFIX???\n+               Error_Msg_N\n                  (\"'G'N'A'T pragma cpp'_virtual is now obsolete and has \" &\n                   \"no effect?\", N);\n             end if;\n@@ -6590,7 +6585,7 @@ package body Sem_Prag is\n             GNAT_Pragma;\n \n             if Warn_On_Obsolescent_Feature then\n-               Error_Msg_N -- CODEFIX???\n+               Error_Msg_N\n                  (\"'G'N'A'T pragma cpp'_vtable is now obsolete and has \" &\n                   \"no effect?\", N);\n             end if;\n@@ -6833,7 +6828,7 @@ package body Sem_Prag is\n             if Elab_Warnings and not Dynamic_Elaboration_Checks then\n                Error_Msg_N\n                  (\"?use of pragma Elaborate may not be safe\", N);\n-               Error_Msg_N -- CODEFIX???\n+               Error_Msg_N\n                  (\"?use pragma Elaborate_All instead if possible\", N);\n             end if;\n          end Elaborate;\n@@ -10471,13 +10466,13 @@ package body Sem_Prag is\n             Check_Too_Long (Internal);\n \n             if Is_Imported (Def_Id) or else Is_Exported (Def_Id) then\n-               Error_Pragma_Arg -- CODEFIX???\n+               Error_Pragma_Arg\n                  (\"cannot use pragma% for imported/exported object\",\n                   Internal);\n             end if;\n \n             if Is_Concurrent_Type (Etype (Internal)) then\n-               Error_Pragma_Arg -- CODEFIX???\n+               Error_Pragma_Arg\n                  (\"cannot specify pragma % for task/protected object\",\n                   Internal);\n             end if;\n@@ -10490,7 +10485,7 @@ package body Sem_Prag is\n             end if;\n \n             if Ekind (Def_Id) = E_Constant then\n-               Error_Pragma_Arg -- CODEFIX???\n+               Error_Pragma_Arg\n                  (\"cannot specify pragma % for a constant\", Internal);\n             end if;\n \n@@ -10651,7 +10646,7 @@ package body Sem_Prag is\n                if not Effective\n                  and then Warn_On_Redundant_Constructs\n                then\n-                  Error_Msg_NE -- CODEFIX???\n+                  Error_Msg_NE\n                     (\"pragma Pure_Function on& is redundant?\",\n                      N, Entity (E_Id));\n                end if;\n@@ -10826,10 +10821,8 @@ package body Sem_Prag is\n             Set_Ravenscar_Profile (N);\n \n             if Warn_On_Obsolescent_Feature then\n-               Error_Msg_N -- CODEFIX???\n-                 (\"pragma Ravenscar is an obsolescent feature?\", N);\n-               Error_Msg_N -- CODEFIX???\n-                 (\"|use pragma Profile (Ravenscar) instead\", N);\n+               Error_Msg_N (\"pragma Ravenscar is an obsolescent feature?\", N);\n+               Error_Msg_N (\"|use pragma Profile (Ravenscar) instead\", N);\n             end if;\n \n          -------------------------\n@@ -10846,10 +10839,9 @@ package body Sem_Prag is\n               (Restricted, N, Warn => Treat_Restrictions_As_Warnings);\n \n             if Warn_On_Obsolescent_Feature then\n-               Error_Msg_N -- CODEFIX???\n+               Error_Msg_N\n                  (\"pragma Restricted_Run_Time is an obsolescent feature?\", N);\n-               Error_Msg_N -- CODEFIX???\n-                 (\"|use pragma Profile (Restricted) instead\", N);\n+               Error_Msg_N (\"|use pragma Profile (Restricted) instead\", N);\n             end if;\n \n          ------------------\n@@ -11799,14 +11791,14 @@ package body Sem_Prag is\n                return;\n \n             elsif Is_Limited_Type (Typ) then\n-               Error_Msg_N -- CODEFIX???\n+               Error_Msg_N\n                  (\"Unchecked_Union must not be limited record type\", Typ);\n                Explain_Limited_Type (Typ, Typ);\n                return;\n \n             else\n                if not Has_Discriminants (Typ) then\n-                  Error_Msg_N -- CODEFIX???\n+                  Error_Msg_N\n                     (\"Unchecked_Union must have one discriminant\", Typ);\n                   return;\n                end if;"}, {"sha": "0e81df1cdb49ac3afdca7d70b2ce84c37ef23706", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 22, "deletions": 36, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -282,29 +282,24 @@ package body Sem_Res is\n \n    begin\n       if Nkind (C) = N_Character_Literal then\n-         Error_Msg_N -- CODEFIX???\n-           (\"ambiguous character literal\", C);\n+         Error_Msg_N (\"ambiguous character literal\", C);\n \n          --  First the ones in Standard\n \n-         Error_Msg_N -- CODEFIX???\n-           (\"\\\\possible interpretation: Character!\", C);\n-         Error_Msg_N -- CODEFIX???\n-           (\"\\\\possible interpretation: Wide_Character!\", C);\n+         Error_Msg_N (\"\\\\possible interpretation: Character!\", C);\n+         Error_Msg_N (\"\\\\possible interpretation: Wide_Character!\", C);\n \n          --  Include Wide_Wide_Character in Ada 2005 mode\n \n          if Ada_Version >= Ada_05 then\n-            Error_Msg_N -- CODEFIX???\n-              (\"\\\\possible interpretation: Wide_Wide_Character!\", C);\n+            Error_Msg_N (\"\\\\possible interpretation: Wide_Wide_Character!\", C);\n          end if;\n \n          --  Now any other types that match\n \n          E := Current_Entity (C);\n          while Present (E) loop\n-            Error_Msg_NE -- CODEFIX???\n-              (\"\\\\possible interpretation:}!\", C, Etype (E));\n+            Error_Msg_NE (\"\\\\possible interpretation:}!\", C, Etype (E));\n             E := Homonym (E);\n          end loop;\n       end if;\n@@ -1774,8 +1769,7 @@ package body Sem_Res is\n            and then Is_Entity_Name (Name (Arg))\n            and then Is_Overloaded (Name (Arg))\n          then\n-            Error_Msg_NE -- CODEFIX???\n-              (\"ambiguous call to&\", Arg, Name (Arg));\n+            Error_Msg_NE (\"ambiguous call to&\", Arg, Name (Arg));\n \n             --  Could use comments on what is going on here ???\n \n@@ -1784,11 +1778,9 @@ package body Sem_Res is\n                Error_Msg_Sloc := Sloc (It.Nam);\n \n                if Nkind (Parent (It.Nam)) = N_Full_Type_Declaration then\n-                  Error_Msg_N -- CODEFIX???\n-                    (\"interpretation (inherited) #!\", Arg);\n+                  Error_Msg_N (\"interpretation (inherited) #!\", Arg);\n                else\n-                  Error_Msg_N -- CODEFIX???\n-                    (\"interpretation #!\", Arg);\n+                  Error_Msg_N (\"interpretation #!\", Arg);\n                end if;\n \n                Get_Next_Interp (I, It);\n@@ -2083,7 +2075,7 @@ package body Sem_Res is\n                         if Nkind (N) = N_Function_Call\n                           and then Nkind (Name (N)) = N_Explicit_Dereference\n                         then\n-                           Error_Msg_N -- CODEFIX???\n+                           Error_Msg_N\n                              (\"ambiguous expression \"\n                                & \"(cannot resolve indirect call)!\", N);\n                         else\n@@ -2095,7 +2087,7 @@ package body Sem_Res is\n                         Ambiguous := True;\n \n                         if Nkind (Parent (Seen)) = N_Full_Type_Declaration then\n-                           Error_Msg_N -- CODEFIX???\n+                           Error_Msg_N\n                              (\"\\\\possible interpretation (inherited)#!\", N);\n                         else\n                            Error_Msg_N -- CODEFIX\n@@ -2173,19 +2165,19 @@ package body Sem_Res is\n                         if  It.Typ = Universal_Fixed\n                           and then Scope (It.Nam) = Standard_Standard\n                         then\n-                           Error_Msg_N -- CODEFIX???\n+                           Error_Msg_N\n                              (\"\\\\possible interpretation as \" &\n                                 \"universal_fixed operation \" &\n                                   \"(RM 4.5.5 (19))\", N);\n                         else\n-                           Error_Msg_N -- CODEFIX???\n+                           Error_Msg_N\n                              (\"\\\\possible interpretation (predefined)#!\", N);\n                         end if;\n \n                      elsif\n                        Nkind (Parent (It.Nam)) = N_Full_Type_Declaration\n                      then\n-                        Error_Msg_N -- CODEFIX???\n+                        Error_Msg_N\n                           (\"\\\\possible interpretation (inherited)#!\", N);\n                      else\n                         Error_Msg_N -- CODEFIX\n@@ -2938,7 +2930,7 @@ package body Sem_Res is\n                --  Introduce an implicit 'Access in prefix\n \n                if not Is_Aliased_View (Act) then\n-                  Error_Msg_NE -- CODEFIX???\n+                  Error_Msg_NE\n                     (\"object in prefixed call to& must be aliased\"\n                          & \" (RM-2005 4.3.1 (13))\",\n                     Prefix (Act), Nam);\n@@ -4229,8 +4221,7 @@ package body Sem_Res is\n          declare\n             Loc : constant Source_Ptr := Sloc (N);\n          begin\n-            Error_Msg_N -- CODEFIX???\n-              (\"?allocation from empty storage pool!\", N);\n+            Error_Msg_N (\"?allocation from empty storage pool!\", N);\n             Error_Msg_N (\"\\?Storage_Error will be raised at run time!\", N);\n             Insert_Action (N,\n               Make_Raise_Storage_Error (Loc,\n@@ -7422,7 +7413,7 @@ package body Sem_Res is\n \n       elsif Typ = Universal_Integer or else Typ = Any_Modular then\n          if Parent_Is_Boolean then\n-            Error_Msg_N -- CODEFIX???\n+            Error_Msg_N\n               (\"operand of not must be enclosed in parentheses\",\n                Right_Opnd (N));\n          else\n@@ -7444,8 +7435,7 @@ package body Sem_Res is\n            and then not Is_Boolean_Type (Typ)\n            and then Parent_Is_Boolean\n          then\n-            Error_Msg_N -- CODEFIX???\n-              (\"?not expression should be parenthesized here!\", N);\n+            Error_Msg_N (\"?not expression should be parenthesized here!\", N);\n          end if;\n \n          --  Warn on double negation if checking redundant constructs\n@@ -7456,8 +7446,7 @@ package body Sem_Res is\n            and then Root_Type (Typ) = Standard_Boolean\n            and then Nkind (Right_Opnd (N)) = N_Op_Not\n          then\n-            Error_Msg_N -- CODEFIX???\n-              (\"redundant double negation?\", N);\n+            Error_Msg_N (\"redundant double negation?\", N);\n          end if;\n \n          --  Complete resolution and evaluation of NOT\n@@ -8881,7 +8870,7 @@ package body Sem_Res is\n \n                --  If we fall through warning should be issued\n \n-               Error_Msg_N -- CODEFIX???\n+               Error_Msg_N\n                  (\"?unary minus expression should be parenthesized here!\", N);\n             end if;\n          end if;\n@@ -9262,12 +9251,9 @@ package body Sem_Res is\n \n       procedure Fixed_Point_Error is\n       begin\n-         Error_Msg_N -- CODEFIX???\n-           (\"ambiguous universal_fixed_expression\", N);\n-         Error_Msg_NE -- CODEFIX???\n-            (\"\\\\possible interpretation as}\", N, T1);\n-         Error_Msg_NE -- CODEFIX???\n-            (\"\\\\possible interpretation as}\", N, T2);\n+         Error_Msg_N (\"ambiguous universal_fixed_expression\", N);\n+         Error_Msg_NE (\"\\\\possible interpretation as}\", N, T1);\n+         Error_Msg_NE (\"\\\\possible interpretation as}\", N, T2);\n       end Fixed_Point_Error;\n \n    --  Start of processing for Unique_Fixed_Point_Type"}, {"sha": "9fc997fd5d9e2ec6b29bfdbc4fe6b401e648e892", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -9299,8 +9299,7 @@ package body Sem_Util is\n                  or else Modification_Comes_From_Source\n                then\n                   if Has_Pragma_Unmodified (Ent) then\n-                     Error_Msg_NE -- CODEFIX???\n-                       (\"?pragma Unmodified given for &!\", N, Ent);\n+                     Error_Msg_NE (\"?pragma Unmodified given for &!\", N, Ent);\n                   end if;\n \n                   Set_Never_Set_In_Source (Ent, False);\n@@ -9355,7 +9354,7 @@ package body Sem_Util is\n                           and then Is_Entity_Name (Prefix (Exp))\n                         then\n                            Error_Msg_Sloc := Sloc (A);\n-                           Error_Msg_NE -- CODEFIX???\n+                           Error_Msg_NE\n                              (\"constant& may be modified via address clause#?\",\n                               N, Entity (Prefix (Exp)));\n                         end if;\n@@ -11362,7 +11361,7 @@ package body Sem_Util is\n          Error_Msg_N\n            (\"address arithmetic not predefined in package System\",\n             Parent (Expr));\n-         Error_Msg_N -- CODEFIX???\n+         Error_Msg_N\n            (\"\\possible missing with/use of System.Storage_Elements\",\n             Parent (Expr));\n          return;\n@@ -11451,7 +11450,7 @@ package body Sem_Util is\n               Ekind (Entity (Expr)) = E_Generic_Procedure)\n          then\n             if Ekind (Expec_Type) = E_Access_Subprogram_Type then\n-               Error_Msg_N -- CODEFIX???\n+               Error_Msg_N\n                  (\"found procedure name, possibly missing Access attribute!\",\n                    Expr);\n             else\n@@ -11464,7 +11463,7 @@ package body Sem_Util is\n            and then Etype (Designated_Type (Expec_Type)) = Etype (Expr)\n            and then No (Parameter_Associations (Expr))\n          then\n-            Error_Msg_N -- CODEFIX???\n+            Error_Msg_N\n               (\"found function name, possibly missing Access attribute!\",\n                Expr);\n \n@@ -11478,7 +11477,7 @@ package body Sem_Util is\n             and then not In_Use (Expec_Type)\n             and then Has_Compatible_Type (Right_Opnd (Expr), Expec_Type)\n          then\n-            Error_Msg_N -- CODEFIX???\n+            Error_Msg_N\n               (\"operator of the type is not directly visible!\", Expr);\n \n          elsif Ekind (Found_Type) = E_Void"}, {"sha": "7f18a75e71efe5a45b88b6fbdc24832fe00a8b41", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 16, "deletions": 19, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -199,15 +199,15 @@ package body Sem_Warn is\n       Setup_Asm_Inputs (N);\n \n       if No (Asm_Input_Value) then\n-         Error_Msg_F -- CODEFIX???\n+         Error_Msg_F\n            (\"?code statement with no inputs should usually be Volatile!\", N);\n          return;\n       end if;\n \n       Setup_Asm_Outputs (N);\n \n       if No (Asm_Output_Variable) then\n-         Error_Msg_F -- CODEFIX???\n+         Error_Msg_F\n            (\"?code statement with no outputs should usually be Volatile!\", N);\n          return;\n       end if;\n@@ -218,7 +218,7 @@ package body Sem_Warn is\n         and then Present (Prev (N))\n         and then Nkind (Prev (N)) = N_Code_Statement\n       then\n-         Error_Msg_F -- CODEFIX???\n+         Error_Msg_F\n            (\"?code statements in sequence should usually be Volatile!\", N);\n          Error_Msg_F\n            (\"\\?(suggest using template with multiple instructions)!\", N);\n@@ -1083,7 +1083,7 @@ package body Sem_Warn is\n                   if (Is_Volatile (E1) or else Has_Volatile_Components (E1))\n                     and then not Is_Imported (E1)\n                   then\n-                     Error_Msg_N -- CODEFIX???\n+                     Error_Msg_N\n                        (\"?& is not modified, volatile has no effect!\", E1);\n \n                   --  Another special case, Exception_Occurrence, this catches\n@@ -1275,7 +1275,7 @@ package body Sem_Warn is\n                        and then Present (Hiding_Loop_Variable (E1))\n                        and then not Warnings_Off_E1\n                      then\n-                        Error_Msg_N -- CODEFIX???\n+                        Error_Msg_N\n                           (\"?for loop implicitly declares loop variable!\",\n                            Hiding_Loop_Variable (E1));\n \n@@ -2771,7 +2771,7 @@ package body Sem_Warn is\n                   if Warn_On_Constant then\n                      Error_Msg_N\n                        (\"?formal parameter & is not modified!\", E1);\n-                     Error_Msg_N -- CODEFIX???\n+                     Error_Msg_N\n                        (\"\\?mode could be IN instead of `IN OUT`!\", E1);\n \n                      --  We do not generate warnings for IN OUT parameters\n@@ -2781,7 +2781,7 @@ package body Sem_Warn is\n                      --  default mode.\n \n                   elsif Check_Unreferenced then\n-                     Error_Msg_N -- CODEFIX???\n+                     Error_Msg_N\n                        (\"?formal parameter& is read but \"\n                         & \"never assigned!\", E1);\n                   end if;\n@@ -2968,21 +2968,21 @@ package body Sem_Warn is\n             --  Used only in context where Unmodified would have worked\n \n             elsif Warnings_Off_Used_Unmodified (E) then\n-               Error_Msg_NE -- CODEFIX???\n+               Error_Msg_NE\n                  (\"?could use Unmodified instead of \"\n                   & \"Warnings Off for &\", Pragma_Identifier (N), E);\n \n             --  Used only in context where Unreferenced would have worked\n \n             elsif Warnings_Off_Used_Unreferenced (E) then\n-               Error_Msg_NE -- CODEFIX???\n+               Error_Msg_NE\n                  (\"?could use Unreferenced instead of \"\n                   & \"Warnings Off for &\", Pragma_Identifier (N), E);\n \n             --  Not used at all\n \n             else\n-               Error_Msg_NE -- CODEFIX???\n+               Error_Msg_NE\n                  (\"?pragma Warnings Off for & unused, \"\n                   & \"could be omitted\", N, E);\n             end if;\n@@ -3606,19 +3606,17 @@ package body Sem_Warn is\n                   if Is_Entity_Name (Original_Node (C))\n                     and then Nkind (Cond) /= N_Op_Not\n                   then\n-                     Error_Msg_NE -- CODEFIX???\n+                     Error_Msg_NE\n                        (\"object & is always True?\", Cond, Original_Node (C));\n                      Track (Original_Node (C), Cond);\n \n                   else\n-                     Error_Msg_N -- CODEFIX???\n-                       (\"condition is always True?\", Cond);\n+                     Error_Msg_N (\"condition is always True?\", Cond);\n                      Track (Cond, Cond);\n                   end if;\n \n                else\n-                  Error_Msg_N -- CODEFIX???\n-                    (\"condition is always False?\", Cond);\n+                  Error_Msg_N (\"condition is always False?\", Cond);\n                   Track (Cond, Cond);\n                end if;\n             end;\n@@ -4002,7 +4000,7 @@ package body Sem_Warn is\n          elsif Length_Reference (X) then\n             Warn1;\n             Error_Msg_Node_2 := Ent;\n-            Error_Msg_FE -- CODEFIX???\n+            Error_Msg_FE\n               (\"\\suggest replacement of `&''Length` by `&''Last`\",\n                X, Ent);\n \n@@ -4013,7 +4011,7 @@ package body Sem_Warn is\n          then\n             Warn1;\n             Error_Msg_Node_2 := Ent;\n-            Error_Msg_FE -- CODEFIX???\n+            Error_Msg_FE\n               (\"\\suggest replacement of `&''Length` by `&''Last`\",\n                Left_Opnd (X), Ent);\n          end if;\n@@ -4218,8 +4216,7 @@ package body Sem_Warn is\n                null;\n \n             when E_Discriminant =>\n-               Error_Msg_N -- CODEFIX???\n-                 (\"?discriminant & is not referenced!\", E);\n+               Error_Msg_N (\"?discriminant & is not referenced!\", E);\n \n             when E_Named_Integer |\n                  E_Named_Real    =>"}, {"sha": "268a498eb1ea048c2d2972707331ba73d40e7d4a", "filename": "gcc/ada/sfn_scan.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsfn_scan.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fsfn_scan.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsfn_scan.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2000-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2000-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -637,7 +637,7 @@ package body SFN_Scan is\n \n       loop\n          if At_EOF or else S (P) = LF or else S (P) = CR then\n-            Error --  CODEFIX\n+            Error -- CODEFIX\n               (\"missing string quote\");\n \n          elsif S (P) = HT then"}, {"sha": "0f0ab300cba3e89be43a414c341bbbc2a863ea6e", "filename": "gcc/ada/style.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fstyle.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fstyle.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstyle.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -78,11 +78,11 @@ package body Style is\n    begin\n       if Style_Check_Array_Attribute_Index then\n          if D = 1 and then Present (E1) then\n-            Error_Msg_N\n+            Error_Msg_N -- CODEFIX\n               (\"(style) index number not allowed for one dimensional array\",\n                E1);\n          elsif D > 1 and then No (E1) then\n-            Error_Msg_N\n+            Error_Msg_N -- CODEFIX\n               (\"(style) index number required for multi-dimensional array\",\n                N);\n          end if;\n@@ -161,7 +161,7 @@ package body Style is\n                then\n                   Error_Msg_Node_1 := Def;\n                   Error_Msg_Sloc := Sloc (Def);\n-                  Error_Msg\n+                  Error_Msg -- CODEFIX\n                     (\"(style) bad casing of & declared#\", Sref);\n                   return;\n \n@@ -222,7 +222,7 @@ package body Style is\n                     String (Tref (Sref .. Sref + Source_Ptr (Nlen) - 1));\n                   Set_Casing (Cas);\n                   Error_Msg_Name_1 := Name_Enter;\n-                  Error_Msg_N\n+                  Error_Msg_N -- CODEFIX\n                     (\"(style) bad casing of %% declared in Standard\", Ref);\n                end if;\n             end if;\n@@ -243,10 +243,10 @@ package body Style is\n \n       if Style_Check_Missing_Overriding and then Comes_From_Source (N) then\n          if Nkind (N) = N_Subprogram_Body then\n-            Error_Msg_N\n+            Error_Msg_N -- CODEFIX\n               (\"(style) missing OVERRIDING indicator in body of%\", N);\n          else\n-            Error_Msg_N\n+            Error_Msg_N -- CODEFIX\n               (\"(style) missing OVERRIDING indicator in declaration of%\", N);\n          end if;\n       end if;\n@@ -259,7 +259,7 @@ package body Style is\n    procedure Subprogram_Not_In_Alpha_Order (Name : Node_Id) is\n    begin\n       if Style_Check_Order_Subprograms then\n-         Error_Msg_N\n+         Error_Msg_N -- CODEFIX\n            (\"(style) subprogram body& not in alphabetical order\", Name);\n       end if;\n    end Subprogram_Not_In_Alpha_Order;"}, {"sha": "1c22dbcf7073868c9ea4902dd9f5e0d88af1551d", "filename": "gcc/ada/styleg.adb", "status": "modified", "additions": 34, "deletions": 20, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fstyleg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2233dc6daaa5066470858c3ff939392b2f42ff/gcc%2Fada%2Fstyleg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstyleg.adb?ref=ed2233dc6daaa5066470858c3ff939392b2f42ff", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -237,9 +237,11 @@ package body Styleg is\n                   --  Otherwise we have an error\n \n                   elsif Nkind (Orig) = N_Op_And then\n-                     Error_Msg (\"(style) `AND THEN` required\", Sloc (Orig));\n+                     Error_Msg -- CODEFIX\n+                       (\"(style) `AND THEN` required\", Sloc (Orig));\n                   else\n-                     Error_Msg (\"(style) `OR ELSE` required\", Sloc (Orig));\n+                     Error_Msg -- CODEFIX\n+                       (\"(style) `OR ELSE` required\", Sloc (Orig));\n                   end if;\n                end;\n             end if;\n@@ -434,7 +436,8 @@ package body Styleg is\n          if Scan_Ptr > Source_First (Current_Source_File)\n            and then Source (Scan_Ptr - 1) > ' '\n          then\n-            Error_Msg_S (\"(style) space required\");\n+            Error_Msg_S -- CODEFIX\n+              (\"(style) space required\");\n          end if;\n       end if;\n \n@@ -447,7 +450,8 @@ package body Styleg is\n             if Source (Scan_Ptr + 2) > ' '\n               and then not Is_Special_Character (Source (Scan_Ptr + 2))\n             then\n-               Error_Msg (\"(style) space required\", Scan_Ptr + 2);\n+               Error_Msg -- CODEFIX\n+                 (\"(style) space required\", Scan_Ptr + 2);\n             end if;\n          end if;\n \n@@ -505,7 +509,8 @@ package body Styleg is\n                   if Is_Box_Comment then\n                      Error_Space_Required (Scan_Ptr + 2);\n                   else\n-                     Error_Msg (\"(style) two spaces required\", Scan_Ptr + 2);\n+                     Error_Msg -- CODEFIX\n+                       (\"(style) two spaces required\", Scan_Ptr + 2);\n                   end if;\n \n                   return;\n@@ -558,12 +563,12 @@ package body Styleg is\n          --  We expect one blank line, from the EOF, but no more than one\n \n          if Blank_Lines = 2 then\n-            Error_Msg\n+            Error_Msg -- CODEFIX\n               (\"(style) blank line not allowed at end of file\",\n                Blank_Line_Location);\n \n          elsif Blank_Lines >= 3 then\n-            Error_Msg\n+            Error_Msg -- CODEFIX\n               (\"(style) blank lines not allowed at end of file\",\n                Blank_Line_Location);\n          end if;\n@@ -590,7 +595,8 @@ package body Styleg is\n    procedure Check_HT is\n    begin\n       if Style_Check_Horizontal_Tabs then\n-         Error_Msg_S (\"(style) horizontal tab not allowed\");\n+         Error_Msg_S -- CODEFIX\n+           (\"(style) horizontal tab not allowed\");\n       end if;\n    end Check_HT;\n \n@@ -608,7 +614,8 @@ package body Styleg is\n          if Token_Ptr = First_Non_Blank_Location\n            and then Start_Column rem Style_Check_Indentation /= 0\n          then\n-            Error_Msg_SC (\"(style) bad indentation\");\n+            Error_Msg_SC -- CODEFIX\n+              (\"(style) bad indentation\");\n          end if;\n       end if;\n    end Check_Indentation;\n@@ -682,9 +689,11 @@ package body Styleg is\n \n       if Style_Check_Form_Feeds then\n          if Source (Scan_Ptr) = ASCII.FF then\n-            Error_Msg_S (\"(style) form feed not allowed\");\n+            Error_Msg_S -- CODEFIX\n+              (\"(style) form feed not allowed\");\n          elsif Source (Scan_Ptr) = ASCII.VT then\n-            Error_Msg_S (\"(style) vertical tab not allowed\");\n+            Error_Msg_S -- CODEFIX\n+              (\"(style) vertical tab not allowed\");\n          end if;\n       end if;\n \n@@ -717,7 +726,7 @@ package body Styleg is\n       --  Issue message for blanks at end of line if option enabled\n \n       if Style_Check_Blanks_At_End and then L < Len then\n-         Error_Msg\n+         Error_Msg -- CODEFIX\n            (\"(style) trailing spaces not permitted\", S);\n       end if;\n \n@@ -913,7 +922,7 @@ package body Styleg is\n \n       else\n          if Token = Tok_Then then\n-            Error_Msg\n+            Error_Msg -- CODEFIX\n               (\"(style) no statements may follow THEN on same line\", S);\n          else\n             Error_Msg\n@@ -977,7 +986,8 @@ package body Styleg is\n    procedure Check_Xtra_Parens (Loc : Source_Ptr) is\n    begin\n       if Style_Check_Xtra_Parens then\n-         Error_Msg (\"redundant parentheses?\", Loc);\n+         Error_Msg -- CODEFIX\n+           (\"redundant parentheses?\", Loc);\n       end if;\n    end Check_Xtra_Parens;\n \n@@ -996,7 +1006,8 @@ package body Styleg is\n \n    procedure Error_Space_Not_Allowed (S : Source_Ptr) is\n    begin\n-      Error_Msg (\"(style) space not allowed\", S);\n+      Error_Msg -- CODEFIX\n+        (\"(style) space not allowed\", S);\n    end Error_Space_Not_Allowed;\n \n    --------------------------\n@@ -1005,7 +1016,8 @@ package body Styleg is\n \n    procedure Error_Space_Required (S : Source_Ptr) is\n    begin\n-      Error_Msg (\"(style) space required\", S);\n+      Error_Msg -- CODEFIX\n+        (\"(style) space required\", S);\n    end Error_Space_Required;\n \n    --------------------\n@@ -1037,7 +1049,8 @@ package body Styleg is\n    begin\n       if Style_Check_End_Labels then\n          Error_Msg_Node_1 := Name;\n-         Error_Msg_SP (\"(style) `END &` required\");\n+         Error_Msg_SP -- CODEFIX\n+           (\"(style) `END &` required\");\n       end if;\n    end No_End_Name;\n \n@@ -1052,7 +1065,8 @@ package body Styleg is\n    begin\n       if Style_Check_End_Labels then\n          Error_Msg_Node_1 := Name;\n-         Error_Msg_SP (\"(style) `EXIT &` required\");\n+         Error_Msg_SP -- CODEFIX\n+           (\"(style) `EXIT &` required\");\n       end if;\n    end No_Exit_Name;\n \n@@ -1067,7 +1081,7 @@ package body Styleg is\n    procedure Non_Lower_Case_Keyword is\n    begin\n       if Style_Check_Keyword_Casing then\n-         Error_Msg_SC -- CODEIX\n+         Error_Msg_SC -- CODEFIX\n            (\"(style) reserved words must be all lower case\");\n       end if;\n    end Non_Lower_Case_Keyword;"}]}