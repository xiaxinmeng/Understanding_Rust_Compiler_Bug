{"sha": "4bbd5d0c5fb2b7527938ad44a6d8a2f2ef8bbe12", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJiZDVkMGM1ZmIyYjc1Mjc5MzhhZDQ0YTZkOGEyZjJlZjhiYmUxMg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-11-24T12:48:31Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-11-24T14:59:40Z"}, "message": "libstdc++: Throw instead of segfaulting in std::thread constructor [PR 67791]\n\nThis turns a mysterious segfault into an exception with a more useful\nmessage. If the exception isn't caught, the user sees this instead of\njust a segfault:\n\nterminate called after throwing an instance of 'std::system_error'\n  what():  Enable multithreading to use std::thread: Operation not permitted\nAborted (core dumped)\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/67791\n\t* src/c++11/thread.cc (thread::_M_start_thread(_State_ptr, void (*)())):\n\tCheck that gthreads is available before calling __gthread_create.", "tree": {"sha": "8de133e5cef6277ac4f0eb72fa18c24867b07d09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8de133e5cef6277ac4f0eb72fa18c24867b07d09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bbd5d0c5fb2b7527938ad44a6d8a2f2ef8bbe12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bbd5d0c5fb2b7527938ad44a6d8a2f2ef8bbe12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bbd5d0c5fb2b7527938ad44a6d8a2f2ef8bbe12", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bbd5d0c5fb2b7527938ad44a6d8a2f2ef8bbe12/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e253d36214015ed10ffd335e3628ccaac22dd5c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e253d36214015ed10ffd335e3628ccaac22dd5c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e253d36214015ed10ffd335e3628ccaac22dd5c7"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "a9c928049599cd141a04768bebf59caae06fe24c", "filename": "libstdc++-v3/src/c++11/thread.cc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bbd5d0c5fb2b7527938ad44a6d8a2f2ef8bbe12/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fthread.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bbd5d0c5fb2b7527938ad44a6d8a2f2ef8bbe12/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fthread.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fthread.cc?ref=4bbd5d0c5fb2b7527938ad44a6d8a2f2ef8bbe12", "patch": "@@ -133,6 +133,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   void\n   thread::_M_start_thread(_State_ptr state, void (*)())\n   {\n+    if (!__gthread_active_p())\n+      {\n+#if __cpp_exceptions\n+\tthrow system_error(make_error_code(errc::operation_not_permitted),\n+\t\t\t   \"Enable multithreading to use std::thread\");\n+#else\n+\t__builtin_abort();\n+#endif\n+      }\n+\n     const int err = __gthread_create(&_M_id._M_thread,\n \t\t\t\t     &execute_native_thread_routine,\n \t\t\t\t     state.get());"}]}