{"sha": "75fbfd0c125bbde33fd02d07b03f85f944ec9ba2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVmYmZkMGMxMjViYmRlMzNmZDAyZDA3YjAzZjg1Zjk0NGVjOWJhMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-28T18:24:12Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-28T18:24:12Z"}, "message": "(anonymous DImode shift patterns setting cc0): Turned off due to\nreload problems.\n\nFrom-SVN: r10411", "tree": {"sha": "01c80a0ea719d432eaab02513be036d8c14522be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01c80a0ea719d432eaab02513be036d8c14522be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75fbfd0c125bbde33fd02d07b03f85f944ec9ba2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75fbfd0c125bbde33fd02d07b03f85f944ec9ba2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75fbfd0c125bbde33fd02d07b03f85f944ec9ba2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75fbfd0c125bbde33fd02d07b03f85f944ec9ba2/comments", "author": null, "committer": null, "parents": [{"sha": "63d77adf435de2c2f21672da6c39927653bf8333", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63d77adf435de2c2f21672da6c39927653bf8333", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63d77adf435de2c2f21672da6c39927653bf8333"}], "stats": {"total": 59, "additions": 30, "deletions": 29}, "files": [{"sha": "8068356d1735e655abee13f92ad349f34e1b57ca", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 30, "deletions": 29, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75fbfd0c125bbde33fd02d07b03f85f944ec9ba2/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75fbfd0c125bbde33fd02d07b03f85f944ec9ba2/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=75fbfd0c125bbde33fd02d07b03f85f944ec9ba2", "patch": "@@ -4384,35 +4384,36 @@\n \f\n ;; logical shift instructions\n \n-(define_insn \"\"\n-        [(set (cc0)\n-            (subreg:SI (lshiftrt:DI (match_operand:DI 0 \"general_operand\" \"ro\")\n-                    (const_int 32)) 1))\n-        (set (match_operand:SI 1 \"general_operand\" \"=dm\")\n-            (subreg:SI (lshiftrt:DI (match_operand:DI 2 \"general_operand\" \"0\")\n-                    (const_int 32)) 1))]\n-  \"\"\n-  \"*\n-{\n-  return \\\"move%.l %0,%1\\\";\n-} \")\n-\n-(define_insn \"\"\n-        [(set (cc0)\n-            (subreg:SI (lshiftrt:DI (match_operand:DI 0 \"general_operand\" \"ro\")\n-                    (const_int 32)) 0))\n-        (set (match_operand:DI 1 \"general_operand\" \"=do\")\n-            (lshiftrt:DI (match_operand:DI 2 \"general_operand\" \"0\")\n-                (const_int 32)))]\n-  \"\"\n-  \"*\n-{\n-  if (GET_CODE (operands[1]) == REG)\n-    operands[2] = gen_rtx (REG, SImode, REGNO (operands[1]) + 1);\n-  else\n-    operands[2] = adj_offsettable_operand (operands[1], 4);\n-  return \\\"move%.l %0,%2\\;clr%.l %1\\\";\n-} \")\n+;; commented out because of reload problems in 950612-1.c\n+;;(define_insn \"\"\n+;;        [(set (cc0)\n+;;            (subreg:SI (lshiftrt:DI (match_operand:DI 0 \"general_operand\" \"ro\")\n+;;                    (const_int 32)) 1))\n+;;        (set (match_operand:SI 1 \"general_operand\" \"=dm\")\n+;;            (subreg:SI (lshiftrt:DI (match_dup 0)\n+;;                    (const_int 32)) 1))]\n+;;  \"\"\n+;;  \"*\n+;;{\n+;;  return \\\"move%.l %0,%1\\\";\n+;;} \")\n+;;\n+;;(define_insn \"\"\n+;;        [(set (cc0)\n+;;            (subreg:SI (lshiftrt:DI (match_operand:DI 0 \"general_operand\" \"ro\")\n+;;                    (const_int 32)) 0))\n+;;        (set (match_operand:DI 1 \"general_operand\" \"=do\")\n+;;            (lshiftrt:DI (match_dup 0)\n+;;                (const_int 32)))]\n+;;  \"\"\n+;;  \"*\n+;;{\n+;;  if (GET_CODE (operands[1]) == REG)\n+;;    operands[2] = gen_rtx (REG, SImode, REGNO (operands[1]) + 1);\n+;;  else\n+;;    operands[2] = adj_offsettable_operand (operands[1], 4);\n+;;  return \\\"move%.l %0,%2\\;clr%.l %1\\\";\n+;;} \")\n \n (define_insn \"subreg1lshrdi_const32\"\n   [(set (match_operand:SI 0 \"general_operand\" \"=rm\")"}]}