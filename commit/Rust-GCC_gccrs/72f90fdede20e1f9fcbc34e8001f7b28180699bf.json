{"sha": "72f90fdede20e1f9fcbc34e8001f7b28180699bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzJmOTBmZGVkZTIwZTFmOWZjYmMzNGU4MDAxZjdiMjgxODA2OTliZg==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2009-07-07T15:29:12Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2009-07-07T15:29:12Z"}, "message": "pretty-print.c (pp_base_format): Remove %J.\n\n2009-07-07  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n\t* pretty-print.c (pp_base_format): Remove %J.\n\t* c-format.c (gcc_diag_char_table, gcc_tdiag_char_table,\n\tgcc_cxxdiag_char_table): Likewise.\n\t(init_dynamic_diag_info): Likewise.\n\t\ntestsuite/\t\n\t* gcc.dg/format/gcc_diag-1.c: Remove tests for %J.\n\nFrom-SVN: r149334", "tree": {"sha": "7c5368db173ec15830b59c994b225fd6df014691", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c5368db173ec15830b59c994b225fd6df014691"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72f90fdede20e1f9fcbc34e8001f7b28180699bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72f90fdede20e1f9fcbc34e8001f7b28180699bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72f90fdede20e1f9fcbc34e8001f7b28180699bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72f90fdede20e1f9fcbc34e8001f7b28180699bf/comments", "author": null, "committer": null, "parents": [{"sha": "dcb91ebed3a93439ef4892c18420c8fd4295a1a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcb91ebed3a93439ef4892c18420c8fd4295a1a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcb91ebed3a93439ef4892c18420c8fd4295a1a3"}], "stats": {"total": 52, "additions": 15, "deletions": 37}, "files": [{"sha": "c05678800f866049a489dfff86ee89f85b7a7c04", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72f90fdede20e1f9fcbc34e8001f7b28180699bf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72f90fdede20e1f9fcbc34e8001f7b28180699bf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=72f90fdede20e1f9fcbc34e8001f7b28180699bf", "patch": "@@ -1,3 +1,10 @@\n+2009-07-07  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\t* pretty-print.c (pp_base_format): Remove %J.\n+\t* c-format.c (gcc_diag_char_table, gcc_tdiag_char_table,\n+\tgcc_cxxdiag_char_table): Likewise.\n+\t(init_dynamic_diag_info): Likewise.\n+\t\n 2009-07-07  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \t* pretty-print.c (pp_base_format): Remove %H."}, {"sha": "38a4b60a86f9025bc3654486431207c0683ca593", "filename": "gcc/c-format.c", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72f90fdede20e1f9fcbc34e8001f7b28180699bf/gcc%2Fc-format.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72f90fdede20e1f9fcbc34e8001f7b28180699bf/gcc%2Fc-format.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-format.c?ref=72f90fdede20e1f9fcbc34e8001f7b28180699bf", "patch": "@@ -562,7 +562,7 @@ static const format_char_info gcc_diag_char_table[] =\n   /* Custom conversion specifiers.  */\n \n   /* These will require a \"tree\" at runtime.  */\n-  { \"JK\", 0, STD_C89, { T89_V,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, \"q\",    \"\",   NULL },\n+  { \"K\", 0, STD_C89, { T89_V,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, \"q\",    \"\",   NULL },\n \n   { \"<>'\", 0, STD_C89, NOARGUMENTS, \"\",      \"\",   NULL },\n   { \"m\",   0, STD_C89, NOARGUMENTS, \"q\",     \"\",   NULL },\n@@ -582,7 +582,7 @@ static const format_char_info gcc_tdiag_char_table[] =\n   /* Custom conversion specifiers.  */\n \n   /* These will require a \"tree\" at runtime.  */\n-  { \"DFJKTE\", 0, STD_C89, { T89_V,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, \"q+\", \"\",   NULL },\n+  { \"DFKTE\", 0, STD_C89, { T89_V,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, \"q+\", \"\",   NULL },\n \n   { \"<>'\", 0, STD_C89, NOARGUMENTS, \"\",      \"\",   NULL },\n   { \"m\",   0, STD_C89, NOARGUMENTS, \"q\",     \"\",   NULL },\n@@ -602,7 +602,7 @@ static const format_char_info gcc_cdiag_char_table[] =\n   /* Custom conversion specifiers.  */\n \n   /* These will require a \"tree\" at runtime.  */\n-  { \"DEFJKT\", 0, STD_C89, { T89_V,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, \"q+\", \"\",   NULL },\n+  { \"DEFKT\", 0, STD_C89, { T89_V,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, \"q+\", \"\",   NULL },\n \n   { \"<>'\", 0, STD_C89, NOARGUMENTS, \"\",      \"\",   NULL },\n   { \"m\",   0, STD_C89, NOARGUMENTS, \"q\",     \"\",   NULL },\n@@ -622,7 +622,7 @@ static const format_char_info gcc_cxxdiag_char_table[] =\n   /* Custom conversion specifiers.  */\n \n   /* These will require a \"tree\" at runtime.  */\n-  { \"ADEFJKTV\",0,STD_C89,{ T89_V,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, \"q+#\",   \"\",   NULL },\n+  { \"ADEFKTV\",0,STD_C89,{ T89_V,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, \"q+#\",   \"\",   NULL },\n \n   /* These accept either an 'int' or an 'enum tree_code' (which is handled as an 'int'.)  */\n   { \"CLOPQ\",0,STD_C89, { T89_I,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, \"q\",  \"\",   NULL },\n@@ -2598,9 +2598,6 @@ init_dynamic_diag_info (void)\n \t\t\t      sizeof (gcc_diag_char_table));\n       if (t)\n \t{\n-\t  i = find_char_info_specifier_index (diag_fci, 'J');\n-\t  diag_fci[i].types[0].type = &t;\n-\t  diag_fci[i].pointer_count = 1;\n \t  i = find_char_info_specifier_index (diag_fci, 'K');\n \t  diag_fci[i].types[0].type = &t;\n \t  diag_fci[i].pointer_count = 1;\n@@ -2619,9 +2616,6 @@ init_dynamic_diag_info (void)\n \t  i = find_char_info_specifier_index (tdiag_fci, 'D');\n \t  tdiag_fci[i].types[0].type = &t;\n \t  tdiag_fci[i].pointer_count = 1;\n-\t  i = find_char_info_specifier_index (tdiag_fci, 'J');\n-\t  tdiag_fci[i].types[0].type = &t;\n-\t  tdiag_fci[i].pointer_count = 1;\n \t  i = find_char_info_specifier_index (tdiag_fci, 'K');\n \t  tdiag_fci[i].types[0].type = &t;\n \t  tdiag_fci[i].pointer_count = 1;\n@@ -2640,9 +2634,6 @@ init_dynamic_diag_info (void)\n \t  i = find_char_info_specifier_index (cdiag_fci, 'D');\n \t  cdiag_fci[i].types[0].type = &t;\n \t  cdiag_fci[i].pointer_count = 1;\n-\t  i = find_char_info_specifier_index (cdiag_fci, 'J');\n-\t  cdiag_fci[i].types[0].type = &t;\n-\t  cdiag_fci[i].pointer_count = 1;\n \t  i = find_char_info_specifier_index (cdiag_fci, 'K');\n \t  cdiag_fci[i].types[0].type = &t;\n \t  cdiag_fci[i].pointer_count = 1;\n@@ -2661,9 +2652,6 @@ init_dynamic_diag_info (void)\n \t  i = find_char_info_specifier_index (cxxdiag_fci, 'D');\n \t  cxxdiag_fci[i].types[0].type = &t;\n \t  cxxdiag_fci[i].pointer_count = 1;\n-\t  i = find_char_info_specifier_index (cxxdiag_fci, 'J');\n-\t  cxxdiag_fci[i].types[0].type = &t;\n-\t  cxxdiag_fci[i].pointer_count = 1;\n \t  i = find_char_info_specifier_index (cxxdiag_fci, 'K');\n \t  cxxdiag_fci[i].types[0].type = &t;\n \t  cxxdiag_fci[i].pointer_count = 1;"}, {"sha": "94952c3e15251ca2df9f359ac0fe82623d388295", "filename": "gcc/pretty-print.c", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72f90fdede20e1f9fcbc34e8001f7b28180699bf/gcc%2Fpretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72f90fdede20e1f9fcbc34e8001f7b28180699bf/gcc%2Fpretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpretty-print.c?ref=72f90fdede20e1f9fcbc34e8001f7b28180699bf", "patch": "@@ -190,7 +190,6 @@ pp_base_indent (pretty_printer *pp)\n    %.*s: a substring the length of which is specified by an argument\n \t integer.\n    %Ns: likewise, but length specified as constant in the format string.\n-   %J: a decl tree, from which DECL_SOURCE_LOCATION will be recorded.\n    %K: a statement, from which EXPR_LOCATION and TREE_BLOCK will be recorded.\n    Flag 'q': quote formatted text (must come immediately after '%').\n \n@@ -475,14 +474,6 @@ pp_base_format (pretty_printer *pp, text_info *text)\n \t      (pp, *text->args_ptr, precision, unsigned, \"x\");\n \t  break;\n \n-\tcase 'J':\n-\t  {\n-\t    tree t = va_arg (*text->args_ptr, tree);\n-\t    gcc_assert (text->locus != NULL);\n-\t    *text->locus = DECL_SOURCE_LOCATION (t);\n-\t  }\n-\t  break;\n-\n \tcase 'K':\n \t  {\n \t    tree t = va_arg (*text->args_ptr, tree), block;"}, {"sha": "95b04063534318f10fa9052e44a9d92e2bffb4de", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72f90fdede20e1f9fcbc34e8001f7b28180699bf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72f90fdede20e1f9fcbc34e8001f7b28180699bf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=72f90fdede20e1f9fcbc34e8001f7b28180699bf", "patch": "@@ -1,3 +1,7 @@\n+2009-07-07  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\t* gcc.dg/format/gcc_diag-1.c: Remove tests for %J.\n+\n 2009-07-07  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \t* gcc.dg/format/gcc_diag-1.c: Remove tests for %H."}, {"sha": "46013c8699e60d3167ec88a79b5b91f3acdfecc9", "filename": "gcc/testsuite/gcc.dg/format/gcc_diag-1.c", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72f90fdede20e1f9fcbc34e8001f7b28180699bf/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fgcc_diag-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72f90fdede20e1f9fcbc34e8001f7b28180699bf/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fgcc_diag-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fgcc_diag-1.c?ref=72f90fdede20e1f9fcbc34e8001f7b28180699bf", "patch": "@@ -69,10 +69,6 @@ foo (int i, int i1, int i2, unsigned int u, double d, char *s, void *p,\n   tdiag (\"%m\");\n   cdiag (\"%m\");\n   cxxdiag (\"%m\");\n-  diag (\"%J\", t1);\n-  tdiag (\"%J\", t1);\n-  cdiag (\"%J\", t1);\n-  cxxdiag (\"%J\", t1);\n \n   tdiag (\"%D%F%T\", t1, t1, t1);\n   tdiag (\"%+D%+F%+T\", t1, t1, t1);\n@@ -103,14 +99,6 @@ foo (int i, int i1, int i2, unsigned int u, double d, char *s, void *p,\n   tdiag (\"%+m\"); /* { dg-warning \"format\" \"bogus modifier\" } */\n   cdiag (\"%+m\"); /* { dg-warning \"format\" \"bogus modifier\" } */\n   cxxdiag (\"%+m\"); /* { dg-warning \"format\" \"bogus modifier\" } */\n-  diag (\"%J\"); /* { dg-warning \"format\" \"missing arg\" } */\n-  tdiag (\"%J\"); /* { dg-warning \"format\" \"missing arg\" } */\n-  cdiag (\"%J\"); /* { dg-warning \"format\" \"missing arg\" } */\n-  cxxdiag (\"%J\"); /* { dg-warning \"format\" \"missing arg\" } */\n-  diag (\"%J\", loc); /* { dg-warning \"format\" \"wrong arg\" } */\n-  tdiag (\"%J\", loc); /* { dg-warning \"format\" \"wrong arg\" } */\n-  cdiag (\"%J\", loc); /* { dg-warning \"format\" \"wrong arg\" } */\n-  cxxdiag (\"%J\", loc); /* { dg-warning \"format\" \"wrong arg\" } */\n   diag (\"%D\", t1); /* { dg-warning \"format\" \"bogus tree\" } */\n   tdiag (\"%A\", t1); /* { dg-warning \"format\" \"bogus tree\" } */\n   tdiag (\"%E\", t1);"}]}