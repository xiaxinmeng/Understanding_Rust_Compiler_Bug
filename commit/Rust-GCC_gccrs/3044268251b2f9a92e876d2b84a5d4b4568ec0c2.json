{"sha": "3044268251b2f9a92e876d2b84a5d4b4568ec0c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA0NDI2ODI1MWIyZjlhOTJlODc2ZDJiODRhNWQ0YjQ1NjhlYzBjMg==", "commit": {"author": {"name": "Tejas Belagod", "email": "tejas.belagod@arm.com", "date": "2013-12-19T14:55:47Z"}, "committer": {"name": "Tejas Belagod", "email": "belagod@gcc.gnu.org", "date": "2013-12-19T14:55:47Z"}, "message": "Implement support for AArch64 Crypto SHA1.\n\ngcc/\n\t* config/aarch64/aarch64-simd-builtins.def: Update builtins table.\n\t* config/aarch64/aarch64-builtins.c (aarch64_types_ternopu_qualifiers,\n\tTYPES_TERNOPU): New.\n\t* config/aarch64/aarch64-simd.md (aarch64_crypto_sha1hsi,\n\taarch64_crypto_sha1su1v4si, aarch64_crypto_sha1<sha1_op>v4si,\n\taarch64_crypto_sha1su0v4si): New.\n\t* config/aarch64/arm_neon.h (vsha1cq_u32, sha1mq_u32, vsha1pq_u32,\n\tvsha1h_u32, vsha1su0q_u32, vsha1su1q_u32): New.\n\t* config/aarch64/iterators.md (UNSPEC_SHA1<CPMH>, UNSPEC_SHA1SU<01>):\n\tNew.\n\t(CRYPTO_SHA1): New int iterator.\n\t(sha1_op): New int attribute.\n\ntestsuite/\n\t* gcc.target/aarch64/sha1_1.c: New.\n\nFrom-SVN: r206118", "tree": {"sha": "dad3ccb36385562b2b5065ad22b583bb1aa2c2b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dad3ccb36385562b2b5065ad22b583bb1aa2c2b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3044268251b2f9a92e876d2b84a5d4b4568ec0c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3044268251b2f9a92e876d2b84a5d4b4568ec0c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3044268251b2f9a92e876d2b84a5d4b4568ec0c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3044268251b2f9a92e876d2b84a5d4b4568ec0c2/comments", "author": {"login": "tejas-belagod-arm", "id": 92718852, "node_id": "U_kgDOBYbHBA", "avatar_url": "https://avatars.githubusercontent.com/u/92718852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tejas-belagod-arm", "html_url": "https://github.com/tejas-belagod-arm", "followers_url": "https://api.github.com/users/tejas-belagod-arm/followers", "following_url": "https://api.github.com/users/tejas-belagod-arm/following{/other_user}", "gists_url": "https://api.github.com/users/tejas-belagod-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/tejas-belagod-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tejas-belagod-arm/subscriptions", "organizations_url": "https://api.github.com/users/tejas-belagod-arm/orgs", "repos_url": "https://api.github.com/users/tejas-belagod-arm/repos", "events_url": "https://api.github.com/users/tejas-belagod-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/tejas-belagod-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5a7a4e8064f46ac5f985c3441fd3b504680865a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a7a4e8064f46ac5f985c3441fd3b504680865a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a7a4e8064f46ac5f985c3441fd3b504680865a3"}], "stats": {"total": 182, "additions": 182, "deletions": 0}, "files": [{"sha": "1886afbd9dd0c3c835ef0b52333bd8fc1d8d6b91", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3044268251b2f9a92e876d2b84a5d4b4568ec0c2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3044268251b2f9a92e876d2b84a5d4b4568ec0c2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3044268251b2f9a92e876d2b84a5d4b4568ec0c2", "patch": "@@ -1,3 +1,18 @@\n+2013-12-19  Tejas Belagod  <tejas.belagod@arm.com>\n+\n+\t* config/aarch64/aarch64-simd-builtins.def: Update builtins table.\n+\t* config/aarch64/aarch64-builtins.c (aarch64_types_ternopu_qualifiers,\n+\tTYPES_TERNOPU): New.\n+\t* config/aarch64/aarch64-simd.md (aarch64_crypto_sha1hsi,\n+\taarch64_crypto_sha1su1v4si, aarch64_crypto_sha1<sha1_op>v4si,\n+\taarch64_crypto_sha1su0v4si): New.\n+\t* config/aarch64/arm_neon.h (vsha1cq_u32, sha1mq_u32, vsha1pq_u32,\n+\tvsha1h_u32, vsha1su0q_u32, vsha1su1q_u32): New.\n+\t* config/aarch64/iterators.md (UNSPEC_SHA1<CPMH>, UNSPEC_SHA1SU<01>):\n+\tNew.\n+\t(CRYPTO_SHA1): New int iterator.\n+\t(sha1_op): New int attribute.\n+\n 2013-12-19  Tejas Belagod  <tejas.belagod@arm.com>\n \n \t* config/aarch64/aarch64-simd-builtins.def: Update builtins table."}, {"sha": "ea933d617f5549407c49fd8dafa138d4ed2cb3be", "filename": "gcc/config/aarch64/aarch64-builtins.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3044268251b2f9a92e876d2b84a5d4b4568ec0c2/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3044268251b2f9a92e876d2b84a5d4b4568ec0c2/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c?ref=3044268251b2f9a92e876d2b84a5d4b4568ec0c2", "patch": "@@ -160,6 +160,12 @@ static enum aarch64_type_qualifiers\n aarch64_types_ternop_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n   = { qualifier_none, qualifier_none, qualifier_none, qualifier_none };\n #define TYPES_TERNOP (aarch64_types_ternop_qualifiers)\n+static enum aarch64_type_qualifiers\n+aarch64_types_ternopu_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n+  = { qualifier_unsigned, qualifier_unsigned,\n+      qualifier_unsigned, qualifier_unsigned };\n+#define TYPES_TERNOPU (aarch64_types_ternopu_qualifiers)\n+\n static enum aarch64_type_qualifiers\n aarch64_types_quadop_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n   = { qualifier_none, qualifier_none, qualifier_none,"}, {"sha": "7f90c827b0aebd15fbf2b60386474a7bd2ff06f0", "filename": "gcc/config/aarch64/aarch64-simd-builtins.def", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3044268251b2f9a92e876d2b84a5d4b4568ec0c2/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3044268251b2f9a92e876d2b84a5d4b4568ec0c2/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def?ref=3044268251b2f9a92e876d2b84a5d4b4568ec0c2", "patch": "@@ -372,3 +372,11 @@\n   VAR1 (BINOPU, crypto_aesd, 0, v16qi)\n   VAR1 (UNOPU, crypto_aesmc, 0, v16qi)\n   VAR1 (UNOPU, crypto_aesimc, 0, v16qi)\n+\n+  /* Implemented by aarch64_crypto_sha1<op><mode>.  */\n+  VAR1 (UNOPU, crypto_sha1h, 0, si)\n+  VAR1 (BINOPU, crypto_sha1su1, 0, v4si)\n+  VAR1 (TERNOPU, crypto_sha1c, 0, v4si)\n+  VAR1 (TERNOPU, crypto_sha1m, 0, v4si)\n+  VAR1 (TERNOPU, crypto_sha1p, 0, v4si)\n+  VAR1 (TERNOPU, crypto_sha1su0, 0, v4si)"}, {"sha": "5b454caba2e91b08e5cff844996fd2ba96c12b5b", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3044268251b2f9a92e876d2b84a5d4b4568ec0c2/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3044268251b2f9a92e876d2b84a5d4b4568ec0c2/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=3044268251b2f9a92e876d2b84a5d4b4568ec0c2", "patch": "@@ -4096,3 +4096,46 @@\n   [(set_attr \"type\" \"crypto_aes\")]\n )\n \n+;; sha1\n+\n+(define_insn \"aarch64_crypto_sha1hsi\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=w\")\n+        (unspec:SI [(match_operand:SI 1\n+                       \"register_operand\" \"w\")]\n+         UNSPEC_SHA1H))]\n+  \"TARGET_SIMD && TARGET_CRYPTO\"\n+  \"sha1h\\\\t%s0, %s1\"\n+  [(set_attr \"type\" \"crypto_sha1_fast\")]\n+)\n+\n+(define_insn \"aarch64_crypto_sha1su1v4si\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=w\")\n+        (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"0\")\n+                      (match_operand:V4SI 2 \"register_operand\" \"w\")]\n+         UNSPEC_SHA1SU1))]\n+  \"TARGET_SIMD && TARGET_CRYPTO\"\n+  \"sha1su1\\\\t%0.4s, %2.4s\"\n+  [(set_attr \"type\" \"crypto_sha1_fast\")]\n+)\n+\n+(define_insn \"aarch64_crypto_sha1<sha1_op>v4si\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=w\")\n+        (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"0\")\n+                      (match_operand:SI 2 \"register_operand\" \"w\")\n+                      (match_operand:V4SI 3 \"register_operand\" \"w\")]\n+         CRYPTO_SHA1))]\n+  \"TARGET_SIMD && TARGET_CRYPTO\"\n+  \"sha1<sha1_op>\\\\t%q0, %s2, %3.4s\"\n+  [(set_attr \"type\" \"crypto_sha1_slow\")]\n+)\n+\n+(define_insn \"aarch64_crypto_sha1su0v4si\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=w\")\n+        (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"0\")\n+                      (match_operand:V4SI 2 \"register_operand\" \"w\")\n+                      (match_operand:V4SI 3 \"register_operand\" \"w\")]\n+         UNSPEC_SHA1SU0))]\n+  \"TARGET_SIMD && TARGET_CRYPTO\"\n+  \"sha1su0\\\\t%0.4s, %2.4s, %3.4s\"\n+  [(set_attr \"type\" \"crypto_sha1_xor\")]\n+)"}, {"sha": "5a5691dda75084f1a1ed7eff4717d9f4aef3fc9b", "filename": "gcc/config/aarch64/arm_neon.h", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3044268251b2f9a92e876d2b84a5d4b4568ec0c2/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3044268251b2f9a92e876d2b84a5d4b4568ec0c2/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_neon.h?ref=3044268251b2f9a92e876d2b84a5d4b4568ec0c2", "patch": "@@ -22952,6 +22952,46 @@ vrsrad_n_u64 (uint64x1_t __a, uint64x1_t __b, const int __c)\n   return (uint64x1_t) __builtin_aarch64_ursra_ndi (__a, __b, __c);\n }\n \n+#ifdef __ARM_FEATURE_CRYPTO\n+\n+/* vsha1  */\n+\n+static __inline uint32x4_t\n+vsha1cq_u32 (uint32x4_t hash_abcd, uint32_t hash_e, uint32x4_t wk)\n+{\n+  return __builtin_aarch64_crypto_sha1cv4si_uuuu (hash_abcd, hash_e, wk);\n+}\n+static __inline uint32x4_t\n+vsha1mq_u32 (uint32x4_t hash_abcd, uint32_t hash_e, uint32x4_t wk)\n+{\n+  return __builtin_aarch64_crypto_sha1mv4si_uuuu (hash_abcd, hash_e, wk);\n+}\n+static __inline uint32x4_t\n+vsha1pq_u32 (uint32x4_t hash_abcd, uint32_t hash_e, uint32x4_t wk)\n+{\n+  return __builtin_aarch64_crypto_sha1pv4si_uuuu (hash_abcd, hash_e, wk);\n+}\n+\n+static __inline uint32_t\n+vsha1h_u32 (uint32_t hash_e)\n+{\n+  return __builtin_aarch64_crypto_sha1hsi_uu (hash_e);\n+}\n+\n+static __inline uint32x4_t\n+vsha1su0q_u32 (uint32x4_t w0_3, uint32x4_t w4_7, uint32x4_t w8_11)\n+{\n+  return __builtin_aarch64_crypto_sha1su0v4si_uuuu (w0_3, w4_7, w8_11);\n+}\n+\n+static __inline uint32x4_t\n+vsha1su1q_u32 (uint32x4_t tw0_3, uint32x4_t w12_15)\n+{\n+  return __builtin_aarch64_crypto_sha1su1v4si_uuu (tw0_3, w12_15);\n+}\n+\n+#endif\n+\n /* vshl */\n \n __extension__ static __inline int8x8_t __attribute__ ((__always_inline__))"}, {"sha": "12de4acf1ad9628bfeba4d7c25ad55ee2e319ec7", "filename": "gcc/config/aarch64/iterators.md", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3044268251b2f9a92e876d2b84a5d4b4568ec0c2/gcc%2Fconfig%2Faarch64%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3044268251b2f9a92e876d2b84a5d4b4568ec0c2/gcc%2Fconfig%2Faarch64%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fiterators.md?ref=3044268251b2f9a92e876d2b84a5d4b4568ec0c2", "patch": "@@ -271,6 +271,12 @@\n     UNSPEC_AESD         ; Used in aarch64-simd.md.\n     UNSPEC_AESMC        ; Used in aarch64-simd.md.\n     UNSPEC_AESIMC       ; Used in aarch64-simd.md.\n+    UNSPEC_SHA1C\t; Used in aarch64-simd.md.\n+    UNSPEC_SHA1M        ; Used in aarch64-simd.md.\n+    UNSPEC_SHA1P        ; Used in aarch64-simd.md.\n+    UNSPEC_SHA1H        ; Used in aarch64-simd.md.\n+    UNSPEC_SHA1SU0      ; Used in aarch64-simd.md.\n+    UNSPEC_SHA1SU1      ; Used in aarch64-simd.md.\n ])\n \n ;; -------------------------------------------------------------------\n@@ -855,6 +861,8 @@\n (define_int_iterator CRYPTO_AES [UNSPEC_AESE UNSPEC_AESD])\n (define_int_iterator CRYPTO_AESMC [UNSPEC_AESMC UNSPEC_AESIMC])\n \n+(define_int_iterator CRYPTO_SHA1 [UNSPEC_SHA1C UNSPEC_SHA1M UNSPEC_SHA1P])\n+\n ;; -------------------------------------------------------------------\n ;; Int Iterators Attributes.\n ;; -------------------------------------------------------------------\n@@ -974,3 +982,6 @@\n \n (define_int_attr aes_op [(UNSPEC_AESE \"e\") (UNSPEC_AESD \"d\")])\n (define_int_attr aesmc_op [(UNSPEC_AESMC \"mc\") (UNSPEC_AESIMC \"imc\")])\n+\n+(define_int_attr sha1_op [(UNSPEC_SHA1C \"c\") (UNSPEC_SHA1P \"p\")\n+\t\t\t  (UNSPEC_SHA1M \"m\")])"}, {"sha": "849d1f7bca38e2f3cea3e6b3a6140d287d823833", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3044268251b2f9a92e876d2b84a5d4b4568ec0c2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3044268251b2f9a92e876d2b84a5d4b4568ec0c2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3044268251b2f9a92e876d2b84a5d4b4568ec0c2", "patch": "@@ -1,3 +1,7 @@\n+2013-12-19  Tejas Belagod  <tejas.belagod@arm.com>\n+\n+\t* gcc.target/aarch64/sha1_1.c: New.\n+\n 2013-12-19  Tejas Belagod  <tejas.belagod@arm.com>\n \n \t* gcc.target/aarch64/aes_1.c: New."}, {"sha": "776753dcd5f825f32ba6ad30b61ba694c4f7e999", "filename": "gcc/testsuite/gcc.target/aarch64/sha1_1.c", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3044268251b2f9a92e876d2b84a5d4b4568ec0c2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsha1_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3044268251b2f9a92e876d2b84a5d4b4568ec0c2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsha1_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsha1_1.c?ref=3044268251b2f9a92e876d2b84a5d4b4568ec0c2", "patch": "@@ -0,0 +1,55 @@\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-march=armv8-a+crypto\" } */\n+\n+#include \"arm_neon.h\"\n+\n+uint32x4_t\n+test_vsha1cq_u32 (uint32x4_t hash_abcd, uint32_t hash_e, uint32x4_t wk)\n+{\n+  return vsha1cq_u32 (hash_abcd, hash_e, wk);\n+}\n+\n+/* { dg-final { scan-assembler-times \"sha1c\\\\tq\" 1 } } */\n+\n+uint32x4_t\n+test_vsha1mq_u32 (uint32x4_t hash_abcd, uint32_t hash_e, uint32x4_t wk)\n+{\n+  return vsha1mq_u32 (hash_abcd, hash_e, wk);\n+}\n+\n+/* { dg-final { scan-assembler-times \"sha1m\\\\tq\" 1 } } */\n+\n+uint32x4_t\n+test_vsha1pq_u32 (uint32x4_t hash_abcd, uint32_t hash_e, uint32x4_t wk)\n+{\n+  return vsha1pq_u32 (hash_abcd, hash_e, wk);\n+}\n+\n+/* { dg-final { scan-assembler-times \"sha1p\\\\tq\" 1 } } */\n+\n+uint32_t\n+test_vsha1h_u32 (uint32_t hash_e)\n+{\n+  return vsha1h_u32 (hash_e);\n+}\n+\n+/* { dg-final { scan-assembler-times \"sha1h\\\\ts\" 1 } } */\n+\n+uint32x4_t\n+test_vsha1su0q_u32 (uint32x4_t w0_3, uint32x4_t w4_7, uint32x4_t w8_11)\n+{\n+  return vsha1su0q_u32 (w0_3, w4_7, w8_11);\n+}\n+\n+/* { dg-final { scan-assembler-times \"sha1su0\\\\tv\" 1 } } */\n+\n+uint32x4_t\n+test_vsha1su1q_u32 (uint32x4_t tw0_3, uint32x4_t w12_15)\n+{\n+  return vsha1su1q_u32 (tw0_3, w12_15);\n+}\n+\n+/* { dg-final { scan-assembler-times \"sha1su1\\\\tv\" 1 } } */\n+\n+/* { dg-final { cleanup-saved-temps } } */"}]}