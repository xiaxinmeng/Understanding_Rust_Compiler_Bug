{"sha": "228240f32114fbbc17b73b1e91f245177c5aacc7", "node_id": "C_kwDOANBUbNoAKDIyODI0MGYzMjExNGZiYmMxN2I3M2IxZTkxZjI0NTE3N2M1YWFjYzc", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-10-28T20:25:10Z"}, "committer": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2021-11-05T16:34:22Z"}, "message": "Add 'rust_internal_error_at'\n\n... corresponding to GCC's 'internal_error'.", "tree": {"sha": "7e485477949edd04278eea2bf097648bc4e9a2be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e485477949edd04278eea2bf097648bc4e9a2be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/228240f32114fbbc17b73b1e91f245177c5aacc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/228240f32114fbbc17b73b1e91f245177c5aacc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/228240f32114fbbc17b73b1e91f245177c5aacc7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/228240f32114fbbc17b73b1e91f245177c5aacc7/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e73922ef9f07c511c383cc37532d0324a1138d99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e73922ef9f07c511c383cc37532d0324a1138d99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e73922ef9f07c511c383cc37532d0324a1138d99"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "9982fa24e04c8389572069f7e58228a56128f575", "filename": "gcc/rust/rust-diagnostics.cc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/228240f32114fbbc17b73b1e91f245177c5aacc7/gcc%2Frust%2Frust-diagnostics.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/228240f32114fbbc17b73b1e91f245177c5aacc7/gcc%2Frust%2Frust-diagnostics.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-diagnostics.cc?ref=228240f32114fbbc17b73b1e91f245177c5aacc7", "patch": "@@ -146,6 +146,16 @@ rust_close_quote ()\n   return cached_close_quote;\n }\n \n+void\n+rust_internal_error_at (const Location location, const char *fmt, ...)\n+{\n+  va_list ap;\n+\n+  va_start (ap, fmt);\n+  rust_be_internal_error_at (location, expand_message (fmt, ap));\n+  va_end (ap);\n+}\n+\n void\n rust_error_at (const Location location, const char *fmt, ...)\n {"}, {"sha": "7fc0e694e576e051e37377764f4bd827bda8469b", "filename": "gcc/rust/rust-diagnostics.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/228240f32114fbbc17b73b1e91f245177c5aacc7/gcc%2Frust%2Frust-diagnostics.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/228240f32114fbbc17b73b1e91f245177c5aacc7/gcc%2Frust%2Frust-diagnostics.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-diagnostics.h?ref=228240f32114fbbc17b73b1e91f245177c5aacc7", "patch": "@@ -50,6 +50,10 @@\n \n // simple location\n extern void\n+rust_internal_error_at (const Location, const char *fmt, ...)\n+  RUST_ATTRIBUTE_GCC_DIAG (2, 3)\n+  RUST_ATTRIBUTE_NORETURN;\n+extern void\n rust_error_at (const Location, const char *fmt, ...)\n   RUST_ATTRIBUTE_GCC_DIAG (2, 3);\n extern void\n@@ -81,6 +85,9 @@ rust_close_quote ();\n // instead use the equivalent routines above. The back end is required to\n // implement these routines.\n \n+extern void\n+rust_be_internal_error_at (const Location, const std::string &errmsg)\n+  RUST_ATTRIBUTE_NORETURN;\n extern void\n rust_be_error_at (const Location, const std::string &errmsg);\n extern void"}, {"sha": "7106dd40185a43afe41aaa0c73ef83fb75a844ab", "filename": "gcc/rust/rust-gcc-diagnostics.cc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/228240f32114fbbc17b73b1e91f245177c5aacc7/gcc%2Frust%2Frust-gcc-diagnostics.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/228240f32114fbbc17b73b1e91f245177c5aacc7/gcc%2Frust%2Frust-gcc-diagnostics.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-gcc-diagnostics.cc?ref=228240f32114fbbc17b73b1e91f245177c5aacc7", "patch": "@@ -23,6 +23,16 @@\n \n #include \"options.h\"\n \n+void\n+rust_be_internal_error_at (const Location location, const std::string &errmsg)\n+{\n+  std::string loc_str = Linemap::location_to_string (location);\n+  if (loc_str.empty ())\n+    internal_error (\"%s\", errmsg.c_str ());\n+  else\n+    internal_error (\"at %s, %s\", loc_str.c_str (), errmsg.c_str ());\n+}\n+\n void\n rust_be_error_at (const Location location, const std::string &errmsg)\n {"}, {"sha": "fa690d70fa49863c5e356a0851c372e27357febe", "filename": "gcc/rust/rust-system.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/228240f32114fbbc17b73b1e91f245177c5aacc7/gcc%2Frust%2Frust-system.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/228240f32114fbbc17b73b1e91f245177c5aacc7/gcc%2Frust%2Frust-system.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-system.h?ref=228240f32114fbbc17b73b1e91f245177c5aacc7", "patch": "@@ -59,6 +59,8 @@\n #include \"diagnostic-core.h\" /* For error_at and friends.  */\n #include \"intl.h\"\t     /* For _().  */\n \n+#define RUST_ATTRIBUTE_NORETURN ATTRIBUTE_NORETURN\n+\n // File separator to use based on whether or not the OS we're working with is\n // DOS-based\n #if defined(HAVE_DOS_BASED_FILE_SYSTEM)"}]}