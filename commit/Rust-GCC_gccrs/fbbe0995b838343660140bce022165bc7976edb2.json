{"sha": "fbbe0995b838343660140bce022165bc7976edb2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJiZTA5OTViODM4MzQzNjYwMTQwYmNlMDIyMTY1YmM3OTc2ZWRiMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-09-20T16:48:29Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-09-20T16:48:29Z"}, "message": "re PR debug/45124 (No DW_AT_accessibility for public DIEs in DW_TAG_class_type)\n\n\tPR debug/45124\n\t* dwarf2out.c (add_accessibility_attribute): Assume\n\tDW_ACCESS_private as the default for dwarf_version > 2\n\tand DW_TAG_class_type parent.\n\t(gen_inheritance_die): Assume DW_ACCESS_public as the default\n\tfor dwarf_version > 2 and parent other than DW_TAG_class_type.\n\nFrom-SVN: r164442", "tree": {"sha": "f2c542b81e80fd9d4e87ace023ee9c2eb52ea824", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2c542b81e80fd9d4e87ace023ee9c2eb52ea824"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fbbe0995b838343660140bce022165bc7976edb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbbe0995b838343660140bce022165bc7976edb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbbe0995b838343660140bce022165bc7976edb2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbbe0995b838343660140bce022165bc7976edb2/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cce470f93d9a4fe30f28fb03fbe460e17933d752", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cce470f93d9a4fe30f28fb03fbe460e17933d752", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cce470f93d9a4fe30f28fb03fbe460e17933d752"}], "stats": {"total": 35, "additions": 33, "deletions": 2}, "files": [{"sha": "2ad185bce53b3cf2ea5c8b676fefacc58d3874c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbbe0995b838343660140bce022165bc7976edb2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbbe0995b838343660140bce022165bc7976edb2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fbbe0995b838343660140bce022165bc7976edb2", "patch": "@@ -1,3 +1,12 @@\n+2010-09-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/45124\n+\t* dwarf2out.c (add_accessibility_attribute): Assume\n+\tDW_ACCESS_private as the default for dwarf_version > 2\n+\tand DW_TAG_class_type parent.\n+\t(gen_inheritance_die): Assume DW_ACCESS_public as the default\n+\tfor dwarf_version > 2 and parent other than DW_TAG_class_type.\n+\n 2010-09-20  Rafael Carre   <rafael.carre@gmail.com>\n \n \tPR target/45726"}, {"sha": "963ba1f328c44c4c6aa67ae98ee8e6221f5b7de9", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbbe0995b838343660140bce022165bc7976edb2/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbbe0995b838343660140bce022165bc7976edb2/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=fbbe0995b838343660140bce022165bc7976edb2", "patch": "@@ -15921,10 +15921,22 @@ add_AT_location_description (dw_die_ref die, enum dwarf_attribute attr_kind,\n static void\n add_accessibility_attribute (dw_die_ref die, tree decl)\n {\n+  /* In DWARF3+ the default is DW_ACCESS_private only in DW_TAG_class_type\n+     children, otherwise the default is DW_ACCESS_public.  In DWARF2\n+     the default has always been DW_ACCESS_public.  */\n   if (TREE_PROTECTED (decl))\n     add_AT_unsigned (die, DW_AT_accessibility, DW_ACCESS_protected);\n   else if (TREE_PRIVATE (decl))\n-    add_AT_unsigned (die, DW_AT_accessibility, DW_ACCESS_private);\n+    {\n+      if (dwarf_version == 2\n+\t  || die->die_parent == NULL\n+\t  || die->die_parent->die_tag != DW_TAG_class_type)\n+\tadd_AT_unsigned (die, DW_AT_accessibility, DW_ACCESS_private);\n+    }\n+  else if (dwarf_version > 2\n+\t   && die->die_parent\n+\t   && die->die_parent->die_tag == DW_TAG_class_type)\n+    add_AT_unsigned (die, DW_AT_accessibility, DW_ACCESS_public);\n }\n \n /* Attach the specialized form of location attribute used for data members of\n@@ -19643,10 +19655,20 @@ gen_inheritance_die (tree binfo, tree access, dw_die_ref context_die)\n   if (BINFO_VIRTUAL_P (binfo))\n     add_AT_unsigned (die, DW_AT_virtuality, DW_VIRTUALITY_virtual);\n \n+  /* In DWARF3+ the default is DW_ACCESS_private only in DW_TAG_class_type\n+     children, otherwise the default is DW_ACCESS_public.  In DWARF2\n+     the default has always been DW_ACCESS_private.  */\n   if (access == access_public_node)\n-    add_AT_unsigned (die, DW_AT_accessibility, DW_ACCESS_public);\n+    {\n+      if (dwarf_version == 2\n+\t  || context_die->die_tag == DW_TAG_class_type)\n+      add_AT_unsigned (die, DW_AT_accessibility, DW_ACCESS_public);\n+    }\n   else if (access == access_protected_node)\n     add_AT_unsigned (die, DW_AT_accessibility, DW_ACCESS_protected);\n+  else if (dwarf_version > 2\n+\t   && context_die->die_tag != DW_TAG_class_type)\n+    add_AT_unsigned (die, DW_AT_accessibility, DW_ACCESS_private);\n }\n \n /* Generate a DIE for a class member.  */"}]}