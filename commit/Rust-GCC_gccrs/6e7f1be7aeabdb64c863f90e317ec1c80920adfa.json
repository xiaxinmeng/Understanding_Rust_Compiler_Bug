{"sha": "6e7f1be7aeabdb64c863f90e317ec1c80920adfa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmU3ZjFiZTdhZWFiZGI2NGM4NjNmOTBlMzE3ZWMxYzgwOTIwYWRmYQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2016-12-01T05:47:58Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2016-12-01T05:47:58Z"}, "message": "runtime: set isarchive in initsig\n    \n    The library initialization code in go-libmain.c sets the C variable\n    runtime_isarchive but failed to set the Go variable runtime.isarchive.\n    We don't currently have a way to let C code access an unexported Go\n    variable, but fortunately the only time the Go function initsig is\n    called with an argument of true is exactly where we want to set\n    isarchive.  So let initsig do it.\n    \n    Reviewed-on: https://go-review.googlesource.com/33753\n\nFrom-SVN: r243094", "tree": {"sha": "e58c2df7e7df5f0dc66335b432241c685482b0c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e58c2df7e7df5f0dc66335b432241c685482b0c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e7f1be7aeabdb64c863f90e317ec1c80920adfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e7f1be7aeabdb64c863f90e317ec1c80920adfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e7f1be7aeabdb64c863f90e317ec1c80920adfa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e7f1be7aeabdb64c863f90e317ec1c80920adfa/comments", "author": null, "committer": null, "parents": [{"sha": "974afa584b18a3713eb4ada1b5d657ca0f94f498", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/974afa584b18a3713eb4ada1b5d657ca0f94f498", "html_url": "https://github.com/Rust-GCC/gccrs/commit/974afa584b18a3713eb4ada1b5d657ca0f94f498"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "8f5f542fcebf6183c2650d5d5a83c23e4078c874", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7f1be7aeabdb64c863f90e317ec1c80920adfa/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7f1be7aeabdb64c863f90e317ec1c80920adfa/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=6e7f1be7aeabdb64c863f90e317ec1c80920adfa", "patch": "@@ -1,4 +1,4 @@\n-9be198d960e4bc46e21e4da1e3d4a1619266b8ab\n+97b949f249515a61d3c09e9e06f08c8af189e967\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "48c549104c4aa178021e3ee353b56b95ba592a8d", "filename": "libgo/go/runtime/signal1_unix.go", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7f1be7aeabdb64c863f90e317ec1c80920adfa/libgo%2Fgo%2Fruntime%2Fsignal1_unix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7f1be7aeabdb64c863f90e317ec1c80920adfa/libgo%2Fgo%2Fruntime%2Fsignal1_unix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fsignal1_unix.go?ref=6e7f1be7aeabdb64c863f90e317ec1c80920adfa", "patch": "@@ -65,6 +65,11 @@ var signalsOK bool\n //go:nosplit\n //go:nowritebarrierrec\n func initsig(preinit bool) {\n+\tif preinit {\n+\t\t// preinit is only passed as true if isarchive should be true.\n+\t\tisarchive = true\n+\t}\n+\n \tif !preinit {\n \t\t// It's now OK for signal handlers to run.\n \t\tsignalsOK = true"}]}