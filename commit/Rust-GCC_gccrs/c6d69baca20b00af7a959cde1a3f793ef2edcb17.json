{"sha": "c6d69baca20b00af7a959cde1a3f793ef2edcb17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZkNjliYWNhMjBiMDBhZjdhOTU5Y2RlMWEzZjc5M2VmMmVkY2IxNw==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "1999-12-21T06:10:20Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "1999-12-21T06:10:20Z"}, "message": "longlong.h (_ARCH_PPC): Only protect add_ssaaaa and sub_ddmmss with W_TYPE_SIZE == 32.\n\n        * longlong.h (_ARCH_PPC): Only protect add_ssaaaa and sub_ddmmss\n        with W_TYPE_SIZE == 32.  Do not fall through to POWER architecture\n        for umul_ppmm and smul_ppmm if !_ARCH_PPC and !_ARCH_POWER.\n\nFrom-SVN: r31044", "tree": {"sha": "f2482af2cc46f9192580df4c20943ae585f8e5ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2482af2cc46f9192580df4c20943ae585f8e5ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6d69baca20b00af7a959cde1a3f793ef2edcb17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6d69baca20b00af7a959cde1a3f793ef2edcb17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6d69baca20b00af7a959cde1a3f793ef2edcb17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6d69baca20b00af7a959cde1a3f793ef2edcb17/comments", "author": null, "committer": null, "parents": [{"sha": "f0bd6b8ed8bfbced9ad7720d34f0e5fe109cc565", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0bd6b8ed8bfbced9ad7720d34f0e5fe109cc565", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0bd6b8ed8bfbced9ad7720d34f0e5fe109cc565"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "c08ade98a06067fc7daf7096261cab32623a3126", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6d69baca20b00af7a959cde1a3f793ef2edcb17/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6d69baca20b00af7a959cde1a3f793ef2edcb17/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c6d69baca20b00af7a959cde1a3f793ef2edcb17", "patch": "@@ -1,3 +1,9 @@\n+Mon Dec 20 23:06:47 1999  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* longlong.h (_ARCH_PPC): Only protect add_ssaaaa and sub_ddmmss\n+\twith W_TYPE_SIZE == 32.  Do not fall through to POWER architecture\n+\tfor umul_ppmm and smul_ppmm if !_ARCH_PPC and !_ARCH_POWER.\n+\n Mon Dec 20 23:02:03 1999  Jeffrey A Law  (law@cygnus.com)\n \n \t* fold-const.c (real_hex_to_f): Remove unused \"isldouble\" variable."}, {"sha": "2cea66dd690cd375bd5f3ed152092709fbe75fb4", "filename": "gcc/longlong.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6d69baca20b00af7a959cde1a3f793ef2edcb17/gcc%2Flonglong.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6d69baca20b00af7a959cde1a3f793ef2edcb17/gcc%2Flonglong.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flonglong.h?ref=c6d69baca20b00af7a959cde1a3f793ef2edcb17", "patch": "@@ -758,7 +758,8 @@ UDItype __umulsidi3 (USItype, USItype);\n   } while (0)\n #endif /* __ns32000__ */\n \n-#if (defined (_ARCH_PPC) || defined (_IBMR2)) && W_TYPE_SIZE == 32\n+#if (defined (_ARCH_PPC) || defined (_IBMR2))\n+#if W_TYPE_SIZE == 32\n #define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n   do {\t\t\t\t\t\t\t\t\t\\\n     if (__builtin_constant_p (bh) && (bh) == 0)\t\t\t\t\\\n@@ -823,6 +824,7 @@ UDItype __umulsidi3 (USItype, USItype);\n \t\t \"rI\" ((USItype) (al)),\t\t\t\t\t\\\n \t\t \"r\" ((USItype) (bl)));\t\t\t\t\t\\\n   } while (0)\n+#endif /* W_TYPE_SIZE */\n #define count_leading_zeros(count, x) \\\n   __asm__ (\"{cntlz|cntlzw} %0,%1\"\t\t\t\t\t\\\n \t   : \"=r\" ((USItype) (count))\t\t\t\t\t\\\n@@ -850,7 +852,7 @@ UDItype __umulsidi3 (USItype, USItype);\n   } while (0)\n #define SMUL_TIME 14\n #define UDIV_TIME 120\n-#else\n+#elif defined (_ARCH_POWER)\n #define umul_ppmm(xh, xl, m0, m1) \\\n   do {\t\t\t\t\t\t\t\t\t\\\n     USItype __m0 = (m0), __m1 = (m1);\t\t\t\t\t\\"}]}