{"sha": "9f5897866862e760d8276fc1ef7979852f83a86a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY1ODk3ODY2ODYyZTc2MGQ4Mjc2ZmMxZWY3OTc5ODUyZjgzYTg2YQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2016-08-23T16:51:57Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2016-08-23T16:51:57Z"}, "message": "selftest.h: add ASSERT_STR_CONTAINS\n\ngcc/ChangeLog:\n\t* selftest.c (selftest::assert_str_contains): New function.\n\t(selftest::test_assertions): Verify ASSERT_STR_CONTAINS.\n\t* selftest.h (selftest::assert_str_contains): New decl.\n\t(ASSERT_STR_CONTAINS): New macro.\n\nFrom-SVN: r239707", "tree": {"sha": "f17d1999677ddbab47de54aad4f2b81fe533d38e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f17d1999677ddbab47de54aad4f2b81fe533d38e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f5897866862e760d8276fc1ef7979852f83a86a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f5897866862e760d8276fc1ef7979852f83a86a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f5897866862e760d8276fc1ef7979852f83a86a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f5897866862e760d8276fc1ef7979852f83a86a/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a181ec03012c1884f45482ba2d5b8cd00ef96a71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a181ec03012c1884f45482ba2d5b8cd00ef96a71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a181ec03012c1884f45482ba2d5b8cd00ef96a71"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "d5016e90c7b7e166be6a15c14759fdc547976037", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f5897866862e760d8276fc1ef7979852f83a86a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f5897866862e760d8276fc1ef7979852f83a86a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f5897866862e760d8276fc1ef7979852f83a86a", "patch": "@@ -1,3 +1,10 @@\n+2016-08-23  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* selftest.c (selftest::assert_str_contains): New function.\n+\t(selftest::test_assertions): Verify ASSERT_STR_CONTAINS.\n+\t* selftest.h (selftest::assert_str_contains): New decl.\n+\t(ASSERT_STR_CONTAINS): New macro.\n+\n 2016-08-23  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/77286"}, {"sha": "629db98b9f6d616c960b9764c375ec37d4da2cd9", "filename": "gcc/selftest.c", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f5897866862e760d8276fc1ef7979852f83a86a/gcc%2Fselftest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f5897866862e760d8276fc1ef7979852f83a86a/gcc%2Fselftest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fselftest.c?ref=9f5897866862e760d8276fc1ef7979852f83a86a", "patch": "@@ -87,6 +87,39 @@ selftest::assert_streq (const location &loc,\n \t desc_expected, desc_actual, val_expected, val_actual);\n }\n \n+/* Implementation detail of ASSERT_STR_CONTAINS.\n+   Use strstr to determine if val_needle is is within val_haystack.\n+   ::selftest::pass if it is found.\n+   ::selftest::fail if it is not found.  */\n+\n+void\n+selftest::assert_str_contains (const location &loc,\n+\t\t\t       const char *desc_haystack,\n+\t\t\t       const char *desc_needle,\n+\t\t\t       const char *val_haystack,\n+\t\t\t       const char *val_needle)\n+{\n+  /* If val_haystack is NULL, fail with a custom error message.  */\n+  if (val_haystack == NULL)\n+    ::selftest::fail_formatted\n+\t(loc, \"ASSERT_STR_CONTAINS (%s, %s) haystack=NULL\",\n+\t desc_haystack, desc_needle);\n+\n+  /* If val_needle is NULL, fail with a custom error message.  */\n+  if (val_needle == NULL)\n+    ::selftest::fail_formatted\n+\t(loc, \"ASSERT_STR_CONTAINS (%s, %s) haystack=\\\"%s\\\" needle=NULL\",\n+\t desc_haystack, desc_needle, val_haystack);\n+\n+  const char *test = strstr (val_haystack, val_needle);\n+  if (test)\n+    ::selftest::pass (loc, \"ASSERT_STR_CONTAINS\");\n+  else\n+    ::selftest::fail_formatted\n+\t(loc, \"ASSERT_STR_CONTAINS (%s, %s) haystack=\\\"%s\\\" needle=\\\"%s\\\"\",\n+\t desc_haystack, desc_needle, val_haystack, val_needle);\n+}\n+\n /* Constructor.  Create a tempfile using SUFFIX, and write CONTENT to\n    it.  Abort if anything goes wrong, using LOC as the effective\n    location in the problem report.  */\n@@ -131,6 +164,7 @@ test_assertions ()\n   ASSERT_NE (1, 2);\n   ASSERT_STREQ (\"test\", \"test\");\n   ASSERT_STREQ_AT (SELFTEST_LOCATION, \"test\", \"test\");\n+  ASSERT_STR_CONTAINS (\"foo bar baz\", \"bar\");\n }\n \n /* Run all of the selftests within this file.  */"}, {"sha": "b073ed6e03d9ff8f618996e960777c481becf315", "filename": "gcc/selftest.h", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f5897866862e760d8276fc1ef7979852f83a86a/gcc%2Fselftest.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f5897866862e760d8276fc1ef7979852f83a86a/gcc%2Fselftest.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fselftest.h?ref=9f5897866862e760d8276fc1ef7979852f83a86a", "patch": "@@ -69,6 +69,14 @@ extern void assert_streq (const location &loc,\n \t\t\t  const char *desc_expected, const char *desc_actual,\n \t\t\t  const char *val_expected, const char *val_actual);\n \n+/* Implementation detail of ASSERT_STR_CONTAINS.  */\n+\n+extern void assert_str_contains (const location &loc,\n+\t\t\t\t const char *desc_haystack,\n+\t\t\t\t const char *desc_needle,\n+\t\t\t\t const char *val_haystack,\n+\t\t\t\t const char *val_needle);\n+\n /* A class for writing out a temporary sourcefile for use in selftests\n    of input handling.  */\n \n@@ -249,6 +257,17 @@ extern int num_passes;\n \t\t\t    (EXPECTED), (ACTUAL));\t\t    \\\n   SELFTEST_END_STMT\n \n+/* Evaluate HAYSTACK and NEEDLE and use strstr to determine if NEEDLE\n+   is within HAYSTACK.\n+   ::selftest::pass if NEEDLE is found.\n+   ::selftest::fail if it is not found.  */\n+\n+#define ASSERT_STR_CONTAINS(HAYSTACK, NEEDLE)\t\t\t\t\\\n+  SELFTEST_BEGIN_STMT\t\t\t\t\t\t\t\\\n+  ::selftest::assert_str_contains (SELFTEST_LOCATION, #HAYSTACK, #NEEDLE, \\\n+\t\t\t\t   (HAYSTACK), (NEEDLE));\t\t\\\n+  SELFTEST_END_STMT\n+\n /* Evaluate PRED1 (VAL1), calling ::selftest::pass if it is true,\n    ::selftest::fail if it is false.  */\n "}]}