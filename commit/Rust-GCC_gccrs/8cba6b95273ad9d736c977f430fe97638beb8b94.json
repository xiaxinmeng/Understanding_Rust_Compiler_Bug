{"sha": "8cba6b95273ad9d736c977f430fe97638beb8b94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNiYTZiOTUyNzNhZDlkNzM2Yzk3N2Y0MzBmZTk3NjM4YmViOGI5NA==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2015-09-03T11:00:56Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2015-09-03T11:00:56Z"}, "message": "Handle simple latch bb in expand_omp_for_static_chunk\n\n2015-09-03  Tom de Vries  <tom@codesourcery.com>\n\n\t* omp-low.c (expand_omp_for_static_chunk): Handle simple latch bb.\n\nFrom-SVN: r227435", "tree": {"sha": "0bb96e9029a21ab6591031dd9105fa23c12c3526", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0bb96e9029a21ab6591031dd9105fa23c12c3526"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8cba6b95273ad9d736c977f430fe97638beb8b94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cba6b95273ad9d736c977f430fe97638beb8b94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cba6b95273ad9d736c977f430fe97638beb8b94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cba6b95273ad9d736c977f430fe97638beb8b94/comments", "author": null, "committer": null, "parents": [{"sha": "f7f186847d9a170f1f1926e77cc4f00c7ca0b92b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7f186847d9a170f1f1926e77cc4f00c7ca0b92b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7f186847d9a170f1f1926e77cc4f00c7ca0b92b"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "86317e3e165572244734218088c5354f5eddd0b8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cba6b95273ad9d736c977f430fe97638beb8b94/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cba6b95273ad9d736c977f430fe97638beb8b94/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8cba6b95273ad9d736c977f430fe97638beb8b94", "patch": "@@ -1,3 +1,7 @@\n+2015-09-03  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* omp-low.c (expand_omp_for_static_chunk): Handle simple latch bb.\n+\n 2015-09-03  Tom de Vries  <tom@codesourcery.com>\n \n \t* doc/invoke.texi (parloops-chunk-size): Add item."}, {"sha": "16d192201920d045b53b5980beed365e83695f34", "filename": "gcc/omp-low.c", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cba6b95273ad9d736c977f430fe97638beb8b94/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cba6b95273ad9d736c977f430fe97638beb8b94/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=8cba6b95273ad9d736c977f430fe97638beb8b94", "patch": "@@ -6960,7 +6960,8 @@ expand_omp_for_static_chunk (struct omp_region *region,\n   body_bb = single_succ (seq_start_bb);\n   if (!broken_loop)\n     {\n-      gcc_assert (BRANCH_EDGE (cont_bb)->dest == body_bb);\n+      gcc_assert (BRANCH_EDGE (cont_bb)->dest == body_bb\n+\t\t  || single_succ (BRANCH_EDGE (cont_bb)->dest) == body_bb);\n       gcc_assert (EDGE_COUNT (cont_bb->succs) == 2);\n       trip_update_bb = split_edge (FALLTHRU_EDGE (cont_bb));\n     }\n@@ -7261,6 +7262,11 @@ expand_omp_for_static_chunk (struct omp_region *region,\n   if (!broken_loop)\n     {\n       se = find_edge (cont_bb, body_bb);\n+      if (se == NULL)\n+\t{\n+\t  se = BRANCH_EDGE (cont_bb);\n+\t  gcc_assert (single_succ (se->dest) == body_bb);\n+\t}\n       if (gimple_omp_for_combined_p (fd->for_stmt))\n \t{\n \t  remove_edge (se);\n@@ -7351,14 +7357,24 @@ expand_omp_for_static_chunk (struct omp_region *region,\n \n   if (!broken_loop)\n     {\n+      struct loop *loop = body_bb->loop_father;\n       struct loop *trip_loop = alloc_loop ();\n       trip_loop->header = iter_part_bb;\n       trip_loop->latch = trip_update_bb;\n       add_loop (trip_loop, iter_part_bb->loop_father);\n \n+      if (loop != entry_bb->loop_father)\n+\t{\n+\t  gcc_assert (loop->header == body_bb);\n+\t  gcc_assert (loop->latch == region->cont\n+\t\t      || single_pred (loop->latch) == region->cont);\n+\t  trip_loop->inner = loop;\n+\t  return;\n+\t}\n+\n       if (!gimple_omp_for_combined_p (fd->for_stmt))\n \t{\n-\t  struct loop *loop = alloc_loop ();\n+\t  loop = alloc_loop ();\n \t  loop->header = body_bb;\n \t  if (collapse_bb == NULL)\n \t    loop->latch = cont_bb;"}]}