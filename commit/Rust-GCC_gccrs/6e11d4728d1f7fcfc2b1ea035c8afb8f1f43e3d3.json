{"sha": "6e11d4728d1f7fcfc2b1ea035c8afb8f1f43e3d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmUxMWQ0NzI4ZDFmN2ZjZmMyYjFlYTAzNWM4YWZiOGYxZjQzZTNkMw==", "commit": {"author": {"name": "Manfred Hollstein", "email": "manfred@s-direktnet.de", "date": "1998-03-12T00:43:12Z"}, "committer": {"name": "Manfred Hollstein", "email": "manfred@gcc.gnu.org", "date": "1998-03-12T00:43:12Z"}, "message": "a\nIn gcc/:\n\t* i386.h (RTX_COSTS): Insert braces around nested if.\n\t(ADDITIONAL_REGISTER_NAMES): Insert braces around structured\n\telements.\n\t* gcc.c (default_compilers): Properly put brackets around array elements in\n\tinitializer.\n\t* getopt.c (_getopt_internal): Add explicit braces around nested if;\n\treformatted.\n\t* reg-stack.c (record_asm_reg_life): Add explicit braces around nested if's.\n\t(record_reg_life_pat): Add explicit parens around && and || in expression.\n\t(stack_reg_life_analysis): Add parens around assignment used as expression.\n\t(convert_regs): Likewise.\nIn gcc/cp/:\n\t* lang-specs.h: Properly put brackets around array elements in initializer.\n\t* typeck.c (build_binary_op_nodefault): Correctly place parens around\n\t&& and || in expression.\nIn gcc/f/:\n\t* lang-specs.h: Properly put brackets around array elements in initializer.\n\nFrom-SVN: r18502", "tree": {"sha": "95657c34bc8cd2750e2f3857a3077fcf006b5549", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95657c34bc8cd2750e2f3857a3077fcf006b5549"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e11d4728d1f7fcfc2b1ea035c8afb8f1f43e3d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e11d4728d1f7fcfc2b1ea035c8afb8f1f43e3d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e11d4728d1f7fcfc2b1ea035c8afb8f1f43e3d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e11d4728d1f7fcfc2b1ea035c8afb8f1f43e3d3/comments", "author": null, "committer": null, "parents": [{"sha": "c8a52e3145a94afb88425e8637ce1b6b5651769b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8a52e3145a94afb88425e8637ce1b6b5651769b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8a52e3145a94afb88425e8637ce1b6b5651769b"}], "stats": {"total": 62, "additions": 33, "deletions": 29}, "files": [{"sha": "70b2e3714604a286a12a55985b52185e4178fa87", "filename": "gcc/f/ChangeLog.egcs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e11d4728d1f7fcfc2b1ea035c8afb8f1f43e3d3/gcc%2Ff%2FChangeLog.egcs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e11d4728d1f7fcfc2b1ea035c8afb8f1f43e3d3/gcc%2Ff%2FChangeLog.egcs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog.egcs?ref=6e11d4728d1f7fcfc2b1ea035c8afb8f1f43e3d3", "patch": "@@ -1,3 +1,7 @@\n+Thu Mar 12 09:39:40 1998  Manfred Hollstein  <manfred@s-direktnet.de>\n+\n+\t* lang-specs.h: Properly put brackets around array elements in initializer.\n+\n Wed Mar  4 17:38:21 1998  Jeffrey A Law  (law@cygnus.com)\n \n \t* Make-lang.in: Remove more references to libf77."}, {"sha": "1b0b9fa9da99ca5ef8f52147e417f89d0a31584d", "filename": "gcc/gcc.c", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e11d4728d1f7fcfc2b1ea035c8afb8f1f43e3d3/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e11d4728d1f7fcfc2b1ea035c8afb8f1f43e3d3/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=6e11d4728d1f7fcfc2b1ea035c8afb8f1f43e3d3", "patch": "@@ -572,15 +572,15 @@ static struct compiler default_compilers[] =\n      were not present when we built the driver, we will hit these copies\n      and be given a more meaningful error than \"file not used since\n      linking is not done\".  */\n-  {\".cc\", \"#C++\"}, {\".cxx\", \"#C++\"}, {\".cpp\", \"#C++\"}, {\".c++\", \"#C++\"},\n-  {\".C\", \"#C++\"}, {\".ads\", \"#Ada\"}, {\".adb\", \"#Ada\"}, {\".ada\", \"#Ada\"},\n-  {\".f\", \"#Fortran\"}, {\".for\", \"#Fortran\"}, {\".F\", \"#Fortran\"},\n-  {\".fpp\", \"#Fortran\"},\n-  {\".p\", \"#Pascal\"}, {\".pas\", \"#Pascal\"},\n+  {\".cc\", {\"#C++\"}}, {\".cxx\", {\"#C++\"}}, {\".cpp\", {\"#C++\"}}, {\".c++\", {\"#C++\"}},\n+  {\".C\", {\"#C++\"}}, {\".ads\", {\"#Ada\"}}, {\".adb\", {\"#Ada\"}}, {\".ada\", {\"#Ada\"}},\n+  {\".f\", {\"#Fortran\"}}, {\".for\", {\"#Fortran\"}}, {\".F\", {\"#Fortran\"}},\n+  {\".fpp\", {\"#Fortran\"}},\n+  {\".p\", {\"#Pascal\"}}, {\".pas\", {\"#Pascal\"}},\n   /* Next come the entries for C.  */\n-  {\".c\", \"@c\"},\n+  {\".c\", {\"@c\"}},\n   {\"@c\",\n-   \"cpp -lang-c%{ansi:89} %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %I\\\n+   {\"cpp -lang-c%{ansi:89} %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %I\\\n \t%{C:%{!E:%eGNU C does not support -C without using -E}}\\\n \t%{M} %{MM} %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG}\\\n         -undef -D__GNUC__=%v1 -D__GNUC_MINOR__=%v2\\\n@@ -591,7 +591,7 @@ static struct compiler default_compilers[] =\n         %{traditional-cpp:-traditional}\\\n \t%{g*} %{W*} %{w} %{pedantic*} %{H} %{d*} %C %{D*} %{U*} %{i*} %Z\\\n         %i %{!M:%{!MM:%{!E:%{!pipe:%g.i}}}}%{E:%W{o*}}%{M:%W{o*}}%{MM:%W{o*}} |\\n\",\n-   \"%{!M:%{!MM:%{!E:cc1 %{!pipe:%g.i} %1 \\\n+    \"%{!M:%{!MM:%{!E:cc1 %{!pipe:%g.i} %1 \\\n \t\t   %{!Q:-quiet} -dumpbase %b.c %{d*} %{m*} %{a*}\\\n \t\t   %{g*} %{O*} %{W*} %{w} %{pedantic*} %{ansi} \\\n \t\t   %{traditional} %{v:-version} %{pg:-p} %{p} %{f*}\\\n@@ -600,9 +600,9 @@ static struct compiler default_compilers[] =\n \t\t   %{S:%W{o*}%{!o*:-o %b.s}}%{!S:-o %{|!pipe:%g.s}} |\\n\\\n               %{!S:as %a %Y\\\n \t\t      %{c:%W{o*}%{!o*:-o %w%b%O}}%{!c:-o %d%w%u%O}\\\n-                      %{!pipe:%g.s} %A\\n }}}}\"},\n+                      %{!pipe:%g.s} %A\\n }}}}\"}},\n   {\"-\",\n-   \"%{E:cpp -lang-c%{ansi:89} %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %I\\\n+   {\"%{E:cpp -lang-c%{ansi:89} %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %I\\\n \t%{C:%{!E:%eGNU C does not support -C without using -E}}\\\n \t%{M} %{MM} %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG}\\\n         -undef -D__GNUC__=%v1 -D__GNUC_MINOR__=%v2\\\n@@ -613,10 +613,10 @@ static struct compiler default_compilers[] =\n         %{traditional-cpp:-traditional}\\\n \t%{g*} %{W*} %{w} %{pedantic*} %{H} %{d*} %C %{D*} %{U*} %{i*} %Z\\\n         %i %W{o*}}\\\n-    %{!E:%e-E required when input is from standard input}\"},\n-  {\".m\", \"@objective-c\"},\n+    %{!E:%e-E required when input is from standard input}\"}},\n+  {\".m\", {\"@objective-c\"}},\n   {\"@objective-c\",\n-   \"cpp -lang-objc %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %I\\\n+   {\"cpp -lang-objc %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %I\\\n \t%{C:%{!E:%eGNU C does not support -C without using -E}}\\\n \t%{M} %{MM} %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG}\\\n         -undef -D__OBJC__ -D__GNUC__=%v1 -D__GNUC_MINOR__=%v2\\\n@@ -627,7 +627,7 @@ static struct compiler default_compilers[] =\n         %{traditional-cpp:-traditional}\\\n \t%{g*} %{W*} %{w} %{pedantic*} %{H} %{d*} %C %{D*} %{U*} %{i*} %Z\\\n         %i %{!M:%{!MM:%{!E:%{!pipe:%g.i}}}}%{E:%W{o*}}%{M:%W{o*}}%{MM:%W{o*}} |\\n\",\n-   \"%{!M:%{!MM:%{!E:cc1obj %{!pipe:%g.i} %1 \\\n+    \"%{!M:%{!MM:%{!E:cc1obj %{!pipe:%g.i} %1 \\\n \t\t   %{!Q:-quiet} -dumpbase %b.m %{d*} %{m*} %{a*}\\\n \t\t   %{g*} %{O*} %{W*} %{w} %{pedantic*} %{ansi} \\\n \t\t   %{traditional} %{v:-version} %{pg:-p} %{p} %{f*} \\\n@@ -637,10 +637,10 @@ static struct compiler default_compilers[] =\n \t\t   %{S:%W{o*}%{!o*:-o %b.s}}%{!S:-o %{|!pipe:%g.s}} |\\n\\\n               %{!S:as %a %Y\\\n \t\t      %{c:%W{o*}%{!o*:-o %w%b%O}}%{!c:-o %d%w%u%O}\\\n-                      %{!pipe:%g.s} %A\\n }}}}\"},\n-  {\".h\", \"@c-header\"},\n+                      %{!pipe:%g.s} %A\\n }}}}\"}},\n+  {\".h\", {\"@c-header\"}},\n   {\"@c-header\",\n-   \"%{!E:%eCompilation of header file requested} \\\n+   {\"%{!E:%eCompilation of header file requested} \\\n     cpp %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %I\\\n \t%{C:%{!E:%eGNU C does not support -C without using -E}}\\\n \t %{M} %{MM} %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG}\\\n@@ -651,26 +651,26 @@ static struct compiler default_compilers[] =\n         %{traditional} %{ftraditional:-traditional}\\\n         %{traditional-cpp:-traditional}\\\n \t%{g*} %{W*} %{w} %{pedantic*} %{H} %{d*} %C %{D*} %{U*} %{i*} %Z\\\n-        %i %W{o*}\"},\n-  {\".i\", \"@cpp-output\"},\n+        %i %W{o*}\"}},\n+  {\".i\", {\"@cpp-output\"}},\n   {\"@cpp-output\",\n-   \"%{!M:%{!MM:%{!E:cc1 %i %1 %{!Q:-quiet} %{d*} %{m*} %{a*}\\\n+   {\"%{!M:%{!MM:%{!E:cc1 %i %1 %{!Q:-quiet} %{d*} %{m*} %{a*}\\\n \t\t\t%{g*} %{O*} %{W*} %{w} %{pedantic*} %{ansi}\\\n \t\t\t%{traditional} %{v:-version} %{pg:-p} %{p} %{f*}\\\n \t\t\t%{aux-info*}\\\n \t\t\t%{pg:%{fomit-frame-pointer:%e-pg and -fomit-frame-pointer are incompatible}}\\\n \t\t\t%{S:%W{o*}%{!o*:-o %b.s}}%{!S:-o %{|!pipe:%g.s}} |\\n\\\n \t\t     %{!S:as %a %Y\\\n \t\t\t     %{c:%W{o*}%{!o*:-o %w%b%O}}%{!c:-o %d%w%u%O}\\\n-\t\t\t     %{!pipe:%g.s} %A\\n }}}}\"},\n-  {\".s\", \"@assembler\"},\n+\t\t\t     %{!pipe:%g.s} %A\\n }}}}\"}},\n+  {\".s\", {\"@assembler\"}},\n   {\"@assembler\",\n-   \"%{!M:%{!MM:%{!E:%{!S:as %a %Y\\\n+   {\"%{!M:%{!MM:%{!E:%{!S:as %a %Y\\\n \t\t            %{c:%W{o*}%{!o*:-o %w%b%O}}%{!c:-o %d%w%u%O}\\\n-\t\t\t    %i %A\\n }}}}\"},\n-  {\".S\", \"@assembler-with-cpp\"},\n+\t\t\t    %i %A\\n }}}}\"}},\n+  {\".S\", {\"@assembler-with-cpp\"}},\n   {\"@assembler-with-cpp\",\n-   \"cpp -lang-asm %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %I\\\n+   {\"cpp -lang-asm %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %I\\\n \t%{C:%{!E:%eGNU C does not support -C without using -E}}\\\n \t%{M} %{MM} %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG} %{trigraphs}\\\n         -undef -$ %{!undef:%p %P} -D__ASSEMBLER__ \\\n@@ -679,12 +679,12 @@ static struct compiler default_compilers[] =\n         %{traditional-cpp:-traditional}\\\n \t%{g*} %{W*} %{w} %{pedantic*} %{H} %{d*} %C %{D*} %{U*} %{i*} %Z\\\n         %i %{!M:%{!MM:%{!E:%{!pipe:%g.s}}}}%{E:%W{o*}}%{M:%W{o*}}%{MM:%W{o*}} |\\n\",\n-   \"%{!M:%{!MM:%{!E:%{!S:as %a %Y\\\n+    \"%{!M:%{!MM:%{!E:%{!S:as %a %Y\\\n                     %{c:%W{o*}%{!o*:-o %w%b%O}}%{!c:-o %d%w%u%O}\\\n-\t\t    %{!pipe:%g.s} %A\\n }}}}\"},\n+\t\t    %{!pipe:%g.s} %A\\n }}}}\"}},\n #include \"specs.h\"\n   /* Mark end of table */\n-  {0, 0}\n+  {0, {0}}\n };\n \n /* Number of elements in default_compilers, not counting the terminator.  */"}]}