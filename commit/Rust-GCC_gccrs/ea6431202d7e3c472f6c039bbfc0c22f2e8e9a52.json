{"sha": "ea6431202d7e3c472f6c039bbfc0c22f2e8e9a52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE2NDMxMjAyZDdlM2M0NzJmNmMwMzliYmZjMGMyMmYyZThlOWE1Mg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2006-05-01T15:07:25Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-05-01T15:07:25Z"}, "message": "re PR target/26726 (-fivopts producing out of bounds array refs)\n\n2006-05-01  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/26726\n\t* tree-ssa-loop-ivopts.c (idx_find_step): Mark source of the\n\tproblem ...\n\t(find_interesting_uses_address): ... we work around here\n\tby folding INDIRECT_REFs in the substituted base.\n\n\t* g++.dg/tree-ssa/ivopts-1.C: New testcase.\n\nFrom-SVN: r113414", "tree": {"sha": "18fe0f5c1c17a977a97040b0f6c41c4d08816eac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18fe0f5c1c17a977a97040b0f6c41c4d08816eac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea6431202d7e3c472f6c039bbfc0c22f2e8e9a52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea6431202d7e3c472f6c039bbfc0c22f2e8e9a52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea6431202d7e3c472f6c039bbfc0c22f2e8e9a52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea6431202d7e3c472f6c039bbfc0c22f2e8e9a52/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d814595c2c47096eb70ff15fffadc5218806aaec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d814595c2c47096eb70ff15fffadc5218806aaec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d814595c2c47096eb70ff15fffadc5218806aaec"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "ac99122374bed03468eb40366e49b5e715193fcc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea6431202d7e3c472f6c039bbfc0c22f2e8e9a52/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea6431202d7e3c472f6c039bbfc0c22f2e8e9a52/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ea6431202d7e3c472f6c039bbfc0c22f2e8e9a52", "patch": "@@ -1,3 +1,11 @@\n+2006-05-01  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/26726\n+\t* tree-ssa-loop-ivopts.c (idx_find_step): Mark source of the\n+\tproblem ...\n+\t(find_interesting_uses_address): ... we work around here\n+\tby folding INDIRECT_REFs in the substituted base.\n+\n 2006-05-01  Diego Novillo  <dnovillo@redhat.com>\n \n \t* omp-low.c (dump_omp_region): Add newlines."}, {"sha": "15c7c63268c2dbb73d1108e67c304a1e58bd487e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea6431202d7e3c472f6c039bbfc0c22f2e8e9a52/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea6431202d7e3c472f6c039bbfc0c22f2e8e9a52/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ea6431202d7e3c472f6c039bbfc0c22f2e8e9a52", "patch": "@@ -1,3 +1,8 @@\n+2006-05-01  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/26726\n+\t* g++.dg/tree-ssa/ivopts-1.C: New testcase.\n+\n 2006-04-30  Roger Sayle  <roger@eyesopen.com>\n \n \t* gcc.dg/Woverflow-1.c: New test case."}, {"sha": "b894552f5b14507fbdb5a998fe2b6293853ac3c9", "filename": "gcc/testsuite/g++.dg/tree-ssa/ivopts-1.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea6431202d7e3c472f6c039bbfc0c22f2e8e9a52/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fivopts-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea6431202d7e3c472f6c039bbfc0c22f2e8e9a52/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fivopts-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fivopts-1.C?ref=ea6431202d7e3c472f6c039bbfc0c22f2e8e9a52", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-ivopts\" } */\n+\n+struct Foo {\n+  Foo() : s(1) {}\n+  int s;\n+};\n+void foo(Foo&);\n+void bar(void)\n+{\n+  Foo x[4];\n+  foo(x[0]);\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"-&x\" \"ivopts\" } } */\n+/* { dg-final { scan-tree-dump-not \"offset: -4B\" \"ivopts\" { xfail i?86-*-* x86_64-*-* } } } */\n+/* { dg-final { scan-tree-dump-not \"&x\\\\\\[5\\\\\\]\" \"ivopts\" { xfail i?86-*-* x86_64-*-* } } } */\n+/* { dg-final { cleanup-tree-dump \"ivopts\" } } */"}, {"sha": "75d54077a234c600c9350e1d13ab00ad59264306", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea6431202d7e3c472f6c039bbfc0c22f2e8e9a52/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea6431202d7e3c472f6c039bbfc0c22f2e8e9a52/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=ea6431202d7e3c472f6c039bbfc0c22f2e8e9a52", "patch": "@@ -1376,6 +1376,9 @@ idx_find_step (tree base, tree *idx, void *data)\n   if (!iv)\n     return false;\n \n+  /* XXX  We produce for a base of *D42 with iv->base being &x[0]\n+\t  *&x[0], which is not folded and does not trigger the\n+\t  ARRAY_REF path below.  */\n   *idx = iv->base;\n \n   if (!iv->step)\n@@ -1547,6 +1550,17 @@ find_interesting_uses_address (struct ivopts_data *data, tree stmt, tree *op_p)\n       gcc_assert (TREE_CODE (base) != MISALIGNED_INDIRECT_REF);\n \n       base = build_fold_addr_expr (base);\n+\n+      /* Substituting bases of IVs into the base expression might\n+\t have caused folding opportunities.  */\n+      if (TREE_CODE (base) == ADDR_EXPR)\n+\t{\n+\t  tree *ref = &TREE_OPERAND (base, 0);\n+\t  while (handled_component_p (*ref))\n+\t    ref = &TREE_OPERAND (*ref, 0);\n+\t  if (TREE_CODE (*ref) == INDIRECT_REF)\n+\t    *ref = fold_indirect_ref (*ref);\n+\t}\n     }\n \n   civ = alloc_iv (base, step);"}]}