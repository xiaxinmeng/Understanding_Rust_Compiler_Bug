{"sha": "18f3f864d38d18ffbdfdbc2e7f3c75b06d101565", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThmM2Y4NjRkMzhkMThmZmJkZmRiYzJlN2YzYzc1YjA2ZDEwMTU2NQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-10-31T11:32:02Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-10-31T11:32:02Z"}, "message": "jump.c (jump_optimize): Initialize mappings from INSN_UID to EH region if...\n\n        * jump.c (jump_optimize): Initialize mappings from INSN_UID to\n        EH region if exceptions are enabled and we're performing cross\n        jump optimizations.\n        (find_cross_jump): Exit loop if the insns are in different EH regions.\n\nFrom-SVN: r23475", "tree": {"sha": "db41ab1fea7ff239a47bc4fcb9f89ba400f3d069", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db41ab1fea7ff239a47bc4fcb9f89ba400f3d069"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18f3f864d38d18ffbdfdbc2e7f3c75b06d101565", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18f3f864d38d18ffbdfdbc2e7f3c75b06d101565", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18f3f864d38d18ffbdfdbc2e7f3c75b06d101565", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18f3f864d38d18ffbdfdbc2e7f3c75b06d101565/comments", "author": null, "committer": null, "parents": [{"sha": "21af493bcded59ae22f6c5d54d1f3ce1aa97d2f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21af493bcded59ae22f6c5d54d1f3ce1aa97d2f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21af493bcded59ae22f6c5d54d1f3ce1aa97d2f7"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "4b89ef3d161a87c2cc01f8dc9a044d6bff9d2c82", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18f3f864d38d18ffbdfdbc2e7f3c75b06d101565/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18f3f864d38d18ffbdfdbc2e7f3c75b06d101565/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=18f3f864d38d18ffbdfdbc2e7f3c75b06d101565", "patch": "@@ -1,3 +1,10 @@\n+Sat Oct 31 12:30:02 1998  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* jump.c (jump_optimize): Initialize mappings from INSN_UID to\n+\tEH region if exceptions are enabled and we're performing cross\n+\tjump optimizations.\n+\t(find_cross_jump): Exit loop if the insns are in different EH regions.\n+\n Sat Oct 31 10:02:48 1998  Mark Mitchell  <mark@markmitchell.com>\n \n \t* dwarf2out.c (output_call_frame_info): Use"}, {"sha": "18696ec8806f208e1f4529569a914bc1b097bf5a", "filename": "gcc/jump.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18f3f864d38d18ffbdfdbc2e7f3c75b06d101565/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18f3f864d38d18ffbdfdbc2e7f3c75b06d101565/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=18f3f864d38d18ffbdfdbc2e7f3c75b06d101565", "patch": "@@ -182,6 +182,12 @@ jump_optimize (f, cross_jump, noop_moves, after_regscan)\n \n   max_uid++;\n \n+  /* If we are performing cross jump optimizations, then initialize\n+     tables mapping UIDs to EH regions to avoid incorrect movement\n+     of insns from one EH region to another.  */\n+  if (flag_exceptions && cross_jump)\n+    init_insn_eh_region (f, max_uid);\n+\n   /* Delete insns following barriers, up to next label.  */\n \n   for (insn = f; insn;)\n@@ -2715,6 +2721,13 @@ find_cross_jump (e1, e2, minimum, f1, f2)\n       if (i2 == 0 || GET_CODE (i1) != GET_CODE (i2))\n \tbreak;\n \n+      /* Avoid moving insns across EH regions if either of the insns\n+\t can throw.  */\n+      if (flag_exceptions\n+\t  && (asynchronous_exceptions || GET_CODE (i1) == CALL_INSN)\n+\t  && !in_same_eh_region (i1, i2))\n+\tbreak;\n+\n       p1 = PATTERN (i1);\n       p2 = PATTERN (i2);\n \t"}]}