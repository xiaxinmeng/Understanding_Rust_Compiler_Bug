{"sha": "2ead7928a24970eb69b5c9716a46673cde2c783b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmVhZDc5MjhhMjQ5NzBlYjY5YjVjOTcxNmE0NjY3M2NkZTJjNzgzYg==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2015-01-14T16:37:15Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2015-01-14T16:37:15Z"}, "message": "+       * lto-cgraph: Update function comments for\n+       lto_symtab_encoder_encode_*.\n\nFrom-SVN: r219607", "tree": {"sha": "041bd56ba263c079c684c6a6dd2597304fea0d19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/041bd56ba263c079c684c6a6dd2597304fea0d19"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ead7928a24970eb69b5c9716a46673cde2c783b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ead7928a24970eb69b5c9716a46673cde2c783b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ead7928a24970eb69b5c9716a46673cde2c783b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ead7928a24970eb69b5c9716a46673cde2c783b/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3b6e42f965f08e4e68d66b345a9ae2349ae6be5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b6e42f965f08e4e68d66b345a9ae2349ae6be5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b6e42f965f08e4e68d66b345a9ae2349ae6be5f"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "f0bd2dfae79fccbdb4ee984d63515d87a7825a8b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ead7928a24970eb69b5c9716a46673cde2c783b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ead7928a24970eb69b5c9716a46673cde2c783b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2ead7928a24970eb69b5c9716a46673cde2c783b", "patch": "@@ -1,3 +1,8 @@\n+2015-01-14  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* lto-cgraph: Update function comments for\n+\tlto_symtab_encoder_encode_*.\n+\n 2015-01-14  Ilya Verbin  <ilya.verbin@intel.com>\n \n \t* Makefile.in (site.exp): Do not set ENABLE_LTO."}, {"sha": "35b1f04fdb81ff31ecbdc56b5d30e4aef02b2dad", "filename": "gcc/lto-cgraph.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ead7928a24970eb69b5c9716a46673cde2c783b/gcc%2Flto-cgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ead7928a24970eb69b5c9716a46673cde2c783b/gcc%2Flto-cgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-cgraph.c?ref=2ead7928a24970eb69b5c9716a46673cde2c783b", "patch": "@@ -193,7 +193,7 @@ lto_symtab_encoder_delete_node (lto_symtab_encoder_t encoder,\n }\n \n \n-/* Return TRUE if we should encode initializer of NODE (if any).  */\n+/* Return TRUE if we should encode the body of NODE (if any).  */\n \n bool\n lto_symtab_encoder_encode_body_p (lto_symtab_encoder_t encoder,\n@@ -203,7 +203,7 @@ lto_symtab_encoder_encode_body_p (lto_symtab_encoder_t encoder,\n   return encoder->nodes[index].body;\n }\n \n-/* Return TRUE if we should encode body of NODE (if any).  */\n+/* Specify that we encode the body of NODE in this partition.  */\n \n static void\n lto_set_symtab_encoder_encode_body (lto_symtab_encoder_t encoder,\n@@ -226,7 +226,7 @@ lto_symtab_encoder_encode_initializer_p (lto_symtab_encoder_t encoder,\n   return encoder->nodes[index].initializer;\n }\n \n-/* Return TRUE if we should encode initializer of NODE (if any).  */\n+/* Specify that we should encode initializer of NODE (if any).  */\n \n static void\n lto_set_symtab_encoder_encode_initializer (lto_symtab_encoder_t encoder,\n@@ -236,7 +236,7 @@ lto_set_symtab_encoder_encode_initializer (lto_symtab_encoder_t encoder,\n   encoder->nodes[index].initializer = true;\n }\n \n-/* Return TRUE if we should encode initializer of NODE (if any).  */\n+/* Return TRUE if NODE is in this partition.  */\n \n bool\n lto_symtab_encoder_in_partition_p (lto_symtab_encoder_t encoder,\n@@ -248,7 +248,7 @@ lto_symtab_encoder_in_partition_p (lto_symtab_encoder_t encoder,\n   return encoder->nodes[index].in_partition;\n }\n \n-/* Return TRUE if we should encode body of NODE (if any).  */\n+/* Specify that NODE is in this partition.  */\n \n void\n lto_set_symtab_encoder_in_partition (lto_symtab_encoder_t encoder,"}]}