{"sha": "e1ea745113840663b7aacd5b1b5abd4ad6f3d0bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFlYTc0NTExMzg0MDY2M2I3YWFjZDViMWI1YWJkNGFkNmYzZDBiYg==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2011-04-27T09:06:24Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2011-04-27T09:06:24Z"}, "message": "mcore.h (REGNO_REG_CLASS): Do not index beyond the end of the regno_reg_class array.\n\n\t* config/mcore/mcore.h (REGNO_REG_CLASS): Do not index beyond the\n\tend of the regno_reg_class array.\n\nFrom-SVN: r173015", "tree": {"sha": "0f2212ef1250a4562b2caf9f8435154a6e6d9bce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f2212ef1250a4562b2caf9f8435154a6e6d9bce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1ea745113840663b7aacd5b1b5abd4ad6f3d0bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1ea745113840663b7aacd5b1b5abd4ad6f3d0bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1ea745113840663b7aacd5b1b5abd4ad6f3d0bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1ea745113840663b7aacd5b1b5abd4ad6f3d0bb/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5c2f94b4f51d7bff3ffce905dacd5c5e65995f3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c2f94b4f51d7bff3ffce905dacd5c5e65995f3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c2f94b4f51d7bff3ffce905dacd5c5e65995f3c"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "9c06f8be556317bf20cee2b450736c60e26fae70", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1ea745113840663b7aacd5b1b5abd4ad6f3d0bb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1ea745113840663b7aacd5b1b5abd4ad6f3d0bb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e1ea745113840663b7aacd5b1b5abd4ad6f3d0bb", "patch": "@@ -1,3 +1,8 @@\n+2011-04-27  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/mcore/mcore.h (REGNO_REG_CLASS): Do not index beyond the\n+\tend of the regno_reg_class array.\n+\n 2011-04-27  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/48742"}, {"sha": "398dcedfe22954072660bbd2cc1686067c864a3c", "filename": "gcc/config/mcore/mcore.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1ea745113840663b7aacd5b1b5abd4ad6f3d0bb/gcc%2Fconfig%2Fmcore%2Fmcore.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1ea745113840663b7aacd5b1b5abd4ad6f3d0bb/gcc%2Fconfig%2Fmcore%2Fmcore.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.h?ref=e1ea745113840663b7aacd5b1b5abd4ad6f3d0bb", "patch": "@@ -357,7 +357,7 @@ enum reg_class\n    or could index an array.  */\n \n extern const enum reg_class regno_reg_class[FIRST_PSEUDO_REGISTER];\n-#define REGNO_REG_CLASS(REGNO) regno_reg_class[REGNO]\n+#define REGNO_REG_CLASS(REGNO) ((REGNO) < FIRST_PSEUDO_REGISTER ? regno_reg_class[REGNO] : NO_REGS)\n \n /* When this hook returns true for MODE, the compiler allows\n    registers explicitly used in the rtl to be used as spill registers"}]}