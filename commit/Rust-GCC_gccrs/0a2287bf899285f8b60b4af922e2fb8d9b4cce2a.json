{"sha": "0a2287bf899285f8b60b4af922e2fb8d9b4cce2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGEyMjg3YmY4OTkyODVmOGI2MGI0YWY5MjJlMmZiOGQ5YjRjY2UyYQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "2000-04-27T07:18:08Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-04-27T07:18:08Z"}, "message": "rtlanal.c (dead_or_set_regno_p): Use find_regno_note.\n\n        * rtlanal.c (dead_or_set_regno_p): Use find_regno_note.\n        * genconfig.c (main): Set all HAVE_foo to 1.\n        * graph.c (node_data): Use GET_NOTE_INSN_NAME instead of local array.\n\nFrom-SVN: r33473", "tree": {"sha": "95290d1b3a766f3853be710b660f7a5f14bbd6dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95290d1b3a766f3853be710b660f7a5f14bbd6dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a2287bf899285f8b60b4af922e2fb8d9b4cce2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a2287bf899285f8b60b4af922e2fb8d9b4cce2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a2287bf899285f8b60b4af922e2fb8d9b4cce2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a2287bf899285f8b60b4af922e2fb8d9b4cce2a/comments", "author": null, "committer": null, "parents": [{"sha": "f77046bbf90d5635de3c42233c79b07df680eb4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f77046bbf90d5635de3c42233c79b07df680eb4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f77046bbf90d5635de3c42233c79b07df680eb4c"}], "stats": {"total": 70, "additions": 21, "deletions": 49}, "files": [{"sha": "9e4c0d5037952817bf0011d6b0a6a8fd3f60098c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a2287bf899285f8b60b4af922e2fb8d9b4cce2a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a2287bf899285f8b60b4af922e2fb8d9b4cce2a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0a2287bf899285f8b60b4af922e2fb8d9b4cce2a", "patch": "@@ -1,3 +1,11 @@\n+2000-04-26  Richard Henderson  <rth@cygnus.com>\n+\n+\t* rtlanal.c (dead_or_set_regno_p): Use find_regno_note.\n+\n+\t* genconfig.c (main): Set all HAVE_foo to 1.\n+\n+\t* graph.c (node_data): Use GET_NOTE_INSN_NAME instead of local array.\n+\n 2000-04-26  Alex Samuel  <samuel@codesourcery.com>\n \n \t* invoke.texi: Document -fssa flag."}, {"sha": "d78af0384b3fa441a1f0b1fd282801fc3b99b451", "filename": "gcc/genconfig.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a2287bf899285f8b60b4af922e2fb8d9b4cce2a/gcc%2Fgenconfig.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a2287bf899285f8b60b4af922e2fb8d9b4cce2a/gcc%2Fgenconfig.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenconfig.c?ref=0a2287bf899285f8b60b4af922e2fb8d9b4cce2a", "patch": "@@ -342,22 +342,22 @@ from the machine description file `md'.  */\\n\\n\");\n   printf (\"#endif\\n\");\n \n   if (have_cc0_flag)\n-    printf (\"#define HAVE_cc0\\n\");\n+    printf (\"#define HAVE_cc0 1\\n\");\n \n   if (have_cmove_flag)\n-    printf (\"#define HAVE_conditional_move\\n\");\n+    printf (\"#define HAVE_conditional_move 1\\n\");\n \n   if (have_cond_exec_flag)\n-    printf (\"#define HAVE_conditional_execution\\n\");\n+    printf (\"#define HAVE_conditional_execution 1\\n\");\n \n   if (have_lo_sum_flag)\n-    printf (\"#define HAVE_lo_sum\\n\");\n+    printf (\"#define HAVE_lo_sum 1\\n\");\n \n   if (have_peephole_flag)\n-    printf (\"#define HAVE_peephole\\n\");\n+    printf (\"#define HAVE_peephole 1\\n\");\n \n   if (have_peephole2_flag)\n-    printf (\"#define HAVE_peephole2\\n\");\n+    printf (\"#define HAVE_peephole2 1\\n\");\n \n   fflush (stdout);\n   return (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);"}, {"sha": "9dd5c8d12929e3b752a0d2b17358f044491f16b6", "filename": "gcc/graph.c", "status": "modified", "additions": 4, "deletions": 27, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a2287bf899285f8b60b4af922e2fb8d9b4cce2a/gcc%2Fgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a2287bf899285f8b60b4af922e2fb8d9b4cce2a/gcc%2Fgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraph.c?ref=0a2287bf899285f8b60b4af922e2fb8d9b4cce2a", "patch": "@@ -147,33 +147,10 @@ darkgrey\\n  shape: ellipse\" : \"white\",\n   /* Print the RTL.  */\n   if (GET_CODE (tmp_rtx) == NOTE)\n     {\n-      static const char *note_names[] =\n-      {\n-\tNULL,\n-\t\"deleted\",\n-\t\"block_beg\",\n-\t\"block_end\",\n-\t\"loop_beg\",\n-\t\"loop_end\",\n-\t\"function_end\",\n-\t\"setjmp\",\n-\t\"loop_cont\",\n-\t\"loop_vtop\",\n-\t\"prologue_end\",\n-\t\"epilogue_beg\",\n-\t\"deleted_label\",\n-\t\"function_beg\",\n-\t\"eh_region_beg\",\n-\t\"eh_region_end\",\n-\t\"repeated_line_number\",\n-\t\"range_start\",\n-\t\"range_end\",\n-\t\"live\",\n-\t\"basic_block\"\n-      };\n-\n-      fprintf (fp, \" %s\",\n-\t       XINT (tmp_rtx, 4) < 0 ? note_names[-XINT (tmp_rtx, 4)] : \"\");\n+      const char *name = \"\";\n+      if (NOTE_LINE_NUMBER (tmp_rtx) < 0)\n+\tname =  GET_NOTE_INSN_NAME (NOTE_LINE_NUMBER (tmp_rtx));\n+      fprintf (fp, \" %s\", name);\n     }\n   else if (GET_RTX_CLASS (GET_CODE (tmp_rtx)) == 'i')\n     print_rtl_single (fp, PATTERN (tmp_rtx));"}, {"sha": "f45a3d442452465b9284531cfdcf03afa019efed", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 3, "deletions": 16, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a2287bf899285f8b60b4af922e2fb8d9b4cce2a/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a2287bf899285f8b60b4af922e2fb8d9b4cce2a/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=0a2287bf899285f8b60b4af922e2fb8d9b4cce2a", "patch": "@@ -1233,22 +1233,9 @@ dead_or_set_regno_p (insn, test_regno)\n   unsigned int regno, endregno;\n   rtx link, pattern;\n \n-  /* See if there is a death note for something that includes\n-     TEST_REGNO.  */\n-  for (link = REG_NOTES (insn); link; link = XEXP (link, 1))\n-    {\n-      if (REG_NOTE_KIND (link) != REG_DEAD\n-\t  || GET_CODE (XEXP (link, 0)) != REG)\n-\tcontinue;\n-\n-      regno = REGNO (XEXP (link, 0));\n-      endregno = (regno >= FIRST_PSEUDO_REGISTER ? regno + 1\n-\t\t  : regno + HARD_REGNO_NREGS (regno,\n-\t\t\t\t\t      GET_MODE (XEXP (link, 0))));\n-\n-      if (test_regno >= regno && test_regno < endregno)\n-\treturn 1;\n-    }\n+  /* See if there is a death note for something that includes TEST_REGNO.  */\n+  if (find_regno_note (insn, REG_DEAD, test_regno))\n+    return 1;\n \n   if (GET_CODE (insn) == CALL_INSN\n       && find_regno_fusage (insn, CLOBBER, test_regno))"}]}