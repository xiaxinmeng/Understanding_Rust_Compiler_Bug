{"sha": "22a8a52d650ef0c4718d04289862f6319f8a8d9d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjJhOGE1MmQ2NTBlZjBjNDcxOGQwNDI4OTg2MmY2MzE5ZjhhOGQ5ZA==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2007-05-02T21:57:50Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2007-05-02T21:57:50Z"}, "message": "if-div.c: New file.\n\n2007-05-02  Eric Christopher  <echristo@apple.com>\n\n\t    * gcc.dg/cpp/if-div.c: New file.\n\n2007-05-02  Eric Christopher  <echristo@apple.com>\n\n\t    * expr.c (num_div_op): Don't overflow if the result is\n\t    zero.\n\nFrom-SVN: r124358", "tree": {"sha": "96d3589306464ba40e11a61ae06c3e1fdccbd38f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96d3589306464ba40e11a61ae06c3e1fdccbd38f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22a8a52d650ef0c4718d04289862f6319f8a8d9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22a8a52d650ef0c4718d04289862f6319f8a8d9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22a8a52d650ef0c4718d04289862f6319f8a8d9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22a8a52d650ef0c4718d04289862f6319f8a8d9d/comments", "author": null, "committer": null, "parents": [{"sha": "fca35e1b54d46d1f731ec8d7681f2e680c85a879", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fca35e1b54d46d1f731ec8d7681f2e680c85a879", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fca35e1b54d46d1f731ec8d7681f2e680c85a879"}], "stats": {"total": 30, "additions": 23, "deletions": 7}, "files": [{"sha": "d2918d77262805480d254d27faae1d9f792622dd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22a8a52d650ef0c4718d04289862f6319f8a8d9d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22a8a52d650ef0c4718d04289862f6319f8a8d9d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=22a8a52d650ef0c4718d04289862f6319f8a8d9d", "patch": "@@ -1,3 +1,7 @@\n+2007-05-02  Eric Christopher  <echristo@apple.com>\n+\n+\t* gcc.dg/cpp/if-div.c: New file.\n+\n 2007-05-02  Tom Tromey  <tromey@redhat.com>\n \n \tPR preprocessor/28709:\n@@ -47,9 +51,9 @@\n 2007-05-01  Dorit Nuzman  <dorit@il.ibm.com>\n \n \tPR testsuite/31589\n-\t* gcc.dg/vect/vect-iv-9.c: Added vect_int_mult target keyword to \n+\t* gcc.dg/vect/vect-iv-9.c: Added vect_int_mult target keyword to\n \tdg-final test.\n-\t* gcc.dg/vect/vect-reduc-dot-u16b.c: Added vect_pack_trunc target \n+\t* gcc.dg/vect/vect-reduc-dot-u16b.c: Added vect_pack_trunc target\n \tkeyword to dg-final test.\n \t* gcc.dg/vect/vect-iv-4.c: Likewise.\n \t* gcc.dg/vect/vect-widen-mult-u16.c: Likewise.\n@@ -58,7 +62,7 @@\n \t* gcc.dg/vect/vect-reduc-dot-u16a.c: Change variable type to avoid a\n \tcast.\n \t* gcc.dg/vect/no-section-anchors-vect-69.c: xfail on is64.\n-\t* lib/target-supports.exp \n+\t* lib/target-supports.exp\n \t(check_effective_target_vect_widen_sum_hi_to_si): Added ia64.\n \t(check_effective_target_vect_widen_sum_qi_to_hi): Added ia64.\n \n@@ -263,7 +267,7 @@\n \t    Olga Golovanevsky  <olga@il.ibm.com>\n \n \t* g++.dg/other/str_empty.C: New test.\n-\t\n+\n 2007-04-24  Richard Henderson  <rth@redhat.com>\n \n \t* gcc.dg/vect/vect.exp: Don't run tests on Alpha."}, {"sha": "4e42168124f9e63712fb29d07d0efe98f1bf0b8b", "filename": "gcc/testsuite/gcc.dg/cpp/if-div.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22a8a52d650ef0c4718d04289862f6319f8a8d9d/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fif-div.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22a8a52d650ef0c4718d04289862f6319f8a8d9d/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fif-div.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fif-div.c?ref=22a8a52d650ef0c4718d04289862f6319f8a8d9d", "patch": "@@ -0,0 +1,6 @@\n+/* { dg-do preprocess } */\n+\n+/* Test that this preprocesses without error.  */\n+\n+#if (-1)/2\n+#endif"}, {"sha": "cc5a71692c70d10d6e1a370465ad2f7188fc1cd3", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22a8a52d650ef0c4718d04289862f6319f8a8d9d/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22a8a52d650ef0c4718d04289862f6319f8a8d9d/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=22a8a52d650ef0c4718d04289862f6319f8a8d9d", "patch": "@@ -1,3 +1,8 @@\n+2007-05-02  Eric Christopher  <echristo@apple.com>\n+\n+\t* expr.c (num_div_op): Don't overflow if the result is\n+\tzero.\n+\n 2007-05-02  Tom Tromey  <tromey@redhat.com>\n \n \tPR preprocessor/28709:"}, {"sha": "a00614026c2e4fc8bd8f22293edaa81117e3f64a", "filename": "libcpp/expr.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22a8a52d650ef0c4718d04289862f6319f8a8d9d/libcpp%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22a8a52d650ef0c4718d04289862f6319f8a8d9d/libcpp%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fexpr.c?ref=22a8a52d650ef0c4718d04289862f6319f8a8d9d", "patch": "@@ -91,7 +91,7 @@ interpret_float_suffix (const uchar *s, size_t len)\n       case 'l': case 'L': l++; break;\n       case 'i': case 'I':\n       case 'j': case 'J': i++; break;\n-      case 'd': case 'D': \n+      case 'd': case 'D':\n \t/* Disallow fd, ld suffixes.  */\n \tif (d && (f || l))\n \t  return 0;\n@@ -441,7 +441,7 @@ append_digit (cpp_num num, int digit, int base, size_t precision)\n   if (add_low + digit < add_low)\n     add_high++;\n   add_low += digit;\n-    \n+\n   if (result.low + add_low < result.low)\n     add_high++;\n   if (result.high + add_high < result.high)\n@@ -1527,7 +1527,8 @@ num_div_op (cpp_reader *pfile, cpp_num lhs, cpp_num rhs, enum cpp_ttype op)\n \t{\n \t  if (negate)\n \t    result = num_negate (result, precision);\n-\t  result.overflow = num_positive (result, precision) ^ !negate;\n+\t  result.overflow = (num_positive (result, precision) ^ !negate\n+\t\t\t     && !num_zerop (result));\n \t}\n \n       return result;"}]}