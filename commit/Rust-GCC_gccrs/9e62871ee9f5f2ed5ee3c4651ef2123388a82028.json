{"sha": "9e62871ee9f5f2ed5ee3c4651ef2123388a82028", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU2Mjg3MWVlOWY1ZjJlZDVlZTNjNDY1MWVmMjEyMzM4OGE4MjAyOA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2003-12-22T08:03:15Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-12-22T08:03:15Z"}, "message": "re PR c++/13438 (internal compiler error: tree check: expected identifier_node, have integer_cst in c_parse_error at c-common.c:5921)\n\n\tPR c++/13438\n\t* cp-tree.h (cp_tree_index): Remove CPTI_RECORD_TYPE,\n\tCPTI_UNION_TYPE, CPTI_ENUM_TYPE.\n\t(record_type_node): Remove.\n\t(union_type_node): Likewise.\n\t(enum_type_node): Likewise.\n\t* decl.c: Remove mention of above tree nodes in comment.\n\t* lex.c (cxx_init): Do not assign to record_type_node,\n\tunion_type_node, or enum_type_node.  Simplify handling of\n\tclass_type_node.\n\n\tPR c++/13438\n\t* g++.dg/parse/error8.C: New test.\n\nFrom-SVN: r74931", "tree": {"sha": "bb774da8c6d8443c62f2648a3e7403ef81c74e8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb774da8c6d8443c62f2648a3e7403ef81c74e8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e62871ee9f5f2ed5ee3c4651ef2123388a82028", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e62871ee9f5f2ed5ee3c4651ef2123388a82028", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e62871ee9f5f2ed5ee3c4651ef2123388a82028", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e62871ee9f5f2ed5ee3c4651ef2123388a82028/comments", "author": null, "committer": null, "parents": [{"sha": "439a7e544da9c5f6e9c1b14ec054e3bdda7eddc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/439a7e544da9c5f6e9c1b14ec054e3bdda7eddc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/439a7e544da9c5f6e9c1b14ec054e3bdda7eddc2"}], "stats": {"total": 41, "additions": 19, "deletions": 22}, "files": [{"sha": "d667193871e7236bae2d9de27904161e7577efc4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e62871ee9f5f2ed5ee3c4651ef2123388a82028/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e62871ee9f5f2ed5ee3c4651ef2123388a82028/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9e62871ee9f5f2ed5ee3c4651ef2123388a82028", "patch": "@@ -1,5 +1,15 @@\n 2003-12-21  Mark Mitchell  <mark@codesourcery.com>\n \n+\t* cp-tree.h (cp_tree_index): Remove CPTI_RECORD_TYPE,\n+\tCPTI_UNION_TYPE, CPTI_ENUM_TYPE.\n+\t(record_type_node): Remove.\n+\t(union_type_node): Likewise.\n+\t(enum_type_node): Likewise.\n+\t* decl.c: Remove mention of above tree nodes in comment.\n+\t* lex.c (cxx_init): Do not assign to record_type_node,\n+\tunion_type_node, or enum_type_node.  Simplify handling of\n+\tclass_type_node.\n+\n \tPR c++/11554\n \t* init.c (sort_mem_initializers): Add warning.\n "}, {"sha": "5dbd102baa27848254953092cd079c4cb8e80204", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e62871ee9f5f2ed5ee3c4651ef2123388a82028/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e62871ee9f5f2ed5ee3c4651ef2123388a82028/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=9e62871ee9f5f2ed5ee3c4651ef2123388a82028", "patch": "@@ -521,9 +521,6 @@ enum cp_tree_index\n     CPTI_BASE_DESC_TYPE,\n \n     CPTI_CLASS_TYPE,\n-    CPTI_RECORD_TYPE,\n-    CPTI_UNION_TYPE,\n-    CPTI_ENUM_TYPE,\n     CPTI_UNKNOWN_TYPE,\n     CPTI_VTBL_TYPE,\n     CPTI_VTBL_PTR_TYPE,\n@@ -602,9 +599,6 @@ extern GTY(()) tree cp_global_trees[CPTI_MAX];\n #define base_desc_type_node\t\tcp_global_trees[CPTI_BASE_DESC_TYPE]\n \n #define class_type_node\t\t\tcp_global_trees[CPTI_CLASS_TYPE]\n-#define record_type_node\t\tcp_global_trees[CPTI_RECORD_TYPE]\n-#define union_type_node\t\t\tcp_global_trees[CPTI_UNION_TYPE]\n-#define enum_type_node\t\t\tcp_global_trees[CPTI_ENUM_TYPE]\n #define unknown_type_node\t\tcp_global_trees[CPTI_UNKNOWN_TYPE]\n #define vtbl_type_node\t\t\tcp_global_trees[CPTI_VTBL_TYPE]\n #define vtbl_ptr_type_node\t\tcp_global_trees[CPTI_VTBL_PTR_TYPE]"}, {"sha": "c4b9df7b49b8a5d438a340cd6c000fda80157973", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e62871ee9f5f2ed5ee3c4651ef2123388a82028/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e62871ee9f5f2ed5ee3c4651ef2123388a82028/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=9e62871ee9f5f2ed5ee3c4651ef2123388a82028", "patch": "@@ -140,7 +140,7 @@ tree error_mark_list;\n \ttree ptm_desc_type_node;\n \ttree base_desc_type_node;\n \n-\ttree class_type_node, record_type_node, union_type_node, enum_type_node;\n+\ttree class_type_node;\n \ttree unknown_type_node;\n \n    Array type `vtable_entry_type[]'"}, {"sha": "b2d2f1c31fdca74f811ad02c5705de2e9a61dc65", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e62871ee9f5f2ed5ee3c4651ef2123388a82028/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e62871ee9f5f2ed5ee3c4651ef2123388a82028/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=9e62871ee9f5f2ed5ee3c4651ef2123388a82028", "patch": "@@ -405,21 +405,7 @@ cxx_init (void)\n \n   current_function_decl = NULL;\n \n-  class_type_node = build_int_2 (class_type, 0);\n-  TREE_TYPE (class_type_node) = class_type_node;\n-  ridpointers[(int) RID_CLASS] = class_type_node;\n-\n-  record_type_node = build_int_2 (record_type, 0);\n-  TREE_TYPE (record_type_node) = record_type_node;\n-  ridpointers[(int) RID_STRUCT] = record_type_node;\n-\n-  union_type_node = build_int_2 (union_type, 0);\n-  TREE_TYPE (union_type_node) = union_type_node;\n-  ridpointers[(int) RID_UNION] = union_type_node;\n-\n-  enum_type_node = build_int_2 (enum_type, 0);\n-  TREE_TYPE (enum_type_node) = enum_type_node;\n-  ridpointers[(int) RID_ENUM] = enum_type_node;\n+  class_type_node = ridpointers[(int) RID_CLASS];\n \n   cxx_init_decl_processing ();\n "}, {"sha": "d96d8c678f66f9d45e9ec4b48a086c1a9848631a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e62871ee9f5f2ed5ee3c4651ef2123388a82028/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e62871ee9f5f2ed5ee3c4651ef2123388a82028/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9e62871ee9f5f2ed5ee3c4651ef2123388a82028", "patch": "@@ -1,5 +1,8 @@\n 2003-12-21  Mark Mitchell  <mark@codesourcery.com>\n \n+\tPR c++/13438\n+\t* g++.dg/parse/error8.C: New test.\n+\n \tPR c++/11554\n \t* testsuite/g++.dg/warn/ctor-init-1.C: New test.\n "}, {"sha": "125f2e42c6b2cfa6b8c7af09e1a8db1b9295504c", "filename": "gcc/testsuite/g++.dg/parse/error8.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e62871ee9f5f2ed5ee3c4651ef2123388a82028/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e62871ee9f5f2ed5ee3c4651ef2123388a82028/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror8.C?ref=9e62871ee9f5f2ed5ee3c4651ef2123388a82028", "patch": "@@ -0,0 +1,4 @@\n+// PR c++/13438\n+\n+struct A { friend typename struct B; };  // { dg-error \"\" }\n+  "}]}