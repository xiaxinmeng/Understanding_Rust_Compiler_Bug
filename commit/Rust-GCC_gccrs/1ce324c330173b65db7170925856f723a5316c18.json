{"sha": "1ce324c330173b65db7170925856f723a5316c18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNlMzI0YzMzMDE3M2I2NWRiNzE3MDkyNTg1NmY3MjNhNTMxNmMxOA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2003-03-28T07:47:57Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-03-28T07:47:57Z"}, "message": "PR target/10114 and PR target/10084\n\n\tPR target/10114 and PR target/10084\n\t* dwarf2out.c (mem_loc_descriptor): Handle LO_SUM.\n\nCo-Authored-By: Richard Henderson <rth@redhat.com>\n\nFrom-SVN: r64947", "tree": {"sha": "9ac0f38b7d3e0de358fa5cb26ba2e525d5d5dea1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ac0f38b7d3e0de358fa5cb26ba2e525d5d5dea1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ce324c330173b65db7170925856f723a5316c18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ce324c330173b65db7170925856f723a5316c18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ce324c330173b65db7170925856f723a5316c18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ce324c330173b65db7170925856f723a5316c18/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c6cf19a8ccf0dd776856540f572cea4e110533c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6cf19a8ccf0dd776856540f572cea4e110533c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6cf19a8ccf0dd776856540f572cea4e110533c1"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "3d8e52cd67f83562b9098d38647c42b976818b76", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ce324c330173b65db7170925856f723a5316c18/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ce324c330173b65db7170925856f723a5316c18/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1ce324c330173b65db7170925856f723a5316c18", "patch": "@@ -1,3 +1,9 @@\n+2003-03-28  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+            Richard Henderson  <rth@redhat.com>\n+\n+\tPR target/10114 and PR target/10084\n+\t* dwarf2out.c (mem_loc_descriptor): Handle LO_SUM.\n+\n 2003-03-27  Richard Henderson  <rth@redhat.com>\n \n \t* config/alpha/alpha.md (adddi_er_high_l): Valid only after reload."}, {"sha": "3c6dec78d1bffc04e8ea8d0a51e0899e15b5a174", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ce324c330173b65db7170925856f723a5316c18/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ce324c330173b65db7170925856f723a5316c18/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=1ce324c330173b65db7170925856f723a5316c18", "patch": "@@ -8423,6 +8423,11 @@ mem_loc_descriptor (rtl, mode)\n \tadd_loc_descr (&mem_loc_result, new_loc_descr (DW_OP_deref, 0, 0));\n       break;\n \n+    case LO_SUM:\n+\t rtl = XEXP (rtl, 1);\n+\n+      /* ... fall through ...  */\n+\n     case LABEL_REF:\n       /* Some ports can transform a symbol ref into a label ref, because\n  \t the symbol ref is too far away and has to be dumped into a constant"}, {"sha": "3794bdd2f6b34855dd37710c43f5371c65a6734b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ce324c330173b65db7170925856f723a5316c18/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ce324c330173b65db7170925856f723a5316c18/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1ce324c330173b65db7170925856f723a5316c18", "patch": "@@ -1,3 +1,7 @@\n+2003-03-28  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gcc.dg/sparc-dwarf2.c: New test.\n+\n 2003-03-27  Roger Sayle  <roger@eyesopen.com>\n \n \t* gcc.c-torture/execute/ieee/fp-cmp-6.c: New test case."}, {"sha": "d68cf620428d507d94b9bacbc4665eb5e68379aa", "filename": "gcc/testsuite/gcc.dg/sparc-dwarf2.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ce324c330173b65db7170925856f723a5316c18/gcc%2Ftestsuite%2Fgcc.dg%2Fsparc-dwarf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ce324c330173b65db7170925856f723a5316c18/gcc%2Ftestsuite%2Fgcc.dg%2Fsparc-dwarf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsparc-dwarf2.c?ref=1ce324c330173b65db7170925856f723a5316c18", "patch": "@@ -0,0 +1,31 @@\n+/* PR target/10114 */\n+/* Originator: James Troup <james@nocrew.org> */\n+/* { dg-do compile { target sparc-*-linux* } } */\n+/* { dg-options \"-g -O1\" } */\n+\n+extern __inline double sqrt (double __x)\n+{\n+  register double __r;\n+  __asm (\"fsqrtd %1,%0\" : \"=f\" (__r) : \"f\" (__x));\n+  return __r;\n+}\n+\n+static double our_skew, max_update_skew;\n+\n+static double Sqr(double x)\n+{\n+  return x*x;\n+}\n+\n+void REF_SetReference(double skew)\n+{\n+  double previous_skew, new_skew;\n+  double old_weight, new_weight, sum_weight;\n+  double delta_freq1, delta_freq2;\n+  double skew1, skew2;\n+\n+  previous_skew = our_skew;\n+  skew1 = sqrt((Sqr(delta_freq1) * old_weight + Sqr(delta_freq2) * new_weight) / sum_weight);\n+  skew2 = (previous_skew * old_weight + new_skew * new_weight) / sum_weight;\n+  our_skew = skew1 + skew2;\n+}"}]}