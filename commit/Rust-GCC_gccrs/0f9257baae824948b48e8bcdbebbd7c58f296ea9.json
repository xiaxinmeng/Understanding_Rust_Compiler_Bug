{"sha": "0f9257baae824948b48e8bcdbebbd7c58f296ea9", "node_id": "C_kwDOANBUbNoAKDBmOTI1N2JhYWU4MjQ5NDhiNDhlOGJjZGJlYmJkN2M1OGYyOTZlYTk", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-01-21T19:28:24Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-01-21T19:55:24Z"}, "message": "Covariant types should respect the get_name to pretty print the ir symbols", "tree": {"sha": "9ae616026a74aab6ebeb8098348b24d95c39f445", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ae616026a74aab6ebeb8098348b24d95c39f445"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f9257baae824948b48e8bcdbebbd7c58f296ea9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f9257baae824948b48e8bcdbebbd7c58f296ea9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f9257baae824948b48e8bcdbebbd7c58f296ea9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f9257baae824948b48e8bcdbebbd7c58f296ea9/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6c5dbadc3c9023821244bd4af4e78ad9d8f63f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6c5dbadc3c9023821244bd4af4e78ad9d8f63f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6c5dbadc3c9023821244bd4af4e78ad9d8f63f2"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "f2c250fbe3960f04a66168ca7e4d713621ad789f", "filename": "gcc/rust/typecheck/rust-tyty.h", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f9257baae824948b48e8bcdbebbd7c58f296ea9/gcc%2Frust%2Ftypecheck%2Frust-tyty.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f9257baae824948b48e8bcdbebbd7c58f296ea9/gcc%2Frust%2Ftypecheck%2Frust-tyty.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty.h?ref=0f9257baae824948b48e8bcdbebbd7c58f296ea9", "patch": "@@ -1930,7 +1930,10 @@ class ReferenceType : public BaseType\n \n   std::string as_string () const override;\n \n-  std::string get_name () const override final { return as_string (); }\n+  std::string get_name () const override final\n+  {\n+    return \"&\" + get_base ()->get_name ();\n+  }\n \n   BaseType *unify (BaseType *other) override;\n   bool can_eq (const BaseType *other, bool emit_errors,\n@@ -1978,7 +1981,10 @@ class PointerType : public BaseType\n \n   std::string as_string () const override;\n \n-  std::string get_name () const override final { return as_string (); }\n+  std::string get_name () const override final\n+  {\n+    return \"*\" + get_base ()->get_name ();\n+  }\n \n   BaseType *unify (BaseType *other) override;\n   bool can_eq (const BaseType *other, bool emit_errors,"}]}