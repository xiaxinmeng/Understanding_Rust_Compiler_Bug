{"sha": "563cb662c833b2233b5682bcc55e99cf584de1a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTYzY2I2NjJjODMzYjIyMzNiNTY4MmJjYzU1ZTk5Y2Y1ODRkZTFhNA==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2010-02-10T11:22:55Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2010-02-10T11:22:55Z"}, "message": "re PR lto/42985 (Internal compiler error: in ipcp_iterate_stage with different opt level)\n\n2010-02-10  Martin Jambor  <mjambor@suse.cz>\n\n\tPR lto/42985\n\t* ipa-prop.c (ipa_update_after_lto_read): Count parameters and\n\tcheck for variable argument counts independently.\n\nFrom-SVN: r156651", "tree": {"sha": "ac8bd2ff11d01b44607780ce7f522dc59dfda98e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac8bd2ff11d01b44607780ce7f522dc59dfda98e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/563cb662c833b2233b5682bcc55e99cf584de1a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/563cb662c833b2233b5682bcc55e99cf584de1a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/563cb662c833b2233b5682bcc55e99cf584de1a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/563cb662c833b2233b5682bcc55e99cf584de1a4/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9e3c399e02e1049797557c7d04abe369a2df1bc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e3c399e02e1049797557c7d04abe369a2df1bc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e3c399e02e1049797557c7d04abe369a2df1bc0"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "ecda788cf44dee19a6b117e5726274a90da64506", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/563cb662c833b2233b5682bcc55e99cf584de1a4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/563cb662c833b2233b5682bcc55e99cf584de1a4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=563cb662c833b2233b5682bcc55e99cf584de1a4", "patch": "@@ -1,3 +1,9 @@\n+2010-02-10  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR lto/42985\n+\t* ipa-prop.c (ipa_update_after_lto_read): Count parameters and\n+\tcheck for variable argument counts independently.\n+\n 2010-02-10  Christian Bruel  <christian.bruel@st.com>\n \n \tPR target/42841"}, {"sha": "71f79bd19b0a532a42769f618ea06159dc016f6f", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/563cb662c833b2233b5682bcc55e99cf584de1a4/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/563cb662c833b2233b5682bcc55e99cf584de1a4/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=563cb662c833b2233b5682bcc55e99cf584de1a4", "patch": "@@ -2206,17 +2206,17 @@ ipa_update_after_lto_read (void)\n   ipa_check_create_edge_args ();\n \n   for (node = cgraph_nodes; node; node = node->next)\n-    {\n-      if (!node->analyzed)\n-\tcontinue;\n+    if (node->analyzed)\n       ipa_initialize_node_params (node);\n+\n+  for (node = cgraph_nodes; node; node = node->next)\n+    if (node->analyzed)\n       for (cs = node->callees; cs; cs = cs->next_callee)\n \t{\n \t  if (ipa_get_cs_argument_count (IPA_EDGE_REF (cs))\n \t      != ipa_get_param_count (IPA_NODE_REF (cs->callee)))\n \t    ipa_set_called_with_variable_arg (IPA_NODE_REF (cs->callee));\n \t}\n-    }\n }\n \n /* Walk param call notes of NODE and set their call statements given the uid"}]}