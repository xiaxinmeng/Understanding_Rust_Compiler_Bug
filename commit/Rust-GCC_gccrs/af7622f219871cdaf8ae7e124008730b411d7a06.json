{"sha": "af7622f219871cdaf8ae7e124008730b411d7a06", "node_id": "C_kwDOANBUbNoAKGFmNzYyMmYyMTk4NzFjZGFmOGFlN2UxMjQwMDg3MzBiNDExZDdhMDY", "commit": {"author": {"name": "liushuyu", "email": "liushuyu011@gmail.com", "date": "2022-04-21T23:19:27Z"}, "committer": {"name": "liushuyu", "email": "liushuyu011@gmail.com", "date": "2022-04-22T22:16:37Z"}, "message": "backend: handle no_mangle attribute", "tree": {"sha": "c0da8f48c2cd78c60c784c52c3381be371d6237e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0da8f48c2cd78c60c784c52c3381be371d6237e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af7622f219871cdaf8ae7e124008730b411d7a06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af7622f219871cdaf8ae7e124008730b411d7a06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af7622f219871cdaf8ae7e124008730b411d7a06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af7622f219871cdaf8ae7e124008730b411d7a06/comments", "author": {"login": "liushuyu", "id": 6829345, "node_id": "MDQ6VXNlcjY4MjkzNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/6829345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liushuyu", "html_url": "https://github.com/liushuyu", "followers_url": "https://api.github.com/users/liushuyu/followers", "following_url": "https://api.github.com/users/liushuyu/following{/other_user}", "gists_url": "https://api.github.com/users/liushuyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/liushuyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liushuyu/subscriptions", "organizations_url": "https://api.github.com/users/liushuyu/orgs", "repos_url": "https://api.github.com/users/liushuyu/repos", "events_url": "https://api.github.com/users/liushuyu/events{/privacy}", "received_events_url": "https://api.github.com/users/liushuyu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "liushuyu", "id": 6829345, "node_id": "MDQ6VXNlcjY4MjkzNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/6829345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liushuyu", "html_url": "https://github.com/liushuyu", "followers_url": "https://api.github.com/users/liushuyu/followers", "following_url": "https://api.github.com/users/liushuyu/following{/other_user}", "gists_url": "https://api.github.com/users/liushuyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/liushuyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liushuyu/subscriptions", "organizations_url": "https://api.github.com/users/liushuyu/orgs", "repos_url": "https://api.github.com/users/liushuyu/repos", "events_url": "https://api.github.com/users/liushuyu/events{/privacy}", "received_events_url": "https://api.github.com/users/liushuyu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1286acc34e826039ebc8f09ad36dddc30f726283", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1286acc34e826039ebc8f09ad36dddc30f726283", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1286acc34e826039ebc8f09ad36dddc30f726283"}], "stats": {"total": 47, "additions": 46, "deletions": 1}, "files": [{"sha": "0c28728e5e1e1cffed0c4e8252739d421d6325a3", "filename": "gcc/rust/backend/rust-compile-base.cc", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af7622f219871cdaf8ae7e124008730b411d7a06/gcc%2Frust%2Fbackend%2Frust-compile-base.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af7622f219871cdaf8ae7e124008730b411d7a06/gcc%2Frust%2Fbackend%2Frust-compile-base.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-base.cc?ref=af7622f219871cdaf8ae7e124008730b411d7a06", "patch": "@@ -30,6 +30,24 @@\n namespace Rust {\n namespace Compile {\n \n+bool\n+should_mangle_item (const AST::AttrVec &attrs)\n+{\n+  for (const auto &attr : attrs)\n+    {\n+      if (attr.get_path ().as_string ().compare (\"no_mangle\") == 0)\n+\t{\n+\t  if (attr.has_attr_input ())\n+\t    rust_error_at (\n+\t      attr.get_locus (),\n+\t      \"attribute %<no_mangle%> does not accept any arguments\");\n+\t  return false;\n+\t}\n+    }\n+\n+  return true;\n+}\n+\n void\n HIRCompileBase::setup_attributes_on_fndecl (\n   tree fndecl, bool is_main_entry_point, HIR::Visibility &visibility,\n@@ -58,6 +76,7 @@ HIRCompileBase::setup_attributes_on_fndecl (\n       bool is_cold = attr.get_path ().as_string ().compare (\"cold\") == 0;\n       bool is_link_section\n \t= attr.get_path ().as_string ().compare (\"link_section\") == 0;\n+      bool no_mangle = attr.get_path ().as_string ().compare (\"no_mangle\") == 0;\n       if (is_inline)\n \t{\n \t  handle_inline_attribute_on_fndecl (fndecl, attr);\n@@ -74,6 +93,11 @@ HIRCompileBase::setup_attributes_on_fndecl (\n \t{\n \t  handle_link_section_attribute_on_fndecl (fndecl, attr);\n \t}\n+      else if (no_mangle)\n+\t{\n+\t  // we handled this in `should_mangle_item`\n+\t  continue;\n+\t}\n     }\n }\n \n@@ -396,7 +420,10 @@ HIRCompileBase::compile_function (\n   // we don't mangle the main fn since we haven't implemented the main shim\n   bool is_main_fn = fn_name.compare (\"main\") == 0;\n   std::string asm_name = fn_name;\n-  if (!is_main_fn)\n+  // TODO(liushuyu): we should probably move this part to\n+  // `setup_attributes_on_fndecl` if possible\n+  bool should_mangle = should_mangle_item (outer_attrs);\n+  if (!is_main_fn && should_mangle)\n     asm_name = ctx->mangle_item (fntype, *canonical_path);\n \n   unsigned int flags = 0;"}, {"sha": "77f884e7fd44ff81c04ce97bbeb13b29fb8c7f56", "filename": "gcc/rust/util/rust-attributes.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af7622f219871cdaf8ae7e124008730b411d7a06/gcc%2Frust%2Futil%2Frust-attributes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af7622f219871cdaf8ae7e124008730b411d7a06/gcc%2Frust%2Futil%2Frust-attributes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-attributes.cc?ref=af7622f219871cdaf8ae7e124008730b411d7a06", "patch": "@@ -32,6 +32,7 @@ static const BuiltinAttrDefinition __definitions[] = {\n   {\"must_use\", STATIC_ANALYSIS},\n   {\"lang\", HIR_LOWERING},\n   {\"link_section\", CODE_GENERATION},\n+  {\"no_mangle\", CODE_GENERATION},\n };\n \n BuiltinAttributeMappings *"}, {"sha": "0cef40482f4b71d92bd11b1f688519ba436eaf1c", "filename": "gcc/testsuite/rust/debug/no_mangle.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af7622f219871cdaf8ae7e124008730b411d7a06/gcc%2Ftestsuite%2Frust%2Fdebug%2Fno_mangle.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af7622f219871cdaf8ae7e124008730b411d7a06/gcc%2Ftestsuite%2Frust%2Fdebug%2Fno_mangle.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fdebug%2Fno_mangle.rs?ref=af7622f219871cdaf8ae7e124008730b411d7a06", "patch": "@@ -0,0 +1,17 @@\n+#[no_mangle]\n+fn do_not_mangle() -> i32 {\n+    0 \n+}\n+\n+fn please_mangle() {}\n+\n+fn main() {\n+// { dg-do compile }\n+// { dg-options \"-gdwarf-5 -dA\" }\n+    let _ = do_not_mangle();\n+    please_mangle();\n+// look for unmangled function name:\n+// { dg-final { scan-assembler \"do_not_mangle:\" } } */\n+// look for legacy mangled function name:\n+// { dg-final { scan-assembler \"13please_mangle\" } } */\n+}"}]}