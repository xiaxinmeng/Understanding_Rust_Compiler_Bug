{"sha": "6696d6529911329d89aac3ab1f3b0ce7d29532a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY5NmQ2NTI5OTExMzI5ZDg5YWFjM2FiMWYzYjBjZTdkMjk1MzJhNg==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2007-05-03T18:30:33Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2007-05-03T18:30:33Z"}, "message": "Server.java (Server): Record the delegate.\n\n2007-05-03  Andrew Haley  <aph@redhat.com>\n\n        * gnu/javax/management/Server.java (Server): Record the delegate.\n        (registerMBean): Notify the delegate.\n        (unregisterMBean): Likewise.\n        (notify): New method.\n\nFrom-SVN: r124383", "tree": {"sha": "73a6a38c44f1baa52463630c1bfc9bf2dd832e44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73a6a38c44f1baa52463630c1bfc9bf2dd832e44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6696d6529911329d89aac3ab1f3b0ce7d29532a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6696d6529911329d89aac3ab1f3b0ce7d29532a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6696d6529911329d89aac3ab1f3b0ce7d29532a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6696d6529911329d89aac3ab1f3b0ce7d29532a6/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a45bce6e9fd1182122b2f8243eb066f56d80760f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a45bce6e9fd1182122b2f8243eb066f56d80760f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a45bce6e9fd1182122b2f8243eb066f56d80760f"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "158e90f634bfc470c664d5be389febb759d16693", "filename": "libjava/classpath/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6696d6529911329d89aac3ab1f3b0ce7d29532a6/libjava%2Fclasspath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6696d6529911329d89aac3ab1f3b0ce7d29532a6/libjava%2Fclasspath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog?ref=6696d6529911329d89aac3ab1f3b0ce7d29532a6", "patch": "@@ -1,3 +1,10 @@\n+2007-05-03  Andrew Haley  <aph@redhat.com>\n+\n+\t* gnu/javax/management/Server.java (Server): Record the delegate.\n+\t(registerMBean): Notify the delegate.\n+\t(unregisterMBean): Likewise.\n+\t(notify): New method.\n+\n 2007-04-04  Francis Kung  <fkung@redhat.com>\n \n \t* gnu/java/awt/peer/gtk/ComponentGraphics.java"}, {"sha": "616854e95bdf3b69bc2b0ab6733243abc56c3bb5", "filename": "libjava/classpath/gnu/javax/management/Server.java", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6696d6529911329d89aac3ab1f3b0ce7d29532a6/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fmanagement%2FServer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6696d6529911329d89aac3ab1f3b0ce7d29532a6/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fmanagement%2FServer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fmanagement%2FServer.java?ref=6696d6529911329d89aac3ab1f3b0ce7d29532a6", "patch": "@@ -53,6 +53,7 @@\n import java.util.Iterator;\n import java.util.Map;\n import java.util.Set;\n+import java.util.concurrent.atomic.AtomicLong;\n \n import javax.management.Attribute;\n import javax.management.AttributeList;\n@@ -75,6 +76,7 @@\n import javax.management.MBeanRegistrationException;\n import javax.management.MBeanServer;\n import javax.management.MBeanServerDelegate;\n+import javax.management.MBeanServerNotification;\n import javax.management.MBeanTrustPermission;\n import javax.management.NotCompliantMBeanException;\n import javax.management.Notification;\n@@ -136,6 +138,15 @@\n    */\n   private Map listeners;\n \n+  /**\n+   * An MBean that emits notifications when an MBean is registered and\n+   * unregistered with this server.\n+   *\n+   */\n+  private final MBeanServerDelegate delegate;\n+\n+  static private final AtomicLong sequenceNumber = new AtomicLong(1);\n+\n   /**\n    * Initialise the delegate name.\n    */\n@@ -171,6 +182,7 @@ public Server(String defaultDomain, MBeanServer outer,\n   {\n     this.defaultDomain = defaultDomain;\n     this.outer = outer;\n+    this.delegate = delegate;\n     try\n       {\n \tregisterMBean(delegate, DELEGATE_NAME);\n@@ -1703,6 +1715,7 @@ public ObjectInstance registerMBean(Object obj, ObjectName name)\n     beans.put(name, new ServerInfo(obji, obj));\n     if (register != null)\n       register.postRegister(Boolean.TRUE);\n+    notify(name, MBeanServerNotification.REGISTRATION_NOTIFICATION);\n     return obji;\n   }\n \n@@ -2088,10 +2101,18 @@ public void unregisterMBean(ObjectName name)\n \t  }\n       }\n     beans.remove(name);\n+    notify(name, MBeanServerNotification.UNREGISTRATION_NOTIFICATION);\n     if (register != null)\n       register.postDeregister();\n   }\n \n+   private void notify(ObjectName name, String type)\n+   {\n+      delegate.sendNotification\n+\t(new MBeanServerNotification\n+\t (type, DELEGATE_NAME, sequenceNumber.getAndIncrement(), name));\n+   }\n+\n   /**\n    * Input stream which deserializes using the given classloader.\n    */"}]}