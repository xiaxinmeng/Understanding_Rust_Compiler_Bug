{"sha": "ac9ec1988a6d0add2eb724a5d1a9d06101623c51", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM5ZWMxOTg4YTZkMGFkZDJlYjcyNGE1ZDFhOWQwNjEwMTYyM2M1MQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2018-03-19T20:46:16Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2018-03-19T20:46:16Z"}, "message": "re PR c++/84927 (ICE with NSDMI and reference)\n\n\tPR c++/84927\n\t* constexpr.c (cxx_eval_bare_aggregate): Update constructor's flags\n\tas we evaluate the elements.\n\t(cxx_eval_constant_expression): Verify constructor's flags\n\tunconditionally.\n\n\t* g++.dg/cpp1y/nsdmi-aggr9.C: New test.\n\nFrom-SVN: r258661", "tree": {"sha": "a3847b60c31c362e39f3aea067f15282fcf7b0c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3847b60c31c362e39f3aea067f15282fcf7b0c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac9ec1988a6d0add2eb724a5d1a9d06101623c51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac9ec1988a6d0add2eb724a5d1a9d06101623c51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac9ec1988a6d0add2eb724a5d1a9d06101623c51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac9ec1988a6d0add2eb724a5d1a9d06101623c51/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e5cc0d5453f3a79902522c719fe4fd5765b689b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5cc0d5453f3a79902522c719fe4fd5765b689b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5cc0d5453f3a79902522c719fe4fd5765b689b3"}], "stats": {"total": 36, "additions": 30, "deletions": 6}, "files": [{"sha": "236ea215452c0e5ef7a588cd4df94ac507bb30fc", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac9ec1988a6d0add2eb724a5d1a9d06101623c51/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac9ec1988a6d0add2eb724a5d1a9d06101623c51/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ac9ec1988a6d0add2eb724a5d1a9d06101623c51", "patch": "@@ -3,6 +3,12 @@\n \tPR c++/84925\n \t* pt.c (enclosing_instantiation_of): Check if fn is null.\n \n+\tPR c++/84927\n+\t* constexpr.c (cxx_eval_bare_aggregate): Update constructor's flags\n+\tas we evaluate the elements.\n+\t(cxx_eval_constant_expression): Verify constructor's flags\n+\tunconditionally.\n+\n 2018-03-16  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/71834 - template-id with too few arguments."}, {"sha": "894bcd0bb3e44796308955b12527330eccf32801", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac9ec1988a6d0add2eb724a5d1a9d06101623c51/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac9ec1988a6d0add2eb724a5d1a9d06101623c51/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=ac9ec1988a6d0add2eb724a5d1a9d06101623c51", "patch": "@@ -2880,7 +2880,12 @@ cxx_eval_bare_aggregate (const constexpr_ctx *ctx, tree t,\n \t  (*p)->last().value = elt;\n \t}\n       else\n-\tCONSTRUCTOR_APPEND_ELT (*p, index, elt);\n+\t{\n+\t  CONSTRUCTOR_APPEND_ELT (*p, index, elt);\n+\t  /* Adding an element might change the ctor's flags.  */\n+\t  TREE_CONSTANT (ctx->ctor) = constant_p;\n+\t  TREE_SIDE_EFFECTS (ctx->ctor) = side_effects_p;\n+\t}\n     }\n   if (*non_constant_p || !changed)\n     return t;\n@@ -4530,11 +4535,7 @@ cxx_eval_constant_expression (const constexpr_ctx *ctx, tree t,\n \t{\n \t  /* Don't re-process a constant CONSTRUCTOR, but do fold it to\n \t     VECTOR_CST if applicable.  */\n-\t  /* FIXME after GCC 6 branches, make the verify unconditional.  */\n-\t  if (CHECKING_P)\n-\t    verify_constructor_flags (t);\n-\t  else\n-\t    recompute_constructor_flags (t);\n+\t  verify_constructor_flags (t);\n \t  if (TREE_CONSTANT (t))\n \t    return fold (t);\n \t}"}, {"sha": "7638ca162f4d817eff888892cff8fea924c7d44b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac9ec1988a6d0add2eb724a5d1a9d06101623c51/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac9ec1988a6d0add2eb724a5d1a9d06101623c51/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ac9ec1988a6d0add2eb724a5d1a9d06101623c51", "patch": "@@ -3,6 +3,9 @@\n \tPR c++/84925\n \t* g++.dg/cpp1z/lambda-__func__.C: New test.\n \n+\tPR c++/84927\n+\t* g++.dg/cpp1y/nsdmi-aggr9.C: New test.\n+\n 2018-03-19  Maxim Ostapenko  <m.ostapenko@samsung.com>\n \n \tPR sanitizer/78651"}, {"sha": "4e13fc5c9d83f86a2b9264a5fd086b514b50b814", "filename": "gcc/testsuite/g++.dg/cpp1y/nsdmi-aggr9.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac9ec1988a6d0add2eb724a5d1a9d06101623c51/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fnsdmi-aggr9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac9ec1988a6d0add2eb724a5d1a9d06101623c51/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fnsdmi-aggr9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fnsdmi-aggr9.C?ref=ac9ec1988a6d0add2eb724a5d1a9d06101623c51", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/84927 - ICE with NSDMI and reference\n+// { dg-do compile { target c++14 } }\n+\n+struct A\n+{\n+  int& r;\n+  int i = r;\n+};\n+\n+void foo()\n+{\n+  int j;\n+  A a = A{j};\n+}"}]}