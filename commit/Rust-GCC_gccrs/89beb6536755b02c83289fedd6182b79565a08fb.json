{"sha": "89beb6536755b02c83289fedd6182b79565a08fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODliZWI2NTM2NzU1YjAyYzgzMjg5ZmVkZDYxODJiNzk1NjVhMDhmYg==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2018-12-03T15:48:34Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-12-03T15:48:34Z"}, "message": "[Ada] Minor reformattings\n\n2018-12-03  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* checks.adb, exp_aggr.adb, exp_attr.adb, exp_ch3.adb,\n\texp_util.adb, exp_util.ads, repinfo.adb, sem_attr.adb,\n\tsem_ch3.adb, sem_res.adb, sem_util.adb: Minor reformatting.\n\nFrom-SVN: r266750", "tree": {"sha": "66c2f6fc1142caa7e91127bba2d0a9fd79f3286c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66c2f6fc1142caa7e91127bba2d0a9fd79f3286c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89beb6536755b02c83289fedd6182b79565a08fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89beb6536755b02c83289fedd6182b79565a08fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89beb6536755b02c83289fedd6182b79565a08fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89beb6536755b02c83289fedd6182b79565a08fb/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5bb88560d74b92e37afd17f8ba0895fc734acbfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bb88560d74b92e37afd17f8ba0895fc734acbfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bb88560d74b92e37afd17f8ba0895fc734acbfb"}], "stats": {"total": 121, "additions": 68, "deletions": 53}, "files": [{"sha": "5397c76502c912701169fbaad27a84645102e490", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89beb6536755b02c83289fedd6182b79565a08fb/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89beb6536755b02c83289fedd6182b79565a08fb/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=89beb6536755b02c83289fedd6182b79565a08fb", "patch": "@@ -1,3 +1,9 @@\n+2018-12-03  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* checks.adb, exp_aggr.adb, exp_attr.adb, exp_ch3.adb,\n+\texp_util.adb, exp_util.ads, repinfo.adb, sem_attr.adb,\n+\tsem_ch3.adb, sem_res.adb, sem_util.adb: Minor reformatting.\n+\n 2018-12-03  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch3.adb (Complete_Private_Subtype): Enhance comment."}, {"sha": "8db6b0f8430612a7a42a385d3684a2eb1b89cce7", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89beb6536755b02c83289fedd6182b79565a08fb/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89beb6536755b02c83289fedd6182b79565a08fb/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=89beb6536755b02c83289fedd6182b79565a08fb", "patch": "@@ -4574,7 +4574,6 @@ package body Checks is\n             Typ := Actual_Subtype (Entity (N));\n          end if;\n \n-         null;\n       else\n          Typ := Underlying_Type (Base_Type (Typ));\n       end if;"}, {"sha": "866abed39205ecfa76cc81832045755bed11b8d7", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89beb6536755b02c83289fedd6182b79565a08fb/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89beb6536755b02c83289fedd6182b79565a08fb/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=89beb6536755b02c83289fedd6182b79565a08fb", "patch": "@@ -4541,7 +4541,7 @@ package body Exp_Aggr is\n \n                            declare\n                               P : constant Entity_Id :=\n-                                Cunit_Entity (Current_Sem_Unit);\n+                                    Cunit_Entity (Current_Sem_Unit);\n \n                            begin\n                               --  Check if duplication is always OK and, if so,"}, {"sha": "67dd9416983f64ca4850b13b62a5554ac704c275", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89beb6536755b02c83289fedd6182b79565a08fb/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89beb6536755b02c83289fedd6182b79565a08fb/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=89beb6536755b02c83289fedd6182b79565a08fb", "patch": "@@ -6610,15 +6610,20 @@ package body Exp_Attr is\n       --  also needs to be static, because we do some legality checks (e.g.\n       --  for Thread_Local_Storage) after this transformation.\n \n-      when Attribute_Ref | Attribute_To_Address => To_Address : declare\n-         Is_Static : constant Boolean := Is_Static_Expression (N);\n-      begin\n-         Rewrite (N,\n-           Unchecked_Convert_To (RTE (RE_Address),\n-             Relocate_Node (First (Exprs))));\n-         Set_Is_Static_Expression (N, Is_Static);\n-         Analyze_And_Resolve (N, RTE (RE_Address));\n-      end To_Address;\n+      when Attribute_Ref\n+         | Attribute_To_Address\n+      =>\n+         To_Address : declare\n+            Is_Static : constant Boolean := Is_Static_Expression (N);\n+\n+         begin\n+            Rewrite (N,\n+              Unchecked_Convert_To (RTE (RE_Address),\n+                Relocate_Node (First (Exprs))));\n+            Set_Is_Static_Expression (N, Is_Static);\n+\n+            Analyze_And_Resolve (N, RTE (RE_Address));\n+         end To_Address;\n \n       ------------\n       -- To_Any --"}, {"sha": "65f6805bb7c9212d9e8148b2be44f696fcf93ea9", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89beb6536755b02c83289fedd6182b79565a08fb/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89beb6536755b02c83289fedd6182b79565a08fb/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=89beb6536755b02c83289fedd6182b79565a08fb", "patch": "@@ -6587,10 +6587,10 @@ package body Exp_Ch3 is\n \n          if Is_Delayed_Aggregate (Expr_Q) then\n \n-            --  An aggregate that must be built in place is not resolved\n-            --  and expanded until the enclosing construct is expanded.\n-            --  This will happen when the aggregqte is limited and the\n-            --  declared object has a following address clause.\n+            --  An aggregate that must be built in place is not resolved and\n+            --  expanded until the enclosing construct is expanded. This will\n+            --  happen when the aggregqte is limited and the declared object\n+            --  has a following address clause.\n \n             if Is_Limited_Type (Typ) and then not Analyzed (Expr) then\n                Resolve (Expr, Typ);"}, {"sha": "9fcf10cf5a11d9a2ef38d6f78e25d6b2514a4d2b", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89beb6536755b02c83289fedd6182b79565a08fb/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89beb6536755b02c83289fedd6182b79565a08fb/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=89beb6536755b02c83289fedd6182b79565a08fb", "patch": "@@ -13414,7 +13414,10 @@ package body Exp_Util is\n    --  See also Silly_Boolean_Array_Not_Test\n \n    procedure Silly_Boolean_Array_Xor_Test\n-     (N : Node_Id; R : Node_Id;  T : Entity_Id) is\n+     (N : Node_Id;\n+      R : Node_Id;\n+      T : Entity_Id)\n+   is\n       Loc : constant Source_Ptr := Sloc (N);\n       CT  : constant Entity_Id  := Component_Type (T);\n \n@@ -13435,9 +13438,9 @@ package body Exp_Util is\n         Make_Raise_Constraint_Error (Loc,\n           Condition =>\n             Make_And_Then (Loc,\n-              Left_Opnd =>\n+              Left_Opnd  =>\n                 Make_And_Then (Loc,\n-                  Left_Opnd =>\n+                  Left_Opnd  =>\n                     Convert_To (Standard_Boolean,\n                       Make_Attribute_Reference (Loc,\n                         Prefix         => New_Occurrence_Of (CT, Loc),\n@@ -13450,7 +13453,7 @@ package body Exp_Util is\n                         Attribute_Name => Name_Last))),\n \n               Right_Opnd => Make_Non_Empty_Check (Loc, R)),\n-          Reason => CE_Range_Check_Failed));\n+          Reason    => CE_Range_Check_Failed));\n    end Silly_Boolean_Array_Xor_Test;\n \n    --------------------------"}, {"sha": "ab48b743dc0bb71cc557d8917dbb9d0d8804a53b", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89beb6536755b02c83289fedd6182b79565a08fb/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89beb6536755b02c83289fedd6182b79565a08fb/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=89beb6536755b02c83289fedd6182b79565a08fb", "patch": "@@ -1141,7 +1141,9 @@ package Exp_Util is\n    --  that a Constraint_Error exception be raised (RM 4.5.6(6)).\n \n    procedure Silly_Boolean_Array_Xor_Test\n-     (N : Node_Id; R : Node_Id;  T : Entity_Id);\n+     (N : Node_Id;\n+      R : Node_Id;\n+      T : Entity_Id);\n    --  N is the node for a boolean array XOR operation, T is the type of the\n    --  array, and R is a copy of the right operand of N, required to prevent\n    --  scope anomalies when unnesting is in effect. This routine deals with"}, {"sha": "3b41f9358631658def3584c68389876956c2b957", "filename": "gcc/ada/repinfo.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89beb6536755b02c83289fedd6182b79565a08fb/gcc%2Fada%2Frepinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89beb6536755b02c83289fedd6182b79565a08fb/gcc%2Fada%2Frepinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.adb?ref=89beb6536755b02c83289fedd6182b79565a08fb", "patch": "@@ -120,9 +120,9 @@ package body Repinfo is\n    --  the current entity. Set True when a new entity is processed, and false\n    --  when the blank line is output.\n \n-   -------------------------------\n-   --  Set of Relevant Entities --\n-   -------------------------------\n+   ------------------------------\n+   -- Set of Relevant Entities --\n+   ------------------------------\n \n    Relevant_Entities_Size : constant := 4093;\n    --  Number of headers in hash table"}, {"sha": "a9f9f93ed220e7205b8ae712a5c799e30fe77e20", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89beb6536755b02c83289fedd6182b79565a08fb/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89beb6536755b02c83289fedd6182b79565a08fb/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=89beb6536755b02c83289fedd6182b79565a08fb", "patch": "@@ -8284,7 +8284,7 @@ package body Sem_Attr is\n \n          Analyze_And_Resolve (N, Standard_Boolean);\n          Static := True;\n-         Set_Is_Static_Expression (N, True);\n+         Set_Is_Static_Expression (N);\n       end Atomic_Always_Lock_Free;\n \n       ---------\n@@ -8737,7 +8737,7 @@ package body Sem_Attr is\n \n          Analyze_And_Resolve (N, Standard_Boolean);\n          Static := True;\n-         Set_Is_Static_Expression (N, True);\n+         Set_Is_Static_Expression (N);\n       end Lock_Free;\n \n       ----------"}, {"sha": "d99370ae6bb7f7395e191f1bf47baf1d1ac04530", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89beb6536755b02c83289fedd6182b79565a08fb/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89beb6536755b02c83289fedd6182b79565a08fb/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=89beb6536755b02c83289fedd6182b79565a08fb", "patch": "@@ -4278,21 +4278,19 @@ package body Sem_Ch3 is\n            and then Nkind (E) = N_Aggregate\n            and then\n              ((Present (Following_Address_Clause (N))\n-                            and then not Ignore_Rep_Clauses)\n+                 and then not Ignore_Rep_Clauses)\n               or else Delayed_Aspect_Present)\n          then\n             Set_Etype (E, T);\n \n-            --  If the aggregate is limited it will be built in place,\n-            --  and its expansion is deferred until the object declaration\n-            --  is expanded.\n+            --  If the aggregate is limited it will be built in place, and its\n+            --  expansion is deferred until the object declaration is expanded.\n \n             if Is_Limited_Type (T) then\n                Set_Expansion_Delayed (E);\n             end if;\n \n          else\n-\n             --  If the expression is a formal that is a \"subprogram pointer\"\n             --  this is illegal in accessibility terms (see RM 3.10.2 (13.1/2)\n             --  and AARM 3.10.2 (13.b/2)). Add an explicit conversion to force\n@@ -4365,9 +4363,7 @@ package body Sem_Ch3 is\n                Set_Current_Value (Id, E);\n             end if;\n \n-         elsif Is_Scalar_Type (T)\n-            and then Is_OK_Static_Expression (E)\n-         then\n+         elsif Is_Scalar_Type (T) and then Is_OK_Static_Expression (E) then\n             Set_Is_Known_Valid (Id);\n \n          --  If it is a constant initialized with a valid nonstatic entity,"}, {"sha": "ad0b5a06abc01c8c8bc64bf6dffdbb4f4f3ae4bc", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 24, "deletions": 19, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89beb6536755b02c83289fedd6182b79565a08fb/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89beb6536755b02c83289fedd6182b79565a08fb/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=89beb6536755b02c83289fedd6182b79565a08fb", "patch": "@@ -8457,39 +8457,44 @@ package body Sem_Res is\n    ---------------------------\n \n    procedure Resolve_If_Expression (N : Node_Id; Typ : Entity_Id) is\n-      Condition : constant Node_Id := First (Expressions (N));\n-      Then_Expr : Node_Id;\n-      Else_Expr : Node_Id;\n-\n       procedure Apply_Check (Expr : Node_Id);\n-      --  When a dependent expression is of a subtype different from the\n-      --  context subtype, then insert a qualification  to ensure the\n-      --  generation of a constraint check. This was previously done only\n-      --  for scalar types.\n+      --  When a dependent expression is of a subtype different from\n+      --  the context subtype, then insert a qualification to ensure\n+      --  the generation of a constraint check. This was previously\n+      --  done only for scalar types.\n \n       -----------------\n       -- Apply_Check --\n       -----------------\n \n       procedure Apply_Check (Expr : Node_Id) is\n-         Loc       : constant Source_Ptr := Sloc (Expr);\n-         Expr_Type : constant Entity_Id := Etype (Expr);\n-      begin\n+         Expr_Typ : constant Entity_Id  := Etype (Expr);\n+         Loc      : constant Source_Ptr := Sloc (Expr);\n \n-         if Expr_Type /= Typ\n-            and then not Is_Tagged_Type (Typ)\n-            and then not Is_Access_Type (Typ)\n-            and then Is_Constrained (Typ)\n-            and then not Inside_A_Generic\n+      begin\n+         if Expr_Typ /= Typ\n+           and then not Is_Tagged_Type (Typ)\n+           and then not Is_Access_Type (Typ)\n+           and then Is_Constrained (Typ)\n+           and then not Inside_A_Generic\n          then\n             Rewrite (Expr,\n-                 Make_Qualified_Expression (Loc,\n-                   Subtype_Mark => New_Occurrence_Of (Typ, Loc),\n-                   Expression   => Relocate_Node (Expr)));\n+              Make_Qualified_Expression (Loc,\n+                Subtype_Mark => New_Occurrence_Of (Typ, Loc),\n+                Expression   => Relocate_Node (Expr)));\n+\n             Analyze_And_Resolve (Expr, Typ);\n          end if;\n       end Apply_Check;\n \n+      --  Local variables\n+\n+      Condition : constant Node_Id := First (Expressions (N));\n+      Else_Expr : Node_Id;\n+      Then_Expr : Node_Id;\n+\n+   --  Start of processing for Resolve_If_Expression\n+\n    begin\n       --  Defend against malformed expressions\n "}, {"sha": "1d34d2ae76c9d65de96683f2cddc61a5b8f6fde7", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89beb6536755b02c83289fedd6182b79565a08fb/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89beb6536755b02c83289fedd6182b79565a08fb/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=89beb6536755b02c83289fedd6182b79565a08fb", "patch": "@@ -14160,7 +14160,6 @@ package body Sem_Util is\n                --  Check for prefix being an aliased component???\n \n                null;\n-\n             end if;\n \n             --  A heap object is constrained by its initial value"}]}