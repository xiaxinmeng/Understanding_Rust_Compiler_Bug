{"sha": "727683a51c938a58cc7bdb7ea6bebed63521c5b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzI3NjgzYTUxYzkzOGE1OGNjN2JkYjdlYTZiZWJlZDYzNTIxYzViNA==", "commit": {"author": {"name": "Kenneth Zadeck", "email": "zadeck@naturalbridge.com", "date": "2008-06-30T19:31:42Z"}, "committer": {"name": "Kenneth Zadeck", "email": "zadeck@gcc.gnu.org", "date": "2008-06-30T19:31:42Z"}, "message": "ifcvt.c (cond_move_process_if_block): Free vectors on false return.\n\n2008-06-30  Kenneth Zadeck <zadeck@naturalbridge.com>\n\n\t* ifcvt.c (cond_move_process_if_block): Free vectors on false\n\treturn.\n\nFrom-SVN: r137285", "tree": {"sha": "51966707b68782094d933d2a1c44aa2519b1bc11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51966707b68782094d933d2a1c44aa2519b1bc11"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/727683a51c938a58cc7bdb7ea6bebed63521c5b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/727683a51c938a58cc7bdb7ea6bebed63521c5b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/727683a51c938a58cc7bdb7ea6bebed63521c5b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/727683a51c938a58cc7bdb7ea6bebed63521c5b4/comments", "author": {"login": "zadeck", "id": 42682403, "node_id": "MDQ6VXNlcjQyNjgyNDAz", "avatar_url": "https://avatars.githubusercontent.com/u/42682403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zadeck", "html_url": "https://github.com/zadeck", "followers_url": "https://api.github.com/users/zadeck/followers", "following_url": "https://api.github.com/users/zadeck/following{/other_user}", "gists_url": "https://api.github.com/users/zadeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/zadeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zadeck/subscriptions", "organizations_url": "https://api.github.com/users/zadeck/orgs", "repos_url": "https://api.github.com/users/zadeck/repos", "events_url": "https://api.github.com/users/zadeck/events{/privacy}", "received_events_url": "https://api.github.com/users/zadeck/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "370f38e84763ca6271d7898b4900baad3810ad81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/370f38e84763ca6271d7898b4900baad3810ad81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/370f38e84763ca6271d7898b4900baad3810ad81"}], "stats": {"total": 32, "additions": 27, "deletions": 5}, "files": [{"sha": "7c7fd12fe71b358d403fe0b7b15b89b7e6df0d77", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/727683a51c938a58cc7bdb7ea6bebed63521c5b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/727683a51c938a58cc7bdb7ea6bebed63521c5b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=727683a51c938a58cc7bdb7ea6bebed63521c5b4", "patch": "@@ -1,3 +1,8 @@\n+2008-06-30  Kenneth Zadeck <zadeck@naturalbridge.com>\n+\n+\t* ifcvt.c (cond_move_process_if_block): Free vectors on false\n+\treturn.\n+\t\n 2008-06-30  Kenneth Zadeck <zadeck@naturalbridge.com>\n \n \t* df-scan.c (df_scan_free_ref_vec, df_scan_free_mws_vec): New"}, {"sha": "da8afde310682138634c8bd0b474419057ce1f4b", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/727683a51c938a58cc7bdb7ea6bebed63521c5b4/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/727683a51c938a58cc7bdb7ea6bebed63521c5b4/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=727683a51c938a58cc7bdb7ea6bebed63521c5b4", "patch": "@@ -2614,7 +2614,11 @@ cond_move_process_if_block (struct noce_if_info *if_info)\n   /* Make sure the blocks are suitable.  */\n   if (!check_cond_move_block (then_bb, then_vals, then_regs, cond)\n       || (else_bb && !check_cond_move_block (else_bb, else_vals, else_regs, cond)))\n-    return FALSE;\n+    {\n+      VEC_free (int, heap, then_regs);\n+      VEC_free (int, heap, else_regs);\n+      return FALSE;\n+    }\n \n   /* Make sure the blocks can be used together.  If the same register\n      is set in both blocks, and is not set to a constant in both\n@@ -2635,7 +2639,11 @@ cond_move_process_if_block (struct noce_if_info *if_info)\n \t  if (!CONSTANT_P (then_vals[reg])\n \t      && !CONSTANT_P (else_vals[reg])\n \t      && !rtx_equal_p (then_vals[reg], else_vals[reg]))\n-\t    return FALSE;\n+\t    {\n+\t      VEC_free (int, heap, then_regs);\n+\t      VEC_free (int, heap, else_regs);\n+\t      return FALSE;\n+\t    }\n \t}\n     }\n \n@@ -2649,7 +2657,11 @@ cond_move_process_if_block (struct noce_if_info *if_info)\n      branches, since if we convert we are going to always execute\n      them.  */\n   if (c > MAX_CONDITIONAL_EXECUTE)\n-    return FALSE;\n+    {\n+      VEC_free (int, heap, then_regs);\n+      VEC_free (int, heap, else_regs);\n+      return FALSE;\n+    }\n \n   /* Try to emit the conditional moves.  First do the then block,\n      then do anything left in the else blocks.  */\n@@ -2661,11 +2673,17 @@ cond_move_process_if_block (struct noce_if_info *if_info)\n \t\t\t\t\t  then_vals, else_vals, true)))\n     {\n       end_sequence ();\n+      VEC_free (int, heap, then_regs);\n+      VEC_free (int, heap, else_regs);\n       return FALSE;\n     }\n   seq = end_ifcvt_sequence (if_info);\n   if (!seq)\n-    return FALSE;\n+    {\n+      VEC_free (int, heap, then_regs);\n+      VEC_free (int, heap, else_regs);\n+      return FALSE;\n+    }\n \n   loc_insn = first_active_insn (then_bb);\n   if (!loc_insn)\n@@ -2698,7 +2716,6 @@ cond_move_process_if_block (struct noce_if_info *if_info)\n \n   VEC_free (int, heap, then_regs);\n   VEC_free (int, heap, else_regs);\n-\n   return TRUE;\n }\n "}]}