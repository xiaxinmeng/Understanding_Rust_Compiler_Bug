{"sha": "245fbaaadfb4af170b63056c0254e61201e8834f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ1ZmJhYWFkZmI0YWYxNzBiNjMwNTZjMDI1NGU2MTIwMWU4ODM0Zg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2018-08-15T21:06:06Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2018-08-15T21:06:06Z"}, "message": "ChangeLog: Fix whitespace.\n\n\t* ChangeLog: Fix whitespace.\n\t* testsuite/ChangeLog: Ditto.\n\nFrom-SVN: r263571", "tree": {"sha": "1fe665fedb35d11ba8fe179e9820e825ec819c73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fe665fedb35d11ba8fe179e9820e825ec819c73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/245fbaaadfb4af170b63056c0254e61201e8834f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/245fbaaadfb4af170b63056c0254e61201e8834f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/245fbaaadfb4af170b63056c0254e61201e8834f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/245fbaaadfb4af170b63056c0254e61201e8834f/comments", "author": null, "committer": null, "parents": [{"sha": "ac068c94e76339d9b95dcef8b41a6e34e8bf90f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac068c94e76339d9b95dcef8b41a6e34e8bf90f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac068c94e76339d9b95dcef8b41a6e34e8bf90f5"}], "stats": {"total": 339, "additions": 170, "deletions": 169}, "files": [{"sha": "d39a1cf5b50862e6375c601c3118506e07188e4b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 164, "deletions": 163, "changes": 327, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/245fbaaadfb4af170b63056c0254e61201e8834f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/245fbaaadfb4af170b63056c0254e61201e8834f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=245fbaaadfb4af170b63056c0254e61201e8834f", "patch": "@@ -1,4 +1,4 @@\n-2018-08-15 Will Schmidt  <will_schmidt@vnet.ibm.com>\n+2018-08-15  Will Schmidt  <will_schmidt@vnet.ibm.com>\n \n \t* config/rs6000/rs600.c (rs6000_gimple_fold_builtin): Add entries to\n \tallow folding of mergeh() and mergel() for the float and double types.\n@@ -102,23 +102,23 @@\n \n 2018-08-15  Martin Liska  <mliska@suse.cz>\n \n-        PR tree-optimization/86925\n+\tPR tree-optimization/86925\n \t* predict.c (expr_expected_value_1): When taking\n-        later predictor, assign also probability.\n-        Use fold_build2_initializer_loc in order to fold\n-        the expression in -frounding-math.\n+\tlater predictor, assign also probability.\n+\tUse fold_build2_initializer_loc in order to fold\n+\tthe expression in -frounding-math.\n \n-2018-08-14 Allan Sandfeld Jensen <allan.jensen@qt.io>\n+2018-08-14  Allan Sandfeld Jensen <allan.jensen@qt.io>\n \n \t* config/i386/i386.c (expand_vec_perm_movs): New method matching movs\n \tpatterns.\n \t(expand_vec_perm_1): Try the new method.\n \n 2018-08-14  Ilya Leoshkevich  <iii@linux.ibm.com>\n \n-        PR target/86547\n+\tPR target/86547\n \t* lra-lives.c (remove_some_program_points_and_update_live_ranges):\n-        Check whether lra_live_max_point is 0 before dividing.\n+\tCheck whether lra_live_max_point is 0 before dividing.\n \n 2018-08-14  Martin Sebor  <msebor@redhat.com>\n \n@@ -142,13 +142,13 @@\n \t* gcc/config/rs6000/rs6000.c (rs6000_gimple_fold_builtin): Add support\n \tfor folding vec_perm.\n \n-2018-08-13 Will Schmidt  <will_schmidt@vnet.ibm.com>\n+2018-08-13  Will Schmidt  <will_schmidt@vnet.ibm.com>\n \n \t* config/rs6000/rs6000.c (rs6000_gimple_fold_builtin):\n \tAdd support for gimple-folding of vec_pack() and vec_unpack()\n \tintrinsics.\n \n-2018-08-13 Will Schmidt <will_schmidt@vnet.ibm.com>\n+2018-08-13  Will Schmidt <will_schmidt@vnet.ibm.com>\n \n \t* config/rs6000/rs6000.c (rs6000_builtin_valid_without_lhs): Add\n \tvec_xst variants to the list.\n@@ -169,9 +169,9 @@\n 2018-08-13  Ilya Leoshkevich  <iii@linux.ibm.com>\n \n \t* config/s390/s390.c (s390_decompose_constant_pool_ref):\n-        New function.\n+\tNew function.\n \t(s390_decompose_address): Factor out constant pool ref\n-        decomposition.\n+\tdecomposition.\n \n 2018-08-12  Chung-Ju Wu  <jasonwucj@gmail.com>\n \n@@ -245,14 +245,14 @@\n \n 2018-08-10  Martin Liska  <mliska@suse.cz>\n \n-        PR target/83610\n+\tPR target/83610\n \t* builtin-types.def (BT_FN_LONG_LONG_LONG_DOUBLE): Add new\n-        function type.\n+\tfunction type.\n \t* builtins.c (expand_builtin_expect_with_probability):\n-        New function.\n+\tNew function.\n \t(expand_builtin_expect_with_probability): New function.\n \t(build_builtin_expect_predicate): Add new argumnet probability\n-        for BUILT_IN_EXPECT_WITH_PROBABILITY.\n+\tfor BUILT_IN_EXPECT_WITH_PROBABILITY.\n \t(fold_builtin_expect):\n \t(fold_builtin_2):\n \t(fold_builtin_3):\n@@ -262,30 +262,30 @@\n \t* doc/invoke.texi: Likewise.\n \t* gimple-fold.c (gimple_fold_call): Pass new argument.\n \t* ipa-fnsummary.c (find_foldable_builtin_expect): Handle\n-        also BUILT_IN_EXPECT_WITH_PROBABILITY.\n+\talso BUILT_IN_EXPECT_WITH_PROBABILITY.\n \t* predict.c (get_predictor_value): New function.\n \t(expr_expected_value): Add new argument probability. Assume\n-        that predictor and probability are always non-null.\n+\tthat predictor and probability are always non-null.\n \t(expr_expected_value_1): Likewise.  For __builtin_expect and\n-        __builtin_expect_with_probability set probability.  Handle\n-        combination in binary expressions.\n+\t__builtin_expect_with_probability set probability.  Handle\n+\tcombination in binary expressions.\n \t(tree_predict_by_opcode): Simplify code by simply calling\n-        get_predictor_value.\n+\tget_predictor_value.\n \t(pass_strip_predict_hints::execute): Add handling of\n-        BUILT_IN_EXPECT_WITH_PROBABILITY.\n+\tBUILT_IN_EXPECT_WITH_PROBABILITY.\n \t* predict.def (PRED_BUILTIN_EXPECT_WITH_PROBABILITY): Add\n-        new predictor.\n+\tnew predictor.\n \t* tree.h (DECL_BUILT_IN_P): New function.\n \n 2018-08-10  Martin Liska  <mliska@suse.cz>\n \n-        PR tree-optimization/85799\n+\tPR tree-optimization/85799\n \t* passes.def: Add argument for pass_strip_predict_hints.\n \t* predict.c (class pass_strip_predict_hints): Add new argument\n-        early_p.\n+\tearly_p.\n \t(strip_predictor_early): New function.\n \t(pass_strip_predict_hints::execute): Call the function to\n-        strip predictors.\n+\tstrip predictors.\n \t(strip_predict_hints): New function.\n \t* predict.def: Fix comment.\n \n@@ -378,14 +378,14 @@\n \n 2018-08-09  Martin Liska  <mliska@suse.cz>\n \n-        PR c/86895\n+\tPR c/86895\n \t* common.opt: Remove extra line.\n \n 2018-08-09  Martin Liska  <mliska@suse.cz>\n \n \t* params.def (PARAM_ALIGN_LOOP_ITERATIONS): Remove double dots\n-        at the end of a line, make first letter capital and end up\n-        a sentence with a dot.\n+\tat the end of a line, make first letter capital and end up\n+\ta sentence with a dot.\n \t(PARAM_LOOP_INTERCHANGE_STRIDE_RATIO): Likewise.\n \t(PARAM_LOOP_BLOCK_TILE_SIZE): Likewise.\n \t(PARAM_GRAPHITE_MAX_NB_SCOP_PARAMS): Likewise.\n@@ -452,7 +452,7 @@\n 2018-08-08  Ilya Leoshkevich  <iii@linux.ibm.com>\n \n \t* config/s390/s390.c (s390_loadrelative_operand_p):\n-        Remove TARGET_CPU_ZARCH usages.\n+\tRemove TARGET_CPU_ZARCH usages.\n \t(s390_rtx_costs): Likewise.\n \t(s390_legitimate_constant_p): Likewise.\n \t(s390_cannot_force_const_mem): Likewise.\n@@ -472,7 +472,7 @@\n \t(s390_register_info): Remove split_branches_pending_p uages.\n \t(s390_optimize_register_info): Likewise.\n \t(s390_init_frame_layout): Remove TARGET_CPU_ZARCH and\n-        split_branches_pending_p usages.\n+\tsplit_branches_pending_p usages.\n \t(s390_can_eliminate): Remove TARGET_CPU_ZARCH usages.\n \t(s390_load_got): Likewise.\n \t(s390_expand_split_stack_prologue): Likewise.\n@@ -482,9 +482,9 @@\n \t(s390_conditional_register_usage): Likewise.\n \t(s390_optimize_prologue): Likewise.\n \t(s390_reorg): Remove TARGET_CPU_ZARCH and\n-        split_branches_pending_p usages.\n+\tsplit_branches_pending_p usages.\n \t(s390_option_override_internal): Remove TARGET_CPU_ZARCH\n-        usages.\n+\tusages.\n \t(s390_output_indirect_thunk_function): Likewise.\n \t* config/s390/s390.h (TARGET_CPU_ZARCH): Removed.\n \t(TARGET_CPU_ZARCH_P): Removed.\n@@ -494,29 +494,29 @@\n 2018-08-08  Ilya Leoshkevich  <iii@linux.ibm.com>\n \n \t* common/config/s390/s390-common.c (processor_flags_table):\n-        Remove flags.\n+\tRemove flags.\n \t* config.gcc: Remove with_arch/with_tune support.\n \t* config/s390/2064.md: Remove cpu attribute comparisons.\n \t* config/s390/driver-native.c (s390_host_detect_local_cpu):\n-        Remove MTN.\n+\tRemove MTN.\n \t* config/s390/linux.h (ASM_SPEC):\n-        Remove -march support.\n+\tRemove -march support.\n \t* config/s390/s390-c.c (s390_cpu_cpp_builtins_internal):\n-        Use a table to get an arch level.\n+\tUse a table to get an arch level.\n \t* config/s390/s390-opts.h (enum processor_type):\n-        Remove enum values.\n+\tRemove enum values.\n \t* config/s390/s390.c\n-        (processor_table): Remove entries, add arch_level values.\n-        (s390_issue_rate): Remove cases.\n-        (s390_option_override): Adjust\n-        s390_option_override_internal() call.\n+\t(processor_table): Remove entries, add arch_level values.\n+\t(s390_issue_rate): Remove cases.\n+\t(s390_option_override): Adjust\n+\ts390_option_override_internal() call.\n \t(s390_option_override_internal): Remove deprecation warning.\n-        (s390_valid_target_attribute_tree): Adjust\n-        s390_option_override_internal() call.\n+\t(s390_valid_target_attribute_tree): Adjust\n+\ts390_option_override_internal() call.\n \t* config/s390/s390.h (struct s390_processor):\n-        Share with s390-c.c, add arch_level field.\n+\tShare with s390-c.c, add arch_level field.\n \t* config/s390/s390.md:\n-        Remove occurrences in cpu attribute.\n+\tRemove occurrences in cpu attribute.\n \t* config/s390/s390.opt: Remove -march/-mtune support.\n \t* config/s390/tpf.h (ASM_SPEC): Remove -march support.\n \t* doc/invoke.texi: Remove deprecation warning.\n@@ -544,12 +544,12 @@\n \n 2018-08-07  Martin Liska  <mliska@suse.cz>\n \n-        PR middle-end/83023\n+\tPR middle-end/83023\n \t* predict.c (expr_expected_value_1): Handle DECL_IS_MALLOC,\n-        BUILT_IN_REALLOC and DECL_IS_OPERATOR_NEW.\n+\tBUILT_IN_REALLOC and DECL_IS_OPERATOR_NEW.\n \t* predict.def (PRED_MALLOC_NONNULL): New predictor.\n \t* doc/extend.texi: Document that malloc attribute adds\n-        hit to compiler.\n+\thit to compiler.\n \n 2018-08-06  John David Anglin  <danglin@gcc.gnu.org>\n \n@@ -563,7 +563,7 @@\n \tthe vr_values instance to cprop_into_stmt.\n \t(cprop_into_stmt): Pass vr_values instance down to cprop_operand.\n \t(cprop_operand): Also query EVRP to determine if OP is a constant.\n-\t\n+\n 2018-08-06  Nathan Sidwell  <nathan@acm.org>\n \n \t* diagnostic.c (diagnostic_report_current_module): Reroll\n@@ -790,7 +790,7 @@\n 2018-08-03  Martin Liska  <mliska@suse.cz>\n \n \t* predict.c (dump_prediction): Change to 2 digits\n-        in fraction part.\n+\tin fraction part.\n \n 2018-08-03  Siddhesh Poyarekar  <siddhesh@sourceware.org>\n \n@@ -991,11 +991,11 @@\n \n 2018-08-02  Martin Liska  <mliska@suse.cz>\n \n-        PR gcov-profile/86817\n+\tPR gcov-profile/86817\n \t* gcov.c (process_all_functions): New function.\n \t(main): Call it.\n \t(process_file): Move functions processing to\n-        process_all_functions.\n+\tprocess_all_functions.\n \n 2018-08-02  David Malcolm  <dmalcolm@redhat.com>\n \n@@ -1010,8 +1010,8 @@\n \tPR tree-optimization/86650\n \t* gimple-pretty-print.c (percent_G_format): Accept a \"gimple *\"\n \trather than a \"gcall *\".  Directly pass the data of interest\n- \tto percent_K_format, rather than building a temporary CALL_EXPR\n- \tto hold it.\n+\tto percent_K_format, rather than building a temporary CALL_EXPR\n+\tto hold it.\n \t* gimple-fold.c (gimple_fold_builtin_strncpy): Adjust.\n \t(gimple_fold_builtin_strncat): Adjust.\n \t* gimple-ssa-warn-restrict.h (check_bounds_or_overlap): Replace\n@@ -1162,16 +1162,16 @@\n 2018-08-01  Martin Liska  <mliska@suse.cz>\n \n \t* value-prof.c (gimple_divmod_fixed_value_transform): Unify\n-        format how successful transformation is dumped.\n+\tformat how successful transformation is dumped.\n \t(gimple_mod_pow2_value_transform): Likewise.\n \t(gimple_mod_subtract_transform): Likewise.\n \t(gimple_stringops_transform): Likewise.\n \n 2018-08-01  Martin Liska  <mliska@suse.cz>\n \n-        PR value-prof/35543\n+\tPR value-prof/35543\n \t* value-prof.c (interesting_stringop_to_profile_p):\n-        Simplify the code and add BUILT_IN_MEMMOVE.\n+\tSimplify the code and add BUILT_IN_MEMMOVE.\n \t(gimple_stringops_transform): Likewise.\n \n 2018-08-01  Sam Tebbs  <sam.tebbs@arm.com>\n@@ -1199,7 +1199,7 @@\n \t* graphite.h: Include isl/id.h and isl/space.h to allow build\n \twith ISL 0.20.\n \n-2018-08-01 Jan Willem Jagersma  <jwjagersma@gmail.com>\n+2018-08-01  Jan Willem Jagersma  <jwjagersma@gmail.com>\n \n \tPR target/86651\n \t* dwarf2out.c (dwarf2out_early_finish): Do not generate assembly in LTO\n@@ -1222,7 +1222,7 @@\n \t* final.c (decl_to_instance_map): Document LTO strategy.\n \n 2018-07-31  Alexandre Oliva  <oliva@adacore.com>\n-            Olivier Hainque  <hainque@adacore.com>\n+\t    Olivier Hainque  <hainque@adacore.com>\n \n \t* debug.h (decl_to_instance_map_t): New type.\n \t(decl_to_instance_map): Declare.\n@@ -2284,29 +2284,29 @@\n \n 2018-07-31  Martin Liska  <mliska@suse.cz>\n \n-        PR gcov-profile/85338\n-        PR gcov-profile/85350\n-        PR gcov-profile/85372\n-        * profile.c (struct location_triplet): New.\n+\tPR gcov-profile/85338\n+\tPR gcov-profile/85350\n+\tPR gcov-profile/85372\n+\t* profile.c (struct location_triplet): New.\n \t(struct location_triplet_hash): Likewise.\n \t(output_location): Do not output a BB that\n-        is already recorded for a line.\n+\tis already recorded for a line.\n \t(branch_prob): Use streamed_locations.\n \n 2018-07-31  Martin Liska  <mliska@suse.cz>\n \n-        PR gcov-profile/85370\n+\tPR gcov-profile/85370\n \t* coverage.c (coverage_begin_function): Do not mark target\n-        clones as artificial functions.\n+\tclones as artificial functions.\n \n 2018-07-31  Martin Liska  <mliska@suse.cz>\n \n-        PR gcov-profile/83813\n-        PR gcov-profile/84758\n-        PR gcov-profile/85217\n-        PR gcov-profile/85332\n+\tPR gcov-profile/83813\n+\tPR gcov-profile/84758\n+\tPR gcov-profile/85217\n+\tPR gcov-profile/85332\n \t* profile.c (branch_prob): Do not record GOTO expressions\n-        for GIMPLE statements which locations are already streamed.\n+\tfor GIMPLE statements which locations are already streamed.\n \n 2018-07-31  Olivier Hainque  <hainque@adacore.com>\n \n@@ -2381,7 +2381,7 @@\n \n 2018-07-30  Ilya Leoshkevich  <iii@linux.ibm.com>\n \n-        PR target/86547\n+\tPR target/86547\n \t* lra-constraints.c (spill_hard_reg_in_range): When selecting the\n \thard_regno, make sure no insn between `from` and `to` clobbers it.\n \n@@ -2482,9 +2482,9 @@\n \n 2018-07-26  Martin Liska  <mliska@suse.cz>\n \n-        PR lto/86548\n+\tPR lto/86548\n \t* lto-wrapper.c: Add linker_output as prefix\n-        for ltrans_output_file.\n+\tfor ltrans_output_file.\n \n 2018-07-26  Segher Boessenkool  <segher@kernel.crashing.org>\n \n@@ -2532,7 +2532,7 @@\n 2018-07-25  Martin Liska  <mliska@suse.cz>\n \n \t* config/powerpcspe/powerpcspe-protos.h (rs6000_loop_align): Fix\n-        return type.\n+\treturn type.\n \n 2018-07-25  Richard Biener  <rguenther@suse.de>\n \n@@ -2548,22 +2548,22 @@\n \n 2018-07-25  Martin Liska  <mliska@suse.cz>\n \n-        PR middle-end/86645\n+\tPR middle-end/86645\n \t* dumpfile.c: And excluded values with TDF_ALL_VALUES.\n \t* dumpfile.h (enum dump_flag): Defince TDF_ALL_VALUES.\n \n 2018-07-25  Martin Liska  <mliska@suse.cz>\n \n-        PR sanitizer/79635\n+\tPR sanitizer/79635\n \t* params.def: Explain ASan abbreviation and provide\n-        a documentation link.\n+\ta documentation link.\n \n 2018-07-24  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/86622\n \tPR tree-optimization/86532\n \t* builtins.h (string_length): Declare.\n-\t* builtins.c (c_strlen): Correct handling of non-constant offsets.\t\n+\t* builtins.c (c_strlen): Correct handling of non-constant offsets.\n \t(check_access): Be prepared for non-constant length ranges.\n \t(string_length): Make extern.\n \t* expr.c (string_constant): Only handle the minor non-constant\n@@ -2738,7 +2738,7 @@\n \tto unsigned_char_type_node for strcmp/strncmp, add conversions to the\n \ttwo operands.\n \t(inline_expand_builtin_string_cmp): Delete the last parameter, give up\n-\tthe inlining expansion on target where the type of the call has same or \n+\tthe inlining expansion on target where the type of the call has same or\n \tnarrower precision than unsigned char.\n \n 2018-07-20  David Malcolm  <dmalcolm@redhat.com>\n@@ -3064,8 +3064,8 @@\n 2018-07-18  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \n \tPR middle-end/86544\n-\t* tree-ssa-phiopt.c (cond_removal_in_popcount_pattern): Handle comparision with EQ_EXPR\n-\tin last stmt.\n+\t* tree-ssa-phiopt.c (cond_removal_in_popcount_pattern): Handle\n+\tcomparision with EQ_EXPR in last stmt.\n \n 2018-07-18  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n \n@@ -3165,7 +3165,7 @@\n 2018-07-17  Martin Liska  <mliska@suse.cz>\n \n \t* config/i386/att.h (ASM_OUTPUT_ALIGN): Fix spacing\n-        in order to fulfil coding style.\n+\tin order to fulfil coding style.\n \t* config/i386/cygming.h (ASM_OUTPUT_ALIGN): Likewise.\n \t* config/i386/gas.h (ASM_OUTPUT_MAX_SKIP_ALIGN): Likewise.\n \t* config/i386/x86-64.h (ASM_OUTPUT_MAX_SKIP_PAD): Likewise.\n@@ -3179,11 +3179,12 @@\n 2018-07-17  Martin Liska  <mliska@suse.cz>\n \n \t* align.h: New file.\n-\t* config/alpha/alpha.c (alpha_align_insns_1): Use align_functions directly.\n+\t* config/alpha/alpha.c (alpha_align_insns_1): Use align_functions\n+\tdirectly.\n \t* config/i386/i386.c (ix86_avoid_jump_mispredicts): Use new return type\n \talign_flags of label_to_alignment.\n-\t* config/m32r/m32r.h (LOOP_ALIGN): Wrap returned values into align_flags\n-\tclass.\n+\t* config/m32r/m32r.h (LOOP_ALIGN): Wrap returned values into\n+\talign_flags class.\n \t* config/m68k/m68k.c: Do not use removed align_labels_value and\n \talign_loops_value.\n \t* config/nds32/nds32.h (JUMP_ALIGN): Wrap result into align_flags class.\n@@ -3201,11 +3202,11 @@\n \t(rs6000_loop_align_max_skip): Remove.\n \t* config/rx/rx.h (JUMP_ALIGN): Wrap integer values\n \t* config/rx/rx-protos.h (rx_align_for_label): Make it\n-        static function.\n+\tstatic function.\n \t* config/rx/rx.c (rx_align_for_label): Change return type\n-        to align_flags.\n+\tto align_flags.\n \t(rx_max_skip_for_label): Remove TARGET_ASM_*_ALIGN_MAX_SKIP\n-        macro definitions.\n+\tmacro definitions.\n \tinto align_flags class.\n \t(LABEL_ALIGN): Likewise.\n \t(LOOP_ALIGN): Likewise.\n@@ -3228,7 +3229,7 @@\n \t* coretypes.h: Include align.h header file.\n \t* doc/tm.texi: Remove TARGET_ASM_JUMP_ALIGN_MAX_SKIP,\n \tTARGET_ASM_LOOP_ALIGN_MAX_SKIP, TARGET_ASM_LABEL_ALIGN_MAX_SKIP\n-        and TARGET_ASM_LABEL_ALIGN_AFTER_BARRIER_MAX_SKIP macros.\n+\tand TARGET_ASM_LABEL_ALIGN_AFTER_BARRIER_MAX_SKIP macros.\n \t* doc/tm.texi.in: Likewise.\n \t* final.c (struct label_alignment): Remove not used structure.\n \t(LABEL_ALIGN): Change type to align_flags.\n@@ -3370,9 +3371,9 @@\n \n 2018-07-16  Martin Liska  <mliska@suse.cz>\n \n-        PR ipa/86529\n+\tPR ipa/86529\n \t* ipa-pure-const.c (malloc_candidate_p): Revert ::get\n-        to ::get_create.\n+\tto ::get_create.\n \n 2017-07-16  Claudiu Zissulescu  <claziss@synopsys.com>\n \n@@ -3421,19 +3422,19 @@\n \n 2018-07-16  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * fold-const.c (int_const_binop_1): Abstract...\n-        (wide_int_binop): ...wide int code here.\n+\t* fold-const.c (int_const_binop_1): Abstract...\n+\t(wide_int_binop): ...wide int code here.\n \t(poly_int_binop): ...poly int code here.\n \tAbstract the rest of int_const_binop_1 into int_const_binop.\n-        * fold-const.h (wide_int_binop): New.\n-        * tree-vrp.c (vrp_int_const_binop): Call wide_int_binop.\n+\t* fold-const.h (wide_int_binop): New.\n+\t* tree-vrp.c (vrp_int_const_binop): Call wide_int_binop.\n \tRemove useless PLUS/MINUS_EXPR case.\n-        (zero_nonzero_bits_from_vr): Move wide int code...\n-        (zero_nonzero_bits_from_bounds): ...here.\n-        (extract_range_from_binary_expr_1): Move mask optimization code...\n-        (range_easy_mask_min_max): ...here.\n-        * tree-vrp.h (zero_nonzero_bits_from_bounds): New.\n-        (range_easy_mask_min_max): New.\n+\t(zero_nonzero_bits_from_vr): Move wide int code...\n+\t(zero_nonzero_bits_from_bounds): ...here.\n+\t(extract_range_from_binary_expr_1): Move mask optimization code...\n+\t(range_easy_mask_min_max): ...here.\n+\t* tree-vrp.h (zero_nonzero_bits_from_bounds): New.\n+\t(range_easy_mask_min_max): New.\n \n 2018-07-15  Jeff Law  <law@redhat.com>\n \n@@ -3525,14 +3526,14 @@\n \n 2018-07-12  Kito Cheng  <kito.cheng@gmail.com>\n \n-        * config/riscv/riscv.c (enum riscv_privilege_levels): Add UNKNOWN_MODE.\n-        (riscv_expand_epilogue): Add assertion to check interrupt mode.\n-        (riscv_set_current_function): Extract getting interrupt type to new\n-        function.\n-        (riscv_get_interrupt_type): New function.\n-        (riscv_merge_decl_attributes): New function, checking interrupt type is\n-        same.\n-        (TARGET_MERGE_DECL_ATTRIBUTES): Define.\n+\t* config/riscv/riscv.c (enum riscv_privilege_levels): Add UNKNOWN_MODE.\n+\t(riscv_expand_epilogue): Add assertion to check interrupt mode.\n+\t(riscv_set_current_function): Extract getting interrupt type to new\n+\tfunction.\n+\t(riscv_get_interrupt_type): New function.\n+\t(riscv_merge_decl_attributes): New function, checking interrupt type is\n+\tsame.\n+\t(TARGET_MERGE_DECL_ATTRIBUTES): Define.\n \n 2018-07-12  Paul Koning  <ni1d@arrl.net>\n \n@@ -3845,7 +3846,7 @@\n \n 2018-07-11  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * tree-ssa-threadupdate.c (thread_through_all_blocks): Do not jump\n+\t* tree-ssa-threadupdate.c (thread_through_all_blocks): Do not jump\n \tthread twice from the same starting edge.\n \n 2018-07-11  Aldy Hernandez  <aldyh@redhat.com>\n@@ -4162,7 +4163,7 @@\n 2018-07-04  Martin Liska  <mliska@suse.cz>\n \n \t* tree-switch-conversion.c: Define\n-        max_ratio_for_speed and max_ratio_for_size constants.\n+\tmax_ratio_for_speed and max_ratio_for_size constants.\n \n 2018-07-04  Denys Vlasenko  <dvlasenk@redhat.com>\n \t    Martin Liska  <mliska@suse.cz>\n@@ -4208,29 +4209,29 @@\n \tmax skip conditionally.\n \t(ASM_OUTPUT_MAX_SKIP_PAD): Likewise.\n \t* config/ia64/ia64.c (ia64_option_override): Set default values\n-        for alignment options.\n+\tfor alignment options.\n \t* config/m68k/m68k.c: Handle new str_align_* options.\n \t* config/mips/mips.c (mips_set_compression_mode): Change\n \ttype of constants.\n \t(mips_option_override): Set default values for options.\n \t* config/powerpcspe/powerpcspe.c (rs6000_option_override_internal):\n-        Likewise.\n+\tLikewise.\n \t* config/rs6000/rs6000.c (rs6000_option_override_internal):\n \tLikewise.\n \t* config/rx/rx.c (rx_option_override): Likewise.\n \t* config/rx/rx.h (JUMP_ALIGN): Use align_jumps_log.\n \t(LABEL_ALIGN): Use align_labels_log.\n \t(LOOP_ALIGN): Use align_loops_align.\n \t* config/s390/s390.c (s390_asm_output_function_label): Use new\n-        macros.\n+\tmacros.\n \t* config/sh/sh.c (sh_override_options_after_change):\n \tChange type of constants.\n \t* config/spu/spu.c (spu_sched_init): Likewise.\n \t* config/sparc/sparc.c (sparc_option_override): Set default\n-        values for options.\n+\tvalues for options.\n \t* config/visium/visium.c (visium_option_override): Likewise.\n \t* config/visium/visium.h (ASM_OUTPUT_MAX_SKIP_ALIGN): Do not\n-        emit p2align format with last argument if it's not needed.\n+\temit p2align format with last argument if it's not needed.\n \t* doc/invoke.texi: Document extended format of -falign-*.\n \t* final.c: Use align_labels alignment.\n \t* flags.h (struct target_flag_state): Change type to use\n@@ -4300,7 +4301,7 @@\n \t* config/i386/x86-64.h (ASM_OUTPUT_MAX_SKIP_ALIGN): Likewise.\n \n 2018-07-04  Martin Liska  <mliska@suse.cz>\n-            Jonathan Wakely  <jwakely@redhat.com>\n+\t    Jonathan Wakely  <jwakely@redhat.com>\n \n \t* coverage.c: Use correct type.\n \t* doc/invoke.texi: Language correction.\n@@ -4634,13 +4635,13 @@\n \n 2018-07-02  Martin Liska  <mliska@suse.cz>\n \n-        PR ipa/86279\n+\tPR ipa/86279\n \t* ipa-pure-const.c (malloc_candidate_p): Revert usage of ::get.\n \t(propagate_nothrow): Likewise.\n \n 2018-07-02  Martin Liska  <mliska@suse.cz>\n \n-        PR ipa/86323\n+\tPR ipa/86323\n \t* ipa-inline.c (early_inliner): Revert wrongly added ::get call.\n \n 2018-07-02  David Malcolm  <dmalcolm@redhat.com>\n@@ -4867,9 +4868,9 @@\n \n 2018-06-29  Martin Liska  <mliska@suse.cz>\n \n-        PR tree-optimization/86263\n+\tPR tree-optimization/86263\n \t* tree-switch-conversion.c (switch_decision_tree::try_switch_expansion):\n-        Make edge redirection.\n+\tMake edge redirection.\n \n 2018-06-29  David Malcolm  <dmalcolm@redhat.com>\n \n@@ -4962,33 +4963,33 @@\n 2018-06-28  Martin Liska  <mliska@suse.cz>\n \n \t* tree-switch-conversion.c (jump_table_cluster::can_be_handled):\n-        Use newly introduced constants.\n+\tUse newly introduced constants.\n \t* tree-switch-conversion.h (struct jump_table_cluster):\n-        Define max_ratio_for_size and max_ratio_for_speed.\n+\tDefine max_ratio_for_size and max_ratio_for_speed.\n \n 2018-06-28  Martin Liska  <mliska@suse.cz>\n \n \t* tree-switch-conversion.c (jump_table_cluster::find_jump_tables):\n-        Add new checking assert to catch invalid state.\n+\tAdd new checking assert to catch invalid state.\n \t(jump_table_cluster::can_be_handled): Handle single case\n-        clusters.\n+\tclusters.\n \t(jump_table_cluster::is_beneficial): Bail out for such case.\n \t(bit_test_cluster::find_bit_tests):\n-        Add new checking assert to catch invalid state.\n+\tAdd new checking assert to catch invalid state.\n \t(bit_test_cluster::can_be_handled): Handle single case\n-        clusters.\n+\tclusters.\n \t(bit_test_cluster::is_beneficial): Bail out for such case.\n \t(switch_decision_tree::analyze_switch_statement):\n-        Fix comment.\n+\tFix comment.\n \n 2018-06-28  Martin Liska  <mliska@suse.cz>\n \n \t* common.opt: Introduce -completion option.\n \t* gcc.c (driver_handle_option): Handle it.\n \t(driver::main): Print completions if completion\n-        is set.\n+\tis set.\n \t* opt-suggestions.c (option_proposer::get_completions):\n-        New function.\n+\tNew function.\n \t(option_proposer::suggest_completion): Likewise.\n \t(option_proposer::find_param_completions): Likewise.\n \t(verify_autocompletions): Likewise.\n@@ -5002,7 +5003,7 @@\n \t* opt-suggestions.h: Declare new functions.\n \t* opts.c (common_handle_option): Handle OPT__completion_.\n \t* selftest-run-tests.c (selftest::run_tests): Add\n-        opt_proposer_c_tests.\n+\topt_proposer_c_tests.\n \t* selftest.c (assert_str_startswith): New.\n \t* selftest.h (assert_str_startswith): Likewise.\n \t(opt_proposer_c_tests): New.\n@@ -5234,7 +5235,7 @@\n \t* doc/invoke.texi (ARM Options): Document cortex-a76 and\n \tcortex-a76.cortex-a55.\n \n-2018-06-27 Tamar Christina  <tamar.christina@arm.com>\n+2018-06-27  Tamar Christina  <tamar.christina@arm.com>\n \n \tPR target/85769\n \t* config/aarch64/aarch64.md (*movhf_aarch64): Add dup v0.4h pattern.\n@@ -5395,8 +5396,8 @@\n \n 2018-06-26  Robin Dapp  <rdapp@linux.vnet.ibm.com>\n \n-        * config/s390/s390.h (enum processor_flags): Do not use\n-        default tune parameter when -march was specified.\n+\t* config/s390/s390.h (enum processor_flags): Do not use\n+\tdefault tune parameter when -march was specified.\n \n 2018-06-26  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -5620,11 +5621,11 @@\n \n 2018-06-22  Martin Liska  <mliska@suse.cz>\n \n-        PR tree-optimization/86263\n+\tPR tree-optimization/86263\n \t* tree-switch-conversion.c (jump_table_cluster::find_jump_tables):\n-        Bail out if is_enabled is false.\n+\tBail out if is_enabled is false.\n \t* tree-switch-conversion.h (jump_table_cluster::is_enabled):\n-        New declaration.\n+\tNew declaration.\n \t(jump_table_cluster::is_enabled): New function.\n \n 2018-06-22  Jan Hubicka  <hubicka@ucw.cz>\n@@ -5644,9 +5645,9 @@\n 2018-06-22  Martin Liska  <mliska@suse.cz>\n \n \t* symbol-summary.h (get): Make it pure and inline move\n-        functionality from ::get function.\n-        (get): Remove and inline into ::get and ::get_create.\n-        (get_create): Move code from ::get function.\n+\tfunctionality from ::get function.\n+\t(get): Remove and inline into ::get and ::get_create.\n+\t(get_create): Move code from ::get function.\n \n 2018-06-22  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n@@ -5700,7 +5701,7 @@\n 2018-06-21  Martin Liska  <mliska@suse.cz>\n \n \t* ipa-pure-const.c (propagate_nothrow): Use\n-        funct_state_summaries->get.\n+\tfunct_state_summaries->get.\n \t(dump_malloc_lattice): Likewise.\n \t(propagate_malloc): Likewise.\n \n@@ -5844,21 +5845,21 @@\n 2018-06-20  Martin Liska  <mliska@suse.cz>\n \n \t* tree-switch-conversion.c (jump_table_cluster::can_be_handled):\n-        Change default ratio from 10 to 8.\n+\tChange default ratio from 10 to 8.\n \n 2018-06-20  Martin Liska  <mliska@suse.cz>\n \n \t* tree-switch-conversion.c (jump_table_cluster::find_jump_tables):\n-        New.\n+\tNew.\n \t(bit_test_cluster::find_bit_tests): Likewise.\n \t(switch_decision_tree::analyze_switch_statement): Find clusters.\n \t* tree-switch-conversion.h (struct jump_table_cluster): Document\n-        hierarchy.\n+\thierarchy.\n \n 2018-06-20  Martin Liska  <mliska@suse.cz>\n \n \t* tree-switch-conversion.c (switch_conversion::collect):\n-        Record m_uniq property.\n+\tRecord m_uniq property.\n \t(switch_conversion::expand): Bail out for special conditions.\n \t(group_cluster::~group_cluster): New.\n \t(group_cluster::group_cluster): Likewise.\n@@ -6095,9 +6096,9 @@\n 2018-06-19  Martin Liska  <mliska@suse.cz>\n \n \t* config/i386/i386.c (ix86_can_inline_p): Do not use\n-        ipa_fn_summaries::get_create.\n+\tipa_fn_summaries::get_create.\n \t* ipa-cp.c (ipcp_cloning_candidate_p): Replace get_create with\n-        get.\n+\tget.\n \t(devirtualization_time_bonus): Likewise.\n \t(ipcp_propagate_stage): Likewise.\n \t* ipa-fnsummary.c (redirect_to_unreachable): Likewise.\n@@ -6111,13 +6112,13 @@\n \t(ipa_fn_summary_t::remove): Rename to ...\n \t(ipa_fn_summary_t::remove_callees): ... this.\n \t(ipa_fn_summary_t::duplicate): Use placement new\n-        instead of memory copy.\n+\tinstead of memory copy.\n \t(ipa_call_summary_t::duplicate): Likewise.\n \t(ipa_call_summary_t::remove): Remove.\n \t(dump_ipa_call_summary): Change get_create to get.\n \t(ipa_dump_fn_summary): Dump only when summary exists.\n \t(analyze_function_body): Use symbol_summary::get instead\n-        of get_create.\n+\tof get_create.\n \t(compute_fn_summary): Likewise.\n \t(estimate_edge_devirt_benefit): Likewise.\n \t(estimate_edge_size_and_time): Likewise.\n@@ -6131,7 +6132,7 @@\n \t* ipa-fnsummary.h (struct GTY): Add new ctor and copy ctor.\n \t(struct ipa_call_summary): Likewise.\n \t* ipa-icf.c (sem_function::merge): Use symbol_summary::get instead\n-        of get_create.\n+\tof get_create.\n \t* ipa-inline-analysis.c (do_estimate_edge_time): Likewise.\n \t(estimate_size_after_inlining): Likewise.\n \t(estimate_growth): Likewise.\n@@ -6864,7 +6865,7 @@\n \t* config/i386/i386.opt: Make MPX-related options as Deprecated.\n \t* opt-functions.awk: Handle Deprecated flag.\n \t* opts-common.c (decode_cmdline_option): Handle cl_deprecated\n-        and report error.\n+\tand report error.\n \t(read_cmdline_option): Report warning for a deprecated option.\n \t* opts.h (struct cl_option): Add new field cl_deprecated.\n \t(CL_ERR_DEPRECATED): New.\n@@ -6986,7 +6987,7 @@\n \t* PR tree-optimization/86083\n \t* tree-ssa-strlen.c (handle_char_store): Use tree_expr_nonzero_p.\n \n-2018-06-11 Zhouyi Zhou <zhouzhouyi@gmail.com>\n+2018-06-11  Zhouyi Zhou <zhouzhouyi@gmail.com>\n \n \t* tree-eh.c (lower_eh_constructs_2): Add a comma to comment.\n \n@@ -6999,7 +7000,7 @@\n \n 2018-06-11  Martin Liska  <mliska@suse.cz>\n \n-        PR tree-optimization/86089\n+\tPR tree-optimization/86089\n \t* tree-ssa-strlen.c (get_string_length): Move back removed hunk.\n \n 2018-06-11  Julia Koval  <julia.koval@intel.com>\n@@ -7031,12 +7032,12 @@\n 2018-06-08  Martin Liska  <mliska@suse.cz>\n \n \t* tree-cfg.h (debug_function): Fix argument type to match\n-        implementation.\n+\timplementation.\n \n 2018-06-08  Martin Liska  <mliska@suse.cz>\n \n \t* config/powerpcspe/powerpcspe.c (rs6000_xcoff_visibility):\n-        Remove usage of MPX-related (and removed) fields.\n+\tRemove usage of MPX-related (and removed) fields.\n \t* config/rs6000/rs6000.c (rs6000_xcoff_visibility): Likewise.\n \n 2018-06-08  David Malcolm  <dmalcolm@redhat.com>\n@@ -7130,7 +7131,7 @@\n 2018-06-08  Martin Liska  <mliska@suse.cz>\n \n \t* ipa-pure-const.c (propagate_pure_const): Use ::get at places\n-        where we expect an existing summary.\n+\twhere we expect an existing summary.\n \n 2018-06-08  Martin Liska  <mliska@suse.cz>\n \n@@ -8348,7 +8349,7 @@\n \t* omp-low.c (lower_omp_target): Avoid reference-type processing\n \ton pointers for firstprivate clause.\n \n-2018-05-31 Sameera Deshpande <sameera.deshpande@linaro.org>\n+2018-05-31  Sameera Deshpande <sameera.deshpande@linaro.org>\n \n \t* config/aarch64/aarch64-simd-builtins.def (ld1x3): New.\n \t(st1x2): Likewise.\n@@ -8469,7 +8470,7 @@\n \t(expand_builtin_stpcpy): Call it, and call maybe_warn_nonstring_arg\n \tonly if the former succeeds.\n \n-2018-05-31 Sameera Deshpande <sameera.deshpande@linaro.org>\n+2018-05-31  Sameera Deshpande <sameera.deshpande@linaro.org>\n \n \t* config/aarch64/aarch64-cores.def (saphira) : Add support for ARMv8.4\n \tin saphira.\n@@ -11533,7 +11534,7 @@\n \t* doc/invoke.texi (Developer Options): Document dump filename\n \tdetermination early.  Document stdin/stdout selection.\n \n-2018-04-30 Andrew Sadek  <andrew.sadek.se@gmail.com>\n+2018-04-30  Andrew Sadek  <andrew.sadek.se@gmail.com>\n \n \tMicroblaze Target: PIC data text relative\n \n@@ -13633,7 +13634,7 @@\n \t(DIVDE): Use it.\n \t(DIVDEU): Likewise.\n \n-2018-03-28 Carl Love  <cel@us.ibm.com>\n+2018-03-28  Carl Love  <cel@us.ibm.com>\n \n \tRevert\n \t2017-09-27  Carl Love  <cel@us.ibm.com>\n@@ -18475,7 +18476,7 @@\n \tLimit immediates.\n \t* config/aarch64/predicates.md (Uti): Add new constraint.\n \n-2018-01-17 Carl Love  <cel@us.ibm.com>\n+2018-01-17  Carl Love  <cel@us.ibm.com>\n \n \t* config/rs6000/vsx.md (define_expand xl_len_r,\n \tdefine_expand stxvl, define_expand *stxvl): Add match_dup argument."}, {"sha": "f8be6137cadf9ea0bdb52180ae165d8ccc2a1fe0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/245fbaaadfb4af170b63056c0254e61201e8834f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/245fbaaadfb4af170b63056c0254e61201e8834f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=245fbaaadfb4af170b63056c0254e61201e8834f", "patch": "@@ -69,15 +69,15 @@\n \n 2018-08-15  Martin Liska  <mliska@suse.cz>\n \n-        PR tree-optimization/86925\n+\tPR tree-optimization/86925\n \t* gcc.dg/predict-20.c: New test.\n \t* gcc.dg/predict-21.c: New test.\n \n 2018-08-15  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* g++.dg/init/goto3.C: Adjust for error instead of permerror.\n \n-2018-08-14 Allan Sandfeld Jensen <allan.jensen@qt.io>\n+2018-08-14  Allan Sandfeld Jensen <allan.jensen@qt.io>\n \n \t* gcc.target/i386/sse2-movs.c: New test.\n \n@@ -172,14 +172,14 @@\n \n 2018-08-10  Martin Liska  <mliska@suse.cz>\n \n-        PR target/83610\n+\tPR target/83610\n \t* gcc.dg/predict-17.c: New test.\n \t* gcc.dg/predict-18.c: New test.\n \t* gcc.dg/predict-19.c: New test.\n \n 2018-08-10  Martin Liska  <mliska@suse.cz>\n \n-        PR tree-optimization/85799\n+\tPR tree-optimization/85799\n \t* gcc.dg/pr85799.c: New test.\n \n 2018-08-09  Jeff Law  <law@redhat.com>\n@@ -348,7 +348,7 @@\n \n 2018-08-07  Martin Liska  <mliska@suse.cz>\n \n-        PR middle-end/83023\n+\tPR middle-end/83023\n \t* gcc.dg/predict-16.c: New test.\n \t* g++.dg/predict-1.C: New test.\n \n@@ -1969,7 +1969,7 @@\n \n \t* gcc.target/vsx-vector-abss.c: New file to test vec_abss.\n \n-2018-06-27 Tamar Christina  <tamar.christina@arm.com>\n+2018-06-27  Tamar Christina  <tamar.christina@arm.com>\n \n \tPR target/85769\n \t* gcc.target/aarch64/f16_mov_immediate_3.c: New."}]}