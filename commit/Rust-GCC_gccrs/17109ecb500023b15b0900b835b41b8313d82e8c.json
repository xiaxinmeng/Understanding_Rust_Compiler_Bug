{"sha": "17109ecb500023b15b0900b835b41b8313d82e8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTcxMDllY2I1MDAwMjNiMTViMDkwMGI4MzViNDFiODMxM2Q4MmU4Yw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2005-11-05T21:09:13Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2005-11-05T21:09:13Z"}, "message": "configure.ac: Use AM_FCFLAGS for extra flags, not FCFLAGS.\n\n2005-11-05  Richard Guenther  <rguenther@suse.de>\n\n\t* configure.ac: Use AM_FCFLAGS for extra flags, not FCFLAGS.\n\t* configure: Regenerate.\n\nFrom-SVN: r106535", "tree": {"sha": "e29c743b82f2f1ee1e278acb8b57aa446a4856b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e29c743b82f2f1ee1e278acb8b57aa446a4856b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17109ecb500023b15b0900b835b41b8313d82e8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17109ecb500023b15b0900b835b41b8313d82e8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17109ecb500023b15b0900b835b41b8313d82e8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17109ecb500023b15b0900b835b41b8313d82e8c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "831d78138036d234b10f475b4b03070c07437a33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/831d78138036d234b10f475b4b03070c07437a33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/831d78138036d234b10f475b4b03070c07437a33"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "9905c4f8e8be16ba2dc44f11d154fc7390d6a93a", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17109ecb500023b15b0900b835b41b8313d82e8c/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17109ecb500023b15b0900b835b41b8313d82e8c/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=17109ecb500023b15b0900b835b41b8313d82e8c", "patch": "@@ -1,3 +1,8 @@\n+2005-11-05  Richard Guenther  <rguenther@suse.de>\n+\n+\t* configure.ac: Use AM_FCFLAGS for extra flags, not FCFLAGS.\n+\t* configure: Regenerate.\n+\n 2005-11-05  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \t* intrinsics/tty.c (ttynam): New function."}, {"sha": "a332726e6684b0b4ce5420a6d416c6eed046f770", "filename": "libgfortran/configure", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17109ecb500023b15b0900b835b41b8313d82e8c/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17109ecb500023b15b0900b835b41b8313d82e8c/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=17109ecb500023b15b0900b835b41b8313d82e8c", "patch": "@@ -2965,9 +2965,9 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n-# Add -Wall if we are using GCC.\n+# Add -Wall -fno-repack-arrays -fno-underscoring if we are using GCC.\n if test \"x$GCC\" = \"xyes\"; then\n-  AM_FCFLAGS=\"-Wall\"\n+  AM_FCFLAGS=\"-Wall -fno-repack-arrays -fno-underscoring\"\n   ## We like to use C99 routines when available.  This makes sure that\n   ## __STDC_VERSION__ is set such that libc includes make them available.\n   AM_CFLAGS=\"-std=gnu99 -Wall -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wextra -Wwrite-strings\"\n@@ -4418,7 +4418,6 @@ exec 5>>./config.log\n #AC_MSG_NOTICE([====== Finished libtool configuration]) ; sleep 10\n \n # We need gfortran to compile parts of the library\n-# We can't use AC_PROG_FC because it expects a fully working gfortran.\n #AC_PROG_FC(gfortran)\n FC=\"$GFORTRAN\"\n ac_ext=${FC_SRCEXT-f}\n@@ -4513,7 +4512,7 @@ fi\n \n \n # Provide some information about the compiler.\n-echo \"$as_me:4516:\" \\\n+echo \"$as_me:4515:\" \\\n      \"checking for Fortran compiler version\" >&5\n ac_compiler=`set X $ac_compile; echo $2`\n { (eval echo \"$as_me:$LINENO: \\\"$ac_compiler --version </dev/null >&5\\\"\") >&5\n@@ -4656,7 +4655,6 @@ ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n-FCFLAGS=\"$FCFLAGS -Wall -fno-repack-arrays -fno-underscoring\"\n \n # extra LD Flags which are required for targets\n case \"${host}\" in"}, {"sha": "6ca4565e024ba7a42927713e73d85d953c1610c0", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17109ecb500023b15b0900b835b41b8313d82e8c/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17109ecb500023b15b0900b835b41b8313d82e8c/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=17109ecb500023b15b0900b835b41b8313d82e8c", "patch": "@@ -109,9 +109,9 @@ m4_define([_AC_ARG_VAR_PRECIOUS],[])\n AC_PROG_CC\n m4_rename([real_PRECIOUS],[_AC_ARG_VAR_PRECIOUS])\n \n-# Add -Wall if we are using GCC.\n+# Add -Wall -fno-repack-arrays -fno-underscoring if we are using GCC.\n if test \"x$GCC\" = \"xyes\"; then\n-  AM_FCFLAGS=\"-Wall\"\n+  AM_FCFLAGS=\"-Wall -fno-repack-arrays -fno-underscoring\"\n   ## We like to use C99 routines when available.  This makes sure that\n   ## __STDC_VERSION__ is set such that libc includes make them available.\n   AM_CFLAGS=\"-std=gnu99 -Wall -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wextra -Wwrite-strings\"\n@@ -135,11 +135,9 @@ AC_SUBST(enable_static)\n #AC_MSG_NOTICE([====== Finished libtool configuration]) ; sleep 10\n \n # We need gfortran to compile parts of the library\n-# We can't use AC_PROG_FC because it expects a fully working gfortran.\n #AC_PROG_FC(gfortran)\n FC=\"$GFORTRAN\"\n AC_PROG_FC(gfortran)\n-FCFLAGS=\"$FCFLAGS -Wall -fno-repack-arrays -fno-underscoring\"\n \n # extra LD Flags which are required for targets\n case \"${host}\" in"}]}