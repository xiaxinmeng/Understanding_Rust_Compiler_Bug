{"sha": "ee24da1b983a89b05303f2ac8828dd8cbe28d3b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWUyNGRhMWI5ODNhODliMDUzMDNmMmFjODgyOGRkOGNiZTI4ZDNiNA==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2020-11-13T00:25:59Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2020-11-13T00:28:45Z"}, "message": "Change range_handler, was  Re: Fix gimple_expr_code?\n\nAdjust the range_handler to not use gimple_expr_code/type.\n\n\t* gimple-range.h (gimple_range_handler): Use gimple_assign and\n\tgimple_cond routines to get type and code.\n\t* range-op.cc (range_op_handler): Check for integral types.", "tree": {"sha": "abfe913cd3b691b5b7c000d6390103365fb1fa88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/abfe913cd3b691b5b7c000d6390103365fb1fa88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee24da1b983a89b05303f2ac8828dd8cbe28d3b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee24da1b983a89b05303f2ac8828dd8cbe28d3b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee24da1b983a89b05303f2ac8828dd8cbe28d3b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee24da1b983a89b05303f2ac8828dd8cbe28d3b4/comments", "author": null, "committer": null, "parents": [{"sha": "a5a115258afd6c0bdd8ff4c8071dcffbafb88186", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5a115258afd6c0bdd8ff4c8071dcffbafb88186", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5a115258afd6c0bdd8ff4c8071dcffbafb88186"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "88d2ada324bfa528e91eb27a977d9688f23004e3", "filename": "gcc/gimple-range.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee24da1b983a89b05303f2ac8828dd8cbe28d3b4/gcc%2Fgimple-range.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee24da1b983a89b05303f2ac8828dd8cbe28d3b4/gcc%2Fgimple-range.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range.h?ref=ee24da1b983a89b05303f2ac8828dd8cbe28d3b4", "patch": "@@ -97,8 +97,12 @@ extern bool gimple_range_calc_op2 (irange &r, const gimple *s,\n static inline range_operator *\n gimple_range_handler (const gimple *s)\n {\n-  if ((gimple_code (s) == GIMPLE_ASSIGN) || (gimple_code (s) == GIMPLE_COND))\n-    return range_op_handler (gimple_expr_code (s), gimple_expr_type (s));\n+  if (gimple_code (s) == GIMPLE_ASSIGN)\n+    return range_op_handler (gimple_assign_rhs_code (s),\n+\t\t\t     TREE_TYPE (gimple_assign_lhs (s)));\n+  if (gimple_code (s) == GIMPLE_COND)\n+    return range_op_handler (gimple_cond_code (s),\n+\t\t\t     TREE_TYPE (gimple_cond_lhs (s)));\n   return NULL;\n }\n "}, {"sha": "86d1af7fe5447841ca521d9325b4428126365fae", "filename": "gcc/range-op.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee24da1b983a89b05303f2ac8828dd8cbe28d3b4/gcc%2Frange-op.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee24da1b983a89b05303f2ac8828dd8cbe28d3b4/gcc%2Frange-op.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frange-op.cc?ref=ee24da1b983a89b05303f2ac8828dd8cbe28d3b4", "patch": "@@ -3341,10 +3341,12 @@ pointer_table::pointer_table ()\n range_operator *\n range_op_handler (enum tree_code code, tree type)\n {\n-  // First check if there is apointer specialization.\n+  // First check if there is a pointer specialization.\n   if (POINTER_TYPE_P (type))\n     return pointer_tree_table[code];\n-  return integral_tree_table[code];\n+  if (INTEGRAL_TYPE_P (type))\n+    return integral_tree_table[code];\n+  return NULL;\n }\n \n // Cast the range in R to TYPE."}]}