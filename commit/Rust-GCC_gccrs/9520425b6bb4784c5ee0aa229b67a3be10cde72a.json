{"sha": "9520425b6bb4784c5ee0aa229b67a3be10cde72a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTUyMDQyNWI2YmI0Nzg0YzVlZTBhYTIyOWI2N2EzYmUxMGNkZTcyYQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2012-09-12T12:38:15Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2012-09-12T12:38:15Z"}, "message": "Clear hardware capabilities on libstdc++.so with Sun as\n\n\t* acinclude.m4 (GLIBCXX_CHECK_ASSEMBLER_HWCAP): Define.\n\t* configure.ac: Call GLIBCXX_CHECK_ASSEMBLER_HWCAP.\n\t* fragment.am (CONFIG_CXXFLAGS): Add $(HWCAP_FLAGS).\n\t* configure: Regenerate.\n\t* Makefile.in: Regenerate.\n\t* doc/Makefile.in: Regenerate.\n\t* include/Makefile.in: Regenerate.\n\t* libsupc++/Makefile.in: Regenerate.\n\t* po/Makefile.in: Regenerate.\n\t* python/Makefile.in: Regenerate.\n\t* src/Makefile.in: Regenerate.\n\t* src/c++11/Makefile.in: Regenerate.\n\t* src/c++98/Makefile.in: Regenerate.\n\t* testsuite/Makefile.in: Regenerate.\n\nFrom-SVN: r191218", "tree": {"sha": "5845b6afc5c99ac29a4d539b36edb4c7ae60068e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5845b6afc5c99ac29a4d539b36edb4c7ae60068e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9520425b6bb4784c5ee0aa229b67a3be10cde72a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9520425b6bb4784c5ee0aa229b67a3be10cde72a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9520425b6bb4784c5ee0aa229b67a3be10cde72a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9520425b6bb4784c5ee0aa229b67a3be10cde72a/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9081064aee40a33c99629176d54d1c7653b18faa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9081064aee40a33c99629176d54d1c7653b18faa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9081064aee40a33c99629176d54d1c7653b18faa"}], "stats": {"total": 174, "additions": 128, "deletions": 46}, "files": [{"sha": "0bae2d3dc9cc10a2ff5748bed108556d81dc7c4a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9520425b6bb4784c5ee0aa229b67a3be10cde72a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9520425b6bb4784c5ee0aa229b67a3be10cde72a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9520425b6bb4784c5ee0aa229b67a3be10cde72a", "patch": "@@ -1,3 +1,20 @@\n+2012-09-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* acinclude.m4 (GLIBCXX_CHECK_ASSEMBLER_HWCAP): Define.\n+\t* configure.ac: Call GLIBCXX_CHECK_ASSEMBLER_HWCAP.\n+\t* fragment.am (CONFIG_CXXFLAGS): Add $(HWCAP_FLAGS).\n+\t* configure: Regenerate.\n+\t* Makefile.in: Regenerate.\n+\t* doc/Makefile.in: Regenerate.\n+\t* include/Makefile.in: Regenerate.\n+\t* libsupc++/Makefile.in: Regenerate.\n+\t* po/Makefile.in: Regenerate.\n+\t* python/Makefile.in: Regenerate.\n+\t* src/Makefile.in: Regenerate.\n+\t* src/c++11/Makefile.in: Regenerate.\n+\t* src/c++98/Makefile.in: Regenerate.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n 2012-09-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR libstdc++/54172"}, {"sha": "e6c48bca0983eef490ed841610dc41038edd80c3", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9520425b6bb4784c5ee0aa229b67a3be10cde72a/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9520425b6bb4784c5ee0aa229b67a3be10cde72a/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=9520425b6bb4784c5ee0aa229b67a3be10cde72a", "patch": "@@ -152,6 +152,7 @@ FGREP = @FGREP@\n GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n GLIBCXX_LIBS = @GLIBCXX_LIBS@\n GREP = @GREP@\n+HWCAP_FLAGS = @HWCAP_FLAGS@\n INSTALL = @INSTALL@\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n@@ -296,7 +297,7 @@ toolexeclibdir = $(glibcxx_toolexeclibdir)\n # These bits are all figured out from configure.  Look in acinclude.m4\n # or configure.ac to see how they are set.  See GLIBCXX_EXPORT_FLAGS.\n CONFIG_CXXFLAGS = \\\n-\t$(SECTION_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n+\t$(SECTION_FLAGS) $(HWCAP_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n \n WARN_CXXFLAGS = \\\n \t$(WARN_FLAGS) $(WERROR_FLAG) -fdiagnostics-show-location=once "}, {"sha": "ab26660782eee0aafc3a57ef76b8c07ec103d9d8", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9520425b6bb4784c5ee0aa229b67a3be10cde72a/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9520425b6bb4784c5ee0aa229b67a3be10cde72a/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=9520425b6bb4784c5ee0aa229b67a3be10cde72a", "patch": "@@ -168,6 +168,32 @@ AC_DEFUN([GLIBCXX_CHECK_COMPILER_FEATURES], [\n ])\n \n \n+dnl\n+dnl Check if the assembler used supports disabling generation of hardware\n+dnl capabilities.  This is only supported by Sun as at the moment.\n+dnl\n+dnl Defines:\n+dnl  HWCAP_FLAGS='-Wa,-nH' if possible.\n+dnl\n+AC_DEFUN([GLIBCXX_CHECK_ASSEMBLER_HWCAP], [\n+  test -z \"$HWCAP_FLAGS\" && HWCAP_FLAGS=''\n+\n+  ac_save_CFLAGS=\"$CFLAGS\"\n+  CFLAGS=\"$CFLAGS -Wa,-nH\"\n+\n+  AC_MSG_CHECKING([for as that supports -Wa,-nH])\n+  AC_TRY_COMPILE([], [return 0;], [ac_hwcap_flags=yes],[ac_hwcap_flags=no])\n+  if test \"$ac_hwcap_flags\" = \"yes\"; then\n+    HWCAP_FLAGS=\"-Wa,-nH $HWCAP_FLAGS\"\n+  fi\n+  AC_MSG_RESULT($ac_hwcap_flags)\n+\n+  CFLAGS=\"$ac_save_CFLAGS\"\n+\n+  AC_SUBST(HWCAP_FLAGS)\n+])\n+\n+\n dnl\n dnl If GNU ld is in use, check to see if tricky linker opts can be used.  If\n dnl the native linker is in use, all variables will be defined to something"}, {"sha": "44c03b1ff14027ed88c509def6f90bd3e46bc9a2", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 48, "deletions": 10, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9520425b6bb4784c5ee0aa229b67a3be10cde72a/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9520425b6bb4784c5ee0aa229b67a3be10cde72a/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=9520425b6bb4784c5ee0aa229b67a3be10cde72a", "patch": "@@ -639,6 +639,7 @@ BUILD_INFO_FALSE\n BUILD_INFO_TRUE\n baseline_subdir_switch\n baseline_dir\n+HWCAP_FLAGS\n GLIBCXX_LDBL_COMPAT_FALSE\n GLIBCXX_LDBL_COMPAT_TRUE\n ENABLE_VISIBILITY_FALSE\n@@ -11507,7 +11508,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11510 \"configure\"\n+#line 11511 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11613,7 +11614,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11616 \"configure\"\n+#line 11617 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -14994,7 +14995,7 @@ fi\n     #\n     # Fake what AC_TRY_COMPILE does.  XXX Look at redoing this new-style.\n     cat > conftest.$ac_ext << EOF\n-#line 14997 \"configure\"\n+#line 14998 \"configure\"\n struct S { ~S(); };\n void bar();\n void foo()\n@@ -15329,7 +15330,7 @@ $as_echo \"$glibcxx_cv_atomic_long_long\" >&6; }\n   # Fake what AC_TRY_COMPILE does.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15332 \"configure\"\n+#line 15333 \"configure\"\n int main()\n {\n   typedef bool atomic_type;\n@@ -15364,7 +15365,7 @@ $as_echo \"$glibcxx_cv_atomic_bool\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15367 \"configure\"\n+#line 15368 \"configure\"\n int main()\n {\n   typedef short atomic_type;\n@@ -15399,7 +15400,7 @@ $as_echo \"$glibcxx_cv_atomic_short\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15402 \"configure\"\n+#line 15403 \"configure\"\n int main()\n {\n   // NB: _Atomic_word not necessarily int.\n@@ -15435,7 +15436,7 @@ $as_echo \"$glibcxx_cv_atomic_int\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15438 \"configure\"\n+#line 15439 \"configure\"\n int main()\n {\n   typedef long long atomic_type;\n@@ -15514,7 +15515,7 @@ $as_echo \"$as_me: WARNING: Performance of certain classes will degrade as a resu\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15517 \"configure\"\n+#line 15518 \"configure\"\n int main()\n {\n   _Decimal32 d1;\n@@ -15556,7 +15557,7 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15559 \"configure\"\n+#line 15560 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };\n@@ -15590,7 +15591,7 @@ $as_echo \"$enable_int128\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15593 \"configure\"\n+#line 15594 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };\n@@ -70647,6 +70648,43 @@ $as_echo \"#define _GLIBCXX_LONG_DOUBLE_COMPAT 1\" >>confdefs.h\n esac\n \n \n+# Check if assembler supports disabling hardware capability support.\n+\n+  test -z \"$HWCAP_FLAGS\" && HWCAP_FLAGS=''\n+\n+  ac_save_CFLAGS=\"$CFLAGS\"\n+  CFLAGS=\"$CFLAGS -Wa,-nH\"\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for as that supports -Wa,-nH\" >&5\n+$as_echo_n \"checking for as that supports -Wa,-nH... \" >&6; }\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+return 0;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  ac_hwcap_flags=yes\n+else\n+  ac_hwcap_flags=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+  if test \"$ac_hwcap_flags\" = \"yes\"; then\n+    HWCAP_FLAGS=\"-Wa,-nH $HWCAP_FLAGS\"\n+  fi\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_hwcap_flags\" >&5\n+$as_echo \"$ac_hwcap_flags\" >&6; }\n+\n+  CFLAGS=\"$ac_save_CFLAGS\"\n+\n+\n+\n+\n # Check if assembler supports rdrand opcode.\n \n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for rdrand support in assembler\" >&5"}, {"sha": "559a811be4126db3f4d875f63d5fbef500610176", "filename": "libstdc++-v3/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9520425b6bb4784c5ee0aa229b67a3be10cde72a/libstdc%2B%2B-v3%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9520425b6bb4784c5ee0aa229b67a3be10cde72a/libstdc%2B%2B-v3%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.ac?ref=9520425b6bb4784c5ee0aa229b67a3be10cde72a", "patch": "@@ -333,6 +333,9 @@ case \"$target\" in\n esac\n GLIBCXX_CONDITIONAL(GLIBCXX_LDBL_COMPAT, test $ac_ldbl_compat = yes)\n \n+# Check if assembler supports disabling hardware capability support.\n+GLIBCXX_CHECK_ASSEMBLER_HWCAP\n+\n # Check if assembler supports rdrand opcode.\n GLIBCXX_CHECK_X86_RDRAND\n "}, {"sha": "cfe702a34c1a75b8fa5c26db242fb414416585d3", "filename": "libstdc++-v3/doc/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9520425b6bb4784c5ee0aa229b67a3be10cde72a/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9520425b6bb4784c5ee0aa229b67a3be10cde72a/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in?ref=9520425b6bb4784c5ee0aa229b67a3be10cde72a", "patch": "@@ -124,6 +124,7 @@ FGREP = @FGREP@\n GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n GLIBCXX_LIBS = @GLIBCXX_LIBS@\n GREP = @GREP@\n+HWCAP_FLAGS = @HWCAP_FLAGS@\n INSTALL = @INSTALL@\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n@@ -278,7 +279,7 @@ toolexeclibdir = $(glibcxx_toolexeclibdir)\n # These bits are all figured out from configure.  Look in acinclude.m4\n # or configure.ac to see how they are set.  See GLIBCXX_EXPORT_FLAGS.\n CONFIG_CXXFLAGS = \\\n-\t$(SECTION_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n+\t$(SECTION_FLAGS) $(HWCAP_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n \n WARN_CXXFLAGS = \\\n \t$(WARN_FLAGS) $(WERROR_FLAG) -fdiagnostics-show-location=once "}, {"sha": "64247afbe24c3ecd11b3da1a08f85def0c7adaf9", "filename": "libstdc++-v3/fragment.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9520425b6bb4784c5ee0aa229b67a3be10cde72a/libstdc%2B%2B-v3%2Ffragment.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9520425b6bb4784c5ee0aa229b67a3be10cde72a/libstdc%2B%2B-v3%2Ffragment.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ffragment.am?ref=9520425b6bb4784c5ee0aa229b67a3be10cde72a", "patch": "@@ -22,7 +22,7 @@ endif\n # These bits are all figured out from configure.  Look in acinclude.m4\n # or configure.ac to see how they are set.  See GLIBCXX_EXPORT_FLAGS.\n CONFIG_CXXFLAGS = \\\n-\t$(SECTION_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n+\t$(SECTION_FLAGS) $(HWCAP_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n WARN_CXXFLAGS = \\\n \t$(WARN_FLAGS) $(WERROR_FLAG) -fdiagnostics-show-location=once \n "}, {"sha": "c62c8691ebcc3216ce54ea92619b149574944cf4", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9520425b6bb4784c5ee0aa229b67a3be10cde72a/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9520425b6bb4784c5ee0aa229b67a3be10cde72a/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=9520425b6bb4784c5ee0aa229b67a3be10cde72a", "patch": "@@ -1,9 +1,9 @@\n-# Makefile.in generated by automake 1.11.3 from Makefile.am.\n+# Makefile.in generated by automake 1.11.1 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n-# Foundation, Inc.\n+# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,\n+# Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -124,6 +124,7 @@ FGREP = @FGREP@\n GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n GLIBCXX_LIBS = @GLIBCXX_LIBS@\n GREP = @GREP@\n+HWCAP_FLAGS = @HWCAP_FLAGS@\n INSTALL = @INSTALL@\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n@@ -268,7 +269,7 @@ toolexeclibdir = $(glibcxx_toolexeclibdir)\n # These bits are all figured out from configure.  Look in acinclude.m4\n # or configure.ac to see how they are set.  See GLIBCXX_EXPORT_FLAGS.\n CONFIG_CXXFLAGS = \\\n-\t$(SECTION_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n+\t$(SECTION_FLAGS) $(HWCAP_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n \n WARN_CXXFLAGS = \\\n \t$(WARN_FLAGS) $(WERROR_FLAG) -fdiagnostics-show-location=once \n@@ -1177,7 +1178,6 @@ Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n \t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \\\n \t    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \\\n \tesac;\n-$(top_srcdir)/fragment.am:\n \n $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n \tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n@@ -1213,15 +1213,10 @@ install-am: all-am\n \n installcheck: installcheck-am\n install-strip:\n-\tif test -z '$(STRIP)'; then \\\n-\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t      install; \\\n-\telse \\\n-\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n-\tfi\n+\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t  `test -z '$(STRIP)' || \\\n+\t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n mostlyclean-generic:\n \n clean-generic:"}, {"sha": "47dd01c27faaae53d8185ccd66987561e0761536", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9520425b6bb4784c5ee0aa229b67a3be10cde72a/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9520425b6bb4784c5ee0aa229b67a3be10cde72a/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=9520425b6bb4784c5ee0aa229b67a3be10cde72a", "patch": "@@ -184,6 +184,7 @@ FGREP = @FGREP@\n GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n GLIBCXX_LIBS = @GLIBCXX_LIBS@\n GREP = @GREP@\n+HWCAP_FLAGS = @HWCAP_FLAGS@\n INSTALL = @INSTALL@\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n@@ -328,7 +329,7 @@ toolexeclibdir = $(glibcxx_toolexeclibdir)\n # These bits are all figured out from configure.  Look in acinclude.m4\n # or configure.ac to see how they are set.  See GLIBCXX_EXPORT_FLAGS.\n CONFIG_CXXFLAGS = \\\n-\t$(SECTION_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n+\t$(SECTION_FLAGS) $(HWCAP_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n \n WARN_CXXFLAGS = \\\n \t$(WARN_FLAGS) $(WERROR_FLAG) -fdiagnostics-show-location=once "}, {"sha": "9ec427f566f9db6528e4f525ed46b287b4fb2b96", "filename": "libstdc++-v3/po/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9520425b6bb4784c5ee0aa229b67a3be10cde72a/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9520425b6bb4784c5ee0aa229b67a3be10cde72a/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpo%2FMakefile.in?ref=9520425b6bb4784c5ee0aa229b67a3be10cde72a", "patch": "@@ -124,6 +124,7 @@ FGREP = @FGREP@\n GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n GLIBCXX_LIBS = @GLIBCXX_LIBS@\n GREP = @GREP@\n+HWCAP_FLAGS = @HWCAP_FLAGS@\n INSTALL = @INSTALL@\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n@@ -268,7 +269,7 @@ toolexeclibdir = $(glibcxx_toolexeclibdir)\n # These bits are all figured out from configure.  Look in acinclude.m4\n # or configure.ac to see how they are set.  See GLIBCXX_EXPORT_FLAGS.\n CONFIG_CXXFLAGS = \\\n-\t$(SECTION_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n+\t$(SECTION_FLAGS) $(HWCAP_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n \n WARN_CXXFLAGS = \\\n \t$(WARN_FLAGS) $(WERROR_FLAG) -fdiagnostics-show-location=once "}, {"sha": "150dd189e45bf1ee8644fc8bdb5e3b983c3b9eac", "filename": "libstdc++-v3/python/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9520425b6bb4784c5ee0aa229b67a3be10cde72a/libstdc%2B%2B-v3%2Fpython%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9520425b6bb4784c5ee0aa229b67a3be10cde72a/libstdc%2B%2B-v3%2Fpython%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2FMakefile.in?ref=9520425b6bb4784c5ee0aa229b67a3be10cde72a", "patch": "@@ -148,6 +148,7 @@ FGREP = @FGREP@\n GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n GLIBCXX_LIBS = @GLIBCXX_LIBS@\n GREP = @GREP@\n+HWCAP_FLAGS = @HWCAP_FLAGS@\n INSTALL = @INSTALL@\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n@@ -292,7 +293,7 @@ toolexeclibdir = $(glibcxx_toolexeclibdir)\n # These bits are all figured out from configure.  Look in acinclude.m4\n # or configure.ac to see how they are set.  See GLIBCXX_EXPORT_FLAGS.\n CONFIG_CXXFLAGS = \\\n-\t$(SECTION_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n+\t$(SECTION_FLAGS) $(HWCAP_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n \n WARN_CXXFLAGS = \\\n \t$(WARN_FLAGS) $(WERROR_FLAG) -fdiagnostics-show-location=once "}, {"sha": "10b7c9d4ea4ed00f16e8c37911317c90f30c9ea2", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9520425b6bb4784c5ee0aa229b67a3be10cde72a/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9520425b6bb4784c5ee0aa229b67a3be10cde72a/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=9520425b6bb4784c5ee0aa229b67a3be10cde72a", "patch": "@@ -177,6 +177,7 @@ FGREP = @FGREP@\n GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n GLIBCXX_LIBS = @GLIBCXX_LIBS@\n GREP = @GREP@\n+HWCAP_FLAGS = @HWCAP_FLAGS@\n INSTALL = @INSTALL@\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n@@ -321,7 +322,7 @@ toolexeclibdir = $(glibcxx_toolexeclibdir)\n # These bits are all figured out from configure.  Look in acinclude.m4\n # or configure.ac to see how they are set.  See GLIBCXX_EXPORT_FLAGS.\n CONFIG_CXXFLAGS = \\\n-\t$(SECTION_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n+\t$(SECTION_FLAGS) $(HWCAP_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n \n WARN_CXXFLAGS = \\\n \t$(WARN_FLAGS) $(WERROR_FLAG) -fdiagnostics-show-location=once "}, {"sha": "2e447194d54ac5048cb7ca38b986b50aaa6f9daf", "filename": "libstdc++-v3/src/c++11/Makefile.in", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9520425b6bb4784c5ee0aa229b67a3be10cde72a/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9520425b6bb4784c5ee0aa229b67a3be10cde72a/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in?ref=9520425b6bb4784c5ee0aa229b67a3be10cde72a", "patch": "@@ -1,9 +1,9 @@\n-# Makefile.in generated by automake 1.11.3 from Makefile.am.\n+# Makefile.in generated by automake 1.11.1 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n-# Foundation, Inc.\n+# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,\n+# Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -141,6 +141,7 @@ FGREP = @FGREP@\n GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n GLIBCXX_LIBS = @GLIBCXX_LIBS@\n GREP = @GREP@\n+HWCAP_FLAGS = @HWCAP_FLAGS@\n INSTALL = @INSTALL@\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n@@ -285,7 +286,7 @@ toolexeclibdir = $(glibcxx_toolexeclibdir)\n # These bits are all figured out from configure.  Look in acinclude.m4\n # or configure.ac to see how they are set.  See GLIBCXX_EXPORT_FLAGS.\n CONFIG_CXXFLAGS = \\\n-\t$(SECTION_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n+\t$(SECTION_FLAGS) $(HWCAP_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n \n WARN_CXXFLAGS = \\\n \t$(WARN_FLAGS) $(WERROR_FLAG) -fdiagnostics-show-location=once \n@@ -405,7 +406,6 @@ Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n \t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \\\n \t    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \\\n \tesac;\n-$(top_srcdir)/fragment.am:\n \n $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n \tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n@@ -424,7 +424,7 @@ clean-noinstLTLIBRARIES:\n \t  echo \"rm -f \\\"$${dir}/so_locations\\\"\"; \\\n \t  rm -f \"$${dir}/so_locations\"; \\\n \tdone\n-libc++11convenience.la: $(libc__11convenience_la_OBJECTS) $(libc__11convenience_la_DEPENDENCIES) $(EXTRA_libc__11convenience_la_DEPENDENCIES) \n+libc++11convenience.la: $(libc__11convenience_la_OBJECTS) $(libc__11convenience_la_DEPENDENCIES) \n \t$(CXXLINK)  $(libc__11convenience_la_OBJECTS) $(libc__11convenience_la_LIBADD) $(LIBS)\n \n mostlyclean-compile:\n@@ -513,15 +513,10 @@ install-am: all-am\n \n installcheck: installcheck-am\n install-strip:\n-\tif test -z '$(STRIP)'; then \\\n \t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n \t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t      install; \\\n-\telse \\\n-\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n-\tfi\n+\t  `test -z '$(STRIP)' || \\\n+\t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n mostlyclean-generic:\n \n clean-generic:"}, {"sha": "061288b605dae13a96f321ae16583ac3d481b5bb", "filename": "libstdc++-v3/src/c++98/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9520425b6bb4784c5ee0aa229b67a3be10cde72a/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9520425b6bb4784c5ee0aa229b67a3be10cde72a/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in?ref=9520425b6bb4784c5ee0aa229b67a3be10cde72a", "patch": "@@ -156,6 +156,7 @@ FGREP = @FGREP@\n GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n GLIBCXX_LIBS = @GLIBCXX_LIBS@\n GREP = @GREP@\n+HWCAP_FLAGS = @HWCAP_FLAGS@\n INSTALL = @INSTALL@\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n@@ -300,7 +301,7 @@ toolexeclibdir = $(glibcxx_toolexeclibdir)\n # These bits are all figured out from configure.  Look in acinclude.m4\n # or configure.ac to see how they are set.  See GLIBCXX_EXPORT_FLAGS.\n CONFIG_CXXFLAGS = \\\n-\t$(SECTION_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n+\t$(SECTION_FLAGS) $(HWCAP_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n \n WARN_CXXFLAGS = \\\n \t$(WARN_FLAGS) $(WERROR_FLAG) -fdiagnostics-show-location=once "}, {"sha": "ce081591559ee26aeb271e6a30ec33d1c73f617f", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9520425b6bb4784c5ee0aa229b67a3be10cde72a/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9520425b6bb4784c5ee0aa229b67a3be10cde72a/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=9520425b6bb4784c5ee0aa229b67a3be10cde72a", "patch": "@@ -124,6 +124,7 @@ FGREP = @FGREP@\n GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n GLIBCXX_LIBS = @GLIBCXX_LIBS@\n GREP = @GREP@\n+HWCAP_FLAGS = @HWCAP_FLAGS@\n INSTALL = @INSTALL@\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n@@ -271,7 +272,7 @@ toolexeclibdir = $(glibcxx_toolexeclibdir)\n # These bits are all figured out from configure.  Look in acinclude.m4\n # or configure.ac to see how they are set.  See GLIBCXX_EXPORT_FLAGS.\n CONFIG_CXXFLAGS = \\\n-\t$(SECTION_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n+\t$(SECTION_FLAGS) $(HWCAP_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n \n WARN_CXXFLAGS = \\\n \t$(WARN_FLAGS) $(WERROR_FLAG) -fdiagnostics-show-location=once "}]}