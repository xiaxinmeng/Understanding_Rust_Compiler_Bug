{"sha": "6a95f0e0a06d78d94138d4c3dd64d41591197281", "node_id": "C_kwDOANBUbNoAKDZhOTVmMGUwYTA2ZDc4ZDk0MTM4ZDRjM2RkNjRkNDE1OTExOTcyODE", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2022-12-17T21:04:32Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2022-12-23T21:23:10Z"}, "message": "Fortran: incorrect array bounds when bound intrinsic used in decl [PR108131]\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/108131\n\t* array.cc (match_array_element_spec): Avoid too early simplification\n\tof matched array element specs that can lead to a misinterpretation\n\twhen used as array bounds in array declarations.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/108131\n\t* gfortran.dg/pr103505.f90: Adjust expected patterns.\n\t* gfortran.dg/pr108131.f90: New test.", "tree": {"sha": "223e54217b2a9224018047fada3b7b188382ace2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/223e54217b2a9224018047fada3b7b188382ace2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a95f0e0a06d78d94138d4c3dd64d41591197281", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a95f0e0a06d78d94138d4c3dd64d41591197281", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a95f0e0a06d78d94138d4c3dd64d41591197281", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a95f0e0a06d78d94138d4c3dd64d41591197281/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf59c8983ef6590f0d69014f8dc8778b5b7691c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf59c8983ef6590f0d69014f8dc8778b5b7691c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf59c8983ef6590f0d69014f8dc8778b5b7691c6"}], "stats": {"total": 37, "additions": 30, "deletions": 7}, "files": [{"sha": "7457c03e6cd8e4d3bc07698e97e04372aa3a9c3a", "filename": "gcc/fortran/array.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a95f0e0a06d78d94138d4c3dd64d41591197281/gcc%2Ffortran%2Farray.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a95f0e0a06d78d94138d4c3dd64d41591197281/gcc%2Ffortran%2Farray.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Farray.cc?ref=6a95f0e0a06d78d94138d4c3dd64d41591197281", "patch": "@@ -512,8 +512,6 @@ match_array_element_spec (gfc_array_spec *as)\n   if (!gfc_expr_check_typed (*upper, gfc_current_ns, false))\n     return AS_UNKNOWN;\n \n-  gfc_try_simplify_expr (*upper, 0);\n-\n   if (((*upper)->expr_type == EXPR_CONSTANT\n \t&& (*upper)->ts.type != BT_INTEGER) ||\n       ((*upper)->expr_type == EXPR_FUNCTION\n@@ -546,8 +544,6 @@ match_array_element_spec (gfc_array_spec *as)\n   if (!gfc_expr_check_typed (*upper, gfc_current_ns, false))\n     return AS_UNKNOWN;\n \n-  gfc_try_simplify_expr (*upper, 0);\n-\n   if (((*upper)->expr_type == EXPR_CONSTANT\n \t&& (*upper)->ts.type != BT_INTEGER) ||\n       ((*upper)->expr_type == EXPR_FUNCTION"}, {"sha": "01308019b2c9d4ec1dd95d31a0372a24bc4798af", "filename": "gcc/testsuite/gfortran.dg/pr103505.f90", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a95f0e0a06d78d94138d4c3dd64d41591197281/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr103505.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a95f0e0a06d78d94138d4c3dd64d41591197281/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr103505.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr103505.f90?ref=6a95f0e0a06d78d94138d4c3dd64d41591197281", "patch": "@@ -3,7 +3,9 @@\n ! Testcase by G.Steinmetz\n \n program p\n-  integer, parameter :: a((2.))   = [4,8] ! { dg-error \"scalar INTEGER\" }\n-  integer, parameter :: z(1:(2.)) = [4,8] ! { dg-error \"scalar INTEGER\" }\n-  print *, a(1:1)                         ! { dg-error \"Syntax error\" }\n+  integer, parameter :: a((2.))   = [4,8] ! { dg-error \"INTEGER type\" }\n+  integer, parameter :: z(1:(2.)) = [4,8] ! { dg-error \"INTEGER type\" }\n+  print *, a(1:1)\n end\n+\n+! { dg-prune-output \"Parameter array\" }"}, {"sha": "8bf36d361ba578ce72e84b650f33c8073d3eac6c", "filename": "gcc/testsuite/gfortran.dg/pr108131.f90", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a95f0e0a06d78d94138d4c3dd64d41591197281/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr108131.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a95f0e0a06d78d94138d4c3dd64d41591197281/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr108131.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr108131.f90?ref=6a95f0e0a06d78d94138d4c3dd64d41591197281", "patch": "@@ -0,0 +1,25 @@\n+! { dg-do run }\n+! { dg-additional-options \"-fdump-tree-original\" }\n+! PR fortran/108131\n+!\n+! Incorrect array bounds when bound intrinsic used in declaration\n+\n+program test\n+  implicit none\n+  integer, parameter :: mg(7:10)                 = 0\n+  integer, parameter :: u =   ubound(mg, dim=1)\n+  integer, parameter :: cx(-1:ubound(mg, dim=1)) = 1\n+  integer, parameter :: dx(lbound(mg, dim=1):ubound(cx, dim=1)) = 2\n+\n+  write(*,*) ubound(mg, dim=1)\n+  write(*,*) ubound(cx, dim=1)\n+  if (u /= 10) stop 1\n+  if (ubound(mg, dim=1) /= 10) stop 2\n+  if (ubound(cx, dim=1) /= 10) stop 3\n+  if (ubound(dx, dim=1) /= 10) stop 4\n+  if (lbound(mg, dim=1) /=  7) stop 5\n+  if (lbound(cx, dim=1) /= -1) stop 6\n+  if (lbound(dx, dim=1) /=  7) stop 7\n+end program test\n+\n+! { dg-final { scan-tree-dump-not \"_gfortran_stop_numeric\" \"original\" } }"}]}