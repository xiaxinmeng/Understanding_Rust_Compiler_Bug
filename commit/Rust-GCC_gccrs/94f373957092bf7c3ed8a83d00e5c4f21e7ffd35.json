{"sha": "94f373957092bf7c3ed8a83d00e5c4f21e7ffd35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRmMzczOTU3MDkyYmY3YzNlZDhhODNkMDBlNWM0ZjIxZTdmZmQzNQ==", "commit": {"author": {"name": "Ilya Enkovich", "email": "enkovich.gnu@gmail.com", "date": "2016-01-15T11:04:25Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2016-01-15T11:04:25Z"}, "message": "i386.c (ix86_expand_branch): Don't split DI mode xor instruction to SI mode.\n\ngcc/\n\n\t* config/i386/i386.c (ix86_expand_branch): Don't split\n\tDI mode xor instruction to SI mode.\n\ngcc/testsuite/\n\n\t* gcc.target/i386/pr65105-5.c: New test.\n\nFrom-SVN: r232413", "tree": {"sha": "4c4a300804c52a464ec6172b32753fad35b86a8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c4a300804c52a464ec6172b32753fad35b86a8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94f373957092bf7c3ed8a83d00e5c4f21e7ffd35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94f373957092bf7c3ed8a83d00e5c4f21e7ffd35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94f373957092bf7c3ed8a83d00e5c4f21e7ffd35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94f373957092bf7c3ed8a83d00e5c4f21e7ffd35/comments", "author": null, "committer": null, "parents": [{"sha": "0f6176e67c84ffe19978aaad568d5e9996890fb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f6176e67c84ffe19978aaad568d5e9996890fb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f6176e67c84ffe19978aaad568d5e9996890fb3"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "bd052951e86b2b06923a1ccf8ded0401fd742451", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f373957092bf7c3ed8a83d00e5c4f21e7ffd35/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f373957092bf7c3ed8a83d00e5c4f21e7ffd35/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=94f373957092bf7c3ed8a83d00e5c4f21e7ffd35", "patch": "@@ -1,3 +1,8 @@\n+2016-01-15  Ilya Enkovich  <enkovich.gnu@gmail.com>\n+\n+\t* config/i386/i386.c (ix86_expand_branch): Don't split\n+\tDI mode xor instruction to SI mode.\n+\n 2016-01-15  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR ipa/68148"}, {"sha": "92f3a4130f09b99f077a84659bbbc3c6fb3ba48b", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f373957092bf7c3ed8a83d00e5c4f21e7ffd35/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f373957092bf7c3ed8a83d00e5c4f21e7ffd35/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=94f373957092bf7c3ed8a83d00e5c4f21e7ffd35", "patch": "@@ -21699,6 +21699,19 @@ ix86_expand_branch (enum rtx_code code, rtx op0, rtx op1, rtx label)\n     case DImode:\n       if (TARGET_64BIT)\n \tgoto simple;\n+      /* For 32-bit target DI comparison may be performed on\n+\t SSE registers.  To allow this we should avoid split\n+\t to SI mode which is achieved by doing xor in DI mode\n+\t and then comparing with zero (which is recognized by\n+\t STV pass).  We don't compare using xor when optimizing\n+\t for size.  */\n+      if (!optimize_insn_for_size_p ()\n+\t  && TARGET_STV\n+\t  && (code == EQ || code == NE))\n+\t{\n+\t  op0 = force_reg (mode, gen_rtx_XOR (mode, op0, op1));\n+\t  op1 = const0_rtx;\n+\t}\n     case TImode:\n       /* Expand DImode branch into multiple compare+branch.  */\n       {"}, {"sha": "456edf205c711cec0a5195c289f7d74398772618", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f373957092bf7c3ed8a83d00e5c4f21e7ffd35/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f373957092bf7c3ed8a83d00e5c4f21e7ffd35/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=94f373957092bf7c3ed8a83d00e5c4f21e7ffd35", "patch": "@@ -1,3 +1,7 @@\n+2016-01-15  Ilya Enkovich  <enkovich.gnu@gmail.com>\n+\n+\t* gcc.target/i386/pr65105-5.c: New test.\n+\n 2016-01-15  Jan Hubicka <hubicka@ucw.cz>\n \n \t* gcc.c-torture/execute/alias-4.c: New testcase."}, {"sha": "5818c1c0bac832f4f01326df2879b7fd16807406", "filename": "gcc/testsuite/gcc.target/i386/pr65105-5.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f373957092bf7c3ed8a83d00e5c4f21e7ffd35/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr65105-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f373957092bf7c3ed8a83d00e5c4f21e7ffd35/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr65105-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr65105-5.c?ref=94f373957092bf7c3ed8a83d00e5c4f21e7ffd35", "patch": "@@ -0,0 +1,22 @@\n+/* PR target/pr65105 */\n+/* { dg-do compile { target { ia32 } } } */\n+/* { dg-options \"-O2 -march=core-avx2\" } */\n+/* { dg-final { scan-assembler \"pand\" } } */\n+/* { dg-final { scan-assembler \"pxor\" } } */\n+/* { dg-final { scan-assembler \"ptest\" } } */\n+\n+struct S1\n+{\n+  unsigned long long a;\n+  unsigned long long b;\n+};\n+\n+void\n+test (int p1, unsigned long long p2, int p3, struct S1 *p4)\n+{\n+  int i;\n+\n+  for (i = 0; i < p1; i++)\n+    if ((p4[i].a & p2) != p2)\n+      p4[i].a ^= (1ULL << p3);\n+}"}]}