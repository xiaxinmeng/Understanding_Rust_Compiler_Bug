{"sha": "9b41f0d3273a3a8561eebeec150357d80ed09819", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI0MWYwZDMyNzNhM2E4NTYxZWViZWVjMTUwMzU3ZDgwZWQwOTgxOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-05-11T21:30:02Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-05-11T21:30:02Z"}, "message": "semantics.c (register_constexpr_fundef): Add to hash table here.\n\n\t* semantics.c (register_constexpr_fundef): Add to hash table here.\n\t(validate_constexpr_fundecl): Not here.\n\nFrom-SVN: r173681", "tree": {"sha": "508374ae54a7a6e5aee9bdd77ed8d4a42f454f17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/508374ae54a7a6e5aee9bdd77ed8d4a42f454f17"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b41f0d3273a3a8561eebeec150357d80ed09819", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b41f0d3273a3a8561eebeec150357d80ed09819", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b41f0d3273a3a8561eebeec150357d80ed09819", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b41f0d3273a3a8561eebeec150357d80ed09819/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "efd115c1c6e42f689659802e4eab60c455a53579", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efd115c1c6e42f689659802e4eab60c455a53579", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efd115c1c6e42f689659802e4eab60c455a53579"}], "stats": {"total": 42, "additions": 21, "deletions": 21}, "files": [{"sha": "6452fd60c4e73ff18b5b841231a1f3a9603088bd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b41f0d3273a3a8561eebeec150357d80ed09819/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b41f0d3273a3a8561eebeec150357d80ed09819/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9b41f0d3273a3a8561eebeec150357d80ed09819", "patch": "@@ -1,5 +1,8 @@\n 2011-05-11  Jason Merrill  <jason@redhat.com>\n \n+\t* semantics.c (register_constexpr_fundef): Add to hash table here.\n+\t(validate_constexpr_fundecl): Not here.\n+\n \t* decl.c (grokdeclarator): Only set DECL_DECLARED_CONSTEXPR_P once.\n \n \t* pt.c (build_non_dependent_expr): Don't check null_ptr_cst_p,"}, {"sha": "e12f03623e30802604ee8e277020b550d8fb83b2", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 18, "deletions": 21, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b41f0d3273a3a8561eebeec150357d80ed09819/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b41f0d3273a3a8561eebeec150357d80ed09819/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=9b41f0d3273a3a8561eebeec150357d80ed09819", "patch": "@@ -5456,9 +5456,6 @@ is_valid_constexpr_fn (tree fun, bool complain)\n tree\n validate_constexpr_fundecl (tree fun)\n {\n-  constexpr_fundef entry;\n-  constexpr_fundef **slot;\n-\n   if (processing_template_decl || !DECL_DECLARED_CONSTEXPR_P (fun))\n     return NULL;\n   else if (DECL_CLONED_FUNCTION_P (fun))\n@@ -5471,21 +5468,6 @@ validate_constexpr_fundecl (tree fun)\n       return NULL;\n     }\n \n-  /* Create the constexpr function table if necessary.  */\n-  if (constexpr_fundef_table == NULL)\n-    constexpr_fundef_table = htab_create_ggc (101,\n-                                              constexpr_fundef_hash,\n-                                              constexpr_fundef_equal,\n-                                              ggc_free);\n-  entry.decl = fun;\n-  entry.body = NULL;\n-  slot = (constexpr_fundef **)\n-    htab_find_slot (constexpr_fundef_table, &entry, INSERT);\n-  if (*slot == NULL)\n-    {\n-      *slot = ggc_alloc_constexpr_fundef ();\n-      **slot = entry;\n-    }\n   return fun;\n }\n \n@@ -5722,8 +5704,8 @@ constexpr_fn_retval (tree body)\n tree\n register_constexpr_fundef (tree fun, tree body)\n {\n-  constexpr_fundef *fundef = retrieve_constexpr_fundef (fun);\n-  gcc_assert (fundef != NULL && fundef->body == NULL);\n+  constexpr_fundef entry;\n+  constexpr_fundef **slot;\n \n   if (DECL_CONSTRUCTOR_P (fun))\n     body = build_constexpr_constructor_member_initializers\n@@ -5754,7 +5736,22 @@ register_constexpr_fundef (tree fun, tree body)\n \trequire_potential_rvalue_constant_expression (body);\n       return NULL;\n     }\n-  fundef->body = body;\n+\n+  /* Create the constexpr function table if necessary.  */\n+  if (constexpr_fundef_table == NULL)\n+    constexpr_fundef_table = htab_create_ggc (101,\n+                                              constexpr_fundef_hash,\n+                                              constexpr_fundef_equal,\n+                                              ggc_free);\n+  entry.decl = fun;\n+  entry.body = body;\n+  slot = (constexpr_fundef **)\n+    htab_find_slot (constexpr_fundef_table, &entry, INSERT);\n+\n+  gcc_assert (*slot == NULL);\n+  *slot = ggc_alloc_constexpr_fundef ();\n+  **slot = entry;\n+\n   return fun;\n }\n "}]}