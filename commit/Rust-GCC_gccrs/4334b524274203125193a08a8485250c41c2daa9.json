{"sha": "4334b524274203125193a08a8485250c41c2daa9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDMzNGI1MjQyNzQyMDMxMjUxOTNhMDhhODQ4NTI1MGM0MWMyZGFhOQ==", "commit": {"author": {"name": "Vladimir N. Makarov", "email": "vmakarov@redhat.com", "date": "2021-01-20T16:40:14Z"}, "committer": {"name": "Vladimir N. Makarov", "email": "vmakarov@redhat.com", "date": "2021-01-20T16:44:04Z"}, "message": "[PR98722] LRA: Check that target has no 3-op add insn to transform 2 plus expression.\n\nPatch cf2ac1c30af0fa783c8d72e527904dda5d8cc330 for solving PR97969 was\nassumed for targets with absent 3-op add insn.  But the original patch did\nnot check this.  This patch adds the check.\n\ngcc/ChangeLog:\n\n\tPR rtl-optimization/98722\n\t* lra-eliminations.c (eliminate_regs_in_insn): Check that target\n\thas no 3-op add insn to transform insns containing two pluses.\n\ngcc/testsuite/ChangeLog:\n\n\tPR rtl-optimization/98722\n\t* g++.target/s390/pr98722.C: New.", "tree": {"sha": "871af61bf1eacb30f9613f4d5261edfc9701fdbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/871af61bf1eacb30f9613f4d5261edfc9701fdbd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4334b524274203125193a08a8485250c41c2daa9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4334b524274203125193a08a8485250c41c2daa9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4334b524274203125193a08a8485250c41c2daa9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4334b524274203125193a08a8485250c41c2daa9/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "261cdd23195bc921737fd7a44e34a93aaaaccc44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/261cdd23195bc921737fd7a44e34a93aaaaccc44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/261cdd23195bc921737fd7a44e34a93aaaaccc44"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "5b9717574ed0621e995cf768fda917f375e57e88", "filename": "gcc/lra-eliminations.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4334b524274203125193a08a8485250c41c2daa9/gcc%2Flra-eliminations.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4334b524274203125193a08a8485250c41c2daa9/gcc%2Flra-eliminations.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-eliminations.c?ref=4334b524274203125193a08a8485250c41c2daa9", "patch": "@@ -1057,7 +1057,10 @@ eliminate_regs_in_insn (rtx_insn *insn, bool replace_p, bool first_p,\n \treg2 = SUBREG_REG (reg2);\n       if (REG_P (reg1) && REG_P (reg2)\n \t  && REGNO (reg1) < FIRST_PSEUDO_REGISTER\n-\t  && REGNO (reg2) >= FIRST_PSEUDO_REGISTER)\n+\t  && REGNO (reg2) >= FIRST_PSEUDO_REGISTER\n+\t  && GET_MODE (reg1) == Pmode\n+\t  && !have_addptr3_insn (gen_reg_rtx (Pmode), reg1,\n+\t\t\t\t XEXP (XEXP (SET_SRC (set), 0), 1)))\n \t{\n \t  XEXP (XEXP (SET_SRC (set), 0), 0) = op2;\n \t  XEXP (SET_SRC (set), 1) = op1;"}, {"sha": "64edaf3de21e83a8281b56b3c930b9dd560de1e2", "filename": "gcc/testsuite/g++.target/s390/pr98722.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4334b524274203125193a08a8485250c41c2daa9/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fs390%2Fpr98722.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4334b524274203125193a08a8485250c41c2daa9/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fs390%2Fpr98722.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fs390%2Fpr98722.C?ref=4334b524274203125193a08a8485250c41c2daa9", "patch": "@@ -0,0 +1,12 @@\n+// { dg-do compile }\n+// { dg-options \"-Og -fno-tree-fre -fno-split-wide-types\" }\n+struct B {\n+  virtual void Method();\n+};\n+typedef void (B::*fn_type_a)();\n+\n+int main() {\n+  fn_type_a f(&B::Method);\n+  B b;\n+  (b.*f)();\n+}"}]}