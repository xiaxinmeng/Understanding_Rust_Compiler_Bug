{"sha": "0c04ac0e15830b94a9f1e0715d92a4a2558dda03", "node_id": "C_kwDOANBUbNoAKDBjMDRhYzBlMTU4MzBiOTRhOWYxZTA3MTVkOTJhNGEyNTU4ZGRhMDM", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-02-07T19:00:55Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-02-07T23:32:47Z"}, "message": "analyzer: fix ICE on realloc of non-heap [PR104417]\n\ngcc/analyzer/ChangeLog:\n\tPR analyzer/104417\n\t* sm-taint.cc (tainted_allocation_size::tainted_allocation_size):\n\tRemove overzealous assertion.\n\t(tainted_allocation_size::emit): Likewise.\n\t(region_model::check_dynamic_size_for_taint): Likewise.\n\ngcc/testsuite/ChangeLog:\n\tPR analyzer/104417\n\t* gcc.dg/analyzer/pr104417.c: New test.\n\nSigned-off-by: David Malcolm <dmalcolm@redhat.com>", "tree": {"sha": "4edd29d207a8e3be4b4a472930cea6fa518b1fdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4edd29d207a8e3be4b4a472930cea6fa518b1fdf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c04ac0e15830b94a9f1e0715d92a4a2558dda03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c04ac0e15830b94a9f1e0715d92a4a2558dda03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c04ac0e15830b94a9f1e0715d92a4a2558dda03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c04ac0e15830b94a9f1e0715d92a4a2558dda03/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d2c0fad59745bf67aa6471e8c9e96c351f0de59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d2c0fad59745bf67aa6471e8c9e96c351f0de59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d2c0fad59745bf67aa6471e8c9e96c351f0de59"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "57a0ac684ab09cf8a6b8228913cb7b75bbaaab16", "filename": "gcc/analyzer/sm-taint.cc", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c04ac0e15830b94a9f1e0715d92a4a2558dda03/gcc%2Fanalyzer%2Fsm-taint.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c04ac0e15830b94a9f1e0715d92a4a2558dda03/gcc%2Fanalyzer%2Fsm-taint.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fsm-taint.cc?ref=0c04ac0e15830b94a9f1e0715d92a4a2558dda03", "patch": "@@ -496,9 +496,6 @@ class tainted_allocation_size : public taint_diagnostic\n   : taint_diagnostic (sm, arg, has_bounds),\n     m_mem_space (mem_space)\n   {\n-    gcc_assert (mem_space == MEMSPACE_STACK\n-\t\t|| mem_space == MEMSPACE_HEAP\n-\t\t|| mem_space == MEMSPACE_UNKNOWN);\n   }\n \n   const char *get_kind () const FINAL OVERRIDE\n@@ -511,9 +508,6 @@ class tainted_allocation_size : public taint_diagnostic\n     diagnostic_metadata m;\n     /* \"CWE-789: Memory Allocation with Excessive Size Value\".  */\n     m.add_cwe (789);\n-    gcc_assert (m_mem_space == MEMSPACE_STACK\n-\t\t|| m_mem_space == MEMSPACE_HEAP\n-\t\t|| m_mem_space == MEMSPACE_UNKNOWN);\n     // TODO: make use of m_mem_space\n     if (m_arg)\n       switch (m_has_bounds)\n@@ -1055,9 +1049,6 @@ region_model::check_dynamic_size_for_taint (enum memory_space mem_space,\n \t\t\t\t\t    const svalue *size_in_bytes,\n \t\t\t\t\t    region_model_context *ctxt) const\n {\n-  gcc_assert (mem_space == MEMSPACE_STACK\n-\t      || mem_space == MEMSPACE_HEAP\n-\t      || mem_space == MEMSPACE_UNKNOWN);\n   gcc_assert (size_in_bytes);\n   gcc_assert (ctxt);\n "}, {"sha": "41ea5dbd0c724b5f45fd193a5230a1096340d4cf", "filename": "gcc/testsuite/gcc.dg/analyzer/pr104417.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c04ac0e15830b94a9f1e0715d92a4a2558dda03/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr104417.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c04ac0e15830b94a9f1e0715d92a4a2558dda03/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr104417.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr104417.c?ref=0c04ac0e15830b94a9f1e0715d92a4a2558dda03", "patch": "@@ -0,0 +1,7 @@\n+char eparr[1];\n+\n+void *\n+warn_realloc_extern_ptrarr_offset (int i, int n)\n+{\n+  return __builtin_realloc (eparr + i, n); /* { dg-warning \"'__builtin_realloc' called on unallocated object 'eparr'\" } */\n+}"}]}