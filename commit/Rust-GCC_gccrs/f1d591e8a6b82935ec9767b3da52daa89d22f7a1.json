{"sha": "f1d591e8a6b82935ec9767b3da52daa89d22f7a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFkNTkxZThhNmI4MjkzNWVjOTc2N2IzZGE1MmRhYTg5ZDIyZjdhMQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-01-26T19:38:20Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-01-26T19:38:20Z"}, "message": "Fix assertions for move assignment of trivial types\n\n\tPR libstdc++/69478\n\t* include/bits/stl_algobase.h (__copy_move<_IsMove, true,\n\trandom_access_iterator_tag>): Check is_move_assignable when moving.\n\t(__copy_move_backwards<_IsMove, true, random_access_iterator_tag>):\n\tLikewise.\n\t* testsuite/25_algorithms/copy/move_iterators/69478.cc: New.\n\t* testsuite/25_algorithms/copy_backward/move_iterators/69478.cc: New.\n\t* testsuite/25_algorithms/move/69478.cc: New.\n\t* testsuite/25_algorithms/move_backward/69478.cc: new.\n\nFrom-SVN: r232842", "tree": {"sha": "377bdc5779146d2b593d7ebd63754ceb1700f7b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/377bdc5779146d2b593d7ebd63754ceb1700f7b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1d591e8a6b82935ec9767b3da52daa89d22f7a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1d591e8a6b82935ec9767b3da52daa89d22f7a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1d591e8a6b82935ec9767b3da52daa89d22f7a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1d591e8a6b82935ec9767b3da52daa89d22f7a1/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a4dfe66dac91a0f60c5864996df61e2a5ad625b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a4dfe66dac91a0f60c5864996df61e2a5ad625b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a4dfe66dac91a0f60c5864996df61e2a5ad625b"}], "stats": {"total": 184, "additions": 180, "deletions": 4}, "files": [{"sha": "4ac1e7ff51039e6f80f08a8deffea0c4162d6782", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1d591e8a6b82935ec9767b3da52daa89d22f7a1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1d591e8a6b82935ec9767b3da52daa89d22f7a1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f1d591e8a6b82935ec9767b3da52daa89d22f7a1", "patch": "@@ -1,3 +1,15 @@\n+2016-01-26  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/69478\n+\t* include/bits/stl_algobase.h (__copy_move<_IsMove, true,\n+\trandom_access_iterator_tag>): Check is_move_assignable when moving.\n+\t(__copy_move_backwards<_IsMove, true, random_access_iterator_tag>):\n+\tLikewise.\n+\t* testsuite/25_algorithms/copy/move_iterators/69478.cc: New.\n+\t* testsuite/25_algorithms/copy_backward/move_iterators/69478.cc: New.\n+\t* testsuite/25_algorithms/move/69478.cc: New.\n+\t* testsuite/25_algorithms/move_backward/69478.cc: new.\n+\n 2016-01-26  Andris Pavenis  <andris.pavenis@iki.fi>\n \n \t* include/c_compatibility/stdlib.h: Include wide character related"}, {"sha": "d95ea513a593f8e9f08c5a90bdcbbd5f23681f88", "filename": "libstdc++-v3/include/bits/stl_algobase.h", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1d591e8a6b82935ec9767b3da52daa89d22f7a1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1d591e8a6b82935ec9767b3da52daa89d22f7a1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h?ref=f1d591e8a6b82935ec9767b3da52daa89d22f7a1", "patch": "@@ -357,9 +357,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n         __copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)\n         {\n #if __cplusplus >= 201103L\n+\t  using __assignable = conditional<_IsMove,\n+\t\t\t\t\t   is_move_assignable<_Tp>,\n+\t\t\t\t\t   is_copy_assignable<_Tp>>;\n \t  // trivial types can have deleted assignment\n-\t  static_assert( is_copy_assignable<_Tp>::value,\n-\t                 \"type is not assignable\" );\n+\t  static_assert( __assignable::type::value, \"type is not assignable\" );\n #endif\n \t  const ptrdiff_t _Num = __last - __first;\n \t  if (_Num)\n@@ -557,9 +559,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n         __copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)\n         {\n #if __cplusplus >= 201103L\n+\t  using __assignable = conditional<_IsMove,\n+\t\t\t\t\t   is_move_assignable<_Tp>,\n+\t\t\t\t\t   is_copy_assignable<_Tp>>;\n \t  // trivial types can have deleted assignment\n-\t  static_assert( is_copy_assignable<_Tp>::value,\n-\t                 \"type is not assignable\" );\n+\t  static_assert( __assignable::type::value, \"type is not assignable\" );\n #endif\n \t  const ptrdiff_t _Num = __last - __first;\n \t  if (_Num)"}, {"sha": "707b273c83e019cdfdd87677dbd529b2fb89ddbd", "filename": "libstdc++-v3/testsuite/25_algorithms/copy/move_iterators/69478.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1d591e8a6b82935ec9767b3da52daa89d22f7a1/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy%2Fmove_iterators%2F69478.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1d591e8a6b82935ec9767b3da52daa89d22f7a1/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy%2Fmove_iterators%2F69478.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy%2Fmove_iterators%2F69478.cc?ref=f1d591e8a6b82935ec9767b3da52daa89d22f7a1", "patch": "@@ -0,0 +1,40 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// PR libstdc++/69478\n+\n+#include <algorithm>\n+#include <iterator>\n+\n+void\n+test01()\n+{\n+  // A move-only type that is also a trivial class.\n+  struct trivial_rvalstruct\n+  {\n+    trivial_rvalstruct() = default;\n+    trivial_rvalstruct(trivial_rvalstruct&&) = default;\n+    trivial_rvalstruct& operator=(trivial_rvalstruct&&) = default;\n+  };\n+  static_assert(std::is_trivial<trivial_rvalstruct>::value, \"\");\n+\n+  trivial_rvalstruct a[1], b[1];\n+  copy(std::make_move_iterator(a), std::make_move_iterator(a + 1), b);\n+}"}, {"sha": "e00d146996f6bb59a432db07a002ef4e0e67c8a4", "filename": "libstdc++-v3/testsuite/25_algorithms/copy_backward/move_iterators/69478.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1d591e8a6b82935ec9767b3da52daa89d22f7a1/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy_backward%2Fmove_iterators%2F69478.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1d591e8a6b82935ec9767b3da52daa89d22f7a1/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy_backward%2Fmove_iterators%2F69478.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy_backward%2Fmove_iterators%2F69478.cc?ref=f1d591e8a6b82935ec9767b3da52daa89d22f7a1", "patch": "@@ -0,0 +1,40 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// PR libstdc++/69478\n+\n+#include <algorithm>\n+#include <iterator>\n+\n+void\n+test01()\n+{\n+  // A move-only type that is also a trivial class.\n+  struct trivial_rvalstruct\n+  {\n+    trivial_rvalstruct() = default;\n+    trivial_rvalstruct(trivial_rvalstruct&&) = default;\n+    trivial_rvalstruct& operator=(trivial_rvalstruct&&) = default;\n+  };\n+  static_assert(std::is_trivial<trivial_rvalstruct>::value, \"\");\n+\n+  trivial_rvalstruct a[1], b[1];\n+  copy_backward(std::make_move_iterator(a), std::make_move_iterator(a+1), b);\n+}"}, {"sha": "791e0bfcff6b81597ddc811bd6249601109ad255", "filename": "libstdc++-v3/testsuite/25_algorithms/move/69478.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1d591e8a6b82935ec9767b3da52daa89d22f7a1/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmove%2F69478.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1d591e8a6b82935ec9767b3da52daa89d22f7a1/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmove%2F69478.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmove%2F69478.cc?ref=f1d591e8a6b82935ec9767b3da52daa89d22f7a1", "patch": "@@ -0,0 +1,40 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// PR libstdc++/69478\n+\n+#include <algorithm>\n+#include <iterator>\n+\n+void\n+test01()\n+{\n+  // A move-only type that is also a trivial class.\n+  struct trivial_rvalstruct\n+  {\n+    trivial_rvalstruct() = default;\n+    trivial_rvalstruct(trivial_rvalstruct&&) = default;\n+    trivial_rvalstruct& operator=(trivial_rvalstruct&&) = default;\n+  };\n+  static_assert(std::is_trivial<trivial_rvalstruct>::value, \"\");\n+\n+  trivial_rvalstruct a[1], b[1];\n+  std::move(a, a + 1, b);\n+}"}, {"sha": "8ca198fc2c13d4ee6d37faafc09f4da9e24094a2", "filename": "libstdc++-v3/testsuite/25_algorithms/move_backward/69478.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1d591e8a6b82935ec9767b3da52daa89d22f7a1/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmove_backward%2F69478.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1d591e8a6b82935ec9767b3da52daa89d22f7a1/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmove_backward%2F69478.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmove_backward%2F69478.cc?ref=f1d591e8a6b82935ec9767b3da52daa89d22f7a1", "patch": "@@ -0,0 +1,40 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// PR libstdc++/69478\n+\n+#include <algorithm>\n+#include <iterator>\n+\n+void\n+test01()\n+{\n+  // A move-only type that is also a trivial class.\n+  struct trivial_rvalstruct\n+  {\n+    trivial_rvalstruct() = default;\n+    trivial_rvalstruct(trivial_rvalstruct&&) = default;\n+    trivial_rvalstruct& operator=(trivial_rvalstruct&&) = default;\n+  };\n+  static_assert(std::is_trivial<trivial_rvalstruct>::value, \"\");\n+\n+  trivial_rvalstruct a[1], b[1];\n+  std::move_backward(a, a + 1, b);\n+}"}]}