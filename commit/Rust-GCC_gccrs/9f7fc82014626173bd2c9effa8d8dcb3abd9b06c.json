{"sha": "9f7fc82014626173bd2c9effa8d8dcb3abd9b06c", "node_id": "C_kwDOANBUbNoAKDlmN2ZjODIwMTQ2MjYxNzNiZDJjOWVmZmE4ZDhkY2IzYWJkOWIwNmM", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2021-11-16T09:44:53Z"}, "committer": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2021-11-16T09:45:32Z"}, "message": "ipa-sra: Testcase that removing a \"returns_nonnull\" retval works\n\nSince we can now remove return values of functions with return_nonnull\ntype attribute, I'll feel a bit safer if we can test this does not ICE\nwhen someone attempts to access a non-existent call LHS.  Eventually\nwe should probably drop the attribute when this happens.\n\ngcc/testsuite/ChangeLog:\n\n2021-11-15  Martin Jambor  <mjambor@suse.cz>\n\n\t* gcc.dg/ipa/ipa-sra-ret-nonull.c: New test.", "tree": {"sha": "686738fcf2d17e8302e4c7ce4b2923d192063e1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/686738fcf2d17e8302e4c7ce4b2923d192063e1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f7fc82014626173bd2c9effa8d8dcb3abd9b06c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE5elVTFt/d09Vsoczv2PBvD+kNUAFAmGTfbwACgkQv2PBvD+k\nNUDmpQ//QWtfaMMORHV6PnEXhQsBpAHaoOxQ6oxyf3Uw3oY+dnP8mhf9QcAo6TVw\nDBvHw/+9JPq1bO0tvp8/0DeOsZXddmJitsXwEd1LOUvNpCqSDV+ZAwYrZpB/ZtFg\nJmNGkyKlNbT3Yu4SkjKqLYTDhAeowmZiFuYgvsFb5vpwZiXy3/90G5AAcjos13M5\nXj5x1sQuPM+yE3TEx9MtcoQeSUur9Ozo96yOsmIb6w3SCFwhdNWYHszRXQeTbSio\nxWZPKEAVRlZZkJ9FyLpC965JS/dCSpTmU16wLjycH449OGyWIhIpXDY6P6xgH8vl\nIl5KxgIHHnOuM2rJJYsFJadXFBE+5QMN3RTURfMXEwPz+H8EeeVr+E+K9hobvga5\n4uKprJQHaEYJw7IwZEnmDEGe5pWy1+Uja0aQ3sbT2wJDDzUR76gSD962DTVX/x7t\nUfx3LPD8zAnafJ0umrSupH28OzBXORGnE3cyJJj3Hk/jzihr/3CCMb//NEmzAs0O\nhRlFH4sMsmvw7hgjyZOvA+6JybRe3XlmCyIFK+aia+Tt/2cB4wV7/M1KH2/O4R0J\nWjZWE/9IuzcG+N2Tg3vM+J/fRSbAehbLJwt3g/95zWOrKoVjqvglMopcTrbYlQtj\nvTOXrflJ0sxa4XMCE5qLVG4Xu58uhEermKjh5hn6btaFkeoxBnQ=\n=dSU2\n-----END PGP SIGNATURE-----", "payload": "tree 686738fcf2d17e8302e4c7ce4b2923d192063e1b\nparent 9ceaf0fee35f6c79cda60e35aad27598dd4dcee6\nauthor Martin Jambor <mjambor@suse.cz> 1637055893 +0100\ncommitter Martin Jambor <mjambor@suse.cz> 1637055932 +0100\n\nipa-sra: Testcase that removing a \"returns_nonnull\" retval works\n\nSince we can now remove return values of functions with return_nonnull\ntype attribute, I'll feel a bit safer if we can test this does not ICE\nwhen someone attempts to access a non-existent call LHS.  Eventually\nwe should probably drop the attribute when this happens.\n\ngcc/testsuite/ChangeLog:\n\n2021-11-15  Martin Jambor  <mjambor@suse.cz>\n\n\t* gcc.dg/ipa/ipa-sra-ret-nonull.c: New test.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f7fc82014626173bd2c9effa8d8dcb3abd9b06c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f7fc82014626173bd2c9effa8d8dcb3abd9b06c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f7fc82014626173bd2c9effa8d8dcb3abd9b06c/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ceaf0fee35f6c79cda60e35aad27598dd4dcee6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ceaf0fee35f6c79cda60e35aad27598dd4dcee6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ceaf0fee35f6c79cda60e35aad27598dd4dcee6"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "18c13efd60928ad8360a270a589c1d1759b83c35", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-sra-ret-nonull.c", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f7fc82014626173bd2c9effa8d8dcb3abd9b06c/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-sra-ret-nonull.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f7fc82014626173bd2c9effa8d8dcb3abd9b06c/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-sra-ret-nonull.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-sra-ret-nonull.c?ref=9f7fc82014626173bd2c9effa8d8dcb3abd9b06c", "patch": "@@ -0,0 +1,40 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-ipa-sra-details\"  } */\n+\n+volatile void *gp;\n+volatile void *gq;\n+char buf[16];\n+\n+__attribute__((returns_nonnull, noinline))\n+static char *\n+foo (char *p, char *q)\n+{\n+  gq = q;\n+  gp = p;\n+  return q;\n+}\n+\n+__attribute__((returns_nonnull, noinline))\n+static char *\n+bar (char *p, char *q)\n+{\n+  return foo (p, q) + 8;\n+}\n+\n+__attribute__((noipa))\n+static char *\n+get_charp (void)\n+{\n+  return &buf[0];\n+}\n+\n+int\n+main ()\n+{\n+  char *r;\n+  asm volatile (\"\" : : : \"memory\");\n+  r = bar (get_charp (), get_charp ());\n+  return 0;\n+}\n+\n+/* { dg-final { scan-ipa-dump-times \"Will SKIP return.\" 2 \"sra\" } } */"}]}