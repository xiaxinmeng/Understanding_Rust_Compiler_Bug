{"sha": "9419649c017669b08911458bc16ac18e2792bc56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQxOTY0OWMwMTc2NjliMDg5MTE0NThiYzE2YWMxOGUyNzkyYmM1Ng==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2005-06-02T14:19:18Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2005-06-02T14:19:18Z"}, "message": "rs6000.c (rs6000_insn_valid_within_doloop): New.\n\n\t* config/rs6000/rs6000.c (rs6000_insn_valid_within_doloop): New.\n\t(TARGET_INSN_VALID_WITHIN_DOLOOP): Define.\n\nFrom-SVN: r100493", "tree": {"sha": "317dc2d84774bcde6303f31746abb010d12eee52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/317dc2d84774bcde6303f31746abb010d12eee52"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9419649c017669b08911458bc16ac18e2792bc56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9419649c017669b08911458bc16ac18e2792bc56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9419649c017669b08911458bc16ac18e2792bc56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9419649c017669b08911458bc16ac18e2792bc56/comments", "author": null, "committer": null, "parents": [{"sha": "46c4495f40a3bf057d4fe74bfb473e69ce1d798b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46c4495f40a3bf057d4fe74bfb473e69ce1d798b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46c4495f40a3bf057d4fe74bfb473e69ce1d798b"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "600266d91460df77f61b41c8952db918e622b010", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9419649c017669b08911458bc16ac18e2792bc56/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9419649c017669b08911458bc16ac18e2792bc56/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9419649c017669b08911458bc16ac18e2792bc56", "patch": "@@ -1,3 +1,8 @@\n+2005-06-02  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/rs6000.c (rs6000_insn_valid_within_doloop): New.\n+\t(TARGET_INSN_VALID_WITHIN_DOLOOP): Define.\n+\n 2005-06-02  Diego Novillo  <dnovillo@redhat.com>\n \n \t* tree-vrp.c (has_assert_expr, maybe_add_assert_expr): Remove."}, {"sha": "b82ee747c614c550d5017e419c13227a21bd9d59", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9419649c017669b08911458bc16ac18e2792bc56/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9419649c017669b08911458bc16ac18e2792bc56/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=9419649c017669b08911458bc16ac18e2792bc56", "patch": "@@ -552,6 +552,7 @@ struct processor_costs power4_cost = {\n \n \f\n static bool rs6000_function_ok_for_sibcall (tree, tree);\n+static bool rs6000_insn_valid_within_doloop (rtx);\n static rtx rs6000_generate_compare (enum rtx_code);\n static void rs6000_maybe_dead (rtx);\n static void rs6000_emit_stack_tie (void);\n@@ -906,6 +907,9 @@ static const char alt_reg_names[][8] =\n #undef TARGET_FUNCTION_OK_FOR_SIBCALL\n #define TARGET_FUNCTION_OK_FOR_SIBCALL rs6000_function_ok_for_sibcall\n \n+#undef TARGET_INSN_VALID_WITHIN_DOLOOP\n+#define TARGET_INSN_VALID_WITHIN_DOLOOP rs6000_insn_valid_within_doloop\n+\n #undef TARGET_RTX_COSTS\n #define TARGET_RTX_COSTS rs6000_rtx_costs\n #undef TARGET_ADDRESS_COST\n@@ -12520,6 +12524,23 @@ rs6000_function_ok_for_sibcall (tree decl, tree exp ATTRIBUTE_UNUSED)\n   return false;\n }\n \n+/* TRUE if INSN insn is valid within a low-overhead loop.\n+   PowerPC uses the COUNT register for branch on table instructions.  */\n+\n+static bool\n+rs6000_insn_valid_within_doloop (rtx insn)\n+{\n+  if (CALL_P (insn))\n+    return false;\n+\n+  if (JUMP_P (insn)\n+      && (GET_CODE (PATTERN (insn)) == ADDR_DIFF_VEC\n+\t  || GET_CODE (PATTERN (insn)) == ADDR_VEC))\n+    return false;\n+\n+  return true;\n+}\n+\n static int\n rs6000_ra_ever_killed (void)\n {"}]}