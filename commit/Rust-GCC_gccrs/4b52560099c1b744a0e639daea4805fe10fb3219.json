{"sha": "4b52560099c1b744a0e639daea4805fe10fb3219", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGI1MjU2MDA5OWMxYjc0NGEwZTYzOWRhZWE0ODA1ZmUxMGZiMzIxOQ==", "commit": {"author": {"name": "Andrey Belevantsev", "email": "abel@ispras.ru", "date": "2019-04-01T18:05:08Z"}, "committer": {"name": "Alexander Monakov", "email": "amonakov@gcc.gnu.org", "date": "2019-04-01T18:05:08Z"}, "message": "sel-sched: correct reset of reset_sched_cycles_p (PR 85412)\n\n2019-04-01  Andrey Belevantsev  <abel@ispras.ru>\n\n\tPR rtl-optimization/85412\n\t* sel-sched.c (sel_sched_region): Assign reset_sched_cycles_p before\n\tsel_sched_region_1, not after.\n\n\t* gcc.dg/pr85412.c: New test.\n\nFrom-SVN: r270065", "tree": {"sha": "6fb365fd3a34328afb00b2fd67c67e9f56cf9595", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6fb365fd3a34328afb00b2fd67c67e9f56cf9595"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b52560099c1b744a0e639daea4805fe10fb3219", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b52560099c1b744a0e639daea4805fe10fb3219", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b52560099c1b744a0e639daea4805fe10fb3219", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b52560099c1b744a0e639daea4805fe10fb3219/comments", "author": {"login": "abonzo", "id": 20396542, "node_id": "MDQ6VXNlcjIwMzk2NTQy", "avatar_url": "https://avatars.githubusercontent.com/u/20396542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abonzo", "html_url": "https://github.com/abonzo", "followers_url": "https://api.github.com/users/abonzo/followers", "following_url": "https://api.github.com/users/abonzo/following{/other_user}", "gists_url": "https://api.github.com/users/abonzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/abonzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abonzo/subscriptions", "organizations_url": "https://api.github.com/users/abonzo/orgs", "repos_url": "https://api.github.com/users/abonzo/repos", "events_url": "https://api.github.com/users/abonzo/events{/privacy}", "received_events_url": "https://api.github.com/users/abonzo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5ed22cbbfce94c6fca8e4247a74315aacb759918", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ed22cbbfce94c6fca8e4247a74315aacb759918", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ed22cbbfce94c6fca8e4247a74315aacb759918"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "7b745c611935bbc3446225dd195d424b6a1bd8e6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b52560099c1b744a0e639daea4805fe10fb3219/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b52560099c1b744a0e639daea4805fe10fb3219/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4b52560099c1b744a0e639daea4805fe10fb3219", "patch": "@@ -1,3 +1,9 @@\n+2019-04-01  Andrey Belevantsev  <abel@ispras.ru>\n+\n+\tPR rtl-optimization/85412\n+\t* sel-sched.c (sel_sched_region): Assign reset_sched_cycles_p before\n+\tsel_sched_region_1, not after.\n+\n 2019-04-01  Andrey Belevantsev  <abel@ispras.ru>\n \n \tPR rtl-optimization/86928"}, {"sha": "552dd0b92636563ae841d635ed700c05e1513d43", "filename": "gcc/sel-sched.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b52560099c1b744a0e639daea4805fe10fb3219/gcc%2Fsel-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b52560099c1b744a0e639daea4805fe10fb3219/gcc%2Fsel-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched.c?ref=4b52560099c1b744a0e639daea4805fe10fb3219", "patch": "@@ -7650,11 +7650,11 @@ sel_sched_region (int rgn)\n       /* Schedule always selecting the next insn to make the correct data\n \t for bundling or other later passes.  */\n       pipelining_p = false;\n+      reset_sched_cycles_p = false;\n       force_next_insn = 1;\n       sel_sched_region_1 ();\n       force_next_insn = 0;\n     }\n-  reset_sched_cycles_p = pipelining_p;\n   sel_region_finish (reset_sched_cycles_p);\n }\n "}, {"sha": "39e393487c477bad5c5ad710c5d8a47177839481", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b52560099c1b744a0e639daea4805fe10fb3219/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b52560099c1b744a0e639daea4805fe10fb3219/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4b52560099c1b744a0e639daea4805fe10fb3219", "patch": "@@ -1,3 +1,8 @@\n+2019-04-01  Andrey Belevantsev  <abel@ispras.ru>\n+\n+\tPR rtl-optimization/85412\n+\t* gcc.dg/pr85412.c: New test.\n+\n 2019-04-01  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/62207"}, {"sha": "11b8ceccd1efaa8b150726f922d926370bf80920", "filename": "gcc/testsuite/gcc.dg/pr85412.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b52560099c1b744a0e639daea4805fe10fb3219/gcc%2Ftestsuite%2Fgcc.dg%2Fpr85412.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b52560099c1b744a0e639daea4805fe10fb3219/gcc%2Ftestsuite%2Fgcc.dg%2Fpr85412.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr85412.c?ref=4b52560099c1b744a0e639daea4805fe10fb3219", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } } */\n+/* { dg-require-effective-target int128 } */\n+/* { dg-options \"-O1 -fpeephole2 -fschedule-insns2 -fsel-sched-pipelining -fselective-scheduling2 -ftree-loop-if-convert -fno-if-conversion -fno-move-loop-invariants -fno-split-wide-types -fno-tree-dominator-opts\" } */\n+/* { dg-additional-options \"-march=bonnell\" { target x86_64-*-* } } */\n+\n+__int128 jv;\n+\n+void\n+zm (__int128 g9, unsigned short int sm, short int hk)\n+{\n+  while (hk < 1)\n+    {\n+      if (jv == 0)\n+        sm *= g9;\n+\n+      if (sm < jv)\n+        hk = sm;\n+\n+      g9 |= sm == hk;\n+    }\n+}"}]}