{"sha": "6d59425df7e3d4e9b49c6521288a048bb35ec70c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQ1OTQyNWRmN2UzZDRlOWI0OWM2NTIxMjg4YTA0OGJiMzVlYzcwYw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-10-14T12:58:18Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-10-14T12:58:18Z"}, "message": "re PR tree-optimization/77979 (ICE on valid code at -Os and above on x86_64-linux-gnu: Segmentation fault)\n\n2016-10-14  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/77979\n\t* tree-vrp.c (compare_name_with_value): Handle released SSA names\n\tin the equivalency sets.\n\t(compare_names): Likewise.\n\n\t* gcc.dg/torture/pr77979.c: New testcase.\n\nFrom-SVN: r241162", "tree": {"sha": "7cdbd54e43186d9f5302e22e36538167ff60e172", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7cdbd54e43186d9f5302e22e36538167ff60e172"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d59425df7e3d4e9b49c6521288a048bb35ec70c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d59425df7e3d4e9b49c6521288a048bb35ec70c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d59425df7e3d4e9b49c6521288a048bb35ec70c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d59425df7e3d4e9b49c6521288a048bb35ec70c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "43f66d6e1e49b600d5b1cef208995641232031d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43f66d6e1e49b600d5b1cef208995641232031d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43f66d6e1e49b600d5b1cef208995641232031d4"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "433c0cbdd6403002cfaa0db1983a46b3fc48d8de", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d59425df7e3d4e9b49c6521288a048bb35ec70c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d59425df7e3d4e9b49c6521288a048bb35ec70c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d59425df7e3d4e9b49c6521288a048bb35ec70c", "patch": "@@ -1,3 +1,10 @@\n+2016-10-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/77979\n+\t* tree-vrp.c (compare_name_with_value): Handle released SSA names\n+\tin the equivalency sets.\n+\t(compare_names): Likewise.\n+\n 2016-10-14  Martin Liska  <mliska@suse.cz>\n \n \t* builtins.h(target_char_cst_p): Declare the function."}, {"sha": "bc8471f63e4df367f7e3a047917de47894900f56", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d59425df7e3d4e9b49c6521288a048bb35ec70c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d59425df7e3d4e9b49c6521288a048bb35ec70c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6d59425df7e3d4e9b49c6521288a048bb35ec70c", "patch": "@@ -1,3 +1,8 @@\n+2016-10-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/77979\n+\t* gcc.dg/torture/pr77979.c: New testcase.\n+\n 2016-10-14  Martin Liska  <mliska@suse.cz>\n \n \t* gcc.dg/tree-ssa/builtins-folding-generic.c: New test."}, {"sha": "94addf4174de1ea2482dd2a53b9d9573d2d8c1a3", "filename": "gcc/testsuite/gcc.dg/torture/pr77979.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d59425df7e3d4e9b49c6521288a048bb35ec70c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr77979.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d59425df7e3d4e9b49c6521288a048bb35ec70c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr77979.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr77979.c?ref=6d59425df7e3d4e9b49c6521288a048bb35ec70c", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+\n+int a, b, c, d, e, f;\n+\n+void fn1 ()\n+{ \n+  int g = b;\n+  a = -~(d || a) << 4 || e;\n+  b = c || g ^ a;\n+  if (f < g)\n+    d = e;\n+}"}, {"sha": "00a08fdff6dd123b53955d3308e7f6c6a86b5ba5", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d59425df7e3d4e9b49c6521288a048bb35ec70c/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d59425df7e3d4e9b49c6521288a048bb35ec70c/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=6d59425df7e3d4e9b49c6521288a048bb35ec70c", "patch": "@@ -7188,9 +7188,13 @@ compare_name_with_value (enum tree_code comp, tree var, tree val,\n \n   EXECUTE_IF_SET_IN_BITMAP (e, 0, i, bi)\n     {\n+      tree name = ssa_name (i);\n+      if (! name)\n+\tcontinue;\n+\n       if (! use_equiv_p\n-\t  && ! SSA_NAME_IS_DEFAULT_DEF (ssa_name (i))\n-\t  && prop_simulate_again_p (SSA_NAME_DEF_STMT (ssa_name (i))))\n+\t  && ! SSA_NAME_IS_DEFAULT_DEF (name)\n+\t  && prop_simulate_again_p (SSA_NAME_DEF_STMT (name)))\n \tcontinue;\n \n       equiv_vr = get_vr_for_comparison (i);\n@@ -7289,11 +7293,17 @@ compare_names (enum tree_code comp, tree n1, tree n2,\n      of the loop just to check N1 and N2 ranges.  */\n   EXECUTE_IF_SET_IN_BITMAP (e1, 0, i1, bi1)\n     {\n+      if (! ssa_name (i1))\n+\tcontinue;\n+\n       value_range vr1 = get_vr_for_comparison (i1);\n \n       t = retval = NULL_TREE;\n       EXECUTE_IF_SET_IN_BITMAP (e2, 0, i2, bi2)\n \t{\n+\t  if (! ssa_name (i2))\n+\t    continue;\n+\n \t  bool sop = false;\n \n \t  value_range vr2 = get_vr_for_comparison (i2);"}]}