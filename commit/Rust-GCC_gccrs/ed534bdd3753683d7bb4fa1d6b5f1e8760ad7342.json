{"sha": "ed534bdd3753683d7bb4fa1d6b5f1e8760ad7342", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ1MzRiZGQzNzUzNjgzZDdiYjRmYTFkNmI1ZjFlODc2MGFkNzM0Mg==", "commit": {"author": {"name": "Gavin Romig-Koch", "email": "gavin@cygnus.com", "date": "1999-07-01T08:08:42Z"}, "committer": {"name": "Gavin Romig-Koch", "email": "gavin@gcc.gnu.org", "date": "1999-07-01T08:08:42Z"}, "message": "For gcc:\n\n\t* c-lex.c (yylex): Improve 'integer constant out of range' messages.\nFor gcc/cp:\n\t* lex.c (real_yylex): Improve 'integer constant out of range' messages.\n\nFrom-SVN: r27873", "tree": {"sha": "896e2f2586bef58e47eb7b54e41c969ea83538fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/896e2f2586bef58e47eb7b54e41c969ea83538fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed534bdd3753683d7bb4fa1d6b5f1e8760ad7342", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed534bdd3753683d7bb4fa1d6b5f1e8760ad7342", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed534bdd3753683d7bb4fa1d6b5f1e8760ad7342", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed534bdd3753683d7bb4fa1d6b5f1e8760ad7342/comments", "author": null, "committer": null, "parents": [{"sha": "ac8f5d48cba9387f8ccb22bb91786805a213bf5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac8f5d48cba9387f8ccb22bb91786805a213bf5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac8f5d48cba9387f8ccb22bb91786805a213bf5a"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "37b265bdb69551297cd23a6a1d5ceed491f816e6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed534bdd3753683d7bb4fa1d6b5f1e8760ad7342/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed534bdd3753683d7bb4fa1d6b5f1e8760ad7342/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ed534bdd3753683d7bb4fa1d6b5f1e8760ad7342", "patch": "@@ -1,3 +1,7 @@\n+Thu Jul  1 11:05:25 1999  Gavin Romig-Koch  <gavin@cygnus.com>\n+\n+\t* c-lex.c (yylex): Improve 'integer constant out of range' messages.\n+\n Wed Jun 30 16:51:41 1999  Nick Clifton  <nickc@cygnus.com>\n \n \t* configure.in: Add arm-pe and thumb-pe targets."}, {"sha": "214bcd1b4e4c8efbe8aeff02adcce739cf7144fb", "filename": "gcc/c-lex.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed534bdd3753683d7bb4fa1d6b5f1e8760ad7342/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed534bdd3753683d7bb4fa1d6b5f1e8760ad7342/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=ed534bdd3753683d7bb4fa1d6b5f1e8760ad7342", "patch": "@@ -1775,7 +1775,7 @@ yylex ()\n \n \t    warn = overflow;\n \t    if (warn)\n-\t      pedwarn (\"integer constant out of range\");\n+\t      pedwarn (\"integer constant is too large for this configuration of the compiler - truncated to %d bits\", HOST_BITS_PER_WIDE_INT * 2);\n \n \t    /* This is simplified by the fact that our constant\n \t       is always positive.  */\n@@ -1866,7 +1866,7 @@ yylex ()\n \t\t    < TYPE_PRECISION (type)))\n \t      {\n \t\twarn = 1;\n-\t\tpedwarn (\"integer constant out of range\");\n+\t\tpedwarn (\"integer constant larger than the maximum value of an unsigned long int\");\n \t      }\n \n \t    if (base == 10 && ! spec_unsigned && TREE_UNSIGNED (type))\n@@ -1903,7 +1903,7 @@ yylex ()\n \t    if (! warn\n \t\t&& TREE_CODE (TREE_TYPE (yylval.ttype)) == INTEGER_TYPE\n \t\t&& ! int_fits_type_p (yylval.ttype, TREE_TYPE (yylval.ttype)))\n-\t      pedwarn (\"integer constant out of range\");\n+\t      pedwarn (\"integer constant is larger than the maximum value for its type\");\n \t  }\n \n \tUNGETC (c);"}, {"sha": "c71ffd713e6b92ac212d56c0636b131858ed4ca1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed534bdd3753683d7bb4fa1d6b5f1e8760ad7342/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed534bdd3753683d7bb4fa1d6b5f1e8760ad7342/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ed534bdd3753683d7bb4fa1d6b5f1e8760ad7342", "patch": "@@ -1,3 +1,7 @@\n+1999-07-01  Gavin Romig-Koch  <gavin@cygnus.com>\n+\n+\t* lex.c (real_yylex): Improve 'integer constant out of range' messages.\n+\n 1999-06-28  Richard Henderson  <rth@cygnus.com>\n \n         * decl.c (cp_finish_decl): Fix typo in cp_warning_at call."}, {"sha": "1e2672627e950d85e55c0d6100252480cd9025d0", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed534bdd3753683d7bb4fa1d6b5f1e8760ad7342/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed534bdd3753683d7bb4fa1d6b5f1e8760ad7342/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=ed534bdd3753683d7bb4fa1d6b5f1e8760ad7342", "patch": "@@ -3915,7 +3915,7 @@ real_yylex ()\n \t      if (parts[i])\n \t\twarn = 1;\n \t    if (warn)\n-\t      pedwarn (\"integer constant out of range\");\n+\t      pedwarn (\"integer constant is too large for this configuration of the compiler - truncated to %d bits\", HOST_BITS_PER_WIDE_INT * 2);\n \n \t    /* This is simplified by the fact that our constant\n \t       is always positive.  */\n@@ -3956,7 +3956,7 @@ real_yylex ()\n \t      type = long_long_unsigned_type_node;\n \n \t    if (!int_fits_type_p (yylval.ttype, type) && !warn)\n-\t      pedwarn (\"integer constant out of range\");\n+\t      pedwarn (\"integer constant is larger than the maximum value for its type\");\n \n \t    if (base == 10 && ! spec_unsigned && TREE_UNSIGNED (type))\n \t      warning (\"decimal integer constant is so large that it is unsigned\");"}]}