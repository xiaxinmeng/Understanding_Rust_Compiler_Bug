{"sha": "ea3d83a77f78bb400f9406c0a5fcbd89307859fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWEzZDgzYTc3Zjc4YmI0MDBmOTQwNmMwYTVmY2JkODkzMDc4NTlmYQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-08-13T01:24:28Z"}, "committer": {"name": "Danny Smith", "email": "dannysmith@gcc.gnu.org", "date": "2004-08-13T01:24:28Z"}, "message": "re PR c++/16924 (dllexport attribute now causes some symbols _not_ to be exported)\n\n\tPR c++/16924\n\t* config/i386/winnt.c (i386_pe_mark_dllexport): Set\n\tSYMBOL_REF_DECL.\n\t(i386_pe_mark_dllimport): Likewise.\n\t(i386_pe_encode_section_info): Likewise, when overriding\n\tdllimport attribute.\n\nFrom-SVN: r85924", "tree": {"sha": "4631956ae793ee2755ae4fe428a99bd9d0a0f5bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4631956ae793ee2755ae4fe428a99bd9d0a0f5bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea3d83a77f78bb400f9406c0a5fcbd89307859fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea3d83a77f78bb400f9406c0a5fcbd89307859fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea3d83a77f78bb400f9406c0a5fcbd89307859fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea3d83a77f78bb400f9406c0a5fcbd89307859fa/comments", "author": null, "committer": null, "parents": [{"sha": "3fee54be329cad6ec896c9b243073e54b7556c85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fee54be329cad6ec896c9b243073e54b7556c85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fee54be329cad6ec896c9b243073e54b7556c85"}], "stats": {"total": 37, "additions": 24, "deletions": 13}, "files": [{"sha": "4fee68d8cc99814e1ca09697bac3b9f983d6ccbb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea3d83a77f78bb400f9406c0a5fcbd89307859fa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea3d83a77f78bb400f9406c0a5fcbd89307859fa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ea3d83a77f78bb400f9406c0a5fcbd89307859fa", "patch": "@@ -1,3 +1,12 @@\n+2004-08-13  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/16924\n+\t* config/i386/winnt.c (i386_pe_mark_dllexport): Set\n+\tSYMBOL_REF_DECL.\n+\t(i386_pe_mark_dllimport): Likewise.\n+\t(i386_pe_encode_section_info): Likewise, when overriding\n+\tdllimport attribute.\n+\n 2004-08-12  Geoffrey Keating  <geoffk@apple.com>\n \n \t* configure.ac: When testing for flex, nm, ar, and bison, check"}, {"sha": "41188584f727cf9c02a554e32adb499287c596c3", "filename": "gcc/config/i386/winnt.c", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea3d83a77f78bb400f9406c0a5fcbd89307859fa/gcc%2Fconfig%2Fi386%2Fwinnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea3d83a77f78bb400f9406c0a5fcbd89307859fa/gcc%2Fconfig%2Fi386%2Fwinnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt.c?ref=ea3d83a77f78bb400f9406c0a5fcbd89307859fa", "patch": "@@ -241,6 +241,7 @@ i386_pe_mark_dllexport (tree decl)\n   const char *oldname;\n   char  *newname;\n   rtx rtlname;\n+  rtx symref;\n   tree idp;\n \n   rtlname = XEXP (DECL_RTL (decl), 0);\n@@ -271,8 +272,9 @@ i386_pe_mark_dllexport (tree decl)\n      identical.  */\n   idp = get_identifier (newname);\n \n-  XEXP (DECL_RTL (decl), 0) =\n-    gen_rtx_SYMBOL_REF (Pmode, IDENTIFIER_POINTER (idp));\n+  symref = gen_rtx_SYMBOL_REF (Pmode, IDENTIFIER_POINTER (idp));\n+  SYMBOL_REF_DECL (symref) = decl;\n+  XEXP (DECL_RTL (decl), 0) = symref;\n }\n \n /* Mark a DECL as being dllimport'd.  */\n@@ -284,6 +286,7 @@ i386_pe_mark_dllimport (tree decl)\n   char  *newname;\n   tree idp;\n   rtx rtlname, newrtl;\n+  rtx symref;\n \n   rtlname = XEXP (DECL_RTL (decl), 0);\n   if (GET_CODE (rtlname) == SYMBOL_REF)\n@@ -320,9 +323,9 @@ i386_pe_mark_dllimport (tree decl)\n      identical.  */\n   idp = get_identifier (newname);\n \n-  newrtl = gen_rtx_MEM (Pmode,\n-\t\t\tgen_rtx_SYMBOL_REF (Pmode,\n-\t\t\t\t\t    IDENTIFIER_POINTER (idp)));\n+  symref = gen_rtx_SYMBOL_REF (Pmode, IDENTIFIER_POINTER (idp));\n+  SYMBOL_REF_DECL (symref) = decl;\n+  newrtl = gen_rtx_MEM (Pmode,symref);\n   XEXP (DECL_RTL (decl), 0) = newrtl;\n \n   /* Can't treat a pointer to this as a constant address */\n@@ -450,21 +453,20 @@ i386_pe_encode_section_info (tree decl, rtx rtl, int first)\n \n       /* Remove DLL_IMPORT_PREFIX.  */\n       tree idp = get_identifier (oldname + strlen (DLL_IMPORT_PREFIX));\n-      rtx newrtl = gen_rtx_SYMBOL_REF (Pmode, IDENTIFIER_POINTER (idp));\n+      rtx symref = gen_rtx_SYMBOL_REF (Pmode, IDENTIFIER_POINTER (idp));\n+      SYMBOL_REF_DECL (symref) = decl;\n+      XEXP (DECL_RTL (decl), 0) = symref;\n+      DECL_NON_ADDR_CONST_P (decl) = 0;\n+\n+      /* We previously set TREE_PUBLIC and DECL_EXTERNAL.\n+\t We leave these alone for now.  */\n \n       if (DECL_INITIAL (decl) || !DECL_EXTERNAL (decl))\n \twarning (\"%J'%D' defined locally after being \"\n \t\t \"referenced with dllimport linkage\", decl, decl);\n       else\n \twarning (\"%J'%D' redeclared without dllimport attribute \"\n \t\t \"after being referenced with dllimport linkage\", decl, decl);\n-\n-      XEXP (DECL_RTL (decl), 0) = newrtl;\n-\n-      DECL_NON_ADDR_CONST_P (decl) = 0;\n-\n-      /* We previously set TREE_PUBLIC and DECL_EXTERNAL.\n-\t We leave these alone for now.  */\n     }\n }\n "}]}