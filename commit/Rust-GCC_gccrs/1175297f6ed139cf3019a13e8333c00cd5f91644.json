{"sha": "1175297f6ed139cf3019a13e8333c00cd5f91644", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE3NTI5N2Y2ZWQxMzljZjMwMTlhMTNlODMzM2MwMGNkNWY5MTY0NA==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2015-01-16T18:26:57Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2015-01-16T18:26:57Z"}, "message": "[ARM/AArch64][testsuite] Add vld1_lane tests.\n\n\t* gcc.target/aarch64/advsimd-intrinsics/vld1_lane.c: New file.\n\nFrom-SVN: r219767", "tree": {"sha": "beda2c25824a62ed36fb6066806cae96261a8928", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/beda2c25824a62ed36fb6066806cae96261a8928"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1175297f6ed139cf3019a13e8333c00cd5f91644", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1175297f6ed139cf3019a13e8333c00cd5f91644", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1175297f6ed139cf3019a13e8333c00cd5f91644", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1175297f6ed139cf3019a13e8333c00cd5f91644/comments", "author": null, "committer": null, "parents": [{"sha": "68e2914e6a4e2ba2b3fd00551552073519921bee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68e2914e6a4e2ba2b3fd00551552073519921bee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68e2914e6a4e2ba2b3fd00551552073519921bee"}], "stats": {"total": 127, "additions": 127, "deletions": 0}, "files": [{"sha": "41ad87e0954cd5c8857157c64ee49bbc20615f5c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1175297f6ed139cf3019a13e8333c00cd5f91644/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1175297f6ed139cf3019a13e8333c00cd5f91644/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1175297f6ed139cf3019a13e8333c00cd5f91644", "patch": "@@ -3,6 +3,10 @@\n \tPR c++/62134\n \t* g++.dg/cpp0x/alias-decl-46.C: New.\n \n+2015-01-16  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld1_lane.c: New file.\n+\n 2015-01-16  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/arm-neon-ref.h (CHECK):"}, {"sha": "d5c5d22a8ce80cd7e4e6e46750b6c5297845f366", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld1_lane.c", "status": "added", "additions": 123, "deletions": 0, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1175297f6ed139cf3019a13e8333c00cd5f91644/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld1_lane.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1175297f6ed139cf3019a13e8333c00cd5f91644/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld1_lane.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld1_lane.c?ref=1175297f6ed139cf3019a13e8333c00cd5f91644", "patch": "@@ -0,0 +1,123 @@\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,int,8,8) [] = { 0xaa, 0xaa, 0xaa, 0xaa,\n+\t\t\t\t       0xaa, 0xaa, 0xf0, 0xaa };\n+VECT_VAR_DECL(expected,int,16,4) [] = { 0xaaaa, 0xaaaa, 0xaaaa, 0xfff0 };\n+VECT_VAR_DECL(expected,int,32,2) [] = { 0xaaaaaaaa, 0xfffffff0 };\n+VECT_VAR_DECL(expected,int,64,1) [] = { 0xfffffffffffffff0 };\n+VECT_VAR_DECL(expected,uint,8,8) [] = { 0xaa, 0xaa, 0xaa, 0xaa,\n+\t\t\t\t\t0xaa, 0xaa, 0xaa, 0xf0 };\n+VECT_VAR_DECL(expected,uint,16,4) [] = { 0xaaaa, 0xaaaa, 0xaaaa, 0xfff0 };\n+VECT_VAR_DECL(expected,uint,32,2) [] = { 0xaaaaaaaa, 0xfffffff0 };\n+VECT_VAR_DECL(expected,uint,64,1) [] = { 0xfffffffffffffff0 };\n+VECT_VAR_DECL(expected,poly,8,8) [] = { 0xaa, 0xaa, 0xaa, 0xaa,\n+\t\t\t\t\t0xaa, 0xaa, 0xaa, 0xf0 };\n+VECT_VAR_DECL(expected,poly,16,4) [] = { 0xaaaa, 0xaaaa, 0xaaaa, 0xfff0 };\n+VECT_VAR_DECL(expected,hfloat,32,2) [] = { 0xaaaaaaaa, 0xc1800000 };\n+VECT_VAR_DECL(expected,int,8,16) [] = { 0xaa, 0xaa, 0xaa, 0xaa,\n+\t\t\t\t\t0xaa, 0xaa, 0xaa, 0xaa,\n+\t\t\t\t\t0xaa, 0xaa, 0xaa, 0xaa,\n+\t\t\t\t\t0xaa, 0xaa, 0xaa, 0xf0 };\n+VECT_VAR_DECL(expected,int,16,8) [] = { 0xaaaa, 0xaaaa, 0xaaaa, 0xaaaa,\n+\t\t\t\t\t0xaaaa, 0xfff0, 0xaaaa, 0xaaaa };\n+VECT_VAR_DECL(expected,int,32,4) [] = { 0xaaaaaaaa, 0xaaaaaaaa,\n+\t\t\t\t\t0xfffffff0, 0xaaaaaaaa };\n+VECT_VAR_DECL(expected,int,64,2) [] = { 0xaaaaaaaaaaaaaaaa,\n+\t\t\t\t\t0xfffffffffffffff0 };\n+VECT_VAR_DECL(expected,uint,8,16) [] = { 0xaa, 0xaa, 0xaa, 0xaa,\n+\t\t\t\t\t 0xaa, 0xaa, 0xaa, 0xaa,\n+\t\t\t\t\t 0xaa, 0xaa, 0xaa, 0xaa,\n+\t\t\t\t\t 0xf0, 0xaa, 0xaa, 0xaa };\n+VECT_VAR_DECL(expected,uint,16,8) [] = { 0xaaaa, 0xaaaa, 0xaaaa, 0xaaaa,\n+\t\t\t\t\t 0xaaaa, 0xaaaa, 0xfff0, 0xaaaa };\n+VECT_VAR_DECL(expected,uint,32,4) [] = { 0xaaaaaaaa, 0xaaaaaaaa,\n+\t\t\t\t\t 0xfffffff0, 0xaaaaaaaa };\n+VECT_VAR_DECL(expected,uint,64,2) [] = { 0xfffffffffffffff0,\n+\t\t\t\t\t 0xaaaaaaaaaaaaaaaa };\n+VECT_VAR_DECL(expected,poly,8,16) [] = { 0xaa, 0xaa, 0xaa, 0xaa,\n+\t\t\t\t\t 0xaa, 0xaa, 0xaa, 0xaa,\n+\t\t\t\t\t 0xaa, 0xaa, 0xaa, 0xaa,\n+\t\t\t\t\t 0xf0, 0xaa, 0xaa, 0xaa };\n+VECT_VAR_DECL(expected,poly,16,8) [] = { 0xaaaa, 0xaaaa, 0xaaaa, 0xaaaa,\n+\t\t\t\t\t 0xaaaa, 0xaaaa, 0xfff0, 0xaaaa };\n+VECT_VAR_DECL(expected,hfloat,32,4) [] = { 0xaaaaaaaa, 0xaaaaaaaa,\n+\t\t\t\t\t   0xc1800000, 0xaaaaaaaa };\n+\n+#define TEST_MSG \"VLD1_LANE/VLD1_LANEQ\"\n+void exec_vld1_lane (void)\n+{\n+  /* Fill vector_src with 0xAA, then load 1 lane.  */\n+#define TEST_VLD1_LANE(Q, T1, T2, W, N, L)\t\t\t\t\\\n+  memset (VECT_VAR(buffer_src, T1, W, N), 0xAA, W/8*N);\t\t\t\\\n+  VECT_VAR(vector_src, T1, W, N) =\t\t\t\t\t\\\n+    vld1##Q##_##T2##W(VECT_VAR(buffer_src, T1, W, N));\t\t\t\\\n+  VECT_VAR(vector, T1, W, N) =\t\t\t\t\t\t\\\n+    vld1##Q##_lane_##T2##W(VECT_VAR(buffer, T1, W, N),\t\t\t\\\n+\t\t\t   VECT_VAR(vector_src, T1, W, N), L);\t\t\\\n+  vst1##Q##_##T2##W(VECT_VAR(result, T1, W, N), VECT_VAR(vector, T1, W, N))\n+\n+  DECL_VARIABLE_ALL_VARIANTS(vector);\n+  DECL_VARIABLE_ALL_VARIANTS(vector_src);\n+\n+  ARRAY(buffer_src, int, 8, 8);\n+  ARRAY(buffer_src, int, 16, 4);\n+  ARRAY(buffer_src, int, 32, 2);\n+  ARRAY(buffer_src, int, 64, 1);\n+  ARRAY(buffer_src, uint, 8, 8);\n+  ARRAY(buffer_src, uint, 16, 4);\n+  ARRAY(buffer_src, uint, 32, 2);\n+  ARRAY(buffer_src, uint, 64, 1);\n+  ARRAY(buffer_src, poly, 8, 8);\n+  ARRAY(buffer_src, poly, 16, 4);\n+  ARRAY(buffer_src, float, 32, 2);\n+\n+  ARRAY(buffer_src, int, 8, 16);\n+  ARRAY(buffer_src, int, 16, 8);\n+  ARRAY(buffer_src, int, 32, 4);\n+  ARRAY(buffer_src, int, 64, 2);\n+  ARRAY(buffer_src, uint, 8, 16);\n+  ARRAY(buffer_src, uint, 16, 8);\n+  ARRAY(buffer_src, uint, 32, 4);\n+  ARRAY(buffer_src, uint, 64, 2);\n+  ARRAY(buffer_src, poly, 8, 16);\n+  ARRAY(buffer_src, poly, 16, 8);\n+  ARRAY(buffer_src, float, 32, 4);\n+\n+  clean_results ();\n+\n+  /* Choose lane arbitrarily.  */\n+  TEST_VLD1_LANE(, int, s, 8, 8, 6);\n+  TEST_VLD1_LANE(, int, s, 16, 4, 3);\n+  TEST_VLD1_LANE(, int, s, 32, 2, 1);\n+  TEST_VLD1_LANE(, int, s, 64, 1, 0);\n+  TEST_VLD1_LANE(, uint, u, 8, 8, 7);\n+  TEST_VLD1_LANE(, uint, u, 16, 4, 3);\n+  TEST_VLD1_LANE(, uint, u, 32, 2, 1);\n+  TEST_VLD1_LANE(, uint, u, 64, 1, 0);\n+  TEST_VLD1_LANE(, poly, p, 8, 8, 7);\n+  TEST_VLD1_LANE(, poly, p, 16, 4, 3);\n+  TEST_VLD1_LANE(, float, f, 32, 2, 1);\n+\n+  TEST_VLD1_LANE(q, int, s, 8, 16, 15);\n+  TEST_VLD1_LANE(q, int, s, 16, 8, 5);\n+  TEST_VLD1_LANE(q, int, s, 32, 4, 2);\n+  TEST_VLD1_LANE(q, int, s, 64, 2, 1);\n+  TEST_VLD1_LANE(q, uint, u, 8, 16, 12);\n+  TEST_VLD1_LANE(q, uint, u, 16, 8, 6);\n+  TEST_VLD1_LANE(q, uint, u, 32, 4, 2);\n+  TEST_VLD1_LANE(q, uint, u, 64, 2, 0);\n+  TEST_VLD1_LANE(q, poly, p, 8, 16, 12);\n+  TEST_VLD1_LANE(q, poly, p, 16, 8, 6);\n+  TEST_VLD1_LANE(q, float, f, 32, 4, 2);\n+\n+  CHECK_RESULTS (TEST_MSG, \"\");\n+}\n+\n+int main (void)\n+{\n+  exec_vld1_lane ();\n+  return 0;\n+}"}]}