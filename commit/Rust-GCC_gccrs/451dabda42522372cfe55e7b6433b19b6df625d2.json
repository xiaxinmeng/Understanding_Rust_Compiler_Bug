{"sha": "451dabda42522372cfe55e7b6433b19b6df625d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDUxZGFiZGE0MjUyMjM3MmNmZTU1ZTdiNjQzM2IxOWI2ZGY2MjVkMg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-04-08T12:35:26Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-04-08T12:35:26Z"}, "message": "gimple-pretty-print.c (debug_gimple_stmt): Do not print extra newline.\n\n2013-04-08  Richard Biener  <rguenther@suse.de>\n\n\t* gimple-pretty-print.c (debug_gimple_stmt): Do not print\n\textra newline.\n\t* tree-vect-loop.c (vect_determine_vectorization_factor): Dump\n\tdetermined vector type.\n\t(vect_analyze_data_refs): Likewise.\n\t(vect_get_new_vect_var): Adjust.\n\t(vect_create_destination_var): Preserve SSA name versions.\n\t* tree-vect-stmts.c (get_vectype_for_scalar_type_and_size): Do\n\tnot dump anything here.\n\n\t* gfortran.dg/vect/fast-math-mgrid-resid.f: Adjust.\n\nFrom-SVN: r197578", "tree": {"sha": "b4ce6ba90777b215dbdb2ce921d49e0d214ccb4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4ce6ba90777b215dbdb2ce921d49e0d214ccb4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/451dabda42522372cfe55e7b6433b19b6df625d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/451dabda42522372cfe55e7b6433b19b6df625d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/451dabda42522372cfe55e7b6433b19b6df625d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/451dabda42522372cfe55e7b6433b19b6df625d2/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3b088b475ae0a65236db759996dce4406b6abb70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b088b475ae0a65236db759996dce4406b6abb70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b088b475ae0a65236db759996dce4406b6abb70"}], "stats": {"total": 78, "additions": 47, "deletions": 31}, "files": [{"sha": "324c56b26650567e32746d62d8543d2319948e95", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451dabda42522372cfe55e7b6433b19b6df625d2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451dabda42522372cfe55e7b6433b19b6df625d2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=451dabda42522372cfe55e7b6433b19b6df625d2", "patch": "@@ -1,3 +1,15 @@\n+2013-04-08  Richard Biener  <rguenther@suse.de>\n+\n+\t* gimple-pretty-print.c (debug_gimple_stmt): Do not print\n+\textra newline.\n+\t* tree-vect-loop.c (vect_determine_vectorization_factor): Dump\n+\tdetermined vector type.\n+\t(vect_analyze_data_refs): Likewise.\n+\t(vect_get_new_vect_var): Adjust.\n+\t(vect_create_destination_var): Preserve SSA name versions.\n+\t* tree-vect-stmts.c (get_vectype_for_scalar_type_and_size): Do\n+\tnot dump anything here.\n+\n 2013-04-08  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \t* config/epiphany/epiphany.h (struct GTY (()) machine_function):"}, {"sha": "ddb086c57150141d838ea17fdf0afd4f922bf581", "filename": "gcc/gimple-pretty-print.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451dabda42522372cfe55e7b6433b19b6df625d2/gcc%2Fgimple-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451dabda42522372cfe55e7b6433b19b6df625d2/gcc%2Fgimple-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-pretty-print.c?ref=451dabda42522372cfe55e7b6433b19b6df625d2", "patch": "@@ -84,7 +84,6 @@ DEBUG_FUNCTION void\n debug_gimple_stmt (gimple gs)\n {\n   print_gimple_stmt (stderr, gs, 0, TDF_VOPS|TDF_MEMSYMS);\n-  fprintf (stderr, \"\\n\");\n }\n \n "}, {"sha": "8893979f4e4bc0394672f7e7c144e9e826eaa609", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451dabda42522372cfe55e7b6433b19b6df625d2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451dabda42522372cfe55e7b6433b19b6df625d2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=451dabda42522372cfe55e7b6433b19b6df625d2", "patch": "@@ -1,3 +1,7 @@\n+2013-04-08  Richard Biener  <rguenther@suse.de>\n+\n+\t* gfortran.dg/vect/fast-math-mgrid-resid.f: Adjust.\n+\n 2013-04-08  Richard Biener  <rguenther@suse.de>\n \n \t* gfortran.dg/vect/fast-math-pr37021.f90: Adjust."}, {"sha": "978b871371718a4d8234eba51ce41dbec0b0db67", "filename": "gcc/testsuite/gfortran.dg/vect/fast-math-mgrid-resid.f", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451dabda42522372cfe55e7b6433b19b6df625d2/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Ffast-math-mgrid-resid.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451dabda42522372cfe55e7b6433b19b6df625d2/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Ffast-math-mgrid-resid.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Ffast-math-mgrid-resid.f?ref=451dabda42522372cfe55e7b6433b19b6df625d2", "patch": "@@ -41,6 +41,6 @@ SUBROUTINE RESID(U,V,R,N,A)\n ! we want to check that predictive commoning did something on the\n ! vectorized loop, which means we have to have exactly 13 vector\n ! additions.\n-! { dg-final { scan-tree-dump-times \"vect_var\\[^\\\\n\\]*\\\\+ \" 13 \"optimized\" } }\n+! { dg-final { scan-tree-dump-times \"vect_\\[^\\\\n\\]*\\\\+ \" 13 \"optimized\" } }\n ! { dg-final { cleanup-tree-dump \"vect\" } }\n ! { dg-final { cleanup-tree-dump \"optimized\" } }"}, {"sha": "14593b5db3ade7e0b4ca7078fcbdcbee75736101", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 23, "deletions": 8, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451dabda42522372cfe55e7b6433b19b6df625d2/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451dabda42522372cfe55e7b6433b19b6df625d2/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=451dabda42522372cfe55e7b6433b19b6df625d2", "patch": "@@ -3206,6 +3206,17 @@ vect_analyze_data_refs (loop_vec_info loop_vinfo,\n \t    }\n \t  return false;\n         }\n+      else\n+\t{\n+\t  if (dump_enabled_p ())\n+\t    {\n+\t      dump_printf_loc (MSG_NOTE, vect_location,\n+\t\t\t       \"got vectype for stmt: \");\n+\t      dump_gimple_stmt (MSG_NOTE, TDF_SLIM, stmt, 0);\n+\t      dump_generic_expr (MSG_NOTE, TDF_SLIM,\n+\t\t\t\t STMT_VINFO_VECTYPE (stmt_info));\n+\t    }\n+\t}\n \n       /* Adjust the minimal vectorization factor according to the\n \t vector type.  */\n@@ -3293,21 +3304,21 @@ vect_get_new_vect_var (tree type, enum vect_var_kind var_kind, const char *name)\n   switch (var_kind)\n   {\n   case vect_simple_var:\n-    prefix = \"vect_\";\n+    prefix = \"vect\";\n     break;\n   case vect_scalar_var:\n-    prefix = \"stmp_\";\n+    prefix = \"stmp\";\n     break;\n   case vect_pointer_var:\n-    prefix = \"vect_p\";\n+    prefix = \"vectp\";\n     break;\n   default:\n     gcc_unreachable ();\n   }\n \n   if (name)\n     {\n-      char* tmp = concat (prefix, name, NULL);\n+      char* tmp = concat (prefix, \"_\", name, NULL);\n       new_vect_var = create_tmp_reg (type, tmp);\n       free (tmp);\n     }\n@@ -3836,7 +3847,8 @@ tree\n vect_create_destination_var (tree scalar_dest, tree vectype)\n {\n   tree vec_dest;\n-  const char *new_name;\n+  const char *name;\n+  char *new_name;\n   tree type;\n   enum vect_var_kind kind;\n \n@@ -3845,10 +3857,13 @@ vect_create_destination_var (tree scalar_dest, tree vectype)\n \n   gcc_assert (TREE_CODE (scalar_dest) == SSA_NAME);\n \n-  new_name = get_name (scalar_dest);\n-  if (!new_name)\n-    new_name = \"var_\";\n+  name = get_name (scalar_dest);\n+  if (name)\n+    asprintf (&new_name, \"%s_%u\", name, SSA_NAME_VERSION (scalar_dest));\n+  else\n+    asprintf (&new_name, \"_%u\", SSA_NAME_VERSION (scalar_dest));\n   vec_dest = vect_get_new_vect_var (type, kind, new_name);\n+  free (new_name);\n \n   return vec_dest;\n }"}, {"sha": "6874b65a67daef2bf5f3e39d556044eb3c961744", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451dabda42522372cfe55e7b6433b19b6df625d2/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451dabda42522372cfe55e7b6433b19b6df625d2/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=451dabda42522372cfe55e7b6433b19b6df625d2", "patch": "@@ -409,6 +409,12 @@ vect_determine_vectorization_factor (loop_vec_info loop_vinfo)\n \t\t}\n \n \t      STMT_VINFO_VECTYPE (stmt_info) = vectype;\n+\n+\t      if (dump_enabled_p ())\n+\t\t{\n+\t\t  dump_printf_loc (MSG_NOTE, vect_location, \"vectype: \");\n+\t\t  dump_generic_expr (MSG_NOTE, TDF_SLIM, vectype);\n+\t\t}\n             }\n \n \t  /* The vectorization factor is according to the smallest"}, {"sha": "3590e3960d2a7da74ce98fc6f0691b3d7d3b5bf2", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 1, "deletions": 21, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451dabda42522372cfe55e7b6433b19b6df625d2/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451dabda42522372cfe55e7b6433b19b6df625d2/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=451dabda42522372cfe55e7b6433b19b6df625d2", "patch": "@@ -6094,30 +6094,10 @@ get_vectype_for_scalar_type_and_size (tree scalar_type, unsigned size)\n     return NULL_TREE;\n \n   vectype = build_vector_type (scalar_type, nunits);\n-  if (dump_enabled_p ())\n-    {\n-      dump_printf_loc (MSG_NOTE, vect_location,\n-                       \"get vectype with %d units of type \", nunits);\n-      dump_generic_expr (MSG_NOTE, TDF_SLIM, scalar_type);\n-    }\n-\n-  if (!vectype)\n-    return NULL_TREE;\n-\n-  if (dump_enabled_p ())\n-    {\n-      dump_printf_loc (MSG_NOTE, vect_location, \"vectype: \");\n-      dump_generic_expr (MSG_NOTE, TDF_SLIM, vectype);\n-    }\n \n   if (!VECTOR_MODE_P (TYPE_MODE (vectype))\n       && !INTEGRAL_MODE_P (TYPE_MODE (vectype)))\n-    {\n-      if (dump_enabled_p ())\n-        dump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n-                         \"mode not supported by target.\");\n-      return NULL_TREE;\n-    }\n+    return NULL_TREE;\n \n   return vectype;\n }"}]}