{"sha": "bd83e6142dc74cf26dca197f913bc38fe7b16b3a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ4M2U2MTQyZGM3NGNmMjZkY2ExOTdmOTEzYmMzOGZlN2IxNmIzYQ==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2005-06-22T15:34:02Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2005-06-22T15:34:02Z"}, "message": "re PR fortran/21034 ([4.0 only] internal compiler error: in gfc_trans_auto_array_allocation, at fortran/trans-array.c:3036)\n\n2005-06-22 Paul Brook  <paul@codesourcery.com>\n\n\tPR fortran/21034\n\t* symbol.c (gfc_is_var_automatic): New function.\n\t(save_symbol): Use it.\ntestsuite/\n\t* gfortran.dg/auto_save_1.f90: New test.\n\nFrom-SVN: r101250", "tree": {"sha": "c40015daaa3be3a17b5b0f68506e33222a524d9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c40015daaa3be3a17b5b0f68506e33222a524d9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd83e6142dc74cf26dca197f913bc38fe7b16b3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd83e6142dc74cf26dca197f913bc38fe7b16b3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd83e6142dc74cf26dca197f913bc38fe7b16b3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd83e6142dc74cf26dca197f913bc38fe7b16b3a/comments", "author": null, "committer": null, "parents": [{"sha": "aacb35127936fd17dd160595f59fca6cd2b81b0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aacb35127936fd17dd160595f59fca6cd2b81b0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aacb35127936fd17dd160595f59fca6cd2b81b0e"}], "stats": {"total": 52, "additions": 51, "deletions": 1}, "files": [{"sha": "4badf66df53d8840138d9cb750c649ec98a7e175", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd83e6142dc74cf26dca197f913bc38fe7b16b3a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd83e6142dc74cf26dca197f913bc38fe7b16b3a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=bd83e6142dc74cf26dca197f913bc38fe7b16b3a", "patch": "@@ -1,3 +1,9 @@\n+2005-06-22 Paul Brook  <paul@codesourcery.com>\n+\n+\tPR fortran/21034\n+\t* symbol.c (gfc_is_var_automatic): New function.\n+\t(save_symbol): Use it.\n+\n 2005-06-21  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n \t    Paul Thomas  <pault@gcc.gnu.org>\n "}, {"sha": "f91b72de1aaf55ab0159cc2b24f8ca1b89ac4de7", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd83e6142dc74cf26dca197f913bc38fe7b16b3a/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd83e6142dc74cf26dca197f913bc38fe7b16b3a/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=bd83e6142dc74cf26dca197f913bc38fe7b16b3a", "patch": "@@ -2331,6 +2331,25 @@ gfc_traverse_ns (gfc_namespace * ns, void (*func) (gfc_symbol *))\n }\n \n \n+/* Return TRUE if the symbol is an automatic variable.  */\n+static bool\n+gfc_is_var_automatic (gfc_symbol * sym)\n+{\n+  /* Pointer and allocatable variables are never automatic.  */\n+  if (sym->attr.pointer || sym->attr.allocatable)\n+    return false;\n+  /* Check for arrays with non-constant size.  */\n+  if (sym->attr.dimension && sym->as\n+      && !gfc_is_compile_time_shape (sym->as))\n+    return true;\n+  /* Check for non-constant length character vairables.  */\n+  if (sym->ts.type == BT_CHARACTER\n+      && sym->ts.cl\n+      && gfc_is_constant_expr (sym->ts.cl->length))\n+    return true;\n+  return false;\n+}\n+\n /* Given a symbol, mark it as SAVEd if it is allowed.  */\n \n static void\n@@ -2344,7 +2363,9 @@ save_symbol (gfc_symbol * sym)\n       || sym->attr.dummy\n       || sym->attr.flavor != FL_VARIABLE)\n     return;\n-\n+  /* Automatic objects are not saved.  */\n+  if (gfc_is_var_automatic (sym))\n+    return;\n   gfc_add_save (&sym->attr, sym->name, &sym->declared_at);\n }\n "}, {"sha": "1e0c949acdf3c21bc8b58b2fb292e4172373f978", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd83e6142dc74cf26dca197f913bc38fe7b16b3a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd83e6142dc74cf26dca197f913bc38fe7b16b3a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bd83e6142dc74cf26dca197f913bc38fe7b16b3a", "patch": "@@ -1,3 +1,8 @@\n+2005-06-22 Paul Brook  <paul@codesourcery.com>\n+\n+\tPR fortran/21034\n+\t* gfortran.dg/auto_save_1.f90: New test.\n+\n 2005-06-22  Michael Matz  <matz@suse.de>\n \n \t* gcc.target/x86-64/abi: New directory."}, {"sha": "b4571d2ba844a471ba7f876678d7d84504eafa1f", "filename": "gcc/testsuite/gfortran.dg/auto_save_1.f90", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd83e6142dc74cf26dca197f913bc38fe7b16b3a/gcc%2Ftestsuite%2Fgfortran.dg%2Fauto_save_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd83e6142dc74cf26dca197f913bc38fe7b16b3a/gcc%2Ftestsuite%2Fgfortran.dg%2Fauto_save_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fauto_save_1.f90?ref=bd83e6142dc74cf26dca197f913bc38fe7b16b3a", "patch": "@@ -0,0 +1,18 @@\n+! { dg-do run }\n+! Check that automatic objects work properly in the presence of a save\n+! statement.\n+! PR21034\n+subroutine test(n)\n+  implicit none\n+  integer n\n+  real dte(n)\n+  character(len=n) :: s\n+  save\n+  dte = 0\n+  s = \"\"\n+end\n+\n+program prog\n+  call test(4)\n+  call test(10)\n+end program"}]}