{"sha": "24676f1215413e6934132bfc6a25f1c02c9eecca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ2NzZmMTIxNTQxM2U2OTM0MTMyYmZjNmEyNWYxYzAyYzllZWNjYQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2018-09-27T19:54:09Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2018-09-27T19:54:09Z"}, "message": "rs6000: Delete many HAVE_AS_* (PR87149)\n\nThis deletes most HAVE_AS_* that determine if the assembler supports\nsome ISA level (and also HAVE_AS_MFPGPR and HAVE_AS_DFP).\n\nThese are not useful: we will only generate an instruction that requires\nsome newer ISA if the user specifically asked for it (with -mcpu=, say).\nIf the assembler cannot handle that, it is fine if it gives an error.\n\nThey also hurt: it increases the number of possible situations that all\nneed handling and all need testing.  We do not handle all cases, and\nobviously do not test all either.\n\nThis patch removes:\n\nHAVE_AS_POPCNTB (power5,  2.02)\nHAVE_AS_FPRND   (power5+, 2.04)\nHAVE_AS_CMPB    (power6,  2.05)\nHAVE_AS_POPCNTD (power7,  2.06)\nHAVE_AS_POWER8  (power8,  2.07)\nHAVE_AS_POWER9  (power9,  3.0)\n\nHAVE_AS_DFP     (power6,  2.05, server)\nHAVE_AS_MFPGPR  (power6x but not later, not arch)\n\n\n\tPR target/87149\n\t* config.in (HAVE_AS_CMPB, HAVE_AS_DFP, HAVE_AS_FPRND, HAVE_AS_MFPGPR,\n\tHAVE_AS_POPCNTB, HAVE_AS_POPCNTD, HAVE_AS_POWER8, HAVE_AS_POWER9):\n\tDelete, always treat as true.\n\t* config/powerpcspe/powerpcspe.c (rs6000_option_override_internal):\n\tDitto.  Simplify remaining code.\n\t* config/powerpcspe/powerpcspe.h: Ditto.\n\t* config/rs6000/rs6000.c (rs6000_option_override_internal): Ditto.\n\tSimplify remaining code.\n\t(rs6000_expand_builtin): Ditto.\n\t* config/rs6000/rs6000.h: Ditto.\n\t* configure.ac: Ditto.\n\t* configure: Regenerate.\n\nFrom-SVN: r264675", "tree": {"sha": "3c7f7cf2f010f41b66c490e7fcf93591f5b07e4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c7f7cf2f010f41b66c490e7fcf93591f5b07e4a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24676f1215413e6934132bfc6a25f1c02c9eecca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24676f1215413e6934132bfc6a25f1c02c9eecca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24676f1215413e6934132bfc6a25f1c02c9eecca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24676f1215413e6934132bfc6a25f1c02c9eecca/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "88307040642311b32de4fb051a64ae2796e0f1dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88307040642311b32de4fb051a64ae2796e0f1dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88307040642311b32de4fb051a64ae2796e0f1dc"}], "stats": {"total": 853, "additions": 16, "deletions": 837}, "files": [{"sha": "95202587513f436e39979a87697dc89d068244df", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24676f1215413e6934132bfc6a25f1c02c9eecca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24676f1215413e6934132bfc6a25f1c02c9eecca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=24676f1215413e6934132bfc6a25f1c02c9eecca", "patch": "@@ -1,3 +1,19 @@\n+2018-09-27  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/87149\n+\t* config.in (HAVE_AS_CMPB, HAVE_AS_DFP, HAVE_AS_FPRND, HAVE_AS_MFPGPR,\n+\tHAVE_AS_POPCNTB, HAVE_AS_POPCNTD, HAVE_AS_POWER8, HAVE_AS_POWER9):\n+\tDelete, always treat as true.\n+\t* config/powerpcspe/powerpcspe.c (rs6000_option_override_internal):\n+\tDitto.  Simplify remaining code.\n+\t* config/powerpcspe/powerpcspe.h: Ditto.\n+\t* config/rs6000/rs6000.c (rs6000_option_override_internal): Ditto.\n+\tSimplify remaining code.\n+\t(rs6000_expand_builtin): Ditto.\n+\t* config/rs6000/rs6000.h: Ditto.\n+\t* configure.ac: Ditto.\n+\t* configure: Regenerate.\n+\n 2018-09-27  Martin Liska  <mliska@suse.cz>\n \n \t* coverage.c (get_coverage_counts): Revert the formatting"}, {"sha": "48dfd23e9d68e99089f0a6225d2e27200d14e379", "filename": "gcc/config.in", "status": "modified", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24676f1215413e6934132bfc6a25f1c02c9eecca/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24676f1215413e6934132bfc6a25f1c02c9eecca/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=24676f1215413e6934132bfc6a25f1c02c9eecca", "patch": "@@ -302,12 +302,6 @@\n #endif\n \n \n-/* Define if your assembler supports cmpb. */\n-#ifndef USED_FOR_TARGET\n-#undef HAVE_AS_CMPB\n-#endif\n-\n-\n /* Define to the level of your assembler's compressed debug section support.\n    */\n #ifndef USED_FOR_TARGET\n@@ -327,12 +321,6 @@\n #endif\n \n \n-/* Define if your assembler supports DFP instructions. */\n-#ifndef USED_FOR_TARGET\n-#undef HAVE_AS_DFP\n-#endif\n-\n-\n /* Define if your assembler supports .module. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_AS_DOT_MODULE\n@@ -382,12 +370,6 @@\n #endif\n \n \n-/* Define if your assembler supports fprnd. */\n-#ifndef USED_FOR_TARGET\n-#undef HAVE_AS_FPRND\n-#endif\n-\n-\n /* Define if your assembler supports the --gdwarf2 option. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_AS_GDWARF2_DEBUG_FLAG\n@@ -570,12 +552,6 @@\n #endif\n \n \n-/* Define if your assembler supports mffgpr and mftgpr. */\n-#ifndef USED_FOR_TARGET\n-#undef HAVE_AS_MFPGPR\n-#endif\n-\n-\n /* Define if your Mac OS X assembler supports the -mmacos-version-min option.\n    */\n #ifndef USED_FOR_TARGET\n@@ -607,30 +583,6 @@\n #endif\n \n \n-/* Define if your assembler supports popcntb field. */\n-#ifndef USED_FOR_TARGET\n-#undef HAVE_AS_POPCNTB\n-#endif\n-\n-\n-/* Define if your assembler supports POPCNTD instructions. */\n-#ifndef USED_FOR_TARGET\n-#undef HAVE_AS_POPCNTD\n-#endif\n-\n-\n-/* Define if your assembler supports POWER8 instructions. */\n-#ifndef USED_FOR_TARGET\n-#undef HAVE_AS_POWER8\n-#endif\n-\n-\n-/* Define if your assembler supports POWER9 instructions. */\n-#ifndef USED_FOR_TARGET\n-#undef HAVE_AS_POWER9\n-#endif\n-\n-\n /* Define if your assembler supports .ref */\n #ifndef USED_FOR_TARGET\n #undef HAVE_AS_REF"}, {"sha": "90170c35c8f146e3aa8aaa682ce879238db9d733", "filename": "gcc/config/powerpcspe/powerpcspe.c", "status": "modified", "additions": 0, "deletions": 61, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24676f1215413e6934132bfc6a25f1c02c9eecca/gcc%2Fconfig%2Fpowerpcspe%2Fpowerpcspe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24676f1215413e6934132bfc6a25f1c02c9eecca/gcc%2Fconfig%2Fpowerpcspe%2Fpowerpcspe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpowerpcspe%2Fpowerpcspe.c?ref=24676f1215413e6934132bfc6a25f1c02c9eecca", "patch": "@@ -4196,67 +4196,6 @@ rs6000_option_override_internal (bool global_init_p)\n \n   gcc_assert (cpu_index >= 0);\n \n-  if (have_cpu)\n-    {\n-#ifndef HAVE_AS_POWER9\n-      if (processor_target_table[rs6000_cpu_index].processor \n-\t  == PROCESSOR_POWER9)\n-\t{\n-\t  have_cpu = false;\n-\t  warning (0, \"will not generate power9 instructions because \"\n-\t\t   \"assembler lacks power9 support\");\n-\t}\n-#endif\n-#ifndef HAVE_AS_POWER8\n-      if (processor_target_table[rs6000_cpu_index].processor\n-\t  == PROCESSOR_POWER8)\n-\t{\n-\t  have_cpu = false;\n-\t  warning (0, \"will not generate power8 instructions because \"\n-\t\t   \"assembler lacks power8 support\");\n-\t}\n-#endif\n-#ifndef HAVE_AS_POPCNTD\n-      if (processor_target_table[rs6000_cpu_index].processor\n-\t  == PROCESSOR_POWER7)\n-\t{\n-\t  have_cpu = false;\n-\t  warning (0, \"will not generate power7 instructions because \"\n-\t\t   \"assembler lacks power7 support\");\n-\t}\n-#endif\n-#ifndef HAVE_AS_DFP\n-      if (processor_target_table[rs6000_cpu_index].processor\n-\t  == PROCESSOR_POWER6)\n-\t{\n-\t  have_cpu = false;\n-\t  warning (0, \"will not generate power6 instructions because \"\n-\t\t   \"assembler lacks power6 support\");\n-\t}\n-#endif\n-#ifndef HAVE_AS_POPCNTB\n-      if (processor_target_table[rs6000_cpu_index].processor\n-\t  == PROCESSOR_POWER5)\n-\t{\n-\t  have_cpu = false;\n-\t  warning (0, \"will not generate power5 instructions because \"\n-\t\t   \"assembler lacks power5 support\");\n-\t}\n-#endif\n-\n-      if (!have_cpu)\n-\t{\n-\t  /* PowerPC 64-bit LE requires at least ISA 2.07.  */\n-\t  const char *default_cpu = (!TARGET_POWERPC64\n-\t\t\t\t     ? \"powerpc\"\n-\t\t\t\t     : (BYTES_BIG_ENDIAN\n-\t\t\t\t\t? \"powerpc64\"\n-\t\t\t\t\t: \"powerpc64le\"));\n-\n-\t  rs6000_cpu_index = cpu_index = rs6000_cpu_name_lookup (default_cpu);\n-\t}\n-    }\n-\n   /* If we have a cpu, either through an explicit -mcpu=<xxx> or if the\n      compiler was configured with --with-cpu=<xxx>, replace all of the ISA bits\n      with those from the cpu, except for options that were explicitly set.  If"}, {"sha": "a30fe34dbc0f9e763d23f05d3944f4b0f242b6ed", "filename": "gcc/config/powerpcspe/powerpcspe.h", "status": "modified", "additions": 0, "deletions": 108, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24676f1215413e6934132bfc6a25f1c02c9eecca/gcc%2Fconfig%2Fpowerpcspe%2Fpowerpcspe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24676f1215413e6934132bfc6a25f1c02c9eecca/gcc%2Fconfig%2Fpowerpcspe%2Fpowerpcspe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpowerpcspe%2Fpowerpcspe.h?ref=24676f1215413e6934132bfc6a25f1c02c9eecca", "patch": "@@ -71,35 +71,11 @@\n #define TARGET_PAIRED_FLOAT 0\n #endif\n \n-#ifdef HAVE_AS_POPCNTB\n #define ASM_CPU_POWER5_SPEC \"-mpower5\"\n-#else\n-#define ASM_CPU_POWER5_SPEC \"-mpower4\"\n-#endif\n-\n-#ifdef HAVE_AS_DFP\n #define ASM_CPU_POWER6_SPEC \"-mpower6 -maltivec\"\n-#else\n-#define ASM_CPU_POWER6_SPEC \"-mpower4 -maltivec\"\n-#endif\n-\n-#ifdef HAVE_AS_POPCNTD\n #define ASM_CPU_POWER7_SPEC \"-mpower7\"\n-#else\n-#define ASM_CPU_POWER7_SPEC \"-mpower4 -maltivec\"\n-#endif\n-\n-#ifdef HAVE_AS_POWER8\n #define ASM_CPU_POWER8_SPEC \"-mpower8\"\n-#else\n-#define ASM_CPU_POWER8_SPEC ASM_CPU_POWER7_SPEC\n-#endif\n-\n-#ifdef HAVE_AS_POWER9\n #define ASM_CPU_POWER9_SPEC \"-mpower9\"\n-#else\n-#define ASM_CPU_POWER9_SPEC ASM_CPU_POWER8_SPEC\n-#endif\n \n #ifdef HAVE_AS_DCI\n #define ASM_CPU_476_SPEC \"-m476\"\n@@ -240,90 +216,6 @@ extern const char *host_detect_local_cpu (int argc, const char **argv);\n #define TARGET_MFCRF 0\n #endif\n \n-/* Define TARGET_POPCNTB if the target assembler does not support the\n-   popcount byte instruction.  */\n-\n-#ifndef HAVE_AS_POPCNTB\n-#undef  TARGET_POPCNTB\n-#define TARGET_POPCNTB 0\n-#endif\n-\n-/* Define TARGET_FPRND if the target assembler does not support the\n-   fp rounding instructions.  */\n-\n-#ifndef HAVE_AS_FPRND\n-#undef  TARGET_FPRND\n-#define TARGET_FPRND 0\n-#endif\n-\n-/* Define TARGET_CMPB if the target assembler does not support the\n-   cmpb instruction.  */\n-\n-#ifndef HAVE_AS_CMPB\n-#undef  TARGET_CMPB\n-#define TARGET_CMPB 0\n-#endif\n-\n-/* Define TARGET_MFPGPR if the target assembler does not support the\n-   mffpr and mftgpr instructions. */\n-\n-#ifndef HAVE_AS_MFPGPR\n-#undef  TARGET_MFPGPR\n-#define TARGET_MFPGPR 0\n-#endif\n-\n-/* Define TARGET_DFP if the target assembler does not support decimal\n-   floating point instructions.  */\n-#ifndef HAVE_AS_DFP\n-#undef  TARGET_DFP\n-#define TARGET_DFP 0\n-#endif\n-\n-/* Define TARGET_POPCNTD if the target assembler does not support the\n-   popcount word and double word instructions.  */\n-\n-#ifndef HAVE_AS_POPCNTD\n-#undef  TARGET_POPCNTD\n-#define TARGET_POPCNTD 0\n-#endif\n-\n-/* Define the ISA 2.07 flags as 0 if the target assembler does not support the\n-   waitasecond instruction.  Allow -mpower8-fusion, since it does not add new\n-   instructions.  */\n-\n-#ifndef HAVE_AS_POWER8\n-#undef  TARGET_DIRECT_MOVE\n-#undef  TARGET_CRYPTO\n-#undef  TARGET_HTM\n-#undef  TARGET_P8_VECTOR\n-#define TARGET_DIRECT_MOVE 0\n-#define TARGET_CRYPTO 0\n-#define TARGET_HTM 0\n-#define TARGET_P8_VECTOR 0\n-#endif\n-\n-/* Define the ISA 3.0 flags as 0 if the target assembler does not support\n-   Power9 instructions.  Allow -mpower9-fusion, since it does not add new\n-   instructions.  Allow -misel, since it predates ISA 3.0 and does\n-   not require any Power9 features.  */\n-\n-#ifndef HAVE_AS_POWER9\n-#undef  TARGET_FLOAT128_HW\n-#undef  TARGET_MODULO\n-#undef  TARGET_P9_VECTOR\n-#undef  TARGET_P9_MINMAX\n-#undef  TARGET_P9_DFORM_SCALAR\n-#undef  TARGET_P9_DFORM_VECTOR\n-#undef  TARGET_P9_MISC\n-#define TARGET_FLOAT128_HW 0\n-#define TARGET_MODULO 0\n-#define TARGET_P9_VECTOR 0\n-#define TARGET_P9_MINMAX 0\n-#define TARGET_P9_DFORM_SCALAR 0\n-#define TARGET_P9_DFORM_VECTOR 0\n-#define TARGET_P9_MISC 0\n-#endif\n-\n /* Define TARGET_LWSYNC_INSTRUCTION if the assembler knows about lwsync.  If\n    not, generate the lwsync code as an integer constant.  */\n #ifdef HAVE_AS_LWSYNC"}, {"sha": "e99d3db0462cbc6d19467321b34c9079545605dd", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24676f1215413e6934132bfc6a25f1c02c9eecca/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24676f1215413e6934132bfc6a25f1c02c9eecca/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=24676f1215413e6934132bfc6a25f1c02c9eecca", "patch": "@@ -3871,48 +3871,6 @@ rs6000_option_override_internal (bool global_init_p)\n   else if (OPTION_TARGET_CPU_DEFAULT)\n     cpu_index = rs6000_cpu_name_lookup (OPTION_TARGET_CPU_DEFAULT);\n \n-  if (cpu_index >= 0)\n-    {\n-      const char *unavailable_cpu = NULL;\n-      switch (processor_target_table[cpu_index].processor)\n-\t{\n-#ifndef HAVE_AS_POWER9\n-\tcase PROCESSOR_POWER9:\n-\t  unavailable_cpu = \"power9\";\n-\t  break;\n-#endif\n-#ifndef HAVE_AS_POWER8\n-\tcase PROCESSOR_POWER8:\n-\t  unavailable_cpu = \"power8\";\n-\t  break;\n-#endif\n-#ifndef HAVE_AS_POPCNTD\n-\tcase PROCESSOR_POWER7:\n-\t  unavailable_cpu = \"power7\";\n-\t  break;\n-#endif\n-#ifndef HAVE_AS_DFP\n-\tcase PROCESSOR_POWER6:\n-\t  unavailable_cpu = \"power6\";\n-\t  break;\n-#endif\n-#ifndef HAVE_AS_POPCNTB\n-\tcase PROCESSOR_POWER5:\n-\t  unavailable_cpu = \"power5\";\n-\t  break;\n-#endif\n-\tdefault:\n-\t  break;\n-\t}\n-      if (unavailable_cpu)\n-\t{\n-\t  cpu_index = -1;\n-\t  warning (0, \"will not generate %qs instructions because \"\n-\t\t   \"assembler lacks %qs support\", unavailable_cpu,\n-\t\t   unavailable_cpu);\n-\t}\n-    }\n-\n   /* If we have a cpu, either through an explicit -mcpu=<xxx> or if the\n      compiler was configured with --with-cpu=<xxx>, replace all of the ISA bits\n      with those from the cpu, except for options that were explicitly set.  If\n@@ -16018,7 +15976,6 @@ rs6000_expand_builtin (tree exp, rtx target, rtx subtarget ATTRIBUTE_UNUSED,\n      overload table in rs6000-c.c to switch between the two.  If we don't have\n      the proper assembler, don't do this switch because CODE_FOR_*kf* and\n      CODE_FOR_*tf* will be CODE_FOR_nothing.  */\n-#ifdef HAVE_AS_POWER9\n   if (FLOAT128_IEEE_P (TFmode))\n     switch (icode)\n       {\n@@ -16039,7 +15996,6 @@ rs6000_expand_builtin (tree exp, rtx target, rtx subtarget ATTRIBUTE_UNUSED,\n       case CODE_FOR_xsiexpqpf_kf:\ticode = CODE_FOR_xsiexpqpf_tf;\tbreak;\n       case CODE_FOR_xststdcqp_kf:\ticode = CODE_FOR_xststdcqp_tf;\tbreak;\n       }\n-#endif\n \n   if (TARGET_DEBUG_BUILTIN)\n     {"}, {"sha": "232d442864cea25c1092bb1999e2f5687bf4b323", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 0, "deletions": 104, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24676f1215413e6934132bfc6a25f1c02c9eecca/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24676f1215413e6934132bfc6a25f1c02c9eecca/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=24676f1215413e6934132bfc6a25f1c02c9eecca", "patch": "@@ -72,35 +72,11 @@\n #define PPC405_ERRATUM77 0\n #endif\n \n-#ifdef HAVE_AS_POPCNTB\n #define ASM_CPU_POWER5_SPEC \"-mpower5\"\n-#else\n-#define ASM_CPU_POWER5_SPEC \"-mpower4\"\n-#endif\n-\n-#ifdef HAVE_AS_DFP\n #define ASM_CPU_POWER6_SPEC \"-mpower6 -maltivec\"\n-#else\n-#define ASM_CPU_POWER6_SPEC \"-mpower4 -maltivec\"\n-#endif\n-\n-#ifdef HAVE_AS_POPCNTD\n #define ASM_CPU_POWER7_SPEC \"-mpower7\"\n-#else\n-#define ASM_CPU_POWER7_SPEC \"-mpower4 -maltivec\"\n-#endif\n-\n-#ifdef HAVE_AS_POWER8\n #define ASM_CPU_POWER8_SPEC \"-mpower8\"\n-#else\n-#define ASM_CPU_POWER8_SPEC ASM_CPU_POWER7_SPEC\n-#endif\n-\n-#ifdef HAVE_AS_POWER9\n #define ASM_CPU_POWER9_SPEC \"-mpower9\"\n-#else\n-#define ASM_CPU_POWER9_SPEC ASM_CPU_POWER8_SPEC\n-#endif\n \n #ifdef HAVE_AS_DCI\n #define ASM_CPU_476_SPEC \"-m476\"\n@@ -243,86 +219,6 @@ extern const char *host_detect_local_cpu (int argc, const char **argv);\n #define TARGET_MFCRF 0\n #endif\n \n-/* Define TARGET_POPCNTB if the target assembler does not support the\n-   popcount byte instruction.  */\n-\n-#ifndef HAVE_AS_POPCNTB\n-#undef  TARGET_POPCNTB\n-#define TARGET_POPCNTB 0\n-#endif\n-\n-/* Define TARGET_FPRND if the target assembler does not support the\n-   fp rounding instructions.  */\n-\n-#ifndef HAVE_AS_FPRND\n-#undef  TARGET_FPRND\n-#define TARGET_FPRND 0\n-#endif\n-\n-/* Define TARGET_CMPB if the target assembler does not support the\n-   cmpb instruction.  */\n-\n-#ifndef HAVE_AS_CMPB\n-#undef  TARGET_CMPB\n-#define TARGET_CMPB 0\n-#endif\n-\n-/* Define TARGET_MFPGPR if the target assembler does not support the\n-   mffpr and mftgpr instructions. */\n-\n-#ifndef HAVE_AS_MFPGPR\n-#undef  TARGET_MFPGPR\n-#define TARGET_MFPGPR 0\n-#endif\n-\n-/* Define TARGET_DFP if the target assembler does not support decimal\n-   floating point instructions.  */\n-#ifndef HAVE_AS_DFP\n-#undef  TARGET_DFP\n-#define TARGET_DFP 0\n-#endif\n-\n-/* Define TARGET_POPCNTD if the target assembler does not support the\n-   popcount word and double word instructions.  */\n-\n-#ifndef HAVE_AS_POPCNTD\n-#undef  TARGET_POPCNTD\n-#define TARGET_POPCNTD 0\n-#endif\n-\n-/* Define the ISA 2.07 flags as 0 if the target assembler does not support the\n-   waitasecond instruction.  Allow -mpower8-fusion, since it does not add new\n-   instructions.  */\n-\n-#ifndef HAVE_AS_POWER8\n-#undef  TARGET_DIRECT_MOVE\n-#undef  TARGET_CRYPTO\n-#undef  TARGET_HTM\n-#undef  TARGET_P8_VECTOR\n-#define TARGET_DIRECT_MOVE 0\n-#define TARGET_CRYPTO 0\n-#define TARGET_HTM 0\n-#define TARGET_P8_VECTOR 0\n-#endif\n-\n-/* Define the ISA 3.0 flags as 0 if the target assembler does not support\n-   Power9 instructions.  Allow -mpower9-fusion, since it does not add new\n-   instructions.  Allow -misel, since it predates ISA 3.0 and does\n-   not require any Power9 features.  */\n-\n-#ifndef HAVE_AS_POWER9\n-#undef  TARGET_FLOAT128_HW\n-#undef  TARGET_MODULO\n-#undef  TARGET_P9_VECTOR\n-#undef  TARGET_P9_MINMAX\n-#undef  TARGET_P9_MISC\n-#define TARGET_FLOAT128_HW 0\n-#define TARGET_MODULO 0\n-#define TARGET_P9_VECTOR 0\n-#define TARGET_P9_MINMAX 0\n-#define TARGET_P9_MISC 0\n-#endif\n-\n /* Define TARGET_LWSYNC_INSTRUCTION if the assembler knows about lwsync.  If\n    not, generate the lwsync code as an integer constant.  */\n #ifdef HAVE_AS_LWSYNC"}, {"sha": "f2d5a6f2f62e367cf428637b8d4f6392b26d60ad", "filename": "gcc/configure", "status": "modified", "additions": 0, "deletions": 356, "changes": 356, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24676f1215413e6934132bfc6a25f1c02c9eecca/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24676f1215413e6934132bfc6a25f1c02c9eecca/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=24676f1215413e6934132bfc6a25f1c02c9eecca", "patch": "@@ -26625,141 +26625,6 @@ if test $gcc_cv_as_powerpc_mfcrf = yes; then\n \n $as_echo \"#define HAVE_AS_MFCRF 1\" >>confdefs.h\n \n-fi\n-\n-\n-    case $target in\n-      *-*-aix*) conftest_s='\t.machine \"pwr5\"\n-\t.csect .text[PR]\n-\tpopcntb 3,3';;\n-      *) conftest_s='\t.machine power5\n-\t.text\n-\tpopcntb 3,3';;\n-    esac\n-\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for popcntb support\" >&5\n-$as_echo_n \"checking assembler for popcntb support... \" >&6; }\n-if test \"${gcc_cv_as_powerpc_popcntb+set}\" = set; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  gcc_cv_as_powerpc_popcntb=no\n-    if test $in_tree_gas = yes; then\n-    if test $gcc_cv_gas_vers -ge `expr \\( \\( 2 \\* 1000 \\) + 17 \\) \\* 1000 + 0`\n-  then gcc_cv_as_powerpc_popcntb=yes\n-fi\n-  elif test x$gcc_cv_as != x; then\n-    $as_echo \"$conftest_s\" > conftest.s\n-    if { ac_try='$gcc_cv_as $gcc_cv_as_flags  -o conftest.o conftest.s >&5'\n-  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n-  test $ac_status = 0; }; }\n-    then\n-\tgcc_cv_as_powerpc_popcntb=yes\n-    else\n-      echo \"configure: failed program was\" >&5\n-      cat conftest.s >&5\n-    fi\n-    rm -f conftest.o conftest.s\n-  fi\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_powerpc_popcntb\" >&5\n-$as_echo \"$gcc_cv_as_powerpc_popcntb\" >&6; }\n-if test $gcc_cv_as_powerpc_popcntb = yes; then\n-\n-$as_echo \"#define HAVE_AS_POPCNTB 1\" >>confdefs.h\n-\n-fi\n-\n-\n-    case $target in\n-      *-*-aix*) conftest_s='\t.machine \"pwr5x\"\n-\t.csect .text[PR]\n-\tfrin 1,1';;\n-      *) conftest_s='\t.machine power5\n-\t.text\n-\tfrin 1,1';;\n-    esac\n-\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for fp round support\" >&5\n-$as_echo_n \"checking assembler for fp round support... \" >&6; }\n-if test \"${gcc_cv_as_powerpc_fprnd+set}\" = set; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  gcc_cv_as_powerpc_fprnd=no\n-    if test $in_tree_gas = yes; then\n-    if test $gcc_cv_gas_vers -ge `expr \\( \\( 2 \\* 1000 \\) + 17 \\) \\* 1000 + 0`\n-  then gcc_cv_as_powerpc_fprnd=yes\n-fi\n-  elif test x$gcc_cv_as != x; then\n-    $as_echo \"$conftest_s\" > conftest.s\n-    if { ac_try='$gcc_cv_as $gcc_cv_as_flags  -o conftest.o conftest.s >&5'\n-  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n-  test $ac_status = 0; }; }\n-    then\n-\tgcc_cv_as_powerpc_fprnd=yes\n-    else\n-      echo \"configure: failed program was\" >&5\n-      cat conftest.s >&5\n-    fi\n-    rm -f conftest.o conftest.s\n-  fi\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_powerpc_fprnd\" >&5\n-$as_echo \"$gcc_cv_as_powerpc_fprnd\" >&6; }\n-if test $gcc_cv_as_powerpc_fprnd = yes; then\n-\n-$as_echo \"#define HAVE_AS_FPRND 1\" >>confdefs.h\n-\n-fi\n-\n-\n-    case $target in\n-      *-*-aix*) conftest_s='\t.machine \"pwr6\"\n-\t.csect .text[PR]\n-\tmffgpr 1,3';;\n-      *) conftest_s='\t.machine power6\n-\t.text\n-\tmffgpr 1,3';;\n-    esac\n-\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for move fp gpr support\" >&5\n-$as_echo_n \"checking assembler for move fp gpr support... \" >&6; }\n-if test \"${gcc_cv_as_powerpc_mfpgpr+set}\" = set; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  gcc_cv_as_powerpc_mfpgpr=no\n-    if test $in_tree_gas = yes; then\n-    if test $gcc_cv_gas_vers -ge `expr \\( \\( 2 \\* 1000 \\) + 19 \\) \\* 1000 + 2`\n-  then gcc_cv_as_powerpc_mfpgpr=yes\n-fi\n-  elif test x$gcc_cv_as != x; then\n-    $as_echo \"$conftest_s\" > conftest.s\n-    if { ac_try='$gcc_cv_as $gcc_cv_as_flags  -o conftest.o conftest.s >&5'\n-  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n-  test $ac_status = 0; }; }\n-    then\n-\tgcc_cv_as_powerpc_mfpgpr=yes\n-    else\n-      echo \"configure: failed program was\" >&5\n-      cat conftest.s >&5\n-    fi\n-    rm -f conftest.o conftest.s\n-  fi\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_powerpc_mfpgpr\" >&5\n-$as_echo \"$gcc_cv_as_powerpc_mfpgpr\" >&6; }\n-if test $gcc_cv_as_powerpc_mfpgpr = yes; then\n-\n-$as_echo \"#define HAVE_AS_MFPGPR 1\" >>confdefs.h\n-\n fi\n \n \n@@ -26809,96 +26674,6 @@ if test $gcc_cv_as_powerpc_rel16 = yes; then\n \n $as_echo \"#define HAVE_AS_REL16 1\" >>confdefs.h\n \n-fi\n-\n-\n-    case $target in\n-      *-*-aix*) conftest_s='\t.machine \"pwr6\"\n-\t.csect .text[PR]\n-\tcmpb 3,4,5';;\n-      *) conftest_s='\t.machine power6\n-\t.text\n-\tcmpb 3,4,5';;\n-    esac\n-\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for compare bytes support\" >&5\n-$as_echo_n \"checking assembler for compare bytes support... \" >&6; }\n-if test \"${gcc_cv_as_powerpc_cmpb+set}\" = set; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  gcc_cv_as_powerpc_cmpb=no\n-    if test $in_tree_gas = yes; then\n-    if test $gcc_cv_gas_vers -ge `expr \\( \\( 2 \\* 1000 \\) + 19 \\) \\* 1000 + 2`\n-  then gcc_cv_as_powerpc_cmpb=yes\n-fi\n-  elif test x$gcc_cv_as != x; then\n-    $as_echo \"$conftest_s\" > conftest.s\n-    if { ac_try='$gcc_cv_as $gcc_cv_as_flags -a32 -o conftest.o conftest.s >&5'\n-  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n-  test $ac_status = 0; }; }\n-    then\n-\tgcc_cv_as_powerpc_cmpb=yes\n-    else\n-      echo \"configure: failed program was\" >&5\n-      cat conftest.s >&5\n-    fi\n-    rm -f conftest.o conftest.s\n-  fi\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_powerpc_cmpb\" >&5\n-$as_echo \"$gcc_cv_as_powerpc_cmpb\" >&6; }\n-if test $gcc_cv_as_powerpc_cmpb = yes; then\n-\n-$as_echo \"#define HAVE_AS_CMPB 1\" >>confdefs.h\n-\n-fi\n-\n-\n-    case $target in\n-      *-*-aix*) conftest_s='\t.machine \"pwr6\"\n-\t.csect .text[PR]\n-\tdadd 1,2,3';;\n-      *) conftest_s='\t.machine power6\n-\t.text\n-\tdadd 1,2,3';;\n-    esac\n-\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for decimal float support\" >&5\n-$as_echo_n \"checking assembler for decimal float support... \" >&6; }\n-if test \"${gcc_cv_as_powerpc_dfp+set}\" = set; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  gcc_cv_as_powerpc_dfp=no\n-    if test $in_tree_gas = yes; then\n-    if test $gcc_cv_gas_vers -ge `expr \\( \\( 2 \\* 1000 \\) + 19 \\) \\* 1000 + 2`\n-  then gcc_cv_as_powerpc_dfp=yes\n-fi\n-  elif test x$gcc_cv_as != x; then\n-    $as_echo \"$conftest_s\" > conftest.s\n-    if { ac_try='$gcc_cv_as $gcc_cv_as_flags -a32 -o conftest.o conftest.s >&5'\n-  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n-  test $ac_status = 0; }; }\n-    then\n-\tgcc_cv_as_powerpc_dfp=yes\n-    else\n-      echo \"configure: failed program was\" >&5\n-      cat conftest.s >&5\n-    fi\n-    rm -f conftest.o conftest.s\n-  fi\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_powerpc_dfp\" >&5\n-$as_echo \"$gcc_cv_as_powerpc_dfp\" >&6; }\n-if test $gcc_cv_as_powerpc_dfp = yes; then\n-\n-$as_echo \"#define HAVE_AS_DFP 1\" >>confdefs.h\n-\n fi\n \n \n@@ -26944,137 +26719,6 @@ if test $gcc_cv_as_powerpc_vsx = yes; then\n \n $as_echo \"#define HAVE_AS_VSX 1\" >>confdefs.h\n \n-fi\n-\n-\n-    case $target in\n-      *-*-aix*) conftest_s='\t.machine \"pwr7\"\n-\t.csect .text[PR]\n-\tpopcntd 3,3';;\n-      *) conftest_s='\t.machine power7\n-\t.text\n-\tpopcntd 3,3';;\n-    esac\n-\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for popcntd support\" >&5\n-$as_echo_n \"checking assembler for popcntd support... \" >&6; }\n-if test \"${gcc_cv_as_powerpc_popcntd+set}\" = set; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  gcc_cv_as_powerpc_popcntd=no\n-    if test $in_tree_gas = yes; then\n-    if test $gcc_cv_gas_vers -ge `expr \\( \\( 2 \\* 1000 \\) + 19 \\) \\* 1000 + 2`\n-  then gcc_cv_as_powerpc_popcntd=yes\n-fi\n-  elif test x$gcc_cv_as != x; then\n-    $as_echo \"$conftest_s\" > conftest.s\n-    if { ac_try='$gcc_cv_as $gcc_cv_as_flags -a32 -o conftest.o conftest.s >&5'\n-  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n-  test $ac_status = 0; }; }\n-    then\n-\tgcc_cv_as_powerpc_popcntd=yes\n-    else\n-      echo \"configure: failed program was\" >&5\n-      cat conftest.s >&5\n-    fi\n-    rm -f conftest.o conftest.s\n-  fi\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_powerpc_popcntd\" >&5\n-$as_echo \"$gcc_cv_as_powerpc_popcntd\" >&6; }\n-if test $gcc_cv_as_powerpc_popcntd = yes; then\n-\n-$as_echo \"#define HAVE_AS_POPCNTD 1\" >>confdefs.h\n-\n-fi\n-\n-\n-    case $target in\n-      *-*-aix*) conftest_s='\t.machine \"pwr8\"\n-\t.csect .text[PR]';;\n-      *) conftest_s='\t.machine power8\n-\t.text';;\n-    esac\n-\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for power8 support\" >&5\n-$as_echo_n \"checking assembler for power8 support... \" >&6; }\n-if test \"${gcc_cv_as_powerpc_power8+set}\" = set; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  gcc_cv_as_powerpc_power8=no\n-    if test $in_tree_gas = yes; then\n-    if test $gcc_cv_gas_vers -ge `expr \\( \\( 2 \\* 1000 \\) + 19 \\) \\* 1000 + 2`\n-  then gcc_cv_as_powerpc_power8=yes\n-fi\n-  elif test x$gcc_cv_as != x; then\n-    $as_echo \"$conftest_s\" > conftest.s\n-    if { ac_try='$gcc_cv_as $gcc_cv_as_flags -a32 -o conftest.o conftest.s >&5'\n-  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n-  test $ac_status = 0; }; }\n-    then\n-\tgcc_cv_as_powerpc_power8=yes\n-    else\n-      echo \"configure: failed program was\" >&5\n-      cat conftest.s >&5\n-    fi\n-    rm -f conftest.o conftest.s\n-  fi\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_powerpc_power8\" >&5\n-$as_echo \"$gcc_cv_as_powerpc_power8\" >&6; }\n-if test $gcc_cv_as_powerpc_power8 = yes; then\n-\n-$as_echo \"#define HAVE_AS_POWER8 1\" >>confdefs.h\n-\n-fi\n-\n-\n-    case $target in\n-      *-*-aix*) conftest_s='\t.machine \"pwr9\"\n-\t.csect .text[PR]';;\n-      *) conftest_s='\t.machine power9\n-\t.text';;\n-    esac\n-\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for power9 support\" >&5\n-$as_echo_n \"checking assembler for power9 support... \" >&6; }\n-if test \"${gcc_cv_as_powerpc_power9+set}\" = set; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  gcc_cv_as_powerpc_power9=no\n-    if test $in_tree_gas = yes; then\n-    if test $gcc_cv_gas_vers -ge `expr \\( \\( 2 \\* 1000 \\) + 19 \\) \\* 1000 + 2`\n-  then gcc_cv_as_powerpc_power9=yes\n-fi\n-  elif test x$gcc_cv_as != x; then\n-    $as_echo \"$conftest_s\" > conftest.s\n-    if { ac_try='$gcc_cv_as $gcc_cv_as_flags -a32 -o conftest.o conftest.s >&5'\n-  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n-  test $ac_status = 0; }; }\n-    then\n-\tgcc_cv_as_powerpc_power9=yes\n-    else\n-      echo \"configure: failed program was\" >&5\n-      cat conftest.s >&5\n-    fi\n-    rm -f conftest.o conftest.s\n-  fi\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_powerpc_power9\" >&5\n-$as_echo \"$gcc_cv_as_powerpc_power9\" >&6; }\n-if test $gcc_cv_as_powerpc_power9 = yes; then\n-\n-$as_echo \"#define HAVE_AS_POWER9 1\" >>confdefs.h\n-\n fi\n \n "}, {"sha": "470fde644f7b24f0030a775ad47f8979768843dc", "filename": "gcc/configure.ac", "status": "modified", "additions": 0, "deletions": 116, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24676f1215413e6934132bfc6a25f1c02c9eecca/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24676f1215413e6934132bfc6a25f1c02c9eecca/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=24676f1215413e6934132bfc6a25f1c02c9eecca", "patch": "@@ -4523,51 +4523,6 @@ gd:\n       [AC_DEFINE(HAVE_AS_MFCRF, 1,\n \t  [Define if your assembler supports mfcr field.])])\n \n-    case $target in\n-      *-*-aix*) conftest_s='\t.machine \"pwr5\"\n-\t.csect .text[[PR]]\n-\tpopcntb 3,3';;\n-      *) conftest_s='\t.machine power5\n-\t.text\n-\tpopcntb 3,3';;\n-    esac\n-\n-    gcc_GAS_CHECK_FEATURE([popcntb support],\n-      gcc_cv_as_powerpc_popcntb, [2,17,0],,\n-      [$conftest_s],,\n-      [AC_DEFINE(HAVE_AS_POPCNTB, 1,\n-\t  [Define if your assembler supports popcntb field.])])\n-\n-    case $target in\n-      *-*-aix*) conftest_s='\t.machine \"pwr5x\"\n-\t.csect .text[[PR]]\n-\tfrin 1,1';;\n-      *) conftest_s='\t.machine power5\n-\t.text\n-\tfrin 1,1';;\n-    esac\n-\n-    gcc_GAS_CHECK_FEATURE([fp round support],\n-      gcc_cv_as_powerpc_fprnd, [2,17,0],,\n-      [$conftest_s],,\n-      [AC_DEFINE(HAVE_AS_FPRND, 1,\n-\t  [Define if your assembler supports fprnd.])])\n-\n-    case $target in\n-      *-*-aix*) conftest_s='\t.machine \"pwr6\"\n-\t.csect .text[[PR]]\n-\tmffgpr 1,3';;\n-      *) conftest_s='\t.machine power6\n-\t.text\n-\tmffgpr 1,3';;\n-    esac\n-\n-    gcc_GAS_CHECK_FEATURE([move fp gpr support],\n-      gcc_cv_as_powerpc_mfpgpr, [2,19,2],,\n-      [$conftest_s],,\n-      [AC_DEFINE(HAVE_AS_MFPGPR, 1,\n-\t  [Define if your assembler supports mffgpr and mftgpr.])])\n-\n     case $target in\n       *-*-aix*) conftest_s='\t.csect .text[[PR]]\n LCF..0:\n@@ -4587,36 +4542,6 @@ LCF0:\n       [AC_DEFINE(HAVE_AS_REL16, 1,\n \t  [Define if your assembler supports R_PPC_REL16 relocs.])])\n \n-    case $target in\n-      *-*-aix*) conftest_s='\t.machine \"pwr6\"\n-\t.csect .text[[PR]]\n-\tcmpb 3,4,5';;\n-      *) conftest_s='\t.machine power6\n-\t.text\n-\tcmpb 3,4,5';;\n-    esac\n-\n-    gcc_GAS_CHECK_FEATURE([compare bytes support],\n-      gcc_cv_as_powerpc_cmpb, [2,19,2], -a32,\n-      [$conftest_s],,\n-      [AC_DEFINE(HAVE_AS_CMPB, 1,\n-\t  [Define if your assembler supports cmpb.])])\n-\n-    case $target in\n-      *-*-aix*) conftest_s='\t.machine \"pwr6\"\n-\t.csect .text[[PR]]\n-\tdadd 1,2,3';;\n-      *) conftest_s='\t.machine power6\n-\t.text\n-\tdadd 1,2,3';;\n-    esac\n-\n-    gcc_GAS_CHECK_FEATURE([decimal float support],\n-      gcc_cv_as_powerpc_dfp, [2,19,2], -a32,\n-      [$conftest_s],,\n-      [AC_DEFINE(HAVE_AS_DFP, 1,\n-\t  [Define if your assembler supports DFP instructions.])])\n-\n     case $target in\n       *-*-aix*) conftest_s='\t.machine \"pwr7\"\n \t.csect .text[[PR]]\n@@ -4632,47 +4557,6 @@ LCF0:\n       [AC_DEFINE(HAVE_AS_VSX, 1,\n \t  [Define if your assembler supports VSX instructions.])])\n \n-    case $target in\n-      *-*-aix*) conftest_s='\t.machine \"pwr7\"\n-\t.csect .text[[PR]]\n-\tpopcntd 3,3';;\n-      *) conftest_s='\t.machine power7\n-\t.text\n-\tpopcntd 3,3';;\n-    esac\n-\n-    gcc_GAS_CHECK_FEATURE([popcntd support],\n-      gcc_cv_as_powerpc_popcntd, [2,19,2], -a32,\n-      [$conftest_s],,\n-      [AC_DEFINE(HAVE_AS_POPCNTD, 1,\n-\t  [Define if your assembler supports POPCNTD instructions.])])\n-\n-    case $target in\n-      *-*-aix*) conftest_s='\t.machine \"pwr8\"\n-\t.csect .text[[PR]]';;\n-      *) conftest_s='\t.machine power8\n-\t.text';;\n-    esac\n-\n-    gcc_GAS_CHECK_FEATURE([power8 support],\n-      gcc_cv_as_powerpc_power8, [2,19,2], -a32,\n-      [$conftest_s],,\n-      [AC_DEFINE(HAVE_AS_POWER8, 1,\n-\t  [Define if your assembler supports POWER8 instructions.])])\n-\n-    case $target in\n-      *-*-aix*) conftest_s='\t.machine \"pwr9\"\n-\t.csect .text[[PR]]';;\n-      *) conftest_s='\t.machine power9\n-\t.text';;\n-    esac\n-\n-    gcc_GAS_CHECK_FEATURE([power9 support],\n-      gcc_cv_as_powerpc_power9, [2,19,2], -a32,\n-      [$conftest_s],,\n-      [AC_DEFINE(HAVE_AS_POWER9, 1,\n-\t  [Define if your assembler supports POWER9 instructions.])])\n-\n     case $target in\n       *-*-aix*) conftest_s='\t.csect .text[[PR]]\n \tlwsync';;"}]}