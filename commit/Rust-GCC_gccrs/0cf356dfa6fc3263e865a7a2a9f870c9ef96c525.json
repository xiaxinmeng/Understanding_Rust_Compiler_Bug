{"sha": "0cf356dfa6fc3263e865a7a2a9f870c9ef96c525", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNmMzU2ZGZhNmZjMzI2M2U4NjVhN2EyYTlmODcwYzllZjk2YzUyNQ==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@suse.de", "date": "2003-11-12T06:44:46Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-11-12T06:44:46Z"}, "message": "c90-const-expr-2.c (foo): Avoid extra warning on 64-bit systems.\n\n2003-11-12  Andreas Jaeger  <aj@suse.de>\n\t    Jakub Jelinek  <jakub@redhat.com>\n\t    Andrew Pinski  <pinskia@physics.uc.edu>\n\t    Richard Henderson  <rth@redhat.com>\n\n\t* gcc.dg/c90-const-expr-2.c (foo): Avoid extra warning on 64-bit\n\tsystems.\n\n\t* gcc.dg/20030926-1.c: Make it work on x86_64 systems.\n\t* gcc.dg/i386-pentium4-not-mull.c: Likewise.\n\nCo-Authored-By: Andrew Pinski <pinskia@physics.uc.edu>\nCo-Authored-By: Jakub Jelinek <jakub@redhat.com>\nCo-Authored-By: Richard Henderson <rth@redhat.com>\n\nFrom-SVN: r73485", "tree": {"sha": "8a15b1576d487a8ddc4cf18ddd28b12c0c3a5f25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a15b1576d487a8ddc4cf18ddd28b12c0c3a5f25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0cf356dfa6fc3263e865a7a2a9f870c9ef96c525", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cf356dfa6fc3263e865a7a2a9f870c9ef96c525", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cf356dfa6fc3263e865a7a2a9f870c9ef96c525", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cf356dfa6fc3263e865a7a2a9f870c9ef96c525/comments", "author": {"login": "ajaeger", "id": 16867, "node_id": "MDQ6VXNlcjE2ODY3", "avatar_url": "https://avatars.githubusercontent.com/u/16867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajaeger", "html_url": "https://github.com/ajaeger", "followers_url": "https://api.github.com/users/ajaeger/followers", "following_url": "https://api.github.com/users/ajaeger/following{/other_user}", "gists_url": "https://api.github.com/users/ajaeger/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajaeger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajaeger/subscriptions", "organizations_url": "https://api.github.com/users/ajaeger/orgs", "repos_url": "https://api.github.com/users/ajaeger/repos", "events_url": "https://api.github.com/users/ajaeger/events{/privacy}", "received_events_url": "https://api.github.com/users/ajaeger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2fe6fc5268db07bb59d80fa0280668b3a2c9a99b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fe6fc5268db07bb59d80fa0280668b3a2c9a99b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fe6fc5268db07bb59d80fa0280668b3a2c9a99b"}], "stats": {"total": 25, "additions": 22, "deletions": 3}, "files": [{"sha": "7bd8ab2736ffed258ccc04d894e10ffcc44e112e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cf356dfa6fc3263e865a7a2a9f870c9ef96c525/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cf356dfa6fc3263e865a7a2a9f870c9ef96c525/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0cf356dfa6fc3263e865a7a2a9f870c9ef96c525", "patch": "@@ -1,3 +1,14 @@\n+2003-11-12  Andreas Jaeger  <aj@suse.de>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\t    Andrew Pinski  <pinskia@physics.uc.edu>\n+\t    Richard Henderson  <rth@redhat.com>\n+\n+\t* gcc.dg/c90-const-expr-2.c (foo): Avoid extra warning on 64-bit\n+\tsystems.\n+\n+\t* gcc.dg/20030926-1.c: Make it work on x86_64 systems.\n+\t* gcc.dg/i386-pentium4-not-mull.c: Likewise.\n+\n 2003-11-11  Andreas Jaeger  <aj@suse.de>\n \n \t* gcc.c-torture/execute/20020720-1.x: Test passes also on x86_64."}, {"sha": "39833a65171245f95277d5db9927cbac1647b848", "filename": "gcc/testsuite/gcc.dg/20030926-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cf356dfa6fc3263e865a7a2a9f870c9ef96c525/gcc%2Ftestsuite%2Fgcc.dg%2F20030926-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cf356dfa6fc3263e865a7a2a9f870c9ef96c525/gcc%2Ftestsuite%2Fgcc.dg%2F20030926-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20030926-1.c?ref=0cf356dfa6fc3263e865a7a2a9f870c9ef96c525", "patch": "@@ -1,6 +1,7 @@\n /* PR optimization/11741  */\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -minline-all-stringops -march=pentium4\" } */\n+/* { dg-options \"-O2 -minline-all-stringops\" } */\n+/* { dg-options \"-O2 -minline-all-stringops -march=pentium4\" { target i?86-*-* } } */\n \n void\n foo (char *p)"}, {"sha": "8c2c99f5cdb030b35c61dc4eee1f1c0a7f0132e4", "filename": "gcc/testsuite/gcc.dg/c90-const-expr-2.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cf356dfa6fc3263e865a7a2a9f870c9ef96c525/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-const-expr-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cf356dfa6fc3263e865a7a2a9f870c9ef96c525/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-const-expr-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-const-expr-2.c?ref=0cf356dfa6fc3263e865a7a2a9f870c9ef96c525", "patch": "@@ -14,6 +14,12 @@ int *a;\n int b;\n long *c;\n \n+#ifdef _LP64\n+#define ZERO 0L\n+#else\n+#define ZERO 0\n+#endif\n+\n /* Assertion that n is a null pointer constant: so the conditional expression\n    has type 'int *' instead of 'void *'.\n */\n@@ -30,7 +36,7 @@ foo (void)\n   ASSERT_NPC ((void *)0);\n   ASSERT_NOT_NPC ((void *)(void *)0); /* { dg-bogus \"incompatible\" \"bogus null pointer constant\" { xfail *-*-* } } */\n   ASSERT_NOT_NPC ((void *)(char *)0); /* { dg-bogus \"incompatible\" \"bogus null pointer constant\" { xfail *-*-* } } */\n-  ASSERT_NOT_NPC ((void *)(0, 0)); /* { dg-bogus \"incompatible\" \"bogus null pointer constant\" } */\n+  ASSERT_NOT_NPC ((void *)(0, ZERO)); /* { dg-bogus \"incompatible\" \"bogus null pointer constant\" } */\n   ASSERT_NOT_NPC ((void *)(&\"Foobar\"[0] - &\"Foobar\"[0])); /* { dg-bogus \"incompatible\" \"bogus null pointer constant\" { xfail *-*-* } } */\n   /* This last one is a null pointer constant in C99 only.  */\n   ASSERT_NOT_NPC ((void *)(1 ? 0 : (0, 0))); /* { dg-bogus \"incompatible\" \"bogus null pointer constant\" { xfail *-*-* } } */"}, {"sha": "8d4a083e5d8f1ac905f6e350bdaff25c669ff82c", "filename": "gcc/testsuite/gcc.dg/i386-pentium4-not-mull.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cf356dfa6fc3263e865a7a2a9f870c9ef96c525/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-pentium4-not-mull.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cf356dfa6fc3263e865a7a2a9f870c9ef96c525/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-pentium4-not-mull.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-pentium4-not-mull.c?ref=0cf356dfa6fc3263e865a7a2a9f870c9ef96c525", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -march=pentium4\" } */\n+/* { dg-options \"-O2 -march=pentium4\" { target i?86-*-* } } */\n+/* { dg-options \"-O2 -march=pentium4 -m32\" { target x86_64-*-* } } */\n /* { dg-final { scan-assembler-not \"imull\" } } */\n \n /* Should be done not using imull.  */"}]}