{"sha": "4dfa3251b5c88e7a5f135c8c97be4939f071e39b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRmYTMyNTFiNWM4OGU3YTVmMTM1YzhjOTdiZTQ5MzlmMDcxZTM5Yg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-01-08T11:58:30Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2020-01-08T11:58:30Z"}, "message": "Use dump_asm_name for Callers/Calls in dump.\n\n2020-01-08  Martin Liska  <mliska@suse.cz>\n\n\t* cgraph.c (cgraph_node::dump): Use systematically\n\tdump_asm_name.\n\nFrom-SVN: r279998", "tree": {"sha": "42c4751195412930a582f3f6a7f201efeecc4b1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42c4751195412930a582f3f6a7f201efeecc4b1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4dfa3251b5c88e7a5f135c8c97be4939f071e39b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dfa3251b5c88e7a5f135c8c97be4939f071e39b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dfa3251b5c88e7a5f135c8c97be4939f071e39b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dfa3251b5c88e7a5f135c8c97be4939f071e39b/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e3e131c9bb937c2a0b8c0ac606da181d9f771746", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3e131c9bb937c2a0b8c0ac606da181d9f771746", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3e131c9bb937c2a0b8c0ac606da181d9f771746"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "f8f4c704499d3e46525e8ca0a23cf5ef4f6ddf8f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dfa3251b5c88e7a5f135c8c97be4939f071e39b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dfa3251b5c88e7a5f135c8c97be4939f071e39b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4dfa3251b5c88e7a5f135c8c97be4939f071e39b", "patch": "@@ -1,3 +1,8 @@\n+2020-01-08  Martin Liska  <mliska@suse.cz>\n+\n+\t* cgraph.c (cgraph_node::dump): Use systematically\n+\tdump_asm_name.\n+\n 2020-01-08  Georg-Johann Lay  <avr@gjlay.de>\n \n \tAdd -nodevicespecs option for avr."}, {"sha": "aa2c476842a0db9511f9bfba760fd93013e5e065", "filename": "gcc/cgraph.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dfa3251b5c88e7a5f135c8c97be4939f071e39b/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dfa3251b5c88e7a5f135c8c97be4939f071e39b/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=4dfa3251b5c88e7a5f135c8c97be4939f071e39b", "patch": "@@ -2036,7 +2036,7 @@ cgraph_node::dump (FILE *f)\n   profile_count sum = profile_count::zero ();\n   for (edge = callers; edge; edge = edge->next_caller)\n     {\n-      fprintf (f, \"%s \", edge->caller->dump_name ());\n+      fprintf (f, \"%s \", edge->caller->dump_asm_name ());\n       edge->dump_edge_flags (f);\n       if (edge->count.initialized_p ())\n \tsum += edge->count.ipa ();\n@@ -2045,7 +2045,7 @@ cgraph_node::dump (FILE *f)\n   fprintf (f, \"\\n  Calls: \");\n   for (edge = callees; edge; edge = edge->next_callee)\n     {\n-      fprintf (f, \"%s \", edge->callee->dump_name ());\n+      fprintf (f, \"%s \", edge->callee->dump_asm_name ());\n       edge->dump_edge_flags (f);\n     }\n   fprintf (f, \"\\n\");"}]}