{"sha": "d0ab13fd8ba1689642124031223816930321ccdd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDBhYjEzZmQ4YmExNjg5NjQyMTI0MDMxMjIzODE2OTMwMzIxY2NkZA==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@st.com", "date": "2006-02-13T15:31:31Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2006-02-13T15:31:31Z"}, "message": "* reload1.c (gen_reload): Also use find_replacement in UNARY_P case.\n\nFrom-SVN: r110915", "tree": {"sha": "e670aabc1910ed8b9cc58c136bcbc1ffc497e927", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e670aabc1910ed8b9cc58c136bcbc1ffc497e927"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0ab13fd8ba1689642124031223816930321ccdd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0ab13fd8ba1689642124031223816930321ccdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0ab13fd8ba1689642124031223816930321ccdd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0ab13fd8ba1689642124031223816930321ccdd/comments", "author": null, "committer": null, "parents": [{"sha": "3e8b04461f0106f74256a92df8aae1fd88e086c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e8b04461f0106f74256a92df8aae1fd88e086c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e8b04461f0106f74256a92df8aae1fd88e086c6"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "9bac8d3dee92c209262df2de904d8fb69ee2bcc6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0ab13fd8ba1689642124031223816930321ccdd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0ab13fd8ba1689642124031223816930321ccdd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d0ab13fd8ba1689642124031223816930321ccdd", "patch": "@@ -1,3 +1,7 @@\n+2006-02-13  J\"orn Rennecke <joern.rennecke@st.com>\n+\n+\t* reload1.c (gen_reload): Also use find_replacement in UNARY_P case.\n+\n 2006-02-12  Zdenek Dvorak <dvorakz@suse.cz>\n \n \tPR rtl-optimization/26222"}, {"sha": "7bfd2a1f6aee7733d538ae9208429999acb594b2", "filename": "gcc/reload1.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0ab13fd8ba1689642124031223816930321ccdd/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0ab13fd8ba1689642124031223816930321ccdd/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=d0ab13fd8ba1689642124031223816930321ccdd", "patch": "@@ -7721,6 +7721,10 @@ gen_reload (rtx out, rtx in, int opnum, enum reload_type type)\n       rtx out_moded;\n       rtx set;\n \n+      op1 = find_replacement (&XEXP (in, 0));\n+      if (op1 != XEXP (in, 0))\n+\tin = gen_rtx_fmt_e (GET_CODE (in), GET_MODE (in), op1);\n+\n       /* First, try a plain SET.  */\n       set = emit_insn_if_valid_for_reload (gen_rtx_SET (VOIDmode, out, in));\n       if (set)\n@@ -7729,7 +7733,6 @@ gen_reload (rtx out, rtx in, int opnum, enum reload_type type)\n       /* If that failed, move the inner operand to the reload\n \t register, and try the same unop with the inner expression\n \t replaced with the reload register.  */\n-      op1 = XEXP (in, 0);\n \n       if (GET_MODE (op1) != GET_MODE (out))\n \tout_moded = gen_rtx_REG (GET_MODE (op1), REGNO (out));"}]}