{"sha": "0f7a02a32f887d944a760004927518d903bb4443", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY3YTAyYTMyZjg4N2Q5NDRhNzYwMDA0OTI3NTE4ZDkwM2JiNDQ0Mw==", "commit": {"author": {"name": "Aditya Kumar", "email": "aditya.k7@samsung.com", "date": "2015-12-16T17:33:07Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2015-12-16T17:33:07Z"}, "message": "Remove individial dependence pointers and add a scop::dependence to contain all the dependence.\n\nRemoved the member variables which are only used in scop_get_dependence. Instead\nonly maintaining the overall dependence. Passes regtest and bootstrap.\n\ngcc/ChangeLog:\n\n2015-12-15  hiraditya  <hiraditya@msn.com>\n\n        * graphite-dependences.c (scop_get_dependences): Use local pointers.\n        * graphite-isl-ast-to-gimple.c(translate_isl_ast_to_gimple::scop_to_isl_ast):\n          Use scop->dependence.\n        * graphite-optimize-isl.c (optimize_isl): Same.\n        * graphite-poly.c (new_scop): Remove initialization of removed members.\n        (free_scop): Same.\n        * graphite.h (struct scop): Remove individial dependence pointers and\n        add a scop::dependence to contain all the dependence.\n\nFrom-SVN: r231708", "tree": {"sha": "9c0e606157f927a48dd88bedb966bb39208877e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c0e606157f927a48dd88bedb966bb39208877e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f7a02a32f887d944a760004927518d903bb4443", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f7a02a32f887d944a760004927518d903bb4443", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f7a02a32f887d944a760004927518d903bb4443", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f7a02a32f887d944a760004927518d903bb4443/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ddb9c8d784858c4c80b7c93762e0e9d7e8b5a3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ddb9c8d784858c4c80b7c93762e0e9d7e8b5a3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ddb9c8d784858c4c80b7c93762e0e9d7e8b5a3a"}], "stats": {"total": 138, "additions": 66, "deletions": 72}, "files": [{"sha": "08641b7c0f3da9b3b5ddc872f0cc499fb7f9cacb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f7a02a32f887d944a760004927518d903bb4443/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f7a02a32f887d944a760004927518d903bb4443/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0f7a02a32f887d944a760004927518d903bb4443", "patch": "@@ -1,3 +1,14 @@\n+2015-12-16  Aditya Kumar  <aditya.k7@samsung.com>\n+\n+\t* graphite-dependences.c (scop_get_dependences): Use local pointers.\n+\t* graphite-isl-ast-to-gimple.c\n+\t(translate_isl_ast_to_gimple::scop_to_isl_ast): Use scop->dependence.\n+\t* graphite-optimize-isl.c (optimize_isl): Same.\n+\t* graphite-poly.c (new_scop): Remove initialization of removed members.\n+\t(free_scop): Same.\n+\t* graphite.h (struct scop): Remove individial dependence pointers and\n+\tadd a scop::dependence to contain all the dependence.\n+\n 2015-12-16  Aditya Kumar  <aditya.k7@samsung.com>\n \t    Sebastian Pop  <s.pop@samsung.com>\n "}, {"sha": "407a11e3c1be2747ad87f1534d2641e77f33d91f", "filename": "gcc/graphite-dependences.c", "status": "modified", "additions": 34, "deletions": 22, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f7a02a32f887d944a760004927518d903bb4443/gcc%2Fgraphite-dependences.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f7a02a32f887d944a760004927518d903bb4443/gcc%2Fgraphite-dependences.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-dependences.c?ref=0f7a02a32f887d944a760004927518d903bb4443", "patch": "@@ -399,28 +399,32 @@ compute_deps (scop_p scop, vec<poly_bb_p> pbbs,\n isl_union_map *\n scop_get_dependences (scop_p scop)\n {\n-  isl_union_map *dependences;\n-\n-  if (!scop->must_raw)\n-    compute_deps (scop, scop->pbbs,\n-\t\t  &scop->must_raw, &scop->may_raw,\n-\t\t  &scop->must_raw_no_source, &scop->may_raw_no_source,\n-\t\t  &scop->must_war, &scop->may_war,\n-\t\t  &scop->must_war_no_source, &scop->may_war_no_source,\n-\t\t  &scop->must_waw, &scop->may_waw,\n-\t\t  &scop->must_waw_no_source, &scop->may_waw_no_source);\n-\n-  dependences = isl_union_map_copy (scop->must_raw);\n-  dependences = isl_union_map_union (dependences,\n-\t\t\t\t     isl_union_map_copy (scop->must_war));\n-  dependences = isl_union_map_union (dependences,\n-\t\t\t\t     isl_union_map_copy (scop->must_waw));\n-  dependences = isl_union_map_union (dependences,\n-\t\t\t\t     isl_union_map_copy (scop->may_raw));\n-  dependences = isl_union_map_union (dependences,\n-\t\t\t\t     isl_union_map_copy (scop->may_war));\n-  dependences = isl_union_map_union (dependences,\n-\t\t\t\t     isl_union_map_copy (scop->may_waw));\n+  if (scop->dependence)\n+    return scop->dependence;\n+\n+  /* The original dependence relations:\n+     RAW are read after write dependences,\n+     WAR are write after read dependences,\n+     WAW are write after write dependences.  */\n+  isl_union_map *must_raw = NULL, *may_raw = NULL, *must_raw_no_source = NULL,\n+      *may_raw_no_source = NULL, *must_war = NULL, *may_war = NULL,\n+      *must_war_no_source = NULL, *may_war_no_source = NULL, *must_waw = NULL,\n+      *may_waw = NULL, *must_waw_no_source = NULL, *may_waw_no_source = NULL;\n+\n+  compute_deps (scop, scop->pbbs,\n+\t\t  &must_raw, &may_raw,\n+\t\t  &must_raw_no_source, &may_raw_no_source,\n+\t\t  &must_war, &may_war,\n+\t\t  &must_war_no_source, &may_war_no_source,\n+\t\t  &must_waw, &may_waw,\n+\t\t  &must_waw_no_source, &may_waw_no_source);\n+\n+  isl_union_map *dependences = must_raw;\n+  dependences = isl_union_map_union (dependences, must_war);\n+  dependences = isl_union_map_union (dependences, must_waw);\n+  dependences = isl_union_map_union (dependences, may_raw);\n+  dependences = isl_union_map_union (dependences, may_war);\n+  dependences = isl_union_map_union (dependences, may_waw);\n \n   if (dump_file)\n     {\n@@ -429,6 +433,14 @@ scop_get_dependences (scop_p scop)\n       fprintf (dump_file, \")\\n\");\n     }\n \n+  isl_union_map_free (must_raw_no_source);\n+  isl_union_map_free (may_raw_no_source);\n+  isl_union_map_free (must_war_no_source);\n+  isl_union_map_free (may_war_no_source);\n+  isl_union_map_free (must_waw_no_source);\n+  isl_union_map_free (may_waw_no_source);\n+\n+  scop->dependence = dependences;\n   return dependences;\n }\n "}, {"sha": "b392766a27f4cb4aff5cd45606eb4ef79ce9e98d", "filename": "gcc/graphite-isl-ast-to-gimple.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f7a02a32f887d944a760004927518d903bb4443/gcc%2Fgraphite-isl-ast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f7a02a32f887d944a760004927518d903bb4443/gcc%2Fgraphite-isl-ast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-isl-ast-to-gimple.c?ref=0f7a02a32f887d944a760004927518d903bb4443", "patch": "@@ -3197,18 +3197,15 @@ translate_isl_ast_to_gimple::scop_to_isl_ast (scop_p scop, ivs_params &ip)\n   isl_union_map *schedule_isl = generate_isl_schedule (scop);\n   isl_ast_build *context_isl = generate_isl_context (scop);\n   context_isl = set_options (context_isl, schedule_isl);\n-  isl_union_map *dependences = NULL;\n   if (flag_loop_parallelize_all)\n     {\n-      dependences = scop_get_dependences (scop);\n+      isl_union_map *dependence = scop_get_dependences (scop);\n       context_isl =\n \tisl_ast_build_set_before_each_for (context_isl, ast_build_before_for,\n-\t\t\t\t\t   dependences);\n+\t\t\t\t\t   dependence);\n     }\n   isl_ast_node *ast_isl = isl_ast_build_ast_from_schedule (context_isl,\n \t\t\t\t\t\t\t   schedule_isl);\n-  if (dependences)\n-    isl_union_map_free (dependences);\n   isl_ast_build_free (context_isl);\n   return ast_isl;\n }"}, {"sha": "f5cb5c45dccb6cc073c7f1cef19a39d1b6cafa30", "filename": "gcc/graphite-optimize-isl.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f7a02a32f887d944a760004927518d903bb4443/gcc%2Fgraphite-optimize-isl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f7a02a32f887d944a760004927518d903bb4443/gcc%2Fgraphite-optimize-isl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-optimize-isl.c?ref=0f7a02a32f887d944a760004927518d903bb4443", "patch": "@@ -380,12 +380,12 @@ optimize_isl (scop_p scop)\n   isl_options_set_on_error (scop->isl_context, ISL_ON_ERROR_CONTINUE);\n \n   isl_union_set *domain = scop_get_domains (scop);\n-  isl_union_map *dependences = scop_get_dependences (scop);\n-  dependences\n-    = isl_union_map_gist_domain (dependences, isl_union_set_copy (domain));\n-  dependences\n-    = isl_union_map_gist_range (dependences, isl_union_set_copy (domain));\n-  isl_union_map *validity = dependences;\n+  scop_get_dependences (scop);\n+  scop->dependence\n+    = isl_union_map_gist_domain (scop->dependence, isl_union_set_copy (domain));\n+  scop->dependence\n+    = isl_union_map_gist_range (scop->dependence, isl_union_set_copy (domain));\n+  isl_union_map *validity = isl_union_map_copy (scop->dependence);\n   isl_union_map *proximity = isl_union_map_copy (validity);\n \n   isl_options_set_schedule_max_constant_term (scop->isl_context, CONSTANT_BOUND);"}, {"sha": "00d674cd7c9ef4b62eea9a9d2167eac98063822e", "filename": "gcc/graphite-poly.c", "status": "modified", "additions": 11, "deletions": 32, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f7a02a32f887d944a760004927518d903bb4443/gcc%2Fgraphite-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f7a02a32f887d944a760004927518d903bb4443/gcc%2Fgraphite-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.c?ref=0f7a02a32f887d944a760004927518d903bb4443", "patch": "@@ -295,26 +295,15 @@ scop_p\n new_scop (edge entry, edge exit)\n {\n   sese_info_p region = new_sese_info (entry, exit);\n-  scop_p scop = XNEW (struct scop);\n-\n-  scop->param_context = NULL;\n-  scop->must_raw = NULL;\n-  scop->may_raw = NULL;\n-  scop->must_raw_no_source = NULL;\n-  scop->may_raw_no_source = NULL;\n-  scop->must_war = NULL;\n-  scop->may_war = NULL;\n-  scop->must_war_no_source = NULL;\n-  scop->may_war_no_source = NULL;\n-  scop->must_waw = NULL;\n-  scop->may_waw = NULL;\n-  scop->must_waw_no_source = NULL;\n-  scop->may_waw_no_source = NULL;\n-  scop_set_region (scop, region);\n-  scop->pbbs.create (3);\n-  scop->drs.create (3);\n-\n-  return scop;\n+  scop_p s;\n+  s = XNEW (struct scop);\n+\n+  s->param_context = NULL;\n+  scop_set_region (s, region);\n+  s->pbbs.create (3);\n+  s->drs.create (3);\n+  s->dependence = NULL;\n+  return s;\n }\n \n /* Deletes SCOP.  */\n@@ -335,18 +324,8 @@ free_scop (scop_p scop)\n   scop->drs.release ();\n \n   isl_set_free (scop->param_context);\n-  isl_union_map_free (scop->must_raw);\n-  isl_union_map_free (scop->may_raw);\n-  isl_union_map_free (scop->must_raw_no_source);\n-  isl_union_map_free (scop->may_raw_no_source);\n-  isl_union_map_free (scop->must_war);\n-  isl_union_map_free (scop->may_war);\n-  isl_union_map_free (scop->must_war_no_source);\n-  isl_union_map_free (scop->may_war_no_source);\n-  isl_union_map_free (scop->must_waw);\n-  isl_union_map_free (scop->may_waw);\n-  isl_union_map_free (scop->must_waw_no_source);\n-  isl_union_map_free (scop->may_waw_no_source);\n+  isl_union_map_free (scop->dependence);\n+  scop->dependence = NULL;\n   XDELETE (scop);\n }\n "}, {"sha": "ba91dfa4d251960752e29ffef08e4b9261e5e585", "filename": "gcc/graphite.h", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f7a02a32f887d944a760004927518d903bb4443/gcc%2Fgraphite.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f7a02a32f887d944a760004927518d903bb4443/gcc%2Fgraphite.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.h?ref=0f7a02a32f887d944a760004927518d903bb4443", "patch": "@@ -411,13 +411,8 @@ struct scop\n   /* The context used internally by ISL.  */\n   isl_ctx *isl_context;\n \n-  /* The original dependence relations:\n-     RAW are read after write dependences,\n-     WAR are write after read dependences,\n-     WAW are write after write dependences.  */\n-  isl_union_map *must_raw, *may_raw, *must_raw_no_source, *may_raw_no_source,\n-    *must_war, *may_war, *must_war_no_source, *may_war_no_source,\n-    *must_waw, *may_waw, *must_waw_no_source, *may_waw_no_source;\n+  /* The data dependence relation among the data references in this scop.  */\n+  isl_union_map *dependence;\n };\n \n extern scop_p new_scop (edge, edge);"}]}