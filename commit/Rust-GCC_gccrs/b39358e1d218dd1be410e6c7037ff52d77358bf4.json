{"sha": "b39358e1d218dd1be410e6c7037ff52d77358bf4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjM5MzU4ZTFkMjE4ZGQxYmU0MTBlNmM3MDM3ZmY1MmQ3NzM1OGJmNA==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2003-05-03T23:16:56Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2003-05-03T23:16:56Z"}, "message": "rs6000.h (REVERSIBLE_CC_MODE): Define.\n\n\t* config/rs6000/rs6000.h (REVERSIBLE_CC_MODE): Define.\n\t(REVERSE_CONDITION): Define.\n\n\t* gcc.dg/ppc-fsel-1.c: New test.\n\nFrom-SVN: r66442", "tree": {"sha": "9d3ea59b0fafc5cbca7599d0e7e11acd853847b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d3ea59b0fafc5cbca7599d0e7e11acd853847b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b39358e1d218dd1be410e6c7037ff52d77358bf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b39358e1d218dd1be410e6c7037ff52d77358bf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b39358e1d218dd1be410e6c7037ff52d77358bf4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b39358e1d218dd1be410e6c7037ff52d77358bf4/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b7053a3fde13f48ed6eb33ea89071aeebb4fc6f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7053a3fde13f48ed6eb33ea89071aeebb4fc6f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7053a3fde13f48ed6eb33ea89071aeebb4fc6f5"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "a7a01a6da90213396895ffb49bd8d9c2f4da91ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b39358e1d218dd1be410e6c7037ff52d77358bf4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b39358e1d218dd1be410e6c7037ff52d77358bf4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b39358e1d218dd1be410e6c7037ff52d77358bf4", "patch": "@@ -1,5 +1,8 @@\n 2003-05-03  Geoffrey Keating  <geoffk@apple.com>\n \n+\t* config/rs6000/rs6000.h (REVERSIBLE_CC_MODE): Define.\n+\t(REVERSE_CONDITION): Define.\n+\n \t* config/rs6000/rs6000.c (scc_comparison_operator): Make equivalent\n \tto branch_positive_comparison_operator.\n \t(ccr_bit): Check that sCOND conditions are actually a positive bit."}, {"sha": "6d95b7a5cfc55cfd39abd2d8fc78722845303dbf", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b39358e1d218dd1be410e6c7037ff52d77358bf4/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b39358e1d218dd1be410e6c7037ff52d77358bf4/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=b39358e1d218dd1be410e6c7037ff52d77358bf4", "patch": "@@ -2366,9 +2366,16 @@ do {\t\t\t\t\t\t\t\t\t     \\\n    : (((OP) == EQ || (OP) == NE) && GET_RTX_CLASS (GET_CODE (X)) == '<'   \\\n       ? CCEQmode : CCmode))\n \n+/* Can the condition code MODE be safely reversed?  This is safe in\n+   all cases on this port, because at present it doesn't use the\n+   trapping FP comparisons (fcmpo).  */\n+#define REVERSIBLE_CC_MODE(MODE) 1\n+\n+/* Given a condition code and a mode, return the inverse condition.  */\n+#define REVERSE_CONDITION(CODE, MODE) rs6000_reverse_condition (MODE, CODE)\n+\n /* Define the information needed to generate branch and scc insns.  This is\n-   stored from the compare operation.  Note that we can't use \"rtx\" here\n-   since it hasn't been defined!  */\n+   stored from the compare operation.  */\n \n extern GTY(()) rtx rs6000_compare_op0;\n extern GTY(()) rtx rs6000_compare_op1;"}, {"sha": "1b79f249de9ba24e36935e3974b5961dd086f2fd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b39358e1d218dd1be410e6c7037ff52d77358bf4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b39358e1d218dd1be410e6c7037ff52d77358bf4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b39358e1d218dd1be410e6c7037ff52d77358bf4", "patch": "@@ -1,3 +1,7 @@\n+2003-05-03  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* gcc.dg/ppc-fsel-1.c: New test.\n+\n 2003-05-03  Zack Weinberg  <zack@codesourcery.com>\n \n \tPR c/10604"}, {"sha": "266b8dbd5a5d8722001e0be09856377cf3462dcc", "filename": "gcc/testsuite/gcc.dg/ppc-fsel-1.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b39358e1d218dd1be410e6c7037ff52d77358bf4/gcc%2Ftestsuite%2Fgcc.dg%2Fppc-fsel-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b39358e1d218dd1be410e6c7037ff52d77358bf4/gcc%2Ftestsuite%2Fgcc.dg%2Fppc-fsel-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fppc-fsel-1.c?ref=b39358e1d218dd1be410e6c7037ff52d77358bf4", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile { target powerpc*-*-* } } */\n+/* { dg-options \"-O -mpowerpc-gfxopt\" } */\n+/* { dg-final { scan-assembler \"fsel\" } } */\n+\n+/* Check that fsel can be generated even without -ffast-math.  */\n+\n+double foo(double a, double b, double c, double d)\n+{\n+  return a < b ? c : d;\n+}"}]}