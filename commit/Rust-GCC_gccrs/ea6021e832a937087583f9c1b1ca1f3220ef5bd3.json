{"sha": "ea6021e832a937087583f9c1b1ca1f3220ef5bd3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE2MDIxZTgzMmE5MzcwODc1ODNmOWMxYjFjYTFmMzIyMGVmNWJkMw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@markmitchell.com", "date": "1998-08-28T12:06:56Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1998-08-28T12:06:56Z"}, "message": "cp-tree.h (finish_base_specifier): New function.\n\n\t* cp-tree.h (finish_base_specifier): New function.\n\t* parse.y (base_class): Use it.\n\t* semantics.c (finish_base_specifier): Define it.\n\t* parse.y (structsp): Warn on use of typename outside of template\n\tdeclarations.\n\nFrom-SVN: r22055", "tree": {"sha": "55daae681e7c466aee112a03fce6c8db72ee25e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55daae681e7c466aee112a03fce6c8db72ee25e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea6021e832a937087583f9c1b1ca1f3220ef5bd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea6021e832a937087583f9c1b1ca1f3220ef5bd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea6021e832a937087583f9c1b1ca1f3220ef5bd3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea6021e832a937087583f9c1b1ca1f3220ef5bd3/comments", "author": null, "committer": null, "parents": [{"sha": "9231189b62413d0e5427371eb97cd7961ec8be34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9231189b62413d0e5427371eb97cd7961ec8be34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9231189b62413d0e5427371eb97cd7961ec8be34"}], "stats": {"total": 960, "additions": 457, "deletions": 503}, "files": [{"sha": "8e486ca37b01aacfd690301929157f16f2eaead2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea6021e832a937087583f9c1b1ca1f3220ef5bd3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea6021e832a937087583f9c1b1ca1f3220ef5bd3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ea6021e832a937087583f9c1b1ca1f3220ef5bd3", "patch": "@@ -1,3 +1,12 @@\n+1998-08-28  Mark Mitchell  <mark@markmitchell.com>\n+\n+\t* cp-tree.h (finish_base_specifier): New function.\n+\t* parse.y (base_class): Use it.\n+\t* semantics.c (finish_base_specifier): Define it.\n+\n+\t* parse.y (structsp): Warn on use of typename outside of template\n+\tdeclarations. \n+\t\n 1998-08-27  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* lex.c (handle_cp_pragma): Remove #pragma vtable."}, {"sha": "8829b397fec6c6d29ec39086927066eff9595ea8", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea6021e832a937087583f9c1b1ca1f3220ef5bd3/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea6021e832a937087583f9c1b1ca1f3220ef5bd3/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=ea6021e832a937087583f9c1b1ca1f3220ef5bd3", "patch": "@@ -2943,6 +2943,7 @@ extern tree finish_member_class_template        PROTO((tree, tree));\n extern void finish_template_decl                PROTO((tree));\n extern tree finish_template_type                PROTO((tree, tree, int));\n extern void enter_scope_of                      PROTO((tree));\n+extern tree finish_base_specifier               PROTO((tree, tree, int));\n \n /* in sig.c */\n extern tree build_signature_pointer_type\tPROTO((tree, int, int));"}, {"sha": "f7fa3beeac8448ecb4795fc1ff040e9d1108dbad", "filename": "gcc/cp/parse.c", "status": "modified", "additions": 381, "deletions": 437, "changes": 818, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea6021e832a937087583f9c1b1ca1f3220ef5bd3/gcc%2Fcp%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea6021e832a937087583f9c1b1ca1f3220ef5bd3/gcc%2Fcp%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.c?ref=ea6021e832a937087583f9c1b1ca1f3220ef5bd3", "patch": "@@ -683,46 +683,46 @@ static const short yyrline[] = { 0,\n   1973,  1977,  1980,  1986,  1988,  1991,  1994,  1997,  2003,  2006,\n   2009,  2011,  2013,  2017,  2023,  2031,  2033,  2037,  2039,  2044,\n   2047,  2050,  2052,  2054,  2058,  2062,  2068,  2072,  2075,  2081,\n-  2085,  2088,  2091,  2095,  2107,  2109,  2112,  2132,  2134,  2137,\n-  2139,  2144,  2146,  2148,  2150,  2152,  2154,  2158,  2163,  2166,\n-  2168,  2172,  2178,  2183,  2188,  2190,  2194,  2199,  2202,  2209,\n-  2226,  2232,  2234,  2237,  2240,  2242,  2246,  2248,  2252,  2285,\n-  2321,  2324,  2325,  2346,  2369,  2371,  2375,  2386,  2400,  2405,\n-  2412,  2415,  2423,  2434,  2443,  2447,  2462,  2465,  2470,  2472,\n-  2474,  2476,  2478,  2480,  2483,  2485,  2489,  2495,  2497,  2500,\n-  2503,  2505,  2516,  2521,  2524,  2529,  2532,  2533,  2544,  2547,\n-  2548,  2559,  2561,  2564,  2566,  2569,  2576,  2584,  2591,  2597,\n-  2603,  2611,  2615,  2620,  2624,  2627,  2636,  2638,  2642,  2645,\n-  2650,  2654,  2660,  2671,  2674,  2678,  2682,  2690,  2695,  2701,\n-  2704,  2706,  2708,  2714,  2717,  2719,  2721,  2723,  2727,  2730,\n-  2748,  2758,  2760,  2761,  2765,  2770,  2773,  2775,  2777,  2779,\n-  2783,  2789,  2792,  2794,  2796,  2798,  2802,  2805,  2808,  2810,\n-  2812,  2814,  2818,  2821,  2824,  2826,  2828,  2830,  2832,  2839,\n-  2843,  2848,  2852,  2857,  2859,  2863,  2866,  2868,  2872,  2874,\n-  2875,  2878,  2880,  2882,  2888,  2903,  2909,  2915,  2929,  2931,\n-  2935,  2949,  2951,  2953,  2957,  2963,  2976,  2978,  2982,  2995,\n-  3001,  3003,  3004,  3005,  3013,  3018,  3027,  3028,  3032,  3035,\n-  3041,  3047,  3050,  3052,  3054,  3056,  3060,  3064,  3068,  3071,\n-  3076,  3079,  3081,  3083,  3085,  3087,  3089,  3091,  3093,  3097,\n-  3101,  3105,  3109,  3110,  3112,  3114,  3116,  3118,  3120,  3122,\n-  3124,  3126,  3134,  3136,  3137,  3138,  3141,  3147,  3149,  3154,\n-  3156,  3159,  3173,  3176,  3179,  3183,  3186,  3193,  3195,  3198,\n-  3200,  3202,  3205,  3208,  3211,  3214,  3216,  3219,  3223,  3225,\n-  3231,  3233,  3234,  3236,  3241,  3243,  3245,  3247,  3249,  3252,\n-  3253,  3255,  3258,  3259,  3262,  3262,  3265,  3265,  3268,  3268,\n-  3270,  3272,  3274,  3276,  3282,  3288,  3291,  3294,  3300,  3302,\n-  3304,  3308,  3310,  3311,  3312,  3314,  3317,  3324,  3329,  3337,\n-  3341,  3343,  3346,  3348,  3351,  3355,  3357,  3360,  3362,  3365,\n-  3382,  3388,  3396,  3398,  3400,  3404,  3407,  3408,  3416,  3420,\n-  3424,  3427,  3428,  3434,  3437,  3440,  3442,  3446,  3451,  3454,\n-  3464,  3469,  3470,  3477,  3480,  3483,  3485,  3488,  3490,  3500,\n-  3514,  3518,  3521,  3523,  3527,  3531,  3534,  3537,  3539,  3543,\n-  3545,  3552,  3559,  3562,  3565,  3569,  3573,  3579,  3583,  3588,\n-  3590,  3593,  3598,  3604,  3615,  3618,  3620,  3624,  3629,  3631,\n-  3638,  3641,  3643,  3645,  3651,  3656,  3659,  3661,  3663,  3665,\n-  3667,  3669,  3671,  3673,  3675,  3677,  3679,  3681,  3683,  3685,\n-  3687,  3689,  3691,  3693,  3695,  3697,  3699,  3701,  3703,  3705,\n-  3707,  3709,  3711,  3713,  3715,  3717,  3719,  3721,  3724,  3726\n+  2085,  2088,  2091,  2097,  2109,  2111,  2114,  2134,  2136,  2139,\n+  2141,  2146,  2148,  2150,  2152,  2154,  2156,  2160,  2165,  2168,\n+  2170,  2174,  2180,  2185,  2190,  2192,  2196,  2201,  2204,  2211,\n+  2228,  2234,  2236,  2239,  2242,  2244,  2248,  2250,  2254,  2259,\n+  2265,  2268,  2269,  2290,  2313,  2315,  2319,  2330,  2344,  2349,\n+  2356,  2359,  2367,  2378,  2387,  2391,  2406,  2409,  2414,  2416,\n+  2418,  2420,  2422,  2424,  2427,  2429,  2433,  2439,  2441,  2444,\n+  2447,  2449,  2460,  2465,  2468,  2473,  2476,  2477,  2488,  2491,\n+  2492,  2503,  2505,  2508,  2510,  2513,  2520,  2528,  2535,  2541,\n+  2547,  2555,  2559,  2564,  2568,  2571,  2580,  2582,  2586,  2589,\n+  2594,  2598,  2604,  2615,  2618,  2622,  2626,  2634,  2639,  2645,\n+  2648,  2650,  2652,  2658,  2661,  2663,  2665,  2667,  2671,  2674,\n+  2692,  2702,  2704,  2705,  2709,  2714,  2717,  2719,  2721,  2723,\n+  2727,  2733,  2736,  2738,  2740,  2742,  2746,  2749,  2752,  2754,\n+  2756,  2758,  2762,  2765,  2768,  2770,  2772,  2774,  2776,  2783,\n+  2787,  2792,  2796,  2801,  2803,  2807,  2810,  2812,  2816,  2818,\n+  2819,  2822,  2824,  2826,  2832,  2847,  2853,  2859,  2873,  2875,\n+  2879,  2893,  2895,  2897,  2901,  2907,  2920,  2922,  2926,  2939,\n+  2945,  2947,  2948,  2949,  2957,  2962,  2971,  2972,  2976,  2979,\n+  2985,  2991,  2994,  2996,  2998,  3000,  3004,  3008,  3012,  3015,\n+  3020,  3023,  3025,  3027,  3029,  3031,  3033,  3035,  3037,  3041,\n+  3045,  3049,  3053,  3054,  3056,  3058,  3060,  3062,  3064,  3066,\n+  3068,  3070,  3078,  3080,  3081,  3082,  3085,  3091,  3093,  3098,\n+  3100,  3103,  3117,  3120,  3123,  3127,  3130,  3137,  3139,  3142,\n+  3144,  3146,  3149,  3152,  3155,  3158,  3160,  3163,  3167,  3169,\n+  3175,  3177,  3178,  3180,  3185,  3187,  3189,  3191,  3193,  3196,\n+  3197,  3199,  3202,  3203,  3206,  3206,  3209,  3209,  3212,  3212,\n+  3214,  3216,  3218,  3220,  3226,  3232,  3235,  3238,  3244,  3246,\n+  3248,  3252,  3254,  3255,  3256,  3258,  3261,  3268,  3273,  3281,\n+  3285,  3287,  3290,  3292,  3295,  3299,  3301,  3304,  3306,  3309,\n+  3326,  3332,  3340,  3342,  3344,  3348,  3351,  3352,  3360,  3364,\n+  3368,  3371,  3372,  3378,  3381,  3384,  3386,  3390,  3395,  3398,\n+  3408,  3413,  3414,  3421,  3424,  3427,  3429,  3432,  3434,  3444,\n+  3458,  3462,  3465,  3467,  3471,  3475,  3478,  3481,  3483,  3487,\n+  3489,  3496,  3503,  3506,  3509,  3513,  3517,  3523,  3527,  3532,\n+  3534,  3537,  3542,  3548,  3559,  3562,  3564,  3568,  3573,  3575,\n+  3582,  3585,  3587,  3589,  3595,  3600,  3603,  3605,  3607,  3609,\n+  3611,  3613,  3615,  3617,  3619,  3621,  3623,  3625,  3627,  3629,\n+  3631,  3633,  3635,  3637,  3639,  3641,  3643,  3645,  3647,  3649,\n+  3651,  3653,  3655,  3657,  3659,  3661,  3663,  3665,  3668,  3670\n };\n #endif\n \n@@ -6014,10 +6014,12 @@ case 472:\n case 473:\n #line 2092 \"parse.y\"\n { yyval.ftype.t = yyvsp[0].ttype;\n-\t\t  yyval.ftype.new_type_flag = 0; ;\n+\t\t  yyval.ftype.new_type_flag = 0; \n+\t\t  if (!processing_template_decl)\n+\t\t    cp_pedwarn (\"using `typename' outside of template\"); ;\n     break;}\n case 474:\n-#line 2097 \"parse.y\"\n+#line 2099 \"parse.y\"\n { \n \t\t  int semi;\n \n@@ -6029,17 +6031,17 @@ case 474:\n \t\t;\n     break;}\n case 475:\n-#line 2107 \"parse.y\"\n+#line 2109 \"parse.y\"\n { finish_default_args (); ;\n     break;}\n case 476:\n-#line 2109 \"parse.y\"\n+#line 2111 \"parse.y\"\n { yyval.ftype.t = yyvsp[-3].ttype;\n \t\t  yyval.ftype.new_type_flag = 1; \n \t\t  begin_inline_definitions (); ;\n     break;}\n case 477:\n-#line 2113 \"parse.y\"\n+#line 2115 \"parse.y\"\n {\n \t\t  yyval.ftype.new_type_flag = 0;\n \t\t  if (TYPE_BINFO (yyvsp[0].ttype) == NULL_TREE)\n@@ -6059,93 +6061,93 @@ case 477:\n \t\t;\n     break;}\n case 481:\n-#line 2140 \"parse.y\"\n+#line 2142 \"parse.y\"\n { if (pedantic && !in_system_header)\n \t\t    pedwarn (\"comma at end of enumerator list\"); ;\n     break;}\n case 483:\n-#line 2147 \"parse.y\"\n+#line 2149 \"parse.y\"\n { error (\"storage class specifier `%s' not allowed after struct or class\", IDENTIFIER_POINTER (yyvsp[0].ttype)); ;\n     break;}\n case 484:\n-#line 2149 \"parse.y\"\n+#line 2151 \"parse.y\"\n { error (\"type specifier `%s' not allowed after struct or class\", IDENTIFIER_POINTER (yyvsp[0].ttype)); ;\n     break;}\n case 485:\n-#line 2151 \"parse.y\"\n+#line 2153 \"parse.y\"\n { error (\"type qualifier `%s' not allowed after struct or class\", IDENTIFIER_POINTER (yyvsp[0].ttype)); ;\n     break;}\n case 486:\n-#line 2153 \"parse.y\"\n+#line 2155 \"parse.y\"\n { error (\"no body nor ';' separates two class, struct or union declarations\"); ;\n     break;}\n case 487:\n-#line 2155 \"parse.y\"\n+#line 2157 \"parse.y\"\n { yyval.ttype = build_decl_list (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 488:\n-#line 2160 \"parse.y\"\n+#line 2162 \"parse.y\"\n { current_aggr = yyval.ttype; yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 489:\n-#line 2165 \"parse.y\"\n+#line 2167 \"parse.y\"\n { current_aggr = yyval.ttype; yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 490:\n-#line 2167 \"parse.y\"\n+#line 2169 \"parse.y\"\n { yyungetc ('{', 1); ;\n     break;}\n case 491:\n-#line 2169 \"parse.y\"\n+#line 2171 \"parse.y\"\n { yyungetc (':', 1); ;\n     break;}\n case 492:\n-#line 2174 \"parse.y\"\n+#line 2176 \"parse.y\"\n {\n \t\t  current_aggr = yyvsp[-2].ttype;\n \t\t  yyval.ttype = handle_class_head (yyvsp[-2].ttype, yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 493:\n-#line 2179 \"parse.y\"\n+#line 2181 \"parse.y\"\n {\n \t\t  current_aggr = yyvsp[-3].ttype;\n \t\t  yyval.ttype = handle_class_head (yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 494:\n-#line 2184 \"parse.y\"\n+#line 2186 \"parse.y\"\n {\n \t\t  current_aggr = yyvsp[-2].ttype;\n \t\t  yyval.ttype = handle_class_head (yyvsp[-2].ttype, NULL_TREE, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 495:\n-#line 2189 \"parse.y\"\n+#line 2191 \"parse.y\"\n { current_aggr = yyval.ttype; yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 496:\n-#line 2191 \"parse.y\"\n+#line 2193 \"parse.y\"\n { current_aggr = yyval.ttype; yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 497:\n-#line 2196 \"parse.y\"\n+#line 2198 \"parse.y\"\n { yyval.ttype = xref_tag (current_aggr, yyvsp[0].ttype, 0); ;\n     break;}\n case 498:\n-#line 2201 \"parse.y\"\n+#line 2203 \"parse.y\"\n { yyval.ttype = xref_tag (current_aggr, yyvsp[0].ttype, 1); ;\n     break;}\n case 499:\n-#line 2204 \"parse.y\"\n+#line 2206 \"parse.y\"\n { \n \t\t  yyval.ttype = yyvsp[-1].ttype;\n \t\t  if (yyvsp[0].ttype)\n                     xref_basetypes (current_aggr, yyvsp[-2].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); \n \t\t;\n     break;}\n case 500:\n-#line 2210 \"parse.y\"\n+#line 2212 \"parse.y\"\n { \n \t\t  yyval.ttype = TREE_TYPE (yyvsp[-1].ttype);\n \t\t  if (TREE_INT_CST_LOW (current_aggr) == union_type \n@@ -6162,102 +6164,44 @@ case 500:\n \t\t;\n     break;}\n case 501:\n-#line 2228 \"parse.y\"\n+#line 2230 \"parse.y\"\n { yyval.ttype = xref_tag (yyval.ttype, make_anon_name (), 0);\n \t\t  yyungetc ('{', 1); ;\n     break;}\n case 504:\n-#line 2239 \"parse.y\"\n+#line 2241 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 505:\n-#line 2241 \"parse.y\"\n+#line 2243 \"parse.y\"\n { yyungetc(':', 1); yyval.ttype = NULL_TREE; ;\n     break;}\n case 506:\n-#line 2243 \"parse.y\"\n+#line 2245 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 508:\n-#line 2249 \"parse.y\"\n+#line 2251 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 509:\n-#line 2254 \"parse.y\"\n-{\n-\t\t  tree type;\n-\t\t  if (yyvsp[0].ttype == NULL_TREE)\n-\t\t    {\n-\t\t      error (\"invalid base class\");\n-\t\t      type = error_mark_node;\n-\t\t    }\n-\t\t  else\n-\t\t    type = TREE_TYPE (yyvsp[0].ttype);\n-\t\t  if (! is_aggr_type (type, 1))\n-\t\t    yyval.ttype = NULL_TREE;\n-\t\t  else if (current_aggr == signature_type_node\n-\t\t\t   && (! type) && (! IS_SIGNATURE (type)))\n-\t\t    {\n-\t\t      error (\"class name not allowed as base signature\");\n-\t\t      yyval.ttype = NULL_TREE;\n-\t\t    }\n-\t\t  else if (current_aggr == signature_type_node)\n-\t\t    {\n-\t\t      sorry (\"signature inheritance, base type `%s' ignored\",\n-\t\t\t     IDENTIFIER_POINTER (yyval.ttype));\n-\t\t      yyval.ttype = build_tree_list (access_public_node, type);\n-\t\t    }\n-\t\t  else if (type && IS_SIGNATURE (type))\n-\t\t    {\n-\t\t      error (\"signature name not allowed as base class\");\n-\t\t      yyval.ttype = NULL_TREE;\n-\t\t    }\n-\t\t  else\n-\t\t    yyval.ttype = build_tree_list (access_default_node, type);\n-\t\t;\n+#line 2256 \"parse.y\"\n+{ yyval.ttype = finish_base_specifier (access_default_node, yyvsp[0].ttype,\n+\t\t\t\t\t      current_aggr \n+\t\t\t\t\t      == signature_type_node); ;\n     break;}\n case 510:\n-#line 2286 \"parse.y\"\n-{\n-\t\t  tree type;\n-\t\t  if (yyvsp[0].ttype == NULL_TREE)\n-\t\t    {\n-\t\t      error (\"invalid base class\");\n-\t\t      type = error_mark_node;\n-\t\t    }\n-\t\t  else\n-\t\t    type = TREE_TYPE (yyvsp[0].ttype);\n-\t\t  if (current_aggr == signature_type_node)\n-\t\t    error (\"access and source specifiers not allowed in signature\");\n-\t\t  if (! is_aggr_type (type, 1))\n-\t\t    yyval.ttype = NULL_TREE;\n-\t\t  else if (current_aggr == signature_type_node\n-\t\t\t   && (! type) && (! IS_SIGNATURE (type)))\n-\t\t    {\n-\t\t      error (\"class name not allowed as base signature\");\n-\t\t      yyval.ttype = NULL_TREE;\n-\t\t    }\n-\t\t  else if (current_aggr == signature_type_node)\n-\t\t    {\n-\t\t      sorry (\"signature inheritance, base type `%s' ignored\",\n-\t\t\t     IDENTIFIER_POINTER (yyval.ttype));\n-\t\t      yyval.ttype = build_tree_list (access_public_node, type);\n-\t\t    }\n-\t\t  else if (type && IS_SIGNATURE (type))\n-\t\t    {\n-\t\t      error (\"signature name not allowed as base class\");\n-\t\t      yyval.ttype = NULL_TREE;\n-\t\t    }\n-\t\t  else\n-\t\t    yyval.ttype = build_tree_list (yyval.ttype, type);\n-\t\t;\n+#line 2260 \"parse.y\"\n+{ yyval.ttype = finish_base_specifier (yyvsp[-2].ttype, yyvsp[0].ttype, \n+\t\t\t\t\t      current_aggr \n+\t\t\t\t\t      == signature_type_node); ;\n     break;}\n case 511:\n-#line 2323 \"parse.y\"\n+#line 2267 \"parse.y\"\n { yyval.ttype = TYPE_MAIN_DECL (yyvsp[0].ttype); ;\n     break;}\n case 513:\n-#line 2326 \"parse.y\"\n+#line 2270 \"parse.y\"\n {\n \t\t  if (current_aggr == signature_type_node)\n \t\t    {\n@@ -6280,7 +6224,7 @@ case 513:\n \t\t;\n     break;}\n case 514:\n-#line 2347 \"parse.y\"\n+#line 2291 \"parse.y\"\n {\n \t\t  if (current_aggr == signature_type_node)\n \t\t    {\n@@ -6303,13 +6247,13 @@ case 514:\n \t\t;\n     break;}\n case 516:\n-#line 2372 \"parse.y\"\n+#line 2316 \"parse.y\"\n { if (yyvsp[-1].ttype != ridpointers[(int)RID_VIRTUAL])\n \t\t    cp_error (\"`%D' access\", yyvsp[-1].ttype);\n \t\t  yyval.ttype = access_default_virtual_node; ;\n     break;}\n case 517:\n-#line 2376 \"parse.y\"\n+#line 2320 \"parse.y\"\n {\n \t\t  if (yyvsp[-2].ttype != access_default_virtual_node)\n \t\t    error (\"multiple access specifiers\");\n@@ -6322,7 +6266,7 @@ case 517:\n \t\t;\n     break;}\n case 518:\n-#line 2387 \"parse.y\"\n+#line 2331 \"parse.y\"\n { if (yyvsp[-1].ttype != ridpointers[(int)RID_VIRTUAL])\n \t\t    cp_error (\"`%D' access\", yyvsp[-1].ttype);\n \t\t  else if (yyval.ttype == access_public_node)\n@@ -6336,21 +6280,21 @@ case 518:\n \t\t;\n     break;}\n case 519:\n-#line 2402 \"parse.y\"\n+#line 2346 \"parse.y\"\n { yyvsp[-1].ttype = begin_class_definition (yyvsp[-1].ttype); ;\n     break;}\n case 520:\n-#line 2407 \"parse.y\"\n+#line 2351 \"parse.y\"\n {\n \t\t    yyval.ttype = build_self_reference ();\n \t\t;\n     break;}\n case 521:\n-#line 2414 \"parse.y\"\n+#line 2358 \"parse.y\"\n { if (yyval.ttype) yyval.ttype = build_tree_list (access_public_node, yyval.ttype); ;\n     break;}\n case 522:\n-#line 2416 \"parse.y\"\n+#line 2360 \"parse.y\"\n {\n \t\t  if (current_aggr == signature_type_node)\n \t\t    yyval.ttype = build_tree_list (access_public_node, yyvsp[0].ttype);\n@@ -6360,7 +6304,7 @@ case 522:\n \t\t;\n     break;}\n case 523:\n-#line 2424 \"parse.y\"\n+#line 2368 \"parse.y\"\n {\n \t\t  tree visspec = yyvsp[-2].ttype;\n \n@@ -6373,19 +6317,19 @@ case 523:\n \t\t;\n     break;}\n case 524:\n-#line 2435 \"parse.y\"\n+#line 2379 \"parse.y\"\n {\n \t\t  if (current_aggr == signature_type_node)\n \t\t    error (\"access specifier not allowed in signature\");\n \t\t;\n     break;}\n case 525:\n-#line 2445 \"parse.y\"\n+#line 2389 \"parse.y\"\n { if (yyval.ttype == void_type_node) yyval.ttype = NULL_TREE; \n \t\t;\n     break;}\n case 526:\n-#line 2448 \"parse.y\"\n+#line 2392 \"parse.y\"\n { /* In pushdecl, we created a reverse list of names\n \t\t     in this binding level.  Make sure that the chain\n \t\t     of what we're trying to add isn't the item itself\n@@ -6400,95 +6344,95 @@ case 526:\n \t\t;\n     break;}\n case 527:\n-#line 2464 \"parse.y\"\n+#line 2408 \"parse.y\"\n { ;\n     break;}\n case 528:\n-#line 2466 \"parse.y\"\n+#line 2410 \"parse.y\"\n { error (\"missing ';' before right brace\");\n \t\t  yyungetc ('}', 0); ;\n     break;}\n case 529:\n-#line 2471 \"parse.y\"\n+#line 2415 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 530:\n-#line 2473 \"parse.y\"\n+#line 2417 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 531:\n-#line 2475 \"parse.y\"\n+#line 2419 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 532:\n-#line 2477 \"parse.y\"\n+#line 2421 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 533:\n-#line 2479 \"parse.y\"\n+#line 2423 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 534:\n-#line 2481 \"parse.y\"\n+#line 2425 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  pedantic = yyvsp[-1].itype; ;\n     break;}\n case 535:\n-#line 2484 \"parse.y\"\n+#line 2428 \"parse.y\"\n { yyval.ttype = finish_member_template_decl (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 536:\n-#line 2486 \"parse.y\"\n+#line 2430 \"parse.y\"\n { yyval.ttype = finish_member_class_template (yyvsp[-2].ttype, yyvsp[-1].ftype.t); ;\n     break;}\n case 537:\n-#line 2494 \"parse.y\"\n+#line 2438 \"parse.y\"\n { yyval.ttype = grok_x_components (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 538:\n-#line 2496 \"parse.y\"\n+#line 2440 \"parse.y\"\n { yyval.ttype = grok_x_components (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 539:\n-#line 2498 \"parse.y\"\n+#line 2442 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, NULL_TREE, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, NULL_TREE)); ;\n     break;}\n case 540:\n-#line 2501 \"parse.y\"\n+#line 2445 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, NULL_TREE, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, NULL_TREE)); ;\n     break;}\n case 541:\n-#line 2504 \"parse.y\"\n+#line 2448 \"parse.y\"\n { yyval.ttype = grokbitfield (NULL_TREE, NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 542:\n-#line 2506 \"parse.y\"\n+#line 2450 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 543:\n-#line 2517 \"parse.y\"\n+#line 2461 \"parse.y\"\n { tree specs, attrs;\n \t\t  split_specs_attrs (yyvsp[-4].ttype, &specs, &attrs);\n \t\t  yyval.ttype = grokfield (yyvsp[-3].ttype, specs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, attrs)); ;\n     break;}\n case 544:\n-#line 2522 \"parse.y\"\n+#line 2466 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, NULL_TREE, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, NULL_TREE)); ;\n     break;}\n case 545:\n-#line 2525 \"parse.y\"\n+#line 2469 \"parse.y\"\n { yyval.ttype = do_class_using_decl (yyvsp[0].ttype); ;\n     break;}\n case 546:\n-#line 2531 \"parse.y\"\n+#line 2475 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 548:\n-#line 2534 \"parse.y\"\n+#line 2478 \"parse.y\"\n {\n \t\t  /* In this context, void_type_node encodes\n \t\t     friends.  They have been recorded elsewhere.  */\n@@ -6499,11 +6443,11 @@ case 548:\n \t\t;\n     break;}\n case 549:\n-#line 2546 \"parse.y\"\n+#line 2490 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 551:\n-#line 2549 \"parse.y\"\n+#line 2493 \"parse.y\"\n {\n \t\t  /* In this context, void_type_node encodes\n \t\t     friends.  They have been recorded elsewhere.  */\n@@ -6514,102 +6458,102 @@ case 551:\n \t\t;\n     break;}\n case 556:\n-#line 2571 \"parse.y\"\n+#line 2515 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 557:\n-#line 2577 \"parse.y\"\n+#line 2521 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 558:\n-#line 2586 \"parse.y\"\n+#line 2530 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 559:\n-#line 2592 \"parse.y\"\n+#line 2536 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 560:\n-#line 2598 \"parse.y\"\n+#line 2542 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 561:\n-#line 2604 \"parse.y\"\n+#line 2548 \"parse.y\"\n { split_specs_attrs (yyvsp[-3].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-3].ttype = current_declspecs;\n \t\t  yyval.ttype = grokbitfield (NULL_TREE, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 562:\n-#line 2613 \"parse.y\"\n+#line 2557 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 563:\n-#line 2616 \"parse.y\"\n+#line 2560 \"parse.y\"\n { yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 564:\n-#line 2622 \"parse.y\"\n+#line 2566 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 565:\n-#line 2625 \"parse.y\"\n+#line 2569 \"parse.y\"\n { yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 566:\n-#line 2628 \"parse.y\"\n+#line 2572 \"parse.y\"\n { yyval.ttype = grokbitfield (NULL_TREE, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 568:\n-#line 2639 \"parse.y\"\n+#line 2583 \"parse.y\"\n { TREE_CHAIN (yyvsp[0].ttype) = yyval.ttype; yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 569:\n-#line 2644 \"parse.y\"\n+#line 2588 \"parse.y\"\n { yyval.ttype = build_enumerator (yyval.ttype, NULL_TREE); ;\n     break;}\n case 570:\n-#line 2646 \"parse.y\"\n+#line 2590 \"parse.y\"\n { yyval.ttype = build_enumerator (yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 571:\n-#line 2652 \"parse.y\"\n+#line 2596 \"parse.y\"\n { yyval.ftype.t = build_decl_list (yyvsp[-1].ftype.t, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 572:\n-#line 2655 \"parse.y\"\n+#line 2599 \"parse.y\"\n { yyval.ftype.t = build_decl_list (yyvsp[0].ftype.t, NULL_TREE); \n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag; ;\n     break;}\n case 573:\n-#line 2662 \"parse.y\"\n+#line 2606 \"parse.y\"\n {\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids array dimensions with parenthesized type in new\");\n@@ -6619,71 +6563,71 @@ case 573:\n \t\t;\n     break;}\n case 574:\n-#line 2673 \"parse.y\"\n+#line 2617 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 575:\n-#line 2675 \"parse.y\"\n+#line 2619 \"parse.y\"\n { yyval.ttype = decl_tree_cons (NULL_TREE, yyvsp[0].ttype, yyval.ttype); ;\n     break;}\n case 576:\n-#line 2680 \"parse.y\"\n+#line 2624 \"parse.y\"\n { yyval.ftype.t = IDENTIFIER_AS_LIST (yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 577:\n-#line 2683 \"parse.y\"\n+#line 2627 \"parse.y\"\n { yyval.ftype.t = decl_tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ftype.t); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 578:\n-#line 2692 \"parse.y\"\n+#line 2636 \"parse.y\"\n { yyval.itype = suspend_momentary (); ;\n     break;}\n case 579:\n-#line 2697 \"parse.y\"\n+#line 2641 \"parse.y\"\n { resume_momentary ((int) yyvsp[-1].itype); yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 580:\n-#line 2703 \"parse.y\"\n+#line 2647 \"parse.y\"\n { resume_momentary ((int) yyvsp[-3].itype); yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 581:\n-#line 2705 \"parse.y\"\n+#line 2649 \"parse.y\"\n { resume_momentary ((int) yyvsp[-3].itype); yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 582:\n-#line 2707 \"parse.y\"\n+#line 2651 \"parse.y\"\n { resume_momentary ((int) yyvsp[-1].itype); yyval.ttype = empty_parms (); ;\n     break;}\n case 583:\n-#line 2709 \"parse.y\"\n+#line 2653 \"parse.y\"\n { resume_momentary ((int) yyvsp[-3].itype); yyval.ttype = NULL_TREE; ;\n     break;}\n case 584:\n-#line 2716 \"parse.y\"\n+#line 2660 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 585:\n-#line 2718 \"parse.y\"\n+#line 2662 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 586:\n-#line 2720 \"parse.y\"\n+#line 2664 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 587:\n-#line 2722 \"parse.y\"\n+#line 2666 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 588:\n-#line 2724 \"parse.y\"\n+#line 2668 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 590:\n-#line 2732 \"parse.y\"\n+#line 2676 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    {\n@@ -6702,7 +6646,7 @@ case 590:\n \t\t;\n     break;}\n case 591:\n-#line 2749 \"parse.y\"\n+#line 2693 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = IDENTIFIER_GLOBAL_VALUE (yyvsp[0].ttype);\n@@ -6712,152 +6656,152 @@ case 591:\n \t\t;\n     break;}\n case 594:\n-#line 2762 \"parse.y\"\n+#line 2706 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 595:\n-#line 2767 \"parse.y\"\n+#line 2711 \"parse.y\"\n { yyval.ttype = get_type_decl (yyvsp[0].ttype); ;\n     break;}\n case 596:\n-#line 2772 \"parse.y\"\n+#line 2716 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, yyvsp[-2].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 597:\n-#line 2774 \"parse.y\"\n+#line 2718 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 598:\n-#line 2776 \"parse.y\"\n+#line 2720 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, NULL_TREE); ;\n     break;}\n case 599:\n-#line 2778 \"parse.y\"\n+#line 2722 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 600:\n-#line 2780 \"parse.y\"\n+#line 2724 \"parse.y\"\n { push_nested_class (yyvsp[-1].ttype, 3);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyval.ttype, yyvsp[0].ttype);\n \t\t  TREE_COMPLEXITY (yyval.ttype) = current_class_depth; ;\n     break;}\n case 602:\n-#line 2791 \"parse.y\"\n+#line 2735 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 603:\n-#line 2793 \"parse.y\"\n+#line 2737 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 604:\n-#line 2795 \"parse.y\"\n+#line 2739 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 605:\n-#line 2797 \"parse.y\"\n+#line 2741 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 606:\n-#line 2799 \"parse.y\"\n+#line 2743 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 608:\n-#line 2807 \"parse.y\"\n+#line 2751 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 609:\n-#line 2809 \"parse.y\"\n+#line 2753 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 610:\n-#line 2811 \"parse.y\"\n+#line 2755 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 611:\n-#line 2813 \"parse.y\"\n+#line 2757 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 612:\n-#line 2815 \"parse.y\"\n+#line 2759 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 614:\n-#line 2823 \"parse.y\"\n+#line 2767 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, yyvsp[-2].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 615:\n-#line 2825 \"parse.y\"\n+#line 2769 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 616:\n-#line 2827 \"parse.y\"\n+#line 2771 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 617:\n-#line 2829 \"parse.y\"\n+#line 2773 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, NULL_TREE); ;\n     break;}\n case 618:\n-#line 2831 \"parse.y\"\n+#line 2775 \"parse.y\"\n { enter_scope_of (yyvsp[0].ttype); ;\n     break;}\n case 619:\n-#line 2833 \"parse.y\"\n+#line 2777 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  enter_scope_of (yyval.ttype);\n \t\t;\n     break;}\n case 620:\n-#line 2841 \"parse.y\"\n+#line 2785 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 621:\n-#line 2844 \"parse.y\"\n+#line 2788 \"parse.y\"\n { got_scope = NULL_TREE;\n  \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 622:\n-#line 2850 \"parse.y\"\n+#line 2794 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 623:\n-#line 2853 \"parse.y\"\n+#line 2797 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 625:\n-#line 2860 \"parse.y\"\n+#line 2804 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 626:\n-#line 2865 \"parse.y\"\n+#line 2809 \"parse.y\"\n { yyval.ttype = build_functional_cast (yyvsp[-3].ftype.t, yyvsp[-1].ttype); ;\n     break;}\n case 627:\n-#line 2867 \"parse.y\"\n+#line 2811 \"parse.y\"\n { yyval.ttype = reparse_decl_as_expr (yyvsp[-3].ftype.t, yyvsp[-1].ttype); ;\n     break;}\n case 628:\n-#line 2869 \"parse.y\"\n+#line 2813 \"parse.y\"\n { yyval.ttype = reparse_absdcl_as_expr (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 633:\n-#line 2881 \"parse.y\"\n+#line 2825 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 634:\n-#line 2883 \"parse.y\"\n+#line 2827 \"parse.y\"\n { got_scope = yyval.ttype = make_typename_type (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 635:\n-#line 2890 \"parse.y\"\n+#line 2834 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) == IDENTIFIER_NODE)\n \t\t    {\n@@ -6873,31 +6817,31 @@ case 635:\n \t\t;\n     break;}\n case 636:\n-#line 2904 \"parse.y\"\n+#line 2848 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype = TREE_TYPE (yyval.ttype);\n \t\t;\n     break;}\n case 637:\n-#line 2910 \"parse.y\"\n+#line 2854 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyval.ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype;\n \t\t;\n     break;}\n case 638:\n-#line 2916 \"parse.y\"\n+#line 2860 \"parse.y\"\n { got_scope = yyval.ttype = complete_type (TREE_TYPE (yyvsp[-1].ttype)); ;\n     break;}\n case 640:\n-#line 2932 \"parse.y\"\n+#line 2876 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 641:\n-#line 2937 \"parse.y\"\n+#line 2881 \"parse.y\"\n {\n \t\t  if (TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype)) == 't')\n \t\t    yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype);\n@@ -6912,26 +6856,26 @@ case 641:\n \t\t;\n     break;}\n case 642:\n-#line 2950 \"parse.y\"\n+#line 2894 \"parse.y\"\n { yyval.ttype = TREE_TYPE (yyvsp[0].ttype); ;\n     break;}\n case 643:\n-#line 2952 \"parse.y\"\n+#line 2896 \"parse.y\"\n { yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 644:\n-#line 2954 \"parse.y\"\n+#line 2898 \"parse.y\"\n { yyval.ttype = make_typename_type (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 645:\n-#line 2959 \"parse.y\"\n+#line 2903 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    cp_error (\"`%T' is not a class or namespace\", yyvsp[0].ttype);\n \t\t;\n     break;}\n case 646:\n-#line 2964 \"parse.y\"\n+#line 2908 \"parse.y\"\n {\n \t\t  if (TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype)) == 't')\n \t\t    yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype);\n@@ -6946,15 +6890,15 @@ case 646:\n \t\t;\n     break;}\n case 647:\n-#line 2977 \"parse.y\"\n+#line 2921 \"parse.y\"\n { got_scope = yyval.ttype = make_typename_type (yyvsp[-2].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 648:\n-#line 2979 \"parse.y\"\n+#line 2923 \"parse.y\"\n { got_scope = yyval.ttype = make_typename_type (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 649:\n-#line 2984 \"parse.y\"\n+#line 2928 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) != IDENTIFIER_NODE)\n \t\t    yyvsp[-1].ttype = lastiddecl;\n@@ -6968,31 +6912,31 @@ case 649:\n \t\t;\n     break;}\n case 650:\n-#line 2996 \"parse.y\"\n+#line 2940 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) != IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype = complete_type (TREE_TYPE (yyval.ttype));\n \t\t;\n     break;}\n case 651:\n-#line 3002 \"parse.y\"\n+#line 2946 \"parse.y\"\n { got_scope = yyval.ttype = complete_type (TREE_TYPE (yyval.ttype)); ;\n     break;}\n case 654:\n-#line 3006 \"parse.y\"\n+#line 2950 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyval.ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype;\n \t\t;\n     break;}\n case 655:\n-#line 3015 \"parse.y\"\n+#line 2959 \"parse.y\"\n { yyval.ttype = build_min_nt (TEMPLATE_ID_EXPR, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 656:\n-#line 3020 \"parse.y\"\n+#line 2964 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = IDENTIFIER_GLOBAL_VALUE (yyvsp[0].ttype);\n@@ -7002,148 +6946,148 @@ case 656:\n \t\t;\n     break;}\n case 658:\n-#line 3029 \"parse.y\"\n+#line 2973 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 659:\n-#line 3034 \"parse.y\"\n+#line 2978 \"parse.y\"\n { got_scope = NULL_TREE; ;\n     break;}\n case 660:\n-#line 3036 \"parse.y\"\n+#line 2980 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; got_scope = NULL_TREE; ;\n     break;}\n case 661:\n-#line 3043 \"parse.y\"\n+#line 2987 \"parse.y\"\n { got_scope = void_type_node; ;\n     break;}\n case 662:\n-#line 3049 \"parse.y\"\n+#line 2993 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 663:\n-#line 3051 \"parse.y\"\n+#line 2995 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 664:\n-#line 3053 \"parse.y\"\n+#line 2997 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 665:\n-#line 3055 \"parse.y\"\n+#line 2999 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 666:\n-#line 3057 \"parse.y\"\n+#line 3001 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, arg);\n \t\t;\n     break;}\n case 667:\n-#line 3061 \"parse.y\"\n+#line 3005 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 669:\n-#line 3070 \"parse.y\"\n+#line 3014 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 670:\n-#line 3072 \"parse.y\"\n+#line 3016 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 671:\n-#line 3078 \"parse.y\"\n+#line 3022 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 672:\n-#line 3080 \"parse.y\"\n+#line 3024 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 673:\n-#line 3082 \"parse.y\"\n+#line 3026 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ftype.t, NULL_TREE); ;\n     break;}\n case 674:\n-#line 3084 \"parse.y\"\n+#line 3028 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, NULL_TREE); ;\n     break;}\n case 675:\n-#line 3086 \"parse.y\"\n+#line 3030 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 676:\n-#line 3088 \"parse.y\"\n+#line 3032 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 677:\n-#line 3090 \"parse.y\"\n+#line 3034 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[0].ftype.t, NULL_TREE); ;\n     break;}\n case 678:\n-#line 3092 \"parse.y\"\n+#line 3036 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, NULL_TREE); ;\n     break;}\n case 679:\n-#line 3094 \"parse.y\"\n+#line 3038 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, arg);\n \t\t;\n     break;}\n case 680:\n-#line 3098 \"parse.y\"\n+#line 3042 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 682:\n-#line 3107 \"parse.y\"\n+#line 3051 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 684:\n-#line 3111 \"parse.y\"\n+#line 3055 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 685:\n-#line 3113 \"parse.y\"\n+#line 3057 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, empty_parms (), yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 686:\n-#line 3115 \"parse.y\"\n+#line 3059 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 687:\n-#line 3117 \"parse.y\"\n+#line 3061 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, NULL_TREE); ;\n     break;}\n case 688:\n-#line 3119 \"parse.y\"\n+#line 3063 \"parse.y\"\n { yyval.ttype = make_call_declarator (NULL_TREE, yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 689:\n-#line 3121 \"parse.y\"\n+#line 3065 \"parse.y\"\n { set_quals_and_spec (yyval.ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 690:\n-#line 3123 \"parse.y\"\n+#line 3067 \"parse.y\"\n { set_quals_and_spec (yyval.ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 691:\n-#line 3125 \"parse.y\"\n+#line 3069 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 692:\n-#line 3127 \"parse.y\"\n+#line 3071 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, NULL_TREE); ;\n     break;}\n case 699:\n-#line 3150 \"parse.y\"\n+#line 3094 \"parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids label declarations\"); ;\n     break;}\n case 702:\n-#line 3161 \"parse.y\"\n+#line 3105 \"parse.y\"\n { tree link;\n \t\t  for (link = yyvsp[-1].ttype; link; link = TREE_CHAIN (link))\n \t\t    {\n@@ -7154,225 +7098,225 @@ case 702:\n \t\t;\n     break;}\n case 703:\n-#line 3175 \"parse.y\"\n+#line 3119 \"parse.y\"\n {;\n     break;}\n case 705:\n-#line 3181 \"parse.y\"\n+#line 3125 \"parse.y\"\n { yyval.ttype = begin_compound_stmt (0); ;\n     break;}\n case 706:\n-#line 3183 \"parse.y\"\n+#line 3127 \"parse.y\"\n { yyval.ttype = finish_compound_stmt (0, yyvsp[-1].ttype); ;\n     break;}\n case 707:\n-#line 3188 \"parse.y\"\n+#line 3132 \"parse.y\"\n {\n \t\t  yyval.ttype = begin_if_stmt ();\n \t\t  cond_stmt_keyword = \"if\";\n \t\t;\n     break;}\n case 708:\n-#line 3193 \"parse.y\"\n+#line 3137 \"parse.y\"\n { finish_if_stmt_cond (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 709:\n-#line 3195 \"parse.y\"\n+#line 3139 \"parse.y\"\n { yyval.ttype = finish_then_clause (yyvsp[-3].ttype); ;\n     break;}\n case 711:\n-#line 3200 \"parse.y\"\n+#line 3144 \"parse.y\"\n { yyval.ttype = begin_compound_stmt (0); ;\n     break;}\n case 712:\n-#line 3202 \"parse.y\"\n+#line 3146 \"parse.y\"\n { yyval.ttype = finish_compound_stmt (0, yyvsp[-1].ttype); ;\n     break;}\n case 713:\n-#line 3207 \"parse.y\"\n+#line 3151 \"parse.y\"\n {;\n     break;}\n case 715:\n-#line 3213 \"parse.y\"\n+#line 3157 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 716:\n-#line 3215 \"parse.y\"\n+#line 3159 \"parse.y\"\n { finish_expr_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 717:\n-#line 3217 \"parse.y\"\n+#line 3161 \"parse.y\"\n { begin_else_clause (); ;\n     break;}\n case 718:\n-#line 3219 \"parse.y\"\n+#line 3163 \"parse.y\"\n { \n \t\t  finish_else_clause (yyvsp[-3].ttype); \n \t\t  finish_if_stmt ();\n \t\t;\n     break;}\n case 719:\n-#line 3224 \"parse.y\"\n+#line 3168 \"parse.y\"\n { finish_if_stmt (); ;\n     break;}\n case 720:\n-#line 3226 \"parse.y\"\n+#line 3170 \"parse.y\"\n {\n \t\t  yyval.ttype = begin_while_stmt ();\n \t\t  cond_stmt_keyword = \"while\";\n \t\t;\n     break;}\n case 721:\n-#line 3231 \"parse.y\"\n+#line 3175 \"parse.y\"\n { finish_while_stmt_cond (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 722:\n-#line 3233 \"parse.y\"\n+#line 3177 \"parse.y\"\n { finish_while_stmt (yyvsp[-3].ttype); ;\n     break;}\n case 723:\n-#line 3235 \"parse.y\"\n+#line 3179 \"parse.y\"\n { yyval.ttype = begin_do_stmt (); ;\n     break;}\n case 724:\n-#line 3237 \"parse.y\"\n+#line 3181 \"parse.y\"\n {\n \t\t  finish_do_body (yyvsp[-2].ttype);\n \t\t  cond_stmt_keyword = \"do\";\n \t\t;\n     break;}\n case 725:\n-#line 3242 \"parse.y\"\n+#line 3186 \"parse.y\"\n { finish_do_stmt (yyvsp[-1].ttype, yyvsp[-5].ttype); ;\n     break;}\n case 726:\n-#line 3244 \"parse.y\"\n+#line 3188 \"parse.y\"\n { yyval.ttype = begin_for_stmt (); ;\n     break;}\n case 727:\n-#line 3246 \"parse.y\"\n+#line 3190 \"parse.y\"\n { finish_for_init_stmt (yyvsp[-2].ttype); ;\n     break;}\n case 728:\n-#line 3248 \"parse.y\"\n+#line 3192 \"parse.y\"\n { finish_for_cond (yyvsp[-1].ttype, yyvsp[-5].ttype); ;\n     break;}\n case 729:\n-#line 3250 \"parse.y\"\n+#line 3194 \"parse.y\"\n { finish_for_expr (yyvsp[-1].ttype, yyvsp[-8].ttype); ;\n     break;}\n case 730:\n-#line 3252 \"parse.y\"\n+#line 3196 \"parse.y\"\n { finish_for_stmt (yyvsp[-3].ttype, yyvsp[-10].ttype); ;\n     break;}\n case 731:\n-#line 3254 \"parse.y\"\n+#line 3198 \"parse.y\"\n { begin_switch_stmt (); ;\n     break;}\n case 732:\n-#line 3256 \"parse.y\"\n+#line 3200 \"parse.y\"\n { yyval.ttype = finish_switch_cond (yyvsp[-1].ttype); ;\n     break;}\n case 733:\n-#line 3258 \"parse.y\"\n+#line 3202 \"parse.y\"\n { finish_switch_stmt (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 734:\n-#line 3260 \"parse.y\"\n+#line 3204 \"parse.y\"\n { finish_case_label (yyvsp[-1].ttype, NULL_TREE); ;\n     break;}\n case 736:\n-#line 3263 \"parse.y\"\n+#line 3207 \"parse.y\"\n { finish_case_label (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 738:\n-#line 3266 \"parse.y\"\n+#line 3210 \"parse.y\"\n { finish_case_label (NULL_TREE, NULL_TREE); ;\n     break;}\n case 740:\n-#line 3269 \"parse.y\"\n+#line 3213 \"parse.y\"\n { finish_break_stmt (); ;\n     break;}\n case 741:\n-#line 3271 \"parse.y\"\n+#line 3215 \"parse.y\"\n { finish_continue_stmt (); ;\n     break;}\n case 742:\n-#line 3273 \"parse.y\"\n+#line 3217 \"parse.y\"\n { finish_return_stmt (NULL_TREE); ;\n     break;}\n case 743:\n-#line 3275 \"parse.y\"\n+#line 3219 \"parse.y\"\n { finish_return_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 744:\n-#line 3277 \"parse.y\"\n+#line 3221 \"parse.y\"\n { \n \t\t  finish_asm_stmt (yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE, NULL_TREE,\n \t\t\t\t   NULL_TREE); \n \t\t;\n     break;}\n case 745:\n-#line 3283 \"parse.y\"\n+#line 3227 \"parse.y\"\n { \n \t\t  finish_asm_stmt (yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE,\n \t\t\t\t   NULL_TREE); \n \t\t;\n     break;}\n case 746:\n-#line 3289 \"parse.y\"\n+#line 3233 \"parse.y\"\n { finish_asm_stmt (yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 747:\n-#line 3293 \"parse.y\"\n+#line 3237 \"parse.y\"\n { finish_asm_stmt (yyvsp[-10].ttype, yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype); ;\n     break;}\n case 748:\n-#line 3295 \"parse.y\"\n+#line 3239 \"parse.y\"\n { \n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids computed gotos\");\n \t\t  finish_goto_stmt (yyvsp[-1].ttype);\n \t\t;\n     break;}\n case 749:\n-#line 3301 \"parse.y\"\n+#line 3245 \"parse.y\"\n { finish_goto_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 750:\n-#line 3303 \"parse.y\"\n+#line 3247 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 751:\n-#line 3305 \"parse.y\"\n+#line 3249 \"parse.y\"\n { error (\"label must be followed by statement\");\n \t\t  yyungetc ('}', 0);\n \t\t  finish_stmt (); ;\n     break;}\n case 752:\n-#line 3309 \"parse.y\"\n+#line 3253 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 755:\n-#line 3313 \"parse.y\"\n+#line 3257 \"parse.y\"\n { do_local_using_decl (yyvsp[0].ttype); ;\n     break;}\n case 757:\n-#line 3319 \"parse.y\"\n+#line 3263 \"parse.y\"\n {\n \t\t  if (! current_function_parms_stored)\n \t\t    store_parm_decls ();\n \t\t  expand_start_early_try_stmts ();\n \t\t;\n     break;}\n case 758:\n-#line 3325 \"parse.y\"\n+#line 3269 \"parse.y\"\n { \n                   expand_start_all_catch (); \n                 ;\n     break;}\n case 759:\n-#line 3329 \"parse.y\"\n+#line 3273 \"parse.y\"\n {\n \t\t  int nested = (hack_decl_function_context\n \t\t\t\t(current_function_decl) != NULL_TREE);\n@@ -7381,41 +7325,41 @@ case 759:\n \t\t;\n     break;}\n case 760:\n-#line 3339 \"parse.y\"\n+#line 3283 \"parse.y\"\n { yyval.ttype = begin_try_block (); ;\n     break;}\n case 761:\n-#line 3341 \"parse.y\"\n+#line 3285 \"parse.y\"\n { finish_try_block (yyvsp[-1].ttype); ;\n     break;}\n case 762:\n-#line 3343 \"parse.y\"\n+#line 3287 \"parse.y\"\n { finish_handler_sequence (yyvsp[-3].ttype); ;\n     break;}\n case 765:\n-#line 3353 \"parse.y\"\n+#line 3297 \"parse.y\"\n { yyval.ttype = begin_handler(); ;\n     break;}\n case 766:\n-#line 3355 \"parse.y\"\n+#line 3299 \"parse.y\"\n { finish_handler_parms (yyvsp[-1].ttype); ;\n     break;}\n case 767:\n-#line 3357 \"parse.y\"\n+#line 3301 \"parse.y\"\n { finish_handler (yyvsp[-3].ttype); ;\n     break;}\n case 770:\n-#line 3367 \"parse.y\"\n+#line 3311 \"parse.y\"\n { expand_start_catch_block (NULL_TREE, NULL_TREE); ;\n     break;}\n case 771:\n-#line 3383 \"parse.y\"\n+#line 3327 \"parse.y\"\n { check_for_new_type (\"inside exception declarations\", yyvsp[-1].ftype);\n \t\t  expand_start_catch_block (TREE_PURPOSE (yyvsp[-1].ftype.t),\n \t\t\t\t\t    TREE_VALUE (yyvsp[-1].ftype.t)); ;\n     break;}\n case 772:\n-#line 3390 \"parse.y\"\n+#line 3334 \"parse.y\"\n { tree label;\n \t\tdo_label:\n \t\t  label = define_label (input_filename, lineno, yyvsp[-1].ttype);\n@@ -7424,98 +7368,98 @@ case 772:\n \t\t;\n     break;}\n case 773:\n-#line 3397 \"parse.y\"\n+#line 3341 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 774:\n-#line 3399 \"parse.y\"\n+#line 3343 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 775:\n-#line 3401 \"parse.y\"\n+#line 3345 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 776:\n-#line 3406 \"parse.y\"\n+#line 3350 \"parse.y\"\n { if (yyvsp[-1].ttype) cplus_expand_expr_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 778:\n-#line 3409 \"parse.y\"\n+#line 3353 \"parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids compound statements inside for initializations\");\n \t\t;\n     break;}\n case 779:\n-#line 3418 \"parse.y\"\n+#line 3362 \"parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 780:\n-#line 3421 \"parse.y\"\n+#line 3365 \"parse.y\"\n { emit_line_note (input_filename, lineno); ;\n     break;}\n case 781:\n-#line 3426 \"parse.y\"\n+#line 3370 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 783:\n-#line 3429 \"parse.y\"\n+#line 3373 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 784:\n-#line 3436 \"parse.y\"\n+#line 3380 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 787:\n-#line 3443 \"parse.y\"\n+#line 3387 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 788:\n-#line 3448 \"parse.y\"\n+#line 3392 \"parse.y\"\n { yyval.ttype = build_tree_list (yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 789:\n-#line 3453 \"parse.y\"\n+#line 3397 \"parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyval.ttype, NULL_TREE); ;\n     break;}\n case 790:\n-#line 3455 \"parse.y\"\n+#line 3399 \"parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyval.ttype); ;\n     break;}\n case 791:\n-#line 3466 \"parse.y\"\n+#line 3410 \"parse.y\"\n {\n \t\t  yyval.ttype = empty_parms();\n \t\t;\n     break;}\n case 793:\n-#line 3471 \"parse.y\"\n+#line 3415 \"parse.y\"\n { yyval.ttype = finish_parmlist (build_tree_list (NULL_TREE, yyvsp[0].ftype.t), 0);\n \t\t  check_for_new_type (\"inside parameter list\", yyvsp[0].ftype); ;\n     break;}\n case 794:\n-#line 3479 \"parse.y\"\n+#line 3423 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyval.ttype, 0); ;\n     break;}\n case 795:\n-#line 3481 \"parse.y\"\n+#line 3425 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyvsp[-1].ttype, 1); ;\n     break;}\n case 796:\n-#line 3484 \"parse.y\"\n+#line 3428 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyvsp[-1].ttype, 1); ;\n     break;}\n case 797:\n-#line 3486 \"parse.y\"\n+#line 3430 \"parse.y\"\n { yyval.ttype = finish_parmlist (build_tree_list (NULL_TREE,\n \t\t\t\t\t\t\t yyvsp[-1].ftype.t), 1); ;\n     break;}\n case 798:\n-#line 3489 \"parse.y\"\n+#line 3433 \"parse.y\"\n { yyval.ttype = finish_parmlist (NULL_TREE, 1); ;\n     break;}\n case 799:\n-#line 3491 \"parse.y\"\n+#line 3435 \"parse.y\"\n {\n \t\t  /* This helps us recover from really nasty\n \t\t     parse errors, for example, a missing right\n@@ -7527,7 +7471,7 @@ case 799:\n \t\t;\n     break;}\n case 800:\n-#line 3501 \"parse.y\"\n+#line 3445 \"parse.y\"\n {\n \t\t  /* This helps us recover from really nasty\n \t\t     parse errors, for example, a missing right\n@@ -7540,98 +7484,98 @@ case 800:\n \t\t;\n     break;}\n case 801:\n-#line 3516 \"parse.y\"\n+#line 3460 \"parse.y\"\n { maybe_snarf_defarg (); ;\n     break;}\n case 802:\n-#line 3518 \"parse.y\"\n+#line 3462 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 805:\n-#line 3529 \"parse.y\"\n+#line 3473 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[0].ftype);\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ftype.t); ;\n     break;}\n case 806:\n-#line 3532 \"parse.y\"\n+#line 3476 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[-1].ftype);\n \t\t  yyval.ttype = build_tree_list (yyvsp[0].ttype, yyvsp[-1].ftype.t); ;\n     break;}\n case 807:\n-#line 3535 \"parse.y\"\n+#line 3479 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[0].ftype);\n \t\t  yyval.ttype = chainon (yyval.ttype, yyvsp[0].ftype.t); ;\n     break;}\n case 808:\n-#line 3538 \"parse.y\"\n+#line 3482 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 809:\n-#line 3540 \"parse.y\"\n+#line 3484 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, build_tree_list (yyvsp[0].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 811:\n-#line 3546 \"parse.y\"\n+#line 3490 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[-1].ftype);\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[-1].ftype.t); ;\n     break;}\n case 812:\n-#line 3556 \"parse.y\"\n+#line 3500 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag;\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype); ;\n     break;}\n case 813:\n-#line 3560 \"parse.y\"\n+#line 3504 \"parse.y\"\n { yyval.ftype.t = build_tree_list (yyvsp[-1].ftype.t, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 814:\n-#line 3563 \"parse.y\"\n+#line 3507 \"parse.y\"\n { yyval.ftype.t = build_tree_list (get_decl_list (yyvsp[-1].ftype.t), yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 815:\n-#line 3566 \"parse.y\"\n+#line 3510 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 816:\n-#line 3570 \"parse.y\"\n+#line 3514 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[0].ftype.t);\n \t\t  yyval.ftype.t = build_tree_list (specs, NULL_TREE); \n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag; ;\n     break;}\n case 817:\n-#line 3574 \"parse.y\"\n+#line 3518 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ttype);\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 818:\n-#line 3581 \"parse.y\"\n+#line 3525 \"parse.y\"\n { yyval.ftype.t = build_tree_list (NULL_TREE, yyvsp[0].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag;  ;\n     break;}\n case 819:\n-#line 3584 \"parse.y\"\n+#line 3528 \"parse.y\"\n { yyval.ftype.t = build_tree_list (yyvsp[0].ttype, yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag;  ;\n     break;}\n case 822:\n-#line 3595 \"parse.y\"\n+#line 3539 \"parse.y\"\n { see_typename (); ;\n     break;}\n case 823:\n-#line 3600 \"parse.y\"\n+#line 3544 \"parse.y\"\n {\n \t\t  error (\"type specifier omitted for parameter\");\n \t\t  yyval.ttype = build_tree_list (integer_type_node, NULL_TREE);\n \t\t;\n     break;}\n case 824:\n-#line 3605 \"parse.y\"\n+#line 3549 \"parse.y\"\n {\n \t\t  error (\"type specifier omitted for parameter\");\n \t\t  if (TREE_CODE (yyval.ttype) == SCOPE_REF\n@@ -7642,188 +7586,188 @@ case 824:\n \t\t;\n     break;}\n case 825:\n-#line 3617 \"parse.y\"\n+#line 3561 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 826:\n-#line 3619 \"parse.y\"\n+#line 3563 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 827:\n-#line 3621 \"parse.y\"\n+#line 3565 \"parse.y\"\n { yyval.ttype = build_decl_list (NULL_TREE, NULL_TREE); ;\n     break;}\n case 828:\n-#line 3626 \"parse.y\"\n+#line 3570 \"parse.y\"\n { yyval.ttype = build_decl_list (NULL_TREE, groktypename(yyvsp[0].ftype.t)); ;\n     break;}\n case 830:\n-#line 3632 \"parse.y\"\n+#line 3576 \"parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[0].ttype) = yyval.ttype;\n \t\t  yyval.ttype = yyvsp[0].ttype;\n \t\t;\n     break;}\n case 831:\n-#line 3640 \"parse.y\"\n+#line 3584 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 832:\n-#line 3642 \"parse.y\"\n+#line 3586 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 833:\n-#line 3644 \"parse.y\"\n+#line 3588 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 834:\n-#line 3646 \"parse.y\"\n+#line 3590 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 835:\n-#line 3653 \"parse.y\"\n+#line 3597 \"parse.y\"\n { got_scope = NULL_TREE; ;\n     break;}\n case 836:\n-#line 3658 \"parse.y\"\n+#line 3602 \"parse.y\"\n { yyval.ttype = ansi_opname[MULT_EXPR]; ;\n     break;}\n case 837:\n-#line 3660 \"parse.y\"\n+#line 3604 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUNC_DIV_EXPR]; ;\n     break;}\n case 838:\n-#line 3662 \"parse.y\"\n+#line 3606 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUNC_MOD_EXPR]; ;\n     break;}\n case 839:\n-#line 3664 \"parse.y\"\n+#line 3608 \"parse.y\"\n { yyval.ttype = ansi_opname[PLUS_EXPR]; ;\n     break;}\n case 840:\n-#line 3666 \"parse.y\"\n+#line 3610 \"parse.y\"\n { yyval.ttype = ansi_opname[MINUS_EXPR]; ;\n     break;}\n case 841:\n-#line 3668 \"parse.y\"\n+#line 3612 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_AND_EXPR]; ;\n     break;}\n case 842:\n-#line 3670 \"parse.y\"\n+#line 3614 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_IOR_EXPR]; ;\n     break;}\n case 843:\n-#line 3672 \"parse.y\"\n+#line 3616 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_XOR_EXPR]; ;\n     break;}\n case 844:\n-#line 3674 \"parse.y\"\n+#line 3618 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_NOT_EXPR]; ;\n     break;}\n case 845:\n-#line 3676 \"parse.y\"\n+#line 3620 \"parse.y\"\n { yyval.ttype = ansi_opname[COMPOUND_EXPR]; ;\n     break;}\n case 846:\n-#line 3678 \"parse.y\"\n+#line 3622 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 847:\n-#line 3680 \"parse.y\"\n+#line 3624 \"parse.y\"\n { yyval.ttype = ansi_opname[LT_EXPR]; ;\n     break;}\n case 848:\n-#line 3682 \"parse.y\"\n+#line 3626 \"parse.y\"\n { yyval.ttype = ansi_opname[GT_EXPR]; ;\n     break;}\n case 849:\n-#line 3684 \"parse.y\"\n+#line 3628 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 850:\n-#line 3686 \"parse.y\"\n+#line 3630 \"parse.y\"\n { yyval.ttype = ansi_assopname[yyvsp[0].code]; ;\n     break;}\n case 851:\n-#line 3688 \"parse.y\"\n+#line 3632 \"parse.y\"\n { yyval.ttype = ansi_opname [MODIFY_EXPR]; ;\n     break;}\n case 852:\n-#line 3690 \"parse.y\"\n+#line 3634 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 853:\n-#line 3692 \"parse.y\"\n+#line 3636 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 854:\n-#line 3694 \"parse.y\"\n+#line 3638 \"parse.y\"\n { yyval.ttype = ansi_opname[POSTINCREMENT_EXPR]; ;\n     break;}\n case 855:\n-#line 3696 \"parse.y\"\n+#line 3640 \"parse.y\"\n { yyval.ttype = ansi_opname[PREDECREMENT_EXPR]; ;\n     break;}\n case 856:\n-#line 3698 \"parse.y\"\n+#line 3642 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_ANDIF_EXPR]; ;\n     break;}\n case 857:\n-#line 3700 \"parse.y\"\n+#line 3644 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_ORIF_EXPR]; ;\n     break;}\n case 858:\n-#line 3702 \"parse.y\"\n+#line 3646 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_NOT_EXPR]; ;\n     break;}\n case 859:\n-#line 3704 \"parse.y\"\n+#line 3648 \"parse.y\"\n { yyval.ttype = ansi_opname[COND_EXPR]; ;\n     break;}\n case 860:\n-#line 3706 \"parse.y\"\n+#line 3650 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 861:\n-#line 3708 \"parse.y\"\n+#line 3652 \"parse.y\"\n { yyval.ttype = ansi_opname[COMPONENT_REF]; ;\n     break;}\n case 862:\n-#line 3710 \"parse.y\"\n+#line 3654 \"parse.y\"\n { yyval.ttype = ansi_opname[MEMBER_REF]; ;\n     break;}\n case 863:\n-#line 3712 \"parse.y\"\n+#line 3656 \"parse.y\"\n { yyval.ttype = ansi_opname[CALL_EXPR]; ;\n     break;}\n case 864:\n-#line 3714 \"parse.y\"\n+#line 3658 \"parse.y\"\n { yyval.ttype = ansi_opname[ARRAY_REF]; ;\n     break;}\n case 865:\n-#line 3716 \"parse.y\"\n+#line 3660 \"parse.y\"\n { yyval.ttype = ansi_opname[NEW_EXPR]; ;\n     break;}\n case 866:\n-#line 3718 \"parse.y\"\n+#line 3662 \"parse.y\"\n { yyval.ttype = ansi_opname[DELETE_EXPR]; ;\n     break;}\n case 867:\n-#line 3720 \"parse.y\"\n+#line 3664 \"parse.y\"\n { yyval.ttype = ansi_opname[VEC_NEW_EXPR]; ;\n     break;}\n case 868:\n-#line 3722 \"parse.y\"\n+#line 3666 \"parse.y\"\n { yyval.ttype = ansi_opname[VEC_DELETE_EXPR]; ;\n     break;}\n case 869:\n-#line 3725 \"parse.y\"\n+#line 3669 \"parse.y\"\n { yyval.ttype = grokoptypename (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 870:\n-#line 3727 \"parse.y\"\n+#line 3671 \"parse.y\"\n { yyval.ttype = ansi_opname[ERROR_MARK]; ;\n     break;}\n }\n@@ -8024,7 +7968,7 @@ case 870:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 3730 \"parse.y\"\n+#line 3674 \"parse.y\"\n \n \n #ifdef SPEW_DEBUG"}, {"sha": "3aca19f4cf40ecee5ef33b0be2f330b46aa5c773", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 9, "deletions": 66, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea6021e832a937087583f9c1b1ca1f3220ef5bd3/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea6021e832a937087583f9c1b1ca1f3220ef5bd3/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=ea6021e832a937087583f9c1b1ca1f3220ef5bd3", "patch": "@@ -2090,7 +2090,9 @@ structsp:\n \t\t  $$.new_type_flag = 0; }\n \t| TYPENAME_KEYWORD typename_sub\n \t\t{ $$.t = $2;\n-\t\t  $$.new_type_flag = 0; }\n+\t\t  $$.new_type_flag = 0; \n+\t\t  if (!processing_template_decl)\n+\t\t    cp_pedwarn (\"using `typename' outside of template\"); }\n \t/* C++ extensions, merged with C to avoid shift/reduce conflicts */\n \t| class_head left_curly \n           opt.component_decl_list '}' maybe_attribute\n@@ -2251,71 +2253,13 @@ base_class_list:\n \n base_class:\n \t  base_class.1\n-\t\t{\n-\t\t  tree type;\n-\t\t  if ($1 == NULL_TREE)\n-\t\t    {\n-\t\t      error (\"invalid base class\");\n-\t\t      type = error_mark_node;\n-\t\t    }\n-\t\t  else\n-\t\t    type = TREE_TYPE ($1);\n-\t\t  if (! is_aggr_type (type, 1))\n-\t\t    $$ = NULL_TREE;\n-\t\t  else if (current_aggr == signature_type_node\n-\t\t\t   && (! type) && (! IS_SIGNATURE (type)))\n-\t\t    {\n-\t\t      error (\"class name not allowed as base signature\");\n-\t\t      $$ = NULL_TREE;\n-\t\t    }\n-\t\t  else if (current_aggr == signature_type_node)\n-\t\t    {\n-\t\t      sorry (\"signature inheritance, base type `%s' ignored\",\n-\t\t\t     IDENTIFIER_POINTER ($$));\n-\t\t      $$ = build_tree_list (access_public_node, type);\n-\t\t    }\n-\t\t  else if (type && IS_SIGNATURE (type))\n-\t\t    {\n-\t\t      error (\"signature name not allowed as base class\");\n-\t\t      $$ = NULL_TREE;\n-\t\t    }\n-\t\t  else\n-\t\t    $$ = build_tree_list (access_default_node, type);\n-\t\t}\n+\t\t{ $$ = finish_base_specifier (access_default_node, $1,\n+\t\t\t\t\t      current_aggr \n+\t\t\t\t\t      == signature_type_node); }\n \t| base_class_access_list see_typename base_class.1\n-\t\t{\n-\t\t  tree type;\n-\t\t  if ($3 == NULL_TREE)\n-\t\t    {\n-\t\t      error (\"invalid base class\");\n-\t\t      type = error_mark_node;\n-\t\t    }\n-\t\t  else\n-\t\t    type = TREE_TYPE ($3);\n-\t\t  if (current_aggr == signature_type_node)\n-\t\t    error (\"access and source specifiers not allowed in signature\");\n-\t\t  if (! is_aggr_type (type, 1))\n-\t\t    $$ = NULL_TREE;\n-\t\t  else if (current_aggr == signature_type_node\n-\t\t\t   && (! type) && (! IS_SIGNATURE (type)))\n-\t\t    {\n-\t\t      error (\"class name not allowed as base signature\");\n-\t\t      $$ = NULL_TREE;\n-\t\t    }\n-\t\t  else if (current_aggr == signature_type_node)\n-\t\t    {\n-\t\t      sorry (\"signature inheritance, base type `%s' ignored\",\n-\t\t\t     IDENTIFIER_POINTER ($$));\n-\t\t      $$ = build_tree_list (access_public_node, type);\n-\t\t    }\n-\t\t  else if (type && IS_SIGNATURE (type))\n-\t\t    {\n-\t\t      error (\"signature name not allowed as base class\");\n-\t\t      $$ = NULL_TREE;\n-\t\t    }\n-\t\t  else\n-\t\t    $$ = build_tree_list ($$, type);\n-\t\t}\n+                { $$ = finish_base_specifier ($1, $3, \n+\t\t\t\t\t      current_aggr \n+\t\t\t\t\t      == signature_type_node); } \n \t;\n \n base_class.1:\n@@ -2868,7 +2812,6 @@ functional_cast:\n \t| typespec fcast_or_absdcl  %prec EMPTY\n \t\t{ $$ = reparse_absdcl_as_expr ($1.t, $2); }\n \t;\n-\n type_name:\n \t  TYPENAME\n \t| SELFNAME"}, {"sha": "6bb3cd05123d148b7d7393e3514ba1551845042f", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea6021e832a937087583f9c1b1ca1f3220ef5bd3/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea6021e832a937087583f9c1b1ca1f3220ef5bd3/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=ea6021e832a937087583f9c1b1ca1f3220ef5bd3", "patch": "@@ -1436,3 +1436,53 @@ enter_scope_of (sr)\n       TREE_COMPLEXITY (sr) = current_class_depth;\n     }\n }\n+\n+/* Finish processing a BASE_CLASS with the indicated ACCESS_SPECIFIER.\n+   Return a TREE_LIST containing the ACCESS_SPECIFIER and the\n+   BASE_CLASS, or NULL_TREE if an error occurred.  The\n+   ACCESSS_SPECIFIER is one of\n+   access_{default,public,protected_private}[_virtual]_node.*/\n+\n+tree \n+finish_base_specifier (access_specifier, base_class,\n+\t\t       current_aggr_is_signature)\n+     tree access_specifier;\n+     tree base_class;\n+     int current_aggr_is_signature;\n+{\n+  tree type;\n+  tree result;\n+\n+  if (base_class == NULL_TREE)\n+    {\n+      error (\"invalid base class\");\n+      type = error_mark_node;\n+    }\n+  else\n+    type = TREE_TYPE (base_class);\n+  if (current_aggr_is_signature && access_specifier)\n+    error (\"access and source specifiers not allowed in signature\");\n+  if (! is_aggr_type (type, 1))\n+    result = NULL_TREE;\n+  else if (current_aggr_is_signature\n+\t   && (! type) && (! IS_SIGNATURE (type)))\n+    {\n+      error (\"class name not allowed as base signature\");\n+      result = NULL_TREE;\n+    }\n+  else if (current_aggr_is_signature)\n+    {\n+      sorry (\"signature inheritance, base type `%s' ignored\",\n+\t     IDENTIFIER_POINTER (access_specifier));\n+      result = build_tree_list (access_public_node, type);\n+    }\n+  else if (type && IS_SIGNATURE (type))\n+    {\n+      error (\"signature name not allowed as base class\");\n+      result = NULL_TREE;\n+    }\n+  else\n+    result = build_tree_list (access_specifier, type);\n+\n+  return result;\n+}"}, {"sha": "1b122b229014794335401e1fa119a690b4cbcd09", "filename": "gcc/testsuite/g++.old-deja/g++.pt/typename10.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea6021e832a937087583f9c1b1ca1f3220ef5bd3/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea6021e832a937087583f9c1b1ca1f3220ef5bd3/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename10.C?ref=ea6021e832a937087583f9c1b1ca1f3220ef5bd3", "patch": "@@ -0,0 +1,7 @@\n+// Build don't link:\n+\n+struct S {\n+  typedef int I;\n+};\n+\n+void f(typename S::I); // ERROR - using typename outside of template"}]}