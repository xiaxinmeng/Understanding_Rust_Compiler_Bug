{"sha": "81eace42692969b248028fffcccb67818c251279", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODFlYWNlNDI2OTI5NjliMjQ4MDI4ZmZmY2NjYjY3ODE4YzI1MTI3OQ==", "commit": {"author": {"name": "Geoff Keating", "email": "geoffk@cygnus.com", "date": "2000-04-01T01:37:44Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2000-04-01T01:37:44Z"}, "message": "rs6000.c (print_operand): Don't use %l for 'low part', it's already in use.\n\n* config/rs6000/rs6000.c (print_operand): Don't use %l for 'low\npart', it's already in use.  Use %K instead.  Add a return at the\nend of what is now %K.\n* config/rs6000/rs6000.md (elf_low): Use %K instead of %l.\n\nFrom-SVN: r32853", "tree": {"sha": "fa9da7f2814525757605e3d99e147973b6232129", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa9da7f2814525757605e3d99e147973b6232129"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81eace42692969b248028fffcccb67818c251279", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81eace42692969b248028fffcccb67818c251279", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81eace42692969b248028fffcccb67818c251279", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81eace42692969b248028fffcccb67818c251279/comments", "author": null, "committer": null, "parents": [{"sha": "7a678b64cd97a002b87232a9fdd909d4637bdae1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a678b64cd97a002b87232a9fdd909d4637bdae1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a678b64cd97a002b87232a9fdd909d4637bdae1"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "c90dc60049f3097d774d9a95760418d388858f66", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81eace42692969b248028fffcccb67818c251279/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81eace42692969b248028fffcccb67818c251279/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=81eace42692969b248028fffcccb67818c251279", "patch": "@@ -1,3 +1,10 @@\n+2000-03-31  Geoff Keating  <geoffk@cygnus.com>\n+\n+\t* config/rs6000/rs6000.c (print_operand): Don't use %l for 'low\n+\tpart', it's already in use.  Use %K instead.  Add a return at the\n+\tend of what is now %K.\n+\t* config/rs6000/rs6000.md (elf_low): Use %K instead of %l. \n+\n Sat Apr  1 02:05:29 MET DST 2000  Jan Hubicka  <jh@suse.cz>\n \n \t* builtins.c  (expand_builtin_apply):  Pass proper parameters to"}, {"sha": "83eb642f2516895b73b0772964a3f1318257ba49", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81eace42692969b248028fffcccb67818c251279/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81eace42692969b248028fffcccb67818c251279/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=81eace42692969b248028fffcccb67818c251279", "patch": "@@ -3325,6 +3325,8 @@ print_operand (file, x, code)\n       putc ((DEFAULT_ABI == ABI_SOLARIS) ? '.' : '$', file);\n       return;\n \n+      /* %a is output_address.  */\n+\n     case 'A':\n       /* If X is a constant integer whose low-order 5 bits are zero,\n \t write 'l'.  Otherwise, write 'r'.  This is a kludge to fix a bug\n@@ -3350,6 +3352,9 @@ print_operand (file, x, code)\n       putc (((INT_LOWPART(x) & 1) == 0 ? 'r' : 'l'), file);\n       return;\n \n+      /* %c is output_addr_const if a CONSTANT_ADDRESS_P, otherwise\n+\t output_operand.  */\n+\n     case 'C':\n       {\n \tenum rtx_code code = GET_CODE (x);\n@@ -3496,7 +3501,7 @@ print_operand (file, x, code)\n       fprintf (file, HOST_WIDE_INT_PRINT_DEC, ~ INT_LOWPART (x));\n       return;\n \n-    case 'l':\n+    case 'K':\n       /* X must be a symbolic constant on ELF.  Write an\n \t expression suitable for an 'addi' that adds in the low 16\n \t bits of the MEM.  */\n@@ -3516,6 +3521,9 @@ print_operand (file, x, code)\n \t  fputs (\"@l\", file);\n \t  print_operand (file, XEXP (XEXP (x, 0), 1), 0);\n \t}\n+      return;\n+\n+      /* %l is output_asm_label.  */\n \n     case 'L':\n       /* Write second word of DImode or DFmode reference.  Works on register\n@@ -3610,6 +3618,8 @@ print_operand (file, x, code)\n       fprintf (file, \"%d\", i);\n       return;\n \n+      /* %n outputs the negative of its operand.  */\n+\n     case 'N':\n       /* Write the number of elements in the vector times 4.  */\n       if (GET_CODE (x) != PARALLEL)"}, {"sha": "4573330a820674f1336d4816cc29fc15d167c320", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81eace42692969b248028fffcccb67818c251279/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81eace42692969b248028fffcccb67818c251279/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=81eace42692969b248028fffcccb67818c251279", "patch": "@@ -7923,7 +7923,7 @@\n    \"TARGET_ELF && ! TARGET_64BIT\"\n    \"@\n     {cal|la} %0,%2@l(%1)\n-    {ai|addic} %0,%1,%l2\")\n+    {ai|addic} %0,%1,%K2\")\n \n ;; Set up a register with a value from the GOT table\n "}]}