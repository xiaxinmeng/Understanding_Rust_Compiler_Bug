{"sha": "08cdc89a543fae43d97ebf23169a71b4873a6f2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhjZGM4OWE1NDNmYWU0M2Q5N2ViZjIzMTY5YTcxYjQ4NzNhNmYyYQ==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2006-11-24T02:46:33Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2006-11-24T02:46:33Z"}, "message": "inline-16.c: Use __SIZE_TYPE__.\n\n2006-11-23  Eric Christopher  <echristo@apple.com>\n\n        * gcc.dg/inline-16.c: Use __SIZE_TYPE__.\n\nFrom-SVN: r119144", "tree": {"sha": "d95326e8b2047cc9b71c3df9c9a560097a1a3afe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d95326e8b2047cc9b71c3df9c9a560097a1a3afe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08cdc89a543fae43d97ebf23169a71b4873a6f2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08cdc89a543fae43d97ebf23169a71b4873a6f2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08cdc89a543fae43d97ebf23169a71b4873a6f2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08cdc89a543fae43d97ebf23169a71b4873a6f2a/comments", "author": null, "committer": null, "parents": [{"sha": "422c3a54ea4ba93eb21c1a6c72c42bd804665646", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/422c3a54ea4ba93eb21c1a6c72c42bd804665646", "html_url": "https://github.com/Rust-GCC/gccrs/commit/422c3a54ea4ba93eb21c1a6c72c42bd804665646"}], "stats": {"total": 45, "additions": 25, "deletions": 20}, "files": [{"sha": "ae246a191b6f6be1a5d63bcc7f65df03377914a5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08cdc89a543fae43d97ebf23169a71b4873a6f2a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08cdc89a543fae43d97ebf23169a71b4873a6f2a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=08cdc89a543fae43d97ebf23169a71b4873a6f2a", "patch": "@@ -1,21 +1,25 @@\n+2006-11-23  Eric Christopher  <echristo@apple.com>\n+\n+\t* gcc.dg/inline-16.c: Use __SIZE_TYPE__.\n+\n 2006-11-24  Manuel Lopez-Ibanez <manu@gcc.gnu.org>\n \n \tPR c/2707\n \tPR c++/26167\n-\t* gcc.dg/Wconversion-integer.c: New. Supersedes\t\n-\tWconversion-negative-constants.c \n+\t* gcc.dg/Wconversion-integer.c: New. Supersedes\n+\tWconversion-negative-constants.c\n \t* gcc.dg/Wconversion-real.c: New.\n \t* gcc.dg/Wconversion-real-integer.c: New.\n \t* gcc.dg/Wconversion-negative-constants.c: Deleted.\n \t* g++.dg/warn/Wconversion1.C: Modified.\n-\t\n+\n 2006-11-23  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \t* gfortran.dg/overload_1.f90: New test.\n \n 2006-11-23  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n \n-\tPR c/9072 \n+\tPR c/9072\n \t* gcc.dg/builtin-protos-1.c: Replace Wconversion by\n \tWtraditional-conversion.\n \t* gcc.dg/overflow-warn-2.c: Likewise.\n@@ -24,20 +28,20 @@\n \t* gcc.dg/Wconversion-2.c: Likewise. Renamed as\n \tWtraditional-conversion-2.c .\n \t* gcc.dg/dfp/Wconversion-2.c: Likewise. Renamed as\n-\tWtraditional-conversion-2.c \n+\tWtraditional-conversion-2.c\n \t* gcc.dg/Wconversion-negative-constants.c: New.\n \n 2006-11-23  Andrew Pinski  <pinskia@gmail.com>\n \n \t* gcc.dg/tree-ssa/dump-1.c: New test.\n \n 2006-11-23  David Ung <davidu@mips.com>\n-\t\n+\n \t* gcc.target/mips/mips.exp (dg-mips-options): Handle parsing of\n \t-mfp64, allowable when ISA >= 33 and float is enabled.\n \t* gcc.target/mips/mips32r2-mxhc1.c: New test for checking the use\n \tof mthc1 and mfhc1 patterns.\n-\t\n+\n 2006-11-23  Zdenek Dvorak <dvorakz@suse.cz>\n \n \tPR tree-optimization/29921\n@@ -50,7 +54,7 @@\n \n 2006-11-22  Ira Rosen  <irar@il.ibm.com>\n \n-\t* gcc.dg/vect/vect-1.c: Additional loop is now vectorizable on \n+\t* gcc.dg/vect/vect-1.c: Additional loop is now vectorizable on\n \tplatforms that have interleaving support.\n \t* gcc.dg/vect/vect-107.c, gcc.dg/vect/vect-98.c: Likewise.\n \t* gcc.dg/vect/vect-strided-a-u16-i2.c,\n@@ -124,7 +128,7 @@\n \t* g++.dg/template/access19.C: New test.\n \t* g++.old-deja/g++.other/access11.C: Adjusted the line where the\n \terror is reported.\n-\t\n+\n 2006-11-20  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \tPR tree-opt/25500\n@@ -451,11 +455,11 @@\n \t* gcc.dg/vect/vect-106.c: Removed (duplicate of vect-9.c).\n \t* gcc.dg/vect/vect-9.c: Now vectorizable.\n \t* gcc.dg/vect/vect-reduc-dot-s16a.c: Now vectorizable also on targets\n-\tthat support vect_widen_mult. \n+\tthat support vect_widen_mult.\n \t* gcc.dg/vect/vect-reduc-dot-u16.c: Removed (split into two new tests).\n-\t* gcc.dg/vect/vect-reduc-dot-u16a.c: New test (split from \n+\t* gcc.dg/vect/vect-reduc-dot-u16a.c: New test (split from\n \tvect-reduc-dot-u16.c).\n-\t* gcc.dg/vect/vect-reduc-dot-u16b.c: New test (split from \n+\t* gcc.dg/vect/vect-reduc-dot-u16b.c: New test (split from\n \tvect-reduc-dot-u16.c).\n \t* gcc.dg/vect/vect-reduc-dot-s8.c: Removed (split into three new tests).\n \t* gcc.dg/vect/vect-reduc-dot-s8a.c: New test (split from\n@@ -481,7 +485,7 @@\n \twrapv-vect-reduc-dot-s8.c.\n \t* lib/target-support.exp (check_effective_target_vect_unpack): New.\n \t(check_effective_target_vect_widen_sum_hi_to_si): Now also includes\n-\ttargets that support vec_unpack. \n+\ttargets that support vec_unpack.\n \t(check_effective_target_vect_widen_sum_qi_to_hi): Likewise.\n \t(check_effective_target_vect_widen_mult_qi_to_hi): New.\n \t(check_effective_target_vect_widen_mult_hi_to_si): New.\n@@ -503,7 +507,7 @@\n \t* gcc.dg/vect/vect-multitypes-6.c: New test.\n \n \t2006-11-08  Dorit Nuzman  <dorit@il.ibm.com>\n-\t\n+\n \t* gcc.dg/vect/vect-multitypes-1.c: New test.\n \t* gcc.dg/vect/vect-multitypes-2.c: New test.\n \t* gcc.dg/vect/vect-multitypes-3.c: New test."}, {"sha": "4f9fe978baa42ad665782f1942fed2b5771b1cc4", "filename": "gcc/testsuite/gcc.dg/inline-16.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08cdc89a543fae43d97ebf23169a71b4873a6f2a/gcc%2Ftestsuite%2Fgcc.dg%2Finline-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08cdc89a543fae43d97ebf23169a71b4873a6f2a/gcc%2Ftestsuite%2Fgcc.dg%2Finline-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Finline-16.c?ref=08cdc89a543fae43d97ebf23169a71b4873a6f2a", "patch": "@@ -1,21 +1,22 @@\n /* { dg-do link } */\n /* { dg-options \"-std=c99\" } */\n \n-static inline int\n-func1(const volatile void * base, int byteOffset)\n+static inline __SIZE_TYPE__\n+func1(const volatile void * base, __SIZE_TYPE__ byteOffset)\n {\n-  volatile int *addr = (volatile int *)((int)base + byteOffset);\n+  volatile __SIZE_TYPE__ *addr\n+    = (volatile __SIZE_TYPE__ *)((__SIZE_TYPE__)base + byteOffset);\n   return *addr;\n }\n \n-static inline int\n-func2(int data)\n+static inline __SIZE_TYPE__\n+func2(__SIZE_TYPE__ data)\n {\n     return func1(&data, 0);\n }\n \n int main(int argc, char *argv[]) {\n-  int b = func2(argc);\n+  __SIZE_TYPE__ b = func2(argc);\n \n   return 0;\n }"}]}