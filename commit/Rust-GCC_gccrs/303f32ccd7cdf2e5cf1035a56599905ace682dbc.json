{"sha": "303f32ccd7cdf2e5cf1035a56599905ace682dbc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzAzZjMyY2NkN2NkZjJlNWNmMTAzNWE1NjU5OTkwNWFjZTY4MmRiYw==", "commit": {"author": {"name": "Keith Seitz", "email": "keiths@redhat.com", "date": "2006-07-21T23:45:03Z"}, "committer": {"name": "Keith Seitz", "email": "kseitz@gcc.gnu.org", "date": "2006-07-21T23:45:03Z"}, "message": "boehm.cc (_Jv_SuspendThread): Don't ifdef the function declaration, just the contents.\n\n        * boehm.cc (_Jv_SuspendThread): Don't ifdef the function declaration,\n        just the contents.\n        (_Jv_ResumeThread): Likewise.\n        * posix-threads.cc: Revert 2006-06-19 _Jv_ThreadDebugSuspend,\n        _Jv_ThreadDebugResume, _Jv_ThreadDebugSuspendCount patch. Moving\n        to JVMTI instead.\n        * include/posix-threads.h: Likewise.\n        * win32-threads.cc: Likewise.\n        * include/win32-threads.h: Likewise.\n        * jvmti.cc (_Jv_JVMTI_SuspentThread): New function.\n        (_Jv_JVMTI_ResumeThread): New function.\n        (_Jv_JVMTI_Interface): Define SuspendThread and ResumeThread.\n\nFrom-SVN: r115655", "tree": {"sha": "d9fcf70f352ec397fa6065457951b478894479a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9fcf70f352ec397fa6065457951b478894479a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/303f32ccd7cdf2e5cf1035a56599905ace682dbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/303f32ccd7cdf2e5cf1035a56599905ace682dbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/303f32ccd7cdf2e5cf1035a56599905ace682dbc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/303f32ccd7cdf2e5cf1035a56599905ace682dbc/comments", "author": {"login": "shtiek", "id": 107581324, "node_id": "U_kgDOBmmPjA", "avatar_url": "https://avatars.githubusercontent.com/u/107581324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shtiek", "html_url": "https://github.com/shtiek", "followers_url": "https://api.github.com/users/shtiek/followers", "following_url": "https://api.github.com/users/shtiek/following{/other_user}", "gists_url": "https://api.github.com/users/shtiek/gists{/gist_id}", "starred_url": "https://api.github.com/users/shtiek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shtiek/subscriptions", "organizations_url": "https://api.github.com/users/shtiek/orgs", "repos_url": "https://api.github.com/users/shtiek/repos", "events_url": "https://api.github.com/users/shtiek/events{/privacy}", "received_events_url": "https://api.github.com/users/shtiek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2e5757965dee9def53422009da26f51aa243b18d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e5757965dee9def53422009da26f51aa243b18d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e5757965dee9def53422009da26f51aa243b18d"}], "stats": {"total": 138, "additions": 71, "deletions": 67}, "files": [{"sha": "ec00d96dda258fd55818858def669c2fa0bac242", "filename": "libjava/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/303f32ccd7cdf2e5cf1035a56599905ace682dbc/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/303f32ccd7cdf2e5cf1035a56599905ace682dbc/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=303f32ccd7cdf2e5cf1035a56599905ace682dbc", "patch": "@@ -1,3 +1,18 @@\n+2006-07-21  Keith Seitz  <keiths@redhat.com>\n+\n+\t* boehm.cc (_Jv_SuspendThread): Don't ifdef the function declaration,\n+\tjust the contents.\n+\t(_Jv_ResumeThread): Likewise.\n+\t* posix-threads.cc: Revert 2006-06-19 _Jv_ThreadDebugSuspend,\n+\t_Jv_ThreadDebugResume, _Jv_ThreadDebugSuspendCount patch. Moving\n+\tto JVMTI instead.\n+\t* include/posix-threads.h: Likewise.\n+\t* win32-threads.cc: Likewise.\n+\t* include/win32-threads.h: Likewise.\n+\t* jvmti.cc (_Jv_JVMTI_SuspentThread): New function.\n+\t(_Jv_JVMTI_ResumeThread): New function.\n+\t(_Jv_JVMTI_Interface): Define SuspendThread and ResumeThread.\n+\n 2006-07-21  David Daney  <ddaney@avtrex.com>\n \n \tPR libgcj/28426"}, {"sha": "6a5603d78a5fde9aaa500554239d537546d3e082", "filename": "libjava/boehm.cc", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/303f32ccd7cdf2e5cf1035a56599905ace682dbc/libjava%2Fboehm.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/303f32ccd7cdf2e5cf1035a56599905ace682dbc/libjava%2Fboehm.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fboehm.cc?ref=303f32ccd7cdf2e5cf1035a56599905ace682dbc", "patch": "@@ -678,19 +678,20 @@ _Jv_RegisterLibForGc (const void *p __attribute__ ((__unused__)))\n #endif\n }\n \n-#if defined(GC_PTHREADS) && !defined(GC_SOLARIS_THREADS) \\\n-  && !defined(GC_WIN32_THREADS) && !defined(GC_DARWIN_THREADS)\n-\n void\n _Jv_SuspendThread (_Jv_Thread_t *thread)\n {\n+#if defined(GC_PTHREADS) && !defined(GC_SOLARIS_THREADS) \\\n+     && !defined(GC_WIN32_THREADS) && !defined(GC_DARWIN_THREADS)\n   GC_suspend_thread (_Jv_GetPlatformThreadID (thread));\n+#endif\n }\n \n void\n _Jv_ResumeThread (_Jv_Thread_t *thread)\n {\n+#if defined(GC_PTHREADS) && !defined(GC_SOLARIS_THREADS) \\\n+     && !defined(GC_WIN32_THREADS) && !defined(GC_DARWIN_THREADS)\n   GC_resume_thread (_Jv_GetPlatformThreadID (thread));\n-}\n-\n #endif\n+}"}, {"sha": "1f06fc3be1894e35b18cd75f8a86ec42efcc8a8a", "filename": "libjava/include/posix-threads.h", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/303f32ccd7cdf2e5cf1035a56599905ace682dbc/libjava%2Finclude%2Fposix-threads.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/303f32ccd7cdf2e5cf1035a56599905ace682dbc/libjava%2Finclude%2Fposix-threads.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fposix-threads.h?ref=303f32ccd7cdf2e5cf1035a56599905ace682dbc", "patch": "@@ -374,18 +374,4 @@ void _Jv_ThreadWait (void);\n \n void _Jv_ThreadInterrupt (_Jv_Thread_t *data);\n \n-// Increases a thread's suspend count. If the thread's previous\n-// suspend count was zero, i.e., it is not suspended, this function\n-// will suspend the thread. This function may be used to suspend\n-// any thread from any other thread (or suspend itself).\n-void _Jv_ThreadDebugSuspend (_Jv_Thread_t *data);\n-\n-// Decreases a thread's suspend count. If the thread's new thread\n-// count is zero, the thread is resumed. This function may be used\n-// by any thread to resume any other thread.\n-void _Jv_ThreadDebugResume (_Jv_Thread_t *data);\n-\n-// Get the suspend count for a thread\n-jint _Jv_ThreadDebugSuspendCount (_Jv_Thread_t *data);\n-\n #endif /* __JV_POSIX_THREADS__ */"}, {"sha": "4b3068331565ad12800ec9c9f409b39924a2ded5", "filename": "libjava/include/win32-threads.h", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/303f32ccd7cdf2e5cf1035a56599905ace682dbc/libjava%2Finclude%2Fwin32-threads.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/303f32ccd7cdf2e5cf1035a56599905ace682dbc/libjava%2Finclude%2Fwin32-threads.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fwin32-threads.h?ref=303f32ccd7cdf2e5cf1035a56599905ace682dbc", "patch": "@@ -193,20 +193,6 @@ void _Jv_ThreadInterrupt (_Jv_Thread_t *data);\n // See java/lang/natWin32Process.cc (waitFor) for an example.\n HANDLE _Jv_Win32GetInterruptEvent (void);\n \n-// Increases a thread's suspend count. If the thread's previous\n-// suspend count was zero, i.e., it is not suspended, this function\n-// will suspend the thread. This function may be used to suspend\n-// any thread from any other thread (or suspend itself).\n-void _Jv_ThreadDebugSuspend (_Jv_Thread_t *data);\n-\n-// Decreases a thread's suspend count. If the thread's new thread\n-// count is zero, the thread is resumed. This function may be used\n-// by any thread to resume any other thread.\n-void _Jv_ThreadDebugResume (_Jv_Thread_t *data);\n-\n-// Get the suspend count for a thread\n-jint _Jv_ThreadDebugSuspendCount (_Jv_Thread_t *data);\n-\n // Remove defines from <windows.h> that conflict with various things in libgcj code\n \n #undef TRUE"}, {"sha": "8c2b294bc3819493e02f276f9d42ed332aa9bfc7", "filename": "libjava/jvmti.cc", "status": "modified", "additions": 50, "deletions": 2, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/303f32ccd7cdf2e5cf1035a56599905ace682dbc/libjava%2Fjvmti.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/303f32ccd7cdf2e5cf1035a56599905ace682dbc/libjava%2Fjvmti.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjvmti.cc?ref=303f32ccd7cdf2e5cf1035a56599905ace682dbc", "patch": "@@ -11,8 +11,56 @@ details.  */\n #include <config.h>\n \n #include <jvm.h>\n+#include <java-threads.h>\n+#include <java-gc.h>\n #include <jvmti.h>\n \n+#include <java/lang/Thread.h>\n+\n+// Some commonly-used checks\n+\n+#define THREAD_DEFAULT_TO_CURRENT(jthread)\t\t\t\t\\\n+  if (jthread == NULL) jthread = java::lang::Thread::currentThread ();\n+\n+#define THREAD_CHECK_VALID(jthread)\t\t\t\t\t\\\n+  if (!java::lang::Thread::class$.isAssignableFrom (&(jthread->class$))) \\\n+    return JVMTI_ERROR_INVALID_THREAD;\n+\n+#define THREAD_CHECK_IS_ALIVE(thread)\t\t\t\t\\\n+  if (!thread->isAlive ()) return JVMTI_ERROR_THREAD_NOT_ALIVE;\n+\n+static jvmtiError\n+_Jv_JVMTI_SuspendThread (MAYBE_UNUSED jvmtiEnv *env, jthread thread)\n+{\n+  using namespace java::lang;\n+\n+  THREAD_DEFAULT_TO_CURRENT (thread);\n+  THREAD_CHECK_VALID (thread);\n+\n+  Thread *t = reinterpret_cast<Thread *> (thread);\n+  THREAD_CHECK_IS_ALIVE (t);\n+\n+  _Jv_Thread_t *data = _Jv_ThreadGetData (t);\n+  _Jv_SuspendThread (data);\n+  return JVMTI_ERROR_NONE;\n+}\n+\n+static jvmtiError\n+_Jv_JVMTI_ResumeThread (MAYBE_UNUSED jvmtiEnv *env, jthread thread)\n+{\n+  using namespace java::lang;\n+\n+  THREAD_DEFAULT_TO_CURRENT (thread);\n+  THREAD_CHECK_VALID (thread);\n+\n+  Thread *t = reinterpret_cast<Thread *> (thread);\n+  THREAD_CHECK_IS_ALIVE (t);\n+\n+  _Jv_Thread_t *data = _Jv_ThreadGetData (t);\n+  _Jv_ResumeThread (data);\n+  return JVMTI_ERROR_NONE;\n+}\n+\n #define RESERVED NULL\n #define UNIMPLEMENTED NULL\n \n@@ -30,8 +78,8 @@ struct _Jv_jvmtiEnv _Jv_JVMTI_Interface =\n   UNIMPLEMENTED,\t\t// SetEventNotification\n   RESERVED,\t\t\t// reserved3\n   UNIMPLEMENTED,\t\t// GetAllThreads\n-  UNIMPLEMENTED, \t\t// SuspendThread\n-  UNIMPLEMENTED,\t\t// ResumeThread\n+  _Jv_JVMTI_SuspendThread,\t// SuspendThread\n+  _Jv_JVMTI_ResumeThread,\t// ResumeThread\n   UNIMPLEMENTED,\t\t// StopThread\n   UNIMPLEMENTED,\t\t// InterruptThread\n   UNIMPLEMENTED,\t\t// GetThreadInfo"}, {"sha": "48501628ad01ca397e5408d036e5c00ee788c651", "filename": "libjava/posix-threads.cc", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/303f32ccd7cdf2e5cf1035a56599905ace682dbc/libjava%2Fposix-threads.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/303f32ccd7cdf2e5cf1035a56599905ace682dbc/libjava%2Fposix-threads.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fposix-threads.cc?ref=303f32ccd7cdf2e5cf1035a56599905ace682dbc", "patch": "@@ -505,22 +505,6 @@ _Jv_ThreadWait (void)\n   pthread_mutex_unlock (&daemon_mutex);\n }\n \n-void\n-_Jv_ThreadDebugSuspend (_Jv_Thread_t *data)\n-{\n-}\n-\n-void\n-_Jv_ThreadDebugResume (_Jv_Thread_t *data)\n-{\n-}\n-\n-jint\n-_Jv_ThreadDebugSuspendCount (_Jv_Thread_t *data)\n-{\n-  return -1;\n-}\n-\n #if defined(SLOW_PTHREAD_SELF)\n \n #include \"sysdep/locks.h\""}, {"sha": "04d2d34ea92bc58e162a870ddc2a015ab7ec4cc1", "filename": "libjava/win32-threads.cc", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/303f32ccd7cdf2e5cf1035a56599905ace682dbc/libjava%2Fwin32-threads.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/303f32ccd7cdf2e5cf1035a56599905ace682dbc/libjava%2Fwin32-threads.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fwin32-threads.cc?ref=303f32ccd7cdf2e5cf1035a56599905ace682dbc", "patch": "@@ -420,19 +420,3 @@ _Jv_ThreadInterrupt (_Jv_Thread_t *data)\n   LeaveCriticalSection (&data->interrupt_mutex);\n }\n \n-void\n-_Jv_ThreadDebugSuspend (_Jv_Thread_t *data)\n-{\n-}\n-\n-void\n-_Jv_ThreadDebugResume (_Jv_Thread_t *data)\n-{\n-}\n-\n-jint\n-_Jv_ThreadDebugSuspendCount (_Jv_Thread_t *data)\n-{\n-  return -1;\n-}\n-"}]}