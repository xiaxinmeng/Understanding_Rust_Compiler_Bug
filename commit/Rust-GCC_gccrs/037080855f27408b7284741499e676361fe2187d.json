{"sha": "037080855f27408b7284741499e676361fe2187d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM3MDgwODU1ZjI3NDA4YjcyODQ3NDE0OTllNjc2MzYxZmUyMTg3ZA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-17T07:23:29Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-17T07:23:29Z"}, "message": "(get_inner_reference): If flag_volatile, treat every INDIRECT_REF as volatile.\n\nFrom-SVN: r2499", "tree": {"sha": "9e22f9567d736857820503706379c0473440c98d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e22f9567d736857820503706379c0473440c98d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/037080855f27408b7284741499e676361fe2187d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/037080855f27408b7284741499e676361fe2187d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/037080855f27408b7284741499e676361fe2187d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/037080855f27408b7284741499e676361fe2187d/comments", "author": null, "committer": null, "parents": [{"sha": "eda5fa7b7e7bb60c31a39ac8e9de1ddf30d67724", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eda5fa7b7e7bb60c31a39ac8e9de1ddf30d67724", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eda5fa7b7e7bb60c31a39ac8e9de1ddf30d67724"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "a9c6ff1c711ab4da2d4a3242832beb991e8abfc3", "filename": "gcc/expr.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/037080855f27408b7284741499e676361fe2187d/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/037080855f27408b7284741499e676361fe2187d/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=037080855f27408b7284741499e676361fe2187d", "patch": "@@ -2807,6 +2807,9 @@ get_inner_reference (exp, pbitsize, pbitpos, poffset, pmode, punsignedp, pvolati\n \n   while (1)\n     {\n+      if (TREE_CODE (exp) == INDIRECT_REF && flag_volatile)\n+ \t*pvolatilep = 1;\n+\n       if (TREE_CODE (exp) == COMPONENT_REF || TREE_CODE (exp) == BIT_FIELD_REF)\n \t{\n \t  tree pos = (TREE_CODE (exp) == COMPONENT_REF"}]}