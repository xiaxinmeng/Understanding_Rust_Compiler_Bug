{"sha": "981dc73548710dcf4df7754d60e95f6b5fa48910", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTgxZGM3MzU0ODcxMGRjZjRkZjc3NTRkNjBlOTVmNmI1ZmE0ODkxMA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2011-07-25T03:26:35Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2011-07-25T03:26:35Z"}, "message": "re PR debug/49825 (Many testcase failures)\n\nPR debug/49825\n        * dwarf2cfi.c (dwarf2out_stack_adjust): Move A_O_A test earlier.\n        (dwarf2out_notice_stack_adjust): Use args_size from call_insn.\n\nFrom-SVN: r176729", "tree": {"sha": "dc95780c346e5398d559604450950f4b6b3386e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc95780c346e5398d559604450950f4b6b3386e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/981dc73548710dcf4df7754d60e95f6b5fa48910", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/981dc73548710dcf4df7754d60e95f6b5fa48910", "html_url": "https://github.com/Rust-GCC/gccrs/commit/981dc73548710dcf4df7754d60e95f6b5fa48910", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/981dc73548710dcf4df7754d60e95f6b5fa48910/comments", "author": null, "committer": null, "parents": [{"sha": "3382318ac8a06d22910426545aa61c1ecd47fd39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3382318ac8a06d22910426545aa61c1ecd47fd39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3382318ac8a06d22910426545aa61c1ecd47fd39"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "b88996e5befe1b3719863ca97fca480c7db20c74", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/981dc73548710dcf4df7754d60e95f6b5fa48910/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/981dc73548710dcf4df7754d60e95f6b5fa48910/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=981dc73548710dcf4df7754d60e95f6b5fa48910", "patch": "@@ -1,3 +1,9 @@\n+2011-07-24  Richard Henderson  <rth@redhat.com>\n+\n+\tPR debug/49825\n+\t* dwarf2cfi.c (dwarf2out_stack_adjust): Move A_O_A test earlier.\n+\t(dwarf2out_notice_stack_adjust): Use args_size from call_insn.\n+\n 2011-07-24  Richard Henderson  <rth@redhat.com>\n \n \tPR debug/49827"}, {"sha": "de19d06a08eec7606a82816eefbc21baaae62cfd", "filename": "gcc/dwarf2cfi.c", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/981dc73548710dcf4df7754d60e95f6b5fa48910/gcc%2Fdwarf2cfi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/981dc73548710dcf4df7754d60e95f6b5fa48910/gcc%2Fdwarf2cfi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2cfi.c?ref=981dc73548710dcf4df7754d60e95f6b5fa48910", "patch": "@@ -956,14 +956,6 @@ dwarf2out_stack_adjust (HOST_WIDE_INT offset)\n   if (cur_trace->cfa_store.reg == dw_stack_pointer_regnum)\n     cur_trace->cfa_store.offset += offset;\n \n-#ifndef STACK_GROWS_DOWNWARD\n-  offset = -offset;\n-#endif\n-\n-  queued_args_size += offset;\n-  if (queued_args_size < 0)\n-    queued_args_size = 0;\n-\n   /* ??? The assumption seems to be that if A_O_A, the only CFA adjustments\n      involving the stack pointer are inside the prologue and marked as\n      RTX_FRAME_RELATED_P.  That said, should we not verify this assumption\n@@ -972,6 +964,14 @@ dwarf2out_stack_adjust (HOST_WIDE_INT offset)\n   if (ACCUMULATE_OUTGOING_ARGS)\n     return;\n \n+#ifndef STACK_GROWS_DOWNWARD\n+  offset = -offset;\n+#endif\n+\n+  queued_args_size += offset;\n+  if (queued_args_size < 0)\n+    queued_args_size = 0;\n+\n   def_cfa_1 (&loc);\n   if (flag_asynchronous_unwind_tables)\n     dwarf2out_args_size (queued_args_size);\n@@ -1016,8 +1016,7 @@ dwarf2out_notice_stack_adjust (rtx insn, bool after_p)\n \t  if (GET_CODE (insn) == SET)\n \t    insn = SET_SRC (insn);\n \t  gcc_assert (GET_CODE (insn) == CALL);\n-\t  gcc_assert (queued_args_size == INTVAL (XEXP (insn, 1)));\n-\t  dwarf2out_args_size (queued_args_size);\n+\t  dwarf2out_args_size (INTVAL (XEXP (insn, 1)));\n \t}\n       return;\n     }"}]}