{"sha": "86b8fed14d69f81d4b2d7229fb5e4333ec8abe14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZiOGZlZDE0ZDY5ZjgxZDRiMmQ3MjI5ZmI1ZTQzMzNlYzhhYmUxNA==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-06-09T15:16:54Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-06-09T15:16:54Z"}, "message": "call.c (build_call_n): Call XALLOCAVEC instead of alloca.\n\n\t* call.c (build_call_n): Call XALLOCAVEC instead of alloca.\n\t(build_op_delete_call): Likewise.\n\t(build_over_call): Likewise.\n\t* cp-gimplify.c (cxx_omp_clause_apply_fn): Likewise.\n\t* pt.c (process_partial_specialization): Likewise.\n\t(tsubst_template_args): Likewise.\n\t* semantics.c (finish_asm_stmt): Likewise.\n\nFrom-SVN: r160485", "tree": {"sha": "6162a09559481c767b455c6ea6b6ef7861306c48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6162a09559481c767b455c6ea6b6ef7861306c48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86b8fed14d69f81d4b2d7229fb5e4333ec8abe14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86b8fed14d69f81d4b2d7229fb5e4333ec8abe14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86b8fed14d69f81d4b2d7229fb5e4333ec8abe14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86b8fed14d69f81d4b2d7229fb5e4333ec8abe14/comments", "author": null, "committer": null, "parents": [{"sha": "8d681dbfa1342372b1686e213f056bd5c98c1d57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d681dbfa1342372b1686e213f056bd5c98c1d57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d681dbfa1342372b1686e213f056bd5c98c1d57"}], "stats": {"total": 31, "additions": 20, "deletions": 11}, "files": [{"sha": "f9831421f38192212ff81595fbc53964b7491178", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86b8fed14d69f81d4b2d7229fb5e4333ec8abe14/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86b8fed14d69f81d4b2d7229fb5e4333ec8abe14/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=86b8fed14d69f81d4b2d7229fb5e4333ec8abe14", "patch": "@@ -1,3 +1,13 @@\n+2010-06-09  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* call.c (build_call_n): Call XALLOCAVEC instead of alloca.\n+\t(build_op_delete_call): Likewise.\n+\t(build_over_call): Likewise.\n+\t* cp-gimplify.c (cxx_omp_clause_apply_fn): Likewise.\n+\t* pt.c (process_partial_specialization): Likewise.\n+\t(tsubst_template_args): Likewise.\n+\t* semantics.c (finish_asm_stmt): Likewise.\n+\n 2010-06-08  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* decl.c (record_key_method_defined): New, broken out of ..."}, {"sha": "9162a1d83a5e15f156f2db56074def1740dc3635", "filename": "gcc/cp/call.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86b8fed14d69f81d4b2d7229fb5e4333ec8abe14/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86b8fed14d69f81d4b2d7229fb5e4333ec8abe14/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=86b8fed14d69f81d4b2d7229fb5e4333ec8abe14", "patch": "@@ -282,7 +282,7 @@ build_call_n (tree function, int n, ...)\n     return build_call_a (function, 0, NULL);\n   else\n     {\n-      tree *argarray = (tree *) alloca (n * sizeof (tree));\n+      tree *argarray = XALLOCAVEC (tree, n);\n       va_list ap;\n       int i;\n \n@@ -4756,7 +4756,7 @@ build_op_delete_call (enum tree_code code, tree addr, tree size,\n \t  /* The placement args might not be suitable for overload\n \t     resolution at this point, so build the call directly.  */\n \t  int nargs = call_expr_nargs (placement);\n-\t  tree *argarray = (tree *) alloca (nargs * sizeof (tree));\n+\t  tree *argarray = XALLOCAVEC (tree, nargs);\n \t  int i;\n \t  argarray[0] = addr;\n \t  for (i = 1; i < nargs; i++)\n@@ -5624,7 +5624,7 @@ build_over_call (struct z_candidate *cand, int flags, tsubst_flags_t complain)\n   nargs = VEC_length (tree, args) + (first_arg != NULL_TREE ? 1 : 0);\n   if (parmlen > nargs)\n     nargs = parmlen;\n-  argarray = (tree *) alloca (nargs * sizeof (tree));\n+  argarray = XALLOCAVEC (tree, nargs);\n \n   /* The implicit parameters to a constructor are not considered by overload\n      resolution, and must be of the proper type.  */"}, {"sha": "fb7daeb3e818b2275f22ed63ca2e3c749443e78d", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86b8fed14d69f81d4b2d7229fb5e4333ec8abe14/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86b8fed14d69f81d4b2d7229fb5e4333ec8abe14/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=86b8fed14d69f81d4b2d7229fb5e4333ec8abe14", "patch": "@@ -981,7 +981,7 @@ cxx_omp_clause_apply_fn (tree fn, tree arg1, tree arg2)\n     return NULL;\n \n   nargs = list_length (DECL_ARGUMENTS (fn));\n-  argarray = (tree *) alloca (nargs * sizeof (tree));\n+  argarray = XALLOCAVEC (tree, nargs);\n \n   defparm = TREE_CHAIN (TYPE_ARG_TYPES (TREE_TYPE (fn)));\n   if (arg2)"}, {"sha": "69216cf6e439593959e914e1d7e3339e74cf7c6e", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86b8fed14d69f81d4b2d7229fb5e4333ec8abe14/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86b8fed14d69f81d4b2d7229fb5e4333ec8abe14/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=86b8fed14d69f81d4b2d7229fb5e4333ec8abe14", "patch": "@@ -3875,10 +3875,10 @@ process_partial_specialization (tree decl)\n \n      or some such would have been OK.  */\n   tpd.level = TMPL_PARMS_DEPTH (current_template_parms);\n-  tpd.parms = (int *) alloca (sizeof (int) * ntparms);\n+  tpd.parms = XALLOCAVEC (int, ntparms);\n   memset (tpd.parms, 0, sizeof (int) * ntparms);\n \n-  tpd.arg_uses_template_parms = (int *) alloca (sizeof (int) * nargs);\n+  tpd.arg_uses_template_parms = XALLOCAVEC (int, nargs);\n   memset (tpd.arg_uses_template_parms, 0, sizeof (int) * nargs);\n   for (i = 0; i < nargs; ++i)\n     {\n@@ -3993,12 +3993,11 @@ process_partial_specialization (tree decl)\n                   if (!tpd2.parms)\n                     {\n                       /* We haven't yet initialized TPD2.  Do so now.  */\n-                      tpd2.arg_uses_template_parms \n-                        = (int *) alloca (sizeof (int) * nargs);\n+                      tpd2.arg_uses_template_parms = XALLOCAVEC (int, nargs);\n                       /* The number of parameters here is the number in the\n                          main template, which, as checked in the assertion\n                          above, is NARGS.  */\n-                      tpd2.parms = (int *) alloca (sizeof (int) * nargs);\n+                      tpd2.parms = XALLOCAVEC (int, nargs);\n                       tpd2.level = \n                         TMPL_PARMS_DEPTH (DECL_TEMPLATE_PARMS (maintmpl));\n                     }\n@@ -8525,7 +8524,7 @@ tsubst_template_args (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n   tree orig_t = t;\n   int len = TREE_VEC_LENGTH (t);\n   int need_new = 0, i, expanded_len_adjust = 0, out;\n-  tree *elts = (tree *) alloca (len * sizeof (tree));\n+  tree *elts = XALLOCAVEC (tree, len);\n \n   for (i = 0; i < len; i++)\n     {"}, {"sha": "8eb533614e09b3f74173d0642724985093f101a2", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86b8fed14d69f81d4b2d7229fb5e4333ec8abe14/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86b8fed14d69f81d4b2d7229fb5e4333ec8abe14/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=86b8fed14d69f81d4b2d7229fb5e4333ec8abe14", "patch": "@@ -1219,7 +1219,7 @@ finish_asm_stmt (int volatile_p, tree string, tree output_operands,\n       tree operand;\n       int i;\n \n-      oconstraints = (const char **) alloca (noutputs * sizeof (char *));\n+      oconstraints = XALLOCAVEC (const char *, noutputs);\n \n       string = resolve_asm_operand_names (string, output_operands,\n \t\t\t\t\t  input_operands, labels);"}]}