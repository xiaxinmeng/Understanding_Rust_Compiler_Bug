{"sha": "41b059f3d869b456bec3eee7e3eb0ed5ba0a9300", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFiMDU5ZjNkODY5YjQ1NmJlYzNlZWU3ZTNlYjBlZDViYTBhOTMwMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-07-31T18:07:20Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-07-31T18:07:20Z"}, "message": "re PR c++/36405 (ICE with typeid of member function)\n\n\tPR c++/36405\n\t* rtti.c (get_tinfo_decl_dynamic, get_typeid): Call\n\tcomplete_type_or_else even for UNKNOWN_TYPE to get diagnostics.\n\n\t* g++.dg/rtti/typeid8.C: New test.\n\nFrom-SVN: r138426", "tree": {"sha": "e96cff0fa7f70ec9300fe146fccee8aa0703f96b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e96cff0fa7f70ec9300fe146fccee8aa0703f96b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41b059f3d869b456bec3eee7e3eb0ed5ba0a9300", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41b059f3d869b456bec3eee7e3eb0ed5ba0a9300", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41b059f3d869b456bec3eee7e3eb0ed5ba0a9300", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41b059f3d869b456bec3eee7e3eb0ed5ba0a9300/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "10ee5386adadefebd247c7e4870c666f2c9b359d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10ee5386adadefebd247c7e4870c666f2c9b359d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10ee5386adadefebd247c7e4870c666f2c9b359d"}], "stats": {"total": 43, "additions": 41, "deletions": 2}, "files": [{"sha": "c865326d0bc19e0e418dbf0740b3c5a4aff0b1da", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41b059f3d869b456bec3eee7e3eb0ed5ba0a9300/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41b059f3d869b456bec3eee7e3eb0ed5ba0a9300/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=41b059f3d869b456bec3eee7e3eb0ed5ba0a9300", "patch": "@@ -1,3 +1,9 @@\n+2008-07-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/36405\n+\t* rtti.c (get_tinfo_decl_dynamic, get_typeid): Call\n+\tcomplete_type_or_else even for UNKNOWN_TYPE to get diagnostics.\n+\n 2008-07-31  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/36633"}, {"sha": "e3e5349f5ca99f5f1e459ea3e51b5d1085092623", "filename": "gcc/cp/rtti.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41b059f3d869b456bec3eee7e3eb0ed5ba0a9300/gcc%2Fcp%2Frtti.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41b059f3d869b456bec3eee7e3eb0ed5ba0a9300/gcc%2Fcp%2Frtti.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frtti.c?ref=41b059f3d869b456bec3eee7e3eb0ed5ba0a9300", "patch": "@@ -252,7 +252,8 @@ get_tinfo_decl_dynamic (tree exp)\n   /* Peel off cv qualifiers.  */\n   type = TYPE_MAIN_VARIANT (type);\n \n-  if (CLASS_TYPE_P (type))\n+  /* For UNKNOWN_TYPEs call complete_type_or_else to get diagnostics.  */\n+  if (CLASS_TYPE_P (type) || TREE_CODE (type) == UNKNOWN_TYPE)\n     type = complete_type_or_else (type, exp);\n \n   if (!type)\n@@ -459,7 +460,8 @@ get_typeid (tree type)\n      that is the operand of typeid are always ignored.  */\n   type = TYPE_MAIN_VARIANT (type);\n \n-  if (CLASS_TYPE_P (type))\n+  /* For UNKNOWN_TYPEs call complete_type_or_else to get diagnostics.  */\n+  if (CLASS_TYPE_P (type) || TREE_CODE (type) == UNKNOWN_TYPE)\n     type = complete_type_or_else (type, NULL_TREE);\n \n   if (!type)"}, {"sha": "f05f6276b1f0b94d25836e73048b8a2dd4ce9b52", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41b059f3d869b456bec3eee7e3eb0ed5ba0a9300/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41b059f3d869b456bec3eee7e3eb0ed5ba0a9300/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=41b059f3d869b456bec3eee7e3eb0ed5ba0a9300", "patch": "@@ -1,3 +1,8 @@\n+2008-07-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/36405\n+\t* g++.dg/rtti/typeid8.C: New test.\n+\n 2008-07-31  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/36978"}, {"sha": "2b13be5ef5266b05a899b8bc8adaeeca4262c33e", "filename": "gcc/testsuite/g++.dg/rtti/typeid8.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41b059f3d869b456bec3eee7e3eb0ed5ba0a9300/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Frtti%2Ftypeid8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41b059f3d869b456bec3eee7e3eb0ed5ba0a9300/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Frtti%2Ftypeid8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Frtti%2Ftypeid8.C?ref=41b059f3d869b456bec3eee7e3eb0ed5ba0a9300", "patch": "@@ -0,0 +1,26 @@\n+// PR c++/36405\n+// { dg-do compile }\n+\n+#include <typeinfo>\n+\n+struct A\n+{\n+  void foo ()\n+  {\n+    typeid (foo).name ();\t// { dg-error \"invalid use of member\" }\n+    typeid (A::foo).name ();\t// { dg-error \"invalid use of member\" }\n+  }\n+  void bar ()\n+  {\n+    typeid (foo).name ();\t// { dg-error \"invalid use of member\" }\n+    typeid (A::foo).name ();\t// { dg-error \"invalid use of member\" }\n+  }\n+  static void baz ()\n+  {\n+    typeid (baz).name ();\n+    typeid (A::baz).name ();\n+  }\n+};\n+\n+const char *p1 = typeid (A::foo).name ();\t// { dg-error \"invalid use of non-static member\" }\n+const char *p2 = typeid (A::baz).name ();"}]}