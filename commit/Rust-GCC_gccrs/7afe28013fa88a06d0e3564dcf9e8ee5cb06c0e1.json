{"sha": "7afe28013fa88a06d0e3564dcf9e8ee5cb06c0e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FmZTI4MDEzZmE4OGEwNmQwZTM1NjRkY2Y5ZThlZTVjYjA2YzBlMQ==", "commit": {"author": {"name": "David S. Miller", "email": "davem@davemloft.net", "date": "2013-02-13T20:25:41Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2013-02-13T20:25:41Z"}, "message": "We should not strip subregs of non-scalars during shift expansion.\n\n\t* expmed.c (expand_shift_1): Only strip scalar integer subregs.\n\nFrom-SVN: r196027", "tree": {"sha": "7b333a574aa93a145dfacbec0bee719738811eb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b333a574aa93a145dfacbec0bee719738811eb8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7afe28013fa88a06d0e3564dcf9e8ee5cb06c0e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7afe28013fa88a06d0e3564dcf9e8ee5cb06c0e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7afe28013fa88a06d0e3564dcf9e8ee5cb06c0e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7afe28013fa88a06d0e3564dcf9e8ee5cb06c0e1/comments", "author": {"login": "davem330", "id": 1053866, "node_id": "MDQ6VXNlcjEwNTM4NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1053866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davem330", "html_url": "https://github.com/davem330", "followers_url": "https://api.github.com/users/davem330/followers", "following_url": "https://api.github.com/users/davem330/following{/other_user}", "gists_url": "https://api.github.com/users/davem330/gists{/gist_id}", "starred_url": "https://api.github.com/users/davem330/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davem330/subscriptions", "organizations_url": "https://api.github.com/users/davem330/orgs", "repos_url": "https://api.github.com/users/davem330/repos", "events_url": "https://api.github.com/users/davem330/events{/privacy}", "received_events_url": "https://api.github.com/users/davem330/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8a04a774db8ee076b63c190e71cd331077c2a321", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a04a774db8ee076b63c190e71cd331077c2a321", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a04a774db8ee076b63c190e71cd331077c2a321"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "bfaa7d302e5ea42612445ec125d047814f5ad123", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afe28013fa88a06d0e3564dcf9e8ee5cb06c0e1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afe28013fa88a06d0e3564dcf9e8ee5cb06c0e1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7afe28013fa88a06d0e3564dcf9e8ee5cb06c0e1", "patch": "@@ -1,3 +1,7 @@\n+2013-02-13  David S. Miller  <davem@davemloft.net>\n+\n+\t* expmed.c (expand_shift_1): Only strip scalar integer subregs.\n+\n 2013-02-13  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR target/56184"}, {"sha": "954a360c7b23c6b5bd60b3520e00c4c222bc5886", "filename": "gcc/expmed.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afe28013fa88a06d0e3564dcf9e8ee5cb06c0e1/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afe28013fa88a06d0e3564dcf9e8ee5cb06c0e1/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=7afe28013fa88a06d0e3564dcf9e8ee5cb06c0e1", "patch": "@@ -2116,8 +2116,8 @@ expand_shift_1 (enum tree_code code, enum machine_mode mode, rtx shifted,\n \t\t       % GET_MODE_BITSIZE (mode));\n       else if (GET_CODE (op1) == SUBREG\n \t       && subreg_lowpart_p (op1)\n-\t       && INTEGRAL_MODE_P (GET_MODE (SUBREG_REG (op1)))\n-\t       && INTEGRAL_MODE_P (GET_MODE (op1)))\n+\t       && SCALAR_INT_MODE_P (GET_MODE (SUBREG_REG (op1)))\n+\t       && SCALAR_INT_MODE_P (GET_MODE (op1)))\n \top1 = SUBREG_REG (op1);\n     }\n "}]}