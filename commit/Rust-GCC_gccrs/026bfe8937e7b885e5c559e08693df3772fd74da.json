{"sha": "026bfe8937e7b885e5c559e08693df3772fd74da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDI2YmZlODkzN2U3Yjg4NWU1YzU1OWUwODY5M2RmMzc3MmZkNzRkYQ==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.ibm.com", "date": "2019-04-02T10:58:33Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2019-04-02T10:58:33Z"}, "message": "S/390: arch13: Support 32 bit fp-int scalar converts\n\ngcc/ChangeLog:\n\n2019-04-02  Andreas Krebbel  <krebbel@linux.ibm.com>\n\n\t* config/s390/s390.md (VX_CONV_BFP, VX_CONV_INT): New mode\n\titerators.\n\t(SFSI): New mode attribute.\n\t(\"*fixuns_truncdfdi2_vx\", \"*fix_truncdfdi2_bfp_z13\")\n\t(\"*floatunsdidf2_z13\", ): Add support for 32 bit conversions and\n\trename to ...\n\t(\"*fixuns_trunc<VX_CONV_BFP:mode><VX_CONV_INT:mode>2_z13\")\n\t(\"*fix_trunc<VX_CONV_BFP:mode><VX_CONV_INT:mode>2_bfp_z13\")\n\t(\"*floatuns<VX_CONV_INT:mode><VX_CONV_BFP:mode>2_z13\"): ... these.\n\t(\"floatsi<mode>2\"): Add wcefb instruction.\n\nFrom-SVN: r270082", "tree": {"sha": "33914a4c2a09cff972d624c90e042a643b51d8be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33914a4c2a09cff972d624c90e042a643b51d8be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/026bfe8937e7b885e5c559e08693df3772fd74da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/026bfe8937e7b885e5c559e08693df3772fd74da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/026bfe8937e7b885e5c559e08693df3772fd74da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/026bfe8937e7b885e5c559e08693df3772fd74da/comments", "author": {"login": "Andreas-Krebbel", "id": 38103320, "node_id": "MDQ6VXNlcjM4MTAzMzIw", "avatar_url": "https://avatars.githubusercontent.com/u/38103320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andreas-Krebbel", "html_url": "https://github.com/Andreas-Krebbel", "followers_url": "https://api.github.com/users/Andreas-Krebbel/followers", "following_url": "https://api.github.com/users/Andreas-Krebbel/following{/other_user}", "gists_url": "https://api.github.com/users/Andreas-Krebbel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andreas-Krebbel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andreas-Krebbel/subscriptions", "organizations_url": "https://api.github.com/users/Andreas-Krebbel/orgs", "repos_url": "https://api.github.com/users/Andreas-Krebbel/repos", "events_url": "https://api.github.com/users/Andreas-Krebbel/events{/privacy}", "received_events_url": "https://api.github.com/users/Andreas-Krebbel/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4156b05639ad240a82ff2fae92eede5f4e498fec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4156b05639ad240a82ff2fae92eede5f4e498fec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4156b05639ad240a82ff2fae92eede5f4e498fec"}], "stats": {"total": 84, "additions": 57, "deletions": 27}, "files": [{"sha": "d71bdea76a965c5ed795cbad514fc9752f04c634", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/026bfe8937e7b885e5c559e08693df3772fd74da/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/026bfe8937e7b885e5c559e08693df3772fd74da/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=026bfe8937e7b885e5c559e08693df3772fd74da", "patch": "@@ -1,3 +1,16 @@\n+2019-04-02  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\t* config/s390/s390.md (VX_CONV_BFP, VX_CONV_INT): New mode\n+\titerators.\n+\t(SFSI): New mode attribute.\n+\t(\"*fixuns_truncdfdi2_vx\", \"*fix_truncdfdi2_bfp_z13\")\n+\t(\"*floatunsdidf2_z13\", ): Add support for 32 bit conversions and\n+\trename to ...\n+\t(\"*fixuns_trunc<VX_CONV_BFP:mode><VX_CONV_INT:mode>2_z13\")\n+\t(\"*fix_trunc<VX_CONV_BFP:mode><VX_CONV_INT:mode>2_bfp_z13\")\n+\t(\"*floatuns<VX_CONV_INT:mode><VX_CONV_BFP:mode>2_z13\"): ... these.\n+\t(\"floatsi<mode>2\"): Add wcefb instruction.\n+\n 2019-04-02  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \t* config/s390/s390.md (\"xde\"): Extend mode attribute to vector"}, {"sha": "17aafe54afb96db367197a82341bf108db632b23", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 44, "deletions": 27, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/026bfe8937e7b885e5c559e08693df3772fd74da/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/026bfe8937e7b885e5c559e08693df3772fd74da/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=026bfe8937e7b885e5c559e08693df3772fd74da", "patch": "@@ -632,6 +632,10 @@\n (define_mode_iterator DD_DF [DF DD])\n (define_mode_iterator TD_TF [TF TD])\n \n+; 32 bit int<->fp conversion instructions are available since VXE2 (arch13).\n+(define_mode_iterator VX_CONV_BFP [DF (SF \"TARGET_VXE2\")])\n+(define_mode_iterator VX_CONV_INT [DI (SI \"TARGET_VXE2\")])\n+\n ;; These mode iterators allow 31-bit and 64-bit GPR patterns to be generated\n ;; from the same template.\n (define_mode_iterator GPR [(DI \"TARGET_ZARCH\") SI])\n@@ -724,6 +728,9 @@\n (define_mode_attr DFDI [(TF \"0\") (DF \"*\") (SF \"0\")\n \t\t\t(TD \"0\") (DD \"0\") (DD \"0\")\n \t\t\t(TI \"0\") (DI \"*\") (SI \"0\")])\n+(define_mode_attr SFSI [(TF \"0\") (DF \"0\") (SF \"*\")\n+\t\t\t(TD \"0\") (DD \"0\") (DD \"0\")\n+\t\t\t(TI \"0\") (DI \"0\") (SI \"*\")])\n (define_mode_attr DF [(TF \"0\") (DF \"*\") (SF \"0\")\n \t\t      (TD \"0\") (DD \"0\") (DD \"0\")\n \t\t      (TI \"0\") (DI \"0\") (SI \"0\")])\n@@ -5053,16 +5060,18 @@\n \n ; fixuns_trunc(tf|df|sf|td|dd)(di|si)2 instruction patterns.\n \n-; df -> unsigned di\n-(define_insn \"*fixuns_truncdfdi2_vx\"\n-  [(set (match_operand:DI                  0 \"register_operand\" \"=d,v\")\n-\t(unsigned_fix:DI (match_operand:DF 1 \"register_operand\"  \"f,v\")))\n-   (unspec:DI [(match_operand:DI           2 \"immediate_operand\" \"K,K\")] UNSPEC_ROUND)\n+; df -> unsigned di, vxe2: sf -> unsigned si\n+; clgdbr, clfebr, wclgdb, wclfeb\n+(define_insn \"*fixuns_trunc<VX_CONV_BFP:mode><VX_CONV_INT:mode>2_z13\"\n+  [(set (match_operand:VX_CONV_INT                           0 \"register_operand\" \"=d,v\")\n+\t(unsigned_fix:VX_CONV_INT (match_operand:VX_CONV_BFP 1 \"register_operand\"  \"f,v\")))\n+   (unspec:DI [(match_operand:DI                             2 \"immediate_operand\" \"K,K\")] UNSPEC_ROUND)\n    (clobber (reg:CC CC_REGNUM))]\n-  \"TARGET_VX && TARGET_HARD_FLOAT\"\n+  \"TARGET_VX && TARGET_HARD_FLOAT\n+   && GET_MODE_SIZE (<VX_CONV_INT:MODE>mode) == GET_MODE_SIZE (<VX_CONV_BFP:MODE>mode)\"\n   \"@\n-   clgdbr\\t%0,%h2,%1,0\n-   wclgdb\\t%v0,%v1,0,%h2\"\n+   cl<VX_CONV_INT:gf><VX_CONV_BFP:xde>br\\t%0,%h2,%1,0\n+   wcl<VX_CONV_INT:gf><VX_CONV_BFP:xde>b\\t%v0,%v1,0,%h2\"\n   [(set_attr \"op_type\" \"RRF,VRR\")\n    (set_attr \"type\"    \"ftoi\")])\n \n@@ -5090,15 +5099,18 @@\n   DONE;\n })\n \n-(define_insn \"*fix_truncdfdi2_bfp_z13\"\n-  [(set (match_operand:DI         0 \"register_operand\" \"=d,v\")\n-        (fix:DI (match_operand:DF 1 \"register_operand\"  \"f,v\")))\n-   (unspec:DI [(match_operand:DI  2 \"immediate_operand\" \"K,K\")] UNSPEC_ROUND)\n+; df -> signed di, vxe2: sf -> signed si\n+; cgdbr, cfebr, wcgdb, wcfeb\n+(define_insn \"*fix_trunc<VX_CONV_BFP:mode><VX_CONV_INT:mode>2_bfp_z13\"\n+  [(set (match_operand:VX_CONV_INT                  0 \"register_operand\" \"=d,v\")\n+        (fix:VX_CONV_INT (match_operand:VX_CONV_BFP 1 \"register_operand\"  \"f,v\")))\n+   (unspec:VX_CONV_INT [(match_operand:VX_CONV_INT  2 \"immediate_operand\" \"K,K\")] UNSPEC_ROUND)\n    (clobber (reg:CC CC_REGNUM))]\n-  \"TARGET_VX && TARGET_HARD_FLOAT\"\n+  \"TARGET_VX && TARGET_HARD_FLOAT\n+   && GET_MODE_SIZE (<VX_CONV_INT:MODE>mode) == GET_MODE_SIZE (<VX_CONV_BFP:MODE>mode)\"\n   \"@\n-   cgdbr\\t%0,%h2,%1\n-   wcgdb\\t%v0,%v1,0,%h2\"\n+   c<VX_CONV_INT:gf><VX_CONV_BFP:xde>br\\t%0,%h2,%1\n+   wc<VX_CONV_INT:gf><VX_CONV_BFP:xde>b\\t%v0,%v1,0,%h2\"\n   [(set_attr \"op_type\" \"RRE,VRR\")\n    (set_attr \"type\"    \"ftoi\")])\n \n@@ -5178,14 +5190,18 @@\n    (set_attr \"cpu_facility\" \"*,vx\")\n    (set_attr \"enabled\"      \"*,<DFDI>\")])\n \n-; cxfbr, cdfbr, cefbr\n+; cxfbr, cdfbr, cefbr, wcefb\n (define_insn \"floatsi<mode>2\"\n-  [(set (match_operand:BFP 0 \"register_operand\" \"=f\")\n-        (float:BFP (match_operand:SI 1 \"register_operand\" \"d\")))]\n+  [(set (match_operand:BFP           0 \"register_operand\" \"=f,v\")\n+        (float:BFP (match_operand:SI 1 \"register_operand\"  \"d,v\")))]\n   \"TARGET_HARD_FLOAT\"\n-  \"c<xde>fbr\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RRE\")\n-   (set_attr \"type\"   \"itof<mode>\" )])\n+  \"@\n+   c<xde>fbr\\t%0,%1\n+   wcefb\\t%v0,%v1,0,0\"\n+  [(set_attr \"op_type\"      \"RRE,VRR\")\n+   (set_attr \"type\"         \"itof<mode>\" )\n+   (set_attr \"cpu_facility\" \"*,vxe2\")\n+   (set_attr \"enabled\"      \"*,<SFSI>\")])\n \n ; cxftr, cdftr\n (define_insn \"floatsi<mode>2\"\n@@ -5200,13 +5216,14 @@\n ; floatuns(si|di)(tf|df|sf|td|dd)2 instruction pattern(s).\n ;\n \n-(define_insn \"*floatunsdidf2_z13\"\n-  [(set (match_operand:DF                    0 \"register_operand\" \"=f,v\")\n-        (unsigned_float:DF (match_operand:DI 1 \"register_operand\"  \"d,v\")))]\n-  \"TARGET_VX && TARGET_HARD_FLOAT\"\n+(define_insn \"*floatuns<VX_CONV_INT:mode><VX_CONV_BFP:mode>2_z13\"\n+  [(set (match_operand:VX_CONV_BFP                             0 \"register_operand\" \"=f,v\")\n+        (unsigned_float:VX_CONV_BFP (match_operand:VX_CONV_INT 1 \"register_operand\"  \"d,v\")))]\n+  \"TARGET_VX && TARGET_HARD_FLOAT\n+   && GET_MODE_SIZE (<VX_CONV_INT:MODE>mode) == GET_MODE_SIZE (<VX_CONV_BFP:MODE>mode)\"\n   \"@\n-   cdlgbr\\t%0,0,%1,0\n-   wcdlgb\\t%v0,%v1,0,0\"\n+   c<VX_CONV_BFP:xde>l<VX_CONV_INT:gf>br\\t%0,0,%1,0\n+   wc<VX_CONV_BFP:xde>l<VX_CONV_INT:gf>b\\t%v0,%v1,0,0\"\n   [(set_attr \"op_type\" \"RRE,VRR\")\n    (set_attr \"type\"    \"itofdf\")])\n "}]}