{"sha": "b25a24078bcbcf6f8c0a50bbe681c6ab59686dfe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjI1YTI0MDc4YmNiY2Y2ZjhjMGE1MGJiZTY4MWM2YWI1OTY4NmRmZQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-03-10T17:58:23Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-03-10T17:58:23Z"}, "message": "tree-outof-ssa.c (analyze_edges_for_bb): Make the return type void.\n\n\t* tree-outof-ssa.c (analyze_edges_for_bb): Make the return\n\ttype void.\n\t(perform_edge_inserts): Unconditionally call\n\tfree_dominator_info.\n\nFrom-SVN: r96249", "tree": {"sha": "696bc015ccf1fee1cc0008a9812a84d8dc4a3b30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/696bc015ccf1fee1cc0008a9812a84d8dc4a3b30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b25a24078bcbcf6f8c0a50bbe681c6ab59686dfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b25a24078bcbcf6f8c0a50bbe681c6ab59686dfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b25a24078bcbcf6f8c0a50bbe681c6ab59686dfe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b25a24078bcbcf6f8c0a50bbe681c6ab59686dfe/comments", "author": null, "committer": null, "parents": [{"sha": "9a7363b9fbe199b230c34d5c78c79c92f2ef1391", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a7363b9fbe199b230c34d5c78c79c92f2ef1391", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a7363b9fbe199b230c34d5c78c79c92f2ef1391"}], "stats": {"total": 35, "additions": 20, "deletions": 15}, "files": [{"sha": "7244aa081fc99ccfe98583fb6970f4cae443803f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b25a24078bcbcf6f8c0a50bbe681c6ab59686dfe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b25a24078bcbcf6f8c0a50bbe681c6ab59686dfe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b25a24078bcbcf6f8c0a50bbe681c6ab59686dfe", "patch": "@@ -1,3 +1,10 @@\n+2005-03-10  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* tree-outof-ssa.c (analyze_edges_for_bb): Make the return\n+\ttype void.\n+\t(perform_edge_inserts): Unconditionally call\n+\tfree_dominator_info.\n+\n 2005-03-10  Bob Wilson  <bob.wilson@acm.org>\n \n \t* config/xtensa/xtensa.h (MEMBER_TYPE_FORCES_BLK): Define."}, {"sha": "f70ed082381f5193e826603e2be8b07196b3aeaf", "filename": "gcc/tree-outof-ssa.c", "status": "modified", "additions": 13, "deletions": 15, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b25a24078bcbcf6f8c0a50bbe681c6ab59686dfe/gcc%2Ftree-outof-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b25a24078bcbcf6f8c0a50bbe681c6ab59686dfe/gcc%2Ftree-outof-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-outof-ssa.c?ref=b25a24078bcbcf6f8c0a50bbe681c6ab59686dfe", "patch": "@@ -2026,7 +2026,7 @@ identical_stmt_lists_p (edge e1, edge e2)\n    any debug information to DEBUG_FILE.  Return true if anything other than a \n    standard edge insertion is done.  */\n \n-static bool \n+static void\n analyze_edges_for_bb (basic_block bb, FILE *debug_file)\n {\n   edge e;\n@@ -2057,7 +2057,7 @@ analyze_edges_for_bb (basic_block bb, FILE *debug_file)\n       FOR_EACH_EDGE (e, ei, bb->preds)\n \tif (PENDING_STMT (e))\n \t  bsi_commit_one_edge_insert (e, NULL);\n-      return false;\n+      return;\n     }\n   /* Find out how many edges there are with interesting pending stmts on them.  \n      Commit the stmts on edges we are not interested in.  */\n@@ -2094,7 +2094,7 @@ analyze_edges_for_bb (basic_block bb, FILE *debug_file)\n     {\n       if (single_edge)\n         bsi_commit_one_edge_insert (single_edge, NULL);\n-      return false;\n+      return;\n     }\n \n   /* Ensure that we have empty worklists.  */\n@@ -2156,7 +2156,7 @@ analyze_edges_for_bb (basic_block bb, FILE *debug_file)\n       VARRAY_POP_ALL (edge_leader);\n       VARRAY_POP_ALL (stmt_list);\n       bitmap_clear (leader_has_match);\n-      return false;\n+      return;\n     }\n \n \n@@ -2221,8 +2221,6 @@ analyze_edges_for_bb (basic_block bb, FILE *debug_file)\n   VARRAY_POP_ALL (edge_leader);\n   VARRAY_POP_ALL (stmt_list);\n   bitmap_clear (leader_has_match);\n-\n-  return true;\n }\n \n \n@@ -2236,26 +2234,26 @@ static void\n perform_edge_inserts (FILE *dump_file)\n {\n   basic_block bb;\n-  bool changed = false;\n \n   if (dump_file)\n     fprintf(dump_file, \"Analyzing Edge Insertions.\\n\");\n \n+  /* analyze_edges_for_bb calls make_forwarder_block, which tries to\n+     incrementally update the dominator information.  Since we don't\n+     need dominator information after this pass, go ahead and free the\n+     dominator information.  */\n+  free_dominance_info (CDI_DOMINATORS);\n+  free_dominance_info (CDI_POST_DOMINATORS);\n+\n   FOR_EACH_BB (bb)\n-    changed |= analyze_edges_for_bb (bb, dump_file);\n+    analyze_edges_for_bb (bb, dump_file);\n \n-  changed |= analyze_edges_for_bb (EXIT_BLOCK_PTR, dump_file);\n+  analyze_edges_for_bb (EXIT_BLOCK_PTR, dump_file);\n \n   /* Clear out any tables which were created.  */\n   edge_leader = NULL;\n   BITMAP_FREE (leader_has_match);\n \n-  if (changed)\n-    {\n-      free_dominance_info (CDI_DOMINATORS);\n-      free_dominance_info (CDI_POST_DOMINATORS);\n-    }\n-\n #ifdef ENABLE_CHECKING\n   {\n     edge_iterator ei;"}]}