{"sha": "926706f8282e7e29a9c413a199348678654c0725", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI2NzA2ZjgyODJlN2UyOWE5YzQxM2ExOTkzNDg2Nzg2NTRjMDcyNQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-11-12T08:57:49Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-11-12T08:57:49Z"}, "message": "Fix recent entry\n\nFrom-SVN: r181308", "tree": {"sha": "c3d0dba33d4c31b3b9a33d171dbda9a9cca0cd18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3d0dba33d4c31b3b9a33d171dbda9a9cca0cd18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/926706f8282e7e29a9c413a199348678654c0725", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/926706f8282e7e29a9c413a199348678654c0725", "html_url": "https://github.com/Rust-GCC/gccrs/commit/926706f8282e7e29a9c413a199348678654c0725", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/926706f8282e7e29a9c413a199348678654c0725/comments", "author": null, "committer": null, "parents": [{"sha": "49db0ca8f69e3a01f38c177d424f89afb056755b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49db0ca8f69e3a01f38c177d424f89afb056755b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49db0ca8f69e3a01f38c177d424f89afb056755b"}], "stats": {"total": 57, "additions": 25, "deletions": 32}, "files": [{"sha": "44121aa1fe3ef3d7a3b85ca4872dbe769f41d321", "filename": "gcc/ChangeLog", "status": "modified", "additions": 25, "deletions": 32, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/926706f8282e7e29a9c413a199348678654c0725/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/926706f8282e7e29a9c413a199348678654c0725/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=926706f8282e7e29a9c413a199348678654c0725", "patch": "@@ -118,40 +118,33 @@\n \tvect_build_slp_tree fails, properly handle freeing memory.\n \tIf it succeeded, clear def_stmts in oprnd_info.\n \n-2011-08-12  Dimitrios Apostolou  <jimis@gmx.net>\n-\n-\t* final.c, output.h (fprint_whex, fprint_w, fprint_ul, sprint_ul):\n-\tNew functions serving as fast replacements for fprintf() integer\n-\tto string conversions. They were used in the following changes.\n-\t* final.c (sprint_ul_rev): Internal helper for the above.\n-\t(output_addr_const): case CONST_INT: don't use fprintf().\n-\t* elfos.h (ASM_GENERATE_INTERNAL_LABEL): Don't use sprintf(\"%u\"),\n-\tuse sprint_ul() and stpcpy() which are much faster.\n+2011-11-11  Dimitrios Apostolou  <jimis@gmx.net>\n+\n+\t* defaults.h (ASM_OUTPUT_LABEL, ASM_OUTPUT_INTERNAL_LABEL): Expand on\n+\tmultiple lines for readability.\n+\t* output.h (fprint_whex, fprint_w, fprint_ul, sprint_ul): Declare.\n+\t(ASM_OUTPUT_LABELREF): Call fputs instead of asm_fprintf.\n+\t* dwarf2asm.c (dw2_assemble_integer, dw2_asm_output_data,\n+\tdw2_asm_data_uleb128, dw2_asm_delta_uleb128,\n+\tdw2_asm_delta_sleb128): Convert fprintf calls to the new functions.\n+\t* dwarf2out.c (dwarf2out_source_line): Call fprint_ul instead of\n+\tfprintf.\n+\t* final.c (fprint_whex, fprint_w, fprint_ul, sprint_ul): New functions\n+\tserving as fast replacements for fprintf integer to string conversions.\n+\t(sprint_ul_rev): Internal helper for the above.\n+\t(output_addr_const) <CONST_INT>: Don't use fprintf.\n+\t* varasm.c: Fix some whitespace inconsistencies.\n+\t(default_elf_asm_output_limited_string): New.\n+\t(default_elf_asm_output_ascii): Likewise.\n+\t(default_elf_internal_label): Likewise.\n+\t* config/elfos.h (ASM_GENERATE_INTERNAL_LABEL): Use sprint_ul and\n+\tstpcpy instead of sprintf.\n \t(TARGET_ASM_INTERNAL_LABEL): Define as default_elf_internal_label.\n-\t(ELF_ASCII_ESCAPES, ELF_STRING_LIMIT): Are the old ESCAPES and\n+\t(ELF_ASCII_ESCAPES, ELF_STRING_LIMIT): Rename from old ESCAPES and\n \tSTRING_LIMIT macros.\n-\t(ASM_OUTPUT_LIMITED_STRING, ASM_OUTPUT_ASCII): Macros now just\n-\tcall respective functions that provide the same\n-\tfunctionality. Those are default_elf_asm_output_limited_string()\n-\tand default_elf_asm_output_ascii() in varasm.c.\n-\t* varasm.c: Fixed some whitespace inconsistencies.\n-\t(default_elf_asm_output_limited_string)\n-\t(default_elf_asm_output_ascii): The above macros from elfos.h are\n-\timplemented here as these functions, avoiding superfluous calls to\n-\tfprintf().\n-\t(default_elf_internal_label): Hook for\n-\ttargetm.asm_out.internal_label and ASM_OUTPUT_DEBUG_LABEL.\n-\t* i386.c: Don't call fprintf(\"%u\") but fprint_ul() instead.\n-\t* defaults.h (ASM_OUTPUT_LABEL, ASM_OUTPUT_INTERNAL_LABEL):\n-\tExpanded the macros on multiple lines for readability.\n-\t(ASM_OUTPUT_LABELREF): Have two calls to fputs() instead of one to\n-\tasm_fprintf().\n-\t* dwarf2asm.c (dw2_assemble_integer, dw2_asm_output_data)\n-\t(dw2_asm_data_uleb128, dw2_asm_delta_uleb128)\n-\t(dw2_asm_delta_sleb128): Convert fprintf() calls to the new\n-\tfaster functions.\n-\t* dwarf2out.c (dwarf2out_source_line): Convert fprintf() calls to\n-\tthe new faster functions.\n+\t(ASM_OUTPUT_LIMITED_STRING, ASM_OUTPUT_ASCII): Call functions that\n+\tprovide the same functionality.\n+\t* config/i386/i386.c (print_reg): Call fprint_ul instead of fprintf.\n \n 2011-11-10  Andrew MacLeod  <amacleod@redhat.com>\n "}]}