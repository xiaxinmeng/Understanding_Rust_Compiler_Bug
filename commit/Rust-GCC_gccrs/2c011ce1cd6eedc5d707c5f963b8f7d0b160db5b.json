{"sha": "2c011ce1cd6eedc5d707c5f963b8f7d0b160db5b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmMwMTFjZTFjZDZlZWRjNWQ3MDdjNWY5NjNiOGY3ZDBiMTYwZGI1Yg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2009-07-13T10:22:57Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-13T10:22:57Z"}, "message": "lib.adb, [...]: Minor reformatting and code reorganization.\n\n2009-07-13  Robert Dewar  <dewar@adacore.com>\n\n\t* lib.adb, prj-nmsc.adb, prj-proc.adb, prj-proc.ads, prj.adb,\n\tprj.ads: Minor reformatting and code reorganization.\n\n\t* par-ch3.adb (Check_Restricted_Expression): New procedure\n\nFrom-SVN: r149566", "tree": {"sha": "b1fa70fd288fc7c51d82415fe99f6bddb38e414e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1fa70fd288fc7c51d82415fe99f6bddb38e414e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c011ce1cd6eedc5d707c5f963b8f7d0b160db5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c011ce1cd6eedc5d707c5f963b8f7d0b160db5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c011ce1cd6eedc5d707c5f963b8f7d0b160db5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c011ce1cd6eedc5d707c5f963b8f7d0b160db5b/comments", "author": null, "committer": null, "parents": [{"sha": "db55a299065a32d1ee32144dcee723bfd0870e4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db55a299065a32d1ee32144dcee723bfd0870e4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db55a299065a32d1ee32144dcee723bfd0870e4b"}], "stats": {"total": 231, "additions": 140, "deletions": 91}, "files": [{"sha": "c71282e4411b996c773108fcd70d13806727ba04", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c011ce1cd6eedc5d707c5f963b8f7d0b160db5b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c011ce1cd6eedc5d707c5f963b8f7d0b160db5b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2c011ce1cd6eedc5d707c5f963b8f7d0b160db5b", "patch": "@@ -1,3 +1,10 @@\n+2009-07-13  Robert Dewar  <dewar@adacore.com>\n+\n+\t* lib.adb, prj-nmsc.adb, prj-proc.adb, prj-proc.ads, prj.adb,\n+\tprj.ads: Minor reformatting and code reorganization.\n+\n+\t* par-ch3.adb (Check_Restricted_Expression): New procedure\n+\n 2009-07-13  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_attr.adb (Rewrite_Stream_Proc_Call): When rewriting a stream"}, {"sha": "63dd62025fe40bc8fc10baa54e164b7ba8eac4cf", "filename": "gcc/ada/lib.adb", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c011ce1cd6eedc5d707c5f963b8f7d0b160db5b/gcc%2Fada%2Flib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c011ce1cd6eedc5d707c5f963b8f7d0b160db5b/gcc%2Fada%2Flib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib.adb?ref=2c011ce1cd6eedc5d707c5f963b8f7d0b160db5b", "patch": "@@ -605,13 +605,15 @@ package body Lib is\n       --  If not in the table, must be a spec created for a main unit that is a\n       --  child subprogram body which we have not inserted into the table yet.\n \n-      if N /= Library_Unit (Cunit (Main_Unit)) then\n-         --  We do not use a pragma Assert here, since this would not be\n-         --  enabled in case assertions are not active.\n+      if N = Library_Unit (Cunit (Main_Unit)) then\n+         return Main_Unit;\n+\n+      --  If it is anything else, something is seriously wrong, and we really\n+      --  don't want to proceed, even if assertions are off, so we explicitly\n+      --  raise an exception in this case to terminate compilation.\n \n-         raise Program_Error;\n       else\n-         return Main_Unit;\n+         raise Program_Error;\n       end if;\n    end Get_Cunit_Unit_Number;\n "}, {"sha": "1b2683379e3dcebde14015f7ba2a15802e802d8d", "filename": "gcc/ada/par-ch3.adb", "status": "modified", "additions": 51, "deletions": 14, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c011ce1cd6eedc5d707c5f963b8f7d0b160db5b/gcc%2Fada%2Fpar-ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c011ce1cd6eedc5d707c5f963b8f7d0b160db5b/gcc%2Fada%2Fpar-ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch3.adb?ref=2c011ce1cd6eedc5d707c5f963b8f7d0b160db5b", "patch": "@@ -31,6 +31,10 @@ with Sinfo.CN; use Sinfo.CN;\n \n separate (Par)\n \n+---------\n+-- Ch3 --\n+---------\n+\n package body Ch3 is\n \n    -----------------------\n@@ -55,6 +59,24 @@ package body Ch3 is\n    function P_Variant                                      return Node_Id;\n    function P_Variant_Part                                 return Node_Id;\n \n+   procedure Check_Restricted_Expression (N : Node_Id);\n+   --  Check that the expression N meets the Restricted_Expression syntax.\n+   --  The syntax is as follows:\n+   --\n+   --    RESTRICTED_EXPRESSION ::=\n+   --        RESTRICTED_RELATION {and RESTRICTED_RELATION}\n+   --      | RESTRICTED_RELATION {and then RESTRICTED_RELATION}\n+   --      | RESTRICTED_RELATION {or RESTRICTED_RELATION}\n+   --      | RESTRICTED_RELATION {or else RESTRICTED_RELATION}\n+   --      | RESTRICTED_RELATION {xor RESTRICTED_RELATION}\n+   --\n+   --    RESTRICTED_RELATION ::=\n+   --       SIMPLE_EXPRESSION [RELATIONAL_OPERATOR SIMPLE_EXPRESSION]\n+   --\n+   --  This syntax is used for choices when extensions (and set notations)\n+   --  are enabled, to remove the ambiguity of \"when X in A | B\". We consider\n+   --  it very unlikely that this will ever arise in practice.\n+\n    procedure P_Declarative_Items\n      (Decls   : List_Id;\n       Done    : out Boolean;\n@@ -89,6 +111,27 @@ package body Ch3 is\n    --  current token, and if this is the first such message issued, saves\n    --  the message id in Missing_Begin_Msg, for possible later replacement.\n \n+\n+   ---------------------------------\n+   -- Check_Restricted_Expression --\n+   ---------------------------------\n+\n+   procedure Check_Restricted_Expression (N : Node_Id) is\n+   begin\n+      if Nkind_In (N, N_Op_And, N_Op_Or, N_Op_Xor, N_And_Then, N_Or_Else) then\n+         Check_Restricted_Expression (Left_Opnd (N));\n+         Check_Restricted_Expression (Right_Opnd (N));\n+\n+      elsif Nkind_In (N, N_In, N_Not_In)\n+        and then Paren_Count (N) = 0\n+      then\n+         Error_Msg_N\n+           (\"|this expression must be parenthesized!\", N);\n+         Error_Msg_N\n+           (\"\\|since extensions (and set notation) are allowed\", N);\n+      end if;\n+   end Check_Restricted_Expression;\n+\n    -------------------\n    -- Init_Expr_Opt --\n    -------------------\n@@ -3630,22 +3673,16 @@ package body Ch3 is\n                   --     when (A in 1 .. 10 | 12) =>\n                   --     when (A in 1 .. 10) | 12 =>\n \n-                  --  We consider it unlikely that reintroducing the Ada 83\n-                  --  restriction will cause an upwards incompatibility issue.\n-                  --  Historically the only reason for the change in Ada 95 was\n-                  --  for consistency (all cases of Simple_Expression in Ada 83\n-                  --  which could be changed to Expression without causing any\n-                  --  ambiguities were changed).\n-\n-                  if Extensions_Allowed and then Expr_Form = EF_Non_Simple then\n-                     Error_Msg_N\n-                       (\"|this expression must be parenthesized!\",\n-                        Expr_Node);\n-                     Error_Msg_N\n-                       (\"\\|since extensions (and set notation) are allowed\",\n-                        Expr_Node);\n+                  --  To solve this, if extensins are enabled, we disallow\n+                  --  the use of membership operations in expressions in\n+                  --  choices. Technically in the grammar, the expression\n+                  --  must match the grammar for restricted expression.\n+\n+                  if Extensions_Allowed then\n+                     Check_Restricted_Expression (Expr_Node);\n \n                   --  In Ada 83 mode, the syntax required a simple expression\n+\n                   else\n                      Check_Simple_Expression_In_Ada_83 (Expr_Node);\n                   end if;"}, {"sha": "3940e6ce81d295e08198043ffdd154ba4b29d4ce", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 35, "deletions": 34, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c011ce1cd6eedc5d707c5f963b8f7d0b160db5b/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c011ce1cd6eedc5d707c5f963b8f7d0b160db5b/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=2c011ce1cd6eedc5d707c5f963b8f7d0b160db5b", "patch": "@@ -143,7 +143,7 @@ package body Prj.Nmsc is\n       Hash       => Hash,\n       Equal      => \"=\");\n    --  Mapping from base file names to Source_Id (containing full info about\n-   --  the source)\n+   --  the source).\n \n    type Tree_Processing_Data is record\n       Tree           : Project_Tree_Ref;\n@@ -937,9 +937,8 @@ package body Prj.Nmsc is\n                   --  are sources for which this is an alternate language.\n \n                   if Language.First_Source = No_Source\n-                    and then\n-                      (Data.Flags.Require_Sources_Other_Lang\n-                       or else Language.Name = Name_Ada)\n+                    and then (Data.Flags.Require_Sources_Other_Lang\n+                               or else Language.Name = Name_Ada)\n                   then\n                      Iter := For_Each_Source (In_Tree => Data.Tree,\n                                               Project => Project);\n@@ -4315,12 +4314,11 @@ package body Prj.Nmsc is\n                        and then not UData.File_Names (Impl).Locally_Removed\n                      then\n                         if Check_Project\n-                          (UData.File_Names (Impl).Project,\n-                           Project, Extending)\n+                             (UData.File_Names (Impl).Project,\n+                              Project, Extending)\n                         then\n-                           --  There is a body for this unit. If there is\n-                           --  no spec, we need to check that it is not a\n-                           --  subunit.\n+                           --  There is a body for this unit. If there is no\n+                           --  spec, we need to check that it is not a subunit.\n \n                            if UData.File_Names (Spec) = null then\n                               declare\n@@ -4333,7 +4331,7 @@ package body Prj.Nmsc is\n                                       (Impl).Path.Name));\n \n                                  if Sinput.P.Source_File_Is_Subunit\n-                                   (Src_Ind)\n+                                      (Src_Ind)\n                                  then\n                                     Error_Msg\n                                       (Project,\n@@ -4347,11 +4345,10 @@ package body Prj.Nmsc is\n                               end;\n                            end if;\n \n-                           --  The unit is not a subunit, so we add the\n-                           --  ALI file for its body to the Interface ALIs.\n+                           --  The unit is not a subunit, so we add the ALI\n+                           --  file for its body to the Interface ALIs.\n \n-                           Add_ALI_For\n-                             (UData.File_Names (Impl).File);\n+                           Add_ALI_For (UData.File_Names (Impl).File);\n \n                         else\n                            Error_Msg\n@@ -4365,16 +4362,15 @@ package body Prj.Nmsc is\n                        and then UData.File_Names (Spec) /= null\n                        and then not UData.File_Names (Spec).Locally_Removed\n                        and then Check_Project\n-                         (UData.File_Names (Spec).Project,\n-                          Project, Extending)\n+                                  (UData.File_Names (Spec).Project,\n+                                   Project, Extending)\n \n                      then\n                         --  The unit is part of the project, it has a spec,\n                         --  but no body. We add the ALI for its spec to the\n                         --  Interface ALIs.\n \n-                        Add_ALI_For\n-                          (UData.File_Names (Spec).File);\n+                        Add_ALI_For (UData.File_Names (Spec).File);\n \n                      else\n                         Error_Msg\n@@ -4391,7 +4387,7 @@ package body Prj.Nmsc is\n                         while Prj.Element (Iter) /= No_Source\n                           and then\n                             (Prj.Element (Iter).Unit = null\n-                              or else Prj.Element (Iter).Unit.Name /= Unit)\n+                               or else Prj.Element (Iter).Unit.Name /= Unit)\n                         loop\n                            Next (Iter);\n                         end loop;\n@@ -4407,7 +4403,6 @@ package body Prj.Nmsc is\n                      if Source /= No_Source then\n                         if Source.Kind = Sep then\n                            Source := No_Source;\n-\n                         elsif Source.Kind = Spec\n                           and then Other_Part (Source) /= No_Source\n                         then\n@@ -4437,6 +4432,8 @@ package body Prj.Nmsc is\n                            Source := Other_Part (Source);\n                         end if;\n \n+                        --  Can't we use Append here???\n+\n                         String_Element_Table.Increment_Last\n                           (Data.Tree.String_Elements);\n \n@@ -4456,13 +4453,10 @@ package body Prj.Nmsc is\n                           String_Element_Table.Last\n                             (Data.Tree.String_Elements);\n                      end if;\n-\n                   end if;\n-\n                end if;\n \n-               Interfaces :=\n-                 Data.Tree.String_Elements.Table (Interfaces).Next;\n+               Interfaces := Data.Tree.String_Elements.Table (Interfaces).Next;\n             end loop;\n \n             --  Put the list of Interface ALIs in the project data\n@@ -4575,7 +4569,7 @@ package body Prj.Nmsc is\n                         --  Report error if it is one of the source directories\n \n                         if Project.Library_Src_Dir.Name =\n-                          Path_Name_Type (Src_Dir.Value)\n+                             Path_Name_Type (Src_Dir.Value)\n                         then\n                            Error_Msg\n                              (Project,\n@@ -4604,7 +4598,7 @@ package body Prj.Nmsc is\n                                 Data.Tree.String_Elements.Table (Src_Dirs);\n \n                               --  Report error if it is one of the source\n-                              --  directories\n+                              --  directories.\n \n                               if Project.Library_Src_Dir.Name =\n                                 Path_Name_Type (Src_Dir.Value)\n@@ -4852,7 +4846,8 @@ package body Prj.Nmsc is\n    begin\n       if Dir'Length > 1\n         and then (Dir (Dir'Last - 1) = Directory_Separator\n-                   or else Dir (Dir'Last - 1) = '/')\n+                    or else\n+                  Dir (Dir'Last - 1) = '/')\n       then\n          return Dir'Last - 1;\n       else\n@@ -5120,8 +5115,8 @@ package body Prj.Nmsc is\n             The_Path : constant String :=\n                          Normalize_Pathname\n                            (Get_Name_String (Path),\n-                            Directory     => Get_Name_String\n-                              (Project.Directory.Display_Name),\n+                            Directory     =>\n+                              Get_Name_String (Project.Directory.Display_Name),\n                             Resolve_Links => Opt.Follow_Links_For_Dirs) &\n                          Directory_Separator;\n \n@@ -6746,7 +6741,8 @@ package body Prj.Nmsc is\n    procedure Initialize\n      (Data  : out Tree_Processing_Data;\n       Tree  : Project_Tree_Ref;\n-      Flags : Prj.Processing_Flags) is\n+      Flags : Prj.Processing_Flags)\n+   is\n    begin\n       Files_Htable.Reset (Data.File_To_Source);\n       Data.Tree  := Tree;\n@@ -6768,7 +6764,8 @@ package body Prj.Nmsc is\n \n    procedure Initialize\n      (Data    : in out Project_Processing_Data;\n-      Project : Project_Id) is\n+      Project : Project_Id)\n+   is\n    begin\n       Data.Project := Project;\n    end Initialize;\n@@ -7473,8 +7470,9 @@ package body Prj.Nmsc is\n                         else\n                            --  Check if it is a subunit\n \n-                           Src_Ind := Sinput.P.Load_Project_File\n-                             (Get_Name_String (Src_Id.Path.Name));\n+                           Src_Ind :=\n+                             Sinput.P.Load_Project_File\n+                               (Get_Name_String (Src_Id.Path.Name));\n \n                            if Sinput.P.Source_File_Is_Subunit (Src_Ind) then\n                               Override_Kind (Src_Id, Sep);\n@@ -7661,7 +7659,8 @@ package body Prj.Nmsc is\n \n       procedure Recursive_Check\n         (Project : Project_Id;\n-         Data    : in out Tree_Processing_Data) is\n+         Data    : in out Tree_Processing_Data)\n+      is\n       begin\n          if Verbose_Mode then\n             Write_Str (\"Processing_Naming_Scheme for project \"\"\");\n@@ -7676,6 +7675,8 @@ package body Prj.Nmsc is\n         For_Every_Project_Imported (Tree_Processing_Data, Recursive_Check);\n \n       Data : Tree_Processing_Data;\n+\n+   --  Start of processing for Process_Naming_Scheme\n    begin\n       Initialize (Data, Tree => Tree, Flags => Flags);\n       Check_All_Projects (Root_Project, Data, Imported_First => True);"}, {"sha": "7c553af9c4a586134099184bb711502a04e22813", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 20, "deletions": 22, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c011ce1cd6eedc5d707c5f963b8f7d0b160db5b/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c011ce1cd6eedc5d707c5f963b8f7d0b160db5b/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=2c011ce1cd6eedc5d707c5f963b8f7d0b160db5b", "patch": "@@ -77,9 +77,9 @@ package body Prj.Proc is\n    --  the package or project with declarations Decl.\n \n    procedure Check\n-     (In_Tree                    : Project_Tree_Ref;\n-      Project                    : Project_Id;\n-      Flags                      : Processing_Flags);\n+     (In_Tree : Project_Tree_Ref;\n+      Project : Project_Id;\n+      Flags   : Processing_Flags);\n    --  Set all projects to not checked, then call Recursive_Check for the\n    --  main project Project. Project is set to No_Project if errors occurred.\n    --  Current_Dir is for optimization purposes, avoiding extra system calls.\n@@ -264,9 +264,9 @@ package body Prj.Proc is\n    -----------\n \n    procedure Check\n-     (In_Tree                    : Project_Tree_Ref;\n-      Project                    : Project_Id;\n-      Flags                      : Processing_Flags)\n+     (In_Tree : Project_Tree_Ref;\n+      Project : Project_Id;\n+      Flags   : Processing_Flags)\n    is\n    begin\n       Process_Naming_Scheme (In_Tree, Project, Flags);\n@@ -293,7 +293,6 @@ package body Prj.Proc is\n \n                if Source2 = No_Source then\n                   Unit_Htable.Set (K => Name, E => Source1);\n-\n                else\n                   Unit_Htable.Remove (Name);\n                end if;\n@@ -355,7 +354,6 @@ package body Prj.Proc is\n          if To.Attributes = No_Variable then\n             To.Attributes :=\n               Variable_Element_Table.Last (In_Tree.Variable_Elements);\n-\n          else\n             In_Tree.Variable_Elements.Table (V2).Next :=\n               Variable_Element_Table.Last (In_Tree.Variable_Elements);\n@@ -388,7 +386,6 @@ package body Prj.Proc is\n \n             if To.Arrays = No_Array then\n                To.Arrays := Array_Table.Last (In_Tree.Arrays);\n-\n             else\n                In_Tree.Arrays.Table (A2).Next :=\n                  Array_Table.Last (In_Tree.Arrays);\n@@ -453,7 +450,7 @@ package body Prj.Proc is\n       First_Term             : Project_Node_Id;\n       Kind                   : Variable_Kind) return Variable_Value\n    is\n-      The_Term : Project_Node_Id := First_Term;\n+      The_Term : Project_Node_Id;\n       --  The term in the expression list\n \n       The_Current_Term : Project_Node_Id := Empty_Node;\n@@ -471,6 +468,7 @@ package body Prj.Proc is\n \n       --  Process each term of the expression, starting with First_Term\n \n+      The_Term := First_Term;\n       while Present (The_Term) loop\n          The_Current_Term := Current_Term (The_Term, From_Project_Node_Tree);\n \n@@ -1219,12 +1217,12 @@ package body Prj.Proc is\n         Configuration\n       then\n          Process_Project_Tree_Phase_2\n-           (In_Tree                    => In_Tree,\n-            Project                    => Project,\n-            Success                    => Success,\n-            From_Project_Node          => From_Project_Node,\n-            From_Project_Node_Tree     => From_Project_Node_Tree,\n-            Flags                      => Flags);\n+           (In_Tree                => In_Tree,\n+            Project                => Project,\n+            Success                => Success,\n+            From_Project_Node      => From_Project_Node,\n+            From_Project_Node_Tree => From_Project_Node_Tree,\n+            Flags                  => Flags);\n       end if;\n    end Process;\n \n@@ -2273,12 +2271,12 @@ package body Prj.Proc is\n    ----------------------------------\n \n    procedure Process_Project_Tree_Phase_2\n-     (In_Tree                    : Project_Tree_Ref;\n-      Project                    : Project_Id;\n-      Success                    : out Boolean;\n-      From_Project_Node          : Project_Node_Id;\n-      From_Project_Node_Tree     : Project_Node_Tree_Ref;\n-      Flags                      : Processing_Flags)\n+     (In_Tree                : Project_Tree_Ref;\n+      Project                : Project_Id;\n+      Success                : out Boolean;\n+      From_Project_Node      : Project_Node_Id;\n+      From_Project_Node_Tree : Project_Node_Tree_Ref;\n+      Flags                  : Processing_Flags)\n    is\n       Obj_Dir    : Path_Name_Type;\n       Extending  : Project_Id;"}, {"sha": "40b5bf35d190147023a3f1493e0b520bf681efb8", "filename": "gcc/ada/prj-proc.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c011ce1cd6eedc5d707c5f963b8f7d0b160db5b/gcc%2Fada%2Fprj-proc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c011ce1cd6eedc5d707c5f963b8f7d0b160db5b/gcc%2Fada%2Fprj-proc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.ads?ref=2c011ce1cd6eedc5d707c5f963b8f7d0b160db5b", "patch": "@@ -52,12 +52,12 @@ package Prj.Proc is\n    --  project table before processing.\n \n    procedure Process_Project_Tree_Phase_2\n-     (In_Tree                    : Project_Tree_Ref;\n-      Project                    : Project_Id;\n-      Success                    : out Boolean;\n-      From_Project_Node          : Project_Node_Id;\n-      From_Project_Node_Tree     : Project_Node_Tree_Ref;\n-      Flags                      : Processing_Flags);\n+     (In_Tree                : Project_Tree_Ref;\n+      Project                : Project_Id;\n+      Success                : out Boolean;\n+      From_Project_Node      : Project_Node_Id;\n+      From_Project_Node_Tree : Project_Node_Tree_Ref;\n+      Flags                  : Processing_Flags);\n    --  Perform the second phase of the processing, filling the rest of the\n    --  project with the information extracted from the project tree. This phase\n    --  requires that the configuration file has already been parsed (in fact"}, {"sha": "45effae168223ac678e65c74124c22e15a76d521", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c011ce1cd6eedc5d707c5f963b8f7d0b160db5b/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c011ce1cd6eedc5d707c5f963b8f7d0b160db5b/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=2c011ce1cd6eedc5d707c5f963b8f7d0b160db5b", "patch": "@@ -1229,8 +1229,8 @@ package body Prj is\n       Require_Sources_Other_Lang : Boolean := True;\n       Allow_Duplicate_Basenames  : Boolean := True;\n       Compiler_Driver_Mandatory  : Boolean := False;\n-      Error_On_Unknown_Language  : Boolean := True)\n-      return Processing_Flags is\n+      Error_On_Unknown_Language  : Boolean := True) return Processing_Flags\n+   is\n    begin\n       return Processing_Flags'\n         (Report_Error               => Report_Error,"}, {"sha": "47851fbebce401c41997292f678c33f6c533cb22", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c011ce1cd6eedc5d707c5f963b8f7d0b160db5b/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c011ce1cd6eedc5d707c5f963b8f7d0b160db5b/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=2c011ce1cd6eedc5d707c5f963b8f7d0b160db5b", "patch": "@@ -1343,40 +1343,44 @@ package Prj is\n    --  project file tree. Initialize must be called before the call to Reset.\n \n    type Processing_Flags is private;\n-   --  Flags used while parsing and processing a project tree.\n-   --  These configure various behavior in the parser, as well as indicate how\n-   --  to report error messages.\n-   --  This structure does not allocate memory and never needs to be freed\n+   --  Flags used while parsing and processing a project tree to configure the\n+   --  behavior of the parser, and indicate how to report error messages. This\n+   --  structure does not allocate memory and never needs to be freed\n \n    function Create_Flags\n      (Report_Error               : Put_Line_Access;\n       When_No_Sources            : Error_Warning;\n       Require_Sources_Other_Lang : Boolean := True;\n       Allow_Duplicate_Basenames  : Boolean := True;\n       Compiler_Driver_Mandatory  : Boolean := False;\n-      Error_On_Unknown_Language  : Boolean := True)\n-      return Processing_Flags;\n+      Error_On_Unknown_Language  : Boolean := True) return Processing_Flags;\n+   --  Function used to create Processing_Flags structure\n+   --\n    --  If Allow_Duplicate_Basenames, then files with the same base names are\n    --  authorized within a project for source-based languages (never for unit\n-   --  based languages)\n+   --  based languages).\n+   --\n    --  If Compiler_Driver_Mandatory is true, then a Compiler.Driver attribute\n    --  for each language must be defined, or we will not look for its source\n    --  files.\n+   --\n    --  When_No_Sources indicates what should be done when no sources of a\n    --  language are found in a project where this language is declared.\n    --  If Require_Sources_Other_Lang is true, then all languages must have at\n    --  least one source file, or an error is reported via When_No_Sources. If\n    --  it is false, this is only required for Ada (and only if it is a language\n    --  of the project).\n+   --\n    --  If Report_Error is null, use the standard error reporting mechanism\n    --  (Errout). Otherwise, report errors using Report_Error.\n+   --\n    --  If Error_On_Unknown_Language is true, an error is displayed if some of\n    --  the source files listed in the project do not match any naming scheme\n \n    Gprbuild_Flags : constant Processing_Flags;\n    Gnatmake_Flags : constant Processing_Flags;\n    --  Flags used by the various tools. They all display the error messages\n-   --  through Prj.Err\n+   --  through Prj.Err.\n \n    package Project_Boolean_Htable is new Simple_HTable\n      (Header_Num => Header_Num,"}]}