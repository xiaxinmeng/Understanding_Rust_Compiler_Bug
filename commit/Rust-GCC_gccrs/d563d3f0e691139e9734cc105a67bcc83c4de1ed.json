{"sha": "d563d3f0e691139e9734cc105a67bcc83c4de1ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU2M2QzZjBlNjkxMTM5ZTk3MzRjYzEwNWE2N2JjYzgzYzRkZTFlZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-04-08T07:00:08Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-04-08T07:00:08Z"}, "message": "Resync.\n\nFrom-SVN: r134068", "tree": {"sha": "094a6adf2015c4da4574f9f57a25209799b443fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/094a6adf2015c4da4574f9f57a25209799b443fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d563d3f0e691139e9734cc105a67bcc83c4de1ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d563d3f0e691139e9734cc105a67bcc83c4de1ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d563d3f0e691139e9734cc105a67bcc83c4de1ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d563d3f0e691139e9734cc105a67bcc83c4de1ed/comments", "author": null, "committer": null, "parents": [{"sha": "7053a60fd9b2fd441224f52393b9ce7d644f6ca2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7053a60fd9b2fd441224f52393b9ce7d644f6ca2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7053a60fd9b2fd441224f52393b9ce7d644f6ca2"}], "stats": {"total": 1451, "additions": 1451, "deletions": 0}, "files": [{"sha": "c01bd8e2b760494cdb4f9653aca0ec981bd5312a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 1451, "deletions": 0, "changes": 1451, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d563d3f0e691139e9734cc105a67bcc83c4de1ed/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d563d3f0e691139e9734cc105a67bcc83c4de1ed/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d563d3f0e691139e9734cc105a67bcc83c4de1ed", "patch": "@@ -1,3 +1,1454 @@\n+2008-04-08  Pascal Obry  <obry@adacore.com>\n+\n+\t* g-sercom.ads, g-sercom.adb (Data_Rate): Add B115200.\n+\t(Stop_Bits_Number): New type.\n+\t(Parity_Check): Likewise.\n+\t(Set): Add parameter to set the number of stop bits and\n+\tthe parity. Parameter timeout is now a duration instead\n+\tof a plain integer.\n+\n+\t* g-sercom-linux.adb:\n+\tImplement the stop bits and parity support for GNU/Linux.\n+\tFix handling of timeout, it must be given in tenth of seconds.\n+\t\n+\t* g-sercom-mingw.adb:\n+\tImplement the stop bits and parity support for Windows.\n+\tUse new s-win32.ads unit instead of declaring Win32 services\n+\tdirectly into this body.\n+\tUpdate handling of timeout as now a duration.\n+\n+\t* s-win32.ads, s-winext.ads: New files.\n+\n+2008-04-08  Eric Botcazou  <ebotcazou@adacore.com>\n+\t    Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* s-osinte-linux-alpha.ads, s-osinte-linux-hppa.ads: Removed.\n+\n+\ts-taspri-posix-noaltstack.ads, s-linux.ads, s-linux-alpha.ads,\n+\ts-linux-hppa.ads: New files. Disable alternate stack on ia64-hpux.\n+\n+\t* s-osinte-lynxos-3.ads,\n+\t(Alternate_Stack): Remove when not needed. Simplify declaration\n+\totherwise.\n+\t(Alternate_Stack_Size): New constant.\n+\n+\ts-osinte-mingw.ads, s-taprop-mingw.adb: Code clean up: avoid use of\n+\t'Unrestricted_Access.\n+\n+\t* s-osinte-hpux.ads, s-osinte-solaris-posix.ads, s-osinte-aix.ads,\n+\ts-osinte-lynxos.ads, s-osinte-freebsd.ads s-osinte-darwin.ads,\n+\ts-osinte-tru64.ads, s-osinte-irix.ads, s-osinte-linux.ads,\n+\ts-osinte-solaris.ads, s-osinte-vms.ads\n+\t(SA_ONSTACK): New constant.\n+\t(stack_t): New record type.\n+\t(sigaltstack): New imported function.\n+\t(Alternate_Stack): New imported variable.\n+\t(Alternate_Stack_Size): New constant.\n+\n+\t* system-linux-x86_64.ads: (Stack_Check_Probes): Set to True.\n+\n+\t* s-taspri-lynxos.ads, s-taspri-solaris.ads, s-taspri-tru64.ads,\n+\ts-taspri-hpux-dce.ads (Task_Address): New subtype of System.Address\n+\t(Task_Address_Size): New constant size of System.Address\n+\t(Alternate_Stack_Size): New constant.\n+\n+\t* s-taprop-posix.adb, s-taprop-linux.adb (Get_Stack_Attributes): Delete.\n+\t(Enter_Task): Do not notify stack to System.Stack_Checking.Operations.\n+\tEstablish the alternate stack if the platform makes use of n alternate\n+\tsignal stack for stack overflows.\n+\t(Create_Task): Take into account the alternate stack in the stack size.\n+\t(Initialize): Save the address of the alternate stack into the ATCB for\n+\tthe environment task.\n+\t(Create_Task): Fix assertions for NPTL library (vs old LinuxThreads).\n+\n+\t* s-parame.adb (Minimum_Stack_Size): Increase value to 16K to\n+\n+\t* system-linux-x86.ads: (Stack_Check_Probes): Set to True.\n+\n+\t* s-intman-posix.adb: \n+\t(Initialize): Set SA_ONSTACK for SIGSEGV if the platform makes use of an\n+\talternate signal stack for stack overflows.\n+\n+\t* init.c (__gnat_adjust_context_for_raise, Linux version): On i386 and\n+\tx86-64, adjust the saved value of the stack pointer if the signal was\n+\traised by a stack checking probe.\n+\t(HP-UX section): Use global __gnat_alternate_stack as signal handler\n+\tstack and only for SIGSEGV.\n+\t(Linux section): Likewise on x86 and x86-64.\n+\t[VxWorks section]\n+\t(__gnat_map_signal): Now static.\n+\t(__gnat_error_handler): Not static any more.\n+\t(__gnat_adjust_context_for_raise): New function. Signal context\n+\tadjustment for PPC && !VTHREADS && !RTP, as required by the zcx\n+\tpropagation circuitry.\n+\t(__gnat_error_handler): Second argument of a sigaction handler is a\n+\tpointer, not an int, and is unused.\n+\tAdjust signal context before mapping to exception.\n+\tInstall signal handlers for LynxOS case.\n+\n+\t* s-taskin.ads (Common_ATCB): New field Task_Alternate_Stack.\n+\t(Task_Id): Set size to Task_Address_Size\n+\t(To_Task_id): Unchecked convert from Task_Address vice System.Address\n+\t(To_Address): Unchecked convert to Task_Address vice System.Address\n+\n+\t* s-tassta.adb (Task_Wrapper): Define the alternate stack and save its\n+\taddress into the ATCB if the platform makes use of an alternate signal\n+\tstack for stack overflows.\n+\t(Free_Task): Add call to Finalize_Attributes_Link.\n+\tAdd argument Relative_Deadline to pass the value specified for\n+\tthe task. This is not yet used for any target.\n+\n+\t* s-tassta.ads (Create_Task): Add argument Relative_Deadline to pass\n+\tthe value specified for the task.\n+\n+2008-04-08  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t(s-osinte-vxworks6.ads): Removed, merged with s-osinte-vxworks.ads/.adb\n+\t(s-vxwext.ads, s-vxwext-kernel.ads, s-vxwext-rtp.ads,\n+\ts-vxwext-rtp.adb): New files.\n+\n+\t* s-taprop-vxworks.adb, s-osinte-vxworks.ads, s-osinte-vxworks.adb: \n+\tMinor updates to accomodate changes above.\n+\n+2008-04-08  Pascal Obry  <obry@adacore.com>\n+\n+\t* a-exetim-mingw.adb, s-gloloc-mingw.adb, s-taprop-mingw.adb,\n+\ts-tasinf-mingw.ad{s,b}, s-taspri-mingw.ads:\n+\tUse new s-win32.ads unit instead of declaration\n+\tfrom s-osinte-mingw.ads.\n+\t\n+\t* s-osinte-mingw.ads:\n+\tMove all non tasking based interface to s-win32.ads.\n+\t\n+\t* s-osprim-mingw.adb:\n+\tRemove duplicated declarations and use s-win32.ads\n+\tunit instead.\n+\n+2008-04-08  Vincent Celier  <celier@adacore.com>\n+\t    Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* mlib-tgt-aix.adb, mlib-tgt-darwin.adb, mlib-tgt-hpux.adb,\n+\tmlib-tgt-irix.adb, mlib-tgt-linux.adb, mlib-tgt-lynxos.adb,\n+\tmlib-tgt-solaris.adb, mlib-tgt-tru64.adb, mlib-tgt-vms.adb,\n+\tmlib-tgt-vms.ads, mlib-tgt-vms-alpha.adb, mlib-tgt-vms-ia64.adb,\n+\tmlib-tgt-vxworks.adb, mlib-tgt-mingw.adb: Renamed into...\n+\n+\t* mlib-tgt-specific-aix.adb, mlib-tgt-specific-darwin.adb,\n+\tmlib-tgt-specific-hpux.adb, mlib-tgt-specific-irix.adb,\n+\tmlib-tgt-specific-linux.adb, mlib-tgt-specific-lynxos.adb,\n+\tmlib-tgt-specific-solaris.adb, mlib-tgt-specific-tru64.adb,\n+\tmlib-tgt-vms_common.adb, mlib-tgt-vms_common.ads,\n+\tmlib-tgt-specific-vms-alpha.adb, mlib-tgt-specific-vms-ia64.adb,\n+\tmlib-tgt-specific-vxworks.adb, mlib-tgt-specific-xi.adb,\n+\tmlib-tgt-specific-mingw.adb: New names.\n+\n+\t* Makefile.in: \n+\tOn VxWorks platforms use s-stchop-limit.ads for s-stchop.ads\n+\tGet rid of gnatbl.\n+\t(EXTRA_GNATRTL_NONTASKING_OBJS): Add s-win32.o\n+\tFiles mlib-tgt-*.adb have been renamed mlib-tgt-specific-*.adb\n+\tMinor updates for VMS\n+\n+2008-04-08  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* g-expect-vms.adb, a-textio.adb, a-witeio.adb, exp_dbug.adb,\n+\tg-expect.adb, g-locfil.adb, gnatchop.adb, gnatdll.adb, gnatlbr.adb,\n+\tgnatmem.adb, g-regist.adb, i-vxwork.ads, mlib-utl.adb, i-vxwork-x86.ads,\n+\ta-ztexio.adb, g-enblsp-vms-alpha.adb, g-enblsp-vms-ia64.adb,\n+\ts-os_lib.adb, s-regpat.adb, s-regpat.ads: Fix incorrect casing of\n+\tASCII.NUL throughout.\n+\n+2008-04-08  Arnaud Charlet  <charlet@adacore.com>\n+\t    Matthew Heaney  <heaney@adacore.com>\n+\n+\t* a-cgcaso.adb, a-convec.adb: (Swap, Sift): Avoid use of complex\n+\trenaming.\n+\n+\t* a-cgaaso.ads, a-secain.ads, a-slcain.ads, a-shcain.ads,  \n+\ta-crdlli.ads, a-coormu.ads, a-ciormu.ads: modified header to conform\n+\tto convention for non-RM specs.\n+\tAdd descriptive header, and documented each operation\n+\tdocument each operation\n+\n+2008-04-08  Robert Dewar  <dewar@adacore.com>\n+\t    Bob Duff  <duff@adacore.com>\n+\t    Gary Dismukes  <dismukes@adacore.com>\n+\t    Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* alloc.ads: Add entries for Obsolescent_Warnings table\n+\n+\t* einfo.ads, einfo.adb: Minor reformatting.\n+\t(Is_Discriminal): New subprogram.\n+\t(Is_Prival): New subprogram.\n+\t(Is_Protected_Component): New subprogram.\n+\t(Is_Protected_Private): Removed.\n+\t(Object_Ref, Set_Object_Ref): Removed.\n+\t(Prival, Set_Prival): Change assertion.\n+\t(Privals_Chain, Set_Privals_Chain): Removed.\n+\t(Prival_Link, Set_Prival_Link): New subprogram.\n+\t(Protected_Operation, Set_Protected_Operation): Removed.\n+\t(Protection_Object, Set_Protection_Object): New subprogram.\n+\t(Write_Field17_Name): Remove case for Object_Ref.\n+\t(Write_Field20_Name): Add case for Prival_Link.\n+\t(Write_Field22_Name): Remove case for Protected_Operation,\n+\tPrivals_Chain.\n+\tAdd case for Protection_Object.\n+\t(Can_Use_Internal_Rep): Make this into a [base type only] attribute,\n+\tso clients\n+\t(Overlays_Constant): New flag\n+\t(Is_Constant_Object): New predicate\n+\t(Is_Standard_Character_Type): New predicate\n+\t(Optimize_Alignment_Space): New flag\n+\t(Optimize_Alignment_Time): New flag\n+\t(Has_Postconditions): New flag\n+\t(Obsolescent_Warrning): Field removed\n+\t(Spec_PPC_List): New field\n+\t(Relative_Deadline_Variable, Set_Relative_Deadline_Variable): Add\n+\tsubprograms to get and set the relative deadline associated to a task.\n+\n+\t* exp_attr.adb (May_Be_External_Call): Account for the case where the\n+\tAccess attribute is part of a named parameter association.\n+\t(Expand_Access_To_Protected_Op): Test for the attribute occurring\n+\twithin an init proc and use that directly as the scope rather than\n+\ttraversing up to the protected operation's enclosing scope. Only apply\n+\tassertion on Is_Open_Scopes in the case the scope traversal is done.\n+\tFor the init proc case use the address of the first formal (_init) as\n+\tthe protected object reference.\n+\tImplement Invalid_Value attribute\n+\t(Expand_N_Attribute_Reference): Case Attribute_Unrestricted_Access.\n+\tcontents of the dispatch table there is no need to duplicate the\n+\titypes associated with record types (i.e. the implicit full view\n+\tof private types).\n+\tImplement Enum_Val attribute\n+\t(Expand_N_Attribute_Reference, case Old): Properly handle appearence\n+\twithin _Postconditions procedure\n+\t(Expand_N_Attribute_Reference, case Result): Implement new attribute\n+\n+\t* exp_ch5.adb (Expand_N_Simple_Return_Statement): Handle case in which\n+\ta return statement calls a function that is not available in\n+\tconfigurable runtime.\n+\t(Analyze_If_Statement): don't optimize simple True/False cases in -O0\n+\t(Expand_Non_Function_Return): Generate call to _Postconditions proc\n+\t(Expand_Simple_Function_Return): Ditto\n+\n+\t* frontend.adb: Add call to Sem_Aux.Initialize\n+\n+\t* sem_aux.ads, sem_aux.adb: New file.\n+\n+\t* par-prag.adb: Add entries for pragmas Precondition/Postcondition\n+\tAdd new Pragma_Relative_Deadline.\n+\tAdd support for pragmas Check and Check_Policy\n+\n+\t* sem_attr.ads, sem_attr.adb (Check_Not_CPP_Type): New subprogram.\n+\t(Check_Stream_Attribute): Add missing check (not allowed in CPP types)\n+\t(Analyze_Attribute): In case of attributes 'Alignment and 'size add\n+\tmissing check because they are not allowed in CPP tagged types.\n+\tAdd Sure parameter to Note_Possible_Modification calls\n+\tAdd implementation of Invalid_Value attribute\n+\tImplement new attribute Has_Tagged_Values\n+\tImplement Enum_Val attribute\n+\t(Analyze_Attribute, case Range): Set Name_Req True for prefix of\n+\tgenerated attributes.\n+\t(Analyze_Attribute, case Result): If prefix of the attribute is\n+\toverloaded, it always resolves to the enclosing function.\n+\t(Analyze_Attribute, case Result): Properly deal with analysis when\n+\tPostconditions are not active.\n+\t(Resolve_Attribute, case Result): Properly deal with appearence during\n+\tpreanalysis in spec.\n+\tAdd processing for attribute Result\n+\n+\t* sem_ch6.ads, sem_ch6.adb (Check_Overriding_Indicator): Code cleanup\n+\tfor operators.\n+\t(Analyze_Subprogram_Body): Install private_with_clauses when the body\n+\tacts as a spec.\n+\t(Check_Inline_Pragma): recognize an inline pragma that appears within\n+\tthe subprogram body to which it applies.\n+\t(Analyze_Function_Return): Check that type of the expression of a return\n+\tstatement in a function with a class-wide result is not declared at a\n+\tdeeper level than the function.\n+\t(Process_PPCs): Deal with enabling/disabling, using PPC_Enabled flag\n+\t(Verify_Overriding_Indicator): Handle properly subprogram bodies for\n+\tuser- defined operators.\n+\t(Install_Formals): Moved to spec to allow use from Sem_Prag for\n+\tanalysis of precondition/postcondition pragmas.\n+\t(Analyze_Subprogram_Body.Last_Real_Spec_Entity): New name for\n+\tLast_Formal, along with lots of comments on what this is about\n+\t(Analyze_Subprogram_Body): Fix case where we move entities from the\n+\tspec to the body when there are no body entities (now possible with\n+\tprecondition and postcondition pragmas).\n+\t(Process_PPCs): New procedure\n+\t(Analyze_Subprogram_Body): Add call to Process_PPCs\n+\n+\t* sem_ch8.adb (Use_One_Type): refine warning on a redundant use_type\n+\tclause.\n+\t(Pop_Scope): Restore Check_Policy_List on scope exit\n+\t(Push_Scope): Save Check_Policy_List on scope entry\n+\tChange name In_Default_Expression      => In_Spec_Expression\n+\tChange name Analyze_Per_Use_Expression => Preanalyze_Spec_Expression\n+\tChange name Pre_Analyze_And_Resolve    => Preanalyze_And_Resolve\n+\t(Analyze_Object_Renaming): Allow 'Reference as object\n+\t(Analyze_Pragma, case Restriction_Warnings): Call GNAT_Pragma\n+\t(Process_Restrictions_Or_Restriction_Warnings): Check for bad spelling\n+\tof restriction identifier.\n+\tAdd Sure parameter to Note_Possible_Modication calls\n+\n+\t* sem_prag.ads, sem_prag.adb (Analyze_Pragma, case Stream_Convert):\n+\tDon't check for primitive operations when calling Rep_Item_Too_Late.\n+\t(Process_Import_Or_Interface): Do not place flag on formal\n+\tsubprograms.\n+\t(Analyze_Pragma, case Export): If the entity is a deferred constant,\n+\tpropagate information to full view, which is the one elaborated by the\n+\tback-end.\n+\t(Make_Inline): the pragma is effective if it applies to an internally\n+\tgenerated subprogram declaration for a body that carries the pragma.\n+\t(Analyze_Pragma, case Optimize_Alignment): Set new flag\n+\tOptimize_Alignment_Local.\n+\t(Analyze_PPC_In_Decl_Part): New procedure\n+\t(Get_Pragma_Arg): Moved to outer level\n+\t(Check_Precondition_Postcondition): Change to allow new visibility\n+\trules for package spec\n+\t(Analyze_Pragma, case Check_Policy): Change placement rules to be\n+\tsame as pragma Suppress/Unsuppress.\n+\tChange name In_Default_Expression      => In_Spec_Expression\n+\tChange name Analyze_Per_Use_Expression => Preanalyze_Spec_Expression\n+\tChange name Pre_Analyze_And_Resolve    => Preanalyze_And_Resolve\n+\t(Check_Precondition_Postcondition): Do proper visibility preanalysis\n+\tfor the case of these pragmas appearing in the spec.\n+\t(Check_Enabled): New function\n+\t(Initialize): New procedure\n+\t(Tree_Read): New procedure\n+\t(Tree_Write): New procedure\n+\t(Check_Precondition_Postcondition): New procedure\n+\tImplement pragmas Check and Check_Policy\n+\tMerge Assert processing with Check\n+\n+\t* sem_warn.adb (Warn_On_Known_Condition): Handle pragma Check\n+\tNew warning flag -gnatw.e\n+\n+\t* sinfo.ads, sinfo.adb (Has_Relative_Deadline_Pragma): New function\n+\treturning whether a task (or main procedure) has a pragma\n+\tRelative_Deadline.\n+\t(Set_Has_Relative_Deadline_Pragma): Procedure to indicate that a task\n+\t(or main procedure) has a pragma Relative_Deadline.\n+\tAdd Next_Pragma field to N_Pragma node\n+\t(PPC_Enabled): New flag\n+\t(Next_Pragma): Now used for Pre/Postcondition processing\n+\n+\t* snames.h, snames.ads, snames.adb: New standard name\n+\tInherit_Source_Path\n+\tAdd entry for 'Invalid_Value attribute\n+\tAdd entry for new attribute Has_Tagged_Values\n+\tAdd entry for Enum_Val attribute\n+\tAdd new standard names Aggregate, Configuration and Library.\n+\tAdd _Postconditions\n+\tAdd _Result\n+\tAdd Pragma_Precondition\n+\tAdd Pragma_Postcondition\n+\tAdd Attribute_Result\n+\tNew standard name Archive_Builder_Append_Option\n+\t(Preset_Names): Add _relative_deadline and relative_deadline definitions\n+\tThere was also a missing non_preemptive_within_priorities.\n+\t(Get_Pragma_Id, Is_Pragma_Name): Add support for pragma\n+\tRelative_Deadline.\n+\tAdd support for pragmas Check and Check_Policy\n+\n+\t* tree_gen.adb: Call Sem_Aux.Tree_Write\n+\n+\t* tree_in.adb: Call Sem_Aux.Tree_Read\n+\n+\t* exp_ch11.adb (Expand_N_Raise_Statement): New Build_Location calling\n+\tsequence\n+\n+\t* exp_intr.adb (Expand_Source_Info): New Build_Location calling\n+\tsequence\n+\n+\t* exp_prag.adb (Expand_Pragma_Relative_Deadline): New procedure.\n+\t(Expand_N_Pragma): Call the appropriate procedure for expanding pragma\n+\tRelative_Deadline.\n+\t(Expand_Pragma_Check): New procedure\n+\n+\t* sinput.ads, sinput.adb (Build_Location_String): Now appends to name\n+\tbuffer.\n+\n+\t* sinfo.adb (PPC_Enabled): New flag\n+\n+2008-04-08  Robert Dewar  <dewar@adacore.com>\n+\t    Gary Dismukes  <dismukes@adacore.com>\n+\t    Javier Miranda  <miranda@adacore.com>\n+\t    Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* fe.h: Remove global Optimize_Alignment flag, no longer used\n+\n+\t* layout.adb: Test Optimize_Alignment flags rather than global switch\n+\n+\t* lib.ads, lib.adb: New OA_Setting field in library record\n+\n+\t* lib-load.adb: New OA_Setting field in library record\n+\n+\t* lib-writ.ads, lib-writ.adb (Collect_Withs, Write_With_Lines): Place\n+\tunits mentioned in limited_with_ clauses in the ali file, with an\n+\t'Y' marker.\n+\tNew Ox fields in U line\n+\n+\t* opt.adb: New flag Optimize_Alignment_Local\n+\t(Check_Policy_List[_Config]): New flags\n+\n+\t* opt.ads (Invalid_Value_Used): New flag\n+\tNew switch Optimize_Alignment_Local\n+\t(Warn_On_Parameter_Order): New flag\n+\t(Check_Policy_List[_Config]): New flags\n+\n+\t* ali.ads, ali.adb: Add indicator 'Y' to mark mark the presence of\n+\tlimited_with clauses.\n+\tNew data structures for Optimize_Alignment\n+\n+\t* bcheck.adb (Check_Consistent_Restriction_No_Default_Initialization):\n+\tNew procedure\n+\t(Check_Consistent_Optimize_Alignment): Rework for new structure\n+\t(Check_Consistent_Restrictions): Fix incorrect error message\n+\n+\tsem_ch10.adb (Decorate_Tagged_Type): Set the Parent field of a newly\n+\tcreated class-wide type (to the Parent field of the specific type).\n+\t(Install_Siblings): Handle properly private_with_clauses on subprogram\n+\tbodies and on generic units.\n+\t(Analyze_With_Clause, Install_Limited_Withed_Unit): Guard against an\n+\tillegal limited_with_clause that names a non-existent package.\n+\t(Check_Body_Required): Determine whether a unit named a limited_with\n+\tclause needs a body.\n+\t(Analyze_Context): A limited_with_clause is illegal on a unit_renaming.\n+\tCapture Optimize_Alignment settings to set new OA_Setting field in\n+\tlibrary record.\n+\t(Build_Limited_Views): Include task and protected type declarations.\n+\n+\t* sem_ch3.ads, sem_ch3.adb (Analyze_Object_Declaration): Handle the\n+\tcase of a possible constant redeclaration where the current object is\n+\tan entry index constant.\n+\t(Analyze_Object_Declaration): Generate an error in case of CPP\n+\tclass-wide object initialization.\n+\t(Analyze_Object_Declaration): Add extra information on warnings for\n+\tdeclaration of unconstrained objects.\n+\t(Access_Type_Declaration): Set Associated_Final_Chain to Empty, to avoid\n+\tconflicts with the setting of Stored_Constraint in the case where the\n+\taccess type entity has already been created as an E_Incomplete_Type due\n+\tto a limited with clause.\n+\tUse new Is_Standard_Character_Type predicate\n+\t(Analyze_Object_Declaration): Apply access_constant check only after\n+\texpression has been resolved, given that it may be overloaded with\n+\tseveral access types.\n+\t(Constant_Redeclaration): Additional legality checks for deferred\n+\tconstant declarations tha involve anonymous access types and/or null\n+\texclusion indicators.\n+\t(Analyze_Type_Declaration): Set Optimize_Alignment flags\n+\t(Analyze_Subtype_Declaration): Ditto\n+\t(Analyze_Object_Declaration): Ditto\n+\t(Analyze_Object_Declaration): Don't count tasks in generics\n+\tChange name In_Default_Expression      => In_Spec_Expression\n+\tChange name Analyze_Per_Use_Expression => Preanalyze_Spec_Expression\n+\tChange name Pre_Analyze_And_Resolve    => Preanalyze_And_Resolve\n+\t(Process_Discriminants): Additional check for illegal use of default\n+\texpressions in access discriminant specifications in a type that is not\n+\texplicitly limited.\n+\t(Check_Abstract_Overriding): If an inherited function dispaches on an\n+\taccess result, it must be overridden, even if the type is a null\n+\textension.\n+\t(Derive_Subprogram): The formals of the derived subprogram have the\n+\tnames and defaults of the parent subprogram, even if the type is\n+\tobtained from the actual subprogram.\n+\t(Derive_Subprogram): In the presence of interfaces, a formal of an\n+\tinherited operation has the derived type not only if it descends from\n+\tthe type of the formal of the parent operation, but also if it\n+\timplements it. This is relevant for the renamings created for the\n+\tprimitive operations of the actual for a formal derived type.\n+\t(Is_Progenitor): New predicate, to determine whether the type of a\n+\tformal in the parent operation must be replaced by the derived type.\n+\n+\t* sem_util.ads, sem_util.adb (Has_Overriding_Initialize): Make\n+\tpredicate recursive to handle components that have a user-defined\n+\tInitialize procedure. Handle controlled derived types whose ancestor\n+\thas a user-defined Initialize procedured.\n+\t(Note_Possible_Modification): Add Sure parameter, generate warning if\n+\tsure modification of constant\n+\tUse new Is_Standard_Character_Type predicate\n+\t(Find_Parameter_Type): when determining whether a protected operation\n+\timplements an interface operation, retrieve the type of the formal from\n+\tthe entity when the formal is an access parameter or an\n+\tanonymous-access-to-subprogram.\n+\tMove Copy_Parameter_List to sem_util, for use when building stubbed\n+\tsubprogram bodies.\n+\t(Has_Access_Values): Tagged types now return False\n+\t(Within_HSS_Or_If): New procedure\n+\t(Set_Optimize_Alignment_Flags): New procedure\n+\tChange name In_Default_Expression      => In_Spec_Expression\n+\tChange name Analyze_Per_Use_Expression => Preanalyze_Spec_Expression\n+\tChange name Pre_Analyze_And_Resolve    => Preanalyze_And_Resolve\n+\n+2008-04-08  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* s-fileio.adb: Name_Error shouldn't be raised for a tempory file.\n+\n+2008-04-08  Tristan Gingold  <gingold@adacore.com>\n+\n+PR ada/10768\n+\n+\t* cuintp.c: Fix 16 bits issue for AVR.\n+\tOn AVR, integer is 16 bits, so it can't be used to do math with\n+\tBase (=32768).\n+\tSo use long_integer instead.\n+\n+2008-04-08  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* a-calend-vms.ads, a-calend-vms.adb: Add with and use clause for\n+\tSystem.OS_Primitives.\n+\tChange type of various constants, parameters and local variables from\n+\tTime to representation type OS_Time.\n+\t(To_Ada_Time, To_Unix_Time): Correct sign of origin shift.\n+\tRemove the declaration of constant Mili_F from several routines. New\n+\tbody for internal package Conversions_Operations.\n+\t(Time_Of): Add default parameters for several formals.\n+\n+\t* a-caldel.adb: Minor reformatting\n+\n+\t* a-calend.ads, a-calend.adb: New body for internal package\n+\tConversions_Operations.\n+\t(Time_Of): Add default parameters for several formals.\n+\n+\t* Makefile.rtl: Add a-ststop\n+\tAdd Ada.Calendar.Conversions to the list of runtime files.\n+\tAdd g-timsta\n+\n+\t* a-calcon.adb, a-calcon.ads: New files.\n+\n+2008-04-08  Jose Ruiz  <ruiz@adacore.com>\n+\t    Tristan Gingold  <gingold@adacore.com>\n+\n+\t* s-interr-dummy.adb, s-interr-vms.adb, s-interr-sigaction.adb\n+\t(Install_Restricted_Handlers): New procedure\n+\twhich is a simplified version of Install_Handlers that does not store\n+\tpreviously installed.\n+\n+\t* s-interr-vxworks.adb: Fix ACATS cxc3001\n+\tOn VxWorks interrupts can't be detached.\n+\t(Install_Restricted_Handlers): New procedure.\n+\n+\t* s-interr.ads, s-interr.adb (Install_Restricted_Handlers): New\n+\tprocedure.\n+\n+2008-04-08  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* s-intman-vxworks.ads, s-intman-vxworks.adb\n+\t(Map_And_Raise_Exception): Remove. Was an import of only part of the\n+\trequired services already implemented elsewhere.\n+\t(Notify_Exception): Delete body, import __gnat_error_handler instead.\n+\t(Initialize): Add SA_SIGINFO to the sa_flags, to get the sigcontext\n+\targument passed to the handler, which we need for ZCX propagation\n+\tpurposes.\n+\n+2008-04-08  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* adaint.h, adaint.c (__gnat_current_time_string): New routine.\n+\n+\t* g-timsta.adb, g-timsta.ads: New files.\n+\n+2008-04-08  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-except-2005.ads, a-except-2005.adb, a-except.ads, a-except.adb\n+\t(Raise_Exception): In accordance with AI-446, raise CE for Null_Id\n+\t(Raise_Exception_Always): Fix documentation accordingly\n+\n+2008-04-08  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-strbou.ads, a-strbou.adb (From_String): New procedure (for use by\n+\tStream_Convert)\n+\n+\t* sem_ch13.ads (Rep_Item_Too_Late): Document that Stream_Convert sets\n+\tFOnly\n+\n+2008-04-08  Javier Miranda  <miranda@adacore.com>\n+\t    Robert Dewar  <dewar@adacore.com>\n+\t    Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* a-tags.adb (Register_Interface_Offset): New subprogram.\n+\t(Set_Dynamic_Offset_To_Top): New subprogram (see previous comment).\n+\t(To_Predef_Prims_Table_Ptr): Removed.\n+\t(Acc_Size): Removed.\n+\t(To_Acc_Size): Removed.\n+\t(Parent_Size): Modified to the call the subprogram returning the size of\n+\tthe parent by means of the new TSD component Size_Func.\n+\n+\t* a-tags.ads (Offset_To_Top_Ptr): New access type declaration.\n+\t(DT_Offset_To_Top_Offset): New constant value that is used to generate\n+\tcode referencing the Offset_To_Top component of the dispatch table's\n+\tprologue.\n+\t(Prim_Ptr): New declaration of access to procedure. Used to avoid the\n+\tuse of 'address to initialize dispatch table slots.\n+\t(Size_Func): New component of the TSD. Used by the run-time to call the\n+\tsize primitive of the tagged type.\n+\n+\t* checks.adb (Apply_Access_Check): Avoid check when accessing the\n+\tOffset_To_Top component of a dispatch table.\n+\t(Null_Exclusion_Static_Checks): If the non-null access type appears in a\n+\tdeferred constant declaration. do not add a null expression, to prevent\n+\tspurious errors when full declaration is analyzed.\n+\t(Apply_Discriminant_Check): If both discriminant constraints share a\n+\tnode which is not static but has no side effects, do not generate a\n+\tcheck for that discriminant.\n+\t(Generate_Index_Checks): Set Name_Req to true in call to duplicate\n+\tsubexpr, since the prefix of an attribute is a name.\n+\n+\t* checks.ads: Fix nit in comment.\n+\n+\t* exp_ch3.ads, exp_ch3.adb (Freeze_Record_Type): Do not add the spec\n+\tand body of predefined primitives in case of CPP tagged type\n+\tderivations.\n+\t(Freeze_Type): Deal properly with no storage pool case\n+\t(Make_Predefined_Primitive_Specs): Generate specification of abstract\n+\tprimitive Deep_Adjust if a nonlimited interface is derived from a\n+\tlimited interface.\n+\t(Build_Dcheck_Functions): Create discriminant-checking functions only\n+\tfor variants that have some component(s).\n+\t(Build_Slice_Assignment): In expanded code for slice assignment, handle\n+\tproperly the case where the slice bounds extend to the last value of the\n+\tunderlying representation.\n+\t(Get_Simple_Init_Val): New calling sequence, accomodate Invalid_Value\n+\t(Is_Variable_Size_Record): An array component has a static size if\n+\tindex bounds are enumeration literals.\n+\n+\t* exp_disp.adb (Make_DT): Use the first subtype to determine whether\n+\tan external tag has been specified for the type.\n+\t(Building_Static_DT): Add missing support for private types.\n+\t(Make_DT): Add declaration of Parent_Typ to ensure consistent access\n+\tto the entity associated with the parent of Typ. This is done to\n+\tavoid wrong access when the parent is a private type.\n+\t(Expand_Interface_Conversion): Improve error message when the\n+\tconfigurable runtime has no support for dynamic interface conversion.\n+\t(Expand_Interface_Thunk): Add missing support to interface types in\n+\tconfigurable runtime.\n+\t(Expand_Dispatching_Call): remove obsolete code.\n+\t(Make_DT): Replace occurrences of RE_Address by RE_Prim_Ptr, and\n+\tensure that all subtypes and aggregates associated with dispatch\n+\ttables have the attribute Is_Dispatch_Table_Entity set to true.\n+\t(Register_Primitive): Rename one variable to improve code reading.\n+\tReplace occurrences of RE_Addres by RE_Prim_Ptr. Register copy o\n+\tof the pointer to the 'size primitive in the TSD.\n+\n+\t* rtsfind.ads (RE_DT_Offset_To_Top_Offset): New entity.\n+\t(RE_Offset_To_Top_Ptr): New entity.\n+\t(RE_Register_Interface_Offset): New entity.\n+\t(RE_Set_Dynamic_Offset_To_Top): New entity.\n+\t(RE_Set_Offset_To_Top): Removed entity.\n+\t(RE_Prim_Ptr): New entity\n+\t(RE_Size_Func): New entity\n+\t(RE_Size_Ptr): New entity\n+\t(RTU_Id): Add Ada_Dispatching and Ada_Dispatching_EDF.\n+\t(Ada_Dispatching_Child): Define this new subrange.\n+\t(RE_Id): Add new required run-time calls (RE_Set_Deadline, RE_Clock,\n+\t RE_Time_Span, and RE_Time_Span_Zero).\n+\t(RE_Unit_Table): Add new required run-time calls\n+\n+\t* rtsfind.adb (Get_Unit_Name): Add processing for Ada.Dispatching\n+\tchildren.\n+\n+\t* exp_atag.ads, exp_atag.adb (Build_Offset_To_Top): New subprogram.\n+\t(Build_Set_Static_Offset_To_Top): New subprogram. Generates code that\n+\t initializes the Offset_To_Top component of a dispatch table.\n+\t(Build_Predef_Prims): Removed.\n+\t(Build_Get_Predefined_Prim_Op_Address): Replace call to Predef_Prims by\n+\t its actual code.\n+\t(Build_Set_Size_Function): New subprogram.\n+\n+\t* exp_ch13.adb: Do not generate storage variable for storage_size zero\n+\t(Expand): Handle setting/restoring flag Inside_Freezing_Actions\n+\n+2008-04-08  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-ztdeau.adb, a-tideau.adb, a-wtdeau.adb (Puts_Dec): Fix error in\n+\tcomputing Fore when Exp > 0\n+\n+2008-04-08  Robert Dewar  <dewar@adacore.com>\n+\n+\t* back_end.adb: Remove Big_String_Ptr declarations (now in Types)\n+\n+\t* errout.adb: Remove Big_String_Ptr declarations (now in Types)\n+\tChange name Is_Style_Msg to Is_Style_Or_Info_Msg\n+\n+\t* fmap.adb: Remove Big_String declarations (now in Types)\n+\t(No_Mapping_File): New Boolean global variable\n+\t(Initialize): When mapping file cannot be read, set No_Mapping_File to\n+\tFalse.\n+\t(Update_Mapping_File): Do nothing if No_Mapping_File is True. If the\n+\ttables were empty before adding entries, open the mapping file\n+\twith Truncate = True, instead of delete/re-create.\n+\n+\t* fname-sf.adb: Remove Big_String declarations (now in Types)\n+\n+\t* s-strcom.adb, g-dyntab.ads, g-table.ads, s-carsi8.adb,\n+        s-stalib.ads, s-carun8.adb: Add zero size Storage_Size clauses for\n+\tbig pointer types\n+\n+\t* table.ads: Add for Table_Ptr'Storage_Size use 0\n+\n+\t* types.ads: Add Big_String declarations\n+\tAdd Size_Clause of zero for big pointer types\n+\n+2008-04-08  Vincent Celier  <celier@adacore.com>\n+\n+\t* clean.adb (Parse_Cmd_Line): Recognize switch --subdirs=\n+\t(Usage): Add line for switch --subdirs=\n+\tAdd new switch -eL, to follow symbolic links when processing project\n+\tfiles.\n+\n+\t* gnatcmd.adb: Process switches -eL and --subdirs=\n+\t(Non_VMS_Usage): Output \"gnaampcmd\" instead of \"gnat\", and call\n+\tProgram_Name to get proper tool names when AAMP_On_Target is set.\n+\t(Gnatcmd): Call Add_Default_Search_Dirs and Get_Target_Parameters to get\n+\tAAMP_On_Target set properly for use of GNAAMP tools (this is needed by\n+\tOsint.Program_Name).\n+\n+\t* gnatname.adb: (Scan_Args): Recognize switches -eL and --subdirs=\n+\t(Usage): Add lines for switches -eL and --subdirs=\n+\n+\t* makeusg.adb: Add line for switch --subdirs=\n+\n+\t* prj.ads: \n+\t(Source_Data): New Boolean component Compiled, defaulted to True\n+\t(Empty_File_Name: New global variable in private part, initialized in\n+\tprocedure Initialize.\n+\t(Subdirs_Option): New constant string\n+\t(Subdirs): New String_Ptr global variable\n+\t(Language_Config): New component Include_Compatible_Languages\n+\t(Project_Qualifier): New type for project qualifiers\n+\t(Project_Data): New component Qualifier\n+\t(Project_Configuration): New component Archive_Builder_Append_Option\n+\n+\t* prj-nmsc.adb (Get_Unit_Exceptions): When a unit is already in\n+\tanother imported project indicate the name of this imported project.\n+\t(Check_File): When a unit is in two project files, indicate the project\n+\tnames and the paths of the source files for each project.\n+\t(Add_Source): Set Compiled to False if compiler driver is empty. Only\n+\tset object, dependency and switches file names if Compiled is True.\n+\t(Process_Compiler): Allow the empty string for value of attribute Driver\n+\t(Get_Directories): When Subdirs is not null and Object_Dir is not\n+\t specified, locate and create if necessary the actual object dir.\n+\t(Locate_Directory): When Subdirs is not empty and Create is not the\n+\tempty string, locate and create if necessary the actual directory\n+\tas a subdirectory of directory Name.\n+\t(Check_Library_Attributes.Check_Library): Allow a project where the only\n+\t\"sources\" are header files of file based languages to be imported by\n+\tlibrary projects, in multi-language mode (gprbuild).\n+\t(Check_Library_Attributes.Check_Library): In multi-language mode\n+\t(gprbuild), allow a library project to import a project with no\n+\tsources, even when this is not declared explicitly.\n+\t(Check_If_Externally_Built): A virtual project extending an externally\n+\tbuilt project is also externally built.\n+\t(Check_Library_Attributes): For a virtual project extending a library\n+\tproject, inherit the library directory.\n+\t(Process_Project_Level_Array_Attributes): Process new attribute\n+\tInherit_Source_Path.\n+\tFor projects with specified qualifiers \"standard\", \"library\" or\n+\t\"abstract\", check that the project conforms to the qualifier.\n+\t(Process_Project_Level_Simple_Attributes): Process new attribute\n+\t Archive_Builder_Append_Option.\n+\n+\t* switch-m.adb: (Scan_Make_Switches): Process switch --subdirs=\n+\t(Normalize_Compiler_Switches): Only keep compiler switches that are\n+\tpassed to gnat1 by the gcc driver and that are stored in the ALI file\n+\tby gnat1.\n+\tDo not take into account switc -save-temps\n+\n+\t* makegpr.adb (Compile_Link_With_Gnatmake): Transmit switch -eL if\n+\tgprmake is called with -eL.\n+\t(Scan_Arg): Recognize switch -eL\n+\t(Usage): Add line for switch -eL\n+\n+\t* prj.adb (Initialize): Initialize Empty_File_Name\n+\t(Project_Empty): New component Qualifier\n+\n+\t* prj-attr.ads, prj-attr.adb: New project level attribute\n+\tInherit_Source_Path.\n+\tNew project level attribute Archive_Builder_Append_Option\n+\n+\t* prj-dect.adb: Replace System.Strings by GNAT.Strings.\n+\n+\t* prj-ext.adb (Initialize_Project_Path): In Multi_Language mode, add\n+\t<prefix>/lib/gnat in the project path, after <prefix>/share/gpr, for\n+\tupward compatibility.\n+\n+\t* prj-part.adb (Project_Path_Name_Of.Try_Path): In high verbosity, put\n+\teach Trying ...\" on different lines.\n+\t(Parse_Single_Project): Recognize project qualifiers. Fail in qualifier\n+\tis \"configuration\" when not in configuration. Fail when in configuration\n+\twhen a specified qualifier is other than \"configuration\".\n+\n+\t* prj-proc.adb (Process_Declarative_Items): Link new elements of copied\n+\tfull associative array together.\n+\t(Recursive_Process): Put the project qualifier in the project data\n+\t\n+\t* prj-tree.ads, prj-tree.adb: (Project_Qualifier_Of): New function\n+\t(Set_Project_Qualifier_Of): New procedure\n+\n+2008-04-08  Robert Dewar  <dewar@adacore.com>\n+\n+\t* errout.ads: Update comments for new handling of info: messages\n+\n+\t* erroutc.adb (Matches): New procedure\n+\t(Warning_Specifically_Suppressed): Modified to handle multiple * chars\n+\t(Is_Style_Or_Info_Msg): New name for Is_Style_Msg, now set for\n+\t info messages as well as style messages.\n+\n+\t* erroutc.ads: Remove unneeded fields from Specific_Warning_Entry\n+\n+\t* sem_elab.adb (Supply_Bodies): Create actual bodies for stubbed\n+\tsubprograms.\n+\t(Check_A_Call): Special \"info: \" warnings now have ? in the text\n+\t(Elab_Warning): Use info message in static case\n+\n+2008-04-08  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_aggr.adb (Static_Array_Aggregate): Use Max_Aggr_Size to determine\n+\twhether an array aggregate with static bounds and scalar components\n+\tshould be expanded into a static constant.\n+\n+2008-04-08  Gary Dismukes  <dismukes@adacore.com>\n+\t    Ed Schonberg  <schonberg@adacore.com>\n+\t    Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_cat.adb (Validate_RCI_Subprogram_Declaration): Add tests of\n+\tHas_Stream_Attribute_ Definition when checking for available stream\n+\tattributes on parameters of a limited type in Ada 2005. Necessary for\n+\tproper recognition of visible stream attribute clauses.\n+\t(Has_Stream_Attribute_Definition): If the type is derived from a\n+\tprivate type, then use the derived type's underlying type for checking\n+\twhether it has stream attributes.\n+\t(Validate_Object_Declaration): The check for a user-defined Initialize\n+\tprocedure applies also to types with controlled components or a\n+\tcontrolled ancestor.\n+\tReject an object declaration in a preelaborated unit if the type is a\n+\tcontrolled type with an overriding Initialize procedure.\n+\t(Validate_Remote_Access_To_Class_Wide_Type): Return without further\n+\tchecking when the parent of a dereference is a selected component and\n+\tthe name has not been analyzed.\n+\n+\t* sem_ch4.adb (Analyze_Selected_Component): Add checking for selected\n+\tprefixes that are invalid explicit dereferences of remote\n+\taccess-to-class-wide values, first checking whether the selected\n+\tcomponent is a prefixed form of call to a tagged operation.\n+\t(Analyze_Call): Remove code that issues an error for limited function\n+\tcalls in illegal contexts, as we now support all of the contexts that\n+\twere forbidden here.\n+\tAllow a function call that returns a task.and appears as the\n+\tprefix of a selected component.\n+\t(Analyze_Reference): Give error message if we try to make a 'Reference\n+\tfor an object that is atomic/aliased without its type having the\n+\tcorresponding attribute.\n+\t(Analyze_Call): Remove condition checking for attributes to allow\n+\tcalls to functions with inherently limited results as prefixes of\n+\tattributes. Remove related comment about Class attributes.\n+\t(Analyze_Selected_Component): If the prefix is a remote type, check\n+\twhether this is a prefixed call before reporting an error.\n+\t(Complete_Object_Operation): If the controlling formal is an access to\n+\tvariable reject an actual that is a constant or an access to one.\n+\t(Try_Object_Operation): If prefix is a tagged protected object,retrieve\n+\tprimitive operations from base type.\n+\n+\t* exp_ch4.adb (Expand_N_Indexed_Component): Test for prefix that is a\n+\tbuild-in-place\n+\tfunction call and call Make_Build_In_Place_Call_In_Anonymous_Context.\n+\t(Expand_N_Selected_Component): Test for prefix that is a build-in-place\n+\tfunction call and call Make_Build_In_Place_Call_In_Anonymous_Context.\n+\t(Expand_N_Slice): Test for prefix that is a build-in-place function call\n+\tand call Make_Build_In_Place_Call_In_Anonymous_Context.\n+\t(Analyze_Call): Remove code that issues an error for limited function\n+\tcalls in illegal contexts, as we now support all of the contexts that\n+\twere forbidden here.\n+\tNew calling sequence for Get_Simple_Init_Val\n+\t(Expand_Boolean_Operator): Add call to Silly_Boolean_Array_Xor_Test\n+\t(Expand_N_Op_Not): Add call to Silly_Boolan_Array_Not_Test\n+\n+2008-04-08  Hristian Kirtchev  <kirtchev@adacore.com>\n+\t    Ed Schonberg  <schonberg@adacore.com>\n+\t    Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch2.adb: Minor reformatting.\n+\t(Expand_Entry_Index_Parameter): Set the type of the identifier.\n+\t(Expand_Entry_Reference): Add call to Expand_Protected_Component.\n+\t(Expand_Protected_Component): New routine.\n+\t(Expand_Protected_Private): Removed.\n+\tAdd Sure parameter to Note_Possible_Modification calls\n+\n+\t* sem_ch12.ads, sem_ch12.adb (Analyze_Subprogram_Instantiation): The\n+\tgenerated subprogram declaration must inherit the overriding indicator\n+\tfrom the instantiation node.\n+\t(Validate_Access_Type_Instance): If the designated type of the actual is\n+\ta limited view, use the available view in all cases, not only if the\n+\ttype is an incomplete type.\n+\t(Instantiate_Object):  Actual is illegal if the formal is null-excluding\n+\tand the actual subtype does not exclude null.\n+\t(Process_Default): Handle properly abstract formal subprograms.\n+\t(Check_Formal_Package_Instance): Handle properly defaulted formal\n+\tsubprograms in a partially parameterized formal package.\n+\tAdd Sure parameter to Note_Possible_Modification calls\n+\t(Validate_Derived_Type_Instance): if the formal is non-limited, the\n+\tactual cannot be limited.\n+\t(Collect_Previous_Instances): Generate instance bodies for subprograms\n+\tas well.\n+\n+\t* sem_ch13.adb (Analyze_Attribute_Definition_Clause, case Small): Don't\n+\ttry to set RM_Size.\n+\tAdd Sure parameter to Note_Possible_Modification calls\n+\t(Analyze_At_Clause): Preserve Comes_From_Source on Rewrite call\n+\t(Analyze_Attribute_Definition_Clause, case Attribute_Address): Check for\n+\tconstant overlaid by variable and issue warning.\n+\tUse new Is_Standard_Character_Type predicate\n+\t(Analyze_Record_Representation_Clause): Check that the specified\n+\tLast_Bit is not less than First_Bit - 1.\n+\t(Analyze_Attribute_Definition_Clause, case Address): Check for\n+\tself-referential address clause\n+\n+\t* sem_ch5.ads, sem_ch5.adb (Diagnose_Non_Variable_Lhs): Rewrite the\n+\tdetection mechanism when the lhs is a prival.\n+\t(Analyze_Assignment): Call Check_Unprotected_Access to detect\n+\tassignment of a pointer to protected data, to an object declared\n+\toutside of the protected object.\n+\t(Analyze_Loop_Statement): Check for unreachable code after loop\n+\tAdd Sure parameter to Note_Possible_Modication calls\n+\tProtect analysis from previous syntax error such as a scope mismatch\n+\tor a missing begin.\n+\t(Analyze_Assignment_Statement): The assignment is illegal if the\n+\tleft-hand is an interface.\n+\n+\t* sem_res.adb (Resolve_Arithmetic_Op): For mod/rem check violation of\n+\trestriction No_Implicit_Conditionals\n+\tAdd Sure parameter to Note_Possible_Modication calls\n+\tUse new Is_Standard_Character_Type predicate\n+\t(Make_Call_Into_Operator): Preserve Comes_From_Source when rewriting\n+\tcall as operator. Fixes problems (e.g. validity checking) which\n+\tcome from the result looking as though it does not come from source).\n+\t(Resolve_Call): Check case of name in named parameter if style checks\n+\tare enabled.\n+\t(Resolve_Call): Exclude calls to Current_Task as entry formal defaults\n+\tfrom the checking that such calls should not occur from an entry body.\n+\t(Resolve_Call): If the return type of an Inline_Always function\n+\trequires the secondary stack, create a transient scope for the call\n+\tif the body of the function is not available for inlining.\n+\t(Resolve_Actuals): Apply Ada2005 checks to view conversions of arrays\n+\tthat are actuals for in-out formals.\n+\t(Try_Object_Operation): If prefix is a tagged protected object,retrieve\n+\tprimitive operations from base type.\n+\t(Analyze_Selected_Component): If the context is a call to a protected\n+\toperation the parent may be an indexed component prior to expansion.\n+\t(Resolve_Actuals): If an actual is of a protected subtype, use its\n+\tbase type to determine whether a conversion to the corresponding record\n+\tis needed.\n+\t(Resolve_Short_Circuit): Handle pragma Check\n+\n+\t* sem_eval.adb: Minor code reorganization (usea Is_Constant_Object)\n+\tUse new Is_Standard_Character_Type predicate\n+\t(Eval_Relational_Op): Catch more cases of string comparison\n+\n+2008-04-08  Robert Dewar  <dewar@adacore.com>\n+\t    Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* s-rident.ads: Add No_Default_Initialization restriction\n+\n+\t* exp_tss.adb: \n+\t(Has_Non_Null_Base_Init_Proc): Handle No_Default_Initialization case\n+\t(Set_TSS): Handle No_Default_Initialization case\n+\n+\t* exp_ch6.adb (Expand_N_Subprogram_Body): Handle restriction\n+\tNo_Default_Initialization\n+\t(Expand_N_Subprogram_Body): Remove redundant initialization of out\n+\tparameters when Normalize_Scalars is active.\n+\t(Add_Final_List_Actual_To_Build_In_Place_Call): Add formal Sel_Comp\n+\tFix casing error in formal parameter name in call\n+\t(Register_Predefined_DT_Entry): Replace occurrences of RE_Address by\n+\t(Expand_Call, Propagate_Tag): Call Kill_Current_Values when processing a\n+\tdispatching call on VM targets.\n+\n+2008-04-08  Gary Dismukes  <dismukes@adacore.com>\n+\t    Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_ch7.adb (Find_Final_List): Change the test for generating a\n+\tselected component from an access type's Associated_Final_Chain to\n+\tcheck for the presence of that field, rather than assuming it exists\n+\tfor all named access types.\n+\t(Make_Clean): New formal Chained_Cleanup_Action allowing to specify a\n+\tprocedure to call at the end of the generated cleanup procedure.\n+\t(Expand_Cleanup_Actions): When a new cleanup procedure is generated, and\n+\tand an At_End_Proc already exists in the handled sequence of statements\n+\tfor which cleanup actions are being expanded, the original cleanup\n+\taction must be preserved.\n+\n+2008-04-08  Hristian Kirtchev  <kirtchev@adacore.com>\n+\t    Ed Schonberg  <schonberg@adacore.com>\n+\t    Robert Dewar  <dewar@adacore.com>\n+\t    Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_ch9.ads, exp_ch9.adb (Build_Protected_Entry,\n+\tBuild_Unprotected_Subprogram_Body): Generate debug info for\n+\tdeclarations related to the handling of private data in task and\n+\tprotected types.\n+\t(Debug_Private_Data_Declarations): New subprogram.\n+\t(Install_Private_Data_Declarations): Remove all debug info flagging.\n+\tThis is now done by Debug_Private_Data_Declarations at the correct\n+\tstage of expansion.\n+\t(Build_Simple_Entry_Call): If the task name is a function call, expand\n+\tthe prefix into an object declaration, and make the surrounding block a\n+\ttask master.\n+\t(Build_Master_Entity): An internal block is a master if it wraps a call.\n+\tCode reformatting, update comments. Code clean up.\n+\t(Make_Task_Create_Call): Use 'Unrestricted_Access instead of 'Address.\n+\t(Replicate_Entry_Formals): If the formal is an access parameter or\n+\tanonymous access to subprogram, copy the original tree to create new\n+\tentities for the formals of the subprogram.\n+\t(Expand_N_Task_Type_Declaration): Create a Relative_Deadline variable\n+\tfor tasks to store the value passed using pragma Relative_Deadline.\n+\t(Make_Task_Create_Call): Add the Relative_Deadline argument to the\n+\trun-time call to create a task.\n+\t(Build_Wrapper_Spec): If the controlling argument of the interface\n+\toperation is an access parameter with a non-null indicator, use the\n+\tnon-null indicator on the wrapper.\n+\n+\t* sem_ch9.adb (Analyze_Protected_Type): Only retrieve the full view when\n+\tpresent, which it may not be in the case where the type entity is an\n+\tincomplete view brought in by a limited with.\n+\t(Analyze_Task_Type): Only retrieve the full view when present, which it\n+\tmay not be in the case where the type entity is an incomplete view brought\n+\tin by a limited with.\n+\t(Analyze_Protected_Definition): Set Is_Frozen on all itypes generated for\n+\tprivate components of a protected type, to prevent the generation of freeze\n+\tnodes for which there is no proper scope of elaboration.\n+\n+\t* exp_util.ads, exp_util.adb\n+\t(Remove_Side_Effects): If the expression is a function call that returns a\n+\ttask, expand into a declaration to invoke the build_in_place machinery.\n+\t(Find_Protection_Object): New routine.\n+\t(Remove_Side_Effects): Also make a copy of the value\n+\tfor attributes whose result is of an elementary type.\n+\t(Silly_Boolean_Array_Not_Test): New procedure\n+\t(Silly_Boolean_Array_Xor_Test): New procedure\n+\t(Is_Volatile_Reference): New function\n+\t(Remove_Side_Effects): Use Is_Volatile_Reference\n+\t(Possible_Bit_Aligned_Component): Handle slice case properly\n+\n+\t* exp_pakd.adb (Expand_Packed_Not): Move silly true/true or false/false\n+\tcase test to Exp_Util\n+\t(Expand_Packed_Xor): Move silly true/true case test to Exp_Util\n+\n+2008-04-08  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_dist.ads, exp_dist.adb: Fix casing error in formal parameter name\n+\tin call\n+\t(Add_RACW_Features): When processing an RACW in another unit than the\n+\tmain unit, set Body_Decls to No_List to indicate that the bodies of\n+\tthe type's TSS must not be generated.\n+\t(GARLIC_Support.Add_RACW_Read_Attribute,\n+\tGARLIC_Support.Add_RACW_Write_Attribute): Do not generate bodies if\n+\tBody_Decls is No_List.\n+\t(PolyORB_Support.Add_RACW_Read_Attribute,\n+\tPolyORB_Support.Add_RACW_Write_Attribute,\n+\tPolyORB_Support.Add_RACW_From_Any,\n+\tPolyORB_Support.Add_RACW_To_Any,\n+\tPolyORB_Support.Add_RACW_TypeCode): Same.\n+\t(Transmit_As_Unconstrained): New function.\n+\t(Build_Ordered_Parameters_List): Use the above to order parameters.\n+\t(GARLIC_Support.Build_General_Calling_Stubs):\n+\tUse the above to determine which parameters to unmarshall using 'Input\n+\tat the point where their temporary is declared (as opposed to later on\n+\twith a 'Read call).\n+\t(PolyORB_Support.Build_General_Calling_Stubs):\n+\tUse the above to determine which parameters to unmarshall using From_Any\n+\tat the point where their temporary is declared (as opposed to later on\n+\twith an assignment).\n+\n+2008-04-08  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_strm.adb (Build_Record_Or_Elementary_Input_Function): If this is\n+\tan Input function for an access type, do not perform default\n+\tinitialization on the local variable that receives the value, to\n+\tprevent spurious warnings when the type is null-excluding.\n+\n+2008-04-08  Robert Dewar  <dewar@adacore.com>\n+\t    Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* freeze.adb (Freeze_Entity): Improve warnings on access types in pure\n+\tunits.\n+\t(Size_Known): Generic formal scalar types have known at compile\n+\ttime size, so remove check.\n+\tFix casing error in formal parameter name in call\n+\t(Freeze_Subprogram): If the subprogram is a user-defined operator,\n+\trecheck its overriding indication.\n+\n+2008-04-08  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnat1drv.adb: Send all messages indicating an error to standard error\n+\n+2008-04-08  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnatbind.adb (Restriction_Could_Be_Set): New procedure\n+\t(List_Applicable_Restrictions): Do not list existing restrictions\n+\n+2008-04-08  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* g-socket.ads, g-socket.adb: Improve documentation of GNAT.Sockets:\n+\tadd a pointer to generic sockets literature\n+\tdo not mention that the given example is \"typical\" usage.\n+\tRemove obsolete comment about multicast not being supported on Windows.\n+\t(Connect_Socket): Make Server mode IN rather than IN OUT\n+\tsince this formal is never modified.\n+\n+2008-04-08  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sprint.adb (Write_Itype): Handle Itypes whose Parent field points to\n+\tthe declaration for some different entity.\n+\t(Sprint_Node_Actual, case N_Derived_Type_Definition): When an interface\n+\tlist is precent (following the parent subtype indication), display\n+\tappropriate \"and\" keyword.\n+\n+\t* itypes.adb: Remove unnecessary calls to Init_Size_Align and Init_Esize\n+\tRemove unnecessary calls to Init_Size_Align and Init_Esize.\n+\tAdd notes on use of Parent field of an Itype\n+\n+2008-04-08  Ed Schonberg  <schonberg@adacore.com>\n+\t    Robert Dewar  <dewar@adacore.com>\n+\t    Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* lib-xref.adb (Is_On_LHS): Remove dead code\n+\t(Output_Overriden_Op): If the overridden operation is itself inherited,\n+\tlist the ancestor operation, which is the one whose body or absstract\n+\tspecification is actually being overridden. For source navigation\n+\tpurposes.\n+\n+\t* sem_ch7.adb (Is_Primitive_Of): use base type to determine whether\n+\toperation is primitive for the type.\n+\t(Declare_Inherited_Private_Subprograms): If the new operation overrides\n+\tan inherited private subprogram, set properly the Overridden_Operation\n+\tattribute, for better cross-reference information.\n+\t(Analyze_Package_Specification): Do late analysis of spec PPCs\n+\t(Install_Private_Declaration, Uninstall_Declarations): Save/restore\n+\tproperly the full view and underlying full views of a private type in a\n+\tchild unit, whose full view is derived from a private type in a parent\n+\tunit, and whose own full view becomes visible in the child body.\n+\n+\t* sem_disp.adb (Check_Dispatching_Operation): When a body declares a\n+\tprimitive operation after the type has been frozen, add an explicit\n+\treference to the type and the operation, because other primitive\n+\treferences have been emitted already.\n+\t(Expand_Call, Propagate_Tag): Call Kill_Current_Values when processing a\n+\tdispatching call on VM targets.\n+\n+2008-04-08  Vincent Celier  <celier@adacore.com>\n+\t    Thomas Quinot  <quinot@adacore.com>\n+\n+\t* make.adb: (Gnatmake_Called): Remove, no longer necessary\n+\t(Compile_Surces): Call Delete_Temp_Config_Files only if Gnatmake_Called\n+\tis True and Debug_Flag_N is False. Debug_Flag_N means \"keep temp files\".\n+\t(Insert_Project_Sources): Take into account index in multi-unit source\n+\tfiles.\n+\tAfter building a library project, delete all temporary files.\n+\t(Initialize): Reset current output after parsing project file.\n+\t(Collect_Arguments_And_Compile): Never insert in the queue the sources\n+\tof library projects that are externally built.\n+\tPut file name in error and inform messages if -df is used\n+\t(Display): If invoked with -d7, do not display path names, but only\n+\tfile names.\n+\n+\t* makeutl.ads (Path_Or_File_Name): New function\n+\t(Path_Or_File_Name): New function\n+\n+2008-04-08  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* Make-lang.in: Disable warnings during first stage of bootstrap\n+\tGet rid of gnatbl.\n+\tUpdate dependencies.\n+\n+2008-04-08  Vincent Celier  <celier@adacore.com>\n+\n+\t* mlib-prj.adb (Build_Library): Compare with ALI file name in canonical\n+\tcase to decide if ALI object file is included in library.\n+\t(Build_Library): Never attempt to build a library if the project is\n+\texternally built.\n+\n+2008-04-08  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* nlists.adb (Is_Non_Empty_List): Remove redundant test. First\n+\t(No_List) is defined to return Empty.\n+\n+2008-04-08  Jose Ruiz  <ruiz@adacore.com>\n+\n+\t* osint.ads, osint.adb (Get_Libraries_From_Registry): Improve\n+\tdocumentation.\n+\tUpdate comments.\n+\t(Read_Default_Search_Dirs): Do not consider spaces as path separators\n+\tbecause spaces may be part of legal paths.\n+\n+2008-04-08  Robert Dewar  <dewar@adacore.com>\n+\n+\t* par-ch11.adb (P_Exception_Handler): Check indentation level for\n+\thandler\n+\n+2008-04-08  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* par-ch3.adb (P_Type_Declaration) Reject the keyword \"synchronized\"\n+\tin a type declaration, if this is not an interface declaration or\n+\tprivate type extension.\n+\n+2008-04-08  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-util.adb (Executable_Of): New String parameter Language. When\n+\tAda_Main is False and Language is not empty, attempt to remove the body\n+\tsuffix or the spec suffix of the language to get the base of the\n+\texecutable file name.\n+\t(Put): New Boolean parameter Lower_Case, defauilted to False. When\n+\tLower_Case is True, put the value in lower case in the name list.\n+\t(Executable_Of): If there is no executable suffix in the configuration,\n+\tthen do not modify Executable_Extension_On_Target.\n+\n+\t* prj-util.ads (Executable_Of): New String parameter Language,\n+\tdefaulted to the empty string.\n+\t(Put): New Boolean parameter Lower_Case, defauilted to False\n+\n+2008-04-08  Robert Dewar  <dewar@adacore.com>\n+\n+\t* scng.adb (Scan_Identifier): Handle case of identifier starting with\n+\twide character using UTF-8 encoding.\n+\n+2008-04-08  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem.adb (Analyze): Consider case in which we analyze an empty node\n+\tthat was generated by a call to a runtime function that is not\n+\tavailable under the configurable runtime.\n+\n+\t* sem.ads (Inside_Freezing_Actions): New flag.\n+\t(Save_Check_Policy_List): New field in scope stack entry\n+\n+2008-04-08  Ed Schonberg  <schonberg@adacore.com>\n+\t    Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_aggr.adb (Analyze_N_Extension_Aggregate): Add legality checks for\n+\tthe ancestor part of an extension aggregate for a limited type.\n+\t(Resolve_Array_Aggregate): Issue warning for sliding of aggregate with\n+\tenumeration index bounds.\n+\t(Resolve_Array_Aggregate): Add circuit for diagnosing missing choices\n+\twhen array is too short.\n+\t(Check_Expr_OK_In_Limited_Aggregate): Move function\n+\tCheck_Non_Limited_Type from Resolve_Record_Aggregate to top level (and\n+\tchange name).\n+\t(Resolve_Array_Aggregate.Resolve_Aggr_Expr):\n+\tCheck_Expr_OK_In_Limited_Aggregates called to check for illegal limited\n+\tcomponent associations.\n+\t(Check_Non_Limited_Type): Moved to outer level and renamed.\n+\t(Resolve_Record_Aggregate): In an extension aggregate, an association\n+\twith a box initialization can only designate a component of the\n+\textension, not a component inherited from the given ancestor\n+\n+\t* sem_case.adb: Use new Is_Standard_Character_Type predicate\n+\n+2008-04-08  Robert Dewar  <dewar@adacore.com>\n+\n+\t* s-imgdec.adb (Set_Decimal_Digits): Fix error when input is zero with\n+\tnegative scale\n+\t(Set_Decimal_Digits): Properly handle Aft=0 (equivalent to Aft=1)\n+\tProperly handle case where Aft > Scale and input number is less than\n+\tone.\n+\n+2008-04-08  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* s-stoele.ads, s-soflin.ads: Move the location of\n+\tDummy_Communication_Block from System.Storage_Elements to\n+\tSystem.Soft_Links.\n+\n+\t* s-tpobop.ads: Add comment on usage of Dummy_Communication_Block to\n+\temulate Communication_Block in certain scenarios.\n+\n+2008-04-08  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* s-strxdr.adb, s-stratt.ads, s-stratt.adb (Block_IO_OK): New\n+\tsubprogram.\n+\tAdd new subtype S_WWC, unchecked conversion routines From_WWC and\n+\tTo_WWC.\n+\t(I_WWC, O_WWC): New routines for input and output of\n+\tWide_Wide_Character.\n+\n+2008-04-08  Robert Dewar  <dewar@adacore.com>\n+\n+\t* stringt.adb (Write_String_Table_Entry): Handle wide characters\n+\tproperly\n+\n+2008-04-08  Robert Dewar  <dewar@adacore.com>\n+\n+\t* styleg.adb (Check_Comment): Allow special char after -- in\n+\tnon-end-of-line case\n+\n+2008-04-08  Robert Dewar  <dewar@adacore.com>\n+\n+\t* stylesw.adb: Implement -gnaty + - y options\n+\t(Set_GNAT_Style_Check_Options): Includ I in style check string\n+\n+\t* stylesw.ads: Add comments for new style switch options\n+\n+2008-04-08  Sergey Rybin  <rybin@adacore.com>\n+\n+\t* tree_io.ads: Increase ASIS_Version_Number because of adding Sem_Aux\n+\tto the set of the GNAT components needed by ASIS.\n+\n+2008-04-08  Bob Duff  <duff@adacore.com>\n+\n+\t* types.h: Change CE_Null_Exception_Id to the correct value (8, was 9).\n+\n+2008-04-08  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* vxaddr2line.adb: Use Unsigned_32 instead of Integer for address type.\n+\tImprove error message generation.\n+\n+2008-04-08  Vincent Celier  <celier@adacore.com>\n+\n+\t* a-direct.adb (Start_Search): Check for Name_Error before checking for\n+\tUse_Error, as specified in the RM. Check if directory is open and raise\n+\tUse_Error if it is not.\n+\n+2008-04-08  Vincent Celier  <celier@adacore.com>\n+\t    Robert Dewar  <dewar@adacore.com>\n+\n+\t* vms_conv.adb (Output_Version): Print \"GNAAMP\" instead of \"GNAT when\n+\tAAMP_On_Target is set.\n+\n+\t* vms_data.ads: Add NOxxx to style check switch list\n+\tAdd entry COMPONENTS for -gnatVe\n+\tAdd VMS qualifiers for -eL (/FOLLOW_LINKS_FOR_FILES) and --subdirs=\n+\t(/SUBDIRS=).\n+\t(GCC_Switches): Add /ALL_BACK_END_WARNINGS.\n+\tAdd qualifiers for gnatmetric coupling options\n+\tAdd note that -gnata enables all checks\n+\tAdd entries [NO]PARAMETER_ORDER for -gnatw.p[P]\n+\tFix inconsistency for VMS qualifier for the gnatpp '-rnb' option\n+\tNew warning flag -gnatw.e\n+\n+\t* usage.adb: Add entries for -gnaty+ -gnaty- -gnatyy\n+\tAdd entry for -gnatyN (forgotten before)\n+\tLine for new warning switch -gnatw.p\n+\tNew warning flag -gnatw.e\n+\n+\t* gnat_ugn.texi: Add documentation fpr project file switch -aP\n+\tDocument -gnaty - + y\n+\tReplace occurences of \"package specification\" with \"package spec\"\n+\tDefine preprocessing symbols in documentation of gnatprep\n+\tClarify reason for distinguishing overflow checking\n+\tAdd documentation for project-aware tool switches -eL and --subdirs=\n+\tComplete list of configuration pragmas\n+\tSpecify that, even when gnatmake switch -x is used, mains on the command\n+\tline need to be sources of project files.\n+\tEditing of gnatcheck/gnatmetric doc.\n+\tAdd documentation for -gnatw.p/-gnatw.P\n+\tAdd missing documentation for -fno-inline-functions.\n+\tAdd documentation for -gnatw.e\n+\n+\t* gnat_rm.texi: Add documentation for No_Default_Initialization\n+\tReplace occurences of \"package specification\" with \"package spec\"\n+\tDocument use of * in Warnings Off string\n+\tUpdate documentation of alignment/component clauses.\n+\tAdd documentation for Invalid_Value\n+\tDocument new consistency rule for Optimize_Alignment\n+\tAdd documentation for Precondition and Postcondition pragmas\n+\tAdd documentation for Check and Check_Policy pragmas\n+\tDocument new Enum_Val attribute\n+\tRemove requirement for static string in pragma Assert\n+\tAdd documentation on GNAT.Time_Stamp\n+\n+\t* ug_words: add entry for -gnatVe\n+\tAdd entries for -gnat.p[P] /WARNINGS=[NO]PARAMETER_ORDER\n+\tAdd entry for -gnatw.e\n+\n+\t* debug.adb: Add missing documentation for d.a flag\n+\tDocument new -gnatd.a switch.\n+\tAdd documentation for new gnatmake debug switch -df\n+\n+2008-04-08  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* gen-soccon.c: Bump year in copyright notices.\n+\n+\t* g-soccon-vxworks.ads: Add new constant IP_PKTINFO\n+\n+2008-04-08  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* ctrl_c.c: Improve handling of ctrl-c on LynxOS and Windows.\n+\tMinor reformatting.\n+\n+2008-04-08  Robert Dewar  <dewar@adacore.com>\n+\t    Bob Duff  <duff@adacore.com>\n+\n+\t* impunit.adb: Add Interfaces.Java.JNI, System.Strings.Stream_Ops,\n+\tAda.Calendar.Conversions, Ada.Dispatching.EDF, GNAT.Time_Stamp\n+\n+\t* s-intman-mingw.adb: Minor comment fix -- spell 'explicitly' correctly\n+\n+\t* g-trasym.adb: Minor comment fix -- spell 'explicitly' correctly\n+\n+\t* g-trasym.ads: Minor comment improvements\n+\n+\t* s-stalib.adb: Minor comment fix -- spell 'explicitly' correctly\n+\n+\t* a-sequio.ads, a-direio.ads: improve message for tagged type\n+\n+\t* a-strunb.ads: Minor reformatting\n+\n+\t* a-tifiio.adb: Minor reformatting\n+\n+\t* atree.adb (Fix_Parents): Use clearer names for formals\n+\tCleanup and simplify code\n+\tUse named notation in calls\n+\n+\t* exp_fixd.adb (Do_Multiply_Fixed_Universal): Use named notation in\n+\tconfusing calls\n+\n+\t* uintp.adb: Used named notation for some confusing calls\n+\n+\t* bindusg.adb: Minor change in one line of output\n+\n+\t* cstand.adb: Minor reformatting of src representation of Standard\n+\n+\t* a-assert.ads: Add comment.\n+\n+\t* g-decstr.adb: Fix bad indentation\n+\n+\t* expander.ads, expander.adb: Code clean up.\n+\n+\t* sem_dist.ads: Minor comment improvement\n+\n+\t* sem_type.adb, g-dirope.ads, g-exctra.ads, s-valwch.adb,\n+\ts-wchstw.adb, targparm.ads, widechar.adb: Minor reformatting\n+\n+\t* i-cstrin.adb: Fix casing error in formal parameter name in call\n+\n+2008-04-08  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* binde.adb (Gather_All_Links, Gather_Dependencies): units that are\n+\tmentioned in limited_with_clauses to do create semantic dependencies\n+\teven though they appear in the ali file.\n+\n+2008-04-08  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* g-comlin.ads, g-comlin.adb (Expansion): Remove unreachable return\n+\tstatement.\n+\t(Get_Configuration): New subprogram.\n+\n+\t* prj-pp.ads, prj-pp.adb (Pretty_Print): new parameters Id and Id_Tree\n+\tThese optional parameters help preserve the casing of the project's name\n+\twhen pretty-printing.\n+\n+2008-04-08  Jerome Lambourg  <lambourg@adacore.com>\n+\t    Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* bindgen.adb (Gen_Adainit_Ada): If the main program is a CIL function,\n+\tthen use __gnat_set_exit_status to report the returned status code.\n+\n+\t* comperr.adb (Compiler_Abort): Convert most bug boxes into clean error\n+\tmessages on .NET, since some constructs of the language are not\n+\tproperly supported.\n+\n+\t* gnatlink.adb (Gnatlink): In case the command line is too long for the\n+\t.NET linker, gnatlink now concatenate all .il files and pass this to\n+\tilasm.\n+\n 2008-04-07  Aurelien Jarno  <aurelien@aurel32.net>\n             Xavier Grave  <grave@ipno.in2p3.fr>\n "}]}