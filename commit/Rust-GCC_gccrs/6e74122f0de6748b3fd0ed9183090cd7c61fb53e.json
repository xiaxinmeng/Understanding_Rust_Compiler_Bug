{"sha": "6e74122f0de6748b3fd0ed9183090cd7c61fb53e", "node_id": "C_kwDOANBUbNoAKDZlNzQxMjJmMGRlNjc0OGIzZmQwZWQ5MTgzMDkwY2Q3YzYxZmI1M2U", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-02-16T08:25:55Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-02-16T08:25:55Z"}, "message": "c-family: Fix up shorten_compare for decimal vs. non-decimal float comparison [PR104510]\n\nThe comment in shorten_compare says:\n  /* If either arg is decimal float and the other is float, fail.  */\nbut the callers of shorten_compare don't expect anything like failure\nas a possibility from the function, callers require that the function\npromotes the operands to the same type, whether the original selected\n*restype_ptr one or some shortened.\nSo, if we choose not to shorten, we should still promote to the original\n*restype_ptr.\n\n2022-02-16  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c/104510\n\t* c-common.cc (shorten_compare): Convert original arguments to\n\tthe original *restype_ptr when mixing binary and decimal float.\n\n\t* gcc.dg/dfp/pr104510.c: New test.", "tree": {"sha": "c8f92acf34bcbdc234a074047a01e330dd1fbdb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8f92acf34bcbdc234a074047a01e330dd1fbdb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e74122f0de6748b3fd0ed9183090cd7c61fb53e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e74122f0de6748b3fd0ed9183090cd7c61fb53e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e74122f0de6748b3fd0ed9183090cd7c61fb53e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e74122f0de6748b3fd0ed9183090cd7c61fb53e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "875e493bf5eb04c11bc3846a6bfee47a6f183e3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/875e493bf5eb04c11bc3846a6bfee47a6f183e3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/875e493bf5eb04c11bc3846a6bfee47a6f183e3f"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "7203d761df1c53149fcf269628537c0833eccd62", "filename": "gcc/c-family/c-common.cc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e74122f0de6748b3fd0ed9183090cd7c61fb53e/gcc%2Fc-family%2Fc-common.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e74122f0de6748b3fd0ed9183090cd7c61fb53e/gcc%2Fc-family%2Fc-common.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.cc?ref=6e74122f0de6748b3fd0ed9183090cd7c61fb53e", "patch": "@@ -3174,7 +3174,11 @@ shorten_compare (location_t loc, tree *op0_ptr, tree *op1_ptr,\n   else if (real1 && real2\n \t   && (DECIMAL_FLOAT_MODE_P (TYPE_MODE (TREE_TYPE (primop0)))\n \t       || DECIMAL_FLOAT_MODE_P (TYPE_MODE (TREE_TYPE (primop1)))))\n-    return NULL_TREE;\n+    {\n+      type = *restype_ptr;\n+      primop0 = op0;\n+      primop1 = op1;\n+    }\n \n   else if (real1 && real2\n \t   && (TYPE_PRECISION (TREE_TYPE (primop0))"}, {"sha": "85f4e9707de09d4f0da2dd8f53ab50c094611b76", "filename": "gcc/testsuite/gcc.dg/dfp/pr104510.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e74122f0de6748b3fd0ed9183090cd7c61fb53e/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fpr104510.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e74122f0de6748b3fd0ed9183090cd7c61fb53e/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fpr104510.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fpr104510.c?ref=6e74122f0de6748b3fd0ed9183090cd7c61fb53e", "patch": "@@ -0,0 +1,12 @@\n+/* PR c/104510 */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+float f;\n+_Decimal64 d;\n+\n+int\n+foo (void)\n+{\n+  return d > (_Decimal32) (_Decimal64) f;\n+}"}]}