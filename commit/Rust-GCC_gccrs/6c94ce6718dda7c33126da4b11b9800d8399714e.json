{"sha": "6c94ce6718dda7c33126da4b11b9800d8399714e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM5NGNlNjcxOGRkYTdjMzMxMjZkYTRiMTFiOTgwMGQ4Mzk5NzE0ZQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-04-18T20:43:08Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-04-18T20:43:08Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r785", "tree": {"sha": "ef0d7075ebc34a0643cf17e5d984d90171b3e80a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef0d7075ebc34a0643cf17e5d984d90171b3e80a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c94ce6718dda7c33126da4b11b9800d8399714e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c94ce6718dda7c33126da4b11b9800d8399714e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c94ce6718dda7c33126da4b11b9800d8399714e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c94ce6718dda7c33126da4b11b9800d8399714e/comments", "author": null, "committer": null, "parents": [{"sha": "9482d6deecc38b335d633603f3c18e31297b2ad7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9482d6deecc38b335d633603f3c18e31297b2ad7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9482d6deecc38b335d633603f3c18e31297b2ad7"}], "stats": {"total": 28, "additions": 17, "deletions": 11}, "files": [{"sha": "236de8de973290a0a13c1b38518c38417a93faa7", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c94ce6718dda7c33126da4b11b9800d8399714e/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c94ce6718dda7c33126da4b11b9800d8399714e/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=6c94ce6718dda7c33126da4b11b9800d8399714e", "patch": "@@ -1293,7 +1293,7 @@ __transfer_from_trampoline ()\t\t\t\t\t\\\n     if (INTVAL (RTX) >= -128 && INTVAL (RTX) <= 127) return 1;\t\\\n     /* Constants between -136 and 254 are easily generated */\t\\\n     /* by intelligent uses of moveq, add[q], and subq \t   */   \\\n-    if (OUTER_CODE == SET && INTVAL (RTX) >= -136\t\t\\\n+    if ((OUTER_CODE) == SET && INTVAL (RTX) >= -136\t\t\\\n \t&& INTVAL (RTX) <= 254) return 2;\t\t\t\\\n   case CONST:\t\t\t\t\t\t\t\\\n   case LABEL_REF:\t\t\t\t\t\t\\"}, {"sha": "bfb5a133e376df33c16389dea9900b1b1a05bf90", "filename": "gcc/config/romp/romp.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c94ce6718dda7c33126da4b11b9800d8399714e/gcc%2Fconfig%2Fromp%2Fromp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c94ce6718dda7c33126da4b11b9800d8399714e/gcc%2Fconfig%2Fromp%2Fromp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fromp%2Fromp.h?ref=6c94ce6718dda7c33126da4b11b9800d8399714e", "patch": "@@ -1233,11 +1233,11 @@ struct rt_cargs {int gregs, fregs; };\n \n #define CONST_COSTS(RTX,CODE,OUTER_CODE) \\\n   case CONST_INT:\t\t\t\t\t\t\\\n-    if (OUTER_CODE == IOR && exact_log2 (INTVAL (RTX)) >= 0\t\\\n-\t|| OUTER_CODE == AND && exact_log2 (~INTVAL (RTX)) >= 0\t\\\n-\t|| ((OUTER_CODE == PLUS || OUTER_CODE == MINUS)\t\t\\\n+    if ((OUTER_CODE) == IOR && exact_log2 (INTVAL (RTX)) >= 0\t\\\n+\t|| (OUTER_CODE) == AND && exact_log2 (~INTVAL (RTX)) >= 0\t\\\n+\t|| (((OUTER_CODE) == PLUS || (OUTER_CODE) == MINUS)\t\t\\\n \t    && (unsigned int) (INTVAL (RTX) + 15) < 31)\t\t\\\n-\t|| (OUTER_CODE == SET && (unsigned int) INTVAL (RTX) < 16))\\\n+\t|| ((OUTER_CODE) == SET && (unsigned int) INTVAL (RTX) < 16))\\\n       return 0;\t\t\t\t\t\t\t\\\n     return ((unsigned)(INTVAL(RTX) + 0x8000) < 0x10000 || (INTVAL (RTX) & 0xffff0000) == 0) ? 0 : COSTS_N_INSNS (2);\\\n   case CONST:\t\t\t\t\t\t\t\\"}, {"sha": "91b3bf09b894d727d1f561ff729604074869c8f9", "filename": "gcc/config/vax/vax.h", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c94ce6718dda7c33126da4b11b9800d8399714e/gcc%2Fconfig%2Fvax%2Fvax.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c94ce6718dda7c33126da4b11b9800d8399714e/gcc%2Fconfig%2Fvax%2Fvax.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.h?ref=6c94ce6718dda7c33126da4b11b9800d8399714e", "patch": "@@ -844,21 +844,27 @@ gen_rtx (PLUS, Pmode, frame, gen_rtx (CONST_INT, VOIDmode, 12))\n #define CONST_COSTS(RTX,CODE,OUTER_CODE) \\\n   case CONST_INT:\t\t\t\t\t\t\\\n     if (INTVAL (RTX) == 0) return 0;\t\t\t\t\\\n-    if (OUTER_CODE == AND)\t\t\t\t\t\\\n+    if ((OUTER_CODE) == AND)\t\t\t\t\t\\\n       return ((unsigned) ~INTVAL (RTX) <= 077) ? 1 : 2;\t\t\\\n     if ((unsigned) INTVAL (RTX) <= 077) return 1;\t\t\\\n-    if (OUTER_CODE == COMPARE && INTVAL (RTX) == -1) return 1;\t\\\n-    if (OUTER_CODE == PLUS && (unsigned) -INTVAL (RTX) <= 077) return 1;\\\n+    if ((OUTER_CODE) == COMPARE && INTVAL (RTX) == -1)\t\t\\\n+      return 1;\t\t\t\t\t\t\t\\\n+    if ((OUTER_CODE) == PLUS && (unsigned) -INTVAL (RTX) <= 077)\\\n+      return 1;\t\t\t\t\t\t\t\\\n   case CONST:\t\t\t\t\t\t\t\\\n   case LABEL_REF:\t\t\t\t\t\t\\\n   case SYMBOL_REF:\t\t\t\t\t\t\\\n     return 3;\t\t\t\t\t\t\t\\\n   case CONST_DOUBLE:\t\t\t\t\t\t\\\n     if (GET_MODE_CLASS (GET_MODE (RTX)) == MODE_FLOAT)\t\t\\\n       return vax_float_literal (RTX) ? 5 : 8;\t\t\t\\\n-    else return\t\t\t\t\t\t\t\\\n-  (CONST_DOUBLE_HIGH (RTX) == 0 && (unsigned)CONST_DOUBLE_LOW (RTX) < 64 \\\n-   || OUTER_CODE == PLUS && CONST_DOUBLE_HIGH (RTX) == -1 && (unsigned)-CONST_DOUBLE_LOW (RTX) < 64) ? 2 : 5;\n+    else\t\t\t\t\t\t\t\\\n+      return (((CONST_DOUBLE_HIGH (RTX) == 0\t\t\t\\\n+\t\t&& (unsigned) CONST_DOUBLE_LOW (RTX) < 64)\t\\\n+\t       || ((OUTER_CODE) == PLUS\t\t\t\t\\\n+\t\t   && CONST_DOUBLE_HIGH (RTX) == -1\t\t\\\n+\t\t   && (unsigned)-CONST_DOUBLE_LOW (RTX) < 64))\t\\\n+\t      ? 2 : 5);\n \n #define RTX_COSTS(RTX,CODE,OUTER_CODE) case FIX: case FLOAT:\t\\\n  case MULT: case DIV: case UDIV: case MOD: case UMOD:\t\t\\"}]}