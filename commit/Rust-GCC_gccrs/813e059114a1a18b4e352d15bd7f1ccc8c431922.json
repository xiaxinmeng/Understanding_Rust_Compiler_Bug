{"sha": "813e059114a1a18b4e352d15bd7f1ccc8c431922", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODEzZTA1OTExNGExYTE4YjRlMzUyZDE1YmQ3ZjFjY2M4YzQzMTkyMg==", "commit": {"author": {"name": "Wolfgang Bangerth", "email": "bangerth@gcc.gnu.org", "date": "2003-06-30T18:55:06Z"}, "committer": {"name": "Wolfgang Bangerth", "email": "bangerth@gcc.gnu.org", "date": "2003-06-30T18:55:06Z"}, "message": "Fix bad indentation due to changes in whitespace between patch creation and patch application.\n\nFrom-SVN: r68722", "tree": {"sha": "52f8e15ed06dd60b27bff78781b49dc365a6492c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52f8e15ed06dd60b27bff78781b49dc365a6492c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/813e059114a1a18b4e352d15bd7f1ccc8c431922", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/813e059114a1a18b4e352d15bd7f1ccc8c431922", "html_url": "https://github.com/Rust-GCC/gccrs/commit/813e059114a1a18b4e352d15bd7f1ccc8c431922", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/813e059114a1a18b4e352d15bd7f1ccc8c431922/comments", "author": null, "committer": null, "parents": [{"sha": "984e085f58568252524f3fc7bdf03086762a0c39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/984e085f58568252524f3fc7bdf03086762a0c39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/984e085f58568252524f3fc7bdf03086762a0c39"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "173a62f7cff4f6418c017e75093889144d3c7a34", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/813e059114a1a18b4e352d15bd7f1ccc8c431922/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/813e059114a1a18b4e352d15bd7f1ccc8c431922/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=813e059114a1a18b4e352d15bd7f1ccc8c431922", "patch": "@@ -2783,16 +2783,16 @@ cp_parser_primary_expression (cp_parser *parser,\n \t\t     && INTEGRAL_OR_ENUMERATION_TYPE_P (TREE_TYPE (decl)))\n \t\t/* Const variables or static data members of integral\n \t\t   or enumeration types initialized with constant\n-     expressions (or dependent expressions - in this case\n-     the check will be done at instantiation time). */\n+                   expressions (or dependent expressions - in this case\n+                   the check will be done at instantiation time). */\n \t\t&& !(TREE_CODE (decl) == VAR_DECL\n \t\t     && INTEGRAL_OR_ENUMERATION_TYPE_P (TREE_TYPE (decl))\n \t\t     && DECL_INITIAL (decl)\n-       && (TREE_CONSTANT (DECL_INITIAL (decl))\n-    || type_dependent_expression_p \n-       (DECL_INITIAL (decl))\n-    || value_dependent_expression_p \n-       (DECL_INITIAL (decl)))))\n+                     && (TREE_CONSTANT (DECL_INITIAL (decl))\n+                         || type_dependent_expression_p \n+                         (DECL_INITIAL (decl))\n+                         || value_dependent_expression_p \n+                         (DECL_INITIAL (decl)))))\n \t      {\n \t\tif (!parser->allow_non_constant_expression_p)\n \t\t  return cp_parser_non_constant_id_expression (decl);"}]}