{"sha": "6eb793dd0fd8a3494a48b4ca1d748f347f9b3105", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmViNzkzZGQwZmQ4YTM0OTRhNDhiNGNhMWQ3NDhmMzQ3ZjliMzEwNQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2013-10-19T12:58:20Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-10-19T12:58:20Z"}, "message": "re PR target/58792 (ICE at mode-switching.c:421 when compiling clang lib/AST/MicrosoftCXXABI.cpp)\n\n\tPR target/58792\n\t* config/i386/i386.c (ix86_function_value_regno): Add DX_REG,\n\tST1_REG and XMM1_REG for 32bit and 64bit targets.  Also add DI_REG\n\tand SI_REG for 64bit SYSV ABI targets.\n\nFrom-SVN: r203857", "tree": {"sha": "768ed4b211dde61d2ef02251b1e6a132db4eee22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/768ed4b211dde61d2ef02251b1e6a132db4eee22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6eb793dd0fd8a3494a48b4ca1d748f347f9b3105", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6eb793dd0fd8a3494a48b4ca1d748f347f9b3105", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6eb793dd0fd8a3494a48b4ca1d748f347f9b3105", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6eb793dd0fd8a3494a48b4ca1d748f347f9b3105/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c07757e53626133cd0f248f1f690e3fd9b059f6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c07757e53626133cd0f248f1f690e3fd9b059f6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c07757e53626133cd0f248f1f690e3fd9b059f6e"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "78bc3bd56d7f313162bf1fdb1d50db0773478b70", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eb793dd0fd8a3494a48b4ca1d748f347f9b3105/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eb793dd0fd8a3494a48b4ca1d748f347f9b3105/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6eb793dd0fd8a3494a48b4ca1d748f347f9b3105", "patch": "@@ -1,3 +1,10 @@\n+2013-10-19  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/58792\n+\t* config/i386/i386.c (ix86_function_value_regno): Add DX_REG,\n+\tST1_REG and XMM1_REG for 32bit and 64bit targets.  Also add DI_REG\n+\tand SI_REG for 64bit SYSV ABI targets.\n+\n 2013-10-19  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* mode-switching.c (create_pre_exit): Rename maybe_builtin_apply"}, {"sha": "54bd5f21d2cb299cdb8d18449d8f8661b8361ab2", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eb793dd0fd8a3494a48b4ca1d748f347f9b3105/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eb793dd0fd8a3494a48b4ca1d748f347f9b3105/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=6eb793dd0fd8a3494a48b4ca1d748f347f9b3105", "patch": "@@ -7393,20 +7393,28 @@ ix86_function_value_regno_p (const unsigned int regno)\n   switch (regno)\n     {\n     case AX_REG:\n+    case DX_REG:\n       return true;\n+    case DI_REG:\n+    case SI_REG:\n+      return TARGET_64BIT && ix86_abi != MS_ABI;\n \n-    case FIRST_FLOAT_REG:\n+      /* Complex values are returned in %st(0)/%st(1) pair.  */\n+    case ST0_REG:\n+    case ST1_REG:\n       /* TODO: The function should depend on current function ABI but\n        builtins.c would need updating then. Therefore we use the\n        default ABI.  */\n       if (TARGET_64BIT && ix86_abi == MS_ABI)\n \treturn false;\n       return TARGET_FLOAT_RETURNS_IN_80387;\n \n-    case FIRST_SSE_REG:\n+      /* Complex values are returned in %xmm0/%xmm1 pair.  */\n+    case XMM0_REG:\n+    case XMM1_REG:\n       return TARGET_SSE;\n \n-    case FIRST_MMX_REG:\n+    case MM0_REG:\n       if (TARGET_MACHO || TARGET_64BIT)\n \treturn false;\n       return TARGET_MMX;"}]}