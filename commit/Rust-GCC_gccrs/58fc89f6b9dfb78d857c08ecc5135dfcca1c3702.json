{"sha": "58fc89f6b9dfb78d857c08ecc5135dfcca1c3702", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NThmYzg5ZjZiOWRmYjc4ZDg1N2MwOGVjYzUxMzVkZmNjYTFjMzcwMg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2010-06-25T19:17:21Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2010-06-25T19:17:21Z"}, "message": "decl.c (gfc_match_entry): Mark ENTRY as GFC_STD_F2008_OBS.\n\n2010-06-25  Tobias Burnus  <burnus@net-b.de>\n\n        * decl.c (gfc_match_entry): Mark ENTRY as GFC_STD_F2008_OBS.\n        * gfortran.texi (_gfortran_set_options): Update for\n        GFC_STD_F2008_OBS addition.\n        * libgfortran.h: Add GFC_STD_F2008_OBS.\n        * options.c (set_default_std_flags, gfc_handle_option): Handle\n        GFC_STD_F2008_OBS.\n        io.c (check_format): Fix allow_std check.\n\n2010-06-25  Tobias Burnus  <burnus@net-b.de>\n\n        * runtime/compile_options.c (init_compile_options): Update\n        compile_options.allow_std for GFC_STD_F2008_OBS.\n        * io/transfer.c (formatted_transfer_scalar_read,\n        formatted_transfer_scalar_write): Fix allow_std check.\n        * io/list_read.c (nml_parse_qualifier): Ditto.\n\n2010-06-25  Tobias Burnus  <burnus@net-b.de>\n\n        * gfortran.dg/entry_19.f90: New.\n\nFrom-SVN: r161409", "tree": {"sha": "8ec22cf4b468f1c2f0e801608786260eb1736fed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ec22cf4b468f1c2f0e801608786260eb1736fed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58fc89f6b9dfb78d857c08ecc5135dfcca1c3702", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58fc89f6b9dfb78d857c08ecc5135dfcca1c3702", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58fc89f6b9dfb78d857c08ecc5135dfcca1c3702", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58fc89f6b9dfb78d857c08ecc5135dfcca1c3702/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "272001a2444baade28fd272fd88a45dbe8ddeff6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/272001a2444baade28fd272fd88a45dbe8ddeff6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/272001a2444baade28fd272fd88a45dbe8ddeff6"}], "stats": {"total": 96, "additions": 67, "deletions": 29}, "files": [{"sha": "cb551de6d1e56598f815911da0cb41723ae338e4", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58fc89f6b9dfb78d857c08ecc5135dfcca1c3702/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58fc89f6b9dfb78d857c08ecc5135dfcca1c3702/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=58fc89f6b9dfb78d857c08ecc5135dfcca1c3702", "patch": "@@ -1,3 +1,13 @@\n+2010-06-25  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* decl.c (gfc_match_entry): Mark ENTRY as GFC_STD_F2008_OBS.\n+\t* gfortran.texi (_gfortran_set_options): Update for\n+\tGFC_STD_F2008_OBS addition.\n+\t* libgfortran.h: Add GFC_STD_F2008_OBS.\n+\t* options.c (set_default_std_flags, gfc_handle_option): Handle\n+\tGFC_STD_F2008_OBS.\n+\tio.c (check_format): Fix allow_std check.\n+\n 2010-06-25  Tobias Burnus  <burnus@net-b.de>\n \n \t* decl.c (gfc_match_entry): Allow END besides"}, {"sha": "c2b1ff277382fe2ec6d4919451e354aa512ba779", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58fc89f6b9dfb78d857c08ecc5135dfcca1c3702/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58fc89f6b9dfb78d857c08ecc5135dfcca1c3702/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=58fc89f6b9dfb78d857c08ecc5135dfcca1c3702", "patch": "@@ -4963,6 +4963,10 @@ gfc_match_entry (void)\n   if (m != MATCH_YES)\n     return m;\n \n+  if (gfc_notify_std (GFC_STD_F2008_OBS, \"Fortran 2008 obsolescent feature: \"\n+\t\t      \"ENTRY statement at %C\") == FAILURE)\n+    return MATCH_ERROR;\n+\n   state = gfc_current_state ();\n   if (state != COMP_SUBROUTINE && state != COMP_FUNCTION)\n     {"}, {"sha": "8d43c8bf8a49331530ca323236975aa86f769c88", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58fc89f6b9dfb78d857c08ecc5135dfcca1c3702/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58fc89f6b9dfb78d857c08ecc5135dfcca1c3702/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=58fc89f6b9dfb78d857c08ecc5135dfcca1c3702", "patch": "@@ -2335,9 +2335,10 @@ if e.g. an input-output edit descriptor is invalid in a given standard.\n Possible values are (bitwise or-ed) @code{GFC_STD_F77} (1),\n @code{GFC_STD_F95_OBS} (2), @code{GFC_STD_F95_DEL} (4), @code{GFC_STD_F95}\n (8), @code{GFC_STD_F2003} (16), @code{GFC_STD_GNU} (32),\n-@code{GFC_STD_LEGACY} (64), and @code{GFC_STD_F2008} (128).\n-Default: @code{GFC_STD_F95_OBS | GFC_STD_F95_DEL | GFC_STD_F2003\n-| GFC_STD_F2008 | GFC_STD_F95 | GFC_STD_F77 | GFC_STD_GNU | GFC_STD_LEGACY}.\n+@code{GFC_STD_LEGACY} (64), @code{GFC_STD_F2008} (128), and\n+@code{GFC_STD_F2008_OBS} (256).  Default: @code{GFC_STD_F95_OBS\n+| GFC_STD_F95_DEL | GFC_STD_F95 | GFC_STD_F2003 | GFC_STD_F2008\n+| GFC_STD_F2008_OBS | GFC_STD_F77 | GFC_STD_GNU | GFC_STD_LEGACY}.\n @item @var{option}[1] @tab Standard-warning flag; prints a warning to\n standard error. Default: @code{GFC_STD_F95_DEL | GFC_STD_LEGACY}.\n @item @var{option}[2] @tab If non zero, enable pedantic checking."}, {"sha": "f9a6d7b12404f96c764c4d893793d21b39051d77", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58fc89f6b9dfb78d857c08ecc5135dfcca1c3702/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58fc89f6b9dfb78d857c08ecc5135dfcca1c3702/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=58fc89f6b9dfb78d857c08ecc5135dfcca1c3702", "patch": "@@ -730,7 +730,7 @@ check_format (bool is_input)\n       t = format_lex ();\n       if (t == FMT_ERROR)\n \tgoto fail;\n-      if (gfc_option.allow_std < GFC_STD_F2003 && t != FMT_COMMA\n+      if (!(gfc_option.allow_std & GFC_STD_F2003) && t != FMT_COMMA\n \t  && t != FMT_F && t != FMT_E && t != FMT_EN && t != FMT_ES\n \t  && t != FMT_D && t != FMT_G && t != FMT_RPAREN && t != FMT_SLASH)\n \t{"}, {"sha": "d9216d30149e132171b4721bf20bb22bf9c4c505", "filename": "gcc/fortran/libgfortran.h", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58fc89f6b9dfb78d857c08ecc5135dfcca1c3702/gcc%2Ffortran%2Flibgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58fc89f6b9dfb78d857c08ecc5135dfcca1c3702/gcc%2Ffortran%2Flibgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flibgfortran.h?ref=58fc89f6b9dfb78d857c08ecc5135dfcca1c3702", "patch": "@@ -23,15 +23,16 @@ along with GCC; see the file COPYING3.  If not see\n    Note that no features were obsoleted nor deleted in F2003.\n    Please remember to keep those definitions in sync with\n    gfortran.texi.  */\n-#define GFC_STD_F2008\t(1<<7)\t/* New in F2008.  */\n-#define GFC_STD_LEGACY\t(1<<6)\t/* Backward compatibility.  */\n-#define GFC_STD_GNU\t(1<<5)\t/* GNU Fortran extension.  */\n-#define GFC_STD_F2003\t(1<<4)\t/* New in F2003.  */\n-#define GFC_STD_F95\t(1<<3)\t/* New in F95.  */\n-#define GFC_STD_F95_DEL\t(1<<2)\t/* Deleted in F95.  */\n-#define GFC_STD_F95_OBS\t(1<<1)\t/* Obsolescent in F95.  */\n-#define GFC_STD_F77\t(1<<0)\t/* Included in F77, but not deleted or\n-\t\t\t\t   obsolescent in later standards.  */\n+#define GFC_STD_F2008_OBS\t(1<<8)\t/* Obsolescent in F2008.  */\n+#define GFC_STD_F2008\t\t(1<<7)\t/* New in F2008.  */\n+#define GFC_STD_LEGACY\t\t(1<<6)\t/* Backward compatibility.  */\n+#define GFC_STD_GNU\t\t(1<<5)\t/* GNU Fortran extension.  */\n+#define GFC_STD_F2003\t\t(1<<4)\t/* New in F2003.  */\n+#define GFC_STD_F95\t\t(1<<3)\t/* New in F95.  */\n+#define GFC_STD_F95_DEL\t\t(1<<2)\t/* Deleted in F95.  */\n+#define GFC_STD_F95_OBS\t\t(1<<1)\t/* Obsolescent in F95.  */\n+#define GFC_STD_F77\t\t(1<<0)\t/* Included in F77, but not deleted or\n+\t\t\t\t\t   obsolescent in later standards.  */\n \n \n /* Bitmasks for the various FPE that can be enabled.  */"}, {"sha": "af537a1e70ebe63fba76a4001de320c5002fbd17", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58fc89f6b9dfb78d857c08ecc5135dfcca1c3702/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58fc89f6b9dfb78d857c08ecc5135dfcca1c3702/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=58fc89f6b9dfb78d857c08ecc5135dfcca1c3702", "patch": "@@ -48,7 +48,7 @@ set_default_std_flags (void)\n {\n   gfc_option.allow_std = GFC_STD_F95_OBS | GFC_STD_F95_DEL\n     | GFC_STD_F2003 | GFC_STD_F2008 | GFC_STD_F95 | GFC_STD_F77\n-    | GFC_STD_GNU | GFC_STD_LEGACY;\n+    | GFC_STD_F2008_OBS | GFC_STD_GNU | GFC_STD_LEGACY;\n   gfc_option.warn_std = GFC_STD_F95_DEL | GFC_STD_LEGACY;\n }\n \n@@ -857,7 +857,8 @@ gfc_handle_option (size_t scode, const char *arg, int value,\n       break;\n \n     case OPT_std_f95:\n-      gfc_option.allow_std = GFC_STD_F95_OBS | GFC_STD_F95 | GFC_STD_F77;\n+      gfc_option.allow_std = GFC_STD_F95_OBS | GFC_STD_F95 | GFC_STD_F77\n+\t\t\t     | GFC_STD_F2008_OBS;\n       gfc_option.warn_std = GFC_STD_F95_OBS;\n       gfc_option.max_continue_fixed = 19;\n       gfc_option.max_continue_free = 39;\n@@ -868,7 +869,7 @@ gfc_handle_option (size_t scode, const char *arg, int value,\n \n     case OPT_std_f2003:\n       gfc_option.allow_std = GFC_STD_F95_OBS | GFC_STD_F77 \n-\t| GFC_STD_F2003 | GFC_STD_F95;\n+\t| GFC_STD_F2003 | GFC_STD_F95 | GFC_STD_F2008_OBS;\n       gfc_option.warn_std = GFC_STD_F95_OBS;\n       gfc_option.max_identifier_length = 63;\n       gfc_option.warn_ampersand = 1;\n@@ -877,8 +878,8 @@ gfc_handle_option (size_t scode, const char *arg, int value,\n \n     case OPT_std_f2008:\n       gfc_option.allow_std = GFC_STD_F95_OBS | GFC_STD_F77 \n-\t| GFC_STD_F2003 | GFC_STD_F95 | GFC_STD_F2008;\n-      gfc_option.warn_std = GFC_STD_F95_OBS;\n+\t| GFC_STD_F2003 | GFC_STD_F95 | GFC_STD_F2008 | GFC_STD_F2008_OBS;\n+      gfc_option.warn_std = GFC_STD_F95_OBS | GFC_STD_F2008_OBS;\n       gfc_option.max_identifier_length = 63;\n       gfc_option.warn_ampersand = 1;\n       gfc_option.warn_tabs = 0;"}, {"sha": "f06c7a11b422118924de5eab52f6ca60740f0051", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58fc89f6b9dfb78d857c08ecc5135dfcca1c3702/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58fc89f6b9dfb78d857c08ecc5135dfcca1c3702/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=58fc89f6b9dfb78d857c08ecc5135dfcca1c3702", "patch": "@@ -1,3 +1,7 @@\n+2010-06-25  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* gfortran.dg/entry_19.f90: New.\n+\n 2010-06-25  Tobias Burnus  <burnus@net-b.de>\n \n \t* gfortran.dg/end_subroutine_1.f90: New."}, {"sha": "b7b8bfa2f2e5e85cc841e865bc820519217e7588", "filename": "gcc/testsuite/gfortran.dg/entry_19.f90", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58fc89f6b9dfb78d857c08ecc5135dfcca1c3702/gcc%2Ftestsuite%2Fgfortran.dg%2Fentry_19.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58fc89f6b9dfb78d857c08ecc5135dfcca1c3702/gcc%2Ftestsuite%2Fgfortran.dg%2Fentry_19.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fentry_19.f90?ref=58fc89f6b9dfb78d857c08ecc5135dfcca1c3702", "patch": "@@ -0,0 +1,9 @@\n+! { dg-do compile }\n+! { dg-options \"-std=f2008\" }\n+! \n+!\n+! Entry is obsolete in Fortran 2008\n+!\n+subroutine foo()\n+entry bar() ! { dg-error \"Fortran 2008 obsolescent feature: ENTRY\" }\n+end "}, {"sha": "129841b1f59a6293257b7bf52d7ca865af7af09b", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58fc89f6b9dfb78d857c08ecc5135dfcca1c3702/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58fc89f6b9dfb78d857c08ecc5135dfcca1c3702/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=58fc89f6b9dfb78d857c08ecc5135dfcca1c3702", "patch": "@@ -1,3 +1,11 @@\n+2010-06-25  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* runtime/compile_options.c (init_compile_options): Update\n+\tcompile_options.allow_std for GFC_STD_F2008_OBS.\n+\t* io/transfer.c (formatted_transfer_scalar_read,\n+\tformatted_transfer_scalar_write): Fix allow_std check.\n+\t* io/list_read.c (nml_parse_qualifier): Ditto.\n+\n 2010-06-18  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/44477"}, {"sha": "798521d62ad31bdf87956bd329be483f5f5cac0f", "filename": "libgfortran/io/list_read.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58fc89f6b9dfb78d857c08ecc5135dfcca1c3702/libgfortran%2Fio%2Flist_read.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58fc89f6b9dfb78d857c08ecc5135dfcca1c3702/libgfortran%2Fio%2Flist_read.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Flist_read.c?ref=58fc89f6b9dfb78d857c08ecc5135dfcca1c3702", "patch": "@@ -2077,7 +2077,7 @@ nml_parse_qualifier (st_parameter_dt *dtp, descriptor_dimension *ad,\n \t\t  /*  If -std=f95/2003 or an array section is specified,\n \t\t      do not allow excess data to be processed.  */\n                   if (is_array_section == 1\n-\t\t      || compile_options.allow_std < GFC_STD_GNU)\n+\t\t      || !(compile_options.allow_std & GFC_STD_GNU))\n \t\t    ls[dim].end = ls[dim].start;\n \t\t  else\n \t\t    dtp->u.p.expanded_read = 1;"}, {"sha": "f44c02538a9687b75dd2a8de4a57243eeebcca55", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58fc89f6b9dfb78d857c08ecc5135dfcca1c3702/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58fc89f6b9dfb78d857c08ecc5135dfcca1c3702/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=58fc89f6b9dfb78d857c08ecc5135dfcca1c3702", "patch": "@@ -4,7 +4,7 @@\n    Namelist transfer functions contributed by Paul Thomas\n    F2003 I/O support contributed by Jerry DeLisle\n \n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+This file is part of the GNU Fortran runtime library (libgfortran).\n \n Libgfortran is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n@@ -1042,7 +1042,7 @@ formatted_transfer_scalar_read (st_parameter_dt *dtp, bt type, void *p, int kind\n \tcase FMT_B:\n \t  if (n == 0)\n \t    goto need_read_data;\n-\t  if (compile_options.allow_std < GFC_STD_GNU\n+\t  if (!(compile_options.allow_std & GFC_STD_GNU)\n               && require_type (dtp, BT_INTEGER, type, f))\n \t    return;\n \t  read_radix (dtp, f, p, kind, 2);\n@@ -1051,7 +1051,7 @@ formatted_transfer_scalar_read (st_parameter_dt *dtp, bt type, void *p, int kind\n \tcase FMT_O:\n \t  if (n == 0)\n \t    goto need_read_data; \n-\t  if (compile_options.allow_std < GFC_STD_GNU\n+\t  if (!(compile_options.allow_std & GFC_STD_GNU)\n               && require_type (dtp, BT_INTEGER, type, f))\n \t    return;\n \t  read_radix (dtp, f, p, kind, 8);\n@@ -1060,7 +1060,7 @@ formatted_transfer_scalar_read (st_parameter_dt *dtp, bt type, void *p, int kind\n \tcase FMT_Z:\n \t  if (n == 0)\n \t    goto need_read_data;\n-\t  if (compile_options.allow_std < GFC_STD_GNU\n+\t  if (!(compile_options.allow_std & GFC_STD_GNU)\n               && require_type (dtp, BT_INTEGER, type, f))\n \t    return;\n \t  read_radix (dtp, f, p, kind, 16);\n@@ -1443,7 +1443,7 @@ formatted_transfer_scalar_write (st_parameter_dt *dtp, bt type, void *p, int kin\n \tcase FMT_B:\n \t  if (n == 0)\n \t    goto need_data;\n-\t  if (compile_options.allow_std < GFC_STD_GNU\n+\t  if (!(compile_options.allow_std & GFC_STD_GNU)\n               && require_type (dtp, BT_INTEGER, type, f))\n \t    return;\n \t  write_b (dtp, f, p, kind);\n@@ -1452,7 +1452,7 @@ formatted_transfer_scalar_write (st_parameter_dt *dtp, bt type, void *p, int kin\n \tcase FMT_O:\n \t  if (n == 0)\n \t    goto need_data; \n-\t  if (compile_options.allow_std < GFC_STD_GNU\n+\t  if (!(compile_options.allow_std & GFC_STD_GNU)\n               && require_type (dtp, BT_INTEGER, type, f))\n \t    return;\n \t  write_o (dtp, f, p, kind);\n@@ -1461,7 +1461,7 @@ formatted_transfer_scalar_write (st_parameter_dt *dtp, bt type, void *p, int kin\n \tcase FMT_Z:\n \t  if (n == 0)\n \t    goto need_data;\n-\t  if (compile_options.allow_std < GFC_STD_GNU\n+\t  if (!(compile_options.allow_std & GFC_STD_GNU)\n               && require_type (dtp, BT_INTEGER, type, f))\n \t    return;\n \t  write_z (dtp, f, p, kind);"}, {"sha": "62c401be6b32e55073eb70cf92899244a7d694d7", "filename": "libgfortran/runtime/compile_options.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58fc89f6b9dfb78d857c08ecc5135dfcca1c3702/libgfortran%2Fruntime%2Fcompile_options.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58fc89f6b9dfb78d857c08ecc5135dfcca1c3702/libgfortran%2Fruntime%2Fcompile_options.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fcompile_options.c?ref=58fc89f6b9dfb78d857c08ecc5135dfcca1c3702", "patch": "@@ -1,7 +1,7 @@\n /* Handling of compile-time options that influence the library.\n-   Copyright (C) 2005, 2007, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2007, 2009, 2010 Free Software Foundation, Inc.\n \n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+This file is part of the GNU Fortran runtime library (libgfortran).\n \n Libgfortran is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n@@ -138,7 +138,7 @@ init_compile_options (void)\n   compile_options.warn_std = GFC_STD_F95_DEL | GFC_STD_LEGACY;\n   compile_options.allow_std = GFC_STD_F95_OBS | GFC_STD_F95_DEL\n     | GFC_STD_F2003 | GFC_STD_F2008 | GFC_STD_F95 | GFC_STD_F77\n-    | GFC_STD_GNU | GFC_STD_LEGACY;\n+    | GFC_STD_F2008_OBS | GFC_STD_GNU | GFC_STD_LEGACY;\n   compile_options.pedantic = 0;\n   compile_options.dump_core = 0;\n   compile_options.backtrace = 0;"}]}