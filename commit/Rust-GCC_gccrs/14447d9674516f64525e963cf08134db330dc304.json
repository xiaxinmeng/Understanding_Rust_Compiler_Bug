{"sha": "14447d9674516f64525e963cf08134db330dc304", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ0NDdkOTY3NDUxNmY2NDUyNWU5NjNjZjA4MTM0ZGIzMzBkYzMwNA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "2000-02-03T18:26:51Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-02-03T18:26:51Z"}, "message": "Calendar.java (toString): New method.\n\n\t* java/util/Calendar.java (toString): New method.\n\t* java/util/SimpleTimeZone.java (clone): New method.\n\t(toString): New method.\n\t* java/util/TimeZone.java (clone): New method.\n\t* java/text/SimpleDateFormat.java (clone): New method.\n\t* java/text/NumberFormat.java (clone): New method.\n\t(equals): New method.\n\t* java/text/Format.java (clone): New method.\n\t* java/text/DateFormatSymbols.java (DateFormatSymbols): New\n\tconstructor.\n\t(clone): New method.\n\t* java/text/DateFormat.java (clone): New method.\n\t* java/text/Collator.java (clone): New method.\n\nFrom-SVN: r31775", "tree": {"sha": "85aea7711b50644d2a0b864b59738c7489ebc02b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85aea7711b50644d2a0b864b59738c7489ebc02b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14447d9674516f64525e963cf08134db330dc304", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14447d9674516f64525e963cf08134db330dc304", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14447d9674516f64525e963cf08134db330dc304", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14447d9674516f64525e963cf08134db330dc304/comments", "author": null, "committer": null, "parents": [{"sha": "7d3151e1c97ed21842b759aedecbc34588f85112", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d3151e1c97ed21842b759aedecbc34588f85112", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d3151e1c97ed21842b759aedecbc34588f85112"}], "stats": {"total": 142, "additions": 132, "deletions": 10}, "files": [{"sha": "48cf22dc1f8d8b23b7e70445dd74438345e2ffb6", "filename": "libjava/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14447d9674516f64525e963cf08134db330dc304/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14447d9674516f64525e963cf08134db330dc304/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=14447d9674516f64525e963cf08134db330dc304", "patch": "@@ -1,3 +1,19 @@\n+2000-02-03  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* java/util/Calendar.java (toString): New method.\n+\t* java/util/SimpleTimeZone.java (clone): New method.\n+\t(toString): New method.\n+\t* java/util/TimeZone.java (clone): New method.\n+\t* java/text/SimpleDateFormat.java (clone): New method.\n+\t* java/text/NumberFormat.java (clone): New method.\n+\t(equals): New method.\n+\t* java/text/Format.java (clone): New method.\n+\t* java/text/DateFormatSymbols.java (DateFormatSymbols): New\n+\tconstructor.\n+\t(clone): New method.\n+\t* java/text/DateFormat.java (clone): New method.\n+\t* java/text/Collator.java (clone): New method.\n+\n 2000-02-03  Tom Tromey  <tromey@cygnus.com>\n \n \t* java/io/PipedOutputStream.java (write(byte[], int, int)): New"}, {"sha": "5453372c5bccfb7394aaf8cfb9d914af2903f5e4", "filename": "libjava/java/text/Collator.java", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14447d9674516f64525e963cf08134db330dc304/libjava%2Fjava%2Ftext%2FCollator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14447d9674516f64525e963cf08134db330dc304/libjava%2Fjava%2Ftext%2FCollator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FCollator.java?ref=14447d9674516f64525e963cf08134db330dc304", "patch": "@@ -1,6 +1,6 @@\n // Collator.java - Locale-sensitive string comparison.\n \n-/* Copyright (C) 1999  Red Hat, Inc.\n+/* Copyright (C) 1999, 2000  Red Hat, Inc.\n \n    This file is part of libgcj.\n \n@@ -56,6 +56,11 @@ public boolean equals (String source, String target)\n     return compare (source, target) == 0;\n   }\n \n+  public Object clone ()\n+  {\n+    return super.clone ();\n+  }\n+\n   public static synchronized Locale[] getAvailableLocales ()\n   {\n     // FIXME."}, {"sha": "fe20b049302dc937dc25958762ed6e8c2d6f574a", "filename": "libjava/java/text/DateFormat.java", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14447d9674516f64525e963cf08134db330dc304/libjava%2Fjava%2Ftext%2FDateFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14447d9674516f64525e963cf08134db330dc304/libjava%2Fjava%2Ftext%2FDateFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FDateFormat.java?ref=14447d9674516f64525e963cf08134db330dc304", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1998, 1999  Red Hat, Inc.\n+/* Copyright (C) 1998, 1999, 2000  Red Hat, Inc.\n \n    This file is part of libgcj.\n \n@@ -62,6 +62,12 @@ public boolean equals (Object obj)\n     return calendar.equals(d.calendar) && numberFormat.equals(d.numberFormat);\n   }\n \n+  public Object clone ()\n+  {\n+    // We know the superclass just call's Object's generic cloner.\n+    return super.clone ();\n+  }\n+\n   public final StringBuffer format (Object obj,\n \t\t\t\t    StringBuffer buf, FieldPosition pos)\n   {"}, {"sha": "99a053e507d5d4843be75e7c09284303a5a6179d", "filename": "libjava/java/text/DateFormatSymbols.java", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14447d9674516f64525e963cf08134db330dc304/libjava%2Fjava%2Ftext%2FDateFormatSymbols.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14447d9674516f64525e963cf08134db330dc304/libjava%2Fjava%2Ftext%2FDateFormatSymbols.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FDateFormatSymbols.java?ref=14447d9674516f64525e963cf08134db330dc304", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1998, 1999  Red Hat, Inc.\n+/* Copyright (C) 1998, 1999, 2000  Red Hat, Inc.\n \n    This file is part of libgcj.\n \n@@ -121,6 +121,19 @@ public DateFormatSymbols ()\n     this (Locale.getDefault());\n   }\n \n+  // Copy constructor.\n+  private DateFormatSymbols (DateFormatSymbols old)\n+  {\n+    ampms = old.ampms;\n+    eras = old.eras;\n+    localPatternChars = old.localPatternChars;\n+    months = old.months;\n+    shortMonths = old.shortMonths;\n+    shortWeekdays = old.shortWeekdays;\n+    weekdays = old.weekdays;\n+    zoneStrings = old.zoneStrings;\n+  }\n+\n   public String[] getAmPmStrings()\n   {\n     return ampms;\n@@ -251,6 +264,11 @@ && equals(weekdays, other.weekdays)\n \t    && equals(zoneStrings, other.zoneStrings));\n   }\n \n+  public Object clone ()\n+  {\n+    return new DateFormatSymbols (this);\n+  }\n+\n   public int hashCode ()\n   {\n     return (hashCode(ampms)"}, {"sha": "fda14bc755c05582064777182a0fbb955a2c34e4", "filename": "libjava/java/text/Format.java", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14447d9674516f64525e963cf08134db330dc304/libjava%2Fjava%2Ftext%2FFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14447d9674516f64525e963cf08134db330dc304/libjava%2Fjava%2Ftext%2FFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FFormat.java?ref=14447d9674516f64525e963cf08134db330dc304", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1998, 1999  Red Hat, Inc.\n+/* Copyright (C) 1998, 1999, 2000  Red Hat, Inc.\n \n    This file is part of libgcj.\n \n@@ -48,4 +48,9 @@ public Object parseObject (String source) throws ParseException\n       }\n     return result;\n   }\n+\n+  public Object clone ()\n+  {\n+    return super.clone ();\n+  }\n }"}, {"sha": "bc96cbc9452b939ec25b09888a9a2ce2abeec0b4", "filename": "libjava/java/text/NumberFormat.java", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14447d9674516f64525e963cf08134db330dc304/libjava%2Fjava%2Ftext%2FNumberFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14447d9674516f64525e963cf08134db330dc304/libjava%2Fjava%2Ftext%2FNumberFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FNumberFormat.java?ref=14447d9674516f64525e963cf08134db330dc304", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1998, 1999  Red Hat, Inc.\n+/* Copyright (C) 1998, 1999, 2000  Red Hat, Inc.\n \n    This file is part of libgcj.\n \n@@ -50,6 +50,27 @@ public abstract StringBuffer format (double number,\n   public abstract StringBuffer format (long number,\n \t\t\t\t       StringBuffer sbuf, FieldPosition pos);\n \n+  public Object clone ()\n+  {\n+    // We know the superclass just uses Object's generic cloner.\n+    // Why not just inherit?  Because the online docs specify that\n+    // this method exists for this class.\n+    return super.clone ();\n+  }\n+\n+  public boolean equals (Object obj)\n+  {\n+    if (! (obj instanceof NumberFormat))\n+      return false;\n+    NumberFormat nf = (NumberFormat) obj;\n+    return (groupingUsed == nf.groupingUsed\n+\t    && maximumFractionDigits == nf.maximumFractionDigits\n+\t    && maximumIntegerDigits == nf.maximumIntegerDigits\n+\t    && minimumFractionDigits == nf.minimumFractionDigits\n+\t    && minimumIntegerDigits == nf.minimumIntegerDigits\n+\t    && parseIntegerOnly == nf.parseIntegerOnly);\n+  }\n+\n   public static Locale[] getAvailableLocales ()\n     {\n       // FIXME."}, {"sha": "f9bee8eb906ff23fdcccd528bfbd669d0d4dd1e3", "filename": "libjava/java/text/SimpleDateFormat.java", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14447d9674516f64525e963cf08134db330dc304/libjava%2Fjava%2Ftext%2FSimpleDateFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14447d9674516f64525e963cf08134db330dc304/libjava%2Fjava%2Ftext%2FSimpleDateFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FSimpleDateFormat.java?ref=14447d9674516f64525e963cf08134db330dc304", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1998, 1999  Red Hat, Inc.\n+/* Copyright (C) 1998, 1999, 2000  Red Hat, Inc.\n \n    This file is part of libgcj.\n \n@@ -512,6 +512,12 @@ public boolean equals (Object obj)\n \t\t\t\t\tother.defaultCenturyStart));\n   }\n \n+  public Object clone ()\n+  {\n+    // We know the superclass just call's Object's generic cloner.\n+    return super.clone ();\n+  }\n+\n   public int hashCode ()\n   {\n     int hash = super.hashCode();"}, {"sha": "34921d0e0624768e1cebcfdab0d0a15493331417", "filename": "libjava/java/util/Calendar.java", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14447d9674516f64525e963cf08134db330dc304/libjava%2Fjava%2Futil%2FCalendar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14447d9674516f64525e963cf08134db330dc304/libjava%2Fjava%2Futil%2FCalendar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FCalendar.java?ref=14447d9674516f64525e963cf08134db330dc304", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1998, 1999  Red Hat, Inc.\n+/* Copyright (C) 1998, 1999, 2000  Red Hat, Inc.\n \n    This file is part of libgcj.\n \n@@ -108,6 +108,21 @@ public Object clone ()\n       }\n   }\n \n+  public String toString ()\n+  {\n+    // We have much latitude in how we implement this.\n+    return (\"areFieldsSet \" + areFieldsSet\n+\t    + \"; fields \" + fields\n+\t    + \"; firstDayOfWeek \" + firstDayOfWeek\n+\t    + \"; isSet \" + isSet\n+\t    + \"; isTimeSet \" + isTimeSet\n+\t    + \"; lenient \" + lenient\n+\t    + \"; minimalDaysInFirstWeek \" + minimalDaysInFirstWeek\n+\t    + \"; nextStamp \" + nextStamp\n+\t    + \"; time \" + time\n+\t    + \"; zone \" + zone);\n+  }\n+\n   public static Calendar getInstance ()\n   {\n     return new GregorianCalendar ();"}, {"sha": "84d43d67f64e0ee1db6e5273cf2ac43c5aa1e7c5", "filename": "libjava/java/util/SimpleTimeZone.java", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14447d9674516f64525e963cf08134db330dc304/libjava%2Fjava%2Futil%2FSimpleTimeZone.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14447d9674516f64525e963cf08134db330dc304/libjava%2Fjava%2Futil%2FSimpleTimeZone.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FSimpleTimeZone.java?ref=14447d9674516f64525e963cf08134db330dc304", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1998, 1999  Red Hat, Inc.\n+/* Copyright (C) 1998, 1999, 2000  Red Hat, Inc.\n \n    This file is part of libgcj.\n \n@@ -169,6 +169,32 @@ public boolean equals (Object obj)\n     return getID() == other.getID() && hasSameRules(other);\n   }\n \n+  public Object clone ()\n+  {\n+    // We know the superclass just call's Object's generic cloner.\n+    return super.clone ();\n+  }\n+\n+  public String toString ()\n+  {\n+    // The docs don't say much about how we might implement this.\n+    // We choose a debugging implementation.\n+    return (\"dstSavings \" + dstSavings\n+\t    + \"; rawOffset \" + rawOffset\n+\t    + \"; startDay \" + startDay\n+\t    + \"; startDayOfWeek \" + startDayOfWeek\n+\t    + \"; startMode \" + startMode\n+\t    + \"; startMonth \" + startMonth\n+\t    + \"; startTime \" + startTime\n+\t    + \"; startYear \" + startYear\n+\t    + \"; endDay \" + endDay\n+\t    + \"; endDayOfWeek \" + endDayOfWeek\n+\t    + \"; endMode \" + endMode\n+\t    + \"; endMonth \" + endMonth\n+\t    + \"; endTime \" + endTime\n+\t    + \"; useDaylight \" + useDaylight);\n+  }\n+\n   public int hashCode ()\n   {\n     // FIXME - this does not folow any spec (since none is public)!"}, {"sha": "16772adcdf32f8ea30edc8731b3ae41788fda899", "filename": "libjava/java/util/TimeZone.java", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14447d9674516f64525e963cf08134db330dc304/libjava%2Fjava%2Futil%2FTimeZone.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14447d9674516f64525e963cf08134db330dc304/libjava%2Fjava%2Futil%2FTimeZone.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FTimeZone.java?ref=14447d9674516f64525e963cf08134db330dc304", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1998, 1999  Red Hat, Inc.\n+/* Copyright (C) 1998, 1999, 2000  Red Hat, Inc.\n \n    This file is part of libgcj.\n \n@@ -152,7 +152,11 @@ public boolean hasSameRules (TimeZone other)\n     return this == other;\n   }\n \n-  // public Object clone ();\n+  public Object clone ()\n+  {\n+    // Just use Object's generic cloner.\n+    return super.clone ();\n+  }\n \n   // Names of timezones.  This array is kept in parallel with\n   // rawOffsets.  This list comes from the JCL 1.1 book."}]}