{"sha": "ee5361a16ddf478113dc5084d08b8c9ba9e4735e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU1MzYxYTE2ZGRmNDc4MTEzZGM1MDg0ZDA4YjhjOWJhOWU0NzM1ZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-05-06T09:17:58Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-05-06T12:52:02Z"}, "message": "refactor SSA rewriting timevars\n\nThis avoids too deep stacks of timevars during incremental\nSSA rewrite and basically use TV_TREE_INTO_SSA for all into-SSA\nrewrite work and TV_TREE_SSA_INCREMENTAL for update_ssa.\n\n2021-05-06  Richard Biener  <rguenther@suse.de>\n\n\t* timevar.def (TV_TREE_INSERT_PHI_NODES): Remove.\n\t(TV_TREE_SSA_REWRITE_BLOCKS): Likewise.\n\t(TV_TREE_INTO_SSA): New.\n\t* tree-into-ssa.c (insert_phi_nodes): Do not account separately.\n\t(rewrite_blocks): Likewise.\n\t(pass_data_build_ssa): Account to TV_TREE_INTO_SSA.", "tree": {"sha": "276d1bb432ce7ebfd5cbb4be9406b0207eb3a581", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/276d1bb432ce7ebfd5cbb4be9406b0207eb3a581"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee5361a16ddf478113dc5084d08b8c9ba9e4735e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee5361a16ddf478113dc5084d08b8c9ba9e4735e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee5361a16ddf478113dc5084d08b8c9ba9e4735e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee5361a16ddf478113dc5084d08b8c9ba9e4735e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e79e63026e43ad0577812ffb405dac8fa88af5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e79e63026e43ad0577812ffb405dac8fa88af5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e79e63026e43ad0577812ffb405dac8fa88af5b"}], "stats": {"total": 14, "additions": 2, "deletions": 12}, "files": [{"sha": "16d1657436c53d3c28b732e971a498c77ff419ad", "filename": "gcc/timevar.def", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee5361a16ddf478113dc5084d08b8c9ba9e4735e/gcc%2Ftimevar.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee5361a16ddf478113dc5084d08b8c9ba9e4735e/gcc%2Ftimevar.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftimevar.def?ref=ee5361a16ddf478113dc5084d08b8c9ba9e4735e", "patch": "@@ -162,9 +162,8 @@ DEFTIMEVAR (TV_TREE_EARLY_VRP        , \"tree Early VRP\")\n DEFTIMEVAR (TV_TREE_COPY_PROP        , \"tree copy propagation\")\n DEFTIMEVAR (TV_FIND_REFERENCED_VARS  , \"tree find ref. vars\")\n DEFTIMEVAR (TV_TREE_PTA\t\t     , \"tree PTA\")\n-DEFTIMEVAR (TV_TREE_INSERT_PHI_NODES , \"tree PHI insertion\")\n-DEFTIMEVAR (TV_TREE_SSA_REWRITE_BLOCKS, \"tree SSA rewrite\")\n DEFTIMEVAR (TV_TREE_SSA_OTHER\t     , \"tree SSA other\")\n+DEFTIMEVAR (TV_TREE_INTO_SSA\t     , \"tree SSA rewrite\")\n DEFTIMEVAR (TV_TREE_SSA_INCREMENTAL  , \"tree SSA incremental\")\n DEFTIMEVAR (TV_TREE_OPS\t             , \"tree operand scan\")\n DEFTIMEVAR (TV_TREE_SSA_DOMINATOR_OPTS   , \"dominator optimization\")"}, {"sha": "85adb1ad8c7e71f1fcbef3ed6d42fbd487a82ac6", "filename": "gcc/tree-into-ssa.c", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee5361a16ddf478113dc5084d08b8c9ba9e4735e/gcc%2Ftree-into-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee5361a16ddf478113dc5084d08b8c9ba9e4735e/gcc%2Ftree-into-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-into-ssa.c?ref=ee5361a16ddf478113dc5084d08b8c9ba9e4735e", "patch": "@@ -1071,8 +1071,6 @@ insert_phi_nodes (bitmap_head *dfs)\n   unsigned i;\n   var_info *info;\n \n-  timevar_push (TV_TREE_INSERT_PHI_NODES);\n-\n   /* When the gimplifier introduces SSA names it cannot easily avoid\n      situations where abnormal edges added by CFG construction break\n      the use-def dominance requirement.  For this case rewrite SSA\n@@ -1141,8 +1139,6 @@ insert_phi_nodes (bitmap_head *dfs)\n       insert_phi_nodes_for (info->var, idf, false);\n       BITMAP_FREE (idf);\n     }\n-\n-  timevar_pop (TV_TREE_INSERT_PHI_NODES);\n }\n \n \n@@ -2282,9 +2278,6 @@ rewrite_update_dom_walker::after_dom_children (basic_block bb ATTRIBUTE_UNUSED)\n static void\n rewrite_blocks (basic_block entry, enum rewrite_mode what)\n {\n-  /* Rewrite all the basic blocks in the program.  */\n-  timevar_push (TV_TREE_SSA_REWRITE_BLOCKS);\n-\n   block_defs_stack.create (10);\n \n   /* Recursively walk the dominator tree rewriting each statement in\n@@ -2305,8 +2298,6 @@ rewrite_blocks (basic_block entry, enum rewrite_mode what)\n     }\n \n   block_defs_stack.release ();\n-\n-  timevar_pop (TV_TREE_SSA_REWRITE_BLOCKS);\n }\n \n class mark_def_dom_walker : public dom_walker\n@@ -2402,7 +2393,7 @@ const pass_data pass_data_build_ssa =\n   GIMPLE_PASS, /* type */\n   \"ssa\", /* name */\n   OPTGROUP_NONE, /* optinfo_flags */\n-  TV_TREE_SSA_OTHER, /* tv_id */\n+  TV_TREE_INTO_SSA, /* tv_id */\n   PROP_cfg, /* properties_required */\n   PROP_ssa, /* properties_provided */\n   0, /* properties_destroyed */"}]}