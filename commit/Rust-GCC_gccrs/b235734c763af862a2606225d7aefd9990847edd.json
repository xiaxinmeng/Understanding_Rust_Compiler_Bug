{"sha": "b235734c763af862a2606225d7aefd9990847edd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjIzNTczNGM3NjNhZjg2MmEyNjA2MjI1ZDdhZWZkOTk5MDg0N2VkZA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2007-09-22T13:04:20Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2007-09-22T13:04:20Z"}, "message": "utils2.c (build_unary_op): Propagate the TYPE_REF_CAN_ALIAS_ALL flag to the result.\n\n\t* utils2.c (build_unary_op) <ADDR_EXPR> [INDIRECT_REF]: Propagate\n\tthe TYPE_REF_CAN_ALIAS_ALL flag to the result.\n\nFrom-SVN: r128669", "tree": {"sha": "cdaa6a05a038be356ee679bf041bd00b883cd7fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cdaa6a05a038be356ee679bf041bd00b883cd7fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b235734c763af862a2606225d7aefd9990847edd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b235734c763af862a2606225d7aefd9990847edd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b235734c763af862a2606225d7aefd9990847edd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b235734c763af862a2606225d7aefd9990847edd/comments", "author": null, "committer": null, "parents": [{"sha": "e1210bd06b7a46f5878e822ee93c06e073aaff33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1210bd06b7a46f5878e822ee93c06e073aaff33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1210bd06b7a46f5878e822ee93c06e073aaff33"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "7913e4a37be43cc3a1561ff68d440b079c96cac2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b235734c763af862a2606225d7aefd9990847edd/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b235734c763af862a2606225d7aefd9990847edd/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b235734c763af862a2606225d7aefd9990847edd", "patch": "@@ -1,3 +1,8 @@\n+2007-09-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* utils2.c (build_unary_op) <ADDR_EXPR> [INDIRECT_REF]: Propagate\n+\tthe TYPE_REF_CAN_ALIAS_ALL flag to the result.\n+\n 2007-09-21  Olivier Hainque  <hainque@adacore.com>\n \n \t* utils.c (type_for_nonaliased_component_p): Return false for"}, {"sha": "350358f719ba449f4d49e77689d874660367209f", "filename": "gcc/ada/utils2.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b235734c763af862a2606225d7aefd9990847edd/gcc%2Fada%2Futils2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b235734c763af862a2606225d7aefd9990847edd/gcc%2Fada%2Futils2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Futils2.c?ref=b235734c763af862a2606225d7aefd9990847edd", "patch": "@@ -1078,6 +1078,25 @@ build_unary_op (enum tree_code op_code, tree result_type, tree operand)\n \t     GCC wants pointer types for function addresses.  */\n \t  if (!result_type)\n \t    result_type = build_pointer_type (type);\n+\n+\t  /* If the underlying object can alias everything, propagate the\n+\t     property since we are effectively retrieving the object.  */\n+\t  if (POINTER_TYPE_P (TREE_TYPE (result))\n+\t      && TYPE_REF_CAN_ALIAS_ALL (TREE_TYPE (result)))\n+\t    {\n+\t      if (TREE_CODE (result_type) == POINTER_TYPE\n+\t\t  && !TYPE_REF_CAN_ALIAS_ALL (result_type))\n+\t\tresult_type\n+\t\t  = build_pointer_type_for_mode (TREE_TYPE (result_type),\n+\t\t\t\t\t\t TYPE_MODE (result_type),\n+\t\t\t\t\t\t true);\n+\t      else if (TREE_CODE (result_type) == REFERENCE_TYPE\n+\t\t       && !TYPE_REF_CAN_ALIAS_ALL (result_type))\n+\t        result_type\n+\t\t  = build_reference_type_for_mode (TREE_TYPE (result_type),\n+\t\t\t\t\t\t   TYPE_MODE (result_type),\n+\t\t\t\t\t\t   true);\n+\t    }\n \t  break;\n \n \tcase NULL_EXPR:"}]}