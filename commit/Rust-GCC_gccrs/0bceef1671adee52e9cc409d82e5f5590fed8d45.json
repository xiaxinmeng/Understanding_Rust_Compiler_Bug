{"sha": "0bceef1671adee52e9cc409d82e5f5590fed8d45", "node_id": "C_kwDOANBUbNoAKDBiY2VlZjE2NzFhZGVlNTJlOWNjNDA5ZDgyZTVmNTU5MGZlZDhkNDU", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-12-11T00:16:30Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-12-11T00:16:30Z"}, "message": "Daily bump.", "tree": {"sha": "874cc29dcc53b5fc71e8b7bace76b8b178feb28a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/874cc29dcc53b5fc71e8b7bace76b8b178feb28a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0bceef1671adee52e9cc409d82e5f5590fed8d45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bceef1671adee52e9cc409d82e5f5590fed8d45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bceef1671adee52e9cc409d82e5f5590fed8d45", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bceef1671adee52e9cc409d82e5f5590fed8d45/comments", "author": null, "committer": null, "parents": [{"sha": "b504917e43b9a559c9ac779e08784ad412125f2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b504917e43b9a559c9ac779e08784ad412125f2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b504917e43b9a559c9ac779e08784ad412125f2e"}], "stats": {"total": 227, "additions": 226, "deletions": 1}, "files": [{"sha": "5538483f7a9f071dd7d8df40d84440e3972d9ab4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bceef1671adee52e9cc409d82e5f5590fed8d45/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bceef1671adee52e9cc409d82e5f5590fed8d45/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0bceef1671adee52e9cc409d82e5f5590fed8d45", "patch": "@@ -1,3 +1,42 @@\n+2021-12-10  Jason Merrill  <jason@redhat.com>\n+\n+\t* symtab.c (symtab_node::equal_address_to): Fix comment typo.\n+\n+2021-12-10  Doug Rupp  <rupp@adacore.com>\n+\n+\t* config/vxworks.h (LINK_SPEC): Remove %(link_target).\n+\tChange %{v:-v} to %{v:-V}.\n+\n+2021-12-10  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* config/t-vxworks: Remove assignment to STMP_FIXINC.\n+\n+2021-12-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* params.opt: Add missing dot.\n+\n+2021-12-10  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\tPR ipa/103601\n+\t* ipa-modref-tree.h (useful_for_kill_p): Zero width accesses aren't\n+\tuseful for kill tracking.\n+\n+2021-12-10  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\t* config/gcn/mkoffload.c (process_asm): Process the variable table\n+\tcompletely differently.\n+\t(process_obj): Encode the varaible data differently.\n+\n+2021-12-10  Joel Hutton  <joel.hutton@arm.com>\n+\n+\tPR tree-optimization/103523\n+\t* tree-vect-loop.c (vectorizable_induction): Check for\n+\tPLUS_EXPR/MINUS_EXPR support.\n+\n+2021-12-10  Cui,Lili  <lili.cui@intel.com>\n+\n+\t* config/i386/i386.c (ix86_vector_costs::add_stmt_cost): Remove Tremont.\n+\n 2021-12-09  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* doc/invoke.texi (max-inline-functions-called-once-loop-depth,"}, {"sha": "bed72424417777a9214883648c66d2a2b34eccf8", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bceef1671adee52e9cc409d82e5f5590fed8d45/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bceef1671adee52e9cc409d82e5f5590fed8d45/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=0bceef1671adee52e9cc409d82e5f5590fed8d45", "patch": "@@ -1 +1 @@\n-20211210\n+20211211"}, {"sha": "91b3d7cf79690ac42dc892691c819b859ca8272c", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bceef1671adee52e9cc409d82e5f5590fed8d45/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bceef1671adee52e9cc409d82e5f5590fed8d45/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=0bceef1671adee52e9cc409d82e5f5590fed8d45", "patch": "@@ -1,3 +1,38 @@\n+2021-12-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/103529\n+\t* dmd/MERGE: Merge upstream dmd 3982604c5.\n+\t* Make-lang.in (D_FRONTEND_OBJS): Add d/root-optional.o.\n+\t* d-attribs.cc (build_attributes): Update for new front-end interface.\n+\t* d-codegen.cc (d_build_call): Likewise.\n+\t* d-compiler.cc (Compiler::paintAsType): Likewise.\n+\t* d-lang.cc (d_handle_option): Remove OPT_fpreview_intpromote, add\n+\thandling of OPT_frevert_intpromote.\n+\t* d-port.cc (Port::valcpy): Assert buffer is aligned.\n+\t* d-target.cc (Target::isVectorOpSupported): Update for new front-end\n+\tinterface.\n+\t* decl.cc (layout_class_initializer): Likewise.\n+\t* expr.cc (lvalue_p): Likewise.\n+\t(binop_assignment): Likewise.\n+\t(ExprVisitor::visit): Likewise.\n+\t(ExprVisitor::visit (AssignExp *)): Remove generation of _d_arrayctor\n+\tand _d_arraysetctor library helpers.\n+\t(ExprVisitor::visit (VarExp *)): Support __traits(initSymbol).\n+\t* intrinsics.cc (expand_intrinsic_rotate): Update for new front-end\n+\tinterface.\n+\t* lang.opt (fpreview=intpromote): Remove.\n+\t(frevert=intpromote): New.\n+\t* runtime.def (ARRAYCTOR): Remove.\n+\t(ARRAYSETCTOR): Remove.\n+\t* toir.cc (IRVisitor::visit): Update for new front-end interface.\n+\t* types.cc (layout_aggregate_members): Likewise.\n+\t* dmd/root/optional.d: New file.\n+\t* dmd/root/optional.h: New file.\n+\n+2021-12-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* decl.cc (get_symbol_decl): Align methods to MINIMUM_METHOD_BOUNDARY.\n+\n 2021-12-09  Martin Liska  <mliska@suse.cz>\n \n \t* expr.cc: Call memcpy only when length != 0."}, {"sha": "c917a4f7a1ae9f2915ab6f48c5456b652b365bfe", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bceef1671adee52e9cc409d82e5f5590fed8d45/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bceef1671adee52e9cc409d82e5f5590fed8d45/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=0bceef1671adee52e9cc409d82e5f5590fed8d45", "patch": "@@ -1,3 +1,12 @@\n+2021-12-10  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/103418\n+\t* check.c (variable_check): Replace previous check of procedure\n+\tdummy arguments with INTENT(IN) attribute when passed to intrinsic\n+\tprocedures by gfc_check_vardef_context.\n+\t* expr.c (gfc_check_vardef_context): Correct check of INTENT(IN)\n+\tdummy arguments for the case of sub-components of a CLASS pointer.\n+\n 2021-12-08  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/103609"}, {"sha": "bdbcb18eb83760d56d8e4de2eb340147cb5c3175", "filename": "gcc/jit/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bceef1671adee52e9cc409d82e5f5590fed8d45/gcc%2Fjit%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bceef1671adee52e9cc409d82e5f5590fed8d45/gcc%2Fjit%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2FChangeLog?ref=0bceef1671adee52e9cc409d82e5f5590fed8d45", "patch": "@@ -1,3 +1,9 @@\n+2021-12-10  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR jit/103562\n+\t* jit-playback.c (gcc::jit::playback::context::new_function): Set\n+\tDECL_CONTEXT of the result_decl.\n+\n 2021-11-27  Petter Tomner  <tomner@kth.se>\n \n \t* libgccjit.c: %ld -> %zu"}, {"sha": "68db99476606dd7880cbacc0410185cd98310ce1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bceef1671adee52e9cc409d82e5f5590fed8d45/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bceef1671adee52e9cc409d82e5f5590fed8d45/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0bceef1671adee52e9cc409d82e5f5590fed8d45", "patch": "@@ -1,3 +1,28 @@\n+2021-12-10  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR jit/103562\n+\t* jit.dg/all-non-failing-tests.h: Add comment about...\n+\t* jit.dg/test-pr103562.c: New test.\n+\n+2021-12-10  Marek Polacek  <polacek@redhat.com>\n+\n+\t* g++.dg/cpp23/auto-fncast10.C: New test.\n+\n+2021-12-10  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/103418\n+\t* gfortran.dg/move_alloc_8.f90: Adjust error messages.\n+\t* gfortran.dg/pointer_intent_9.f90: New test.\n+\n+2021-12-10  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\tPR ipa/103601\n+\t* gcc.dg/ipa/pr103601.c: New test case.\n+\n+2021-12-10  Joel Hutton  <joel.hutton@arm.com>\n+\n+\t* gcc.target/aarch64/pr103523.c: New test.\n+\n 2021-12-09  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/103215"}, {"sha": "88f15e4fd2a330b50431a820c271a432f6f3a074", "filename": "include/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bceef1671adee52e9cc409d82e5f5590fed8d45/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bceef1671adee52e9cc409d82e5f5590fed8d45/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=0bceef1671adee52e9cc409d82e5f5590fed8d45", "patch": "@@ -1,3 +1,7 @@\n+2021-12-10  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\t* gomp-constants.h (GOMP_VERSION_GCN): Bump.\n+\n 2021-12-08  Chung-Lin Tang  <cltang@codesourcery.com>\n \n \tPR middle-end/92120"}, {"sha": "468629c383d03e462d916779fb7a010a2731d227", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bceef1671adee52e9cc409d82e5f5590fed8d45/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bceef1671adee52e9cc409d82e5f5590fed8d45/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=0bceef1671adee52e9cc409d82e5f5590fed8d45", "patch": "@@ -1,3 +1,14 @@\n+2021-12-10  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* config/t-darwin: Add libgcc_tm.h to the dependencies\n+\tfor darwin10-unwind-find-enc-func.\n+\n+2021-12-10  Rasmus Villemoes  <rv@rasmusvillemoes.dk>\n+\n+\t* config/rs6000/t-vxworks: New file.\n+\t* config.host (powerpc*-*-vxworks*): Use it instead of\n+\tt-ppccomm.\n+\n 2021-12-09  Fred Konrad  <konrad@adacore.com>\n \n \t* config.host (powerpc*-wrs-vxworks7*): Fix path to"}, {"sha": "36ee660b4bd4d065b8f06f3ab321fcfc1f790cf5", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bceef1671adee52e9cc409d82e5f5590fed8d45/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bceef1671adee52e9cc409d82e5f5590fed8d45/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=0bceef1671adee52e9cc409d82e5f5590fed8d45", "patch": "@@ -1,3 +1,9 @@\n+2021-12-10  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\t* plugin/plugin-gcn.c (struct gcn_image_desc): Remove global_variables.\n+\t(GOMP_OFFLOAD_load_image): Locate the offload variables via the\n+\ttable, not individual symbols.\n+\n 2021-12-09  Chung-Lin Tang  <cltang@codesourcery.com>\n \n \t* testsuite/libgomp.c++/target-lambda-1.C: Only run under"}, {"sha": "ca647c5fedd1b78e628cf37e75b1f73a955f18fd", "filename": "libphobos/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bceef1671adee52e9cc409d82e5f5590fed8d45/libphobos%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bceef1671adee52e9cc409d82e5f5590fed8d45/libphobos%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FChangeLog?ref=0bceef1671adee52e9cc409d82e5f5590fed8d45", "patch": "@@ -1,3 +1,15 @@\n+2021-12-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/103528\n+\t* libdruntime/MERGE: Merge upstream druntime bc58b1e9.\n+\t* libdruntime/Makefile.am (DRUNTIME_DSOURCES_LINUX): Remove\n+\tcore/sys/linux/syscalls.d.\n+\t* libdruntime/Makefile.in: Regenerate.\n+\t* src/MERGE: Merge upstream phobos 12329adb6.\n+\t* testsuite/libphobos.config/config.exp: Add test22523.\n+\t* libdruntime/core/sys/linux/syscalls.d: Removed.\n+\t* testsuite/libphobos.config/test22523.d: New test.\n+\n 2021-12-08  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \tPR d/103558"}, {"sha": "ae5752d2c0120b6a4ba5126957f7fbbc0b179e3d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bceef1671adee52e9cc409d82e5f5590fed8d45/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bceef1671adee52e9cc409d82e5f5590fed8d45/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0bceef1671adee52e9cc409d82e5f5590fed8d45", "patch": "@@ -1,3 +1,81 @@\n+2021-12-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libstdc++/71367\n+\t* config/locale/dragonfly/time_members.cc (_M_initialize_timepunct):\n+\tInitialize \"C\" _M_am_pm_format to %I:%M:%S %p rather than empty\n+\tstring.\n+\t* config/locale/gnu/time_members.cc (_M_initialize_timepunct):\n+\tLikewise.\n+\t* config/locale/generic/time_members.cc (_M_initialize_timepunct):\n+\tLikewise.\n+\t* include/bits/locale_facets_nonio.h (_M_am_pm_format): New method.\n+\t* include/bits/locale_facets_nonio.tcc (_M_extract_via_format): Handle\n+\t%r.\n+\t* config/abi/pre/gnu.ver (GLIBCXX_3.4.30): Export _M_am_pm_format\n+\twith const _CharT** argument, ensure it isn't exported in GLIBCXX_3.4.\n+\t* testsuite/22_locale/time_get/get/char/71367.cc: New test.\n+\t* testsuite/22_locale/time_get/get/wchar_t/71367.cc: New test.\n+\n+2021-12-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libstdc++/78714\n+\t* include/bits/locale_facets_nonio.tcc (_M_extract_via_format):\n+\tMention in function comment it interprets strptime format string\n+\trather than strftime.  Handle %a and %A the same by accepting both\n+\tfull and abbreviated names.  Similarly handle %h, %b and %B the same.\n+\tHandle %d and %e the same by accepting possibly optional single space\n+\tand 1 or 2 digits.  For %I store tm_hour 0 instead of tm_hour 12.  For\n+\t%t and %n skip any whitespace.  Handle %p and %%.  For whitespace in\n+\tthe string skip any whitespace.\n+\t(_M_extract_num): For __len == 2 accept 1 or 2 digits rather than\n+\talways 2.  Don't punt early if __value * __mult is larget than __max\n+\tor smaller than __min - __mult, instead punt if __value > __max.\n+\tAt the end verify __value is in between __min and __max and punt\n+\totherwise.\n+\t(_M_extract_name): Allow non-unique names or names which are prefixes\n+\tof other names.  Don't recompute lengths of names for every character.\n+\t* testsuite/22_locale/time_get/get/char/3.cc: New test.\n+\t* testsuite/22_locale/time_get/get/wchar_t/3.cc: New test.\n+\t* testsuite/22_locale/time_get/get_date/char/12791.cc (test01): Use\n+\t62 instead 60 and expect 6 to be accepted and thus *ret01 == '2'.\n+\t* testsuite/22_locale/time_get/get_date/wchar_t/12791.cc (test01):\n+\tSimilarly.\n+\t* testsuite/22_locale/time_get/get_time/char/2.cc (test02): Add \" PM\"\n+\tto the string.\n+\t* testsuite/22_locale/time_get/get_time/char/5.cc (test01): Expect\n+\ttm_hour 1 rather than 0.\n+\t* testsuite/22_locale/time_get/get_time/wchar_t/2.cc (test02): Add\n+\t\" PM\" to the string.\n+\t* testsuite/22_locale/time_get/get_time/wchar_t/5.cc (test01): Expect\n+\ttm_hour 1 rather than 0.\n+\n+2021-12-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/103638\n+\t* include/bits/atomic_timed_wait.h: Check _GLIBCXX_HAS_GTHREADS\n+\tbefore using std::mutex and std::__condvar.\n+\n+2021-12-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* acinclude.m4 (GLIBCXX_ENABLE_LIBSTDCXX_TIME): Add _GLIBCXX_\n+\tprefix to NO_SLEEP macro.\n+\t* config.h.in: Regenerate.\n+\t* configure: Regenerate.\n+\n+2021-12-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/char_traits.h: Change pragma push to pop.\n+\n+2021-12-10  Thomas Rodgers  <rodgert@twrodgers.com>\n+\n+\tPR libstdc++/102994\n+\t* include/bits/atomic_base.h (__atomic_base<_PTp*>::wait()):\n+\tAdd const qualifier.\n+\t* include/std/atomic (atomic<_Tp*>::wait(), atomic_wait()):\n+\tLikewise.\n+\t* testsuite/29_atomics/atomic/wait_notify/102994.cc:\n+\tNew test.\n+\n 2021-12-09  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/bits/stl_iterator.h (operator==, operator<=>): Define"}]}