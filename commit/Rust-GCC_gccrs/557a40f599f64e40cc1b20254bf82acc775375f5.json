{"sha": "557a40f599f64e40cc1b20254bf82acc775375f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTU3YTQwZjU5OWY2NGU0MGNjMWIyMDI1NGJmODJhY2M3NzUzNzVmNQ==", "commit": {"author": {"name": "guojiufu", "email": "guojiufu@linux.ibm.com", "date": "2020-05-28T06:10:39Z"}, "committer": {"name": "guojiufu", "email": "guojiufu@linux.ibm.com", "date": "2020-06-07T09:35:01Z"}, "message": "rs6000: allow cunroll to grow size according to -funroll-loop or -fpeel-loops\n\nPreviously, flag_unroll_loops was turned on at -O2 implicitly.  This\nalso turned on cunroll with allowance size increasing, and cunroll\nwill unroll/peel the loop even the loop is complex like code in PR95018.\nWith this patch, size growth for cunroll is allowed only for if -funroll-loops\nor -fpeel-loops or -O3 is specified explicitly.\n\ngcc/ChangeLog\n2020-06-07  Jiufu Guo  <guojiufu@linux.ibm.com>\n\n\tPR target/95018\n\t* config/rs6000/rs6000.c (rs6000_option_override_internal):\n\tOverride flag_cunroll_grow_size.", "tree": {"sha": "a32cdb789ddf90ae978852b305e81673e7af5951", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a32cdb789ddf90ae978852b305e81673e7af5951"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/557a40f599f64e40cc1b20254bf82acc775375f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/557a40f599f64e40cc1b20254bf82acc775375f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/557a40f599f64e40cc1b20254bf82acc775375f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/557a40f599f64e40cc1b20254bf82acc775375f5/comments", "author": null, "committer": null, "parents": [{"sha": "71489d8e7572388c6e9528a45e4942b7c7b67e4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71489d8e7572388c6e9528a45e4942b7c7b67e4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71489d8e7572388c6e9528a45e4942b7c7b67e4f"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "ff09e9378ef4a3829738899481dc834a34df399d", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/557a40f599f64e40cc1b20254bf82acc775375f5/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/557a40f599f64e40cc1b20254bf82acc775375f5/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=557a40f599f64e40cc1b20254bf82acc775375f5", "patch": "@@ -4567,7 +4567,12 @@ rs6000_option_override_internal (bool global_init_p)\n \t    unroll_only_small_loops = 0;\n \t  if (!global_options_set.x_flag_rename_registers)\n \t    flag_rename_registers = 1;\n+\t  if (!global_options_set.x_flag_cunroll_grow_size)\n+\t    flag_cunroll_grow_size = 1;\n \t}\n+      else\n+\tif (!global_options_set.x_flag_cunroll_grow_size)\n+\t  flag_cunroll_grow_size = flag_peel_loops || optimize >= 3;\n \n       /* If using typedef char *va_list, signal that\n \t __builtin_va_start (&ap, 0) can be optimized to"}]}