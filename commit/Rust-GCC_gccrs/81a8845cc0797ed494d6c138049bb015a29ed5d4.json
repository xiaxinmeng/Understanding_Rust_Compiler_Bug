{"sha": "81a8845cc0797ed494d6c138049bb015a29ed5d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODFhODg0NWNjMDc5N2VkNDk0ZDZjMTM4MDQ5YmIwMTVhMjllZDVkNA==", "commit": {"author": {"name": "Jozef Lawrynowicz", "email": "jozef.l@mittosystems.com", "date": "2019-08-15T12:55:33Z"}, "committer": {"name": "Jozef Lawrynowicz", "email": "jozefl@gcc.gnu.org", "date": "2019-08-15T12:55:33Z"}, "message": "MSP430: Fix whitespace errors and incorrect indentation in config/msp430/*.{c,h} files\n\n2019-08-15  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n\n\tMSP430: Fix whitespace errors and incorrect indentation in\n\tconfig/msp430/*.{c,h} files\n\n\t* config/msp430/driver-msp430.c (msp430_select_cpu): Fix indentation.\n\t(msp430_select_hwmult_lib): Likewise.\n\t* config/msp430/msp430-devices.c (parse_devices_csv_1): Likewise.\n\t(msp430_extract_mcu_data): Likewise.\n\t(struct t_msp430_mcu_data): Likewise.\n\t* config/msp430/msp430.c (struct machine_function): Remove whitespace\n\tbefore left square bracket.\n\t(msp430_option_override): Fix indentation.\n\t(msp430_hard_regno_nregs_with_padding): Likewise.\n\t(msp430_initial_elimination_offset): Likewise.\n\t(msp430_special_register_convention_p): Remove whitespace before left\n\tsquare bracket and after exclamation mark.\n\t(msp430_evaluate_arg): Likewise.\n\t(msp430_callee_copies): Fix indentation.\n\t(msp430_gimplify_va_arg_expr): Likewise.\n\t(msp430_function_arg_advance): Remove whitespace before left square\n\tbracket.\n\t(reg_ok_for_addr): Likewise.\n\t(msp430_preserve_reg_p): Likewise.\n\t(msp430_compute_frame_info): Likewise.\n\t(msp430_asm_output_addr_const_extra): Add space between function name\n\tand open parenthesis.\n\t(has_section_name): Fix indentation.\n\t(msp430_attr): Remove trailing whitespace.\n\t(msp430_section_attr): Likewise.\n\t(msp430_data_attr): Likewise.\n\t(struct msp430_attribute_table): Fix comment and whitespace.\n\t(msp430_start_function): Remove whitespace before left square bracket.\n\tAdd space between function name and open parenthesis.\n\t(msp430_select_section): Remove trailing whitespace.\n\t(msp430_section_type_flags): Remove trailing whitespace.\n\t(msp430_unique_section): Remove space before closing parenthesis.\n\t(msp430_output_aligned_decl_common): Change 8 spaces to a tab.\n\t(msp430_builtins): Remove whitespace before left square bracket.\n\t(msp430_init_builtins):\tFix indentation.\n\t(msp430_expand_prologue): Remove whitespace before left square bracket.\n\tRemove space before closing parenthesis.\n\t(msp430_expand_epilogue): Remove whitespace before left square bracket.\n\t(msp430_split_movsi): Remove space before closing parenthesis.\n\t(helper_function_name_mappings): Fix indentation.\n\t(msp430_use_f5_series_hwmult): Fix whitespace.\n\t(use_32bit_hwmult): Likewise.\n\t(msp430_no_hwmult): Likewise.\n\t(msp430_output_labelref): Remove whitespace before left square bracket.\n\t(msp430_print_operand_raw): Likewise.\n\t(msp430_print_operand_addr): Likewise.\n\t(msp430_print_operand): Add two spaces after '.' in comment.\n\tFix trailing whitespace.\n\t(msp430x_extendhisi): Fix indentation.\n\t* config/msp430/msp430.h (TARGET_CPU_CPP_BUILTINS): Change 8 spaces to\n\ttab.\n\t(PC_REGNUM): Likewise.\n\t(STACK_POINTER_REGNUM): Likewise.\n\t(CC_REGNUM): Likewise.\n\nFrom-SVN: r274536", "tree": {"sha": "5b51c93fabe5c3a94135ae4a22be9e482c4b89c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b51c93fabe5c3a94135ae4a22be9e482c4b89c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81a8845cc0797ed494d6c138049bb015a29ed5d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81a8845cc0797ed494d6c138049bb015a29ed5d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81a8845cc0797ed494d6c138049bb015a29ed5d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81a8845cc0797ed494d6c138049bb015a29ed5d4/comments", "author": {"login": "jozefl-mitto", "id": 36524004, "node_id": "MDQ6VXNlcjM2NTI0MDA0", "avatar_url": "https://avatars.githubusercontent.com/u/36524004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jozefl-mitto", "html_url": "https://github.com/jozefl-mitto", "followers_url": "https://api.github.com/users/jozefl-mitto/followers", "following_url": "https://api.github.com/users/jozefl-mitto/following{/other_user}", "gists_url": "https://api.github.com/users/jozefl-mitto/gists{/gist_id}", "starred_url": "https://api.github.com/users/jozefl-mitto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jozefl-mitto/subscriptions", "organizations_url": "https://api.github.com/users/jozefl-mitto/orgs", "repos_url": "https://api.github.com/users/jozefl-mitto/repos", "events_url": "https://api.github.com/users/jozefl-mitto/events{/privacy}", "received_events_url": "https://api.github.com/users/jozefl-mitto/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8ed1d2fa2bbda6d1365e5cba90abb42eac84bc04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ed1d2fa2bbda6d1365e5cba90abb42eac84bc04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ed1d2fa2bbda6d1365e5cba90abb42eac84bc04"}], "stats": {"total": 1797, "additions": 927, "deletions": 870}, "files": [{"sha": "86cfa99cf5c1c01108a2254f4a57ee22f6b5d777", "filename": "gcc/ChangeLog", "status": "modified", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81a8845cc0797ed494d6c138049bb015a29ed5d4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81a8845cc0797ed494d6c138049bb015a29ed5d4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=81a8845cc0797ed494d6c138049bb015a29ed5d4", "patch": "@@ -1,3 +1,63 @@\n+2019-08-15  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\tMSP430: Fix whitespace errors and incorrect indentation in\n+\tconfig/msp430/*.{c,h} files\n+\n+\t* config/msp430/driver-msp430.c (msp430_select_cpu): Fix indentation.\n+\t(msp430_select_hwmult_lib): Likewise.\n+\t* config/msp430/msp430-devices.c (parse_devices_csv_1): Likewise.\n+\t(msp430_extract_mcu_data): Likewise.\n+\t(struct t_msp430_mcu_data): Likewise.\n+\t* config/msp430/msp430.c (struct machine_function): Remove whitespace\n+\tbefore left square bracket.\n+\t(msp430_option_override): Fix indentation.\n+\t(msp430_hard_regno_nregs_with_padding): Likewise.\n+\t(msp430_initial_elimination_offset): Likewise.\n+\t(msp430_special_register_convention_p): Remove whitespace before left\n+\tsquare bracket and after exclamation mark.\n+\t(msp430_evaluate_arg): Likewise.\n+\t(msp430_callee_copies): Fix indentation.\n+\t(msp430_gimplify_va_arg_expr): Likewise.\n+\t(msp430_function_arg_advance): Remove whitespace before left square\n+\tbracket.\n+\t(reg_ok_for_addr): Likewise.\n+\t(msp430_preserve_reg_p): Likewise.\n+\t(msp430_compute_frame_info): Likewise.\n+\t(msp430_asm_output_addr_const_extra): Add space between function name\n+\tand open parenthesis.\n+\t(has_section_name): Fix indentation.\n+\t(msp430_attr): Remove trailing whitespace.\n+\t(msp430_section_attr): Likewise.\n+\t(msp430_data_attr): Likewise.\n+\t(struct msp430_attribute_table): Fix comment and whitespace.\n+\t(msp430_start_function): Remove whitespace before left square bracket.\n+\tAdd space between function name and open parenthesis.\n+\t(msp430_select_section): Remove trailing whitespace.\n+\t(msp430_section_type_flags): Remove trailing whitespace.\n+\t(msp430_unique_section): Remove space before closing parenthesis.\n+\t(msp430_output_aligned_decl_common): Change 8 spaces to a tab.\n+\t(msp430_builtins): Remove whitespace before left square bracket.\n+\t(msp430_init_builtins):\tFix indentation.\n+\t(msp430_expand_prologue): Remove whitespace before left square bracket.\n+\tRemove space before closing parenthesis.\n+\t(msp430_expand_epilogue): Remove whitespace before left square bracket.\n+\t(msp430_split_movsi): Remove space before closing parenthesis.\n+\t(helper_function_name_mappings): Fix indentation.\n+\t(msp430_use_f5_series_hwmult): Fix whitespace.\n+\t(use_32bit_hwmult): Likewise.\n+\t(msp430_no_hwmult): Likewise.\n+\t(msp430_output_labelref): Remove whitespace before left square bracket.\n+\t(msp430_print_operand_raw): Likewise.\n+\t(msp430_print_operand_addr): Likewise.\n+\t(msp430_print_operand): Add two spaces after '.' in comment.\n+\tFix trailing whitespace.\n+\t(msp430x_extendhisi): Fix indentation.\n+\t* config/msp430/msp430.h (TARGET_CPU_CPP_BUILTINS): Change 8 spaces to\n+\ttab.\n+\t(PC_REGNUM): Likewise.\n+\t(STACK_POINTER_REGNUM): Likewise.\n+\t(CC_REGNUM): Likewise.\n+\n 2019-08-15  Richard Biener  <rguenther@suse.de>\n \n \tPR target/91454"}, {"sha": "99d3391a6ae394da58508abe508930483e1cd80e", "filename": "gcc/config/msp430/driver-msp430.c", "status": "modified", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81a8845cc0797ed494d6c138049bb015a29ed5d4/gcc%2Fconfig%2Fmsp430%2Fdriver-msp430.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81a8845cc0797ed494d6c138049bb015a29ed5d4/gcc%2Fconfig%2Fmsp430%2Fdriver-msp430.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fdriver-msp430.c?ref=81a8845cc0797ed494d6c138049bb015a29ed5d4", "patch": "@@ -47,7 +47,7 @@ msp430_select_cpu (int argc, const char ** argv)\n \tcase 1: return \"-mcpu=msp430x\";\n \tcase 2: return \"-mcpu=msp430xv2\";\n \tdefault:\n-\t\tgcc_unreachable ();\n+\t  gcc_unreachable ();\n \t}\n     }\n   /* MCU wasn't found, the compiler proper will warn about this.  */\n@@ -85,41 +85,41 @@ msp430_select_hwmult_lib (int argc ATTRIBUTE_UNUSED, const char ** argv ATTRIBUT\n   int i;\n \n   switch (argc)\n-  {\n-  case 1:\n-    if (strcasecmp (argv[0], \"default\"))\n-      error (\"unexpected argument to msp430_select_hwmult_lib: %s\", argv[0]);\n-    break;\n+    {\n+    case 1:\n+      if (strcasecmp (argv[0], \"default\"))\n+\terror (\"unexpected argument to msp430_select_hwmult_lib: %s\", argv[0]);\n+      break;\n \n-  default:\n-    /* We can get three or more arguments passed to this function.\n-       This happens when the same option is repeated on the command line.\n-       For example:\n-         msp430-elf-gcc -mhwmult=none -mhwmult=16bit foo.c\n-       We have to use the last argument as our selector.  */\n-    if (strcasecmp (argv[0], \"hwmult\") == 0)\n-      {\n-\tstatic struct hwmult_options\n-\t{\n-\t  const char * name;\n-\t  const char * lib;\n-\t} hwmult_options [] =\n+    default:\n+      /* We can get three or more arguments passed to this function.\n+\t This happens when the same option is repeated on the command line.\n+\t For example:\n+\t msp430-elf-gcc -mhwmult=none -mhwmult=16bit foo.c\n+\t We have to use the last argument as our selector.  */\n+      if (strcasecmp (argv[0], \"hwmult\") == 0)\n \t{\n-\t  { \"none\", \"-lmul_none\" },\n-\t  { \"auto\", \"-lmul_AUTO\" }, /* Should not see this one... */\n-\t  { \"16bit\", \"-lmul_16\" },\n-\t  { \"32bit\", \"-lmul_32\" },\n-\t  { \"f5series\", \"-lmul_f5\" }\n-\t};\n+\t  static struct hwmult_options\n+\t    {\n+\t      const char * name;\n+\t      const char * lib;\n+\t    } hwmult_options[] =\n+\t    {\n+\t      { \"none\", \"-lmul_none\" },\n+\t      { \"auto\", \"-lmul_AUTO\" }, /* Should not see this one... */\n+\t      { \"16bit\", \"-lmul_16\" },\n+\t      { \"32bit\", \"-lmul_32\" },\n+\t      { \"f5series\", \"-lmul_f5\" }\n+\t    };\n \n \tfor (i = ARRAY_SIZE (hwmult_options); i--;)\n \t  if (strcasecmp (argv[argc - 1], hwmult_options[i].name) == 0)\n \t    return hwmult_options[i].lib;\n-      }\n-    else if (strcasecmp (argv[0], \"mcu\") == 0)\n-      {\n-\tmsp430_extract_mcu_data (argv[argc - 1]);\n-\tif (extracted_mcu_data.name != NULL)\n+\t}\n+      else if (strcasecmp (argv[0], \"mcu\") == 0)\n+\t{\n+\t  msp430_extract_mcu_data (argv[argc - 1]);\n+\t  if (extracted_mcu_data.name != NULL)\n \t    {\n \t      switch (extracted_mcu_data.hwmpy)\n \t\t{\n@@ -129,21 +129,21 @@ msp430_select_hwmult_lib (int argc ATTRIBUTE_UNUSED, const char ** argv ATTRIBUT\n \t\tcase 4: return \"-lmul_32\";\n \t\tcase 8: return \"-lmul_f5\";\n \t\tdefault:\n-\t\t\t/* We have already checked the hwmpy values for\n-\t\t\t   validity in msp430_extract_mcu_data.  */\n-\t\t\tgcc_unreachable ();\n+\t\t  /* We have already checked the hwmpy values for\n+\t\t     validity in msp430_extract_mcu_data.  */\n+\t\t  gcc_unreachable ();\n \t\t  break;\n \t\t}\n \t    }\n-      }\n-    else\n-      error (\"unexpected first argument to msp430_select_hwmult_lib: %s\", argv[0]);\n-    break;\n+\t}\n+      else\n+\terror (\"unexpected first argument to msp430_select_hwmult_lib: %s\", argv[0]);\n+      break;\n+\n+    case 0:\n+      error (\"msp430_select_hwmult_lib needs one or more arguments\");\n+      break;\n+    }\n \n-  case 0:\n-    error (\"msp430_select_hwmult_lib needs one or more arguments\");\n-    break;\n-  }\n-  \n   return \"-lmul_none\";\n }"}, {"sha": "8e06465c970351ccdad763f1d6c33b15b4540c97", "filename": "gcc/config/msp430/msp430-devices.c", "status": "modified", "additions": 617, "deletions": 617, "changes": 1234, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81a8845cc0797ed494d6c138049bb015a29ed5d4/gcc%2Fconfig%2Fmsp430%2Fmsp430-devices.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81a8845cc0797ed494d6c138049bb015a29ed5d4/gcc%2Fconfig%2Fmsp430%2Fmsp430-devices.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430-devices.c?ref=81a8845cc0797ed494d6c138049bb015a29ed5d4", "patch": "@@ -143,10 +143,10 @@ parse_devices_csv_1 (const char * real_devices_csv_loc, const char * mcu_name)\n \t    {\n \t      if (strncmp (heading, cpu_type_heading,\n \t\t\t   strlen (cpu_type_heading)) == 0)\n-\t\t  cpu_type_column = curr_column;\n+\t\tcpu_type_column = curr_column;\n \t      else if (strncmp (heading, mpy_type_heading,\n-\t\t\t   strlen (mpy_type_heading)) == 0)\n-\t\t  mpy_type_column = curr_column;\n+\t\t\t\tstrlen (mpy_type_heading)) == 0)\n+\t\tmpy_type_column = curr_column;\n \t      if (cpu_type_column != -1 && mpy_type_column != -1)\n \t\tbreak;\n \t      heading = strtok (NULL, \",\");\n@@ -329,20 +329,20 @@ msp430_extract_mcu_data (const char * mcu_name)\n \tcase 4:\n \tcase 8: break;\n \tdefault:\n-\t\terror (\"unrecognized %<hwmpy%> field in \"\n-\t\t       \"%<hard_msp430_mcu_data[%d]%>: %qd\", i,\n-\t\t       hard_msp430_mcu_data[i].hwmpy);\n-\t\tbreak;\n+\t  error (\"unrecognized %<hwmpy%> field in \"\n+\t\t \"%<hard_msp430_mcu_data[%d]%>: %qd\", i,\n+\t\t hard_msp430_mcu_data[i].hwmpy);\n+\t  break;\n \t}\n       switch (extracted_mcu_data.revision)\n \t{\n \tcase 0:\n \tcase 1:\n \tcase 2: break;\n \tdefault:\n-\t\terror (\"unrecognized %<revision%> field in \"\n-\t\t       \"%<hard_msp430_mcu_data[%d]%>: %qd\", i,\n-\t\t       hard_msp430_mcu_data[i].revision);\n+\t  error (\"unrecognized %<revision%> field in \"\n+\t\t \"%<hard_msp430_mcu_data[%d]%>: %qd\", i,\n+\t\t hard_msp430_mcu_data[i].revision);\n \t}\n     }\n   else if (msp430_warn_devices_csv && devices_csv_not_found)\n@@ -362,610 +362,610 @@ msp430_extract_mcu_data (const char * mcu_name)\n    devices.csv file released by TI in September 2016.  */\n \n struct t_msp430_mcu_data hard_msp430_mcu_data[605] =\n-{\n-  { \"cc430f5123\",2,8 },\n-  { \"cc430f5125\",2,8 },\n-  { \"cc430f5133\",2,8 },\n-  { \"cc430f5135\",2,8 },\n-  { \"cc430f5137\",2,8 },\n-  { \"cc430f5143\",2,8 },\n-  { \"cc430f5145\",2,8 },\n-  { \"cc430f5147\",2,8 },\n-  { \"cc430f6125\",2,8 },\n-  { \"cc430f6126\",2,8 },\n-  { \"cc430f6127\",2,8 },\n-  { \"cc430f6135\",2,8 },\n-  { \"cc430f6137\",2,8 },\n-  { \"cc430f6143\",2,8 },\n-  { \"cc430f6145\",2,8 },\n-  { \"cc430f6147\",2,8 },\n-  { \"msp430afe221\",0,2 },\n-  { \"msp430afe222\",0,2 },\n-  { \"msp430afe223\",0,2 },\n-  { \"msp430afe231\",0,2 },\n-  { \"msp430afe232\",0,2 },\n-  { \"msp430afe233\",0,2 },\n-  { \"msp430afe251\",0,2 },\n-  { \"msp430afe252\",0,2 },\n-  { \"msp430afe253\",0,2 },\n-  { \"msp430bt5190\",2,8 },\n-  { \"msp430c091\",0,0 },\n-  { \"msp430c092\",0,0 },\n-  { \"msp430c111\",0,0 },\n-  { \"msp430c1111\",0,0 },\n-  { \"msp430c112\",0,0 },\n-  { \"msp430c1121\",0,0 },\n-  { \"msp430c1331\",0,0 },\n-  { \"msp430c1351\",0,0 },\n-  { \"msp430c311s\",0,0 },\n-  { \"msp430c312\",0,0 },\n-  { \"msp430c313\",0,0 },\n-  { \"msp430c314\",0,0 },\n-  { \"msp430c315\",0,0 },\n-  { \"msp430c323\",0,0 },\n-  { \"msp430c325\",0,0 },\n-  { \"msp430c336\",0,1 },\n-  { \"msp430c337\",0,1 },\n-  { \"msp430c412\",0,0 },\n-  { \"msp430c413\",0,0 },\n-  { \"msp430cg4616\",1,1 },\n-  { \"msp430cg4617\",1,1 },\n-  { \"msp430cg4618\",1,1 },\n-  { \"msp430cg4619\",1,1 },\n-  { \"msp430e112\",0,0 },\n-  { \"msp430e313\",0,0 },\n-  { \"msp430e315\",0,0 },\n-  { \"msp430e325\",0,0 },\n-  { \"msp430e337\",0,1 },\n-  { \"msp430f110\",0,0 },\n-  { \"msp430f1101\",0,0 },\n-  { \"msp430f1101a\",0,0 },\n-  { \"msp430f1111\",0,0 },\n-  { \"msp430f1111a\",0,0 },\n-  { \"msp430f112\",0,0 },\n-  { \"msp430f1121\",0,0 },\n-  { \"msp430f1121a\",0,0 },\n-  { \"msp430f1122\",0,0 },\n-  { \"msp430f1132\",0,0 },\n-  { \"msp430f122\",0,0 },\n-  { \"msp430f1222\",0,0 },\n-  { \"msp430f123\",0,0 },\n-  { \"msp430f1232\",0,0 },\n-  { \"msp430f133\",0,0 },\n-  { \"msp430f135\",0,0 },\n-  { \"msp430f147\",0,1 },\n-  { \"msp430f1471\",0,1 },\n-  { \"msp430f148\",0,1 },\n-  { \"msp430f1481\",0,1 },\n-  { \"msp430f149\",0,1 },\n-  { \"msp430f1491\",0,1 },\n-  { \"msp430f155\",0,0 },\n-  { \"msp430f156\",0,0 },\n-  { \"msp430f157\",0,0 },\n-  { \"msp430f1610\",0,1 },\n-  { \"msp430f1611\",0,1 },\n-  { \"msp430f1612\",0,1 },\n-  { \"msp430f167\",0,1 },\n-  { \"msp430f168\",0,1 },\n-  { \"msp430f169\",0,1 },\n-  { \"msp430f2001\",0,0 },\n-  { \"msp430f2002\",0,0 },\n-  { \"msp430f2003\",0,0 },\n-  { \"msp430f2011\",0,0 },\n-  { \"msp430f2012\",0,0 },\n-  { \"msp430f2013\",0,0 },\n-  { \"msp430f2101\",0,0 },\n-  { \"msp430f2111\",0,0 },\n-  { \"msp430f2112\",0,0 },\n-  { \"msp430f2121\",0,0 },\n-  { \"msp430f2122\",0,0 },\n-  { \"msp430f2131\",0,0 },\n-  { \"msp430f2132\",0,0 },\n-  { \"msp430f2232\",0,0 },\n-  { \"msp430f2234\",0,0 },\n-  { \"msp430f2252\",0,0 },\n-  { \"msp430f2254\",0,0 },\n-  { \"msp430f2272\",0,0 },\n-  { \"msp430f2274\",0,0 },\n-  { \"msp430f233\",0,2 },\n-  { \"msp430f2330\",0,2 },\n-  { \"msp430f235\",0,2 },\n-  { \"msp430f2350\",0,2 },\n-  { \"msp430f2370\",0,2 },\n-  { \"msp430f2410\",0,2 },\n-  { \"msp430f2416\",1,2 },\n-  { \"msp430f2417\",1,2 },\n-  { \"msp430f2418\",1,2 },\n-  { \"msp430f2419\",1,2 },\n-  { \"msp430f247\",0,2 },\n-  { \"msp430f2471\",0,2 },\n-  { \"msp430f248\",0,2 },\n-  { \"msp430f2481\",0,2 },\n-  { \"msp430f249\",0,2 },\n-  { \"msp430f2491\",0,2 },\n-  { \"msp430f2616\",1,2 },\n-  { \"msp430f2617\",1,2 },\n-  { \"msp430f2618\",1,2 },\n-  { \"msp430f2619\",1,2 },\n-  { \"msp430f412\",0,0 },\n-  { \"msp430f413\",0,0 },\n-  { \"msp430f4132\",0,0 },\n-  { \"msp430f415\",0,0 },\n-  { \"msp430f4152\",0,0 },\n-  { \"msp430f417\",0,0 },\n-  { \"msp430f423\",0,1 },\n-  { \"msp430f423a\",0,1 },\n-  { \"msp430f425\",0,1 },\n-  { \"msp430f4250\",0,0 },\n-  { \"msp430f425a\",0,1 },\n-  { \"msp430f4260\",0,0 },\n-  { \"msp430f427\",0,1 },\n-  { \"msp430f4270\",0,0 },\n-  { \"msp430f427a\",0,1 },\n-  { \"msp430f435\",0,0 },\n-  { \"msp430f4351\",0,0 },\n-  { \"msp430f436\",0,0 },\n-  { \"msp430f4361\",0,0 },\n-  { \"msp430f437\",0,0 },\n-  { \"msp430f4371\",0,0 },\n-  { \"msp430f438\",0,0 },\n-  { \"msp430f439\",0,0 },\n-  { \"msp430f447\",0,1 },\n-  { \"msp430f448\",0,1 },\n-  { \"msp430f4481\",0,1 },\n-  { \"msp430f449\",0,1 },\n-  { \"msp430f4491\",0,1 },\n-  { \"msp430f4616\",1,1 },\n-  { \"msp430f46161\",1,1 },\n-  { \"msp430f4617\",1,1 },\n-  { \"msp430f46171\",1,1 },\n-  { \"msp430f4618\",1,1 },\n-  { \"msp430f46181\",1,1 },\n-  { \"msp430f4619\",1,1 },\n-  { \"msp430f46191\",1,1 },\n-  { \"msp430f47126\",1,4 },\n-  { \"msp430f47127\",1,4 },\n-  { \"msp430f47163\",1,4 },\n-  { \"msp430f47166\",1,4 },\n-  { \"msp430f47167\",1,4 },\n-  { \"msp430f47173\",1,4 },\n-  { \"msp430f47176\",1,4 },\n-  { \"msp430f47177\",1,4 },\n-  { \"msp430f47183\",1,4 },\n-  { \"msp430f47186\",1,4 },\n-  { \"msp430f47187\",1,4 },\n-  { \"msp430f47193\",1,4 },\n-  { \"msp430f47196\",1,4 },\n-  { \"msp430f47197\",1,4 },\n-  { \"msp430f477\",0,0 },\n-  { \"msp430f478\",0,0 },\n-  { \"msp430f4783\",0,4 },\n-  { \"msp430f4784\",0,4 },\n-  { \"msp430f479\",0,0 },\n-  { \"msp430f4793\",0,4 },\n-  { \"msp430f4794\",0,4 },\n-  { \"msp430f5131\",2,8 },\n-  { \"msp430f5132\",2,8 },\n-  { \"msp430f5151\",2,8 },\n-  { \"msp430f5152\",2,8 },\n-  { \"msp430f5171\",2,8 },\n-  { \"msp430f5172\",2,8 },\n-  { \"msp430f5212\",2,8 },\n-  { \"msp430f5213\",2,8 },\n-  { \"msp430f5214\",2,8 },\n-  { \"msp430f5217\",2,8 },\n-  { \"msp430f5218\",2,8 },\n-  { \"msp430f5219\",2,8 },\n-  { \"msp430f5222\",2,8 },\n-  { \"msp430f5223\",2,8 },\n-  { \"msp430f5224\",2,8 },\n-  { \"msp430f5227\",2,8 },\n-  { \"msp430f5228\",2,8 },\n-  { \"msp430f5229\",2,8 },\n-  { \"msp430f5232\",2,8 },\n-  { \"msp430f5234\",2,8 },\n-  { \"msp430f5237\",2,8 },\n-  { \"msp430f5239\",2,8 },\n-  { \"msp430f5242\",2,8 },\n-  { \"msp430f5244\",2,8 },\n-  { \"msp430f5247\",2,8 },\n-  { \"msp430f5249\",2,8 },\n-  { \"msp430f5252\",2,8 },\n-  { \"msp430f5253\",2,8 },\n-  { \"msp430f5254\",2,8 },\n-  { \"msp430f5255\",2,8 },\n-  { \"msp430f5256\",2,8 },\n-  { \"msp430f5257\",2,8 },\n-  { \"msp430f5258\",2,8 },\n-  { \"msp430f5259\",2,8 },\n-  { \"msp430f5304\",2,8 },\n-  { \"msp430f5308\",2,8 },\n-  { \"msp430f5309\",2,8 },\n-  { \"msp430f5310\",2,8 },\n-  { \"msp430f5324\",2,8 },\n-  { \"msp430f5325\",2,8 },\n-  { \"msp430f5326\",2,8 },\n-  { \"msp430f5327\",2,8 },\n-  { \"msp430f5328\",2,8 },\n-  { \"msp430f5329\",2,8 },\n-  { \"msp430f5333\",2,8 },\n-  { \"msp430f5335\",2,8 },\n-  { \"msp430f5336\",2,8 },\n-  { \"msp430f5338\",2,8 },\n-  { \"msp430f5340\",2,8 },\n-  { \"msp430f5341\",2,8 },\n-  { \"msp430f5342\",2,8 },\n-  { \"msp430f5358\",2,8 },\n-  { \"msp430f5359\",2,8 },\n-  { \"msp430f5418\",2,8 },\n-  { \"msp430f5418a\",2,8 },\n-  { \"msp430f5419\",2,8 },\n-  { \"msp430f5419a\",2,8 },\n-  { \"msp430f5435\",2,8 },\n-  { \"msp430f5435a\",2,8 },\n-  { \"msp430f5436\",2,8 },\n-  { \"msp430f5436a\",2,8 },\n-  { \"msp430f5437\",2,8 },\n-  { \"msp430f5437a\",2,8 },\n-  { \"msp430f5438\",2,8 },\n-  { \"msp430f5438a\",2,8 },\n-  { \"msp430f5500\",2,8 },\n-  { \"msp430f5501\",2,8 },\n-  { \"msp430f5502\",2,8 },\n-  { \"msp430f5503\",2,8 },\n-  { \"msp430f5504\",2,8 },\n-  { \"msp430f5505\",2,8 },\n-  { \"msp430f5506\",2,8 },\n-  { \"msp430f5507\",2,8 },\n-  { \"msp430f5508\",2,8 },\n-  { \"msp430f5509\",2,8 },\n-  { \"msp430f5510\",2,8 },\n-  { \"msp430f5513\",2,8 },\n-  { \"msp430f5514\",2,8 },\n-  { \"msp430f5515\",2,8 },\n-  { \"msp430f5517\",2,8 },\n-  { \"msp430f5519\",2,8 },\n-  { \"msp430f5521\",2,8 },\n-  { \"msp430f5522\",2,8 },\n-  { \"msp430f5524\",2,8 },\n-  { \"msp430f5525\",2,8 },\n-  { \"msp430f5526\",2,8 },\n-  { \"msp430f5527\",2,8 },\n-  { \"msp430f5528\",2,8 },\n-  { \"msp430f5529\",2,8 },\n-  { \"msp430f5630\",2,8 },\n-  { \"msp430f5631\",2,8 },\n-  { \"msp430f5632\",2,8 },\n-  { \"msp430f5633\",2,8 },\n-  { \"msp430f5634\",2,8 },\n-  { \"msp430f5635\",2,8 },\n-  { \"msp430f5636\",2,8 },\n-  { \"msp430f5637\",2,8 },\n-  { \"msp430f5638\",2,8 },\n-  { \"msp430f5658\",2,8 },\n-  { \"msp430f5659\",2,8 },\n-  { \"msp430f5xx_6xxgeneric\",2,8 },\n-  { \"msp430f6433\",2,8 },\n-  { \"msp430f6435\",2,8 },\n-  { \"msp430f6436\",2,8 },\n-  { \"msp430f6438\",2,8 },\n-  { \"msp430f6458\",2,8 },\n-  { \"msp430f6459\",2,8 },\n-  { \"msp430f6630\",2,8 },\n-  { \"msp430f6631\",2,8 },\n-  { \"msp430f6632\",2,8 },\n-  { \"msp430f6633\",2,8 },\n-  { \"msp430f6634\",2,8 },\n-  { \"msp430f6635\",2,8 },\n-  { \"msp430f6636\",2,8 },\n-  { \"msp430f6637\",2,8 },\n-  { \"msp430f6638\",2,8 },\n-  { \"msp430f6658\",2,8 },\n-  { \"msp430f6659\",2,8 },\n-  { \"msp430f6720\",2,8 },\n-  { \"msp430f6720a\",2,8 },\n-  { \"msp430f6721\",2,8 },\n-  { \"msp430f6721a\",2,8 },\n-  { \"msp430f6723\",2,8 },\n-  { \"msp430f6723a\",2,8 },\n-  { \"msp430f6724\",2,8 },\n-  { \"msp430f6724a\",2,8 },\n-  { \"msp430f6725\",2,8 },\n-  { \"msp430f6725a\",2,8 },\n-  { \"msp430f6726\",2,8 },\n-  { \"msp430f6726a\",2,8 },\n-  { \"msp430f6730\",2,8 },\n-  { \"msp430f6730a\",2,8 },\n-  { \"msp430f6731\",2,8 },\n-  { \"msp430f6731a\",2,8 },\n-  { \"msp430f6733\",2,8 },\n-  { \"msp430f6733a\",2,8 },\n-  { \"msp430f6734\",2,8 },\n-  { \"msp430f6734a\",2,8 },\n-  { \"msp430f6735\",2,8 },\n-  { \"msp430f6735a\",2,8 },\n-  { \"msp430f6736\",2,8 },\n-  { \"msp430f6736a\",2,8 },\n-  { \"msp430f6745\",2,8 },\n-  { \"msp430f67451\",2,8 },\n-  { \"msp430f67451a\",2,8 },\n-  { \"msp430f6745a\",2,8 },\n-  { \"msp430f6746\",2,8 },\n-  { \"msp430f67461\",2,8 },\n-  { \"msp430f67461a\",2,8 },\n-  { \"msp430f6746a\",2,8 },\n-  { \"msp430f6747\",2,8 },\n-  { \"msp430f67471\",2,8 },\n-  { \"msp430f67471a\",2,8 },\n-  { \"msp430f6747a\",2,8 },\n-  { \"msp430f6748\",2,8 },\n-  { \"msp430f67481\",2,8 },\n-  { \"msp430f67481a\",2,8 },\n-  { \"msp430f6748a\",2,8 },\n-  { \"msp430f6749\",2,8 },\n-  { \"msp430f67491\",2,8 },\n-  { \"msp430f67491a\",2,8 },\n-  { \"msp430f6749a\",2,8 },\n-  { \"msp430f67621\",2,8 },\n-  { \"msp430f67621a\",2,8 },\n-  { \"msp430f67641\",2,8 },\n-  { \"msp430f67641a\",2,8 },\n-  { \"msp430f6765\",2,8 },\n-  { \"msp430f67651\",2,8 },\n-  { \"msp430f67651a\",2,8 },\n-  { \"msp430f6765a\",2,8 },\n-  { \"msp430f6766\",2,8 },\n-  { \"msp430f67661\",2,8 },\n-  { \"msp430f67661a\",2,8 },\n-  { \"msp430f6766a\",2,8 },\n-  { \"msp430f6767\",2,8 },\n-  { \"msp430f67671\",2,8 },\n-  { \"msp430f67671a\",2,8 },\n-  { \"msp430f6767a\",2,8 },\n-  { \"msp430f6768\",2,8 },\n-  { \"msp430f67681\",2,8 },\n-  { \"msp430f67681a\",2,8 },\n-  { \"msp430f6768a\",2,8 },\n-  { \"msp430f6769\",2,8 },\n-  { \"msp430f67691\",2,8 },\n-  { \"msp430f67691a\",2,8 },\n-  { \"msp430f6769a\",2,8 },\n-  { \"msp430f6775\",2,8 },\n-  { \"msp430f67751\",2,8 },\n-  { \"msp430f67751a\",2,8 },\n-  { \"msp430f6775a\",2,8 },\n-  { \"msp430f6776\",2,8 },\n-  { \"msp430f67761\",2,8 },\n-  { \"msp430f67761a\",2,8 },\n-  { \"msp430f6776a\",2,8 },\n-  { \"msp430f6777\",2,8 },\n-  { \"msp430f67771\",2,8 },\n-  { \"msp430f67771a\",2,8 },\n-  { \"msp430f6777a\",2,8 },\n-  { \"msp430f6778\",2,8 },\n-  { \"msp430f67781\",2,8 },\n-  { \"msp430f67781a\",2,8 },\n-  { \"msp430f6778a\",2,8 },\n-  { \"msp430f6779\",2,8 },\n-  { \"msp430f67791\",2,8 },\n-  { \"msp430f67791a\",2,8 },\n-  { \"msp430f6779a\",2,8 },\n-  { \"msp430fe423\",0,0 },\n-  { \"msp430fe4232\",0,0 },\n-  { \"msp430fe423a\",0,0 },\n-  { \"msp430fe4242\",0,0 },\n-  { \"msp430fe425\",0,0 },\n-  { \"msp430fe4252\",0,0 },\n-  { \"msp430fe425a\",0,0 },\n-  { \"msp430fe427\",0,0 },\n-  { \"msp430fe4272\",0,0 },\n-  { \"msp430fe427a\",0,0 },\n-  { \"msp430fg4250\",0,0 },\n-  { \"msp430fg4260\",0,0 },\n-  { \"msp430fg4270\",0,0 },\n-  { \"msp430fg437\",0,0 },\n-  { \"msp430fg438\",0,0 },\n-  { \"msp430fg439\",0,0 },\n-  { \"msp430fg4616\",1,1 },\n-  { \"msp430fg4617\",1,1 },\n-  { \"msp430fg4618\",1,1 },\n-  { \"msp430fg4619\",1,1 },\n-  { \"msp430fg477\",0,0 },\n-  { \"msp430fg478\",0,0 },\n-  { \"msp430fg479\",0,0 },\n-  { \"msp430fg6425\",2,8 },\n-  { \"msp430fg6426\",2,8 },\n-  { \"msp430fg6625\",2,8 },\n-  { \"msp430fg6626\",2,8 },\n-  { \"msp430fr2032\",2,0 },\n-  { \"msp430fr2033\",2,0 },\n-  { \"msp430fr2110\",2,0 },\n-  { \"msp430fr2111\",2,0 },\n-  { \"msp430fr2310\",2,0 },\n-  { \"msp430fr2311\",2,0 },\n-  { \"msp430fr2433\",2,8 },\n-  { \"msp430fr2532\",2,8 },\n-  { \"msp430fr2533\",2,8 },\n-  { \"msp430fr2632\",2,8 },\n-  { \"msp430fr2633\",2,8 },\n-  { \"msp430fr2xx_4xxgeneric\",2,8 },\n-  { \"msp430fr4131\",2,0 },\n-  { \"msp430fr4132\",2,0 },\n-  { \"msp430fr4133\",2,0 },\n-  { \"msp430fr5720\",2,8 },\n-  { \"msp430fr5721\",2,8 },\n-  { \"msp430fr5722\",2,8 },\n-  { \"msp430fr5723\",2,8 },\n-  { \"msp430fr5724\",2,8 },\n-  { \"msp430fr5725\",2,8 },\n-  { \"msp430fr5726\",2,8 },\n-  { \"msp430fr5727\",2,8 },\n-  { \"msp430fr5728\",2,8 },\n-  { \"msp430fr5729\",2,8 },\n-  { \"msp430fr5730\",2,8 },\n-  { \"msp430fr5731\",2,8 },\n-  { \"msp430fr5732\",2,8 },\n-  { \"msp430fr5733\",2,8 },\n-  { \"msp430fr5734\",2,8 },\n-  { \"msp430fr5735\",2,8 },\n-  { \"msp430fr5736\",2,8 },\n-  { \"msp430fr5737\",2,8 },\n-  { \"msp430fr5738\",2,8 },\n-  { \"msp430fr5739\",2,8 },\n-  { \"msp430fr57xxgeneric\",2,8 },\n-  { \"msp430fr5847\",2,8 },\n-  { \"msp430fr58471\",2,8 },\n-  { \"msp430fr5848\",2,8 },\n-  { \"msp430fr5849\",2,8 },\n-  { \"msp430fr5857\",2,8 },\n-  { \"msp430fr5858\",2,8 },\n-  { \"msp430fr5859\",2,8 },\n-  { \"msp430fr5867\",2,8 },\n-  { \"msp430fr58671\",2,8 },\n-  { \"msp430fr5868\",2,8 },\n-  { \"msp430fr5869\",2,8 },\n-  { \"msp430fr5870\",2,8 },\n-  { \"msp430fr5872\",2,8 },\n-  { \"msp430fr58721\",2,8 },\n-  { \"msp430fr5887\",2,8 },\n-  { \"msp430fr5888\",2,8 },\n-  { \"msp430fr5889\",2,8 },\n-  { \"msp430fr58891\",2,8 },\n-  { \"msp430fr5922\",2,8 },\n-  { \"msp430fr59221\",2,8 },\n-  { \"msp430fr5947\",2,8 },\n-  { \"msp430fr59471\",2,8 },\n-  { \"msp430fr5948\",2,8 },\n-  { \"msp430fr5949\",2,8 },\n-  { \"msp430fr5957\",2,8 },\n-  { \"msp430fr5958\",2,8 },\n-  { \"msp430fr5959\",2,8 },\n-  { \"msp430fr5962\",2,8 },\n-  { \"msp430fr5964\",2,8 },\n-  { \"msp430fr5967\",2,8 },\n-  { \"msp430fr5968\",2,8 },\n-  { \"msp430fr5969\",2,8 },\n-  { \"msp430fr59691\",2,8 },\n-  { \"msp430fr5970\",2,8 },\n-  { \"msp430fr5972\",2,8 },\n-  { \"msp430fr59721\",2,8 },\n-  { \"msp430fr5986\",2,8 },\n-  { \"msp430fr5987\",2,8 },\n-  { \"msp430fr5988\",2,8 },\n-  { \"msp430fr5989\",2,8 },\n-  { \"msp430fr59891\",2,8 },\n-  { \"msp430fr5992\",2,8 },\n-  { \"msp430fr5994\",2,8 },\n-  { \"msp430fr59941\",2,8 },\n-  { \"msp430fr5xx_6xxgeneric\",2,8 },\n-  { \"msp430fr6820\",2,8 },\n-  { \"msp430fr6822\",2,8 },\n-  { \"msp430fr68221\",2,8 },\n-  { \"msp430fr6870\",2,8 },\n-  { \"msp430fr6872\",2,8 },\n-  { \"msp430fr68721\",2,8 },\n-  { \"msp430fr6877\",2,8 },\n-  { \"msp430fr6879\",2,8 },\n-  { \"msp430fr68791\",2,8 },\n-  { \"msp430fr6887\",2,8 },\n-  { \"msp430fr6888\",2,8 },\n-  { \"msp430fr6889\",2,8 },\n-  { \"msp430fr68891\",2,8 },\n-  { \"msp430fr6920\",2,8 },\n-  { \"msp430fr6922\",2,8 },\n-  { \"msp430fr69221\",2,8 },\n-  { \"msp430fr6927\",2,8 },\n-  { \"msp430fr69271\",2,8 },\n-  { \"msp430fr6928\",2,8 },\n-  { \"msp430fr6970\",2,8 },\n-  { \"msp430fr6972\",2,8 },\n-  { \"msp430fr69721\",2,8 },\n-  { \"msp430fr6977\",2,8 },\n-  { \"msp430fr6979\",2,8 },\n-  { \"msp430fr69791\",2,8 },\n-  { \"msp430fr6987\",2,8 },\n-  { \"msp430fr6988\",2,8 },\n-  { \"msp430fr6989\",2,8 },\n-  { \"msp430fr69891\",2,8 },\n-  { \"msp430fw423\",0,0 },\n-  { \"msp430fw425\",0,0 },\n-  { \"msp430fw427\",0,0 },\n-  { \"msp430fw428\",0,0 },\n-  { \"msp430fw429\",0,0 },\n-  { \"msp430g2001\",0,0 },\n-  { \"msp430g2101\",0,0 },\n-  { \"msp430g2102\",0,0 },\n-  { \"msp430g2111\",0,0 },\n-  { \"msp430g2112\",0,0 },\n-  { \"msp430g2113\",0,0 },\n-  { \"msp430g2121\",0,0 },\n-  { \"msp430g2131\",0,0 },\n-  { \"msp430g2132\",0,0 },\n-  { \"msp430g2152\",0,0 },\n-  { \"msp430g2153\",0,0 },\n-  { \"msp430g2201\",0,0 },\n-  { \"msp430g2202\",0,0 },\n-  { \"msp430g2203\",0,0 },\n-  { \"msp430g2210\",0,0 },\n-  { \"msp430g2211\",0,0 },\n-  { \"msp430g2212\",0,0 },\n-  { \"msp430g2213\",0,0 },\n-  { \"msp430g2221\",0,0 },\n-  { \"msp430g2230\",0,0 },\n-  { \"msp430g2231\",0,0 },\n-  { \"msp430g2232\",0,0 },\n-  { \"msp430g2233\",0,0 },\n-  { \"msp430g2252\",0,0 },\n-  { \"msp430g2253\",0,0 },\n-  { \"msp430g2302\",0,0 },\n-  { \"msp430g2303\",0,0 },\n-  { \"msp430g2312\",0,0 },\n-  { \"msp430g2313\",0,0 },\n-  { \"msp430g2332\",0,0 },\n-  { \"msp430g2333\",0,0 },\n-  { \"msp430g2352\",0,0 },\n-  { \"msp430g2353\",0,0 },\n-  { \"msp430g2402\",0,0 },\n-  { \"msp430g2403\",0,0 },\n-  { \"msp430g2412\",0,0 },\n-  { \"msp430g2413\",0,0 },\n-  { \"msp430g2432\",0,0 },\n-  { \"msp430g2433\",0,0 },\n-  { \"msp430g2444\",0,0 },\n-  { \"msp430g2452\",0,0 },\n-  { \"msp430g2453\",0,0 },\n-  { \"msp430g2513\",0,0 },\n-  { \"msp430g2533\",0,0 },\n-  { \"msp430g2544\",0,0 },\n-  { \"msp430g2553\",0,0 },\n-  { \"msp430g2744\",0,0 },\n-  { \"msp430g2755\",0,0 },\n-  { \"msp430g2855\",0,0 },\n-  { \"msp430g2955\",0,0 },\n-  { \"msp430i2020\",0,2 },\n-  { \"msp430i2021\",0,2 },\n-  { \"msp430i2030\",0,2 },\n-  { \"msp430i2031\",0,2 },\n-  { \"msp430i2040\",0,2 },\n-  { \"msp430i2041\",0,2 },\n-  { \"msp430i2xxgeneric\",0,2 },\n-  { \"msp430l092\",0,0 },\n-  { \"msp430p112\",0,0 },\n-  { \"msp430p313\",0,0 },\n-  { \"msp430p315\",0,0 },\n-  { \"msp430p315s\",0,0 },\n-  { \"msp430p325\",0,0 },\n-  { \"msp430p337\",0,1 },\n-  { \"msp430sl5438a\",2,8 },\n-  { \"msp430tch5e\",0,0 },\n-  { \"msp430xgeneric\",2,8 },\n-  { \"rf430f5144\",2,8 },\n-  { \"rf430f5155\",2,8 },\n-  { \"rf430f5175\",2,8 },\n-  { \"rf430frl152h\",0,0 },\n-  { \"rf430frl152h_rom\",0,0 },\n-  { \"rf430frl153h\",0,0 },\n-  { \"rf430frl153h_rom\",0,0 },\n-  { \"rf430frl154h\",0,0 },\n-  { \"rf430frl154h_rom\",0,0 }\n-};\n+  {\n+    { \"cc430f5123\",2,8 },\n+    { \"cc430f5125\",2,8 },\n+    { \"cc430f5133\",2,8 },\n+    { \"cc430f5135\",2,8 },\n+    { \"cc430f5137\",2,8 },\n+    { \"cc430f5143\",2,8 },\n+    { \"cc430f5145\",2,8 },\n+    { \"cc430f5147\",2,8 },\n+    { \"cc430f6125\",2,8 },\n+    { \"cc430f6126\",2,8 },\n+    { \"cc430f6127\",2,8 },\n+    { \"cc430f6135\",2,8 },\n+    { \"cc430f6137\",2,8 },\n+    { \"cc430f6143\",2,8 },\n+    { \"cc430f6145\",2,8 },\n+    { \"cc430f6147\",2,8 },\n+    { \"msp430afe221\",0,2 },\n+    { \"msp430afe222\",0,2 },\n+    { \"msp430afe223\",0,2 },\n+    { \"msp430afe231\",0,2 },\n+    { \"msp430afe232\",0,2 },\n+    { \"msp430afe233\",0,2 },\n+    { \"msp430afe251\",0,2 },\n+    { \"msp430afe252\",0,2 },\n+    { \"msp430afe253\",0,2 },\n+    { \"msp430bt5190\",2,8 },\n+    { \"msp430c091\",0,0 },\n+    { \"msp430c092\",0,0 },\n+    { \"msp430c111\",0,0 },\n+    { \"msp430c1111\",0,0 },\n+    { \"msp430c112\",0,0 },\n+    { \"msp430c1121\",0,0 },\n+    { \"msp430c1331\",0,0 },\n+    { \"msp430c1351\",0,0 },\n+    { \"msp430c311s\",0,0 },\n+    { \"msp430c312\",0,0 },\n+    { \"msp430c313\",0,0 },\n+    { \"msp430c314\",0,0 },\n+    { \"msp430c315\",0,0 },\n+    { \"msp430c323\",0,0 },\n+    { \"msp430c325\",0,0 },\n+    { \"msp430c336\",0,1 },\n+    { \"msp430c337\",0,1 },\n+    { \"msp430c412\",0,0 },\n+    { \"msp430c413\",0,0 },\n+    { \"msp430cg4616\",1,1 },\n+    { \"msp430cg4617\",1,1 },\n+    { \"msp430cg4618\",1,1 },\n+    { \"msp430cg4619\",1,1 },\n+    { \"msp430e112\",0,0 },\n+    { \"msp430e313\",0,0 },\n+    { \"msp430e315\",0,0 },\n+    { \"msp430e325\",0,0 },\n+    { \"msp430e337\",0,1 },\n+    { \"msp430f110\",0,0 },\n+    { \"msp430f1101\",0,0 },\n+    { \"msp430f1101a\",0,0 },\n+    { \"msp430f1111\",0,0 },\n+    { \"msp430f1111a\",0,0 },\n+    { \"msp430f112\",0,0 },\n+    { \"msp430f1121\",0,0 },\n+    { \"msp430f1121a\",0,0 },\n+    { \"msp430f1122\",0,0 },\n+    { \"msp430f1132\",0,0 },\n+    { \"msp430f122\",0,0 },\n+    { \"msp430f1222\",0,0 },\n+    { \"msp430f123\",0,0 },\n+    { \"msp430f1232\",0,0 },\n+    { \"msp430f133\",0,0 },\n+    { \"msp430f135\",0,0 },\n+    { \"msp430f147\",0,1 },\n+    { \"msp430f1471\",0,1 },\n+    { \"msp430f148\",0,1 },\n+    { \"msp430f1481\",0,1 },\n+    { \"msp430f149\",0,1 },\n+    { \"msp430f1491\",0,1 },\n+    { \"msp430f155\",0,0 },\n+    { \"msp430f156\",0,0 },\n+    { \"msp430f157\",0,0 },\n+    { \"msp430f1610\",0,1 },\n+    { \"msp430f1611\",0,1 },\n+    { \"msp430f1612\",0,1 },\n+    { \"msp430f167\",0,1 },\n+    { \"msp430f168\",0,1 },\n+    { \"msp430f169\",0,1 },\n+    { \"msp430f2001\",0,0 },\n+    { \"msp430f2002\",0,0 },\n+    { \"msp430f2003\",0,0 },\n+    { \"msp430f2011\",0,0 },\n+    { \"msp430f2012\",0,0 },\n+    { \"msp430f2013\",0,0 },\n+    { \"msp430f2101\",0,0 },\n+    { \"msp430f2111\",0,0 },\n+    { \"msp430f2112\",0,0 },\n+    { \"msp430f2121\",0,0 },\n+    { \"msp430f2122\",0,0 },\n+    { \"msp430f2131\",0,0 },\n+    { \"msp430f2132\",0,0 },\n+    { \"msp430f2232\",0,0 },\n+    { \"msp430f2234\",0,0 },\n+    { \"msp430f2252\",0,0 },\n+    { \"msp430f2254\",0,0 },\n+    { \"msp430f2272\",0,0 },\n+    { \"msp430f2274\",0,0 },\n+    { \"msp430f233\",0,2 },\n+    { \"msp430f2330\",0,2 },\n+    { \"msp430f235\",0,2 },\n+    { \"msp430f2350\",0,2 },\n+    { \"msp430f2370\",0,2 },\n+    { \"msp430f2410\",0,2 },\n+    { \"msp430f2416\",1,2 },\n+    { \"msp430f2417\",1,2 },\n+    { \"msp430f2418\",1,2 },\n+    { \"msp430f2419\",1,2 },\n+    { \"msp430f247\",0,2 },\n+    { \"msp430f2471\",0,2 },\n+    { \"msp430f248\",0,2 },\n+    { \"msp430f2481\",0,2 },\n+    { \"msp430f249\",0,2 },\n+    { \"msp430f2491\",0,2 },\n+    { \"msp430f2616\",1,2 },\n+    { \"msp430f2617\",1,2 },\n+    { \"msp430f2618\",1,2 },\n+    { \"msp430f2619\",1,2 },\n+    { \"msp430f412\",0,0 },\n+    { \"msp430f413\",0,0 },\n+    { \"msp430f4132\",0,0 },\n+    { \"msp430f415\",0,0 },\n+    { \"msp430f4152\",0,0 },\n+    { \"msp430f417\",0,0 },\n+    { \"msp430f423\",0,1 },\n+    { \"msp430f423a\",0,1 },\n+    { \"msp430f425\",0,1 },\n+    { \"msp430f4250\",0,0 },\n+    { \"msp430f425a\",0,1 },\n+    { \"msp430f4260\",0,0 },\n+    { \"msp430f427\",0,1 },\n+    { \"msp430f4270\",0,0 },\n+    { \"msp430f427a\",0,1 },\n+    { \"msp430f435\",0,0 },\n+    { \"msp430f4351\",0,0 },\n+    { \"msp430f436\",0,0 },\n+    { \"msp430f4361\",0,0 },\n+    { \"msp430f437\",0,0 },\n+    { \"msp430f4371\",0,0 },\n+    { \"msp430f438\",0,0 },\n+    { \"msp430f439\",0,0 },\n+    { \"msp430f447\",0,1 },\n+    { \"msp430f448\",0,1 },\n+    { \"msp430f4481\",0,1 },\n+    { \"msp430f449\",0,1 },\n+    { \"msp430f4491\",0,1 },\n+    { \"msp430f4616\",1,1 },\n+    { \"msp430f46161\",1,1 },\n+    { \"msp430f4617\",1,1 },\n+    { \"msp430f46171\",1,1 },\n+    { \"msp430f4618\",1,1 },\n+    { \"msp430f46181\",1,1 },\n+    { \"msp430f4619\",1,1 },\n+    { \"msp430f46191\",1,1 },\n+    { \"msp430f47126\",1,4 },\n+    { \"msp430f47127\",1,4 },\n+    { \"msp430f47163\",1,4 },\n+    { \"msp430f47166\",1,4 },\n+    { \"msp430f47167\",1,4 },\n+    { \"msp430f47173\",1,4 },\n+    { \"msp430f47176\",1,4 },\n+    { \"msp430f47177\",1,4 },\n+    { \"msp430f47183\",1,4 },\n+    { \"msp430f47186\",1,4 },\n+    { \"msp430f47187\",1,4 },\n+    { \"msp430f47193\",1,4 },\n+    { \"msp430f47196\",1,4 },\n+    { \"msp430f47197\",1,4 },\n+    { \"msp430f477\",0,0 },\n+    { \"msp430f478\",0,0 },\n+    { \"msp430f4783\",0,4 },\n+    { \"msp430f4784\",0,4 },\n+    { \"msp430f479\",0,0 },\n+    { \"msp430f4793\",0,4 },\n+    { \"msp430f4794\",0,4 },\n+    { \"msp430f5131\",2,8 },\n+    { \"msp430f5132\",2,8 },\n+    { \"msp430f5151\",2,8 },\n+    { \"msp430f5152\",2,8 },\n+    { \"msp430f5171\",2,8 },\n+    { \"msp430f5172\",2,8 },\n+    { \"msp430f5212\",2,8 },\n+    { \"msp430f5213\",2,8 },\n+    { \"msp430f5214\",2,8 },\n+    { \"msp430f5217\",2,8 },\n+    { \"msp430f5218\",2,8 },\n+    { \"msp430f5219\",2,8 },\n+    { \"msp430f5222\",2,8 },\n+    { \"msp430f5223\",2,8 },\n+    { \"msp430f5224\",2,8 },\n+    { \"msp430f5227\",2,8 },\n+    { \"msp430f5228\",2,8 },\n+    { \"msp430f5229\",2,8 },\n+    { \"msp430f5232\",2,8 },\n+    { \"msp430f5234\",2,8 },\n+    { \"msp430f5237\",2,8 },\n+    { \"msp430f5239\",2,8 },\n+    { \"msp430f5242\",2,8 },\n+    { \"msp430f5244\",2,8 },\n+    { \"msp430f5247\",2,8 },\n+    { \"msp430f5249\",2,8 },\n+    { \"msp430f5252\",2,8 },\n+    { \"msp430f5253\",2,8 },\n+    { \"msp430f5254\",2,8 },\n+    { \"msp430f5255\",2,8 },\n+    { \"msp430f5256\",2,8 },\n+    { \"msp430f5257\",2,8 },\n+    { \"msp430f5258\",2,8 },\n+    { \"msp430f5259\",2,8 },\n+    { \"msp430f5304\",2,8 },\n+    { \"msp430f5308\",2,8 },\n+    { \"msp430f5309\",2,8 },\n+    { \"msp430f5310\",2,8 },\n+    { \"msp430f5324\",2,8 },\n+    { \"msp430f5325\",2,8 },\n+    { \"msp430f5326\",2,8 },\n+    { \"msp430f5327\",2,8 },\n+    { \"msp430f5328\",2,8 },\n+    { \"msp430f5329\",2,8 },\n+    { \"msp430f5333\",2,8 },\n+    { \"msp430f5335\",2,8 },\n+    { \"msp430f5336\",2,8 },\n+    { \"msp430f5338\",2,8 },\n+    { \"msp430f5340\",2,8 },\n+    { \"msp430f5341\",2,8 },\n+    { \"msp430f5342\",2,8 },\n+    { \"msp430f5358\",2,8 },\n+    { \"msp430f5359\",2,8 },\n+    { \"msp430f5418\",2,8 },\n+    { \"msp430f5418a\",2,8 },\n+    { \"msp430f5419\",2,8 },\n+    { \"msp430f5419a\",2,8 },\n+    { \"msp430f5435\",2,8 },\n+    { \"msp430f5435a\",2,8 },\n+    { \"msp430f5436\",2,8 },\n+    { \"msp430f5436a\",2,8 },\n+    { \"msp430f5437\",2,8 },\n+    { \"msp430f5437a\",2,8 },\n+    { \"msp430f5438\",2,8 },\n+    { \"msp430f5438a\",2,8 },\n+    { \"msp430f5500\",2,8 },\n+    { \"msp430f5501\",2,8 },\n+    { \"msp430f5502\",2,8 },\n+    { \"msp430f5503\",2,8 },\n+    { \"msp430f5504\",2,8 },\n+    { \"msp430f5505\",2,8 },\n+    { \"msp430f5506\",2,8 },\n+    { \"msp430f5507\",2,8 },\n+    { \"msp430f5508\",2,8 },\n+    { \"msp430f5509\",2,8 },\n+    { \"msp430f5510\",2,8 },\n+    { \"msp430f5513\",2,8 },\n+    { \"msp430f5514\",2,8 },\n+    { \"msp430f5515\",2,8 },\n+    { \"msp430f5517\",2,8 },\n+    { \"msp430f5519\",2,8 },\n+    { \"msp430f5521\",2,8 },\n+    { \"msp430f5522\",2,8 },\n+    { \"msp430f5524\",2,8 },\n+    { \"msp430f5525\",2,8 },\n+    { \"msp430f5526\",2,8 },\n+    { \"msp430f5527\",2,8 },\n+    { \"msp430f5528\",2,8 },\n+    { \"msp430f5529\",2,8 },\n+    { \"msp430f5630\",2,8 },\n+    { \"msp430f5631\",2,8 },\n+    { \"msp430f5632\",2,8 },\n+    { \"msp430f5633\",2,8 },\n+    { \"msp430f5634\",2,8 },\n+    { \"msp430f5635\",2,8 },\n+    { \"msp430f5636\",2,8 },\n+    { \"msp430f5637\",2,8 },\n+    { \"msp430f5638\",2,8 },\n+    { \"msp430f5658\",2,8 },\n+    { \"msp430f5659\",2,8 },\n+    { \"msp430f5xx_6xxgeneric\",2,8 },\n+    { \"msp430f6433\",2,8 },\n+    { \"msp430f6435\",2,8 },\n+    { \"msp430f6436\",2,8 },\n+    { \"msp430f6438\",2,8 },\n+    { \"msp430f6458\",2,8 },\n+    { \"msp430f6459\",2,8 },\n+    { \"msp430f6630\",2,8 },\n+    { \"msp430f6631\",2,8 },\n+    { \"msp430f6632\",2,8 },\n+    { \"msp430f6633\",2,8 },\n+    { \"msp430f6634\",2,8 },\n+    { \"msp430f6635\",2,8 },\n+    { \"msp430f6636\",2,8 },\n+    { \"msp430f6637\",2,8 },\n+    { \"msp430f6638\",2,8 },\n+    { \"msp430f6658\",2,8 },\n+    { \"msp430f6659\",2,8 },\n+    { \"msp430f6720\",2,8 },\n+    { \"msp430f6720a\",2,8 },\n+    { \"msp430f6721\",2,8 },\n+    { \"msp430f6721a\",2,8 },\n+    { \"msp430f6723\",2,8 },\n+    { \"msp430f6723a\",2,8 },\n+    { \"msp430f6724\",2,8 },\n+    { \"msp430f6724a\",2,8 },\n+    { \"msp430f6725\",2,8 },\n+    { \"msp430f6725a\",2,8 },\n+    { \"msp430f6726\",2,8 },\n+    { \"msp430f6726a\",2,8 },\n+    { \"msp430f6730\",2,8 },\n+    { \"msp430f6730a\",2,8 },\n+    { \"msp430f6731\",2,8 },\n+    { \"msp430f6731a\",2,8 },\n+    { \"msp430f6733\",2,8 },\n+    { \"msp430f6733a\",2,8 },\n+    { \"msp430f6734\",2,8 },\n+    { \"msp430f6734a\",2,8 },\n+    { \"msp430f6735\",2,8 },\n+    { \"msp430f6735a\",2,8 },\n+    { \"msp430f6736\",2,8 },\n+    { \"msp430f6736a\",2,8 },\n+    { \"msp430f6745\",2,8 },\n+    { \"msp430f67451\",2,8 },\n+    { \"msp430f67451a\",2,8 },\n+    { \"msp430f6745a\",2,8 },\n+    { \"msp430f6746\",2,8 },\n+    { \"msp430f67461\",2,8 },\n+    { \"msp430f67461a\",2,8 },\n+    { \"msp430f6746a\",2,8 },\n+    { \"msp430f6747\",2,8 },\n+    { \"msp430f67471\",2,8 },\n+    { \"msp430f67471a\",2,8 },\n+    { \"msp430f6747a\",2,8 },\n+    { \"msp430f6748\",2,8 },\n+    { \"msp430f67481\",2,8 },\n+    { \"msp430f67481a\",2,8 },\n+    { \"msp430f6748a\",2,8 },\n+    { \"msp430f6749\",2,8 },\n+    { \"msp430f67491\",2,8 },\n+    { \"msp430f67491a\",2,8 },\n+    { \"msp430f6749a\",2,8 },\n+    { \"msp430f67621\",2,8 },\n+    { \"msp430f67621a\",2,8 },\n+    { \"msp430f67641\",2,8 },\n+    { \"msp430f67641a\",2,8 },\n+    { \"msp430f6765\",2,8 },\n+    { \"msp430f67651\",2,8 },\n+    { \"msp430f67651a\",2,8 },\n+    { \"msp430f6765a\",2,8 },\n+    { \"msp430f6766\",2,8 },\n+    { \"msp430f67661\",2,8 },\n+    { \"msp430f67661a\",2,8 },\n+    { \"msp430f6766a\",2,8 },\n+    { \"msp430f6767\",2,8 },\n+    { \"msp430f67671\",2,8 },\n+    { \"msp430f67671a\",2,8 },\n+    { \"msp430f6767a\",2,8 },\n+    { \"msp430f6768\",2,8 },\n+    { \"msp430f67681\",2,8 },\n+    { \"msp430f67681a\",2,8 },\n+    { \"msp430f6768a\",2,8 },\n+    { \"msp430f6769\",2,8 },\n+    { \"msp430f67691\",2,8 },\n+    { \"msp430f67691a\",2,8 },\n+    { \"msp430f6769a\",2,8 },\n+    { \"msp430f6775\",2,8 },\n+    { \"msp430f67751\",2,8 },\n+    { \"msp430f67751a\",2,8 },\n+    { \"msp430f6775a\",2,8 },\n+    { \"msp430f6776\",2,8 },\n+    { \"msp430f67761\",2,8 },\n+    { \"msp430f67761a\",2,8 },\n+    { \"msp430f6776a\",2,8 },\n+    { \"msp430f6777\",2,8 },\n+    { \"msp430f67771\",2,8 },\n+    { \"msp430f67771a\",2,8 },\n+    { \"msp430f6777a\",2,8 },\n+    { \"msp430f6778\",2,8 },\n+    { \"msp430f67781\",2,8 },\n+    { \"msp430f67781a\",2,8 },\n+    { \"msp430f6778a\",2,8 },\n+    { \"msp430f6779\",2,8 },\n+    { \"msp430f67791\",2,8 },\n+    { \"msp430f67791a\",2,8 },\n+    { \"msp430f6779a\",2,8 },\n+    { \"msp430fe423\",0,0 },\n+    { \"msp430fe4232\",0,0 },\n+    { \"msp430fe423a\",0,0 },\n+    { \"msp430fe4242\",0,0 },\n+    { \"msp430fe425\",0,0 },\n+    { \"msp430fe4252\",0,0 },\n+    { \"msp430fe425a\",0,0 },\n+    { \"msp430fe427\",0,0 },\n+    { \"msp430fe4272\",0,0 },\n+    { \"msp430fe427a\",0,0 },\n+    { \"msp430fg4250\",0,0 },\n+    { \"msp430fg4260\",0,0 },\n+    { \"msp430fg4270\",0,0 },\n+    { \"msp430fg437\",0,0 },\n+    { \"msp430fg438\",0,0 },\n+    { \"msp430fg439\",0,0 },\n+    { \"msp430fg4616\",1,1 },\n+    { \"msp430fg4617\",1,1 },\n+    { \"msp430fg4618\",1,1 },\n+    { \"msp430fg4619\",1,1 },\n+    { \"msp430fg477\",0,0 },\n+    { \"msp430fg478\",0,0 },\n+    { \"msp430fg479\",0,0 },\n+    { \"msp430fg6425\",2,8 },\n+    { \"msp430fg6426\",2,8 },\n+    { \"msp430fg6625\",2,8 },\n+    { \"msp430fg6626\",2,8 },\n+    { \"msp430fr2032\",2,0 },\n+    { \"msp430fr2033\",2,0 },\n+    { \"msp430fr2110\",2,0 },\n+    { \"msp430fr2111\",2,0 },\n+    { \"msp430fr2310\",2,0 },\n+    { \"msp430fr2311\",2,0 },\n+    { \"msp430fr2433\",2,8 },\n+    { \"msp430fr2532\",2,8 },\n+    { \"msp430fr2533\",2,8 },\n+    { \"msp430fr2632\",2,8 },\n+    { \"msp430fr2633\",2,8 },\n+    { \"msp430fr2xx_4xxgeneric\",2,8 },\n+    { \"msp430fr4131\",2,0 },\n+    { \"msp430fr4132\",2,0 },\n+    { \"msp430fr4133\",2,0 },\n+    { \"msp430fr5720\",2,8 },\n+    { \"msp430fr5721\",2,8 },\n+    { \"msp430fr5722\",2,8 },\n+    { \"msp430fr5723\",2,8 },\n+    { \"msp430fr5724\",2,8 },\n+    { \"msp430fr5725\",2,8 },\n+    { \"msp430fr5726\",2,8 },\n+    { \"msp430fr5727\",2,8 },\n+    { \"msp430fr5728\",2,8 },\n+    { \"msp430fr5729\",2,8 },\n+    { \"msp430fr5730\",2,8 },\n+    { \"msp430fr5731\",2,8 },\n+    { \"msp430fr5732\",2,8 },\n+    { \"msp430fr5733\",2,8 },\n+    { \"msp430fr5734\",2,8 },\n+    { \"msp430fr5735\",2,8 },\n+    { \"msp430fr5736\",2,8 },\n+    { \"msp430fr5737\",2,8 },\n+    { \"msp430fr5738\",2,8 },\n+    { \"msp430fr5739\",2,8 },\n+    { \"msp430fr57xxgeneric\",2,8 },\n+    { \"msp430fr5847\",2,8 },\n+    { \"msp430fr58471\",2,8 },\n+    { \"msp430fr5848\",2,8 },\n+    { \"msp430fr5849\",2,8 },\n+    { \"msp430fr5857\",2,8 },\n+    { \"msp430fr5858\",2,8 },\n+    { \"msp430fr5859\",2,8 },\n+    { \"msp430fr5867\",2,8 },\n+    { \"msp430fr58671\",2,8 },\n+    { \"msp430fr5868\",2,8 },\n+    { \"msp430fr5869\",2,8 },\n+    { \"msp430fr5870\",2,8 },\n+    { \"msp430fr5872\",2,8 },\n+    { \"msp430fr58721\",2,8 },\n+    { \"msp430fr5887\",2,8 },\n+    { \"msp430fr5888\",2,8 },\n+    { \"msp430fr5889\",2,8 },\n+    { \"msp430fr58891\",2,8 },\n+    { \"msp430fr5922\",2,8 },\n+    { \"msp430fr59221\",2,8 },\n+    { \"msp430fr5947\",2,8 },\n+    { \"msp430fr59471\",2,8 },\n+    { \"msp430fr5948\",2,8 },\n+    { \"msp430fr5949\",2,8 },\n+    { \"msp430fr5957\",2,8 },\n+    { \"msp430fr5958\",2,8 },\n+    { \"msp430fr5959\",2,8 },\n+    { \"msp430fr5962\",2,8 },\n+    { \"msp430fr5964\",2,8 },\n+    { \"msp430fr5967\",2,8 },\n+    { \"msp430fr5968\",2,8 },\n+    { \"msp430fr5969\",2,8 },\n+    { \"msp430fr59691\",2,8 },\n+    { \"msp430fr5970\",2,8 },\n+    { \"msp430fr5972\",2,8 },\n+    { \"msp430fr59721\",2,8 },\n+    { \"msp430fr5986\",2,8 },\n+    { \"msp430fr5987\",2,8 },\n+    { \"msp430fr5988\",2,8 },\n+    { \"msp430fr5989\",2,8 },\n+    { \"msp430fr59891\",2,8 },\n+    { \"msp430fr5992\",2,8 },\n+    { \"msp430fr5994\",2,8 },\n+    { \"msp430fr59941\",2,8 },\n+    { \"msp430fr5xx_6xxgeneric\",2,8 },\n+    { \"msp430fr6820\",2,8 },\n+    { \"msp430fr6822\",2,8 },\n+    { \"msp430fr68221\",2,8 },\n+    { \"msp430fr6870\",2,8 },\n+    { \"msp430fr6872\",2,8 },\n+    { \"msp430fr68721\",2,8 },\n+    { \"msp430fr6877\",2,8 },\n+    { \"msp430fr6879\",2,8 },\n+    { \"msp430fr68791\",2,8 },\n+    { \"msp430fr6887\",2,8 },\n+    { \"msp430fr6888\",2,8 },\n+    { \"msp430fr6889\",2,8 },\n+    { \"msp430fr68891\",2,8 },\n+    { \"msp430fr6920\",2,8 },\n+    { \"msp430fr6922\",2,8 },\n+    { \"msp430fr69221\",2,8 },\n+    { \"msp430fr6927\",2,8 },\n+    { \"msp430fr69271\",2,8 },\n+    { \"msp430fr6928\",2,8 },\n+    { \"msp430fr6970\",2,8 },\n+    { \"msp430fr6972\",2,8 },\n+    { \"msp430fr69721\",2,8 },\n+    { \"msp430fr6977\",2,8 },\n+    { \"msp430fr6979\",2,8 },\n+    { \"msp430fr69791\",2,8 },\n+    { \"msp430fr6987\",2,8 },\n+    { \"msp430fr6988\",2,8 },\n+    { \"msp430fr6989\",2,8 },\n+    { \"msp430fr69891\",2,8 },\n+    { \"msp430fw423\",0,0 },\n+    { \"msp430fw425\",0,0 },\n+    { \"msp430fw427\",0,0 },\n+    { \"msp430fw428\",0,0 },\n+    { \"msp430fw429\",0,0 },\n+    { \"msp430g2001\",0,0 },\n+    { \"msp430g2101\",0,0 },\n+    { \"msp430g2102\",0,0 },\n+    { \"msp430g2111\",0,0 },\n+    { \"msp430g2112\",0,0 },\n+    { \"msp430g2113\",0,0 },\n+    { \"msp430g2121\",0,0 },\n+    { \"msp430g2131\",0,0 },\n+    { \"msp430g2132\",0,0 },\n+    { \"msp430g2152\",0,0 },\n+    { \"msp430g2153\",0,0 },\n+    { \"msp430g2201\",0,0 },\n+    { \"msp430g2202\",0,0 },\n+    { \"msp430g2203\",0,0 },\n+    { \"msp430g2210\",0,0 },\n+    { \"msp430g2211\",0,0 },\n+    { \"msp430g2212\",0,0 },\n+    { \"msp430g2213\",0,0 },\n+    { \"msp430g2221\",0,0 },\n+    { \"msp430g2230\",0,0 },\n+    { \"msp430g2231\",0,0 },\n+    { \"msp430g2232\",0,0 },\n+    { \"msp430g2233\",0,0 },\n+    { \"msp430g2252\",0,0 },\n+    { \"msp430g2253\",0,0 },\n+    { \"msp430g2302\",0,0 },\n+    { \"msp430g2303\",0,0 },\n+    { \"msp430g2312\",0,0 },\n+    { \"msp430g2313\",0,0 },\n+    { \"msp430g2332\",0,0 },\n+    { \"msp430g2333\",0,0 },\n+    { \"msp430g2352\",0,0 },\n+    { \"msp430g2353\",0,0 },\n+    { \"msp430g2402\",0,0 },\n+    { \"msp430g2403\",0,0 },\n+    { \"msp430g2412\",0,0 },\n+    { \"msp430g2413\",0,0 },\n+    { \"msp430g2432\",0,0 },\n+    { \"msp430g2433\",0,0 },\n+    { \"msp430g2444\",0,0 },\n+    { \"msp430g2452\",0,0 },\n+    { \"msp430g2453\",0,0 },\n+    { \"msp430g2513\",0,0 },\n+    { \"msp430g2533\",0,0 },\n+    { \"msp430g2544\",0,0 },\n+    { \"msp430g2553\",0,0 },\n+    { \"msp430g2744\",0,0 },\n+    { \"msp430g2755\",0,0 },\n+    { \"msp430g2855\",0,0 },\n+    { \"msp430g2955\",0,0 },\n+    { \"msp430i2020\",0,2 },\n+    { \"msp430i2021\",0,2 },\n+    { \"msp430i2030\",0,2 },\n+    { \"msp430i2031\",0,2 },\n+    { \"msp430i2040\",0,2 },\n+    { \"msp430i2041\",0,2 },\n+    { \"msp430i2xxgeneric\",0,2 },\n+    { \"msp430l092\",0,0 },\n+    { \"msp430p112\",0,0 },\n+    { \"msp430p313\",0,0 },\n+    { \"msp430p315\",0,0 },\n+    { \"msp430p315s\",0,0 },\n+    { \"msp430p325\",0,0 },\n+    { \"msp430p337\",0,1 },\n+    { \"msp430sl5438a\",2,8 },\n+    { \"msp430tch5e\",0,0 },\n+    { \"msp430xgeneric\",2,8 },\n+    { \"rf430f5144\",2,8 },\n+    { \"rf430f5155\",2,8 },\n+    { \"rf430f5175\",2,8 },\n+    { \"rf430frl152h\",0,0 },\n+    { \"rf430frl152h_rom\",0,0 },\n+    { \"rf430frl153h\",0,0 },\n+    { \"rf430frl153h_rom\",0,0 },\n+    { \"rf430frl154h\",0,0 },\n+    { \"rf430frl154h_rom\",0,0 }\n+  };"}, {"sha": "164700651e09fc8220cb9e12c065c27c15e9e679", "filename": "gcc/config/msp430/msp430.c", "status": "modified", "additions": 199, "deletions": 202, "changes": 401, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81a8845cc0797ed494d6c138049bb015a29ed5d4/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81a8845cc0797ed494d6c138049bb015a29ed5d4/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.c?ref=81a8845cc0797ed494d6c138049bb015a29ed5d4", "patch": "@@ -64,7 +64,7 @@ struct GTY(()) machine_function\n   /* If set, the rest of the fields have been computed.  */\n   int computed;\n   /* Which registers need to be saved in the pro/epilogue.  */\n-  int need_to_save [FIRST_PSEUDO_REGISTER];\n+  int need_to_save[FIRST_PSEUDO_REGISTER];\n \n   /* These fields describe the frame layout...  */\n   /* arg pointer */\n@@ -149,8 +149,8 @@ hwmult_name (unsigned int val)\n static void\n msp430_option_override (void)\n {\n-  /* The MSP430 architecture can safely dereference a NULL pointer. In fact,\n-  there are memory mapped registers there.  */\n+  /* The MSP430 architecture can safely dereference a NULL pointer.  In fact,\n+     there are memory mapped registers there.  */\n   flag_delete_null_pointer_checks = 0;\n \n   init_machine_status = msp430_init_machine_status;\n@@ -169,44 +169,44 @@ msp430_option_override (void)\n     {\n       msp430_extract_mcu_data (target_mcu);\n \n-\tif (extracted_mcu_data.name != NULL)\n-\t  {\n-\t    bool xisa = extracted_mcu_data.revision >= 1;\n+      if (extracted_mcu_data.name != NULL)\n+\t{\n+\t  bool xisa = extracted_mcu_data.revision >= 1;\n \n-\t    if (msp430_warn_mcu)\n-\t      {\n-\t\tif (target_cpu && msp430x != xisa)\n-\t\t  warning (0, \"MCU %qs supports %s ISA but %<-mcpu%> option \"\n-\t\t\t   \"is set to %s\",\n-\t\t\t   target_mcu, xisa ? \"430X\" : \"430\", msp430x ? \"430X\" : \"430\");\n-\n-\t\tif (extracted_mcu_data.hwmpy == 0\n-\t\t    && msp430_hwmult_type != MSP430_HWMULT_AUTO\n-\t\t    && msp430_hwmult_type != MSP430_HWMULT_NONE)\n-\t\t  warning (0, \"MCU %qs does not have hardware multiply \"\n-\t\t\t   \"support, but %<-mhwmult%> is set to %s\",\n-\t\t\t   target_mcu,\n-\t\t\t   msp430_hwmult_type == MSP430_HWMULT_SMALL ? \"16-bit\"\n-\t\t\t   : msp430_hwmult_type == MSP430_HWMULT_LARGE ? \"32-bit\" : \"f5series\");\n-\t\telse if (msp430_hwmult_type == MSP430_HWMULT_SMALL\n-\t\t    && extracted_mcu_data.hwmpy != 1\n-\t\t    && extracted_mcu_data.hwmpy != 2)\n-\t\t  warning (0, \"MCU %qs supports %s hardware multiply, \"\n-\t\t\t   \"but %<-mhwmult%> is set to 16-bit\",\n-\t\t\t   target_mcu, hwmult_name (extracted_mcu_data.hwmpy));\n-\t\telse if (msp430_hwmult_type == MSP430_HWMULT_LARGE\n-\t\t\t && extracted_mcu_data.hwmpy != 4)\n-\t\t  warning (0, \"MCU %qs supports %s hardware multiply, \"\n-\t\t\t   \"but %<-mhwmult%> is set to 32-bit\",\n-\t\t\t   target_mcu, hwmult_name (extracted_mcu_data.hwmpy));\n-\t\telse if (msp430_hwmult_type == MSP430_HWMULT_F5SERIES\n-\t\t\t && extracted_mcu_data.hwmpy != 8)\n-\t\t  warning (0, \"MCU %qs supports %s hardware multiply, \"\n-\t\t\t   \"but %<-mhwmult%> is set to f5series\",\n-\t\t\t   target_mcu, hwmult_name (extracted_mcu_data.hwmpy));\n-\t      }\n-\t    msp430x = xisa;\n-\t  }\n+\t  if (msp430_warn_mcu)\n+\t    {\n+\t      if (target_cpu && msp430x != xisa)\n+\t\twarning (0, \"MCU %qs supports %s ISA but %<-mcpu%> option \"\n+\t\t\t \"is set to %s\",\n+\t\t\t target_mcu, xisa ? \"430X\" : \"430\", msp430x ? \"430X\" : \"430\");\n+\n+\t      if (extracted_mcu_data.hwmpy == 0\n+\t\t  && msp430_hwmult_type != MSP430_HWMULT_AUTO\n+\t\t  && msp430_hwmult_type != MSP430_HWMULT_NONE)\n+\t\twarning (0, \"MCU %qs does not have hardware multiply \"\n+\t\t\t \"support, but %<-mhwmult%> is set to %s\",\n+\t\t\t target_mcu,\n+\t\t\t msp430_hwmult_type == MSP430_HWMULT_SMALL ? \"16-bit\"\n+\t\t\t : msp430_hwmult_type == MSP430_HWMULT_LARGE ? \"32-bit\" : \"f5series\");\n+\t      else if (msp430_hwmult_type == MSP430_HWMULT_SMALL\n+\t\t       && extracted_mcu_data.hwmpy != 1\n+\t\t       && extracted_mcu_data.hwmpy != 2)\n+\t\twarning (0, \"MCU %qs supports %s hardware multiply, \"\n+\t\t\t \"but %<-mhwmult%> is set to 16-bit\",\n+\t\t\t target_mcu, hwmult_name (extracted_mcu_data.hwmpy));\n+\t      else if (msp430_hwmult_type == MSP430_HWMULT_LARGE\n+\t\t       && extracted_mcu_data.hwmpy != 4)\n+\t\twarning (0, \"MCU %qs supports %s hardware multiply, \"\n+\t\t\t \"but %<-mhwmult%> is set to 32-bit\",\n+\t\t\t target_mcu, hwmult_name (extracted_mcu_data.hwmpy));\n+\t      else if (msp430_hwmult_type == MSP430_HWMULT_F5SERIES\n+\t\t       && extracted_mcu_data.hwmpy != 8)\n+\t\twarning (0, \"MCU %qs supports %s hardware multiply, \"\n+\t\t\t \"but %<-mhwmult%> is set to f5series\",\n+\t\t\t target_mcu, hwmult_name (extracted_mcu_data.hwmpy));\n+\t    }\n+\t  msp430x = xisa;\n+\t}\n       else\n \t{\n \t  if (msp430_hwmult_type == MSP430_HWMULT_AUTO)\n@@ -348,7 +348,7 @@ msp430_hard_regno_nregs_has_padding (int regno ATTRIBUTE_UNUSED,\n /* Implements HARD_REGNO_NREGS_WITH_PADDING.  */\n int\n msp430_hard_regno_nregs_with_padding (int regno ATTRIBUTE_UNUSED,\n-\t\t\t\t     machine_mode mode)\n+\t\t\t\t      machine_mode mode)\n {\n   if (mode == PSImode)\n     return 2;\n@@ -421,7 +421,7 @@ msp430_initial_elimination_offset (int from, int to)\n       /* Allow for the saved return address.  */\n       rv += (TARGET_LARGE ? 4 : 2);\n       /* NB/ No need to allow for crtl->args.pretend_args_size.\n-         GCC does that for us.  */\n+\t GCC does that for us.  */\n       break;\n     default:\n       gcc_unreachable ();\n@@ -531,7 +531,7 @@ msp430_addr_space_convert (rtx op, tree from_type, tree to_type)\n \n /* For each function, we list the gcc version and the TI version on\n    each line, where we're converting the function names.  */\n-static char const * const special_convention_function_names [] =\n+static char const * const special_convention_function_names[] =\n {\n   \"__muldi3\", \"__mspabi_mpyll\",\n   \"__udivdi3\", \"__mspabi_divull\",\n@@ -556,8 +556,8 @@ msp430_special_register_convention_p (const char *name)\n {\n   int i;\n \n-  for (i = 0; special_convention_function_names [i]; i++)\n-    if (! strcmp (name, special_convention_function_names [i]))\n+  for (i = 0; special_convention_function_names[i]; i++)\n+    if (!strcmp (name, special_convention_function_names[i]))\n       return true;\n \n   return false;\n@@ -653,7 +653,7 @@ msp430_evaluate_arg (cumulative_args_t cap,\n     {\n     case 1:\n       for (i = 0; i < 4; i++)\n-\tif (! ca->reg_used [i])\n+\tif (!ca->reg_used[i])\n \t  {\n \t    ca->reg_count = 1;\n \t    ca->start_reg = CA_FIRST_REG + i;\n@@ -662,13 +662,13 @@ msp430_evaluate_arg (cumulative_args_t cap,\n       break;\n     case 2:\n       for (i = 0; i < 3; i++)\n-\tif (! ca->reg_used [i] && ! ca->reg_used [i + 1])\n+\tif (!ca->reg_used[i] && !ca->reg_used[i + 1])\n \t  {\n \t    ca->reg_count = 2;\n \t    ca->start_reg = CA_FIRST_REG + i;\n \t    return;\n \t  }\n-      if (! ca->reg_used [3] && ca->can_split)\n+      if (!ca->reg_used[3] && ca->can_split)\n \t{\n \t  ca->reg_count = 1;\n \t  ca->mem_count = 2;\n@@ -679,10 +679,10 @@ msp430_evaluate_arg (cumulative_args_t cap,\n     case 3:\n     case 4:\n       ca->can_split = 0;\n-      if (! ca->reg_used [0]\n-\t  && ! ca->reg_used [1]\n-\t  && ! ca->reg_used [2]\n-\t  && ! ca->reg_used [3])\n+      if (!ca->reg_used[0]\n+\t  && !ca->reg_used[1]\n+\t  && !ca->reg_used[2]\n+\t  && !ca->reg_used[3])\n \t{\n \t  ca->reg_count = 4;\n \t  ca->start_reg = CA_FIRST_REG;\n@@ -758,9 +758,9 @@ msp430_pass_by_reference (cumulative_args_t cap ATTRIBUTE_UNUSED,\n \n static bool\n msp430_callee_copies (cumulative_args_t cap ATTRIBUTE_UNUSED,\n-                     machine_mode mode ATTRIBUTE_UNUSED,\n-                     const_tree type ATTRIBUTE_UNUSED,\n-                     bool named ATTRIBUTE_UNUSED)\n+\t\t      machine_mode mode ATTRIBUTE_UNUSED,\n+\t\t      const_tree type ATTRIBUTE_UNUSED,\n+\t\t      bool named ATTRIBUTE_UNUSED)\n {\n   return true;\n }\n@@ -781,7 +781,7 @@ msp430_function_arg_advance (cumulative_args_t cap,\n \n   if (ca->start_reg >= CA_FIRST_REG)\n     for (i = 0; i < ca->reg_count; i ++)\n-      ca->reg_used [i + ca->start_reg - CA_FIRST_REG] = 1;\n+      ca->reg_used[i + ca->start_reg - CA_FIRST_REG] = 1;\n \n   ca->special_p = 0;\n }\n@@ -845,7 +845,7 @@ msp430_get_raw_result_mode (int regno ATTRIBUTE_UNUSED)\n \n static tree\n msp430_gimplify_va_arg_expr (tree valist, tree type, gimple_seq *pre_p,\n-\t\t\t  gimple_seq *post_p)\n+\t\t\t     gimple_seq *post_p)\n {\n   tree addr, t, type_size, rounded_size, valist_tmp;\n   unsigned HOST_WIDE_INT align, boundary;\n@@ -942,7 +942,7 @@ reg_ok_for_addr (rtx r, bool strict)\n   int rn = REGNO (r);\n \n   if (strict && rn >= FIRST_PSEUDO_REGISTER)\n-    rn = reg_renumber [rn];\n+    rn = reg_renumber[rn];\n   if (strict && 0 <= rn && rn < FIRST_PSEUDO_REGISTER)\n     return true;\n   if (!strict)\n@@ -1036,7 +1036,7 @@ msp430_asm_integer (rtx x, unsigned int size, int aligned_p)\n static bool\n msp430_asm_output_addr_const_extra (FILE *file ATTRIBUTE_UNUSED, rtx x)\n {\n-  debug_rtx(x);\n+  debug_rtx (x);\n   return false;\n }\n \n@@ -1146,7 +1146,7 @@ msp430_preserve_reg_p (int regno)\n     return true;\n \n   /* Shouldn't be more than the above, but just in case...  */\n-  if (fixed_regs [regno])\n+  if (fixed_regs[regno])\n     return false;\n \n   /* For interrupt functions we must save and restore the used regs that\n@@ -1163,7 +1163,7 @@ msp430_preserve_reg_p (int regno)\n \treturn true;\n     }\n \n-  if (!call_used_regs [regno]\n+  if (!call_used_regs[regno]\n       && df_regs_ever_live_p (regno))\n     return true;\n \n@@ -1185,11 +1185,11 @@ msp430_compute_frame_info (void)\n   for (i = 0; i < ARG_POINTER_REGNUM; i ++)\n     if (msp430_preserve_reg_p (i))\n       {\n-\tcfun->machine->need_to_save [i] = 1;\n+\tcfun->machine->need_to_save[i] = 1;\n \tcfun->machine->framesize_regs += (TARGET_LARGE ? 4 : 2);\n       }\n     else\n-      cfun->machine->need_to_save [i] = 0;\n+      cfun->machine->need_to_save[i] = 0;\n \n   if ((cfun->machine->framesize_locals + cfun->machine->framesize_outgoing) & 1)\n     cfun->machine->framesize_locals ++;\n@@ -1264,7 +1264,7 @@ has_section_name (const char * name, tree decl = current_function_decl)\n   if (decl == NULL_TREE)\n     return false;\n   return (DECL_SECTION_NAME (decl)\n-    && (strcmp (name, DECL_SECTION_NAME (decl)) == 0));\n+\t  && (strcmp (name, DECL_SECTION_NAME (decl)) == 0));\n }\n \n #undef  TARGET_ALLOCATE_STACK_SLOTS_FOR_ARGS\n@@ -1390,7 +1390,7 @@ msp430_attr (tree * node,\n       warning (OPT_Wattributes, message, name);\n       * no_add_attrs = true;\n     }\n-    \n+\n   return NULL_TREE;\n }\n \n@@ -1448,7 +1448,7 @@ msp430_section_attr (tree * node,\n       warning (OPT_Wattributes, message, name);\n       * no_add_attrs = true;\n     }\n-    \n+\n   return NULL_TREE;\n }\n \n@@ -1494,7 +1494,7 @@ msp430_data_attr (tree * node,\n       warning (OPT_Wattributes, message, name);\n       * no_add_attrs = true;\n     }\n-    \n+\n   return NULL_TREE;\n }\n \n@@ -1504,28 +1504,27 @@ msp430_data_attr (tree * node,\n \n /* Table of MSP430-specific attributes.  */\n const struct attribute_spec msp430_attribute_table[] =\n-{\n-  /* Name        min_num_args     type_req,             handler\n-\t\t      max_num_args,     fn_type_req\t\texclude\n-                          decl_req               affects_type_identity.  */\n-  { ATTR_INTR,        0, 1, true,  false, false, false, msp430_attr, NULL },\n-  { ATTR_NAKED,       0, 0, true,  false, false, false, msp430_attr, NULL },\n-  { ATTR_REENT,       0, 0, true,  false, false, false, msp430_attr, NULL },\n-  { ATTR_CRIT,        0, 0, true,  false, false, false, msp430_attr, NULL },\n-  { ATTR_WAKEUP,      0, 0, true,  false, false, false, msp430_attr, NULL },\n-\n-  { ATTR_LOWER,       0, 0, true,  false, false, false, msp430_section_attr,\n-    NULL },\n-  { ATTR_UPPER,       0, 0, true,  false, false, false, msp430_section_attr,\n-    NULL },\n-  { ATTR_EITHER,      0, 0, true,  false, false, false, msp430_section_attr,\n-    NULL },\n-\n-  { ATTR_PERSIST,     0, 0, true,  false, false, false, msp430_data_attr,\n-    NULL },\n-\n-  { NULL,             0, 0, false, false, false, false, NULL,  NULL }\n-};\n+  {\n+    /* { name, min_num_args, max_num_args, decl_req, type_req, fn_type_req,\n+\t affects_type_identity, handler, exclude } */\n+    { ATTR_INTR,\t0, 1, true,  false, false, false, msp430_attr, NULL },\n+    { ATTR_NAKED,       0, 0, true,  false, false, false, msp430_attr, NULL },\n+    { ATTR_REENT,       0, 0, true,  false, false, false, msp430_attr, NULL },\n+    { ATTR_CRIT,\t0, 0, true,  false, false, false, msp430_attr, NULL },\n+    { ATTR_WAKEUP,      0, 0, true,  false, false, false, msp430_attr, NULL },\n+\n+    { ATTR_LOWER,       0, 0, true,  false, false, false, msp430_section_attr,\n+      NULL },\n+    { ATTR_UPPER,       0, 0, true,  false, false, false, msp430_section_attr,\n+      NULL },\n+    { ATTR_EITHER,      0, 0, true,  false, false, false, msp430_section_attr,\n+      NULL },\n+\n+    { ATTR_PERSIST,     0, 0, true,  false, false, false, msp430_data_attr,\n+      NULL },\n+\n+    { NULL,\t\t0, 0, false, false, false, false, NULL,  NULL }\n+  };\n \n #undef  TARGET_ASM_FUNCTION_PROLOGUE\n #define TARGET_ASM_FUNCTION_PROLOGUE\tmsp430_start_function\n@@ -1563,9 +1562,9 @@ msp430_start_function (FILE *outfile)\n   n = 0;\n   fprintf (outfile, \"; saved regs:\");\n   for (r = 0; r < ARG_POINTER_REGNUM; r++)\n-    if (cfun->machine->need_to_save [r])\n+    if (cfun->machine->need_to_save[r])\n       {\n-\tfprintf (outfile, \" %s\", reg_names [r]);\n+\tfprintf (outfile, \" %s\", reg_names[r]);\n \tn = 1;\n       }\n   if (n == 0)\n@@ -1644,7 +1643,7 @@ msp430_start_function (FILE *file, const char *name, tree decl)\n     }\n \n   switch_to_section (function_section (decl));\n-  ASM_OUTPUT_TYPE_DIRECTIVE(file, name, \"function\");\n+  ASM_OUTPUT_TYPE_DIRECTIVE (file, name, \"function\");\n   ASM_OUTPUT_FUNCTION_LABEL (file, name, decl);\n }\n \n@@ -1738,7 +1737,7 @@ msp430_select_section (tree decl, int reloc, unsigned HOST_WIDE_INT align)\n       || TREE_CODE (decl) == VECTOR_CST\n       || TREE_CODE (decl) == COMPLEX_CST)\n     return default_select_section (decl, reloc, align);\n-  \n+\n   /* In large mode we must make sure that interrupt handlers are put into\n      low memory as the vector table only accepts 16-bit addresses.  */\n   if (TARGET_LARGE && TREE_CODE (decl) == FUNCTION_DECL && is_interrupt_func (decl))\n@@ -1758,7 +1757,7 @@ msp430_select_section (tree decl, int reloc, unsigned HOST_WIDE_INT align)\n       else\n \treturn default_select_section (decl, reloc, align);\n     }\n-  \n+\n   const char * sec;\n   switch (categorize_decl_for_section (decl, reloc))\n     {\n@@ -1784,7 +1783,7 @@ msp430_select_section (tree decl, int reloc, unsigned HOST_WIDE_INT align)\n     default:\n       gcc_unreachable ();\n     }\n-  \n+\n   const char * dec_name = DECL_SECTION_NAME (decl);\n   char * name = ACONCAT ((prefix, sec, dec_name, NULL));\n \n@@ -1827,7 +1826,7 @@ msp430_section_type_flags (tree decl, const char * name, int reloc)\n     return SECTION_WRITE | SECTION_BSS | SECTION_NOTYPE;\n   else if (strcmp (name, \".persistent\") == 0)\n     return SECTION_WRITE | SECTION_NOTYPE;\n-  \n+\n   return default_section_type_flags (decl, name, reloc);\n }\n \n@@ -1856,8 +1855,7 @@ msp430_unique_section (tree decl, int reloc)\n       || TREE_CODE (decl) == INTEGER_CST\n       || TREE_CODE (decl) == VECTOR_CST\n       || TREE_CODE (decl) == COMPLEX_CST\n-      || (prefix = gen_prefix (decl)) == NULL\n-      )\n+      || (prefix = gen_prefix (decl)) == NULL)\n     return;\n \n   const char * dec_name = DECL_SECTION_NAME (decl);\n@@ -1871,11 +1869,11 @@ msp430_unique_section (tree decl, int reloc)\n    equivalent .bss section instead.  */\n \n void\n-msp430_output_aligned_decl_common (FILE *                 stream,\n-\t\t\t\t   const tree             decl,\n-\t\t\t\t   const char *           name,\n+msp430_output_aligned_decl_common (FILE *\t\t  stream,\n+\t\t\t\t   const tree\t\t  decl,\n+\t\t\t\t   const char *\t\t  name,\n \t\t\t\t   unsigned HOST_WIDE_INT size,\n-\t\t\t\t   unsigned int           align)\n+\t\t\t\t   unsigned int\t\t  align)\n {\n   if (msp430_data_region == MSP430_REGION_ANY)\n     {\n@@ -1933,7 +1931,7 @@ enum msp430_builtin\n   MSP430_BUILTIN_max\n };\n \n-static GTY(()) tree msp430_builtins [(int) MSP430_BUILTIN_max];\n+static GTY(()) tree msp430_builtins[(int) MSP430_BUILTIN_max];\n \n static void\n msp430_init_builtins (void)\n@@ -1943,15 +1941,15 @@ msp430_init_builtins (void)\n \n   msp430_builtins[MSP430_BUILTIN_BIC_SR] =\n     add_builtin_function ( \"__bic_SR_register_on_exit\", void_ftype_int,\n-\t\t\t   MSP430_BUILTIN_BIC_SR, BUILT_IN_MD, NULL, NULL_TREE);\n+\t\t\t  MSP430_BUILTIN_BIC_SR, BUILT_IN_MD, NULL, NULL_TREE);\n \n   msp430_builtins[MSP430_BUILTIN_BIS_SR] =\n     add_builtin_function ( \"__bis_SR_register_on_exit\", void_ftype_int,\n-\t\t\t   MSP430_BUILTIN_BIS_SR, BUILT_IN_MD, NULL, NULL_TREE);\n+\t\t\t  MSP430_BUILTIN_BIS_SR, BUILT_IN_MD, NULL, NULL_TREE);\n \n   msp430_builtins[MSP430_BUILTIN_DELAY_CYCLES] =\n     add_builtin_function ( \"__delay_cycles\", void_ftype_longlong,\n-\t\t\t   MSP430_BUILTIN_DELAY_CYCLES, BUILT_IN_MD, NULL, NULL_TREE);\n+\t\t\t  MSP430_BUILTIN_DELAY_CYCLES, BUILT_IN_MD, NULL, NULL_TREE);\n }\n \n static tree\n@@ -2184,7 +2182,7 @@ msp430_expand_prologue (void)\n     }\n \n   for (i = 15; i >= 4; i--)\n-    if (cfun->machine->need_to_save [i])\n+    if (cfun->machine->need_to_save[i])\n       {\n \tint seq, count;\n \trtx note;\n@@ -2223,7 +2221,7 @@ msp430_expand_prologue (void)\n \n \t\tXVECEXP (note, 0, j + 1) =\n \t\t  F (gen_rtx_SET (gen_rtx_MEM (Pmode, addr),\n-\t\t\t\t  gen_rtx_REG (Pmode, i - j)) );\n+\t\t\t\t  gen_rtx_REG (Pmode, i - j)));\n \t      }\n \n \t    add_reg_note (p, REG_FRAME_RELATED_EXPR, note);\n@@ -2258,16 +2256,16 @@ msp430_expand_epilogue (int is_eh)\n       return;\n     }\n \n-  if (cfun->machine->need_to_save [10])\n+  if (cfun->machine->need_to_save[10])\n     {\n       /* Check for a helper function.  */\n       helper_n = 7; /* For when the loop below never sees a match.  */\n       for (i = 9; i >= 4; i--)\n-\tif (!cfun->machine->need_to_save [i])\n+\tif (!cfun->machine->need_to_save[i])\n \t  {\n \t    helper_n = 10 - i;\n \t    for (; i >= 4; i--)\n-\t      if (cfun->machine->need_to_save [i])\n+\t      if (cfun->machine->need_to_save[i])\n \t\t{\n \t\t  helper_n = 0;\n \t\t  break;\n@@ -2311,7 +2309,7 @@ msp430_expand_epilogue (int is_eh)\n     }\n \n   for (i = 4; i <= 15; i++)\n-    if (cfun->machine->need_to_save [i])\n+    if (cfun->machine->need_to_save[i])\n       {\n \tint seq, count;\n \n@@ -2432,7 +2430,7 @@ static struct\n   int need_430x;\n   rtx (*genfunc)(rtx,rtx);\n }\n-  const_shift_helpers[] =\n+const_shift_helpers[] =\n {\n #define CSH(N,C,X,G) { \"__mspabi_\" N, C, X, gen_##G }\n \n@@ -2624,8 +2622,7 @@ msp430_split_movsi (rtx *operands)\n \t   /* Catch the case where we are loading (rN, rN+1) from mem (rN).  */\n \t   || (REG_P (op00) && reg_mentioned_p (op00, op10))\n \t   /* Or storing (rN) into mem (rN).  */\n-\t   || (REG_P (op10) && reg_mentioned_p (op10, op00))\n-\t   )\n+\t   || (REG_P (op10) && reg_mentioned_p (op10, op00)))\n     {\n       operands[2] = op02;\n       operands[4] = op12;\n@@ -2650,82 +2647,82 @@ static const struct\n   char const * const gcc_name;\n   char const * const ti_name;\n }\n-  helper_function_name_mappings [] =\n-{\n-  /* Floating point to/from integer conversions.  */\n-  { \"__truncdfsf2\", \"__mspabi_cvtdf\" },\n-  { \"__extendsfdf2\", \"__mspabi_cvtfd\" },\n-  { \"__fixdfhi\", \"__mspabi_fixdi\" },\n-  { \"__fixdfsi\", \"__mspabi_fixdli\" },\n-  { \"__fixdfdi\", \"__mspabi_fixdlli\" },\n-  { \"__fixunsdfhi\", \"__mspabi_fixdu\" },\n-  { \"__fixunsdfsi\", \"__mspabi_fixdul\" },\n-  { \"__fixunsdfdi\", \"__mspabi_fixdull\" },\n-  { \"__fixsfhi\", \"__mspabi_fixfi\" },\n-  { \"__fixsfsi\", \"__mspabi_fixfli\" },\n-  { \"__fixsfdi\", \"__mspabi_fixflli\" },\n-  { \"__fixunsfhi\", \"__mspabi_fixfu\" },\n-  { \"__fixunsfsi\", \"__mspabi_fixful\" },\n-  { \"__fixunsfdi\", \"__mspabi_fixfull\" },\n-  { \"__floathisf\", \"__mspabi_fltif\" },\n-  { \"__floatsisf\", \"__mspabi_fltlif\" },\n-  { \"__floatdisf\", \"__mspabi_fltllif\" },\n-  { \"__floathidf\", \"__mspabi_fltid\" },\n-  { \"__floatsidf\", \"__mspabi_fltlid\" },\n-  { \"__floatdidf\", \"__mspabi_fltllid\" },\n-  { \"__floatunhisf\", \"__mspabi_fltuf\" },\n-  { \"__floatunsisf\", \"__mspabi_fltulf\" },\n-  { \"__floatundisf\", \"__mspabi_fltullf\" },\n-  { \"__floatunhidf\", \"__mspabi_fltud\" },\n-  { \"__floatunsidf\", \"__mspabi_fltuld\" },\n-  { \"__floatundidf\", \"__mspabi_fltulld\" },\n-\n-  /* Floating point comparisons.  */\n-  /* GCC uses individual functions for each comparison, TI uses one\n-     compare <=> function.  */\n-\n-  /* Floating point arithmatic */\n-  { \"__adddf3\", \"__mspabi_addd\" },\n-  { \"__addsf3\", \"__mspabi_addf\" },\n-  { \"__divdf3\", \"__mspabi_divd\" },\n-  { \"__divsf3\", \"__mspabi_divf\" },\n-  { \"__muldf3\", \"__mspabi_mpyd\" },\n-  { \"__mulsf3\", \"__mspabi_mpyf\" },\n-  { \"__subdf3\", \"__mspabi_subd\" },\n-  { \"__subsf3\", \"__mspabi_subf\" },\n-  /* GCC does not use helper functions for negation */\n-\n-  /* Integer multiply, divide, remainder.  */\n-  { \"__mulhi3\", \"__mspabi_mpyi\" },\n-  { \"__mulsi3\", \"__mspabi_mpyl\" },\n-  { \"__muldi3\", \"__mspabi_mpyll\" },\n+helper_function_name_mappings[] =\n+  {\n+    /* Floating point to/from integer conversions.  */\n+    { \"__truncdfsf2\", \"__mspabi_cvtdf\" },\n+    { \"__extendsfdf2\", \"__mspabi_cvtfd\" },\n+    { \"__fixdfhi\", \"__mspabi_fixdi\" },\n+    { \"__fixdfsi\", \"__mspabi_fixdli\" },\n+    { \"__fixdfdi\", \"__mspabi_fixdlli\" },\n+    { \"__fixunsdfhi\", \"__mspabi_fixdu\" },\n+    { \"__fixunsdfsi\", \"__mspabi_fixdul\" },\n+    { \"__fixunsdfdi\", \"__mspabi_fixdull\" },\n+    { \"__fixsfhi\", \"__mspabi_fixfi\" },\n+    { \"__fixsfsi\", \"__mspabi_fixfli\" },\n+    { \"__fixsfdi\", \"__mspabi_fixflli\" },\n+    { \"__fixunsfhi\", \"__mspabi_fixfu\" },\n+    { \"__fixunsfsi\", \"__mspabi_fixful\" },\n+    { \"__fixunsfdi\", \"__mspabi_fixfull\" },\n+    { \"__floathisf\", \"__mspabi_fltif\" },\n+    { \"__floatsisf\", \"__mspabi_fltlif\" },\n+    { \"__floatdisf\", \"__mspabi_fltllif\" },\n+    { \"__floathidf\", \"__mspabi_fltid\" },\n+    { \"__floatsidf\", \"__mspabi_fltlid\" },\n+    { \"__floatdidf\", \"__mspabi_fltllid\" },\n+    { \"__floatunhisf\", \"__mspabi_fltuf\" },\n+    { \"__floatunsisf\", \"__mspabi_fltulf\" },\n+    { \"__floatundisf\", \"__mspabi_fltullf\" },\n+    { \"__floatunhidf\", \"__mspabi_fltud\" },\n+    { \"__floatunsidf\", \"__mspabi_fltuld\" },\n+    { \"__floatundidf\", \"__mspabi_fltulld\" },\n+\n+    /* Floating point comparisons.  */\n+    /* GCC uses individual functions for each comparison, TI uses one\n+       compare <=> function.  */\n+\n+    /* Floating point arithmetic.  */\n+    { \"__adddf3\", \"__mspabi_addd\" },\n+    { \"__addsf3\", \"__mspabi_addf\" },\n+    { \"__divdf3\", \"__mspabi_divd\" },\n+    { \"__divsf3\", \"__mspabi_divf\" },\n+    { \"__muldf3\", \"__mspabi_mpyd\" },\n+    { \"__mulsf3\", \"__mspabi_mpyf\" },\n+    { \"__subdf3\", \"__mspabi_subd\" },\n+    { \"__subsf3\", \"__mspabi_subf\" },\n+    /* GCC does not use helper functions for negation.  */\n+\n+    /* Integer multiply, divide, remainder.  */\n+    { \"__mulhi3\", \"__mspabi_mpyi\" },\n+    { \"__mulsi3\", \"__mspabi_mpyl\" },\n+    { \"__muldi3\", \"__mspabi_mpyll\" },\n #if 0\n-  /* Clarify signed vs unsigned first.  */\n-  { \"__mulhisi3\", \"__mspabi_mpysl\" }, /* gcc doesn't use widening multiply (yet?) */\n-  { \"__mulsidi3\", \"__mspabi_mpysll\" }, /* gcc doesn't use widening multiply (yet?) */\n+    /* Clarify signed vs unsigned first.  */\n+    { \"__mulhisi3\", \"__mspabi_mpysl\" }, /* gcc doesn't use widening multiply (yet?) */\n+    { \"__mulsidi3\", \"__mspabi_mpysll\" }, /* gcc doesn't use widening multiply (yet?) */\n #endif\n \n-  { \"__divhi3\", \"__mspabi_divi\" },\n-  { \"__divsi3\", \"__mspabi_divli\" },\n-  { \"__divdi3\", \"__mspabi_divlli\" },\n-  { \"__udivhi3\", \"__mspabi_divu\" },\n-  { \"__udivsi3\", \"__mspabi_divul\" },\n-  { \"__udivdi3\", \"__mspabi_divull\" },\n-  { \"__modhi3\", \"__mspabi_remi\" },\n-  { \"__modsi3\", \"__mspabi_remli\" },\n-  { \"__moddi3\", \"__mspabi_remlli\" },\n-  { \"__umodhi3\", \"__mspabi_remu\" },\n-  { \"__umodsi3\", \"__mspabi_remul\" },\n-  { \"__umoddi3\", \"__mspabi_remull\" },\n-\n-  /* Bitwise operations.  */\n-  /* Rotation - no rotation support yet.  */\n-  /* Logical left shift - gcc already does these itself.  */\n-  /* Arithmetic left shift - gcc already does these itself.  */\n-  /* Arithmetic right shift - gcc already does these itself.  */\n-\n-  { NULL, NULL }\n-};\n+    { \"__divhi3\", \"__mspabi_divi\" },\n+    { \"__divsi3\", \"__mspabi_divli\" },\n+    { \"__divdi3\", \"__mspabi_divlli\" },\n+    { \"__udivhi3\", \"__mspabi_divu\" },\n+    { \"__udivsi3\", \"__mspabi_divul\" },\n+    { \"__udivdi3\", \"__mspabi_divull\" },\n+    { \"__modhi3\", \"__mspabi_remi\" },\n+    { \"__modsi3\", \"__mspabi_remli\" },\n+    { \"__moddi3\", \"__mspabi_remlli\" },\n+    { \"__umodhi3\", \"__mspabi_remu\" },\n+    { \"__umodsi3\", \"__mspabi_remul\" },\n+    { \"__umoddi3\", \"__mspabi_remull\" },\n+\n+    /* Bitwise operations.  */\n+    /* Rotation - no rotation support yet.  */\n+    /* Logical left shift - gcc already does these itself.  */\n+    /* Arithmetic left shift - gcc already does these itself.  */\n+    /* Arithmetic right shift - gcc already does these itself.  */\n+\n+    { NULL, NULL }\n+  };\n \n /* Returns true if the current MCU supports an F5xxx series\n    hardware multiper.  */\n@@ -2734,7 +2731,7 @@ bool\n msp430_use_f5_series_hwmult (void)\n {\n   static const char * cached_match = NULL;\n-  static bool         cached_result;\n+  static bool cached_result;\n \n   if (msp430_hwmult_type == MSP430_HWMULT_F5SERIES)\n     return true;\n@@ -2769,7 +2766,7 @@ static bool\n use_32bit_hwmult (void)\n {\n   static const char * cached_match = NULL;\n-  static bool         cached_result;\n+  static bool cached_result;\n \n   if (msp430_hwmult_type == MSP430_HWMULT_LARGE)\n     return true;\n@@ -2796,7 +2793,7 @@ static bool\n msp430_no_hwmult (void)\n {\n   static const char * cached_match = NULL;\n-  static bool         cached_result;\n+  static bool cached_result;\n \n   if (msp430_hwmult_type == MSP430_HWMULT_NONE)\n     return true;\n@@ -2829,10 +2826,10 @@ msp430_output_labelref (FILE *file, const char *name)\n {\n   int i;\n \n-  for (i = 0; helper_function_name_mappings [i].gcc_name; i++)\n-    if (strcmp (helper_function_name_mappings [i].gcc_name, name) == 0)\n+  for (i = 0; helper_function_name_mappings[i].gcc_name; i++)\n+    if (strcmp (helper_function_name_mappings[i].gcc_name, name) == 0)\n       {\n-\tname = helper_function_name_mappings [i].ti_name;\n+\tname = helper_function_name_mappings[i].ti_name;\n \tbreak;\n       }\n \n@@ -2874,7 +2871,7 @@ msp430_print_operand_raw (FILE * file, rtx op)\n   switch (GET_CODE (op))\n     {\n     case REG:\n-      fprintf (file, \"%s\", reg_names [REGNO (op)]);\n+      fprintf (file, \"%s\", reg_names[REGNO (op)]);\n       break;\n \n     case CONST_INT:\n@@ -2919,7 +2916,7 @@ msp430_print_operand_addr (FILE * file, machine_mode /*mode*/, rtx addr)\n     case PLUS:\n       msp430_print_operand_raw (file, XEXP (addr, 1));\n       gcc_assert (REG_P (XEXP (addr, 0)));\n-      fprintf (file, \"(%s)\", reg_names [REGNO (XEXP (addr, 0))]);\n+      fprintf (file, \"(%s)\", reg_names[REGNO (XEXP (addr, 0))]);\n       return;\n \n     case REG:\n@@ -3021,7 +3018,7 @@ msp430_print_operand (FILE * file, rtx op, int letter)\n \t  break;\n \t}\n       return;\n-    case 'p': /* Bit position. 0 == 0x01, 3 = 0x08 etc.  */\n+    case 'p': /* Bit position.  0 == 0x01, 3 = 0x08 etc.  */\n       gcc_assert (CONST_INT_P (op));\n       fprintf (file, \"#%d\", 1 << INTVAL (op));\n       return;\n@@ -3170,7 +3167,7 @@ msp430_print_operand (FILE * file, rtx op, int letter)\n \t      msp430_print_operand_raw (file, XEXP (op, 0));\n \t      fprintf (file, \")\");\n \t      break;\n-\t  \n+\n \t    case 16:\n \t      fprintf (file, \"#hi (\");\n \t      msp430_print_operand_raw (file, XEXP (op, 0));\n@@ -3245,10 +3242,10 @@ msp430x_extendhisi (rtx * operands)\n     /* Note: This sequence is approximately the same length as invoking a helper\n        function to perform the sign-extension, as in:\n \n-         MOV.W  %1, %L0\n-\t MOV.W  %1, r12\n-\t CALL   __mspabi_srai_15\n-\t MOV.W  r12, %H0\n+       MOV.W  %1, %L0\n+       MOV.W  %1, r12\n+       CALL   __mspabi_srai_15\n+       MOV.W  r12, %H0\n \n        but this version does not involve any function calls or using argument\n        registers, so it reduces register pressure.  */"}, {"sha": "a77c677a2eab66062e0f72bb3e22637bdec0b2be", "filename": "gcc/config/msp430/msp430.h", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81a8845cc0797ed494d6c138049bb015a29ed5d4/gcc%2Fconfig%2Fmsp430%2Fmsp430.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81a8845cc0797ed494d6c138049bb015a29ed5d4/gcc%2Fconfig%2Fmsp430%2Fmsp430.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.h?ref=81a8845cc0797ed494d6c138049bb015a29ed5d4", "patch": "@@ -26,10 +26,10 @@\n extern bool msp430x;\n #endif\n \n-#define TARGET_CPU_CPP_BUILTINS()               \\\n-  do                                            \\\n-    {                                           \\\n-      builtin_define (\"NO_TRAMPOLINES\");        \\\n+#define TARGET_CPU_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      builtin_define (\"NO_TRAMPOLINES\");\t\\\n       builtin_define (\"__MSP430__\"); \t\t\\\n       builtin_define (msp430_mcu_name ());\t\\\n       if (msp430x)\t\t\t\t\\\n@@ -41,7 +41,7 @@ extern bool msp430x;\n \t}\t\t\t\t\t\\\n       else\t\t\t\t\t\\\n \tbuiltin_assert (\"cpu=MSP430\"); \t\t\\\n-    }                                           \\\n+    }\t\t\t\t\t\t\\\n   while (0)\n \n #undef  STARTFILE_SPEC\n@@ -305,9 +305,9 @@ enum reg_class\n #define INDEX_REG_CLASS\t\t\tGEN_REGS\n #define N_REG_CLASSES\t\t\t(int) LIM_REG_CLASSES\n \n-#define PC_REGNUM \t\t        0\n-#define STACK_POINTER_REGNUM \t        1\n-#define CC_REGNUM                       2\n+#define PC_REGNUM\t\t\t0\n+#define STACK_POINTER_REGNUM\t\t1\n+#define CC_REGNUM \t\t\t2\n #define FRAME_POINTER_REGNUM \t\t4 /* not usually used, call preserved */\n #define ARG_POINTER_REGNUM \t\t16\n #define STATIC_CHAIN_REGNUM \t\t5 /* FIXME */\n@@ -439,7 +439,7 @@ typedef struct\n   do\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\\\n       if ((LOG) == 0)\t\t\t\t\\\n-        break;\t\t\t\t\t\\\n+\tbreak;\t\t\t\t\t\\\n       fprintf (STREAM, \"\\t.balign %d\\n\", 1 << (LOG));\t\\\n     }\t\t\t\t\t\t\\\n   while (0)"}]}