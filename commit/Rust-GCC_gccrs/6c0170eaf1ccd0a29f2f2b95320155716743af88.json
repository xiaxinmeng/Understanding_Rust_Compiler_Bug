{"sha": "6c0170eaf1ccd0a29f2f2b95320155716743af88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmMwMTcwZWFmMWNjZDBhMjlmMmYyYjk1MzIwMTU1NzE2NzQzYWY4OA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2011-04-28T16:49:49Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2011-04-28T16:49:49Z"}, "message": "* config.gcc (*-*-kfreebsd*-gnu | *-*-knetbsd*-gnu | *-*-gnu* |\n\t*-*-kopensolaris*-gnu): Don't define SINGLE_LIBC.\n\t(i[34567]86-*-kfreebsd*-gnu | i[34567]86-*-knetbsd*-gnu |\n\ti[34567]86-*-gnu* | i[34567]86-*-kopensolaris*-gnu,\n\tx86_64-*-kfreebsd*-gnu | x86_64-*-knetbsd*-gnu): Don't use\n\tlinux*.h headers.\n\t* config/gnu-user.h (TARGET_C99_FUNCTIONS, TARGET_HAS_SINCOS):\n\tDefine.\n\t* config/i386/gnu.h (MD_UNWIND_SUPPORT): Don't undefine.\n\t* config/i386/kfreebsd-gnu.h (MD_UNWIND_SUPPORT): Don't undefine.\n\t* config/i386/knetbsd-gnu.h (MD_UNWIND_SUPPORT): Don't undefine.\n\t* config/i386/kopensolaris-gnu.h (MD_UNWIND_SUPPORT): Don't\n\tundefine.\n\t* config/i386/linux-unwind.h (x86_fallback_frame_state): Don't use\n\tREG_NAME.\n\t* config/i386/linux.h (REG_NAME): Don't define.\n\t* config/i386/linux64.h (REG_NAME): Don't define.\n\t* config/linux.h (TARGET_C99_FUNCTIONS, TARGET_HAS_SINCOS):\n\tUndefine before defining.\n\nFrom-SVN: r173119", "tree": {"sha": "696d5fb68e24baa2d4e19ce9830e278e9cda8808", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/696d5fb68e24baa2d4e19ce9830e278e9cda8808"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c0170eaf1ccd0a29f2f2b95320155716743af88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c0170eaf1ccd0a29f2f2b95320155716743af88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c0170eaf1ccd0a29f2f2b95320155716743af88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c0170eaf1ccd0a29f2f2b95320155716743af88/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fddf9ee7986cc4a2fbd6ac5f8c4507a345a50e5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fddf9ee7986cc4a2fbd6ac5f8c4507a345a50e5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fddf9ee7986cc4a2fbd6ac5f8c4507a345a50e5e"}], "stats": {"total": 79, "additions": 47, "deletions": 32}, "files": [{"sha": "d50ad4ea28dcc7d5c0230a2729a311ff9a46d90c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0170eaf1ccd0a29f2f2b95320155716743af88/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0170eaf1ccd0a29f2f2b95320155716743af88/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c0170eaf1ccd0a29f2f2b95320155716743af88", "patch": "@@ -1,3 +1,25 @@\n+2011-04-28  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config.gcc (*-*-kfreebsd*-gnu | *-*-knetbsd*-gnu | *-*-gnu* |\n+\t*-*-kopensolaris*-gnu): Don't define SINGLE_LIBC.\n+\t(i[34567]86-*-kfreebsd*-gnu | i[34567]86-*-knetbsd*-gnu |\n+\ti[34567]86-*-gnu* | i[34567]86-*-kopensolaris*-gnu,\n+\tx86_64-*-kfreebsd*-gnu | x86_64-*-knetbsd*-gnu): Don't use\n+\tlinux*.h headers.\n+\t* config/gnu-user.h (TARGET_C99_FUNCTIONS, TARGET_HAS_SINCOS):\n+\tDefine.\n+\t* config/i386/gnu.h (MD_UNWIND_SUPPORT): Don't undefine.\n+\t* config/i386/kfreebsd-gnu.h (MD_UNWIND_SUPPORT): Don't undefine.\n+\t* config/i386/knetbsd-gnu.h (MD_UNWIND_SUPPORT): Don't undefine.\n+\t* config/i386/kopensolaris-gnu.h (MD_UNWIND_SUPPORT): Don't\n+\tundefine.\n+\t* config/i386/linux-unwind.h (x86_fallback_frame_state): Don't use\n+\tREG_NAME.\n+\t* config/i386/linux.h (REG_NAME): Don't define.\n+\t* config/i386/linux64.h (REG_NAME): Don't define.\n+\t* config/linux.h (TARGET_C99_FUNCTIONS, TARGET_HAS_SINCOS):\n+\tUndefine before defining.\n+\n 2011-04-28  Jan Hubicka  <jh@suse.cz>\n \n \t* ipa-inline-analysis.c (will_be_nonconstant_predicate): Take nonconstant_names"}, {"sha": "aa55bf6e73fd281db142b8c7ac648963aeb84aea", "filename": "gcc/config.gcc", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0170eaf1ccd0a29f2f2b95320155716743af88/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0170eaf1ccd0a29f2f2b95320155716743af88/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=6c0170eaf1ccd0a29f2f2b95320155716743af88", "patch": "@@ -565,8 +565,6 @@ case ${target} in\n   case $target in\n     *linux*)\n       extra_options=\"$extra_options linux.opt\";;\n-    *)\n-      tm_defines=\"$tm_defines SINGLE_LIBC\";;\n   esac\n   case $target in\n     *-*-*android*)\n@@ -1203,9 +1201,10 @@ i[34567]86-*-openbsd*)\n i[34567]86-*-linux* | i[34567]86-*-kfreebsd*-gnu | i[34567]86-*-knetbsd*-gnu | i[34567]86-*-gnu* | i[34567]86-*-kopensolaris*-gnu)\n \t\t\t# Intel 80386's running GNU/*\n \t\t\t# with ELF format using glibc 2\n-\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h\"\n+\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h gnu-user.h glibc-stdint.h\"\n \tcase ${target} in\n \ti[34567]86-*-linux*)\n+\t\ttm_file=\"${tm_file} linux.h\"\n \t\t# Assume modern glibc\n \t\tdefault_gnu_indirect_function=yes\n \t\tif test x$enable_targets = xall; then\n@@ -1232,18 +1231,19 @@ i[34567]86-*-linux* | i[34567]86-*-kfreebsd*-gnu | i[34567]86-*-knetbsd*-gnu | i\n \t\t\ttm_file=\"${tm_file} i386/gnu-user.h i386/linux.h\"\n \t\tfi\n \t\t;;\n-\ti[34567]86-*-knetbsd*-gnu) tm_file=\"${tm_file} i386/gnu-user.h i386/linux.h knetbsd-gnu.h i386/knetbsd-gnu.h\" ;;\n-\ti[34567]86-*-kfreebsd*-gnu) tm_file=\"${tm_file} i386/gnu-user.h i386/linux.h kfreebsd-gnu.h i386/kfreebsd-gnu.h\" ;;\n-\ti[34567]86-*-kopensolaris*-gnu) tm_file=\"${tm_file} i386/gnu-user.h i386/linux.h kopensolaris-gnu.h i386/kopensolaris-gnu.h\" ;;\n-\ti[34567]86-*-gnu*) tm_file=\"$tm_file i386/gnu-user.h i386/linux.h gnu.h i386/gnu.h\";;\n+\ti[34567]86-*-knetbsd*-gnu) tm_file=\"${tm_file} i386/gnu-user.h knetbsd-gnu.h i386/knetbsd-gnu.h\" ;;\n+\ti[34567]86-*-kfreebsd*-gnu) tm_file=\"${tm_file} i386/gnu-user.h kfreebsd-gnu.h i386/kfreebsd-gnu.h\" ;;\n+\ti[34567]86-*-kopensolaris*-gnu) tm_file=\"${tm_file} i386/gnu-user.h kopensolaris-gnu.h i386/kopensolaris-gnu.h\" ;;\n+\ti[34567]86-*-gnu*) tm_file=\"$tm_file i386/gnu-user.h gnu.h i386/gnu.h\";;\n \tesac\n \ttmake_file=\"${tmake_file} i386/t-crtstuff i386/t-crtpc i386/t-crtfm t-dfprules\"\n \t;;\n x86_64-*-linux* | x86_64-*-kfreebsd*-gnu | x86_64-*-knetbsd*-gnu)\n-\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h \\\n-\t\t i386/x86-64.h i386/gnu-user64.h i386/linux64.h\"\n+\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h gnu-user.h glibc-stdint.h \\\n+\t\t i386/x86-64.h i386/gnu-user64.h\"\n \tcase ${target} in\n \tx86_64-*-linux*)\n+\t  tm_file=\"${tm_file} linux.h i386/linux64.h\"\n \t  default_gnu_indirect_function=glibc-2011 ;;\n \tx86_64-*-kfreebsd*-gnu) tm_file=\"${tm_file} kfreebsd-gnu.h i386/kfreebsd-gnu.h\" ;;\n \tx86_64-*-knetbsd*-gnu) tm_file=\"${tm_file} knetbsd-gnu.h\" ;;"}, {"sha": "cb457490e7a6c0fe2416687bfea80e555feeab6c", "filename": "gcc/config/gnu-user.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0170eaf1ccd0a29f2f2b95320155716743af88/gcc%2Fconfig%2Fgnu-user.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0170eaf1ccd0a29f2f2b95320155716743af88/gcc%2Fconfig%2Fgnu-user.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgnu-user.h?ref=6c0170eaf1ccd0a29f2f2b95320155716743af88", "patch": "@@ -95,3 +95,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #endif\n \n #define TARGET_POSIX_IO\n+\n+#define TARGET_C99_FUNCTIONS 1\n+#define TARGET_HAS_SINCOS 1"}, {"sha": "f2834f45ac3f2823f0a8d1726de36aa3bda4449d", "filename": "gcc/config/i386/gnu.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0170eaf1ccd0a29f2f2b95320155716743af88/gcc%2Fconfig%2Fi386%2Fgnu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0170eaf1ccd0a29f2f2b95320155716743af88/gcc%2Fconfig%2Fi386%2Fgnu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgnu.h?ref=6c0170eaf1ccd0a29f2f2b95320155716743af88", "patch": "@@ -36,9 +36,6 @@ along with GCC.  If not, see <http://www.gnu.org/licenses/>.\n    crti.o%s %{static:crtbeginT.o%s;shared|pie:crtbeginS.o%s;:crtbegin.o%s}\"\n #endif\n \n-/* FIXME: Is a Hurd-specific fallback mechanism necessary?  */\n-#undef MD_UNWIND_SUPPORT\n-\n #ifdef TARGET_LIBC_PROVIDES_SSP\n /* Not supported yet.  */\n #undef TARGET_THREAD_SSP_OFFSET"}, {"sha": "52ee09b09310360c00959c0d723fb5dbab6ecddd", "filename": "gcc/config/i386/kfreebsd-gnu.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0170eaf1ccd0a29f2f2b95320155716743af88/gcc%2Fconfig%2Fi386%2Fkfreebsd-gnu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0170eaf1ccd0a29f2f2b95320155716743af88/gcc%2Fconfig%2Fi386%2Fkfreebsd-gnu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fkfreebsd-gnu.h?ref=6c0170eaf1ccd0a29f2f2b95320155716743af88", "patch": "@@ -27,5 +27,3 @@ along with GCC; see the file COPYING3.  If not see\n \n #undef GNU_USER_DYNAMIC_LINKER64\n #define GNU_USER_DYNAMIC_LINKER64 \"/lib/ld-kfreebsd-x86-64.so.1\"\n-\n-#undef MD_UNWIND_SUPPORT"}, {"sha": "a060018c45a69c0acbf6cdd26dfbf3907a6b1ed5", "filename": "gcc/config/i386/knetbsd-gnu.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0170eaf1ccd0a29f2f2b95320155716743af88/gcc%2Fconfig%2Fi386%2Fknetbsd-gnu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0170eaf1ccd0a29f2f2b95320155716743af88/gcc%2Fconfig%2Fi386%2Fknetbsd-gnu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fknetbsd-gnu.h?ref=6c0170eaf1ccd0a29f2f2b95320155716743af88", "patch": "@@ -20,5 +20,3 @@ along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n #define GNU_USER_LINK_EMULATION \"elf_i386\"\n-\n-#undef MD_UNWIND_SUPPORT"}, {"sha": "98eadcea15496b85a19aabc655267392067feca1", "filename": "gcc/config/i386/kopensolaris-gnu.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0170eaf1ccd0a29f2f2b95320155716743af88/gcc%2Fconfig%2Fi386%2Fkopensolaris-gnu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0170eaf1ccd0a29f2f2b95320155716743af88/gcc%2Fconfig%2Fi386%2Fkopensolaris-gnu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fkopensolaris-gnu.h?ref=6c0170eaf1ccd0a29f2f2b95320155716743af88", "patch": "@@ -20,5 +20,3 @@ along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n #define GNU_USER_LINK_EMULATION \"elf_i386\"\n-\n-#undef MD_UNWIND_SUPPORT"}, {"sha": "de44823e053f343c3cb774a904e5d53e44b0dfd9", "filename": "gcc/config/i386/linux-unwind.h", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0170eaf1ccd0a29f2f2b95320155716743af88/gcc%2Fconfig%2Fi386%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0170eaf1ccd0a29f2f2b95320155716743af88/gcc%2Fconfig%2Fi386%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux-unwind.h?ref=6c0170eaf1ccd0a29f2f2b95320155716743af88", "patch": "@@ -1,5 +1,6 @@\n /* DWARF2 EH unwinding support for AMD x86-64 and x86.\n-   Copyright (C) 2004, 2005, 2006, 2009, 2010 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005, 2006, 2009, 2010, 2011\n+   Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -146,28 +147,28 @@ x86_fallback_frame_state (struct _Unwind_Context *context,\n   else\n     return _URC_END_OF_STACK;\n \n-  new_cfa = sc->REG_NAME(esp);\n+  new_cfa = sc->esp;\n   fs->regs.cfa_how = CFA_REG_OFFSET;\n   fs->regs.cfa_reg = 4;\n   fs->regs.cfa_offset = new_cfa - (long) context->cfa;\n \n   /* The SVR4 register numbering macros aren't usable in libgcc.  */\n   fs->regs.reg[0].how = REG_SAVED_OFFSET;\n-  fs->regs.reg[0].loc.offset = (long)&sc->REG_NAME(eax) - new_cfa;\n+  fs->regs.reg[0].loc.offset = (long)&sc->eax - new_cfa;\n   fs->regs.reg[3].how = REG_SAVED_OFFSET;\n-  fs->regs.reg[3].loc.offset = (long)&sc->REG_NAME(ebx) - new_cfa;\n+  fs->regs.reg[3].loc.offset = (long)&sc->ebx - new_cfa;\n   fs->regs.reg[1].how = REG_SAVED_OFFSET;\n-  fs->regs.reg[1].loc.offset = (long)&sc->REG_NAME(ecx) - new_cfa;\n+  fs->regs.reg[1].loc.offset = (long)&sc->ecx - new_cfa;\n   fs->regs.reg[2].how = REG_SAVED_OFFSET;\n-  fs->regs.reg[2].loc.offset = (long)&sc->REG_NAME(edx) - new_cfa;\n+  fs->regs.reg[2].loc.offset = (long)&sc->edx - new_cfa;\n   fs->regs.reg[6].how = REG_SAVED_OFFSET;\n-  fs->regs.reg[6].loc.offset = (long)&sc->REG_NAME(esi) - new_cfa;\n+  fs->regs.reg[6].loc.offset = (long)&sc->esi - new_cfa;\n   fs->regs.reg[7].how = REG_SAVED_OFFSET;\n-  fs->regs.reg[7].loc.offset = (long)&sc->REG_NAME(edi) - new_cfa;\n+  fs->regs.reg[7].loc.offset = (long)&sc->edi - new_cfa;\n   fs->regs.reg[5].how = REG_SAVED_OFFSET;\n-  fs->regs.reg[5].loc.offset = (long)&sc->REG_NAME(ebp) - new_cfa;\n+  fs->regs.reg[5].loc.offset = (long)&sc->ebp - new_cfa;\n   fs->regs.reg[8].how = REG_SAVED_OFFSET;\n-  fs->regs.reg[8].loc.offset = (long)&sc->REG_NAME(eip) - new_cfa;\n+  fs->regs.reg[8].loc.offset = (long)&sc->eip - new_cfa;\n   fs->retaddr_column = 8;\n   fs->signal_frame = 1;\n   return _URC_NO_REASON;"}, {"sha": "833416d59a5c0b7169ece720da7cfdcdc5568455", "filename": "gcc/config/i386/linux.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0170eaf1ccd0a29f2f2b95320155716743af88/gcc%2Fconfig%2Fi386%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0170eaf1ccd0a29f2f2b95320155716743af88/gcc%2Fconfig%2Fi386%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux.h?ref=6c0170eaf1ccd0a29f2f2b95320155716743af88", "patch": "@@ -24,5 +24,3 @@ along with GCC; see the file COPYING3.  If not see\n #define GLIBC_DYNAMIC_LINKER \"/lib/ld-linux.so.2\"\n \n #define MD_UNWIND_SUPPORT \"config/i386/linux-unwind.h\"\n-\n-#define REG_NAME(reg) reg"}, {"sha": "99d62496860657b6fc7be5a17ad0e70baf371d37", "filename": "gcc/config/i386/linux64.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0170eaf1ccd0a29f2f2b95320155716743af88/gcc%2Fconfig%2Fi386%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0170eaf1ccd0a29f2f2b95320155716743af88/gcc%2Fconfig%2Fi386%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux64.h?ref=6c0170eaf1ccd0a29f2f2b95320155716743af88", "patch": "@@ -28,5 +28,3 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define GLIBC_DYNAMIC_LINKER64 \"/lib64/ld-linux-x86-64.so.2\"\n \n #define MD_UNWIND_SUPPORT \"config/i386/linux-unwind.h\"\n-\n-#define REG_NAME(reg) reg"}, {"sha": "fc897b189fced2a12ed28538b8826ce9a67fdeda", "filename": "gcc/config/linux.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0170eaf1ccd0a29f2f2b95320155716743af88/gcc%2Fconfig%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0170eaf1ccd0a29f2f2b95320155716743af88/gcc%2Fconfig%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flinux.h?ref=6c0170eaf1ccd0a29f2f2b95320155716743af88", "patch": "@@ -93,7 +93,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n /* Determine whether the entire c99 runtime\n    is present in the runtime library.  */\n+#undef TARGET_C99_FUNCTIONS\n #define TARGET_C99_FUNCTIONS (OPTION_GLIBC)\n \n /* Whether we have sincos that follows the GNU extension.  */\n+#undef TARGET_HAS_SINCOS\n #define TARGET_HAS_SINCOS (OPTION_GLIBC || OPTION_BIONIC)"}]}