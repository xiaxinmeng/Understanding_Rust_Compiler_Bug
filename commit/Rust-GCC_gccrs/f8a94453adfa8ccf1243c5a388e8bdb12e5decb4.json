{"sha": "f8a94453adfa8ccf1243c5a388e8bdb12e5decb4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhhOTQ0NTNhZGZhOGNjZjEyNDNjNWEzODhlOGJkYjEyZTVkZWNiNA==", "commit": {"author": {"name": "Torvald Riegel", "email": "triegel@redhat.com", "date": "2017-01-18T20:22:02Z"}, "committer": {"name": "Torvald Riegel", "email": "torvald@gcc.gnu.org", "date": "2017-01-18T20:22:02Z"}, "message": "libitm: Disable TSX on processors on which it may be broken.\n\n\tlibitm/ChangeLog\n\n\t* config/x86/target.h (htm_available): Add check for some processors\n\ton which TSX is broken.\n\nFrom-SVN: r244594", "tree": {"sha": "a570e6248bee46a42e3612e3408cef9a3d26518a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a570e6248bee46a42e3612e3408cef9a3d26518a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8a94453adfa8ccf1243c5a388e8bdb12e5decb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8a94453adfa8ccf1243c5a388e8bdb12e5decb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8a94453adfa8ccf1243c5a388e8bdb12e5decb4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8a94453adfa8ccf1243c5a388e8bdb12e5decb4/comments", "author": {"login": "triegelrh", "id": 62400967, "node_id": "MDQ6VXNlcjYyNDAwOTY3", "avatar_url": "https://avatars.githubusercontent.com/u/62400967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/triegelrh", "html_url": "https://github.com/triegelrh", "followers_url": "https://api.github.com/users/triegelrh/followers", "following_url": "https://api.github.com/users/triegelrh/following{/other_user}", "gists_url": "https://api.github.com/users/triegelrh/gists{/gist_id}", "starred_url": "https://api.github.com/users/triegelrh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/triegelrh/subscriptions", "organizations_url": "https://api.github.com/users/triegelrh/orgs", "repos_url": "https://api.github.com/users/triegelrh/repos", "events_url": "https://api.github.com/users/triegelrh/events{/privacy}", "received_events_url": "https://api.github.com/users/triegelrh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b7d3a6a6b26c6992900a4a6d87bb4d92b1590474", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7d3a6a6b26c6992900a4a6d87bb4d92b1590474", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7d3a6a6b26c6992900a4a6d87bb4d92b1590474"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "d50005f4d910009f8375e5a5620b1e3eb9be763a", "filename": "libitm/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8a94453adfa8ccf1243c5a388e8bdb12e5decb4/libitm%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8a94453adfa8ccf1243c5a388e8bdb12e5decb4/libitm%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FChangeLog?ref=f8a94453adfa8ccf1243c5a388e8bdb12e5decb4", "patch": "@@ -1,3 +1,8 @@\n+2017-01-18  Torvald Riegel  <triegel@redhat.com>\n+\n+\t* config/x86/target.h (htm_available): Add check for some processors\n+\ton which TSX is broken.\n+\n 2017-01-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR other/79046"}, {"sha": "665c7d6e986bd5a1899a613918de9e97ee99fe95", "filename": "libitm/config/x86/target.h", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8a94453adfa8ccf1243c5a388e8bdb12e5decb4/libitm%2Fconfig%2Fx86%2Ftarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8a94453adfa8ccf1243c5a388e8bdb12e5decb4/libitm%2Fconfig%2Fx86%2Ftarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfig%2Fx86%2Ftarget.h?ref=f8a94453adfa8ccf1243c5a388e8bdb12e5decb4", "patch": "@@ -78,6 +78,28 @@ htm_available ()\n   if (__get_cpuid_max (0, NULL) >= 7)\n     {\n       unsigned a, b, c, d;\n+      /* TSX is broken on some processors.  This can be fixed by microcode,\n+\t but we cannot reliably detect whether the microcode has been\n+\t updated.  Therefore, do not report availability of TSX on these\n+\t processors.  We use the same approach here as in glibc (see\n+\t https://sourceware.org/ml/libc-alpha/2016-12/msg00470.html).  */\n+      __cpuid (0, a, b, c, d);\n+      if (b == 0x756e6547 && c == 0x6c65746e && d == 0x49656e69)\n+\t{\n+\t  __cpuid (1, a, b, c, d);\n+\t  if (((a >> 8) & 0x0f) == 0x06) // Family.\n+\t    {\n+\t      unsigned model = ((a >> 4) & 0x0f) // Model.\n+\t\t  + ((a >> 12) & 0xf0); // Extended model.\n+\t      unsigned stepping = a & 0x0f;\n+\t      if ((model == 0x3c)\n+\t\t  || (model == 0x45)\n+\t\t  || (model == 0x46)\n+\t\t  /* Xeon E7 v3 has correct TSX if stepping >= 4.  */\n+\t\t  || ((model == 0x3f) && (stepping < 4)))\n+\t\treturn false;\n+\t    }\n+\t}\n       __cpuid_count (7, 0, a, b, c, d);\n       if (b & cpuid_rtm)\n \treturn true;"}]}