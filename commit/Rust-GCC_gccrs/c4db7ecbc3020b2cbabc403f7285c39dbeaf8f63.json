{"sha": "c4db7ecbc3020b2cbabc403f7285c39dbeaf8f63", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzRkYjdlY2JjMzAyMGIyY2JhYmM0MDNmNzI4NWMzOWRiZWFmOGY2Mw==", "commit": {"author": {"name": "Franz Sirl", "email": "Franz.Sirl-kernel@lauterbach.com", "date": "2003-01-23T22:28:48Z"}, "committer": {"name": "Franz Sirl", "email": "sirl@gcc.gnu.org", "date": "2003-01-23T22:28:48Z"}, "message": "re PR java/6748 (Array_3 testcase failing on powerpc-linux-gnu)\n\n2003-01-23  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n\n\tPR java/6748\n\t* config/rs6000/linux.h (MD_FALLBACK_FRAME_STATE_FOR): Don't destroy\n\tregs->nip. Fix rt_sigreturn frame layout. Add support for newer\n\tkernels.\n\nFrom-SVN: r61675", "tree": {"sha": "2d75130e3779bcafab371ac564b84821aac87173", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d75130e3779bcafab371ac564b84821aac87173"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4db7ecbc3020b2cbabc403f7285c39dbeaf8f63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4db7ecbc3020b2cbabc403f7285c39dbeaf8f63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4db7ecbc3020b2cbabc403f7285c39dbeaf8f63", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4db7ecbc3020b2cbabc403f7285c39dbeaf8f63/comments", "author": {"login": "jinkama-san", "id": 1462162, "node_id": "MDQ6VXNlcjE0NjIxNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1462162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jinkama-san", "html_url": "https://github.com/jinkama-san", "followers_url": "https://api.github.com/users/jinkama-san/followers", "following_url": "https://api.github.com/users/jinkama-san/following{/other_user}", "gists_url": "https://api.github.com/users/jinkama-san/gists{/gist_id}", "starred_url": "https://api.github.com/users/jinkama-san/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jinkama-san/subscriptions", "organizations_url": "https://api.github.com/users/jinkama-san/orgs", "repos_url": "https://api.github.com/users/jinkama-san/repos", "events_url": "https://api.github.com/users/jinkama-san/events{/privacy}", "received_events_url": "https://api.github.com/users/jinkama-san/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1f369e606fac3810e79ef0c0d4fd353a43d0d2b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f369e606fac3810e79ef0c0d4fd353a43d0d2b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f369e606fac3810e79ef0c0d4fd353a43d0d2b4"}], "stats": {"total": 53, "additions": 42, "deletions": 11}, "files": [{"sha": "e0af5c59d7c77357fd6585ac938abc55f88fe92c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4db7ecbc3020b2cbabc403f7285c39dbeaf8f63/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4db7ecbc3020b2cbabc403f7285c39dbeaf8f63/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c4db7ecbc3020b2cbabc403f7285c39dbeaf8f63", "patch": "@@ -1,3 +1,10 @@\n+2003-01-23  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n+\n+\tPR java/6748\n+\t* config/rs6000/linux.h (MD_FALLBACK_FRAME_STATE_FOR): Don't destroy\n+\tregs->nip. Fix rt_sigreturn frame layout. Add support for newer\n+\tkernels.\n+\n 2003-01-23  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* cpplex.c (cpp_interpret_charconst): Squelch warning with cast."}, {"sha": "bb195d0082974dfb00c133583187f16afc666f6e", "filename": "gcc/config/rs6000/linux.h", "status": "modified", "additions": 35, "deletions": 11, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4db7ecbc3020b2cbabc403f7285c39dbeaf8f63/gcc%2Fconfig%2Frs6000%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4db7ecbc3020b2cbabc403f7285c39dbeaf8f63/gcc%2Fconfig%2Frs6000%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux.h?ref=c4db7ecbc3020b2cbabc403f7285c39dbeaf8f63", "patch": "@@ -1,7 +1,7 @@\n /* Definitions of target machine for GNU compiler,\n    for PowerPC machines running Linux.\n-   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001 Free Software Foundation, \n-   Inc.\n+   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003\n+   Free Software Foundation, Inc.\n    Contributed by Michael Meissner (meissner@cygnus.com).\n \n This file is part of GNU CC.\n@@ -96,12 +96,34 @@ enum { SIGNAL_FRAMESIZE = 64 };\n     long new_cfa_;\t\t\t\t\t\t\t\\\n     int i_;\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-    /* li r0, 0x7777; sc  (rt_sigreturn)  */\t\t\t\t\\\n-    /* li r0, 0x6666; sc  (sigreturn)  */\t\t\t\t\\\n-    if (((*(unsigned int *) (pc_+0) == 0x38007777)\t\t\t\\\n-\t || (*(unsigned int *) (pc_+0) == 0x38006666))\t\t\t\\\n-\t&& (*(unsigned int *) (pc_+4)  == 0x44000002))\t\t\t\\\n-\tsc_ = (CONTEXT)->cfa + SIGNAL_FRAMESIZE;\t\t\t\\\n+    /* li r0, 0x7777; sc  (sigreturn old)  */\t\t\t\t\\\n+    /* li r0, 0x0077; sc  (sigreturn new)  */\t\t\t\t\\\n+    /* li r0, 0x6666; sc  (rt_sigreturn old)  */\t\t\t\\\n+    /* li r0, 0x00AC; sc  (rt_sigreturn new)  */\t\t\t\\\n+    if (*(unsigned int *) (pc_+4) != 0x44000002)\t\t\t\\\n+      break;\t\t\t\t\t\t\t\t\\\n+    if (*(unsigned int *) (pc_+0) == 0x38007777\t\t\t\t\\\n+\t|| *(unsigned int *) (pc_+0) == 0x38000077)\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\tstruct sigframe {\t\t\t\t\t\t\\\n+\t  char gap[SIGNAL_FRAMESIZE];\t\t\t\t\t\\\n+\t  struct sigcontext sigctx;\t\t\t\t\t\\\n+\t} *rt_ = (CONTEXT)->cfa;\t\t\t\t\t\\\n+\tsc_ = &rt_->sigctx;\t\t\t\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n+    else if (*(unsigned int *) (pc_+0) == 0x38006666\t\t\t\\\n+\t     || *(unsigned int *) (pc_+0) == 0x380000AC)\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\tstruct rt_sigframe {\t\t\t\t\t\t\\\n+\t  char gap[SIGNAL_FRAMESIZE];\t\t\t\t\t\\\n+\t  unsigned long _unused[2];\t\t\t\t\t\\\n+\t  struct siginfo *pinfo;\t\t\t\t\t\\\n+\t  void *puc;\t\t\t\t\t\t\t\\\n+\t  struct siginfo info;\t\t\t\t\t\t\\\n+\t  struct ucontext uc;\t\t\t\t\t\t\\\n+\t} *rt_ = (CONTEXT)->cfa;\t\t\t\t\t\\\n+\tsc_ = &rt_->uc.uc_mcontext;\t\t\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n     else\t\t\t\t\t\t\t\t\\\n       break;\t\t\t\t\t\t\t\t\\\n     \t\t\t\t\t\t\t\t\t\\\n@@ -124,11 +146,13 @@ enum { SIGNAL_FRAMESIZE = 64 };\n \t\t\t\t\t\t\t\t\t\\\n     /* The unwinder expects the IP to point to the following insn,\t\\\n        whereas the kernel returns the address of the actual\t\t\\\n-       faulting insn.  */\t\t\t\t\t\t\\\n-    sc_->regs->nip += 4;  \t\t\t\t\t\t\\\n+       faulting insn. We store NIP+4 in an unused register slot to\t\\\n+       get the same result for multiple evaluation of the same signal\t\\\n+       frame.  */\t\t\t\t\t\t\t\\\n+    sc_->regs->gpr[47] = sc_->regs->nip + 4;  \t\t\t\t\\\n     (FS)->regs.reg[CR0_REGNO].how = REG_SAVED_OFFSET;\t\t\t\\\n     (FS)->regs.reg[CR0_REGNO].loc.offset \t\t\t\t\\\n-      = (long)&(sc_->regs->nip) - new_cfa_;\t\t\t\t\\\n+      = (long)&(sc_->regs->gpr[47]) - new_cfa_;\t\t\t\t\\\n     (FS)->retaddr_column = CR0_REGNO;\t\t\t\t\t\\\n     goto SUCCESS;\t\t\t\t\t\t\t\\\n   } while (0)"}]}