{"sha": "349e6f0526060faefb2e242f157dfe5e2c504121", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQ5ZTZmMDUyNjA2MGZhZWZiMmUyNDJmMTU3ZGZlNWUyYzUwNDEyMQ==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-03-02T21:04:51Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-03-02T21:04:51Z"}, "message": "sync.md: Update copyright notice dates.\n\n        * config/sh/sync.md: Update copyright notice dates.\n\t(atomic_compare_and_swap<mode>): Use SImode for return value instead\n\tof QImode.\n        (atomic_compare_and_swap<mode>_soft): Likewise.\n\nFrom-SVN: r184826", "tree": {"sha": "9f341c1f7cea1eabce29163be44334d667935d55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f341c1f7cea1eabce29163be44334d667935d55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/349e6f0526060faefb2e242f157dfe5e2c504121", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/349e6f0526060faefb2e242f157dfe5e2c504121", "html_url": "https://github.com/Rust-GCC/gccrs/commit/349e6f0526060faefb2e242f157dfe5e2c504121", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/349e6f0526060faefb2e242f157dfe5e2c504121/comments", "author": null, "committer": null, "parents": [{"sha": "b6a0df6c472b04fffa3a458be71ab518caa5dade", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6a0df6c472b04fffa3a458be71ab518caa5dade", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6a0df6c472b04fffa3a458be71ab518caa5dade"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "009097e751353688ab70906a8a14e6166867b81d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/349e6f0526060faefb2e242f157dfe5e2c504121/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/349e6f0526060faefb2e242f157dfe5e2c504121/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=349e6f0526060faefb2e242f157dfe5e2c504121", "patch": "@@ -1,4 +1,11 @@\n-2012-01-02  Oleg Endo  <olegendo@gcc.gnu.org>\n+2012-03-02  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+        * config/sh/sync.md: Update copyright notice dates.\n+\t(atomic_compare_and_swap<mode>): Use SImode for return value instead\n+\tof QImode.\n+        (atomic_compare_and_swap<mode>_soft): Likewise.\n+\n+2012-03-02  Oleg Endo  <olegendo@gcc.gnu.org>\n  \n \tPR target/31640\n \t* config/sh/sh.h (LOOP_ALIGN): Move logic to sh_loop_align."}, {"sha": "88e0ce22089e9dcd9ee837a2a20765745288df0d", "filename": "gcc/config/sh/sync.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/349e6f0526060faefb2e242f157dfe5e2c504121/gcc%2Fconfig%2Fsh%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/349e6f0526060faefb2e242f157dfe5e2c504121/gcc%2Fconfig%2Fsh%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsync.md?ref=349e6f0526060faefb2e242f157dfe5e2c504121", "patch": "@@ -1,5 +1,5 @@\n ;; GCC machine description for SH synchronization instructions.\n-;; Copyright (C) 2011\n+;; Copyright (C) 2011, 2012\n ;; Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n@@ -109,7 +109,7 @@\n   [(plus \"add\") (minus \"sub\") (ior \"or\") (xor \"xor\") (and \"and\")])\n \n (define_expand \"atomic_compare_and_swap<mode>\"\n-  [(match_operand:QI 0 \"register_operand\" \"\")\t\t;; bool success output\n+  [(match_operand:SI 0 \"register_operand\" \"\")\t\t;; bool success output\n    (match_operand:I124 1 \"register_operand\" \"\")\t\t;; oldval output\n    (match_operand:I124 2 \"memory_operand\" \"\")\t\t;; memory\n    (match_operand:I124 3 \"register_operand\" \"\")\t\t;; expected input\n@@ -131,7 +131,7 @@\n   else if (<MODE>mode == HImode)\n     emit_insn (gen_zero_extendhisi2 (gen_lowpart (SImode, operands[1]),\n \t\t\t\t     operands[1]));\n-  emit_insn (gen_movqi (operands[0], gen_rtx_REG (QImode, T_REG)));\n+  emit_insn (gen_movsi (operands[0], gen_rtx_REG (SImode, T_REG)));\n   DONE;\n })\n \n@@ -144,8 +144,8 @@\n \t  UNSPECV_CMPXCHG_1))\n    (set (mem:I124 (match_dup 1))\n \t(unspec_volatile:I124 [(const_int 0)] UNSPECV_CMPXCHG_2))\n-   (set (reg:QI T_REG)\n-\t(unspec_volatile:QI [(const_int 0)] UNSPECV_CMPXCHG_3))\n+   (set (reg:SI T_REG)\n+\t(unspec_volatile:SI [(const_int 0)] UNSPECV_CMPXCHG_3))\n    (clobber (match_scratch:SI 4 \"=&u\"))\n    (clobber (reg:SI R0_REG))\n    (clobber (reg:SI R1_REG))]"}]}