{"sha": "cfb1582ce3fd2524f32fb009c59e84dc999db4f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZiMTU4MmNlM2ZkMjUyNGYzMmZiMDA5YzU5ZTg0ZGM5OTlkYjRmOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-01-16T19:55:12Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-01-16T19:55:12Z"}, "message": "re PR c++/59821 (__builtin_LINE and __builtin_FILE for new'd objects is wrong)\n\n\tPR c++/59821\n\t* tree.c (bot_manip): Update the location of builtin_LINE and\n\tbuiltin_FILE calls.\n\nFrom-SVN: r206686", "tree": {"sha": "512300df630ee084b93066981e5a3d43ef3d5010", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/512300df630ee084b93066981e5a3d43ef3d5010"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfb1582ce3fd2524f32fb009c59e84dc999db4f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfb1582ce3fd2524f32fb009c59e84dc999db4f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfb1582ce3fd2524f32fb009c59e84dc999db4f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfb1582ce3fd2524f32fb009c59e84dc999db4f9/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "42ed6cde4bd468d169ac198ef593aa4c686e7117", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42ed6cde4bd468d169ac198ef593aa4c686e7117", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42ed6cde4bd468d169ac198ef593aa4c686e7117"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "848c406ecf4d86d30837f0b91b01c548c60c444f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfb1582ce3fd2524f32fb009c59e84dc999db4f9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfb1582ce3fd2524f32fb009c59e84dc999db4f9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cfb1582ce3fd2524f32fb009c59e84dc999db4f9", "patch": "@@ -1,3 +1,9 @@\n+2014-01-16  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/59821\n+\t* tree.c (bot_manip): Update the location of builtin_LINE and\n+\tbuiltin_FILE calls.\n+\n 2014-01-14  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/59659"}, {"sha": "ce41c3b1930277b44bab7c2ee49d1b14272c3a80", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfb1582ce3fd2524f32fb009c59e84dc999db4f9/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfb1582ce3fd2524f32fb009c59e84dc999db4f9/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=cfb1582ce3fd2524f32fb009c59e84dc999db4f9", "patch": "@@ -2306,7 +2306,20 @@ bot_manip (tree* tp, int* walk_subtrees, void* data)\n   /* Make a copy of this node.  */\n   t = copy_tree_r (tp, walk_subtrees, NULL);\n   if (TREE_CODE (*tp) == CALL_EXPR)\n-    set_flags_from_callee (*tp);\n+    {\n+      set_flags_from_callee (*tp);\n+\n+      /* builtin_LINE and builtin_FILE get the location where the default\n+\t argument is expanded, not where the call was written.  */\n+      tree callee = get_callee_fndecl (*tp);\n+      if (callee && DECL_BUILT_IN (callee))\n+\tswitch (DECL_FUNCTION_CODE (callee))\n+\t  {\n+\t  case BUILT_IN_FILE:\n+\t  case BUILT_IN_LINE:\n+\t    SET_EXPR_LOCATION (*tp, input_location);\n+\t  }\n+    }\n   return t;\n }\n "}, {"sha": "2f4f91d233aca4c813759f08be88e29afd4ed85b", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfb1582ce3fd2524f32fb009c59e84dc999db4f9/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfb1582ce3fd2524f32fb009c59e84dc999db4f9/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=cfb1582ce3fd2524f32fb009c59e84dc999db4f9", "patch": "@@ -8726,6 +8726,8 @@ means that the compiler can assume for @code{x}, set to @code{arg}, that\n @deftypefn {Built-in Function} int __builtin_LINE ()\n This function is the equivalent to the preprocessor @code{__LINE__}\n macro and returns the line number of the invocation of the built-in.\n+In a C++ default argument for a function @var{F}, it gets the line number of\n+the call to @var{F}.\n @end deftypefn\n \n @deftypefn {Built-in Function} {const char *} __builtin_FUNCTION ()\n@@ -8736,6 +8738,8 @@ macro and returns the function name the invocation of the built-in is in.\n @deftypefn {Built-in Function} {const char *} __builtin_FILE ()\n This function is the equivalent to the preprocessor @code{__FILE__}\n macro and returns the file name the invocation of the built-in is in.\n+In a C++ default argument for a function @var{F}, it gets the file name of\n+the call to @var{F}.\n @end deftypefn\n \n @deftypefn {Built-in Function} void __builtin___clear_cache (char *@var{begin}, char *@var{end})"}, {"sha": "21a4f59a46f3393b56e9842a97a509ef8a8ff2c0", "filename": "gcc/testsuite/g++.dg/ext/builtin-line1.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfb1582ce3fd2524f32fb009c59e84dc999db4f9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin-line1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfb1582ce3fd2524f32fb009c59e84dc999db4f9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin-line1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin-line1.C?ref=cfb1582ce3fd2524f32fb009c59e84dc999db4f9", "patch": "@@ -0,0 +1,17 @@\n+// __builtin_LINE gets the location where the default argument is expanded.\n+// { dg-do run }\n+\n+#include <cassert>\n+struct Foo\n+{\n+  int line;\n+  Foo( int line = __builtin_LINE() )\n+    : line( line )\n+  {}\n+};\n+\n+int main()\n+{\n+  assert (Foo().line == __LINE__);\n+  assert ((new Foo)->line == __LINE__);\n+}"}]}