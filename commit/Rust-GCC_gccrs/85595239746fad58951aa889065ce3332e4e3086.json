{"sha": "85595239746fad58951aa889065ce3332e4e3086", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODU1OTUyMzk3NDZmYWQ1ODk1MWFhODg5MDY1Y2UzMzMyZTRlMzA4Ng==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2001-05-04T19:33:10Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2001-05-04T19:33:10Z"}, "message": "Thread_Wait_Interrupt.xfail: New file.\n\n\t* libjava.lang/Thread_Wait_Interrupt.xfail: New file.\n\t* libjava.lang/Thread_Wait_2.xfail: New file.\n\t* libjava.lang/Thread_Wait.xfail: New file.\n\t* libjava.lang/Thread_Sleep.xfail: New file.\n\t* libjava.lang/Thread_Monitor.xfail: New file.\n\t* libjava.lang/Thread_Join.xfail: New file.\n\t* libjava.lang/Thread_Interrupt.xfail: New file.\n\t* libjava.lang/Thread_Alive.xfail: New file.\n\t* lib/libjava.exp (libjava_init): Set global\n\tlibjava_uses_threads.\n\t(test_libjava): Document `need-threads' tag.\n\t(test_libjava_from_source): handle need-threads tag.\n\t(test_libjava_from_javac): Likewise.\n\nFrom-SVN: r41840", "tree": {"sha": "8d980bd2387af88e3c4cdab68c0432e6f88b77f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d980bd2387af88e3c4cdab68c0432e6f88b77f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85595239746fad58951aa889065ce3332e4e3086", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85595239746fad58951aa889065ce3332e4e3086", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85595239746fad58951aa889065ce3332e4e3086", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85595239746fad58951aa889065ce3332e4e3086/comments", "author": null, "committer": null, "parents": [{"sha": "1fc77d36ad837013365eede5dc038e0de896264b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fc77d36ad837013365eede5dc038e0de896264b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fc77d36ad837013365eede5dc038e0de896264b"}], "stats": {"total": 87, "additions": 78, "deletions": 9}, "files": [{"sha": "c172cfba476902e30859f6d32b7674add03ecb0b", "filename": "libjava/testsuite/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85595239746fad58951aa889065ce3332e4e3086/libjava%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85595239746fad58951aa889065ce3332e4e3086/libjava%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FChangeLog?ref=85595239746fad58951aa889065ce3332e4e3086", "patch": "@@ -1,3 +1,19 @@\n+2001-05-03  Tom Tromey  <tromey@redhat.com>\n+\n+\t* libjava.lang/Thread_Wait_Interrupt.xfail: New file.\n+\t* libjava.lang/Thread_Wait_2.xfail: New file.\n+\t* libjava.lang/Thread_Wait.xfail: New file.\n+\t* libjava.lang/Thread_Sleep.xfail: New file.\n+\t* libjava.lang/Thread_Monitor.xfail: New file.\n+\t* libjava.lang/Thread_Join.xfail: New file.\n+\t* libjava.lang/Thread_Interrupt.xfail: New file.\n+\t* libjava.lang/Thread_Alive.xfail: New file.\n+\t* lib/libjava.exp (libjava_init): Set global\n+\tlibjava_uses_threads.\n+\t(test_libjava): Document `need-threads' tag.\n+\t(test_libjava_from_source): handle need-threads tag.\n+\t(test_libjava_from_javac): Likewise.\n+\n 2001-05-03  Tom Tromey  <tromey@redhat.com>\n \n \t* libjava.lang/err11.xfail: Removed."}, {"sha": "22ec065f1fb7aef5ffd6f6638b0367359067d189", "filename": "libjava/testsuite/lib/libjava.exp", "status": "modified", "additions": 54, "deletions": 9, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85595239746fad58951aa889065ce3332e4e3086/libjava%2Ftestsuite%2Flib%2Flibjava.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85595239746fad58951aa889065ce3332e4e3086/libjava%2Ftestsuite%2Flib%2Flibjava.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flib%2Flibjava.exp?ref=85595239746fad58951aa889065ce3332e4e3086", "patch": "@@ -107,11 +107,11 @@ set libjava_initialized 0\n proc libjava_init { args } {\n     global wrapper_file;\n     global wrap_compile_flags;\n-    global libjava_initialized\n+    global libjava_initialized libjava_uses_threads\n     global GCJ_UNDER_TEST\n     global TOOL_EXECUTABLE\n     global original_ld_library_path\n-    global env\n+    global env objdir\n \n     if { $libjava_initialized == 1 } { return; }\n \n@@ -127,6 +127,13 @@ proc libjava_init { args } {\n \t}\n     }\n \n+    # The -B is so we find libgcj.spec.\n+    set text [eval exec \"$GCJ_UNDER_TEST -B$objdir/../ -v 2>@ stdout\"]\n+    regexp -- \"Thread model: (\\[^\\n\\]+)\\n\" $text ignore model\n+    set libjava_uses_threads [expr {! ($model == \"no\"\n+\t\t\t\t       || $model == \"none\"\n+\t\t\t\t       || $model == \"single\")}]\n+\n     # Always set encoding used by gcj.\n     append GCJ_UNDER_TEST \" --encoding=UTF-8\"\n \n@@ -331,6 +338,15 @@ proc test_libjava_from_source { options srcfile compile_args inpfile resultfile\n \tset opts($item) x\n     }\n \n+    # If we need threads and we don't have them then set the `no-exec'\n+    # flag.  This is case is also handled specially later.\n+    if {[info exists opts(need-threads)]} {\n+\tglobal libjava_uses_threads\n+\tif {! $libjava_uses_threads} {\n+\t    set opts(no-exec) x\n+\t}\n+    }\n+\n     set errname [file rootname [file tail $srcfile]]\n     if {! [runtest_file_p $runtests $errname]} {\n         return\n@@ -376,7 +392,9 @@ proc test_libjava_from_source { options srcfile compile_args inpfile resultfile\n \t}\n \n \tfail \"$errname compilation from source\"\n-\tif {[info exists opts(xfail-gcj)] || ! [info exists opts(no-exec)]} {\n+\tif {[info exists opts(xfail-gcj)]\n+\t    || ! [info exists opts(no-exec)]\n+\t    || [info exists opts(need-threads)]} {\n \t    untested \"$errname execution from source compiled test\"\n \t    untested \"$errname output from source compiled test\"\n \t}\n@@ -388,8 +406,17 @@ proc test_libjava_from_source { options srcfile compile_args inpfile resultfile\n     }\n     pass \"$errname compilation from source\"\n \n-    if {[info exists opts(no-exec)]\n-\t|| [info exists opts(no-link)]} {\n+    if {[info exists opts(no-exec)]} {\n+\tif {[info exists opts(need-threads)]} {\n+\t    # This means we wanted to try to run it but we couldn't\n+\t    # because threads aren't supported.  So we have to\n+\t    # generate an `untested'.\n+\t    untested \"$errname execution from source compiled test\"\n+\t    untested \"$errname output from source compiled test\"\n+\t}\n+\treturn\n+    }\n+    if {[info exists opts(no-link)]} {\n \treturn\n     }\n \n@@ -464,6 +491,14 @@ proc test_libjava_from_javac { options srcfile compile_args inpfile resultfile e\n \tset opts($item) x\n     }\n \n+    # If we need threads and we don't have them then set the `no-exec'\n+    # flag.  This is case is also handled specially later.\n+    if {[info exists opts(need-threads)]} {\n+\tglobal libjava_uses_threads\n+\tif {! $libjava_uses_threads} {\n+\t    set opts(no-exec) x\n+\t}\n+    }\n     set errname [file rootname [file tail $srcfile]]\n     if {! [runtest_file_p $runtests $errname]} {\n         return\n@@ -489,7 +524,8 @@ proc test_libjava_from_javac { options srcfile compile_args inpfile resultfile e\n \t}\n \tfail \"$errname byte compilation\"\n \tuntested \"$errname compilation from bytecode\"\n-\tif {! [info exists opts(no-exec)]} {\n+\tif {! [info exists opts(no-exec)]\n+\t    || [info exists opts(need-threads)]} {\n \t    untested \"$errname execution from bytecode->native test\"\n \t    untested \"$errname output from bytecode->native test\"\n \t}\n@@ -521,7 +557,8 @@ proc test_libjava_from_javac { options srcfile compile_args inpfile resultfile e\n     if {[string match \"*parse error*\" $main_name]\n \t|| [string match \"*parse error*\" $class_out]} {\n \tuntested \"$errname compilation from bytecode\"\n-\tif {! [info exists opts(no-exec)]} {\n+\tif {! [info exists opts(no-exec)]\n+\t    || [info exists opts(need-threads)]} {\n \t    untested \"$errname execution from bytecode->native test\"\n \t    untested \"$errname output from bytecode->native test\"\n \t}\n@@ -599,7 +636,8 @@ proc test_libjava_from_javac { options srcfile compile_args inpfile resultfile e\n     if { $x != \"\" } {\n \tverbose \"target_compile failed: $x\" 2\n \tfail \"$errname compilation from bytecode\"\n-\tif {! [info exists opts(no-exec)]} {\n+\tif {! [info exists opts(no-exec)]\n+\t    || [info exists opts(need-threads)]} {\n \t    untested \"$errname execution from bytecode->native test\"\n \t    untested \"$errname output from bytecode->native test\"\n \t}\n@@ -608,6 +646,10 @@ proc test_libjava_from_javac { options srcfile compile_args inpfile resultfile e\n     pass \"$errname compilation from bytecode\"\n \n     if {[info exists opts(no-exec)]} {\n+\tif {[info exists opts(need-threads)]} {\n+\t    untested \"$errname execution from bytecode->native test\"\n+\t    untested \"$errname output from bytecode->native test\"\n+\t}\n \treturn\n     }\n \n@@ -676,7 +718,10 @@ proc test_libjava_from_javac { options srcfile compile_args inpfile resultfile e\n #                 front end.\n #   `xfail-byte'  compilation from bytecode will fail\n #   `xfail-exec'  exec will fail\n-#   `xfail-output' output will be wrong\n+#   `xfail-output'\n+#                 output will be wrong\n+#   `need-threads'\n+#                 test relies on thread support\n #\n proc test_libjava { options srcfile compile_args inpfile resultfile exec_args } {\n     test_libjava_from_source $options $srcfile $compile_args $inpfile $resultfile $exec_args"}, {"sha": "3f95317a45002fabbf1795b806f82f076eeb5760", "filename": "libjava/testsuite/libjava.lang/Thread_Alive.xfail", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85595239746fad58951aa889065ce3332e4e3086/libjava%2Ftestsuite%2Flibjava.lang%2FThread_Alive.xfail", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85595239746fad58951aa889065ce3332e4e3086/libjava%2Ftestsuite%2Flibjava.lang%2FThread_Alive.xfail", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2FThread_Alive.xfail?ref=85595239746fad58951aa889065ce3332e4e3086", "patch": "@@ -0,0 +1 @@\n+need-threads"}, {"sha": "3f95317a45002fabbf1795b806f82f076eeb5760", "filename": "libjava/testsuite/libjava.lang/Thread_Interrupt.xfail", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85595239746fad58951aa889065ce3332e4e3086/libjava%2Ftestsuite%2Flibjava.lang%2FThread_Interrupt.xfail", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85595239746fad58951aa889065ce3332e4e3086/libjava%2Ftestsuite%2Flibjava.lang%2FThread_Interrupt.xfail", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2FThread_Interrupt.xfail?ref=85595239746fad58951aa889065ce3332e4e3086", "patch": "@@ -0,0 +1 @@\n+need-threads"}, {"sha": "3f95317a45002fabbf1795b806f82f076eeb5760", "filename": "libjava/testsuite/libjava.lang/Thread_Join.xfail", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85595239746fad58951aa889065ce3332e4e3086/libjava%2Ftestsuite%2Flibjava.lang%2FThread_Join.xfail", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85595239746fad58951aa889065ce3332e4e3086/libjava%2Ftestsuite%2Flibjava.lang%2FThread_Join.xfail", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2FThread_Join.xfail?ref=85595239746fad58951aa889065ce3332e4e3086", "patch": "@@ -0,0 +1 @@\n+need-threads"}, {"sha": "3f95317a45002fabbf1795b806f82f076eeb5760", "filename": "libjava/testsuite/libjava.lang/Thread_Monitor.xfail", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85595239746fad58951aa889065ce3332e4e3086/libjava%2Ftestsuite%2Flibjava.lang%2FThread_Monitor.xfail", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85595239746fad58951aa889065ce3332e4e3086/libjava%2Ftestsuite%2Flibjava.lang%2FThread_Monitor.xfail", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2FThread_Monitor.xfail?ref=85595239746fad58951aa889065ce3332e4e3086", "patch": "@@ -0,0 +1 @@\n+need-threads"}, {"sha": "3f95317a45002fabbf1795b806f82f076eeb5760", "filename": "libjava/testsuite/libjava.lang/Thread_Sleep.xfail", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85595239746fad58951aa889065ce3332e4e3086/libjava%2Ftestsuite%2Flibjava.lang%2FThread_Sleep.xfail", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85595239746fad58951aa889065ce3332e4e3086/libjava%2Ftestsuite%2Flibjava.lang%2FThread_Sleep.xfail", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2FThread_Sleep.xfail?ref=85595239746fad58951aa889065ce3332e4e3086", "patch": "@@ -0,0 +1 @@\n+need-threads"}, {"sha": "3f95317a45002fabbf1795b806f82f076eeb5760", "filename": "libjava/testsuite/libjava.lang/Thread_Wait.xfail", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85595239746fad58951aa889065ce3332e4e3086/libjava%2Ftestsuite%2Flibjava.lang%2FThread_Wait.xfail", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85595239746fad58951aa889065ce3332e4e3086/libjava%2Ftestsuite%2Flibjava.lang%2FThread_Wait.xfail", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2FThread_Wait.xfail?ref=85595239746fad58951aa889065ce3332e4e3086", "patch": "@@ -0,0 +1 @@\n+need-threads"}, {"sha": "3f95317a45002fabbf1795b806f82f076eeb5760", "filename": "libjava/testsuite/libjava.lang/Thread_Wait_2.xfail", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85595239746fad58951aa889065ce3332e4e3086/libjava%2Ftestsuite%2Flibjava.lang%2FThread_Wait_2.xfail", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85595239746fad58951aa889065ce3332e4e3086/libjava%2Ftestsuite%2Flibjava.lang%2FThread_Wait_2.xfail", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2FThread_Wait_2.xfail?ref=85595239746fad58951aa889065ce3332e4e3086", "patch": "@@ -0,0 +1 @@\n+need-threads"}, {"sha": "3f95317a45002fabbf1795b806f82f076eeb5760", "filename": "libjava/testsuite/libjava.lang/Thread_Wait_Interrupt.xfail", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85595239746fad58951aa889065ce3332e4e3086/libjava%2Ftestsuite%2Flibjava.lang%2FThread_Wait_Interrupt.xfail", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85595239746fad58951aa889065ce3332e4e3086/libjava%2Ftestsuite%2Flibjava.lang%2FThread_Wait_Interrupt.xfail", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2FThread_Wait_Interrupt.xfail?ref=85595239746fad58951aa889065ce3332e4e3086", "patch": "@@ -0,0 +1 @@\n+need-threads"}]}