{"sha": "0294dc5f4eec5a07d70fac48f75c498c3b1a339b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDI5NGRjNWY0ZWVjNWEwN2Q3MGZhYzQ4Zjc1YzQ5OGMzYjFhMzM5Yg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-02-19T21:40:03Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-02-19T21:40:03Z"}, "message": "libstdc++: Simplify std::totally_ordered (LWG 3331)\n\n\t* include/std/concepts (__detail::__partially_ordered_with): Move here\n\tfrom <compare>.\n\t(totally_ordered, totally_ordered_with): Use __partially_ordered_with\n\tto simplify definition (LWG 3331).\n\t* libsupc++/compare (__detail::__partially_ordered_with): Move to\n\t<concepts>.", "tree": {"sha": "60bf1841275438ef8d86f25753108a0488f78026", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60bf1841275438ef8d86f25753108a0488f78026"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0294dc5f4eec5a07d70fac48f75c498c3b1a339b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0294dc5f4eec5a07d70fac48f75c498c3b1a339b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0294dc5f4eec5a07d70fac48f75c498c3b1a339b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0294dc5f4eec5a07d70fac48f75c498c3b1a339b/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "241ed965509ac931e9ae5f331d0294c1ee4ccd89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/241ed965509ac931e9ae5f331d0294c1ee4ccd89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/241ed965509ac931e9ae5f331d0294c1ee4ccd89"}], "stats": {"total": 56, "additions": 26, "deletions": 30}, "files": [{"sha": "1711a35925625cd1aa20e39991079e8ab48ab082", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0294dc5f4eec5a07d70fac48f75c498c3b1a339b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0294dc5f4eec5a07d70fac48f75c498c3b1a339b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0294dc5f4eec5a07d70fac48f75c498c3b1a339b", "patch": "@@ -1,5 +1,12 @@\n 2020-02-19  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/std/concepts (__detail::__partially_ordered_with): Move here\n+\tfrom <compare>.\n+\t(totally_ordered, totally_ordered_with): Use __partially_ordered_with\n+\tto simplify definition (LWG 3331).\n+\t* libsupc++/compare (__detail::__partially_ordered_with): Move to\n+\t<concepts>.\n+\n \t* include/std/concepts (totally_ordered_with): Remove redundant\n \trequirement (LWG 3329).\n "}, {"sha": "ba232e953ecaefd77a20efd098ec732179f75e20", "filename": "libstdc++-v3/include/std/concepts", "status": "modified", "additions": 19, "deletions": 16, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0294dc5f4eec5a07d70fac48f75c498c3b1a339b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fconcepts", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0294dc5f4eec5a07d70fac48f75c498c3b1a339b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fconcepts", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fconcepts?ref=0294dc5f4eec5a07d70fac48f75c498c3b1a339b", "patch": "@@ -297,33 +297,36 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t\t\t\t\t__detail::__cref<_Up>>>\n       && __detail::__weakly_eq_cmp_with<_Tp, _Up>;\n \n+  namespace __detail\n+  {\n+    template<typename _Tp, typename _Up>\n+      concept __partially_ordered_with\n+\t= requires(const remove_reference_t<_Tp>& __t,\n+\t\t   const remove_reference_t<_Up>& __u) {\n+\t  { __t <  __u } -> __boolean_testable;\n+\t  { __t >  __u } -> __boolean_testable;\n+\t  { __t <= __u } -> __boolean_testable;\n+\t  { __t >= __u } -> __boolean_testable;\n+\t  { __u <  __t } -> __boolean_testable;\n+\t  { __u >  __t } -> __boolean_testable;\n+\t  { __u <= __t } -> __boolean_testable;\n+\t  { __u >= __t } -> __boolean_testable;\n+\t};\n+  } // namespace __detail\n+\n   // [concept.totallyordered], concept totally_ordered\n   template<typename _Tp>\n     concept totally_ordered\n       = equality_comparable<_Tp>\n-      && requires(__detail::__cref<_Tp> __a, __detail::__cref<_Tp> __b) {\n-\t{ __a <  __b } -> __detail::__boolean_testable;\n-\t{ __a >  __b } -> __detail::__boolean_testable;\n-\t{ __a <= __b } -> __detail::__boolean_testable;\n-\t{ __a >= __b } -> __detail::__boolean_testable;\n-      };\n+      && __detail::__partially_ordered_with<_Tp, _Tp>;\n \n   template<typename _Tp, typename _Up>\n     concept totally_ordered_with\n       = totally_ordered<_Tp> && totally_ordered<_Up>\n       && equality_comparable_with<_Tp, _Up>\n       && totally_ordered<common_reference_t<__detail::__cref<_Tp>,\n \t\t\t\t\t    __detail::__cref<_Up>>>\n-      && requires(__detail::__cref<_Tp> __t, __detail::__cref<_Up> __u) {\n-\t{ __t <  __u } -> __detail::__boolean_testable;\n-\t{ __t >  __u } -> __detail::__boolean_testable;\n-\t{ __t <= __u } -> __detail::__boolean_testable;\n-\t{ __t >= __u } -> __detail::__boolean_testable;\n-\t{ __u <  __t } -> __detail::__boolean_testable;\n-\t{ __u >  __t } -> __detail::__boolean_testable;\n-\t{ __u <= __t } -> __detail::__boolean_testable;\n-\t{ __u >= __t } -> __detail::__boolean_testable;\n-      };\n+      && __detail::__partially_ordered_with<_Tp, _Up>;\n \n   template<typename _Tp>\n     concept regular = semiregular<_Tp> && equality_comparable<_Tp>;"}, {"sha": "a74ebc845bf8e8b9c55ea6c1ab1b0b6c631f3596", "filename": "libstdc++-v3/libsupc++/compare", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0294dc5f4eec5a07d70fac48f75c498c3b1a339b/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcompare", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0294dc5f4eec5a07d70fac48f75c498c3b1a339b/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcompare", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcompare?ref=0294dc5f4eec5a07d70fac48f75c498c3b1a339b", "patch": "@@ -411,20 +411,6 @@ namespace std\n     template<typename _Tp, typename _Cat>\n       concept __compares_as\n \t= same_as<common_comparison_category_t<_Tp, _Cat>, _Cat>;\n-\n-    template<typename _Tp, typename _Up>\n-      concept __partially_ordered_with\n-\t= requires(const remove_reference_t<_Tp>& __t,\n-\t\t   const remove_reference_t<_Up>& __u) {\n-\t  { __t <  __u } -> __boolean_testable;\n-\t  { __t >  __u } -> __boolean_testable;\n-\t  { __t <= __u } -> __boolean_testable;\n-\t  { __t >= __u } -> __boolean_testable;\n-\t  { __u <  __t } -> __boolean_testable;\n-\t  { __u >  __t } -> __boolean_testable;\n-\t  { __u <= __t } -> __boolean_testable;\n-\t  { __u >= __t } -> __boolean_testable;\n-\t};\n   } // namespace __detail\n \n   // [cmp.concept], concept three_way_comparable"}]}