{"sha": "7fc89bbe4ea7e4d4acace80341e9a71db5949a22", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZjODliYmU0ZWE3ZTRkNGFjYWNlODAzNDFlOWE3MWRiNTk0OWEyMg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-04-17T14:12:11Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-04-17T14:12:11Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r762", "tree": {"sha": "1a6d76c927a796e7c982d6b97fc6713fa7fb634d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a6d76c927a796e7c982d6b97fc6713fa7fb634d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7fc89bbe4ea7e4d4acace80341e9a71db5949a22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fc89bbe4ea7e4d4acace80341e9a71db5949a22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fc89bbe4ea7e4d4acace80341e9a71db5949a22", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fc89bbe4ea7e4d4acace80341e9a71db5949a22/comments", "author": null, "committer": null, "parents": [{"sha": "ddbe9812b118487d499a1a452f8f3b5cd8d79f4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddbe9812b118487d499a1a452f8f3b5cd8d79f4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddbe9812b118487d499a1a452f8f3b5cd8d79f4f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "70bebe4795ac86d4c04b06e82d718a3c9e5e3ab6", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fc89bbe4ea7e4d4acace80341e9a71db5949a22/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fc89bbe4ea7e4d4acace80341e9a71db5949a22/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=7fc89bbe4ea7e4d4acace80341e9a71db5949a22", "patch": "@@ -2944,7 +2944,7 @@ build_unary_op (code, xarg, noconvert)\n \n \tif (typecode == POINTER_TYPE)\n \t  {\n-\t    if (pedantic\n+\t    if ((pedantic || warn_pointer_arith)\n \t\t&& (TREE_CODE (TREE_TYPE (result_type)) == FUNCTION_TYPE\n \t\t    || TREE_CODE (TREE_TYPE (result_type)) == VOID_TYPE))\n \t      pedwarn (\"wrong type argument to %s\","}]}