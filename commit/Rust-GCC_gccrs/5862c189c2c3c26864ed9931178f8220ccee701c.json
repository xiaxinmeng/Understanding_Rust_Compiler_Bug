{"sha": "5862c189c2c3c26864ed9931178f8220ccee701c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTg2MmMxODljMmMzYzI2ODY0ZWQ5OTMxMTc4ZjgyMjBjY2VlNzAxYw==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2015-06-24T22:16:42Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2015-06-24T22:16:42Z"}, "message": "The problem is that diagnostic_action_after_output tries to delete the active pretty-printer which tries to delete its output_buffer...\n\nThe problem is that diagnostic_action_after_output tries to delete the active\npretty-printer which tries to delete its output_buffer, which is normally\ndynamically allocated via placement-new, but the output_buffer used by the\nerror_buffer of Fortran is statically allocated. Being statically allocated\nsimplifies a lot pushing/poping several instances of error_buffer.\n\nThe solution is to reset the active output_buffer back to the default one\nbefore calling diagnostic_action_after_output. This is a bit ugly, because this\nfunction does use the output_buffer, however, at the point that Fortran calls\nit, both are in an equivalent state, thus there is no visible difference.\n\ngcc/testsuite/ChangeLog:\n\n2015-06-24  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n\tPR fortran/66528\n\t* gfortran.dg/maxerrors.f90: New test.\n\ngcc/fortran/ChangeLog:\n\n2015-06-24  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n\tPR fortran/66528\n\t* error.c (gfc_warning_check): Restore the default output_buffer\n\tbefore calling diagnostic_action_after_output.\n\t(gfc_error_check): Likewise.\n\t(gfc_diagnostics_init): Add comment.\n\nFrom-SVN: r224926", "tree": {"sha": "e81edd67a3b77dde68f383afc975aefbcbc1092d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e81edd67a3b77dde68f383afc975aefbcbc1092d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5862c189c2c3c26864ed9931178f8220ccee701c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5862c189c2c3c26864ed9931178f8220ccee701c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5862c189c2c3c26864ed9931178f8220ccee701c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5862c189c2c3c26864ed9931178f8220ccee701c/comments", "author": null, "committer": null, "parents": [{"sha": "b6d10e0b06b82a100a695ae13659c71be34bb032", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6d10e0b06b82a100a695ae13659c71be34bb032", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6d10e0b06b82a100a695ae13659c71be34bb032"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "52f24b20b7a571ad3f57510012c58bc53b9a102a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5862c189c2c3c26864ed9931178f8220ccee701c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5862c189c2c3c26864ed9931178f8220ccee701c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=5862c189c2c3c26864ed9931178f8220ccee701c", "patch": "@@ -1,3 +1,11 @@\n+2015-06-24  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR fortran/66528\n+\t* error.c (gfc_warning_check): Restore the default output_buffer\n+\tbefore calling diagnostic_action_after_output.\n+\t(gfc_error_check): Likewise.\n+\t(gfc_diagnostics_init): Add comment.\n+\n 2015-06-23  Andre Vehreschild  <vehre@gmx.de>\n \n \tPR fortran/64674"}, {"sha": "c7d8581f9708bac7e587b3bec5b7dbca90cf6c0a", "filename": "gcc/fortran/error.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5862c189c2c3c26864ed9931178f8220ccee701c/gcc%2Ffortran%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5862c189c2c3c26864ed9931178f8220ccee701c/gcc%2Ffortran%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ferror.c?ref=5862c189c2c3c26864ed9931178f8220ccee701c", "patch": "@@ -1249,7 +1249,6 @@ gfc_clear_warning (void)\n void\n gfc_warning_check (void)\n {\n-  /* This is for the new diagnostics machinery.  */\n   if (! gfc_output_buffer_empty_p (pp_warning_buffer))\n     {\n       pretty_printer *pp = global_dc->printer;\n@@ -1259,10 +1258,10 @@ gfc_warning_check (void)\n       warningcount += warningcount_buffered;\n       werrorcount += werrorcount_buffered;\n       gcc_assert (warningcount_buffered + werrorcount_buffered == 1);\n+      pp->buffer = tmp_buffer;\n       diagnostic_action_after_output (global_dc, \n \t\t\t\t      warningcount_buffered \n \t\t\t\t      ? DK_WARNING : DK_ERROR);\n-      pp->buffer = tmp_buffer;\n     }\n }\n \n@@ -1381,8 +1380,8 @@ gfc_error_check (void)\n       pp_really_flush (pp);\n       ++errorcount;\n       gcc_assert (gfc_output_buffer_empty_p (pp_error_buffer));\n-      diagnostic_action_after_output (global_dc, DK_ERROR);\n       pp->buffer = tmp_buffer;\n+      diagnostic_action_after_output (global_dc, DK_ERROR);\n       return true;\n     }\n \n@@ -1472,6 +1471,8 @@ gfc_diagnostics_init (void)\n   global_dc->caret_chars[1] = '2';\n   pp_warning_buffer = new (XNEW (output_buffer)) output_buffer ();\n   pp_warning_buffer->flush_p = false;\n+  /* pp_error_buffer is statically allocated.  This simplifies memory\n+     management when using gfc_push/pop_error. */\n   pp_error_buffer = &(error_buffer.buffer);\n   pp_error_buffer->flush_p = false;\n }"}, {"sha": "699e70c4a8540aa6b24482230f86613bd20c3b0a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5862c189c2c3c26864ed9931178f8220ccee701c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5862c189c2c3c26864ed9931178f8220ccee701c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5862c189c2c3c26864ed9931178f8220ccee701c", "patch": "@@ -1,3 +1,8 @@\n+2015-06-24  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR fortran/66528\n+\t* gfortran.dg/maxerrors.f90: New test.\n+\n 2015-06-08  DJ Delorie  <dj@redhat.com>\n \n \t* gcc.dg/torture/pr66345.c: Fix assumption about size_t type."}, {"sha": "6c3232d2f3258f24b0e2e7fd0c55113f9176ad68", "filename": "gcc/testsuite/gfortran.dg/maxerrors.f90", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5862c189c2c3c26864ed9931178f8220ccee701c/gcc%2Ftestsuite%2Fgfortran.dg%2Fmaxerrors.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5862c189c2c3c26864ed9931178f8220ccee701c/gcc%2Ftestsuite%2Fgfortran.dg%2Fmaxerrors.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmaxerrors.f90?ref=5862c189c2c3c26864ed9931178f8220ccee701c", "patch": "@@ -0,0 +1,12 @@\n+! { dg-do compile }\n+! { dg-options \"-fmax-errors=1\" }\n+! PR66528\n+! { dg-prune-output \"compilation terminated\" }\n+program main\n+  read (*,*) n\n+  if (n<0) then\n+    print *,foo\n+  end ! { dg-error \"END IF statement expected\" }\n+    print *,bar\n+end program main\n+"}]}