{"sha": "4cdd4a33f42e0b3373bf74564d036a277dfc0dc1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNkZDRhMzNmNDJlMGIzMzczYmY3NDU2NGQwMzZhMjc3ZGZjMGRjMQ==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2019-12-12T10:03:20Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-12-12T10:03:20Z"}, "message": "[Ada] Fix various typos, plus minor reformatting\n\n2019-12-12  Gary Dismukes  <dismukes@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch4.adb, sem_res.adb: Minor reformatting.\n\nFrom-SVN: r279298", "tree": {"sha": "c2bb0bdcdc2ca29a72a77e2343674d4955eac844", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2bb0bdcdc2ca29a72a77e2343674d4955eac844"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4cdd4a33f42e0b3373bf74564d036a277dfc0dc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cdd4a33f42e0b3373bf74564d036a277dfc0dc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cdd4a33f42e0b3373bf74564d036a277dfc0dc1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cdd4a33f42e0b3373bf74564d036a277dfc0dc1/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2f0a921fadf4e8bcc2820db0da227366ecd50bf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f0a921fadf4e8bcc2820db0da227366ecd50bf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f0a921fadf4e8bcc2820db0da227366ecd50bf7"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "6396ee6a5c8f2f98989e09e12c08d91ceeb60cfa", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cdd4a33f42e0b3373bf74564d036a277dfc0dc1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cdd4a33f42e0b3373bf74564d036a277dfc0dc1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4cdd4a33f42e0b3373bf74564d036a277dfc0dc1", "patch": "@@ -1,3 +1,7 @@\n+2019-12-12  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_ch4.adb, sem_res.adb: Minor reformatting.\n+\n 2019-12-12  Justin Squirek  <squirek@adacore.com>\n \n \t* sem_ch4.adb (Analyze_One_Call): Add condition to check for"}, {"sha": "80be4d6636882cfa5a1af33b333324ae88003aa2", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cdd4a33f42e0b3373bf74564d036a277dfc0dc1/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cdd4a33f42e0b3373bf74564d036a277dfc0dc1/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=4cdd4a33f42e0b3373bf74564d036a277dfc0dc1", "patch": "@@ -3747,7 +3747,7 @@ package body Sem_Ch4 is\n          --  Due to our current model of controlled type expansion we may\n          --  have resolved a user call to a non-visible controlled primitive\n          --  since these inherited subprograms may be generated in the current\n-         --  scope. This is a side-effect of the need for the expander to be\n+         --  scope. This is a side effect of the need for the expander to be\n          --  able to resolve internally generated calls.\n \n          --  Specifically, the issue appears when predefined controlled"}, {"sha": "22d89a34c410a8e1a5782cf608c19228cee6f457", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cdd4a33f42e0b3373bf74564d036a277dfc0dc1/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cdd4a33f42e0b3373bf74564d036a277dfc0dc1/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=4cdd4a33f42e0b3373bf74564d036a277dfc0dc1", "patch": "@@ -8478,13 +8478,13 @@ package body Sem_Res is\n                Get_First_Interp (N, I, It);\n \n                --  If the equality is user-defined, the type of the operands\n-               --  matches that of the formals. For a predefined operqtor,\n+               --  matches that of the formals. For a predefined operator,\n                --  it is the scope that matters, given that the predefined\n                --  equality has Any_Type formals. In either case the result\n-               --  type (most often Booleam) must match the context .The\n-               --  scope is either that of the type if there is a generated\n-               --  equality (when there is an equality for the component type)\n-               --  or else Standard otherwise.\n+               --  type (most often Boolean) must match the context. The scope\n+               --  is either that of the type, if there is a generated equality\n+               --  (when there is an equality for the component type), or else\n+               --  Standard otherwise.\n \n                while Present (It.Typ) loop\n                   if Etype (It.Nam) = Typ"}]}