{"sha": "6d0c87b50bf722fd72bada3d6c207f1e19341ae4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQwYzg3YjUwYmY3MjJmZDcyYmFkYTNkNmMyMDdmMWUxOTM0MWFlNA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-10-15T14:31:16Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-10-15T14:31:16Z"}, "message": "* ChangeLog: Fix whitespace.\n\nFrom-SVN: r180039", "tree": {"sha": "04afd700c4fb2d1a3c0af93998fa671405f7a141", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04afd700c4fb2d1a3c0af93998fa671405f7a141"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d0c87b50bf722fd72bada3d6c207f1e19341ae4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d0c87b50bf722fd72bada3d6c207f1e19341ae4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d0c87b50bf722fd72bada3d6c207f1e19341ae4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d0c87b50bf722fd72bada3d6c207f1e19341ae4/comments", "author": null, "committer": null, "parents": [{"sha": "89e4bd80d885888c5e7bd9ab846b578ea73c6954", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89e4bd80d885888c5e7bd9ab846b578ea73c6954", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89e4bd80d885888c5e7bd9ab846b578ea73c6954"}], "stats": {"total": 55, "additions": 22, "deletions": 33}, "files": [{"sha": "9648ebb0f3b16f50ce0d2f1281fbcb708b4696fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 33, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0c87b50bf722fd72bada3d6c207f1e19341ae4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0c87b50bf722fd72bada3d6c207f1e19341ae4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d0c87b50bf722fd72bada3d6c207f1e19341ae4", "patch": "@@ -50,8 +50,7 @@\n \ttstsi_t_zero_extract_subreg_xor_big): New insns.\n \t(*movsicc_t_false, *movsicc_t_true): Replace space with tab in\n \tasm output.\n-\t(*andsi_compact): Reorder alternatives so that K08 is considered\n-\tfirst.\n+\t(*andsi_compact): Reorder alternatives so that K08 is considered first.\n \n 2011-10-14  Eric Botcazou  <ebotcazou@adacore.com>\n \n@@ -74,8 +73,7 @@\n \tvec_widen_smult_lo_v8hi, vec_widen_umult_hi_v8hi,\n \tvec_widen_umult_lo_v8hi): Macroize using VI2_AVX2\n \tmode iterator and any_extend code iterator.\n-\t(vec_widen_<s>mult_hi_v8si, vec_widen_<s>mult_lo_v8si): New\n-\texpanders.\n+\t(vec_widen_<s>mult_hi_v8si, vec_widen_<s>mult_lo_v8si): New expanders.\n \t(vec_widen_smult_hi_v4si, vec_widen_smult_lo_v4si): Enable\n \talso for TARGET_SSE4_1 using pmuldq insn.\n \t(sdot_prodv8hi): Macroize using VI2_AVX2 iterator.\n@@ -96,8 +94,7 @@\n 2011-10-14  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/i386/sse.md (vec_interleave_high<mode>,\n-\tvec_interleave_low<mode>): Add AVX2 expanders for VI_256\n-\tmodes.\n+\tvec_interleave_low<mode>): Add AVX2 expanders for VI_256 modes.\n \t* config/i386/i386.c (expand_vec_perm_interleave3): New function.\n \t(ix86_expand_vec_perm_builtin_1): Call it.\n \n@@ -121,14 +118,13 @@\n \t(avr_mode_code_base_reg_class): Depend on avr_strict_X.\n \t(avr_regno_mode_code_ok_for_base_p): Ditto, and depend on outer_code.\n \t(avr_option_override): Disable -fcaller-saves if -mstrict-X is on.\n-\t\n+\n 2011-10-14  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/i386/sse.md (neg<mode>2): Use VI_AVX2 iterator instead\n \tof VI_128.\n \n-\t* config/i386/sse.md (mulv2di3): Macroize using VI8_AVX2\n-\titerator.\n+\t* config/i386/sse.md (mulv2di3): Macroize using VI8_AVX2 iterator.\n \t(ashl<mode>3): Use VI248_AVX2 iterator instead of VI248_128.\n \tUse <sseinsnmode> instead of TI in mode attr.\n \n@@ -197,9 +193,8 @@\n \n 2011-10-14  Jakub Jelinek  <jakub@redhat.com>\n \n-\t* gimple.c (walk_stmt_load_store_addr_ops): Call visit_addr\n-\talso on COND_EXPR/VEC_COND_EXPR comparison operands if they are\n-\tADDR_EXPRs.\n+\t* gimple.c (walk_stmt_load_store_addr_ops): Call visit_addr also\n+\ton COND_EXPR/VEC_COND_EXPR comparison operands if they are ADDR_EXPRs.\n \n 2011-10-14  Richard Guenther  <rguenther@suse.de>\n \n@@ -232,8 +227,7 @@\n \t(vec_unpacks_float_hi_v8hi, vec_unpacks_float_lo_v8hi,\n \tvec_unpacku_float_hi_v8hi, vec_unpacku_float_lo_v8hi): Macroize\n \tusing VI2_AVX2 iterator.\n-\t(vec_unpacku_float_hi_v8si, vec_unpacku_float_lo_v8si): New\n-\texpanders.\n+\t(vec_unpacku_float_hi_v8si, vec_unpacku_float_lo_v8si): New expanders.\n \n 2011-10-13  David S. Miller  <davem@davemloft.net>\n \n@@ -276,15 +270,13 @@\n \n 2011-10-13  Jakub Jelinek  <jakub@redhat.com>\n \n-\t* config/i386/sse.md (vec_set<mode>): Change V_128 iterator mode\n-\tto V.\n+\t* config/i386/sse.md (vec_set<mode>): Change V_128 iterator mode to V.\n \n 2011-10-13  Jakub Jelinek  <jakub@redhat.com>\n \t    Richard Guenther  <rguenther@suse.de>\n \n-\t* tree-ssa.c (maybe_optimize_var): Drop TREE_ADDRESSABLE\n-\tfrom vector or complex vars even if their DECL_UID is in not_reg_needs\n-\tbitmap.\n+\t* tree-ssa.c (maybe_optimize_var): Drop TREE_ADDRESSABLE from vector\n+\tor complex vars even if their DECL_UID is in not_reg_needs bitmap.\n \n 2011-10-13  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -295,8 +287,8 @@\n \t(ix86_expand_reduc): Use phminposuw insn for V8HImode UMIN.\n \tUse emit_reduc_half helper function.\n \n-2011-10-13   Lawrence Crowl  <crowl@google.com>\n-\t     Diego Novillo  <dnovillo@google.com>\n+2011-10-13  Lawrence Crowl  <crowl@google.com>\n+\t    Diego Novillo  <dnovillo@google.com>\n \n \t* lto-streamer-in.c (input_struct_function_base): Factor out of ...\n \t(input_function): ... here.\n@@ -356,7 +348,8 @@\n \t(fmul8x16_vis, fmul8x16au_vis, fmul8sux16_vis, fmuld8sux16_vis):\n \tReimplement as unspecs and remove inaccurate comments.\n \t(vis3_shift_patname): New code attr.\n-\t(<vis3_shift_insn><vbits>_vis): Rename to \"v<vis3_shift_patname><mode>3\".\n+\t(<vis3_shift_insn><vbits>_vis): Rename to\n+\t\"v<vis3_shift_patname><mode>3\".\n \t(vis3_addsub_ss_patname): New code attr.\n \t(<vis3_addsub_ss_insn><vbits>_vis): Rename to\n \t\"<vis3_addsub_ss_patname><mode>3\".\n@@ -372,14 +365,12 @@\n \n \t* config/i386/sse.md (vec_unpacks_lo_<mode>,\n \tvec_unpacks_hi_<mode>, vec_unpacku_lo_<mode>,\n-\tvec_unpacku_hi_<mode>): Change VI124_128 mode to\n-\tVI124_AVX2.\n+\tvec_unpacku_hi_<mode>): Change VI124_128 mode to VI124_AVX2.\n \t* config/i386/i386.c (ix86_expand_sse_unpack): Handle\n \tV32QImode, V16HImode and V8SImode for TARGET_AVX2.\n \n \t* config/i386/sse.md (vec_avx2): New mode_attr.\n-\t(mulv16qi3): Macroize to cover also mulv32qi3 for\n-\tTARGET_AVX2 into ...\n+\t(mulv16qi3): Macroize to cover also mulv32qi3 for TARGET_AVX2 into ...\n \t(mul<mode>3): ... this.\n \n \t* config/i386/i386.md (UNSPEC_VPERMDI): Remove.\n@@ -426,8 +417,7 @@\n \n 2011-10-12  Kai Tietz  <ktietz@redhat.com>\n \n-\t* config/i386/i386.md (simple_return): Disable\n-\tif TARGET_SEH is active.\n+\t* config/i386/i386.md (simple_return): Disable if TARGET_SEH is active.\n \n 2011-10-12  Steve Ellcey  <sje@cup.hp.com>\n \n@@ -638,7 +628,8 @@\n \n 2011-10-11  Georg-Johann Lay  <avr@gjlay.de>\n \n-\t* config/avr/avr-protos.h (avr_mode_code_base_reg_class): New prototype.\n+\t* config/avr/avr-protos.h (avr_mode_code_base_reg_class): New\n+\tprototype.\n \t(avr_regno_mode_code_ok_for_base_p): New prototype.\n \t* config/avr/avr.h (BASE_REG_CLASS): Remove.\n \t(REGNO_OK_FOR_BASE_P): Remove.\n@@ -708,8 +699,7 @@\n 2011-10-10  Georg-Johann Lay  <avr@gjlay.de>\n \n \t* config/avr/avr.c (avr_option_override): Set\n-\tflag_omit_frame_pointer to 0 if frame pointer is needed for\n-\tunwinding.\n+\tflag_omit_frame_pointer to 0 if frame pointer is needed for unwinding.\n \n 2011-10-10  Uros Bizjak  <ubizjak@gmail.com>\n \n@@ -854,8 +844,7 @@\n \t(get_sched_window): Adjust for above field and SCHED_* macro changes.\n \tUse NODE_ASAP instead of SCHED_ASAP.\n \t(try_scheduling_node_in_cycle): Remove node parameter.  Update\n-\tcall to ps_add_node_check_conflicts.  Pass ids to the SCHED_*\n-\tmacros.\n+\tcall to ps_add_node_check_conflicts.  Pass ids to the SCHED_* macros.\n \t(sms_schedule_by_order): Update call to try_scheduling_node_in_cycle.\n \t(ps_insert_empty_row): Adjust for above field changes.\n \t(compute_split_row): Use ids rather than nodes."}]}