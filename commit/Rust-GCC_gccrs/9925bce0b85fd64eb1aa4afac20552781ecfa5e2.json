{"sha": "9925bce0b85fd64eb1aa4afac20552781ecfa5e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTkyNWJjZTBiODVmZDY0ZWIxYWE0YWZhYzIwNTUyNzgxZWNmYTVlMg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-04-22T11:30:04Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-04-22T11:30:04Z"}, "message": "re PR tree-optimization/39845 (ICE: in make_decl_rtl, at varasm.c:1304)\n\n2009-04-22  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/39845\n\t* tree-switch-conversion.c (build_arrays): Add new referenced vars.\n\t(gen_inbound_check): Likewise.\n\n\t* gcc.c-torture/compile/pr39845.c: New testcase.\n\nFrom-SVN: r146569", "tree": {"sha": "5b22e59c1c76f93596d651c3685b5a93299c6e44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b22e59c1c76f93596d651c3685b5a93299c6e44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9925bce0b85fd64eb1aa4afac20552781ecfa5e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9925bce0b85fd64eb1aa4afac20552781ecfa5e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9925bce0b85fd64eb1aa4afac20552781ecfa5e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9925bce0b85fd64eb1aa4afac20552781ecfa5e2/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ce30eccb0612505eb75a1046db11b7a4c0bb0326", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce30eccb0612505eb75a1046db11b7a4c0bb0326", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce30eccb0612505eb75a1046db11b7a4c0bb0326"}], "stats": {"total": 61, "additions": 59, "deletions": 2}, "files": [{"sha": "27182fb81230eb9806f93dcdf668296e573b854b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9925bce0b85fd64eb1aa4afac20552781ecfa5e2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9925bce0b85fd64eb1aa4afac20552781ecfa5e2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9925bce0b85fd64eb1aa4afac20552781ecfa5e2", "patch": "@@ -1,3 +1,9 @@\n+2009-04-22  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/39845\n+\t* tree-switch-conversion.c (build_arrays): Add new referenced vars.\n+\t(gen_inbound_check): Likewise.\n+\n 2009-04-22  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* gthr-vxworks.h (struct __gthread_once_t): Add alignment and"}, {"sha": "6fa530d460cba5b5ae63257f8673a8d59719b1fc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9925bce0b85fd64eb1aa4afac20552781ecfa5e2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9925bce0b85fd64eb1aa4afac20552781ecfa5e2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9925bce0b85fd64eb1aa4afac20552781ecfa5e2", "patch": "@@ -1,3 +1,8 @@\n+2009-04-22  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/39845\n+\t* gcc.c-torture/compile/pr39845.c: New testcase.\n+\n 2009-04-22  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/39735"}, {"sha": "beade5f43228989e8f989f9d1382961295006981", "filename": "gcc/testsuite/gcc.c-torture/compile/pr39845.c", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9925bce0b85fd64eb1aa4afac20552781ecfa5e2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39845.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9925bce0b85fd64eb1aa4afac20552781ecfa5e2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39845.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39845.c?ref=9925bce0b85fd64eb1aa4afac20552781ecfa5e2", "patch": "@@ -0,0 +1,43 @@\n+typedef union tree_node *tree;\n+enum tree_code { EXCESS_PRECISION_EXPR };\n+enum built_in_function { BUILT_IN_ACOS, BUILT_IN_FPCLASSIFY, BUILT_IN_ISFINITE };\n+struct tree_base {\n+    __extension__ enum tree_code code : 16;\n+    unsigned side_effects_flag : 1;\n+};\n+struct tree_exp {\n+    tree     operands[1];\n+};\n+struct tree_function_decl {\n+    __extension__ enum built_in_function function_code : 11;\n+    unsigned static_ctor_flag : 1;\n+};\n+union tree_node {\n+    struct tree_base base;\n+    struct tree_function_decl function_decl;\n+    struct tree_exp exp;\n+};\n+static tree\n+convert_arguments (tree fundecl)\n+{\n+  tree val = (void *)0;\n+  unsigned int parmnum;\n+  unsigned char type_generic_remove_excess_precision = 0;\n+  switch (((fundecl)->function_decl.function_code))\n+    {\n+      case BUILT_IN_ISFINITE:\n+      case BUILT_IN_FPCLASSIFY:\n+\t  type_generic_remove_excess_precision = 1;\n+    }\n+  for (parmnum = 0;; ++parmnum)\n+    if (((enum tree_code) (val)->base.code) == EXCESS_PRECISION_EXPR\n+\t&& !type_generic_remove_excess_precision)\n+      val = ((val)->exp.operands[0]);\n+  return val;\n+}\n+tree\n+build_function_call_vec (tree function)\n+{\n+  return convert_arguments (function);\n+}\n+"}, {"sha": "6f0343fe2a5a774cda9ef175ec7d955ba14e8ed2", "filename": "gcc/tree-switch-conversion.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9925bce0b85fd64eb1aa4afac20552781ecfa5e2/gcc%2Ftree-switch-conversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9925bce0b85fd64eb1aa4afac20552781ecfa5e2/gcc%2Ftree-switch-conversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-switch-conversion.c?ref=9925bce0b85fd64eb1aa4afac20552781ecfa5e2", "patch": "@@ -547,15 +547,17 @@ static void\n build_arrays (gimple swtch)\n {\n   tree arr_index_type;\n-  tree tidx, sub;\n+  tree tidx, sub, tmp;\n   gimple stmt;\n   gimple_stmt_iterator gsi;\n   int i;\n \n   gsi = gsi_for_stmt (swtch);\n \n   arr_index_type = build_index_type (info.range_size);\n-  tidx = make_ssa_name (create_tmp_var (arr_index_type, \"csti\"), NULL);\n+  tmp = create_tmp_var (arr_index_type, \"csti\");\n+  add_referenced_var (tmp);\n+  tidx = make_ssa_name (tmp, NULL);\n   sub = fold_build2 (MINUS_EXPR, TREE_TYPE (info.index_expr), info.index_expr,\n \t\t     fold_convert (TREE_TYPE (info.index_expr),\n \t\t\t\t   info.range_min));\n@@ -694,6 +696,7 @@ gen_inbound_check (gimple swtch)\n   /* (end of) block 0 */\n   gsi = gsi_for_stmt (info.arr_ref_first);\n   tmp_u_var = create_tmp_var (utype, \"csui\");\n+  add_referenced_var (tmp_u_var);\n   tmp_u_1 = make_ssa_name (tmp_u_var, NULL);\n \n   cast = fold_convert (utype, info.index_expr);"}]}