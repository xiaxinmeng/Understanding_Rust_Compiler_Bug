{"sha": "45489e99d6a8497ec6fabf386a1c1c06226082ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU0ODllOTlkNmE4NDk3ZWM2ZmFiZjM4NmExYzFjMDYyMjYwODJjZQ==", "commit": {"author": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-02-07T19:48:55Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-02-07T19:48:55Z"}, "message": "Fix format in ChangeLog.graphite\n\n2010-02-07  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* ChangeLog.graphite: Remove testsuite/ or gcc/testsuite/.\n\nFrom-SVN: r156581", "tree": {"sha": "e703d1fa947f8bda99d522577ae428a9b65f6c63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e703d1fa947f8bda99d522577ae428a9b65f6c63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45489e99d6a8497ec6fabf386a1c1c06226082ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45489e99d6a8497ec6fabf386a1c1c06226082ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45489e99d6a8497ec6fabf386a1c1c06226082ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45489e99d6a8497ec6fabf386a1c1c06226082ce/comments", "author": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "240c7f7f570ea8b125fa764daedccd7ce1c147c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/240c7f7f570ea8b125fa764daedccd7ce1c147c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/240c7f7f570ea8b125fa764daedccd7ce1c147c7"}], "stats": {"total": 772, "additions": 404, "deletions": 368}, "files": [{"sha": "112eaad4d0760a52096e3e5976bbbfee33f9232f", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 404, "deletions": 368, "changes": 772, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45489e99d6a8497ec6fabf386a1c1c06226082ce/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45489e99d6a8497ec6fabf386a1c1c06226082ce/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=45489e99d6a8497ec6fabf386a1c1c06226082ce", "patch": "@@ -1,3 +1,7 @@\n+2010-02-07  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* ChangeLog.graphite: Remove testsuite/ or gcc/testsuite/.\n+\n 2010-02-05  Sebastian Pop  <sebastian.pop@amd.com>\n \t    Konrad Trifunovic  <konrad.trifunovic@inria.fr>\n \n@@ -6,35 +10,35 @@\n \ta union of dependence polyhedra.\n \t(dependence_polyhedron_1): Adapt for build_lexicographical_constraint.\n \n-\t* testsuite/gcc.dg/graphite/block-0.c: Enable runtime check.  XFAILed.\n-\t* testsuite/gcc.dg/graphite/block-4.c: Same.\n-\t* testsuite/gcc.dg/graphite/block-7.c: Same.\n-\t* testsuite/gcc.dg/graphite/interchange-12.c: Same.\n-\t* testsuite/gcc.dg/graphite/interchange-mvt.c: Same.\n-\t* testsuite/gfortran.dg/graphite/interchange-1.f: XFAILed.\n-\t* testsuite/gfortran.dg/graphite/interchange-3.f90: XFAILed.\n-\t* testsuite/gfortran.dg/graphite/run-id-1.f: New testcase for PR42637.\n+\t* gcc.dg/graphite/block-0.c: Enable runtime check.  XFAILed.\n+\t* gcc.dg/graphite/block-4.c: Same.\n+\t* gcc.dg/graphite/block-7.c: Same.\n+\t* gcc.dg/graphite/interchange-12.c: Same.\n+\t* gcc.dg/graphite/interchange-mvt.c: Same.\n+\t* gfortran.dg/graphite/interchange-1.f: XFAILed.\n+\t* gfortran.dg/graphite/interchange-3.f90: XFAILed.\n+\t* gfortran.dg/graphite/run-id-1.f: New testcase for PR42637.\n \n 2010-02-03  Sebastian Pop  <sebastian.pop@amd.com>\n \n-\t* testsuite/gcc.dg/graphite/interchange-12.c: Return 0 to avoid\n+\t* gcc.dg/graphite/interchange-12.c: Return 0 to avoid\n \tthe execution check to FAIL.  This testcase is miscompiled by Graphite\n \tand the check should be re-enabled.\n-\t* testsuite/gcc.dg/graphite/interchange-mvt.c: Same.\n-\t* testsuite/gcc.dg/graphite/block-0.c: Same.\n-\t* testsuite/gcc.dg/graphite/block-4.c: Same.\n-\t* testsuite/gcc.dg/graphite/block-7.c: Same.\n+\t* gcc.dg/graphite/interchange-mvt.c: Same.\n+\t* gcc.dg/graphite/block-0.c: Same.\n+\t* gcc.dg/graphite/block-4.c: Same.\n+\t* gcc.dg/graphite/block-7.c: Same.\n \n 2010-02-03  Sebastian Pop  <sebastian.pop@amd.com>\n \n-\t* testsuite/gcc.dg/graphite/interchange-mvt.c: Un-XFAILed.\n-\t* testsuite/gcc.dg/graphite/scop-0.c: Fix spaces.\n-\t* testsuite/gfortran.dg/graphite/block-1.f90: Rewrite expected output.\n-\t* testsuite/gfortran.dg/graphite/block-2.f: Same.\n-\t* testsuite/gfortran.dg/graphite/block-3.f90: Same.\n-\t* testsuite/gfortran.dg/graphite/block-4.f90: Same.\n-\t* testsuite/gfortran.dg/graphite/interchange-1.f: Un-XFAILed.\n-\t* testsuite/gfortran.dg/graphite/interchange-3.f90: Un-XFAILed.\n+\t* gcc.dg/graphite/interchange-mvt.c: Un-XFAILed.\n+\t* gcc.dg/graphite/scop-0.c: Fix spaces.\n+\t* gfortran.dg/graphite/block-1.f90: Rewrite expected output.\n+\t* gfortran.dg/graphite/block-2.f: Same.\n+\t* gfortran.dg/graphite/block-3.f90: Same.\n+\t* gfortran.dg/graphite/block-4.f90: Same.\n+\t* gfortran.dg/graphite/interchange-1.f: Un-XFAILed.\n+\t* gfortran.dg/graphite/interchange-3.f90: Un-XFAILed.\n \n 2010-02-03  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -72,31 +76,31 @@\n \n 2010-02-03  Sebastian Pop  <sebastian.pop@amd.com>\n \n-\t* testsuite/g++.dg/graphite/graphite.exp: Rewritten.\n-\t* testsuite/gcc.dg/graphite/graphite.exp: Rewritten.\n-\t* testsuite/gfortran.dg/graphite/graphite.exp: Rewritten.\n-\t* gcc/testsuite/gcc.dg/graphite/block-0.c: Added runtime test.\n-\t* testsuite/gcc.dg/graphite/block-1.c: Same.\n-\t* testsuite/gcc.dg/graphite/block-3.c: Same.\n-\t* testsuite/gcc.dg/graphite/block-4.c: Same.\n-\t* testsuite/gcc.dg/graphite/block-5.c: Same.\n-\t* testsuite/gcc.dg/graphite/block-6.c: Same.\n-\t* testsuite/gcc.dg/graphite/block-7.c: Same.\n-\t* testsuite/gcc.dg/graphite/interchange-0.c: Same.\n-\t* testsuite/gcc.dg/graphite/interchange-1.c: Same.\n-\t* testsuite/gcc.dg/graphite/interchange-10.c: Same.\n-\t* testsuite/gcc.dg/graphite/interchange-11.c: Same.\n-\t* testsuite/gcc.dg/graphite/interchange-12.c: Same.\n-\t* testsuite/gcc.dg/graphite/interchange-2.c: Same.\n-\t* testsuite/gcc.dg/graphite/interchange-3.c: Same.\n-\t* testsuite/gcc.dg/graphite/interchange-4.c: Same.\n-\t* testsuite/gcc.dg/graphite/interchange-5.c: Same.\n-\t* testsuite/gcc.dg/graphite/interchange-6.c: Same.\n-\t* testsuite/gcc.dg/graphite/interchange-7.c: Same.\n-\t* testsuite/gcc.dg/graphite/interchange-8.c: Same.\n-\t* testsuite/gcc.dg/graphite/interchange-9.c: Same.\n-\t* testsuite/gcc.dg/graphite/interchange-mvt.c: Same.\n-\t* testsuite/gcc.dg/graphite/run-id-2.c: Remove useless dg-do run.\n+\t* g++.dg/graphite/graphite.exp: Rewritten.\n+\t* gcc.dg/graphite/graphite.exp: Rewritten.\n+\t* gfortran.dg/graphite/graphite.exp: Rewritten.\n+\t* gcc.dg/graphite/block-0.c: Added runtime test.\n+\t* gcc.dg/graphite/block-1.c: Same.\n+\t* gcc.dg/graphite/block-3.c: Same.\n+\t* gcc.dg/graphite/block-4.c: Same.\n+\t* gcc.dg/graphite/block-5.c: Same.\n+\t* gcc.dg/graphite/block-6.c: Same.\n+\t* gcc.dg/graphite/block-7.c: Same.\n+\t* gcc.dg/graphite/interchange-0.c: Same.\n+\t* gcc.dg/graphite/interchange-1.c: Same.\n+\t* gcc.dg/graphite/interchange-10.c: Same.\n+\t* gcc.dg/graphite/interchange-11.c: Same.\n+\t* gcc.dg/graphite/interchange-12.c: Same.\n+\t* gcc.dg/graphite/interchange-2.c: Same.\n+\t* gcc.dg/graphite/interchange-3.c: Same.\n+\t* gcc.dg/graphite/interchange-4.c: Same.\n+\t* gcc.dg/graphite/interchange-5.c: Same.\n+\t* gcc.dg/graphite/interchange-6.c: Same.\n+\t* gcc.dg/graphite/interchange-7.c: Same.\n+\t* gcc.dg/graphite/interchange-8.c: Same.\n+\t* gcc.dg/graphite/interchange-9.c: Same.\n+\t* gcc.dg/graphite/interchange-mvt.c: Same.\n+\t* gcc.dg/graphite/run-id-2.c: Remove useless dg-do run.\n \n 2010-01-22  Ramakrishna Upadrasta <Ramakrishna.Upadrasta@inria.fr>\n \n@@ -111,10 +115,10 @@\n \n 2010-01-20  Sebastian Pop  <sebastian.pop@amd.com>\n \n-\t* testsuite/gcc.dg/graphite/id-17.c: New.\n-\t* testsuite/gcc.dg/graphite/pr41888.c: New.\n-\t* testsuite/gcc.dg/graphite/scop-22.c: New.\n-\t* testsuite/gfortran.dg/graphite/pr40982.f90: New.\n+\t* gcc.dg/graphite/id-17.c: New.\n+\t* gcc.dg/graphite/pr41888.c: New.\n+\t* gcc.dg/graphite/scop-22.c: New.\n+\t* gfortran.dg/graphite/pr40982.f90: New.\n \n 2010-01-20  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -126,8 +130,8 @@\n \t(dot_original_deps): Same.\n \t(dot_transformed_deps): Same.\n \n-\t* testsuite/gcc.dg/graphite/interchange-12.c: New.\n-\t* testsuite/gcc.dg/graphite/block-7.c: New.\n+\t* gcc.dg/graphite/interchange-12.c: New.\n+\t* gcc.dg/graphite/block-7.c: New.\n \n 2010-01-20  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -182,7 +186,7 @@\n \t* sese.c (set_ifsese_condition): New.\n \t* sese.h (set_ifsese_condition): Declared.\n \n-\t* testsuite/g++.dg/graphite/pr42681.C: New.\n+\t* g++.dg/graphite/pr42681.C: New.\n \n 2010-01-14  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -198,7 +202,7 @@\n \t(scev_reset): Call scev_reset_htab.\n \t* tree-scalar-evolution.h (scev_reset_htab): Declared.\n \n-\t* testsuite/gfortran.dg/graphite/pr42732.f: New.\n+\t* gfortran.dg/graphite/pr42732.f: New.\n \n 2010-01-08  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -209,8 +213,8 @@\n \t(add_loop_exit_phis): Also handle full expressions: remove from\n \tthe rename_map the expressions defined in the loop that we're closing.\n \n-\t* testsuite/gfortran.dg/graphite/pr42393-1.f90: New.\n-\t* testsuite/gfortran.dg/graphite/pr42393.f90: Add new flags\n+\t* gfortran.dg/graphite/pr42393-1.f90: New.\n+\t* gfortran.dg/graphite/pr42393.f90: Add new flags\n \t-fno-loop-block -fno-loop-interchange -fno-loop-strip-mine to also\n \tmake this testcase useful in the Graphite branch.\n \n@@ -226,7 +230,7 @@\n \t* sese.c (expand_scalar_variables_expr): Follow the SSA links into\n \tthe array indexing of ADDR_EXPRs.\n \n-\t* testsuite/gcc.dg/graphite/pr42221.c: New.\n+\t* gcc.dg/graphite/pr42221.c: New.\n \n 2010-01-07  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -235,7 +239,7 @@\n \t(graphite_transform_loops): Do not call scev_reset between the code\n \tgeneration of scops.\n \n-\t* testsuite/gcc.dg/graphite/pr42521.c: New.\n+\t* gcc.dg/graphite/pr42521.c: New.\n \n 2010-01-07  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -277,11 +281,11 @@\n \tblocked\" only when both the strip mine and the interchange have\n \tbeen applied.\n \n-\t* testsuite/gcc.dg/graphite/block-2.c: Removed.\n-\t* testsuite/gcc.dg/graphite/block-3.c: Add scan pattern.\n-\t* testsuite/gcc.dg/graphite/block-4.c: Same.\n-\t* testsuite/gcc.dg/graphite/block-5.c: Same.\n-\t* testsuite/gcc.dg/graphite/block-6.c: Same.\n+\t* gcc.dg/graphite/block-2.c: Removed.\n+\t* gcc.dg/graphite/block-3.c: Add scan pattern.\n+\t* gcc.dg/graphite/block-4.c: Same.\n+\t* gcc.dg/graphite/block-5.c: Same.\n+\t* gcc.dg/graphite/block-6.c: Same.\n \n 2010-01-06  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -315,25 +319,25 @@\n \t* graphite-sese-to-poly.c (follow_ssa_with_commutative_ops): Handle\n \tGIMPLE_CALL.\n \n-\t* testsuite/gfortran.dg/graphite/pr42180.f90: Add compile flags.\n+\t* gfortran.dg/graphite/pr42180.f90: Add compile flags.\n \n 2009-12-18  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR middle-end/42180\n \t* graphite-sese-to-poly.c (split_reduction_stmt): Do not split blocks\n \tthat contain only one statement.\n \n-\t* testsuite/gfortran.dg/graphite/pr42180.f90: New.\n+\t* gfortran.dg/graphite/pr42180.f90: New.\n \n 2009-12-17  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR middle-end/42393\n-\t* testsuite/gfortran.dg/graphite/pr42393.f90: New.\n+\t* gfortran.dg/graphite/pr42393.f90: New.\n \n 2009-12-17  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR middle-end/42186\n-\t* testsuite/gfortran.dg/graphite/pr42186.f90: New.\n+\t* gfortran.dg/graphite/pr42186.f90: New.\n \n 2009-12-17  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -342,16 +346,16 @@\n \tInsert the reduction copy in the same block as the phi node.\n \t(follow_ssa_with_commutative_ops): Handle GIMPLE_NOPs.\n \n-\t* testsuite/gcc.dg/graphite/pr42205-1.c: New.\n-\t* testsuite/gcc.dg/graphite/pr42205-2.c: New.\n+\t* gcc.dg/graphite/pr42205-1.c: New.\n+\t* gcc.dg/graphite/pr42205-2.c: New.\n \n 2009-12-17  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR middle-end/42221\n \t* sese.c (expand_scalar_variables_expr): Follow the SSA links into\n \tthe array indexing of ADDR_EXPRs.\n \n-\t* testsuite/gcc.dg/graphite/pr42221.c: New.\n+\t* gcc.dg/graphite/pr42221.c: New.\n \n 2009-12-17  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -374,12 +378,12 @@\n \tindex.  Do not pass to lst_interchange_select_inner the OUTER index.\n \t(scop_do_interchange): Update use of lst_interchange_select_outer.\n \n-\t* testsuite/gfortran.dg/graphite/graphite.exp\n+\t* gfortran.dg/graphite/graphite.exp\n \t(DEFAULT_FLAGS_GRAPHITE_IDENTITY): Remove -fdump-tree-graphite-all.\n-\t* testsuite/gfortran.dg/graphite/interchange-1.f: Add comment.  Clean\n+\t* gfortran.dg/graphite/interchange-1.f: Add comment.  Clean\n \tthe graphite dump file.\n-\t* testsuite/gfortran.dg/graphite/interchange-2.f: Same.\n-\t* testsuite/gfortran.dg/graphite/pr42334-1.f: New.\n+\t* gfortran.dg/graphite/interchange-2.f: Same.\n+\t* gfortran.dg/graphite/pr42334-1.f: New.\n \n 2009-12-15  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -394,18 +398,18 @@\n \tReimplemented.\n \t(scop_do_interchange): Update use of lst_interchange_select_outer.\n \n-\t* testsuite/g++.dg/graphite/pr42130.C: Add -fgraphite-identity.\n-\t* testsuite/gcc.dg/graphite/block-0.c: Un-XFAILed.\n-\t* testsuite/gcc.dg/graphite/pr42211.c: New.\n-\t* testsuite/gfortran.dg/graphite/pr42334.f90: New.\n+\t* g++.dg/graphite/pr42130.C: Add -fgraphite-identity.\n+\t* gcc.dg/graphite/block-0.c: Un-XFAILed.\n+\t* gcc.dg/graphite/pr42211.c: New.\n+\t* gfortran.dg/graphite/pr42334.f90: New.\n \n 2009-12-14  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR middle-end/42181\n \t* graphite-scop-detection.c (graphite_can_represent_scev): Handle more\n \tcarefully PLUS_EXPR, MINUS_EXPR, and MULT_EXPR.\n \n-\t* testsuite/gfortran.dg/graphite/pr42181.f90: New.\n+\t* gfortran.dg/graphite/pr42181.f90: New.\n \n 2009-12-12  Sebastian Pop  <sebpop@gmail.com>\n \n@@ -416,7 +420,7 @@\n \t(detect_commutative_reduction): Early return when the argument of\n \tthe close phi is not of an SSA_NAME.\n \n-\t* testsuite/gcc.dg/graphite/pr42284.c: New.\n+\t* gcc.dg/graphite/pr42284.c: New.\n \n 2009-12-11  Alexander Monakov  <amonakov@ispras.ru>\n \n@@ -431,15 +435,23 @@\n \thandle more complex MULT_EXPRs containing parameters by recursion\n \ton the structure.\n \n-\t* testsuite/gfortran.dg/graphite/pr42285.f90: New.\n+\t* gfortran.dg/graphite/pr42285.f90: New.\n \n 2009-12-01  Tobias Grosser  <grosser@fim.uni-passau.de>\n \n-\t* testsuite/g++.dg/graphite/pr42130.C: Fix type.\n+\t* g++.dg/graphite/pr42130.C: Fix type.\n \n 2009-11-29  Alexander Monakov <amonakov@gcc.gnu.org>\n \n-\t* testsuite/g++.dg/graphite/pr42130.C: Correct testcase.\n+\t* g++.dg/graphite/pr42130.C: Correct testcase.\n+\n+2009-11-28 Tobias Grosser  <grosser@fim.uni-passau.de>\n+\n+\t* Merge from mainline (154493:154734).\n+\n+2009-11-28 Tobias Grosser  <grosser@fim.uni-passau.de>\n+\n+\t* Merge from mainline (151362:154491).\n \n 2009-11-24  Tobias Grosser  <grosser@fim.uni-passau.de>\n \n@@ -453,8 +465,8 @@\n \ttranslate_clast_for_loop): New.\n \t(translate_clast_for): Add a condition around the loop, to do not\n \texecute loops with zero iterations.\n-\t* testsuite/g++.dg/graphite/pr42130.C: New.\n-\t* testsuite/gcc.dg/graphite/pr35356-2.c: Adapt.\n+\t* g++.dg/graphite/pr42130.C: New.\n+\t* gcc.dg/graphite/pr35356-2.c: Adapt.\n \n 2009-11-23  Tobias Grosser  <grosser@fim.uni-passau.de>\n \n@@ -530,15 +542,15 @@\n 2009-11-18  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR middle-end/40281\n-\t* testsuite/gcc.dg/graphite/pr40281.c: New.\n+\t* gcc.dg/graphite/pr40281.c: New.\n \n \t* tree-scalar-evolution.c (instantiate_scev_poly): Base and stride\n \tevolutions should not variate in inner loops.\n \n 2009-11-18  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR middle-end/42050\n-\t* testsuite/gfortran.dg/graphite/pr42050.f90: New.\n+\t* gfortran.dg/graphite/pr42050.f90: New.\n \n 2009-11-18  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -1006,12 +1018,12 @@\n \n 2009-10-14  Tobias Grosser  <grosser@fim.uni-passau.de>\n \n-\t* testsuite/gcc.dg/graphite/id-15.c: (8 * 8) replaced with\n+\t* gcc.dg/graphite/id-15.c: (8 * 8) replaced with\n \tsizeof(unsigned long) to make it run on 32bit systems.\n \n 2009-10-14  Tobias Grosser  <grosser@fim.uni-passau.de>\n \n-\t* testsuite/gcc.dg/graphite/run-id-1.c: Use smaller matrix to not\n+\t* gcc.dg/graphite/run-id-1.c: Use smaller matrix to not\n \tSEGFAULT on 32bit.\n \n 2009-10-14  Ramakrishna Upadrasta <Ramakrishna.Upadrasta@inria.fr>\n@@ -1061,6 +1073,7 @@\n \n \t* graphite-poly.c (apply_poly_transforms): Implement the high\n \tlevel driver for flag_loop_block.\n+\t* opts.c (decode_options): Enable flag_loop_block at -O2.\n \t* tree-ssa-loop.c (gate_graphite_transforms): Remove call to sorry for\n \tflag_loop_block.\n \n@@ -1240,6 +1253,26 @@\n \t(build_scop_drs): When debugging, write the alias graph to file,\n \totherwise, should be disabled.\n \n+2009-09-17  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* Merge from mainline (151310:151361).\n+\n+2009-09-17  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* Merge from mainline (151171:151310).\n+\n+2009-09-17  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* Merge from mainline (151171:151806).\n+\n+2009-09-17  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* Revert the last commit.\n+\n+2009-09-17  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* Merge from mainline (151171:151819).\n+\n 2009-09-17  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-scop-detection.c (stmt_simple_memref_p): Removed.\n@@ -1248,15 +1281,14 @@\n \n 2009-09-17  David Edelsohn  <edelsohn@gnu.org>\n \n-\t* testsuite/gcc.dg/graphite/interchange-mvt.c: New File.\n-\t* testsuite/gcc.dg/graphite/scop-dsyrk.c: New File.\n-\t* testsuite/gcc.dg/graphite/scop-dsyr2k.c: New File.\n-\t* testsuite/gcc.dg/graphite/scop-mvt.c: New File.\n-\t* testsuite/gcc.dg/graphite/scop-sor.c: New File.\n+\t* gcc.dg/graphite/interchange-mvt.c: New File.\n+\t* gcc.dg/graphite/scop-dsyrk.c: New File.\n+\t* gcc.dg/graphite/scop-dsyr2k.c: New File.\n+\t* gcc.dg/graphite/scop-mvt.c: New File.\n+\t* gcc.dg/graphite/scop-sor.c: New File.\n \n 2009-09-17 Li Feng  <nemokingdom@gmail.com>\n \n-\tPR middle-end/41118\n \t* graphite-dependences.c (poly_drs_may_alias_p): Adjust definition.\n \t(pddr_original_scattering): Make sure 2 pdr2 in the same base object set.\n \t(graphite_carried_dependence_level_k): Ditto.\n@@ -1382,6 +1414,10 @@\n \n \t* Merge from mainline (150992:151171).\n \n+2009-08-25  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* opts.c (decode_options): Enable flag_loop_interchange at -O2.\n+\n 2009-08-25  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-dependences.c (graphite_legal_transform_bb): Call\n@@ -1558,14 +1594,14 @@\n \t* sese.c (convert_for_phi_arg): New.\n \t(add_guard_exit_phis): Use convert_for_phi_arg.\n \n-\t* testsuite/gfortran.dg/graphite/id-17.f: New.\n+\t* gfortran.dg/graphite/id-17.f: New.\n \n 2009-08-11  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-sese-to-poly.c (pdr_add_data_dimensions): Dont add\n \tunknown subscript upper bounds.\n \n-\t* testsuite/gcc.dg/graphite/interchange-6.c: Un-XFAIL.\n+\t* gcc.dg/graphite/interchange-6.c: Un-XFAIL.\n \n 2009-08-11  Sebastian Pop  <sebastian.pop@amd.com>\n \t    Pranav Garg  <pranav.garg2107@gmail.com>\n@@ -1578,7 +1614,7 @@\n \t* graphite-ppl.h (ppl_new_id_map): New.\n \t(ppl_interchange): New.\n \n-\t* testsuite/gcc.dg/graphite/interchange-6.c: XFAILed.\n+\t* gcc.dg/graphite/interchange-6.c: XFAILed.\n \n 2009-08-11  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -1621,7 +1657,7 @@\n \n 2009-08-11  Sebastian Pop  <sebastian.pop@amd.com>\n \n-\t* testsuite/gcc.dg/graphite/interchange-9.c: New.\n+\t* gcc.dg/graphite/interchange-9.c: New.\n \n 2009-08-05  Konrad Trifunovic  <konrad.trifunovic@gmail.com>\n \t    Sebastian Pop  <sebastian.pop@amd.com>\n@@ -1631,11 +1667,11 @@\n \t(graphite_carried_dependence_level_k): Free unused objects before\n \treturning.\n \n-\t* testsuite/gcc.dg/graphite/interchange-1.c: XFAILed.\n-\t* testsuite/gcc.dg/graphite/interchange-2.c: XFAILed.\n-\t* testsuite/gcc.dg/graphite/interchange-3.c: XFAILed.\n-\t* testsuite/gcc.dg/graphite/interchange-4.c: XFAILed.\n-\t* testsuite/gcc.dg/graphite/interchange-7.c: XFAILed.\n+\t* gcc.dg/graphite/interchange-1.c: XFAILed.\n+\t* gcc.dg/graphite/interchange-2.c: XFAILed.\n+\t* gcc.dg/graphite/interchange-3.c: XFAILed.\n+\t* gcc.dg/graphite/interchange-4.c: XFAILed.\n+\t* gcc.dg/graphite/interchange-7.c: XFAILed.\n \n 2009-08-05  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -1728,16 +1764,16 @@\n \t(rewrite_reductions_out_of_ssa): New.\n \t(build_poly_scop): Call rewrite_reductions_out_of_ssa.\n \n-\t* testsuite/gcc.dg/graphite/id-11.c: New.\n-\t* testsuite/gcc.dg/graphite/id-15.c: New.\n-\t* testsuite/gcc.dg/graphite/interchange-1.c: Un-XFAIL.\n-\t* testsuite/gcc.dg/graphite/interchange-2.c: Un-XFAIL.\n-\t* testsuite/gcc.dg/graphite/interchange-3.c: Un-XFAIL.\n-\t* testsuite/gcc.dg/graphite/interchange-4.c: Un-XFAIL.\n-\t* testsuite/gcc.dg/graphite/interchange-7.c: Un-XFAIL.\n-\t* testsuite/gcc.dg/graphite/scop-matmult.c: Un-XFAIL.\n-\t* testsuite/gfortran.dg/graphite/id-13.f: New.\n-\t* testsuite/gfortran.dg/graphite/id-5.f: New.\n+\t* gcc.dg/graphite/id-11.c: New.\n+\t* gcc.dg/graphite/id-15.c: New.\n+\t* gcc.dg/graphite/interchange-1.c: Un-XFAIL.\n+\t* gcc.dg/graphite/interchange-2.c: Un-XFAIL.\n+\t* gcc.dg/graphite/interchange-3.c: Un-XFAIL.\n+\t* gcc.dg/graphite/interchange-4.c: Un-XFAIL.\n+\t* gcc.dg/graphite/interchange-7.c: Un-XFAIL.\n+\t* gcc.dg/graphite/scop-matmult.c: Un-XFAIL.\n+\t* gfortran.dg/graphite/id-13.f: New.\n+\t* gfortran.dg/graphite/id-5.f: New.\n \n 2009-07-28  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -1756,7 +1792,7 @@\n \n \t* graphite-clast-to-gimple.c (build_cloog_prog): Do not code generate\n \tstatements that have an empty iteration domain.\n-\t* testsuite/gfortran.dg/graphite/id-16.f: New.\n+\t* gfortran.dg/graphite/id-16.f: New.\n \n 2009-07-28  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -1765,8 +1801,8 @@\n \t* graphite-scop-detection.c (scopdet_basic_block_info): Fix formatting.\n \t* graphite-sese-to-poly.c (create_linear_expr_from_tree): Assert that\n \tthe tree has a known scalar evolution.\n-\t* testsuite/gfortran.dg/graphite/id-14.f: New.\n-\t* testsuite/gfortran.dg/graphite/id-15.f: New.\n+\t* gfortran.dg/graphite/id-14.f: New.\n+\t* gfortran.dg/graphite/id-15.f: New.\n \n 2009-07-28  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -1786,16 +1822,16 @@\n \n \t* graphite.c (graphite_finalize): Call print_loops instead of\n \tdump_function_to_file.\n-\t* testsuite/gcc.dg/graphite/graphite.exp: Fix formatting.\n-\t* testsuite/gcc.dg/graphite/pr35356-1.c: New.  Look for the number of\n+\t* gcc.dg/graphite/graphite.exp: Fix formatting.\n+\t* gcc.dg/graphite/pr35356-1.c: New.  Look for the number of\n \tloops generated in the graphite output file.\n-\t* testsuite/gcc.dg/graphite/pr35356-2.c: New.\n-\t* testsuite/gcc.dg/graphite/pr35356-3.c: New.  XFAILed for now.\n-\t* testsuite/gfortran.dg/graphite/id-12.f: New.\n+\t* gcc.dg/graphite/pr35356-2.c: New.\n+\t* gcc.dg/graphite/pr35356-3.c: New.  XFAILed for now.\n+\t* gfortran.dg/graphite/id-12.f: New.\n \n 2009-07-24  Li Feng  <nemokingdom@gmail.com>\n \n-\t* testsuite/gcc.dg/graphite/graphite_autopar/force-parallel-8.c:\n+\t* gcc.dg/graphite/graphite_autopar/force-parallel-8.c:\n \tRemove 2 XFAIL.\n \n 2009-07-24  Li Feng  <nemokingdom@gmail.com>\n@@ -1864,9 +1900,9 @@\n \n 2009-07-16  Sebastian Pop  <sebastian.pop@amd.com>\n \n-\t* testsuite/gcc.dg/graphite/id-14.c: New.\n-\t* testsuite/gcc.dg/graphite/pr40157.c: New.\n-\t* testsuite/gfortran.dg/graphite/id-11.f: New.\n+\t* gcc.dg/graphite/id-14.c: New.\n+\t* gcc.dg/graphite/pr40157.c: New.\n+\t* gfortran.dg/graphite/id-11.f: New.\n \n 2009-07-16  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -1928,13 +1964,13 @@\n \tpolynomials of degree > 1 pass to Graphite.\n \t* tree-chrec.c (scev_is_linear_expression): Call\n \tevolution_function_is_affine_multivariate_p.\n-\t* testsuite/gfortran.dg/graphite/id-10.f90: New.\n+\t* gfortran.dg/graphite/id-10.f90: New.\n \n 2009-07-14  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* tree-scalar-evolution.c (compute_overall_effect_of_inner_loop):\n \tInstantiate scevs varying in outer loops.\n-\t* testsuite/gfortran.dg/graphite/id-9.f: Correct testcase.\n+\t* gfortran.dg/graphite/id-9.f: Correct testcase.\n \n 2009-07-14  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -1943,22 +1979,22 @@\n \n 2009-07-14  Sebastian Pop  <sebastian.pop@amd.com>\n \n-\t* testsuite/gcc.dg/graphite/graphite.exp: Fix comments.\n-\t* testsuite/gfortran.dg/graphite/graphite.exp: Trigger actions\n+\t* gcc.dg/graphite/graphite.exp: Fix comments.\n+\t* gfortran.dg/graphite/graphite.exp: Trigger actions\n \tbased on the file names as in the C testsuite.\n-\t* testsuite/gfortran.dg/graphite/block-1.f90: Fix patterns.\n-\t* testsuite/gfortran.dg/graphite/block-2.f: Same.\n-\t* testsuite/gfortran.dg/graphite/block-3.f90: Same.\n-\t* testsuite/gfortran.dg/graphite/block-4.f90: Same.\n-\t* testsuite/gfortran.dg/graphite/id-1.f90: Same.\n-\t* testsuite/gfortran.dg/graphite/id-2.f90: Same.\n-\t* testsuite/gfortran.dg/graphite/id-3.f90: Same.\n-\t* testsuite/gfortran.dg/graphite/id-4.f90: Same.\n-\t* testsuite/gfortran.dg/graphite/id-6.f: Same.\n-\t* testsuite/gfortran.dg/graphite/id-9.f: Same.\n-\t* testsuite/gfortran.dg/graphite/interchange-1.f: Same.\n-\t* testsuite/gfortran.dg/graphite/interchange-2.f: Same.\n-\t* testsuite/gfortran.dg/graphite/scop-1.f: Same.\n+\t* gfortran.dg/graphite/block-1.f90: Fix patterns.\n+\t* gfortran.dg/graphite/block-2.f: Same.\n+\t* gfortran.dg/graphite/block-3.f90: Same.\n+\t* gfortran.dg/graphite/block-4.f90: Same.\n+\t* gfortran.dg/graphite/id-1.f90: Same.\n+\t* gfortran.dg/graphite/id-2.f90: Same.\n+\t* gfortran.dg/graphite/id-3.f90: Same.\n+\t* gfortran.dg/graphite/id-4.f90: Same.\n+\t* gfortran.dg/graphite/id-6.f: Same.\n+\t* gfortran.dg/graphite/id-9.f: Same.\n+\t* gfortran.dg/graphite/interchange-1.f: Same.\n+\t* gfortran.dg/graphite/interchange-2.f: Same.\n+\t* gfortran.dg/graphite/scop-1.f: Same.\n \n 2009-07-14  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -1967,18 +2003,18 @@\n \n 2009-07-13  Sebastian Pop  <sebastian.pop@amd.com>\n \n-\t* testsuite/gcc.dg/graphite/graphite_autopar/force-parallel-6.c:\n+\t* gcc.dg/graphite/graphite_autopar/force-parallel-6.c:\n \tExpect to see the pattern twice.\n-\t* testsuite/gcc.dg/graphite/interchange-0.c: Un-XFAIL.\n-\t* testsuite/gcc.dg/graphite/interchange-5.c: Same.\n-\t* testsuite/gcc.dg/graphite/interchange-6.c: Same.\n+\t* gcc.dg/graphite/interchange-0.c: Un-XFAIL.\n+\t* gcc.dg/graphite/interchange-5.c: Same.\n+\t* gcc.dg/graphite/interchange-6.c: Same.\n \n 2009-07-13  Sebastian Pop  <sebastian.pop@amd.com>\n \n-\t* testsuite/gcc.dg/graphite/id-10.c: New.\n-\t* testsuite/gcc.dg/graphite/id-12.c: New.\n-\t* testsuite/gfortran.dg/graphite/id-7.f: New.\n-\t* testsuite/gfortran.dg/graphite/id-8.f: New.\n+\t* gcc.dg/graphite/id-10.c: New.\n+\t* gcc.dg/graphite/id-12.c: New.\n+\t* gfortran.dg/graphite/id-7.f: New.\n+\t* gfortran.dg/graphite/id-8.f: New.\n \n 2009-07-13  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -2039,9 +2075,9 @@\n \n 2009-07-09  Sebastian Pop  <sebastian.pop@amd.com>\n \n-\t* testsuite/gcc.dg/graphite/graphite.exp: Added a rule to execute\n+\t* gcc.dg/graphite/graphite.exp: Added a rule to execute\n \trun-id-*.c files.\n-\t* testsuite/gcc.dg/graphite/run-id-1.c: New.\n+\t* gcc.dg/graphite/run-id-1.c: New.\n \n 2009-07-09  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -2123,7 +2159,7 @@\n \n 2009-07-07  Sebastian Pop  <sebastian.pop@amd.com>\n \n-\t* testsuite/gcc.dg/graphite/id-13.c: New.\n+\t* gcc.dg/graphite/id-13.c: New.\n \t* graphite-sese-to-poly.c (graphite_stmt_p): Do not call\n \tanalyze_scalar_evolution, use scalar_evolution_in_region.\n \t(scan_tree_for_params_right_scev): Add extra assert.\n@@ -2155,22 +2191,22 @@\n \n 2009-07-07  Li Feng  <nemokingdom@gmail.com>\n \n-\t* testsuite/gcc.dg/graphite/graphite_autopar/force-parallel-4.c: New.\n-\t* testsuite/gcc.dg/graphite/graphite_autopar/force-parallel-5.c: New.\n-\t* testsuite/gcc.dg/graphite/graphite_autopar/force-parallel-6.c: New.\n-\t* testsuite/gcc.dg/graphite/graphite_autopar/force-parallel-7.c: New.\n-\t* testsuite/gcc.dg/graphite/graphite_autopar/force-parallel-8.c: New.\n-\t* testsuite/gcc.dg/graphite/graphite_autopar/force-parallel-9.c: New.\n+\t* gcc.dg/graphite/graphite_autopar/force-parallel-4.c: New.\n+\t* gcc.dg/graphite/graphite_autopar/force-parallel-5.c: New.\n+\t* gcc.dg/graphite/graphite_autopar/force-parallel-6.c: New.\n+\t* gcc.dg/graphite/graphite_autopar/force-parallel-7.c: New.\n+\t* gcc.dg/graphite/graphite_autopar/force-parallel-8.c: New.\n+\t* gcc.dg/graphite/graphite_autopar/force-parallel-9.c: New.\n \n 2009-07-07  Li Feng  <nemokingdom@gmail.com>\n \n \t* graphite-clast-to-gimple.c (mark_loops_parallel): Dump information\n \tfor dependency checking part.\n-\t* testsuite/gcc.dg/graphite/graphite_autopar/force-parallel-1.c: Add\n+\t* gcc.dg/graphite/graphite_autopar/force-parallel-1.c: Add\n \ttests for dependency checking.\n-\t* testsuite/gcc.dg/graphite/graphite_autopar/force-parallel-2.c: Ditto.\n-\t* testsuite/gcc.dg/graphite/graphite_autopar/force-parallel-3.c: Ditto.\n-\t* testsuite/gcc.dg/graphite/graphite_autopar/graphite_autopar.exp: Add\n+\t* gcc.dg/graphite/graphite_autopar/force-parallel-2.c: Ditto.\n+\t* gcc.dg/graphite/graphite_autopar/force-parallel-3.c: Ditto.\n+\t* gcc.dg/graphite/graphite_autopar/graphite_autopar.exp: Add\n \tflag -fdump-tree-graphite-all for autopar testsuites.\n \n 2009-07-06  Sebastian Pop  <sebastian.pop@amd.com>\n@@ -2189,7 +2225,7 @@\n \n 2009-07-06  Li Feng  <nemokingdom@gmail.com>\n \n-\t* testsuite/gcc.dg/graphite/graphite_autopar/graphite_autopar.exp:\n+\t* gcc.dg/graphite/graphite_autopar/graphite_autopar.exp:\n \tAdded flag -fno-loop-strip-mine for autopar testcase.\n \n 2009-07-04  Li Feng  <nemokingdom@gmail.com>\n@@ -2335,11 +2371,11 @@\n \n 2009-06-24  Li Feng  <nemokingdom@gmail.com>\n \n-\t* testsuite/gcc.dg/graphite/graphite_autopar/force-parallel-1.c: Update\n+\t* gcc.dg/graphite/graphite_autopar/force-parallel-1.c: Update\n \t-fdump-tree-final_cleanup to -fdump-tree-optimized.\n-\t* testsuite/gcc.dg/graphite/graphite_autopar/force-parallel-2.c: Ditto.\n-\t* testsuite/gcc.dg/graphite/graphite_autopar/force-parallel-3.c: Ditto.\n-\t* testsuite/gcc.dg/graphite/graphite_autopar/graphite_autopar.exp: Ditto.\n+\t* gcc.dg/graphite/graphite_autopar/force-parallel-2.c: Ditto.\n+\t* gcc.dg/graphite/graphite_autopar/force-parallel-3.c: Ditto.\n+\t* gcc.dg/graphite/graphite_autopar/graphite_autopar.exp: Ditto.\n \n 2009-06-23  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -2474,7 +2510,7 @@\n \n 2009-06-18  Sebastian Pop  <sebastian.pop@amd.com>\n \n-\t* gcc/testsuite/gcc.dg/graphite/interchange-{1..7}.c: New avatars of\n+\t* gcc.dg/graphite/interchange-{1..7}.c: New avatars of\n \tltrans-{1..6,8}.c.\n \n 2009-06-18  Sebastian Pop  <sebastian.pop@amd.com>\n@@ -2608,7 +2644,7 @@\n \n 2009-05-17  Li Feng  <nemokingdom@gmail.com>\n \n-\t* testsuite/gcc.dg/graphite/graphite_autopar/graphite_autopar.exp:\n+\t* gcc.dg/graphite/graphite_autopar/graphite_autopar.exp:\n \tCover all the testcases (not only the filtered ones).\n \n 2009-05-17  Tobias Grosser  <grosser@fim.uni-passau.de>\n@@ -2785,19 +2821,19 @@\n \n 2009-05-11  Li Feng  <nemokingdom@gmail.com>\n \n-\t* testsuite/gcc.dg/graphite/graphite.exp: Set different default\n+\t* gcc.dg/graphite/graphite.exp: Set different default\n \tcompile options by file names.\n-\t* testsuite/gcc.dg/graphite/block{0-6}.c: Remove dg-option line.\n-\t* testsuite/gcc.dg/graphite/id-{1-9}.c: Ditto.\n-\t* testsuite/gcc.dg/graphite/scop-{0-20}.c: Ditto.\n-\t* testsuite/gcc.dg/graphite/scop-matmult.c: Ditto.\n+\t* gcc.dg/graphite/block{0-6}.c: Remove dg-option line.\n+\t* gcc.dg/graphite/id-{1-9}.c: Ditto.\n+\t* gcc.dg/graphite/scop-{0-20}.c: Ditto.\n+\t* gcc.dg/graphite/scop-matmult.c: Ditto.\n \n 2009-05-08  Li Feng <nemokingdom@gmail.com>\n \n-\t* testsuite/gcc.dg/graphite/graphite_autopar/graphite_autopar.exp: New.\n-\t* testsuite/gcc.dg/graphite/graphite_autopar/force-parallel-1.c: New.\n-\t* testsuite/gcc.dg/graphite/graphite_autopar/force-parallel-2.c: New.\n-\t* testsuite/gcc.dg/graphite/graphite_autopar/force-parallel-3.c: New.\n+\t* gcc.dg/graphite/graphite_autopar/graphite_autopar.exp: New.\n+\t* gcc.dg/graphite/graphite_autopar/force-parallel-1.c: New.\n+\t* gcc.dg/graphite/graphite_autopar/force-parallel-2.c: New.\n+\t* gcc.dg/graphite/graphite_autopar/force-parallel-3.c: New.\n \n 2009-05-07  Tobias Grosser  <grosser@fim.uni-passau.de>\n \n@@ -2817,8 +2853,8 @@\n \t(try_generate_gimple_bb): Cleanup.\n \t(build_scops): Enable data references.\n \n-\t* testsuite/gcc.dg/graphite/id-5.c: New.\n-\t* testsuite/gcc.dg/graphite/id-9.c: New.\n+\t* gcc.dg/graphite/id-5.c: New.\n+\t* gcc.dg/graphite/id-9.c: New.\n \t* tree-chrec.c (evolution_function_right_is_integer_cst): New.\n \t* tree-chrec.h (evolution_function_right_is_integer_cst): New.\n \n@@ -2847,8 +2883,8 @@\n \n 2009-05-01  Tobias Grosser  <grosser@fim.uni-passau.de>\n \n-\t* testsuite/gcc.dg/graphite/id-6.c: Update testcase.\n-\t* testsuite/gcc.dg/graphite/scop-3.c: Dito.\n+\t* gcc.dg/graphite/id-6.c: Update testcase.\n+\t* gcc.dg/graphite/scop-3.c: Dito.\n \n 2009-05-01  Tobias Grosser  <grosser@fim.uni-passau.de>\n \n@@ -2862,15 +2898,15 @@\n \t(harmful_stmt_in_bb): Check if we can represent the conditions.\n \t(scopdet_basic_block_info (basic_block bb, VEC): Pass the loop to\n \tharmful_stmt_in_bb.\n-\t* testsuite/gcc.dg/graphite/id-7.c: New.\n+\t* gcc.dg/graphite/id-7.c: New.\n \n 2009-04-30  Tobias Grosser  <grosser@fim.uni-passau.de>\n \n \t* graphite-sese-to-poly.c (bb_contains_non_iv_scalar_phi_nodes):\n \tCheck all bbs in region, not only the bbs that are represented in\n \tGRAPHITE.\n \t(build_poly_scop): Add newline.\n-\t* testsuite/gcc.dg/graphite/id-8.c: New.\n+\t* gcc.dg/graphite/id-8.c: New.\n \n 2009-04-30  Li Feng  <nemokingdom@gmail.com>\n \n@@ -2906,7 +2942,7 @@\n \n \t* graphite-scop-detection.c (graphite_can_represent_scev): Do not\n \tallow non constant strides.\n-\t* testsuite/gcc.dg/graphite/scop-20.c: New.\n+\t* gcc.dg/graphite/scop-20.c: New.\n \n 2009-04-24  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -2916,8 +2952,8 @@\n \n 2009-04-24  Sebastian Pop  <sebastian.pop@amd.com>\n \n-\t* testsuite/gcc.dg/graphite/id-6.c: Fix pattern.\n-\t* testsuite/gcc.dg/graphite/scop-3.c: Same.\n+\t* gcc.dg/graphite/id-6.c: Fix pattern.\n+\t* gcc.dg/graphite/scop-3.c: Same.\n \n 2009-04-24  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -2999,7 +3035,7 @@\n \t* graphite-ppl.h (debug_ppl_powerset_matrix): New.\n \t* graphite-sese-to-poly.c (add_condition_to_pbb): Use\n \tupper_bound_assign to calculate unions.\n-\t* testsuite/gcc.dg/graphite/id-6.c: New.\n+\t* gcc.dg/graphite/id-6.c: New.\n \n 2009-04-09  Tobias Grosser  <grosser@fim.uni-passau.de>\n \n@@ -3023,8 +3059,8 @@\n \n 2009-04-08  Sebastian Pop  <sebastian.pop@amd.com>\n \n-\t* testsuite/gfortran.dg/graphite/interchange-1.c: New.\n-\t* testsuite/gfortran.dg/graphite/interchange-2.c: New.\n+\t* gfortran.dg/graphite/interchange-1.c: New.\n+\t* gfortran.dg/graphite/interchange-2.c: New.\n \n 2009-04-08  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -3071,7 +3107,7 @@\n \t(add_condition_to_domain): New.\n \t(add_condition_to_pbb): New.\n \t(add_conditions_to_domain): Cleanup and handle of NE_EXPR and EQ_EXPR.\n-\t* testsuite/gcc.dg/graphite/scop-3.c: Update number of detected SCoPs.\n+\t* gcc.dg/graphite/scop-3.c: Update number of detected SCoPs.\n \n 2009-04-08  Tobias Grosser  <grosser@fim.uni-passau.de>\n \n@@ -3203,14 +3239,14 @@\n 2009-03-29  Tobias Grosser  <grosser@fim.uni-passau.de>\n \n \t* graphite-poly.c: (apply_poly_transforms): sorry -> gcc_unreachable.\n-\t* testsuite/gcc.dg/graphite/pr37883.c: Remove -floop-*\n-\t* testsuite/gcc.dg/graphite/pr37928.c: Same\n-\t* testsuite/gcc.dg/graphite/pr38409.c: Same\n-\t* testsuite/gcc.dg/graphite/pr38498.c: Same\n-\t* testsuite/gcc.dg/graphite/pr38559.c: Same\n-\t* testsuite/gcc.dg/graphite/pr39335.c: Same\n-\t* testsuite/gcc.dg/graphite/pr39335_1.c: Same\n-\t* testsuite/gfortran.dg/graphite/block-2.f: Same\n+\t* gcc.dg/graphite/pr37883.c: Remove -floop-*\n+\t* gcc.dg/graphite/pr37928.c: Same\n+\t* gcc.dg/graphite/pr38409.c: Same\n+\t* gcc.dg/graphite/pr38498.c: Same\n+\t* gcc.dg/graphite/pr38559.c: Same\n+\t* gcc.dg/graphite/pr39335.c: Same\n+\t* gcc.dg/graphite/pr39335_1.c: Same\n+\t* gfortran.dg/graphite/block-2.f: Same\n \t* tree-ssa-loop.c (gate_graphite_transforms): Always fail if called\n \twith -floop-*.\n \n@@ -3329,7 +3365,7 @@\n \n 2009-03-13  Tobias Grosser  <grosser@fim.uni-passau.de>\n \n-\t* testsuite/gcc.dg/graphite/id-4.c: New.\n+\t* gcc.dg/graphite/id-4.c: New.\n \n 2009-03-12  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -3362,7 +3398,7 @@\n \n \t* graphite-scop-detection.c (is_simple_operand): Do not handle\n \tREALPART_EXPR.\n-\t* testsuite/gcc.dg/graphite/id-2.c: New.\n+\t* gcc.dg/graphite/id-2.c: New.\n \n \t* graphite-sese-to-poly.c (build_bb_loops,\n \tadd_value_to_dim, scan_tree_for_params_right_scev,\n@@ -3472,24 +3508,24 @@\n \n 2009-03-04  Tobias Grosser  <grosser@fim.uni-passau.de>\n \n-\t* testsuite/gcc.dg/graphite/pr37485.c: Remove -floop-block\n-\t* testsuite/gcc.dg/graphite/pr37828.c: Same.\n-\t* testsuite/gcc.dg/graphite/pr37684.c: Same.\n-\t* testsuite/gcc.dg/graphite/block-0.c: Same.\n-\t* testsuite/gcc.dg/graphite/block-1.c: Same.\n-\t* testsuite/gcc.dg/graphite/block-2.c: Same.\n-\t* testsuite/gcc.dg/graphite/block-3.c: Same.\n-\t* testsuite/gcc.dg/graphite/block-4.c: Same.\n-\t* testsuite/gcc.dg/graphite/block-5.c: Same.\n-\t* testsuite/gcc.dg/graphite/block-6.c: Same.\n-\t* testsuite/gfortran.dg/graphite/pr38083.f90: Same.\n-\t* testsuite/gfortran.dg/graphite/block-1.f90: Same.\n-\t* testsuite/gfortran.dg/graphite/block-3.f90: Same.\n-\t* testsuite/gfortran.dg/graphite/pr37852.f90: Same.\n-\t* testsuite/gfortran.dg/graphite/block-4.f90: Same.\n-\t* testsuite/gfortran.dg/graphite/pr37980.f90: Same.\n-\t* testsuite/gfortran.dg/graphite/pr38953.f90: Same.\n-\t* testsuite/gfortran.dg/graphite/pr37857.f90: Same.\n+\t* gcc.dg/graphite/pr37485.c: Remove -floop-block\n+\t* gcc.dg/graphite/pr37828.c: Same.\n+\t* gcc.dg/graphite/pr37684.c: Same.\n+\t* gcc.dg/graphite/block-0.c: Same.\n+\t* gcc.dg/graphite/block-1.c: Same.\n+\t* gcc.dg/graphite/block-2.c: Same.\n+\t* gcc.dg/graphite/block-3.c: Same.\n+\t* gcc.dg/graphite/block-4.c: Same.\n+\t* gcc.dg/graphite/block-5.c: Same.\n+\t* gcc.dg/graphite/block-6.c: Same.\n+\t* gfortran.dg/graphite/pr38083.f90: Same.\n+\t* gfortran.dg/graphite/block-1.f90: Same.\n+\t* gfortran.dg/graphite/block-3.f90: Same.\n+\t* gfortran.dg/graphite/pr37852.f90: Same.\n+\t* gfortran.dg/graphite/block-4.f90: Same.\n+\t* gfortran.dg/graphite/pr37980.f90: Same.\n+\t* gfortran.dg/graphite/pr38953.f90: Same.\n+\t* gfortran.dg/graphite/pr37857.f90: Same.\n \t* opts.c: Remove -floop-block from -O2.\n \t* graphite-poly.c: Fail if -floop-block -floop-interchange or\n \t-floop-strip-mine are used.\n@@ -3546,8 +3582,8 @@\n \t* graphite-clast-to-gimple.c (graphite_loop_normal_form): Same.\n \t* tree-flow.h (canonicalize_loop_ivs): Update declaration.\n \n-\t* testsuite/gcc.dg/graphite/pr39335_1.c: New.\n-\t* testsuite/gcc.dg/graphite/pr39335.c: New.\n+\t* gcc.dg/graphite/pr39335_1.c: New.\n+\t* gcc.dg/graphite/pr39335.c: New.\n \n 2009-03-02  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -3669,7 +3705,7 @@\n \t* graphite-sese-to-poly.c (build_poly_scop): Don't fail on\n \tbuild_sese_loop_nests.\n \n-\t* testsuite/gcc.dg/graphite/id-1.c: New.\n+\t* gcc.dg/graphite/id-1.c: New.\n \n 2009-02-23  Sebastian Pop  <sebastian.pop@amd.com>\n \t    Tobias Grosser  <grosser@fim.uni-passau.de>\n@@ -4095,7 +4131,7 @@\n \t* graphite.h (ref_nb_loops): ... from here.\n \t(struct scop): Remove bbs_b bitmap.\n \t(SCOP_BBS_B, bb_in_scop_p, loop_in_scop_p): Removed.\n-\t* testsuite/gcc.dg/graphite/scop-19.c: New\n+\t* gcc.dg/graphite/scop-19.c: New\n \n 2009-02-03  Tobias Grosser  <grosser@fim.uni-passau.de>\n \n@@ -4233,7 +4269,7 @@\n 2009-01-11  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR tree-optimization/38786\n-\t* testsuite/gcc.dg/graphite/pr38786.c: New.\n+\t* gcc.dg/graphite/pr38786.c: New.\n \t* graphite.c (expand_scalar_variables_ssa_name): New, outlined from\n \tthe SSA_NAME case of expand_scalar_variables_expr.\n \t(expand_scalar_variables_expr): Also gather the scalar computation\n@@ -4243,7 +4279,7 @@\n \n 2009-01-10  Sebastian Pop  <sebastian.pop@amd.com>\n \n-\t* testsuite/gcc.dg/graphite/block-3.c: Fix compile error on 32bit.\n+\t* gcc.dg/graphite/block-3.c: Fix compile error on 32bit.\n \n 2009-01-10  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -4263,7 +4299,7 @@\n \t    Jan Sjodin  <jan.sjodin@amd.com>\n \n \tPR tree-optimization/38559\n-\t* testsuite/gcc.dg/graphite/pr38559.c: New.\n+\t* gcc.dg/graphite/pr38559.c: New.\n \n \t* graphite.c (debug_value, copy_constraint,\n \tswap_constraint_variables, scale_constraint_variable, ): New.\n@@ -4297,15 +4333,15 @@\n \t(graphite_transform_loops): Do not handle scops that contain condition\n \tscalar phi nodes.\n \n-\t* testsuite/gcc.dg/graphite/pr38500.c: Fixed warning as committed\n+\t* gcc.dg/graphite/pr38500.c: Fixed warning as committed\n \tin trunk.\n-\t* testsuite/gcc.dg/graphite/block-0.c: Update test.\n-\t* testsuite/gcc.dg/graphite/block-1.c: Same.\n-\t* testsuite/gcc.dg/graphite/block-2.c: Remove xfail and test for\n+\t* gcc.dg/graphite/block-0.c: Update test.\n+\t* gcc.dg/graphite/block-1.c: Same.\n+\t* gcc.dg/graphite/block-2.c: Remove xfail and test for\n \tblocking.\n-\t* testsuite/gcc.dg/graphite/block-4.c: Remove test for strip mine.\n-\t* testsuite/gcc.dg/graphite/block-3.c: New.\n-\t* testsuite/gcc.dg/graphite/pr38498.c: New.\n+\t* gcc.dg/graphite/block-4.c: Remove test for strip mine.\n+\t* gcc.dg/graphite/block-3.c: New.\n+\t* gcc.dg/graphite/pr38498.c: New.\n \n 2008-12-22  Harsha Jagasia  <harsha.jagasia@amd.com>\n \n@@ -4379,13 +4415,13 @@\n \n 2008-12-11  Sebastian Pop  <sebastian.pop@amd.com>\n \n-\t* testsuite/gcc.dg/graphite/scop-16.c: Test only scop specific info.\n-\t* testsuite/gcc.dg/graphite/scop-17.c: Same.\n-\t* testsuite/gcc.dg/graphite/block-5.c: New.\n-\t* testsuite/gcc.dg/graphite/block-6.c: New.\n-\t* testsuite/gcc.dg/graphite/pr37485.c: Clean dump file after.\n-\t* testsuite/gcc.dg/graphite/pr37684.c: Same.\n-\t* testsuite/gcc.dg/graphite/block-2.c: Same.\n+\t* gcc.dg/graphite/scop-16.c: Test only scop specific info.\n+\t* gcc.dg/graphite/scop-17.c: Same.\n+\t* gcc.dg/graphite/block-5.c: New.\n+\t* gcc.dg/graphite/block-6.c: New.\n+\t* gcc.dg/graphite/pr37485.c: Clean dump file after.\n+\t* gcc.dg/graphite/pr37684.c: Same.\n+\t* gcc.dg/graphite/block-2.c: Same.\n \n \t* graphite.c (struct ivtype_map_elt): New.\n \t(debug_ivtype_elt, debug_ivtype_map_1, debug_ivtype_map,\n@@ -4433,7 +4469,7 @@\n \t(graphite_transform_loops): Move condition detection before parameter\n \tdetection.\n \t* graphite.h (struct scop): Add SCOP_ADD_PARAMS.\n-\t* testsuite/gfortran.dg/graphite/pr38459.f90: New.\n+\t* gfortran.dg/graphite/pr38459.f90: New.\n \n 2008-12-09  Tobias Grosser  <grosser@fim.uni-passau.de>\n \n@@ -4449,19 +4485,19 @@\n 2008-12-08  Tobias Grosser  <grosser@fim.uni-passau.de>\n \n \tPR middle-end/38084\n-\tFix testsuite/gfortran.dg/graphite/id-3.f90.\n+\tFix gfortran.dg/graphite/id-3.f90.\n \t* graphite.c (scopdet_basic_block_info): Fix bug that found some\n \tregions more than once.\n \n 2008-12-03  Sebastian Pop  <sebastian.pop@amd.com>\n \n-\tFix testsuite/gfortran.dg/graphite/id-4.f90.\n+\tFix gfortran.dg/graphite/id-4.f90.\n \t* graphite.c (scan_tree_for_params): Do not compute the multiplicand\n \twhen not needed.\n \n 2008-12-03  Sebastian Pop  <sebastian.pop@amd.com>\n \n-\tFix testsuite/gfortran.dg/graphite/id-1.f90.\n+\tFix gfortran.dg/graphite/id-1.f90.\n \t* graphite.c (gmp_cst_to_tree): Pass the type in parameter.\n \t(loop_iv_stack_patch_for_consts): Update use of gmp_cst_to_tree.\n \t(max_precision_type): New.\n@@ -4481,12 +4517,12 @@\n \n 2008-12-02  Sebastian Pop  <sebastian.pop@amd.com>\n \n-\t* testsuite/gcc.dg/graphite/pr38084.c: New.\n-\t* testsuite/gfortran.dg/graphite/id-1.f90: New.\n-\t* testsuite/gfortran.dg/graphite/id-2.f90: New.\n-\t* testsuite/gfortran.dg/graphite/id-3.f90: New.\n-\t* testsuite/gfortran.dg/graphite/id-4.f90: New.\n-\t* testsuite/gfortran.dg/graphite/pr37857.f90: New.\n+\t* gcc.dg/graphite/pr38084.c: New.\n+\t* gfortran.dg/graphite/id-1.f90: New.\n+\t* gfortran.dg/graphite/id-2.f90: New.\n+\t* gfortran.dg/graphite/id-3.f90: New.\n+\t* gfortran.dg/graphite/id-4.f90: New.\n+\t* gfortran.dg/graphite/pr37857.f90: New.\n \n 2008-12-02  Sebastian Pop  <sebastian.pop@amd.com>\n \t    Jan Sjodin  <jan.sjodin@amd.com>\n@@ -4502,20 +4538,20 @@\n \tPR middle-end/38083\n \tPR middle-end/38125\n \n-\t* testsuite/gcc.dg/graphite/pr38073.c: New.\n-\t* testsuite/gcc.dg/graphite/pr37928.c: New.\n-\t* testsuite/gcc.dg/graphite/pr37883.c: New.\n-\t* testsuite/gcc.dg/graphite/pr38125.c: New.\n-\t* testsuite/gfortran.dg/graphite/pr38083.f90: New.\n-\t* testsuite/gfortran.dg/graphite/pr37852.f90: New.\n-\t* testsuite/gfortran.dg/graphite/pr37980.f90: New.\n+\t* gcc.dg/graphite/pr38073.c: New.\n+\t* gcc.dg/graphite/pr37928.c: New.\n+\t* gcc.dg/graphite/pr37883.c: New.\n+\t* gcc.dg/graphite/pr38125.c: New.\n+\t* gfortran.dg/graphite/pr38083.f90: New.\n+\t* gfortran.dg/graphite/pr37852.f90: New.\n+\t* gfortran.dg/graphite/pr37980.f90: New.\n \n-\t* testsuite/gcc.dg/graphite/scop-18.c: Remove reduction, test for\n+\t* gcc.dg/graphite/scop-18.c: Remove reduction, test for\n \tthe number of detected scops.  Copy exact same test for loop\n \tblocking...\n-\t* testsuite/gcc.dg/graphite/block-1.c: Fix the number of expected\n+\t* gcc.dg/graphite/block-1.c: Fix the number of expected\n \tloops to be blocked as reductions are not handled.\n-\t* testsuite/gcc.dg/graphite/block-4.c: ...here.  New.\n+\t* gcc.dg/graphite/block-4.c: ...here.  New.\n \n \t* tree-phinodes.c (remove_phi_nodes): New, extracted from...\n \t* tree-cfg.c (remove_phi_nodes_and_edges_for_unreachable_block):\n@@ -4624,7 +4660,7 @@\n \n \t* graphite.c (scopdet_basic_block_info): Fix loops with multiple\n \texits and conditions.\n-\t* testsuite/gcc.dg/graphite/pr37943.c: New.\n+\t* gcc.dg/graphite/pr37943.c: New.\n \n 2008-10-23  Tobias Grosser  <grosser@fim.uni-passau.de>\n \n@@ -4668,7 +4704,7 @@\n     \t    Harsha Jagasia  <harsha.jagasia@amd.com>\n \n \tPR tree-optimization/37828\n-\t* testsuite/gcc.dg/graphite/pr37828.c: New.\n+\t* gcc.dg/graphite/pr37828.c: New.\n \t* graphite.c (graphite_trans_loop_block): Do not loop block\n \tsingle nested loops.\n \n@@ -4760,7 +4796,7 @@\n 2008-09-01  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* Merge from mainline (138275:139870).\n-\t* testsuite/gcc.dg/graphite/scop-matmult.c: XFailed as one of\n+\t* gcc.dg/graphite/scop-matmult.c: XFailed as one of\n \tthe commits from trunk broke the niter detection.\n \n 2008-09-01  Sebastian Pop  <sebastian.pop@amd.com>\n@@ -4957,41 +4993,41 @@\n 2008-08-20  Dwarakanath Rajagopal  <dwarak.rajagopal@amd.com>\n \t    Sebastian Pop  <sebastian.pop@amd.com>\n \n-\t* testsuite/lib/target-supports.exp\n+\t* lib/target-supports.exp\n \t(check_effective_target_fgraphite): New.\n \n-\t* testsuite/gcc.dg/graphite/graphite.exp: Early exit when\n+\t* gcc.dg/graphite/graphite.exp: Early exit when\n \tcheck_effective_target_fgraphite returns false.\n \tSet dg-do-what-default to compile.\n \t(scan-graphite-dump-times): Removed.\n-\t* testsuite/gfortran.dg/graphite/graphite.exp: Same.\n+\t* gfortran.dg/graphite/graphite.exp: Same.\n \n-\t* testsuite/gcc.dg/graphite/scop-0.c: Do not use \"dg-do compile\".\n+\t* gcc.dg/graphite/scop-0.c: Do not use \"dg-do compile\".\n \tUse scan-tree-dump-times instead of scan-graphite-dump-times.\n-\t* testsuite/gcc.dg/graphite/scop-1.c: Same.\n-\t* testsuite/gcc.dg/graphite/scop-2.c: Same.\n-\t* testsuite/gcc.dg/graphite/scop-3.c: Same.\n-\t* testsuite/gcc.dg/graphite/scop-4.c: Same.\n-\t* testsuite/gcc.dg/graphite/scop-5.c: Same.\n-\t* testsuite/gcc.dg/graphite/scop-6.c: Same.\n-\t* testsuite/gcc.dg/graphite/scop-7.c: Same.\n-\t* testsuite/gcc.dg/graphite/scop-8.c: Same.\n-\t* testsuite/gcc.dg/graphite/scop-9.c: Same.\n-\t* testsuite/gcc.dg/graphite/scop-10.c: Same.\n-\t* testsuite/gcc.dg/graphite/scop-11.c: Same.\n-\t* testsuite/gcc.dg/graphite/scop-12.c: Same.\n-\t* testsuite/gcc.dg/graphite/scop-13.c: Same.\n-\t* testsuite/gcc.dg/graphite/scop-matmult.c: Same.\n-\t* testsuite/gcc.dg/graphite/scop-14.c: Same.\n-\t* testsuite/gcc.dg/graphite/scop-15.c: Same.\n-\t* testsuite/gcc.dg/graphite/block-0.c: Same.\n-\t* testsuite/gcc.dg/graphite/scop-16.c: Same.\n-\t* testsuite/gcc.dg/graphite/block-1.c: Same.\n-\t* testsuite/gcc.dg/graphite/scop-17.c: Same.\n-\t* testsuite/gcc.dg/graphite/scop-18.c: Same.\n-\t* testsuite/gfortran.dg/graphite/block-1.f90: Same.\n-\t* testsuite/gfortran.dg/graphite/scop-1.f: Same.\n-\t* testsuite/gfortran.dg/graphite/block-2.f: Same.\n+\t* gcc.dg/graphite/scop-1.c: Same.\n+\t* gcc.dg/graphite/scop-2.c: Same.\n+\t* gcc.dg/graphite/scop-3.c: Same.\n+\t* gcc.dg/graphite/scop-4.c: Same.\n+\t* gcc.dg/graphite/scop-5.c: Same.\n+\t* gcc.dg/graphite/scop-6.c: Same.\n+\t* gcc.dg/graphite/scop-7.c: Same.\n+\t* gcc.dg/graphite/scop-8.c: Same.\n+\t* gcc.dg/graphite/scop-9.c: Same.\n+\t* gcc.dg/graphite/scop-10.c: Same.\n+\t* gcc.dg/graphite/scop-11.c: Same.\n+\t* gcc.dg/graphite/scop-12.c: Same.\n+\t* gcc.dg/graphite/scop-13.c: Same.\n+\t* gcc.dg/graphite/scop-matmult.c: Same.\n+\t* gcc.dg/graphite/scop-14.c: Same.\n+\t* gcc.dg/graphite/scop-15.c: Same.\n+\t* gcc.dg/graphite/block-0.c: Same.\n+\t* gcc.dg/graphite/scop-16.c: Same.\n+\t* gcc.dg/graphite/block-1.c: Same.\n+\t* gcc.dg/graphite/scop-17.c: Same.\n+\t* gcc.dg/graphite/scop-18.c: Same.\n+\t* gfortran.dg/graphite/block-1.f90: Same.\n+\t* gfortran.dg/graphite/scop-1.f: Same.\n+\t* gfortran.dg/graphite/block-2.f: Same.\n \n 2008-08-20  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -5085,9 +5121,9 @@\n \n \t* graphite.c (graphite_trans_scop_block): Or the result with\n \tthe result from graphite_trans_loop_block.\n-\t* testsuite/gcc.dg/graphite/block-1.c: New.\n-\t* testsuite/gfortran.dg/graphite/block-1.f90: New.\n-\t* testsuite/gfortran.dg/graphite/block-2.f: New.\n+\t* gcc.dg/graphite/block-1.c: New.\n+\t* gfortran.dg/graphite/block-1.f90: New.\n+\t* gfortran.dg/graphite/block-2.f: New.\n \n 2008-08-20  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -5101,11 +5137,11 @@\n \t* graphite.c (stmt_simple_memref_for_scop_p): Removed.\n \t(is_simple_operand): Call stmt_simple_memref_p.\n \n-\t* testsuite/gcc.dg/graphite/scop-matmult.c: Updated for not\n+\t* gcc.dg/graphite/scop-matmult.c: Updated for not\n \tusing pointer arithmetic, as this is optimized by PRE and\n \tmakes the code too difficult to analyze.\n \n-\t* testsuite/gcc.dg/graphite/scop-18.c: Same.\n+\t* gcc.dg/graphite/scop-18.c: Same.\n \n 2008-08-20  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -5219,28 +5255,28 @@\n \n \t* gcc/graphite.c (limit_scops): New.\n \t(graphite_transform_loops): Add limit SCoPs.\n-\t* gcc/testsuite/gcc.dg/graphite/scop-0.c: Update number of SCoPs.\n-\t* gcc/testsuite/gcc.dg/graphite/scop-1.c: Update number of SCoPs.\n-\t* gcc/testsuite/gcc.dg/graphite/scop-10.c: Update number of SCoPs.\n-\t* gcc/testsuite/gcc.dg/graphite/scop-11.c: Update number of SCoPs.\n-\t* gcc/testsuite/gcc.dg/graphite/scop-12.c: Update number of SCoPs.\n-\t* gcc/testsuite/gcc.dg/graphite/scop-13.c: Update number of SCoPs.\n-\t* gcc/testsuite/gcc.dg/graphite/scop-14.c: Update number of SCoPs.\n-\t* gcc/testsuite/gcc.dg/graphite/scop-15.c: Update number of SCoPs.\n-\t* gcc/testsuite/gcc.dg/graphite/scop-16.c: Update number of SCoPs.\n+\t* gcc.dg/graphite/scop-0.c: Update number of SCoPs.\n+\t* gcc.dg/graphite/scop-1.c: Update number of SCoPs.\n+\t* gcc.dg/graphite/scop-10.c: Update number of SCoPs.\n+\t* gcc.dg/graphite/scop-11.c: Update number of SCoPs.\n+\t* gcc.dg/graphite/scop-12.c: Update number of SCoPs.\n+\t* gcc.dg/graphite/scop-13.c: Update number of SCoPs.\n+\t* gcc.dg/graphite/scop-14.c: Update number of SCoPs.\n+\t* gcc.dg/graphite/scop-15.c: Update number of SCoPs.\n+\t* gcc.dg/graphite/scop-16.c: Update number of SCoPs.\n \tChange loop numbers.\n-\t* gcc/testsuite/gcc.dg/graphite/scop-17.c: Update number of SCoPs.\n+\t* gcc.dg/graphite/scop-17.c: Update number of SCoPs.\n \tChange loop numbers.\n-\t* gcc/testsuite/gcc.dg/graphite/scop-18.c: Update number of SCoPs.\n-\t* gcc/testsuite/gcc.dg/graphite/scop-2.c: Update number of SCoPs.\n-\t* gcc/testsuite/gcc.dg/graphite/scop-3.c: Update number of SCoPs.\n-\t* gcc/testsuite/gcc.dg/graphite/scop-4.c: Update number of SCoPs.\n-\t* gcc/testsuite/gcc.dg/graphite/scop-5.c: Update number of SCoPs.\n-\t* gcc/testsuite/gcc.dg/graphite/scop-6.c: Update number of SCoPs.\n-\t* gcc/testsuite/gcc.dg/graphite/scop-7.c: Update number of SCoPs.\n-\t* gcc/testsuite/gcc.dg/graphite/scop-8.c: Update number of SCoPs.\n-\t* gcc/testsuite/gcc.dg/graphite/scop-9.c: Update number of SCoPs.\n-\t* gcc/testsuite/gcc.dg/graphite/scop-matmult.c: Update number of SCoPs.\n+\t* gcc.dg/graphite/scop-18.c: Update number of SCoPs.\n+\t* gcc.dg/graphite/scop-2.c: Update number of SCoPs.\n+\t* gcc.dg/graphite/scop-3.c: Update number of SCoPs.\n+\t* gcc.dg/graphite/scop-4.c: Update number of SCoPs.\n+\t* gcc.dg/graphite/scop-5.c: Update number of SCoPs.\n+\t* gcc.dg/graphite/scop-6.c: Update number of SCoPs.\n+\t* gcc.dg/graphite/scop-7.c: Update number of SCoPs.\n+\t* gcc.dg/graphite/scop-8.c: Update number of SCoPs.\n+\t* gcc.dg/graphite/scop-9.c: Update number of SCoPs.\n+\t* gcc.dg/graphite/scop-matmult.c: Update number of SCoPs.\n \n 2008-08-11  Tobias Grosser  <grosser@fim.uni-passau.de>\n \n@@ -5260,8 +5296,8 @@\n \n 2008-08-07  Tobias Grosser  <grosser@fim.uni-passau.de>\n \n-\t* testsuite/gcc.dg/graphite/scop-16.c: Fix for 32bit.\n-\t* testsuite/gcc.dg/graphite/scop-17.c: Fix for 32bit.\n+\t* gcc.dg/graphite/scop-16.c: Fix for 32bit.\n+\t* gcc.dg/graphite/scop-17.c: Fix for 32bit.\n \n 2008-08-04  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -5287,9 +5323,9 @@\n \t* tree-ssa-loop.c (graphite_transforms): ... here.\n \tWhen not configured with CLooG, print to dump_file that\n \tGraphite transforms were not performed.\n-\t* testsuite/gcc.dg/graphite/graphite.exp (scan-graphite-dump-times):\n+\t* gcc.dg/graphite/graphite.exp (scan-graphite-dump-times):\n \tNew.\n-\t* testsuite/gcc.dg/graphite/*.c: Updated all testcases to use\n+\t* gcc.dg/graphite/*.c: Updated all testcases to use\n \tscan-graphite-dump-times.\n \n 2008-08-03  Sebastian Pop  <sebastian.pop@amd.com>\n@@ -5399,7 +5435,7 @@\n \n \tRemove fallouts from \"Reverted the Condate changes\".\n \t* tree.h: Remove unused decl.\n-\t* testsuite/gcc.dg/tree-checker: Same.\n+\t* gcc.dg/tree-checker: Same.\n \t* timevar.def: Remove counter.\n \n 2008-07-24  Sebastian Pop  <sebastian.pop@amd.com>\n@@ -5428,11 +5464,11 @@\n \toptimizations.\n \t* doc/invoke.texi: Remove -fgraphite and add -floop-block,\n \t-floop-strip-mine and -floop-interchange.\n-\t* testsuite/gcc.dg/graphite/block-0.c: Add -floop-block and remove\n+\t* gcc.dg/graphite/block-0.c: Add -floop-block and remove\n \t-fgraphite.\n-\t* testsuite/gcc.dg/graphite/scop-16.c: Ditto.\n-\t* testsuite/gcc.dg/graphite/scop-17.c: Ditto.\n-\t* testsuite/gcc.dg/graphite/scop-18.c: Ditto.\n+\t* gcc.dg/graphite/scop-16.c: Ditto.\n+\t* gcc.dg/graphite/scop-17.c: Ditto.\n+\t* gcc.dg/graphite/scop-18.c: Ditto.\n \n 2008-07-23  Jan Sjodin  <jan.sjodin@amd.com>\n \t    Sebastian Pop  <sebastian.pop@amd.com>\n@@ -5499,17 +5535,17 @@\n \trename_variables_in_bb): Declare.\n \t* tree-cfg.c (remove_bb): Extern.\n \n-\t* testsuite/gcc.dg/graphite/block-0.c: New.\n+\t* gcc.dg/graphite/block-0.c: New.\n \n 2008-07-21  Dwarakanath Rajagopal  <dwarak.rajagopal@amd.com>\n \t    Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite.c (strip_mine_profitable_p): New.\n \t(graphite_trans_bb_block): Disable strip mining if not profitable.\n \n-\t* testsuite/gcc.dg/graphite/scop-18.c: New.\n-\t* testsuite/gcc.dg/graphite/scop-17.c: Fixed.\n-\t* testsuite/gcc.dg/graphite/scop-16.c: Fixed.\n+\t* gcc.dg/graphite/scop-18.c: New.\n+\t* gcc.dg/graphite/scop-17.c: Fixed.\n+\t* gcc.dg/graphite/scop-16.c: Fixed.\n \n 2008-07-17  Harsha Jagasia  <harsha.jagasia@amd.com>\n \t    Jan Sjodin  <jan.sjodin@amd.com>\n@@ -5524,8 +5560,8 @@\n \n \t* tree-loop-linear.c (perfect_loop_nest_depth): Remove static.\n \t* tree-flow.h (perfect_loop_nest_depth): Declare as extern.\n-\t* testsuite/gcc.dg/graphite/scop-16.c: New.\n-\t* testsuite/gcc.dg/graphite/scop-17.c: New.\n+\t* gcc.dg/graphite/scop-16.c: New.\n+\t* gcc.dg/graphite/scop-17.c: New.\n \n 2008-07-11  Tobias Grosser  <grosser@fim.uni-passau.de>\n \n@@ -5540,28 +5576,28 @@\n \t(build_scops_1): Cleanup, bugfixes.\n \t(build_scops): Cleanup.\n \n-\t* testsuite/gcc.dg/graphite/scop-matmult.c: Remove duplicated code.\n-\t* testsuite/gcc.dg/graphite/scop-15.c: Add SCoP numbers.\n+\t* gcc.dg/graphite/scop-matmult.c: Remove duplicated code.\n+\t* gcc.dg/graphite/scop-15.c: Add SCoP numbers.\n \n 2008-07-10  Harsha Jagasia  <harsha.jagasia@amd.com>\n \n-\t* testsuite/gfortran.dg/graphite/scop-1.f: Update to reduced test case.\n+\t* gfortran.dg/graphite/scop-1.f: Update to reduced test case.\n \n-\t* testsuite/gfortran.dg/graphite/graphite.exp: Use\n+\t* gfortran.dg/graphite/graphite.exp: Use\n \tDEFAULT_GRAPHITE_FLAGS.\n \n-\t* testsuite/gcc.dg/graphite/scop-15.c: Update to reduced test case.\n+\t* gcc.dg/graphite/scop-15.c: Update to reduced test case.\n \n 2008-07-10  Harsha Jagasia  <harsha.jagasia@amd.com>\n \n \t* graphite.c (scan_tree_for_params): Do not assert any more if\n \tMULT_EXPR parameter is negative.\n \n-\t* testsuite/gfortran.dg/graphite/scop-1.f: New.\n+\t* gfortran.dg/graphite/scop-1.f: New.\n \n-\t* testsuite/gfortran.dg/graphite/graphite.exp: New.\n+\t* gfortran.dg/graphite/graphite.exp: New.\n \n-\t* testsuite/gcc.dg/graphite/scop-15.c: New.\n+\t* gcc.dg/graphite/scop-15.c: New.\n \n 2008-07-10  Harsha Jagasia  <harsha.jagasia@amd.com>\n \n@@ -5582,7 +5618,7 @@\n \t(graphite_apply_transformations): Rename from\n \tgraphite_transformations.\n \n-\t* testsuite/gcc.dg/graphite/scop-matmult.c: New.\n+\t* gcc.dg/graphite/scop-matmult.c: New.\n \n 2008-07-10  Tobias Grosser  <grosser@fim.uni-passau.de>\n \n@@ -5771,7 +5807,7 @@\n \twith multiple exits and conditional handling in edge cases.\n \t(is_loop_exit): Fix memory leak. (Forgotten in last commit)\n \n-\t* testsuite/gcc.dg/graphite/scop-14.c: New.\n+\t* gcc.dg/graphite/scop-14.c: New.\n \n 2008-06-06  Tobias Grosser  <grosser@fim.uni-passau.de>\n \t    Adrien Eliche  <aeliche@isty.uvsq.fr>\n@@ -5927,9 +5963,9 @@\n \t(is_bb_addable): Rework condition handling, now support for case\n \tcase statements and loops with multiple exits.\n \n-\t* testsuite/gcc.dg/graphite/scop-11.c: New.\n-\t* testsuite/gcc.dg/graphite/scop-12.c: New.\n-\t* testsuite/gcc.dg/graphite/scop-13.c: New.\n+\t* gcc.dg/graphite/scop-11.c: New.\n+\t* gcc.dg/graphite/scop-12.c: New.\n+\t* gcc.dg/graphite/scop-13.c: New.\n \n 2008-05-29  Tobias Grosser  <grosser@fim.uni-passau.de>\n \n@@ -5996,19 +6032,19 @@\n \n 2008-05-06  Tobias Grosser  <grosser@fim.uni-passau.de>\n \n-\t* testsuite/gcc.dg/graphite/scop-1.c: Update.\n-\t* testsuite/gcc.dg/graphite/scop-2.c: Update.\n-\t* testsuite/gcc.dg/graphite/scop-4.c: Update.\n-\t* testsuite/gcc.dg/graphite/scop-5.c: Add.\n-\t* testsuite/gcc.dg/graphite/scop-6.c: Add.\n+\t* gcc.dg/graphite/scop-1.c: Update.\n+\t* gcc.dg/graphite/scop-2.c: Update.\n+\t* gcc.dg/graphite/scop-4.c: Update.\n+\t* gcc.dg/graphite/scop-5.c: Add.\n+\t* gcc.dg/graphite/scop-6.c: Add.\n \n 2008-05-06  Sebastian Pop  <sebastian.pop@amd.com>\n \n-\t* testsuite/gcc.dg/graphite/scop-0.c: Add.\n-\t* testsuite/gcc.dg/graphite/scop-7.c: Add.\n-\t* testsuite/gcc.dg/graphite/scop-8.c: Add.\n-\t* testsuite/gcc.dg/graphite/scop-9.c: Add.\n-\t* testsuite/gcc.dg/graphite/scop-10.c: Add.\n+\t* gcc.dg/graphite/scop-0.c: Add.\n+\t* gcc.dg/graphite/scop-7.c: Add.\n+\t* gcc.dg/graphite/scop-8.c: Add.\n+\t* gcc.dg/graphite/scop-9.c: Add.\n+\t* gcc.dg/graphite/scop-10.c: Add.\n \n 2008-05-06  Tobias Grosser  <grosser@fim.uni-passau.de>\n \n@@ -6035,7 +6071,7 @@\n \tscop_end_loop): New.\n \t(build_scops): Do not use dfs_enumerate_from.\n \n-\t* testsuite/gcc.dg/graphite/scop-{1,2,4}.c: Updated.\n+\t* gcc.dg/graphite/scop-{1,2,4}.c: Updated.\n \n 2008-04-23  Sebastian Pop  <sebastian.pop@amd.com>\n \n@@ -6261,7 +6297,7 @@\n \t(SCOP_LOOPS): New.\n \t(scop_loop_index): Test that the given loop belongs to SCOP_LOOPS.\n \n-\t* testsuite/gcc.dg/graphite/scop-{1,...,7}.c: Updated.\n+\t* gcc.dg/graphite/scop-{1,...,7}.c: Updated.\n \n 2008-02-27  Antoniu Pop  <antoniu.pop@gmail.com>\n \t    Sebastian Pop  <sebastian.pop@amd.com>\n@@ -6377,7 +6413,7 @@\n \t* tree-loop-distribution.c: Fix apsi.f ICE.\n \t(create_bb_after_loop): New.\n \t(generate_loops_for_partition): Use it.\n-\t* testsuite/gfortran.dg/ldist-1.f90: New.\n+\t* gfortran.dg/ldist-1.f90: New.\n \n \t* tree-data-ref.c (dot_rdg): Use /tmp/rdg.dot for dotty format.\n \t* graphite.c (dot_scop): Use /tmp/scop.dot for dotty format.\n@@ -6619,12 +6655,12 @@\n 2007-04-13  Sebastian Pop  <sebastian.pop@inria.fr>\n \n \t* doc/invoke.texi (-ftree-check-verbose): Documented.\n-\t* testsuite/gcc.dg/tree-checker/tree-checks-1.c: New.\n-\t* testsuite/gcc.dg/tree-checker/tree-checks-2.c: New.\n-\t* testsuite/gcc.dg/tree-checker/tree-checks-3.c: New.\n-\t* testsuite/gcc.dg/tree-checker/tree-checks-4.c: New.\n-\t* testsuite/gcc.dg/tree-checker/tree-checks.exp: New.\n-\t* testsuite/gcc.dg/tree-checker/condates.crp: New.\n+\t* gcc.dg/tree-checker/tree-checks-1.c: New.\n+\t* gcc.dg/tree-checker/tree-checks-2.c: New.\n+\t* gcc.dg/tree-checker/tree-checks-3.c: New.\n+\t* gcc.dg/tree-checker/tree-checks-4.c: New.\n+\t* gcc.dg/tree-checker/tree-checks.exp: New.\n+\t* gcc.dg/tree-checker/condates.crp: New.\n \t* common.opt (ftree-checks-verbose): New.\n \t* tree-check.c (tree_check_warning): Move extra stderr output\n \tunder control of flag_tree_check_verbose.\n@@ -6824,9 +6860,9 @@\n \t* doc/invoke.texi (-fgraphite): Correct typo.\n \t* tree-scalar-evolution.c (number_of_iterations_for_all_loops): Update\n \tuse of print_loop_ir.\n-\t* testsuite/gcc.dg/graphite/scop-1.c: New.\n-\t* testsuite/gcc.dg/graphite/scop-2.c: New.\n-\t* testsuite/gcc.dg/graphite/graphite.exp: New.\n+\t* gcc.dg/graphite/scop-1.c: New.\n+\t* gcc.dg/graphite/scop-2.c: New.\n+\t* gcc.dg/graphite/graphite.exp: New.\n \t* graphite.c: Include domwalk.h.\n \t(print_scop): Print only the entry and exit blocks.\n \t(debug_scop): No longer static."}]}