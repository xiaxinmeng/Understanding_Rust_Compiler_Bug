{"sha": "944608029f851d39523a71949df3ed9148d9ab8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQ0NjA4MDI5Zjg1MWQzOTUyM2E3MTk0OWRmM2VkOTE0OGQ5YWI4Zg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-11-15T16:32:38Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-11-15T16:32:38Z"}, "message": "PR c++/78358 - tuple decomposition decltype\n\n\t* semantics.c (finish_decltype_type): Strip references for a tuple\n\tdecomposition.\n\t* cp-tree.h (DECL_DECOMPOSITION_P): False for non-variables.\n\nFrom-SVN: r242432", "tree": {"sha": "ebfcdd2df5f06eedf27dc62369acb9819a987cdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebfcdd2df5f06eedf27dc62369acb9819a987cdf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/944608029f851d39523a71949df3ed9148d9ab8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/944608029f851d39523a71949df3ed9148d9ab8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/944608029f851d39523a71949df3ed9148d9ab8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/944608029f851d39523a71949df3ed9148d9ab8f/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "435fd4073884990c845fffaf65dcea10475f3230", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/435fd4073884990c845fffaf65dcea10475f3230", "html_url": "https://github.com/Rust-GCC/gccrs/commit/435fd4073884990c845fffaf65dcea10475f3230"}], "stats": {"total": 52, "additions": 42, "deletions": 10}, "files": [{"sha": "8b5fc8117cf84bb57edd1b9a3090202a5d4f4097", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/944608029f851d39523a71949df3ed9148d9ab8f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/944608029f851d39523a71949df3ed9148d9ab8f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=944608029f851d39523a71949df3ed9148d9ab8f", "patch": "@@ -1,5 +1,10 @@\n 2016-11-15  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/78358\n+\t* semantics.c (finish_decltype_type): Strip references for a tuple\n+\tdecomposition.\n+\t* cp-tree.h (DECL_DECOMPOSITION_P): False for non-variables.\n+\n \t* decl2.c (decl_maybe_constant_var_p): References qualify.\n \t* constexpr.c (non_const_var_error): Handle references.\n \t* init.c (constant_value_1): Always check decl_constant_var_p."}, {"sha": "634efc9ba5c557e069da482da3688de53d3474dd", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/944608029f851d39523a71949df3ed9148d9ab8f/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/944608029f851d39523a71949df3ed9148d9ab8f/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=944608029f851d39523a71949df3ed9148d9ab8f", "patch": "@@ -3627,10 +3627,10 @@ more_aggr_init_expr_args_p (const aggr_init_expr_arg_iterator *iter)\n   (DECL_LANG_SPECIFIC (VAR_DECL_CHECK (NODE))->u.base.var_declared_inline_p \\\n    = true)\n \n-/* Nonzero if NODE is the artificial VAR_DECL for decomposition\n+/* Nonzero if NODE is an artificial VAR_DECL for a C++17 decomposition\n    declaration.  */\n #define DECL_DECOMPOSITION_P(NODE) \\\n-  (DECL_LANG_SPECIFIC (VAR_DECL_CHECK (NODE))\t\t\t\\\n+  (VAR_P (NODE) && DECL_LANG_SPECIFIC (NODE)\t\t\t\\\n    ? DECL_LANG_SPECIFIC (NODE)->u.base.decomposition_p\t\t\\\n    : false)\n #define SET_DECL_DECOMPOSITION_P(NODE) \\"}, {"sha": "dc5ad13f681cd31b20d9de1f21d714149978b459", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/944608029f851d39523a71949df3ed9148d9ab8f/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/944608029f851d39523a71949df3ed9148d9ab8f/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=944608029f851d39523a71949df3ed9148d9ab8f", "patch": "@@ -8873,14 +8873,6 @@ finish_decltype_type (tree expr, bool id_expression_or_member_access_p,\n       if (identifier_p (expr))\n         expr = lookup_name (expr);\n \n-      /* The decltype rules for decomposition are different from the rules for\n-\t member access; in particular, the decomposition decl gets\n-\t cv-qualifiers from the aggregate object, whereas decltype of a member\n-\t access expr ignores the object.  */\n-      if (VAR_P (expr) && DECL_DECOMPOSITION_P (expr)\n-\t  && DECL_HAS_VALUE_EXPR_P (expr))\n-\treturn unlowered_expr_type (DECL_VALUE_EXPR (expr));\n-\n       if (INDIRECT_REF_P (expr))\n         /* This can happen when the expression is, e.g., \"a.b\". Just\n            look at the underlying operand.  */\n@@ -8898,6 +8890,21 @@ finish_decltype_type (tree expr, bool id_expression_or_member_access_p,\n         /* See through BASELINK nodes to the underlying function.  */\n         expr = BASELINK_FUNCTIONS (expr);\n \n+      /* decltype of a decomposition name drops references in the tuple case\n+\t (unlike decltype of a normal variable) and keeps cv-qualifiers from\n+\t the containing object in the other cases (unlike decltype of a member\n+\t access expression).  */\n+      if (DECL_DECOMPOSITION_P (expr))\n+\t{\n+\t  if (DECL_HAS_VALUE_EXPR_P (expr))\n+\t    /* Expr is an array or struct subobject proxy, handle\n+\t       bit-fields properly.  */\n+\t    return unlowered_expr_type (expr);\n+\t  else\n+\t    /* Expr is a reference variable for the tuple case.  */\n+\t    return non_reference (TREE_TYPE (expr));\n+\t}\n+\n       switch (TREE_CODE (expr))\n         {\n         case FIELD_DECL:"}, {"sha": "a5b686abdf92ce84f828690ee6a7b74af08c6bda", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp12.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/944608029f851d39523a71949df3ed9148d9ab8f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/944608029f851d39523a71949df3ed9148d9ab8f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp12.C?ref=944608029f851d39523a71949df3ed9148d9ab8f", "patch": "@@ -0,0 +1,20 @@\n+// PR c++/78358\n+// { dg-do run }\n+// { dg-options -std=c++1z }\n+\n+#include <tuple>\n+\n+template <typename, typename> struct same_type;\n+template <typename T> struct same_type<T, T> {};\n+\n+int main() {\n+  std::tuple tuple = { 1, 'a', 2.3, true };\n+  auto[i, c, d, b] = tuple;\n+  same_type<std::tuple_element<0, decltype(tuple)>::type, decltype(i)>{};\n+  same_type<decltype(i), int>{};\n+  same_type<decltype(c), char>{};\n+  same_type<decltype(d), double>{};\n+  same_type<decltype(b), bool>{};\n+  if (i != 1 || c != 'a' || d != 2.3 || b != true)\n+    __builtin_abort ();\n+}"}]}