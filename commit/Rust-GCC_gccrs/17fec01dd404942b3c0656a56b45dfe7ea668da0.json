{"sha": "17fec01dd404942b3c0656a56b45dfe7ea668da0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdmZWMwMWRkNDA0OTQyYjNjMDY1NmE1NmI0NWRmZTdlYTY2OGRhMA==", "commit": {"author": {"name": "Marcus Shawcroft", "email": "marcus.shawcroft@arm.com", "date": "2010-08-07T09:31:14Z"}, "committer": {"name": "Ramana Radhakrishnan", "email": "ramana@gcc.gnu.org", "date": "2010-08-07T09:31:14Z"}, "message": "By ramana for Marcus Shawcroft.\n\n\n2010-08-07  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n\n\t* config/arm/linux-atomic.c (SUBWORD_VAL_CAS): Instantiate with\n\t'unsigned short' and 'unsigned char' instead of 'short' and 'char'.\n\t(SUBWORD_BOOL_CAS): Likewise.\n\t(SUBWORD_SYNC_OP): Likewise.\n\t(SUBWORD_TEST_AND_SET): Likewise.\n\t(FETCH_AND_OP_WORD): Parenthesise INF_OP\n\t(SUBWORD_SYNC_OP): Likewise.\n\t(OP_AND_FETCH_WORD): Likewise.\n\n        * lib/target-supports.exp (check_effective_target_sync_int_long):\n        Add arm*-*-linux-gnueabi.\n        (check_effective_target_sync_char_short): Likewise.\n\nFrom-SVN: r162977", "tree": {"sha": "b220dd4e6b4975e93a644f3f4504df9fbe4bb2a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b220dd4e6b4975e93a644f3f4504df9fbe4bb2a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17fec01dd404942b3c0656a56b45dfe7ea668da0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17fec01dd404942b3c0656a56b45dfe7ea668da0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17fec01dd404942b3c0656a56b45dfe7ea668da0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17fec01dd404942b3c0656a56b45dfe7ea668da0/comments", "author": {"login": "mshawcroft", "id": 6357566, "node_id": "MDQ6VXNlcjYzNTc1NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6357566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mshawcroft", "html_url": "https://github.com/mshawcroft", "followers_url": "https://api.github.com/users/mshawcroft/followers", "following_url": "https://api.github.com/users/mshawcroft/following{/other_user}", "gists_url": "https://api.github.com/users/mshawcroft/gists{/gist_id}", "starred_url": "https://api.github.com/users/mshawcroft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mshawcroft/subscriptions", "organizations_url": "https://api.github.com/users/mshawcroft/orgs", "repos_url": "https://api.github.com/users/mshawcroft/repos", "events_url": "https://api.github.com/users/mshawcroft/events{/privacy}", "received_events_url": "https://api.github.com/users/mshawcroft/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b0c131113e5d1ca32d7480833e65261daf9470e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0c131113e5d1ca32d7480833e65261daf9470e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0c131113e5d1ca32d7480833e65261daf9470e4"}], "stats": {"total": 89, "additions": 54, "deletions": 35}, "files": [{"sha": "53f24f1b8c43008150566492467d20bb1b98e0c6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17fec01dd404942b3c0656a56b45dfe7ea668da0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17fec01dd404942b3c0656a56b45dfe7ea668da0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=17fec01dd404942b3c0656a56b45dfe7ea668da0", "patch": "@@ -1,3 +1,14 @@\n+2010-08-07  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n+\n+\t* config/arm/linux-atomic.c (SUBWORD_VAL_CAS): Instantiate with\n+\t'unsigned short' and 'unsigned char' instead of 'short' and 'char'.\n+\t(SUBWORD_BOOL_CAS): Likewise.\n+\t(SUBWORD_SYNC_OP): Likewise.\n+\t(SUBWORD_TEST_AND_SET): Likewise.\n+\t(FETCH_AND_OP_WORD): Parenthesise INF_OP\n+\t(SUBWORD_SYNC_OP): Likewise.\n+\t(OP_AND_FETCH_WORD): Likewise.\n+\n 2010-08-07  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n         * config/arm/cortex-a9.md: Rewrite VFP Pipeline description."}, {"sha": "685f16b80e9c8f647ffd48f470653275273770d7", "filename": "gcc/config/arm/linux-atomic.c", "status": "modified", "additions": 35, "deletions": 35, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17fec01dd404942b3c0656a56b45dfe7ea668da0/gcc%2Fconfig%2Farm%2Flinux-atomic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17fec01dd404942b3c0656a56b45dfe7ea668da0/gcc%2Fconfig%2Farm%2Flinux-atomic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flinux-atomic.c?ref=17fec01dd404942b3c0656a56b45dfe7ea668da0", "patch": "@@ -56,7 +56,7 @@ typedef void (__kernel_dmb_t) (void);\n \t\t\t\t\t\t\t\t\t\\\n     do {\t\t\t\t\t\t\t\t\\\n       tmp = *ptr;\t\t\t\t\t\t\t\\\n-      failure = __kernel_cmpxchg (tmp, PFX_OP tmp INF_OP val, ptr);\t\\\n+      failure = __kernel_cmpxchg (tmp, PFX_OP (tmp INF_OP val), ptr);\t\\\n     } while (failure != 0);\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n     return tmp;\t\t\t\t\t\t\t\t\\\n@@ -88,28 +88,28 @@ FETCH_AND_OP_WORD (nand, ~, &)\n \t\t\t\t\t\t\t\t\t\\\n     do {\t\t\t\t\t\t\t\t\\\n       oldval = *wordptr;\t\t\t\t\t\t\\\n-      newval = ((PFX_OP ((oldval & mask) >> shift)\t\t\t\\\n-                 INF_OP (unsigned int) val) << shift) & mask;\t\t\\\n+      newval = ((PFX_OP (((oldval & mask) >> shift)\t\t\t\\\n+\t\t\t INF_OP (unsigned int) val)) << shift) & mask;\t\\\n       newval |= oldval & ~mask;\t\t\t\t\t\t\\\n       failure = __kernel_cmpxchg (oldval, newval, wordptr);\t\t\\\n     } while (failure != 0);\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n     return (RETURN & mask) >> shift;\t\t\t\t\t\\\n   }\n \n-SUBWORD_SYNC_OP (add,   , +, short, 2, oldval)\n-SUBWORD_SYNC_OP (sub,   , -, short, 2, oldval)\n-SUBWORD_SYNC_OP (or,    , |, short, 2, oldval)\n-SUBWORD_SYNC_OP (and,   , &, short, 2, oldval)\n-SUBWORD_SYNC_OP (xor,   , ^, short, 2, oldval)\n-SUBWORD_SYNC_OP (nand, ~, &, short, 2, oldval)\n+SUBWORD_SYNC_OP (add,   , +, unsigned short, 2, oldval)\n+SUBWORD_SYNC_OP (sub,   , -, unsigned short, 2, oldval)\n+SUBWORD_SYNC_OP (or,    , |, unsigned short, 2, oldval)\n+SUBWORD_SYNC_OP (and,   , &, unsigned short, 2, oldval)\n+SUBWORD_SYNC_OP (xor,   , ^, unsigned short, 2, oldval)\n+SUBWORD_SYNC_OP (nand, ~, &, unsigned short, 2, oldval)\n \n-SUBWORD_SYNC_OP (add,   , +, char, 1, oldval)\n-SUBWORD_SYNC_OP (sub,   , -, char, 1, oldval)\n-SUBWORD_SYNC_OP (or,    , |, char, 1, oldval)\n-SUBWORD_SYNC_OP (and,   , &, char, 1, oldval)\n-SUBWORD_SYNC_OP (xor,   , ^, char, 1, oldval)\n-SUBWORD_SYNC_OP (nand, ~, &, char, 1, oldval)\n+SUBWORD_SYNC_OP (add,   , +, unsigned char, 1, oldval)\n+SUBWORD_SYNC_OP (sub,   , -, unsigned char, 1, oldval)\n+SUBWORD_SYNC_OP (or,    , |, unsigned char, 1, oldval)\n+SUBWORD_SYNC_OP (and,   , &, unsigned char, 1, oldval)\n+SUBWORD_SYNC_OP (xor,   , ^, unsigned char, 1, oldval)\n+SUBWORD_SYNC_OP (nand, ~, &, unsigned char, 1, oldval)\n \n #define OP_AND_FETCH_WORD(OP, PFX_OP, INF_OP)\t\t\t\t\\\n   int HIDDEN\t\t\t\t\t\t\t\t\\\n@@ -119,10 +119,10 @@ SUBWORD_SYNC_OP (nand, ~, &, char, 1, oldval)\n \t\t\t\t\t\t\t\t\t\\\n     do {\t\t\t\t\t\t\t\t\\\n       tmp = *ptr;\t\t\t\t\t\t\t\\\n-      failure = __kernel_cmpxchg (tmp, PFX_OP tmp INF_OP val, ptr);\t\\\n+      failure = __kernel_cmpxchg (tmp, PFX_OP (tmp INF_OP val), ptr);\t\\\n     } while (failure != 0);\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-    return PFX_OP tmp INF_OP val;\t\t\t\t\t\\\n+    return PFX_OP (tmp INF_OP val);\t\t\t\t\t\\\n   }\n \n OP_AND_FETCH_WORD (add,   , +)\n@@ -132,19 +132,19 @@ OP_AND_FETCH_WORD (and,   , &)\n OP_AND_FETCH_WORD (xor,   , ^)\n OP_AND_FETCH_WORD (nand, ~, &)\n \n-SUBWORD_SYNC_OP (add,   , +, short, 2, newval)\n-SUBWORD_SYNC_OP (sub,   , -, short, 2, newval)\n-SUBWORD_SYNC_OP (or,    , |, short, 2, newval)\n-SUBWORD_SYNC_OP (and,   , &, short, 2, newval)\n-SUBWORD_SYNC_OP (xor,   , ^, short, 2, newval)\n-SUBWORD_SYNC_OP (nand, ~, &, short, 2, newval)\n+SUBWORD_SYNC_OP (add,   , +, unsigned short, 2, newval)\n+SUBWORD_SYNC_OP (sub,   , -, unsigned short, 2, newval)\n+SUBWORD_SYNC_OP (or,    , |, unsigned short, 2, newval)\n+SUBWORD_SYNC_OP (and,   , &, unsigned short, 2, newval)\n+SUBWORD_SYNC_OP (xor,   , ^, unsigned short, 2, newval)\n+SUBWORD_SYNC_OP (nand, ~, &, unsigned short, 2, newval)\n \n-SUBWORD_SYNC_OP (add,   , +, char, 1, newval)\n-SUBWORD_SYNC_OP (sub,   , -, char, 1, newval)\n-SUBWORD_SYNC_OP (or,    , |, char, 1, newval)\n-SUBWORD_SYNC_OP (and,   , &, char, 1, newval)\n-SUBWORD_SYNC_OP (xor,   , ^, char, 1, newval)\n-SUBWORD_SYNC_OP (nand, ~, &, char, 1, newval)\n+SUBWORD_SYNC_OP (add,   , +, unsigned char, 1, newval)\n+SUBWORD_SYNC_OP (sub,   , -, unsigned char, 1, newval)\n+SUBWORD_SYNC_OP (or,    , |, unsigned char, 1, newval)\n+SUBWORD_SYNC_OP (and,   , &, unsigned char, 1, newval)\n+SUBWORD_SYNC_OP (xor,   , ^, unsigned char, 1, newval)\n+SUBWORD_SYNC_OP (nand, ~, &, unsigned char, 1, newval)\n \n int HIDDEN\n __sync_val_compare_and_swap_4 (int *ptr, int oldval, int newval)\n@@ -194,8 +194,8 @@ __sync_val_compare_and_swap_4 (int *ptr, int oldval, int newval)\n       }\t\t\t\t\t\t\t\t\t\\\n   }\n \n-SUBWORD_VAL_CAS (short, 2)\n-SUBWORD_VAL_CAS (char,  1)\n+SUBWORD_VAL_CAS (unsigned short, 2)\n+SUBWORD_VAL_CAS (unsigned char,  1)\n \n typedef unsigned char bool;\n \n@@ -216,8 +216,8 @@ __sync_bool_compare_and_swap_4 (int *ptr, int oldval, int newval)\n     return (oldval == actual_oldval);\t\t\t\t\t\\\n   }\n \n-SUBWORD_BOOL_CAS (short, 2)\n-SUBWORD_BOOL_CAS (char,  1)\n+SUBWORD_BOOL_CAS (unsigned short, 2)\n+SUBWORD_BOOL_CAS (unsigned char,  1)\n \n void HIDDEN\n __sync_synchronize (void)\n@@ -259,8 +259,8 @@ __sync_lock_test_and_set_4 (int *ptr, int val)\n     return (oldval & mask) >> shift;\t\t\t\t\t\\\n   }\n \n-SUBWORD_TEST_AND_SET (short, 2)\n-SUBWORD_TEST_AND_SET (char,  1)\n+SUBWORD_TEST_AND_SET (unsigned short, 2)\n+SUBWORD_TEST_AND_SET (unsigned char,  1)\n \n #define SYNC_LOCK_RELEASE(TYPE, WIDTH)\t\t\t\t\t\\\n   void HIDDEN\t\t\t\t\t\t\t\t\\"}, {"sha": "6d58091948f9fbf464b27521b770a2a3623303df", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17fec01dd404942b3c0656a56b45dfe7ea668da0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17fec01dd404942b3c0656a56b45dfe7ea668da0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=17fec01dd404942b3c0656a56b45dfe7ea668da0", "patch": "@@ -1,3 +1,9 @@\n+2010-08-07  Marcus Shawcroft <marcus.shawcroft@arm.com>\n+\n+        * lib/target-supports.exp: (check_effective_target_sync_int_long):\n+        Add arm*-*-linux-gnueabi.\n+        (check_effective_target_sync_char_short): Likewise.\n+\n 2010-08-06  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/45159"}, {"sha": "0db6b446f649035a950763f9c8a40625f485648a", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17fec01dd404942b3c0656a56b45dfe7ea668da0/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17fec01dd404942b3c0656a56b45dfe7ea668da0/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=17fec01dd404942b3c0656a56b45dfe7ea668da0", "patch": "@@ -3000,6 +3000,7 @@ proc check_effective_target_sync_int_long { } {\n \t     || [istarget i?86-*-*]\n \t     || [istarget x86_64-*-*]\n \t     || [istarget alpha*-*-*] \n+\t     || [istarget arm*-*-linux-gnueabi] \n \t     || [istarget bfin*-*linux*]\n \t     || [istarget s390*-*-*] \n \t     || [istarget powerpc*-*-*]\n@@ -3029,6 +3030,7 @@ proc check_effective_target_sync_char_short { } {\n \t     || [istarget i?86-*-*]\n \t     || [istarget x86_64-*-*]\n \t     || [istarget alpha*-*-*] \n+\t     || [istarget arm*-*-linux-gnueabi] \n \t     || [istarget s390*-*-*] \n \t     || [istarget powerpc*-*-*]\n \t     || [istarget sparc64-*-*]"}]}