{"sha": "fd7e50840c8056f2065826849b7ff9b0ec90f60b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQ3ZTUwODQwYzgwNTZmMjA2NTgyNjg0OWI3ZmY5YjBlYzkwZjYwYg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-10-14T09:24:36Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-10-14T09:24:36Z"}, "message": "re PR other/58712 (issues found by --enable-checking=valgrind)\n\n2013-10-14  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/58712\n\tPR middle-end/55358\n\t* gimple.c (iterative_hash_canonical_type): Make sure to\n\trecord the hash into the correct hashtable slot.\n\nFrom-SVN: r203517", "tree": {"sha": "51850479810f98b2410d92fad641c512a3c70a7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51850479810f98b2410d92fad641c512a3c70a7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd7e50840c8056f2065826849b7ff9b0ec90f60b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd7e50840c8056f2065826849b7ff9b0ec90f60b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd7e50840c8056f2065826849b7ff9b0ec90f60b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd7e50840c8056f2065826849b7ff9b0ec90f60b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d19d091ca06d75016be9e3c5af8488bca8c0d546", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d19d091ca06d75016be9e3c5af8488bca8c0d546", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d19d091ca06d75016be9e3c5af8488bca8c0d546"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "821cec2066bf2fc26430c5268fabf6571e4b07ff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd7e50840c8056f2065826849b7ff9b0ec90f60b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd7e50840c8056f2065826849b7ff9b0ec90f60b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fd7e50840c8056f2065826849b7ff9b0ec90f60b", "patch": "@@ -1,3 +1,10 @@\n+2013-10-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/58712\n+\tPR middle-end/55358\n+\t* gimple.c (iterative_hash_canonical_type): Make sure to\n+\trecord the hash into the correct hashtable slot.\n+\n 2013-10-13  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR rtl-optimization/58662"}, {"sha": "e0cc4ef92d1a18ebbeeae02d046c2e81a3db8795", "filename": "gcc/gimple.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd7e50840c8056f2065826849b7ff9b0ec90f60b/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd7e50840c8056f2065826849b7ff9b0ec90f60b/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=fd7e50840c8056f2065826849b7ff9b0ec90f60b", "patch": "@@ -3112,8 +3112,7 @@ iterative_hash_canonical_type (tree type, hashval_t val)\n   struct tree_int_map *mp, m;\n \n   m.base.from = type;\n-  if ((slot = htab_find_slot (canonical_type_hash_cache, &m, INSERT))\n-      && *slot)\n+  if ((slot = htab_find_slot (canonical_type_hash_cache, &m, NO_INSERT)))\n     return iterative_hash_hashval_t (((struct tree_int_map *) *slot)->to, val);\n \n   /* Combine a few common features of types so that types are grouped into\n@@ -3217,6 +3216,10 @@ iterative_hash_canonical_type (tree type, hashval_t val)\n   mp = ggc_alloc_cleared_tree_int_map ();\n   mp->base.from = type;\n   mp->to = v;\n+  /* As we recurse the hashtable may expand between looking up the\n+     cached value (and not finding one) and here, so we have to\n+     re-lookup the slot.  */\n+  slot = htab_find_slot (canonical_type_hash_cache, &m, INSERT);\n   *slot = (void *) mp;\n \n   return iterative_hash_hashval_t (v, val);"}]}