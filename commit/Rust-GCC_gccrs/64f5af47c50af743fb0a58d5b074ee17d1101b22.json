{"sha": "64f5af47c50af743fb0a58d5b074ee17d1101b22", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRmNWFmNDdjNTBhZjc0M2ZiMGE1OGQ1YjA3NGVlMTdkMTEwMWIyMg==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2012-05-29T01:52:16Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2012-05-29T01:52:16Z"}, "message": "cris.h (TARGET_HAS_BREAK, [...]): New macros.\n\n\t* config/cris/cris.h (TARGET_HAS_BREAK, TARGET_TRAP_USING_BREAK8):\n\tNew macros.\n\t* config/cris/cris.md (\"trap\"): Define, enabled for\n\tTARGET_TRAP_USING_BREAK8.\n\t* config/cris/cris.opt (mtrap-using-break8): New option.\n\nFrom-SVN: r187942", "tree": {"sha": "6ce9e351e597449ed071c69bd35e2445dd0f9f3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ce9e351e597449ed071c69bd35e2445dd0f9f3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64f5af47c50af743fb0a58d5b074ee17d1101b22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64f5af47c50af743fb0a58d5b074ee17d1101b22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64f5af47c50af743fb0a58d5b074ee17d1101b22", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64f5af47c50af743fb0a58d5b074ee17d1101b22/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3d383eb787203c8a40865c8b18533da419f239f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d383eb787203c8a40865c8b18533da419f239f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d383eb787203c8a40865c8b18533da419f239f4"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "513405ff202a60808f850bbc21df6b876f7bb44e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64f5af47c50af743fb0a58d5b074ee17d1101b22/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64f5af47c50af743fb0a58d5b074ee17d1101b22/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=64f5af47c50af743fb0a58d5b074ee17d1101b22", "patch": "@@ -1,3 +1,11 @@\n+2012-05-29  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* config/cris/cris.h (TARGET_HAS_BREAK, TARGET_TRAP_USING_BREAK8):\n+\tNew macros.\n+\t* config/cris/cris.md (\"trap\"): Define, enabled for\n+\tTARGET_TRAP_USING_BREAK8.\n+\t* config/cris/cris.opt (mtrap-using-break8): New option.\n+\n 2012-05-28  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/25137"}, {"sha": "edb5f97e18b2d290fc4d97bacaa510202d40c691", "filename": "gcc/config/cris/cris.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64f5af47c50af743fb0a58d5b074ee17d1101b22/gcc%2Fconfig%2Fcris%2Fcris.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64f5af47c50af743fb0a58d5b074ee17d1101b22/gcc%2Fconfig%2Fcris%2Fcris.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.h?ref=64f5af47c50af743fb0a58d5b074ee17d1101b22", "patch": "@@ -302,9 +302,14 @@ extern int cris_cpu_version;\n \n #define TARGET_HAS_MUL_INSNS (cris_cpu_version >= CRIS_CPU_NG)\n #define TARGET_HAS_LZ (cris_cpu_version >= CRIS_CPU_ETRAX4)\n+#define TARGET_HAS_BREAK (cris_cpu_version >= CRIS_CPU_ETRAX4)\n #define TARGET_HAS_SWAP (cris_cpu_version >= CRIS_CPU_SVINTO)\n #define TARGET_V32 (cris_cpu_version >= CRIS_CPU_V32)\n \n+/* The \"break\" instruction was introduced with ETRAX 4.  */\n+#define TARGET_TRAP_USING_BREAK8 \\\n+ (cris_trap_using_break8 == 2 ? TARGET_HAS_BREAK : cris_trap_using_break8)\n+\n /* Node: Storage Layout */\n \n #define BITS_BIG_ENDIAN 0"}, {"sha": "49f36e350da294ece575295b3c1280ba31526b1e", "filename": "gcc/config/cris/cris.md", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64f5af47c50af743fb0a58d5b074ee17d1101b22/gcc%2Fconfig%2Fcris%2Fcris.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64f5af47c50af743fb0a58d5b074ee17d1101b22/gcc%2Fconfig%2Fcris%2Fcris.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.md?ref=64f5af47c50af743fb0a58d5b074ee17d1101b22", "patch": "@@ -3825,6 +3825,14 @@\n   \"\"\n   \"nop\"\n   [(set_attr \"cc\" \"none\")])\n+\n+;; Same as the gdb trap breakpoint, will cause a SIGTRAP for\n+;; cris-linux* and crisv32-linux*, as intended.  Will work in\n+;; freestanding environments with sufficient framework.\n+(define_insn \"trap\"\n+  [(trap_if (const_int 1) (const_int 8))]\n+  \"TARGET_TRAP_USING_BREAK8\"\n+  \"break 8\")\n \f\n ;; We need to stop accesses to the stack after the memory is\n ;; deallocated.  Unfortunately, reorg doesn't look at naked clobbers,"}, {"sha": "3c2e338ffeed0c931a74896c345ed261312391ab", "filename": "gcc/config/cris/cris.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64f5af47c50af743fb0a58d5b074ee17d1101b22/gcc%2Fconfig%2Fcris%2Fcris.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64f5af47c50af743fb0a58d5b074ee17d1101b22/gcc%2Fconfig%2Fcris%2Fcris.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.opt?ref=64f5af47c50af743fb0a58d5b074ee17d1101b22", "patch": "@@ -175,6 +175,10 @@ Target Report RejectNegative Joined Var(cris_max_stackframe_str)\n max-stackframe=\n Target Report RejectNegative Joined Undocumented Var(cris_max_stackframe_str)\n \n+mtrap-using-break8\n+Target Report Var(cris_trap_using_break8) Init(2)\n+Emit traps as \\\"break 8\\\", default for CRIS v3 and up.  If disabled, calls to abort() are used.\n+\n ; TARGET_SVINTO: Currently this just affects alignment.  FIXME:\n ; Redundant with TARGET_ALIGN_BY_32, or put machine stuff here?\n ; This and the others below could just as well be variables and"}]}