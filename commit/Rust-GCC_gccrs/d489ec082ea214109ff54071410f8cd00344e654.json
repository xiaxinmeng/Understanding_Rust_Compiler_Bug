{"sha": "d489ec082ea214109ff54071410f8cd00344e654", "node_id": "C_kwDOANBUbNoAKGQ0ODllYzA4MmVhMjE0MTA5ZmY1NDA3MTQxMGY4Y2QwMDM0NGU2NTQ", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-06-29T22:41:46Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-06-30T16:46:16Z"}, "message": "c-family: Add <time.h> names to diagnostics for known headers\n\ngcc/c-family/ChangeLog:\n\n\t* known-headers.cc (get_stdlib_header_for_name): Add <time.h>\n\tnames.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/spellcheck-stdlib.C: Check <ctime> types and functions.", "tree": {"sha": "eebe6ece87d5ec6e0c0d8f0d436c5d01c5242a60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eebe6ece87d5ec6e0c0d8f0d436c5d01c5242a60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d489ec082ea214109ff54071410f8cd00344e654", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d489ec082ea214109ff54071410f8cd00344e654", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d489ec082ea214109ff54071410f8cd00344e654", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d489ec082ea214109ff54071410f8cd00344e654/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a8ee37a3325f1009034245676ef4e482c0444a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a8ee37a3325f1009034245676ef4e482c0444a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a8ee37a3325f1009034245676ef4e482c0444a2"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "9c256173b825b5d80303dc2e965f337db0d5b962", "filename": "gcc/c-family/known-headers.cc", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d489ec082ea214109ff54071410f8cd00344e654/gcc%2Fc-family%2Fknown-headers.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d489ec082ea214109ff54071410f8cd00344e654/gcc%2Fc-family%2Fknown-headers.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fknown-headers.cc?ref=d489ec082ea214109ff54071410f8cd00344e654", "patch": "@@ -199,6 +199,20 @@ get_stdlib_header_for_name (const char *name, enum stdlib lib)\n     {\"WINT_MAX\", {\"<stdint.h>\", \"<cstdint>\"} },\n     {\"WINT_MIN\", {\"<stdint.h>\", \"<cstdint>\"} },\n \n+    /* <time.h>.  */\n+    {\"asctime\", {\"<time.h>\", \"<ctime>\"} },\n+    {\"clock\", {\"<time.h>\", \"<ctime>\"} },\n+    {\"clock_t\", {\"<time.h>\", \"<ctime>\"} },\n+    {\"ctime\", {\"<time.h>\", \"<ctime>\"} },\n+    {\"difftime\", {\"<time.h>\", \"<ctime>\"} },\n+    {\"gmtime\", {\"<time.h>\", \"<ctime>\"} },\n+    {\"localtime\", {\"<time.h>\", \"<ctime>\"} },\n+    {\"mktime\", {\"<time.h>\", \"<ctime>\"} },\n+    {\"strftime\", {\"<time.h>\", \"<ctime>\"} },\n+    {\"time\", {\"<time.h>\", \"<ctime>\"} },\n+    {\"time_t\", {\"<time.h>\", \"<ctime>\"} },\n+    {\"tm\", {\"<time.h>\", \"<ctime>\"} },\n+\n     /* <wchar.h>.  */\n     {\"WCHAR_MAX\", {\"<wchar.h>\", \"<cwchar>\"} },\n     {\"WCHAR_MIN\", {\"<wchar.h>\", \"<cwchar>\"} }"}, {"sha": "7a70641e3ae13c05c126e9d0492baab69ee11f32", "filename": "gcc/testsuite/g++.dg/spellcheck-stdlib.C", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d489ec082ea214109ff54071410f8cd00344e654/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspellcheck-stdlib.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d489ec082ea214109ff54071410f8cd00344e654/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspellcheck-stdlib.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspellcheck-stdlib.C?ref=d489ec082ea214109ff54071410f8cd00344e654", "patch": "@@ -158,6 +158,35 @@ void test_cstdlib (void *q)\n   // { dg-message \"'#include <cstdlib>'\" \"\" { target *-*-* } .-1 }\n }\n \n+/* Missing <ctime>.  */\n+\n+void test_ctime (void *q, long s, double d)\n+{\n+  clock_t c; // { dg-error \"was not declared\" }\n+  // { dg-message \"'#include <ctime>'\" \"\" { target *-*-* } .-1 }\n+  time_t t; // { dg-error \"was not declared\" }\n+  // { dg-message \"'#include <ctime>'\" \"\" { target *-*-* } .-1 }\n+  tm t2; // { dg-error \"was not declared\" }\n+  // { dg-message \"'#include <ctime>'\" \"\" { target *-*-* } .-1 }\n+  d = difftime (0, 0); // { dg-error \"was not declared\" }\n+  // { dg-message \"'#include <ctime>'\" \"\" { target *-*-* } .-1 }\n+  s = mktime (q); // { dg-error \"was not declared\" }\n+  // { dg-message \"'#include <ctime>'\" \"\" { target *-*-* } .-1 }\n+  s = time (0); // { dg-error \"was not declared\" }\n+  // { dg-message \"'#include <ctime>'\" \"\" { target *-*-* } .-1 }\n+  q = asctime (0); // { dg-error \"was not declared\" }\n+  // { dg-message \"'#include <ctime>'\" \"\" { target *-*-* } .-1 }\n+  q = ctime (0); // { dg-error \"was not declared\" }\n+  // { dg-message \"'#include <ctime>'\" \"\" { target *-*-* } .-1 }\n+  q = gmtime (0); // { dg-error \"was not declared\" }\n+  // { dg-message \"'#include <ctime>'\" \"\" { target *-*-* } .-1 }\n+  q = localtime (0); // { dg-error \"was not declared\" }\n+  // { dg-message \"'#include <ctime>'\" \"\" { target *-*-* } .-1 }\n+  char c[2];\n+  strftime (c, 2, \"\", 0); // { dg-error \"was not declared\" }\n+  // { dg-message \"'#include <ctime>'\" \"\" { target *-*-* } .-1 }\n+}\n+\n /* Verify that we don't offer suggestions to stdlib globals names when\n    there's an explicit namespace.  */\n "}]}