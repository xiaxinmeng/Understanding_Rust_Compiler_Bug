{"sha": "3bca17dda39ffb2511ae875670e9607188d1d61c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JjYTE3ZGRhMzlmZmIyNTExYWU4NzU2NzBlOTYwNzE4OGQxZDYxYw==", "commit": {"author": {"name": "Paul Koning", "email": "pkoning@equallogic.com", "date": "2002-01-28T20:07:01Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-01-28T20:07:01Z"}, "message": "builtin-types.def (BT_FN_VOID_CONST_PTR_VAR): Replace BT_FN_VOID_PTR_VAR.\n\n        * builtin-types.def (BT_FN_VOID_CONST_PTR_VAR): Replace\n        BT_FN_VOID_PTR_VAR.\n        * builtins.def (BUILT_IN_PREFETCH): Change first argument to be const.\n        * doc/extend.texi (__builtin_prefetch): Update documentation:\n        first argument is now const void ptr.\n\n        * gcc.c-torture/execute/builtin-prefetch-1.c: Changed first\n        argument to __builtin_prefetch to be const ptr.\n\nFrom-SVN: r49296", "tree": {"sha": "1ebd0b241fb11fb62245b14253bea99f3346382e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ebd0b241fb11fb62245b14253bea99f3346382e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bca17dda39ffb2511ae875670e9607188d1d61c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bca17dda39ffb2511ae875670e9607188d1d61c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bca17dda39ffb2511ae875670e9607188d1d61c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bca17dda39ffb2511ae875670e9607188d1d61c/comments", "author": null, "committer": null, "parents": [{"sha": "4debe14deb949b6ba322c14fc63e457678cfda23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4debe14deb949b6ba322c14fc63e457678cfda23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4debe14deb949b6ba322c14fc63e457678cfda23"}], "stats": {"total": 43, "additions": 28, "deletions": 15}, "files": [{"sha": "243c24713101f9f766aa9f3540082d8f6b06b4c2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bca17dda39ffb2511ae875670e9607188d1d61c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bca17dda39ffb2511ae875670e9607188d1d61c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3bca17dda39ffb2511ae875670e9607188d1d61c", "patch": "@@ -1,3 +1,11 @@\n+2002-01-28  Paul Koning  <pkoning@equallogic.com>\n+\n+\t* builtin-types.def (BT_FN_VOID_CONST_PTR_VAR): Replace\n+\tBT_FN_VOID_PTR_VAR.\n+\t* builtins.def (BUILT_IN_PREFETCH): Change first argument to be const.\n+\t* doc/extend.texi (__builtin_prefetch): Update documentation:\n+\tfirst argument is now const void ptr.\n+\n 2002-01-28  Kazu Hirata  <kazu@hxi.com>\n \n \t* config/h8300/h8300-protos.h: Remove an unused prototype.\n@@ -276,10 +284,10 @@ Fri Jan 25 20:43:56 CET 2002  Jan Hubicka  <jh@suse.cz>\n \n 2002-01-24  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * loop.c (emit_prefetch_instructions): Use the prefetch insn's\n-        mode, not Pmode.\n+\t* loop.c (emit_prefetch_instructions): Use the prefetch insn's\n+\tmode, not Pmode.\n \n-        * builtins.c (expand_builtin_prefetch): Same.\n+\t* builtins.c (expand_builtin_prefetch): Same.\n \n 2002-01-24  Alexandre Oliva  <aoliva@redhat.com>\n \n@@ -300,7 +308,7 @@ Fri Jan 25 20:43:56 CET 2002  Jan Hubicka  <jh@suse.cz>\n \n 2002-01-24  Andris Pavenis  <pavenis@latnet.lv>\n \n-        * config/i386/t-djgpp: Use NATIVE_SYSTEM_HEADER_DIR.\n+\t* config/i386/t-djgpp: Use NATIVE_SYSTEM_HEADER_DIR.\n \n 2002-01-24  Nick Clifton  <nickc@cambridge.redhat.com>\n \n@@ -346,9 +354,9 @@ Fri Jan 25 20:43:56 CET 2002  Jan Hubicka  <jh@suse.cz>\n \n 2002-01-23  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * c-parse.in (parmlist_or_identifiers): Add maybe_attribute.\n-        (parmlist_or_identifiers_1): Verify that only a parmlist follows\n-        an attribute.\n+\t* c-parse.in (parmlist_or_identifiers): Add maybe_attribute.\n+\t(parmlist_or_identifiers_1): Verify that only a parmlist follows\n+\tan attribute.\n \n 2002-01-23  Richard Henderson  <rth@redhat.com>\n "}, {"sha": "6cefb322f204b761f07ba2242e6de6ccd6842cb9", "filename": "gcc/builtin-types.def", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bca17dda39ffb2511ae875670e9607188d1d61c/gcc%2Fbuiltin-types.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bca17dda39ffb2511ae875670e9607188d1d61c/gcc%2Fbuiltin-types.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltin-types.def?ref=3bca17dda39ffb2511ae875670e9607188d1d61c", "patch": "@@ -167,8 +167,8 @@ DEF_FUNCTION_TYPE_VAR_0 (BT_FN_PTR_VAR, BT_PTR)\n \n DEF_FUNCTION_TYPE_VAR_1 (BT_FN_VOID_VALIST_REF_VAR, \n \t\t\t BT_VOID, BT_VALIST_REF)\n-DEF_FUNCTION_TYPE_VAR_1 (BT_FN_VOID_PTR_VAR,\n-\t\t\t BT_VOID, BT_PTR)\n+DEF_FUNCTION_TYPE_VAR_1 (BT_FN_VOID_CONST_PTR_VAR,\n+\t\t\t BT_VOID, BT_CONST_PTR)\n DEF_FUNCTION_TYPE_VAR_1 (BT_FN_INT_CONST_STRING_VAR,\n \t                 BT_INT, BT_CONST_STRING)\n "}, {"sha": "c6f6dc426f9c8334074c40ce484fdbf2bad9872e", "filename": "gcc/builtins.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bca17dda39ffb2511ae875670e9607188d1d61c/gcc%2Fbuiltins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bca17dda39ffb2511ae875670e9607188d1d61c/gcc%2Fbuiltins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.def?ref=3bca17dda39ffb2511ae875670e9607188d1d61c", "patch": "@@ -356,7 +356,7 @@ DEF_GCC_BUILTIN(BUILT_IN_TRAP,\n \t\tBT_FN_VOID)\n DEF_GCC_BUILTIN(BUILT_IN_PREFETCH,\n \t\t\"__builtin_prefetch\",\n-\t\tBT_FN_VOID_PTR_VAR)\n+\t\tBT_FN_VOID_CONST_PTR_VAR)\n \n /* Stdio builtins.  */\n DEF_FALLBACK_BUILTIN(BUILT_IN_PUTCHAR,"}, {"sha": "ad88a2a83afc0451931588ee79d528542e471def", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bca17dda39ffb2511ae875670e9607188d1d61c/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bca17dda39ffb2511ae875670e9607188d1d61c/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=3bca17dda39ffb2511ae875670e9607188d1d61c", "patch": "@@ -4592,7 +4592,7 @@ if (__builtin_expect (ptr != NULL, 1))\n when testing pointer or floating-point values.\n @end deftypefn\n \n-@deftypefn {Built-in Function} void __builtin_prefetch (void *@var{addr}, ...)\n+@deftypefn {Built-in Function} void __builtin_prefetch (const void *@var{addr}, ...)\n This function is used to minimize cache-miss latency by moving data into\n a cache before it is accessed.\n You can insert calls to @code{__builtin_prefetch} into code for which"}, {"sha": "28a931bc2bb3c45a2c6f6c36b0b156cd01bf2b2d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bca17dda39ffb2511ae875670e9607188d1d61c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bca17dda39ffb2511ae875670e9607188d1d61c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3bca17dda39ffb2511ae875670e9607188d1d61c", "patch": "@@ -1,3 +1,8 @@\n+2002-01-28  Paul Koning  <pkoning@equallogic.com>\n+\n+\t* gcc.c-torture/execute/builtin-prefetch-1.c: Changed first\n+\targument to __builtin_prefetch to be const ptr.\n+\n 2002-01-28  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.c-torture/compile/20020120-1.c: New test."}, {"sha": "4ee05a94d9f63c159cca72583109eb2f95ed10bb", "filename": "gcc/testsuite/gcc.c-torture/execute/builtin-prefetch-1.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bca17dda39ffb2511ae875670e9607188d1d61c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltin-prefetch-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bca17dda39ffb2511ae875670e9607188d1d61c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltin-prefetch-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltin-prefetch-1.c?ref=3bca17dda39ffb2511ae875670e9607188d1d61c", "patch": "@@ -17,7 +17,7 @@ enum rw { read, write };\n int arr[10];\n \n void\n-good_const (int *p)\n+good_const (const int *p)\n {\n   __builtin_prefetch (p, 0, 0);\n   __builtin_prefetch (p, 0, 1);\n@@ -30,7 +30,7 @@ good_const (int *p)\n }\n \n void\n-good_enum (int *p)\n+good_enum (const int *p)\n {\n     __builtin_prefetch (p, read, none);\n     __builtin_prefetch (p, read, low);\n@@ -43,14 +43,14 @@ good_enum (int *p)\n }\n \n void\n-good_expr (int *p)\n+good_expr (const int *p)\n {\n   __builtin_prefetch (p, 1 - 1, 6 - (2 * 3));\n   __builtin_prefetch (p, 1 + 0, 1 + 2);\n }\n \n void\n-good_vararg (int *p)\n+good_vararg (const int *p)\n {\n   __builtin_prefetch (p, 0, 3);\n   __builtin_prefetch (p, 0);"}]}