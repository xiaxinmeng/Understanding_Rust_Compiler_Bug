{"sha": "4f17aa0b9d1c065f9c1b2979e5782530cade3776", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGYxN2FhMGI5ZDFjMDY1ZjljMWIyOTc5ZTU3ODI1MzBjYWRlMzc3Ng==", "commit": {"author": {"name": "Xinliang David Li", "email": "davidxl@google.com", "date": "2013-09-24T20:44:03Z"}, "committer": {"name": "Xinliang David Li", "email": "davidxl@gcc.gnu.org", "date": "2013-09-24T20:44:03Z"}, "message": "Implement --param=vect-max-peeling-for-alignment=..\n\nFrom-SVN: r202875", "tree": {"sha": "ad589584e20951af8c0b712b9c985c104b7654e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad589584e20951af8c0b712b9c985c104b7654e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f17aa0b9d1c065f9c1b2979e5782530cade3776", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f17aa0b9d1c065f9c1b2979e5782530cade3776", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f17aa0b9d1c065f9c1b2979e5782530cade3776", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f17aa0b9d1c065f9c1b2979e5782530cade3776/comments", "author": {"login": "vns-mn", "id": 57157229, "node_id": "MDQ6VXNlcjU3MTU3MjI5", "avatar_url": "https://avatars.githubusercontent.com/u/57157229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vns-mn", "html_url": "https://github.com/vns-mn", "followers_url": "https://api.github.com/users/vns-mn/followers", "following_url": "https://api.github.com/users/vns-mn/following{/other_user}", "gists_url": "https://api.github.com/users/vns-mn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vns-mn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vns-mn/subscriptions", "organizations_url": "https://api.github.com/users/vns-mn/orgs", "repos_url": "https://api.github.com/users/vns-mn/repos", "events_url": "https://api.github.com/users/vns-mn/events{/privacy}", "received_events_url": "https://api.github.com/users/vns-mn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "114f3eb91d259328f4e043c667656d4ec6bce31a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/114f3eb91d259328f4e043c667656d4ec6bce31a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/114f3eb91d259328f4e043c667656d4ec6bce31a"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "49e926257712c3dcb62a14177d5a91ae643aba2c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f17aa0b9d1c065f9c1b2979e5782530cade3776/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f17aa0b9d1c065f9c1b2979e5782530cade3776/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4f17aa0b9d1c065f9c1b2979e5782530cade3776", "patch": "@@ -1,3 +1,10 @@\n+2013-09-24  Xinliang David Li <davidxl@google.com>\n+\n+\t* tree-vect-data-refs.c (vect_enhance_data_refs_alignment): \n+\tCheck max peel iterations parameter.\n+\t* param.def: New parameter.\n+\t* doc/invoke.texi: Document New parameter.\n+\n 2013-09-24  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gimple-pretty-print.c: Various whitespace tweaks."}, {"sha": "508bbb43838ae4644c305ceca72cd9bebef32a9f", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f17aa0b9d1c065f9c1b2979e5782530cade3776/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f17aa0b9d1c065f9c1b2979e5782530cade3776/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=4f17aa0b9d1c065f9c1b2979e5782530cade3776", "patch": "@@ -9451,6 +9451,10 @@ The maximum number of run-time checks that can be performed when\n doing loop versioning for alias in the vectorizer.  See option\n @option{-ftree-vect-loop-version} for more information.\n \n+@item vect-max-peeling-for-alignment\n+The maximum number of loop peels to enhance access alignment\n+for vectorizer. Value -1 means 'no limit'.\n+\n @item max-iterations-to-track\n The maximum number of iterations of a loop the brute-force algorithm\n for analysis of the number of iterations of the loop tries to evaluate."}, {"sha": "27491378d118d04d338c37f5050e63ce5ce7e34f", "filename": "gcc/params.def", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f17aa0b9d1c065f9c1b2979e5782530cade3776/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f17aa0b9d1c065f9c1b2979e5782530cade3776/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=4f17aa0b9d1c065f9c1b2979e5782530cade3776", "patch": "@@ -544,6 +544,11 @@ DEFPARAM(PARAM_VECT_MAX_VERSION_FOR_ALIAS_CHECKS,\n          \"Bound on number of runtime checks inserted by the vectorizer's loop versioning for alias check\",\n          10, 0, 0)\n \n+DEFPARAM(PARAM_VECT_MAX_PEELING_FOR_ALIGNMENT,\n+         \"vect-max-peeling-for-alignment\",\n+         \"Max number of loop peels to enhancement alignment of data references in a loop\",\n+         -1, -1, 64)\n+\n DEFPARAM(PARAM_MAX_CSELIB_MEMORY_LOCATIONS,\n \t \"max-cselib-memory-locations\",\n \t \"The maximum memory locations recorded by cselib\","}, {"sha": "c8cdcb85df0830c703d14f1a946abf42b0ce2d75", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f17aa0b9d1c065f9c1b2979e5782530cade3776/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f17aa0b9d1c065f9c1b2979e5782530cade3776/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=4f17aa0b9d1c065f9c1b2979e5782530cade3776", "patch": "@@ -1716,6 +1716,30 @@ vect_enhance_data_refs_alignment (loop_vec_info loop_vinfo)\n \t    }\n         }\n \n+      if (do_peeling)\n+        {\n+          unsigned max_allowed_peel\n+            = PARAM_VALUE (PARAM_VECT_MAX_PEELING_FOR_ALIGNMENT);\n+          if (max_allowed_peel != (unsigned)-1)\n+            {\n+              unsigned max_peel = npeel;\n+              if (max_peel == 0)\n+                {\n+                  gimple dr_stmt = DR_STMT (dr0);\n+                  stmt_vec_info vinfo = vinfo_for_stmt (dr_stmt);\n+                  tree vtype = STMT_VINFO_VECTYPE (vinfo);\n+                  max_peel = TYPE_VECTOR_SUBPARTS (vtype) - 1;\n+                }\n+              if (max_peel > max_allowed_peel)\n+                {\n+                  do_peeling = false;\n+                  if (dump_enabled_p ())\n+                    dump_printf_loc (MSG_NOTE, vect_location,\n+                        \"Disable peeling, max peels reached: %d\\n\", max_peel);\n+                }\n+            }\n+        }\n+\n       if (do_peeling)\n         {\n \t  stmt_info_for_cost *si;"}]}