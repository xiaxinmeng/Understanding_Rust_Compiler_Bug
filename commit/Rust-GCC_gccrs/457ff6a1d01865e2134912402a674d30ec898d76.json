{"sha": "457ff6a1d01865e2134912402a674d30ec898d76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU3ZmY2YTFkMDE4NjVlMjEzNDkxMjQwMmE2NzRkMzBlYzg5OGQ3Ng==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-09-23T07:02:26Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-09-23T07:02:26Z"}, "message": "re PR debug/41411 (ICE: mem_loc_descriptor, at dwarf2out.c:11616)\n\n\t* dwarf2out.c (loc_list_plus_const): Only define if\n\tDWARF2_DEBUGGING_INFO.\n\t(address_of_int_loc_descriptor): Likewise.\n\n\tPR debug/41411\n\t* dwarf2out.c (mem_loc_descriptor): Handle HIGH.\n\nFrom-SVN: r152059", "tree": {"sha": "7c1c92cf055d5b06f15fc709e254177e2a35518f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c1c92cf055d5b06f15fc709e254177e2a35518f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/457ff6a1d01865e2134912402a674d30ec898d76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/457ff6a1d01865e2134912402a674d30ec898d76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/457ff6a1d01865e2134912402a674d30ec898d76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/457ff6a1d01865e2134912402a674d30ec898d76/comments", "author": null, "committer": null, "parents": [{"sha": "be12343976ff4b516eb80c983d9ad613ff9a2593", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be12343976ff4b516eb80c983d9ad613ff9a2593", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be12343976ff4b516eb80c983d9ad613ff9a2593"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "ccab5aceb3a8f29c3c290561040641b98669c0fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/457ff6a1d01865e2134912402a674d30ec898d76/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/457ff6a1d01865e2134912402a674d30ec898d76/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=457ff6a1d01865e2134912402a674d30ec898d76", "patch": "@@ -1,4 +1,14 @@\n-2009-09-23 Uros Bizjak <ubizjak@gmail.com>\n+2009-09-23  Jakub Jelinek  <jakub@redhat.com>\n+\t    Jan Hubicka  <jh@suse.cz>\n+\n+\t* dwarf2out.c (loc_list_plus_const): Only define if\n+\tDWARF2_DEBUGGING_INFO.\n+\t(address_of_int_loc_descriptor): Likewise.\n+\n+\tPR debug/41411\n+\t* dwarf2out.c (mem_loc_descriptor): Handle HIGH.\n+\n+2009-09-23  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR c/39779\n \t* c-typeck.c (build_binary_op) <short_shift>: Check that integer"}, {"sha": "a2e91d4d5d6ed1c20deb234dd8f4a6322a1f2e86", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/457ff6a1d01865e2134912402a674d30ec898d76/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/457ff6a1d01865e2134912402a674d30ec898d76/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=457ff6a1d01865e2134912402a674d30ec898d76", "patch": "@@ -4657,6 +4657,7 @@ loc_descr_plus_const (dw_loc_descr_ref *list_head, HOST_WIDE_INT offset)\n     }\n }\n \n+#ifdef DWARF2_DEBUGGING_INFO\n /* Add a constant OFFSET to a location list.  */\n \n static void\n@@ -4666,6 +4667,7 @@ loc_list_plus_const (dw_loc_list_ref list_head, HOST_WIDE_INT offset)\n   for (d = list_head; d != NULL; d = d->dw_loc_next)\n     loc_descr_plus_const (&d->expr, offset);\n }\n+#endif\n \n /* Return the size of a location descriptor.  */\n \n@@ -10896,7 +10898,9 @@ int_loc_descriptor (HOST_WIDE_INT i)\n \n   return new_loc_descr (op, i, 0);\n }\n+#endif\n \n+#ifdef DWARF2_DEBUGGING_INFO\n /* Return loc description representing \"address\" of integer value.\n    This can appear only as toplevel expression.  */\n \n@@ -10957,9 +10961,6 @@ address_of_int_loc_descriptor (int size, HOST_WIDE_INT i)\n   loc_result->dw_loc_oprnd2.v.val_int = i;\n   return loc_result;\n }\n-#endif\n-\n-#ifdef DWARF2_DEBUGGING_INFO\n \n /* Return a location descriptor that designates a base+offset location.  */\n \n@@ -11675,6 +11676,7 @@ mem_loc_descriptor (rtx rtl, enum machine_mode mode,\n     case PARITY:\n     case ASM_OPERANDS:\n     case UNSPEC:\n+    case HIGH:\n       /* If delegitimize_address couldn't do anything with the UNSPEC, we\n \t can't express it in the debug info.  This can happen e.g. with some\n \t TLS UNSPECs.  */"}]}