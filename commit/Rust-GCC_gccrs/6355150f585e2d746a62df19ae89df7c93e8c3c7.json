{"sha": "6355150f585e2d746a62df19ae89df7c93e8c3c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM1NTE1MGY1ODVlMmQ3NDZhNjJkZjE5YWU4OWRmN2M5M2U4YzNjNw==", "commit": {"author": {"name": "Bin Cheng", "email": "bin.cheng@arm.com", "date": "2017-06-07T11:28:17Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2017-06-07T11:28:17Z"}, "message": "tree-vect-data-refs.c (vect_mark_for_runtime_alias_test): Factor out code checking if runtime alias check is possible to below ...\n\n\t* tree-vect-data-refs.c (vect_mark_for_runtime_alias_test): Factor\n\tout code checking if runtime alias check is possible to below ...\n\tCall the new function.\n\t* tree-data-ref.c (runtime_alias_check_p): ... to new function.\n\t* tree-data-ref.h (runtime_alias_check_p): New decalaration.\n\nFrom-SVN: r248962", "tree": {"sha": "ffd017ee04fe672e3f42d56032ae0e149f982e6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ffd017ee04fe672e3f42d56032ae0e149f982e6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6355150f585e2d746a62df19ae89df7c93e8c3c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6355150f585e2d746a62df19ae89df7c93e8c3c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6355150f585e2d746a62df19ae89df7c93e8c3c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6355150f585e2d746a62df19ae89df7c93e8c3c7/comments", "author": null, "committer": null, "parents": [{"sha": "0874a778ec0adf43167dd4aa014dadb75b0907f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0874a778ec0adf43167dd4aa014dadb75b0907f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0874a778ec0adf43167dd4aa014dadb75b0907f8"}], "stats": {"total": 100, "additions": 61, "deletions": 39}, "files": [{"sha": "e34747f531096a9b2808438b88040c72c3ce0039", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6355150f585e2d746a62df19ae89df7c93e8c3c7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6355150f585e2d746a62df19ae89df7c93e8c3c7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6355150f585e2d746a62df19ae89df7c93e8c3c7", "patch": "@@ -1,3 +1,11 @@\n+2017-06-07  Bin Cheng  <bin.cheng@arm.com>\n+\n+\t* tree-vect-data-refs.c (vect_mark_for_runtime_alias_test): Factor\n+\tout code checking if runtime alias check is possible to below ...\n+\tCall the new function.\n+\t* tree-data-ref.c (runtime_alias_check_p): ... to new function.\n+\t* tree-data-ref.h (runtime_alias_check_p): New decalaration.\n+\n 2017-06-07  Marek Polacek  <polacek@redhat.com>\n \n \tPR sanitizer/80932"}, {"sha": "ba473021534b7d65acff96237c515fcab877fa76", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6355150f585e2d746a62df19ae89df7c93e8c3c7/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6355150f585e2d746a62df19ae89df7c93e8c3c7/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=6355150f585e2d746a62df19ae89df7c93e8c3c7", "patch": "@@ -1182,6 +1182,55 @@ data_ref_compare_tree (tree t1, tree t2)\n   return 0;\n }\n \n+/* Return TRUE it's possible to resolve data dependence DDR by runtime alias\n+   check.  */\n+\n+bool\n+runtime_alias_check_p (ddr_p ddr, struct loop *loop, bool speed_p)\n+{\n+  if (dump_enabled_p ())\n+    {\n+      dump_printf (MSG_NOTE, \"consider run-time aliasing test between \");\n+      dump_generic_expr (MSG_NOTE, TDF_SLIM, DR_REF (DDR_A (ddr)));\n+      dump_printf (MSG_NOTE,  \" and \");\n+      dump_generic_expr (MSG_NOTE, TDF_SLIM, DR_REF (DDR_B (ddr)));\n+      dump_printf (MSG_NOTE, \"\\n\");\n+    }\n+\n+  if (!speed_p)\n+    {\n+      if (dump_enabled_p ())\n+\tdump_printf (MSG_MISSED_OPTIMIZATION,\n+\t\t     \"runtime alias check not supported when optimizing \"\n+\t\t     \"for size.\\n\");\n+      return false;\n+    }\n+\n+  /* FORNOW: We don't support versioning with outer-loop in either\n+     vectorization or loop distribution.  */\n+  if (loop != NULL && loop->inner != NULL)\n+    {\n+      if (dump_enabled_p ())\n+\tdump_printf (MSG_MISSED_OPTIMIZATION,\n+\t\t     \"runtime alias check not supported for outer loop.\\n\");\n+      return false;\n+    }\n+\n+  /* FORNOW: We don't support creating runtime alias tests for non-constant\n+     step.  */\n+  if (TREE_CODE (DR_STEP (DDR_A (ddr))) != INTEGER_CST\n+      || TREE_CODE (DR_STEP (DDR_B (ddr))) != INTEGER_CST)\n+    {\n+      if (dump_enabled_p ())\n+\tdump_printf (MSG_MISSED_OPTIMIZATION,\n+                     \"runtime alias check not supported for non-constant \"\n+\t\t     \"step\\n\");\n+      return false;\n+    }\n+\n+  return true;\n+}\n+\n /* Operator == between two dr_with_seg_len objects.\n \n    This equality operator is used to make sure two data refs"}, {"sha": "0013049053f082e4750bfa94ecef1b7f19bbd4bb", "filename": "gcc/tree-data-ref.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6355150f585e2d746a62df19ae89df7c93e8c3c7/gcc%2Ftree-data-ref.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6355150f585e2d746a62df19ae89df7c93e8c3c7/gcc%2Ftree-data-ref.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.h?ref=6355150f585e2d746a62df19ae89df7c93e8c3c7", "patch": "@@ -368,6 +368,7 @@ extern bool dr_may_alias_p (const struct data_reference *,\n extern bool dr_equal_offsets_p (struct data_reference *,\n                                 struct data_reference *);\n \n+extern bool runtime_alias_check_p (ddr_p, struct loop *, bool);\n extern int data_ref_compare_tree (tree, tree);\n extern void prune_runtime_alias_test_list (vec<dr_with_seg_len_pair_t> *,\n \t\t\t\t\t   unsigned HOST_WIDE_INT);"}, {"sha": "623acf695ed289c6af86ae5ae1938016378b2a09", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 3, "deletions": 39, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6355150f585e2d746a62df19ae89df7c93e8c3c7/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6355150f585e2d746a62df19ae89df7c93e8c3c7/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=6355150f585e2d746a62df19ae89df7c93e8c3c7", "patch": "@@ -150,45 +150,9 @@ vect_mark_for_runtime_alias_test (ddr_p ddr, loop_vec_info loop_vinfo)\n   if ((unsigned) PARAM_VALUE (PARAM_VECT_MAX_VERSION_FOR_ALIAS_CHECKS) == 0)\n     return false;\n \n-  if (dump_enabled_p ())\n-    {\n-      dump_printf_loc (MSG_NOTE, vect_location,\n-                       \"mark for run-time aliasing test between \");\n-      dump_generic_expr (MSG_NOTE, TDF_SLIM, DR_REF (DDR_A (ddr)));\n-      dump_printf (MSG_NOTE,  \" and \");\n-      dump_generic_expr (MSG_NOTE, TDF_SLIM, DR_REF (DDR_B (ddr)));\n-      dump_printf (MSG_NOTE, \"\\n\");\n-    }\n-\n-  if (optimize_loop_nest_for_size_p (loop))\n-    {\n-      if (dump_enabled_p ())\n-\tdump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n-                         \"versioning not supported when optimizing\"\n-                         \" for size.\\n\");\n-      return false;\n-    }\n-\n-  /* FORNOW: We don't support versioning with outer-loop vectorization.  */\n-  if (loop->inner)\n-    {\n-      if (dump_enabled_p ())\n-\tdump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n-                         \"versioning not yet supported for outer-loops.\\n\");\n-      return false;\n-    }\n-\n-  /* FORNOW: We don't support creating runtime alias tests for non-constant\n-     step.  */\n-  if (TREE_CODE (DR_STEP (DDR_A (ddr))) != INTEGER_CST\n-      || TREE_CODE (DR_STEP (DDR_B (ddr))) != INTEGER_CST)\n-    {\n-      if (dump_enabled_p ())\n-\tdump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n-                         \"versioning not yet supported for non-constant \"\n-                         \"step\\n\");\n-      return false;\n-    }\n+  if (!runtime_alias_check_p (ddr, loop,\n+\t\t\t      optimize_loop_nest_for_speed_p (loop)))\n+    return false;\n \n   LOOP_VINFO_MAY_ALIAS_DDRS (loop_vinfo).safe_push (ddr);\n   return true;"}]}