{"sha": "855c21cb9af3e00ac10533f0525b038cf77eaa49", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODU1YzIxY2I5YWYzZTAwYWMxMDUzM2YwNTI1YjAzOGNmNzdlYWE0OQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2019-10-13T11:42:15Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2019-10-13T11:42:15Z"}, "message": "Remove dg-add-options c99_runtime\n\n\tgcc:\n\t* doc/sourcebuild.texi (Test Directives, Add Options): Remove\n\tc99_runtime.\n\n\tgcc/testsuite:\n\t* lib/target-supports.exp (add_options_for_c99_runtime): Remove.\n\t(check_effective_target_c99_runtime): Remove call to\n\tadd_options_for_c99_runtime.\n\n\t* gcc.dg/builtins-18.c: Remove dg-add-options c99_runtime.\n\t* gcc.dg/builtins-20.c: Likewise.\n\t* gcc.dg/builtins-53.c: Likewise.\n\t* gcc.dg/builtins-55.c: Likewise.\n\t* gcc.dg/builtins-67.c: Likewise.\n\t* gcc.dg/c99-tgmath-1.c: Likewise.\n\t* gcc.dg/c99-tgmath-2.c: Likewise.\n\t* gcc.dg/c99-tgmath-3.c: Likewise.\n\t* gcc.dg/c99-tgmath-4.c: Likewise.\n\t* gcc.dg/ipa/inline-8.c: Likewise.\n\t* gcc.dg/ipa/ipa-icf-5.c: Likewise.\n\t* gcc.dg/ipa/ipa-icf-7.c: Likewise.\n\t* gcc.dg/nextafter-2.c: Likewise.\n\t* gcc.dg/pr42427.c: Likewise.\n\t* gcc.dg/pr78965.c: Likewise.\n\t* gcc.dg/single-precision-constant.c: Likewise.\n\t* gcc.dg/torture/builtin-convert-1.c: Likewise.\n\t* gcc.dg/torture/builtin-convert-2.c: Likewise.\n\t* gcc.dg/torture/builtin-convert-3.c: Likewise.\n\t* gcc.dg/torture/builtin-convert-4.c: Likewise.\n\t* gcc.dg/torture/builtin-fp-int-inexact.c: Likewise.\n\t* gcc.dg/torture/builtin-fp-int-inexact-c2x.c: Likewise.\n\t* gcc.dg/torture/builtin-integral-1.c: Likewise.\n\t* gcc.dg/torture/builtin-power-1.c: Likewise.\n\t* gcc.dg/tree-ssa/copy-sign-1.c: Likewise.\n\t* gcc.dg/tree-ssa/minmax-2.c: Likewise.\n\t* gcc.dg/tree-ssa/mult-abs-2.c: Likewise.\n\t* gcc.target/i386/387-builtin-fp-int-inexact.c: Likewise.\n\t* gcc.target/i386/387-rint-inline-1.c: Likewise.\n\t* gcc.target/i386/387-rint-inline-2.c: Likewise.\n\t* gcc.target/i386/conversion.c: Likewise.\n\t* gcc.target/i386/pr47312.c: Likewise.\n\t* gcc.target/i386/sse2-builtin-fp-int-inexact.c: Likewise.\n\t* gcc.target/i386/sse2-rint-inline-1.c: Likewise.\n\t* gcc.target/i386/sse2-rint-inline-2.c: Likewise.\n\t* gcc.target/i386/sse4_1-builtin-fp-int-inexact.c: Likewise.\n\t* gcc.target/i386/sse4_1-rint-inline.c: Likewise.\n\nFrom-SVN: r276937", "tree": {"sha": "e96cfb80b41b6e8beb4bbcd4db738e719b2ae0e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e96cfb80b41b6e8beb4bbcd4db738e719b2ae0e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/855c21cb9af3e00ac10533f0525b038cf77eaa49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/855c21cb9af3e00ac10533f0525b038cf77eaa49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/855c21cb9af3e00ac10533f0525b038cf77eaa49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/855c21cb9af3e00ac10533f0525b038cf77eaa49/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7cc4770980e20f6f480152277d2a64c226fdee2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cc4770980e20f6f480152277d2a64c226fdee2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cc4770980e20f6f480152277d2a64c226fdee2a"}], "stats": {"total": 104, "additions": 50, "deletions": 54}, "files": [{"sha": "44753c8b9bd7a001d82f7f2c7d061ebba158e134", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -1,3 +1,8 @@\n+2019-10-13  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* doc/sourcebuild.texi (Test Directives, Add Options): Remove\n+\tc99_runtime.\n+\n 2019-10-12  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* lto-streamer-out.c (collect_block_tree_leafs): Renumber statements"}, {"sha": "42a10cf2243836da9eb7a06dc8dd2be74cdbd050", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -2528,9 +2528,6 @@ instructions, if this is supported by the target; see the\n Add the target-specific flags needed to enable functions to bind\n locally when using pic/PIC passes in the testsuite.\n \n-@item c99_runtime\n-Add the target-specific flags needed to access the C99 runtime.\n-\n @item float@var{n}\n Add the target-specific flags needed to use the @code{_Float@var{n}} type.\n "}, {"sha": "3117a07942c95536b4b7fd705d220d07f778eb7f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -1,3 +1,47 @@\n+2019-10-13  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* lib/target-supports.exp (add_options_for_c99_runtime): Remove.\n+\t(check_effective_target_c99_runtime): Remove call to\n+\tadd_options_for_c99_runtime.\n+\n+\t* gcc.dg/builtins-18.c: Remove dg-add-options c99_runtime.\n+\t* gcc.dg/builtins-20.c: Likewise.\n+\t* gcc.dg/builtins-53.c: Likewise.\n+\t* gcc.dg/builtins-55.c: Likewise.\n+\t* gcc.dg/builtins-67.c: Likewise.\n+\t* gcc.dg/c99-tgmath-1.c: Likewise.\n+\t* gcc.dg/c99-tgmath-2.c: Likewise.\n+\t* gcc.dg/c99-tgmath-3.c: Likewise.\n+\t* gcc.dg/c99-tgmath-4.c: Likewise.\n+\t* gcc.dg/ipa/inline-8.c: Likewise.\n+\t* gcc.dg/ipa/ipa-icf-5.c: Likewise.\n+\t* gcc.dg/ipa/ipa-icf-7.c: Likewise.\n+\t* gcc.dg/nextafter-2.c: Likewise.\n+\t* gcc.dg/pr42427.c: Likewise.\n+\t* gcc.dg/pr78965.c: Likewise.\n+\t* gcc.dg/single-precision-constant.c: Likewise.\n+\t* gcc.dg/torture/builtin-convert-1.c: Likewise.\n+\t* gcc.dg/torture/builtin-convert-2.c: Likewise.\n+\t* gcc.dg/torture/builtin-convert-3.c: Likewise.\n+\t* gcc.dg/torture/builtin-convert-4.c: Likewise.\n+\t* gcc.dg/torture/builtin-fp-int-inexact.c: Likewise.\n+\t* gcc.dg/torture/builtin-fp-int-inexact-c2x.c: Likewise.\n+\t* gcc.dg/torture/builtin-integral-1.c: Likewise.\n+\t* gcc.dg/torture/builtin-power-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/copy-sign-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/minmax-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/mult-abs-2.c: Likewise.\n+\t* gcc.target/i386/387-builtin-fp-int-inexact.c: Likewise.\n+\t* gcc.target/i386/387-rint-inline-1.c: Likewise.\n+\t* gcc.target/i386/387-rint-inline-2.c: Likewise.\n+\t* gcc.target/i386/conversion.c: Likewise.\n+\t* gcc.target/i386/pr47312.c: Likewise.\n+\t* gcc.target/i386/sse2-builtin-fp-int-inexact.c: Likewise.\n+\t* gcc.target/i386/sse2-rint-inline-1.c: Likewise.\n+\t* gcc.target/i386/sse2-rint-inline-2.c: Likewise.\n+\t* gcc.target/i386/sse4_1-builtin-fp-int-inexact.c: Likewise.\n+\t* gcc.target/i386/sse4_1-rint-inline.c: Likewise.\n+\n 2019-10-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/92063"}, {"sha": "4501cc14bce2f984c19a3765b3d04f72a5af1b39", "filename": "gcc/testsuite/gcc.dg/builtins-18.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-18.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -7,7 +7,6 @@\n \n /* { dg-do link } */\n /* { dg-options \"-O2 -ffast-math\" } */\n-/* { dg-add-options c99_runtime } */\n \n #include \"builtins-config.h\"\n "}, {"sha": "8f864f62495c158296fbdb4fd321d6a51cfa6827", "filename": "gcc/testsuite/gcc.dg/builtins-20.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-20.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -7,7 +7,6 @@\n \n /* { dg-do link } */\n /* { dg-options \"-O2 -ffast-math\" } */\n-/* { dg-add-options c99_runtime } */\n \n #include \"builtins-config.h\"\n "}, {"sha": "e01908c26a7d87648acfec740f5bc27a422824bb", "filename": "gcc/testsuite/gcc.dg/builtins-53.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-53.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-53.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-53.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -10,7 +10,6 @@\n \n /* { dg-do compile } */\n /* { dg-options \"-O2 -ffast-math\" } */\n-/* { dg-add-options c99_runtime } */\n \n #include \"builtins-config.h\"\n "}, {"sha": "76786fb6b80ecc374ffd85d34f8e8f9a2a1f8adf", "filename": "gcc/testsuite/gcc.dg/builtins-55.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-55.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-55.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-55.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do link } */\n /* { dg-options \"-O2 -ffast-math\" } */\n-/* { dg-add-options c99_runtime } */\n \n #include \"builtins-config.h\"\n "}, {"sha": "36b7886b16afd25a5e5865b538db2a35f9433175", "filename": "gcc/testsuite/gcc.dg/builtins-67.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-67.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-67.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-67.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -2,7 +2,6 @@\n \n /* { dg-do link } */\n /* { dg-options \"-ffast-math -lm\" }  */\n-/* { dg-add-options c99_runtime } */\n /* Bionic doesn't have rintl */\n /* { dg-require-effective-target non_bionic } */\n "}, {"sha": "cfcba8369d5829e9e0c8080a5a797597842726ab", "filename": "gcc/testsuite/gcc.dg/c99-tgmath-1.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-1.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -2,7 +2,6 @@\n /* Origin: Matt Austern <austern@apple.com>\n /* { dg-do preprocess { target c99_runtime } } */\n /* { dg-options \"-std=iso9899:1999\" } */\n-/* { dg-add-options c99_runtime } */\n /* { dg-require-effective-target tgmath_h } */\n \n /* Test that tgmath defines the macros it's supposed to. */"}, {"sha": "7b0cfa4c6ddf30b01a4bfc0389f440e06cee4a3e", "filename": "gcc/testsuite/gcc.dg/c99-tgmath-2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-2.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -2,7 +2,6 @@\n /* Origin: Matt Austern <austern@apple.com>\n /* { dg-do compile { target c99_runtime } } */\n /* { dg-options \"-std=iso9899:1999\" } */\n-/* { dg-add-options c99_runtime } */\n /* { dg-require-effective-target tgmath_h } */\n \n /* Test that invoking type-generic sin on a float invokes sinf. */"}, {"sha": "8ed8b30f8ab2000560fcfb3fb2e7ea3f471fdcb2", "filename": "gcc/testsuite/gcc.dg/c99-tgmath-3.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-3.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -2,7 +2,6 @@\n /* Origin: Matt Austern <austern@apple.com>\n /* { dg-do compile { target c99_runtime } } */\n /* { dg-options \"-std=iso9899:1999\" } */\n-/* { dg-add-options c99_runtime } */\n /* { dg-require-effective-target tgmath_h } */\n \n /* Test that invoking type-generic exp on a complex invokes cexp. */"}, {"sha": "f66bcdffaea38869157ee5f6256f123164ec689b", "filename": "gcc/testsuite/gcc.dg/c99-tgmath-4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-4.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -2,7 +2,6 @@\n /* Origin: Matt Austern <austern@apple.com>\n /* { dg-do compile { target c99_runtime } } */\n /* { dg-options \"-std=iso9899:1999\" } */\n-/* { dg-add-options c99_runtime } */\n /* { dg-require-effective-target tgmath_h } */\n \n /* Test that invoking type-generic pow on complex float invokes cpowf. */"}, {"sha": "388283ca2132af063321324f6ff77f6d8dcf63e4", "filename": "gcc/testsuite/gcc.dg/ipa/inline-8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Finline-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Finline-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Finline-8.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -3,7 +3,6 @@\n /* { dg-do run } */\n /* { dg-require-effective-target c99_runtime } */\n /* { dg-options \"-O2\"  } */\n-/* { dg-add-options c99_runtime } */\n #include <math.h>\n extern int isnanf (float);\n /* Can't be inlined because isnanf will be optimized out.  */"}, {"sha": "1125bbd80c544253232e6ea40921a2a4d4765c92", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-icf-5.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-5.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile { target c99_runtime } } */\n /* { dg-options \"-O2 -fdump-ipa-icf-optimized\"  } */\n-/* { dg-add-options c99_runtime } */\n \n #include <complex.h>\n "}, {"sha": "d498b10255b57f41fd7095e8801ce596a1cc5100", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-icf-7.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-7.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile { target c99_runtime } } */\n /* { dg-options \"-O2 -fdump-ipa-icf-optimized\"  } */\n-/* { dg-add-options c99_runtime } */\n \n #include <complex.h>\n "}, {"sha": "e51ae94be0c27d9d025efba81ebb057d0ad54baa", "filename": "gcc/testsuite/gcc.dg/nextafter-2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Fnextafter-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Fnextafter-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnextafter-2.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -3,7 +3,6 @@\n /* { dg-require-effective-target c99_runtime } */\n /* { dg-options \"-O2 -fno-builtin\" } */\n /* { dg-add-options ieee } */\n-/* { dg-add-options c99_runtime } */\n \n #include <stdlib.h>\n "}, {"sha": "b5a51cc322107258d94801353d579710f5e972a9", "filename": "gcc/testsuite/gcc.dg/pr42427.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Fpr42427.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Fpr42427.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr42427.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do assemble { target c99_runtime } } */\n /* { dg-options \"-O2 -fexceptions -fnon-call-exceptions -fpeel-loops\" } */\n-/* { dg-add-options c99_runtime } */\n /* { dg-require-effective-target ilp32 } */\n /* { dg-require-effective-target exceptions } */\n "}, {"sha": "43da70b29e15728d220e08ca55772e568c76c26d", "filename": "gcc/testsuite/gcc.dg/pr78965.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Fpr78965.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Fpr78965.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr78965.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -1,7 +1,6 @@\n /* PR tree-optimization/78965 */\n /* { dg-do run { target c99_runtime } } */\n /* { dg-options \"-O2\" } */\n-/* { dg-add-options c99_runtime } */\n \n int\n main ()"}, {"sha": "f1a9dc846a91e275f0b886a460656f8e09bd9682", "filename": "gcc/testsuite/gcc.dg/single-precision-constant.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Fsingle-precision-constant.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Fsingle-precision-constant.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsingle-precision-constant.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -4,7 +4,6 @@\n \n /* { dg-do run } */\n /* { dg-options \"-fsingle-precision-constant\" } */\n-/* { dg-add-options c99_runtime } */\n \n #include <math.h>\n #include <float.h>"}, {"sha": "31aadffe9f2e97b69725cb41a34f3316870d130e", "filename": "gcc/testsuite/gcc.dg/torture/builtin-convert-1.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-convert-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-convert-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-convert-1.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -7,7 +7,6 @@\n \n /* { dg-do link } */\n /* { dg-options \"-ffast-math\" } */\n-/* { dg-add-options c99_runtime } */\n /* { dg-require-effective-target c99_runtime } */\n \n #include \"../builtins-config.h\""}, {"sha": "385098619af3516e48dbf76e1867852f8d531a6c", "filename": "gcc/testsuite/gcc.dg/torture/builtin-convert-2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-convert-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-convert-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-convert-2.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -7,7 +7,6 @@\n \n /* { dg-do link } */\n /* { dg-options \"-ffast-math\" } */\n-/* { dg-add-options c99_runtime } */\n \n #include \"../builtins-config.h\"\n "}, {"sha": "520871f421b01888c40e742a40fcf587d620a746", "filename": "gcc/testsuite/gcc.dg/torture/builtin-convert-3.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-convert-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-convert-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-convert-3.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -7,7 +7,6 @@\n \n /* { dg-do link } */\n /* { dg-options \"-ffast-math\" } */\n-/* { dg-add-options c99_runtime } */\n \n #include \"../builtins-config.h\"\n "}, {"sha": "f201f15661326f09503be75ad3c2bede5a1e2c4b", "filename": "gcc/testsuite/gcc.dg/torture/builtin-convert-4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-convert-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-convert-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-convert-4.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -7,7 +7,6 @@\n \n /* { dg-do compile } */\n /* { dg-options \"-ftrapping-math -fdump-tree-original\" } */\n-/* { dg-add-options c99_runtime } */\n \n #include \"../builtins-config.h\"\n "}, {"sha": "739a78cb6fbee1c9e5d7ff3b83f14345056d59cd", "filename": "gcc/testsuite/gcc.dg/torture/builtin-fp-int-inexact-c2x.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-fp-int-inexact-c2x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-fp-int-inexact-c2x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-fp-int-inexact-c2x.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -1,7 +1,6 @@\n /* Test C2X enables -fno-fp-int-builtin-inexact.  */\n /* { dg-do run } */\n /* { dg-options \"-std=c2x\" } */\n-/* { dg-add-options c99_runtime } */\n /* { dg-require-effective-target fenv_exceptions } */\n \n #include \"builtin-fp-int-inexact.c\""}, {"sha": "b192d38a730bbee97fb9bb370ee494e55d43e880", "filename": "gcc/testsuite/gcc.dg/torture/builtin-fp-int-inexact.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-fp-int-inexact.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-fp-int-inexact.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-fp-int-inexact.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -1,7 +1,6 @@\n /* Test -fno-fp-int-builtin-inexact.  */\n /* { dg-do run } */\n /* { dg-options \"-fno-fp-int-builtin-inexact\" } */\n-/* { dg-add-options c99_runtime } */\n /* { dg-require-effective-target fenv_exceptions } */\n \n #include <fenv.h>"}, {"sha": "f6ac248620df9fc61c139f0db7ec134bb4085e29", "filename": "gcc/testsuite/gcc.dg/torture/builtin-integral-1.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-integral-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-integral-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-integral-1.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -10,7 +10,6 @@\n    that various math functions are marked const/pure and can be\n    folded.  */\n /* { dg-options \"-ffinite-math-only -fno-math-errno\" } */\n-/* { dg-add-options c99_runtime } */\n /* { dg-require-effective-target c99_runtime } */\n /* { dg-skip-if \"\" { *-*-* } { \"-O0\" } { \"\" } } */\n "}, {"sha": "e422b0c187ccf8ffaf09ebcd5fa3446cd358a7c1", "filename": "gcc/testsuite/gcc.dg/torture/builtin-power-1.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-power-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-power-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-power-1.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -7,7 +7,6 @@\n \n /* { dg-do link } */\n /* { dg-options \"-ffast-math\" } */\n-/* { dg-add-options c99_runtime } */\n /* { dg-skip-if \"PR44214\" { *-*-* } { \"-O0\" } { \"\" } } */\n \n #include \"../builtins-config.h\""}, {"sha": "c36112a6567833e1fae6d002f8b86a188cb3cacc", "filename": "gcc/testsuite/gcc.dg/tree-ssa/copy-sign-1.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcopy-sign-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcopy-sign-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcopy-sign-1.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -1,7 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target c99_runtime } */\n /* { dg-options \"-O2 -ffast-math -fdump-tree-gimple\" } */\n-/* { dg-add-options c99_runtime } */\n float f(float x)\n {\n   return (x > 0.f ? -1.f : 1.f);"}, {"sha": "8990c188e0511b0ff0a93db7a89980a414b3abce", "filename": "gcc/testsuite/gcc.dg/tree-ssa/minmax-2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-2.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile } */\n /* { dg-options \"-O -fstrict-overflow -fdump-tree-optimized\" } */\n-/* { dg-add-options c99_runtime } */\n /* { dg-require-effective-target c99_runtime } */\n \n static int max(int a,int b){return (a<b)?b:a;}"}, {"sha": "a41f1baf25669a4fd301a586a49ba5e3c5b966ab", "filename": "gcc/testsuite/gcc.dg/tree-ssa/mult-abs-2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fmult-abs-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fmult-abs-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fmult-abs-2.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -1,7 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target c99_runtime } */\n /* { dg-options \"-O2 -ffast-math -fdump-tree-gimple\" } */\n-/* { dg-add-options c99_runtime } */\n \n float f(float x)\n {"}, {"sha": "89983c3e4a47e9ff9eba933cecdc9892ac56a050", "filename": "gcc/testsuite/gcc.target/i386/387-builtin-fp-int-inexact.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F387-builtin-fp-int-inexact.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F387-builtin-fp-int-inexact.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F387-builtin-fp-int-inexact.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -1,7 +1,6 @@\n /* Test -fno-fp-int-builtin-inexact for 387.  */\n /* { dg-do run } */\n /* { dg-options \"-O2 -mfancy-math-387 -mfpmath=387 -fno-fp-int-builtin-inexact\" } */\n-/* { dg-add-options c99_runtime } */\n /* { dg-require-effective-target fenv_exceptions } */\n \n #include \"../../gcc.dg/torture/builtin-fp-int-inexact.c\""}, {"sha": "06906d6932d92e42cb239d01fc952b1071c34051", "filename": "gcc/testsuite/gcc.target/i386/387-rint-inline-1.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F387-rint-inline-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F387-rint-inline-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F387-rint-inline-1.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -2,7 +2,6 @@\n    should be expanded when spurious \"inexact\" allowed.  */\n /* { dg-do compile } */\n /* { dg-options \"-O2 -mfancy-math-387 -mfpmath=387 -ffp-int-builtin-inexact\" } */\n-/* { dg-add-options c99_runtime } */\n \n #define TEST(FN, TYPE)\t\t\t\t\\\n   do\t\t\t\t\t\t\\"}, {"sha": "4cb82193916b65247ef3f13a466f599ceba6406e", "filename": "gcc/testsuite/gcc.target/i386/387-rint-inline-2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F387-rint-inline-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F387-rint-inline-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F387-rint-inline-2.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -2,7 +2,6 @@\n    should be expanded even when spurious \"inexact\" not allowed.  */\n /* { dg-do compile } */\n /* { dg-options \"-O2 -mfancy-math-387 -mfpmath=387 -fno-fp-int-builtin-inexact\" } */\n-/* { dg-add-options c99_runtime } */\n \n #define TEST(FN, TYPE)\t\t\t\t\\\n   do\t\t\t\t\t\t\\"}, {"sha": "bc7121119babbd7a3186735e799fb30a21bad540", "filename": "gcc/testsuite/gcc.target/i386/conversion.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fconversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fconversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fconversion.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -2,7 +2,6 @@\n \n /* { dg-do link } */\n /* { dg-options \"-ffast-math\" }  */\n-/* { dg-add-options c99_runtime } */\n \n #include \"../../gcc.dg/builtins-config.h\"\n "}, {"sha": "ec4b51cb921f4a14df306fddb8604d37b10bdd0b", "filename": "gcc/testsuite/gcc.target/i386/pr47312.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr47312.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr47312.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr47312.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -4,7 +4,6 @@\n /* { dg-require-effective-target xop } */\n /* { dg-require-effective-target c99_runtime } */\n /* { dg-options \"-O -flto -mno-sse3 -mxop\" } */\n-/* { dg-add-options c99_runtime } */\n \n extern double fma (double, double, double);\n extern float fmaf (float, float, float);"}, {"sha": "2226e6a231b8af0a8ef34f098af40c53778e9603", "filename": "gcc/testsuite/gcc.target/i386/sse2-builtin-fp-int-inexact.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-builtin-fp-int-inexact.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-builtin-fp-int-inexact.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-builtin-fp-int-inexact.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -1,7 +1,6 @@\n /* Test -fno-fp-int-builtin-inexact for SSE 2.  */\n /* { dg-do run } */\n /* { dg-options \"-O2 -msse2 -mfpmath=sse -fno-fp-int-builtin-inexact\" } */\n-/* { dg-add-options c99_runtime } */\n /* { dg-require-effective-target fenv_exceptions } */\n /* { dg-require-effective-target sse2 } */\n "}, {"sha": "23c979771cced074e683d476245f112f9a3d67f8", "filename": "gcc/testsuite/gcc.target/i386/sse2-rint-inline-1.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-rint-inline-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-rint-inline-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-rint-inline-1.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -2,7 +2,6 @@\n    should be expanded when spurious \"inexact\" allowed.  */\n /* { dg-do compile } */\n /* { dg-options \"-O2 -msse2 -mfpmath=sse -ffp-int-builtin-inexact\" } */\n-/* { dg-add-options c99_runtime } */\n /* { dg-require-effective-target sse2 } */\n \n #define TEST(FN, TYPE)\t\t\t\t\\"}, {"sha": "28968259dc49b9aea6d6bac09c6bac4e32b03914", "filename": "gcc/testsuite/gcc.target/i386/sse2-rint-inline-2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-rint-inline-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-rint-inline-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-rint-inline-2.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -2,7 +2,6 @@\n    should be expanded even when spurious \"inexact\" not allowed.  */\n /* { dg-do compile } */\n /* { dg-options \"-O2 -msse2 -mfpmath=sse -fno-fp-int-builtin-inexact\" } */\n-/* { dg-add-options c99_runtime } */\n /* { dg-require-effective-target sse2 } */\n \n #define TEST(FN, TYPE)\t\t\t\t\\"}, {"sha": "c1c8a19d4db81e17a94475b5c767e4a809c36bcf", "filename": "gcc/testsuite/gcc.target/i386/sse4_1-builtin-fp-int-inexact.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-builtin-fp-int-inexact.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-builtin-fp-int-inexact.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-builtin-fp-int-inexact.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -1,7 +1,6 @@\n /* Test -fno-fp-int-builtin-inexact for SSE 4.1.  */\n /* { dg-do run } */\n /* { dg-options \"-O2 -msse4.1 -mfpmath=sse -fno-fp-int-builtin-inexact\" } */\n-/* { dg-add-options c99_runtime } */\n /* { dg-require-effective-target fenv_exceptions } */\n /* { dg-require-effective-target sse4 } */\n "}, {"sha": "995c14cefa1b31703b6568b22a662f55b07555f7", "filename": "gcc/testsuite/gcc.target/i386/sse4_1-rint-inline.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-rint-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-rint-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-rint-inline.c?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -2,7 +2,6 @@\n    when spurious \"inexact\" not allowed.  */\n /* { dg-do compile } */\n /* { dg-options \"-O2 -msse4.1 -mfpmath=sse -fno-fp-int-builtin-inexact\" } */\n-/* { dg-add-options c99_runtime } */\n /* { dg-require-effective-target sse4 } */\n \n #define TEST(FN, TYPE)\t\t\t\t\\"}, {"sha": "6f224fa81416e9f3f402abe3525e86df02313e6a", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855c21cb9af3e00ac10533f0525b038cf77eaa49/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=855c21cb9af3e00ac10533f0525b038cf77eaa49", "patch": "@@ -7478,18 +7478,6 @@ proc check_effective_target_fd_truncate { } {\n     return [check_runtime chsize $prog]\n }\n \n-# Add to FLAGS all the target-specific flags needed to access the c99 runtime.\n-\n-proc add_options_for_c99_runtime { flags } {\n-    if { [istarget *-*-solaris2*] } {\n-\treturn \"$flags -std=c99\"\n-    }\n-    if { [istarget powerpc-*-darwin*] } {\n-\treturn \"$flags -mmacosx-version-min=10.3\"\n-    }\n-    return $flags\n-}\n-\n # Add to FLAGS all the target-specific flags needed to enable\n # full IEEE compliance mode.\n \n@@ -7571,8 +7559,7 @@ proc check_effective_target_c99_runtime { } {\n \t    #error !HAVE_C99_RUNTIME\n \t    #endif\n \t}\n-\tcheck_no_compiler_messages_nocache c99_runtime assembly \\\n-\t    $contents [add_options_for_c99_runtime \"\"]\n+\tcheck_no_compiler_messages_nocache c99_runtime assembly $contents\n     }]\n }\n "}]}