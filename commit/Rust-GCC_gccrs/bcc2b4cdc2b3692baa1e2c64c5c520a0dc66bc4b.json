{"sha": "bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmNjMmI0Y2RjMmIzNjkyYmFhMWUyYzY0YzVjNTIwYTBkYzY2YmM0Yg==", "commit": {"author": {"name": "Mike Stump", "email": "mikestump@comcast.net", "date": "2012-04-10T08:01:19Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2012-04-10T08:01:19Z"}, "message": "Don't use CRLF endings.\n\n\t* gcc.dg/tree-ssa/vrp59.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp60.c: Likewise.\n\t* gnat.dg/aggr11.adb: Likewise.\n\t* gnat.dg/aggr11_pkg.ads: Likewise.\n\t* gnat.dg/aggr15.adb: Likewise.\n\t* gnat.dg/aggr15.ads: Likewise.\n\t* gnat.dg/aggr17.adb: Likewise.\n\t* gnat.dg/aggr18.adb: Likewise.\n\t* gnat.dg/array14.adb: Likewise.\n\t* gnat.dg/array14.ads: Likewise.\n\t* gnat.dg/array14_pkg.ads: Likewise.\n\t* gnat.dg/array19.adb: Likewise.\n\t* gnat.dg/array19.ads: Likewise.\n\t* gnat.dg/discr27.adb: Likewise.\n\t* gnat.dg/discr27.ads: Likewise.\n\t* gnat.dg/discr35.adb: Likewise.\n\t* gnat.dg/discr35.ads: Likewise.\n\t* gnat.dg/discr6.adb: Likewise.\n\t* gnat.dg/discr6_pkg.ads: Likewise.\n\t* gnat.dg/import1.adb: Likewise.\n\t* gnat.dg/import1.ads: Likewise.\n\t* gnat.dg/loop_address2.adb: Likewise.\n\t* gnat.dg/opt7.adb: Likewise.\n\t* gnat.dg/opt7.ads: Likewise.\n\t* gnat.dg/pointer_variable_bounds.adb: Likewise.\n\t* gnat.dg/pointer_variable_bounds.ads: Likewise.\n\t* gnat.dg/rep_clause2.adb: Likewise.\n\t* gnat.dg/rep_clause2.ads: Likewise.\n\t* gnat.dg/slice2.adb: Likewise.\n\t* gnat.dg/slice2.ads: Likewise.\n\t* gnat.dg/slice6.adb: Likewise.\n\t* gnat.dg/slice6_pkg.ads: Likewise.\n\t* gnat.dg/specs/unchecked_union2.ads: Likewise.\n\t* gnat.dg/taft_type2.adb: Likewise.\n\t* gnat.dg/taft_type2.ads: Likewise.\n\t* gnat.dg/taft_type2_pkg.ads: Likewise.\n\t* gnat.dg/volatile10.adb: Likewise.\n\t* gnat.dg/volatile10_pkg.ads: Likewise.\n\nFrom-SVN: r186265", "tree": {"sha": "3023cc13450ff635607f7b0b3755c23f2cb0e6a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3023cc13450ff635607f7b0b3755c23f2cb0e6a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/comments", "author": null, "committer": null, "parents": [{"sha": "b832b14db0d5c9c0bb51096a29540cabce9ad7eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b832b14db0d5c9c0bb51096a29540cabce9ad7eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b832b14db0d5c9c0bb51096a29540cabce9ad7eb"}], "stats": {"total": 1492, "additions": 764, "deletions": 728}, "files": [{"sha": "e1ea7f5f86ba80b195005463851cdd7dc213d15a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -3,6 +3,42 @@\n \t* g++.dg/cpp0x/udlit-raw-op.C: Don't use CRLF endings.\n \t* gcc.dg/tree-ssa/vrp59.c: Likewise.\n \t* gcc.dg/tree-ssa/vrp60.c: Likewise.\n+\t* gnat.dg/aggr11.adb: Likewise.\n+\t* gnat.dg/aggr11_pkg.ads: Likewise.\n+\t* gnat.dg/aggr15.adb: Likewise.\n+\t* gnat.dg/aggr15.ads: Likewise.\n+\t* gnat.dg/aggr17.adb: Likewise.\n+\t* gnat.dg/aggr18.adb: Likewise.\n+\t* gnat.dg/array14.adb: Likewise.\n+\t* gnat.dg/array14.ads: Likewise.\n+\t* gnat.dg/array14_pkg.ads: Likewise.\n+\t* gnat.dg/array19.adb: Likewise.\n+\t* gnat.dg/array19.ads: Likewise.\n+\t* gnat.dg/discr27.adb: Likewise.\n+\t* gnat.dg/discr27.ads: Likewise.\n+\t* gnat.dg/discr35.adb: Likewise.\n+\t* gnat.dg/discr35.ads: Likewise.\n+\t* gnat.dg/discr6.adb: Likewise.\n+\t* gnat.dg/discr6_pkg.ads: Likewise.\n+\t* gnat.dg/import1.adb: Likewise.\n+\t* gnat.dg/import1.ads: Likewise.\n+\t* gnat.dg/loop_address2.adb: Likewise.\n+\t* gnat.dg/opt7.adb: Likewise.\n+\t* gnat.dg/opt7.ads: Likewise.\n+\t* gnat.dg/pointer_variable_bounds.adb: Likewise.\n+\t* gnat.dg/pointer_variable_bounds.ads: Likewise.\n+\t* gnat.dg/rep_clause2.adb: Likewise.\n+\t* gnat.dg/rep_clause2.ads: Likewise.\n+\t* gnat.dg/slice2.adb: Likewise.\n+\t* gnat.dg/slice2.ads: Likewise.\n+\t* gnat.dg/slice6.adb: Likewise.\n+\t* gnat.dg/slice6_pkg.ads: Likewise.\n+\t* gnat.dg/specs/unchecked_union2.ads: Likewise.\n+\t* gnat.dg/taft_type2.adb: Likewise.\n+\t* gnat.dg/taft_type2.ads: Likewise.\n+\t* gnat.dg/taft_type2_pkg.ads: Likewise.\n+\t* gnat.dg/volatile10.adb: Likewise.\n+\t* gnat.dg/volatile10_pkg.ads: Likewise.\n \n \t* gcc.dg/dll-8.c: Remove execute permissions.\n \t* g++.dg/ext/dllexport5.C: Likewise."}, {"sha": "12547063c665bb4201eccd0c88b62f9755340d6e", "filename": "gcc/testsuite/gnat.dg/aggr11.adb", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Faggr11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Faggr11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faggr11.adb?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,17 +1,17 @@\n--- { dg-do compile }\r\n--- { dg-options \"-O\" }\r\n-\r\n-with Aggr11_Pkg; use Aggr11_Pkg;\r\n-\r\n-procedure Aggr11 is\r\n-\r\n-  A : Arr := ((1 => (Kind  => No_Error, B => True),\r\n-               2 => (Kind => Error),\r\n-               3 => (Kind => Error),\r\n-               4 => (Kind  => No_Error, B => True),\r\n-               5 => (Kind  => No_Error, B => True),\r\n-               6 => (Kind  => No_Error, B => True)));\r\n-\r\n-begin\r\n-   null;\r\n-end;\r\n+-- { dg-do compile }\n+-- { dg-options \"-O\" }\n+\n+with Aggr11_Pkg; use Aggr11_Pkg;\n+\n+procedure Aggr11 is\n+\n+  A : Arr := ((1 => (Kind  => No_Error, B => True),\n+               2 => (Kind => Error),\n+               3 => (Kind => Error),\n+               4 => (Kind  => No_Error, B => True),\n+               5 => (Kind  => No_Error, B => True),\n+               6 => (Kind  => No_Error, B => True)));\n+\n+begin\n+   null;\n+end;"}, {"sha": "139c9efdac6da624e35b9eb3b1ecb563d4b5499d", "filename": "gcc/testsuite/gnat.dg/aggr11_pkg.ads", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Faggr11_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Faggr11_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faggr11_pkg.ads?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,14 +1,14 @@\n-package Aggr11_Pkg is\r\n-\r\n-   type Error_Type is (No_Error, Error);\r\n-\r\n-   type Rec (Kind : Error_Type := No_Error) is record\r\n-     case Kind is\r\n-       when Error => null;\r\n-       when others => B : Boolean;\r\n-     end case;\r\n-   end record;\r\n-\r\n-   type Arr is array (1..6) of Rec;\r\n-\r\n-end Aggr11_Pkg;\r\n+package Aggr11_Pkg is\n+\n+   type Error_Type is (No_Error, Error);\n+\n+   type Rec (Kind : Error_Type := No_Error) is record\n+     case Kind is\n+       when Error => null;\n+       when others => B : Boolean;\n+     end case;\n+   end record;\n+\n+   type Arr is array (1..6) of Rec;\n+\n+end Aggr11_Pkg;"}, {"sha": "a4eeb231ac21fe97ce95f5d4f253cb3b30f62594", "filename": "gcc/testsuite/gnat.dg/aggr15.adb", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Faggr15.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Faggr15.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faggr15.adb?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,18 +1,18 @@\n--- { dg-do compile }\r\n--- { dg-options \"-gnatws\" }\r\n-\r\n-package body Aggr15 is\r\n-\r\n-  function CREATE return DATA_T is\r\n-    D : DATA_T;\r\n-  begin\r\n-    return D;\r\n-  end;\r\n-\r\n-  function ALL_CREATE return ALL_DATA_T is\r\n-    C : constant ALL_DATA_T := (others => (others => Create));\r\n-  begin\r\n-    return C;\r\n-  end;\r\n-\r\n-end Aggr15;\r\n+-- { dg-do compile }\n+-- { dg-options \"-gnatws\" }\n+\n+package body Aggr15 is\n+\n+  function CREATE return DATA_T is\n+    D : DATA_T;\n+  begin\n+    return D;\n+  end;\n+\n+  function ALL_CREATE return ALL_DATA_T is\n+    C : constant ALL_DATA_T := (others => (others => Create));\n+  begin\n+    return C;\n+  end;\n+\n+end Aggr15;"}, {"sha": "70eb22398ee2fc779bbb3060fdd73325d08a1c3e", "filename": "gcc/testsuite/gnat.dg/aggr15.ads", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Faggr15.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Faggr15.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faggr15.ads?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,15 +1,15 @@\n-package Aggr15 is\r\n-\r\n-  type T is tagged record\r\n-    I : Integer;\r\n-  end record;\r\n-\r\n-  type DATA_T is record\r\n-    D : T;\r\n-  end record;\r\n-\r\n-  type ALL_DATA_T is array (1..2, 1..2) of DATA_T;\r\n-\r\n-  function ALL_CREATE return ALL_DATA_T;\r\n-\r\n-end Aggr15;\r\n+package Aggr15 is\n+\n+  type T is tagged record\n+    I : Integer;\n+  end record;\n+\n+  type DATA_T is record\n+    D : T;\n+  end record;\n+\n+  type ALL_DATA_T is array (1..2, 1..2) of DATA_T;\n+\n+  function ALL_CREATE return ALL_DATA_T;\n+\n+end Aggr15;"}, {"sha": "89e385e7983a5526d4a15f7c8f2ca269e421ace4", "filename": "gcc/testsuite/gnat.dg/aggr17.adb", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Faggr17.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Faggr17.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faggr17.adb?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,28 +1,28 @@\n--- { dg-do compile }\r\n--- { dg-options \"-gnatws\" }\r\n-\r\n-procedure Aggr17 is\r\n-\r\n-   type Enum is (A, B);\r\n-\r\n-   type Rec (D : Enum := Enum'First) is record\r\n-      case D is\r\n-         when A => X : Integer;\r\n-         when B => null;\r\n-      end case;\r\n-   end record;\r\n-   for Rec'Size use 128;\r\n-   pragma Volatile (Rec);\r\n-\r\n-   type Config_T (D : Enum := Enum'First) is record\r\n-      N : Natural;\r\n-      R : Rec (D);\r\n-   end record;\r\n-\r\n-   C : constant Config_T := (D => A, N => 1, R => (D => A, X => 0));\r\n-\r\n-   type Arr is array (Natural range 1 .. C.N) of Boolean;\r\n-\r\n-begin\r\n-   null;\r\n-end;\r\n+-- { dg-do compile }\n+-- { dg-options \"-gnatws\" }\n+\n+procedure Aggr17 is\n+\n+   type Enum is (A, B);\n+\n+   type Rec (D : Enum := Enum'First) is record\n+      case D is\n+         when A => X : Integer;\n+         when B => null;\n+      end case;\n+   end record;\n+   for Rec'Size use 128;\n+   pragma Volatile (Rec);\n+\n+   type Config_T (D : Enum := Enum'First) is record\n+      N : Natural;\n+      R : Rec (D);\n+   end record;\n+\n+   C : constant Config_T := (D => A, N => 1, R => (D => A, X => 0));\n+\n+   type Arr is array (Natural range 1 .. C.N) of Boolean;\n+\n+begin\n+   null;\n+end;"}, {"sha": "6b5281e41648ca45ef41c0c291bd33e40649dc4f", "filename": "gcc/testsuite/gnat.dg/aggr18.adb", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Faggr18.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Faggr18.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faggr18.adb?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,28 +1,28 @@\n--- { dg-do compile }\r\n--- { dg-options \"-gnatws\" }\r\n-\r\n-procedure Aggr18 is\r\n-\r\n-   type Enum is (A, B);\r\n-\r\n-   type Rec (D : Enum := Enum'First) is record\r\n-      case D is\r\n-         when A => X : Integer;\r\n-         when B => null;\r\n-      end case;\r\n-   end record;\r\n-   for Rec'Size use 128;\r\n-   pragma Volatile (Rec);\r\n-\r\n-   type Config_T (D : Enum := Enum'First) is record\r\n-      N : Natural;\r\n-      R : Rec (D);\r\n-   end record;\r\n-\r\n-   C : Config_T := (D => A, N => 1, R => (D => A, X => 0));\r\n-\r\n-   type Arr is array (Natural range 1 .. C.N) of Boolean;\r\n-\r\n-begin\r\n-   null;\r\n-end;\r\n+-- { dg-do compile }\n+-- { dg-options \"-gnatws\" }\n+\n+procedure Aggr18 is\n+\n+   type Enum is (A, B);\n+\n+   type Rec (D : Enum := Enum'First) is record\n+      case D is\n+         when A => X : Integer;\n+         when B => null;\n+      end case;\n+   end record;\n+   for Rec'Size use 128;\n+   pragma Volatile (Rec);\n+\n+   type Config_T (D : Enum := Enum'First) is record\n+      N : Natural;\n+      R : Rec (D);\n+   end record;\n+\n+   C : Config_T := (D => A, N => 1, R => (D => A, X => 0));\n+\n+   type Arr is array (Natural range 1 .. C.N) of Boolean;\n+\n+begin\n+   null;\n+end;"}, {"sha": "2d45cf10db4209fed73be349d3d036744bc67b59", "filename": "gcc/testsuite/gnat.dg/array14.adb", "status": "modified", "additions": 35, "deletions": 35, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Farray14.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Farray14.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Farray14.adb?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,35 +1,35 @@\n--- { dg-do compile }\r\n--- { dg-options \"-gnatws\" }\r\n-\r\n-with Array14_Pkg; use Array14_Pkg;\r\n-\r\n-package body Array14 is\r\n-\r\n-  package Nested is\r\n-\r\n-    Length : constant SSE.Storage_Count := Length2;\r\n-\r\n-    subtype Encoded_Index_Type is SSE.Storage_Count range 1 .. Length;\r\n-    subtype Encoded_Type is SSE.Storage_Array (Encoded_Index_Type'Range);\r\n-\r\n-    procedure Encode (Input : in Integer; Output : out Encoded_Type);\r\n-\r\n-  end;\r\n-\r\n-  package body Nested is\r\n-\r\n-    procedure Encode (Input : in Integer; Output : out Encoded_Type) is\r\n-    begin\r\n-      Encode2 (Input, Output);\r\n-    end;\r\n-\r\n-  end;\r\n-\r\n-  procedure Init is\r\n-    O : Nested.Encoded_Type;\r\n-    for O'Alignment use 4;\r\n-  begin\r\n-    null;\r\n-  end;\r\n-\r\n-end Array14;\r\n+-- { dg-do compile }\n+-- { dg-options \"-gnatws\" }\n+\n+with Array14_Pkg; use Array14_Pkg;\n+\n+package body Array14 is\n+\n+  package Nested is\n+\n+    Length : constant SSE.Storage_Count := Length2;\n+\n+    subtype Encoded_Index_Type is SSE.Storage_Count range 1 .. Length;\n+    subtype Encoded_Type is SSE.Storage_Array (Encoded_Index_Type'Range);\n+\n+    procedure Encode (Input : in Integer; Output : out Encoded_Type);\n+\n+  end;\n+\n+  package body Nested is\n+\n+    procedure Encode (Input : in Integer; Output : out Encoded_Type) is\n+    begin\n+      Encode2 (Input, Output);\n+    end;\n+\n+  end;\n+\n+  procedure Init is\n+    O : Nested.Encoded_Type;\n+    for O'Alignment use 4;\n+  begin\n+    null;\n+  end;\n+\n+end Array14;"}, {"sha": "051a52e56ae66a66dcaf327fc9f722bc26c5fba7", "filename": "gcc/testsuite/gnat.dg/array14.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Farray14.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Farray14.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Farray14.ads?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,5 +1,5 @@\n-package Array14 is\r\n-\r\n-  procedure Init;\r\n-\r\n-end Array14;\r\n+package Array14 is\n+\n+  procedure Init;\n+\n+end Array14;"}, {"sha": "7186c5dc82c2a01881185c65e2a2564c23f924dc", "filename": "gcc/testsuite/gnat.dg/array14_pkg.ads", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Farray14_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Farray14_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Farray14_pkg.ads?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,16 +1,16 @@\n-with System.Storage_Elements;\r\n-\r\n-package Array14_Pkg is\r\n-\r\n-  package SSE renames System.Storage_Elements;\r\n-\r\n-  function Parity_Byte_Count return SSE.Storage_Count;\r\n-\r\n-  Length2 : constant SSE.Storage_Count := Parity_Byte_Count;\r\n-\r\n-  subtype Encoded_Index_Type2 is SSE.Storage_Count range 1 .. Length2;\r\n-  subtype Encoded_Type2 is SSE.Storage_Array (Encoded_Index_Type2'Range);\r\n-\r\n-  procedure Encode2 (Input : in Integer; Output : out Encoded_Type2);\r\n-\r\n-end Array14_Pkg;\r\n+with System.Storage_Elements;\n+\n+package Array14_Pkg is\n+\n+  package SSE renames System.Storage_Elements;\n+\n+  function Parity_Byte_Count return SSE.Storage_Count;\n+\n+  Length2 : constant SSE.Storage_Count := Parity_Byte_Count;\n+\n+  subtype Encoded_Index_Type2 is SSE.Storage_Count range 1 .. Length2;\n+  subtype Encoded_Type2 is SSE.Storage_Array (Encoded_Index_Type2'Range);\n+\n+  procedure Encode2 (Input : in Integer; Output : out Encoded_Type2);\n+\n+end Array14_Pkg;"}, {"sha": "8667a3f06502b21feb3480a5f35c6528cf09757e", "filename": "gcc/testsuite/gnat.dg/array19.adb", "status": "modified", "additions": 34, "deletions": 34, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Farray19.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Farray19.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Farray19.adb?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,34 +1,34 @@\n--- { dg-do compile }\r\n-\r\n-package body Array19 is\r\n-\r\n-   function N return Integer is\r\n-   begin\r\n-      return 1;\r\n-   end;\r\n-\r\n-   type Array_Type is array (1 .. N) of Float;\r\n-\r\n-   type Enum is (One, Two);\r\n-\r\n-   type Rec (D : Enum := Enum'First) is record\r\n-      case D is\r\n-         when One => null;\r\n-         when Two => A : Array_Type;\r\n-      end case;\r\n-   end record;\r\n-\r\n-   procedure Proc is\r\n-\r\n-      R : Rec;\r\n-\r\n-      function F return Array_Type is\r\n-      begin\r\n-         return (others => 0.0);\r\n-      end F;\r\n-\r\n-   begin\r\n-      R.A := F;\r\n-   end;\r\n-\r\n-end Array19;\r\n+-- { dg-do compile }\n+\n+package body Array19 is\n+\n+   function N return Integer is\n+   begin\n+      return 1;\n+   end;\n+\n+   type Array_Type is array (1 .. N) of Float;\n+\n+   type Enum is (One, Two);\n+\n+   type Rec (D : Enum := Enum'First) is record\n+      case D is\n+         when One => null;\n+         when Two => A : Array_Type;\n+      end case;\n+   end record;\n+\n+   procedure Proc is\n+\n+      R : Rec;\n+\n+      function F return Array_Type is\n+      begin\n+         return (others => 0.0);\n+      end F;\n+\n+   begin\n+      R.A := F;\n+   end;\n+\n+end Array19;"}, {"sha": "fa24aae08ac6cbd691ee5fdea090f6a49eba05b4", "filename": "gcc/testsuite/gnat.dg/array19.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Farray19.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Farray19.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Farray19.ads?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,5 +1,5 @@\n-package Array19 is\r\n-\r\n-   procedure Proc;\r\n-\r\n-end Array19;\r\n+package Array19 is\n+\n+   procedure Proc;\n+\n+end Array19;"}, {"sha": "4b77f8efab9910f9e3098a60e545b92acf9b45d2", "filename": "gcc/testsuite/gnat.dg/discr27.adb", "status": "modified", "additions": 33, "deletions": 33, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr27.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr27.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr27.adb?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,33 +1,33 @@\n--- { dg-do compile }\r\n-\r\n-package body Discr27 is\r\n-\r\n-   subtype Index is Positive range 1..4096;\r\n-\r\n-   function F return String is\r\n-      S : String(1..1) := (others =>'w');\r\n-   begin\r\n-      return S;\r\n-   end;\r\n-\r\n-   type Enum is (One, Two);\r\n-\r\n-   type Rec (D : Enum  := One; Len : Index := 1) is record\r\n-      case D is\r\n-          when One => I : Integer;\r\n-          when Two => A : String(1..Len);\r\n-      end case;\r\n-   end record;\r\n-\r\n-   procedure Nothing is\r\n-      M : constant String := F;\r\n-      C : constant Rec := (Two, M'Length, M);\r\n-   begin\r\n-      null;\r\n-   end;\r\n-\r\n-   procedure Proc is begin\r\n-      null;\r\n-   end;\r\n-\r\n-end Discr27;\r\n+-- { dg-do compile }\n+\n+package body Discr27 is\n+\n+   subtype Index is Positive range 1..4096;\n+\n+   function F return String is\n+      S : String(1..1) := (others =>'w');\n+   begin\n+      return S;\n+   end;\n+\n+   type Enum is (One, Two);\n+\n+   type Rec (D : Enum  := One; Len : Index := 1) is record\n+      case D is\n+          when One => I : Integer;\n+          when Two => A : String(1..Len);\n+      end case;\n+   end record;\n+\n+   procedure Nothing is\n+      M : constant String := F;\n+      C : constant Rec := (Two, M'Length, M);\n+   begin\n+      null;\n+   end;\n+\n+   procedure Proc is begin\n+      null;\n+   end;\n+\n+end Discr27;"}, {"sha": "1d3c4e99979bc1a92c9e2a00d95d3cfe87c1568d", "filename": "gcc/testsuite/gnat.dg/discr27.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr27.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr27.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr27.ads?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,5 +1,5 @@\n-package Discr27 is\r\n-\r\n-   procedure Proc;\r\n-\r\n-end Discr27;\r\n+package Discr27 is\n+\n+   procedure Proc;\n+\n+end Discr27;"}, {"sha": "16bacd6c19b0fdd61c6aa0334bbe9caa9b2b1eee", "filename": "gcc/testsuite/gnat.dg/discr35.adb", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr35.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr35.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr35.adb?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,17 +1,17 @@\n--- { dg-do compile }\r\n-\r\n-package body Discr35 is\r\n-\r\n-   procedure Proc1 is\r\n-     R : Rec2 := Null_Rec2;\r\n-   begin\r\n-     null;\r\n-   end;\r\n-\r\n-   procedure Proc2 is\r\n-     R : Rec2;\r\n-   begin\r\n-     R := Null_Rec2;\r\n-   end;\r\n-\r\n-end Discr35;\r\n+-- { dg-do compile }\n+\n+package body Discr35 is\n+\n+   procedure Proc1 is\n+     R : Rec2 := Null_Rec2;\n+   begin\n+     null;\n+   end;\n+\n+   procedure Proc2 is\n+     R : Rec2;\n+   begin\n+     R := Null_Rec2;\n+   end;\n+\n+end Discr35;"}, {"sha": "7cde6cd66c7e8770ed987b578a238dea759b65d2", "filename": "gcc/testsuite/gnat.dg/discr35.ads", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr35.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr35.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr35.ads?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,25 +1,25 @@\n-package Discr35 is\r\n-\r\n-  type Rec1 is tagged null record;\r\n-\r\n-  type Enum is (One, Two);\r\n-\r\n-  type Rec2 (D : Enum := One) is\r\n-  record\r\n-    case D is\r\n-      when One => null;\r\n-      when Two => R : Rec1;\r\n-    end case;\r\n-  end record;\r\n-\r\n-   Null_Rec2 : Constant Rec2;\r\n-\r\n-   procedure Proc1;\r\n-\r\n-   procedure Proc2;\r\n-\r\n-private\r\n-\r\n-   Null_Rec2 : Constant Rec2 := (D => One);\r\n-\r\n-end Discr35;\r\n+package Discr35 is\n+\n+  type Rec1 is tagged null record;\n+\n+  type Enum is (One, Two);\n+\n+  type Rec2 (D : Enum := One) is\n+  record\n+    case D is\n+      when One => null;\n+      when Two => R : Rec1;\n+    end case;\n+  end record;\n+\n+   Null_Rec2 : Constant Rec2;\n+\n+   procedure Proc1;\n+\n+   procedure Proc2;\n+\n+private\n+\n+   Null_Rec2 : Constant Rec2 := (D => One);\n+\n+end Discr35;"}, {"sha": "52a94b1d6ad85fc8b32a4338bd4e307e08454ace", "filename": "gcc/testsuite/gnat.dg/discr6.adb", "status": "modified", "additions": 33, "deletions": 33, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr6.adb?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,33 +1,33 @@\n--- { dg-do compile }\r\n--- { dg-options \"-gnatdm -gnatws\" }\r\n-\r\n-with Discr6_Pkg;\r\n-\r\n-procedure Discr6 is\r\n-\r\n-  type T_Bit is range 0..1;\r\n-  type T_Entier_16 is range -2**15 .. 2**15-1;\r\n-\r\n-  package My_Q is new Discr6_Pkg(T_Entier_16);\r\n-\r\n-  type T_Valeur is (BIT, Entier_16);\r\n-\r\n-  type R(D : T_Valeur) is record\r\n-    case D is\r\n-      when BIT => V_BIT : T_Bit;\r\n-      when Entier_16 => V_E16 : T_Entier_16;\r\n-    end case;\r\n-  end record;\r\n-  for R use record\r\n-    V_BIT at 0 range 0..7;\r\n-    V_E16 at 0 range 0..15;\r\n-    D     at 8 range 0..7;\r\n-  end record;\r\n-  for R'size use 128;\r\n-\r\n-  A : R(Entier_16);\r\n-  I : Integer;\r\n-\r\n-begin\r\n-  I := My_Q.X(A.V_E16);\r\n-end;\r\n+-- { dg-do compile }\n+-- { dg-options \"-gnatdm -gnatws\" }\n+\n+with Discr6_Pkg;\n+\n+procedure Discr6 is\n+\n+  type T_Bit is range 0..1;\n+  type T_Entier_16 is range -2**15 .. 2**15-1;\n+\n+  package My_Q is new Discr6_Pkg(T_Entier_16);\n+\n+  type T_Valeur is (BIT, Entier_16);\n+\n+  type R(D : T_Valeur) is record\n+    case D is\n+      when BIT => V_BIT : T_Bit;\n+      when Entier_16 => V_E16 : T_Entier_16;\n+    end case;\n+  end record;\n+  for R use record\n+    V_BIT at 0 range 0..7;\n+    V_E16 at 0 range 0..15;\n+    D     at 8 range 0..7;\n+  end record;\n+  for R'size use 128;\n+\n+  A : R(Entier_16);\n+  I : Integer;\n+\n+begin\n+  I := My_Q.X(A.V_E16);\n+end;"}, {"sha": "81404d4613f9f1adff360a9662989b9b157e77a3", "filename": "gcc/testsuite/gnat.dg/discr6_pkg.ads", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr6_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr6_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr6_pkg.ads?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,16 +1,16 @@\n-generic\r\n-\r\n-  type T(<>) is private;\r\n-\r\n-package Discr6_Pkg is\r\n-\r\n-  function X (A : T) return Integer;\r\n-\r\n-  pragma Interface(C, X);\r\n-  pragma IMPORT_FUNCTION (\r\n-         INTERNAL         => X,\r\n-         EXTERNAL         => X,\r\n-         PARAMETER_TYPES  => (T),\r\n-         MECHANISM        => (Descriptor(S)));\r\n-\r\n-end Discr6_Pkg;\r\n+generic\n+\n+  type T(<>) is private;\n+\n+package Discr6_Pkg is\n+\n+  function X (A : T) return Integer;\n+\n+  pragma Interface(C, X);\n+  pragma IMPORT_FUNCTION (\n+         INTERNAL         => X,\n+         EXTERNAL         => X,\n+         PARAMETER_TYPES  => (T),\n+         MECHANISM        => (Descriptor(S)));\n+\n+end Discr6_Pkg;"}, {"sha": "6de432dcab4836e5736b60c122d696b642b2dff1", "filename": "gcc/testsuite/gnat.dg/import1.adb", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fimport1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fimport1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fimport1.adb?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,17 +1,17 @@\n--- { dg-do compile }\r\n--- { dg-options \"-g\" }\r\n-\r\n-package body Import1 is\r\n-\r\n-   procedure Create (Bounds : Arr) is\r\n-      type Bound_Array is array (Bounds'Range) of Integer;\r\n-\r\n-      procedure Proc (Ptr : access Bound_Array);\r\n-      pragma Import (C, Proc);\r\n-\r\n-      Temp : aliased Bound_Array;\r\n-   begin\r\n-      Proc (Temp'Access);\r\n-   end;\r\n-\r\n-end Import1;\r\n+-- { dg-do compile }\n+-- { dg-options \"-g\" }\n+\n+package body Import1 is\n+\n+   procedure Create (Bounds : Arr) is\n+      type Bound_Array is array (Bounds'Range) of Integer;\n+\n+      procedure Proc (Ptr : access Bound_Array);\n+      pragma Import (C, Proc);\n+\n+      Temp : aliased Bound_Array;\n+   begin\n+      Proc (Temp'Access);\n+   end;\n+\n+end Import1;"}, {"sha": "3afcfcc83da5a5d6e9f349f5c4a8e8fcbd79c0bb", "filename": "gcc/testsuite/gnat.dg/import1.ads", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fimport1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fimport1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fimport1.ads?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,7 +1,7 @@\n-package Import1 is\r\n-\r\n-   type Arr is array (Positive range <>) of Integer;\r\n-\r\n-   procedure Create (Bounds : Arr);\r\n-\r\n-end Import1;\r\n+package Import1 is\n+\n+   type Arr is array (Positive range <>) of Integer;\n+\n+   procedure Create (Bounds : Arr);\n+\n+end Import1;"}, {"sha": "57bed171ecde5141919cd5054be674e5d9cc8831", "filename": "gcc/testsuite/gnat.dg/loop_address2.adb", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Floop_address2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Floop_address2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Floop_address2.adb?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,26 +1,26 @@\n--- { dg-do compile }\r\n--- { dg-options \"-O\" }\r\n-\r\n-with System, Ada.Unchecked_Conversion;\r\n-with System.Storage_Elements; use System.Storage_Elements;\r\n-\r\n-procedure Loop_Address2 is\r\n-\r\n-  type Ptr is access all Integer;\r\n-\r\n-  function To_Ptr is new Ada.Unchecked_Conversion (System.Address, Ptr);\r\n-\r\n-  function F (BM : System.Address; I : Integer) return System.Address is\r\n-  begin\r\n-    return BM + Storage_Offset (4*I);\r\n-  end;\r\n-\r\n-  B : Integer;\r\n-  P : Ptr;\r\n-\r\n-begin\r\n-  for I in 0 .. 2 loop\r\n-    P := To_Ptr (F (B'Address, I));\r\n-    P.all := 0;\r\n-  end loop;\r\n-end ;\r\n+-- { dg-do compile }\n+-- { dg-options \"-O\" }\n+\n+with System, Ada.Unchecked_Conversion;\n+with System.Storage_Elements; use System.Storage_Elements;\n+\n+procedure Loop_Address2 is\n+\n+  type Ptr is access all Integer;\n+\n+  function To_Ptr is new Ada.Unchecked_Conversion (System.Address, Ptr);\n+\n+  function F (BM : System.Address; I : Integer) return System.Address is\n+  begin\n+    return BM + Storage_Offset (4*I);\n+  end;\n+\n+  B : Integer;\n+  P : Ptr;\n+\n+begin\n+  for I in 0 .. 2 loop\n+    P := To_Ptr (F (B'Address, I));\n+    P.all := 0;\n+  end loop;\n+end ;"}, {"sha": "51b56f32bf2cc41be3be90edb22d90a1204449e0", "filename": "gcc/testsuite/gnat.dg/opt7.adb", "status": "modified", "additions": 44, "deletions": 44, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fopt7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fopt7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt7.adb?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,44 +1,44 @@\n--- { dg-do compile }\r\n--- { dg-options \"-Os -g\" }\r\n-\r\n-with Opt7_Pkg;\r\n-\r\n-package body Opt7 is\r\n-\r\n-   procedure Parse (Str       :     String;\r\n-                    Time_Type : out time_t;\r\n-                    Abs_Time  : out Time;\r\n-                    Delt_Time : out Duration) is\r\n-      Year         : Year_Number;\r\n-      Month        : Month_Number;\r\n-      Day          : Day_Number;\r\n-      Minute       : Integer := 0;\r\n-      Idx          : Integer := Str'First;\r\n-      Ch           : Character := Str (Idx);\r\n-      Current_Time : Time;\r\n-\r\n-   begin\r\n-      if Ch = '-' then\r\n-         Time_Type := Absolute_Time;\r\n-         Current_Time := Clock;\r\n-         Day   := Ada.Calendar.Day (Current_Time);\r\n-         Month := Ada.Calendar.Month (Current_Time);\r\n-         Year  := Ada.Calendar.Year (Current_Time);\r\n-      else\r\n-         Time_Type := Delta_Time;\r\n-      end if;\r\n-      while Ch in '0' .. '9' loop\r\n-         Minute := Minute + Character'Pos (Ch);\r\n-         Idx := Idx + 1;\r\n-         Ch  := Str (Idx);\r\n-      end loop;\r\n-      if Time_Type = Absolute_Time then\r\n-         Abs_Time := Time_Of (Year, Month, Day, Day_Duration (1));\r\n-      else\r\n-         Delt_Time := Duration (Float (Minute));\r\n-      end if;\r\n-   exception\r\n-      when others => Opt7_Pkg.My_Raise_Exception;\r\n-   end;\r\n-\r\n-end Opt7;\r\n+-- { dg-do compile }\n+-- { dg-options \"-Os -g\" }\n+\n+with Opt7_Pkg;\n+\n+package body Opt7 is\n+\n+   procedure Parse (Str       :     String;\n+                    Time_Type : out time_t;\n+                    Abs_Time  : out Time;\n+                    Delt_Time : out Duration) is\n+      Year         : Year_Number;\n+      Month        : Month_Number;\n+      Day          : Day_Number;\n+      Minute       : Integer := 0;\n+      Idx          : Integer := Str'First;\n+      Ch           : Character := Str (Idx);\n+      Current_Time : Time;\n+\n+   begin\n+      if Ch = '-' then\n+         Time_Type := Absolute_Time;\n+         Current_Time := Clock;\n+         Day   := Ada.Calendar.Day (Current_Time);\n+         Month := Ada.Calendar.Month (Current_Time);\n+         Year  := Ada.Calendar.Year (Current_Time);\n+      else\n+         Time_Type := Delta_Time;\n+      end if;\n+      while Ch in '0' .. '9' loop\n+         Minute := Minute + Character'Pos (Ch);\n+         Idx := Idx + 1;\n+         Ch  := Str (Idx);\n+      end loop;\n+      if Time_Type = Absolute_Time then\n+         Abs_Time := Time_Of (Year, Month, Day, Day_Duration (1));\n+      else\n+         Delt_Time := Duration (Float (Minute));\n+      end if;\n+   exception\n+      when others => Opt7_Pkg.My_Raise_Exception;\n+   end;\n+\n+end Opt7;"}, {"sha": "99224bf3612b5beeb49a1e8fd24296dd0a4afb98", "filename": "gcc/testsuite/gnat.dg/opt7.ads", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fopt7.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fopt7.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt7.ads?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,12 +1,12 @@\n-with Ada.Calendar; use Ada.Calendar;\r\n-\r\n-package Opt7 is\r\n-\r\n-   type time_t is (Absolute_Time, Delta_Time);\r\n-\r\n-   procedure Parse (Str       :     String;\r\n-                    Time_Type : out time_t;\r\n-                    Abs_Time  : out Time;\r\n-                    Delt_Time : out Duration);\r\n-\r\n-end Opt7;\r\n+with Ada.Calendar; use Ada.Calendar;\n+\n+package Opt7 is\n+\n+   type time_t is (Absolute_Time, Delta_Time);\n+\n+   procedure Parse (Str       :     String;\n+                    Time_Type : out time_t;\n+                    Abs_Time  : out Time;\n+                    Delt_Time : out Duration);\n+\n+end Opt7;"}, {"sha": "43d683e042058929455748bfde3e49af9337ef1b", "filename": "gcc/testsuite/gnat.dg/pointer_variable_bounds.adb", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fpointer_variable_bounds.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fpointer_variable_bounds.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fpointer_variable_bounds.adb?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,26 +1,26 @@\n--- { dg-do compile }\r\n--- { dg-options \"-gnatws\" }\r\n-\r\n-package body pointer_variable_bounds is\r\n-\r\n-  function COMPONENT_DAT(BP : in BUNDLE_POINTER_TYPE; CP : in COMP_POINTER_TYPE) return HALF_INTEGER is\r\n-    type CP_TYPE is access COMP_POINTER_TYPE;\r\n-    type CD_TYPE is access HALF_INTEGER;\r\n-    CD : CD_TYPE;\r\n-  begin\r\n-    return CD.all;\r\n-  end;\r\n-\r\n-  procedure BUNDLE_DAT(BP : in BUNDLE_POINTER_TYPE) is\r\n-    N0 : C_POINTER_TYPE := COMPONENT_DAT(BP, 4);\r\n-  begin\r\n-    null;\r\n-  end;\r\n-\r\n-  procedure SEQUENCE_DAT(BP : in BUNDLE_POINTER_TYPE) is\r\n-    N0 : C_POINTER_TYPE := COMPONENT_DAT(BP, 4);\r\n-  begin\r\n-    null;\r\n-  end;\r\n-\r\n-end pointer_variable_bounds;\r\n+-- { dg-do compile }\n+-- { dg-options \"-gnatws\" }\n+\n+package body pointer_variable_bounds is\n+\n+  function COMPONENT_DAT(BP : in BUNDLE_POINTER_TYPE; CP : in COMP_POINTER_TYPE) return HALF_INTEGER is\n+    type CP_TYPE is access COMP_POINTER_TYPE;\n+    type CD_TYPE is access HALF_INTEGER;\n+    CD : CD_TYPE;\n+  begin\n+    return CD.all;\n+  end;\n+\n+  procedure BUNDLE_DAT(BP : in BUNDLE_POINTER_TYPE) is\n+    N0 : C_POINTER_TYPE := COMPONENT_DAT(BP, 4);\n+  begin\n+    null;\n+  end;\n+\n+  procedure SEQUENCE_DAT(BP : in BUNDLE_POINTER_TYPE) is\n+    N0 : C_POINTER_TYPE := COMPONENT_DAT(BP, 4);\n+  begin\n+    null;\n+  end;\n+\n+end pointer_variable_bounds;"}, {"sha": "39d502ab3cab594752a4ce5e91d778c5a79f3bbf", "filename": "gcc/testsuite/gnat.dg/pointer_variable_bounds.ads", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fpointer_variable_bounds.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fpointer_variable_bounds.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fpointer_variable_bounds.ads?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,16 +1,16 @@\n-with pointer_variable_bounds_q; use pointer_variable_bounds_q;\r\n-\r\n-package pointer_variable_bounds is\r\n-\r\n-  type HALF_INTEGER is range -32768 .. 32767;\r\n-  subtype HALF_NATURAL is HALF_INTEGER range 0 .. 32767;\r\n-\r\n-  MAX_COMPS : constant HALF_NATURAL := HALF_NATURAL(A_MAX_COMPS);\r\n-  subtype COMP_POINTER_TYPE is HALF_NATURAL range 0 .. MAX_COMPS;\r\n-  subtype BUNDLE_POINTER_TYPE is HALF_NATURAL range 0 .. 1;\r\n-  subtype C_POINTER_TYPE is HALF_NATURAL range 0 .. 1;\r\n-\r\n-  procedure BUNDLE_DAT(BP : in BUNDLE_POINTER_TYPE);\r\n-  procedure SEQUENCE_DAT(BP : in BUNDLE_POINTER_TYPE);\r\n-\r\n-end pointer_variable_bounds;\r\n+with pointer_variable_bounds_q; use pointer_variable_bounds_q;\n+\n+package pointer_variable_bounds is\n+\n+  type HALF_INTEGER is range -32768 .. 32767;\n+  subtype HALF_NATURAL is HALF_INTEGER range 0 .. 32767;\n+\n+  MAX_COMPS : constant HALF_NATURAL := HALF_NATURAL(A_MAX_COMPS);\n+  subtype COMP_POINTER_TYPE is HALF_NATURAL range 0 .. MAX_COMPS;\n+  subtype BUNDLE_POINTER_TYPE is HALF_NATURAL range 0 .. 1;\n+  subtype C_POINTER_TYPE is HALF_NATURAL range 0 .. 1;\n+\n+  procedure BUNDLE_DAT(BP : in BUNDLE_POINTER_TYPE);\n+  procedure SEQUENCE_DAT(BP : in BUNDLE_POINTER_TYPE);\n+\n+end pointer_variable_bounds;"}, {"sha": "1c26e1255b1b35be9a1d0c46ca359aaa61c37527", "filename": "gcc/testsuite/gnat.dg/rep_clause2.adb", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Frep_clause2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Frep_clause2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Frep_clause2.adb?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,10 +1,10 @@\n--- { dg-do compile }\r\n-\r\n-package body Rep_Clause2 is\r\n-\r\n-   procedure Assign (From : Data; Offset : Positive; I : Index; To : out Bit_Array) is\r\n-   begin\r\n-     To (Offset .. Offset + 7) := Bit_Array (Conv (From.D(I).S.N));\r\n-   end;\r\n-\r\n-end Rep_Clause2;\r\n+-- { dg-do compile }\n+\n+package body Rep_Clause2 is\n+\n+   procedure Assign (From : Data; Offset : Positive; I : Index; To : out Bit_Array) is\n+   begin\n+     To (Offset .. Offset + 7) := Bit_Array (Conv (From.D(I).S.N));\n+   end;\n+\n+end Rep_Clause2;"}, {"sha": "c4d07236899b7abd3a967e3e9720b358b1facb94", "filename": "gcc/testsuite/gnat.dg/rep_clause2.ads", "status": "modified", "additions": 53, "deletions": 53, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Frep_clause2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Frep_clause2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Frep_clause2.ads?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,53 +1,53 @@\n-with Unchecked_Conversion;\r\n-\r\n-package Rep_Clause2 is\r\n-\r\n-   type Tiny is range 0 .. 3;\r\n-   for Tiny'Size use 2;\r\n-\r\n-   type Small is range 0 .. 255;\r\n-   for Small'Size use 8;\r\n-\r\n-   type Small_Data is record\r\n-      D : Tiny;\r\n-      N : Small;\r\n-   end record;\r\n-   pragma Pack (Small_Data);\r\n-\r\n-   type Chunk is\r\n-   record\r\n-      S : Small_Data;\r\n-      C : Character;\r\n-   end record;\r\n-\r\n-   for Chunk use record\r\n-      S at 0 range  0 .. 15;\r\n-      C at 2 range  0 .. 7;\r\n-   end record;\r\n-\r\n-   type Index is range 1 .. 10;\r\n-\r\n-   type Data_Array is array (Index) of Chunk;\r\n-   for Data_Array'Alignment use 2;\r\n-   pragma Pack (Data_Array);\r\n-\r\n-   type Data is record\r\n-     D : Data_Array;\r\n-   end record;\r\n-\r\n-   type Bit is range 0 .. 1;\r\n-   for Bit'Size use 1;\r\n-\r\n-   type Bit_Array is array (Positive range <>) of Bit;\r\n-   pragma Pack (Bit_Array);\r\n-\r\n-   type Byte is new Bit_Array (1 .. 8);\r\n-   for  Byte'Size use 8;\r\n-   for  Byte'Alignment use 1;\r\n-\r\n-   function Conv\r\n-     is new Unchecked_Conversion(Source => Small, Target => Byte);\r\n-\r\n-   procedure Assign (From : Data; Offset : Positive; I : Index; To : out Bit_Array);\r\n-\r\n-end Rep_Clause2;\r\n+with Unchecked_Conversion;\n+\n+package Rep_Clause2 is\n+\n+   type Tiny is range 0 .. 3;\n+   for Tiny'Size use 2;\n+\n+   type Small is range 0 .. 255;\n+   for Small'Size use 8;\n+\n+   type Small_Data is record\n+      D : Tiny;\n+      N : Small;\n+   end record;\n+   pragma Pack (Small_Data);\n+\n+   type Chunk is\n+   record\n+      S : Small_Data;\n+      C : Character;\n+   end record;\n+\n+   for Chunk use record\n+      S at 0 range  0 .. 15;\n+      C at 2 range  0 .. 7;\n+   end record;\n+\n+   type Index is range 1 .. 10;\n+\n+   type Data_Array is array (Index) of Chunk;\n+   for Data_Array'Alignment use 2;\n+   pragma Pack (Data_Array);\n+\n+   type Data is record\n+     D : Data_Array;\n+   end record;\n+\n+   type Bit is range 0 .. 1;\n+   for Bit'Size use 1;\n+\n+   type Bit_Array is array (Positive range <>) of Bit;\n+   pragma Pack (Bit_Array);\n+\n+   type Byte is new Bit_Array (1 .. 8);\n+   for  Byte'Size use 8;\n+   for  Byte'Alignment use 1;\n+\n+   function Conv\n+     is new Unchecked_Conversion(Source => Small, Target => Byte);\n+\n+   procedure Assign (From : Data; Offset : Positive; I : Index; To : out Bit_Array);\n+\n+end Rep_Clause2;"}, {"sha": "87c0bcd879081621c840710ce07a00b151157472", "filename": "gcc/testsuite/gnat.dg/slice2.adb", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fslice2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fslice2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fslice2.adb?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,13 +1,13 @@\n--- { dg-do compile }\r\n--- { dg-options \"-O\" }\r\n-\r\n-package body Slice2 is\r\n-\r\n-  function F (I : R1) return R2 is\r\n-    Val : R2;\r\n-  begin\r\n-    Val.Text (1 .. 8) := I.Text (1 .. 8);\r\n-    return Val;\r\n-  end F;\r\n-\r\n-end Slice2;\r\n+-- { dg-do compile }\n+-- { dg-options \"-O\" }\n+\n+package body Slice2 is\n+\n+  function F (I : R1) return R2 is\n+    Val : R2;\n+  begin\n+    Val.Text (1 .. 8) := I.Text (1 .. 8);\n+    return Val;\n+  end F;\n+\n+end Slice2;"}, {"sha": "d1f943a80cfa23ffa30a0b9f734e003fedc8e0db", "filename": "gcc/testsuite/gnat.dg/slice2.ads", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fslice2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fslice2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fslice2.ads?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,14 +1,14 @@\n-package Slice2 is\r\n-\r\n-  type R1 is record\r\n-    Text : String (1 .. 30);\r\n-  end record;\r\n-\r\n-  type R2 is record\r\n-    Text : String (1 .. 8);\r\n-    B : Boolean := True;\r\n-  end record;\r\n-\r\n-  function F (I : R1) return R2;\r\n-\r\n-end Slice2;\r\n+package Slice2 is\n+\n+  type R1 is record\n+    Text : String (1 .. 30);\n+  end record;\n+\n+  type R2 is record\n+    Text : String (1 .. 8);\n+    B : Boolean := True;\n+  end record;\n+\n+  function F (I : R1) return R2;\n+\n+end Slice2;"}, {"sha": "de71ac608efec10a2038e73f62b3248357ee4efc", "filename": "gcc/testsuite/gnat.dg/slice6.adb", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fslice6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fslice6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fslice6.adb?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,23 +1,23 @@\n--- { dg-do compile }\r\n--- { dg-options \"-gnatws\" }\r\n-\r\n-with Slice6_Pkg; use Slice6_Pkg;\r\n-\r\n-procedure Slice6 is\r\n-\r\n-  procedure Send (V_LENGTH : SHORT_INTEGER) is\r\n-\r\n-    V : Integer;\r\n-\r\n-    V_BLOCK : T_BLOCK (1 .. 4096);\r\n-    for V_BLOCK use at V'Address;\r\n-\r\n-    V_MSG : T_MSG ;\r\n-\r\n-  begin\r\n-    V_MSG := (V_LENGTH, 1, V_BLOCK (1 .. V_LENGTH));\r\n-  end;\r\n-\r\n-begin\r\n-  null;\r\n-end;\r\n+-- { dg-do compile }\n+-- { dg-options \"-gnatws\" }\n+\n+with Slice6_Pkg; use Slice6_Pkg;\n+\n+procedure Slice6 is\n+\n+  procedure Send (V_LENGTH : SHORT_INTEGER) is\n+\n+    V : Integer;\n+\n+    V_BLOCK : T_BLOCK (1 .. 4096);\n+    for V_BLOCK use at V'Address;\n+\n+    V_MSG : T_MSG ;\n+\n+  begin\n+    V_MSG := (V_LENGTH, 1, V_BLOCK (1 .. V_LENGTH));\n+  end;\n+\n+begin\n+  null;\n+end;"}, {"sha": "ef2047311a9cbf9a3cf6098ec6311f0778d05e86", "filename": "gcc/testsuite/gnat.dg/slice6_pkg.ads", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fslice6_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fslice6_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fslice6_pkg.ads?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,15 +1,15 @@\n-package Slice6_Pkg is\r\n-\r\n-  subtype LENGTH_RANGE is SHORT_INTEGER range 0 .. 8184;\r\n-\r\n-  type T_BLOCK is array (SHORT_INTEGER range <>) of SHORT_SHORT_INTEGER;\r\n-  for T_BLOCK'alignment use 4;\r\n-\r\n-  type T_MSG (V_LENGTH : LENGTH_RANGE := 0) is\r\n-    record\r\n-      HEADER : Integer;\r\n-      DATAS  : T_BLOCK (1 .. V_LENGTH) := (others => 0);\r\n-    end record;\r\n-  for T_MSG'alignment use 4;\r\n-\r\n-end Slice6_Pkg;\r\n+package Slice6_Pkg is\n+\n+  subtype LENGTH_RANGE is SHORT_INTEGER range 0 .. 8184;\n+\n+  type T_BLOCK is array (SHORT_INTEGER range <>) of SHORT_SHORT_INTEGER;\n+  for T_BLOCK'alignment use 4;\n+\n+  type T_MSG (V_LENGTH : LENGTH_RANGE := 0) is\n+    record\n+      HEADER : Integer;\n+      DATAS  : T_BLOCK (1 .. V_LENGTH) := (others => 0);\n+    end record;\n+  for T_MSG'alignment use 4;\n+\n+end Slice6_Pkg;"}, {"sha": "4ed3493f676422e7dc3b43b8654b8e99586c030e", "filename": "gcc/testsuite/gnat.dg/specs/unchecked_union2.ads", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Funchecked_union2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Funchecked_union2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Funchecked_union2.ads?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,30 +1,30 @@\n--- { dg-do compile }\r\n-\r\n-package Unchecked_Union2 is\r\n-\r\n-   type Small_Int is range 0 .. 2**19 - 1;\r\n-\r\n-   type R1 (B : Boolean := True) is record\r\n-      case B is\r\n-         when True  => Data1 : Small_Int;\r\n-         when False => Data2 : Small_Int;\r\n-      end case;\r\n-   end record;\r\n-\r\n-   for R1 use record\r\n-      Data1 at 0 range 0 .. 18;\r\n-      Data2 at 0 range 0 .. 18;\r\n-   end record;\r\n-   for R1'Size use 24;\r\n-\r\n-   pragma Unchecked_Union (R1);\r\n-\r\n-   type R2 is record\r\n-     Data : R1;\r\n-   end record;\r\n-\r\n-   for R2 use record\r\n-     Data at 0 range 3 .. 26;\r\n-   end record;\r\n-\r\n-end Unchecked_Union2;\r\n+-- { dg-do compile }\n+\n+package Unchecked_Union2 is\n+\n+   type Small_Int is range 0 .. 2**19 - 1;\n+\n+   type R1 (B : Boolean := True) is record\n+      case B is\n+         when True  => Data1 : Small_Int;\n+         when False => Data2 : Small_Int;\n+      end case;\n+   end record;\n+\n+   for R1 use record\n+      Data1 at 0 range 0 .. 18;\n+      Data2 at 0 range 0 .. 18;\n+   end record;\n+   for R1'Size use 24;\n+\n+   pragma Unchecked_Union (R1);\n+\n+   type R2 is record\n+     Data : R1;\n+   end record;\n+\n+   for R2 use record\n+     Data at 0 range 3 .. 26;\n+   end record;\n+\n+end Unchecked_Union2;"}, {"sha": "3a7a318cf6a526bd5d74630392d356b230bcf2e1", "filename": "gcc/testsuite/gnat.dg/taft_type2.adb", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type2.adb?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,22 +1,22 @@\n--- { dg-do compile }\r\n--- { dg-options \"-g\" }\r\n-\r\n-with Taft_Type2_Pkg; use Taft_Type2_Pkg;\r\n-\r\n-package body Taft_Type2 is\r\n-\r\n-   procedure Proc is\r\n-      A : T;\r\n-\r\n-      function F return T is\r\n-         My_T : T;\r\n-      begin\r\n-         My_T := Open;\r\n-         return My_T;\r\n-      end;\r\n-\r\n-   begin\r\n-      A := F;\r\n-   end;\r\n-\r\n-end Taft_Type2;\r\n+-- { dg-do compile }\n+-- { dg-options \"-g\" }\n+\n+with Taft_Type2_Pkg; use Taft_Type2_Pkg;\n+\n+package body Taft_Type2 is\n+\n+   procedure Proc is\n+      A : T;\n+\n+      function F return T is\n+         My_T : T;\n+      begin\n+         My_T := Open;\n+         return My_T;\n+      end;\n+\n+   begin\n+      A := F;\n+   end;\n+\n+end Taft_Type2;"}, {"sha": "812bc93b946dd430643fa715a563929382e47bb3", "filename": "gcc/testsuite/gnat.dg/taft_type2.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type2.ads?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,5 +1,5 @@\n-package Taft_Type2 is\r\n-\r\n-   procedure Proc;\r\n-\r\n-end Taft_Type2;\r\n+package Taft_Type2 is\n+\n+   procedure Proc;\n+\n+end Taft_Type2;"}, {"sha": "ffacda289cc9062d081126c99632a52d04f844aa", "filename": "gcc/testsuite/gnat.dg/taft_type2_pkg.ads", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type2_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type2_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type2_pkg.ads?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,12 +1,12 @@\n-package Taft_Type2_Pkg  is\r\n-\r\n-   type T is private;\r\n-\r\n-   function Open return T;\r\n-\r\n-private\r\n-\r\n-   type Buffer_T;\r\n-   type T is access Buffer_T;\r\n-\r\n-end Taft_Type2_Pkg;\r\n+package Taft_Type2_Pkg  is\n+\n+   type T is private;\n+\n+   function Open return T;\n+\n+private\n+\n+   type Buffer_T;\n+   type T is access Buffer_T;\n+\n+end Taft_Type2_Pkg;"}, {"sha": "945d562d57056c15ff889cd5e2392b1f30d891c2", "filename": "gcc/testsuite/gnat.dg/volatile10.adb", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fvolatile10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fvolatile10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fvolatile10.adb?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,10 +1,10 @@\n--- { dg-do compile }\r\n-\r\n-with Volatile10_Pkg; use Volatile10_Pkg;\r\n-\r\n-procedure Volatile10 is\r\n-   N : Num;\r\n-begin\r\n-   N := F.N1;\r\n-   N := F.N2;\r\n-end;\r\n+-- { dg-do compile }\n+\n+with Volatile10_Pkg; use Volatile10_Pkg;\n+\n+procedure Volatile10 is\n+   N : Num;\n+begin\n+   N := F.N1;\n+   N := F.N2;\n+end;"}, {"sha": "2bdd41046186edd73732c343f98e77049e98cd0d", "filename": "gcc/testsuite/gnat.dg/volatile10_pkg.ads", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fvolatile10_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b/gcc%2Ftestsuite%2Fgnat.dg%2Fvolatile10_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fvolatile10_pkg.ads?ref=bcc2b4cdc2b3692baa1e2c64c5c520a0dc66bc4b", "patch": "@@ -1,29 +1,29 @@\n-package Volatile10_Pkg is\r\n-\r\n-   type Num is mod 2**9;\r\n-\r\n-   type Rec is record\r\n-      B1  : Boolean;\r\n-      N1  : Num;\r\n-      B2  : Boolean;\r\n-      N2  : Num;\r\n-      B3  : Boolean;\r\n-      B4  : Boolean;\r\n-      B5  : Boolean;\r\n-      B6  : Boolean;\r\n-      B7  : Boolean;\r\n-      B8  : Boolean;\r\n-      B9  : Boolean;\r\n-      B10 : Boolean;\r\n-      B11 : Boolean;\r\n-      B12 : Boolean;\r\n-      B13 : Boolean;\r\n-      B14 : Boolean;\r\n-   end record;\r\n-   pragma Pack (Rec);\r\n-   for Rec'Size use 32;\r\n-   pragma Volatile(Rec);\r\n-\r\n-   function F return Rec;\r\n-\r\n-end Volatile10_Pkg;\r\n+package Volatile10_Pkg is\n+\n+   type Num is mod 2**9;\n+\n+   type Rec is record\n+      B1  : Boolean;\n+      N1  : Num;\n+      B2  : Boolean;\n+      N2  : Num;\n+      B3  : Boolean;\n+      B4  : Boolean;\n+      B5  : Boolean;\n+      B6  : Boolean;\n+      B7  : Boolean;\n+      B8  : Boolean;\n+      B9  : Boolean;\n+      B10 : Boolean;\n+      B11 : Boolean;\n+      B12 : Boolean;\n+      B13 : Boolean;\n+      B14 : Boolean;\n+   end record;\n+   pragma Pack (Rec);\n+   for Rec'Size use 32;\n+   pragma Volatile(Rec);\n+\n+   function F return Rec;\n+\n+end Volatile10_Pkg;"}]}