{"sha": "0993ad65cc4e462223e9337d9b2d3b82a887c6c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk5M2FkNjVjYzRlNDYyMjIzZTkzMzdkOWIyZDNiODJhODg3YzZjOA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-02-12T15:56:28Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-02-17T07:15:00Z"}, "message": "analyzer: fix wording for assignment from NULL\n\nThis patch improves the wording of the state-transition event (1) in\nthe -Wanalyzer-null-dereference diagnostic for:\n\nvoid test (void)\n{\n  int *p = NULL;\n  *p = 1;\n}\n\ntaking the path description from:\n\n  \u2018test\u2019: events 1-2\n    |\n    |    5 |   int *p = NULL;\n    |      |        ^\n    |      |        |\n    |      |        (1) assuming \u2018p\u2019 is NULL\n    |    6 |   *p = 1;\n    |      |   ~~~~~~\n    |      |      |\n    |      |      (2) dereference of NULL \u2018p\u2019\n    |\n\nto:\n\n  \u2018test\u2019: events 1-2\n    |\n    |    5 |   int *p = NULL;\n    |      |        ^\n    |      |        |\n    |      |        (1) \u2018p\u2019 is NULL\n    |    6 |   *p = 1;\n    |      |   ~~~~~~\n    |      |      |\n    |      |      (2) dereference of NULL \u2018p\u2019\n    |\n\nsince the \"assuming\" at (1) only makes sense for state transitions\ndue to comparisons, not for assignments.\n\ngcc/analyzer/ChangeLog:\n\t* sm-malloc.cc (malloc_diagnostic::describe_state_change): For\n\ttransition to the \"null\" state, only say \"assuming\" when\n\ttransitioning from the \"unchecked\" state.\n\ngcc/testsuite/ChangeLog:\n\t* gcc.dg/analyzer/malloc-1.c (test_48): New.", "tree": {"sha": "58de32ad6c3843318a600fa639a1450fd5bd1317", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58de32ad6c3843318a600fa639a1450fd5bd1317"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0993ad65cc4e462223e9337d9b2d3b82a887c6c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0993ad65cc4e462223e9337d9b2d3b82a887c6c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0993ad65cc4e462223e9337d9b2d3b82a887c6c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0993ad65cc4e462223e9337d9b2d3b82a887c6c8/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "670987874d2aa043a454e112291931e32f4ca8cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/670987874d2aa043a454e112291931e32f4ca8cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/670987874d2aa043a454e112291931e32f4ca8cc"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "5945abc04ee98acaa24e208e9ed5a693384892cb", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0993ad65cc4e462223e9337d9b2d3b82a887c6c8/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0993ad65cc4e462223e9337d9b2d3b82a887c6c8/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=0993ad65cc4e462223e9337d9b2d3b82a887c6c8", "patch": "@@ -1,3 +1,9 @@\n+2020-02-17  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* sm-malloc.cc (malloc_diagnostic::describe_state_change): For\n+\ttransition to the \"null\" state, only say \"assuming\" when\n+\ttransitioning from the \"unchecked\" state.\n+\n 2020-02-17  David Malcolm  <dmalcolm@redhat.com>\n \n \t* diagnostic-manager.h (diagnostic_manager::get_saved_diagnostic):"}, {"sha": "46225b6f70056db31ee9d3a2c3fbc7b673176dbe", "filename": "gcc/analyzer/sm-malloc.cc", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0993ad65cc4e462223e9337d9b2d3b82a887c6c8/gcc%2Fanalyzer%2Fsm-malloc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0993ad65cc4e462223e9337d9b2d3b82a887c6c8/gcc%2Fanalyzer%2Fsm-malloc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fsm-malloc.cc?ref=0993ad65cc4e462223e9337d9b2d3b82a887c6c8", "patch": "@@ -130,8 +130,15 @@ class malloc_diagnostic : public pending_diagnostic\n       return change.formatted_print (\"assuming %qE is non-NULL\",\n \t\t\t\t     change.m_expr);\n     if (change.m_new_state == m_sm.m_null)\n-      return change.formatted_print (\"assuming %qE is NULL\",\n-\t\t\t\t     change.m_expr);\n+      {\n+\tif (change.m_old_state == m_sm.m_unchecked)\n+\t  return change.formatted_print (\"assuming %qE is NULL\",\n+\t\t\t\t\t change.m_expr);\n+\telse\n+\t  return change.formatted_print (\"%qE is NULL\",\n+\t\t\t\t\t change.m_expr);\n+      }\n+\n     return label_text ();\n   }\n "}, {"sha": "a08ad2e71755586b37562a9927ca3dff310d784b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0993ad65cc4e462223e9337d9b2d3b82a887c6c8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0993ad65cc4e462223e9337d9b2d3b82a887c6c8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0993ad65cc4e462223e9337d9b2d3b82a887c6c8", "patch": "@@ -1,3 +1,7 @@\n+2020-02-17  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* gcc.dg/analyzer/malloc-1.c (test_48): New.\n+\n 2020-02-17  Jiufu Guo  <guojiufu@linux.ibm.com>\n \n \tPR target/93047"}, {"sha": "3024e54613763175658f03344a8da26d8933a1fb", "filename": "gcc/testsuite/gcc.dg/analyzer/malloc-1.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0993ad65cc4e462223e9337d9b2d3b82a887c6c8/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fmalloc-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0993ad65cc4e462223e9337d9b2d3b82a887c6c8/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fmalloc-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fmalloc-1.c?ref=0993ad65cc4e462223e9337d9b2d3b82a887c6c8", "patch": "@@ -583,3 +583,9 @@ int test_47 (void)\n   }\n   return p_size;\n }\n+\n+void test_48 (void)\n+{\n+  int *p = NULL; /* { dg-message \"'p' is NULL\" } */\n+  *p = 1; /* { dg-warning \"dereference of NULL 'p'\" } */\n+}"}]}