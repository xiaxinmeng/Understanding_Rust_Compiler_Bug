{"sha": "d20b11909f9014b4fb2988efbbde83bae0de3f56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDIwYjExOTA5ZjkwMTRiNGZiMjk4OGVmYmJkZTgzYmFlMGRlM2Y1Ng==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2004-12-21T07:49:58Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-12-21T07:49:58Z"}, "message": "expr.c (emit_group_load_1): Return the source if the move is a regular move between complex values.\n\n\t* expr.c (emit_group_load_1): Return the source if the move\n\tis a regular move between complex values.\n\nFrom-SVN: r92455", "tree": {"sha": "3badf38ecf51207fae3960ad1b6aa8eef4aefaf2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3badf38ecf51207fae3960ad1b6aa8eef4aefaf2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d20b11909f9014b4fb2988efbbde83bae0de3f56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d20b11909f9014b4fb2988efbbde83bae0de3f56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d20b11909f9014b4fb2988efbbde83bae0de3f56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d20b11909f9014b4fb2988efbbde83bae0de3f56/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bd340349092b1d189d798f8d3654244b4141da45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd340349092b1d189d798f8d3654244b4141da45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd340349092b1d189d798f8d3654244b4141da45"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "188b7ecc90ddcc7cfbd82e52da3a084ee2295d50", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d20b11909f9014b4fb2988efbbde83bae0de3f56/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d20b11909f9014b4fb2988efbbde83bae0de3f56/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d20b11909f9014b4fb2988efbbde83bae0de3f56", "patch": "@@ -1,3 +1,8 @@\n+2004-12-21  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* expr.c (emit_group_load_1): Return the source if the move\n+\tis a regular move between complex values.\n+\n 2004-12-20  Roger Sayle  <roger@eyesopen.com>\n \n \tPR middle-end/18683"}, {"sha": "3a09222943e6246b7c9c1c83319ddb3d9792ded4", "filename": "gcc/expr.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d20b11909f9014b4fb2988efbbde83bae0de3f56/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d20b11909f9014b4fb2988efbbde83bae0de3f56/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=d20b11909f9014b4fb2988efbbde83bae0de3f56", "patch": "@@ -1650,6 +1650,11 @@ emit_group_load_1 (rtx *tmps, rtx dst, rtx orig_src, tree type, int ssize)\n \t  tmps[i] = gen_reg_rtx (mode);\n \t  emit_move_insn (tmps[i], adjust_address (src, mode, bytepos));\n \t}\n+      else if (COMPLEX_MODE_P (mode)\n+\t       && GET_MODE (src) == mode\n+\t       && bytelen == GET_MODE_SIZE (mode))\n+\t/* Let emit_move_complex do the bulk of the work.  */\n+\ttmps[i] = src;\n       else if (GET_CODE (src) == CONCAT)\n \t{\n \t  unsigned int slen = GET_MODE_SIZE (GET_MODE (src));"}]}