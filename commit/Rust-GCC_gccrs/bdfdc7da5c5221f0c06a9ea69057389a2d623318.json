{"sha": "bdfdc7da5c5221f0c06a9ea69057389a2d623318", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmRmZGM3ZGE1YzUyMjFmMGMwNmE5ZWE2OTA1NzM4OWEyZDYyMzMxOA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-05-11T16:35:02Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-05-11T16:35:02Z"}, "message": "i386.c (ix86_loop_unroll_adjust): Use PATTERN (insn) when looking for memory references.\n\n\t* config/i386/i386.c (ix86_loop_unroll_adjust): Use PATTERN (insn)\n\twhen looking for memory references.\n\nFrom-SVN: r223008", "tree": {"sha": "b629ff7d0ae9f32805f98d161902f9458e1c6f69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b629ff7d0ae9f32805f98d161902f9458e1c6f69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bdfdc7da5c5221f0c06a9ea69057389a2d623318", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdfdc7da5c5221f0c06a9ea69057389a2d623318", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdfdc7da5c5221f0c06a9ea69057389a2d623318", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdfdc7da5c5221f0c06a9ea69057389a2d623318/comments", "author": null, "committer": null, "parents": [{"sha": "b1b0e90567f461bcd76511ffbaacd3f91f3c8c9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1b0e90567f461bcd76511ffbaacd3f91f3c8c9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1b0e90567f461bcd76511ffbaacd3f91f3c8c9b"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "77aa930136dc836551a607e7c0e9b37a3c910560", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdfdc7da5c5221f0c06a9ea69057389a2d623318/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdfdc7da5c5221f0c06a9ea69057389a2d623318/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bdfdc7da5c5221f0c06a9ea69057389a2d623318", "patch": "@@ -1,3 +1,8 @@\n+2015-05-11  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c (ix86_loop_unroll_adjust): Use PATTERN (insn)\n+\twhen looking for memory references.\n+\n 2015-05-11  Alexander Monakov  <amonakov@ispras.ru>\n \n \tPR target/65753\n@@ -13,7 +18,7 @@\n \t([-fno-plt]): Document.\n \n 2015-05-11  Markus Trippelsdorf  <markus@trippelsdorf.de>\n-\t\n+\n \tPR bootstrap/66105\n \t* config/rs6000/option-defaults.h: Add space between string literal\n \tand macro name.\n@@ -606,7 +611,7 @@\n 2015-05-05  Matthew Wahab  <matthew.wahab@arm.com>\n \n \t* gcc/config/aarch64-protos.h (struct cpu_branch_cost): New.\n-        (tune_params): Add field branch_costs.\n+\t(tune_params): Add field branch_costs.\n \t(aarch64_branch_cost): Declare.\n \t* gcc/config/aarch64.c (generic_branch_cost): New.\n \t(generic_tunings): Set field cpu_branch_cost to generic_branch_cost.\n@@ -965,7 +970,7 @@\n \n 2015-04-30  Caroline Tice  <cmtice@google.com>\n \n-        PR 65929\n+\tPR gcov-profile/65929\n \t* config/elfos.h (ASM_DECLARE_COLD_FUNCTION_NAME): New macro definition.\n \t(ASM_DECLARE_COLD_FUNCTION_SIZE): New macro definition.\n \t* doc/tm.texi.in (ASM_DECLARE_COLD_FUNCTION_NAME): Document new macro."}, {"sha": "277ecbcb9c9d6e911d51e8b49d05818cdb31784d", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdfdc7da5c5221f0c06a9ea69057389a2d623318/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdfdc7da5c5221f0c06a9ea69057389a2d623318/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=bdfdc7da5c5221f0c06a9ea69057389a2d623318", "patch": "@@ -51446,7 +51446,7 @@ ix86_loop_unroll_adjust (unsigned nunroll, struct loop *loop)\n   for (i = 0; i < loop->num_nodes; i++)\n     FOR_BB_INSNS (bbs[i], insn)\n       if (NONDEBUG_INSN_P (insn))\n-\tFOR_EACH_SUBRTX (iter, array, insn, NONCONST)\n+\tFOR_EACH_SUBRTX (iter, array, PATTERN (insn), NONCONST)\n \t  if (const_rtx x = *iter)\n \t    if (MEM_P (x))\n \t      {"}]}