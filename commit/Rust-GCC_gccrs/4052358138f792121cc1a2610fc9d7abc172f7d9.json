{"sha": "4052358138f792121cc1a2610fc9d7abc172f7d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA1MjM1ODEzOGY3OTIxMjFjYzFhMjYxMGZjOWQ3YWJjMTcyZjdkOQ==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-06-28T13:06:43Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-06-28T13:06:43Z"}, "message": "tree-browser.c (TB_history_stack): Convert to a VEC.\n\n\t* tree-browser.c (TB_history_stack): Convert to a VEC.\n\t(TB_SET_HEAD): Adjust for new type of TB_history_stack.\n\t(TB_history_prev): Likewise.\n\nFrom-SVN: r161490", "tree": {"sha": "1f3be6e2072755eaf721086ce08d3819905d5a8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f3be6e2072755eaf721086ce08d3819905d5a8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4052358138f792121cc1a2610fc9d7abc172f7d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4052358138f792121cc1a2610fc9d7abc172f7d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4052358138f792121cc1a2610fc9d7abc172f7d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4052358138f792121cc1a2610fc9d7abc172f7d9/comments", "author": null, "committer": null, "parents": [{"sha": "9062f848ce87430efb0218a97068cbf3f2d9f214", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9062f848ce87430efb0218a97068cbf3f2d9f214", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9062f848ce87430efb0218a97068cbf3f2d9f214"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "d6fab50d08f2dd54b97ed5f80e4118285dcdfc60", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4052358138f792121cc1a2610fc9d7abc172f7d9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4052358138f792121cc1a2610fc9d7abc172f7d9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4052358138f792121cc1a2610fc9d7abc172f7d9", "patch": "@@ -1,3 +1,9 @@\n+2010-06-28  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* tree-browser.c (TB_history_stack): Convert to a VEC.\n+\t(TB_SET_HEAD): Adjust for new type of TB_history_stack.\n+\t(TB_history_prev): Likewise.\n+\n 2010-06-28  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* vec.h (vec_heap_free): Add parentheses around free."}, {"sha": "3803a50418557467306e40c8c94b61d1ea08812a", "filename": "gcc/tree-browser.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4052358138f792121cc1a2610fc9d7abc172f7d9/gcc%2Ftree-browser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4052358138f792121cc1a2610fc9d7abc172f7d9/gcc%2Ftree-browser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-browser.c?ref=4052358138f792121cc1a2610fc9d7abc172f7d9", "patch": "@@ -108,7 +108,7 @@ void browse_tree (tree);\n \n /* Static variables.  */\n static htab_t TB_up_ht;\n-static tree TB_history_stack = NULL_TREE;\n+static VEC(tree,gc) *TB_history_stack;\n static int TB_verbose = 1;\n \n \n@@ -126,7 +126,7 @@ browse_tree (tree begin)\n   fprintf (TB_OUT_FILE, \"\\nTree Browser\\n\");\n \n #define TB_SET_HEAD(N) do {                                           \\\n-  TB_history_stack = tree_cons (NULL_TREE, (N), TB_history_stack);    \\\n+  VEC_safe_push (tree, gc, TB_history_stack, N);                      \\\n   head = N;                                                           \\\n   if (TB_verbose)                                                     \\\n     if (head)                                                         \\\n@@ -876,11 +876,11 @@ find_node_with_code (tree *tp, int *walk_subtrees ATTRIBUTE_UNUSED,\n static tree\n TB_history_prev (void)\n {\n-  if (TB_history_stack)\n+  if (!VEC_empty (tree, TB_history_stack))\n     {\n-      TB_history_stack = TREE_CHAIN (TB_history_stack);\n-      if (TB_history_stack)\n-\treturn TREE_VALUE (TB_history_stack);\n+      tree last = VEC_last (tree, TB_history_stack);\n+      VEC_pop (tree, TB_history_stack);\n+      return last;\n     }\n   return NULL_TREE;\n }"}]}