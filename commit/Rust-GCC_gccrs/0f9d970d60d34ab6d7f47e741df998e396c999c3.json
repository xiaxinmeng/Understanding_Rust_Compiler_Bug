{"sha": "0f9d970d60d34ab6d7f47e741df998e396c999c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY5ZDk3MGQ2MGQzNGFiNmQ3ZjQ3ZTc0MWRmOTk4ZTM5NmM5OTljMw==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2005-10-12T07:19:56Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2005-10-12T07:19:56Z"}, "message": "re PR fortran/24207 (PRIVATE/PUBLIC attribute confusion screws NAMELIST)\n\n2005-10-12  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/24207\n\t* resolve.c (resolve_symbol): Exclude use and host associated\n\tsymbols from the test for private objects in a public namelist.\n\n2005-10-12  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/24207\n\tgfortran.dg/private_type_3.f90: New test.\n\nFrom-SVN: r105289", "tree": {"sha": "ca9382afc31efcb893f774020f10757dce4a8bdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca9382afc31efcb893f774020f10757dce4a8bdc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f9d970d60d34ab6d7f47e741df998e396c999c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f9d970d60d34ab6d7f47e741df998e396c999c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f9d970d60d34ab6d7f47e741df998e396c999c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f9d970d60d34ab6d7f47e741df998e396c999c3/comments", "author": null, "committer": null, "parents": [{"sha": "81871c2a0501a25b3f038286268e0ce84936fdf2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81871c2a0501a25b3f038286268e0ce84936fdf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81871c2a0501a25b3f038286268e0ce84936fdf2"}], "stats": {"total": 51, "additions": 50, "deletions": 1}, "files": [{"sha": "b7eec3342f4f48fd4ccaaaddc74ec126d979258f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f9d970d60d34ab6d7f47e741df998e396c999c3/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f9d970d60d34ab6d7f47e741df998e396c999c3/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=0f9d970d60d34ab6d7f47e741df998e396c999c3", "patch": "@@ -1,3 +1,9 @@\n+2005-10-12  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/24207\n+\t* resolve.c (resolve_symbol): Exclude use and host associated\n+\tsymbols from the test for private objects in a public namelist.\n+\n 2005-10-12  Jakub Jelinek  <jakub@redhat.com>\n \n \t* trans-common.c (build_field): Fix comment typo."}, {"sha": "5de16ba32ad5ca4d7e2e4b9ff98dd1bb81b06c2b", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f9d970d60d34ab6d7f47e741df998e396c999c3/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f9d970d60d34ab6d7f47e741df998e396c999c3/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=0f9d970d60d34ab6d7f47e741df998e396c999c3", "patch": "@@ -4310,6 +4310,7 @@ resolve_symbol (gfc_symbol * sym)\n \t{\n \t  if (arg->sym\n \t\t&& arg->sym->ts.type == BT_DERIVED\n+\t\t&& !arg->sym->ts.derived->attr.use_assoc\n \t\t&& !gfc_check_access(arg->sym->ts.derived->attr.access,\n \t\t\t\t     arg->sym->ts.derived->ns->default_access))\n \t    {\n@@ -4412,7 +4413,11 @@ resolve_symbol (gfc_symbol * sym)\n \t{\n \t  for (nl = sym->namelist; nl; nl = nl->next)\n \t    {\n-\t      if (!gfc_check_access(nl->sym->attr.access,\n+\t      if (!nl->sym->attr.use_assoc\n+\t\t    &&\n+\t\t  !(sym->ns->parent == nl->sym->ns)\n+\t\t    &&\n+\t\t  !gfc_check_access(nl->sym->attr.access,\n \t\t\t\t    nl->sym->ns->default_access))\n \t\tgfc_error (\"PRIVATE symbol '%s' cannot be member of \"\n \t\t\t   \"PUBLIC namelist at %L\", nl->sym->name,"}, {"sha": "a184ea4ae5a6fa1174a579af52e6c6255d56b969", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f9d970d60d34ab6d7f47e741df998e396c999c3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f9d970d60d34ab6d7f47e741df998e396c999c3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0f9d970d60d34ab6d7f47e741df998e396c999c3", "patch": "@@ -1,3 +1,8 @@\n+2005-10-12  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/24207\n+\tgfortran.dg/private_type_3.f90: New test.\n+\n 2005-10-11  Steven G. Kargl  <kargls@comcast.net>\n \n \tPR fortran/20786"}, {"sha": "b8fad6626ed0dc7a0232b9569efe9666f8f72780", "filename": "gcc/testsuite/gfortran.dg/private_type_3.f90", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f9d970d60d34ab6d7f47e741df998e396c999c3/gcc%2Ftestsuite%2Fgfortran.dg%2Fprivate_type_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f9d970d60d34ab6d7f47e741df998e396c999c3/gcc%2Ftestsuite%2Fgfortran.dg%2Fprivate_type_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fprivate_type_3.f90?ref=0f9d970d60d34ab6d7f47e741df998e396c999c3", "patch": "@@ -0,0 +1,33 @@\n+! { dg-do compile }\n+! { dg-options \"-O0\" }\n+! Tests the fix for PR24207 and the problems associated\n+! with the fix for PR21986. In two cases, use associated\n+! public symbols were taking on the default private access\n+! attribute of the local namespace. In the third, a private\n+! symbol was not available to a namelist in contained \n+! procedure in the same module.\n+!\n+! Based on the example in PR24207.\n+!\n+module a\n+  implicit none\n+  real b\n+  type :: mytype\n+    integer :: c\n+  end type mytype\n+end module a\n+module c\n+  use a\n+  implicit none\n+  public d\n+  private\n+  real x\n+  contains\n+     subroutine d (arg_t)   ! This would cause an error\n+        type (mytype) :: arg_t\n+        namelist /e/ b, x   ! .... as would this.\n+        read(5,e)\n+\targ_t%c = 42\n+     end subroutine d\n+end module c\n+"}]}