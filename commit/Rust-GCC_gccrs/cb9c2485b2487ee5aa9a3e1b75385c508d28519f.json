{"sha": "cb9c2485b2487ee5aa9a3e1b75385c508d28519f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I5YzI0ODViMjQ4N2VlNWFhOWEzZTFiNzUzODVjNTA4ZDI4NTE5Zg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2009-10-23T12:18:42Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2009-10-23T12:18:42Z"}, "message": "re PR c/41673 (variable-length array dereference inside sizeof gives \"warning: dereferencing type-punned pointer will break strict-aliasing rules\")\n\n\tPR c/41673\n\t* alias.c (get_alias_set): Call langhook before returning 0 for\n\ttypes with structural equality.\n\t* c-common.c (c_common_get_alias_set): Use alias set of element\n\ttype for arrays with structural comparison.\n\ntestsuite:\n\t* gcc.dg/Wstrict-aliasing-bogus-vla-1.c: New test.\n\nFrom-SVN: r153496", "tree": {"sha": "0fe23e5ff51a04afd7bc7b9f279e3b3b20be309d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0fe23e5ff51a04afd7bc7b9f279e3b3b20be309d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb9c2485b2487ee5aa9a3e1b75385c508d28519f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb9c2485b2487ee5aa9a3e1b75385c508d28519f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb9c2485b2487ee5aa9a3e1b75385c508d28519f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb9c2485b2487ee5aa9a3e1b75385c508d28519f/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93f28ca73fbb038d98a74a464d04c734743720c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93f28ca73fbb038d98a74a464d04c734743720c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93f28ca73fbb038d98a74a464d04c734743720c4"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "7e51d688bf31660dc5b566d9e6a520b134b0c946", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb9c2485b2487ee5aa9a3e1b75385c508d28519f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb9c2485b2487ee5aa9a3e1b75385c508d28519f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cb9c2485b2487ee5aa9a3e1b75385c508d28519f", "patch": "@@ -1,3 +1,11 @@\n+2009-10-23  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR c/41673\n+\t* alias.c (get_alias_set): Call langhook before returning 0 for\n+\ttypes with structural equality.\n+\t* c-common.c (c_common_get_alias_set): Use alias set of element\n+\ttype for arrays with structural comparison.\n+\n 2009-10-23  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/41805"}, {"sha": "09ec775c5d05d24cf74fb0a14fbbd0667174827b", "filename": "gcc/alias.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb9c2485b2487ee5aa9a3e1b75385c508d28519f/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb9c2485b2487ee5aa9a3e1b75385c508d28519f/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=cb9c2485b2487ee5aa9a3e1b75385c508d28519f", "patch": "@@ -691,7 +691,14 @@ get_alias_set (tree t)\n      requires structural comparisons to identify compatible types\n      use alias set zero.  */\n   if (TYPE_STRUCTURAL_EQUALITY_P (t))\n-    return 0;\n+    {\n+      /* Allow the language to specify another alias set for this\n+\t type.  */\n+      set = lang_hooks.get_alias_set (t);\n+      if (set != -1)\n+\treturn set;\n+      return 0;\n+    }\n   t = TYPE_CANONICAL (t);\n   /* Canonical types shouldn't form a tree nor should the canonical\n      type require structural equality checks.  */"}, {"sha": "8a6d15b9d9bd57f33c08a8b93af951c0f8dbfbcb", "filename": "gcc/c-common.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb9c2485b2487ee5aa9a3e1b75385c508d28519f/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb9c2485b2487ee5aa9a3e1b75385c508d28519f/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=cb9c2485b2487ee5aa9a3e1b75385c508d28519f", "patch": "@@ -4183,6 +4183,15 @@ c_common_get_alias_set (tree t)\n   tree u;\n   PTR *slot;\n \n+  /* For VLAs, use the alias set of the element type rather than the\n+     default of alias set 0 for types compared structurally.  */\n+  if (TYPE_P (t) && TYPE_STRUCTURAL_EQUALITY_P (t))\n+    {\n+      if (TREE_CODE (t) == ARRAY_TYPE)\n+\treturn get_alias_set (TREE_TYPE (t));\n+      return -1;\n+    }\n+\n   /* Permit type-punning when accessing a union, provided the access\n      is directly through the union.  For example, this code does not\n      permit taking the address of a union member and then storing"}, {"sha": "81d39b58144d22299a1ca08c0ea87a0fe9d89c9d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb9c2485b2487ee5aa9a3e1b75385c508d28519f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb9c2485b2487ee5aa9a3e1b75385c508d28519f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cb9c2485b2487ee5aa9a3e1b75385c508d28519f", "patch": "@@ -1,3 +1,8 @@\n+2009-10-23  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR c/41673\n+\t* gcc.dg/Wstrict-aliasing-bogus-vla-1.c: New test.\n+\n 2009-10-23  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/41778"}, {"sha": "e9f63d36872e19412da685d1b517c5926f652dc3", "filename": "gcc/testsuite/gcc.dg/Wstrict-aliasing-bogus-vla-1.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb9c2485b2487ee5aa9a3e1b75385c508d28519f/gcc%2Ftestsuite%2Fgcc.dg%2FWstrict-aliasing-bogus-vla-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb9c2485b2487ee5aa9a3e1b75385c508d28519f/gcc%2Ftestsuite%2Fgcc.dg%2FWstrict-aliasing-bogus-vla-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWstrict-aliasing-bogus-vla-1.c?ref=cb9c2485b2487ee5aa9a3e1b75385c508d28519f", "patch": "@@ -0,0 +1,10 @@\n+/* PR 41673: bogus -Wstrict-aliasing warning from VLA dereference.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=gnu99 -O2 -Wall\" } */\n+\n+int main(int argc, char *argv[])\n+{\n+    float x[argc];\n+    float y[argc];\n+    return 0 == __builtin_memcpy(y, x, argc * sizeof(*x));\n+}"}]}