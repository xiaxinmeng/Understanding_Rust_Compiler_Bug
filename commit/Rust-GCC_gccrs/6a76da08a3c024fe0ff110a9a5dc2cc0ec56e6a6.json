{"sha": "6a76da08a3c024fe0ff110a9a5dc2cc0ec56e6a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE3NmRhMDhhM2MwMjRmZTBmZjExMGE5YTVkYzJjYzBlYzU2ZTZhNg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2003-03-31T01:03:21Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2003-03-31T01:03:21Z"}, "message": "String.java (data, [...]): Documented.\n\n\t* java/lang/String.java (data, boffset, count): Documented.\n\t(String(byte[],String)): Reformatted.\n\t(String(byte[])): Likewise.\n\t(lastIndexOf(int)): Likewise.\n\t(lastIndexOf(String)): Likewise.\n\t(substring(int)): Renamed argument to match Classpath.\n\t(String(StringBuffer)): Don't share buffer if it is nearly empty.\n\nFrom-SVN: r65070", "tree": {"sha": "614aa9cc5d316d4c5d330c01ada4e1de16a5607d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/614aa9cc5d316d4c5d330c01ada4e1de16a5607d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a76da08a3c024fe0ff110a9a5dc2cc0ec56e6a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a76da08a3c024fe0ff110a9a5dc2cc0ec56e6a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a76da08a3c024fe0ff110a9a5dc2cc0ec56e6a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a76da08a3c024fe0ff110a9a5dc2cc0ec56e6a6/comments", "author": null, "committer": null, "parents": [{"sha": "bd3f840c72b4fe30f2bb2c460bc409d38ffff423", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd3f840c72b4fe30f2bb2c460bc409d38ffff423", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd3f840c72b4fe30f2bb2c460bc409d38ffff423"}], "stats": {"total": 47, "additions": 38, "deletions": 9}, "files": [{"sha": "84b6b6c270de8357c03a83ea522c4d7b458ad9c3", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a76da08a3c024fe0ff110a9a5dc2cc0ec56e6a6/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a76da08a3c024fe0ff110a9a5dc2cc0ec56e6a6/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=6a76da08a3c024fe0ff110a9a5dc2cc0ec56e6a6", "patch": "@@ -1,5 +1,13 @@\n 2003-03-30  Tom Tromey  <tromey@redhat.com>\n \n+\t* java/lang/String.java (data, boffset, count): Documented.\n+\t(String(byte[],String)): Reformatted.\n+\t(String(byte[])): Likewise.\n+\t(lastIndexOf(int)): Likewise.\n+\t(lastIndexOf(String)): Likewise.\n+\t(substring(int)): Renamed argument to match Classpath.\n+\t(String(StringBuffer)): Don't share buffer if it is nearly empty.\n+\n \t* java/lang/String.java: Miscellaneous minor formatting changes\n \tto match Classpath more closely.\n "}, {"sha": "fe00b9100cc24b3b5543a50a5251d2b583e4f811", "filename": "libjava/java/lang/String.java", "status": "modified", "additions": 30, "deletions": 9, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a76da08a3c024fe0ff110a9a5dc2cc0ec56e6a6/libjava%2Fjava%2Flang%2FString.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a76da08a3c024fe0ff110a9a5dc2cc0ec56e6a6/libjava%2Fjava%2Flang%2FString.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FString.java?ref=6a76da08a3c024fe0ff110a9a5dc2cc0ec56e6a6", "patch": "@@ -84,8 +84,26 @@ public final class String implements Serializable, Comparable, CharSequence\n    */\n   private static final long serialVersionUID = -6849794470754667710L;\n \n+  /**\n+   * This is the object that holds the characters that make up the\n+   * String.  It might be a char[], or it could be String.  It could\n+   * even be `this'.  The actual characters can't be located using\n+   * pure Java code.\n+   * @see #boffset\n+   */\n   private Object data;\n-  private int boffset; // Note this is a byte offset - don't use in Java code!\n+\n+  /**\n+   * This is a <emph>byte</emph> offset of the actual characters from\n+   * the start of the character-holding object.  Don't use this field\n+   * in Java code.\n+   */\n+  private int boffset;\n+\n+  /**\n+   * Holds the number of characters in value.  Package visible for use\n+   * by trusted code.\n+   */\n   int count;\n \n   /**\n@@ -298,7 +316,7 @@ public String(byte[] data, int offset, int count, String encoding)\n   public String(byte[] data, String encoding)\n     throws UnsupportedEncodingException\n   {\n-    this (data, 0, data.length, encoding);\n+    this(data, 0, data.length, encoding);\n   }\n \n   /**\n@@ -357,7 +375,7 @@ public String(byte[] data, int offset, int count)\n    */\n   public String(byte[] data)\n   {\n-    this (data, 0, data.length);\n+    this(data, 0, data.length);\n   }\n \n   /**\n@@ -371,8 +389,11 @@ public String(StringBuffer buffer)\n   {\n     synchronized (buffer)\n       {\n-\tbuffer.shared = true;\n-\tinit (buffer.value, 0, buffer.count, true);\n+\t// Share unless buffer is 3/4 empty.\n+\tboolean should_copy = ((buffer.count << 2) < buffer.value.length);\n+\tif (! should_copy)\n+\t  buffer.shared = true;\n+\tinit (buffer.value, 0, buffer.count, ! should_copy);\n       }\n   }\n \n@@ -721,7 +742,7 @@ public int indexOf(int ch)\n    */\n   public int lastIndexOf(int ch)\n   {\n-    return lastIndexOf (ch, count - 1);\n+    return lastIndexOf(ch, count - 1);\n   }\n \n   /**\n@@ -770,7 +791,7 @@ public int indexOf(String str)\n    */\n   public int lastIndexOf(String str)\n   {\n-    return lastIndexOf (str, count - str.count);\n+    return lastIndexOf(str, count - str.count);\n   }\n \n   /**\n@@ -806,9 +827,9 @@ public int lastIndexOf(String str, int fromIndex)\n    * @throws IndexOutOfBoundsException if begin &lt; 0 || begin &gt; length()\n    *         (while unspecified, this is a StringIndexOutOfBoundsException)\n    */\n-  public String substring(int beginIndex)\n+  public String substring(int begin)\n   {\n-    return substring (beginIndex, count);\n+    return substring(begin, count);\n   }\n \n   /**"}]}