{"sha": "daa9715842345da5b9c440a9fef1ed3bc916bc18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGFhOTcxNTg0MjM0NWRhNWI5YzQ0MGE5ZmVmMWVkM2JjOTE2YmMxOA==", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2018-08-21T09:55:07Z"}, "committer": {"name": "Tamar Christina", "email": "tnfchris@gcc.gnu.org", "date": "2018-08-21T09:55:07Z"}, "message": "Fix DSE big-endian subreg crash on AArch64.\n\nThis patch fixes an ICE that would happen when extract_low_bits\nis called with modes for which you can't extract a valid subreg.\ne.g. taking a 32 bytes subreg from a 48 byte mode.\n\nThe ICE happens because convert_modes which eventually calls\nsimplify_gen_subreg does not expect the convertion to fail.\n\nThe assert in gen_lowpart_general would then be hit.  The patch\nchanges it to validate the subreg before trying to convert the\nmodes.  If the subreg is not possible we return NULL_RTX and bail\nout early.\n\ngcc/ChangeLog:\n\n2018-08-21  Tamar Christina  <tamar.christina@arm.com>\n\n\t* expmed.c (extract_low_bits): Reject invalid subregs early.\n\ngcc/testsuite/ChangeLog:\n\n2018-08-21  Tamar Christina  <tamar.christina@arm.com>\n\n\t* gcc.target/aarch64/large_struct_copy.c: New test.\n\nFrom-SVN: r263696", "tree": {"sha": "12d634187fcdcecf0de83dafe2f8355dc44386b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12d634187fcdcecf0de83dafe2f8355dc44386b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/daa9715842345da5b9c440a9fef1ed3bc916bc18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daa9715842345da5b9c440a9fef1ed3bc916bc18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/daa9715842345da5b9c440a9fef1ed3bc916bc18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daa9715842345da5b9c440a9fef1ed3bc916bc18/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "25d4036370f11d5c32fed965c2d47e0958cbe64a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25d4036370f11d5c32fed965c2d47e0958cbe64a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25d4036370f11d5c32fed965c2d47e0958cbe64a"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "66ca10b96b9fca752a30b1567fe08a82c15f885c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa9715842345da5b9c440a9fef1ed3bc916bc18/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa9715842345da5b9c440a9fef1ed3bc916bc18/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=daa9715842345da5b9c440a9fef1ed3bc916bc18", "patch": "@@ -1,3 +1,7 @@\n+2018-08-21  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* expmed.c (extract_low_bits): Reject invalid subregs early.\n+\n 2018-08-21  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \tPR middle-end/86121"}, {"sha": "e2819309e4bb99cbc165c0e06bb50b4ffaa3f0c2", "filename": "gcc/expmed.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa9715842345da5b9c440a9fef1ed3bc916bc18/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa9715842345da5b9c440a9fef1ed3bc916bc18/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=daa9715842345da5b9c440a9fef1ed3bc916bc18", "patch": "@@ -2392,6 +2392,10 @@ extract_low_bits (machine_mode mode, machine_mode src_mode, rtx src)\n     return NULL_RTX;\n \n   src = gen_lowpart (src_int_mode, src);\n+  if (!validate_subreg (int_mode, src_int_mode, src,\n+\t\t\tsubreg_lowpart_offset (int_mode, src_int_mode)))\n+    return NULL_RTX;\n+\n   src = convert_modes (int_mode, src_int_mode, src, true);\n   src = gen_lowpart (mode, src);\n   return src;"}, {"sha": "42117a60523e71399fa1f9093e0b9727c3127e56", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa9715842345da5b9c440a9fef1ed3bc916bc18/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa9715842345da5b9c440a9fef1ed3bc916bc18/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=daa9715842345da5b9c440a9fef1ed3bc916bc18", "patch": "@@ -1,3 +1,7 @@\n+2018-08-21  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* gcc.target/aarch64/large_struct_copy.c: New test.\n+\n 2018-08-21  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n \n \t* g++.dg/torture/pr86763.C: Restrict to *-*-linux*."}, {"sha": "2b5e7801bad0598138cbcee7b2f4ffffaaf438df", "filename": "gcc/testsuite/gcc.target/aarch64/large_struct_copy.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa9715842345da5b9c440a9fef1ed3bc916bc18/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Flarge_struct_copy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa9715842345da5b9c440a9fef1ed3bc916bc18/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Flarge_struct_copy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Flarge_struct_copy.c?ref=daa9715842345da5b9c440a9fef1ed3bc916bc18", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+typedef unsigned __attribute__((mode(DI))) uint64_t;\n+\n+struct S0 {\n+  uint64_t f1;\n+  uint64_t f2;\n+  uint64_t f3;\n+  uint64_t f4;\n+  uint64_t f5;\n+} a;\n+struct S2 {\n+  uint64_t f0;\n+  uint64_t f2;\n+  struct S0 f3;\n+};\n+\n+void fn1 () {\n+  struct S2 b = {0, 1, 7, 4073709551611, 4, 8, 7};\n+  a = b.f3;\n+}\n+"}]}