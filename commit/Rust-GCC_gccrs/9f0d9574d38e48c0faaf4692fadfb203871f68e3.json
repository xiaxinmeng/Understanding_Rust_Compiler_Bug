{"sha": "9f0d9574d38e48c0faaf4692fadfb203871f68e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWYwZDk1NzRkMzhlNDhjMGZhYWY0NjkyZmFkZmIyMDM4NzFmNjhlMw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2007-06-06T10:42:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-06-06T10:42:10Z"}, "message": "sem.ads, sem.adb (Semantics): Save and restore Global_Discard_Names Remove no longer used nodes.\n\n2007-04-20  Robert Dewar  <dewar@adacore.com>\n\n\t* sem.ads, sem.adb (Semantics): Save and restore Global_Discard_Names\n\tRemove no longer used nodes.\n\nFrom-SVN: r125446", "tree": {"sha": "5a674d5e70224ea846bbdc701aaeef2934b14dc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a674d5e70224ea846bbdc701aaeef2934b14dc9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f0d9574d38e48c0faaf4692fadfb203871f68e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f0d9574d38e48c0faaf4692fadfb203871f68e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f0d9574d38e48c0faaf4692fadfb203871f68e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f0d9574d38e48c0faaf4692fadfb203871f68e3/comments", "author": null, "committer": null, "parents": [{"sha": "0e701488e1f731a529f6b391e538d369777c32c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e701488e1f731a529f6b391e538d369777c32c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e701488e1f731a529f6b391e538d369777c32c0"}], "stats": {"total": 31, "additions": 13, "deletions": 18}, "files": [{"sha": "34e090761a9fd66af574887ce3536f22e1bb1ec8", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f0d9574d38e48c0faaf4692fadfb203871f68e3/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f0d9574d38e48c0faaf4692fadfb203871f68e3/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=9f0d9574d38e48c0faaf4692fadfb203871f68e3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -539,9 +539,6 @@ package body Sem is\n          when N_With_Clause =>\n             Analyze_With_Clause (N);\n \n-         when N_With_Type_Clause =>\n-            Analyze_With_Type_Clause (N);\n-\n          --  A call to analyze the Empty node is an error, but most likely\n          --  it is an error caused by an attempt to analyze a malformed\n          --  piece of tree caused by some other error, so if there have\n@@ -558,6 +555,13 @@ package body Sem is\n          when N_Error =>\n             null;\n \n+         --  Push/Pop nodes normally don't come through an analyze call. An\n+         --  exception is the dummy ones bracketing a subprogram body. In any\n+         --  case there is nothing to be done to analyze such nodes.\n+\n+         when N_Push_Pop_xxx_Label =>\n+            null;\n+\n          --  For the remaining node types, we generate compiler abort, because\n          --  these nodes are always analyzed within the Sem_Chn routines and\n          --  there should never be a case of making a call to the main Analyze\n@@ -610,12 +614,6 @@ package body Sem is\n            N_Mod_Clause                             |\n            N_Modular_Type_Definition                |\n            N_Ordinary_Fixed_Point_Definition        |\n-           N_Pop_Constraint_Error_Label             |\n-           N_Pop_Program_Error_Label                |\n-           N_Pop_Storage_Error_Label                |\n-           N_Push_Constraint_Error_Label            |\n-           N_Push_Program_Error_Label               |\n-           N_Push_Storage_Error_Label               |\n            N_Parameter_Specification                |\n            N_Pragma_Argument_Association            |\n            N_Procedure_Specification                |\n@@ -1220,6 +1218,7 @@ package body Sem is\n       S_Outer_Gen_Scope  : constant Entity_Id        := Outer_Generic_Scope;\n       S_Sem_Unit         : constant Unit_Number_Type := Current_Sem_Unit;\n       S_GNAT_Mode        : constant Boolean          := GNAT_Mode;\n+      S_Discard_Names    : constant Boolean          := Global_Discard_Names;\n       Generic_Main       : constant Boolean :=\n                              Nkind (Unit (Cunit (Main_Unit)))\n                                in N_Generic_Declaration;\n@@ -1242,7 +1241,7 @@ package body Sem is\n       procedure Do_Analyze is\n       begin\n          Save_Scope_Stack;\n-         New_Scope (Standard_Standard);\n+         Push_Scope (Standard_Standard);\n          Scope_Suppress := Suppress_Options;\n          Scope_Stack.Table\n            (Scope_Stack.Last).Component_Alignment_Default := Calign_Default;\n@@ -1333,6 +1332,7 @@ package body Sem is\n       New_Nodes_OK           := S_New_Nodes_OK;\n       Outer_Generic_Scope    := S_Outer_Gen_Scope;\n       GNAT_Mode              := S_GNAT_Mode;\n+      Global_Discard_Names   := S_Discard_Names;\n \n       Restore_Opt_Config_Switches (Save_Config_Switches);\n       Expander_Mode_Restore;"}, {"sha": "8b38c33a2ae5c89918b297611d4f29cffc608717", "filename": "gcc/ada/sem.ads", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f0d9574d38e48c0faaf4692fadfb203871f68e3/gcc%2Fada%2Fsem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f0d9574d38e48c0faaf4692fadfb203871f68e3/gcc%2Fada%2Fsem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.ads?ref=9f0d9574d38e48c0faaf4692fadfb203871f68e3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -210,11 +210,6 @@ package Sem is\n    -- Semantic Analysis Flags --\n    -----------------------------\n \n-   Explicit_Overriding : Boolean := False;\n-   --  Switch to indicate whether checking mechanism described in AI-218\n-   --  is enforced: subprograms that override inherited operations must be\n-   --  be marked explicitly, to prevent accidental or omitted overriding.\n-\n    Full_Analysis : Boolean := True;\n    --  Switch to indicate whether we are doing a full analysis or a\n    --  pre-analysis. In normal analysis mode (Analysis-Expansion for\n@@ -395,7 +390,7 @@ package Sem is\n    --  There are two kinds of suppress checks: scope based suppress checks,\n    --  and entity based suppress checks.\n \n-   --  Scope based suppress chems (from initial command line arguments,\n+   --  Scope based suppress checks (from initial command line arguments,\n    --  or from Suppress pragmas not including an entity name) are recorded\n    --  in the Sem.Supress variable, and all that is necessary is to save the\n    --  state of this variable on scope entry, and restore it on scope exit."}]}