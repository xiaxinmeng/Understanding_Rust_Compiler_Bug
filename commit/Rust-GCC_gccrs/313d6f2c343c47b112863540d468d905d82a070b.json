{"sha": "313d6f2c343c47b112863540d468d905d82a070b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzEzZDZmMmMzNDNjNDdiMTEyODYzNTQwZDQ2OGQ5MDVkODJhMDcwYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-11T08:44:15Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-11T08:44:15Z"}, "message": "[multiple changes]\n\n2010-10-11  Arnaud Charlet  <charlet@adacore.com>\n\n        * sem_prag.adb (Check_Interrupt_Or_Attach_Handler): Do not emit error\n        for AI05-0033 in CodePeer mode.\n\n2010-10-11  Robert Dewar  <dewar@adacore.com>\n\n        * atree.h, atree.ads, atree.adb (Flag3): New flag (replaces Unused_1)\n        * csinfo.adb: Aspect_Specifications is a new special field\n        * einfo.adb (Flag3): New unused flag\n        * exp_util.adb (Insert_Actions): Add processing for\n        N_Aspect_Specification.\n        * sem.adb: Add entry for N_Aspect_Specification.\n        * sinfo.ads, sinfo.adb (N_Aspect_Specification): New node\n        (Has_Aspect_Specifications): New flag\n        (Permits_Aspect_Specifications): New function\n        (Aspect_Specifications): New function\n        (Set_Aspect_Specifications): New procedure\n        * sprint.adb (Sprint_Node): Put N_At_Clause in proper alpha order\n        (Sprint_Node): Add dummy entry for N_Aspect_Specification\n        * treepr.adb (Flag3): New flag to be listed\n\n2010-10-11  Vincent Celier  <celier@adacore.com>\n\n        * adaint.c: Minor reformatting.\n\nFrom-SVN: r165279", "tree": {"sha": "27810ad9b311e93596255bce29ceb7fd146eba9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27810ad9b311e93596255bce29ceb7fd146eba9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/313d6f2c343c47b112863540d468d905d82a070b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/313d6f2c343c47b112863540d468d905d82a070b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/313d6f2c343c47b112863540d468d905d82a070b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/313d6f2c343c47b112863540d468d905d82a070b/comments", "author": null, "committer": null, "parents": [{"sha": "7b53cb49e265d06be341de2b1729cb3c7b63fbd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b53cb49e265d06be341de2b1729cb3c7b63fbd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b53cb49e265d06be341de2b1729cb3c7b63fbd9"}], "stats": {"total": 503, "additions": 427, "deletions": 76}, "files": [{"sha": "51e2bb7f3ca3edfb3efce6628723bc4d0960b3cf", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/313d6f2c343c47b112863540d468d905d82a070b/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/313d6f2c343c47b112863540d468d905d82a070b/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=313d6f2c343c47b112863540d468d905d82a070b", "patch": "@@ -2372,17 +2372,17 @@ __gnat_number_of_cpus (void)\n {\n   int cores = 1;\n \n-#if defined (linux) || defined (sun) || defined (AIX) || \\\n-    (defined (__alpha__)  && defined (_osf_)) || defined (__APPLE__)\n-  cores = (int)sysconf(_SC_NPROCESSORS_ONLN);\n+#if defined (linux) || defined (sun) || defined (AIX) \\\n+    || (defined (__alpha__)  && defined (_osf_)) || defined (__APPLE__)\n+  cores = (int) sysconf (_SC_NPROCESSORS_ONLN);\n \n #elif (defined (__mips) && defined (__sgi))\n-  cores = (int)sysconf(_SC_NPROC_ONLN);\n+  cores = (int) sysconf (_SC_NPROC_ONLN);\n \n #elif defined (__hpux__)\n-    struct pst_dynamic psd;\n-    if (pstat_getdynamic(&psd, sizeof(psd), 1, 0) != -1)\n-       cores = (int)psd.psd_proc_cnt;\n+  struct pst_dynamic psd;\n+  if (pstat_getdynamic (&psd, sizeof (psd), 1, 0) != -1)\n+    cores = (int) psd.psd_proc_cnt;\n \n #endif\n "}, {"sha": "47ca88ef980902801a00176f158c743e20b22904", "filename": "gcc/ada/atree.adb", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/313d6f2c343c47b112863540d468d905d82a070b/gcc%2Fada%2Fatree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/313d6f2c343c47b112863540d468d905d82a070b/gcc%2Fada%2Fatree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.adb?ref=313d6f2c343c47b112863540d468d905d82a070b", "patch": "@@ -2704,6 +2704,12 @@ package body Atree is\n          return From_Union (Nodes.Table (N + 3).Field8);\n       end Ureal21;\n \n+      function Flag3 (N : Node_Id) return Boolean is\n+      begin\n+         pragma Assert (N <= Nodes.Last);\n+         return Nodes.Table (N).Flag3;\n+      end Flag3;\n+\n       function Flag4 (N : Node_Id) return Boolean is\n       begin\n          pragma Assert (N <= Nodes.Last);\n@@ -2803,7 +2809,7 @@ package body Atree is\n       function Flag20 (N : Node_Id) return Boolean is\n       begin\n          pragma Assert (Nkind (N) in N_Entity);\n-         return Nodes.Table (N + 1).Unused_1;\n+         return Nodes.Table (N + 1).Flag3;\n       end Flag20;\n \n       function Flag21 (N : Node_Id) return Boolean is\n@@ -2929,7 +2935,7 @@ package body Atree is\n       function Flag41 (N : Node_Id) return Boolean is\n       begin\n          pragma Assert (Nkind (N) in N_Entity);\n-         return Nodes.Table (N + 2).Unused_1;\n+         return Nodes.Table (N + 2).Flag3;\n       end Flag41;\n \n       function Flag42 (N : Node_Id) return Boolean is\n@@ -3463,7 +3469,7 @@ package body Atree is\n       function Flag130 (N : Node_Id) return Boolean is\n       begin\n          pragma Assert (Nkind (N) in N_Entity);\n-         return Nodes.Table (N + 3).Unused_1;\n+         return Nodes.Table (N + 3).Flag3;\n       end Flag130;\n \n       function Flag131 (N : Node_Id) return Boolean is\n@@ -3985,7 +3991,7 @@ package body Atree is\n       function Flag217 (N : Node_Id) return Boolean is\n       begin\n          pragma Assert (Nkind (N) in N_Entity);\n-         return Nodes.Table (N + 4).Unused_1;\n+         return Nodes.Table (N + 4).Flag3;\n       end Flag217;\n \n       function Flag218 (N : Node_Id) return Boolean is\n@@ -4806,6 +4812,12 @@ package body Atree is\n          Nodes.Table (N + 3).Field8 := To_Union (Val);\n       end Set_Ureal21;\n \n+      procedure Set_Flag3 (N : Node_Id; Val : Boolean) is\n+      begin\n+         pragma Assert (N <= Nodes.Last);\n+         Nodes.Table (N).Flag3 := Val;\n+      end Set_Flag3;\n+\n       procedure Set_Flag4 (N : Node_Id; Val : Boolean) is\n       begin\n          pragma Assert (N <= Nodes.Last);\n@@ -4905,7 +4917,7 @@ package body Atree is\n       procedure Set_Flag20 (N : Node_Id; Val : Boolean) is\n       begin\n          pragma Assert (Nkind (N) in N_Entity);\n-         Nodes.Table (N + 1).Unused_1 := Val;\n+         Nodes.Table (N + 1).Flag3 := Val;\n       end Set_Flag20;\n \n       procedure Set_Flag21 (N : Node_Id; Val : Boolean) is\n@@ -5031,7 +5043,7 @@ package body Atree is\n       procedure Set_Flag41 (N : Node_Id; Val : Boolean) is\n       begin\n          pragma Assert (Nkind (N) in N_Entity);\n-         Nodes.Table (N + 2).Unused_1 := Val;\n+         Nodes.Table (N + 2).Flag3 := Val;\n       end Set_Flag41;\n \n       procedure Set_Flag42 (N : Node_Id; Val : Boolean) is\n@@ -5693,7 +5705,7 @@ package body Atree is\n       procedure Set_Flag130 (N : Node_Id; Val : Boolean) is\n       begin\n          pragma Assert (Nkind (N) in N_Entity);\n-         Nodes.Table (N + 3).Unused_1 := Val;\n+         Nodes.Table (N + 3).Flag3 := Val;\n       end Set_Flag130;\n \n       procedure Set_Flag131 (N : Node_Id; Val : Boolean) is\n@@ -6343,7 +6355,7 @@ package body Atree is\n       procedure Set_Flag217 (N : Node_Id; Val : Boolean) is\n       begin\n          pragma Assert (Nkind (N) in N_Entity);\n-         Nodes.Table (N + 4).Unused_1 := Val;\n+         Nodes.Table (N + 4).Flag3 := Val;\n       end Set_Flag217;\n \n       procedure Set_Flag218 (N : Node_Id; Val : Boolean) is"}, {"sha": "9e29a57a59e498fce6c604862cc9c92f40400e57", "filename": "gcc/ada/atree.ads", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/313d6f2c343c47b112863540d468d905d82a070b/gcc%2Fada%2Fatree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/313d6f2c343c47b112863540d468d905d82a070b/gcc%2Fada%2Fatree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.ads?ref=313d6f2c343c47b112863540d468d905d82a070b", "patch": "@@ -85,10 +85,6 @@ package Atree is\n    --   In_List       A flag used to indicate if the node is a member\n    --                 of a node list.\n \n-   --   Rewrite_Sub   A flag set if the node has been rewritten using\n-   --                 the Rewrite procedure. The original value of the\n-   --                 node is retrievable with Original_Node.\n-\n    --   Rewrite_Ins   A flag set if a node is marked as a rewrite inserted\n    --                 node as a result of a call to Mark_Rewrite_Insertion.\n \n@@ -155,17 +151,18 @@ package Atree is\n    --   it is useful to be able to do untyped traversals, and an internal\n    --   package in Atree allows for direct untyped accesses in such cases.\n \n-   --   Flag4         Fifteen Boolean flags (use depends on Nkind and\n+   --   Flag3\n+   --   Flag4         Sixteen Boolean flags (use depends on Nkind and\n    --   Flag5         Ekind, as described for FieldN). Again the access\n    --   Flag6         is usually via subprograms in Sinfo and Einfo which\n    --   Flag7         provide high-level synonyms for these flags, and\n    --   Flag8         contain debugging code that checks that the values\n    --   Flag9         in Nkind and Ekind are appropriate for the access.\n    --   Flag10\n-   --   Flag11        Note that Flag1-3 are missing from this list. The\n-   --   Flag12        first three flag positions are reserved for the\n-   --   Flag13        standard flags (Comes_From_Source, Error_Posted,\n-   --   Flag14        and Analyzed)\n+   --   Flag11        Note that Flag1-2 are missing from this list. For\n+   --   Flag12        historical reasons, these flag names are unused.\n+   --   Flag13\n+   --   Flag14\n    --   Flag15\n    --   Flag16\n    --   Flag17\n@@ -184,9 +181,9 @@ package Atree is\n    --                 entity, it is of type Entity_Kind which is defined\n    --                 in package Einfo.\n \n-   --   Flag19        229 additional flags\n+   --   Flag19        235 additional flags\n    --   ...\n-   --   Flag247\n+   --   Flag254\n \n    --   Convention    Entity convention (Convention_Id value)\n \n@@ -296,7 +293,7 @@ package Atree is\n    -------------------------------------\n \n    --  A subpackage Atree.Unchecked_Access provides routines for reading and\n-   --  writing the fields defined above (Field1-27, Node1-27, Flag1-247 etc).\n+   --  writing the fields defined above (Field1-27, Node1-27, Flag3-254 etc).\n    --  These unchecked access routines can be used for untyped traversals.\n    --  In addition they are used in the implementations of the Sinfo and\n    --  Einfo packages. These packages both provide logical synonyms for\n@@ -1199,6 +1196,9 @@ package Atree is\n       function Ureal21 (N : Node_Id) return Ureal;\n       pragma Inline (Ureal21);\n \n+      function Flag3 (N : Node_Id) return Boolean;\n+      pragma Inline (Flag3);\n+\n       function Flag4 (N : Node_Id) return Boolean;\n       pragma Inline (Flag4);\n \n@@ -2254,6 +2254,9 @@ package Atree is\n       procedure Set_Ureal21 (N : Node_Id; Val : Ureal);\n       pragma Inline (Set_Ureal21);\n \n+      procedure Set_Flag3 (N : Node_Id; Val : Boolean);\n+      pragma Inline (Set_Flag3);\n+\n       procedure Set_Flag4 (N : Node_Id; Val : Boolean);\n       pragma Inline (Set_Flag4);\n \n@@ -3088,8 +3091,7 @@ package Atree is\n          --  Flag used to indicate if node is a member of a list.\n          --  This field is considered private to the Atree package.\n \n-         Unused_1 : Boolean;\n-         --  Currently unused flag\n+         Flag3 : Boolean;\n \n          Rewrite_Ins : Boolean;\n          --  Flag set by Mark_Rewrite_Insertion procedure.\n@@ -3128,7 +3130,7 @@ package Atree is\n          --  used in component 5 (where we still have lots of room!)\n \n          --    In_List            used as  Flag19, Flag40, Flag129, Flag216\n-         --    Unused_1           used as  Flag20, Flag41, Flag130, Flag217\n+         --    Flag3              used as  Flag20, Flag41, Flag130, Flag217\n          --    Rewrite_Ins        used as  Flag21, Flag42, Flag131, Flag218\n          --    Analyzed           used as  Flag22, Flag43, Flag132, Flag219\n          --    Comes_From_Source  used as  Flag23, Flag44, Flag133, Flag220\n@@ -3243,7 +3245,7 @@ package Atree is\n          Pflag1            => False,\n          Pflag2            => False,\n          In_List           => False,\n-         Unused_1          => False,\n+         Flag3             => False,\n          Rewrite_Ins       => False,\n          Analyzed          => False,\n          Comes_From_Source => False,\n@@ -3288,7 +3290,7 @@ package Atree is\n          Pflag1            => False,\n          Pflag2            => False,\n          In_List           => False,\n-         Unused_1          => False,\n+         Flag3             => False,\n          Rewrite_Ins       => False,\n          Analyzed          => False,\n          Comes_From_Source => False,"}, {"sha": "d7375e00146fe248a6e71fc9e5c596f8d63b62ad", "filename": "gcc/ada/atree.h", "status": "modified", "additions": 23, "deletions": 22, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/313d6f2c343c47b112863540d468d905d82a070b/gcc%2Fada%2Fatree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/313d6f2c343c47b112863540d468d905d82a070b/gcc%2Fada%2Fatree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.h?ref=313d6f2c343c47b112863540d468d905d82a070b", "patch": "@@ -36,16 +36,16 @@\n \n struct NFK\n {\n-  Boolean      is_extension      :  1;\n-  Boolean      pflag1            :  1;\n-  Boolean      pflag2            :  1;\n-  Boolean      in_list           :  1;\n-  Boolean      rewrite_sub       :  1;\n-  Boolean      rewrite_ins       :  1;\n-  Boolean      analyzed          :  1;\n-  Boolean      c_f_s\t\t :  1;\n-\n+  Boolean      is_extension  :  1;\n+  Boolean      pflag1        :  1;\n+  Boolean      pflag2        :  1;\n+  Boolean      in_list       :  1;\n+  Boolean      flag3         :  1;\n+  Boolean      rewrite_ins   :  1;\n+  Boolean      analyzed      :  1;\n+  Boolean      c_f_s\t     :  1;\n   Boolean      error_posted  :  1;\n+\n   Boolean      flag4  :  1;\n   Boolean      flag5  :  1;\n   Boolean      flag6  :  1;\n@@ -71,16 +71,16 @@ struct NFK\n \n struct NFNK\n {\n-  Boolean      is_extension      :  1;\n-  Boolean      pflag1            :  1;\n-  Boolean      pflag2            :  1;\n-  Boolean      in_list           :  1;\n-  Boolean      rewrite_sub       :  1;\n-  Boolean      rewrite_ins       :  1;\n-  Boolean      analyzed          :  1;\n-  Boolean      c_f_s\t\t :  1;\n-\n+  Boolean      is_extension  :  1;\n+  Boolean      pflag1        :  1;\n+  Boolean      pflag2        :  1;\n+  Boolean      in_list       :  1;\n+  Boolean      flag3         :  1;\n+  Boolean      rewrite_ins   :  1;\n+  Boolean      analyzed      :  1;\n+  Boolean      c_f_s\t     :  1;\n   Boolean      error_posted  :  1;\n+\n   Boolean      flag4  :  1;\n   Boolean      flag5  :  1;\n   Boolean      flag6  :  1;\n@@ -469,6 +469,7 @@ extern Node_Id Current_Error_Node;\n #define Convention(N) \\\n     (Nodes_Ptr[(N) - First_Node_Id + 2].V.EX.U.fw.convention)\n \n+#define Flag3(N)      (Nodes_Ptr[(N) - First_Node_Id].U.K.flag3)\n #define Flag4(N)      (Nodes_Ptr[(N) - First_Node_Id].U.K.flag4)\n #define Flag5(N)      (Nodes_Ptr[(N) - First_Node_Id].U.K.flag5)\n #define Flag6(N)      (Nodes_Ptr[(N) - First_Node_Id].U.K.flag6)\n@@ -486,7 +487,7 @@ extern Node_Id Current_Error_Node;\n #define Flag18(N)     (Nodes_Ptr[(N) - First_Node_Id].U.K.flag18)\n \n #define Flag19(N)     (Nodes_Ptr[(N) - First_Node_Id + 1].U.K.in_list)\n-#define Flag20(N)     (Nodes_Ptr[(N) - First_Node_Id + 1].U.K.rewrite_sub)\n+#define Flag20(N)     (Nodes_Ptr[(N) - First_Node_Id + 1].U.K.flag3)\n #define Flag21(N)     (Nodes_Ptr[(N) - First_Node_Id + 1].U.K.rewrite_ins)\n #define Flag22(N)     (Nodes_Ptr[(N) - First_Node_Id + 1].U.K.analyzed)\n #define Flag23(N)     (Nodes_Ptr[(N) - First_Node_Id + 1].U.K.c_f_s)\n@@ -508,7 +509,7 @@ extern Node_Id Current_Error_Node;\n #define Flag39(N)     (Nodes_Ptr[(N) - First_Node_Id + 1].U.K.flag18)\n \n #define Flag40(N)     (Nodes_Ptr[(N) - First_Node_Id + 2].U.K.in_list)\n-#define Flag41(N)     (Nodes_Ptr[(N) - First_Node_Id + 2].U.K.rewrite_sub)\n+#define Flag41(N)     (Nodes_Ptr[(N) - First_Node_Id + 2].U.K.flag3)\n #define Flag42(N)     (Nodes_Ptr[(N) - First_Node_Id + 2].U.K.rewrite_ins)\n #define Flag43(N)     (Nodes_Ptr[(N) - First_Node_Id + 2].U.K.analyzed)\n #define Flag44(N)     (Nodes_Ptr[(N) - First_Node_Id + 2].U.K.c_f_s)\n@@ -600,7 +601,7 @@ extern Node_Id Current_Error_Node;\n #define Flag128(N)     (Nodes_Ptr[(N) - First_Node_Id + 3].V.EX.U.fw2.flag128)\n \n #define Flag129(N)     (Nodes_Ptr[(N) - First_Node_Id + 3].U.K.in_list)\n-#define Flag130(N)     (Nodes_Ptr[(N) - First_Node_Id + 3].U.K.rewrite_sub)\n+#define Flag130(N)     (Nodes_Ptr[(N) - First_Node_Id + 3].U.K.flag3)\n #define Flag131(N)     (Nodes_Ptr[(N) - First_Node_Id + 3].U.K.rewrite_ins)\n #define Flag132(N)     (Nodes_Ptr[(N) - First_Node_Id + 3].U.K.analyzed)\n #define Flag133(N)     (Nodes_Ptr[(N) - First_Node_Id + 3].U.K.c_f_s)\n@@ -690,7 +691,7 @@ extern Node_Id Current_Error_Node;\n #define Flag215(N)     (Nodes_Ptr[(N) - First_Node_Id + 4].V.EX.U.fw4.flag215)\n \n #define Flag216(N)     (Nodes_Ptr[(N) - First_Node_Id + 4].U.K.in_list)\n-#define Flag217(N)     (Nodes_Ptr[(N) - First_Node_Id + 4].U.K.rewrite_sub)\n+#define Flag217(N)     (Nodes_Ptr[(N) - First_Node_Id + 4].U.K.flag3)\n #define Flag218(N)     (Nodes_Ptr[(N) - First_Node_Id + 4].U.K.rewrite_ins)\n #define Flag219(N)     (Nodes_Ptr[(N) - First_Node_Id + 4].U.K.analyzed)\n #define Flag220(N)     (Nodes_Ptr[(N) - First_Node_Id + 4].U.K.c_f_s)"}, {"sha": "6808dbef27e26d6effaade1025badc25ec963a87", "filename": "gcc/ada/csinfo.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/313d6f2c343c47b112863540d468d905d82a070b/gcc%2Fada%2Fcsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/313d6f2c343c47b112863540d468d905d82a070b/gcc%2Fada%2Fcsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcsinfo.adb?ref=313d6f2c343c47b112863540d468d905d82a070b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -210,6 +210,7 @@ begin\n    Set (Special, \"Etype\",                     True);\n    Set (Special, \"Evaluate_Once\",             True);\n    Set (Special, \"First_Itype\",               True);\n+   Set (Special, \"Has_Aspect_Specifications\", True);\n    Set (Special, \"Has_Dynamic_Itype\",         True);\n    Set (Special, \"Has_Dynamic_Range_Check\",   True);\n    Set (Special, \"Has_Dynamic_Length_Check\",  True);"}, {"sha": "9612408d71b7a8c1f6fb06e6b1acec15bff06253", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/313d6f2c343c47b112863540d468d905d82a070b/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/313d6f2c343c47b112863540d468d905d82a070b/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=313d6f2c343c47b112863540d468d905d82a070b", "patch": "@@ -241,9 +241,7 @@ package body Einfo is\n    --  sense for them to be set true for certain subsets of entity kinds. See\n    --  the spec of Einfo for further details.\n \n-   --  Note: Flag1-Flag3 are absent from this list, since these flag positions\n-   --  are used for the flags Analyzed, Comes_From_Source, and Error_Posted,\n-   --  which are common to all nodes, including entity nodes.\n+   --  Note: Flag1-Flag2 are absent from this list, for historical reasons\n \n    --    Is_Frozen                       Flag4\n    --    Has_Discriminants               Flag5\n@@ -512,6 +510,7 @@ package body Einfo is\n    --    Is_Underlying_Record_View       Flag246\n    --    OK_To_Rename                    Flag247\n \n+   --    (unused)                        Flag3\n    --    (unused)                        Flag200\n    --    (unused)                        Flag232\n "}, {"sha": "e0d703ba8220094c1afdd384c7a7128720ed7eec", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/313d6f2c343c47b112863540d468d905d82a070b/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/313d6f2c343c47b112863540d468d905d82a070b/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=313d6f2c343c47b112863540d468d905d82a070b", "patch": "@@ -2774,6 +2774,7 @@ package body Exp_Util is\n                N_Access_To_Object_Definition            |\n                N_Aggregate                              |\n                N_Allocator                              |\n+               N_Aspect_Specification                   |\n                N_Case_Expression                        |\n                N_Case_Statement_Alternative             |\n                N_Character_Literal                      |"}, {"sha": "2078c68b66aa8e491beba68e4d54c9b593a7de0c", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/313d6f2c343c47b112863540d468d905d82a070b/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/313d6f2c343c47b112863540d468d905d82a070b/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=313d6f2c343c47b112863540d468d905d82a070b", "patch": "@@ -636,6 +636,7 @@ package body Sem is\n            N_Access_Function_Definition             |\n            N_Access_Procedure_Definition            |\n            N_Access_To_Object_Definition            |\n+           N_Aspect_Specification                   |\n            N_Case_Expression_Alternative            |\n            N_Case_Statement_Alternative             |\n            N_Compilation_Unit_Aux                   |"}, {"sha": "efd8d8e73b0ce55786b2267c8a33d50f997a0812", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/313d6f2c343c47b112863540d468d905d82a070b/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/313d6f2c343c47b112863540d468d905d82a070b/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=313d6f2c343c47b112863540d468d905d82a070b", "patch": "@@ -1338,13 +1338,17 @@ package body Sem_Prag is\n               (\"argument for pragma% must be library level entity\", Arg1);\n          end if;\n \n-         --  AI05-0033 : pragma cannot appear within a generic body, because\n+         --  AI05-0033: A pragma cannot appear within a generic body, because\n          --  instance can be in a nested scope. The check that protected type\n          --  is itself a library-level declaration is done elsewhere.\n \n+         --  Note: we omit this check in Codepeer mode to properly handle code\n+         --  prior to AI-0033 (pragmas don't matter to codepeer in any case).\n+\n          if Inside_A_Generic then\n             if Ekind (Scope (Current_Scope)) = E_Generic_Package\n-               and then In_Package_Body (Scope (Current_Scope))\n+              and then In_Package_Body (Scope (Current_Scope))\n+              and then not CodePeer_Mode\n             then\n                Error_Pragma (\"pragma% cannot be used inside a generic\");\n             end if;"}, {"sha": "1cb7d1909272dbaa91a80618457ea39b4ddd3330", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 155, "deletions": 2, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/313d6f2c343c47b112863540d468d905d82a070b/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/313d6f2c343c47b112863540d468d905d82a070b/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=313d6f2c343c47b112863540d468d905d82a070b", "patch": "@@ -32,7 +32,10 @@\n pragma Style_Checks (All_Checks);\n --  No subprogram ordering check, due to logical grouping\n \n-with Atree; use Atree;\n+with Atree;  use Atree;\n+with Nlists; use Nlists;\n+\n+with System.HTable;\n \n package body Sinfo is\n \n@@ -53,6 +56,30 @@ package body Sinfo is\n    NT : Nodes.Table_Ptr renames Nodes.Table;\n    --  A short hand abbreviation, useful for the debugging checks\n \n+   ------------------------------------------\n+   -- Hash Table for Aspect Specifications --\n+   ------------------------------------------\n+\n+   type Hash_Range is range 0 .. 510;\n+   --  Size of hash table headers\n+\n+   function AS_Hash (F : Node_Id) return Hash_Range;\n+   --  Hash function for hash table\n+\n+   function AS_Hash (F : Node_Id) return Hash_Range is\n+   begin\n+      return Hash_Range (F mod 511);\n+   end AS_Hash;\n+\n+   package Aspect_Specifications_Hash_Table is new\n+     System.HTable.Simple_HTable\n+       (Header_Num => Hash_Range,\n+        Element    => List_Id,\n+        No_Element => No_List,\n+        Key        => Node_Id,\n+        Hash       => AS_Hash,\n+        Equal      => \"=\");\n+\n    ----------------------------\n    -- Field Access Functions --\n    ----------------------------\n@@ -392,6 +419,14 @@ package body Sinfo is\n       return List1 (N);\n    end Choices;\n \n+   function Class_Present\n+      (N : Node_Id) return Boolean is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Aspect_Specification);\n+      return Flag6 (N);\n+   end Class_Present;\n+\n    function Coextensions\n       (N : Node_Id) return Elist_Id is\n    begin\n@@ -1171,6 +1206,7 @@ package body Sinfo is\n    begin\n       pragma Assert (False\n         or else NT (N).Nkind = N_Allocator\n+        or else NT (N).Nkind = N_Aspect_Specification\n         or else NT (N).Nkind = N_Assignment_Statement\n         or else NT (N).Nkind = N_At_Clause\n         or else NT (N).Nkind = N_Attribute_Definition_Clause\n@@ -1215,6 +1251,14 @@ package body Sinfo is\n       return List1 (N);\n    end Expressions;\n \n+   function First_Aspect\n+      (N : Node_Id) return Boolean is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Aspect_Specification);\n+      return Flag4 (N);\n+   end First_Aspect;\n+\n    function First_Bit\n       (N : Node_Id) return Node_Id is\n    begin\n@@ -1373,6 +1417,13 @@ package body Sinfo is\n       return Node2 (N);\n    end Handler_List_Entry;\n \n+   function Has_Aspect_Specifications\n+      (N : Node_Id) return Boolean is\n+   begin\n+      pragma Assert (Permits_Aspect_Specifications (N));\n+      return Flag3 (N);\n+   end Has_Aspect_Specifications;\n+\n    function Has_Created_Identifier\n       (N : Node_Id) return Boolean is\n    begin\n@@ -1387,7 +1438,6 @@ package body Sinfo is\n    begin\n       return Flag10 (N);\n    end Has_Dynamic_Length_Check;\n-\n    function Has_Dynamic_Range_Check\n       (N : Node_Id) return Boolean is\n    begin\n@@ -1521,6 +1571,7 @@ package body Sinfo is\n       (N : Node_Id) return Node_Id is\n    begin\n       pragma Assert (False\n+        or else NT (N).Nkind = N_Aspect_Specification\n         or else NT (N).Nkind = N_At_Clause\n         or else NT (N).Nkind = N_Block_Statement\n         or else NT (N).Nkind = N_Designator\n@@ -1818,6 +1869,14 @@ package body Sinfo is\n       return Node2 (N);\n    end Label_Construct;\n \n+   function Last_Aspect\n+      (N : Node_Id) return Boolean is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Aspect_Specification);\n+      return Flag5 (N);\n+   end Last_Aspect;\n+\n    function Last_Bit\n       (N : Node_Id) return Node_Id is\n    begin\n@@ -3307,6 +3366,14 @@ package body Sinfo is\n       Set_List1_With_Parent (N, Val);\n    end Set_Choices;\n \n+   procedure Set_Class_Present\n+      (N : Node_Id; Val : Boolean := True) is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Aspect_Specification);\n+      Set_Flag6 (N, Val);\n+   end Set_Class_Present;\n+\n    procedure Set_Coextensions\n       (N : Node_Id; Val : Elist_Id) is\n    begin\n@@ -4077,6 +4144,7 @@ package body Sinfo is\n    begin\n       pragma Assert (False\n         or else NT (N).Nkind = N_Allocator\n+        or else NT (N).Nkind = N_Aspect_Specification\n         or else NT (N).Nkind = N_Assignment_Statement\n         or else NT (N).Nkind = N_At_Clause\n         or else NT (N).Nkind = N_Attribute_Definition_Clause\n@@ -4121,6 +4189,14 @@ package body Sinfo is\n       Set_List1_With_Parent (N, Val);\n    end Set_Expressions;\n \n+   procedure Set_First_Aspect\n+      (N : Node_Id; Val : Boolean := True) is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Aspect_Specification);\n+      Set_Flag4 (N, Val);\n+   end Set_First_Aspect;\n+\n    procedure Set_First_Bit\n       (N : Node_Id; Val : Node_Id) is\n    begin\n@@ -4279,6 +4355,13 @@ package body Sinfo is\n       Set_Node2 (N, Val);\n    end Set_Handler_List_Entry;\n \n+   procedure Set_Has_Aspect_Specifications\n+      (N : Node_Id; Val : Boolean := True) is\n+   begin\n+      pragma Assert (Permits_Aspect_Specifications (N));\n+      Set_Flag3 (N, Val);\n+   end Set_Has_Aspect_Specifications;\n+\n    procedure Set_Has_Created_Identifier\n       (N : Node_Id; Val : Boolean := True) is\n    begin\n@@ -4427,6 +4510,7 @@ package body Sinfo is\n       (N : Node_Id; Val : Node_Id) is\n    begin\n       pragma Assert (False\n+        or else NT (N).Nkind = N_Aspect_Specification\n         or else NT (N).Nkind = N_At_Clause\n         or else NT (N).Nkind = N_Block_Statement\n         or else NT (N).Nkind = N_Designator\n@@ -4732,6 +4816,14 @@ package body Sinfo is\n       Set_Node4_With_Parent (N, Val);\n    end Set_Last_Bit;\n \n+   procedure Set_Last_Aspect\n+      (N : Node_Id; Val : Boolean := True) is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Aspect_Specification);\n+      Set_Flag5 (N, Val);\n+   end Set_Last_Aspect;\n+\n    procedure Set_Last_Name\n       (N : Node_Id; Val : Boolean := True) is\n    begin\n@@ -6071,4 +6163,65 @@ package body Sinfo is\n       return Chars (Pragma_Identifier (N));\n    end Pragma_Name;\n \n+   -----------------------------------\n+   -- Permits_Aspect_Specifications --\n+   -----------------------------------\n+\n+   Has_Aspect_Specifications_Flag : constant array (Node_Kind) of Boolean :=\n+     (N_Abstract_Subprogram_Declaration        => True,\n+      N_Component_Declaration                  => True,\n+      N_Entry_Declaration                      => True,\n+      N_Exception_Declaration                  => True,\n+      N_Formal_Abstract_Subprogram_Declaration => True,\n+      N_Formal_Concrete_Subprogram_Declaration => True,\n+      N_Formal_Object_Declaration              => True,\n+      N_Formal_Package_Declaration             => True,\n+      N_Formal_Type_Declaration                => True,\n+      N_Full_Type_Declaration                  => True,\n+      N_Function_Instantiation                 => True,\n+      N_Generic_Package_Declaration            => True,\n+      N_Generic_Subprogram_Declaration         => True,\n+      N_Object_Declaration                     => True,\n+      N_Package_Declaration                    => True,\n+      N_Package_Instantiation                  => True,\n+      N_Private_Extension_Declaration          => True,\n+      N_Private_Type_Declaration               => True,\n+      N_Procedure_Instantiation                => True,\n+      N_Protected_Type_Declaration             => True,\n+      N_Single_Protected_Declaration           => True,\n+      N_Single_Task_Declaration                => True,\n+      N_Subprogram_Declaration                 => True,\n+      N_Subtype_Declaration                    => True,\n+      N_Task_Type_Declaration                  => True,\n+      others                                   => False);\n+\n+   function Permits_Aspect_Specifications (N : Node_Id) return Boolean is\n+   begin\n+      return Has_Aspect_Specifications_Flag (Nkind (N));\n+   end Permits_Aspect_Specifications;\n+\n+   ---------------------------\n+   -- Aspect_Specifications --\n+   ---------------------------\n+\n+   function Aspect_Specifications (N : Node_Id) return List_Id is\n+   begin\n+      return Aspect_Specifications_Hash_Table.Get (N);\n+   end Aspect_Specifications;\n+\n+   -------------------------------\n+   -- Set_Aspect_Specifications --\n+   -------------------------------\n+\n+   procedure Set_Aspect_Specifications (N : Node_Id; L : List_Id) is\n+   begin\n+      pragma Assert (Permits_Aspect_Specifications (N));\n+      pragma Assert (not Has_Aspect_Specifications (N));\n+      pragma Assert (L /= No_List);\n+\n+      Set_Has_Aspect_Specifications (N);\n+      Set_Parent (L, N);\n+      Aspect_Specifications_Hash_Table.Set (N, L);\n+   end Set_Aspect_Specifications;\n+\n end Sinfo;"}, {"sha": "7cf12ead93cd8b41e85fd7beee42f3f996e8c9be", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 180, "deletions": 5, "changes": 185, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/313d6f2c343c47b112863540d468d905d82a070b/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/313d6f2c343c47b112863540d468d905d82a070b/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=313d6f2c343c47b112863540d468d905d82a070b", "patch": "@@ -2102,6 +2102,9 @@ package Sinfo is\n       --  Discriminant_Specifications (List4) (set to No_List if none)\n       --  Type_Definition (Node3)\n       --  Discr_Check_Funcs_Built (Flag11-Sem)\n+      --  Has_Aspect_Specifications (Flag3)\n+\n+      --  Note: Aspect_Specification is an Ada 2012 feature\n \n       ----------------------------\n       -- 3.2.1  Type Definition --\n@@ -2130,6 +2133,9 @@ package Sinfo is\n       --  Subtype_Indication (Node5)\n       --  Generic_Parent_Type (Node4-Sem) (set for an actual derived type).\n       --  Exception_Junk (Flag8-Sem)\n+      --  Has_Aspect_Specifications (Flag3)\n+\n+      --  Note: Aspect_Specification is an Ada 2012 feature\n \n       -------------------------------\n       -- 3.2.2  Subtype Indication --\n@@ -2260,6 +2266,9 @@ package Sinfo is\n       --  Exception_Junk (Flag8-Sem)\n       --  Is_Subprogram_Descriptor (Flag16-Sem)\n       --  Has_Init_Expression (Flag14)\n+      --  Has_Aspect_Specifications (Flag3)\n+\n+      --  Note: Aspect_Specification is an Ada 2012 feature\n \n       -------------------------------------\n       -- 3.3.1  Defining Identifier List --\n@@ -2832,6 +2841,9 @@ package Sinfo is\n       --  Expression (Node3) (set to Empty if no default expression)\n       --  More_Ids (Flag5) (set to False if no more identifiers in list)\n       --  Prev_Ids (Flag6) (set to False if no previous identifiers in list)\n+      --  Has_Aspect_Specifications (Flag3)\n+\n+      --  Note: Aspect_Specification is an Ada 2012 feature\n \n       -------------------------\n       -- 3.8.1  Variant Part --\n@@ -4185,6 +4197,9 @@ package Sinfo is\n       --  Body_To_Inline (Node3-Sem)\n       --  Corresponding_Body (Node5-Sem)\n       --  Parent_Spec (Node4-Sem)\n+      --  Has_Aspect_Specifications (Flag3)\n+\n+      --  Note: Aspect_Specification is an Ada 2012 feature\n \n       ------------------------------------------\n       -- 6.1  Abstract Subprogram Declaration --\n@@ -4196,6 +4211,9 @@ package Sinfo is\n       --  N_Abstract_Subprogram_Declaration\n       --  Sloc points to ABSTRACT\n       --  Specification (Node1)\n+      --  Has_Aspect_Specifications (Flag3)\n+\n+      --  Note: Aspect_Specification is an Ada 2012 feature\n \n       -----------------------------------\n       -- 6.1  Subprogram Specification --\n@@ -4586,9 +4604,12 @@ package Sinfo is\n       --  By_Ref (Flag5-Sem)\n \n       --  Note: Return_Statement_Entity points to an E_Return_Statement.\n+\n       --  Note that Return_Object_Declarations is a list containing the\n       --  N_Object_Declaration -- see comment on this field above.\n+\n       --  The declared object will have Is_Return_Object = True.\n+\n       --  There is no such syntactic category as return_object_declaration\n       --  in the RM. Return_Object_Declarations represents this portion of\n       --  the syntax for EXTENDED_RETURN_STATEMENT:\n@@ -4616,6 +4637,9 @@ package Sinfo is\n       --  Corresponding_Body (Node5-Sem)\n       --  Parent_Spec (Node4-Sem)\n       --  Activation_Chain_Entity (Node3-Sem)\n+      --  Has_Aspect_Specifications (Flag3)\n+\n+      --  Note: Aspect_Specification is an Ada 2012 feature\n \n       --------------------------------\n       -- 7.1  Package Specification --\n@@ -4682,6 +4706,9 @@ package Sinfo is\n       --  Abstract_Present (Flag4)\n       --  Tagged_Present (Flag15)\n       --  Limited_Present (Flag17)\n+      --  Has_Aspect_Specifications (Flag3)\n+\n+      --  Note: Aspect_Specification is an Ada 2012 feature\n \n       ----------------------------------------\n       -- 7.4  Private Extension Declaration --\n@@ -4707,6 +4734,9 @@ package Sinfo is\n       --  Synchronized_Present (Flag7)\n       --  Subtype_Indication (Node5)\n       --  Interface_List (List2) (set to No_List if none)\n+      --  Has_Aspect_Specifications (Flag3)\n+\n+      --  Note: Aspect_Specification is an Ada 2012 feature\n \n       ---------------------\n       -- 8.4  Use Clause --\n@@ -4864,6 +4894,9 @@ package Sinfo is\n       --  Interface_List (List2) (set to No_List if none)\n       --  Task_Definition (Node3) (set to Empty if not present)\n       --  Corresponding_Body (Node5-Sem)\n+      --  Has_Aspect_Specifications (Flag3)\n+\n+      --  Note: Aspect_Specification is an Ada 2012 feature\n \n       ----------------------------------\n       -- 9.1  Single Task Declaration --\n@@ -4878,6 +4911,9 @@ package Sinfo is\n       --  Defining_Identifier (Node1)\n       --  Interface_List (List2) (set to No_List if none)\n       --  Task_Definition (Node3) (set to Empty if not present)\n+      --  Has_Aspect_Specifications (Flag3)\n+\n+      --  Note: Aspect_Specification is an Ada 2012 feature\n \n       --------------------------\n       -- 9.1  Task Definition --\n@@ -4950,6 +4986,9 @@ package Sinfo is\n       --  Interface_List (List2) (set to No_List if none)\n       --  Protected_Definition (Node3)\n       --  Corresponding_Body (Node5-Sem)\n+      --  Has_Aspect_Specifications (Flag3)\n+\n+      --  Note: Aspect_Specification is an Ada 2012 feature\n \n       ---------------------------------------\n       -- 9.4  Single Protected Declaration --\n@@ -4966,6 +5005,9 @@ package Sinfo is\n       --  Defining_Identifier (Node1)\n       --  Interface_List (List2) (set to No_List if none)\n       --  Protected_Definition (Node3)\n+      --  Has_Aspect_Specifications (Flag3)\n+\n+      --  Note: Aspect_Specification is an Ada 2012 feature\n \n       -------------------------------\n       -- 9.4  Protected Definition --\n@@ -5048,8 +5090,10 @@ package Sinfo is\n       --  Corresponding_Body (Node5-Sem)\n       --  Must_Override (Flag14) set if overriding indicator present\n       --  Must_Not_Override (Flag15) set if not_overriding indicator present\n+      --  Has_Aspect_Specifications (Flag3)\n \n       --  Note: overriding indicator is an Ada 2005 feature\n+      --  Note: Aspect_Specification is an Ada 2012 feature\n \n       -----------------------------\n       -- 9.5.2  Accept statement --\n@@ -5713,6 +5757,9 @@ package Sinfo is\n       --  Renaming_Exception (Node2-Sem)\n       --  More_Ids (Flag5) (set to False if no more identifiers in list)\n       --  Prev_Ids (Flag6) (set to False if no previous identifiers in list)\n+      --  Has_Aspect_Specifications (Flag3)\n+\n+      --  Note: Aspect_Specification is an Ada 2012 feature\n \n       ------------------------------------------\n       -- 11.2  Handled Sequence Of Statements --\n@@ -5861,6 +5908,9 @@ package Sinfo is\n       --  Corresponding_Body (Node5-Sem)\n       --  Generic_Formal_Declarations (List2) from generic formal part\n       --  Parent_Spec (Node4-Sem)\n+      --  Has_Aspect_Specifications (Flag3)\n+\n+      --  Note: Aspect_Specification is an Ada 2012 feature\n \n       ---------------------------------------\n       -- 12.1  Generic Package Declaration --\n@@ -5882,6 +5932,9 @@ package Sinfo is\n       --  Generic_Formal_Declarations (List2) from generic formal part\n       --  Parent_Spec (Node4-Sem)\n       --  Activation_Chain_Entity (Node3-Sem)\n+      --  Has_Aspect_Specifications (Flag3)\n+\n+      --  Note: Aspect_Specification is an Ada 2012 feature\n \n       -------------------------------\n       -- 12.1  Generic Formal Part --\n@@ -5923,6 +5976,7 @@ package Sinfo is\n       --  Parent_Spec (Node4-Sem)\n       --  Instance_Spec (Node5-Sem)\n       --  ABE_Is_Certain (Flag18-Sem)\n+      --  Has_Aspect_Specifications (Flag3)\n \n       --  N_Procedure_Instantiation\n       --  Sloc points to PROCEDURE\n@@ -5935,6 +5989,7 @@ package Sinfo is\n       --  Must_Override (Flag14) set if overriding indicator present\n       --  Must_Not_Override (Flag15) set if not_overriding indicator present\n       --  ABE_Is_Certain (Flag18-Sem)\n+      --  Has_Aspect_Specifications (Flag3)\n \n       --  N_Function_Instantiation\n       --  Sloc points to FUNCTION\n@@ -5947,8 +6002,10 @@ package Sinfo is\n       --  Must_Override (Flag14) set if overriding indicator present\n       --  Must_Not_Override (Flag15) set if not_overriding indicator present\n       --  ABE_Is_Certain (Flag18-Sem)\n+      --  Has_Aspect_Specifications (Flag3)\n \n       --  Note: overriding indicator is an Ada 2005 feature\n+      --  Note: Aspect_Specification is an Ada 2012 feature\n \n       -------------------------------\n       -- 12.3  Generic Actual Part --\n@@ -6019,6 +6076,9 @@ package Sinfo is\n       --  Default_Expression (Node5) (set to Empty if no default expression)\n       --  More_Ids (Flag5) (set to False if no more identifiers in list)\n       --  Prev_Ids (Flag6) (set to False if no previous identifiers in list)\n+      --  Has_Aspect_Specifications (Flag3)\n+\n+      --  Note: Aspect_Specification is an Ada 2012 feature\n \n       -----------------------------------\n       -- 12.5  Formal Type Declaration --\n@@ -6035,6 +6095,9 @@ package Sinfo is\n       --  Discriminant_Specifications (List4) (set to No_List if no\n       --   discriminant part)\n       --  Unknown_Discriminants_Present (Flag13) set if (<>) discriminant\n+      --  Has_Aspect_Specifications (Flag3)\n+\n+      --  Note: Aspect_Specification is an Ada 2012 feature\n \n       ----------------------------------\n       -- 12.5  Formal type definition --\n@@ -6180,10 +6243,13 @@ package Sinfo is\n       --  Specification (Node1)\n       --  Default_Name (Node2) (set to Empty if no subprogram default)\n       --  Box_Present (Flag15)\n+      --  Has_Aspect_Specifications (Flag3)\n \n       --  Note: if no subprogram default is present, then Name is set\n       --  to Empty, and Box_Present is False.\n \n+      --  Note: Aspect_Specification is an Ada 2012 feature\n+\n       --------------------------------------------------\n       -- 12.6  Formal Abstract Subprogram Declaration --\n       --------------------------------------------------\n@@ -6196,10 +6262,13 @@ package Sinfo is\n       --  Specification (Node1)\n       --  Default_Name (Node2) (set to Empty if no subprogram default)\n       --  Box_Present (Flag15)\n+      --  Has_Aspect_Specifications (Flag3)\n \n       --  Note: if no subprogram default is present, then Name is set\n       --  to Empty, and Box_Present is False.\n \n+      --  Note: Aspect_Specification is an Ada 2012 feature\n+\n       ------------------------------\n       -- 12.6  Subprogram Default --\n       ------------------------------\n@@ -6236,6 +6305,9 @@ package Sinfo is\n       --  Box_Present (Flag15)\n       --  Instance_Spec (Node5-Sem)\n       --  ABE_Is_Certain (Flag18-Sem)\n+      --  Has_Aspect_Specifications (Flag3)\n+\n+      --  Note: Aspect_Specification is an Ada 2012 feature\n \n       --------------------------------------\n       -- 12.7  Formal Package Actual Part --\n@@ -6325,6 +6397,32 @@ package Sinfo is\n       --  Check_Address_Alignment (Flag11-Sem)\n       --  Address_Warning_Posted (Flag18-Sem)\n \n+      ----------------------------------\n+      -- 13.3.1  Aspect Specification --\n+      ----------------------------------\n+\n+      --  ASPECT_SPECIFICATION ::=\n+      --    with ASPECT_MARK [=> ASPECT_DEFINITION] {.\n+      --         ASPECT_MARK [=> ASPECT_DEFINITION] }\n+\n+      --  ASPECT_MARK ::= aspect_IDENTIFIER['Class]\n+\n+      --  ASPECT_DEFINITION ::= NAME | EXPRESSION\n+\n+      --  See separate section \"Handling of Aspect Specifications\" for details\n+      --  on the incorporation of these nodes into the tree, and association\n+      --  with the related declaration node.\n+\n+      --  N_Aspect_Specification\n+      --  Sloc points to aspect identifier\n+      --  Identifier (Node1) aspect identifier\n+      --  Expression (Node3) Aspect_Definition (set to Empty if none)\n+      --  First_Aspect (Flag4) Set for first aspect for a declaration\n+      --  Last_Aspect (Flag5) Set for last aspect for a declaration\n+      --  Class_Present (Flag6) Set if 'Class present\n+\n+      --  Note: Aspect_Specification is an Ada 2012 feature\n+\n       ---------------------------------------------\n       -- 13.4  Enumeration representation clause --\n       ---------------------------------------------\n@@ -7180,6 +7278,7 @@ package Sinfo is\n       N_Enumeration_Representation_Clause,\n       N_Mod_Clause,\n       N_Record_Representation_Clause,\n+      N_Aspect_Specification,\n \n       --  N_Representation_Clause, N_Has_Chars\n \n@@ -7849,6 +7948,9 @@ package Sinfo is\n    function Choices\n      (N : Node_Id) return List_Id;    -- List1\n \n+   function Class_Present\n+     (N : Node_Id) return Boolean;    -- Flag6\n+\n    function Coextensions\n       (N : Node_Id) return Elist_Id;  -- Elist4\n \n@@ -8095,6 +8197,9 @@ package Sinfo is\n    function Expressions\n      (N : Node_Id) return List_Id;    -- List1\n \n+   function First_Aspect\n+     (N : Node_Id) return Boolean;    -- Flag4\n+\n    function First_Bit\n      (N : Node_Id) return Node_Id;    -- Node3\n \n@@ -8149,6 +8254,9 @@ package Sinfo is\n    function Handler_List_Entry\n      (N : Node_Id) return Node_Id;    -- Node2\n \n+   function Has_Aspect_Specifications\n+     (N : Node_Id) return Boolean;    -- Flag3\n+\n    function Has_Created_Identifier\n      (N : Node_Id) return Boolean;    -- Flag15\n \n@@ -8308,6 +8416,9 @@ package Sinfo is\n    function Left_Opnd\n      (N : Node_Id) return Node_Id;    -- Node2\n \n+   function Last_Aspect\n+     (N : Node_Id) return Boolean;    -- Flag5\n+\n    function Last_Bit\n      (N : Node_Id) return Node_Id;    -- Node4\n \n@@ -8731,6 +8842,9 @@ package Sinfo is\n    procedure Set_Array_Aggregate\n      (N : Node_Id; Val : Node_Id);            -- Node3\n \n+   procedure Set_Has_Aspect_Specifications\n+     (N : Node_Id; Val : Boolean := True);    -- Flag3\n+\n    procedure Set_Assignment_OK\n      (N : Node_Id; Val : Boolean := True);    -- Flag15\n \n@@ -8776,12 +8890,15 @@ package Sinfo is\n    procedure Set_Choice_Parameter\n      (N : Node_Id; Val : Node_Id);            -- Node2\n \n-   procedure Set_Coextensions\n-     (N : Node_Id; Val : Elist_Id);           -- Elist4\n-\n    procedure Set_Choices\n      (N : Node_Id; Val : List_Id);            -- List1\n \n+   procedure Set_Class_Present\n+     (N : Node_Id; Val : Boolean := True);    -- Flag6\n+\n+   procedure Set_Coextensions\n+     (N : Node_Id; Val : Elist_Id);           -- Elist4\n+\n    procedure Set_Comes_From_Extended_Return_Statement\n      (N : Node_Id; Val : Boolean := True);    -- Flag18\n \n@@ -9022,6 +9139,9 @@ package Sinfo is\n    procedure Set_Expressions\n      (N : Node_Id; Val : List_Id);            -- List1\n \n+   procedure Set_First_Aspect\n+     (N : Node_Id; Val : Boolean := True);    -- Flag4\n+\n    procedure Set_First_Bit\n      (N : Node_Id; Val : Node_Id);            -- Node3\n \n@@ -9229,6 +9349,9 @@ package Sinfo is\n    procedure Set_Kill_Range_Check\n      (N : Node_Id; Val : Boolean := True);    -- Flag11\n \n+   procedure Set_Last_Aspect\n+     (N : Node_Id; Val : Boolean := True);    -- Flag5\n+\n    procedure Set_Last_Bit\n      (N : Node_Id; Val : Node_Id);            -- Node4\n \n@@ -11001,6 +11124,13 @@ package Sinfo is\n         4 => False,   --  unused\n         5 => False),  --  Next_Rep_Item (Node5-Sem)\n \n+     N_Aspect_Specification =>\n+       (1 => True,    --  Identifier (Node1)\n+        2 => False,   --  unused\n+        3 => True,    --  Expression (Node3)\n+        4 => False,   --  unused\n+        5 => False),  --  unused\n+\n      N_Enumeration_Representation_Clause =>\n        (1 => True,    --  Identifier (Node1)\n         2 => False,   --  unused\n@@ -11232,8 +11362,6 @@ package Sinfo is\n         4 => False,   --  unused\n         5 => False),  --  unused\n \n-   --  End of inserted output from makeisf program\n-\n    --  Entries for SCIL nodes\n \n      N_SCIL_Dispatch_Table_Tag_Init =>\n@@ -11289,6 +11417,45 @@ package Sinfo is\n         4 => False,   --  unused\n         5 => False)); --  unused\n \n+   ---------------------------------------\n+   -- Handling of Aspect Specifications --\n+   ---------------------------------------\n+\n+   --  Several kinds of declaration node permit aspect specifications in Ada\n+   --  2012 mode. If there was room in all these declaration nodes, we could\n+   --  just have a field Aspect_Specifications pointing to a list of nodes\n+   --  for the aspects (N_Aspect_Specification nodes). But there isn't room,\n+   --  so we adopt a different approach.\n+\n+   --  The following subprograms provide access to a specialized interface\n+   --  implemented internally with a hash table in the body, that provides\n+   --  access to aspect specifications.\n+\n+   function Permits_Aspect_Specifications (N : Node_Id) return Boolean;\n+   --  Returns True if the node N is a declaration node that permits aspect\n+   --  specifications. All such nodes have the Has_Aspect_Specifications\n+   --  flag defined. Returns False for all other nodes.\n+\n+   function Aspect_Specifications (N : Node_Id) return List_Id;\n+   --  Given a node N, returns the list of N_Aspect_Specification nodes that\n+   --  are attached to this declaration node. If the node is in the class of\n+   --  declaration nodes that permit aspect specifications, as defined by the\n+   --  predicate above, and if their Has_Aspect_Specifications flag is set to\n+   --  True, then this will always be a non-empty list. If this flag is set to\n+   --  False, or the node is not in the declaration class permitting aspect\n+   --  specifications, then No_List is returned.\n+\n+   procedure Set_Aspect_Specifications (N : Node_Id; L : List_Id);\n+   --  The node N must be in the class of declaration nodes that permit aspect\n+   --  specifications and the Has_Aspect_Specifications flag must be False on\n+   --  entry. L must be a non-empty list of N_Aspect_Specification nodes. This\n+   --  procedure sets the Has_Aspect_Specifications flag to True, and makes an\n+   --  entry that can be retrieved by a subsequent Aspect_Specifications call.\n+   --  The parent of list L is set to reference the declaration node N. It is\n+   --  an error to call this procedure with a node that does not permit aspect\n+   --  specifications, or a node that has its Has_Aspect_Specifications flag\n+   --  set True on entry, or with L being an empty list or No_List.\n+\n    --------------------\n    -- Inline Pragmas --\n    --------------------\n@@ -11330,6 +11497,7 @@ package Sinfo is\n    pragma Inline (Check_Address_Alignment);\n    pragma Inline (Choice_Parameter);\n    pragma Inline (Choices);\n+   pragma Inline (Class_Present);\n    pragma Inline (Coextensions);\n    pragma Inline (Comes_From_Extended_Return_Statement);\n    pragma Inline (Compile_Time_Known_Aggregate);\n@@ -11412,6 +11580,7 @@ package Sinfo is\n    pragma Inline (Explicit_Generic_Actual_Parameter);\n    pragma Inline (Expression);\n    pragma Inline (Expressions);\n+   pragma Inline (First_Aspect);\n    pragma Inline (First_Bit);\n    pragma Inline (First_Inlined_Subprogram);\n    pragma Inline (First_Name);\n@@ -11430,6 +11599,7 @@ package Sinfo is\n    pragma Inline (Generic_Parent_Type);\n    pragma Inline (Handled_Statement_Sequence);\n    pragma Inline (Handler_List_Entry);\n+   pragma Inline (Has_Aspect_Specifications);\n    pragma Inline (Has_Created_Identifier);\n    pragma Inline (Has_Dynamic_Length_Check);\n    pragma Inline (Has_Dynamic_Range_Check);\n@@ -11481,6 +11651,7 @@ package Sinfo is\n    pragma Inline (Iteration_Scheme);\n    pragma Inline (Itype);\n    pragma Inline (Kill_Range_Check);\n+   pragma Inline (Last_Aspect);\n    pragma Inline (Last_Bit);\n    pragma Inline (Last_Name);\n    pragma Inline (Library_Unit);\n@@ -11637,6 +11808,7 @@ package Sinfo is\n    pragma Inline (Set_Check_Address_Alignment);\n    pragma Inline (Set_Choice_Parameter);\n    pragma Inline (Set_Choices);\n+   pragma Inline (Set_Class_Present);\n    pragma Inline (Set_Coextensions);\n    pragma Inline (Set_Comes_From_Extended_Return_Statement);\n    pragma Inline (Set_Compile_Time_Known_Aggregate);\n@@ -11718,6 +11890,7 @@ package Sinfo is\n    pragma Inline (Set_Explicit_Generic_Actual_Parameter);\n    pragma Inline (Set_Expression);\n    pragma Inline (Set_Expressions);\n+   pragma Inline (Set_First_Aspect);\n    pragma Inline (Set_First_Bit);\n    pragma Inline (Set_First_Inlined_Subprogram);\n    pragma Inline (Set_First_Name);\n@@ -11736,6 +11909,7 @@ package Sinfo is\n    pragma Inline (Set_Generic_Parent_Type);\n    pragma Inline (Set_Handled_Statement_Sequence);\n    pragma Inline (Set_Handler_List_Entry);\n+   pragma Inline (Set_Has_Aspect_Specifications);\n    pragma Inline (Set_Has_Created_Identifier);\n    pragma Inline (Set_Has_Dynamic_Length_Check);\n    pragma Inline (Set_Has_Init_Expression);\n@@ -11787,6 +11961,7 @@ package Sinfo is\n    pragma Inline (Set_Iteration_Scheme);\n    pragma Inline (Set_Itype);\n    pragma Inline (Set_Kill_Range_Check);\n+   pragma Inline (Set_Last_Aspect);\n    pragma Inline (Set_Last_Bit);\n    pragma Inline (Set_Last_Name);\n    pragma Inline (Set_Library_Unit);"}, {"sha": "816750c6c19cb84eee57fa691b6b4ad9269ebdf7", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/313d6f2c343c47b112863540d468d905d82a070b/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/313d6f2c343c47b112863540d468d905d82a070b/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=313d6f2c343c47b112863540d468d905d82a070b", "patch": "@@ -999,12 +999,8 @@ package body Sprint is\n             Write_Str_Sloc (\" and then \");\n             Sprint_Right_Opnd (Node);\n \n-         when N_At_Clause =>\n-            Write_Indent_Str_Sloc (\"for \");\n-            Write_Id (Identifier (Node));\n-            Write_Str_With_Col_Check (\" use at \");\n-            Sprint_Node (Expression (Node));\n-            Write_Char (';');\n+         when N_Aspect_Specification =>\n+            raise Program_Error;\n \n          when N_Assignment_Statement =>\n             Write_Indent;\n@@ -1026,6 +1022,13 @@ package body Sprint is\n             Sprint_Node (Abortable_Part (Node));\n             Write_Indent_Str (\"end select;\");\n \n+         when N_At_Clause =>\n+            Write_Indent_Str_Sloc (\"for \");\n+            Write_Id (Identifier (Node));\n+            Write_Str_With_Col_Check (\" use at \");\n+            Sprint_Node (Expression (Node));\n+            Write_Char (';');\n+\n          when N_Attribute_Definition_Clause =>\n             Write_Indent_Str_Sloc (\"for \");\n             Sprint_Node (Name (Node));"}, {"sha": "2b49cb387486e7ef374d83fdf8e56ce5f031a8ef", "filename": "gcc/ada/treepr.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/313d6f2c343c47b112863540d468d905d82a070b/gcc%2Fada%2Ftreepr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/313d6f2c343c47b112863540d468d905d82a070b/gcc%2Fada%2Ftreepr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftreepr.adb?ref=313d6f2c343c47b112863540d468d905d82a070b", "patch": "@@ -1099,6 +1099,7 @@ package body Treepr is\n             when F_Field5 =>\n                Field_To_Be_Printed := Field5 (N) /= Union_Id (Empty);\n \n+            when F_Flag3  => Field_To_Be_Printed := Flag3  (N);\n             when F_Flag4  => Field_To_Be_Printed := Flag4  (N);\n             when F_Flag5  => Field_To_Be_Printed := Flag5  (N);\n             when F_Flag6  => Field_To_Be_Printed := Flag6  (N);\n@@ -1115,12 +1116,10 @@ package body Treepr is\n             when F_Flag17 => Field_To_Be_Printed := Flag17 (N);\n             when F_Flag18 => Field_To_Be_Printed := Flag18 (N);\n \n-            --  Flag1,2,3 are no longer used\n+            --  Flag1,2 are no longer used\n \n             when F_Flag1  => raise Program_Error;\n             when F_Flag2  => raise Program_Error;\n-            when F_Flag3  => raise Program_Error;\n-\n          end case;\n \n          --  Print field if it is to be printed"}]}