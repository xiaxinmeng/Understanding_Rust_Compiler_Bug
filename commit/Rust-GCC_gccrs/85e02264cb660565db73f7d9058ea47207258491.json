{"sha": "85e02264cb660565db73f7d9058ea47207258491", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODVlMDIyNjRjYjY2MDU2NWRiNzNmN2Q5MDU4ZWE0NzIwNzI1ODQ5MQ==", "commit": {"author": {"name": "Ganesh Gopalasubramanian", "email": "Ganesh.Gopalasubramanian@amd.com", "date": "2012-10-10T09:19:11Z"}, "committer": {"name": "Venkataramanan Kumar", "email": "vekumar@gcc.gnu.org", "date": "2012-10-10T09:19:11Z"}, "message": "Fix for PR51109\n\nFrom-SVN: r192296", "tree": {"sha": "e6063bd76075fd430944ad9cdc73ac70a0f0ef62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6063bd76075fd430944ad9cdc73ac70a0f0ef62"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85e02264cb660565db73f7d9058ea47207258491", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85e02264cb660565db73f7d9058ea47207258491", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85e02264cb660565db73f7d9058ea47207258491", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85e02264cb660565db73f7d9058ea47207258491/comments", "author": {"login": "ganeshgit", "id": 5275884, "node_id": "MDQ6VXNlcjUyNzU4ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5275884?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ganeshgit", "html_url": "https://github.com/ganeshgit", "followers_url": "https://api.github.com/users/ganeshgit/followers", "following_url": "https://api.github.com/users/ganeshgit/following{/other_user}", "gists_url": "https://api.github.com/users/ganeshgit/gists{/gist_id}", "starred_url": "https://api.github.com/users/ganeshgit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ganeshgit/subscriptions", "organizations_url": "https://api.github.com/users/ganeshgit/orgs", "repos_url": "https://api.github.com/users/ganeshgit/repos", "events_url": "https://api.github.com/users/ganeshgit/events{/privacy}", "received_events_url": "https://api.github.com/users/ganeshgit/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d8cfe707999d39c02a04cd4249e26aa28dfb6b81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8cfe707999d39c02a04cd4249e26aa28dfb6b81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8cfe707999d39c02a04cd4249e26aa28dfb6b81"}], "stats": {"total": 38, "additions": 25, "deletions": 13}, "files": [{"sha": "98407361bc708f46a176336665f3cf82e04efd76", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85e02264cb660565db73f7d9058ea47207258491/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85e02264cb660565db73f7d9058ea47207258491/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=85e02264cb660565db73f7d9058ea47207258491", "patch": "@@ -1,3 +1,9 @@\n+2012-10-10  Ganesh Gopalasubramanian  <Ganesh.Gopalasubramanian@amd.com>\n+\n+\tPR target/51109\n+\t* gcc/config/i386/bdver1.md (bdver1_int): Automaton has been\n+\tsplit to reduce state transitions.\n+\n 2012-10-10  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/54876"}, {"sha": "1680e2e9835f2459e1396f04658089baf614a20d", "filename": "gcc/config/i386/bdver1.md", "status": "modified", "additions": 19, "deletions": 13, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85e02264cb660565db73f7d9058ea47207258491/gcc%2Fconfig%2Fi386%2Fbdver1.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85e02264cb660565db73f7d9058ea47207258491/gcc%2Fconfig%2Fi386%2Fbdver1.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fbdver1.md?ref=85e02264cb660565db73f7d9058ea47207258491", "patch": "@@ -36,7 +36,7 @@\n (define_attr \"bdver1_decode\" \"direct,vector,double\"\n   (const_string \"direct\"))\n \n-(define_automaton \"bdver1,bdver1_int,bdver1_load,bdver1_mult,bdver1_fp\")\n+(define_automaton \"bdver1,bdver1_ieu,bdver1_load,bdver1_fp,bdver1_agu\")\n \n (define_cpu_unit \"bdver1-decode0\" \"bdver1\")\n (define_cpu_unit \"bdver1-decode1\" \"bdver1\")\n@@ -71,12 +71,12 @@\n \t\t\t\t     | (nothing,(bdver1-decode1 + bdver1-decode2)))\")\n \n \n-(define_cpu_unit \"bdver1-ieu0\" \"bdver1_int\")\n-(define_cpu_unit \"bdver1-ieu1\" \"bdver1_int\")\n+(define_cpu_unit \"bdver1-ieu0\" \"bdver1_ieu\")\n+(define_cpu_unit \"bdver1-ieu1\" \"bdver1_ieu\")\n (define_reservation \"bdver1-ieu\" \"(bdver1-ieu0 | bdver1-ieu1)\")\n \n-(define_cpu_unit \"bdver1-agu0\" \"bdver1_int\")\n-(define_cpu_unit \"bdver1-agu1\" \"bdver1_int\")\n+(define_cpu_unit \"bdver1-agu0\" \"bdver1_agu\")\n+(define_cpu_unit \"bdver1-agu1\" \"bdver1_agu\")\n (define_reservation \"bdver1-agu\" \"(bdver1-agu0 | bdver1-agu1)\")\n \n (define_cpu_unit \"bdver1-mult\" \"bdver1_mult\")\n@@ -93,6 +93,12 @@\n ;; 128bit SSE instructions issue two stores at once.\n (define_reservation \"bdver1-store2\" \"(bdver1-load0 + bdver1-load1)\")\n \n+;; vectorpath (microcoded) instructions are single issue instructions.\n+;; So, they occupy all the integer units.\n+(define_reservation \"bdver1-ivector\" \"bdver1-ieu0+bdver1-ieu1+\n+                                      bdver1-agu0+bdver1-agu1+\n+                                      bdver1-load0+bdver1-load1\")\n+\n ;; The FP operations start to execute at stage 12 in the pipeline, while\n ;; integer operations start to execute at stage 9 for athlon and 11 for K8\n ;; Compensate the difference for athlon because it results in significantly\n@@ -125,7 +131,7 @@\n (define_insn_reservation \"bdver1_call\" 0\n \t\t\t (and (eq_attr \"cpu\" \"bdver1,bdver2\")\n \t\t\t      (eq_attr \"type\" \"call,callv\"))\n-\t\t\t \"bdver1-double,bdver1-agu,bdver1-ieu\")\n+\t\t\t \"bdver1-double,bdver1-agu\")\n ;; PUSH mem is double path.\n (define_insn_reservation \"bdver1_push\" 1\n \t\t\t (and (eq_attr \"cpu\" \"bdver1,bdver2\")\n@@ -135,41 +141,41 @@\n (define_insn_reservation \"bdver1_pop\" 1\n \t\t\t (and (eq_attr \"cpu\" \"bdver1,bdver2\")\n \t\t\t      (eq_attr \"type\" \"pop\"))\n-\t\t\t \"bdver1-direct,(bdver1-ieu+bdver1-load)\")\n+\t\t\t \"bdver1-direct,bdver1-ivector\")\n ;; LEAVE no latency info so far, assume same with amdfam10.\n (define_insn_reservation \"bdver1_leave\" 3\n \t\t\t (and (eq_attr \"cpu\" \"bdver1,bdver2\")\n \t\t\t      (eq_attr \"type\" \"leave\"))\n-\t\t\t \"bdver1-vector,(bdver1-ieu+bdver1-load)\")\n+\t\t\t \"bdver1-vector,bdver1-ivector\")\n ;; LEA executes in AGU unit with 1 cycle latency on BDVER1.\n (define_insn_reservation \"bdver1_lea\" 1\n \t\t\t (and (eq_attr \"cpu\" \"bdver1,bdver2\")\n \t\t\t      (eq_attr \"type\" \"lea\"))\n-\t\t\t \"bdver1-direct,bdver1-agu,nothing\")\n+\t\t\t \"bdver1-direct,bdver1-agu\")\n \n ;; MUL executes in special multiplier unit attached to IEU1.\n (define_insn_reservation \"bdver1_imul_DI\" 6\n \t\t\t (and (eq_attr \"cpu\" \"bdver1,bdver2\")\n \t\t\t      (and (eq_attr \"type\" \"imul\")\n \t\t\t\t   (and (eq_attr \"mode\" \"DI\")\n \t\t\t\t\t(eq_attr \"memory\" \"none,unknown\"))))\n-\t\t\t \"bdver1-direct1,bdver1-ieu1,bdver1-mult,nothing,bdver1-ieu1\")\n+\t\t\t \"bdver1-direct1,bdver1-ieu1\")\n (define_insn_reservation \"bdver1_imul\" 4\n \t\t\t (and (eq_attr \"cpu\" \"bdver1,bdver2\")\n \t\t\t      (and (eq_attr \"type\" \"imul\")\n \t\t\t\t   (eq_attr \"memory\" \"none,unknown\")))\n-\t\t\t \"bdver1-direct1,bdver1-ieu1,bdver1-mult,bdver1-ieu1\")\n+\t\t\t \"bdver1-direct1,bdver1-ieu1\")\n (define_insn_reservation \"bdver1_imul_mem_DI\" 10\n \t\t\t (and (eq_attr \"cpu\" \"bdver1,bdver2\")\n \t\t\t      (and (eq_attr \"type\" \"imul\")\n \t\t\t\t   (and (eq_attr \"mode\" \"DI\")\n \t\t\t\t\t(eq_attr \"memory\" \"load,both\"))))\n-\t\t\t \"bdver1-direct1,bdver1-load,bdver1-ieu,bdver1-mult,nothing,bdver1-ieu\")\n+                         \"bdver1-direct1,bdver1-load,bdver1-ieu1\")\n (define_insn_reservation \"bdver1_imul_mem\" 8\n \t\t\t (and (eq_attr \"cpu\" \"bdver1,bdver2\")\n \t\t\t      (and (eq_attr \"type\" \"imul\")\n \t\t\t\t   (eq_attr \"memory\" \"load,both\")))\n-\t\t\t \"bdver1-direct1,bdver1-load,bdver1-ieu,bdver1-mult,bdver1-ieu\")\n+\t\t\t \"bdver1-direct1,bdver1-load,bdver1-ieu1\")\n \n ;; IDIV cannot execute in parallel with other instructions.  Dealing with it\n ;; as with short latency vector instruction is good approximation avoiding"}]}