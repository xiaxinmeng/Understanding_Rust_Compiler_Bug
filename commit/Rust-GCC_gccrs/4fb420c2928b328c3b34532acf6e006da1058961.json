{"sha": "4fb420c2928b328c3b34532acf6e006da1058961", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGZiNDIwYzI5MjhiMzI4YzNiMzQ1MzJhY2Y2ZTAwNmRhMTA1ODk2MQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-07-21T21:22:31Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-07-21T21:22:31Z"}, "message": "New file.\n\nFrom-SVN: r4957", "tree": {"sha": "096b5a8a2a8ae8d6c49ecdad231ad6203ea391ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/096b5a8a2a8ae8d6c49ecdad231ad6203ea391ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4fb420c2928b328c3b34532acf6e006da1058961", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fb420c2928b328c3b34532acf6e006da1058961", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fb420c2928b328c3b34532acf6e006da1058961", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fb420c2928b328c3b34532acf6e006da1058961/comments", "author": null, "committer": null, "parents": [{"sha": "fb5fd6089791c6acd8e2cf028455a744fcc5d32d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb5fd6089791c6acd8e2cf028455a744fcc5d32d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb5fd6089791c6acd8e2cf028455a744fcc5d32d"}], "stats": {"total": 131, "additions": 131, "deletions": 0}, "files": [{"sha": "f5fab719b61a67673f4c9d63d8d31405cb863f36", "filename": "gcc/config/i386/lynx.h", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fb420c2928b328c3b34532acf6e006da1058961/gcc%2Fconfig%2Fi386%2Flynx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fb420c2928b328c3b34532acf6e006da1058961/gcc%2Fconfig%2Fi386%2Flynx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flynx.h?ref=4fb420c2928b328c3b34532acf6e006da1058961", "patch": "@@ -0,0 +1,24 @@\n+/* Definitions for Intel 386 running LynxOS.\n+   Copyright (C) 1993 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+#include \"i386/gstabs.h\"\n+#include \"lynx.h\"\n+\n+#undef CPP_PREDEFINES\n+#define CPP_PREDEFINES \"-Dunix -Di386 -DI386 -DLynx -DIBITS32\""}, {"sha": "41d6dda738895f49d5e7983d17e115d960225dc4", "filename": "gcc/config/lynx.h", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fb420c2928b328c3b34532acf6e006da1058961/gcc%2Fconfig%2Flynx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fb420c2928b328c3b34532acf6e006da1058961/gcc%2Fconfig%2Flynx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flynx.h?ref=4fb420c2928b328c3b34532acf6e006da1058961", "patch": "@@ -0,0 +1,77 @@\n+/* Target independent definitions for LynxOS.  */\n+\n+/* ??? The -C option may need to change to whatever option the GNU assembler\n+   actually accepts.  */\n+#undef ASM_SPEC\n+#define ASM_SPEC \"%{mcoff:-C}\"\n+\n+#undef CPP_SPEC\n+#define CPP_SPEC \"%{mthreads:-D_MULTITHREADED} %{mposix:-D_POSIX_SOURCE} %{msystem-v:-I/usr/include-v}\"\n+\n+/* Provide required defaults for linker switches.  */\n+/* ??? The -k option may need to change to whatever option the GNU linker\n+   actually accepts.  This is to produce COFF output.  */\n+/* ??? The -V option may need to change to whatever option the GNU linker\n+   actually accepts.  This is to produce System-V magic numbers.  */\n+#undef LINK_SPEC\n+#define LINK_SPEC \"%{!e*:-e __main} %{msystem-v:-V} %{mcoff:k}\"\n+\n+#undef LIB_SPEC\n+#define LIB_SPEC \"%{mthreads:-L/lib/thread/}%{msystem-v:-lc_v}%{!msystem-v:%{mposix:-lc_p} -lc}\"\n+\n+#undef STARTFILE_SPEC\n+#define STARTFILE_SPEC \"%{p:%{mcoff:pinit1.o%s}%{!mcoff:pinit.o%s}}%{!p:%{msystem-v:%{mcoff:vinit1.o%s}%{!mcoff:vinit.o%s}}%{!msystem-v:%{mcoff:init1.o%s}%{!mcoff:init.o%s}}}\"\n+\n+#undef ENDFILE_SPEC\n+#define ENDFILE_SPEC \"%{mcoff:initn.o%s} %{p:_etext.o%s}\"\n+\n+#undef SIZE_TYPE\n+#define SIZE_TYPE \"unsigned int\"\n+\n+#undef WCHAR_TYPE\n+#define WCHAR_TYPE \"int\"\n+\n+#undef PTRDIFF_TYPE\n+#define PTRDIFF_TYPE \"long int\"\n+\n+/* We want to output DBX debugging information.  */\n+\n+#define DBX_DEBUGGING_INFO\n+\n+/* Generate calls to memcpy, memcmp and memset.  */\n+\n+#define TARGET_MEM_FUNCTIONS\n+\n+/* Handle #pragma pack and sometimes #pragma weak.  */\n+\n+#define HANDLE_SYSV_PRAGMA\n+\n+#define TARGET_THREADS\t(target_flags & MASK_THREADS)\n+#define MASK_THREADS\t0x40000000\n+\n+#define TARGET_POSIX\t(target_flags & MASK_POSIX)\n+#define MASK_POSIX\t0x20000000\n+\n+#define TARGET_SYSTEM_V\t(target_flags & MASK_SYSTEM_V)\n+#define MASK_SYSTEM_V\t0x10000000\n+\n+#define TARGET_COFF\t(target_flags & MASK_COFF)\n+#define MASK_COFF\t0x08000000\n+\n+#undef SUBTARGET_SWITCHES\n+#define SUBTARGET_SWITCHES \\\n+    {\"threads\",\t\tMASK_THREADS},\t\t\\\n+    {\"posix\",\t\tMASK_POSIX},\t\t\\\n+    {\"system-v\",\tMASK_SYSTEM_V},\t\t\\\n+    {\"coff\",\t\tMASK_COFF},\n+\n+#undef SUBTARGET_OVERRIDE_OPTIONS\n+#define SUBTARGET_OVERRIDE_OPTIONS \\\n+{ if (TARGET_SYSTEM_V && profile_flag)\t\t\t\\\n+    warning (\"-msystem-v and -p are incompatible\");\t\t\\\n+  if (TARGET_SYSTEM_V && TARGET_THREADS)\t\t\t\\\n+    warning (\"-msystem-v and -mthreads are incompatible\"); }\n+\n+/* Define this so that C++ destructors will use atexit.  */\n+\n+#define HAVE_ATEXIT"}, {"sha": "e9020a030ed27763d8ff79e063101c12ac90c458", "filename": "gcc/config/sparc/lynx.h", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fb420c2928b328c3b34532acf6e006da1058961/gcc%2Fconfig%2Fsparc%2Flynx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fb420c2928b328c3b34532acf6e006da1058961/gcc%2Fconfig%2Fsparc%2Flynx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flynx.h?ref=4fb420c2928b328c3b34532acf6e006da1058961", "patch": "@@ -0,0 +1,30 @@\n+/* Definitions for SPARC running LynxOS.\n+   Copyright (C) 1993 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+#include \"sparc/sparc.h\"\n+#include \"lynx.h\"\n+\n+/* ??? Must redefine to get sparclite and v8 defines.  Can this be done\n+   differently?  */\n+#undef CPP_SPEC\n+#define CPP_SPEC \"%{mthreads:-D_MULTITHREADED} %{msparclite:-D__sparclite__} %{mv8:-D__sparc_v8__} %{mposix:-D_POSIX_SOURCE} %{msystem-v:-lynx-sysv}\"\n+\n+/* Names to predefine in the preprocessor for this target machine.  */\n+#undef CPP_PREDEFINES\n+#define CPP_PREDEFINES \"-Dunix -Dsparc -DLynx -DIBITS32\""}]}