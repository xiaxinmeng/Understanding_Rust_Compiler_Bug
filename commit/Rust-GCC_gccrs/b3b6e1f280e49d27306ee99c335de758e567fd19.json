{"sha": "b3b6e1f280e49d27306ee99c335de758e567fd19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjNiNmUxZjI4MGU0OWQyNzMwNmVlOTljMzM1ZGU3NThlNTY3ZmQxOQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2013-11-07T20:20:48Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2013-11-07T20:20:48Z"}, "message": "gimplify.c (gimple_regimplify_operands): Do not set SSA_NAME_DEF_STMT.\n\n\t* gimplify.c (gimple_regimplify_operands): Do not set\n\tSSA_NAME_DEF_STMT.\n\t* graphite-sese-to-poly.c (remove_simple_copy_phi): Same.\n\t(rewrite_close_phi_out_of_ssa): Same.\n\t(rewrite_phi_out_of_ssa): Same.\n\t(rewrite_degenerate_phi): Same.\n\t(handle_scalar_deps_crossing_scop_limits): Same.\n\t* tree-if-conv.c (predicate_scalar_phi): Same.\n\t* tree-parloops.c (create_loads_for_reductions): Same.\n\t(create_final_loads_for_reduction): Same.\n\t(create_loads_and_stores_for_name): Same.\n\t(transform_to_exit_first_loop): Same.\n\t(create_parallel_loop): Same.\n\t* tree-ssa-loop-im.c\n\t(move_computations_dom_walker::before_dom_children): Same.\n\t* tree-ssa-loop-manip.c (rewrite_phi_with_iv): Same.\n\t* tree-ssa-pre.c (eliminate_dom_walker::before_dom_children):\n\tSame.\n\t* tree-ssa-propagate.c (substitute_and_fold): Same.\n\t* tree-vect-loop.c (vect_finalize_reduction): Same.\n\t* tree-vect-stmts.c (vectorizable_call): Same.\n\nFrom-SVN: r204541", "tree": {"sha": "4f8dfdeb34ef8e837642456b6c04c37610c5f245", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f8dfdeb34ef8e837642456b6c04c37610c5f245"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3b6e1f280e49d27306ee99c335de758e567fd19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3b6e1f280e49d27306ee99c335de758e567fd19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3b6e1f280e49d27306ee99c335de758e567fd19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3b6e1f280e49d27306ee99c335de758e567fd19/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d59a8fcce613f4a32c6323ee76e2ac191e0830cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d59a8fcce613f4a32c6323ee76e2ac191e0830cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d59a8fcce613f4a32c6323ee76e2ac191e0830cc"}], "stats": {"total": 45, "additions": 24, "deletions": 21}, "files": [{"sha": "74b5a862854f48072ba17729b178acf9e43191dc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3b6e1f280e49d27306ee99c335de758e567fd19/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3b6e1f280e49d27306ee99c335de758e567fd19/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b3b6e1f280e49d27306ee99c335de758e567fd19", "patch": "@@ -1,3 +1,27 @@\n+2013-11-07  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* gimplify.c (gimple_regimplify_operands): Do not set\n+\tSSA_NAME_DEF_STMT.\n+\t* graphite-sese-to-poly.c (remove_simple_copy_phi): Same.\n+\t(rewrite_close_phi_out_of_ssa): Same.\n+\t(rewrite_phi_out_of_ssa): Same.\n+\t(rewrite_degenerate_phi): Same.\n+\t(handle_scalar_deps_crossing_scop_limits): Same.\n+\t* tree-if-conv.c (predicate_scalar_phi): Same.\n+\t* tree-parloops.c (create_loads_for_reductions): Same.\n+\t(create_final_loads_for_reduction): Same.\n+\t(create_loads_and_stores_for_name): Same.\n+\t(transform_to_exit_first_loop): Same.\n+\t(create_parallel_loop): Same.\n+\t* tree-ssa-loop-im.c\n+\t(move_computations_dom_walker::before_dom_children): Same.\n+\t* tree-ssa-loop-manip.c (rewrite_phi_with_iv): Same.\n+\t* tree-ssa-pre.c (eliminate_dom_walker::before_dom_children):\n+\tSame.\n+\t* tree-ssa-propagate.c (substitute_and_fold): Same.\n+\t* tree-vect-loop.c (vect_finalize_reduction): Same.\n+\t* tree-vect-stmts.c (vectorizable_call): Same.\n+\n 2013-11-07  Mike Stump  <mikestump@comcast.net>\n \n \t* config/pdp11/pdp11.c: Include dbxout.h."}, {"sha": "2875a07c3046b9941853f44228aa1ff7780aa64c", "filename": "gcc/gimplify.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3b6e1f280e49d27306ee99c335de758e567fd19/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3b6e1f280e49d27306ee99c335de758e567fd19/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=b3b6e1f280e49d27306ee99c335de758e567fd19", "patch": "@@ -9191,8 +9191,6 @@ gimple_regimplify_operands (gimple stmt, gimple_stmt_iterator *gsi_p)\n \t\ttemp = make_ssa_name (temp, NULL);\n \t      gimple_set_lhs (stmt, temp);\n \t      post_stmt = gimple_build_assign (lhs, temp);\n-\t      if (TREE_CODE (lhs) == SSA_NAME)\n-\t\tSSA_NAME_DEF_STMT (lhs) = post_stmt;\n \t    }\n \t}\n       break;"}, {"sha": "514be1d3847204a1b360bc89eb3039d9eda516ed", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3b6e1f280e49d27306ee99c335de758e567fd19/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3b6e1f280e49d27306ee99c335de758e567fd19/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=b3b6e1f280e49d27306ee99c335de758e567fd19", "patch": "@@ -101,7 +101,6 @@ remove_simple_copy_phi (gimple_stmt_iterator *psi)\n \n   remove_phi_node (psi, false);\n   gsi_insert_on_edge_immediate (e, stmt);\n-  SSA_NAME_DEF_STMT (res) = stmt;\n }\n \n /* Removes an invariant phi node at position PSI by inserting on the\n@@ -2174,7 +2173,6 @@ rewrite_close_phi_out_of_ssa (scop_p scop, gimple_stmt_iterator *psi)\n       stmt = gimple_build_assign (res, arg);\n       remove_phi_node (psi, false);\n       gsi_insert_before (&gsi, stmt, GSI_NEW_STMT);\n-      SSA_NAME_DEF_STMT (res) = stmt;\n       return;\n     }\n \n@@ -2251,7 +2249,6 @@ rewrite_phi_out_of_ssa (scop_p scop, gimple_stmt_iterator *psi)\n \n   stmt = gimple_build_assign (res, unshare_expr (zero_dim_array));\n   remove_phi_node (psi, false);\n-  SSA_NAME_DEF_STMT (res) = stmt;\n   insert_stmts (scop, stmt, NULL, gsi_after_labels (bb));\n }\n \n@@ -2274,7 +2271,6 @@ rewrite_degenerate_phi (gimple_stmt_iterator *psi)\n \n   stmt = gimple_build_assign (res, rhs);\n   remove_phi_node (psi, false);\n-  SSA_NAME_DEF_STMT (res) = stmt;\n \n   gsi = gsi_after_labels (bb);\n   gsi_insert_before (&gsi, stmt, GSI_NEW_STMT);\n@@ -2381,7 +2377,6 @@ handle_scalar_deps_crossing_scop_limits (scop_p scop, tree def, gimple stmt)\n       gimple assign = gimple_build_assign (new_name, def);\n       gimple_stmt_iterator psi = gsi_after_labels (SESE_EXIT (region)->dest);\n \n-      SSA_NAME_DEF_STMT (new_name) = assign;\n       update_stmt (assign);\n       gsi_insert_before (&psi, assign, GSI_SAME_STMT);\n     }"}, {"sha": "bb8de6d6ad73ba2c8fc35f266159e93f8c6b8074", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3b6e1f280e49d27306ee99c335de758e567fd19/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3b6e1f280e49d27306ee99c335de758e567fd19/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=b3b6e1f280e49d27306ee99c335de758e567fd19", "patch": "@@ -1330,7 +1330,6 @@ predicate_scalar_phi (gimple phi, tree cond,\n     }\n \n   new_stmt = gimple_build_assign (res, rhs);\n-  SSA_NAME_DEF_STMT (gimple_phi_result (phi)) = new_stmt;\n   gsi_insert_before (gsi, new_stmt, GSI_SAME_STMT);\n   update_stmt (new_stmt);\n "}, {"sha": "c357f1fe14c5fc1e8bc98270fe5ea147b0e517e4", "filename": "gcc/tree-parloops.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3b6e1f280e49d27306ee99c335de758e567fd19/gcc%2Ftree-parloops.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3b6e1f280e49d27306ee99c335de758e567fd19/gcc%2Ftree-parloops.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-parloops.c?ref=b3b6e1f280e49d27306ee99c335de758e567fd19", "patch": "@@ -1152,7 +1152,6 @@ create_loads_for_reductions (reduction_info **slot, struct clsn_data *clsn_data)\n   x = load_struct;\n   name = PHI_RESULT (red->keep_res);\n   stmt = gimple_build_assign (name, x);\n-  SSA_NAME_DEF_STMT (name) = stmt;\n \n   gsi_insert_after (&gsi, stmt, GSI_NEW_STMT);\n \n@@ -1182,7 +1181,6 @@ create_final_loads_for_reduction (reduction_info_table_type reduction_list,\n   stmt = gimple_build_assign (ld_st_data->load, t);\n \n   gsi_insert_before (&gsi, stmt, GSI_NEW_STMT);\n-  SSA_NAME_DEF_STMT (ld_st_data->load) = stmt;\n \n   reduction_list\n     .traverse <struct clsn_data *, create_loads_for_reductions> (ld_st_data);\n@@ -1236,7 +1234,6 @@ create_loads_and_stores_for_name (name_to_copy_elt **slot,\n   load_struct = build_simple_mem_ref (clsn_data->load);\n   t = build3 (COMPONENT_REF, type, load_struct, elt->field, NULL_TREE);\n   stmt = gimple_build_assign (elt->new_name, t);\n-  SSA_NAME_DEF_STMT (elt->new_name) = stmt;\n   gsi_insert_after (&gsi, stmt, GSI_NEW_STMT);\n \n   return 1;\n@@ -1594,7 +1591,6 @@ transform_to_exit_first_loop (struct loop *loop,\n \t\t\t\t  false, NULL_TREE, false, GSI_SAME_STMT);\n   stmt = gimple_build_assign (control_name, nit_1);\n   gsi_insert_before (&gsi, stmt, GSI_NEW_STMT);\n-  SSA_NAME_DEF_STMT (control_name) = stmt;\n }\n \n /* Create the parallel constructs for LOOP as described in gen_parallel_loop.\n@@ -1635,12 +1631,10 @@ create_parallel_loop (struct loop *loop, tree loop_fn, tree data,\n       param = make_ssa_name (DECL_ARGUMENTS (loop_fn), NULL);\n       stmt = gimple_build_assign (param, build_fold_addr_expr (data));\n       gsi_insert_before (&gsi, stmt, GSI_SAME_STMT);\n-      SSA_NAME_DEF_STMT (param) = stmt;\n \n       stmt = gimple_build_assign (new_data,\n \t\t\t\t  fold_convert (TREE_TYPE (new_data), param));\n       gsi_insert_before (&gsi, stmt, GSI_SAME_STMT);\n-      SSA_NAME_DEF_STMT (new_data) = stmt;\n     }\n \n   /* Emit GIMPLE_OMP_RETURN for GIMPLE_OMP_PARALLEL.  */"}, {"sha": "2283b5b4dd7206ab8cd15580135f3dfbb29f17a4", "filename": "gcc/tree-ssa-loop-im.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3b6e1f280e49d27306ee99c335de758e567fd19/gcc%2Ftree-ssa-loop-im.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3b6e1f280e49d27306ee99c335de758e567fd19/gcc%2Ftree-ssa-loop-im.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-im.c?ref=b3b6e1f280e49d27306ee99c335de758e567fd19", "patch": "@@ -1238,7 +1238,6 @@ move_computations_dom_walker::before_dom_children (basic_block bb)\n \t  new_stmt = gimple_build_assign_with_ops (TREE_CODE (arg),\n \t\t\t\t\t\t   gimple_phi_result (stmt),\n \t\t\t\t\t\t   arg, NULL_TREE);\n-\t  SSA_NAME_DEF_STMT (gimple_phi_result (stmt)) = new_stmt;\n \t}\n       else\n \t{\n@@ -1254,7 +1253,6 @@ move_computations_dom_walker::before_dom_children (basic_block bb)\n \t  new_stmt = gimple_build_assign_with_ops (COND_EXPR,\n \t\t\t\t\t\t   gimple_phi_result (stmt),\n \t\t\t\t\t\t   t, arg0, arg1);\n-\t  SSA_NAME_DEF_STMT (gimple_phi_result (stmt)) = new_stmt;\n \t  todo_ |= TODO_cleanup_cfg;\n \t}\n       gsi_insert_on_edge (loop_preheader_edge (level), new_stmt);"}, {"sha": "2bb225360dd60910d2be42f8ad3bcc07ca19da52", "filename": "gcc/tree-ssa-loop-manip.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3b6e1f280e49d27306ee99c335de758e567fd19/gcc%2Ftree-ssa-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3b6e1f280e49d27306ee99c335de758e567fd19/gcc%2Ftree-ssa-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-manip.c?ref=b3b6e1f280e49d27306ee99c335de758e567fd19", "patch": "@@ -1288,7 +1288,6 @@ rewrite_phi_with_iv (loop_p loop,\n \t\t\t\t  GSI_SAME_STMT);\n   stmt = gimple_build_assign (res, val);\n   gsi_insert_before (gsi, stmt, GSI_SAME_STMT);\n-  SSA_NAME_DEF_STMT (res) = stmt;\n }\n \n /* Rewrite all the phi nodes of LOOP in function of the main induction"}, {"sha": "1f5ff23cb3fc06c2c5fd46b45ea30473a81d372d", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3b6e1f280e49d27306ee99c335de758e567fd19/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3b6e1f280e49d27306ee99c335de758e567fd19/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=b3b6e1f280e49d27306ee99c335de758e567fd19", "patch": "@@ -4116,7 +4116,6 @@ eliminate_dom_walker::before_dom_children (basic_block b)\n       if (!useless_type_conversion_p (TREE_TYPE (res), TREE_TYPE (sprime)))\n \tsprime = fold_convert (TREE_TYPE (res), sprime);\n       stmt = gimple_build_assign (res, sprime);\n-      SSA_NAME_DEF_STMT (res) = stmt;\n       gimple_set_plf (stmt, NECESSARY, gimple_plf (phi, NECESSARY));\n \n       gsi2 = gsi_after_labels (b);"}, {"sha": "3456edbf5a0037e7565b70a134399c0256d14822", "filename": "gcc/tree-ssa-propagate.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3b6e1f280e49d27306ee99c335de758e567fd19/gcc%2Ftree-ssa-propagate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3b6e1f280e49d27306ee99c335de758e567fd19/gcc%2Ftree-ssa-propagate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.c?ref=b3b6e1f280e49d27306ee99c335de758e567fd19", "patch": "@@ -1079,7 +1079,6 @@ substitute_and_fold (ssa_prop_get_value_fn get_value_fn,\n \t  {\n \t    gimple new_stmt = gimple_build_assign (name, val);\n \t    gimple_stmt_iterator gsi2;\n-\t    SSA_NAME_DEF_STMT (name) = new_stmt;\n \t    gsi2 = gsi_after_labels (gimple_bb (def_stmt));\n \t    gsi_insert_before (&gsi2, new_stmt, GSI_SAME_STMT);\n \t    remove_phi_node (&gsi, false);"}, {"sha": "6e71eea2436e3c159f57010191f1ed18de8920a5", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3b6e1f280e49d27306ee99c335de758e567fd19/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3b6e1f280e49d27306ee99c335de758e567fd19/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=b3b6e1f280e49d27306ee99c335de758e567fd19", "patch": "@@ -4327,7 +4327,6 @@ vect_create_epilog_for_reduction (vec<tree> vect_defs, gimple stmt,\n       epilog_stmt = gimple_build_assign (new_dest, expr);\n       new_temp = make_ssa_name (new_dest, epilog_stmt);\n       gimple_assign_set_lhs (epilog_stmt, new_temp);\n-      SSA_NAME_DEF_STMT (new_temp) = epilog_stmt;\n       gsi_insert_before (&exit_gsi, epilog_stmt, GSI_SAME_STMT);\n       if (nested_in_vect_loop)\n         {"}, {"sha": "5a2bbb516083ef9c44bfda1f79d093bc5b083daf", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3b6e1f280e49d27306ee99c335de758e567fd19/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3b6e1f280e49d27306ee99c335de758e567fd19/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=b3b6e1f280e49d27306ee99c335de758e567fd19", "patch": "@@ -2104,7 +2104,6 @@ vectorizable_call (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt,\n   set_vinfo_for_stmt (stmt, NULL);\n   STMT_VINFO_STMT (stmt_info) = new_stmt;\n   gsi_replace (gsi, new_stmt, false);\n-  SSA_NAME_DEF_STMT (gimple_assign_lhs (new_stmt)) = new_stmt;\n \n   return true;\n }"}]}