{"sha": "cf27b46744aec5430b81bf763171239bba0f4abb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2YyN2I0Njc0NGFlYzU0MzBiODFiZjc2MzE3MTIzOWJiYTBmNGFiYg==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-01-05T16:33:59Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-01-05T16:33:59Z"}, "message": "Add -mcpu={505,821,860} support; Fixup common mode support; Make eabi not rely on GLD\n\nFrom-SVN: r10942", "tree": {"sha": "4b1f319c2c6e193b01ffbb619309c0ae570d607d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b1f319c2c6e193b01ffbb619309c0ae570d607d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf27b46744aec5430b81bf763171239bba0f4abb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf27b46744aec5430b81bf763171239bba0f4abb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf27b46744aec5430b81bf763171239bba0f4abb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf27b46744aec5430b81bf763171239bba0f4abb/comments", "author": null, "committer": null, "parents": [{"sha": "6ead500aa1debb66826af7915868face109d5626", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ead500aa1debb66826af7915868face109d5626", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ead500aa1debb66826af7915868face109d5626"}], "stats": {"total": 355, "additions": 290, "deletions": 65}, "files": [{"sha": "1758e49eb28ce42440fa18f977ca07c6c007cb98", "filename": "gcc/config/rs6000/aix3newas.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf27b46744aec5430b81bf763171239bba0f4abb/gcc%2Fconfig%2Frs6000%2Faix3newas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf27b46744aec5430b81bf763171239bba0f4abb/gcc%2Fconfig%2Frs6000%2Faix3newas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix3newas.h?ref=cf27b46744aec5430b81bf763171239bba0f4abb", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler,\n    for IBM RS/6000 POWER running AIX version 3.x with the fixed assembler.\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n    Contributed by Jason Merrill (jason@cygnus.com).\n \n This file is part of GNU CC.\n@@ -44,12 +44,15 @@ Boston, MA 02111-1307, USA.  */\n %{mcpu=rsc: -mpwr} \\\n %{mcpu=rsc1: -mpwr} \\\n %{mcpu=403: -mppc} \\\n+%{mcpu=505: -mppc} \\\n %{mcpu=601: -m601} \\\n %{mcpu=602: -mppc} \\\n %{mcpu=603: -mppc} \\\n %{mcpu=603e: -mppc} \\\n %{mcpu=604: -mppc} \\\n-%{mcpu=620: -mppc}\"\n+%{mcpu=620: -mppc} \\\n+%{mcpu=821: -mppc} \\\n+%{mcpu=860: -mppc}\"\n \n /* Define the options for the binder: Start text at 512, align all segments\n    to 512 bytes, and warn if there is text relocation."}, {"sha": "a0de198c9087853194935aaa2c9194ba3cf22c20", "filename": "gcc/config/rs6000/aix41.h", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf27b46744aec5430b81bf763171239bba0f4abb/gcc%2Fconfig%2Frs6000%2Faix41.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf27b46744aec5430b81bf763171239bba0f4abb/gcc%2Fconfig%2Frs6000%2Faix41.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix41.h?ref=cf27b46744aec5430b81bf763171239bba0f4abb", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler,\n    for IBM RS/6000 POWER running AIX version 4.1.\n-   Copyright (C) 1994, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1994, 1995, 1996 Free Software Foundation, Inc.\n    Contributed by David Edelsohn (edelsohn@npac.syr.edu).\n \n This file is part of GNU CC.\n@@ -41,12 +41,15 @@ Boston, MA 02111-1307, USA.  */\n %{mcpu=rsc: -mpwr} \\\n %{mcpu=rsc1: -mpwr} \\\n %{mcpu=403: -mppc} \\\n+%{mcpu=505: -mppc} \\\n %{mcpu=601: -m601} \\\n %{mcpu=602: -mppc} \\\n %{mcpu=603: -mppc} \\\n %{mcpu=603e: -mppc} \\\n %{mcpu=604: -mppc} \\\n-%{mcpu=620: -mppc}\"\n+%{mcpu=620: -mppc} \\\n+%{mcpu=821: -mppc} \\\n+%{mcpu=860: -mppc}\"\n \n #undef CPP_PREDEFINES\n #define CPP_PREDEFINES \"-D_IBMR2 -D_POWER -D_AIX -D_AIX32 \\\n@@ -70,12 +73,15 @@ Boston, MA 02111-1307, USA.  */\n %{mcpu=rsc: -D_ARCH_PWR} \\\n %{mcpu=rsc1: -D_ARCH_PWR} \\\n %{mcpu=403: -D_ARCH_PPC} \\\n+%{mcpu=505: -D_ARCH_PPC} \\\n %{mcpu=601: -D_ARCH_PPC -D_ARCH_PWR} \\\n %{mcpu=602: -D_ARCH_PPC} \\\n %{mcpu=603: -D_ARCH_PPC} \\\n %{mcpu=603e: -D_ARCH_PPC} \\\n %{mcpu=604: -D_ARCH_PPC} \\\n-%{mcpu=620: -D_ARCH_PPC}\"\n+%{mcpu=620: -D_ARCH_PPC} \\\n+%{mcpu=821: -D_ARCH_PPC} \\\n+%{mcpu=860: -D_ARCH_PPC}\"\n \n #undef TARGET_DEFAULT\n #define TARGET_DEFAULT MASK_NEW_MNEMONICS"}, {"sha": "678fa06367f040811c54c726649a095475395792", "filename": "gcc/config/rs6000/eabi-ci.asm", "status": "modified", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf27b46744aec5430b81bf763171239bba0f4abb/gcc%2Fconfig%2Frs6000%2Feabi-ci.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf27b46744aec5430b81bf763171239bba0f4abb/gcc%2Fconfig%2Frs6000%2Feabi-ci.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabi-ci.asm?ref=cf27b46744aec5430b81bf763171239bba0f4abb", "patch": "@@ -0,0 +1,76 @@\n+# crti.s for eabi\n+\n+#   Copyright (C) 1996 Free Software Foundation, Inc.\n+#   Written By Michael Meissner\n+# \n+# This file is free software; you can redistribute it and/or modify it\n+# under the terms of the GNU General Public License as published by the\n+# Free Software Foundation; either version 2, or (at your option) any\n+# later version.\n+# \n+# In addition to the permissions in the GNU General Public License, the\n+# Free Software Foundation gives you unlimited permission to link the\n+# compiled version of this file with other programs, and to distribute\n+# those programs without any restriction coming from the use of this\n+# file.  (The General Public License restrictions do apply in other\n+# respects; for example, they cover modification of the file, and\n+# distribution when not linked into another program.)\n+# \n+# This file is distributed in the hope that it will be useful, but\n+# WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+# General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with this program; see the file COPYING.  If not, write to\n+# the Free Software Foundation, 59 Temple Place - Suite 330,\n+# Boston, MA 02111-1307, USA.\n+# \n+#    As a special exception, if you link this library with files\n+#    compiled with GCC to produce an executable, this does not cause\n+#    the resulting executable to be covered by the GNU General Public License.\n+#    This exception does not however invalidate any other reasons why\n+#    the executable file might be covered by the GNU General Public License.\n+# \n+\n+# This file just supplies labeled starting points for the .got* and other\n+# special sections.  It is linked in first before other modules.\n+ \n+\t.file\t\"crti.s\"\n+\t.ident\t\"GNU C crti.s\"\n+\n+\t.section \".got\",\"w\"\n+\t.globl\t__GOT_START__\n+\t.type\t__GOT_START__,@object\n+\t.weak\t_GLOBAL_OFFSET_TABLE_\n+\t.type\t_GLOBAL_OFFSET_TABLE_,@object\n+\t.weak\t_SDA_BASE_\n+\t.type\t_SDA_BASE_,@object\n+__GOT_START__:\n+_GLOBAL_OFFSET_TABLE_:\n+_SDA_BASE_:\n+\n+\t.section \".got1\",\"w\"\n+\t.globl\t__GOT1_START__\n+\t.type\t__GOT1_START__,@object\n+__GOT1_START__:\n+\n+\t.section \".got2\",\"w\"\n+\t.globl\t__GOT2_START__\n+\t.type\t__GOT2_START__,@object\n+__GOT2_START__:\n+\n+\t.section \".fixup\",\"w\"\n+\t.globl\t__FIXUP_START__\n+\t.type\t__FIXUP_START__,@object\n+__FIXUP_START__:\n+\n+\t.section \".ctors\",\"w\"\n+\t.globl\t__CTOR_LIST__\n+\t.type\t__CTOR_LIST__,@object\n+__CTOR_LIST__:\n+\n+\t.section \".dtors\",\"w\"\n+\t.globl\t__CTOR_LIST__\n+\t.type\t__CTOR_LIST__,@object\n+__DTOR_LIST__:"}, {"sha": "44b58f0c2d4b4caf27a1698aad02dbd4cc4e1931", "filename": "gcc/config/rs6000/eabi-cn.asm", "status": "modified", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf27b46744aec5430b81bf763171239bba0f4abb/gcc%2Fconfig%2Frs6000%2Feabi-cn.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf27b46744aec5430b81bf763171239bba0f4abb/gcc%2Fconfig%2Frs6000%2Feabi-cn.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabi-cn.asm?ref=cf27b46744aec5430b81bf763171239bba0f4abb", "patch": "@@ -0,0 +1,70 @@\n+# crtn.s for eabi\n+\n+#   Copyright (C) 1996 Free Software Foundation, Inc.\n+#   Written By Michael Meissner\n+# \n+# This file is free software; you can redistribute it and/or modify it\n+# under the terms of the GNU General Public License as published by the\n+# Free Software Foundation; either version 2, or (at your option) any\n+# later version.\n+# \n+# In addition to the permissions in the GNU General Public License, the\n+# Free Software Foundation gives you unlimited permission to link the\n+# compiled version of this file with other programs, and to distribute\n+# those programs without any restriction coming from the use of this\n+# file.  (The General Public License restrictions do apply in other\n+# respects; for example, they cover modification of the file, and\n+# distribution when not linked into another program.)\n+# \n+# This file is distributed in the hope that it will be useful, but\n+# WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+# General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with this program; see the file COPYING.  If not, write to\n+# the Free Software Foundation, 59 Temple Place - Suite 330,\n+# Boston, MA 02111-1307, USA.\n+# \n+#    As a special exception, if you link this library with files\n+#    compiled with GCC to produce an executable, this does not cause\n+#    the resulting executable to be covered by the GNU General Public License.\n+#    This exception does not however invalidate any other reasons why\n+#    the executable file might be covered by the GNU General Public License.\n+# \n+\n+# This file just supplies labeled ending points for the .got* and other\n+# special sections.  It is linked in last after other modules.\n+ \n+\t.file\t\"crtn.s\"\n+\t.ident\t\"GNU C crtn.s\"\n+\n+\t.section \".got\",\"w\"\n+\t.globl\t__GOT_END__\n+\t.type\t__GOT_END__,@object\n+__GOT_END__:\n+\n+\t.section \".got1\",\"w\"\n+\t.globl\t__GOT1_END__\n+\t.type\t__GOT1_END__,@object\n+__GOT1_END__:\n+\n+\t.section \".got2\",\"w\"\n+\t.globl\t__GOT2_END__\n+\t.type\t__GOT2_END__,@object\n+__GOT2_END__:\n+\n+\t.section \".fixup\",\"w\"\n+\t.globl\t__FIXUP_END__\n+\t.type\t__FIXUP_END__,@object\n+__FIXUP_END__:\n+\n+\t.section \".ctors\",\"w\"\n+\t.globl\t__CTOR_END__\n+\t.type\t__CTOR_END__,@object\n+__CTOR_END__:\n+\n+\t.section \".dtors\",\"w\"\n+\t.globl\t__CTOR_END__\n+\t.type\t__CTOR_END__,@object\n+__DTOR_END__:"}, {"sha": "20bbde0605aba0ae9dc337843426d0d70e2a16b4", "filename": "gcc/config/rs6000/eabi.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf27b46744aec5430b81bf763171239bba0f4abb/gcc%2Fconfig%2Frs6000%2Feabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf27b46744aec5430b81bf763171239bba0f4abb/gcc%2Fconfig%2Frs6000%2Feabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabi.h?ref=cf27b46744aec5430b81bf763171239bba0f4abb", "patch": "@@ -1,6 +1,6 @@\n /* Core target definitions for GNU compiler\n    for IBM RS/6000 PowerPC targeted to embedded ELF systems.\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n    Contributed by Cygnus Support.\n \n This file is part of GNU CC.\n@@ -70,7 +70,7 @@ Boston, MA 02111-1307, USA.  */\n \n /* Use the simulator crt0 or mvme and libgloss/newlib libraries if desired */\n #undef  STARTFILE_SPEC\n-#define\tSTARTFILE_SPEC \"\\\n+#define\tSTARTFILE_SPEC \"crti.o \\\n %{mmvme: mvme-crt0.o%s} \\\n %{msim:  sim-crt0.o%s}\"\n \n@@ -83,4 +83,4 @@ Boston, MA 02111-1307, USA.  */\n #define\tLIBGCC_SPEC \"libgcc.a%s\"\n \n #undef\tENDFILE_SPEC\n-#define\tENDFILE_SPEC \"\"\n+#define\tENDFILE_SPEC \"crtn.o\""}, {"sha": "7a70a9c9948549dc14a5197f75b6dab4712af2fe", "filename": "gcc/config/rs6000/eabiaix.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf27b46744aec5430b81bf763171239bba0f4abb/gcc%2Fconfig%2Frs6000%2Feabiaix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf27b46744aec5430b81bf763171239bba0f4abb/gcc%2Fconfig%2Frs6000%2Feabiaix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabiaix.h?ref=cf27b46744aec5430b81bf763171239bba0f4abb", "patch": "@@ -1,5 +1,5 @@\n /* Embedded ELF system support, using old AIX based calling sequence.\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n    Contributed by Cygnus Support.\n \n This file is part of GNU CC.\n@@ -51,12 +51,15 @@ Boston, MA 02111-1307, USA.  */\n %{mcpu=rsc: -D_ARCH_PWR} \\\n %{mcpu=rsc1: -D_ARCH_PWR} \\\n %{mcpu=403: -D_ARCH_PPC} \\\n+%{mcpu=505: -D_ARCH_PPC} \\\n %{mcpu=601: -D_ARCH_PPC -D_ARCH_PWR} \\\n %{mcpu=602: -D_ARCH_PPC} \\\n %{mcpu=603: -D_ARCH_PPC} \\\n %{mcpu=603e: -D_ARCH_PPC} \\\n %{mcpu=604: -D_ARCH_PPC} \\\n-%{mcpu=620: -D_ARCH_PPC}\"\n+%{mcpu=620: -D_ARCH_PPC} \\\n+%{mcpu=821: -D_ARCH_PPC} \\\n+%{mcpu=860: -D_ARCH_PPC}\"\n \n /* Define this macro as a C expression for the initializer of an\n    array of string to tell the driver program which options are"}, {"sha": "3927c6b623a7977c61163f4f805c3a6591c7ae75", "filename": "gcc/config/rs6000/eabile.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf27b46744aec5430b81bf763171239bba0f4abb/gcc%2Fconfig%2Frs6000%2Feabile.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf27b46744aec5430b81bf763171239bba0f4abb/gcc%2Fconfig%2Frs6000%2Feabile.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabile.h?ref=cf27b46744aec5430b81bf763171239bba0f4abb", "patch": "@@ -1,6 +1,6 @@\n /* Core target definitions for GNU compiler for PowerPC targeted to\n    little endian embedded ELF systems.\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n    Contributed by Cygnus Support.\n \n This file is part of GNU CC.\n@@ -52,12 +52,15 @@ Boston, MA 02111-1307, USA.  */\n %{mcpu=rsc: -D_ARCH_PWR} \\\n %{mcpu=rsc1: -D_ARCH_PWR} \\\n %{mcpu=403: -D_ARCH_PPC} \\\n+%{mcpu=505: -D_ARCH_PPC} \\\n %{mcpu=601: -D_ARCH_PPC -D_ARCH_PWR} \\\n %{mcpu=602: -D_ARCH_PPC} \\\n %{mcpu=603: -D_ARCH_PPC} \\\n %{mcpu=603e: -D_ARCH_PPC} \\\n %{mcpu=604: -D_ARCH_PPC} \\\n-%{mcpu=620: -D_ARCH_PPC}\"\n+%{mcpu=620: -D_ARCH_PPC} \\\n+%{mcpu=821: -D_ARCH_PPC} \\\n+%{mcpu=860: -D_ARCH_PPC}\"\n \n /* Define this macro as a C expression for the initializer of an\n    array of string to tell the driver program which options are"}, {"sha": "318fc427232f9c952c0770a4bbc00f45f5d58f75", "filename": "gcc/config/rs6000/eabisim.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf27b46744aec5430b81bf763171239bba0f4abb/gcc%2Fconfig%2Frs6000%2Feabisim.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf27b46744aec5430b81bf763171239bba0f4abb/gcc%2Fconfig%2Frs6000%2Feabisim.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabisim.h?ref=cf27b46744aec5430b81bf763171239bba0f4abb", "patch": "@@ -1,6 +1,6 @@\n /* Support for GCC on simulated PowerPC systems targeted to embedded ELF\n    systems.\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n    Contributed by Cygnus Support.\n \n This file is part of GNU CC.\n@@ -31,7 +31,7 @@ Boston, MA 02111-1307, USA.  */\n \n /* Use the simulator crt0 or mvme and libgloss/newlib libraries if desired */\n #undef  STARTFILE_SPEC\n-#define\tSTARTFILE_SPEC \"\\\n+#define\tSTARTFILE_SPEC \"crti.o \\\n %{mmvme: mvme-crt0.o%s} \\\n %{!mmvme: sim-crt0.o%s}\"\n \n@@ -44,4 +44,4 @@ Boston, MA 02111-1307, USA.  */\n #define\tLIBGCC_SPEC \"libgcc.a%s\"\n \n #undef\tENDFILE_SPEC\n-#define\tENDFILE_SPEC \"\"\n+#define\tENDFILE_SPEC \"crtn.o\""}, {"sha": "4f1c934dbc4b96888997275691ae3a2727827403", "filename": "gcc/config/rs6000/lynx.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf27b46744aec5430b81bf763171239bba0f4abb/gcc%2Fconfig%2Frs6000%2Flynx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf27b46744aec5430b81bf763171239bba0f4abb/gcc%2Fconfig%2Frs6000%2Flynx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flynx.h?ref=cf27b46744aec5430b81bf763171239bba0f4abb", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Rs6000 running LynxOS.\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n    Contributed by David Henkel-Wallace, Cygnus Support (gumby@cygnus.com)\n \n This file is part of GNU CC.\n@@ -91,12 +91,15 @@ Boston, MA 02111-1307, USA.  */\n %{mcpu=rsc: -mpwr} \\\n %{mcpu=rsc1: -mpwr} \\\n %{mcpu=403: -mppc} \\\n+%{mcpu=505: -mppc} \\\n %{mcpu=601: -m601} \\\n %{mcpu=602: -mppc} \\\n %{mcpu=603: -mppc} \\\n %{mcpu=603e: -mppc} \\\n %{mcpu=604: -mppc} \\\n-%{mcpu=620: -mppc}\"\n+%{mcpu=620: -mppc} \\\n+%{mcpu=821: -mppc} \\\n+%{mcpu=860: -mppc}\"\n \n #undef SUBTARGET_SWITCHES\n #define SUBTARGET_SWITCHES \\"}, {"sha": "b11204c075fa20ee530fd71dd07a542759b2fe97", "filename": "gcc/config/rs6000/netware.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf27b46744aec5430b81bf763171239bba0f4abb/gcc%2Fconfig%2Frs6000%2Fnetware.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf27b46744aec5430b81bf763171239bba0f4abb/gcc%2Fconfig%2Frs6000%2Fnetware.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fnetware.h?ref=cf27b46744aec5430b81bf763171239bba0f4abb", "patch": "@@ -1,6 +1,6 @@\n /* Core target definitions for GNU compiler\n    for IBM RS/6000 PowerPC running NetWare\n-   Copyright (C) 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1994, 1995, 1996 Free Software Foundation, Inc.\n    Contributed by Cygnus Support.\n \n This file is part of GNU CC.\n@@ -201,12 +201,15 @@ toc_section ()\t\t\t\t\t\t\t\t\\\n %{mcpu=rsc: -mpwr} \\\n %{mcpu=rsc1: -mpwr} \\\n %{mcpu=403: -mppc} \\\n+%{mcpu=505: -mppc} \\\n %{mcpu=601: -m601} \\\n %{mcpu=602: -mppc} \\\n %{mcpu=603: -mppc} \\\n %{mcpu=603e: -mppc} \\\n %{mcpu=604: -mppc} \\\n %{mcpu=620: -mppc} \\\n+%{mcpu=821: -mppc} \\\n+%{mcpu=860: -mppc} \\\n %{V} %{v:%{!V:-V}} %{Qy:} %{!Qn:-Qy} %{n} %{T} %{Ym,*} %{Yd,*} %{Wa,*:%*}\"\n /* This is the end of what might become sysv4.h.  */\n "}, {"sha": "5d915cb749298c3503082862db27adce059730e5", "filename": "gcc/config/rs6000/powerpc.h", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf27b46744aec5430b81bf763171239bba0f4abb/gcc%2Fconfig%2Frs6000%2Fpowerpc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf27b46744aec5430b81bf763171239bba0f4abb/gcc%2Fconfig%2Frs6000%2Fpowerpc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpowerpc.h?ref=cf27b46744aec5430b81bf763171239bba0f4abb", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler,\n    for IBM RS/6000 PowerPC running AIX version 3.2.\n-   Copyright (C) 1993, 1994, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1994, 1995, 1996 Free Software Foundation, Inc.\n    Contributed by David Edelsohn (edelsohn@npac.syr.edu).\n \n This file is part of GNU CC.\n@@ -42,12 +42,15 @@ Boston, MA 02111-1307, USA.  */\n %{mcpu=rsc: -mpwr} \\\n %{mcpu=rsc1: -mpwr} \\\n %{mcpu=403: -mppc} \\\n+%{mcpu=505: -mppc} \\\n %{mcpu=601: -m601} \\\n %{mcpu=602: -mppc} \\\n %{mcpu=603: -mppc} \\\n %{mcpu=603e: -mppc} \\\n %{mcpu=604: -mppc} \\\n-%{mcpu=620: -mppc}\"\n+%{mcpu=620: -mppc} \\\n+%{mcpu=821: -mppc} \\\n+%{mcpu=860: -mppc}\"\n \n #undef CPP_PREDEFINES\n #define CPP_PREDEFINES \"-D_IBMR2 -D_POWER -D_AIX -D_AIX32 \\\n@@ -72,12 +75,15 @@ Boston, MA 02111-1307, USA.  */\n %{mcpu=rsc: -D_ARCH_PWR} \\\n %{mcpu=rsc1: -D_ARCH_PWR} \\\n %{mcpu=403: -D_ARCH_PPC} \\\n+%{mcpu=505: -D_ARCH_PPC} \\\n %{mcpu=601: -D_ARCH_PPC -D_ARCH_PWR} \\\n %{mcpu=602: -D_ARCH_PPC} \\\n %{mcpu=603: -D_ARCH_PPC} \\\n %{mcpu=603e: -D_ARCH_PPC} \\\n %{mcpu=604: -D_ARCH_PPC} \\\n-%{mcpu=620: -D_ARCH_PPC}\"\n+%{mcpu=620: -D_ARCH_PPC} \\\n+%{mcpu=821: -D_ARCH_PPC} \\\n+%{mcpu=860: -D_ARCH_PPC}\"\n \n #undef TARGET_DEFAULT\n #define TARGET_DEFAULT (MASK_POWERPC | MASK_NEW_MNEMONICS)"}, {"sha": "7e63082813367be89fb3736ec7ad287bbe6555f6", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf27b46744aec5430b81bf763171239bba0f4abb/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf27b46744aec5430b81bf763171239bba0f4abb/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=cf27b46744aec5430b81bf763171239bba0f4abb", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines used for code generation on IBM RS/6000.\n-   Copyright (C) 1991, 1993, 1994, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1993, 1994, 1995, 1996 Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n \n This file is part of GNU CC.\n@@ -210,7 +210,8 @@ rs6000_override_options (default_cpu)\n       int target_enable;\t/* Target flags to enable.  */\n       int target_disable;\t/* Target flags to disable.  */\n     } processor_target_table[]\n-      = {{\"common\", PROCESSOR_COMMON, 0, POWER_MASKS | POWERPC_MASKS},\n+      = {{\"common\", PROCESSOR_COMMON, MASK_NEW_MNEMONICS,\n+\t    POWER_MASKS | POWERPC_MASKS},\n \t {\"power\", PROCESSOR_POWER,\n \t    MASK_POWER | MASK_MULTIPLE | MASK_STRING,\n \t    MASK_POWER2 | POWERPC_MASKS | MASK_NEW_MNEMONICS},\n@@ -238,12 +239,15 @@ rs6000_override_options (default_cpu)\n \t {\"403\", PROCESSOR_PPC403,\n \t    MASK_POWERPC | MASK_SOFT_FLOAT | MASK_NEW_MNEMONICS,\n \t    POWER_MASKS | POWERPC_OPT_MASKS | MASK_POWERPC64},\n+\t {\"505\", PROCESSOR_MPCCORE,\n+\t    MASK_POWERPC | MASK_NEW_MNEMONICS,\n+\t    POWER_MASKS | POWERPC_OPT_MASKS | MASK_POWERPC64},\n \t {\"601\", PROCESSOR_PPC601,\n \t    MASK_POWER | MASK_POWERPC | MASK_NEW_MNEMONICS | MASK_MULTIPLE | MASK_STRING,\n \t    MASK_POWER2 | POWERPC_OPT_MASKS | MASK_POWERPC64},\n \t {\"602\", PROCESSOR_PPC602,\n-\t    MASK_POWER | MASK_POWERPC | MASK_NEW_MNEMONICS,\n-\t    MASK_POWER2 | POWERPC_OPT_MASKS | MASK_POWERPC64},\n+\t    MASK_POWERPC | MASK_PPC_GFXOPT | MASK_NEW_MNEMONICS,\n+\t    POWER_MASKS | MASK_PPC_GPOPT | MASK_POWERPC64},\n \t {\"603\", PROCESSOR_PPC603,\n \t    MASK_POWERPC | MASK_PPC_GFXOPT | MASK_NEW_MNEMONICS,\n \t    POWER_MASKS | MASK_PPC_GPOPT | MASK_POWERPC64},\n@@ -255,7 +259,13 @@ rs6000_override_options (default_cpu)\n \t    POWER_MASKS | MASK_PPC_GPOPT | MASK_POWERPC64},\n \t {\"620\", PROCESSOR_PPC620,\n \t    MASK_POWERPC | MASK_PPC_GFXOPT | MASK_NEW_MNEMONICS,\n-\t    POWER_MASKS | MASK_PPC_GPOPT | MASK_POWERPC64}};\n+\t    POWER_MASKS | MASK_PPC_GPOPT | MASK_POWERPC64},\n+\t {\"821\", PROCESSOR_MPCCORE,\n+\t    MASK_POWERPC | MASK_SOFT_FLOAT | MASK_NEW_MNEMONICS,\n+\t    POWER_MASKS | POWERPC_OPT_MASKS | MASK_POWERPC64},\n+\t {\"860\", PROCESSOR_MPCCORE,\n+\t    MASK_POWERPC | MASK_SOFT_FLOAT | MASK_NEW_MNEMONICS,\n+\t    POWER_MASKS | POWERPC_OPT_MASKS | MASK_POWERPC64}};\n \n   int ptt_size = sizeof (processor_target_table) / sizeof (struct ptt);\n \n@@ -267,8 +277,6 @@ rs6000_override_options (default_cpu)\n   /* Identify the processor type */\n   rs6000_select[0].string = default_cpu;\n   rs6000_cpu = PROCESSOR_DEFAULT;\n-  if (rs6000_cpu == PROCESSOR_PPC403)\n-    target_flags |= MASK_SOFT_FLOAT;\n \n   for (i = 0; i < sizeof (rs6000_select) / sizeof (rs6000_select[0]); i++)\n     {\n@@ -323,9 +331,6 @@ rs6000_override_options (default_cpu)\n \t}\n     }\n \n-  if (!WORDS_BIG_ENDIAN && !TARGET_POWER && !TARGET_POWERPC)\n-    error (\"-mcpu=common is not supported for little endian platforms\");\n-\n #ifdef SUBTARGET_OVERRIDE_OPTIONS\n   SUBTARGET_OVERRIDE_OPTIONS;\n #endif\n@@ -2562,14 +2567,15 @@ rs6000_stack_info ()\n       info_ptr->main_p = 1;\n \n #ifdef NAME__MAIN\n+      info_ptr->calls_p = 1;\n+\n       if (DECL_ARGUMENTS (current_function_decl))\n \t{\n \t  int i;\n \t  tree arg;\n \n \t  info_ptr->main_save_p = 1;\n \t  info_ptr->main_size = 0;\n-\t  info_ptr->calls_p = 1;\n \n \t  for ((i = 0), (arg = DECL_ARGUMENTS (current_function_decl));\n \t       arg != NULL_TREE && i < 8;"}, {"sha": "002c5ee7717dc9d7a0ef31de018d4858e4f31798", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf27b46744aec5430b81bf763171239bba0f4abb/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf27b46744aec5430b81bf763171239bba0f4abb/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=cf27b46744aec5430b81bf763171239bba0f4abb", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for IBM RS/6000.\n-   Copyright (C) 1992, 1993, 1994, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 1993, 1994, 1995, 1996 Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n \n This file is part of GNU CC.\n@@ -68,12 +68,15 @@ Boston, MA 02111-1307, USA.  */\n %{mcpu=rsc: -D_ARCH_PWR} \\\n %{mcpu=rsc1: -D_ARCH_PWR} \\\n %{mcpu=403: -D_ARCH_PPC} \\\n+%{mcpu=505: -D_ARCH_PPC} \\\n %{mcpu=601: -D_ARCH_PPC -D_ARCH_PWR} \\\n %{mcpu=602: -d_ARCH_PPC} \\\n %{mcpu=603: -D_ARCH_PPC} \\\n %{mcpu=603e: -D_ARCH_PPC} \\\n %{mcpu=604: -D_ARCH_PPC} \\\n-%{mcpu=620: -D_ARCH_PPC}\"\n+%{mcpu=620: -D_ARCH_PPC} \\\n+%{mcpu=821: -D_ARCH_PPC} \\\n+%{mcpu=860: -D_ARCH_PPC}\"\n \n /* Define the options for the binder: Start text at 512, align all segments\n    to 512 bytes, and warn if there is text relocation.\n@@ -278,6 +281,7 @@ extern int target_flags;\n enum processor_type\n  {PROCESSOR_RIOS1,\n   PROCESSOR_RIOS2,\n+  PROCESSOR_MPCCORE,\n   PROCESSOR_PPC403,\n   PROCESSOR_PPC601,\n   PROCESSOR_PPC602,\n@@ -1818,6 +1822,7 @@ typedef struct rs6000_args\n \t      : INTVAL (XEXP (X, 1)) >= -256 && INTVAL (XEXP (X, 1)) <= 255 \\\n \t      ? COSTS_N_INSNS (3) : COSTS_N_INSNS (4));\t\\\n     case PROCESSOR_RIOS2:\t\t\t\t\\\n+    case PROCESSOR_MPCCORE:\t\t\t\t\\\n       return COSTS_N_INSNS (2);\t\t\t\t\\\n     case PROCESSOR_PPC601:\t\t\t\t\\\n     case PROCESSOR_PPC603:\t\t\t\t\\\n@@ -1841,6 +1846,8 @@ typedef struct rs6000_args\n       return COSTS_N_INSNS (19);\t\t\t\\\n     case PROCESSOR_RIOS2:\t\t\t\t\\\n       return COSTS_N_INSNS (13);\t\t\t\\\n+    case PROCESSOR_MPCCORE:\t\t\t\t\\\n+      return COSTS_N_INSNS (6);\t\t\t\t\\\n     case PROCESSOR_PPC403:\t\t\t\t\\\n       return COSTS_N_INSNS (33);\t\t\t\\\n     case PROCESSOR_PPC601:\t\t\t\t\\"}, {"sha": "8cb317c86392ea57f895624426541e61157f9d1a", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 62, "deletions": 29, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf27b46744aec5430b81bf763171239bba0f4abb/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf27b46744aec5430b81bf763171239bba0f4abb/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=cf27b46744aec5430b81bf763171239bba0f4abb", "patch": "@@ -1,5 +1,5 @@\n ;; Machine description for IBM RISC System 6000 (POWER) for GNU C compiler\n-;; Copyright (C) 1990, 91, 92, 93, 94, 1995 Free Software Foundation, Inc.\n+;; Copyright (C) 1990, 91, 92, 93, 94, 95, 1996 Free Software Foundation, Inc.\n ;; Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n \n ;; This file is part of GNU CC.\n@@ -40,7 +40,7 @@\n ;; Processor type -- this attribute must exactly match the processor_type\n ;; enumeration in rs6000.h.\n \n-(define_attr \"cpu\" \"rios1,rios2,ppc403,ppc601,ppc602,ppc603,ppc604,ppc620\"\n+(define_attr \"cpu\" \"rios1,rios2,mpccore,ppc403,ppc601,ppc602,ppc603,ppc604,ppc620\"\n   (const (symbol_ref \"rs6000_cpu_attr\")))\n \n ; (define_function_unit NAME MULTIPLICITY SIMULTANEITY\n@@ -50,7 +50,7 @@\n ; (POWER and 601 use Integer Unit)\n (define_function_unit \"lsu\" 1 0\n   (and (eq_attr \"type\" \"load\")\n-       (eq_attr \"cpu\" \"ppc602,ppc603,ppc604,ppc620\"))\n+       (eq_attr \"cpu\" \"mpccore,ppc602,ppc603,ppc604,ppc620\"))\n   2 1)\n \n (define_function_unit \"lsu\" 1 0\n@@ -60,7 +60,7 @@\n \n (define_function_unit \"lsu\" 1 0\n   (and (eq_attr \"type\" \"fpload\")\n-       (eq_attr \"cpu\" \"ppc602,ppc603\"))\n+       (eq_attr \"cpu\" \"mpccore,ppc602,ppc603\"))\n   2 1)\n \n (define_function_unit \"iu\" 1 0\n@@ -75,11 +75,6 @@\n \n ; Integer Unit (RIOS1, PPC601, PPC603)\n ; Trivial operations take one cycle which need not be listed here.\n-(define_function_unit \"iu\" 1 0\n-  (and (eq_attr \"type\" \"integer\")\n-       (eq_attr \"cpu\" \"rios1,ppc601\"))\n-  1 1)\n-\n (define_function_unit \"iu\" 1 0\n   (and (eq_attr \"type\" \"imul\")\n        (eq_attr \"cpu\" \"rios1\"))\n@@ -146,6 +141,18 @@\n        (eq_attr \"cpu\" \"rios2\"))\n   13 13)\n \n+; MPCCORE has separate IMUL/IDIV unit for multicycle instructions\n+; Divide latency varies greatly from 2-11, use 6 as average\n+(define_function_unit \"imuldiv\" 1 0\n+  (and (eq_attr \"type\" \"imul\")\n+       (eq_attr \"cpu\" \"mpccore\"))\n+  2 1)\n+\n+(define_function_unit \"imuldiv\" 1 0\n+  (and (eq_attr \"type\" \"idiv\")\n+       (eq_attr \"cpu\" \"mpccore\"))\n+  6 6)\n+\n ; PPC604 has two units that perform integer operations\n ; and one unit for divide/multiply operations (and move\n ; from/to spr).\n@@ -175,7 +182,7 @@\n ; able to fill the compare-branch delay, with insns on iu/fpu.\n (define_function_unit \"iu\" 1 0   \n   (and (eq_attr \"type\" \"compare\")\n-       (eq_attr \"cpu\" \"rios1,ppc601\"))\n+       (eq_attr \"cpu\" \"rios1,mpccore,ppc601\"))\n   1 1)\n \n (define_function_unit \"iu2\" 2 0   \n@@ -185,7 +192,7 @@\n \n (define_function_unit \"bpu\" 1 0   \n   (and (eq_attr \"type\" \"compare\")\n-       (eq_attr \"cpu\" \"rios1,rios2,ppc403,ppc601,ppc603,ppc604,ppc620\"))\n+       (eq_attr \"cpu\" \"rios1,rios2,ppc403,mpccore,ppc601,ppc603,ppc604,ppc620\"))\n   4 1)\n \n ; different machines have different compare timings\n@@ -227,14 +234,19 @@\n        (eq_attr \"cpu\" \"ppc601,ppc602,ppc603,ppc604,ppc620\"))\n   5 1)\n \n+(define_function_unit \"fpu\" 1 0\n+  (and (eq_attr \"type\" \"fpcompare\")\n+       (eq_attr \"cpu\" \"mpccore\"))\n+  1 1)\n+\n (define_function_unit \"bpu\" 1 0\n   (and (eq_attr \"type\" \"mtjmpr\")\n        (eq_attr \"cpu\" \"rios1,rios2\"))\n   5 0)\n \n (define_function_unit \"bpu\" 1 0\n   (and (eq_attr \"type\" \"mtjmpr\")\n-       (eq_attr \"cpu\" \"ppc403,ppc601,ppc602,ppc603,ppc604,ppc620\"))\n+       (eq_attr \"cpu\" \"ppc403,mpccore,ppc601,ppc602,ppc603,ppc604,ppc620\"))\n   4 0)\n \n ; all jumps/branches are executing on the bpu, in 1 cycle, for all machines.\n@@ -246,12 +258,17 @@\n   (eq_attr \"type\" \"branch\")\n   1 0)\n \n-; Floating Point Unit (RIOS1, PPC601, PPC603, PPC604).\n+; Floating Point Unit\n (define_function_unit \"fpu\" 1 0\n   (and (eq_attr \"type\" \"fp,dmul\")\n        (eq_attr \"cpu\" \"rios1\"))\n   2 0)\n \n+(define_function_unit \"fpu\" 1 0\n+  (and (eq_attr \"type\" \"fp\")\n+       (eq_attr \"cpu\" \"mpccore\"))\n+  4 4)\n+\n (define_function_unit \"fpu\" 1 0\n   (and (eq_attr \"type\" \"fp\")\n        (eq_attr \"cpu\" \"ppc601\"))\n@@ -262,6 +279,11 @@\n        (eq_attr \"cpu\" \"ppc602,ppc603,ppc604,ppc620\"))\n   3 1)\n \n+(define_function_unit \"fpu\" 1 0\n+  (and (eq_attr \"type\" \"dmul\")\n+       (eq_attr \"cpu\" \"mpccore\"))\n+  5 5)\n+\n (define_function_unit \"fpu\" 1 0\n   (and (eq_attr \"type\" \"dmul\")\n        (eq_attr \"cpu\" \"ppc601\"))\n@@ -288,11 +310,21 @@\n        (eq_attr \"cpu\" \"ppc601\"))\n   17 17)\n \n+(define_function_unit \"fpu\" 1 0\n+  (and (eq_attr \"type\" \"sdiv\")\n+       (eq_attr \"cpu\" \"mpccore\"))\n+  10 10)\n+\n (define_function_unit \"fpu\" 1 0\n   (and (eq_attr \"type\" \"sdiv\")\n        (eq_attr \"cpu\" \"ppc602,ppc603,ppc604,ppc620\"))\n   18 18)\n \n+(define_function_unit \"fpu\" 1 0\n+  (and (eq_attr \"type\" \"ddiv\")\n+       (eq_attr \"cpu\" \"mpccore\"))\n+  17 17)\n+\n (define_function_unit \"fpu\" 1 0\n   (and (eq_attr \"type\" \"ddiv\")\n        (eq_attr \"cpu\" \"ppc601,ppc604,ppc620\"))\n@@ -1536,8 +1568,7 @@\n \t (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 3))\n \t\t\t       (sign_extend:DI (reg:SI 4)))\n \t\t      (const_int 32))))\n-   (clobber (match_scratch:SI 0 \"=l\"))\n-   (clobber (reg:SI 4))]\n+   (clobber (match_scratch:SI 0 \"=l\"))]\n   \"! TARGET_POWER && ! TARGET_POWERPC\"\n   \"bla __mulh\")\n \n@@ -1575,9 +1606,7 @@\n (define_insn \"quoss_call\"\n   [(set (reg:SI 3)\n \t(div:SI (reg:SI 3) (reg:SI 4)))\n-   (clobber (match_scratch:SI 0 \"=l\"))\n-   (clobber (match_scratch:CC 1 \"=x\"))\n-   (clobber (reg:CC 69))]\n+   (clobber (match_scratch:SI 0 \"=l\"))]\n   \"! TARGET_POWER && ! TARGET_POWERPC\"\n   \"bla __quoss\")\n \n@@ -2929,7 +2958,7 @@\n \t\t (match_operand:SF 3 \"gpc_reg_operand\" \"f\")))]\n   \"! TARGET_POWERPC && TARGET_HARD_FLOAT\"\n   \"{fma|fmadd} %0,%1,%2,%3\"\n-  [(set_attr \"type\" \"fp\")])\n+  [(set_attr \"type\" \"dmul\")])\n \n (define_insn \"\"\n   [(set (match_operand:SF 0 \"gpc_reg_operand\" \"=f\")\n@@ -2947,7 +2976,7 @@\n \t\t  (match_operand:SF 3 \"gpc_reg_operand\" \"f\")))]\n   \"! TARGET_POWERPC && TARGET_HARD_FLOAT\"\n   \"{fms|fmsub} %0,%1,%2,%3\"\n-  [(set_attr \"type\" \"fp\")])\n+  [(set_attr \"type\" \"dmul\")])\n \n (define_insn \"\"\n   [(set (match_operand:SF 0 \"gpc_reg_operand\" \"=f\")\n@@ -2965,7 +2994,7 @@\n \t\t\t (match_operand:SF 3 \"gpc_reg_operand\" \"f\"))))]\n   \"! TARGET_POWERPC && TARGET_HARD_FLOAT\"\n   \"{fnma|fnmadd} %0,%1,%2,%3\"\n-  [(set_attr \"type\" \"fp\")])\n+  [(set_attr \"type\" \"dmul\")])\n \n (define_insn \"\"\n   [(set (match_operand:SF 0 \"gpc_reg_operand\" \"=f\")\n@@ -2983,7 +3012,7 @@\n \t\t\t  (match_operand:SF 3 \"gpc_reg_operand\" \"f\"))))]\n   \"! TARGET_POWERPC && TARGET_HARD_FLOAT\"\n   \"{fnms|fnmsub} %0,%1,%2,%3\"\n-  [(set_attr \"type\" \"fp\")])\n+  [(set_attr \"type\" \"dmul\")])\n \n (define_expand \"sqrtsf2\"\n   [(set (match_operand:SF 0 \"gpc_reg_operand\" \"\")\n@@ -3691,14 +3720,18 @@\n {\n   if (! TARGET_POWER && ! TARGET_POWERPC)\n     {\n-      int endian = (WORDS_BIG_ENDIAN == 0);\n       emit_move_insn (gen_rtx (REG, SImode, 3), operands[1]);\n       emit_move_insn (gen_rtx (REG, SImode, 4), operands[2]);\n       emit_insn (gen_mull_call ());\n-      emit_move_insn (operand_subword (operands[0], endian, 0, DImode),\n-\t\t      gen_rtx (REG, SImode, 3));\n-      emit_move_insn (operand_subword (operands[0], 1 - endian, 0, DImode),\n-\t\t      gen_rtx (REG, SImode, 4));\n+      if (WORDS_BIG_ENDIAN)\n+        emit_move_insn (operands[0], gen_rtx (REG, DImode, 3));\n+      else\n+\t{\n+\t  emit_move_insn (operand_subword (operands[0], 0, 0, DImode),\n+\t\t\t  gen_rtx (REG, SImode, 3));\n+\t  emit_move_insn (operand_subword (operands[0], 1, 0, DImode),\n+\t\t\t  gen_rtx (REG, SImode, 4));\n+\t}\n       DONE;\n     }\n   else if (TARGET_POWER)\n@@ -3736,7 +3769,7 @@\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"\")\n \t(mult:DI (sign_extend:DI (match_operand:SI 1 \"gpc_reg_operand\" \"\"))\n \t\t (sign_extend:DI (match_operand:SI 2 \"gpc_reg_operand\" \"\"))))]\n-  \"TARGET_POWERPC && ! TARGET_POWERPC64\"\n+  \"TARGET_POWERPC && ! TARGET_POWERPC64 && reload_completed\"\n   [(set (match_dup 3)\n \t(truncate:SI\n \t (lshiftrt:DI (mult:DI (sign_extend:DI (match_dup 1))\n@@ -3770,7 +3803,7 @@\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"\")\n \t(mult:DI (zero_extend:DI (match_operand:SI 1 \"gpc_reg_operand\" \"\"))\n \t\t (zero_extend:DI (match_operand:SI 2 \"gpc_reg_operand\" \"\"))))]\n-  \"TARGET_POWERPC && ! TARGET_POWERPC64\"\n+  \"TARGET_POWERPC && ! TARGET_POWERPC64 && reload_completed\"\n   [(set (match_dup 3)\n \t(truncate:SI\n \t (lshiftrt:DI (mult:DI (zero_extend:DI (match_dup 1))"}, {"sha": "586c3592532713dd7276db72eb0af0cba312c00d", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf27b46744aec5430b81bf763171239bba0f4abb/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf27b46744aec5430b81bf763171239bba0f4abb/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=cf27b46744aec5430b81bf763171239bba0f4abb", "patch": "@@ -1,5 +1,5 @@\n /* Target definitions for GNU compiler for PowerPC running System V.4\n-   Copyright (C) 1995, Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n    Contributed by Cygnus Support.\n \n This file is part of GNU CC.\n@@ -444,12 +444,15 @@ extern int rs6000_pic_labelno;\n %{mcpu=rsc: -mpwr} \\\n %{mcpu=rsc1: -mpwr} \\\n %{mcpu=403: -mppc} \\\n+%{mcpu=505: -mppc} \\\n %{mcpu=601: -m601} \\\n %{mcpu=602: -mppc} \\\n %{mcpu=603: -mppc} \\\n %{mcpu=603e: -mppc} \\\n %{mcpu=604: -mppc} \\\n %{mcpu=620: -mppc} \\\n+%{mcpu=821: -mppc} \\\n+%{mcpu=860: -mppc} \\\n %{V} %{v:%{!V:-V}} %{Qy:} %{!Qn:-Qy} %{n} %{T} %{Ym,*} %{Yd,*} %{Wa,*:%*} \\\n %{mrelocatable} %{mrelocatable-lib} %{memb} \\\n %{mlittle} %{mlittle-endian} %{mbig} %{mbig-endian}\"\n@@ -632,12 +635,15 @@ do {\t\t\t\t\t\t\t\t\t\\\n %{mcpu=rsc: -D_ARCH_PWR} \\\n %{mcpu=rsc1: -D_ARCH_PWR} \\\n %{mcpu=403: -D_ARCH_PPC} \\\n+%{mcpu=505: -D_ARCH_PPC} \\\n %{mcpu=601: -D_ARCH_PPC -D_ARCH_PWR} \\\n %{mcpu=602: -D_ARCH_PPC} \\\n %{mcpu=603: -D_ARCH_PPC} \\\n %{mcpu=603e: -D_ARCH_PPC} \\\n %{mcpu=604: -D_ARCH_PPC} \\\n-%{mcpu=620: -D_ARCH_PPC}\"\n+%{mcpu=620: -D_ARCH_PPC} \\\n+%{mcpu=821: -D_ARCH_PPC} \\\n+%{mcpu=860: -D_ARCH_PPC}\"\n \n /* Define this macro as a C expression for the initializer of an\n    array of string to tell the driver program which options are"}]}