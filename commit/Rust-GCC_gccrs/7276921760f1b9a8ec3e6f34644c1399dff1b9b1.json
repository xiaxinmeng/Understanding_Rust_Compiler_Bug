{"sha": "7276921760f1b9a8ec3e6f34644c1399dff1b9b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzI3NjkyMTc2MGYxYjlhOGVjM2U2ZjM0NjQ0YzEzOTlkZmYxYjliMQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-11-21T09:15:38Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-11-21T09:15:38Z"}, "message": "tree-ssa-loop-ch.c (copy_loop_headers): Decrement nb_iterations_upper_bound by one.\n\n2013-11-21  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-loop-ch.c (copy_loop_headers): Decrement\n\tnb_iterations_upper_bound by one.\n\nFrom-SVN: r205198", "tree": {"sha": "a18f595d229483f0389d11db182f5bc51f0b308d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a18f595d229483f0389d11db182f5bc51f0b308d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7276921760f1b9a8ec3e6f34644c1399dff1b9b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7276921760f1b9a8ec3e6f34644c1399dff1b9b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7276921760f1b9a8ec3e6f34644c1399dff1b9b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7276921760f1b9a8ec3e6f34644c1399dff1b9b1/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d995e887cb937a630aaf1fc9a78d4bd166f12a83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d995e887cb937a630aaf1fc9a78d4bd166f12a83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d995e887cb937a630aaf1fc9a78d4bd166f12a83"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "1ececafc8273a0acf25707d87d692fe7199e6abf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7276921760f1b9a8ec3e6f34644c1399dff1b9b1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7276921760f1b9a8ec3e6f34644c1399dff1b9b1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7276921760f1b9a8ec3e6f34644c1399dff1b9b1", "patch": "@@ -1,3 +1,8 @@\n+2013-11-21  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-loop-ch.c (copy_loop_headers): Decrement\n+\tnb_iterations_upper_bound by one.\n+\n 2013-11-21  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/59058"}, {"sha": "ccaa9c8987e33f77607a9d586b665c8b6b9a6b6e", "filename": "gcc/tree-ssa-loop-ch.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7276921760f1b9a8ec3e6f34644c1399dff1b9b1/gcc%2Ftree-ssa-loop-ch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7276921760f1b9a8ec3e6f34644c1399dff1b9b1/gcc%2Ftree-ssa-loop-ch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ch.c?ref=7276921760f1b9a8ec3e6f34644c1399dff1b9b1", "patch": "@@ -243,6 +243,16 @@ copy_loop_headers (void)\n \t are not now, since there was the loop exit condition.  */\n       split_edge (loop_preheader_edge (loop));\n       split_edge (loop_latch_edge (loop));\n+\n+      /* We peeled off one iteration of the loop thus we can lower\n+\t the maximum number of iterations if we have a previously\n+\t recorded value for that.  */\n+      double_int max;\n+      if (get_max_loop_iterations (loop, &max))\n+\t{\n+\t  max -= double_int_one;\n+\t  loop->nb_iterations_upper_bound = max;\n+\t}\n     }\n \n   update_ssa (TODO_update_ssa);"}]}