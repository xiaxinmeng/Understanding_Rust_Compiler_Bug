{"sha": "83668c858e5d0ee47a21d5a855b56b9f4ca2d93a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM2NjhjODU4ZTVkMGVlNDdhMjFkNWE4NTViNTZiOWY0Y2EyZDkzYQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-10-27T11:59:21Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-10-27T11:59:21Z"}, "message": "Rename logb and significand folds\n\nfold_builtin_logb and fold_builtin_significand now only handle\nconstant arguments, so this patch renames them to fold_const...,\nto match fold_const_builtin_pow.  The idea is to differentiate\nconstant-only folds so that they can be moved to a const_binop-like\nfunction in future.\n\nThe functions also had some unnecessary calls to STRIP_NOPS, which\nI think are left over from code that has already moved to match.pd.\n\nTested on x86_64-linux-gnu, aarch64-linux-gnu and arm-linux-gnueabi.\n\ngcc/\n\t* builtins.c (fold_builtin_logb): Rename to...\n\t(fold_const_builtin_logb): ...this and remove STRIP_NOPS call.\n\t(fold_builtin_significand): Rename to...\n\t(fold_const_builtin_significand): ...this and remove STRIP_NOPS call.\n\t(fold_builtin_1): Update accordingly.\n\nFrom-SVN: r229433", "tree": {"sha": "6092555a6027942cefb170bc56a64538b2bb78d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6092555a6027942cefb170bc56a64538b2bb78d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83668c858e5d0ee47a21d5a855b56b9f4ca2d93a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83668c858e5d0ee47a21d5a855b56b9f4ca2d93a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83668c858e5d0ee47a21d5a855b56b9f4ca2d93a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83668c858e5d0ee47a21d5a855b56b9f4ca2d93a/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0122e8e5212582669a58272d3fcc4beba9f42d58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0122e8e5212582669a58272d3fcc4beba9f42d58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0122e8e5212582669a58272d3fcc4beba9f42d58"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "8711203c3d7de27addfe556909c842d54c167854", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83668c858e5d0ee47a21d5a855b56b9f4ca2d93a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83668c858e5d0ee47a21d5a855b56b9f4ca2d93a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=83668c858e5d0ee47a21d5a855b56b9f4ca2d93a", "patch": "@@ -1,3 +1,11 @@\n+2015-10-27  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* builtins.c (fold_builtin_logb): Rename to...\n+\t(fold_const_builtin_logb): ...this and remove STRIP_NOPS call.\n+\t(fold_builtin_significand): Rename to...\n+\t(fold_const_builtin_significand): ...this and remove STRIP_NOPS call.\n+\t(fold_builtin_1): Update accordingly.\n+\n 2015-10-27  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* builtins.c (fold_builtin_fmin_fmax): Delete."}, {"sha": "260b66d7810b814dcc79930fd030e019f804f9cf", "filename": "gcc/builtins.c", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83668c858e5d0ee47a21d5a855b56b9f4ca2d93a/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83668c858e5d0ee47a21d5a855b56b9f4ca2d93a/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=83668c858e5d0ee47a21d5a855b56b9f4ca2d93a", "patch": "@@ -7916,13 +7916,11 @@ fold_builtin_carg (location_t loc, tree arg, tree type)\n /* Fold a call to builtin logb/ilogb.  */\n \n static tree\n-fold_builtin_logb (location_t loc, tree arg, tree rettype)\n+fold_const_builtin_logb (location_t loc, tree arg, tree rettype)\n {\n   if (! validate_arg (arg, REAL_TYPE))\n     return NULL_TREE;\n \n-  STRIP_NOPS (arg);\n-\n   if (TREE_CODE (arg) == REAL_CST && ! TREE_OVERFLOW (arg))\n     {\n       const REAL_VALUE_TYPE *const value = TREE_REAL_CST_PTR (arg);\n@@ -7967,13 +7965,11 @@ fold_builtin_logb (location_t loc, tree arg, tree rettype)\n /* Fold a call to builtin significand, if radix == 2.  */\n \n static tree\n-fold_builtin_significand (location_t loc, tree arg, tree rettype)\n+fold_const_builtin_significand (location_t loc, tree arg, tree rettype)\n {\n   if (! validate_arg (arg, REAL_TYPE))\n     return NULL_TREE;\n \n-  STRIP_NOPS (arg);\n-\n   if (TREE_CODE (arg) == REAL_CST && ! TREE_OVERFLOW (arg))\n     {\n       const REAL_VALUE_TYPE *const value = TREE_REAL_CST_PTR (arg);\n@@ -9002,11 +8998,11 @@ fold_builtin_1 (location_t loc, tree fndecl, tree arg0)\n       break;\n \n     CASE_FLT_FN (BUILT_IN_SIGNIFICAND):\n-      return fold_builtin_significand (loc, arg0, type);\n+      return fold_const_builtin_significand (loc, arg0, type);\n \n     CASE_FLT_FN (BUILT_IN_ILOGB):\n     CASE_FLT_FN (BUILT_IN_LOGB):\n-      return fold_builtin_logb (loc, arg0, type);\n+      return fold_const_builtin_logb (loc, arg0, type);\n \n     case BUILT_IN_ISASCII:\n       return fold_builtin_isascii (loc, arg0);"}]}