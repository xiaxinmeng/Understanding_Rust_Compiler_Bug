{"sha": "46a2ab580a762b0fc3e64dc4ab24d459a4bd1fd2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZhMmFiNTgwYTc2MmIwZmMzZTY0ZGM0YWIyNGQ0NTlhNGJkMWZkMg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-02-03T15:22:47Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-02-03T15:22:47Z"}, "message": "Simplify creation of target_clones (PR lto/66295)\n\n2017-02-03  Martin Liska  <mliska@suse.cz>\n\n\tPR lto/66295\n\t* multiple_target.c (create_dispatcher_calls): Redirect edge\n\tfrom a caller of a dispatcher.\n\t(expand_target_clones): Make the clones local.\n\t(ipa_target_clone): Do both target clones and resolvers.\n\t(ipa_dispatcher_calls): Remove the pass.\n\t(pass_dispatcher_calls::gate): Likewise.\n\t(make_pass_dispatcher_calls): Likewise.\n\t* passes.def (pass_target_clone): Put as very first IPA early\n\tpass.\n2017-02-03  Martin Liska  <mliska@suse.cz>\n\n\tPR lto/66295\n\t* gcc.target/i386/mvc9.c: New test.\n\nFrom-SVN: r245155", "tree": {"sha": "fab289c285703064b0e0cefe1edc142fb8fff07c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fab289c285703064b0e0cefe1edc142fb8fff07c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46a2ab580a762b0fc3e64dc4ab24d459a4bd1fd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46a2ab580a762b0fc3e64dc4ab24d459a4bd1fd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46a2ab580a762b0fc3e64dc4ab24d459a4bd1fd2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46a2ab580a762b0fc3e64dc4ab24d459a4bd1fd2/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "31a31c9dc19b0a20a69c282b8760147bf79e37a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31a31c9dc19b0a20a69c282b8760147bf79e37a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31a31c9dc19b0a20a69c282b8760147bf79e37a6"}], "stats": {"total": 120, "additions": 57, "deletions": 63}, "files": [{"sha": "269d6197e0600afa9b20eeef7397655824d8e05c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46a2ab580a762b0fc3e64dc4ab24d459a4bd1fd2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46a2ab580a762b0fc3e64dc4ab24d459a4bd1fd2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=46a2ab580a762b0fc3e64dc4ab24d459a4bd1fd2", "patch": "@@ -1,3 +1,16 @@\n+2017-02-03  Martin Liska  <mliska@suse.cz>\n+\n+\tPR lto/66295\n+\t* multiple_target.c (create_dispatcher_calls): Redirect edge\n+\tfrom a caller of a dispatcher.\n+\t(expand_target_clones): Make the clones local.\n+\t(ipa_target_clone): Do both target clones and resolvers.\n+\t(ipa_dispatcher_calls): Remove the pass.\n+\t(pass_dispatcher_calls::gate): Likewise.\n+\t(make_pass_dispatcher_calls): Likewise.\n+\t* passes.def (pass_target_clone): Put as very first IPA early\n+\tpass.\n+\n 2017-02-03  Martin Liska  <mliska@suse.cz>\n \n \t* symtab.c (symtab_node::binds_to_current_def_p): Bail out"}, {"sha": "7b735ae81ae910876229288cc80f3014bdb20cae", "filename": "gcc/multiple_target.c", "status": "modified", "additions": 10, "deletions": 61, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46a2ab580a762b0fc3e64dc4ab24d459a4bd1fd2/gcc%2Fmultiple_target.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46a2ab580a762b0fc3e64dc4ab24d459a4bd1fd2/gcc%2Fmultiple_target.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmultiple_target.c?ref=46a2ab580a762b0fc3e64dc4ab24d459a4bd1fd2", "patch": "@@ -87,6 +87,7 @@ create_dispatcher_calls (struct cgraph_node *node)\n \tinode->resolve_alias (cgraph_node::get (resolver_decl));\n \n       e->redirect_callee (inode);\n+      e->redirect_call_stmt_to_callee ();\n       /*  Since REDIRECT_CALLEE modifies NEXT_CALLER field we move to\n \t  previously set NEXT_CALLER.  */\n       e = NULL;\n@@ -283,6 +284,7 @@ expand_target_clones (struct cgraph_node *node, bool definition)\n       create_new_asm_name (attr, suffix);\n       /* Create new target clone.  */\n       cgraph_node *new_node = create_target_clone (node, definition, suffix);\n+      new_node->local.local = false;\n       XDELETEVEC (suffix);\n \n       /* Set new attribute for the clone.  */\n@@ -334,17 +336,19 @@ expand_target_clones (struct cgraph_node *node, bool definition)\n   return ret;\n }\n \n-static bool target_clone_pass;\n-\n static unsigned int\n ipa_target_clone (void)\n {\n   struct cgraph_node *node;\n \n-  target_clone_pass = false;\n+  bool target_clone_pass = false;\n   FOR_EACH_FUNCTION (node)\n-    if (node->definition)\n-      target_clone_pass |= expand_target_clones (node, true);\n+    target_clone_pass |= expand_target_clones (node, node->definition);\n+\n+  if (target_clone_pass)\n+    FOR_EACH_FUNCTION (node)\n+      create_dispatcher_calls (node);\n+\n   return 0;\n }\n \n@@ -360,7 +364,7 @@ const pass_data pass_data_target_clone =\n   0,\t\t\t\t/* properties_provided */\n   0,\t\t\t\t/* properties_destroyed */\n   0,\t\t\t\t/* todo_flags_start */\n-  0\t\t\t\t/* todo_flags_finish */\n+  TODO_update_ssa\t\t/* todo_flags_finish */\n };\n \n class pass_target_clone : public simple_ipa_opt_pass\n@@ -388,58 +392,3 @@ make_pass_target_clone (gcc::context *ctxt)\n {\n   return new pass_target_clone (ctxt);\n }\n-\n-static unsigned int\n-ipa_dispatcher_calls (void)\n-{\n-  struct cgraph_node *node;\n-\n-  FOR_EACH_FUNCTION (node)\n-    if (!node->definition)\n-      target_clone_pass |= expand_target_clones (node, false);\n-  if (target_clone_pass)\n-    FOR_EACH_FUNCTION (node)\n-      create_dispatcher_calls (node);\n-  return 0;\n-}\n-\n-namespace {\n-\n-const pass_data pass_data_dispatcher_calls =\n-{\n-  SIMPLE_IPA_PASS,\t\t/* type */\n-  \"dispatchercalls\",\t\t/* name */\n-  OPTGROUP_NONE,\t\t/* optinfo_flags */\n-  TV_NONE,\t\t\t/* tv_id */\n-  ( PROP_ssa | PROP_cfg ),\t/* properties_required */\n-  0,\t\t\t\t/* properties_provided */\n-  0,\t\t\t\t/* properties_destroyed */\n-  0,\t\t\t\t/* todo_flags_start */\n-  0\t\t\t\t/* todo_flags_finish */\n-};\n-\n-class pass_dispatcher_calls : public simple_ipa_opt_pass\n-{\n-public:\n-  pass_dispatcher_calls (gcc::context *ctxt)\n-    : simple_ipa_opt_pass (pass_data_dispatcher_calls, ctxt)\n-  {}\n-\n-  /* opt_pass methods: */\n-  virtual bool gate (function *);\n-  virtual unsigned int execute (function *) { return ipa_dispatcher_calls (); }\n-};\n-\n-bool\n-pass_dispatcher_calls::gate (function *)\n-{\n-  return true;\n-}\n-\n-} // anon namespace\n-\n-simple_ipa_opt_pass *\n-make_pass_dispatcher_calls (gcc::context *ctxt)\n-{\n-  return new pass_dispatcher_calls (ctxt);\n-}"}, {"sha": "c09ec220d705e0ad72ecd6bf5e3d67214d73008b", "filename": "gcc/passes.def", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46a2ab580a762b0fc3e64dc4ab24d459a4bd1fd2/gcc%2Fpasses.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46a2ab580a762b0fc3e64dc4ab24d459a4bd1fd2/gcc%2Fpasses.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.def?ref=46a2ab580a762b0fc3e64dc4ab24d459a4bd1fd2", "patch": "@@ -136,6 +136,7 @@ along with GCC; see the file COPYING3.  If not see\n       POP_INSERT_PASSES ()\n   POP_INSERT_PASSES ()\n \n+  NEXT_PASS (pass_target_clone);\n   NEXT_PASS (pass_ipa_chkp_produce_thunks);\n   NEXT_PASS (pass_ipa_auto_profile);\n   NEXT_PASS (pass_ipa_free_inline_summary);\n@@ -155,7 +156,6 @@ along with GCC; see the file COPYING3.  If not see\n   NEXT_PASS (pass_ipa_devirt);\n   NEXT_PASS (pass_ipa_cp);\n   NEXT_PASS (pass_ipa_cdtor_merge);\n-  NEXT_PASS (pass_target_clone);\n   NEXT_PASS (pass_ipa_hsa);\n   NEXT_PASS (pass_ipa_inline);\n   NEXT_PASS (pass_ipa_pure_const);\n@@ -174,7 +174,6 @@ along with GCC; see the file COPYING3.  If not see\n   INSERT_PASSES_AFTER (all_late_ipa_passes)\n   NEXT_PASS (pass_materialize_all_clones);\n   NEXT_PASS (pass_ipa_pta);\n-  NEXT_PASS (pass_dispatcher_calls);\n   NEXT_PASS (pass_omp_simd_clone);\n   TERMINATE_PASS_LIST (all_late_ipa_passes)\n "}, {"sha": "c5e31c7527929eb92d21bb03b754511ce82fe65a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46a2ab580a762b0fc3e64dc4ab24d459a4bd1fd2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46a2ab580a762b0fc3e64dc4ab24d459a4bd1fd2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=46a2ab580a762b0fc3e64dc4ab24d459a4bd1fd2", "patch": "@@ -1,3 +1,8 @@\n+2017-02-03  Martin Liska  <mliska@suse.cz>\n+\n+\tPR lto/66295\n+\t* gcc.target/i386/mvc9.c: New test.\n+\n 2017-02-03  Pat Haugen  <pthaugen@us.ibm.com>\n \n \tPR target/79158"}, {"sha": "69e3cefb7d1dfeb82f1573b6f486d03dbccba9ef", "filename": "gcc/testsuite/gcc.target/i386/mvc9.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46a2ab580a762b0fc3e64dc4ab24d459a4bd1fd2/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmvc9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46a2ab580a762b0fc3e64dc4ab24d459a4bd1fd2/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmvc9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmvc9.c?ref=46a2ab580a762b0fc3e64dc4ab24d459a4bd1fd2", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do run } */\n+/* { dg-require-ifunc \"\" } */\n+/* { dg-options \"-flto -O2\" { target lto } } */\n+\n+__attribute__((target_clones(\"avx\",\"arch=slm\",\"arch=core-avx2\",\"default\")))\n+int\n+foo ()\n+{\n+  return -2;\n+}\n+\n+int\n+bar ()\n+{\n+  return 2;\n+}\n+\n+int\n+main ()\n+{\n+  int r = 0;\n+  r += bar ();\n+  r += foo ();\n+  r += bar ();\n+  r += foo ();\n+  r += bar ();\n+  return r - 2;\n+}"}]}