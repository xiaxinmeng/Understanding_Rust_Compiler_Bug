{"sha": "61637db3f2f55a1b97e6f466be012a131bede75d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE2MzdkYjNmMmY1NWExYjk3ZTZmNDY2YmUwMTJhMTMxYmVkZTc1ZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-03-23T18:45:26Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-03-23T18:45:26Z"}, "message": "re PR c++/70323 (missing error on integer overflow in constexpr function result converted to bool)\n\n\tPR c++/70323\n\t* constexpr.c (cxx_eval_constant_expression): Diagnose overflow\n\ton TREE_OVERFLOW constants.\n\n\t* g++.dg/cpp0x/constexpr-70323.C: New test.\n\nFrom-SVN: r234438", "tree": {"sha": "d41106a9190c0d64c3e6fedaa69e2c6ef89d400e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d41106a9190c0d64c3e6fedaa69e2c6ef89d400e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61637db3f2f55a1b97e6f466be012a131bede75d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61637db3f2f55a1b97e6f466be012a131bede75d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61637db3f2f55a1b97e6f466be012a131bede75d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61637db3f2f55a1b97e6f466be012a131bede75d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "048336099ee3c4e29510f140f5505ce2ad79bf55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/048336099ee3c4e29510f140f5505ce2ad79bf55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/048336099ee3c4e29510f140f5505ce2ad79bf55"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "b7a1f3984b1f264c65799cdbf2a175fc8b36ef75", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61637db3f2f55a1b97e6f466be012a131bede75d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61637db3f2f55a1b97e6f466be012a131bede75d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=61637db3f2f55a1b97e6f466be012a131bede75d", "patch": "@@ -1,5 +1,9 @@\n 2016-03-23  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/70323\n+\t* constexpr.c (cxx_eval_constant_expression): Diagnose overflow\n+\ton TREE_OVERFLOW constants.\n+\n \tPR c++/70376\n \t* cp-gimplify.c (genericize_omp_for_stmt): Don't walk OMP_FOR_CLAUSES\n \tfor OMP_TASKLOOP here."}, {"sha": "4baf11445df67da23f64cdd486d89cd1d888ff94", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61637db3f2f55a1b97e6f466be012a131bede75d/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61637db3f2f55a1b97e6f466be012a131bede75d/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=61637db3f2f55a1b97e6f466be012a131bede75d", "patch": "@@ -3321,8 +3321,13 @@ cxx_eval_constant_expression (const constexpr_ctx *ctx, tree t,\n     }\n   if (CONSTANT_CLASS_P (t))\n     {\n-      if (TREE_OVERFLOW (t) && (!flag_permissive || ctx->quiet))\n-\t*overflow_p = true;\n+      if (TREE_OVERFLOW (t))\n+\t{\n+\t  if (!ctx->quiet)\n+\t    permerror (input_location, \"overflow in constant expression\");\n+\t  if (!flag_permissive || ctx->quiet)\n+\t    *overflow_p = true;\n+\t}\n       return t;\n     }\n "}, {"sha": "8fbd1e865114771ae28d898dd2f1c3c79952bdc8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61637db3f2f55a1b97e6f466be012a131bede75d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61637db3f2f55a1b97e6f466be012a131bede75d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=61637db3f2f55a1b97e6f466be012a131bede75d", "patch": "@@ -1,3 +1,8 @@\n+2016-03-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/70323\n+\t* g++.dg/cpp0x/constexpr-70323.C: New test.\n+\n 2016-03-23  Alexandre Oliva  <aoliva@redhat.com>\n \t    Jason Merrill  <jason@redhat.com>\n \t    Jakub Jelinek  <jakub@redhat.com>"}, {"sha": "8307ac8e0a691489d395ff8e1c2169f7185266d9", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-70323.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61637db3f2f55a1b97e6f466be012a131bede75d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-70323.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61637db3f2f55a1b97e6f466be012a131bede75d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-70323.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-70323.C?ref=61637db3f2f55a1b97e6f466be012a131bede75d", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/70323\n+// { dg-do compile { target c++11 } }\n+\n+constexpr int overflow_if_0 (int i) { return __INT_MAX__ + !i; }\n+constexpr int overflow_if_1 (int i) { return __INT_MAX__ + i; }\n+\n+constexpr bool i0_0 = overflow_if_0 (0);   // { dg-error \"overflow in constant expression\" }\n+constexpr bool i0_1 = overflow_if_0 (1);\n+constexpr bool i1_0 = overflow_if_1 (0);\n+constexpr bool i1_1 = overflow_if_1 (1);   // { dg-error \"overflow in constant expression\" }"}]}