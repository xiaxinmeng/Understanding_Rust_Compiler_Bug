{"sha": "cbabbc34a7e01d21381b565a63f65c59ca1f6e6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2JhYmJjMzRhN2UwMWQyMTM4MWI1NjVhNjNmNjVjNTljYTFmNmU2Zg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-10-05T21:36:38Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-10-05T21:36:38Z"}, "message": "* parser.c: Mark lambda_scope and lambda_count for PCH.\n\nFrom-SVN: r152474", "tree": {"sha": "3cb36df243146170afd60fe54864c32ff2b0e5ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3cb36df243146170afd60fe54864c32ff2b0e5ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cbabbc34a7e01d21381b565a63f65c59ca1f6e6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbabbc34a7e01d21381b565a63f65c59ca1f6e6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbabbc34a7e01d21381b565a63f65c59ca1f6e6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbabbc34a7e01d21381b565a63f65c59ca1f6e6f/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "123651cdb6e09bc299f66c5179fc144503a0044f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/123651cdb6e09bc299f66c5179fc144503a0044f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/123651cdb6e09bc299f66c5179fc144503a0044f"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "03f26c9cc3b6eabb0e4376f22a80a327cce64a73", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbabbc34a7e01d21381b565a63f65c59ca1f6e6f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbabbc34a7e01d21381b565a63f65c59ca1f6e6f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cbabbc34a7e01d21381b565a63f65c59ca1f6e6f", "patch": "@@ -1,3 +1,7 @@\n+2009-10-05  Jason Merrill  <jason@redhat.com>\n+\n+\t* parser.c: Mark lambda_scope and lambda_count for PCH.\n+\n 2009-10-03  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/41553"}, {"sha": "8ab930c7c81bfbcaa37fefbffc67e14adadc7e29", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbabbc34a7e01d21381b565a63f65c59ca1f6e6f/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbabbc34a7e01d21381b565a63f65c59ca1f6e6f/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=cbabbc34a7e01d21381b565a63f65c59ca1f6e6f", "patch": "@@ -6955,8 +6955,8 @@ cp_parser_trait_expr (cp_parser* parser, enum rid keyword)\n /* Lambdas that appear in variable initializer or default argument scope\n    get that in their mangling, so we need to record it.  We might as well\n    use the count for function and namespace scopes as well.  */\n-static tree lambda_scope;\n-static int lambda_count;\n+static GTY(()) tree lambda_scope;\n+static GTY(()) int lambda_count;\n typedef struct GTY(()) tree_int\n {\n   tree t;"}]}