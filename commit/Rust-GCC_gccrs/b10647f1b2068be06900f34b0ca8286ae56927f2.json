{"sha": "b10647f1b2068be06900f34b0ca8286ae56927f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjEwNjQ3ZjFiMjA2OGJlMDY5MDBmMzRiMGNhODI4NmFlNTY5MjdmMg==", "commit": {"author": {"name": "Jeff Garzik", "email": "jgarzik@pobox.com", "date": "1999-09-08T08:19:52Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-09-08T08:19:52Z"}, "message": "xmemdup.c: New xmemdup function.\n\n\n\t* xmemdup.c:  New xmemdup function.\n\t* Makefile.in, makefile.vms, vmsbuild.com:  Use xmemdup.[co].\n\nFrom-SVN: r29199", "tree": {"sha": "a06393716745f47e90a677ca5064aea4212fe102", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a06393716745f47e90a677ca5064aea4212fe102"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b10647f1b2068be06900f34b0ca8286ae56927f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b10647f1b2068be06900f34b0ca8286ae56927f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b10647f1b2068be06900f34b0ca8286ae56927f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b10647f1b2068be06900f34b0ca8286ae56927f2/comments", "author": {"login": "jgarzik", "id": 494411, "node_id": "MDQ6VXNlcjQ5NDQxMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgarzik", "html_url": "https://github.com/jgarzik", "followers_url": "https://api.github.com/users/jgarzik/followers", "following_url": "https://api.github.com/users/jgarzik/following{/other_user}", "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions", "organizations_url": "https://api.github.com/users/jgarzik/orgs", "repos_url": "https://api.github.com/users/jgarzik/repos", "events_url": "https://api.github.com/users/jgarzik/events{/privacy}", "received_events_url": "https://api.github.com/users/jgarzik/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "898458348547ead27183dbecb75a3bf6713d0074", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/898458348547ead27183dbecb75a3bf6713d0074", "html_url": "https://github.com/Rust-GCC/gccrs/commit/898458348547ead27183dbecb75a3bf6713d0074"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "77f42efd8085fbcb6b389d603c4e2dd551b06056", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b10647f1b2068be06900f34b0ca8286ae56927f2/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b10647f1b2068be06900f34b0ca8286ae56927f2/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=b10647f1b2068be06900f34b0ca8286ae56927f2", "patch": "@@ -1,3 +1,8 @@\n+1999-09-07  Jeff Garzik  <jgarzik@pobox.com>\n+\n+\t* xmemdup.c: New xmemdup function.\n+\t* Makefile.in, makefile.vms, vmsbuild.com:  Use xmemdup.[co].\n+\n Tue Sep  7 23:32:18 1999  Linas Vepstas  <linas@linas.org>\n \n         * config.table: Add openedition target."}, {"sha": "adaf8a6a98c286bb161e3354749ef708698ac3a2", "filename": "libiberty/Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b10647f1b2068be06900f34b0ca8286ae56927f2/libiberty%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b10647f1b2068be06900f34b0ca8286ae56927f2/libiberty%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FMakefile.in?ref=b10647f1b2068be06900f34b0ca8286ae56927f2", "patch": "@@ -129,14 +129,14 @@ CFILES = asprintf.c alloca.c argv.c atexit.c basename.c bcmp.c bcopy.c \\\n \tspaces.c splay-tree.c strcasecmp.c strncasecmp.c strchr.c strdup.c \\\n \tstrerror.c strrchr.c strsignal.c strstr.c strtod.c strtol.c strtoul.c \\\n \ttmpnam.c vasprintf.c vfork.c vfprintf.c vprintf.c vsprintf.c \\\n-\twaitpid.c xatexit.c xexit.c xmalloc.c xstrdup.c xstrerror.c\n+\twaitpid.c xatexit.c xexit.c xmalloc.c xmemdup.c xstrdup.c xstrerror.c\n \n # These are always included in the library.\n REQUIRED_OFILES = argv.o choose-temp.o concat.o cplus-dem.o \\\n   fdmatch.o fnmatch.o getopt.o getopt1.o getpwd.o getruntime.o hex.o \\\n   floatformat.o objalloc.o obstack.o pexecute.o spaces.o \\\n   splay-tree.o strerror.o strsignal.o xatexit.o xexit.o xmalloc.o \\\n-  xstrdup.o xstrerror.o\n+  xmemdup.o xstrdup.o xstrerror.o\n \n $(TARGETLIB): $(REQUIRED_OFILES) $(EXTRA_OFILES) $(LIBOBJS) $(ALLOCA)\n \trm -f $(TARGETLIB)\n@@ -270,5 +270,6 @@ strsignal.o: config.h $(INCDIR)/libiberty.h\n xatexit.o: $(INCDIR)/libiberty.h\n xexit.o: $(INCDIR)/libiberty.h\n xmalloc.o: $(INCDIR)/libiberty.h\n+xmemdup.o: config.h $(INCDIR)/libiberty.h\n xstrdup.o: config.h $(INCDIR)/libiberty.h\n xstrerror.o: config.h $(INCDIR)/libiberty.h"}, {"sha": "6a7dd45718ee8c8b55357a716d690dbefacc0890", "filename": "libiberty/makefile.vms", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b10647f1b2068be06900f34b0ca8286ae56927f2/libiberty%2Fmakefile.vms", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b10647f1b2068be06900f34b0ca8286ae56927f2/libiberty%2Fmakefile.vms", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fmakefile.vms?ref=b10647f1b2068be06900f34b0ca8286ae56927f2", "patch": "@@ -10,7 +10,7 @@\n OBJS=bcopy.obj,bcmp.obj,getopt.obj,obstack.obj,xexit.obj,xmalloc.obj,hex.obj,\\\n    getopt1.obj,cplus-dem.obj,strncasecmp.obj,strcasecmp.obj,strdup.obj,\\\n    concat.obj,getruntime.obj,getpagesize.obj,alloca.obj,xstrerror.obj,\\\n-   xstrdup.obj,xatexit.obj,choose-temp.obj,fnmatch.obj,objalloc.obj\n+   xmemdup.obj,xstrdup.obj,xatexit.obj,choose-temp.obj,fnmatch.obj,objalloc.obj\n \n ifeq ($(CC),gcc)\n CFLAGS=/include=([],[-.include])"}, {"sha": "497ea8974f2b9f013f2c0182d73f0cd0a9335454", "filename": "libiberty/vmsbuild.com", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b10647f1b2068be06900f34b0ca8286ae56927f2/libiberty%2Fvmsbuild.com", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b10647f1b2068be06900f34b0ca8286ae56927f2/libiberty%2Fvmsbuild.com", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fvmsbuild.com?ref=b10647f1b2068be06900f34b0ca8286ae56927f2", "patch": "@@ -15,7 +15,7 @@ $! manually copied from Makefile.in\n $ REQUIRED_OFILES = \"argv.o basename.o choose-temp.o concat.o cplus-dem.o \"-\n \t+ \"fdmatch.o fnmatch.o getopt.o getopt1.o getruntime.o hex.o \"-\n \t+ \"floatformat.o objalloc.o obstack.o spaces.o strerror.o strsignal.o \"-\n-\t+ \"xatexit.o xexit.o xmalloc.o xstrdup.o xstrerror.o\"\n+\t+ \"xatexit.o xexit.o xmalloc.o xmemdup.o xstrdup.o xstrerror.o\"\n $! anything not caught by link+search of dummy.* should be added here\n $ EXTRA_OFILES = \"\"\n $!"}, {"sha": "8e82469070c2391d723690a21402c07c8f0b98d4", "filename": "libiberty/xmemdup.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b10647f1b2068be06900f34b0ca8286ae56927f2/libiberty%2Fxmemdup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b10647f1b2068be06900f34b0ca8286ae56927f2/libiberty%2Fxmemdup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fxmemdup.c?ref=b10647f1b2068be06900f34b0ca8286ae56927f2", "patch": "@@ -0,0 +1,20 @@\n+/* xmemdup.c -- Duplicate a memory buffer, using xcalloc.\n+   This trivial function is in the public domain.\n+   Jeff Garzik, September 1999.  */\n+\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+#include \"ansidecl.h\"\n+#include \"libiberty.h\"\n+\n+PTR\n+xmemdup (input, copy_size, alloc_size)\n+  const PTR input;\n+  size_t copy_size;\n+  size_t alloc_size;\n+{\n+  PTR output = xcalloc (1, alloc_size);\n+  memcpy (output, input, copy_size);\n+  return output;\n+}"}]}