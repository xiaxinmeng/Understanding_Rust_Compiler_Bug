{"sha": "7db42268ce4bc77bc13f13ba0899221747255bb5", "node_id": "C_kwDOANBUbNoAKDdkYjQyMjY4Y2U0YmM3N2JjMTNmMTNiYTA4OTkyMjE3NDcyNTViYjU", "commit": {"author": {"name": "David Faust", "email": "david.faust@oracle.com", "date": "2021-12-14T21:48:21Z"}, "committer": {"name": "David Faust", "email": "david.faust@oracle.com", "date": "2022-01-18T21:20:49Z"}, "message": "bpf: ensure correct string offsets in BTF.ext\n\nBPF CO-RE relocations contain offsets to strings buffered in the BTF\nstring table. These BTF-specific strings are stored in memory in the\nCTF auxilliary strtab, which at output time is concatenated onto the end\nof the standard strtab.\n\nPreviously, these string offsets were computed at the time the\nrelocations were created. But strings could be added to the standard\nstrtab after this point, causing the offsets to no longer be correct.\n\nCompute the offsets just before output instead, when they are sure to no\nlonger change.\n\ngcc/ChangeLog:\n\n\t* config/bpf/coreout.cc (bpf_core_reloc_add): Do not account\n\tfor base strtab offset yet as it may change.\n\t(output_asm_btfext_core_reloc): Do so here instead.\n\t(output_btfext_core_sections): Likewise.", "tree": {"sha": "57a9b3828f6e1636b145a6aae83c681a36159dca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57a9b3828f6e1636b145a6aae83c681a36159dca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7db42268ce4bc77bc13f13ba0899221747255bb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7db42268ce4bc77bc13f13ba0899221747255bb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7db42268ce4bc77bc13f13ba0899221747255bb5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7db42268ce4bc77bc13f13ba0899221747255bb5/comments", "author": {"login": "dafaust", "id": 4460334, "node_id": "MDQ6VXNlcjQ0NjAzMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4460334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dafaust", "html_url": "https://github.com/dafaust", "followers_url": "https://api.github.com/users/dafaust/followers", "following_url": "https://api.github.com/users/dafaust/following{/other_user}", "gists_url": "https://api.github.com/users/dafaust/gists{/gist_id}", "starred_url": "https://api.github.com/users/dafaust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dafaust/subscriptions", "organizations_url": "https://api.github.com/users/dafaust/orgs", "repos_url": "https://api.github.com/users/dafaust/repos", "events_url": "https://api.github.com/users/dafaust/events{/privacy}", "received_events_url": "https://api.github.com/users/dafaust/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dafaust", "id": 4460334, "node_id": "MDQ6VXNlcjQ0NjAzMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4460334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dafaust", "html_url": "https://github.com/dafaust", "followers_url": "https://api.github.com/users/dafaust/followers", "following_url": "https://api.github.com/users/dafaust/following{/other_user}", "gists_url": "https://api.github.com/users/dafaust/gists{/gist_id}", "starred_url": "https://api.github.com/users/dafaust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dafaust/subscriptions", "organizations_url": "https://api.github.com/users/dafaust/orgs", "repos_url": "https://api.github.com/users/dafaust/repos", "events_url": "https://api.github.com/users/dafaust/events{/privacy}", "received_events_url": "https://api.github.com/users/dafaust/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43ec2652134239f83cd4c06bc4d8158acc0721cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43ec2652134239f83cd4c06bc4d8158acc0721cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43ec2652134239f83cd4c06bc4d8158acc0721cf"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "cceaaa969ccfa53fb32541f3e1c984b6e2ebb886", "filename": "gcc/config/bpf/coreout.cc", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7db42268ce4bc77bc13f13ba0899221747255bb5/gcc%2Fconfig%2Fbpf%2Fcoreout.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7db42268ce4bc77bc13f13ba0899221747255bb5/gcc%2Fconfig%2Fbpf%2Fcoreout.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbpf%2Fcoreout.cc?ref=7db42268ce4bc77bc13f13ba0899221747255bb5", "patch": "@@ -168,11 +168,8 @@ bpf_core_reloc_add (const tree type, const char * section_name,\n   bpf_core_reloc_ref bpfcr = ggc_cleared_alloc<bpf_core_reloc_t> ();\n   ctf_container_ref ctfc = ctf_get_tu_ctfc ();\n \n-  /* Buffer the access string in the auxiliary strtab. Since the two string\n-     tables are concatenated, add the length of the first to the offset.  */\n-  size_t strtab_len = ctfc_get_strtab_len (ctfc, CTF_STRTAB);\n+  /* Buffer the access string in the auxiliary strtab.  */\n   ctf_add_string (ctfc, buf, &(bpfcr->bpfcr_astr_off), CTF_AUX_STRTAB);\n-  bpfcr->bpfcr_astr_off += strtab_len;\n \n   bpfcr->bpfcr_type = get_btf_id (ctf_lookup_tree_type (ctfc, type));\n   bpfcr->bpfcr_insn_label = label;\n@@ -191,7 +188,6 @@ bpf_core_reloc_add (const tree type, const char * section_name,\n   sec = ggc_cleared_alloc<bpf_core_section_t> ();\n \n   ctf_add_string (ctfc, section_name, &sec->name_offset, CTF_AUX_STRTAB);\n-  sec->name_offset += strtab_len;\n   if (strcmp (section_name, \"\"))\n     ctfc->ctfc_aux_strlen += strlen (section_name) + 1;\n \n@@ -287,6 +283,9 @@ output_btfext_header (void)\n static void\n output_asm_btfext_core_reloc (bpf_core_reloc_ref bpfcr)\n {\n+  bpfcr->bpfcr_astr_off += ctfc_get_strtab_len (ctf_get_tu_ctfc (),\n+\t\t\t\t\t\tCTF_STRTAB);\n+\n   dw2_assemble_integer (4, gen_rtx_LABEL_REF (Pmode, bpfcr->bpfcr_insn_label));\n   fprintf (asm_out_file, \"\\t%s bpfcr_insn\\n\", ASM_COMMENT_START);\n \n@@ -323,6 +322,11 @@ output_btfext_core_sections (void)\n       /* Section name offset, refers to the offset of a string with the name of\n \t the section to which these CORE relocations refer, e.g. '.text'.\n \t The string is buffered in the BTF strings table.  */\n+\n+      /* BTF specific strings are in CTF_AUX_STRTAB, which is concatenated\n+\t after CTF_STRTAB. Add the length of STRTAB to the final offset.  */\n+      sec->name_offset += ctfc_get_strtab_len (ctf_get_tu_ctfc (), CTF_STRTAB);\n+\n       dw2_asm_output_data (4, sec->name_offset,  \"btfext_secinfo_sec_name_off\");\n       dw2_asm_output_data (4, vec_safe_length (sec->relocs),\n \t\t\t   \"btfext_secinfo_num_recs\");"}]}