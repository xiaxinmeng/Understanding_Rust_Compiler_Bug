{"sha": "49b5925f0251cc30e510b374700c50dc99ce3891", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDliNTkyNWYwMjUxY2MzMGU1MTBiMzc0NzAwYzUwZGM5OWNlMzg5MQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-07-29T14:03:26Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-07-29T14:03:26Z"}, "message": "PR c++/72457 - ICE with list-value-initialized base.\n\n\t* init.c (expand_aggr_init_1): Only handle value-init of bases.\n\t* constexpr.c (build_data_member_initialization): Handle multiple\n\tinitializers for the same field.\n\nFrom-SVN: r238867", "tree": {"sha": "caf02d93d793e5bfc7d13777fd2c3e6f62d7ab91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/caf02d93d793e5bfc7d13777fd2c3e6f62d7ab91"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49b5925f0251cc30e510b374700c50dc99ce3891", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49b5925f0251cc30e510b374700c50dc99ce3891", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49b5925f0251cc30e510b374700c50dc99ce3891", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49b5925f0251cc30e510b374700c50dc99ce3891/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c63b1732d520e5f047eeada4d4376932ce333d8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c63b1732d520e5f047eeada4d4376932ce333d8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c63b1732d520e5f047eeada4d4376932ce333d8d"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "62c6e53b99a25c179e50c58d1b0a0680a0049c77", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49b5925f0251cc30e510b374700c50dc99ce3891/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49b5925f0251cc30e510b374700c50dc99ce3891/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=49b5925f0251cc30e510b374700c50dc99ce3891", "patch": "@@ -1,3 +1,10 @@\n+2016-07-29  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/72457\n+\t* init.c (expand_aggr_init_1): Only handle value-init of bases.\n+\t* constexpr.c (build_data_member_initialization): Handle multiple\n+\tinitializers for the same field.\n+\n 2016-07-28  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/71665"}, {"sha": "58716892f716770eb6fb074ed73562f9672b07e0", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49b5925f0251cc30e510b374700c50dc99ce3891/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49b5925f0251cc30e510b374700c50dc99ce3891/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=49b5925f0251cc30e510b374700c50dc99ce3891", "patch": "@@ -391,7 +391,12 @@ build_data_member_initialization (tree t, vec<constructor_elt, va_gc> **vec)\n \tgcc_assert (TREE_TYPE (member) == vtbl_ptr_type_node);\n     }\n \n-  CONSTRUCTOR_APPEND_ELT (*vec, member, init);\n+  /* Value-initialization can produce multiple initializers for the\n+     same field; use the last one.  */\n+  if (!vec_safe_is_empty (*vec) && (*vec)->last().index == member)\n+    (*vec)->last().value = init;\n+  else\n+    CONSTRUCTOR_APPEND_ELT (*vec, member, init);\n   return true;\n }\n "}, {"sha": "1a5766a42b7734fe3ea493cdc0500c63eac466e7", "filename": "gcc/cp/init.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49b5925f0251cc30e510b374700c50dc99ce3891/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49b5925f0251cc30e510b374700c50dc99ce3891/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=49b5925f0251cc30e510b374700c50dc99ce3891", "patch": "@@ -1818,9 +1818,9 @@ expand_aggr_init_1 (tree binfo, tree true_exp, tree exp, tree init, int flags,\n     }\n \n   /* List-initialization from {} becomes value-initialization for non-aggregate\n-     classes with default constructors.  Handle this here so protected access\n-     works.  */\n-  if (init && TREE_CODE (init) == TREE_LIST)\n+     classes with default constructors.  Handle this here when we're\n+     initializing a base, so protected access works.  */\n+  if (exp != true_exp && init && TREE_CODE (init) == TREE_LIST)\n     {\n       tree elt = TREE_VALUE (init);\n       if (DIRECT_LIST_INIT_P (elt)"}, {"sha": "f831a112cc9a5927ef02d2130fcec3e706c6894e", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-list1.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49b5925f0251cc30e510b374700c50dc99ce3891/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-list1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49b5925f0251cc30e510b374700c50dc99ce3891/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-list1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-list1.C?ref=49b5925f0251cc30e510b374700c50dc99ce3891", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/72457\n+// { dg-do compile { target c++11 } }\n+\n+struct A {\n+  int i;\n+  constexpr A(): i(0) {}\n+};\n+\n+struct B: A { };\n+\n+struct C\n+{\n+  B b;\n+  constexpr C() : b{} {}\n+};"}]}