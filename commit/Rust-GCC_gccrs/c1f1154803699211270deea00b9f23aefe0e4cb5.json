{"sha": "c1f1154803699211270deea00b9f23aefe0e4cb5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFmMTE1NDgwMzY5OTIxMTI3MGRlZWEwMGI5ZjIzYWVmZTBlNGNiNQ==", "commit": {"author": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2002-02-20T04:56:34Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2002-02-20T04:56:34Z"}, "message": "[multiple changes]\n\n2002-02-19  David Edelsohn  <edelsohn@gnu.org>\n\n        * config/rs6000/rs6000.h (CONDITIONAL_REGISTER_USAGE): Set\n        really_call_used[VRSAVE_REGNO] if not Altivec.\n\n2002-02-19  Alan Modra  <amodra@bigpond.net.au>\n\n        * config/rs6000/rs6000.c (u_short_cint_operand): Mask op with\n        MODE_MASK.\n        (constant_pool_expr_1): Fix formatting.\n        (rs6000_legitimize_reload_address): Likewise.\n\nFrom-SVN: r49890", "tree": {"sha": "f88a25ed7d6c3b071bec470009f6fee9a96b1487", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f88a25ed7d6c3b071bec470009f6fee9a96b1487"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1f1154803699211270deea00b9f23aefe0e4cb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1f1154803699211270deea00b9f23aefe0e4cb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1f1154803699211270deea00b9f23aefe0e4cb5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1f1154803699211270deea00b9f23aefe0e4cb5/comments", "author": null, "committer": null, "parents": [{"sha": "d1cfac5b6e7292c116668575741c0a95addd6091", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1cfac5b6e7292c116668575741c0a95addd6091", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1cfac5b6e7292c116668575741c0a95addd6091"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "55f0d4f58fff0ddc88b4ad66e58dc8d77c2cfcf4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1f1154803699211270deea00b9f23aefe0e4cb5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1f1154803699211270deea00b9f23aefe0e4cb5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c1f1154803699211270deea00b9f23aefe0e4cb5", "patch": "@@ -1,3 +1,15 @@\n+2002-02-19  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/rs6000.h (CONDITIONAL_REGISTER_USAGE): Set\n+\treally_call_used[VRSAVE_REGNO] if not Altivec.\n+\n+2002-02-19  Alan Modra  <amodra@bigpond.net.au>\n+\t\n+\t* config/rs6000/rs6000.c (u_short_cint_operand): Mask op with\n+\tMODE_MASK.\n+\t(constant_pool_expr_1): Fix formatting.\n+\t(rs6000_legitimize_reload_address): Likewise.\n+\n Tue Feb 19 20:13:57 2002  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* config/sparc/sparc.md (nonlocal_goto): Use hard_frame_pointer_rtx"}, {"sha": "1b1802018021cdd0098c1297df13a365d7c0ce68", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1f1154803699211270deea00b9f23aefe0e4cb5/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1f1154803699211270deea00b9f23aefe0e4cb5/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=c1f1154803699211270deea00b9f23aefe0e4cb5", "patch": "@@ -769,7 +769,7 @@ u_short_cint_operand (op, mode)\n      enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   return (GET_CODE (op) == CONST_INT\n-\t  && CONST_OK_FOR_LETTER_P (INTVAL (op), 'K'));\n+\t  && CONST_OK_FOR_LETTER_P (INTVAL (op) & GET_MODE_MASK (mode), 'K'));\n }\n \n /* Return 1 if OP is a CONST_INT that cannot fit in a signed D field.  */\n@@ -1711,8 +1711,8 @@ constant_pool_expr_1 (op, have_sym, have_toc)\n \treturn 0;\n     case PLUS:\n     case MINUS:\n-      return constant_pool_expr_1 (XEXP (op, 0), have_sym, have_toc) &&\n-\tconstant_pool_expr_1 (XEXP (op, 1), have_sym, have_toc);\n+      return (constant_pool_expr_1 (XEXP (op, 0), have_sym, have_toc)\n+\t      && constant_pool_expr_1 (XEXP (op, 1), have_sym, have_toc));\n     case CONST:\n       return constant_pool_expr_1 (XEXP (op, 0), have_sym, have_toc);\n     case CONST_INT:\n@@ -1960,8 +1960,8 @@ rs6000_legitimize_reload_address (x, mode, opnum, type, ind_levels, win)\n     }\n #endif\n   if (TARGET_TOC\n-\t   && CONSTANT_POOL_EXPR_P (x)\n-\t   && ASM_OUTPUT_SPECIAL_POOL_ENTRY_P (get_pool_constant (x), mode))\n+      && CONSTANT_POOL_EXPR_P (x)\n+      && ASM_OUTPUT_SPECIAL_POOL_ENTRY_P (get_pool_constant (x), mode))\n     {\n       (x) = create_TOC_reference (x);\n       *win = 1;"}, {"sha": "b00e549961e91c1259bdc6f3f341409e706feda0", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1f1154803699211270deea00b9f23aefe0e4cb5/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1f1154803699211270deea00b9f23aefe0e4cb5/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=c1f1154803699211270deea00b9f23aefe0e4cb5", "patch": "@@ -970,8 +970,11 @@ extern int rs6000_altivec_abi;\n       = call_used_regs[PIC_OFFSET_TABLE_REGNUM]\t\t\t\t\\\n       = call_really_used_regs[PIC_OFFSET_TABLE_REGNUM] = 1;\t\t\\\n   if (! TARGET_ALTIVEC)\t\t\t\t\t\t\t\\\n-    for (i = FIRST_ALTIVEC_REGNO; i <= LAST_ALTIVEC_REGNO; ++i)\t\t\\\n-      fixed_regs[i] = call_used_regs[i] = call_really_used_regs[i] = 1;\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      for (i = FIRST_ALTIVEC_REGNO; i <= LAST_ALTIVEC_REGNO; ++i)\t\\\n+\tfixed_regs[i] = call_used_regs[i] = call_really_used_regs[i] = 1; \\\n+      call_really_used_regs[VRSAVE_REGNO] = 1;\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n   if (TARGET_ALTIVEC_ABI)\t\t\t\t\t\t\\\n     for (i = FIRST_ALTIVEC_REGNO; i < FIRST_ALTIVEC_REGNO + 20; ++i)\t\\\n       call_used_regs[i] = call_really_used_regs[i] = 1;\t\t\t\\"}]}