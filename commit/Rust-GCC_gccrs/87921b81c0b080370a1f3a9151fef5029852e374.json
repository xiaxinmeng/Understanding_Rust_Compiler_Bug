{"sha": "87921b81c0b080370a1f3a9151fef5029852e374", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc5MjFiODFjMGIwODAzNzBhMWYzYTkxNTFmZWY1MDI5ODUyZTM3NA==", "commit": {"author": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2010-11-22T01:53:32Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2010-11-22T01:53:32Z"}, "message": "Revert last change.\n\nFrom-SVN: r167019", "tree": {"sha": "539da7130b1ece6c997e399032cc28a9d7725c28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/539da7130b1ece6c997e399032cc28a9d7725c28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87921b81c0b080370a1f3a9151fef5029852e374", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87921b81c0b080370a1f3a9151fef5029852e374", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87921b81c0b080370a1f3a9151fef5029852e374", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87921b81c0b080370a1f3a9151fef5029852e374/comments", "author": null, "committer": null, "parents": [{"sha": "53d54bb8f327d74c13490937ba068a7223730083", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53d54bb8f327d74c13490937ba068a7223730083", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53d54bb8f327d74c13490937ba068a7223730083"}], "stats": {"total": 49, "additions": 4, "deletions": 45}, "files": [{"sha": "c2ad2a33cf55036c3e31a4f25d444c5237594d7b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87921b81c0b080370a1f3a9151fef5029852e374/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87921b81c0b080370a1f3a9151fef5029852e374/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=87921b81c0b080370a1f3a9151fef5029852e374", "patch": "@@ -5,12 +5,6 @@\n \t* tree-emutls.c (get_emutls_init_templ_addr, new_emutls_decl): Do not\n \tfinalize external decls.\n \n-2010-11-21  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n-\n-\tPR target/9468\n-\t* configure.ac: Ignore --with-dwarf2 option on 32-bit hppa*-*-hpux*.\n-\t* configure: Rebuild.\n-\n 2010-11-21  Joseph Myers  <joseph@codesourcery.com>\n \n \t* system.h (strerror): Poison."}, {"sha": "ec4ba8e7fdde9af4fa606cd38ef83b214dd6dffa", "filename": "gcc/configure", "status": "modified", "additions": 3, "deletions": 21, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87921b81c0b080370a1f3a9151fef5029852e374/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87921b81c0b080370a1f3a9151fef5029852e374/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=87921b81c0b080370a1f3a9151fef5029852e374", "patch": "@@ -6990,25 +6990,7 @@ fi\n \n # Check whether --with-dwarf2 was given.\n if test \"${with_dwarf2+set}\" = set; then :\n-  withval=$with_dwarf2;\n-  case $target in\n-    hppa*-*-hpux*)\n-      case $target in\n-\thppa*64*-*-*)\n-          dwarf2=\"$with_dwarf2\"\n-\t  ;;\n-\t*)\n-\t  { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: dwarf2 debug format is not supported for this target, ignored\" >&5\n-$as_echo \"$as_me: WARNING: dwarf2 debug format is not supported for this target, ignored\" >&2;}\n-\t  dwarf2=no\n-\t  ;;\n-      esac\n-      ;;\n-    *)\n-      dwarf2=\"$with_dwarf2\"\n-      ;;\n-  esac\n-\n+  withval=$with_dwarf2; dwarf2=\"$with_dwarf2\"\n else\n   dwarf2=no\n fi\n@@ -17304,7 +17286,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17307 \"configure\"\n+#line 17289 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -17410,7 +17392,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17413 \"configure\"\n+#line 17395 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "0eb2d8bddee79bde16fe3a3563aafd237ee5c68b", "filename": "gcc/configure.ac", "status": "modified", "additions": 1, "deletions": 18, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87921b81c0b080370a1f3a9151fef5029852e374/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87921b81c0b080370a1f3a9151fef5029852e374/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=87921b81c0b080370a1f3a9151fef5029852e374", "patch": "@@ -683,24 +683,7 @@ objc_boehm_gc='')\n \n AC_ARG_WITH(dwarf2,\n [  --with-dwarf2           force the default debug format to be DWARF 2],\n-[\n-  case $target in\n-    hppa*-*-hpux*)\n-      case $target in\n-\thppa*64*-*-*)\n-          dwarf2=\"$with_dwarf2\"\n-\t  ;;\n-\t*)\n-\t  AC_MSG_WARN([dwarf2 debug format is not supported for this target, ignored])\n-\t  dwarf2=no\n-\t  ;;\n-      esac\n-      ;;\n-    *)\n-      dwarf2=\"$with_dwarf2\"\n-      ;;\n-  esac\n-],\n+dwarf2=\"$with_dwarf2\",\n dwarf2=no)\n \n AC_ARG_ENABLE(shared,"}]}