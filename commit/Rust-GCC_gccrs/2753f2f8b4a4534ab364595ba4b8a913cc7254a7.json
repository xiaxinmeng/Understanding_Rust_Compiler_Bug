{"sha": "2753f2f8b4a4534ab364595ba4b8a913cc7254a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjc1M2YyZjhiNGE0NTM0YWIzNjQ1OTViYTRiOGE5MTNjYzcyNTRhNw==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.ibm.com", "date": "2020-06-09T20:32:52Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@linux.ibm.com", "date": "2020-06-09T20:32:52Z"}, "message": "PowerPC: Add future hwcap2 bits\n\nThis patch adds support for the two new HWCAP2 fields used by the\n__builtin_cpu_supports function.  It adds support in the target_clones\nattribute for -mcpu=future.\n\nThe two new __builtin_cpu_supports tests are:\n\t__builtin_cpu_supports (\"isa_3_1\")\n\t__builtin_cpu_supports (\"mma\")\n\nThe bits used are the bits that the Linux kernel engineers will be using for\nthese new features.\n\ntestsuite/\n2020-06-05  Michael Meissner  <meissner@linux.ibm.com>\n\n\t* gcc.target/powerpc/clone3.c: New test for using 'future' with\n\tthe target_clones attribute.", "tree": {"sha": "714527389d0d6d26c2d3f47527bea1f2034427fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/714527389d0d6d26c2d3f47527bea1f2034427fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2753f2f8b4a4534ab364595ba4b8a913cc7254a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2753f2f8b4a4534ab364595ba4b8a913cc7254a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2753f2f8b4a4534ab364595ba4b8a913cc7254a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2753f2f8b4a4534ab364595ba4b8a913cc7254a7/comments", "author": null, "committer": null, "parents": [{"sha": "7ba33e898fa4a097c0f2b4d9cae35041a5933f9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ba33e898fa4a097c0f2b4d9cae35041a5933f9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ba33e898fa4a097c0f2b4d9cae35041a5933f9c"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "93ee41dddaedb17a555a7260307f1619788df356", "filename": "gcc/testsuite/gcc.target/powerpc/clone3.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2753f2f8b4a4534ab364595ba4b8a913cc7254a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fclone3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2753f2f8b4a4534ab364595ba4b8a913cc7254a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fclone3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fclone3.c?ref=2753f2f8b4a4534ab364595ba4b8a913cc7254a7", "patch": "@@ -0,0 +1,33 @@\n+/* { dg-do compile { target { powerpc*-*-linux* && lp64 } } } */\n+/* { dg-options \"-mdejagnu-cpu=power8 -O2\" } */\n+/* { dg-require-effective-target powerpc_pcrel } */\n+/* { dg-require-effective-target ppc_cpu_supports_hw } */\n+\n+/* Power9 (aka, ISA 3.0) has a MODSD instruction to do modulus, while Power8\n+   (aka, ISA 2.07) has to do modulus with divide and multiply.  Make sure\n+   both clone functions are generated.\n+\n+   FUTURE has pc-relative instructions to access static values, while earlier\n+   systems used TOC addressing.\n+\n+   Restrict ourselves to Linux, since IFUNC might not be supported in other\n+   operating systems.  */\n+\n+static long s;\n+long *p = &s;\n+\n+__attribute__((target_clones(\"cpu=future,cpu=power9,default\")))\n+long mod_func (long a, long b)\n+{\n+  return (a % b) + s;\n+}\n+\n+long mod_func_or (long a, long b, long c)\n+{\n+  return mod_func (a, b) | c;\n+}\n+\n+/* { dg-final { scan-assembler-times {\\mdivd\\M}  1 } } */\n+/* { dg-final { scan-assembler-times {\\mmulld\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mmodsd\\M} 2 } } */\n+/* { dg-final { scan-assembler-times {\\mpld\\M}   1 } } */"}]}