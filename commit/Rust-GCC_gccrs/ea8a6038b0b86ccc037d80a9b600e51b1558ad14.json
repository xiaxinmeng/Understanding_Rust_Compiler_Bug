{"sha": "ea8a6038b0b86ccc037d80a9b600e51b1558ad14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE4YTYwMzhiMGI4NmNjYzAzN2Q4MGE5YjYwMGU1MWIxNTU4YWQxNA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-06-06T07:55:51Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-06-06T07:55:51Z"}, "message": "Simplify mult where both arguments are 0 or 1 (PR tree-optimization/87954).\n\n2019-06-06  Martin Liska  <mliska@suse.cz>\n\n\tPR tree-optimization/87954\n\t* match.pd: Simplify mult where both arguments are 0 or 1.\n2019-06-06  Martin Liska  <mliska@suse.cz>\n\n\tPR tree-optimization/87954\n\t* gcc.dg/pr87954.c: New test.\n\nFrom-SVN: r271991", "tree": {"sha": "0df38b73b39e84424d2945135bc584dc7b237e41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0df38b73b39e84424d2945135bc584dc7b237e41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea8a6038b0b86ccc037d80a9b600e51b1558ad14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea8a6038b0b86ccc037d80a9b600e51b1558ad14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea8a6038b0b86ccc037d80a9b600e51b1558ad14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea8a6038b0b86ccc037d80a9b600e51b1558ad14/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8ce6fb5fec60f0ce6363d2a41f30e5fc620a4beb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ce6fb5fec60f0ce6363d2a41f30e5fc620a4beb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ce6fb5fec60f0ce6363d2a41f30e5fc620a4beb"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "e6dd35a8eaae2b86c3e23528a939dd642b29e468", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea8a6038b0b86ccc037d80a9b600e51b1558ad14/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea8a6038b0b86ccc037d80a9b600e51b1558ad14/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ea8a6038b0b86ccc037d80a9b600e51b1558ad14", "patch": "@@ -1,3 +1,8 @@\n+2019-06-06  Martin Liska  <mliska@suse.cz>\n+\n+\tPR tree-optimization/87954\n+\t* match.pd: Simplify mult where both arguments are 0 or 1.\n+\n 2019-06-06  Richard Biener  <rguenther@suse.de>\n \n \t* vr-values.c (vr_values::extract_range_from_ssa_name): Do not"}, {"sha": "88dae4231d8f0e2f50d6676df2f8d06b14d64d6b", "filename": "gcc/match.pd", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea8a6038b0b86ccc037d80a9b600e51b1558ad14/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea8a6038b0b86ccc037d80a9b600e51b1558ad14/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=ea8a6038b0b86ccc037d80a9b600e51b1558ad14", "patch": "@@ -217,6 +217,14 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n            || !COMPLEX_FLOAT_TYPE_P (type)))\n    (negate @0)))\n \n+/* Transform { 0 or 1 } * { 0 or 1 } into { 0 or 1 } & { 0 or 1 } */\n+(simplify\n+ (mult SSA_NAME@1 SSA_NAME@2)\n+  (if (INTEGRAL_TYPE_P (type)\n+       && get_nonzero_bits (@1) == 1\n+       && get_nonzero_bits (@2) == 1)\n+   (bit_and @1 @2)))\n+\n /* Transform x * { 0 or 1, 0 or 1, ... } into x & { 0 or -1, 0 or -1, ...},\n    unless the target has native support for the former but not the latter.  */\n (simplify"}, {"sha": "4bc2c2906672c40bd583161375fd8f19369b9663", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea8a6038b0b86ccc037d80a9b600e51b1558ad14/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea8a6038b0b86ccc037d80a9b600e51b1558ad14/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ea8a6038b0b86ccc037d80a9b600e51b1558ad14", "patch": "@@ -1,3 +1,8 @@\n+2019-06-06  Martin Liska  <mliska@suse.cz>\n+\n+\tPR tree-optimization/87954\n+\t* gcc.dg/pr87954.c: New test.\n+\n 2019-06-06  Richard Biener  <rguenther@suse.de>\n \n \t* gcc.dg/tree-ssa/alias-37.c: New testcase."}, {"sha": "620657cb1f5d3dc507eb1972074dd5b04b9924e2", "filename": "gcc/testsuite/gcc.dg/pr87954.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea8a6038b0b86ccc037d80a9b600e51b1558ad14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr87954.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea8a6038b0b86ccc037d80a9b600e51b1558ad14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr87954.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr87954.c?ref=ea8a6038b0b86ccc037d80a9b600e51b1558ad14", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+#define __GFP_DMA 1u\n+#define __GFP_RECLAIM 0x10u\n+\n+#define KMALLOC_DMA 2\n+#define KMALLOC_RECLAIM 1\n+\n+unsigned int\n+imul(unsigned int flags)\n+{\n+  int is_dma, type_dma, is_rec;\n+\n+  is_dma = !!(flags & __GFP_DMA);\n+  type_dma = is_dma * KMALLOC_DMA;\n+  is_rec = !!(flags & __GFP_RECLAIM);\n+\n+  return type_dma + (is_rec * !is_dma) * KMALLOC_RECLAIM;\n+}\n+\n+/* { dg-final { scan-tree-dump-times { \\* } 1 \"optimized\" } } */"}]}