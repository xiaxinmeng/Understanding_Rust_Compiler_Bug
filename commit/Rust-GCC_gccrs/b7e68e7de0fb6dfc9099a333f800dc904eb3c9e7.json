{"sha": "b7e68e7de0fb6dfc9099a333f800dc904eb3c9e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdlNjhlN2RlMGZiNmRmYzkwOTlhMzMzZjgwMGRjOTA0ZWIzYzllNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-12-01T14:44:33Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-12-17T10:49:23Z"}, "message": "[Ada] Crash on if expression inside declare expression\n\ngcc/ada/\n\n\t* sem_res.adb (Resolve_Declare_Expression): Need to establish a\n\ttransient scope in case Expression (N) requires actions to be\n\twrapped.  Code cleanup.\n\t* exp_ch7.adb, exp_ch11.adb: Code cleanup.", "tree": {"sha": "c978bcc3cf29dd1f04841abe9bd98453df42fc5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c978bcc3cf29dd1f04841abe9bd98453df42fc5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7e68e7de0fb6dfc9099a333f800dc904eb3c9e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7e68e7de0fb6dfc9099a333f800dc904eb3c9e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7e68e7de0fb6dfc9099a333f800dc904eb3c9e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7e68e7de0fb6dfc9099a333f800dc904eb3c9e7/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81392ae7baf3e6d8a5d9910f0d4f6b571a52afe3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81392ae7baf3e6d8a5d9910f0d4f6b571a52afe3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81392ae7baf3e6d8a5d9910f0d4f6b571a52afe3"}], "stats": {"total": 43, "additions": 32, "deletions": 11}, "files": [{"sha": "a501bf1aa263ef49b2df9fd33af26039e9ba7382", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e68e7de0fb6dfc9099a333f800dc904eb3c9e7/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e68e7de0fb6dfc9099a333f800dc904eb3c9e7/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=b7e68e7de0fb6dfc9099a333f800dc904eb3c9e7", "patch": "@@ -1864,8 +1864,8 @@ package body Exp_Ch11 is\n          then\n             return Empty;\n \n-            --  Test for handled sequence of statements with at least one\n-            --  exception handler which might be the one we are looking for.\n+         --  Test for handled sequence of statements with at least one\n+         --  exception handler which might be the one we are looking for.\n \n          elsif Nkind (P) = N_Handled_Sequence_Of_Statements\n            and then Present (Exception_Handlers (P))"}, {"sha": "42cfb39bf7a7e35757be8b6192a2fff056c4f3c6", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e68e7de0fb6dfc9099a333f800dc904eb3c9e7/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e68e7de0fb6dfc9099a333f800dc904eb3c9e7/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=b7e68e7de0fb6dfc9099a333f800dc904eb3c9e7", "patch": "@@ -6532,7 +6532,7 @@ package body Exp_Ch7 is\n \n    begin\n       --  Nothing to do if the scope does not manage the secondary stack or\n-      --  does not contain meaninful actions for insertion.\n+      --  does not contain meaningful actions for insertion.\n \n       if not Manage_SS\n         and then No (Act_Before)"}, {"sha": "f6e0eab84b7e5cc230b6152a7a3425ebe7a51a03", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 29, "deletions": 8, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e68e7de0fb6dfc9099a333f800dc904eb3c9e7/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e68e7de0fb6dfc9099a333f800dc904eb3c9e7/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=b7e68e7de0fb6dfc9099a333f800dc904eb3c9e7", "patch": "@@ -2298,11 +2298,8 @@ package body Sem_Res is\n       --  Declare_Expression and requires scope management.\n \n       if Nkind (N) = N_Expression_With_Actions then\n-         if Comes_From_Source (N)\n-            and then N = Original_Node (N)\n-         then\n+         if Comes_From_Source (N) and then N = Original_Node (N) then\n             Resolve_Declare_Expression (N, Typ);\n-\n          else\n             Resolve (Expression (N), Typ);\n          end if;\n@@ -7470,7 +7467,8 @@ package body Sem_Res is\n      (N   : Node_Id;\n       Typ : Entity_Id)\n    is\n-      Decl : Node_Id;\n+      Decl                 : Node_Id;\n+      Need_Transient_Scope : Boolean := False;\n    begin\n       --  Install the scope created for local declarations, if\n       --  any. The syntax allows a Declare_Expression with no\n@@ -7479,19 +7477,42 @@ package body Sem_Res is\n       --  appears as the scope of all entities declared therein.\n \n       Decl := First (Actions (N));\n-\n       while Present (Decl) loop\n          exit when Nkind (Decl)\n                      in N_Object_Declaration | N_Object_Renaming_Declaration;\n          Next (Decl);\n       end loop;\n \n       if Present (Decl) then\n-         Push_Scope (Scope (Defining_Identifier (Decl)));\n+\n+         --  Need to establish a transient scope in case Expression (N)\n+         --  requires actions to be wrapped.\n \n          declare\n-            E : Entity_Id := First_Entity (Current_Scope);\n+            Node : Node_Id;\n+         begin\n+            Node := First (Actions (N));\n+            while Present (Node) loop\n+               if Nkind (Node) = N_Object_Declaration\n+                 and then Requires_Transient_Scope\n+                            (Etype (Defining_Identifier (Node)))\n+               then\n+                  Need_Transient_Scope := True;\n+                  exit;\n+               end if;\n \n+               Next (Node);\n+            end loop;\n+         end;\n+\n+         if Need_Transient_Scope then\n+            Establish_Transient_Scope (Decl, True);\n+         else\n+            Push_Scope (Scope (Defining_Identifier (Decl)));\n+         end if;\n+\n+         declare\n+            E : Entity_Id := First_Entity (Current_Scope);\n          begin\n             while Present (E) loop\n                Set_Current_Entity (E);"}]}