{"sha": "df1f6f31f401965cbc0baee3006a6e9c477bba9c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGYxZjZmMzFmNDAxOTY1Y2JjMGJhZWUzMDA2YTZlOWM0NzdiYmE5Yw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2005-07-13T22:35:29Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2005-07-13T22:35:29Z"}, "message": "tree-dfa.c (dump_variable): Use default_def function.\n\n\n\t* tree-dfa.c (dump_variable): Use default_def function.\n\t* tree-ssa-alias.c (dump_points_to_info): Likewise.\n\t* tree-ssa.c (verify_use): Likewise.\n\t* tree-ssanames.c (release_ssa_name): Likewise.\n\t* tree-tailcall.c (eliminate_tail_call): Likewise.\n\t(tree_optimize_tail_calls_1): Likewise.\n\t* tree-vrp.c (get_value_range): Likewise.\n\nFrom-SVN: r101994", "tree": {"sha": "06bf3d313f4eb8921ced47d5b65158252b99973d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06bf3d313f4eb8921ced47d5b65158252b99973d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df1f6f31f401965cbc0baee3006a6e9c477bba9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df1f6f31f401965cbc0baee3006a6e9c477bba9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df1f6f31f401965cbc0baee3006a6e9c477bba9c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df1f6f31f401965cbc0baee3006a6e9c477bba9c/comments", "author": null, "committer": null, "parents": [{"sha": "9ef0b1bd660d058f217b0fba7cc7f6164e9dc569", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ef0b1bd660d058f217b0fba7cc7f6164e9dc569", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ef0b1bd660d058f217b0fba7cc7f6164e9dc569"}], "stats": {"total": 38, "additions": 24, "deletions": 14}, "files": [{"sha": "271be8df7e23891b25a5972ce7a2c2339f39194f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1f6f31f401965cbc0baee3006a6e9c477bba9c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1f6f31f401965cbc0baee3006a6e9c477bba9c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=df1f6f31f401965cbc0baee3006a6e9c477bba9c", "patch": "@@ -1,3 +1,13 @@\n+2005-07-14  Jan Hubicka  <jh@suse.cz>\n+\n+\t* tree-dfa.c (dump_variable): Use default_def function.\n+\t* tree-ssa-alias.c (dump_points_to_info): Likewise.\n+\t* tree-ssa.c (verify_use): Likewise.\n+\t* tree-ssanames.c (release_ssa_name): Likewise.\n+\t* tree-tailcall.c (eliminate_tail_call): Likewise.\n+\t(tree_optimize_tail_calls_1): Likewise.\n+\t* tree-vrp.c (get_value_range): Likewise.\n+\n 2005-07-14  Ben Elliston  <bje@au.ibm.com>\n \n \t* gcc.c (main): Compare language[0] with '*' when iterating over"}, {"sha": "c745ed02015e3da906b4372142d6b33b223f91d3", "filename": "gcc/tree-dfa.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1f6f31f401965cbc0baee3006a6e9c477bba9c/gcc%2Ftree-dfa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1f6f31f401965cbc0baee3006a6e9c477bba9c/gcc%2Ftree-dfa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dfa.c?ref=df1f6f31f401965cbc0baee3006a6e9c477bba9c", "patch": "@@ -335,10 +335,10 @@ dump_variable (FILE *file, tree var)\n   if (is_call_clobbered (var))\n     fprintf (file, \", call clobbered\");\n \n-  if (ann->default_def)\n+  if (default_def (var))\n     {\n       fprintf (file, \", default def: \");\n-      print_generic_expr (file, ann->default_def, dump_flags);\n+      print_generic_expr (file, default_def (var), dump_flags);\n     }\n \n   if (ann->may_aliases)"}, {"sha": "75dbbb43880dd5b4a0c90e123c7ebab3e62afc01", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1f6f31f401965cbc0baee3006a6e9c477bba9c/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1f6f31f401965cbc0baee3006a6e9c477bba9c/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=df1f6f31f401965cbc0baee3006a6e9c477bba9c", "patch": "@@ -2035,9 +2035,9 @@ dump_points_to_info (FILE *file)\n     {\n       if (POINTER_TYPE_P (TREE_TYPE (var)))\n \t{\n-\t  var_ann_t ann = var_ann (var);\n-\t  if (ann->default_def)\n-\t    dump_points_to_info_for (file, ann->default_def);\n+\t  tree def = default_def (var);\n+\t  if (def)\n+\t    dump_points_to_info_for (file, def);\n \t}\n     }\n "}, {"sha": "fc1754f65ff6ae876c70f57c4cb34deae5411fc1", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1f6f31f401965cbc0baee3006a6e9c477bba9c/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1f6f31f401965cbc0baee3006a6e9c477bba9c/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=df1f6f31f401965cbc0baee3006a6e9c477bba9c", "patch": "@@ -231,7 +231,7 @@ verify_use (basic_block bb, basic_block def_bb, use_operand_p use_p,\n   TREE_VISITED (ssa_name) = 1;\n \n   if (IS_EMPTY_STMT (SSA_NAME_DEF_STMT (ssa_name))\n-      && var_ann (SSA_NAME_VAR (ssa_name))->default_def == ssa_name)\n+      && default_def (SSA_NAME_VAR (ssa_name)) == ssa_name)\n     ; /* Default definitions have empty statements.  Nothing to do.  */\n   else if (!def_bb)\n     {"}, {"sha": "5077808947b2d9f7397b74d2a4e6d347519e1e67", "filename": "gcc/tree-ssanames.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1f6f31f401965cbc0baee3006a6e9c477bba9c/gcc%2Ftree-ssanames.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1f6f31f401965cbc0baee3006a6e9c477bba9c/gcc%2Ftree-ssanames.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssanames.c?ref=df1f6f31f401965cbc0baee3006a6e9c477bba9c", "patch": "@@ -183,7 +183,7 @@ release_ssa_name (tree var)\n \n   /* Never release the default definition for a symbol.  It's a\n      special SSA name that should always exist once it's created.  */\n-  if (var == var_ann (SSA_NAME_VAR (var))->default_def)\n+  if (var == default_def (SSA_NAME_VAR (var)))\n     return;\n \n   /* If VAR has been registered for SSA updating, don't remove it."}, {"sha": "3a40a61d1ed2970cb85133b07b76dfa79d935882", "filename": "gcc/tree-tailcall.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1f6f31f401965cbc0baee3006a6e9c477bba9c/gcc%2Ftree-tailcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1f6f31f401965cbc0baee3006a6e9c477bba9c/gcc%2Ftree-tailcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-tailcall.c?ref=df1f6f31f401965cbc0baee3006a6e9c477bba9c", "patch": "@@ -756,7 +756,7 @@ eliminate_tail_call (struct tailcall *t)\n \n       if (!phi)\n \t{\n-\t  tree name = var_ann (param)->default_def;\n+\t  tree name = default_def (param);\n \t  tree new_name;\n \n \t  if (!name)\n@@ -769,7 +769,7 @@ eliminate_tail_call (struct tailcall *t)\n \t    }\n \t  new_name = make_ssa_name (param, SSA_NAME_DEF_STMT (name));\n \n-\t  var_ann (param)->default_def = new_name;\n+\t  set_default_def (param, new_name);\n \t  phi = create_phi_node (name, first);\n \t  SSA_NAME_DEF_STMT (name) = phi;\n \t  add_phi_arg (phi, new_name, single_succ_edge (ENTRY_BLOCK_PTR));\n@@ -868,6 +868,7 @@ tree_optimize_tail_calls_1 (bool opt_tailcalls)\n \n       if (!phis_constructed)\n \t{\n+\t  tree name;\n \t  /* Ensure that there is only one predecessor of the block.  */\n \t  if (!single_pred_p (first))\n \t    first = split_edge (single_succ_edge (ENTRY_BLOCK_PTR));\n@@ -880,14 +881,13 @@ tree_optimize_tail_calls_1 (bool opt_tailcalls)\n \t\t&& var_ann (param)\n \t\t/* Also parameters that are only defined but never used need not\n \t\t   be copied.  */\n-\t\t&& (var_ann (param)->default_def\n-\t\t    && TREE_CODE (var_ann (param)->default_def) == SSA_NAME))\n+\t\t&& ((name = default_def (param))\n+\t\t    && TREE_CODE (name) == SSA_NAME))\n \t    {\n-\t      tree name = var_ann (param)->default_def;\n \t      tree new_name = make_ssa_name (param, SSA_NAME_DEF_STMT (name));\n \t      tree phi;\n \n-\t      var_ann (param)->default_def = new_name;\n+\t      set_default_def (param, new_name);\n \t      phi = create_phi_node (name, first);\n \t      SSA_NAME_DEF_STMT (name) = phi;\n \t      add_phi_arg (phi, new_name, single_pred_edge (first));"}, {"sha": "bcbc7384d2e05161d74c1f3ceaec5857c0da3434", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1f6f31f401965cbc0baee3006a6e9c477bba9c/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1f6f31f401965cbc0baee3006a6e9c477bba9c/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=df1f6f31f401965cbc0baee3006a6e9c477bba9c", "patch": "@@ -294,7 +294,7 @@ get_value_range (tree var)\n   /* If VAR is a default definition, the variable can take any value\n      in VAR's type.  */\n   sym = SSA_NAME_VAR (var);\n-  if (var == var_ann (sym)->default_def)\n+  if (var == default_def (sym))\n     {\n       /* Try to use the \"nonnull\" attribute to create ~[0, 0]\n \t anti-ranges for pointers.  Note that this is only valid with"}]}