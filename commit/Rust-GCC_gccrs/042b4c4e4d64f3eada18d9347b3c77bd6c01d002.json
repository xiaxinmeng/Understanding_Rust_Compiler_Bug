{"sha": "042b4c4e4d64f3eada18d9347b3c77bd6c01d002", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQyYjRjNGU0ZDY0ZjNlYWRhMThkOTM0N2IzYzc3YmQ2YzAxZDAwMg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2001-01-10T14:13:41Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2001-01-10T14:13:41Z"}, "message": "call.c (build_new_method_call): Use binfo_for_vbase.\n\ncp:\n\t* call.c (build_new_method_call): Use binfo_for_vbase.\ntestsuite:\n\t* g++.old_deja/g++.other/vbase4.C: New test.\n\nFrom-SVN: r38866", "tree": {"sha": "0ac0e4533452dd132c22a8e7523ad94fb622bb2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ac0e4533452dd132c22a8e7523ad94fb622bb2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/042b4c4e4d64f3eada18d9347b3c77bd6c01d002", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/042b4c4e4d64f3eada18d9347b3c77bd6c01d002", "html_url": "https://github.com/Rust-GCC/gccrs/commit/042b4c4e4d64f3eada18d9347b3c77bd6c01d002", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/042b4c4e4d64f3eada18d9347b3c77bd6c01d002/comments", "author": null, "committer": null, "parents": [{"sha": "780539075253658c6a5e334bb4abdf2bb3f88469", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/780539075253658c6a5e334bb4abdf2bb3f88469", "html_url": "https://github.com/Rust-GCC/gccrs/commit/780539075253658c6a5e334bb4abdf2bb3f88469"}], "stats": {"total": 44, "additions": 41, "deletions": 3}, "files": [{"sha": "e84c48a50a2df66bb59059d925d71ea6710996ce", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/042b4c4e4d64f3eada18d9347b3c77bd6c01d002/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/042b4c4e4d64f3eada18d9347b3c77bd6c01d002/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=042b4c4e4d64f3eada18d9347b3c77bd6c01d002", "patch": "@@ -1,3 +1,7 @@\n+2001-01-10  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* call.c (build_new_method_call): Use binfo_for_vbase.\n+\n 2001-01-10  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* cp-tree.h (flag_cond_mismatch): Don't declare."}, {"sha": "a855963c82971e9ee84849ab1a1f48d8a219655a", "filename": "gcc/cp/call.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/042b4c4e4d64f3eada18d9347b3c77bd6c01d002/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/042b4c4e4d64f3eada18d9347b3c77bd6c01d002/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=042b4c4e4d64f3eada18d9347b3c77bd6c01d002", "patch": "@@ -4382,7 +4382,7 @@ build_new_method_call (instance, name, args, basetype_path, flags)\n \t     old ABI.  */\n \t  name = constructor_p ? ctor_identifier : dtor_identifier;\n \t}\n-      /* If we're call a subobject constructor or destructor for a\n+      /* If we're a call to a constructor or destructor for a\n \t subobject that uses virtual base classes, then we need to\n \t pass down a pointer to a VTT for the subobject.  */\n       else if ((name == base_ctor_identifier\n@@ -4391,6 +4391,7 @@ build_new_method_call (instance, name, args, basetype_path, flags)\n \t{\n \t  tree vtt;\n \t  tree sub_vtt;\n+\t  tree basebinfo = basetype_path;\n \n \t  /* If the current function is a complete object constructor\n \t     or destructor, then we fetch the VTT directly.\n@@ -4401,9 +4402,11 @@ build_new_method_call (instance, name, args, basetype_path, flags)\n \t\t       DECL_USE_VTT_PARM (current_function_decl),\n \t\t       DECL_VTT_PARM (current_function_decl),\n \t\t       vtt);\n-\n+\t  if (TREE_VIA_VIRTUAL (basebinfo))\n+\t    basebinfo = binfo_for_vbase (basetype, current_class_type);\n+\t  my_friendly_assert (BINFO_SUBVTT_INDEX (basebinfo), 20010110);\n \t  sub_vtt = build (PLUS_EXPR, TREE_TYPE (vtt), vtt,\n-\t\t\t   BINFO_SUBVTT_INDEX (basetype_path));\n+\t\t\t   BINFO_SUBVTT_INDEX (basebinfo));\n \t  sub_vtt = build_indirect_ref (sub_vtt, NULL);\n \n \t  args = tree_cons (NULL_TREE, sub_vtt, args);"}, {"sha": "0dcc078c27e34ca417c69b949a8a51ef3ebb7b9c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/042b4c4e4d64f3eada18d9347b3c77bd6c01d002/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/042b4c4e4d64f3eada18d9347b3c77bd6c01d002/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=042b4c4e4d64f3eada18d9347b3c77bd6c01d002", "patch": "@@ -1,3 +1,7 @@\n+2001-01-10  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.old_deja/g++.other/vbase4.C: New test.\n+\n 2001-01-08  Jonathan Larmour  <jlarmour@redhat.com>\n \n \t* gcc.dg/20000419-2.c: Move to \"special\" subdirectory."}, {"sha": "59974c31a4d8922c4840dc7cf585392c181f3321", "filename": "gcc/testsuite/g++.old-deja/g++.other/vbase4.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/042b4c4e4d64f3eada18d9347b3c77bd6c01d002/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fvbase4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/042b4c4e4d64f3eada18d9347b3c77bd6c01d002/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fvbase4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fvbase4.C?ref=042b4c4e4d64f3eada18d9347b3c77bd6c01d002", "patch": "@@ -0,0 +1,27 @@\n+// Build don't link:\n+\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 10 Jan 2001 <nathan@codesourcery.com>\n+// Origin snyder@fnal.gov\n+\n+// Bug 933. Secondary vtables weren't correctly located for non-primary\n+// virtual bases. Causing us to ICE.\n+\n+class d0_Object\n+{\n+public:\n+virtual ~d0_Object ();\n+};\n+\n+\n+class M10 : virtual public d0_Object {};\n+class M4 : virtual public M10 {};\n+\n+class M9\n+: public M4, virtual public M10\n+{\n+public:\n+M9 ();\n+};\n+\n+M9::M9 () {}"}]}