{"sha": "344189f9ec005682d1e5d6a700b91184e58538b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQ0MTg5ZjllYzAwNTY4MmQxZTVkNmE3MDBiOTExODRlNTg1MzhiOA==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernd.schmidt@analog.com", "date": "2007-03-05T14:55:37Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2007-03-05T14:55:37Z"}, "message": "config.host (bfin*-linux-uclibc*): Set extra_parts.\n\nlibgcc/:\n\t* config.host (bfin*-linux-uclibc*): Set extra_parts.\ngcc/:\n\t* config.gcc (bfin*-uclinux*): Use t-bfin-uclinux.\n\t(bfin*-linux-uclibc*): New configuration.\n\t* config/linux.h (LINK_GCC_C_SEQUENCE_SPEC): Undefined before\n\tdefining.\n\t* config/bfin/linux.h: New file.\n\t* config/bfin/libgcc-bfin.ver: New file.\n\t* config/bfin/t-bfin-uclinux: New file.\n\t* config/bfin/t-bfin-linux: New file.\n\t* config/bfin/uclinux.h (LINUX_TARGET_OS_CPP_BUILTINS): New macro.\n\t(TARGET_OS_CPP_BUILTINS): New macro.\n\nFrom-SVN: r122552", "tree": {"sha": "347dcf69ad8915a6018d8b9b3a024cda2d6a23b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/347dcf69ad8915a6018d8b9b3a024cda2d6a23b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/344189f9ec005682d1e5d6a700b91184e58538b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/344189f9ec005682d1e5d6a700b91184e58538b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/344189f9ec005682d1e5d6a700b91184e58538b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/344189f9ec005682d1e5d6a700b91184e58538b8/comments", "author": null, "committer": null, "parents": [{"sha": "9dc167ec4ad8d62e05511c9401f8b72bafb42e77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dc167ec4ad8d62e05511c9401f8b72bafb42e77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9dc167ec4ad8d62e05511c9401f8b72bafb42e77"}], "stats": {"total": 463, "additions": 462, "deletions": 1}, "files": [{"sha": "3c2a92e7d9ddc93a2bfbe6c0ac47b3556fb323a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/344189f9ec005682d1e5d6a700b91184e58538b8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/344189f9ec005682d1e5d6a700b91184e58538b8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=344189f9ec005682d1e5d6a700b91184e58538b8", "patch": "@@ -1,3 +1,16 @@\n+2007-03-05  Bernd Schmidt  <bernd.schmidt@analog.com>\n+\n+\t* config.gcc (bfin*-uclinux*): Use t-bfin-uclinux.\n+\t(bfin*-linux-uclibc*): New configuration.\n+\t* config/linux.h (LINK_GCC_C_SEQUENCE_SPEC): Undefined before\n+\tdefining.\n+\t* config/bfin/linux.h: New file.\n+\t* config/bfin/libgcc-bfin.ver: New file.\n+\t* config/bfin/t-bfin-uclinux: New file.\n+\t* config/bfin/t-bfin-linux: New file.\n+\t* config/bfin/uclinux.h (LINUX_TARGET_OS_CPP_BUILTINS): New macro.\n+\t(TARGET_OS_CPP_BUILTINS): New macro.\n+\n 2007-03-05  Richard Guenther  <rguenther@suse.de>\n \n \t* fold-const.c (fold_binary): Remove duplicate folding"}, {"sha": "55679ba827b95944223a10b42c6c27af83013e9b", "filename": "gcc/config.gcc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/344189f9ec005682d1e5d6a700b91184e58538b8/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/344189f9ec005682d1e5d6a700b91184e58538b8/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=344189f9ec005682d1e5d6a700b91184e58538b8", "patch": "@@ -811,7 +811,12 @@ bfin*-elf*)\n         ;;\n bfin*-uclinux*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h bfin/elf.h bfin/uclinux.h\"\n-        tmake_file=bfin/t-bfin-elf\n+        tmake_file=bfin/t-bfin-uclinux\n+        use_collect2=no\n+        ;;\n+bfin*-linux-uclibc*)\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h bfin/elf.h linux.h bfin/linux.h\"\n+        tmake_file=\"t-slibgcc-elf-ver bfin/t-bfin-linux\"\n         use_collect2=no\n         ;;\n bfin*-rtems*)"}, {"sha": "1afb78e9c8232c9a4650147ad1f6ba4c2c0fcd72", "filename": "gcc/config/bfin/libgcc-bfin.ver", "status": "added", "additions": 285, "deletions": 0, "changes": 285, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/344189f9ec005682d1e5d6a700b91184e58538b8/gcc%2Fconfig%2Fbfin%2Flibgcc-bfin.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/344189f9ec005682d1e5d6a700b91184e58538b8/gcc%2Fconfig%2Fbfin%2Flibgcc-bfin.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Flibgcc-bfin.ver?ref=344189f9ec005682d1e5d6a700b91184e58538b8", "patch": "@@ -0,0 +1,285 @@\n+GCC_3.0 {\n+  # libgcc1 integer symbols\n+  ___absvsi2\n+  ___addvsi3\n+  ___ashlsi3\n+  ___ashrsi3\n+  ___divsi3\n+  ___lshrsi3\n+  ___modsi3\n+  ___mulsi3\n+  ___mulvsi3\n+  ___negvsi2\n+  ___subvsi3\n+  ___udivsi3\n+  ___umodsi3\n+\n+  # libgcc1 floating point symbols\n+  ___addsf3\n+  ___adddf3\n+  ___addxf3\n+  ___addtf3\n+  ___divsf3\n+  ___divdf3\n+  ___divxf3\n+  ___divtf3\n+  ___eqsf2\n+  ___eqdf2\n+  ___eqxf2\n+  ___eqtf2\n+  ___extenddfxf2\n+  ___extenddftf2\n+  ___extendsfdf2\n+  ___extendsfxf2\n+  ___extendsftf2\n+  ___fixsfsi\n+  ___fixdfsi\n+  ___fixxfsi\n+  ___fixtfsi\n+  ___floatsisf\n+  ___floatsidf\n+  ___floatsixf\n+  ___floatsitf\n+  ___gesf2\n+  ___gedf2\n+  ___gexf2\n+  ___getf2\n+  ___gtsf2\n+  ___gtdf2\n+  ___gtxf2\n+  ___gttf2\n+  ___lesf2\n+  ___ledf2\n+  ___lexf2\n+  ___letf2\n+  ___ltsf2\n+  ___ltdf2\n+  ___ltxf2\n+  ___lttf2\n+  ___mulsf3\n+  ___muldf3\n+  ___mulxf3\n+  ___multf3\n+  ___negsf2\n+  ___negdf2\n+  ___negxf2\n+  ___negtf2\n+  ___nesf2\n+  ___nedf2\n+  ___nexf2\n+  ___netf2\n+  ___subsf3\n+  ___subdf3\n+  ___subxf3\n+  ___subtf3\n+  ___truncdfsf2\n+  ___truncxfsf2\n+  ___trunctfsf2\n+  ___truncxfdf2\n+  ___trunctfdf2\n+\n+  # libgcc2 DImode arithmetic (for 32-bit targets).\n+  ___absvdi2\n+  ___addvdi3\n+  ___ashldi3\n+  ___ashrdi3\n+  ___cmpdi2\n+  ___divdi3\n+  ___ffsdi2\n+  ___fixdfdi\n+  ___fixsfdi\n+  ___fixtfdi\n+  ___fixxfdi\n+  ___fixunsdfdi\n+  ___fixunsdfsi\n+  ___fixunssfsi\n+  ___fixunssfdi\n+  ___fixunstfdi\n+  ___fixunstfsi\n+  ___fixunsxfdi\n+  ___fixunsxfsi\n+  ___floatdidf\n+  ___floatdisf\n+  ___floatdixf\n+  ___floatditf\n+  ___lshrdi3\n+  ___moddi3\n+  ___muldi3\n+  ___mulvdi3\n+  ___negdi2\n+  ___negvdi2\n+  ___subvdi3\n+  ___ucmpdi2\n+  ___udivdi3\n+  ___udivmoddi4\n+  ___umoddi3\n+\n+  # libgcc2 TImode arithmetic (for 64-bit targets).\n+  ___ashlti3\n+  ___ashrti3\n+  ___cmpti2\n+  ___divti3\n+  ___ffsti2\n+  ___fixdfti\n+  ___fixsfti\n+  ___fixtfti\n+  ___fixxfti\n+  ___lshrti3\n+  ___modti3\n+  ___multi3\n+  ___negti2\n+  ___ucmpti2\n+  ___udivmodti4\n+  ___udivti3\n+  ___umodti3\n+  ___fixunsdfti\n+  ___fixunssfti\n+  ___fixunstfti\n+  ___fixunsxfti\n+  ___floattidf\n+  ___floattisf\n+  ___floattixf\n+  ___floattitf\n+\n+  # Used to deal with trampoline initialization on some platforms\n+  ___clear_cache\n+\n+  # EH symbols\n+  __Unwind_DeleteException\n+  __Unwind_Find_FDE\n+  __Unwind_ForcedUnwind\n+  __Unwind_GetGR\n+  __Unwind_GetIP\n+  __Unwind_GetLanguageSpecificData\n+  __Unwind_GetRegionStart\n+  __Unwind_GetTextRelBase\n+  __Unwind_GetDataRelBase\n+  __Unwind_RaiseException\n+  __Unwind_Resume\n+  __Unwind_SetGR\n+  __Unwind_SetIP\n+  ___deregister_frame\n+  ___deregister_frame_info\n+  ___deregister_frame_info_bases\n+  ___register_frame\n+  ___register_frame_info\n+  ___register_frame_info_bases\n+  ___register_frame_info_table\n+  ___register_frame_info_table_bases\n+  ___register_frame_table\n+\n+  # SjLj EH symbols\n+  __Unwind_SjLj_Register\n+  __Unwind_SjLj_Unregister\n+  __Unwind_SjLj_RaiseException\n+  __Unwind_SjLj_ForcedUnwind\n+  __Unwind_SjLj_Resume\n+}\n+\n+%inherit GCC_3.3 GCC_3.0\n+GCC_3.3 {\n+  __Unwind_FindEnclosingFunction\n+  __Unwind_GetCFA\n+  __Unwind_Backtrace\n+  __Unwind_Resume_or_Rethrow\n+  __Unwind_SjLj_Resume_or_Rethrow\n+}\n+\n+%inherit GCC_3.3.1 GCC_3.3\n+GCC_3.3.1 {\n+  ___gcc_personality_sj0\n+  ___gcc_personality_v0\n+}\n+\n+%inherit GCC_3.3.2 GCC_3.3.1\n+GCC_3.3.2 {\n+}\n+%inherit GCC_3.3.4 GCC_3.3.2\n+GCC_3.3.4 {\n+  ___unorddf2\n+  ___unordsf2\n+}\n+\n+%inherit GCC_3.4 GCC_3.3.4\n+GCC_3.4 {\n+  # bit scanning and counting built-ins\n+  ___clzsi2\n+  ___clzdi2\n+  ___clzti2\n+  ___ctzsi2\n+  ___ctzdi2\n+  ___ctzti2\n+  ___popcountsi2\n+  ___popcountdi2\n+  ___popcountti2\n+  ___paritysi2\n+  ___paritydi2\n+  ___parityti2\n+}\n+\n+%inherit GCC_3.4.2 GCC_3.4\n+GCC_3.4.2 {\n+  # Used to deal with trampoline initialization on some platforms\n+  ___enable_execute_stack\n+  ___trampoline_setup\n+}\n+\n+%inherit GCC_3.4.4 GCC_3.4.2\n+GCC_3.4.4 {\n+  # libgcc2 TImode arithmetic (for 64-bit targets).\n+  ___absvti2\n+  ___addvti3\n+  ___mulvti3\n+  ___negvti2\n+  ___subvti3\n+}\n+\n+%inherit GCC_4.0.0 GCC_3.4.4\n+GCC_4.0.0 {\n+  # libgcc2 ___builtin_powi helpers.\n+  ___powisf2\n+  ___powidf2\n+  ___powixf2\n+  ___powitf2\n+\n+  # c99 compliant complex arithmetic\n+  ___divsc3\n+  ___divdc3\n+  ___divxc3\n+  ___divtc3\n+  ___mulsc3\n+  ___muldc3\n+  ___mulxc3\n+  ___multc3\n+}\n+\n+%inherit GCC_4.1.0 GCC_4.0.0\n+GCC_4.1.0 {\n+}\n+\n+%inherit GCC_4.2.0 GCC_4.1.0\n+GCC_4.2.0 {\n+  # unsigned-to-floating conversions\n+  ___floatunsisf\n+  ___floatunsidf\n+  ___floatunsixf\n+  ___floatunsitf\n+  ___floatundidf\n+  ___floatundisf\n+  ___floatundixf\n+  ___floatunditf\n+  ___floatuntidf\n+  ___floatuntisf\n+  ___floatuntixf\n+  ___floatuntitf\n+  __Unwind_GetIPInfo\n+}\n+\n+%inherit GCC_4.3.0 GCC_4.2.0\n+GCC_4.3.0 {\n+  # byte swapping routines\n+  ___bswapsi2\n+  ___bswapdi2\n+  ___emutls_get_address\n+  ___emutls_register_common\n+}"}, {"sha": "d391cd0a1fedfae10d22e6055ea2fe46f313f082", "filename": "gcc/config/bfin/linux.h", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/344189f9ec005682d1e5d6a700b91184e58538b8/gcc%2Fconfig%2Fbfin%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/344189f9ec005682d1e5d6a700b91184e58538b8/gcc%2Fconfig%2Fbfin%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Flinux.h?ref=344189f9ec005682d1e5d6a700b91184e58538b8", "patch": "@@ -0,0 +1,49 @@\n+#undef SUBTARGET_DRIVER_SELF_SPECS\n+#define SUBTARGET_DRIVER_SELF_SPECS \\\n+  \"%{!mno-fdpic:-mfdpic}\",\n+\n+/* The GNU C++ standard library requires that these macros be defined.  */\n+#undef CPLUSPLUS_CPP_SPEC\n+#define CPLUSPLUS_CPP_SPEC \"-D_GNU_SOURCE %(cpp)\"\n+\n+#ifdef __BFIN_FDPIC__\n+#define CRT_CALL_STATIC_FUNCTION(SECTION_OP, FUNC)\t\\\n+asm (SECTION_OP); \\\n+asm (\"P3 = [SP + 20];\\n\\tcall \" USER_LABEL_PREFIX #FUNC \";\"); \\\n+asm (TEXT_SECTION_ASM_OP);\n+#endif\n+\n+#define NO_IMPLICIT_EXTERN_C\n+\n+#undef TARGET_OS_CPP_BUILTINS\n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      LINUX_TARGET_OS_CPP_BUILTINS();\t\t\\\n+      if (flag_pic)\t\t\t\t\\\n+\t{\t\t\t\t\t\\\n+\t  builtin_define (\"__PIC__\");\t\t\\\n+\t  builtin_define (\"__pic__\");\t\t\\\n+\t}\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n+\n+#undef STARTFILE_SPEC\n+#define STARTFILE_SPEC \\\n+  \"%{!shared: %{pg|p|profile:gcrt1.o%s;pie:Scrt1.o%s;:crt1.o%s}} crtreloc.o%s \\\n+   crti.o%s %{shared|pie:crtbeginS.o%s;:crtbegin.o%s}\"\n+\n+#undef LINK_GCC_C_SEQUENCE_SPEC\n+#define LINK_GCC_C_SEQUENCE_SPEC \\\n+  \"%{mfast-fp:-lbffastfp} %{static:--start-group} %G %L %{static:--end-group}%{!static:%G}\"\n+\n+#undef LINK_SPEC\n+#define LINK_SPEC \"\\\n+  %{mfdpic: -m elf32bfinfd -z text} %{shared} %{pie} \\\n+  %{static:-dn -Bstatic} \\\n+  %{shared:-G -Bdynamic} \\\n+  %{!shared: %{!static: \\\n+   %{rdynamic:-export-dynamic} \\\n+   %{!dynamic-linker:-dynamic-linker /lib/ld-uClibc.so.0}} \\\n+   %{static}} -init __init -fini __fini\"\n+"}, {"sha": "249e1159ffa20f9fa851c663de938bf4fa2a8fed", "filename": "gcc/config/bfin/t-bfin-linux", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/344189f9ec005682d1e5d6a700b91184e58538b8/gcc%2Fconfig%2Fbfin%2Ft-bfin-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/344189f9ec005682d1e5d6a700b91184e58538b8/gcc%2Fconfig%2Fbfin%2Ft-bfin-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Ft-bfin-linux?ref=344189f9ec005682d1e5d6a700b91184e58538b8", "patch": "@@ -0,0 +1,34 @@\n+## Target part of the Makefile\n+\n+LIB1ASMSRC = bfin/lib1funcs.asm\n+LIB1ASMFUNCS = _divsi3 _udivsi3 _umodsi3 _modsi3 _umulsi3_highpart\n+LIB1ASMFUNCS += _smulsi3_highpart\n+\n+EXTRA_PARTS = crtbegin.o crtend.o crtbeginS.o crtendS.o\n+\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n+\n+dp-bit.c: $(srcdir)/config/fp-bit.c\n+\tcat $(srcdir)/config/fp-bit.c > dp-bit.c\n+\n+fp-bit.c: $(srcdir)/config/fp-bit.c\n+\techo '#define FLOAT' > fp-bit.c\n+\tcat $(srcdir)/config/fp-bit.c >> fp-bit.c\n+\n+CRTSTUFF_T_CFLAGS = -fpic\n+TARGET_LIBGCC2_CFLAGS = -fpic\n+\n+# Assemble startup files.\n+$(T)crti.o: $(srcdir)/config/bfin/crti.s $(GCC_PASSES)\n+\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(MULTILIB_CFLAGS) $(INCLUDES) \\\n+\t-c -o $(T)crti.o -x assembler-with-cpp $(srcdir)/config/bfin/crti.s\n+\n+$(T)crtn.o: $(srcdir)/config/bfin/crtn.s $(GCC_PASSES)\n+\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(MULTILIB_CFLAGS) $(INCLUDES) \\\n+\t-c -o $(T)crtn.o -x assembler-with-cpp $(srcdir)/config/bfin/crtn.s\n+\n+EXTRA_MULTILIB_PARTS = crtbegin.o crtend.o crtbeginS.o crtendS.o\n+\n+SHLIB_MAPFILES=$(srcdir)/config/bfin/libgcc-bfin.ver\n+"}, {"sha": "5d2bfea1f6720c130fe86b25794509d4fc179893", "filename": "gcc/config/bfin/t-bfin-uclinux", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/344189f9ec005682d1e5d6a700b91184e58538b8/gcc%2Fconfig%2Fbfin%2Ft-bfin-uclinux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/344189f9ec005682d1e5d6a700b91184e58538b8/gcc%2Fconfig%2Fbfin%2Ft-bfin-uclinux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Ft-bfin-uclinux?ref=344189f9ec005682d1e5d6a700b91184e58538b8", "patch": "@@ -0,0 +1,43 @@\n+## Target part of the Makefile\n+\n+LIB1ASMSRC = bfin/lib1funcs.asm\n+LIB1ASMFUNCS = _divsi3 _udivsi3 _umodsi3 _modsi3 _umulsi3_highpart\n+LIB1ASMFUNCS += _smulsi3_highpart\n+\n+EXTRA_PARTS = crtbegin.o crtend.o crtbeginS.o crtendS.o crti.o crtn.o crtlibid.o\n+\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n+\n+dp-bit.c: $(srcdir)/config/fp-bit.c\n+\tcat $(srcdir)/config/fp-bit.c > dp-bit.c\n+\n+fp-bit.c: $(srcdir)/config/fp-bit.c\n+\techo '#define FLOAT' > fp-bit.c\n+\tcat $(srcdir)/config/fp-bit.c >> fp-bit.c\n+\n+CRTSTUFF_T_CFLAGS = -fpic\n+TARGET_LIBGCC2_CFLAGS = -fpic\n+\n+MULTILIB_OPTIONS=mid-shared-library mleaf-id-shared-library\n+MULTILIB_OPTIONS+=msep-data\n+MULTILIB_DEFAULTS=\n+MULTILIB_DIRNAMES=\n+MULTILIB_EXCEPTIONS=mleaf-id-shared-library*\n+MULTILIB_EXCEPTIONS+=*msep-data*\n+\n+# Assemble startup files.\n+$(T)crti.o: $(srcdir)/config/bfin/crti.s $(GCC_PASSES)\n+\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(MULTILIB_CFLAGS) $(INCLUDES) \\\n+\t-c -o $(T)crti.o -x assembler-with-cpp $(srcdir)/config/bfin/crti.s\n+\n+$(T)crtn.o: $(srcdir)/config/bfin/crtn.s $(GCC_PASSES)\n+\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(MULTILIB_CFLAGS) $(INCLUDES) \\\n+\t-c -o $(T)crtn.o -x assembler-with-cpp $(srcdir)/config/bfin/crtn.s\n+\n+$(T)crtlibid.o: $(srcdir)/config/bfin/crtlibid.s $(GCC_PASSES)\n+\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(MULTILIB_CFLAGS) $(INCLUDES) \\\n+\t-c -o $(T)crtlibid.o -x assembler-with-cpp \\\n+\t$(srcdir)/config/bfin/crtlibid.s\n+\n+EXTRA_MULTILIB_PARTS = crtbegin.o crtend.o crtbeginS.o crtendS.o crti.o crtn.o crtlibid.o"}, {"sha": "0678e91d14b3d83b7e1cb1425fe4b53aea150111", "filename": "gcc/config/bfin/uclinux.h", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/344189f9ec005682d1e5d6a700b91184e58538b8/gcc%2Fconfig%2Fbfin%2Fuclinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/344189f9ec005682d1e5d6a700b91184e58538b8/gcc%2Fconfig%2Fbfin%2Fuclinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fuclinux.h?ref=344189f9ec005682d1e5d6a700b91184e58538b8", "patch": "@@ -21,3 +21,25 @@ asm (TEXT_SECTION_ASM_OP);\n #endif\n \n #define NO_IMPLICIT_EXTERN_C\n+\n+#define LINUX_TARGET_OS_CPP_BUILTINS()\t\t\t\t\\\n+    do {\t\t\t\t\t\t\t\\\n+\tbuiltin_define (\"__gnu_linux__\");\t\t\t\\\n+\tbuiltin_define_std (\"linux\");\t\t\t\t\\\n+\tbuiltin_define_std (\"unix\");\t\t\t\t\\\n+\tbuiltin_assert (\"system=linux\");\t\t\t\\\n+\tbuiltin_assert (\"system=unix\");\t\t\t\t\\\n+\tbuiltin_assert (\"system=posix\");\t\t\t\\\n+    } while (0)\n+\n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+\tLINUX_TARGET_OS_CPP_BUILTINS();\t\t\\\n+\tif (flag_pic)\t\t\t\t\\\n+\t  {\t\t\t\t\t\\\n+\t    builtin_define (\"__PIC__\");\t\t\\\n+\t    builtin_define (\"__pic__\");\t\t\\\n+\t  }\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)"}, {"sha": "f57e4d5cb885325f2a617ffccac316168fa48ef2", "filename": "gcc/config/linux.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/344189f9ec005682d1e5d6a700b91184e58538b8/gcc%2Fconfig%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/344189f9ec005682d1e5d6a700b91184e58538b8/gcc%2Fconfig%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flinux.h?ref=344189f9ec005682d1e5d6a700b91184e58538b8", "patch": "@@ -91,6 +91,7 @@ Boston, MA 02110-1301, USA.  */\n /* Define this so we can compile MS code for use with WINE.  */\n #define HANDLE_PRAGMA_PACK_PUSH_POP\n \n+#undef LINK_GCC_C_SEQUENCE_SPEC\n #define LINK_GCC_C_SEQUENCE_SPEC \\\n   \"%{static:--start-group} %G %L %{static:--end-group}%{!static:%G}\"\n "}, {"sha": "db5d3b05b623e59c194b02c6aa749089ac9cbe27", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/344189f9ec005682d1e5d6a700b91184e58538b8/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/344189f9ec005682d1e5d6a700b91184e58538b8/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=344189f9ec005682d1e5d6a700b91184e58538b8", "patch": "@@ -1,3 +1,7 @@\n+2007-03-05  Bernd Schmidt  <bernd.schmidt@analog.com>\n+\n+\t* config.host (bfin*-linux-uclibc*): Set extra_parts.\n+\n 2007-03-01  Brooks Moses  <brooks.moses@codesourcery.com>\n \n \t* Makefile.in: Add install-html and install-pdf dummy"}, {"sha": "ac13e35d8f6978baaebd70afa2017e2ff2a6487b", "filename": "libgcc/config.host", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/344189f9ec005682d1e5d6a700b91184e58538b8/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/344189f9ec005682d1e5d6a700b91184e58538b8/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=344189f9ec005682d1e5d6a700b91184e58538b8", "patch": "@@ -248,6 +248,11 @@ bfin*-elf*)\n         ;;\n bfin*-uclinux*)\n         ;;\n+bfin*-linux-uclibc*)\n+\t# No need to build crtbeginT.o on uClibc systems.  Should probably\n+\t# be moved to the OS specific section above.\n+\textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n+\t;;\n bfin*-*)\n         ;;\n c4x-*-rtems* | tic4x-*-rtems*)"}]}