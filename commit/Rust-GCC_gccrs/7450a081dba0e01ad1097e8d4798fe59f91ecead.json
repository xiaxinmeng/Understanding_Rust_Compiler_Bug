{"sha": "7450a081dba0e01ad1097e8d4798fe59f91ecead", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ1MGEwODFkYmEwZTAxYWQxMDk3ZThkNDc5OGZlNTlmOTFlY2VhZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2009-08-21T06:01:23Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-08-21T06:01:23Z"}, "message": "alpha.md (exception_receiver): Emit alternative GP load sequence if flag_reorder_blocks_and_partition is set.\n\n\t* config/alpha/alpha.md (exception_receiver): Emit alternative\n\tGP load sequence if flag_reorder_blocks_and_partition is set.\n\t(*exception_receiver_2): Also enable when\n\tflag_reorder_blocks_and_partition is set.\n\nFrom-SVN: r150984", "tree": {"sha": "ad81ecce6e9486fcfb0ac5437f5ec61bb4ecb80a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad81ecce6e9486fcfb0ac5437f5ec61bb4ecb80a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7450a081dba0e01ad1097e8d4798fe59f91ecead", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7450a081dba0e01ad1097e8d4798fe59f91ecead", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7450a081dba0e01ad1097e8d4798fe59f91ecead", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7450a081dba0e01ad1097e8d4798fe59f91ecead/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "685dca122f12d675ab63e927ce0947531ce27959", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/685dca122f12d675ab63e927ce0947531ce27959", "html_url": "https://github.com/Rust-GCC/gccrs/commit/685dca122f12d675ab63e927ce0947531ce27959"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "225e96e192a898d8790f879fba7159e15fb4acf7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7450a081dba0e01ad1097e8d4798fe59f91ecead/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7450a081dba0e01ad1097e8d4798fe59f91ecead/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7450a081dba0e01ad1097e8d4798fe59f91ecead", "patch": "@@ -1,3 +1,10 @@\n+2009-08-21 Uros Bizjak <ubizjak@gmail.com>\n+\n+\t* config/alpha/alpha.md (exception_receiver): Emit alternative\n+\tGP load sequence if flag_reorder_blocks_and_partition is set.\n+\t(*exception_receiver_2): Also enable when\n+\tflag_reorder_blocks_and_partition is set.\n+\n 2009-08-20  Matt Rice  <ratmice@gmail.com>\n \t    Diego Novillo  <dnovillo@google.com>\n "}, {"sha": "67ccff581ba10e327a151edf7df2af6b8cab37d7", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7450a081dba0e01ad1097e8d4798fe59f91ecead/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7450a081dba0e01ad1097e8d4798fe59f91ecead/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=7450a081dba0e01ad1097e8d4798fe59f91ecead", "patch": "@@ -6855,19 +6855,27 @@\n   \"br $27,$LSJ%=\\n$LSJ%=:\"\n   [(set_attr \"type\" \"ibr\")])\n \n+;; When flag_reorder_blocks_and_partition is in effect, compiler puts\n+;; exception landing pads in a cold section.  To prevent inter-section offset\n+;; calculation, a jump to original landing pad is emitted in the place of the\n+;; original landing pad.  Since landing pad is moved, RA-relative GP\n+;; calculation in the prologue of landing pad breaks.  To solve this problem,\n+;; we use alternative GP load approach, as in the case of TARGET_LD_BUGGY_LDGP.\n+\n (define_expand \"exception_receiver\"\n   [(unspec_volatile [(match_dup 0)] UNSPECV_EHR)]\n   \"TARGET_ABI_OSF\"\n {\n-  if (TARGET_LD_BUGGY_LDGP)\n+  if (TARGET_LD_BUGGY_LDGP || flag_reorder_blocks_and_partition)\n     operands[0] = alpha_gp_save_rtx ();\n   else\n     operands[0] = const0_rtx;\n })\n \n (define_insn \"*exception_receiver_2\"\n   [(unspec_volatile [(match_operand:DI 0 \"memory_operand\" \"m\")] UNSPECV_EHR)]\n-  \"TARGET_ABI_OSF && TARGET_LD_BUGGY_LDGP\"\n+  \"TARGET_ABI_OSF \n+   && (TARGET_LD_BUGGY_LDGP || flag_reorder_blocks_and_partition)\"\n   \"ldq $29,%0\"\n   [(set_attr \"type\" \"ild\")])\n "}]}