{"sha": "96bb56b2d7ee386b29596c59d61b73c5d5d3b7cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZiYjU2YjJkN2VlMzg2YjI5NTk2YzU5ZDYxYjczYzVkNWQzYjdjYw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-01-13T12:35:27Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-01-13T12:35:27Z"}, "message": "re PR tree-optimization/64404 (ICE: in vect_get_vec_def_for_operand, at tree-vect-stmts.c:1464 with --param=sccvn-max-alias-queries-per-access=1)\n\n2015-01-13  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/64404\n\t* tree-vect-stmts.c (vectorizable_load): Reject conflicting\n\tSLP types for CSEd loads.\n\n\t* gcc.dg/vect/pr64404.c: New testcase.\n\nFrom-SVN: r219527", "tree": {"sha": "ffe8bdc473914e2ee2678ab63b3b8996d6f8f164", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ffe8bdc473914e2ee2678ab63b3b8996d6f8f164"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96bb56b2d7ee386b29596c59d61b73c5d5d3b7cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96bb56b2d7ee386b29596c59d61b73c5d5d3b7cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96bb56b2d7ee386b29596c59d61b73c5d5d3b7cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96bb56b2d7ee386b29596c59d61b73c5d5d3b7cc/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ebcd09c1c1dfbb14c588cb153880185f04c8130f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebcd09c1c1dfbb14c588cb153880185f04c8130f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebcd09c1c1dfbb14c588cb153880185f04c8130f"}], "stats": {"total": 84, "additions": 84, "deletions": 0}, "files": [{"sha": "d99589b2cabe2243aad37110df801ced2395a8e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96bb56b2d7ee386b29596c59d61b73c5d5d3b7cc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96bb56b2d7ee386b29596c59d61b73c5d5d3b7cc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=96bb56b2d7ee386b29596c59d61b73c5d5d3b7cc", "patch": "@@ -1,3 +1,9 @@\n+2015-01-13  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/64404\n+\t* tree-vect-stmts.c (vectorizable_load): Reject conflicting\n+\tSLP types for CSEd loads.\n+\n 2015-01-13  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \tPR tree-optimization/64436"}, {"sha": "854d5f446113c111e97c48e9178da85ba89df552", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96bb56b2d7ee386b29596c59d61b73c5d5d3b7cc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96bb56b2d7ee386b29596c59d61b73c5d5d3b7cc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=96bb56b2d7ee386b29596c59d61b73c5d5d3b7cc", "patch": "@@ -1,3 +1,8 @@\n+2015-01-13  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/64404\n+\t* gcc.dg/vect/pr64404.c: New testcase.\n+\n 2014-01-13  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/64568"}, {"sha": "aa6463c350b6228d5ca9555d9ee24f89c218641d", "filename": "gcc/testsuite/gcc.dg/vect/pr64404.c", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96bb56b2d7ee386b29596c59d61b73c5d5d3b7cc/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr64404.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96bb56b2d7ee386b29596c59d61b73c5d5d3b7cc/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr64404.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr64404.c?ref=96bb56b2d7ee386b29596c59d61b73c5d5d3b7cc", "patch": "@@ -0,0 +1,59 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"--param=sccvn-max-alias-queries-per-access=1\" } */\n+\n+#include \"tree-vect.h\"\n+\n+extern void abort (void);\n+\n+typedef struct\n+{\n+  int l, h;\n+} tFPinterval;\n+\n+tFPinterval X[1024];\n+tFPinterval Y[1024];\n+tFPinterval Z[1024];\n+\n+void __attribute__((noinline))\n+Compute (void)\n+{\n+  int d;\n+  for (d = 0; d < 1024; d++)\n+    {\n+      Y[d].l = X[d].l + X[d].h;\n+      Y[d].h = Y[d].l;\n+      Z[d].l = X[d].l;\n+      Z[d].h = X[d].h;\n+    }\n+}\n+\n+int\n+main (void)\n+{\n+  int d;\n+\n+  check_vect ();\n+\n+  for (d = 0; d < 1024; d++)\n+    {\n+      X[d].l = d;\n+      X[d].h = d + 1;\n+      __asm__ volatile (\"\");\n+    }\n+\n+  Compute ();\n+\n+  for (d = 0; d < 1024; d++)\n+    {\n+      if (Y[d].l != X[d].l + X[d].h\n+\t || Y[d].h != Y[d].l\n+\t || Z[d].l != X[d].l\n+\t || Z[d].h != X[d].h)\n+\tabort ();\n+      __asm__ volatile (\"\");\n+    }\n+\n+  return 0;\n+}\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "43fc51c8f3ee4289e1770d9016fa29d4481982d3", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96bb56b2d7ee386b29596c59d61b73c5d5d3b7cc/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96bb56b2d7ee386b29596c59d61b73c5d5d3b7cc/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=96bb56b2d7ee386b29596c59d61b73c5d5d3b7cc", "patch": "@@ -5791,6 +5791,20 @@ vectorizable_load (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt,\n \t\t\t     \"group loads with negative dependence distance\\n\");\n \t  return false;\n \t}\n+\n+      /* Similarly when the stmt is a load that is both part of a SLP\n+         instance and a loop vectorized stmt via the same-dr mechanism\n+\t we have to give up.  */\n+      if (STMT_VINFO_GROUP_SAME_DR_STMT (stmt_info)\n+\t  && (STMT_SLP_TYPE (stmt_info)\n+\t      != STMT_SLP_TYPE (vinfo_for_stmt\n+\t\t\t\t (STMT_VINFO_GROUP_SAME_DR_STMT (stmt_info)))))\n+\t{\n+\t  if (dump_enabled_p ())\n+\t    dump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n+\t\t\t     \"conflicting SLP types for CSEd load\\n\");\n+\t  return false;\n+\t}\n     }\n \n "}]}