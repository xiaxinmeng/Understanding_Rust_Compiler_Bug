{"sha": "1ae696e59a3b389f2fb75a2470762c7595af3ed7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWFlNjk2ZTU5YTNiMzg5ZjJmYjc1YTI0NzA3NjJjNzU5NWFmM2VkNw==", "commit": {"author": {"name": "Warren Levy", "email": "warrenl@redhat.com", "date": "2001-02-08T12:04:57Z"}, "committer": {"name": "Warren Levy", "email": "warrenl@gcc.gnu.org", "date": "2001-02-08T12:04:57Z"}, "message": "mauve.exp: Added support for XFAILs.\n\n\t* libjava.mauve/mauve.exp: Added support for XFAILs.\n\t* libjava.mauve/xfails: New file.\n\nFrom-SVN: r39536", "tree": {"sha": "035d74fd16fe3387333890fc1f4b4aa07c19cb7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/035d74fd16fe3387333890fc1f4b4aa07c19cb7a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ae696e59a3b389f2fb75a2470762c7595af3ed7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ae696e59a3b389f2fb75a2470762c7595af3ed7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ae696e59a3b389f2fb75a2470762c7595af3ed7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ae696e59a3b389f2fb75a2470762c7595af3ed7/comments", "author": null, "committer": null, "parents": [{"sha": "1bff1f9a87aaa4fa37ffb894fe66060e0a789faf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bff1f9a87aaa4fa37ffb894fe66060e0a789faf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bff1f9a87aaa4fa37ffb894fe66060e0a789faf"}], "stats": {"total": 50, "additions": 45, "deletions": 5}, "files": [{"sha": "df2896e6480e857ec2b49a2202a40ce39ffde1d0", "filename": "libjava/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ae696e59a3b389f2fb75a2470762c7595af3ed7/libjava%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ae696e59a3b389f2fb75a2470762c7595af3ed7/libjava%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FChangeLog?ref=1ae696e59a3b389f2fb75a2470762c7595af3ed7", "patch": "@@ -1,3 +1,8 @@\n+2001-02-08  Warren Levy  <warrenl@redhat.com>\n+\n+\t* libjava.mauve/mauve.exp: Added support for XFAILs.\n+\t* libjava.mauve/xfails: New file.\n+\n 2001-01-26  Tom Tromey  <tromey@redhat.com>\n \n \t* libjava.jni/martin.c (Java_martin_myNative): Flush stdout."}, {"sha": "0dc7bc80d99b479b03800be4c2c4846450a52301", "filename": "libjava/testsuite/libjava.mauve/mauve.exp", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ae696e59a3b389f2fb75a2470762c7595af3ed7/libjava%2Ftestsuite%2Flibjava.mauve%2Fmauve.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ae696e59a3b389f2fb75a2470762c7595af3ed7/libjava%2Ftestsuite%2Flibjava.mauve%2Fmauve.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.mauve%2Fmauve.exp?ref=1ae696e59a3b389f2fb75a2470762c7595af3ed7", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 1998, 1999, 2000 Free Software Foundation.\n+# Copyright (C) 1998, 1999, 2000, 2001 Free Software Foundation.\n # Written by Tom Tromey <tromey@cygnus.com>.\n # Incorporate Mauve into libjava's DejaGNU test suite framework.\n \n@@ -107,6 +107,8 @@ proc test_mauve {} {\n   puts -nonewline $fd $c\n   close $fd\n \n+  catch {system \"ln -s $full_srcdir/libjava.mauve/xfails xfails\"}\n+\n   if {[catch {\n     system \"make KEYS=libgcj classes.stamp 2>&1\"\n   } msg]} then {\n@@ -188,8 +190,11 @@ proc test_mauve {} {\n \n     # Extract pass/failure info from output.\n     foreach line [split [lindex $result 1] \\n] {\n-      if {[regexp -- {^(PASS|FAIL): (.*)$} $line ignore what msg]} then {\n-\tif {$what == \"PASS\"} then {\n+      if {[regexp -- {^(PASS|FAIL|XFAIL|XPASS): (.*)$} $line ignore what msg]} then {\n+\tif {$what == \"XFAIL\" || $what == \"XPASS\"} then {\n+\t  setup_xfail *-*-*\n+\t}\n+\tif {$what == \"PASS\" || $what == \"XPASS\"} then {\n \t  pass $msg\n \t} else {\n \t  fail $msg\n@@ -237,6 +242,8 @@ proc test_mauve_sim {} {\n   puts -nonewline $fd $c\n   close $fd\n \n+  catch {system \"ln -s $full_srcdir/libjava.mauve/xfails xfails\"}\n+\n   if {[catch {\n     system \"make KEYS=libgcj classes.stamp 2>&1\"\n   } msg]} then {\n@@ -345,8 +352,11 @@ proc test_mauve_sim {} {\n \n     # Extract pass/failure info from output.\n     foreach line [split [lindex $result 1] \\n] {\n-      if {[regexp -- {^(PASS|FAIL): (.*)$} $line ignore what msg]} then {\n-\tif {$what == \"PASS\"} then {\n+      if {[regexp -- {^(PASS|FAIL|XFAIL|XPASS): (.*)$} $line ignore what msg]} then {\n+\tif {$what == \"XFAIL\" || $what == \"XPASS\"} then {\n+\t  setup_xfail *-*-*\n+\t}\n+\tif {$what == \"PASS\" || $what == \"XPASS\"} then {\n \t  pass $msg\n \t} else {\n \t  fail $msg"}, {"sha": "7ff1a4c0d2f2e4cc4a427a8b14a80438f6d834da", "filename": "libjava/testsuite/libjava.mauve/xfails", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ae696e59a3b389f2fb75a2470762c7595af3ed7/libjava%2Ftestsuite%2Flibjava.mauve%2Fxfails", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ae696e59a3b389f2fb75a2470762c7595af3ed7/libjava%2Ftestsuite%2Flibjava.mauve%2Fxfails", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.mauve%2Fxfails?ref=1ae696e59a3b389f2fb75a2470762c7595af3ed7", "patch": "@@ -0,0 +1,25 @@\n+FAIL: gnu.testlet.java.lang.Double.DoubleTest: Error: test_shortbyteValue failed - 5 (number 1)\n+FAIL: gnu.testlet.java.lang.Float.FloatTest: Error: test_shortbyteValue failed - 5 (number 1)\n+FAIL: gnu.testlet.java.io.Utf8Encoding.mojo: Four Byte Range Error (0) (number 1)\n+FAIL: gnu.testlet.java.io.Utf8Encoding.mojo: Four Byte Range Error (1) (number 1)\n+FAIL: gnu.testlet.java.io.Utf8Encoding.mojo: Five Bytes (0) (number 1)\n+FAIL: gnu.testlet.java.io.Utf8Encoding.mojo: Five Bytes (1) (number 1)\n+FAIL: gnu.testlet.java.io.Utf8Encoding.mojo: Six Bytes (0) (number 1)\n+FAIL: gnu.testlet.java.io.Utf8Encoding.mojo: Six Bytes (1) (number 1)\n+FAIL: gnu.testlet.java.io.Utf8Encoding.mojo: Orphan Continuation (1) (number 1)\n+FAIL: gnu.testlet.java.io.Utf8Encoding.mojo: Orphan Continuation (2) (number 1)\n+FAIL: gnu.testlet.java.io.Utf8Encoding.mojo: Four Byte Range Error (2) (number 1)\n+FAIL: gnu.testlet.java.io.ObjectStreamClass.Test: getSerialVersionUID (number 7)\n+FAIL: gnu.testlet.java.text.DateFormatSymbols.Test: patterns (number 2)\n+FAIL: gnu.testlet.java.text.SimpleDateFormat.Test: equals() (number 1)\n+FAIL: gnu.testlet.java.text.SimpleDateFormat.Test: parse() strict (number 1)\n+FAIL: gnu.testlet.java.text.SimpleDateFormat.getAndSet2DigitYearStart: get2DigitYearStart() initial (number 1)\n+FAIL: gnu.testlet.java.net.ServerSocket.ServerSocketTest: Error : test_params failed - 5getInetAddress did not return proper values  (number 1)\n+FAIL: gnu.testlet.java.net.Socket.SocketTest: Error : test_BasicServer failed - 11 exception was thrown :Illegal seek (number 1)\n+FAIL: gnu.testlet.java.net.URLConnection.URLConnectionTest: Error in test_Basics  - 2  should not have raised  Throwable here  (number 1)\n+FAIL: gnu.testlet.java.net.URL.URLTest: openStream (number 1)\n+FAIL: gnu.testlet.java.net.URL.URLTest: sameFile (number 2)\n+FAIL: gnu.testlet.java.net.URL.URLTest:  Error in test_toString  - 5  exception should not be thrown here (number 1)\n+FAIL: gnu.testlet.java.net.URL.URLTest: new URL(protocol, host, file) (number 26)\n+FAIL: gnu.testlet.java.net.URL.URLTest: new URL(protocol, host, file) (number 54)\n+FAIL: gnu.testlet.java.net.MulticastSocket.MulticastSocketTest: joinGroup() twice. (number 1)"}]}