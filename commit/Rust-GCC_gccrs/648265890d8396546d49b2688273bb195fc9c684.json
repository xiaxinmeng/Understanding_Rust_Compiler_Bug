{"sha": "648265890d8396546d49b2688273bb195fc9c684", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQ4MjY1ODkwZDgzOTY1NDZkNDliMjY4ODI3M2JiMTk1ZmM5YzY4NA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2007-01-12T09:37:15Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-01-12T09:37:15Z"}, "message": "200x-xx-xx Nathan Sidwell <nathan@codesourcery.com> Richard Sandiford <richard@codesourcery.com>\n\ngcc/\n200x-xx-xx  Nathan Sidwell  <nathan@codesourcery.com>\n\t    Richard Sandiford  <richard@codesourcery.com>\n\n\t* doc/invoke.texi: Document -mno-bitfield, -mno-rtd and -mno-short.\n\t* config/m68k/m68k.opt: Resort options.\n\t(mbitfield, mrtd, mshort): Remove RejectNegative properties.\n\nCo-Authored-By: Richard Sandiford <richard@codesourcery.com>\n\nFrom-SVN: r120717", "tree": {"sha": "499a0f0b8fb483d668659f353551666126a6afc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/499a0f0b8fb483d668659f353551666126a6afc6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/648265890d8396546d49b2688273bb195fc9c684", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/648265890d8396546d49b2688273bb195fc9c684", "html_url": "https://github.com/Rust-GCC/gccrs/commit/648265890d8396546d49b2688273bb195fc9c684", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/648265890d8396546d49b2688273bb195fc9c684/comments", "author": null, "committer": null, "parents": [{"sha": "7eb4f04449cc0be1bdf6a1ec976dcefaedf97c88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eb4f04449cc0be1bdf6a1ec976dcefaedf97c88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7eb4f04449cc0be1bdf6a1ec976dcefaedf97c88"}], "stats": {"total": 38, "additions": 28, "deletions": 10}, "files": [{"sha": "e3ebbd9c96cd785a16a5873ead51d70e8505800a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/648265890d8396546d49b2688273bb195fc9c684/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/648265890d8396546d49b2688273bb195fc9c684/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=648265890d8396546d49b2688273bb195fc9c684", "patch": "@@ -1,3 +1,10 @@\n+2007-01-12  Nathan Sidwell  <nathan@codesourcery.com>\n+\t    Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* doc/invoke.texi: Document -mno-bitfield, -mno-rtd and -mno-short.\n+\t* config/m68k/m68k.opt: Resort options.\n+\t(mbitfield, mrtd, mshort): Remove RejectNegative properties.\n+\n 2007-01-12  Nathan Sidwell  <nathan@codesourcery.com>\n \t    Richard Sandiford  <richard@codesourcery.com>\n "}, {"sha": "2dc242776e7b5f9bc0a1e35949addd71331f73e5", "filename": "gcc/config/m68k/m68k.opt", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/648265890d8396546d49b2688273bb195fc9c684/gcc%2Fconfig%2Fm68k%2Fm68k.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/648265890d8396546d49b2688273bb195fc9c684/gcc%2Fconfig%2Fm68k%2Fm68k.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.opt?ref=648265890d8396546d49b2688273bb195fc9c684", "patch": "@@ -39,10 +39,6 @@ m5407\n Target RejectNegative\n Generate code for a 5407\n \n-mcfv4e\n-Target RejectNegative\n-Generate code for a ColdFire v4e\n-\n m68000\n Target RejectNegative\n Generate code for a 68000\n@@ -101,7 +97,7 @@ Target RejectNegative Joined\n Specify the name of the target architecture\n \n mbitfield\n-Target Report RejectNegative Mask(BITFIELD)\n+Target Report Mask(BITFIELD)\n Use the bit-field instructions\n \n mc68000\n@@ -112,6 +108,10 @@ mc68020\n Target RejectNegative\n Generate code for a 68020\n \n+mcfv4e\n+Target RejectNegative\n+Generate code for a ColdFire v4e\n+\n mcpu=\n Target RejectNegative Joined\n Specify the target CPU\n@@ -149,7 +149,7 @@ Target Report Mask(PCREL)\n Generate pc-relative code\n \n mrtd\n-Target Report RejectNegative Mask(RTD)\n+Target Report Mask(RTD)\n Use different calling convention using 'rtd'\n \n msep-data\n@@ -161,7 +161,7 @@ Target RejectNegative Joined UInteger\n ID of shared library to build\n \n mshort\n-Target Report RejectNegative Mask(SHORT)\n+Target Report Mask(SHORT)\n Consider type 'int' to be 16 bits wide\n \n msoft-float"}, {"sha": "221551c9852c358bc3d751cf11d8b2aca1070c85", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/648265890d8396546d49b2688273bb195fc9c684/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/648265890d8396546d49b2688273bb195fc9c684/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=648265890d8396546d49b2688273bb195fc9c684", "patch": "@@ -583,9 +583,9 @@ Objective-C and Objective-C++ Dialects}.\n @gccoptlist{-march=@var{arch}  -mcpu=@var{cpu}  -mtune=@var{tune}\n -m68000  -m68020  -m68020-40  -m68020-60  -m68030  -m68040 @gol\n -m68060  -mcpu32  -m5200  -m5206e  -m528x  -m5307  -m5407 @gol\n--mcfv4e  -mbitfield  -mc68000  -mc68020 @gol\n--mnobitfield  -mrtd  -mdiv  -mno-div  -mshort @gol\n--mhard-float  -m68881  -msoft-float  -mpcrel @gol\n+-mcfv4e  -mbitfield  -mno-bitfield  -mc68000  -mc68020 @gol\n+-mnobitfield  -mrtd  -mno-rtd  -mdiv  -mno-div  -mshort @gol\n+-mno-short  -mhard-float  -m68881  -msoft-float  -mpcrel @gol\n -malign-int  -mstrict-align  -msep-data  -mno-sep-data @gol\n -mshared-library-id=n  -mid-shared-library  -mno-id-shared-library}\n \n@@ -10510,8 +10510,14 @@ Consider type @code{int} to be 16 bits wide, like @code{short int}.\n Additionally, parameters passed on the stack are also aligned to a\n 16-bit boundary even on targets whose API mandates promotion to 32-bit.\n \n+@item -mno-short\n+@opindex -mno-short\n+Do not consider type @code{int} to be 16 bits wide.  This is the default.\n+\n @item -mnobitfield\n+@itemx -mno-bitfield\n @opindex mnobitfield\n+@opindex mno-bitfield\n Do not use the bit-field instructions.  The @option{-m68000}, @option{-mcpu32}\n and @option{-m5200} options imply @w{@option{-mnobitfield}}.\n \n@@ -10545,6 +10551,11 @@ harmlessly ignored.)\n The @code{rtd} instruction is supported by the 68010, 68020, 68030,\n 68040, 68060 and CPU32 processors, but not by the 68000 or 5200.\n \n+@item -mno-rtd\n+@opindex mno-rtd\n+Do not use the calling conventions selected by @option{-mrtd}.\n+This is the default.\n+\n @item -malign-int\n @itemx -mno-align-int\n @opindex malign-int"}]}