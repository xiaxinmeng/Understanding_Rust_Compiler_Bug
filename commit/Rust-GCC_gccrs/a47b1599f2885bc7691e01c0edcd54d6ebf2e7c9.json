{"sha": "a47b1599f2885bc7691e01c0edcd54d6ebf2e7c9", "node_id": "C_kwDOANBUbNoAKGE0N2IxNTk5ZjI4ODViYzc2OTFlMDFjMGVkY2Q1NGQ2ZWJmMmU3Yzk", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-03-22T12:48:54Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-03-22T12:50:20Z"}, "message": "rs6000: wrap const in an error message.\n\n\tPR target/104903\n\ngcc/ChangeLog:\n\n\t* config/rs6000/rs6000-c.cc (altivec_resolve_overloaded_builtin):\n\tWrap const keyword.", "tree": {"sha": "e3497cc93871ff4b1a5c24342c60e78865a5e474", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3497cc93871ff4b1a5c24342c60e78865a5e474"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a47b1599f2885bc7691e01c0edcd54d6ebf2e7c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a47b1599f2885bc7691e01c0edcd54d6ebf2e7c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a47b1599f2885bc7691e01c0edcd54d6ebf2e7c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a47b1599f2885bc7691e01c0edcd54d6ebf2e7c9/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1ba4e5b883d142167a2f9f32395e349681fb932", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1ba4e5b883d142167a2f9f32395e349681fb932", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1ba4e5b883d142167a2f9f32395e349681fb932"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "ad976753a3cf70efd857bb5b6fc4d36326379105", "filename": "gcc/config/rs6000/rs6000-c.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a47b1599f2885bc7691e01c0edcd54d6ebf2e7c9/gcc%2Fconfig%2Frs6000%2Frs6000-c.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a47b1599f2885bc7691e01c0edcd54d6ebf2e7c9/gcc%2Fconfig%2Frs6000%2Frs6000-c.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.cc?ref=a47b1599f2885bc7691e01c0edcd54d6ebf2e7c9", "patch": "@@ -1788,8 +1788,8 @@ altivec_resolve_overloaded_builtin (location_t loc, tree fndecl,\n \t{\n \t  if (TYPE_READONLY (TREE_TYPE (type))\n \t      && !TYPE_READONLY (TREE_TYPE (decl_type)))\n-\t    warning (0, \"passing argument %d of %qE discards const qualifier \"\n-\t\t     \"from pointer target type\", n + 1, fndecl);\n+\t    warning (0, \"passing argument %d of %qE discards %<const%> \"\n+\t\t     \"qualifier from pointer target type\", n + 1, fndecl);\n \t  type = build_qualified_type (TREE_TYPE (type), 0);\n \t  type = build_pointer_type (type);\n \t  arg = fold_convert (type, arg);"}]}