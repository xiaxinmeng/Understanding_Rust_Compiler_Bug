{"sha": "f1e7c95f89be637e052cd7ee3e31aaade607404c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFlN2M5NWY4OWJlNjM3ZTA1MmNkN2VlM2UzMWFhYWRlNjA3NDA0Yw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-06T21:45:07Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-06T21:45:07Z"}, "message": "(cse_insn): Invalidate CLOBBERed registers.\n\n(count_reg_usage): Count registers in USE rtls on CALL_INSNs.\n\nFrom-SVN: r7237", "tree": {"sha": "caf227fa0e435ae148dea110062acdb07ee16331", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/caf227fa0e435ae148dea110062acdb07ee16331"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1e7c95f89be637e052cd7ee3e31aaade607404c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1e7c95f89be637e052cd7ee3e31aaade607404c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1e7c95f89be637e052cd7ee3e31aaade607404c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1e7c95f89be637e052cd7ee3e31aaade607404c/comments", "author": null, "committer": null, "parents": [{"sha": "6e2d1486acf5c27ff368e28af3b781f3eaf7405b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e2d1486acf5c27ff368e28af3b781f3eaf7405b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e2d1486acf5c27ff368e28af3b781f3eaf7405b"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "88454035bcfcd5d57e3ecee26360f8d7f1e6dff2", "filename": "gcc/cse.c", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e7c95f89be637e052cd7ee3e31aaade607404c/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e7c95f89be637e052cd7ee3e31aaade607404c/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=f1e7c95f89be637e052cd7ee3e31aaade607404c", "patch": "@@ -5903,6 +5903,13 @@ cse_insn (insn, in_libcall_block)\n      Also determine whether there is a CLOBBER that invalidates\n      all memory references, or all references at varying addresses.  */\n \n+  if (GET_CODE (insn) == CALL_INSN)\n+    {\n+      for (tem = CALL_INSN_FUNCTION_USAGE (insn); tem; tem = XEXP (tem, 1))\n+\tif (GET_CODE (XEXP (tem, 0)) == CLOBBER)\n+          invalidate (SET_DEST (XEXP (tem, 0)));\n+    }\n+\n   if (GET_CODE (x) == SET)\n     {\n       sets = (struct set *) alloca (sizeof (struct set));\n@@ -8315,11 +8322,14 @@ count_reg_usage (x, counts, dest, incr)\n      rtx dest;\n      int incr;\n {\n-  enum rtx_code code = GET_CODE (x);\n+  enum rtx_code code;\n   char *fmt;\n   int i, j;\n \n-  switch (code)\n+  if (x == 0)\n+    return;\n+\n+  switch (code = GET_CODE (x))\n     {\n     case REG:\n       if (x != dest)\n@@ -8352,24 +8362,26 @@ count_reg_usage (x, counts, dest, incr)\n \t\t       incr);\n       return;\n \n+    case CALL_INSN:\n+      count_reg_usage (CALL_INSN_FUNCTION_USAGE (x), counts, NULL_RTX, incr);\n+\n+      /* ... falls through ...  */\n     case INSN:\n     case JUMP_INSN:\n-    case CALL_INSN:\n       count_reg_usage (PATTERN (x), counts, NULL_RTX, incr);\n \n       /* Things used in a REG_EQUAL note aren't dead since loop may try to\n \t use them.  */\n \n-      if (REG_NOTES (x))\n-\tcount_reg_usage (REG_NOTES (x), counts, NULL_RTX, incr);\n+      count_reg_usage (REG_NOTES (x), counts, NULL_RTX, incr);\n       return;\n \n     case EXPR_LIST:\n     case INSN_LIST:\n-      if (REG_NOTE_KIND (x) == REG_EQUAL)\n+      if (REG_NOTE_KIND (x) == REG_EQUAL\n+\t  || GET_CODE (XEXP (x,0)) == USE)\n \tcount_reg_usage (XEXP (x, 0), counts, NULL_RTX, incr);\n-      if (XEXP (x, 1))\n-\tcount_reg_usage (XEXP (x, 1), counts, NULL_RTX, incr);\n+      count_reg_usage (XEXP (x, 1), counts, NULL_RTX, incr);\n       return;\n     }\n "}]}