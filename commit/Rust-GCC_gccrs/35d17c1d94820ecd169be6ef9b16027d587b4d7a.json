{"sha": "35d17c1d94820ecd169be6ef9b16027d587b4d7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVkMTdjMWQ5NDgyMGVjZDE2OWJlNmVmOWIxNjAyN2Q1ODdiNGQ3YQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-07-18T23:16:31Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-07-18T23:16:31Z"}, "message": "(va_arg): Add support for 128 bit long double type.\n\nFrom-SVN: r10147", "tree": {"sha": "4f3bcdd2775a2d76ae921d25115a10fb188dd265", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f3bcdd2775a2d76ae921d25115a10fb188dd265"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35d17c1d94820ecd169be6ef9b16027d587b4d7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35d17c1d94820ecd169be6ef9b16027d587b4d7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35d17c1d94820ecd169be6ef9b16027d587b4d7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35d17c1d94820ecd169be6ef9b16027d587b4d7a/comments", "author": null, "committer": null, "parents": [{"sha": "06aa52de3cf82005be7339f00befa978f9990e22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06aa52de3cf82005be7339f00befa978f9990e22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06aa52de3cf82005be7339f00befa978f9990e22"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "94339922f064f18aecfcc3b9c845884ec709022a", "filename": "gcc/ginclude/va-sparc.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35d17c1d94820ecd169be6ef9b16027d587b4d7a/gcc%2Fginclude%2Fva-sparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35d17c1d94820ecd169be6ef9b16027d587b4d7a/gcc%2Fginclude%2Fva-sparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fva-sparc.h?ref=35d17c1d94820ecd169be6ef9b16027d587b4d7a", "patch": "@@ -184,7 +184,9 @@ __extension__\t\t\t\t\t\t\t\\\n    The casts to char * avoid warnings about invalid pointer arithmetic.  */\n #define va_arg(pvar,TYPE)\t\t\t\t\t\\\n __extension__\t\t\t\t\t\t\t\\\n-(*({((__builtin_classify_type (*(TYPE*) 0) >= __record_type_class) \\\n+(*({((__builtin_classify_type (*(TYPE*) 0) >= __record_type_class \\\n+      || (__builtin_classify_type (*(TYPE*) 0) == __real_type_class \\\n+\t  && sizeof (TYPE) == 16))\t\t\t\t\\\n     ? ((pvar) = (char *)(pvar) + __va_rounded_size (TYPE *),\t\\\n        *(TYPE **) (void *) ((char *)(pvar) - __va_rounded_size (TYPE *))) \\\n     : __va_rounded_size (TYPE) == 8\t\t\t\t\\"}]}