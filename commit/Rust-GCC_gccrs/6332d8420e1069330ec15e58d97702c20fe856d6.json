{"sha": "6332d8420e1069330ec15e58d97702c20fe856d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjMzMmQ4NDIwZTEwNjkzMzBlYzE1ZTU4ZDk3NzAyYzIwZmU4NTZkNg==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2005-03-29T16:19:33Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-03-29T16:19:33Z"}, "message": "sem_cat.adb (Validate_Remote_Types_Type_Conversion): Perform check to forbid conversion of a local access-to-subprogram type to a...\n\n2005-03-29  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_cat.adb (Validate_Remote_Types_Type_Conversion): Perform check to\n\tforbid conversion of a local access-to-subprogram type to a remote one.\n\n\t* sem_util.adb (Wrong_Type): For a record type that is the expanded\n\tequivalent type for a remote access-to-subprogram type, go back to the\n\toriginal RAS entity when displaying an error message, so the casing is\n\tthe original source casing.\n\nFrom-SVN: r97182", "tree": {"sha": "6e697df86b5a439af1b9009cca5a2ae1fd79e0f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e697df86b5a439af1b9009cca5a2ae1fd79e0f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6332d8420e1069330ec15e58d97702c20fe856d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6332d8420e1069330ec15e58d97702c20fe856d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6332d8420e1069330ec15e58d97702c20fe856d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6332d8420e1069330ec15e58d97702c20fe856d6/comments", "author": null, "committer": null, "parents": [{"sha": "73e69194b512e909a964bd389904b520658490cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73e69194b512e909a964bd389904b520658490cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73e69194b512e909a964bd389904b520658490cc"}], "stats": {"total": 33, "additions": 23, "deletions": 10}, "files": [{"sha": "a17521cad9dc85f2eef1988de04ab1d402a52f17", "filename": "gcc/ada/sem_cat.adb", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6332d8420e1069330ec15e58d97702c20fe856d6/gcc%2Fada%2Fsem_cat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6332d8420e1069330ec15e58d97702c20fe856d6/gcc%2Fada%2Fsem_cat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_cat.adb?ref=6332d8420e1069330ec15e58d97702c20fe856d6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1529,13 +1529,22 @@ package body Sem_Cat is\n       if Is_Remote_Access_To_Subprogram_Type (E)\n         and then not Is_Remote_Access_To_Subprogram_Type (S)\n       then\n-         Error_Msg_N (\"incorrect conversion of remote operand\", N);\n+         Error_Msg_N\n+           (\"incorrect conversion of remote operand to local type\", N);\n+         return;\n+\n+      elsif not Is_Remote_Access_To_Subprogram_Type (E)\n+        and then Is_Remote_Access_To_Subprogram_Type (S)\n+      then\n+         Error_Msg_N\n+           (\"incorrect conversion of local operand to remote type\", N);\n          return;\n \n       elsif Is_Remote_Access_To_Class_Wide_Type (E)\n         and then not Is_Remote_Access_To_Class_Wide_Type (S)\n       then\n-         Error_Msg_N (\"incorrect conversion of remote operand\", N);\n+         Error_Msg_N\n+           (\"incorrect conversion of remote operand to local type\", N);\n          return;\n       end if;\n "}, {"sha": "fe354349b2c0172648ef8799fb367674ee8f3ef2", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6332d8420e1069330ec15e58d97702c20fe856d6/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6332d8420e1069330ec15e58d97702c20fe856d6/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=6332d8420e1069330ec15e58d97702c20fe856d6", "patch": "@@ -6770,16 +6770,20 @@ package body Sem_Util is\n                Found_Scope := Scope (Found_Scope);\n \n                exit when Expec_Scope = Standard_Standard\n-                           or else\n-                         Found_Scope = Standard_Standard\n-                           or else\n-                         not Comes_From_Source (Expec_Scope)\n-                           or else\n-                         not Comes_From_Source (Found_Scope);\n+                 or else Found_Scope = Standard_Standard\n+                 or else not Comes_From_Source (Expec_Scope)\n+                 or else not Comes_From_Source (Found_Scope);\n             end loop;\n          end;\n \n-         Error_Msg_NE (\"expected}!\", Expr, Expec_Type);\n+         if Is_Record_Type (Expec_Type)\n+           and then Present (Corresponding_Remote_Type (Expec_Type))\n+         then\n+            Error_Msg_NE (\"expected}!\", Expr,\n+                          Corresponding_Remote_Type (Expec_Type));\n+         else\n+            Error_Msg_NE (\"expected}!\", Expr, Expec_Type);\n+         end if;\n \n          if Is_Entity_Name (Expr)\n            and then Is_Package (Entity (Expr))"}]}