{"sha": "e8db5f70f27b6de8139339ef1866eaa153c2bf67", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThkYjVmNzBmMjdiNmRlODEzOTMzOWVmMTg2NmVhYTE1M2MyYmY2Nw==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-07-06T21:58:02Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-07-06T21:58:02Z"}, "message": "Add test for [PR55881].\n\n\tPR c++/55881\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/warn/uninit-pr55881.C: New test.", "tree": {"sha": "8702323569dacc8accb6502e9a3c7ca2f7ff525c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8702323569dacc8accb6502e9a3c7ca2f7ff525c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8db5f70f27b6de8139339ef1866eaa153c2bf67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8db5f70f27b6de8139339ef1866eaa153c2bf67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8db5f70f27b6de8139339ef1866eaa153c2bf67", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8db5f70f27b6de8139339ef1866eaa153c2bf67/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee9a0e93156ff3d41450db74172abc8ae2471d1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee9a0e93156ff3d41450db74172abc8ae2471d1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee9a0e93156ff3d41450db74172abc8ae2471d1f"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "b01f4e78105e335012d5887425453b44da2d5c5d", "filename": "gcc/testsuite/g++.dg/warn/uninit-pr55881.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8db5f70f27b6de8139339ef1866eaa153c2bf67/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Funinit-pr55881.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8db5f70f27b6de8139339ef1866eaa153c2bf67/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Funinit-pr55881.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Funinit-pr55881.C?ref=e8db5f70f27b6de8139339ef1866eaa153c2bf67", "patch": "@@ -0,0 +1,34 @@\n+/* PR middle-end/55881 - #pragma GCC diagnostic ignored ignored when inlining\n+   { dg-do compile }\n+   { dg-options \"-O2 -Wall\" } */\n+\n+struct I\n+{\n+  int i;\n+  int foo (struct I *n)\n+  {\n+    return n->i + 10;         // { dg-bogus \"-Wmaybe-uninitialized\" }\n+  }\n+\n+  I () : i (5) {}\n+};\n+\n+int main (int argc, char **)\n+{\n+  struct I i, *n;\n+\n+  if (argc > 10)\n+    {\n+      n = new I;\n+      i.i = i.foo (n);\n+  }\n+\n+  if (argc > 2)\n+    {\n+#pragma GCC diagnostic ignored \"-Wmaybe-uninitialized\"\n+      return i.foo (n);\n+#pragma GCC diagnostic pop\n+    }\n+\n+  return 0;\n+}"}]}