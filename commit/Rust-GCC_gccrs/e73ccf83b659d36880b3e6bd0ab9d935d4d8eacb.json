{"sha": "e73ccf83b659d36880b3e6bd0ab9d935d4d8eacb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTczY2NmODNiNjU5ZDM2ODgwYjNlNmJkMGFiOWQ5MzVkNGQ4ZWFjYg==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@freesoft.cz", "date": "1999-12-09T10:46:10Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "1999-12-09T10:46:10Z"}, "message": "combine.c (try_combine, [...]): Remove REG_N_REFS updating code.\n\n\t* combine.c (try_combine, distribute_notes): Remove REG_N_REFS\n\tupdating code.\n\nFrom-SVN: r30842", "tree": {"sha": "5d08fc0f476fa4a812b49a72571ec1f765f7372a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d08fc0f476fa4a812b49a72571ec1f765f7372a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e73ccf83b659d36880b3e6bd0ab9d935d4d8eacb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e73ccf83b659d36880b3e6bd0ab9d935d4d8eacb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e73ccf83b659d36880b3e6bd0ab9d935d4d8eacb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e73ccf83b659d36880b3e6bd0ab9d935d4d8eacb/comments", "author": null, "committer": null, "parents": [{"sha": "699a42a6206351a15ee377d29769ff4e4b09e3ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/699a42a6206351a15ee377d29769ff4e4b09e3ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/699a42a6206351a15ee377d29769ff4e4b09e3ce"}], "stats": {"total": 25, "additions": 5, "deletions": 20}, "files": [{"sha": "aa3dd01e1528d9fae5a448febde97ba50a1dc421", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73ccf83b659d36880b3e6bd0ab9d935d4d8eacb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73ccf83b659d36880b3e6bd0ab9d935d4d8eacb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e73ccf83b659d36880b3e6bd0ab9d935d4d8eacb", "patch": "@@ -1,3 +1,8 @@\n+Thu Dec  9 11:36:24 MET 1999 Jan Hubicka  <hubicka@freesoft.cz>\n+\n+\t* combine.c (try_combine, distribute_notes): Remove REG_N_REFS\n+\tupdating code.\n+\n 1999-12-09  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/sparc/linux64.h (TARGET_DEFAULT): Make -mapp-regs"}, {"sha": "a2053bdeffff0cd8eec5984e9080b188ff1ddf13", "filename": "gcc/combine.c", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73ccf83b659d36880b3e6bd0ab9d935d4d8eacb/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73ccf83b659d36880b3e6bd0ab9d935d4d8eacb/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=e73ccf83b659d36880b3e6bd0ab9d935d4d8eacb", "patch": "@@ -2642,10 +2642,6 @@ try_combine (i3, i2, i1)\n \t  {\n \t    regno = REGNO (i2dest);\n \t    REG_N_SETS (regno)--;\n-\t    if (REG_N_SETS (regno) == 0\n-\t\t&& ! REGNO_REG_SET_P (BASIC_BLOCK (0)->global_live_at_start,\n-\t\t\t\t      regno))\n-\t      REG_N_REFS (regno) = 0;\n \t  }\n       }\n \n@@ -2665,10 +2661,6 @@ try_combine (i3, i2, i1)\n \tif (! added_sets_1 && ! i1dest_in_i1src)\n \t  {\n \t    REG_N_SETS (regno)--;\n-\t    if (REG_N_SETS (regno) == 0\n-\t\t&& ! REGNO_REG_SET_P (BASIC_BLOCK (0)->global_live_at_start,\n-\t\t\t\t      regno))\n-\t      REG_N_REFS (regno) = 0;\n \t  }\n       }\n \n@@ -11977,18 +11969,6 @@ distribute_notes (notes, from_insn, i3, i2, elim_i2, elim_i1)\n \t  if (XEXP (note, 0) == elim_i2 || XEXP (note, 0) == elim_i1)\n \t    break;\n \n-\t  /* If the register is used in both I2 and I3 and it dies in I3, \n-\t     we might have added another reference to it.  If reg_n_refs\n-\t     was 2, bump it to 3.  This has to be correct since the \n-\t     register must have been set somewhere.  The reason this is\n-\t     done is because local-alloc.c treats 2 references as a \n-\t     special case.  */\n-\n-\t  if (place == i3 && i2 != 0 && GET_CODE (XEXP (note, 0)) == REG\n-\t      && REG_N_REFS (REGNO (XEXP (note, 0)))== 2\n-\t      && reg_referenced_p (XEXP (note, 0), PATTERN (i2)))\n-\t    REG_N_REFS (REGNO (XEXP (note, 0))) = 3;\n-\n \t  if (place == 0)\n \t    {\n \t      basic_block bb = BASIC_BLOCK (this_basic_block);"}]}