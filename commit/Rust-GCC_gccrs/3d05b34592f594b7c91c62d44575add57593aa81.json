{"sha": "3d05b34592f594b7c91c62d44575add57593aa81", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2QwNWIzNDU5MmY1OTRiN2M5MWM2MmQ0NDU3NWFkZDU3NTkzYWE4MQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2003-10-22T15:51:55Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-10-22T15:51:55Z"}, "message": "re PR libstdc++/8610 (large file support in libstdc++-v3 (std::streamoff type  is 32-bit  in GCC 3.2 whereas it was 64-bit in GCC 2.96))\n\n2003-10-22  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/8610\n\t* acinclude.m4 (GLIBCXX_CHECK_INT64_T): New macro,\n\tchecking for the availability of int64_t.\n\t(GLIBCXX_CHECK_LFS): New macro, checking for LFS support.\n\t* configure.ac: Call here.\n\t* acconfig.h: Add undef for the corresponding symbols.\n\t* config/io/basic_file_stdio.cc\t(__basic_file<char>::open):\n\tDepending on _GLIBCXX_USE_LFS, call fopen64 or fopen.\n\t(__basic_file<char>::seekoff): Likewise, call lseek64 when\n\tavailable, otherwise lseek, checking the __off parameter.\n\t* include/bits/postypes.h: Typedef __streamoff_base_type\n\tto int64_t if available, otherwise long long.\n\t* aclocal.m4: Regenerate.\n\t* config.h.in: Likewise.\n\t* configure: Likewise.\n\n\t* acinclude.m4 (GLIBCXX_CHECK_POLL, GLIBCXX_CHECK_WRITEV):\n\tUse AC_TRY_LINK instead of AC_TRY_COMPILE.\n\nFrom-SVN: r72806", "tree": {"sha": "b26e41a70bfc32ae8a5ebbdb7c88efd4978dbb10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b26e41a70bfc32ae8a5ebbdb7c88efd4978dbb10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d05b34592f594b7c91c62d44575add57593aa81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d05b34592f594b7c91c62d44575add57593aa81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d05b34592f594b7c91c62d44575add57593aa81", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d05b34592f594b7c91c62d44575add57593aa81/comments", "author": null, "committer": null, "parents": [{"sha": "36ae3d8e5998a4aa42fa3e8c967f97853882f1ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36ae3d8e5998a4aa42fa3e8c967f97853882f1ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36ae3d8e5998a4aa42fa3e8c967f97853882f1ea"}], "stats": {"total": 364, "additions": 316, "deletions": 48}, "files": [{"sha": "76d345e19a4b02239a37b1065beade11524e2af1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d05b34592f594b7c91c62d44575add57593aa81/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d05b34592f594b7c91c62d44575add57593aa81/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3d05b34592f594b7c91c62d44575add57593aa81", "patch": "@@ -1,3 +1,24 @@\n+2003-10-22  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/8610\n+\t* acinclude.m4 (GLIBCXX_CHECK_INT64_T): New macro,\n+\tchecking for the availability of int64_t.\n+\t(GLIBCXX_CHECK_LFS): New macro, checking for LFS support.\n+\t* configure.ac: Call here.\n+\t* acconfig.h: Add undef for the corresponding symbols.\n+\t* config/io/basic_file_stdio.cc\t(__basic_file<char>::open):\n+\tDepending on _GLIBCXX_USE_LFS, call fopen64 or fopen.\n+\t(__basic_file<char>::seekoff): Likewise, call lseek64 when\n+\tavailable, otherwise lseek, checking the __off parameter.\n+\t* include/bits/postypes.h: Typedef __streamoff_base_type\n+\tto int64_t if available, otherwise long long.\n+\t* aclocal.m4: Regenerate.\n+\t* config.h.in: Likewise.\n+\t* configure: Likewise.\n+\n+\t* acinclude.m4 (GLIBCXX_CHECK_POLL, GLIBCXX_CHECK_WRITEV):\n+\tUse AC_TRY_LINK instead of AC_TRY_COMPILE.\n+\t\n 2003-10-22  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/12657"}, {"sha": "df110cd073f7b14b1caf5a919cc93c22be431ad4", "filename": "libstdc++-v3/acconfig.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d05b34592f594b7c91c62d44575add57593aa81/libstdc%2B%2B-v3%2Facconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d05b34592f594b7c91c62d44575add57593aa81/libstdc%2B%2B-v3%2Facconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facconfig.h?ref=3d05b34592f594b7c91c62d44575add57593aa81", "patch": "@@ -153,6 +153,12 @@\n // Define if writev is available in <sys/uio.h>.\n #undef HAVE_WRITEV\n \n+// Define if int64_t is available in <stdint.h>.\n+#undef HAVE_INT64_T\n+\n+// Define if LFS support is available.\n+#undef _GLIBCXX_USE_LFS\n+\n // Define if LC_MESSAGES is available in <locale.h>.\n #undef HAVE_LC_MESSAGES\n "}, {"sha": "c0713b84edcd3a9ae8600e4ab91fbd9f28c7f522", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 37, "deletions": 2, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d05b34592f594b7c91c62d44575add57593aa81/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d05b34592f594b7c91c62d44575add57593aa81/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=3d05b34592f594b7c91c62d44575add57593aa81", "patch": "@@ -540,7 +540,7 @@ dnl Check whether poll is available in <poll.h>, and define HAVE_POLL.\n dnl\n AC_DEFUN(GLIBCXX_CHECK_POLL, [\n   AC_CACHE_VAL(glibcxx_cv_POLL, [\n-    AC_TRY_COMPILE(\n+    AC_TRY_LINK(\n       [#include <poll.h>],\n       [struct pollfd pfd[1];\n        pfd[0].events = POLLIN;\n@@ -559,7 +559,7 @@ dnl Check whether writev is available in <sys/uio.h>, and define HAVE_WRITEV.\n dnl\n AC_DEFUN(GLIBCXX_CHECK_WRITEV, [\n   AC_CACHE_VAL(glibcxx_cv_WRITEV, [\n-    AC_TRY_COMPILE(\n+    AC_TRY_LINK(\n       [#include <sys/uio.h>],\n       [struct iovec iov[2];\n        writev(0, iov, 0);],\n@@ -572,6 +572,41 @@ AC_DEFUN(GLIBCXX_CHECK_WRITEV, [\n ])\n \n \n+dnl\n+dnl Check whether int64_t is available in <stdint.h>, and define HAVE_INT64_T.\n+dnl\n+AC_DEFUN(GLIBCXX_CHECK_INT64_T, [\n+  AC_CACHE_VAL(glibcxx_cv_INT64_T, [\n+    AC_TRY_COMPILE(\n+      [#include <stdint.h>],\n+      [int64_t var;],\n+      [glibcxx_cv_INT64_T=yes],\n+      [glibcxx_cv_INT64_T=no])\n+  ])\n+  if test $glibcxx_cv_INT64_T = yes; then\n+    AC_DEFINE(HAVE_INT64_T)\n+  fi\n+])\n+\n+\n+dnl\n+dnl Check whether LFS support is available.\n+dnl\n+AC_DEFUN(GLIBCXX_CHECK_LFS, [\n+  AC_CACHE_VAL(glibcxx_cv_LFS, [\n+    AC_TRY_LINK(\n+      [#include <unistd.h>],\n+      [fopen64(\"t\", \"w\");\n+       lseek64(1, 0, SEEK_CUR);],\t\n+      [glibcxx_cv_LFS=yes],\n+      [glibcxx_cv_LFS=no])\n+  ])\n+  if test $glibcxx_cv_LFS = yes; then\n+    AC_DEFINE(_GLIBCXX_USE_LFS)\n+  fi\n+])\n+\n+\n dnl\n dnl Does any necessary configuration of the testsuite directory.  Generates\n dnl the testsuite_hooks.h header."}, {"sha": "ad6fc5e590b36af6572956f9530e23738c79f855", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 37, "deletions": 2, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d05b34592f594b7c91c62d44575add57593aa81/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d05b34592f594b7c91c62d44575add57593aa81/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=3d05b34592f594b7c91c62d44575add57593aa81", "patch": "@@ -553,7 +553,7 @@ dnl Check whether poll is available in <poll.h>, and define HAVE_POLL.\n dnl\n AC_DEFUN(GLIBCXX_CHECK_POLL, [\n   AC_CACHE_VAL(glibcxx_cv_POLL, [\n-    AC_TRY_COMPILE(\n+    AC_TRY_LINK(\n       [#include <poll.h>],\n       [struct pollfd pfd[1];\n        pfd[0].events = POLLIN;\n@@ -572,7 +572,7 @@ dnl Check whether writev is available in <sys/uio.h>, and define HAVE_WRITEV.\n dnl\n AC_DEFUN(GLIBCXX_CHECK_WRITEV, [\n   AC_CACHE_VAL(glibcxx_cv_WRITEV, [\n-    AC_TRY_COMPILE(\n+    AC_TRY_LINK(\n       [#include <sys/uio.h>],\n       [struct iovec iov[2];\n        writev(0, iov, 0);],\n@@ -585,6 +585,41 @@ AC_DEFUN(GLIBCXX_CHECK_WRITEV, [\n ])\n \n \n+dnl\n+dnl Check whether int64_t is available in <stdint.h>, and define HAVE_INT64_T.\n+dnl\n+AC_DEFUN(GLIBCXX_CHECK_INT64_T, [\n+  AC_CACHE_VAL(glibcxx_cv_INT64_T, [\n+    AC_TRY_COMPILE(\n+      [#include <stdint.h>],\n+      [int64_t var;],\n+      [glibcxx_cv_INT64_T=yes],\n+      [glibcxx_cv_INT64_T=no])\n+  ])\n+  if test $glibcxx_cv_INT64_T = yes; then\n+    AC_DEFINE(HAVE_INT64_T)\n+  fi\n+])\n+\n+\n+dnl\n+dnl Check whether LFS support is available.\n+dnl\n+AC_DEFUN(GLIBCXX_CHECK_LFS, [\n+  AC_CACHE_VAL(glibcxx_cv_LFS, [\n+    AC_TRY_LINK(\n+      [#include <unistd.h>],\n+      [fopen64(\"t\", \"w\");\n+       lseek64(1, 0, SEEK_CUR);],\t\n+      [glibcxx_cv_LFS=yes],\n+      [glibcxx_cv_LFS=no])\n+  ])\n+  if test $glibcxx_cv_LFS = yes; then\n+    AC_DEFINE(_GLIBCXX_USE_LFS)\n+  fi\n+])\n+\n+\n dnl\n dnl Does any necessary configuration of the testsuite directory.  Generates\n dnl the testsuite_hooks.h header."}, {"sha": "8c59a3170300c1f216d01a951337e39e03ce6720", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d05b34592f594b7c91c62d44575add57593aa81/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d05b34592f594b7c91c62d44575add57593aa81/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=3d05b34592f594b7c91c62d44575add57593aa81", "patch": "@@ -154,6 +154,12 @@\n // Define if writev is available in <sys/uio.h>.\n #undef HAVE_WRITEV\n \n+// Define if int64_t is available in <stdint.h>.\n+#undef HAVE_INT64_T\n+\n+// Define if LFS support is available.\n+#undef _GLIBCXX_USE_LFS\n+\n // Define if LC_MESSAGES is available in <locale.h>.\n #undef HAVE_LC_MESSAGES\n "}, {"sha": "3025de520618549f8475e3610997ce489c998b11", "filename": "libstdc++-v3/config/io/basic_file_stdio.cc", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d05b34592f594b7c91c62d44575add57593aa81/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d05b34592f594b7c91c62d44575add57593aa81/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.cc?ref=3d05b34592f594b7c91c62d44575add57593aa81", "patch": "@@ -68,6 +68,8 @@\n # endif\n #endif\n \n+#include <limits> // For <off_t>::max() and min()\n+\n namespace std \n {\n   // Definitions for __basic_file<char>.\n@@ -173,7 +175,11 @@ namespace std\n \n     if (!this->is_open())\n       {\n+#ifdef _GLIBCXX_USE_LFS\n+\tif ((_M_cfile = fopen64(__name, __c_mode)))\n+#else\n \tif ((_M_cfile = fopen(__name, __c_mode)))\n+#endif\n \t  {\n \t    _M_cfile_created = true;\n \t    __ret = this;\n@@ -262,7 +268,16 @@ namespace std\n \n   streamoff\n   __basic_file<char>::seekoff(streamoff __off, ios_base::seekdir __way)\n-  { return lseek(this->fd(), __off, __way); }\n+  {\n+#ifdef _GLIBCXX_USE_LFS\n+    return lseek64(this->fd(), __off, __way);\n+#else\n+    if (__off > std::numeric_limits<off_t>::max()\n+\t|| __off < std::numeric_limits<off_t>::min())\n+      return -1L;\n+    return lseek(this->fd(), __off, __way);\n+#endif\n+  }\n \n   int \n   __basic_file<char>::sync() "}, {"sha": "bf21ec1f3a93c55701f49d3bae3f502a74bac506", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 175, "deletions": 41, "changes": 216, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d05b34592f594b7c91c62d44575add57593aa81/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d05b34592f594b7c91c62d44575add57593aa81/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=3d05b34592f594b7c91c62d44575add57593aa81", "patch": "@@ -971,7 +971,7 @@ ac_abs_top_srcdir=`cd \"$ac_dir\" && cd $ac_top_srcdir && pwd`\n     else\n       echo \"$as_me: WARNING: no configuration information is in $ac_dir\" >&2\n     fi\n-    cd \"$ac_popdir\"\n+    cd $ac_popdir\n   done\n fi\n \n@@ -1170,7 +1170,7 @@ _ASBOX\n       echo \"$as_me: caught signal $ac_signal\"\n     echo \"$as_me: exit $exit_status\"\n   } >&5\n-  rm -f core *.core &&\n+  rm -f core core.* *.core &&\n   rm -rf conftest* confdefs* conf$$* $ac_clean_files &&\n     exit $exit_status\n      ' 0\n@@ -2800,7 +2800,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); }; }; then\n   for ac_declaration in \\\n-   '' \\\n+   ''\\\n+   '#include <stdlib.h>' \\\n    'extern \"C\" void std::exit (int) throw (); using std::exit;' \\\n    'extern \"C\" void std::exit (int); using std::exit;' \\\n    'extern \"C\" void exit (int) throw ();' \\\n@@ -2814,8 +2815,8 @@ _ACEOF\n cat confdefs.h >>conftest.$ac_ext\n cat >>conftest.$ac_ext <<_ACEOF\n /* end confdefs.h.  */\n-$ac_declaration\n #include <stdlib.h>\n+$ac_declaration\n int\n main ()\n {\n@@ -3125,7 +3126,8 @@ else\n   fi\n fi\n for ac_declaration in \\\n-   '' \\\n+   ''\\\n+   '#include <stdlib.h>' \\\n    'extern \"C\" void std::exit (int) throw (); using std::exit;' \\\n    'extern \"C\" void std::exit (int); using std::exit;' \\\n    'extern \"C\" void exit (int) throw ();' \\\n@@ -3139,8 +3141,8 @@ _ACEOF\n cat confdefs.h >>conftest.$ac_ext\n cat >>conftest.$ac_ext <<_ACEOF\n /* end confdefs.h.  */\n-$ac_declaration\n #include <stdlib.h>\n+$ac_declaration\n int\n main ()\n {\n@@ -4265,7 +4267,7 @@ test x\"$pic_mode\" = xno && libtool_flags=\"$libtool_flags --prefer-non-pic\"\n case $host in\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 4268 \"configure\"' > conftest.$ac_ext\n+  echo '#line 4270 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -4869,7 +4871,7 @@ fi;\n     #\n     # Fake what AC_TRY_COMPILE does.  XXX Look at redoing this new-style.\n     cat > conftest.$ac_ext << EOF\n-#line 4872 \"configure\"\n+#line 4874 \"configure\"\n struct S { ~S(); };\n void bar();\n void foo()\n@@ -5457,7 +5459,7 @@ sed 's/^/| /' conftest.$ac_ext >&5\n ( exit $ac_status )\n ac_cv_header_stdc=no\n fi\n-rm -f core *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext\n+rm -f core core.* *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext\n fi\n fi\n fi\n@@ -5648,7 +5650,7 @@ sed 's/^/| /' conftest.$ac_ext >&5\n ( exit $ac_status )\n enable_clocale_flag=generic\n fi\n-rm -f core *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext\n+rm -f core core.* *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext\n fi\n           fi\n \n@@ -7804,7 +7806,7 @@ sed 's/^/| /' conftest.$ac_ext >&5\n ( exit $ac_status )\n ac_sectionLDflags=no\n fi\n-rm -f core *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext\n+rm -f core core.* *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext\n fi\n     if test \"$ac_test_CFLAGS\" = set; then\n       CFLAGS=\"$ac_save_CFLAGS\"\n@@ -26443,7 +26445,12 @@ done\n   echo $ECHO_N \"(cached) $ECHO_C\" >&6\n else\n \n-    cat >conftest.$ac_ext <<_ACEOF\n+    if test x$gcc_no_link = xyes; then\n+  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n+echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n+cat >conftest.$ac_ext <<_ACEOF\n #line $LINENO \"configure\"\n /* confdefs.h.  */\n _ACEOF\n@@ -26461,13 +26468,13 @@ struct pollfd pfd[1];\n   return 0;\n }\n _ACEOF\n-rm -f conftest.$ac_objext\n-if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n-  (eval $ac_compile) 2>&5\n+rm -f conftest.$ac_objext conftest$ac_exeext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n+  (eval $ac_link) 2>&5\n   ac_status=$?\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-         { ac_try='test -s conftest.$ac_objext'\n+         { ac_try='test -s conftest$ac_exeext'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -26480,7 +26487,7 @@ sed 's/^/| /' conftest.$ac_ext >&5\n \n glibcxx_cv_POLL=no\n fi\n-rm -f conftest.$ac_objext conftest.$ac_ext\n+rm -f conftest.$ac_objext conftest$ac_exeext conftest.$ac_ext\n \n fi\n \n@@ -26753,7 +26760,12 @@ done\n   echo $ECHO_N \"(cached) $ECHO_C\" >&6\n else\n \n-    cat >conftest.$ac_ext <<_ACEOF\n+    if test x$gcc_no_link = xyes; then\n+  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n+echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n+cat >conftest.$ac_ext <<_ACEOF\n #line $LINENO \"configure\"\n /* confdefs.h.  */\n _ACEOF\n@@ -26770,6 +26782,59 @@ struct iovec iov[2];\n   return 0;\n }\n _ACEOF\n+rm -f conftest.$ac_objext conftest$ac_exeext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n+  (eval $ac_link) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+         { ac_try='test -s conftest$ac_exeext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  glibcxx_cv_WRITEV=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+glibcxx_cv_WRITEV=no\n+fi\n+rm -f conftest.$ac_objext conftest$ac_exeext conftest.$ac_ext\n+\n+fi\n+\n+  if test $glibcxx_cv_WRITEV = yes; then\n+    cat >>confdefs.h <<\\_ACEOF\n+#define HAVE_WRITEV 1\n+_ACEOF\n+\n+  fi\n+\n+\n+  # For the __streamoff_base_type typedef.\n+\n+  if test \"${glibcxx_cv_INT64_T+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+\n+    cat >conftest.$ac_ext <<_ACEOF\n+#line $LINENO \"configure\"\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <stdint.h>\n+int\n+main ()\n+{\n+int64_t var;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n rm -f conftest.$ac_objext\n if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n@@ -26782,20 +26847,79 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   ac_status=$?\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); }; }; then\n-  glibcxx_cv_WRITEV=yes\n+  glibcxx_cv_INT64_T=yes\n else\n   echo \"$as_me: failed program was:\" >&5\n sed 's/^/| /' conftest.$ac_ext >&5\n \n-glibcxx_cv_WRITEV=no\n+glibcxx_cv_INT64_T=no\n fi\n rm -f conftest.$ac_objext conftest.$ac_ext\n \n fi\n \n-  if test $glibcxx_cv_WRITEV = yes; then\n+  if test $glibcxx_cv_INT64_T = yes; then\n     cat >>confdefs.h <<\\_ACEOF\n-#define HAVE_WRITEV 1\n+#define HAVE_INT64_T 1\n+_ACEOF\n+\n+  fi\n+\n+\n+  # For LFS support.\n+\n+  if test \"${glibcxx_cv_LFS+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+\n+    if test x$gcc_no_link = xyes; then\n+  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n+echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n+cat >conftest.$ac_ext <<_ACEOF\n+#line $LINENO \"configure\"\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <unistd.h>\n+int\n+main ()\n+{\n+fopen64(\"t\", \"w\");\n+       lseek64(1, 0, SEEK_CUR);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext conftest$ac_exeext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n+  (eval $ac_link) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+         { ac_try='test -s conftest$ac_exeext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  glibcxx_cv_LFS=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+glibcxx_cv_LFS=no\n+fi\n+rm -f conftest.$ac_objext conftest$ac_exeext conftest.$ac_ext\n+\n+fi\n+\n+  if test $glibcxx_cv_LFS = yes; then\n+    cat >>confdefs.h <<\\_ACEOF\n+#define _GLIBCXX_USE_LFS 1\n _ACEOF\n \n   fi\n@@ -27437,7 +27561,7 @@ sed 's/^/| /' conftest.$ac_ext >&5\n ( exit $ac_status )\n ac_cv_func_mmap_fixed_mapped=no\n fi\n-rm -f core *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext\n+rm -f core core.* *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext\n fi\n fi\n echo \"$as_me:$LINENO: result: $ac_cv_func_mmap_fixed_mapped\" >&5\n@@ -46470,7 +46594,12 @@ done\n   echo $ECHO_N \"(cached) $ECHO_C\" >&6\n else\n \n-    cat >conftest.$ac_ext <<_ACEOF\n+    if test x$gcc_no_link = xyes; then\n+  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n+echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n+cat >conftest.$ac_ext <<_ACEOF\n #line $LINENO \"configure\"\n /* confdefs.h.  */\n _ACEOF\n@@ -46488,13 +46617,13 @@ struct pollfd pfd[1];\n   return 0;\n }\n _ACEOF\n-rm -f conftest.$ac_objext\n-if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n-  (eval $ac_compile) 2>&5\n+rm -f conftest.$ac_objext conftest$ac_exeext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n+  (eval $ac_link) 2>&5\n   ac_status=$?\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-         { ac_try='test -s conftest.$ac_objext'\n+         { ac_try='test -s conftest$ac_exeext'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -46507,7 +46636,7 @@ sed 's/^/| /' conftest.$ac_ext >&5\n \n glibcxx_cv_POLL=no\n fi\n-rm -f conftest.$ac_objext conftest.$ac_ext\n+rm -f conftest.$ac_objext conftest$ac_exeext conftest.$ac_ext\n \n fi\n \n@@ -46780,7 +46909,12 @@ done\n   echo $ECHO_N \"(cached) $ECHO_C\" >&6\n else\n \n-    cat >conftest.$ac_ext <<_ACEOF\n+    if test x$gcc_no_link = xyes; then\n+  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n+echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n+cat >conftest.$ac_ext <<_ACEOF\n #line $LINENO \"configure\"\n /* confdefs.h.  */\n _ACEOF\n@@ -46797,13 +46931,13 @@ struct iovec iov[2];\n   return 0;\n }\n _ACEOF\n-rm -f conftest.$ac_objext\n-if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n-  (eval $ac_compile) 2>&5\n+rm -f conftest.$ac_objext conftest$ac_exeext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n+  (eval $ac_link) 2>&5\n   ac_status=$?\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-         { ac_try='test -s conftest.$ac_objext'\n+         { ac_try='test -s conftest$ac_exeext'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -46816,7 +46950,7 @@ sed 's/^/| /' conftest.$ac_ext >&5\n \n glibcxx_cv_WRITEV=no\n fi\n-rm -f conftest.$ac_objext conftest.$ac_ext\n+rm -f conftest.$ac_objext conftest$ac_exeext conftest.$ac_ext\n \n fi\n \n@@ -47136,7 +47270,7 @@ sed 's/^/| /' conftest.$ac_ext >&5\n ( exit $ac_status )\n ac_sectionLDflags=no\n fi\n-rm -f core *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext\n+rm -f core core.* *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext\n fi\n     if test \"$ac_test_CFLAGS\" = set; then\n       CFLAGS=\"$ac_save_CFLAGS\"\n@@ -49278,7 +49412,7 @@ sed 's/^/| /' conftest.$ac_ext >&5\n ( exit $ac_status )\n ac_sectionLDflags=no\n fi\n-rm -f core *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext\n+rm -f core core.* *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext\n fi\n     if test \"$ac_test_CFLAGS\" = set; then\n       CFLAGS=\"$ac_save_CFLAGS\"\n@@ -51289,7 +51423,7 @@ sed 's/^/| /' conftest.$ac_ext >&5\n ( exit $ac_status )\n ac_sectionLDflags=no\n fi\n-rm -f core *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext\n+rm -f core core.* *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext\n fi\n     if test \"$ac_test_CFLAGS\" = set; then\n       CFLAGS=\"$ac_save_CFLAGS\"\n@@ -53309,7 +53443,7 @@ sed 's/^/| /' conftest.$ac_ext >&5\n ( exit $ac_status )\n ac_sectionLDflags=no\n fi\n-rm -f core *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext\n+rm -f core core.* *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext\n fi\n     if test \"$ac_test_CFLAGS\" = set; then\n       CFLAGS=\"$ac_save_CFLAGS\"\n@@ -55276,7 +55410,7 @@ sed 's/^/| /' conftest.$ac_ext >&5\n ( exit $ac_status )\n ac_sectionLDflags=no\n fi\n-rm -f core *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext\n+rm -f core core.* *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext\n fi\n     if test \"$ac_test_CFLAGS\" = set; then\n       CFLAGS=\"$ac_save_CFLAGS\"\n@@ -57142,7 +57276,7 @@ sed 's/^/| /' conftest.$ac_ext >&5\n ( exit $ac_status )\n ac_sectionLDflags=no\n fi\n-rm -f core *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext\n+rm -f core core.* *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext\n fi\n     if test \"$ac_test_CFLAGS\" = set; then\n       CFLAGS=\"$ac_save_CFLAGS\""}, {"sha": "b71117b99238995167bd5812d7047c949e24e98b", "filename": "libstdc++-v3/configure.ac", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d05b34592f594b7c91c62d44575add57593aa81/libstdc%2B%2B-v3%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d05b34592f594b7c91c62d44575add57593aa81/libstdc%2B%2B-v3%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.ac?ref=3d05b34592f594b7c91c62d44575add57593aa81", "patch": "@@ -134,6 +134,12 @@ if $GLIBCXX_IS_NATIVE; then\n   AC_CHECK_HEADERS(sys/uio.h)\n   GLIBCXX_CHECK_WRITEV\n \n+  # For the __streamoff_base_type typedef.\n+  GLIBCXX_CHECK_INT64_T\n+\n+  # For LFS support.\n+  GLIBCXX_CHECK_LFS\n+\n   AC_LC_MESSAGES\n \n   AC_TRY_COMPILE("}, {"sha": "935ba7c66f79e1d8597c22188ed0be7d1e55c6ab", "filename": "libstdc++-v3/include/bits/postypes.h", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d05b34592f594b7c91c62d44575add57593aa81/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fpostypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d05b34592f594b7c91c62d44575add57593aa81/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fpostypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fpostypes.h?ref=3d05b34592f594b7c91c62d44575add57593aa81", "patch": "@@ -45,15 +45,25 @@\n \n #include <cwchar> // For mbstate_t\n \n+#ifdef _GLIBCXX_HAVE_STDINT_H\n+#include <stdint.h> // For int64_t\n+#endif\n+\n namespace std\n {\n   // The types streamoff, streampos and wstreampos and the class\n   // template fpos<> are described in clauses 21.1.2, 21.1.3, 27.1.2,\n   // 27.2, 27.4.1, 27.4.3 and D.6. Despite all this verbage, the\n   // behaviour of these types is mostly implementation defined or\n   // unspecified. The behaviour in this implementation is as noted\n-  // below.  \n-  typedef long  \t__streamoff_base_type;\n+  // below.\n+\n+#ifdef _GLIBCXX_HAVE_INT64_T\n+  typedef int64_t       __streamoff_base_type;\n+#else\n+  typedef long long     __streamoff_base_type;\n+#endif\n+\n   typedef ptrdiff_t\tstreamsize; // Signed integral type\n \n   template<typename _StateT>"}]}