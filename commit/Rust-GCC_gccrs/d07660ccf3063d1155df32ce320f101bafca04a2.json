{"sha": "d07660ccf3063d1155df32ce320f101bafca04a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA3NjYwY2NmMzA2M2QxMTU1ZGYzMmNlMzIwZjEwMWJhZmNhMDRhMg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-07-03T09:42:30Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-07-03T09:42:30Z"}, "message": "Makefile.am: Add initializer_list to the headers.\n\n2008-07-03  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* libsupc++/Makefile.am: Add initializer_list to the headers.\n\t* libsupc++/Makefile.in: Regenerate.\n\n\t* libsupc++/initializer_list: Minor cosmetic changes.\n\nFrom-SVN: r137409", "tree": {"sha": "9f20668582a612716e9165420b1090d7447dfb85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f20668582a612716e9165420b1090d7447dfb85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d07660ccf3063d1155df32ce320f101bafca04a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d07660ccf3063d1155df32ce320f101bafca04a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d07660ccf3063d1155df32ce320f101bafca04a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d07660ccf3063d1155df32ce320f101bafca04a2/comments", "author": null, "committer": null, "parents": [{"sha": "1466cf1a6b43180972c82a4bef227f1714a2110f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1466cf1a6b43180972c82a4bef227f1714a2110f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1466cf1a6b43180972c82a4bef227f1714a2110f"}], "stats": {"total": 52, "additions": 33, "deletions": 19}, "files": [{"sha": "6459c758156921f642cb9e241d3224351fc74f51", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d07660ccf3063d1155df32ce320f101bafca04a2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d07660ccf3063d1155df32ce320f101bafca04a2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d07660ccf3063d1155df32ce320f101bafca04a2", "patch": "@@ -1,3 +1,10 @@\n+2008-07-03  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* libsupc++/Makefile.am: Add initializer_list to the headers.\n+\t* libsupc++/Makefile.in: Regenerate.\n+\n+\t* libsupc++/initializer_list: Minor cosmetic changes.\n+\n 2008-07-02  Jason Merrill  <jason@redhat.com>\n \n \t* libsupc++/initializer_list: Uglify and wrap in "}, {"sha": "c0412f0b8ed549c96eb87956055d7e42bd7e4747", "filename": "libstdc++-v3/libsupc++/Makefile.am", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d07660ccf3063d1155df32ce320f101bafca04a2/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d07660ccf3063d1155df32ce320f101bafca04a2/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am?ref=d07660ccf3063d1155df32ce320f101bafca04a2", "patch": "@@ -1,6 +1,6 @@\n ## Makefile for the GNU C++ Support library.\n ##\n-## Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2007\n+## Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n ## Free Software Foundation, Inc.\n ##\n ## Process this file with automake to produce Makefile.in.\n@@ -33,7 +33,8 @@ noinst_LTLIBRARIES = libsupc++convenience.la\n \n \n headers = \\\n-\texception new typeinfo cxxabi.h cxxabi-forced.h exception_defines.h\n+\texception new typeinfo cxxabi.h cxxabi-forced.h exception_defines.h \\\n+\tinitializer_list\n \n if GLIBCXX_HOSTED\n   c_sources = \\"}, {"sha": "0f7cf8c517e09657300261fc0a944b7018cd4520", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d07660ccf3063d1155df32ce320f101bafca04a2/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d07660ccf3063d1155df32ce320f101bafca04a2/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=d07660ccf3063d1155df32ce320f101bafca04a2", "patch": "@@ -354,7 +354,8 @@ toolexeclib_LTLIBRARIES = libsupc++.la\n # 2) integrated libsupc++convenience.la that is to be a part of libstdc++.a\n noinst_LTLIBRARIES = libsupc++convenience.la\n headers = \\\n-\texception new typeinfo cxxabi.h cxxabi-forced.h exception_defines.h\n+\texception new typeinfo cxxabi.h cxxabi-forced.h exception_defines.h \\\n+\tinitializer_list\n \n @GLIBCXX_HOSTED_TRUE@c_sources = \\\n @GLIBCXX_HOSTED_TRUE@\tcp-demangle.c "}, {"sha": "18fb15bc552fcbe33a08aa5bb67dea8fbebcff22", "filename": "libstdc++-v3/libsupc++/initializer_list", "status": "modified", "additions": 21, "deletions": 16, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d07660ccf3063d1155df32ce320f101bafca04a2/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Finitializer_list", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d07660ccf3063d1155df32ce320f101bafca04a2/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Finitializer_list", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Finitializer_list?ref=d07660ccf3063d1155df32ce320f101bafca04a2", "patch": "@@ -40,25 +40,30 @@\n namespace std\n {\n   template<class _E>\n-  class initializer_list\n-  {\n-    const _E* __array;\n-    size_t __len;\n+    class initializer_list\n+    {\n+      const _E* __array;\n+      size_t __len;\n \n-    // The compiler can call a private constructor.\n-    initializer_list(const _E* __a, size_t __l)\n+      // The compiler can call a private constructor.\n+      initializer_list(const _E* __a, size_t __l)\n       : __array(__a), __len(__l) { }\n \n-  public:\n-    initializer_list()\n-      : __array(NULL), __len(0) {}\n-    \n-    size_t size() const\t\t// number of elements\n-    { return __len; }\n-    const _E* begin() const\t// first element\n-    { return __array; }\n-    const _E* end() const\t// one past the last element\n-    { return begin() + size(); }\n+    public:\n+      initializer_list()\n+      : __array(NULL), __len(0) { }\n+\n+      // Number of elements.\n+      size_t size() const\n+      { return __len; }\n+\n+      // First element.\n+      const _E* begin() const\n+      { return __array; }\n+\n+      // One past the last element.\n+      const _E* end() const\n+      { return begin() + size(); }\n   };\n }\n "}]}