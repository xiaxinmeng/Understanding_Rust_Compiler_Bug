{"sha": "cc6fbd80401445d44e4bec590038ab8ae5d4ffc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2M2ZmJkODA0MDE0NDVkNDRlNGJlYzU5MDAzOGFiOGFlNWQ0ZmZjNQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2015-09-15T17:57:49Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-09-15T17:57:49Z"}, "message": "tree-eh.c (lower_try_finally_dup_block): Clear location information on stack restore statements.\n\n\t* tree-eh.c (lower_try_finally_dup_block): Clear location information\n\ton stack restore statements.\n\t(decide_copy_try_finally): Do not consider a stack restore statement as\n\tcoming from sources.\n\nFrom-SVN: r227805", "tree": {"sha": "85b51c6481779050c0f263379eb0de9f37be4046", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85b51c6481779050c0f263379eb0de9f37be4046"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc6fbd80401445d44e4bec590038ab8ae5d4ffc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc6fbd80401445d44e4bec590038ab8ae5d4ffc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc6fbd80401445d44e4bec590038ab8ae5d4ffc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc6fbd80401445d44e4bec590038ab8ae5d4ffc5/comments", "author": null, "committer": null, "parents": [{"sha": "10d48e7cd94b998f2e806d12a878e221eb017979", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10d48e7cd94b998f2e806d12a878e221eb017979", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10d48e7cd94b998f2e806d12a878e221eb017979"}], "stats": {"total": 62, "additions": 34, "deletions": 28}, "files": [{"sha": "0ec14196929bf5ac67bc87b1cd4a9c34567ada31", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6fbd80401445d44e4bec590038ab8ae5d4ffc5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6fbd80401445d44e4bec590038ab8ae5d4ffc5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cc6fbd80401445d44e4bec590038ab8ae5d4ffc5", "patch": "@@ -1,3 +1,10 @@\n+2015-09-15  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* tree-eh.c (lower_try_finally_dup_block): Clear location information\n+\ton stack restore statements.\n+\t(decide_copy_try_finally): Do not consider a stack restore statement as\n+\tcoming from sources.\n+\n 2015-09-15  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/alpha/alpha.c (alpha_expand_block_clear): Use"}, {"sha": "b4eaf3de35d892c0559538c1ef467c8445b2bb18", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6fbd80401445d44e4bec590038ab8ae5d4ffc5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6fbd80401445d44e4bec590038ab8ae5d4ffc5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cc6fbd80401445d44e4bec590038ab8ae5d4ffc5", "patch": "@@ -1,3 +1,8 @@\n+2015-09-15  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/array24.adb: New test.\n+\t* gnat.dg/blocklocs.adb: Delete.\n+\n 2015-09-15  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/67580"}, {"sha": "c6974365fed5f2f6ebba7a749b12812df24a5e3d", "filename": "gcc/testsuite/gnat.dg/array24.adb", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6fbd80401445d44e4bec590038ab8ae5d4ffc5/gcc%2Ftestsuite%2Fgnat.dg%2Farray24.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6fbd80401445d44e4bec590038ab8ae5d4ffc5/gcc%2Ftestsuite%2Fgnat.dg%2Farray24.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Farray24.adb?ref=cc6fbd80401445d44e4bec590038ab8ae5d4ffc5", "patch": "@@ -0,0 +1,11 @@\n+-- { dg-do compile }\n+-- { dg-options \"-fdump-tree-optimized\" }\n+\n+procedure Array24 (N : Natural) is\n+  S : String (1 .. N);\n+  pragma Volatile (S);\n+begin\n+  S := (others => '0');\n+end;\n+\n+-- { dg-final { scan-tree-dump-not \"builtin_unwind_resume\" \"optimized\"  } }"}, {"sha": "20ff7b3013561a465459a90725adcd8f4ae76a31", "filename": "gcc/testsuite/gnat.dg/blocklocs.adb", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d48e7cd94b998f2e806d12a878e221eb017979/gcc%2Ftestsuite%2Fgnat.dg%2Fblocklocs.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d48e7cd94b998f2e806d12a878e221eb017979/gcc%2Ftestsuite%2Fgnat.dg%2Fblocklocs.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fblocklocs.adb?ref=10d48e7cd94b998f2e806d12a878e221eb017979", "patch": "@@ -1,26 +0,0 @@\n--- { dg-do compile { target *-*-linux* } }\n--- { dg-options \"-gdwarf-2\" }\n-\n-procedure Blocklocs (Choice : Integer; N : in out Integer) is\n-begin\n-   if Choice > 0 then\n-      declare -- line 7\n-         S : String (1 .. N * 2);\n-         pragma Volatile (S);\n-      begin\n-\t S := (others => 'B');\n-      end;    -- line 12\n-   else\n-      declare -- line 14\n-\t S : String (1 .. N );\n-\t pragma Volatile (S);\n-      begin\n-\t S := (others => '1');\n-      end;    -- line 19\n-   end if;\n-end;\n-   \n--- { dg-final { scan-assembler \"loc 1 7\" } }\n--- { dg-final { scan-assembler \"loc 1 12\" } }\n--- { dg-final { scan-assembler \"loc 1 14\" } }\n--- { dg-final { scan-assembler \"loc 1 19\" } }"}, {"sha": "1a55d22db32d31729876cc0faf13110e4da29581", "filename": "gcc/tree-eh.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6fbd80401445d44e4bec590038ab8ae5d4ffc5/gcc%2Ftree-eh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6fbd80401445d44e4bec590038ab8ae5d4ffc5/gcc%2Ftree-eh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-eh.c?ref=cc6fbd80401445d44e4bec590038ab8ae5d4ffc5", "patch": "@@ -915,7 +915,12 @@ lower_try_finally_dup_block (gimple_seq seq, struct leh_state *outer_state,\n   for (gsi = gsi_start (new_seq); !gsi_end_p (gsi); gsi_next (&gsi))\n     {\n       gimple stmt = gsi_stmt (gsi);\n-      if (LOCATION_LOCUS (gimple_location (stmt)) == UNKNOWN_LOCATION)\n+      /* We duplicate __builtin_stack_restore at -O0 in the hope of eliminating\n+\t it on the EH paths.  When it is not eliminated, make it transparent in\n+\t the debug info.  */\n+      if (gimple_call_builtin_p (stmt, BUILT_IN_STACK_RESTORE))\n+\tgimple_set_location (stmt, UNKNOWN_LOCATION);\n+      else if (LOCATION_LOCUS (gimple_location (stmt)) == UNKNOWN_LOCATION)\n \t{\n \t  tree block = gimple_block (stmt);\n \t  gimple_set_location (stmt, loc);\n@@ -1604,8 +1609,12 @@ decide_copy_try_finally (int ndests, bool may_throw, gimple_seq finally)\n \n       for (gsi = gsi_start (finally); !gsi_end_p (gsi); gsi_next (&gsi))\n \t{\n+\t  /* Duplicate __builtin_stack_restore in the hope of eliminating it\n+\t     on the EH paths and, consequently, useless cleanups.  */\n \t  gimple stmt = gsi_stmt (gsi);\n-\t  if (!is_gimple_debug (stmt) && !gimple_clobber_p (stmt))\n+\t  if (!is_gimple_debug (stmt)\n+\t      && !gimple_clobber_p (stmt)\n+\t      && !gimple_call_builtin_p (stmt, BUILT_IN_STACK_RESTORE))\n \t    return false;\n \t}\n       return true;"}]}