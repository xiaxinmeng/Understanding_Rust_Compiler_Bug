{"sha": "a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBlMzNjYmNkODk2NjYyN2I2YTlkODhiMTRlNGFkOWVmY2NjOTdiNA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-06-17T14:06:36Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-06-17T14:06:36Z"}, "message": "re PR c++/16128 (Diagnostic of missing argument list within functions)\n\n/cp\n2013-06-17  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/16128\n\t* parser.c (cp_parser_expression_statement): Check whether\n\tcp_parser_expression returns error_mark_node.\n\n/testsuite\n2013-06-17  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/16128\n\t* g++.dg/template/error52.C: New.\n\t* g++.dg/lookup/friend15.C: Update.\n\t* g++.dg/parse/error11.C: Likewise.\n\t* g++.dg/parse/error14.C: Likewise.\n\t* g++.dg/parse/parser-pr28152-2.C: Likewise.\n\t* g++.dg/parse/template25.C: Likewise.\n\t* g++.old-deja/g++.jason/cond.C: Likewise.\n\t* g++.old-deja/g++.mike/for2.C: Likewise.\n\t* g++.old-deja/g++.robertl/eb125.C: Likewise.\n\t* obj-c++.dg/property/dotsyntax-4.mm: Likewise.\n\nFrom-SVN: r200150", "tree": {"sha": "871573df716029e6d815928e435e60f2d3d7dd9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/871573df716029e6d815928e435e60f2d3d7dd9d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4/comments", "author": null, "committer": null, "parents": [{"sha": "617e128198c4cf0804a21f404a014674c39d1cfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/617e128198c4cf0804a21f404a014674c39d1cfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/617e128198c4cf0804a21f404a014674c39d1cfe"}], "stats": {"total": 80, "additions": 57, "deletions": 23}, "files": [{"sha": "b6caf702b3b351b2bc9bfc242b499b0f615c4bf0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4", "patch": "@@ -1,3 +1,9 @@\n+2013-06-17  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/16128\n+\t* parser.c (cp_parser_expression_statement): Check whether\n+\tcp_parser_expression returns error_mark_node.\n+\n 2013-06-14  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/51413"}, {"sha": "d844d1553a024a8beffd15505bc3b8196f59687b", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4", "patch": "@@ -9264,7 +9264,15 @@ cp_parser_expression_statement (cp_parser* parser, tree in_statement_expr)\n   /* If the next token is a ';', then there is no expression\n      statement.  */\n   if (cp_lexer_next_token_is_not (parser->lexer, CPP_SEMICOLON))\n-    statement = cp_parser_expression (parser, /*cast_p=*/false, NULL);\n+    {\n+      statement = cp_parser_expression (parser, /*cast_p=*/false, NULL);\n+      if (statement == error_mark_node\n+\t  && !cp_parser_uncommitted_to_tentative_parse_p (parser))\n+\t{\n+\t  cp_parser_skip_to_end_of_block_or_statement (parser);\n+\t  return error_mark_node;\n+\t}\n+    }\n \n   /* Give a helpful message for \"A<T>::type t;\" and the like.  */\n   if (cp_lexer_next_token_is_not (parser->lexer, CPP_SEMICOLON)"}, {"sha": "147ae19e61b88f659ddc56fd61aa73414583e629", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4", "patch": "@@ -1,11 +1,25 @@\n+2013-06-17  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/16128\n+\t* g++.dg/template/error52.C: New.\n+\t* g++.dg/lookup/friend15.C: Update.\n+\t* g++.dg/parse/error11.C: Likewise.\n+\t* g++.dg/parse/error14.C: Likewise.\n+\t* g++.dg/parse/parser-pr28152-2.C: Likewise.\n+\t* g++.dg/parse/template25.C: Likewise.\n+\t* g++.old-deja/g++.jason/cond.C: Likewise.\n+\t* g++.old-deja/g++.mike/for2.C: Likewise.\n+\t* g++.old-deja/g++.robertl/eb125.C: Likewise.\n+\t* obj-c++.dg/property/dotsyntax-4.mm: Likewise.\n+\n 2013-06-17  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* gcc.target/arm/unaligned-memcpy-2.c (dest): Initialize to\n \tensure alignment.\n \n 2013-06-16  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n \n-\t* c-c++-common/cilk-plus/AN/if_test.c (main2): Fixed a bug of \n+\t* c-c++-common/cilk-plus/AN/if_test.c (main2): Fixed a bug of\n \taccidentally placing minus sign for length instead of stride.\n \n 2013-06-16  Joern Rennecke <joern.rennecke@embecosm.com>"}, {"sha": "e05cc555707ee6eb9dec5a6bfe319f4c790566ff", "filename": "gcc/testsuite/g++.dg/lookup/friend15.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ffriend15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ffriend15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ffriend15.C?ref=a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4", "patch": "@@ -8,5 +8,4 @@ void foo()\n     friend class B;\n   };\n   B::B() {} // { dg-error \"has not been declared\" }\n-// { dg-error \"expected\" \"expected\" { target *-*-* } 10 }\n }"}, {"sha": "6e42ed89afa226bfa93b7ac2070d58d2aceb92a9", "filename": "gcc/testsuite/g++.dg/parse/error11.C", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror11.C?ref=a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4", "patch": "@@ -53,18 +53,16 @@ void func(void)\n // { dg-error \"6:missing template arguments before\" \"template\" { target *-*-* } { 51 } }\n // { dg-error \"9:expected primary-expression before ':' token\" \"primary\" { target *-*-* } 51 }\n // { dg-error \"9:expected '\\]' before ':' token\" \"backslash\" { target *-*-* } 51 }\n-// { dg-error \"9:expected ';' before ':' token\" \"semicolon\" { target *-*-* } 51 }\n // { dg-error \"6:missing template arguments before\" \"template\" { target *-*-* } 52 }\n // { dg-error \"7:expected primary-expression before ':' token\" \"primary\" { target *-*-* } 52 }\n // { dg-error \"7:expected '\\]' before ':' token\" \"backslash\" { target *-*-* } 52 }\n-// { dg-error \"7:expected ';' before ':' token\" \"semicolon\" { target *-*-* } 52 }\n //\n   int Foo[2];\n   Foo[::value] = 0;\n }\n \n template struct Foo<::B>; // { dg-error \"20:'<::' cannot begin\" \"begin\" { target c++98 } }\n-// { dg-message \"20:is an alternate\" \"alt\" { target c++98 } 66 }\n+// { dg-message \"20:is an alternate\" \"alt\" { target c++98 } 64 }\n \n // On the first error message, an additional note about the use of \n //  -fpermissive should be present"}, {"sha": "37a3d2001ffb2796f8bb3ff645e130b02db5f1a7", "filename": "gcc/testsuite/g++.dg/parse/error14.C", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror14.C?ref=a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4", "patch": "@@ -22,5 +22,3 @@ struct X\n }; // { dg-error \"2:expected '.' at end of input\" \"at end of input\" }\n    // { dg-error \"1:expected primary-expression before '.' token\" \"primary\" { target *-*-* } 22 }\n    // { dg-error \"1:expected unqualified-id\" \"unqualified-id\" { target *-*-* } 22 }\n-   // { dg-error \"1:expected ';' before '.' token\" \"function\" { target *-*-* } 22 }\n-"}, {"sha": "c6bc5d39bf30a64c8b0e00938e119280bd3f6763", "filename": "gcc/testsuite/g++.dg/parse/parser-pr28152-2.C", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparser-pr28152-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparser-pr28152-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparser-pr28152-2.C?ref=a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4", "patch": "@@ -7,7 +7,5 @@ main (void)\n   __complex__ float z;\n \n   z = __complex__ (1.90000007326203904e+19, 0.0);   // { dg-error \"expected primary-expression before '__complex__'\" \"primary-expression\" } \n-  // { dg-error \"expected .;. before .__complex__.\" \"semicolon\" { target *-*-* } 9 } \n   z = __complex__ (1.0e+0, 0.0) / z;    // { dg-error \"expected primary-expression before '__complex__'\" \"primaty-expression\" } \n-  // { dg-error \"expected .;. before '__complex__'\" \"semicolon\" { target *-*-* } 11 } \n-  // { dg-error \"at end of input\" \"end\" { target *-*-* } 11 } \n+  // { dg-error \"at end of input\" \"end\" { target *-*-* } 10 }"}, {"sha": "4d08fd0633fb096bdffb7a2731e9a5caccf17344", "filename": "gcc/testsuite/g++.dg/parse/parser-pr28152.C", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparser-pr28152.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparser-pr28152.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparser-pr28152.C?ref=a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4", "patch": "@@ -7,7 +7,5 @@ main (void)\n   _Complex float z;\n \n   z = _Complex (1.90000007326203904e+19, 0.0);   // { dg-error \"expected primary-expression before '_Complex'\" \"primary-expression\" } \n-  // { dg-error \"expected .;. before ._Complex.\" \"semicolon\" { target *-*-* } 9 } \n   z = _Complex (1.0e+0, 0.0) / z;    // { dg-error \"expected primary-expression before '_Complex'\" \"primary-expression\" } \n-  // { dg-error \"expected .;. before '_Complex'\" \"semicolon\" { target *-*-* } 11 } \n-  // { dg-error \"at end of input\" \"end\" { target *-*-* } 11 } \n+  // { dg-error \"at end of input\" \"end\" { target *-*-* } 10 }"}, {"sha": "03017ab3a636cc7f0a575eb76a0c7ea9bcf47ac2", "filename": "gcc/testsuite/g++.dg/parse/template25.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate25.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate25.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate25.C?ref=a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4", "patch": "@@ -10,5 +10,4 @@ void f(void)\n void g(void)\n {\n   template f<int>(); /* { dg-error \"expected primary-expression\" \"primary-expression\" } */\n-  /* { dg-error \"expected ';'\" \"semicolon\" { target *-*-* } 12 } */\n }"}, {"sha": "3350c8e6a787397eecfbde578e00fabc81b13fb6", "filename": "gcc/testsuite/g++.dg/template/error52.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror52.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror52.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror52.C?ref=a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/16128\n+\n+template<typename T>\n+struct A {\n+    };\n+\n+namespace H {\n+    template<typename T>\n+    struct B {};\n+    }\n+\n+A a;             // { dg-error \"template\" }\n+H::B b;          // { dg-error \"template\" }\n+\n+int main() {\n+    A a;         // { dg-error \"template\" }\n+    H::B b;      // { dg-error \"template\" }\n+    return 0;\n+    }"}, {"sha": "605500e784afa2e539f6d0e56179a0053c1cd71d", "filename": "gcc/testsuite/g++.old-deja/g++.jason/cond.C", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fcond.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fcond.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fcond.C?ref=a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4", "patch": "@@ -37,10 +37,9 @@ int main()\n     ;\n \n   A bar;\t\t\t// { dg-error \"not declared\" \"decl\" } \n-  // { dg-error \"expected\" \"exp\" { target *-*-* } 39 }\n   \n   if (enum A { one, two, three } foo = one) // { dg-error \"defined\" \"def\" } \n-  // { dg-error \"not declared\" \"expected\" { target *-*-* } 42 }\n+  // { dg-error \"not declared\" \"expected\" { target *-*-* } 41 }\n     ;\n \n   struct B { operator int () { return 2; } };\n@@ -49,7 +48,7 @@ int main()\n     ;\n \n   if (int f () = 1)\t\t// { dg-warning \"extern\" \"extern\" } \n-  // { dg-error \"is initialized like a variable\" \"var\" { target *-*-* } 51 }\n+  // { dg-error \"is initialized like a variable\" \"var\" { target *-*-* } 50 }\n     ;\n   \n   if (int a[2] = {1, 2})\t// { dg-error \"extended init\" \"\" { target c++98 } }"}, {"sha": "9c201178e20de0cc3c15db23d9e8712f87f38004", "filename": "gcc/testsuite/g++.old-deja/g++.mike/for2.C", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Ffor2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Ffor2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Ffor2.C?ref=a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4", "patch": "@@ -4,19 +4,17 @@ void foo() {\n   for (class C {};;)\n     ;\n   C c;\t\t// { dg-error \"declared\" \"decl\" } \n-  // { dg-error \"expected\" \"exp\" { target *-*-* } 6 }\n }\n \n void bar() {\n   for (enum E {num};;)\n     ;\n   E e;\t\t// { dg-error \"declared\" \"decl\" } \n-  // { dg-error \"expected\" \"exp\" { target *-*-* } 13 }\n }\n \n void bee () {\n   int i = 0;\n   for (int fun() = 0; i != 2; ++i) {\t// { dg-warning \"extern\" \"extern\" }\n-  // { dg-error \"initialized\" \"init\" { target *-*-* } 19 }\n+  // { dg-error \"initialized\" \"init\" { target *-*-* } 17 }\n   }\n }"}, {"sha": "d66dbd8944057578416009c6547e699cbdc7c64e", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb125.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb125.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb125.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb125.C?ref=a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4", "patch": "@@ -16,7 +16,7 @@ class test_square\n \n template <class BOX> void test(BOX *the_box)\n     {x\t\t\t\t// { dg-error \"not declared in this scope\" }\n-    the_box->print();\t\t// { dg-error \"before\" }\n+    the_box->print();\n     }\n \n template void test<> (test_box *);"}, {"sha": "f3292ecf3915226e77574f7193d828b7989c7f89", "filename": "gcc/testsuite/obj-c++.dg/property/dotsyntax-4.mm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fdotsyntax-4.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fdotsyntax-4.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fdotsyntax-4.mm?ref=a0e33cbcd8966627b6a9d88b14e4ad9efccc97b4", "patch": "@@ -35,7 +35,7 @@ int main (void)\n     abort ();\n \n   MyRootClass.int;        /* { dg-error \"expected identifier\" } */\n-                          /* { dg-error \"expected\" \"\" { target *-*-* } 37 } */\n+\n   if (MyRootClass.int)    /* { dg-error \"expected identifier\" } */\n                           /* { dg-error \"expected\" \"\" { target *-*-* } 39 } */\n     abort ();"}]}