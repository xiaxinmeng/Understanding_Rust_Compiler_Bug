{"sha": "b77c24b8c0e484181de399ac7c46f2749add582d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjc3YzI0YjhjMGU0ODQxODFkZTM5OWFjN2M0NmYyNzQ5YWRkNTgyZA==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2018-05-23T10:23:34Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-23T10:23:34Z"}, "message": "[Ada] gnatbind: do not list No_Implementation_Restrictions\n\nWhen the gnatbind -r switch is used, do not list\nNo_Implementation_Restrictions, because after using the new restriction list,\nNo_Implementation_Restrictions will cause an error.\n\n2018-05-23  Bob Duff  <duff@adacore.com>\n\ngcc/ada/\n\n\t* gnatbind.adb (List_Applicable_Restrictions): Add\n\tNo_Implementation_Restrictions to the list of restrictions not to list.\n\tRemove double negative \"not No_Restriction_List\".  Comment the\n\tcommentary that is output, so it won't cause errors if used directly in\n\ta gnat.adc.\n\nFrom-SVN: r260593", "tree": {"sha": "72c496d5e9f0fae277a2ccaa734715e494d30744", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72c496d5e9f0fae277a2ccaa734715e494d30744"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b77c24b8c0e484181de399ac7c46f2749add582d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b77c24b8c0e484181de399ac7c46f2749add582d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b77c24b8c0e484181de399ac7c46f2749add582d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b77c24b8c0e484181de399ac7c46f2749add582d/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b30f86de98a05244dbe3bf57f6afd170f2421f23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b30f86de98a05244dbe3bf57f6afd170f2421f23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b30f86de98a05244dbe3bf57f6afd170f2421f23"}], "stats": {"total": 54, "additions": 34, "deletions": 20}, "files": [{"sha": "d77cecb125a9d7ba35acfba9438b6e90ac0aa281", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b77c24b8c0e484181de399ac7c46f2749add582d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b77c24b8c0e484181de399ac7c46f2749add582d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b77c24b8c0e484181de399ac7c46f2749add582d", "patch": "@@ -1,3 +1,11 @@\n+2018-05-23  Bob Duff  <duff@adacore.com>\n+\n+\t* gnatbind.adb (List_Applicable_Restrictions): Add\n+\tNo_Implementation_Restrictions to the list of restrictions not to list.\n+\tRemove double negative \"not No_Restriction_List\".  Comment the\n+\tcommentary that is output, so it won't cause errors if used directly in\n+\ta gnat.adc.\n+\n 2018-05-23  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_prag.adb (Inherit_Class_Wide_Pre): Refine legality check on"}, {"sha": "5ab1bf1005ff45d3c4c51a029d747a38ee62e1ae", "filename": "gcc/ada/gnatbind.adb", "status": "modified", "additions": 26, "deletions": 20, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b77c24b8c0e484181de399ac7c46f2749add582d/gcc%2Fada%2Fgnatbind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b77c24b8c0e484181de399ac7c46f2749add582d/gcc%2Fada%2Fgnatbind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatbind.adb?ref=b77c24b8c0e484181de399ac7c46f2749add582d", "patch": "@@ -167,55 +167,61 @@ procedure Gnatbind is\n       --  -r switch is used. Not all restrictions are output for the reasons\n       --  given below in the list, and this array is used to test whether\n       --  the corresponding pragma should be listed. True means that it\n-      --  should not be listed.\n+      --  should be listed.\n \n-      No_Restriction_List : constant array (All_Restrictions) of Boolean :=\n-        (No_Standard_Allocators_After_Elaboration => True,\n+      Restrictions_To_List : constant array (All_Restrictions) of Boolean :=\n+        (No_Standard_Allocators_After_Elaboration => False,\n          --  This involves run-time conditions not checkable at compile time\n \n-         No_Anonymous_Allocators         => True,\n+         No_Anonymous_Allocators         => False,\n          --  Premature, since we have not implemented this yet\n \n-         No_Exception_Propagation        => True,\n+         No_Exception_Propagation        => False,\n          --  Modifies code resulting in different exception semantics\n \n-         No_Exceptions                   => True,\n+         No_Exceptions                   => False,\n          --  Has unexpected Suppress (All_Checks) effect\n \n-         No_Implicit_Conditionals        => True,\n+         No_Implicit_Conditionals        => False,\n          --  This could modify and pessimize generated code\n \n-         No_Implicit_Dynamic_Code        => True,\n+         No_Implicit_Dynamic_Code        => False,\n          --  This could modify and pessimize generated code\n \n-         No_Implicit_Loops               => True,\n+         No_Implicit_Loops               => False,\n          --  This could modify and pessimize generated code\n \n-         No_Recursion                    => True,\n+         No_Recursion                    => False,\n          --  Not checkable at compile time\n \n-         No_Reentrancy                   => True,\n+         No_Reentrancy                   => False,\n          --  Not checkable at compile time\n \n-         Max_Entry_Queue_Length           => True,\n+         Max_Entry_Queue_Length          => False,\n          --  Not checkable at compile time\n \n-         Max_Storage_At_Blocking         => True,\n+         Max_Storage_At_Blocking         => False,\n          --  Not checkable at compile time\n \n+         No_Implementation_Restrictions  => False,\n+         --  Listing this one would cause a chicken&egg problem; the program\n+         --  doesn't use implementation-defined restrictions, but after\n+         --  applying the listed restrictions, it probably WILL use them,\n+         --  so No_Implementation_Restrictions will cause an error.\n+\n          --  The following three should not be partition-wide, so the\n          --  following tests are junk to be removed eventually ???\n \n-         No_Specification_Of_Aspect      => True,\n+         No_Specification_Of_Aspect      => False,\n          --  Requires a parameter value, not a count\n \n-         No_Use_Of_Attribute             => True,\n+         No_Use_Of_Attribute             => False,\n          --  Requires a parameter value, not a count\n \n-         No_Use_Of_Pragma                => True,\n+         No_Use_Of_Pragma                => False,\n          --  Requires a parameter value, not a count\n \n-         others                          => False);\n+         others                          => True);\n \n       Additional_Restrictions_Listed : Boolean := False;\n       --  Set True if we have listed header for restrictions\n@@ -279,14 +285,14 @@ procedure Gnatbind is\n       --  Loop through restrictions\n \n       for R in All_Restrictions loop\n-         if not No_Restriction_List (R)\n+         if Restrictions_To_List (R)\n            and then Restriction_Could_Be_Set (R)\n          then\n             if not Additional_Restrictions_Listed then\n                Write_Eol;\n                Write_Line\n-                 (\"The following additional restrictions may be applied to \"\n-                  & \"this partition:\");\n+                 (\"--  The following additional restrictions may be applied \"\n+                  & \"to this partition:\");\n                Additional_Restrictions_Listed := True;\n             end if;\n "}]}