{"sha": "67f9922bb02e5b16b335e88d3dd12dba559c167f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdmOTkyMmJiMDJlNWIxNmIzMzVlODhkM2RkMTJkYmE1NTljMTY3Zg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2007-08-15T00:02:44Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2007-08-15T00:02:44Z"}, "message": "semantics.c (finish_omp_clauses): Strip a NOP_EXPR if constructors and destructors return this.\n\n\t* semantics.c (finish_omp_clauses): Strip a NOP_EXPR if\n\tconstructors and destructors return this.\n\nFrom-SVN: r127499", "tree": {"sha": "552407641fef7fc959d86f925e1a608c3b80574f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/552407641fef7fc959d86f925e1a608c3b80574f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67f9922bb02e5b16b335e88d3dd12dba559c167f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67f9922bb02e5b16b335e88d3dd12dba559c167f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67f9922bb02e5b16b335e88d3dd12dba559c167f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67f9922bb02e5b16b335e88d3dd12dba559c167f/comments", "author": null, "committer": null, "parents": [{"sha": "e7303e85aea62c60818fe9586afab8f397e8a4d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7303e85aea62c60818fe9586afab8f397e8a4d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7303e85aea62c60818fe9586afab8f397e8a4d9"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "e632aacedc131f3e1304cf4ed19cbb96f28272cf", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f9922bb02e5b16b335e88d3dd12dba559c167f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f9922bb02e5b16b335e88d3dd12dba559c167f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=67f9922bb02e5b16b335e88d3dd12dba559c167f", "patch": "@@ -1,3 +1,8 @@\n+2007-08-14  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* semantics.c (finish_omp_clauses): Strip a NOP_EXPR if\n+\tconstructors and destructors return this.\n+\n 2007-08-14  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR c++/27211"}, {"sha": "9d0f9df05d2f483a3b2273d5489409b10b17b325", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f9922bb02e5b16b335e88d3dd12dba559c167f/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f9922bb02e5b16b335e88d3dd12dba559c167f/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=67f9922bb02e5b16b335e88d3dd12dba559c167f", "patch": "@@ -3665,6 +3665,17 @@ finish_omp_clauses (tree clauses)\n \t      t = build_special_member_call (NULL_TREE,\n \t\t\t\t\t     complete_ctor_identifier,\n \t\t\t\t\t     t, inner_type, LOOKUP_NORMAL);\n+\n+\t      if (targetm.cxx.cdtor_returns_this ())\n+\t\t/* Because constructors and destructors return this,\n+\t\t   the call will have been cast to \"void\".  Remove the\n+\t\t   cast here.  We would like to use STRIP_NOPS, but it\n+\t\t   wouldn't work here because TYPE_MODE (t) and\n+\t\t   TYPE_MODE (TREE_OPERAND (t, 0)) are different.\n+\t\t   They are VOIDmode and Pmode, respectively.  */\n+\t\tif (TREE_CODE (t) == NOP_EXPR)\n+\t\t  t = TREE_OPERAND (t, 0);\n+\n \t      t = get_callee_fndecl (t);\n \t      TREE_VEC_ELT (info, 0) = t;\n \t    }\n@@ -3676,6 +3687,17 @@ finish_omp_clauses (tree clauses)\n \t      t = build1 (INDIRECT_REF, inner_type, t);\n \t      t = build_special_member_call (t, complete_dtor_identifier,\n \t\t\t\t\t     NULL, inner_type, LOOKUP_NORMAL);\n+\n+\t      if (targetm.cxx.cdtor_returns_this ())\n+\t\t/* Because constructors and destructors return this,\n+\t\t   the call will have been cast to \"void\".  Remove the\n+\t\t   cast here.  We would like to use STRIP_NOPS, but it\n+\t\t   wouldn't work here because TYPE_MODE (t) and\n+\t\t   TYPE_MODE (TREE_OPERAND (t, 0)) are different.\n+\t\t   They are VOIDmode and Pmode, respectively.  */\n+\t\tif (TREE_CODE (t) == NOP_EXPR)\n+\t\t  t = TREE_OPERAND (t, 0);\n+\n \t      t = get_callee_fndecl (t);\n \t      TREE_VEC_ELT (info, 1) = t;\n \t    }"}]}