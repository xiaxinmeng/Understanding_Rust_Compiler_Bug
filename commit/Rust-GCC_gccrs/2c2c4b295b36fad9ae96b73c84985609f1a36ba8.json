{"sha": "2c2c4b295b36fad9ae96b73c84985609f1a36ba8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmMyYzRiMjk1YjM2ZmFkOWFlOTZiNzNjODQ5ODU2MDlmMWEzNmJhOA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2012-12-22T23:27:49Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2012-12-22T23:27:49Z"}, "message": "re PR lto/54728 (ICE in input_gimple_stmt, at gimple-streamer-in.c:254)\n\n\tPR lto/54728\n\t* cgraph.h (symtab_real_symbol_p): Drop code looking for external functions.\n\t* lto-streamer-out.c (output_symbol_p): New function.\n\t(produce_symtab) Use it.\n\nFrom-SVN: r194700", "tree": {"sha": "6b77a3e817d0f1e1f924bfa1c3f34edc9996c080", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b77a3e817d0f1e1f924bfa1c3f34edc9996c080"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c2c4b295b36fad9ae96b73c84985609f1a36ba8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c2c4b295b36fad9ae96b73c84985609f1a36ba8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c2c4b295b36fad9ae96b73c84985609f1a36ba8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c2c4b295b36fad9ae96b73c84985609f1a36ba8/comments", "author": null, "committer": null, "parents": [{"sha": "4038d0fb1f156f136ea94f8fa17f91150da9cbbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4038d0fb1f156f136ea94f8fa17f91150da9cbbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4038d0fb1f156f136ea94f8fa17f91150da9cbbd"}], "stats": {"total": 37, "additions": 29, "deletions": 8}, "files": [{"sha": "d625bb1d7d79dcfcc14679f4d2ded8c37a57b9f4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c2c4b295b36fad9ae96b73c84985609f1a36ba8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c2c4b295b36fad9ae96b73c84985609f1a36ba8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2c2c4b295b36fad9ae96b73c84985609f1a36ba8", "patch": "@@ -1,3 +1,10 @@\n+2012-12-22  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR lto/54728\n+\t* cgraph.h (symtab_real_symbol_p): Drop code looking for external functions.\n+\t* lto-streamer-out.c (output_symbol_p): New function.\n+\t(produce_symtab) Use it.\n+\n 2012-12-21  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/55355"}, {"sha": "d783862c6673e5de2cbf34a539bac2cd75c2d947", "filename": "gcc/cgraph.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c2c4b295b36fad9ae96b73c84985609f1a36ba8/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c2c4b295b36fad9ae96b73c84985609f1a36ba8/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=2c2c4b295b36fad9ae96b73c84985609f1a36ba8", "patch": "@@ -1357,7 +1357,6 @@ static inline bool\n symtab_real_symbol_p (symtab_node node)\n {\n   struct cgraph_node *cnode;\n-  struct ipa_ref *ref;\n \n   if (!is_a <cgraph_node> (node))\n     return true;\n@@ -1366,11 +1365,6 @@ symtab_real_symbol_p (symtab_node node)\n     return false;\n   if (cnode->abstract_and_needed)\n     return false;\n-  /* We keep virtual clones in symtab.  */\n-  if (!cnode->analyzed\n-      || DECL_EXTERNAL (cnode->symbol.decl))\n-    return (cnode->callers\n-\t    || ipa_ref_list_referring_iterate (&cnode->symbol.ref_list, 0, ref));\n   return true;\n }\n #endif  /* GCC_CGRAPH_H  */"}, {"sha": "85c36c65ab458fefc3f07b06c72fb81b937740f7", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c2c4b295b36fad9ae96b73c84985609f1a36ba8/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c2c4b295b36fad9ae96b73c84985609f1a36ba8/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=2c2c4b295b36fad9ae96b73c84985609f1a36ba8", "patch": "@@ -1257,6 +1257,26 @@ write_symbol (struct streamer_tree_cache_d *cache,\n   lto_output_data_stream (stream, &slot_num, 4);\n }\n \n+/* Return true if NODE should appear in the plugin symbol table.  */\n+\n+bool\n+output_symbol_p (symtab_node node)\n+{\n+  struct cgraph_node *cnode;\n+  struct ipa_ref *ref;\n+\n+  if (!symtab_real_symbol_p (node))\n+    return false;\n+  /* We keep external functions in symtab for sake of inlining\n+     and devirtualization.  We do not want to see them in symbol table as\n+     references.  */\n+  cnode = dyn_cast <cgraph_node> (node);\n+  if (cnode && DECL_EXTERNAL (cnode->symbol.decl))\n+    return (cnode->callers\n+\t    || ipa_ref_list_referring_iterate (&cnode->symbol.ref_list, 0, ref));\n+  return true;\n+}\n+\n \n /* Write an IL symbol table to OB.\n    SET and VSET are cgraph/varpool node sets we are outputting.  */\n@@ -1285,7 +1305,7 @@ produce_symtab (struct output_block *ob)\n     {\n       symtab_node node = lsei_node (lsei);\n \n-      if (!symtab_real_symbol_p (node) || DECL_EXTERNAL (node->symbol.decl))\n+      if (!output_symbol_p (node) || DECL_EXTERNAL (node->symbol.decl))\n \tcontinue;\n       write_symbol (cache, &stream, node->symbol.decl, seen, false);\n     }\n@@ -1294,7 +1314,7 @@ produce_symtab (struct output_block *ob)\n     {\n       symtab_node node = lsei_node (lsei);\n \n-      if (!symtab_real_symbol_p (node) || !DECL_EXTERNAL (node->symbol.decl))\n+      if (!output_symbol_p (node) || !DECL_EXTERNAL (node->symbol.decl))\n \tcontinue;\n       write_symbol (cache, &stream, node->symbol.decl, seen, false);\n     }"}]}