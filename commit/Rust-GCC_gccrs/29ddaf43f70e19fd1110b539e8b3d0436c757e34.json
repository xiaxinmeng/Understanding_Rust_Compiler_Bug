{"sha": "29ddaf43f70e19fd1110b539e8b3d0436c757e34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjlkZGFmNDNmNzBlMTlmZDExMTBiNTM5ZThiM2QwNDM2Yzc1N2UzNA==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-07-23T13:07:34Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-07-27T09:16:25Z"}, "message": "[OpenACC] Clarify sequencing of 'async' data copying vs. profiling events in 'libgomp.oacc-c-c++-common/acc_prof-{init,parallel}-1.c'\n\n... as noticed with GCN offloading.\n\nFix-up for r271346 (commit 5fae049dc272144f8e61af94ee0ba42b270915e5)\n\"OpenACC Profiling Interface (incomplete)\".\n\n\tlibgomp/\n\t* testsuite/libgomp.oacc-c-c++-common/acc_prof-init-1.c: Clarify\n\tsequencing of 'async' data copying vs. profiling events.\n\t* testsuite/libgomp.oacc-c-c++-common/acc_prof-parallel-1.c:\n\tLikewise.", "tree": {"sha": "658c817c49661752eebdfdcee96fbcaa3fe10f63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/658c817c49661752eebdfdcee96fbcaa3fe10f63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29ddaf43f70e19fd1110b539e8b3d0436c757e34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29ddaf43f70e19fd1110b539e8b3d0436c757e34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29ddaf43f70e19fd1110b539e8b3d0436c757e34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29ddaf43f70e19fd1110b539e8b3d0436c757e34/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "599e275d7e0b3fb79ff704d4cb2d8fdb0231116e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/599e275d7e0b3fb79ff704d4cb2d8fdb0231116e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/599e275d7e0b3fb79ff704d4cb2d8fdb0231116e"}], "stats": {"total": 100, "additions": 68, "deletions": 32}, "files": [{"sha": "b5e771554601587bbfecd9a95e8fd3cfc21485ed", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/acc_prof-init-1.c", "status": "modified", "additions": 33, "deletions": 16, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29ddaf43f70e19fd1110b539e8b3d0436c757e34/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc_prof-init-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29ddaf43f70e19fd1110b539e8b3d0436c757e34/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc_prof-init-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc_prof-init-1.c?ref=29ddaf43f70e19fd1110b539e8b3d0436c757e34", "patch": "@@ -19,6 +19,19 @@\n #define DEBUG_printf(...) //__builtin_printf (__VA_ARGS__)\n \n \n+static acc_prof_reg reg;\n+static acc_prof_reg unreg;\n+static acc_prof_lookup_func lookup;\n+void acc_register_library (acc_prof_reg reg_, acc_prof_reg unreg_, acc_prof_lookup_func lookup_)\n+{\n+  DEBUG_printf (\"%s\\n\", __FUNCTION__);\n+\n+  reg = reg_;\n+  unreg = unreg_;\n+  lookup = lookup_;\n+}\n+\n+\n static int state = -1;\n \n #define STATE_OP(state, op) \\\n@@ -34,7 +47,7 @@ static int state = -1;\n \n static acc_device_t acc_device_type;\n static int acc_device_num;\n-static int acc_async;\n+static int acc_async = acc_async_sync;\n \n \n struct tool_info\n@@ -192,6 +205,21 @@ static void cb_compute_construct_end (acc_prof_info *prof_info, acc_event_info *\n \n   assert (state == 11\n \t  || state == 111);\n+#if defined COPYIN\n+  /* In an 'async' setting, this event may be triggered before actual 'async'\n+     data copying has completed.  Given that 'state' appears in 'COPYIN', we\n+     first have to synchronize (that is, let the 'async' 'COPYIN' read the\n+     current 'state' value)...  */\n+  if (acc_async != acc_async_sync)\n+    {\n+      /* \"We're not yet accounting for the fact that _OpenACC events may occur\n+\t during event processing_\"; temporarily disable to avoid deadlock.  */\n+      unreg (acc_ev_none, NULL, acc_toggle_per_thread);\n+      acc_wait (acc_async);\n+      reg (acc_ev_none, NULL, acc_toggle_per_thread);\n+    }\n+  /* ... before modifying it in the following.  */\n+#endif\n   STATE_OP (state, ++);\n \n   assert (tool_info != NULL);\n@@ -240,19 +268,6 @@ static void cb_compute_construct_end (acc_prof_info *prof_info, acc_event_info *\n }\n \n \n-static acc_prof_reg reg;\n-static acc_prof_reg unreg;\n-static acc_prof_lookup_func lookup;\n-void acc_register_library (acc_prof_reg reg_, acc_prof_reg unreg_, acc_prof_lookup_func lookup_)\n-{\n-  DEBUG_printf (\"%s\\n\", __FUNCTION__);\n-\n-  reg = reg_;\n-  unreg = unreg_;\n-  lookup = lookup_;\n-}\n-\n-\n int main()\n {\n   acc_register_library (acc_prof_register, acc_prof_unregister, acc_prof_lookup);\n@@ -271,14 +286,15 @@ int main()\n \n   acc_device_type = acc_get_device_type ();\n   acc_device_num = acc_get_device_num (acc_device_type);\n-  acc_async = 12;\n \n   {\n     int state_init;\n+    acc_async = 12;\n #pragma acc parallel async(acc_async) COPYIN(state) copyout(state_init)\n     {\n       state_init = state;\n     }\n+    acc_async = acc_async_sync;\n #pragma acc wait\n     assert (state_init == 11);\n   }\n@@ -297,14 +313,15 @@ int main()\n \n   acc_device_type = acc_get_device_type ();\n   acc_device_num = acc_get_device_num (acc_device_type);\n-  acc_async = 12;\n \n   {\n     int state_init;\n+    acc_async = 12;\n #pragma acc parallel async(acc_async) COPYIN(state) copyout(state_init)\n     {\n       state_init = state;\n     }\n+    acc_async = acc_async_sync;\n #pragma acc wait\n     assert (state_init == 111);\n   }"}, {"sha": "1f503861cb66700e06c698915807e88177932a7f", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/acc_prof-parallel-1.c", "status": "modified", "additions": 35, "deletions": 16, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29ddaf43f70e19fd1110b539e8b3d0436c757e34/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc_prof-parallel-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29ddaf43f70e19fd1110b539e8b3d0436c757e34/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc_prof-parallel-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc_prof-parallel-1.c?ref=29ddaf43f70e19fd1110b539e8b3d0436c757e34", "patch": "@@ -29,6 +29,19 @@\n #define DEBUG_printf(...) //__builtin_printf (__VA_ARGS__)\n \n \n+static acc_prof_reg reg;\n+static acc_prof_reg unreg;\n+static acc_prof_lookup_func lookup;\n+void acc_register_library (acc_prof_reg reg_, acc_prof_reg unreg_, acc_prof_lookup_func lookup_)\n+{\n+  DEBUG_printf (\"%s\\n\", __FUNCTION__);\n+\n+  reg = reg_;\n+  unreg = unreg_;\n+  lookup = lookup_;\n+}\n+\n+\n static int state = -1;\n \n #define STATE_OP(state, op) \\\n@@ -44,7 +57,7 @@ static int state = -1;\n \n static acc_device_t acc_device_type;\n static int acc_device_num;\n-static int acc_async;\n+static int acc_async = acc_async_sync;\n \n \n struct tool_info\n@@ -235,6 +248,25 @@ static void cb_enter_data_end (acc_prof_info *prof_info, acc_event_info *event_i\n \n   assert (state == 4\n \t  || state == 104);\n+#if defined COPYIN\n+  /* Conceptually, 'acc_ev_enter_data_end' marks the end of data copying,\n+     before 'acc_ev_enqueue_launch_start' marks invoking the compute region.\n+     That's the 'state_init = state;' intended to be captured in the compute\n+     regions.  */\n+  /* In an 'async' setting, this event may be triggered before actual 'async'\n+     data copying has completed.  Given that 'state' appears in 'COPYIN', we\n+     first have to synchronize (that is, let the 'async' 'COPYIN' read the\n+     current 'state' value)...  */\n+  if (acc_async != acc_async_sync)\n+    {\n+      /* \"We're not yet accounting for the fact that _OpenACC events may occur\n+\t during event processing_\"; temporarily disable to avoid deadlock.  */\n+      unreg (acc_ev_none, NULL, acc_toggle_per_thread);\n+      acc_wait (acc_async);\n+      reg (acc_ev_none, NULL, acc_toggle_per_thread);\n+    }\n+  /* ... before modifying it in the following.  */\n+#endif\n   STATE_OP (state, ++);\n \n   assert (tool_info != NULL);\n@@ -664,19 +696,6 @@ static void cb_enqueue_launch_end (acc_prof_info *prof_info, acc_event_info *eve\n }\n \n \n-static acc_prof_reg reg;\n-static acc_prof_reg unreg;\n-static acc_prof_lookup_func lookup;\n-void acc_register_library (acc_prof_reg reg_, acc_prof_reg unreg_, acc_prof_lookup_func lookup_)\n-{\n-  DEBUG_printf (\"%s\\n\", __FUNCTION__);\n-\n-  reg = reg_;\n-  unreg = unreg_;\n-  lookup = lookup_;\n-}\n-\n-\n int main()\n {\n   acc_register_library (acc_prof_register, acc_prof_unregister, acc_prof_lookup);\n@@ -696,7 +715,6 @@ int main()\n \n   acc_device_type = acc_get_device_type ();\n   acc_device_num = acc_get_device_num (acc_device_type);\n-  acc_async = acc_async_sync;\n   assert (state == 0);\n \n   {\n@@ -713,15 +731,16 @@ int main()\n \n   STATE_OP (state, = 100);\n \n-  acc_async = 12;\n   {\n     int state_init;\n+    acc_async = 12;\n #pragma acc parallel async(acc_async) COPYIN(state) copyout(state_init)\n     {\n       asm volatile (\"\" : : : \"memory\"); // TODO PR90488\n \n       state_init = state;\n     }\n+    acc_async = acc_async_sync;\n #pragma acc wait\n     assert (state_init == 104);\n   }"}]}