{"sha": "442e881d89e931d7aa1f6794e6814d6eab08a26f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQyZTg4MWQ4OWU5MzFkN2FhMWY2Nzk0ZTY4MTRkNmVhYjA4YTI2Zg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-09T00:19:53Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-09T00:19:53Z"}, "message": "(__builtin_new): If __new_handler returns, keep trying to allocate the memory.\n\n(__default_new_handler): Add __ to beginning of name to avoid namespace\nclashing.\n\nFrom-SVN: r6506", "tree": {"sha": "efbbd0d09725d3bdb3f40720dc7f44002b9cacba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efbbd0d09725d3bdb3f40720dc7f44002b9cacba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/442e881d89e931d7aa1f6794e6814d6eab08a26f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/442e881d89e931d7aa1f6794e6814d6eab08a26f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/442e881d89e931d7aa1f6794e6814d6eab08a26f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/442e881d89e931d7aa1f6794e6814d6eab08a26f/comments", "author": null, "committer": null, "parents": [{"sha": "a6e9783c2215d94acc0c8d169cdcaa4a72c701e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6e9783c2215d94acc0c8d169cdcaa4a72c701e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6e9783c2215d94acc0c8d169cdcaa4a72c701e7"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "f3c6b0e8d156f5e1db7e04e25c0b8f68e40e37b5", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442e881d89e931d7aa1f6794e6814d6eab08a26f/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442e881d89e931d7aa1f6794e6814d6eab08a26f/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=442e881d89e931d7aa1f6794e6814d6eab08a26f", "patch": "@@ -1,6 +1,6 @@\n /* More subroutines needed by GCC output code on some machines.  */\n /* Compile this one with gcc.  */\n-/* Copyright (C) 1989, 1992, 1993 Free Software Foundation, Inc.\n+/* Copyright (C) 1989, 1992, 1993, 1994 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -1574,8 +1574,12 @@ __builtin_new (size_t sz)\n   if (sz == 0)\n     sz = 1;\n   p = (void *) malloc (sz);\n-  if (p == 0)\n-    (*__new_handler) ();\n+  while (p == 0)\n+    {\n+      (*__new_handler) ();\n+      p = (void *) malloc (sz);\n+    }\n+  \n   return p;\n }\n #endif /* L_op_new */\n@@ -1597,9 +1601,9 @@ __builtin_new (size_t sz)\n typedef void (*vfp)(void);\n \n extern void *__builtin_new (size_t);\n-static void default_new_handler (void);\n+static void __default_new_handler (void);\n \n-vfp __new_handler = default_new_handler;\n+vfp __new_handler = __default_new_handler;\n \n vfp\n __set_new_handler (handler)\n@@ -1608,7 +1612,7 @@ __set_new_handler (handler)\n   vfp prev_handler;\n \n   prev_handler = __new_handler;\n-  if (handler == 0) handler = default_new_handler;\n+  if (handler == 0) handler = __default_new_handler;\n   __new_handler = handler;\n   return prev_handler;\n }\n@@ -1623,7 +1627,7 @@ set_new_handler (handler)\n #define MESSAGE \"Virtual memory exceeded in `new'\\n\"\n \n static void\n-default_new_handler ()\n+__default_new_handler ()\n {\n   /* don't use fprintf (stderr, ...) because it may need to call malloc.  */\n   /* This should really print the name of the program, but that is hard to"}]}