{"sha": "c308e7620eccfbb8f0b5859aab351e3192d761c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzMwOGU3NjIwZWNjZmJiOGYwYjU4NTlhYWIzNTFlMzE5MmQ3NjFjMQ==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2016-07-04T10:19:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-07-04T10:19:10Z"}, "message": "sem_ch3.adb, [...]: Minor reformatting.\n\n2016-07-04  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_ch3.adb, sem_type.adb, sem_ch12.adb, xref_lib.adb,\n\tfreeze.adb, sinput-l.adb, sinput-l.ads, sem_ch4.adb, sem_ch8.adb:\n\tMinor reformatting.\n\nFrom-SVN: r237965", "tree": {"sha": "517b604b4f76308f98fafb0a39765f69077d51e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/517b604b4f76308f98fafb0a39765f69077d51e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c308e7620eccfbb8f0b5859aab351e3192d761c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c308e7620eccfbb8f0b5859aab351e3192d761c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c308e7620eccfbb8f0b5859aab351e3192d761c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c308e7620eccfbb8f0b5859aab351e3192d761c1/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f50f7e2c00bb3cbf404b241d88af8697b33d2279", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f50f7e2c00bb3cbf404b241d88af8697b33d2279", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f50f7e2c00bb3cbf404b241d88af8697b33d2279"}], "stats": {"total": 132, "additions": 72, "deletions": 60}, "files": [{"sha": "251435f07c7df3c79de64c0b90be227cb69ef699", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c308e7620eccfbb8f0b5859aab351e3192d761c1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c308e7620eccfbb8f0b5859aab351e3192d761c1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c308e7620eccfbb8f0b5859aab351e3192d761c1", "patch": "@@ -1,3 +1,9 @@\n+2016-07-04  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch3.adb, sem_type.adb, sem_ch12.adb, xref_lib.adb,\n+\tfreeze.adb, sinput-l.adb, sinput-l.ads, sem_ch4.adb, sem_ch8.adb:\n+\tMinor reformatting.\n+\n 2016-07-04  Justin Squirek  <squirek@adacore.com>\n \n \t* sem_prag.adb (Analyze_Unmodified_Or_Unused and"}, {"sha": "ae04a9d23a3130d9f486f1fc63302e836555c374", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c308e7620eccfbb8f0b5859aab351e3192d761c1/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c308e7620eccfbb8f0b5859aab351e3192d761c1/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=c308e7620eccfbb8f0b5859aab351e3192d761c1", "patch": "@@ -15152,12 +15152,13 @@ package body Sem_Ch12 is\n \n    procedure Set_Copied_Sloc_For_Inherited_Pragma\n      (N : Node_Id;\n-      E : Entity_Id) is\n+      E : Entity_Id)\n+   is\n    begin\n       Create_Instantiation_Source (N, E,\n         Inlined_Body     => False,\n         Inherited_Pragma => True,\n-        A                => S_Adjustment);\n+        Factor           => S_Adjustment);\n    end Set_Copied_Sloc_For_Inherited_Pragma;\n \n    --------------------------------------\n@@ -15169,7 +15170,7 @@ package body Sem_Ch12 is\n       Create_Instantiation_Source (N, E,\n         Inlined_Body     => True,\n         Inherited_Pragma => False,\n-        A                => S_Adjustment);\n+        Factor           => S_Adjustment);\n    end Set_Copied_Sloc_For_Inlined_Body;\n \n    ---------------------"}, {"sha": "16d3e73c8fed30cd732c58232a42dc1179c257ed", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c308e7620eccfbb8f0b5859aab351e3192d761c1/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c308e7620eccfbb8f0b5859aab351e3192d761c1/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=c308e7620eccfbb8f0b5859aab351e3192d761c1", "patch": "@@ -3470,13 +3470,13 @@ package body Sem_Ch3 is\n \n                --  The entity may be a homonym of a private component of the\n                --  enclosing protected object, for which we create a local\n-               --  renaming declaration. The declaration is legal, even\n-               --  if useless when it just captures that component.\n+               --  renaming declaration. The declaration is legal, even if\n+               --  useless when it just captures that component.\n \n                or else\n-                  (Ekind (Scope (Current_Scope)) = E_Protected_Type\n-                  and then Nkind (Parent (Prev_Entity)) =\n-                     N_Object_Renaming_Declaration))\n+                 (Ekind (Scope (Current_Scope)) = E_Protected_Type\n+                   and then Nkind (Parent (Prev_Entity)) =\n+                              N_Object_Renaming_Declaration))\n          then\n             Prev_Entity := Empty;\n          end if;"}, {"sha": "596e8c6b0d2fc5049a01c050aa852d0f903195d8", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c308e7620eccfbb8f0b5859aab351e3192d761c1/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c308e7620eccfbb8f0b5859aab351e3192d761c1/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=c308e7620eccfbb8f0b5859aab351e3192d761c1", "patch": "@@ -3418,12 +3418,13 @@ package body Sem_Ch4 is\n \n                elsif ((Ekind (Current_Scope) = E_Function\n                        and then Is_Predicate_Function (Current_Scope))\n-                     or else (Ekind (Nam) = E_Function\n+                   or else\n+                     (Ekind (Nam) = E_Function\n                        and then Is_Predicate_Function (Nam)))\n-                  and then\n+                 and then\n                    (Base_Type (Underlying_Type (Etype (Formal))) =\n-                     Base_Type (Underlying_Type (Etype (Actual))))\n-                  and then Serious_Errors_Detected = 0\n+                    Base_Type (Underlying_Type (Etype (Actual))))\n+                 and then Serious_Errors_Detected = 0\n                then\n                   Set_Etype (Formal, Etype (Actual));\n                   Next_Actual (Actual);"}, {"sha": "1f2a985be582d0534b42b4af87ae7398b7d40d42", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c308e7620eccfbb8f0b5859aab351e3192d761c1/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c308e7620eccfbb8f0b5859aab351e3192d761c1/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=c308e7620eccfbb8f0b5859aab351e3192d761c1", "patch": "@@ -6996,8 +6996,8 @@ package body Sem_Ch8 is\n                     and then not Is_Tagged_Type (Etype (First_Entity (F)))\n                   then\n                      Error_Msg_N\n-                       (\"prefixed call is only allowed for objects \"\n-                        & \"of a tagged type\", N);\n+                       (\"prefixed call is only allowed for objects of a \"\n+                        & \"tagged type\", N);\n                   end if;\n                end;\n "}, {"sha": "a49eac5aefa3c943fd60acea17e912e303e1297e", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c308e7620eccfbb8f0b5859aab351e3192d761c1/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c308e7620eccfbb8f0b5859aab351e3192d761c1/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=c308e7620eccfbb8f0b5859aab351e3192d761c1", "patch": "@@ -1607,9 +1607,9 @@ package body Sem_Type is\n                   Act1 := Left_Opnd (N);\n                   Act2 := Right_Opnd (N);\n \n-                  --  Use type of second formal, so as to include\n-                  --  exponentiation, where the exponent may be\n-                  --  ambiguous and the result non-universal.\n+                  --  Use the type of tye second formal, so as to include\n+                  --  exponentiation, where the exponent may be ambiguous and\n+                  --  the result non-universal.\n \n                   Next_Formal (F1);\n \n@@ -1619,10 +1619,10 @@ package body Sem_Type is\n \n                if Nkind (Act1) in N_Op\n                  and then Is_Overloaded (Act1)\n-                 and then (Nkind (Act1) in N_Unary_Op\n-                             or else Nkind_In\n-                               (Left_Opnd (Act1), N_Integer_Literal,\n-                                                  N_Real_Literal))\n+                 and then\n+                   (Nkind (Act1) in N_Unary_Op\n+                     or else Nkind_In (Left_Opnd (Act1), N_Integer_Literal,\n+                                                         N_Real_Literal))\n                  and then Nkind_In (Right_Opnd (Act1), N_Integer_Literal,\n                                                        N_Real_Literal)\n                  and then Has_Compatible_Type (Act1, Standard_Boolean)"}, {"sha": "aa9acb897d23fd3acbc5c851bbc91f20bb48ef2b", "filename": "gcc/ada/sinput-l.adb", "status": "modified", "additions": 22, "deletions": 20, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c308e7620eccfbb8f0b5859aab351e3192d761c1/gcc%2Fada%2Fsinput-l.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c308e7620eccfbb8f0b5859aab351e3192d761c1/gcc%2Fada%2Fsinput-l.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-l.adb?ref=c308e7620eccfbb8f0b5859aab351e3192d761c1", "patch": "@@ -91,7 +91,10 @@ package body Sinput.L is\n    -- Adjust_Instantiation_Sloc --\n    -------------------------------\n \n-   procedure Adjust_Instantiation_Sloc (N : Node_Id; A : Sloc_Adjustment) is\n+   procedure Adjust_Instantiation_Sloc\n+     (N      : Node_Id;\n+      Factor : Sloc_Adjustment)\n+   is\n       Loc : constant Source_Ptr := Sloc (N);\n \n    begin\n@@ -100,8 +103,8 @@ package body Sinput.L is\n       --  case, but in practice there seem to be some nodes that get copied\n       --  twice, and this is a defence against that happening.\n \n-      if A.Lo <= Loc and then Loc <= A.Hi then\n-         Set_Sloc (N, Loc + A.Adjust);\n+      if Factor.Lo <= Loc and then Loc <= Factor.Hi then\n+         Set_Sloc (N, Loc + Factor.Adjust);\n       end if;\n    end Adjust_Instantiation_Sloc;\n \n@@ -123,7 +126,7 @@ package body Sinput.L is\n    procedure Create_Instantiation_Source\n      (Inst_Node        : Entity_Id;\n       Template_Id      : Entity_Id;\n-      A                : out Sloc_Adjustment;\n+      Factor           : out Sloc_Adjustment;\n       Inlined_Body     : Boolean := False;\n       Inherited_Pragma : Boolean := False)\n    is\n@@ -132,9 +135,9 @@ package body Sinput.L is\n       Xnew : Source_File_Index;\n \n    begin\n-      Xold := Get_Source_File_Index (Sloc (Template_Id));\n-      A.Lo := Source_File.Table (Xold).Source_First;\n-      A.Hi := Source_File.Table (Xold).Source_Last;\n+      Xold      := Get_Source_File_Index (Sloc (Template_Id));\n+      Factor.Lo := Source_File.Table (Xold).Source_First;\n+      Factor.Hi := Source_File.Table (Xold).Source_Last;\n \n       Source_File.Append (Source_File.Table (Xold));\n       Xnew := Source_File.Last;\n@@ -209,22 +212,22 @@ package body Sinput.L is\n             end if;\n          end if;\n \n-         --  Now we need to compute the new values of Source_First and\n-         --  Source_Last and adjust the source file pointer to have the\n-         --  correct virtual origin for the new range of values.\n+         --  Now compute the new values of Source_First and Source_Last and\n+         --  adjust the source file pointer to have the correct virtual origin\n+         --  for the new range of values.\n \n-         --  Source_First must be greater than the last Source_Last value\n-         --  and also must be a multiple of Source_Align\n+         --  Source_First must be greater than the last Source_Last value and\n+         --  also must be a multiple of Source_Align.\n \n          Snew.Source_First :=\n            ((Source_File.Table (Xnew - 1).Source_Last + Source_Align) /\n               Source_Align) * Source_Align;\n-         A.Adjust := Snew.Source_First - A.Lo;\n-         Snew.Source_Last := A.Hi + A.Adjust;\n+         Factor.Adjust := Snew.Source_First - Factor.Lo;\n+         Snew.Source_Last := Factor.Hi + Factor.Adjust;\n \n          Set_Source_File_Index_Table (Xnew);\n \n-         Snew.Sloc_Adjust := Sold.Sloc_Adjust - A.Adjust;\n+         Snew.Sloc_Adjust := Sold.Sloc_Adjust - Factor.Adjust;\n \n          if Debug_Flag_L then\n             Write_Eol;\n@@ -258,7 +261,6 @@ package body Sinput.L is\n                Write_Str (\"body of package \");\n \n             else pragma Assert (Ekind (Template_Id) = E_Subprogram_Body);\n-\n                if Nkind (Dnod) = N_Procedure_Specification then\n                   Write_Str (\"body of procedure \");\n                else\n@@ -282,11 +284,11 @@ package body Sinput.L is\n             Write_Eol;\n \n             Write_Str (\"  old lo = \");\n-            Write_Int (Int (A.Lo));\n+            Write_Int (Int (Factor.Lo));\n             Write_Eol;\n \n             Write_Str (\"  old hi = \");\n-            Write_Int (Int (A.Hi));\n+            Write_Int (Int (Factor.Hi));\n             Write_Eol;\n \n             Write_Str (\"  new lo = \");\n@@ -298,7 +300,7 @@ package body Sinput.L is\n             Write_Eol;\n \n             Write_Str (\"  adjustment factor = \");\n-            Write_Int (Int (A.Adjust));\n+            Write_Int (Int (Factor.Adjust));\n             Write_Eol;\n \n             Write_Str (\"  instantiation location: \");\n@@ -328,7 +330,7 @@ package body Sinput.L is\n          begin\n             Snew.Source_Text :=\n               To_Source_Buffer_Ptr\n-                (Sold.Source_Text (-A.Adjust)'Address);\n+                (Sold.Source_Text (-Factor.Adjust)'Address);\n          end;\n       end;\n    end Create_Instantiation_Source;"}, {"sha": "f3af4c90b50dd34dfd9a0400ea21632c0888caa3", "filename": "gcc/ada/sinput-l.ads", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c308e7620eccfbb8f0b5859aab351e3192d761c1/gcc%2Fada%2Fsinput-l.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c308e7620eccfbb8f0b5859aab351e3192d761c1/gcc%2Fada%2Fsinput-l.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-l.ads?ref=c308e7620eccfbb8f0b5859aab351e3192d761c1", "patch": "@@ -79,32 +79,34 @@ package Sinput.L is\n    -------------------------------------------------\n \n    type Sloc_Adjustment is private;\n-   --  Type returned by Create_Instantiation_Source for use in subsequent\n-   --  calls to Adjust_Instantiation_Sloc.\n+   --  Type returned by Create_Instantiation_Source for use in subsequent calls\n+   --  to Adjust_Instantiation_Sloc.\n+\n+   procedure Adjust_Instantiation_Sloc\n+     (N      : Node_Id;\n+      Factor : Sloc_Adjustment);\n+   --  The instantiation tree is created by copying the tree of the generic\n+   --  template (including the original Sloc values), and then applying\n+   --  Adjust_Instantiation_Sloc to each copied node to adjust the Sloc to\n+   --  reference the source entry for the instantiation.\n \n    procedure Create_Instantiation_Source\n      (Inst_Node        : Entity_Id;\n       Template_Id      : Entity_Id;\n-      A                : out Sloc_Adjustment;\n+      Factor           : out Sloc_Adjustment;\n       Inlined_Body     : Boolean := False;\n       Inherited_Pragma : Boolean := False);\n    --  This procedure creates the source table entry for an instantiation.\n    --  Inst_Node is the instantiation node, and Template_Id is the defining\n    --  identifier of the generic declaration or body unit as appropriate.\n-   --  A is set to an adjustment factor to be used in subsequent calls to\n-   --  Adjust_Instantiation_Sloc. The instantiation mechanism is also used\n-   --  for inlined function and procedure calls. The parameter Inlined_Body is\n-   --  set to True in such cases. This is used for generating error messages\n-   --  that distinguish these two cases, otherwise the two cases are handled\n-   --  identically. Similarly, the instantiation mechanism is also used\n-   --  for inherited class-wide pre- and postconditions. The parameter\n-   --  Inherited_Pragma is set to True in such cases.\n-\n-   procedure Adjust_Instantiation_Sloc (N : Node_Id; A : Sloc_Adjustment);\n-   --  The instantiation tree is created by copying the tree of the generic\n-   --  template (including the original Sloc values), and then applying\n-   --  Adjust_Instantiation_Sloc to each copied node to adjust the Sloc\n-   --  to reference the source entry for the instantiation.\n+   --  Factor is set to an adjustment factor to be used in subsequent calls to\n+   --  Adjust_Instantiation_Sloc. The instantiation mechanism is also used for\n+   --  inlined function and procedure calls. The parameter Inlined_Body is set\n+   --  to True in such cases. This is used for generating error messages that\n+   --  distinguish these two cases, otherwise the two cases are handled\n+   --  identically. Similarly, the instantiation mechanism is also used for\n+   --  inherited class-wide pre- and postconditions. Parameter Inherited_Pragma\n+   --  is set to True in such cases.\n \n private\n "}, {"sha": "3f882b0a570e8e6a873cf3608cdf97660d82130f", "filename": "gcc/ada/xref_lib.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c308e7620eccfbb8f0b5859aab351e3192d761c1/gcc%2Fada%2Fxref_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c308e7620eccfbb8f0b5859aab351e3192d761c1/gcc%2Fada%2Fxref_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxref_lib.adb?ref=c308e7620eccfbb8f0b5859aab351e3192d761c1", "patch": "@@ -890,8 +890,8 @@ package body Xref_Lib is\n \n       Parse_Token (Ali, Ptr, E_Name);\n \n-      --  Exit if the symbol does not match or if we have a local\n-      --  symbol and we do not want it or if the file is unknown.\n+      --  Exit if the symbol does not match or if we have a local symbol and we\n+      --  do not want it or if the file is unknown.\n \n       if File.X_File = Empty_File then\n          return;"}]}