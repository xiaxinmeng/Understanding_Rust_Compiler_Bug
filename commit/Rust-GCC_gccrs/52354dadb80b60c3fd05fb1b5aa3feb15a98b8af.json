{"sha": "52354dadb80b60c3fd05fb1b5aa3feb15a98b8af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTIzNTRkYWRiODBiNjBjM2ZkMDVmYjFiNWFhM2ZlYjE1YTk4YjhhZg==", "commit": {"author": {"name": "Thomas K\u00f6nig", "email": "tkoenig@gcc.gnu.org", "date": "2020-01-16T21:09:37Z"}, "committer": {"name": "Thomas K\u00f6nig", "email": "tkoenig@gcc.gnu.org", "date": "2020-01-19T09:23:18Z"}, "message": "Check for illegal reference in function.", "tree": {"sha": "fe6ec0a52facd95ff1a1f3047b1f65e148ce88df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe6ec0a52facd95ff1a1f3047b1f65e148ce88df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52354dadb80b60c3fd05fb1b5aa3feb15a98b8af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52354dadb80b60c3fd05fb1b5aa3feb15a98b8af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52354dadb80b60c3fd05fb1b5aa3feb15a98b8af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52354dadb80b60c3fd05fb1b5aa3feb15a98b8af/comments", "author": null, "committer": null, "parents": [{"sha": "2589beb1d1a065f75a5515c9e2698de12a421913", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2589beb1d1a065f75a5515c9e2698de12a421913", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2589beb1d1a065f75a5515c9e2698de12a421913"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "3f412fd8c20be8c79802468c47f98b82bbed3e44", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52354dadb80b60c3fd05fb1b5aa3feb15a98b8af/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52354dadb80b60c3fd05fb1b5aa3feb15a98b8af/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=52354dadb80b60c3fd05fb1b5aa3feb15a98b8af", "patch": "@@ -1,3 +1,10 @@\n+2020-01-19  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/44960\n+\t* primary.c (gfc_match_rvalue): Break after setting MATCH_ERROR.\n+\t* resolve.c (resolve_function): Issue error when a\n+\tfunction call contains a reference.\n+\n 2020-01-17  Mark Eggleston  <mark.eggleston@codethink.com>\n \n \tPR fortran/93236"}, {"sha": "bd50827bb150c12485b04f514e922b2f3e691363", "filename": "gcc/fortran/primary.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52354dadb80b60c3fd05fb1b5aa3feb15a98b8af/gcc%2Ffortran%2Fprimary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52354dadb80b60c3fd05fb1b5aa3feb15a98b8af/gcc%2Ffortran%2Fprimary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fprimary.c?ref=52354dadb80b60c3fd05fb1b5aa3feb15a98b8af", "patch": "@@ -3661,6 +3661,7 @@ gfc_match_rvalue (gfc_expr **result)\n \t  gfc_error (\"The leftmost part-ref in a data-ref cannot be a \"\n \t\t     \"function reference at %C\");\n \t  m = MATCH_ERROR;\n+\t  break;\n \t}\n \n       m = MATCH_YES;"}, {"sha": "e840aec62f234864f5a34ccd203dee04744954fa", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52354dadb80b60c3fd05fb1b5aa3feb15a98b8af/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52354dadb80b60c3fd05fb1b5aa3feb15a98b8af/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=52354dadb80b60c3fd05fb1b5aa3feb15a98b8af", "patch": "@@ -3129,6 +3129,13 @@ resolve_function (gfc_expr *expr)\n \t  || sym->intmod_sym_id == GFC_ISYM_CAF_SEND))\n     return true;\n \n+  if (expr->ref)\n+    {\n+      gfc_error (\"Unexpected junk after %qs at %L\", expr->symtree->n.sym->name,\n+\t\t &expr->where);\n+      return false;\n+    }\n+\n   if (sym && sym->attr.intrinsic\n       && !gfc_resolve_intrinsic (sym, &expr->where))\n     return false;"}, {"sha": "9066c173bbdea07101d79792af4af86dd9a02f0f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52354dadb80b60c3fd05fb1b5aa3feb15a98b8af/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52354dadb80b60c3fd05fb1b5aa3feb15a98b8af/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=52354dadb80b60c3fd05fb1b5aa3feb15a98b8af", "patch": "@@ -1,3 +1,9 @@\n+2020-01-19  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/44960\n+\t* gfortran.dg/function_reference_1.f90: New test.\n+\t* gfortran.dg/function_reference_2.f90: New test.\n+\n 2020-01-18  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/92833"}, {"sha": "be634c9dd4b271c8c3fba4b55d03838398d67ea8", "filename": "gcc/testsuite/gfortran.dg/function_reference_1.f90", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52354dadb80b60c3fd05fb1b5aa3feb15a98b8af/gcc%2Ftestsuite%2Fgfortran.dg%2Ffunction_reference_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52354dadb80b60c3fd05fb1b5aa3feb15a98b8af/gcc%2Ftestsuite%2Fgfortran.dg%2Ffunction_reference_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffunction_reference_1.f90?ref=52354dadb80b60c3fd05fb1b5aa3feb15a98b8af", "patch": "@@ -0,0 +1,11 @@\n+! { dg-do compile }\n+! PR 44960 - this was erroneusly accepted.\n+! Original test case by Daniel Franke.\n+\n+type t\n+  integer :: a\n+end type t\n+type(t) :: foo\n+print *, foo(1)%a ! { dg-error \"Unexpected junk\" }\n+end\n+"}, {"sha": "375c58bb6d2c4195a813151e09e1349d1b87bdc8", "filename": "gcc/testsuite/gfortran.dg/function_reference_2.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52354dadb80b60c3fd05fb1b5aa3feb15a98b8af/gcc%2Ftestsuite%2Fgfortran.dg%2Ffunction_reference_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52354dadb80b60c3fd05fb1b5aa3feb15a98b8af/gcc%2Ftestsuite%2Fgfortran.dg%2Ffunction_reference_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffunction_reference_2.f90?ref=52354dadb80b60c3fd05fb1b5aa3feb15a98b8af", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do compile }\n+! PR 44960 - improve the error message\n+program main\n+  type t\n+  integer :: a\n+end type t\n+type(t) :: foo\n+external foo\n+i = foo(1)%1 ! { dg-error \"leftmost part-ref in a data-ref cannot be a function reference\" }\n+end"}]}