{"sha": "1e4fa9b11255ea15a3510dfd1e3011ffebdcc530", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU0ZmE5YjExMjU1ZWExNWEzNTEwZGZkMWUzMDExZmZlYmRjYzUzMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-10-31T16:36:53Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-10-31T16:36:53Z"}, "message": "re PR tree-optimization/77860 (ICE in gimple_build_assign_1, at gimple.c:420)\n\n\tPR tree-optimization/77860\n\t* tree-ssa-reassoc.c (eliminate_using_constants): Handle\n\talso integral complex and vector constants.\n\n\t* gcc.dg/pr77860.c: New test.\n\nFrom-SVN: r241706", "tree": {"sha": "02f439cea6eedaa3c53b1e6b687c8ca3064e8283", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02f439cea6eedaa3c53b1e6b687c8ca3064e8283"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e4fa9b11255ea15a3510dfd1e3011ffebdcc530", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e4fa9b11255ea15a3510dfd1e3011ffebdcc530", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e4fa9b11255ea15a3510dfd1e3011ffebdcc530", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e4fa9b11255ea15a3510dfd1e3011ffebdcc530/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "520c47e803fb8c94b864d4a1dd0f79153eae7835", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/520c47e803fb8c94b864d4a1dd0f79153eae7835", "html_url": "https://github.com/Rust-GCC/gccrs/commit/520c47e803fb8c94b864d4a1dd0f79153eae7835"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "d596b177cae13681a39922db7b10eda3ddd42e6f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e4fa9b11255ea15a3510dfd1e3011ffebdcc530/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e4fa9b11255ea15a3510dfd1e3011ffebdcc530/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e4fa9b11255ea15a3510dfd1e3011ffebdcc530", "patch": "@@ -1,5 +1,9 @@\n 2016-10-31  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/77860\n+\t* tree-ssa-reassoc.c (eliminate_using_constants): Handle\n+\talso integral complex and vector constants.\n+\n \t* dwarf2out.c (dwarf2out_define, dwarf2out_undef, output_macinfo_op,\n \toptimize_macinfo_range, save_macinfo_strings): Replace\n \tDW_MACRO_GNU_* constants with corresponding DW_MACRO_* constants."}, {"sha": "037096cb4f926cf4c74025d5659ed13e6b8d602d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e4fa9b11255ea15a3510dfd1e3011ffebdcc530/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e4fa9b11255ea15a3510dfd1e3011ffebdcc530/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1e4fa9b11255ea15a3510dfd1e3011ffebdcc530", "patch": "@@ -1,3 +1,8 @@\n+2016-10-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/77860\n+\t* gcc.dg/pr77860.c: New test.\n+\n 2016-10-31  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>\n \n \t* gcc.dg/lto/pr60449_0.c: Skip for avr.\n@@ -12,7 +17,6 @@\n \t* g++.dg/warn/Wshadow-local-1.C: Likewise.\n \t* g++.dg/warn/Wshadow-local-2.C: Likewise.\n \n-\n 2016-10-30  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \tPR tree-optimization/71915"}, {"sha": "04346b16e779fc1cd7cd4d80e5a9f511a1b5207e", "filename": "gcc/testsuite/gcc.dg/pr77860.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e4fa9b11255ea15a3510dfd1e3011ffebdcc530/gcc%2Ftestsuite%2Fgcc.dg%2Fpr77860.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e4fa9b11255ea15a3510dfd1e3011ffebdcc530/gcc%2Ftestsuite%2Fgcc.dg%2Fpr77860.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr77860.c?ref=1e4fa9b11255ea15a3510dfd1e3011ffebdcc530", "patch": "@@ -0,0 +1,13 @@\n+/* PR tree-optimization/77860 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fno-tree-vrp -fno-tree-forwprop -Wno-psabi\" } */\n+\n+typedef unsigned short V __attribute__((vector_size (16)));\n+\n+V\n+foo (V x, V y)\n+{\n+  V a = -x;\n+  V b = -y;\n+  return a * b;\n+}"}, {"sha": "5dcf6720605456251221885b9f278f99423a287f", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e4fa9b11255ea15a3510dfd1e3011ffebdcc530/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e4fa9b11255ea15a3510dfd1e3011ffebdcc530/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=1e4fa9b11255ea15a3510dfd1e3011ffebdcc530", "patch": "@@ -924,7 +924,7 @@ eliminate_using_constants (enum tree_code opcode,\n   tree type = TREE_TYPE (oelast->op);\n \n   if (oelast->rank == 0\n-      && (INTEGRAL_TYPE_P (type) || FLOAT_TYPE_P (type)))\n+      && (ANY_INTEGRAL_TYPE_P (type) || FLOAT_TYPE_P (type)))\n     {\n       switch (opcode)\n \t{"}]}