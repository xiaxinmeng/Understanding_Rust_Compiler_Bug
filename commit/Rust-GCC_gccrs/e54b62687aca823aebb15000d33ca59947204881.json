{"sha": "e54b62687aca823aebb15000d33ca59947204881", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU0YjYyNjg3YWNhODIzYWViYjE1MDAwZDMzY2E1OTk0NzIwNDg4MQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-01-26T15:59:34Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2019-01-26T15:59:34Z"}, "message": "trans.c (gnat_to_gnu): Use DECL_SIZE_UNIT instead of TYPE_SIZE_UNIT for the size to be assigned by a...\n\n\t* gcc-interface/trans.c (gnat_to_gnu) <N_Assignment_Statement>: Use\n\tDECL_SIZE_UNIT instead of TYPE_SIZE_UNIT for the size to be assigned\n\tby a call to memset if the LHS is a DECL.\n\nFrom-SVN: r268296", "tree": {"sha": "c2e68c9bb82f728bbb67b15006f98b911bb05121", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2e68c9bb82f728bbb67b15006f98b911bb05121"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e54b62687aca823aebb15000d33ca59947204881", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e54b62687aca823aebb15000d33ca59947204881", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e54b62687aca823aebb15000d33ca59947204881", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e54b62687aca823aebb15000d33ca59947204881/comments", "author": null, "committer": null, "parents": [{"sha": "685ae5b8717e08e0d7b5f147ed4c6bfeff10c4f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/685ae5b8717e08e0d7b5f147ed4c6bfeff10c4f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/685ae5b8717e08e0d7b5f147ed4c6bfeff10c4f6"}], "stats": {"total": 49, "additions": 43, "deletions": 6}, "files": [{"sha": "55507d343bc009a4f54d4e74d2f45c40176b7b76", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e54b62687aca823aebb15000d33ca59947204881/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e54b62687aca823aebb15000d33ca59947204881/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e54b62687aca823aebb15000d33ca59947204881", "patch": "@@ -1,3 +1,9 @@\n+2019-01-26  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (gnat_to_gnu) <N_Assignment_Statement>: Use\n+\tDECL_SIZE_UNIT instead of TYPE_SIZE_UNIT for the size to be assigned\n+\tby a call to memset if the LHS is a DECL.\n+\n 2019-01-26  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (struct loop_info_d): Remove artificial field."}, {"sha": "db8e4c2d58f0d3c369a85d5623a07455d1c74c25", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e54b62687aca823aebb15000d33ca59947204881/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e54b62687aca823aebb15000d33ca59947204881/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=e54b62687aca823aebb15000d33ca59947204881", "patch": "@@ -7742,20 +7742,25 @@ gnat_to_gnu (Node_Id gnat_node)\n \t\t= real_zerop (gnu_rhs)\n \t\t  ? integer_zero_node\n \t\t  : fold_convert (integer_type_node, gnu_rhs);\n-\t      tree to = gnu_lhs;\n-\t      tree type = TREE_TYPE (to);\n-\t      tree size\n-\t        = SUBSTITUTE_PLACEHOLDER_IN_EXPR (TYPE_SIZE_UNIT (type), to);\n-\t      tree to_ptr = build_fold_addr_expr (to);\n+\t      tree dest = build_fold_addr_expr (gnu_lhs);\n \t      tree t = builtin_decl_explicit (BUILT_IN_MEMSET);\n+\t      /* Be extra careful not to write too much data.  */\n+\t      tree size;\n+\t      if (TREE_CODE (gnu_lhs) == COMPONENT_REF)\n+\t\tsize = DECL_SIZE_UNIT (TREE_OPERAND (gnu_lhs, 1));\n+\t      else if (DECL_P (gnu_lhs))\n+\t\tsize = DECL_SIZE_UNIT (gnu_lhs);\n+\t      else\n+\t\tsize = TYPE_SIZE_UNIT (TREE_TYPE (gnu_lhs));\n+\t      size = SUBSTITUTE_PLACEHOLDER_IN_EXPR (size, gnu_lhs);\n \t      if (TREE_CODE (value) == INTEGER_CST && !integer_zerop (value))\n \t\t{\n \t\t  tree mask\n \t\t    = build_int_cst (integer_type_node,\n \t\t\t\t     ((HOST_WIDE_INT) 1 << BITS_PER_UNIT) - 1);\n \t\t  value = int_const_binop (BIT_AND_EXPR, value, mask);\n \t\t}\n-\t      gnu_result = build_call_expr (t, 3, to_ptr, value, size);\n+\t      gnu_result = build_call_expr (t, 3, dest, value, size);\n \t    }\n \n \t  /* Otherwise build a regular assignment.  */"}, {"sha": "4d55dee26b74c8a06bcc394a590584785848adaa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e54b62687aca823aebb15000d33ca59947204881/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e54b62687aca823aebb15000d33ca59947204881/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e54b62687aca823aebb15000d33ca59947204881", "patch": "@@ -1,3 +1,7 @@\n+2019-01-26  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/array34.adb: New test.\n+\n 2019-01-26  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR preprocessor/88974"}, {"sha": "62809cd0269154c769afb45a91a126719608c43e", "filename": "gcc/testsuite/gnat.dg/array34.adb", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e54b62687aca823aebb15000d33ca59947204881/gcc%2Ftestsuite%2Fgnat.dg%2Farray34.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e54b62687aca823aebb15000d33ca59947204881/gcc%2Ftestsuite%2Fgnat.dg%2Farray34.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Farray34.adb?ref=e54b62687aca823aebb15000d33ca59947204881", "patch": "@@ -0,0 +1,22 @@\n+--  { dg-do run }\n+\n+procedure Array34 is\n+\n+  type Arr is array (1 .. 6) of Short_Short_Integer;\n+  for Arr'Alignment use 4;\n+\n+  type Rec is record\n+    A : Arr;\n+    B: Short_Integer;\n+  end record;\n+  pragma Pack (Rec);\n+\n+  R : Rec;\n+\n+begin\n+  R.B := 31415;\n+  R.A := (others => 0);\n+  if R.B /= 31415 then\n+    raise Program_Error;\n+  end if;\n+end;"}]}