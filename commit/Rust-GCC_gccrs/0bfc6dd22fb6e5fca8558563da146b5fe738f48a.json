{"sha": "0bfc6dd22fb6e5fca8558563da146b5fe738f48a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGJmYzZkZDIyZmI2ZTVmY2E4NTU4NTYzZGExNDZiNWZlNzM4ZjQ4YQ==", "commit": {"author": {"name": "Craig Burley", "email": "craig@jcb-sc.com", "date": "1999-05-01T22:29:28Z"}, "committer": {"name": "Craig Burley", "email": "burley@gcc.gnu.org", "date": "1999-05-01T22:29:28Z"}, "message": "clean up both u77-test.f versions\n\nFrom-SVN: r26717", "tree": {"sha": "bb54db34c7fc5f8c8b23554a8fc6dcbf9b10becc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb54db34c7fc5f8c8b23554a8fc6dcbf9b10becc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0bfc6dd22fb6e5fca8558563da146b5fe738f48a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bfc6dd22fb6e5fca8558563da146b5fe738f48a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bfc6dd22fb6e5fca8558563da146b5fe738f48a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bfc6dd22fb6e5fca8558563da146b5fe738f48a/comments", "author": null, "committer": null, "parents": [{"sha": "91f2aa2287f1972b07503b5985476675b17bea03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91f2aa2287f1972b07503b5985476675b17bea03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91f2aa2287f1972b07503b5985476675b17bea03"}], "stats": {"total": 275, "additions": 199, "deletions": 76}, "files": [{"sha": "b4633b758169ef200ae8f7d872d0796593e4c10a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bfc6dd22fb6e5fca8558563da146b5fe738f48a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bfc6dd22fb6e5fca8558563da146b5fe738f48a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0bfc6dd22fb6e5fca8558563da146b5fe738f48a", "patch": "@@ -1,3 +1,9 @@\n+1999-05-01  Craig Burley  <craig@jcb-sc.com>\n+\n+\t* g77.f-torture/execute/u77-test.f: Modify to be more like\n+\tlibf2c/libU77 version, bringing patches to that version here.\n+\tAdd suitable commentary.\n+\n Sun Apr 25 12:28:59 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* gcc.dg/990424-1.c: New test."}, {"sha": "25647191ddf3945969dafc7dfc715b0c7e524821", "filename": "gcc/testsuite/g77.f-torture/execute/u77-test.f", "status": "modified", "additions": 59, "deletions": 34, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bfc6dd22fb6e5fca8558563da146b5fe738f48a/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fu77-test.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bfc6dd22fb6e5fca8558563da146b5fe738f48a/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fu77-test.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fu77-test.f?ref=0bfc6dd22fb6e5fca8558563da146b5fe738f48a", "patch": "@@ -2,8 +2,20 @@\n *     hard to test things where you can't guarantee the result.  Have a\n *     good squint at what it prints, though detected errors will cause \n *     starred messages.\n+*\n+* NOTE! This is the testsuite version, so it should compile and\n+* execute on all targets, and either run to completion (with\n+* success status) or fail (by calling abort).  The *other* version,\n+* which is a bit more interactive and tests a couple of things\n+* this one cannot, should be generally the same, and is in\n+* libf2c/libU77/u77-test.f.  Please keep it up-to-date.\n \n       implicit none\n+\n+      external hostnm\n+*     intrinsic hostnm\n+      integer hostnm\n+\n       integer i, j, k, ltarray (9), idat (3), count, rate, count_max,\n      +     pid, mask\n       real tarray1(2), tarray2(2), r1, r2, sum\n@@ -40,7 +52,7 @@\n         line = 'and 6 isn''t a tty device (ISATTY)'\n       end if\n       write (6,'(1X,A)') line(:lenstr(line))\n-      \n+\n *     regression test for compiler crash fixed by JCB 1998-08-04 com.c\n       sigret = signal(2, ctrlc)\n \n@@ -85,19 +97,19 @@\n         write (6,*)\n      +       'Results of ETIME and DTIME differ by more than a second:',\n      +       r1, r2\n-      call abort\n+        call doabort\n       end if\n       call sgladd (sum, tarray1(1), tarray1(2))\n       if (r1 .ne. sum) then\n         write (6,*) '*** ETIME didn''t return sum of the array: ',\n      +       r1, ' /= ', tarray1(1), '+', tarray1(2)\n-        call abort\n+        call doabort\n       end if\n       call sgladd (sum, tarray2(1), tarray2(2))\n       if (r2 .ne. sum) then\n         write (6,*) '*** DTIME didn''t return sum of the array: ',\n      +       r2, ' /= ', tarray2(1), '+', tarray2(2)\n-        call abort\n+        call doabort\n       end if\n       write (6, '(A,3F10.3)')\n      +     ' Elapsed total, user, system time (ETIME): ',\n@@ -116,13 +128,13 @@\n       if (r1 .ne. sum) then\n         write (6,*) '*** ETIME didn''t return sum of the array: ',\n      +       r1, ' /= ', tarray1(1), '+', tarray1(2)\n-        call abort\n+        call doabort\n       end if\n       call sgladd (sum, tarray2(1), tarray2(2))\n       if (r2 .ne. sum) then\n         write (6,*) '*** DTIME didn''t return sum of the array: ',\n      +       r2, ' /= ', tarray2(1), '+', tarray2(2)\n-        call abort\n+        call doabort\n       end if\n       write (6, '(A,3F10.3)')\n      +     ' Differences in total, user, system time (DTIME): ',\n@@ -134,11 +146,11 @@\n \n       call idate (i,j,k)\n       call idate (idat)\n-      write (6,*) 'IDATE d,m,y: ',idat\n-      print *,  '... and the VXT version: ', i,j,k\n+      write (6,*) 'IDATE (date,month,year): ',idat\n+      print *,  '... and the VXT version (month,date,year): ', i,j,k\n       if (i/=idat(2) .or. j/=idat(1) .or. k/=mod(idat(3),100)) then\n-        print *, '*** vxt and u77 versions don''t agree'\n-        call abort\n+        print *, '*** VXT and U77 versions don''t agree'\n+        call doabort\n       end if\n       call time(line(:8))\n       print *, 'TIME: ', line(:8)\n@@ -150,29 +162,27 @@\n *     compiler crash fixed by 1998-10-01 com.c change\n       if (rand(0).lt.0.0 .or. rand(0).gt.1.0) then\n         write (6,*) '*** rand(0) error'\n-        call abort()\n+        call doabort()\n       end if\n       i = getcwd(wd)\n       if (i.ne.0) then\n         call perror ('*** getcwd')\n-        call abort\n+        call doabort\n       else\n         write (6,*) 'Current directory is \"'//wd(:lenstr(wd))//'\"'\n       end if\n       call chdir ('.',i)\n       if (i.ne.0) then\n         write (6,*) '***CHDIR to \".\": ', i\n-        call abort\n+        call doabort\n+      end if\n+      i=hostnm(wd)\n+      if(i.ne.0) then\n+        call perror ('*** hostnm')\n+        call doabort\n+      else\n+        write (6,*) 'Host name is ', wd(:lenstr(wd))\n       end if\n-CCC   Don't do this, beacuse some targets need -lsocket, which we don't\n-CCC   have a mechanism for supplying.\n-CCC      i=hostnm(wd)\n-CCC      if(i.ne.0) then\n-CCC        call perror ('*** hostnm')\n-CCC        call abort\n-CCC      else\n-CCC        write (6,*) 'Host name is ', wd(:lenstr(wd))\n-CCC      end if\n       i = access('/dev/null ', 'rw')\n       if (i.ne.0) write (6,*) '***Read/write ACCESS to /dev/null: ', i\n       write (6,*) 'Creating file \"foo\" for testing...'\n@@ -188,41 +198,41 @@\n       call fseek(3,0,0,*10)\n       go to 20\n  10   write(6,*) '***FSEEK failed'\n-      call abort\n+      call doabort\n  20   call fgetc(3, c,i)\n       if (i.ne.0) then\n         write(6,*) '***FGETC: ', i\n-        call abort\n+        call doabort\n       end if\n       if (c.ne.'c') then\n         write(6,*) '***FGETC read the wrong thing: ', ichar(c)\n-        call abort\n+        call doabort\n       end if\n       i= ftell(3)\n       if (i.ne.1) then\n         write(6,*) '***FTELL offset: ', i\n-        call abort\n+        call doabort\n       end if\n       call chmod ('foo', 'a+w',i)\n       if (i.ne.0) then\n         write (6,*) '***CHMOD of \"foo\": ', i\n-        call abort\n+        call doabort\n       end if\n       i = fstat (3, fstatb)\n       if (i.ne.0) then\n         write (6,*) '***FSTAT of \"foo\": ', i\n-        call abort\n+        call doabort\n       end if\n       i = stat ('foo', statb)\n       if (i.ne.0) then\n         write (6,*) '***STAT of \"foo\": ', i\n-        call abort\n+        call doabort\n       end if\n       write (6,*) '  with stat array ', statb\n       if (statb(5).ne.getuid () .or. statb(6).ne.getgid() .or. statb(4)\n      +     .ne. 1) then\n         write (6,*) '*** FSTAT uid, gid or nlink is wrong'\n-        call abort\n+        call doabort\n       end if\n       do i=1,13\n         if (fstatb (i) .ne. statb (i)) then\n@@ -245,17 +255,17 @@\n       call link ('foo ', 'bar ',i)\n       if (i.ne.0) then\n         write (6,*) '***LINK \"foo\" to \"bar\" failed: ', i\n-        call abort\n+        call doabort\n       end if\n       call unlink ('foo',i)\n       if (i.ne.0) then\n         write (6,*) '***UNLINK \"foo\" failed: ', i\n-        call abort\n+        call doabort\n       end if\n       call unlink ('foo',i)\n       if (i.eq.0) then\n         write (6,*) '***UNLINK \"foo\" again: ', i\n-        call abort\n+        call doabort\n       end if\n       call gerror (gerr)\n       i = ierrno()\n@@ -266,7 +276,7 @@\n       call getarg (0, line)\n       call perror (line (:lenstr (line)))\n       call unlink ('bar')\n-C      WRITE (6,*) 'You should see exit status 1'\n+C     WRITE (6,*) 'You should see exit status 1'\n       CALL EXIT(0)\n  99   END\n \n@@ -294,5 +304,20 @@ subroutine sgladd(sum,left,right)\n *     signal handler\n       subroutine ctrlc\n       print *, 'Got ^C'\n+      call doabort\n+      end\n+\n+      subroutine doabort\n+* For this version, call the ABORT intrinsic.\n+      intrinsic abort\n       call abort\n       end\n+\n+* Testsuite version only.\n+* Don't actually reference the HOSTNM intrinsic, because some targets\n+* need -lsocket, which we don't have a mechanism for supplying.\n+      integer function hostnm(nm)\n+      character*(*) nm\n+      nm = 'not determined by this version of u77-test.f'\n+      hostnm = 0\n+      end"}, {"sha": "9d3403a84b215202817c92002a7757d00327117b", "filename": "libf2c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bfc6dd22fb6e5fca8558563da146b5fe738f48a/libf2c%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bfc6dd22fb6e5fca8558563da146b5fe738f48a/libf2c%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FChangeLog?ref=0bfc6dd22fb6e5fca8558563da146b5fe738f48a", "patch": "@@ -1,3 +1,9 @@\n+Sat May  1 23:35:18 1999  Craig Burley  <craig@jcb-sc.com>\n+\n+\t* libU77/u77-test.f: Modify to be more like testsuite\n+\tversion, bringing patches to that version here.\n+\tAdd suitable commentary.\n+\n Sat Apr 24 11:02:48 1999  Craig Burley  <craig@jcb-sc.com>\n \n \t* Makefile.in (s-libi77, s-libf77, s-libu77): Revert"}, {"sha": "e45132ad95aa44aa4384f7a856b24a900510704d", "filename": "libf2c/libU77/u77-test.f", "status": "modified", "additions": 128, "deletions": 42, "changes": 170, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bfc6dd22fb6e5fca8558563da146b5fe738f48a/libf2c%2FlibU77%2Fu77-test.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bfc6dd22fb6e5fca8558563da146b5fe738f48a/libf2c%2FlibU77%2Fu77-test.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fu77-test.f?ref=0bfc6dd22fb6e5fca8558563da146b5fe738f48a", "patch": "@@ -2,17 +2,32 @@\n *     hard to test things where you can't guarantee the result.  Have a\n *     good squint at what it prints, though detected errors will cause \n *     starred messages.\n+*\n+* NOTE! This is the libU77 version, so it should be a bit more\n+* \"interactive\" than the testsuite version, which is in\n+* gcc/testsuite/g77.f-torture/execute/u77-test.f.\n+* This version purposely exits with a \"failure\" status, to test\n+* returning of non-zero status, and it doesn't call the ABORT\n+* intrinsic (it substitutes an EXTERNAL stub, so the code can be\n+* kept nearly the same in both copies).  Also, it goes ahead and\n+* tests the HOSTNM intrinsic.  Please keep the other copy up-to-date when\n+* you modify this one.\n \n       implicit none\n+\n+*     external hostnm\n+      intrinsic hostnm\n+      integer hostnm\n+\n       integer i, j, k, ltarray (9), idat (3), count, rate, count_max,\n      +     pid, mask\n       real tarray1(2), tarray2(2), r1, r2, sum\n       intrinsic getpid, getuid, getgid, ierrno, gerror,\n      +     fnum, isatty, getarg, access, unlink, fstat,\n-     +     stat, lstat, getcwd, gmtime, hostnm, etime, chmod,\n+     +     stat, lstat, getcwd, gmtime, etime, chmod,\n      +     chdir, fgetc, fputc, system_clock, second, idate, secnds,\n      +     time, ctime, fdate, ttynam, date_and_time\n-      external lenstr\n+      external lenstr, ctrlc\n       integer lenstr\n       logical l\n       character gerr*80, c*1\n@@ -21,6 +36,7 @@\n       integer fstatb (13), statb (13)\n       integer *2 i2zero\n       integer values(8)\n+      integer(kind=7) sigret\n \n       ctim = ctime(time())\n       WRITE (6,'(A/)') '1 GNU libU77 test at: ' // ctim\n@@ -29,7 +45,7 @@\n      +     // ' Unix i/o units ', fnum(5), fnum(6)\n       if (lnblnk('foo ').ne.3 .or. len_trim('foo ').ne.3) then\n         print *, 'LNBLNK or LEN_TRIM failed'\n-        call exit(1)\n+        call abort\n       end if\n       l= isatty(6)\n       line2 = ttynam(6)\n@@ -40,6 +56,9 @@\n       end if\n       write (6,'(1X,A)') line(:lenstr(line))\n \n+*     regression test for compiler crash fixed by JCB 1998-08-04 com.c\n+      sigret = signal(2, ctrlc)\n+\n       pid = getpid()\n       WRITE (6,'(A,I10)') ' Process id (GETPID): ', pid\n       WRITE (6,'(A,I10)') ' User id (GETUID): ', GETUID ()\n@@ -76,21 +95,25 @@\n \n c consistency-check etime vs. dtime for first call\n       r1 = etime (tarray1)\n-      if (r1.ne.tarray1(1)+tarray1(2))\n-     +     write (6,*) '*** ETIME didn''t return sum of the array: ',\n-     +     r1, ' /= ', tarray1(1), '+', tarray1(2)\n       r2 = dtime (tarray2)\n-      if (abs (r1-r2).gt.1.0) write (6,*)\n-     +     'Results of ETIME and DTIME differ by more than a second:',\n-     +     r1, r2\n+      if (abs (r1-r2).gt.1.0) then\n+        write (6,*)\n+     +       'Results of ETIME and DTIME differ by more than a second:',\n+     +       r1, r2\n+        call doabort\n+      end if\n       call sgladd (sum, tarray1(1), tarray1(2))\n-      if (r1 .ne. sum)\n-     +     write (6,*) '*** ETIME didn''t return sum of the array: ',\n-     +     r1, ' /= ', tarray1(1), '+', tarray1(2)\n+      if (r1 .ne. sum) then\n+        write (6,*) '*** ETIME didn''t return sum of the array: ',\n+     +       r1, ' /= ', tarray1(1), '+', tarray1(2)\n+        call doabort\n+      end if\n       call sgladd (sum, tarray2(1), tarray2(2))\n-      if (r2 .ne. sum)\n-     +     write (6,*) '*** DTIME didn''t return sum of the array: ',\n-     +     r2, ' /= ', tarray2(1), '+', tarray2(2)\n+      if (r2 .ne. sum) then\n+        write (6,*) '*** DTIME didn''t return sum of the array: ',\n+     +       r2, ' /= ', tarray2(1), '+', tarray2(2)\n+        call doabort\n+      end if\n       write (6, '(A,3F10.3)')\n      +     ' Elapsed total, user, system time (ETIME): ',\n      +     r1, tarray1\n@@ -105,13 +128,17 @@\n       end do\n       r1 = etime (tarray1)\n       call sgladd (sum, tarray1(1), tarray1(2))\n-      if (r1 .ne. sum)\n-     +     write (6,*) '*** ETIME didn''t return sum of the array: ',\n-     +     r1, ' /= ', tarray1(1), '+', tarray1(2)\n+      if (r1 .ne. sum) then\n+        write (6,*) '*** ETIME didn''t return sum of the array: ',\n+     +       r1, ' /= ', tarray1(1), '+', tarray1(2)\n+        call doabort\n+      end if\n       call sgladd (sum, tarray2(1), tarray2(2))\n-      if (r2 .ne. sum)\n-     +     write (6,*) '*** DTIME didn''t return sum of the array: ',\n-     +     r2, ' /= ', tarray2(1), '+', tarray2(2)\n+      if (r2 .ne. sum) then\n+        write (6,*) '*** DTIME didn''t return sum of the array: ',\n+     +       r2, ' /= ', tarray2(1), '+', tarray2(2)\n+        call doabort\n+      end if\n       write (6, '(A,3F10.3)')\n      +     ' Differences in total, user, system time (DTIME): ',\n      +     r2, tarray2\n@@ -122,26 +149,40 @@\n \n       call idate (i,j,k)\n       call idate (idat)\n-      write (6,*) 'IDATE d,m,y: ',idat\n-      print *,  '... and the VXT version: ', i,j,k\n+      write (6,*) 'IDATE (date,month,year): ',idat\n+      print *,  '... and the VXT version (month,date,year): ', i,j,k\n+      if (i/=idat(2) .or. j/=idat(1) .or. k/=mod(idat(3),100)) then\n+        print *, '*** VXT and U77 versions don''t agree'\n+        call doabort\n+      end if\n       call time(line(:8))\n       print *, 'TIME: ', line(:8)\n       write (6,*) 'SECNDS(0.0) returns: ',secnds(0.0)\n       write (6,*) 'SECOND returns: ', second()\n       call dumdum(r1)\n       call second(r1)\n       write (6,*) 'CALL SECOND returns: ', r1\n+*     compiler crash fixed by 1998-10-01 com.c change\n+      if (rand(0).lt.0.0 .or. rand(0).gt.1.0) then\n+        write (6,*) '*** rand(0) error'\n+        call doabort()\n+      end if\n       i = getcwd(wd)\n       if (i.ne.0) then\n         call perror ('*** getcwd')\n+        call doabort\n       else\n         write (6,*) 'Current directory is \"'//wd(:lenstr(wd))//'\"'\n       end if\n       call chdir ('.',i)\n-      if (i.ne.0) write (6,*) '***CHDIR to \".\": ', i\n+      if (i.ne.0) then\n+        write (6,*) '***CHDIR to \".\": ', i\n+        call doabort\n+      end if\n       i=hostnm(wd)\n       if(i.ne.0) then\n         call perror ('*** hostnm')\n+        call doabort\n       else\n         write (6,*) 'Host name is ', wd(:lenstr(wd))\n       end if\n@@ -160,42 +201,75 @@\n       call fseek(3,0,0,*10)\n       go to 20\n  10   write(6,*) '***FSEEK failed'\n+      call doabort\n  20   call fgetc(3, c,i)\n-      if (i.ne.0) write(6,*) '***FGETC: ', i\n-      if (c.ne.'c') write(6,*) '***FGETC read the wrong thing: ',\n-     +     ichar(c)\n+      if (i.ne.0) then\n+        write(6,*) '***FGETC: ', i\n+        call doabort\n+      end if\n+      if (c.ne.'c') then\n+        write(6,*) '***FGETC read the wrong thing: ', ichar(c)\n+        call doabort\n+      end if\n       i= ftell(3)\n-      if (i.ne.1) write(6,*) '***FTELL offset: ', i\n+      if (i.ne.1) then\n+        write(6,*) '***FTELL offset: ', i\n+        call doabort\n+      end if\n       call chmod ('foo', 'a+w',i)\n-      if (i.ne.0) write (6,*) '***CHMOD of \"foo\": ', i\n+      if (i.ne.0) then\n+        write (6,*) '***CHMOD of \"foo\": ', i\n+        call doabort\n+      end if\n       i = fstat (3, fstatb)\n-      if (i.ne.0) write (6,*) '***FSTAT of \"foo\": ', i\n+      if (i.ne.0) then\n+        write (6,*) '***FSTAT of \"foo\": ', i\n+        call doabort\n+      end if\n       i = stat ('foo', statb)\n-      if (i.ne.0) write (6,*) '***STAT of \"foo\": ', i\n+      if (i.ne.0) then\n+        write (6,*) '***STAT of \"foo\": ', i\n+        call doabort\n+      end if\n       write (6,*) '  with stat array ', statb\n       if (statb(5).ne.getuid () .or. statb(6).ne.getgid() .or. statb(4)\n-     +     .ne. 1) write (6,*) '*** FSTAT uid, gid or nlink is wrong'\n+     +     .ne. 1) then\n+        write (6,*) '*** FSTAT uid, gid or nlink is wrong'\n+        call doabort\n+      end if\n       do i=1,13\n-        if (fstatb (i) .ne. statb (i))\n-     +       write (6,*) '*** FSTAT and STAT don''t agree on '// '\n-     +       array element ', i, ' value ', fstatb (i), statb (i)\n+        if (fstatb (i) .ne. statb (i)) then\n+          write (6,*) '*** FSTAT and STAT don''t agree on '// '\n+     +         array element ', i, ' value ', fstatb (i), statb (i)\n+          call doabort\n+        end if\n       end do\n       i = lstat ('foo', fstatb)\n       do i=1,13\n-        if (fstatb (i) .ne. statb (i))\n-     +       write (6,*) '*** LSTAT and STAT don''t agree on '// '\n-     +       array element ', i, ' value ', fstatb (i), statb (i)\n+        if (fstatb (i) .ne. statb (i)) then\n+          write (6,*) '*** LSTAT and STAT don''t agree on '//\n+     +         'array element ', i, ' value ', fstatb (i), statb (i)\n+          call doabort\n+        end if\n       end do\n \n C     in case it exists already:\n       call unlink ('bar',i)\n       call link ('foo ', 'bar ',i)\n-      if (i.ne.0)\n-     +     write (6,*) '***LINK \"foo\" to \"bar\" failed: ', i\n+      if (i.ne.0) then\n+        write (6,*) '***LINK \"foo\" to \"bar\" failed: ', i\n+        call doabort\n+      end if\n       call unlink ('foo',i)\n-      if (i.ne.0) write (6,*) '***UNLINK \"foo\" failed: ', i\n+      if (i.ne.0) then\n+        write (6,*) '***UNLINK \"foo\" failed: ', i\n+        call doabort\n+      end if\n       call unlink ('foo',i)\n-      if (i.eq.0) write (6,*) '***UNLINK \"foo\" again: ', i\n+      if (i.eq.0) then\n+        write (6,*) '***UNLINK \"foo\" again: ', i\n+        call doabort\n+      end if\n       call gerror (gerr)\n       i = ierrno()\n       write (6,'(A,I3,A/1X,A)') ' The current error number is: ',\n@@ -229,3 +303,15 @@ subroutine sgladd(sum,left,right)\n       real sum,left,right\n       sum = left+right\n       end\n+\n+*     signal handler\n+      subroutine ctrlc\n+      print *, 'Got ^C'\n+      call doabort\n+      end\n+\n+      subroutine doabort\n+* For this version, print out all problems noticed.\n+*     intrinsic abort\n+*     call abort\n+      end"}]}