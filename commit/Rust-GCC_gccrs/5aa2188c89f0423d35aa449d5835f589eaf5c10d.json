{"sha": "5aa2188c89f0423d35aa449d5835f589eaf5c10d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWFhMjE4OGM4OWYwNDIzZDM1YWE0NDlkNTgzNWY1ODllYWY1YzEwZA==", "commit": {"author": {"name": "Thomas Young", "email": "wenzhang5800@gmail.com", "date": "2021-06-29T10:27:12Z"}, "committer": {"name": "Thomas Young", "email": "wenzhang5800@gmail.com", "date": "2021-06-30T13:51:25Z"}, "message": "exit immediately when the type checker find a error", "tree": {"sha": "1063cebf7afb7c4331a577aec6124c902d4e9bbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1063cebf7afb7c4331a577aec6124c902d4e9bbd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5aa2188c89f0423d35aa449d5835f589eaf5c10d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5aa2188c89f0423d35aa449d5835f589eaf5c10d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5aa2188c89f0423d35aa449d5835f589eaf5c10d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5aa2188c89f0423d35aa449d5835f589eaf5c10d/comments", "author": {"login": "thomasyonug", "id": 17464490, "node_id": "MDQ6VXNlcjE3NDY0NDkw", "avatar_url": "https://avatars.githubusercontent.com/u/17464490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasyonug", "html_url": "https://github.com/thomasyonug", "followers_url": "https://api.github.com/users/thomasyonug/followers", "following_url": "https://api.github.com/users/thomasyonug/following{/other_user}", "gists_url": "https://api.github.com/users/thomasyonug/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasyonug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasyonug/subscriptions", "organizations_url": "https://api.github.com/users/thomasyonug/orgs", "repos_url": "https://api.github.com/users/thomasyonug/repos", "events_url": "https://api.github.com/users/thomasyonug/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasyonug/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thomasyonug", "id": 17464490, "node_id": "MDQ6VXNlcjE3NDY0NDkw", "avatar_url": "https://avatars.githubusercontent.com/u/17464490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasyonug", "html_url": "https://github.com/thomasyonug", "followers_url": "https://api.github.com/users/thomasyonug/followers", "following_url": "https://api.github.com/users/thomasyonug/following{/other_user}", "gists_url": "https://api.github.com/users/thomasyonug/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasyonug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasyonug/subscriptions", "organizations_url": "https://api.github.com/users/thomasyonug/orgs", "repos_url": "https://api.github.com/users/thomasyonug/repos", "events_url": "https://api.github.com/users/thomasyonug/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasyonug/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb95f8f5ca0fed11f2c7a9b539a3c120ce054d8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb95f8f5ca0fed11f2c7a9b539a3c120ce054d8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb95f8f5ca0fed11f2c7a9b539a3c120ce054d8e"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "eb77c07f12529aaeafae8d688a1171ac19fe2252", "filename": "gcc/rust/rust-session-manager.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5aa2188c89f0423d35aa449d5835f589eaf5c10d/gcc%2Frust%2Frust-session-manager.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5aa2188c89f0423d35aa449d5835f589eaf5c10d/gcc%2Frust%2Frust-session-manager.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-session-manager.cc?ref=5aa2188c89f0423d35aa449d5835f589eaf5c10d", "patch": "@@ -572,6 +572,9 @@ Session::parse_file (const char *filename)\n       dump_type_resolution (hir);\n     }\n \n+  if (saw_errors ())\n+    return;\n+\n   // liveness analysis\n   std::set<HirId> live_symbols = Analysis::MarkLive::Analysis (hir);\n "}]}