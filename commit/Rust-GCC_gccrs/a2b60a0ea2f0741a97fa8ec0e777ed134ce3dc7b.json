{"sha": "a2b60a0ea2f0741a97fa8ec0e777ed134ce3dc7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJiNjBhMGVhMmYwNzQxYTk3ZmE4ZWMwZTc3N2VkMTM0Y2UzZGM3Yg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchell@usa.net", "date": "1998-04-26T13:36:02Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1998-04-26T13:36:02Z"}, "message": "pt.c (mabybe_get_template_decl_from_type_decl): New function.\n\n\t* pt.c (mabybe_get_template_decl_from_type_decl): New function.\n\t(lookup_template_class): Use it.\n\nFrom-SVN: r19414", "tree": {"sha": "c56ff3ea37e9f7771b4a2bf732cb7bbe2096b295", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c56ff3ea37e9f7771b4a2bf732cb7bbe2096b295"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2b60a0ea2f0741a97fa8ec0e777ed134ce3dc7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2b60a0ea2f0741a97fa8ec0e777ed134ce3dc7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2b60a0ea2f0741a97fa8ec0e777ed134ce3dc7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2b60a0ea2f0741a97fa8ec0e777ed134ce3dc7b/comments", "author": null, "committer": null, "parents": [{"sha": "42da2fd81b78cbd3cf2951b3d35c01d8693977ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42da2fd81b78cbd3cf2951b3d35c01d8693977ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42da2fd81b78cbd3cf2951b3d35c01d8693977ac"}], "stats": {"total": 40, "additions": 37, "deletions": 3}, "files": [{"sha": "a6bd63f614a6b58321c2408ac6048543174da119", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2b60a0ea2f0741a97fa8ec0e777ed134ce3dc7b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2b60a0ea2f0741a97fa8ec0e777ed134ce3dc7b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a2b60a0ea2f0741a97fa8ec0e777ed134ce3dc7b", "patch": "@@ -3,6 +3,9 @@ Sun Apr 26 12:10:18 1998  Mark Mitchell  <mmitchell@usa.net>\n \t* pt.c (check_explicit_specialization): Handle overloaded\n \tconstructors correctly.\n \n+\t* pt.c (mabybe_get_template_decl_from_type_decl): New function.\n+\t(lookup_template_class): Use it.\n+\n Thu Apr 23 21:19:06 1998  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* cp-tree.def: Add WRAPPER.  USER_CONV now only has two ops."}, {"sha": "a0c4e6b5fea83b83f6476ab05aff323322751c3c", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2b60a0ea2f0741a97fa8ec0e777ed134ce3dc7b/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2b60a0ea2f0741a97fa8ec0e777ed134ce3dc7b/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=a2b60a0ea2f0741a97fa8ec0e777ed134ce3dc7b", "patch": "@@ -102,6 +102,7 @@ static int mark_template_parm PROTO((tree, void *));\n static tree tsubst_friend_function PROTO((tree, tree));\n static tree get_bindings_real PROTO((tree, tree, tree, int));\n static int template_decl_level PROTO((tree));\n+static tree maybe_get_template_decl_from_type_decl PROTO((tree));\n \n /* Do any processing required when DECL (a member template declaration\n    using TEMPLATE_PARAMETERS as its innermost parameter list) is\n@@ -2695,6 +2696,23 @@ lookup_template_function (fns, arglist)\n \t\t    fns, arglist);  \n }\n \n+/* Within the scope of a template class S<T>, the name S gets bound\n+   (in build_self_reference) to a TYPE_DECL for the class, not a\n+   TEMPLATE_DECL.  If DECL is a TYPE_DECL for current_class_type,\n+   or one of its enclosing classes, and that type is a template,\n+   return the associated TEMPLATE_DECL.  Otherwise, the original\n+   DECL is returned.  */\n+\n+tree\n+maybe_get_template_decl_from_type_decl (decl)\n+     tree decl;\n+{\n+  return (decl != NULL_TREE\n+\t  && TREE_CODE (decl) == TYPE_DECL \n+\t  && DECL_ARTIFICIAL (decl)\n+\t  && CLASSTYPE_TEMPLATE_INFO (TREE_TYPE (decl))) \n+    ? CLASSTYPE_TI_TEMPLATE (TREE_TYPE (decl)) : decl;\n+}\n \n /* Given an IDENTIFIER_NODE (type TEMPLATE_DECL) and a chain of\n    parameters, find the desired type.\n@@ -2727,9 +2745,11 @@ lookup_template_class (d1, arglist, in_decl, context)\n \ttemplate = IDENTIFIER_LOCAL_VALUE (d1);\n       else\n \t{\n-\t  template = IDENTIFIER_NAMESPACE_VALUE (d1); /* XXX */\n-\t  if (! template)\n-\t    template = IDENTIFIER_CLASS_VALUE (d1);\n+\t  template = \n+\t    maybe_get_template_decl_from_type_decl\n+\t    (IDENTIFIER_CLASS_VALUE (d1));\n+\t  if (template == NULL_TREE)\n+\t    template = IDENTIFIER_NAMESPACE_VALUE (d1);\n \t}\n       if (template)\n \tcontext = DECL_CONTEXT (template);"}, {"sha": "c0bf0cd83abc7fedda26043f8ba0bb8471bb38ab", "filename": "gcc/testsuite/g++.old-deja/g++.pt/memclass8.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2b60a0ea2f0741a97fa8ec0e777ed134ce3dc7b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemclass8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2b60a0ea2f0741a97fa8ec0e777ed134ce3dc7b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemclass8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemclass8.C?ref=a2b60a0ea2f0741a97fa8ec0e777ed134ce3dc7b", "patch": "@@ -0,0 +1,11 @@\n+// Build don't link:\n+\n+template <class T>\n+class S\n+{\n+  template <class U>\n+  class S2 {\n+    S2(const S2<U>& s2u) {}\n+  };\n+};\n+ "}]}