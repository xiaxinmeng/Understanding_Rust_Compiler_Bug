{"sha": "9ecfa8de88025917ab3442db65caf62abd46d538", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWVjZmE4ZGU4ODAyNTkxN2FiMzQ0MmRiNjVjYWY2MmFiZDQ2ZDUzOA==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2010-12-14T21:57:31Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2010-12-14T21:57:31Z"}, "message": "objects.c (object_copy): Do not #undef as we are no longer including objc/objc-api.h.\n\n2010-12-14  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n        * objects.c (object_copy): Do not #undef as we are no longer\n        including objc/objc-api.h.\n        * selector.c: Include objc/runtime.h and\n        objc-private/module-abi-8.h.  Do not include objc/objc-api.h and\n        objc/encoding.h.  Updated\n        (__objc_register_selectors_from_class): Use struct\n        objc_method_list * instead of MethodList_t.\n        (__objc_register_selectors_from_list): Use Method instead of\n        Method_t.\n        (struct objc_method_description_list): Do not define here.\n        (__objc_register_instance_methods_to_class): Use struct\n        objc_method_list * instead of MethodList_t and Method instead of\n        Method_t.\n\nFrom-SVN: r167818", "tree": {"sha": "950f2298d177e5fa36931f0eeb4ffb6aee7d0ff3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/950f2298d177e5fa36931f0eeb4ffb6aee7d0ff3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ecfa8de88025917ab3442db65caf62abd46d538", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ecfa8de88025917ab3442db65caf62abd46d538", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ecfa8de88025917ab3442db65caf62abd46d538", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ecfa8de88025917ab3442db65caf62abd46d538/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "48d69c57af11814091231df787dba116c4356c4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48d69c57af11814091231df787dba116c4356c4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48d69c57af11814091231df787dba116c4356c4c"}], "stats": {"total": 50, "additions": 27, "deletions": 23}, "files": [{"sha": "bbf4696211aa85fd521bb8cd3bfae0918abcdf1d", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ecfa8de88025917ab3442db65caf62abd46d538/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ecfa8de88025917ab3442db65caf62abd46d538/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=9ecfa8de88025917ab3442db65caf62abd46d538", "patch": "@@ -1,3 +1,19 @@\n+2010-12-14  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* objects.c (object_copy): Do not #undef as we are no longer\n+\tincluding objc/objc-api.h.\n+\t* selector.c: Include objc/runtime.h and\n+\tobjc-private/module-abi-8.h.  Do not include objc/objc-api.h and\n+\tobjc/encoding.h.  Updated\n+\t(__objc_register_selectors_from_class): Use struct\n+\tobjc_method_list * instead of MethodList_t.\n+\t(__objc_register_selectors_from_list): Use Method instead of\n+\tMethod_t.\n+\t(struct objc_method_description_list): Do not define here.\n+\t(__objc_register_instance_methods_to_class): Use struct\n+\tobjc_method_list * instead of MethodList_t and Method instead of\n+\tMethod_t.\n+\t\n 2010-12-14  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* selector.c: Reindented some code and tidied up comments.  No"}, {"sha": "ca12dc6d2ae37d7de3803964e0e0ff474824ef1f", "filename": "libobjc/objects.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ecfa8de88025917ab3442db65caf62abd46d538/libobjc%2Fobjects.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ecfa8de88025917ab3442db65caf62abd46d538/libobjc%2Fobjects.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjects.c?ref=9ecfa8de88025917ab3442db65caf62abd46d538", "patch": "@@ -72,9 +72,6 @@ class_create_instance (Class class)\n   return class_createInstance (class, 0);\n }\n \n-/* Temporary, while we are including objc-api.h instead of runtime.h.  */\n-#undef object_copy\n-\n id\n object_copy (id object, size_t extraBytes)\n {"}, {"sha": "0e51e31b132e1cb3fa24f166072f96c82afb39db", "filename": "libobjc/selector.c", "status": "modified", "additions": 11, "deletions": 20, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ecfa8de88025917ab3442db65caf62abd46d538/libobjc%2Fselector.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ecfa8de88025917ab3442db65caf62abd46d538/libobjc%2Fselector.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fselector.c?ref=9ecfa8de88025917ab3442db65caf62abd46d538", "patch": "@@ -23,13 +23,13 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n <http://www.gnu.org/licenses/>.  */\n \n #include \"objc-private/common.h\"\n-#include \"objc/objc-api.h\"\n+#include \"objc/runtime.h\"\n #include \"objc/thr.h\"\n #include \"objc-private/hash.h\"\n-#include \"objc-private/objc-list.h\" \n+#include \"objc-private/objc-list.h\"\n+#include \"objc-private/module-abi-8.h\"\n #include \"objc-private/runtime.h\"\n #include \"objc-private/sarray.h\"\n-#include \"objc/encoding.h\"\n \n /* Initial selector hash table size. Value doesn't matter much.  */\n #define SELECTOR_HASH_SIZE 128\n@@ -57,7 +57,7 @@ void __objc_init_selector_tables (void)\n void\n __objc_register_selectors_from_class (Class class)\n {\n-  MethodList_t method_list;\n+  struct objc_method_list * method_list;\n \n   method_list = class->methods;\n   while (method_list)\n@@ -75,14 +75,14 @@ __objc_register_selectors_from_class (Class class)\n    The name and type pointers in the method list must be permanent and\n    immutable.  */\n void\n-__objc_register_selectors_from_list (MethodList_t method_list)\n+__objc_register_selectors_from_list (struct objc_method_list *method_list)\n {\n   int i = 0;\n \n   objc_mutex_lock (__objc_runtime_mutex);\n   while (i < method_list->method_count)\n     {\n-      Method_t method = &method_list->method_list[i];\n+      Method method = &method_list->method_list[i];\n       if (method->method_name)\n \t{\n \t  method->method_name\n@@ -94,15 +94,6 @@ __objc_register_selectors_from_list (MethodList_t method_list)\n   objc_mutex_unlock (__objc_runtime_mutex);\n }\n \n-/* Temporary definition while we include objc/objc-api.h instead of\n-   objc-private/module-abi-8.h.  It should go away once we include\n-   module-abi-8.h.  */\n-struct objc_method_description_list\n-{\n-  int count;\n-  struct objc_method_description list[1];\n-};\n-\n /* The same as __objc_register_selectors_from_list, but works on a\n    struct objc_method_description_list* instead of a struct\n    objc_method_list*.  This is only used for protocols, which have\n@@ -131,11 +122,11 @@ __objc_register_selectors_from_description_list\n /* Register instance methods as class methods for root classes.  */\n void __objc_register_instance_methods_to_class (Class class)\n {\n-  MethodList_t method_list;\n-  MethodList_t class_method_list;\n+  struct objc_method_list *method_list;\n+  struct objc_method_list *class_method_list;\n   int max_methods_no = 16;\n-  MethodList_t new_list;\n-  Method_t curr_method;\n+  struct objc_method_list *new_list;\n+  Method curr_method;\n \n   /* Only if a root class. */\n   if (class->super_class)\n@@ -156,7 +147,7 @@ void __objc_register_instance_methods_to_class (Class class)\n       /* Iterate through the methods from this method list.  */\n       for (i = 0; i < method_list->method_count; i++)\n \t{\n-\t  Method_t mth = &method_list->method_list[i];\n+\t  Method mth = &method_list->method_list[i];\n \t  if (mth->method_name\n \t      && ! search_for_method_in_list (class_method_list,\n \t\t\t\t\t      mth->method_name))"}]}