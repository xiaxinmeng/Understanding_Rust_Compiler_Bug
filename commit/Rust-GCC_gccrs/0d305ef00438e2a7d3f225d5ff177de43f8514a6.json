{"sha": "0d305ef00438e2a7d3f225d5ff177de43f8514a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQzMDVlZjAwNDM4ZTJhN2QzZjIyNWQ1ZmYxNzdkZTQzZjg1MTRhNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-06-11T12:48:08Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-06-11T12:48:08Z"}, "message": "Minor reformatting.\n\nFrom-SVN: r211463", "tree": {"sha": "fff3103e230effd68572c7588c84886f40d62704", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fff3103e230effd68572c7588c84886f40d62704"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d305ef00438e2a7d3f225d5ff177de43f8514a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d305ef00438e2a7d3f225d5ff177de43f8514a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d305ef00438e2a7d3f225d5ff177de43f8514a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d305ef00438e2a7d3f225d5ff177de43f8514a6/comments", "author": null, "committer": null, "parents": [{"sha": "a54e3bf051b58a915ba448d6def18298805f6874", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a54e3bf051b58a915ba448d6def18298805f6874", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a54e3bf051b58a915ba448d6def18298805f6874"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "4a81c0880fa79f3d794d968949eedad95a33f0ae", "filename": "gcc/ada/s-taprop-linux.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d305ef00438e2a7d3f225d5ff177de43f8514a6/gcc%2Fada%2Fs-taprop-linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d305ef00438e2a7d3f225d5ff177de43f8514a6/gcc%2Fada%2Fs-taprop-linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-linux.adb?ref=0d305ef00438e2a7d3f225d5ff177de43f8514a6", "patch": "@@ -1076,9 +1076,11 @@ package body System.Task_Primitives.Operations is\n \n    procedure Abort_Task (T : Task_Id) is\n       Result : Interfaces.C.int;\n-      ESRCH  : constant := 3; -- No such process\n+\n+      ESRCH : constant := 3; -- No such process\n       --  It can happen that T has already vanished, in which case pthread_kill\n       --  returns ESRCH, so we don't consider that to be an error.\n+\n    begin\n       if Abort_Handler_Installed then\n          Result :="}, {"sha": "decfcab0f83db4a05f909eebfd52192bed450d27", "filename": "gcc/ada/s-tassta.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d305ef00438e2a7d3f225d5ff177de43f8514a6/gcc%2Fada%2Fs-tassta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d305ef00438e2a7d3f225d5ff177de43f8514a6/gcc%2Fada%2Fs-tassta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tassta.adb?ref=0d305ef00438e2a7d3f225d5ff177de43f8514a6", "patch": "@@ -870,15 +870,14 @@ package body System.Tasking.Stages is\n       Write_Lock (Self_ID);\n \n       --  If the Abort_Task signal is set to system, it means that we may\n-      --  not have been able to abort all independent tasks (in particular\n+      --  not have been able to abort all independent tasks (in particular,\n       --  Server_Task may be blocked, waiting for a signal), in which case, do\n       --  not wait for Independent_Task_Count to go down to 0. We arbitrarily\n       --  limit the number of loop iterations; if an independent task does not\n       --  terminate, we do not want to hang here. In that case, the thread will\n       --  be terminated when the process exits.\n \n-      if State (System.Interrupt_Management.Abort_Task_Interrupt) /=\n-        Default\n+      if State (System.Interrupt_Management.Abort_Task_Interrupt) /= Default\n       then\n          for J in 1 .. 10 loop\n             exit when Utilities.Independent_Task_Count = 0;"}]}