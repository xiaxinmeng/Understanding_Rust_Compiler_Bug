{"sha": "ac173024954b4e620c80ab81715bc5d50907369a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWMxNzMwMjQ5NTRiNGU2MjBjODBhYjgxNzE1YmM1ZDUwOTA3MzY5YQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2019-06-20T15:30:54Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2019-06-20T15:30:54Z"}, "message": "i386: Generate standard floating point scalar operation patterns\n\nStandard floating point scalar operation patterns for combiner, which\npreserve the rest of the vector, look like\n\n     (vec_merge:V2DF\n       (vec_duplicate:V2DF (reg:DF 87))\n       (reg/v:V2DF 85 [ x ])\n       (const_int 1 [0x1])]))\n\nand\n\n     (vec_merge:V2DF\n       (vec_duplicate:V2DF\n         (op:DF (vec_select:DF (reg/v:V2DF 85 [ x ])\n                (parallel [ (const_int 0 [0])]))\n         (reg:DF 87))\n       (reg/v:V2DF 85 [ x ])\n       (const_int 1 [0x1])]))\n\nThis patch adds and generates such standard floating point scalar\noperation patterns for +, -, *, /, > and <.\n\nTested on x86-64.\n\ngcc/\n\n\tPR target/54855\n\t* config/i386/i386-expand.c (ix86_expand_vector_set): Generate\n\tstandard scalar operation pattern for V2DF.\n\t* config/i386/sse.md (*<sse>_vm<plusminus_insn><mode>3): New.\n\t(*<sse>_vm<multdiv_mnemonic><mode>3): Likewise.\n\t(*ieee_<ieee_maxmin><mode>3): Likewise.\n\t(vec_setv2df_0): Likewise.\n\ngcc/testsuite/\n\n\tPR target/54855\n\t* gcc.target/i386/pr54855-1.c: New test.\n\t* gcc.target/i386/pr54855-2.c: Likewise.\n\t* gcc.target/i386/pr54855-3.c: Likewise.\n\t* gcc.target/i386/pr54855-4.c: Likewise.\n\t* gcc.target/i386/pr54855-5.c: Likewise.\n\t* gcc.target/i386/pr54855-6.c: Likewise.\n\t* gcc.target/i386/pr54855-7.c: Likewise.\n\t* gcc.target/i386/pr54855-8.c: Likewise.\n\t* gcc.target/i386/pr54855-9.c: Likewise.\n\t* gcc.target/i386/pr54855-10.c: Likewise.\n\nFrom-SVN: r272511", "tree": {"sha": "bec8e48bb11c327ba0ad3b42872bc01161e26d44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bec8e48bb11c327ba0ad3b42872bc01161e26d44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac173024954b4e620c80ab81715bc5d50907369a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac173024954b4e620c80ab81715bc5d50907369a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac173024954b4e620c80ab81715bc5d50907369a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac173024954b4e620c80ab81715bc5d50907369a/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d1a7d8de4689f32bf39047f3f2797f7c30ce2777", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1a7d8de4689f32bf39047f3f2797f7c30ce2777", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1a7d8de4689f32bf39047f3f2797f7c30ce2777"}], "stats": {"total": 268, "additions": 268, "deletions": 0}, "files": [{"sha": "d4c32201b81553c2636c0d1ee75d54375479287b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac173024954b4e620c80ab81715bc5d50907369a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac173024954b4e620c80ab81715bc5d50907369a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ac173024954b4e620c80ab81715bc5d50907369a", "patch": "@@ -1,3 +1,13 @@\n+2019-06-20  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/54855\n+\t* config/i386/i386-expand.c (ix86_expand_vector_set): Generate\n+\tstandard scalar operation pattern for V2DF.\n+\t* config/i386/sse.md (*<sse>_vm<plusminus_insn><mode>3): New.\n+\t(*<sse>_vm<multdiv_mnemonic><mode>3): Likewise.\n+\t(*ieee_<ieee_maxmin><mode>3): Likewise.\n+\t(vec_setv2df_0): Likewise.\n+\n 2019-06-20  Jan Hubicka  <jh@suse.cz>\n \n \t* tree-ssa-alias.c (aliasing_component_refs_p): Remove ref2_is_decl"}, {"sha": "72be1df0daccea6ddda65761b42b6e738d6ea9b2", "filename": "gcc/config/i386/i386-expand.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac173024954b4e620c80ab81715bc5d50907369a/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac173024954b4e620c80ab81715bc5d50907369a/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-expand.c?ref=ac173024954b4e620c80ab81715bc5d50907369a", "patch": "@@ -14214,6 +14214,17 @@ ix86_expand_vector_set (bool mmx_ok, rtx target, rtx val, int elt)\n       return;\n \n     case E_V2DFmode:\n+      /* NB: For ELT == 0, use standard scalar operation patterns which\n+\t preserve the rest of the vector for combiner:\n+\n+\t (vec_merge:V2DF\n+\t   (vec_duplicate:V2DF (reg:DF))\n+\t   (reg:V2DF)\n+\t   (const_int 1))\n+       */\n+      if (elt == 0)\n+\tgoto do_vec_merge;\n+\n       {\n \trtx op0, op1;\n \n@@ -14511,6 +14522,7 @@ ix86_expand_vector_set (bool mmx_ok, rtx target, rtx val, int elt)\n     }\n   else if (use_vec_merge)\n     {\n+do_vec_merge:\n       tmp = gen_rtx_VEC_DUPLICATE (mode, val);\n       tmp = gen_rtx_VEC_MERGE (mode, tmp, target,\n \t\t\t       GEN_INT (HOST_WIDE_INT_1U << elt));"}, {"sha": "a8d1fbf1fdd6226e10a71cd37c9e2fab6d615c0a", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac173024954b4e620c80ab81715bc5d50907369a/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac173024954b4e620c80ab81715bc5d50907369a/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=ac173024954b4e620c80ab81715bc5d50907369a", "patch": "@@ -1826,6 +1826,28 @@\n    (set_attr \"type\" \"sseadd\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n+;; Standard scalar operation patterns which preserve the rest of the\n+;; vector for combiner.\n+(define_insn \"*<sse>_vm<plusminus_insn><mode>3\"\n+  [(set (match_operand:VF_128 0 \"register_operand\" \"=x,v\")\n+\t(vec_merge:VF_128\n+\t  (vec_duplicate:VF_128\n+\t    (plusminus:<ssescalarmode>\n+\t      (vec_select:<ssescalarmode>\n+\t        (match_operand:VF_128 1 \"register_operand\" \"0,v\")\n+\t\t(parallel [(const_int 0)]))\n+\t      (match_operand:<ssescalarmode> 2 \"nonimmediate_operand\" \"xm,vm\")))\n+\t  (match_dup 1)\n+\t  (const_int 1)))]\n+  \"TARGET_SSE\"\n+  \"@\n+   <plusminus_mnemonic><ssescalarmodesuffix>\\t{%2, %0|%0, %<iptr>2}\n+   v<plusminus_mnemonic><ssescalarmodesuffix>\\t{%2, %1, %0|%0, %1, %<iptr>2}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sseadd\")\n+   (set_attr \"prefix\" \"orig,vex\")\n+   (set_attr \"mode\" \"<ssescalarmode>\")])\n+\n (define_insn \"<sse>_vm<plusminus_insn><mode>3<mask_scalar_name><round_scalar_name>\"\n   [(set (match_operand:VF_128 0 \"register_operand\" \"=x,v\")\n \t(vec_merge:VF_128\n@@ -1880,6 +1902,29 @@\n    (set_attr \"type\" \"ssemul\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n+;; Standard scalar operation patterns which preserve the rest of the\n+;; vector for combiner.\n+(define_insn \"*<sse>_vm<multdiv_mnemonic><mode>3\"\n+  [(set (match_operand:VF_128 0 \"register_operand\" \"=x,v\")\n+\t(vec_merge:VF_128\n+\t  (vec_duplicate:VF_128\n+\t    (multdiv:<ssescalarmode>\n+\t      (vec_select:<ssescalarmode>\n+\t        (match_operand:VF_128 1 \"register_operand\" \"0,v\")\n+\t\t(parallel [(const_int 0)]))\n+\t      (match_operand:<ssescalarmode> 2 \"nonimmediate_operand\" \"xm,vm\")))\n+\t  (match_dup 1)\n+\t  (const_int 1)))]\n+  \"TARGET_SSE\"\n+  \"@\n+   <multdiv_mnemonic><ssescalarmodesuffix>\\t{%2, %0|%0, %<iptr>2}\n+   v<multdiv_mnemonic><ssescalarmodesuffix>\\t{%2, %1, %0|%0, %1, %<iptr>2}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sse<multdiv_mnemonic>\")\n+   (set_attr \"prefix\" \"orig,vex\")\n+   (set_attr \"btver2_decode\" \"direct,double\")\n+   (set_attr \"mode\" \"<ssescalarmode>\")])\n+\n (define_insn \"<sse>_vm<multdiv_mnemonic><mode>3<mask_scalar_name><round_scalar_name>\"\n   [(set (match_operand:VF_128 0 \"register_operand\" \"=x,v\")\n \t(vec_merge:VF_128\n@@ -2229,6 +2274,30 @@\n    (set_attr \"prefix\" \"<mask_prefix3>\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n+;; Standard scalar operation patterns which preserve the rest of the\n+;; vector for combiner.\n+(define_insn \"*ieee_<ieee_maxmin><mode>3\"\n+  [(set (match_operand:VF_128 0 \"register_operand\" \"=x,v\")\n+\t(vec_merge:VF_128\n+\t  (vec_duplicate:VF_128\n+\t    (unspec:<ssescalarmode>\n+\t      [(vec_select:<ssescalarmode>\n+\t         (match_operand:VF_128 1 \"register_operand\" \"0,v\")\n+\t\t (parallel [(const_int 0)]))\n+\t       (match_operand:<ssescalarmode> 2 \"nonimmediate_operand\" \"xm,vm\")]\n+\t       IEEE_MAXMIN))\n+\t  (match_dup 1)\n+\t  (const_int 1)))]\n+  \"TARGET_SSE\"\n+  \"@\n+   <ieee_maxmin><ssescalarmodesuffix>\\t{%2, %0|%0, %2}\n+   v<ieee_maxmin><ssescalarmodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sseadd\")\n+   (set_attr \"btver2_sse_attr\" \"maxmin\")\n+   (set_attr \"prefix\" \"orig,vex\")\n+   (set_attr \"mode\" \"<ssescalarmode>\")])\n+\n (define_insn \"<sse>_vm<code><mode>3<mask_scalar_name><round_saeonly_scalar_name>\"\n   [(set (match_operand:VF_128 0 \"register_operand\" \"=x,v\")\n \t(vec_merge:VF_128\n@@ -7911,6 +7980,25 @@\n   [(set (match_dup 0) (match_dup 1))]\n   \"operands[0] = adjust_address (operands[0], <ssescalarmode>mode, 0);\")\n \n+;; Standard scalar operation patterns which preserve the rest of the\n+;; vector for combiner.\n+(define_insn \"vec_setv2df_0\"\n+  [(set (match_operand:V2DF 0 \"register_operand\"       \"=x,v,x,v\")\n+\t(vec_merge:V2DF\n+\t  (vec_duplicate:V2DF\n+\t    (match_operand:DF 2 \"nonimmediate_operand\" \" x,v,m,m\"))\n+\t  (match_operand:V2DF 1 \"register_operand\"     \" 0,v,0,v\")\n+\t  (const_int 1)))]\n+  \"TARGET_SSE2\"\n+  \"@\n+   movsd\\t{%2, %0|%0, %2}\n+   vmovsd\\t{%2, %1, %0|%0, %1, %2}\n+   movlpd\\t{%2, %0|%0, %2}\n+   vmovlpd\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"isa\" \"noavx,avx,noavx,avx\")\n+   (set_attr \"type\" \"ssemov\")\n+   (set_attr \"mode\" \"DF\")])\n+\n (define_expand \"vec_set<mode>\"\n   [(match_operand:V 0 \"register_operand\")\n    (match_operand:<ssescalarmode> 1 \"register_operand\")"}, {"sha": "0fd1ce07210d52be87b3fe6f3b0331ad32972754", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac173024954b4e620c80ab81715bc5d50907369a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac173024954b4e620c80ab81715bc5d50907369a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ac173024954b4e620c80ab81715bc5d50907369a", "patch": "@@ -1,3 +1,17 @@\n+2019-06-20  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/54855\n+\t* gcc.target/i386/pr54855-1.c: New test.\n+\t* gcc.target/i386/pr54855-2.c: Likewise.\n+\t* gcc.target/i386/pr54855-3.c: Likewise.\n+\t* gcc.target/i386/pr54855-4.c: Likewise.\n+\t* gcc.target/i386/pr54855-5.c: Likewise.\n+\t* gcc.target/i386/pr54855-6.c: Likewise.\n+\t* gcc.target/i386/pr54855-7.c: Likewise.\n+\t* gcc.target/i386/pr54855-8.c: Likewise.\n+\t* gcc.target/i386/pr54855-9.c: Likewise.\n+\t* gcc.target/i386/pr54855-10.c: Likewise.\n+\n 2019-06-20  Jan Hubicka  <jh@suse.cz>\n \n \t* gcc.c-torture/execute/alias-access-path-1.c: New testcase."}, {"sha": "693aafa09abf0bc8014932cef4e798cf6e522554", "filename": "gcc/testsuite/gcc.target/i386/pr54855-1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac173024954b4e620c80ab81715bc5d50907369a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54855-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac173024954b4e620c80ab81715bc5d50907369a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54855-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54855-1.c?ref=ac173024954b4e620c80ab81715bc5d50907369a", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -msse2 -mfpmath=sse\" } */\n+/* { dg-final { scan-assembler-times \"addsd\" 1 } } */\n+/* { dg-final { scan-assembler-not \"movapd\" } } */\n+/* { dg-final { scan-assembler-not \"movsd\" } } */\n+\n+typedef double __v2df __attribute__ ((__vector_size__ (16)));\n+typedef double __m128d __attribute__ ((__vector_size__ (16), __may_alias__));\n+\n+__m128d\n+_mm_add_sd (__m128d x, __m128d y)\n+{\n+  __m128d z =  __extension__ (__m128d)(__v2df)\n+    { (((__v2df) x)[0] + ((__v2df) y)[0]), ((__v2df) x)[1] };\n+  return z;\n+}"}, {"sha": "9e08a85723ebf3cde704f4e3dc8c35053d3530d6", "filename": "gcc/testsuite/gcc.target/i386/pr54855-10.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac173024954b4e620c80ab81715bc5d50907369a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54855-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac173024954b4e620c80ab81715bc5d50907369a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54855-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54855-10.c?ref=ac173024954b4e620c80ab81715bc5d50907369a", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -msse2 -mfpmath=sse\" } */\n+/* { dg-final { scan-assembler-times \"movlpd\" 1 } } */\n+/* { dg-final { scan-assembler-not \"movsd\" } } */\n+\n+typedef double vec __attribute__((vector_size(16)));\n+\n+vec\n+foo (vec x, double *a)\n+{\n+  x[0] = *a;\n+  return x;\n+}"}, {"sha": "20c6f8eb5293a53abf84db53651cabe386e776d8", "filename": "gcc/testsuite/gcc.target/i386/pr54855-2.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac173024954b4e620c80ab81715bc5d50907369a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54855-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac173024954b4e620c80ab81715bc5d50907369a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54855-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54855-2.c?ref=ac173024954b4e620c80ab81715bc5d50907369a", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -msse2 -mfpmath=sse\" } */\n+/* { dg-final { scan-assembler-times \"mulsd\" 1 } } */\n+/* { dg-final { scan-assembler-not \"movapd\" } } */\n+/* { dg-final { scan-assembler-not \"movsd\" } } */\n+\n+typedef double __v2df __attribute__ ((__vector_size__ (16)));\n+\n+__v2df\n+_mm_mul_sd (__v2df x, __v2df y)\n+{\n+  __v2df z = x;\n+  z[0] = x[0] * y[0];\n+  return z;\n+}"}, {"sha": "3c15dfc93d11016a6057106bd3d902c07865fe27", "filename": "gcc/testsuite/gcc.target/i386/pr54855-3.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac173024954b4e620c80ab81715bc5d50907369a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54855-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac173024954b4e620c80ab81715bc5d50907369a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54855-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54855-3.c?ref=ac173024954b4e620c80ab81715bc5d50907369a", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -msse2 -mfpmath=sse\" } */\n+/* { dg-final { scan-assembler-times \"subsd\" 1 } } */\n+/* { dg-final { scan-assembler-not \"movapd\" } } */\n+/* { dg-final { scan-assembler-not \"movsd\" } } */\n+\n+typedef double vec __attribute__((vector_size(16)));\n+\n+vec\n+foo (vec x)\n+{\n+  x[0] -= 1.;\n+  return x;\n+}"}, {"sha": "32eb28e852aacae54be5d7bdf5f62f438cead689", "filename": "gcc/testsuite/gcc.target/i386/pr54855-4.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac173024954b4e620c80ab81715bc5d50907369a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54855-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac173024954b4e620c80ab81715bc5d50907369a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54855-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54855-4.c?ref=ac173024954b4e620c80ab81715bc5d50907369a", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -msse2 -mfpmath=sse\" } */\n+/* { dg-final { scan-assembler-times \"subsd\" 1 } } */\n+/* { dg-final { scan-assembler-not \"movapd\" } } */\n+/* { dg-final { scan-assembler-not \"movsd\" } } */\n+\n+typedef double vec __attribute__((vector_size(16)));\n+\n+vec\n+foo (vec x, double a)\n+{\n+  x[0] -= a;\n+  return x;\n+}"}, {"sha": "e06999074e07a7448359ed7db2393cc77175f3fd", "filename": "gcc/testsuite/gcc.target/i386/pr54855-5.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac173024954b4e620c80ab81715bc5d50907369a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54855-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac173024954b4e620c80ab81715bc5d50907369a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54855-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54855-5.c?ref=ac173024954b4e620c80ab81715bc5d50907369a", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -msse2 -mfpmath=sse\" } */\n+/* { dg-final { scan-assembler-times \"subsd\" 1 } } */\n+/* { dg-final { scan-assembler-times \"mulpd\" 1 } } */\n+/* { dg-final { scan-assembler-not \"movapd\" } } */\n+/* { dg-final { scan-assembler-not \"movsd\" } } */\n+\n+typedef double __v2df __attribute__ ((__vector_size__ (16)));\n+\n+__v2df\n+foo (__v2df x, __v2df y)\n+{\n+  x[0] -= y[0];\n+  x *= y;\n+  return x;\n+}"}, {"sha": "8f44d17b6d83f29f471b9c9149bc90fedd60cfee", "filename": "gcc/testsuite/gcc.target/i386/pr54855-6.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac173024954b4e620c80ab81715bc5d50907369a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54855-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac173024954b4e620c80ab81715bc5d50907369a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54855-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54855-6.c?ref=ac173024954b4e620c80ab81715bc5d50907369a", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -msse -mfpmath=sse\" } */\n+/* { dg-final { scan-assembler-times \"divss\" 1 } } */\n+/* { dg-final { scan-assembler-not \"movaps\" } } */\n+/* { dg-final { scan-assembler-not \"movss\" } } */\n+\n+typedef float vec __attribute__((vector_size(16)));\n+\n+vec\n+foo (vec x, float f)\n+{\n+  x[0] /= f;\n+  return x;\n+}"}, {"sha": "a551bd5c92f9e125e693ee941183b218ef99da38", "filename": "gcc/testsuite/gcc.target/i386/pr54855-7.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac173024954b4e620c80ab81715bc5d50907369a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54855-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac173024954b4e620c80ab81715bc5d50907369a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54855-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54855-7.c?ref=ac173024954b4e620c80ab81715bc5d50907369a", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -msse -mfpmath=sse\" } */\n+/* { dg-final { scan-assembler-times \"divss\" 1 } } */\n+/* { dg-final { scan-assembler-not \"movaps\" } } */\n+/* { dg-final { scan-assembler-not \"movss\" } } */\n+\n+typedef float vec __attribute__((vector_size(16)));\n+\n+vec\n+foo (vec x)\n+{\n+  x[0] /= 2.1f;\n+  return x;\n+}"}, {"sha": "7602dc293a7bfd91bd52b0c0a2635101f4df5e44", "filename": "gcc/testsuite/gcc.target/i386/pr54855-8.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac173024954b4e620c80ab81715bc5d50907369a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54855-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac173024954b4e620c80ab81715bc5d50907369a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54855-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54855-8.c?ref=ac173024954b4e620c80ab81715bc5d50907369a", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -msse2 -mfpmath=sse\" } */\n+/* { dg-final { scan-assembler-times \"maxsd\" 1 } } */\n+/* { dg-final { scan-assembler-not \"movapd\" } } */\n+/* { dg-final { scan-assembler-not \"movsd\" } } */\n+\n+typedef double vec __attribute__((vector_size(16)));\n+\n+vec\n+foo (vec x, double a)\n+{\n+  x[0] = x[0] > a ? x[0] : a;\n+  return x;\n+}"}, {"sha": "40add5f67631f315ef39118bef4485c41e0ce1be", "filename": "gcc/testsuite/gcc.target/i386/pr54855-9.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac173024954b4e620c80ab81715bc5d50907369a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54855-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac173024954b4e620c80ab81715bc5d50907369a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54855-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54855-9.c?ref=ac173024954b4e620c80ab81715bc5d50907369a", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -msse2 -mfpmath=sse\" } */\n+/* { dg-final { scan-assembler-times \"minss\" 1 } } */\n+/* { dg-final { scan-assembler-not \"movaps\" } } */\n+/* { dg-final { scan-assembler-not \"movss\" } } */\n+\n+typedef float vec __attribute__((vector_size(16)));\n+\n+vec\n+foo (vec x, float a)\n+{\n+  x[0] = x[0] < a ? x[0] : a;\n+  return x;\n+}"}]}