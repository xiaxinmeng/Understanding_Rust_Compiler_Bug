{"sha": "5d07d0cfa86e9985f850fe41c46681f8f53eac71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQwN2QwY2ZhODZlOTk4NWY4NTBmZTQxYzQ2NjgxZjhmNTNlYWM3MQ==", "commit": {"author": {"name": "Emmanuel Briot", "email": "briot@adacore.com", "date": "2009-04-24T10:18:20Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-24T10:18:20Z"}, "message": "2009-04-24  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj-proc.adb, prj.adb, prj.ads, prj-nmsc.adb, prj-env.adb\n\t(Source_Id, Source_Data): use a real list to store sources rather than\n\tusing an external table to store the elements. This makes code more\n\tefficient and more readable.\n\nFrom-SVN: r146691", "tree": {"sha": "f988e6a6690938fe9fecf3433a4e09cccb499bfd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f988e6a6690938fe9fecf3433a4e09cccb499bfd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d07d0cfa86e9985f850fe41c46681f8f53eac71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d07d0cfa86e9985f850fe41c46681f8f53eac71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d07d0cfa86e9985f850fe41c46681f8f53eac71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d07d0cfa86e9985f850fe41c46681f8f53eac71/comments", "author": {"login": "briot", "id": 42402, "node_id": "MDQ6VXNlcjQyNDAy", "avatar_url": "https://avatars.githubusercontent.com/u/42402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/briot", "html_url": "https://github.com/briot", "followers_url": "https://api.github.com/users/briot/followers", "following_url": "https://api.github.com/users/briot/following{/other_user}", "gists_url": "https://api.github.com/users/briot/gists{/gist_id}", "starred_url": "https://api.github.com/users/briot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/briot/subscriptions", "organizations_url": "https://api.github.com/users/briot/orgs", "repos_url": "https://api.github.com/users/briot/repos", "events_url": "https://api.github.com/users/briot/events{/privacy}", "received_events_url": "https://api.github.com/users/briot/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5eed512d4d7c88dde24295ea65d1a617461bb64f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5eed512d4d7c88dde24295ea65d1a617461bb64f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5eed512d4d7c88dde24295ea65d1a617461bb64f"}], "stats": {"total": 679, "additions": 302, "deletions": 377}, "files": [{"sha": "b00fcef26a2398f82cdeafd3d15ace2a8174b8ef", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d07d0cfa86e9985f850fe41c46681f8f53eac71/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d07d0cfa86e9985f850fe41c46681f8f53eac71/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5d07d0cfa86e9985f850fe41c46681f8f53eac71", "patch": "@@ -1,3 +1,10 @@\n+2009-04-24  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-proc.adb, prj.adb, prj.ads, prj-nmsc.adb, prj-env.adb\n+\t(Source_Id, Source_Data): use a real list to store sources rather than\n+\tusing an external table to store the elements. This makes code more\n+\tefficient and more readable.\n+\n 2009-04-24  Emmanuel Briot  <briot@adacore.com>\n \n \t* prj-proc.adb, prj.adb, prj.ads, prj-nmsc.adb, prj-env.adb"}, {"sha": "eef00fe3c9fa5254a2e77a005a132d50501f7c8e", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d07d0cfa86e9985f850fe41c46681f8f53eac71/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d07d0cfa86e9985f850fe41c46681f8f53eac71/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=5d07d0cfa86e9985f850fe41c46681f8f53eac71", "patch": "@@ -1050,7 +1050,6 @@ package body Prj.Env is\n       --  will be set to True.\n \n       Source        : Source_Id;\n-      Src_Data      : Source_Data;\n       Suffix        : File_Name_Type;\n       The_Unit_Data : Unit_Data;\n       Data          : File_Name_Data;\n@@ -1207,22 +1206,20 @@ package body Prj.Env is\n                   Source := Prj.Element (Iter);\n                   exit when Source = No_Source;\n \n-                  Src_Data := In_Tree.Sources.Table (Source);\n-\n-                  if In_Tree.Sources.Table (Source).Language.Name = Language\n-                      and then not Src_Data.Locally_Removed\n-                      and then Src_Data.Replaced_By = No_Source\n-                      and then Src_Data.Path.Name /= No_Path\n+                  if Source.Language.Name = Language\n+                      and then not Source.Locally_Removed\n+                      and then Source.Replaced_By = No_Source\n+                      and then Source.Path.Name /= No_Path\n                   then\n-                     if Src_Data.Unit /= No_Name then\n-                        Get_Name_String (Src_Data.Unit);\n+                     if Source.Unit /= No_Name then\n+                        Get_Name_String (Source.Unit);\n \n-                        if Src_Data.Kind = Spec then\n+                        if Source.Kind = Spec then\n                            Suffix :=\n-                             Src_Data.Language.Config.Mapping_Spec_Suffix;\n+                             Source.Language.Config.Mapping_Spec_Suffix;\n                         else\n                            Suffix :=\n-                             Src_Data.Language.Config.Mapping_Body_Suffix;\n+                             Source.Language.Config.Mapping_Body_Suffix;\n                         end if;\n \n                         if Suffix /= No_File then\n@@ -1232,10 +1229,10 @@ package body Prj.Env is\n                         Put_Name_Buffer;\n                      end if;\n \n-                     Get_Name_String (Src_Data.File);\n+                     Get_Name_String (Source.File);\n                      Put_Name_Buffer;\n \n-                     Get_Name_String (Src_Data.Path.Name);\n+                     Get_Name_String (Source.Path.Name);\n                      Put_Name_Buffer;\n                   end if;\n "}, {"sha": "5098883dee9c8ae811a83b0f3a23951a5742a14f", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 255, "deletions": 342, "changes": 597, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d07d0cfa86e9985f850fe41c46681f8f53eac71/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d07d0cfa86e9985f850fe41c46681f8f53eac71/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=5d07d0cfa86e9985f850fe41c46681f8f53eac71", "patch": "@@ -578,8 +578,7 @@ package body Prj.Nmsc is\n \n    procedure Remove_Source\n      (Id          : Source_Id;\n-      Replaced_By : Source_Id;\n-      In_Tree     : Project_Tree_Ref);\n+      Replaced_By : Source_Id);\n    --  ??? needs comment\n \n    procedure Report_No_Sources\n@@ -698,19 +697,13 @@ package body Prj.Nmsc is\n       Index               : Int       := 0;\n       Source_To_Replace   : Source_Id := No_Source)\n    is\n-      Src_Data : Source_Data := No_Source_Data;\n       Config   : constant Language_Config := Lang_Id.Config;\n \n    begin\n-      --  This is a new source so create an entry for it in the Sources table\n-\n-      Source_Data_Table.Increment_Last (In_Tree.Sources);\n-      Id := Source_Data_Table.Last (In_Tree.Sources);\n+      Id := new Source_Data;\n \n       if Current_Verbosity = High then\n-         Write_Str (\"Adding source #\");\n-         Write_Str (Id'Img);\n-         Write_Str (\", File : \");\n+         Write_Str (\"Adding source File: \");\n          Write_Str (Get_Name_String (File_Name));\n \n          if Lang_Kind = Unit_Based then\n@@ -727,39 +720,37 @@ package body Prj.Nmsc is\n          Write_Eol;\n       end if;\n \n-      Src_Data.Project             := Project;\n-      Src_Data.Language            := Lang_Id;\n-      Src_Data.Lang_Kind           := Lang_Kind;\n-      Src_Data.Compiled            :=\n+      Id.Project             := Project;\n+      Id.Language            := Lang_Id;\n+      Id.Lang_Kind           := Lang_Kind;\n+      Id.Compiled            :=\n         Lang_Id.Config.Compiler_Driver /= Empty_File_Name;\n-      Src_Data.Kind                := Kind;\n-      Src_Data.Alternate_Languages := Alternate_Languages;\n-      Src_Data.Other_Part          := Other_Part;\n+      Id.Kind                := Kind;\n+      Id.Alternate_Languages := Alternate_Languages;\n+      Id.Other_Part          := Other_Part;\n \n-      Src_Data.Object_Exists := Config.Object_Generated;\n-      Src_Data.Object_Linked := Config.Objects_Linked;\n+      Id.Object_Exists := Config.Object_Generated;\n+      Id.Object_Linked := Config.Objects_Linked;\n \n       if Other_Part /= No_Source then\n-         In_Tree.Sources.Table (Other_Part).Other_Part := Id;\n+         Other_Part.Other_Part := Id;\n       end if;\n \n-      Src_Data.Unit                := Unit;\n-      Src_Data.Index               := Index;\n-      Src_Data.File                := File_Name;\n-      Src_Data.Display_File        := Display_File;\n-      Src_Data.Dependency          := Lang_Id.Config.Dependency_Kind;\n-      Src_Data.Dep_Name            := Dependency_Name\n-                                        (File_Name, Src_Data.Dependency);\n-      Src_Data.Naming_Exception    := Naming_Exception;\n-\n-      if Src_Data.Compiled and then Src_Data.Object_Exists then\n-         Src_Data.Object   :=\n-           Object_Name (File_Name, Config.Object_File_Suffix);\n-         Src_Data.Switches := Switches_Name (File_Name);\n+      Id.Unit                := Unit;\n+      Id.Index               := Index;\n+      Id.File                := File_Name;\n+      Id.Display_File        := Display_File;\n+      Id.Dependency          := Lang_Id.Config.Dependency_Kind;\n+      Id.Dep_Name            := Dependency_Name (File_Name, Id.Dependency);\n+      Id.Naming_Exception    := Naming_Exception;\n+\n+      if Id.Compiled and then Id.Object_Exists then\n+         Id.Object   := Object_Name (File_Name, Config.Object_File_Suffix);\n+         Id.Switches := Switches_Name (File_Name);\n       end if;\n \n       if Path /= No_Path then\n-         Src_Data.Path := (Path, Display_Path);\n+         Id.Path := (Path, Display_Path);\n          Source_Paths_Htable.Set (In_Tree.Source_Paths_HT, Path, Id);\n       end if;\n \n@@ -772,13 +763,11 @@ package body Prj.Nmsc is\n \n       --  Add the source to the language list\n \n-      Src_Data.Next_In_Lang := Lang_Id.First_Source;\n+      Id.Next_In_Lang := Lang_Id.First_Source;\n       Lang_Id.First_Source := Id;\n \n-      In_Tree.Sources.Table (Id) := Src_Data;\n-\n       if Source_To_Replace /= No_Source then\n-         Remove_Source (Source_To_Replace, Id, In_Tree);\n+         Remove_Source (Source_To_Replace, Id);\n       end if;\n    end Add_Source;\n \n@@ -926,26 +915,18 @@ package body Prj.Nmsc is\n                                               Project => Project);\n                      Source_Loop : loop\n                         Source := Element (Iter);\n-                        exit Source_Loop when Source = No_Source;\n+                        exit Source_Loop when Source = No_Source\n+                          or else Source.Language = Language;\n \n-                        declare\n-                           Src_Data : Source_Data renames\n-                             In_Tree.Sources.Table (Source);\n+                        Alt_Lang := Source.Alternate_Languages;\n \n-                        begin\n-                           exit Source_Loop when Src_Data.Language = Language;\n-\n-                           Alt_Lang := Src_Data.Alternate_Languages;\n-\n-                           Alternate_Loop :\n-                           while Alt_Lang /= No_Alternate_Language loop\n-                              Alt_Lang_Data :=\n-                                In_Tree.Alt_Langs.Table (Alt_Lang);\n-                              exit Source_Loop\n-                                 when Alt_Lang_Data.Language = Language;\n-                              Alt_Lang := Alt_Lang_Data.Next;\n-                           end loop Alternate_Loop;\n-                        end;\n+                        Alternate_Loop :\n+                        while Alt_Lang /= No_Alternate_Language loop\n+                           Alt_Lang_Data := In_Tree.Alt_Langs.Table (Alt_Lang);\n+                           exit Source_Loop\n+                           when Alt_Lang_Data.Language = Language;\n+                           Alt_Lang := Alt_Lang_Data.Next;\n+                        end loop Alternate_Loop;\n \n                         Next (Iter);\n                      end loop Source_Loop;\n@@ -2554,7 +2535,7 @@ package body Prj.Nmsc is\n             loop\n                Source := Prj.Element (Iter);\n                exit when Source = No_Source;\n-               In_Tree.Sources.Table (Source).In_Interfaces := False;\n+               Source.In_Interfaces := False;\n                Next (Iter);\n             end loop;\n \n@@ -2575,36 +2556,26 @@ package body Prj.Nmsc is\n                   Source := Prj.Element (Iter);\n                   exit when Source = No_Source;\n \n-                  declare\n-                     Src_Data : Source_Data renames\n-                                  In_Tree.Sources.Table (Source);\n-\n-                  begin\n-                     if Src_Data.File = Name then\n-                        if not Src_Data.Locally_Removed then\n-                           Src_Data.In_Interfaces := True;\n-                           Src_Data.Declared_In_Interfaces := True;\n-\n-                           if Src_Data.Other_Part /= No_Source then\n-                              In_Tree.Sources.Table\n-                                (Src_Data.Other_Part).In_Interfaces := True;\n-                              In_Tree.Sources.Table\n-                                (Src_Data.Other_Part).Declared_In_Interfaces :=\n-                                  True;\n-                           end if;\n+                  if Source.File = Name then\n+                     if not Source.Locally_Removed then\n+                        Source.In_Interfaces := True;\n+                        Source.Declared_In_Interfaces := True;\n \n-                           if Current_Verbosity = High then\n-                              Write_Str (\"   interface: \");\n-                              Write_Line\n-                                (Get_Name_String (Src_Data.Path.Name));\n-                           end if;\n+                        if Source.Other_Part /= No_Source then\n+                           Source.Other_Part.In_Interfaces := True;\n+                           Source.Other_Part.Declared_In_Interfaces := True;\n                         end if;\n \n-                        exit Big_Loop;\n+                        if Current_Verbosity = High then\n+                           Write_Str (\"   interface: \");\n+                           Write_Line (Get_Name_String (Source.Path.Name));\n+                        end if;\n                      end if;\n \n-                     Next (Iter);\n-                  end;\n+                     exit Big_Loop;\n+                  end if;\n+\n+                  Next (Iter);\n                end loop;\n \n                Project_2 := In_Tree.Projects.Table (Project_2).Extends;\n@@ -2637,15 +2608,9 @@ package body Prj.Nmsc is\n                Source := Prj.Element (Iter);\n                exit when Source = No_Source;\n \n-               declare\n-                  Src_Data : Source_Data renames\n-                               In_Tree.Sources.Table (Source);\n-\n-               begin\n-                  if not Src_Data.Declared_In_Interfaces then\n-                     Src_Data.In_Interfaces := False;\n-                  end if;\n-               end;\n+               if not Source.Declared_In_Interfaces then\n+                  Source.In_Interfaces := False;\n+               end if;\n \n                Next (Iter);\n             end loop;\n@@ -2933,8 +2898,7 @@ package body Prj.Nmsc is\n                Iter := For_Each_Source (In_Tree, Project);\n                loop\n                   Source := Prj.Element (Iter);\n-                  exit when Source = No_Source\n-                    or else In_Tree.Sources.Table (Source).File = File_Name;\n+                  exit when Source = No_Source or else Source.File = File_Name;\n                   Next (Iter);\n                end loop;\n \n@@ -2954,14 +2918,14 @@ package body Prj.Nmsc is\n                   --  Check if the file name is already recorded for another\n                   --  language or another kind.\n \n-                  if In_Tree.Sources.Table (Source).Language /= Lang_Id then\n+                  if Source.Language /= Lang_Id then\n                      Error_Msg\n                        (Project,\n                         In_Tree,\n                         \"the same file cannot be a source of two languages\",\n                         Element.Location);\n \n-                  elsif In_Tree.Sources.Table (Source).Kind /= Kind then\n+                  elsif Source.Kind /= Kind then\n                      Error_Msg\n                        (Project,\n                         In_Tree,\n@@ -3065,33 +3029,28 @@ package body Prj.Nmsc is\n                loop\n                   Source := Prj.Element (Iter);\n                   exit when Source = No_Source\n-                    or else\n-                      (In_Tree.Sources.Table (Source).Unit = Unit and then\n-                       In_Tree.Sources.Table (Source).Index = Index);\n+                    or else (Source.Unit = Unit and then Source.Index = Index);\n                   Next (Iter);\n                end loop;\n \n                if Source /= No_Source then\n-                  if In_Tree.Sources.Table (Source).Kind /= Kind then\n+                  if Source.Kind /= Kind then\n                      Other_Part := Source;\n \n                      loop\n                         Next (Iter);\n                         Source := Prj.Element (Iter);\n \n                         exit when Source = No_Source or else\n-                          (In_Tree.Sources.Table (Source).Unit = Unit\n-                           and then\n-                           In_Tree.Sources.Table (Source).Index = Index);\n+                          (Source.Unit = Unit and then Source.Index = Index);\n                      end loop;\n                   end if;\n \n                   if Source /= No_Source then\n-                     Other_Project := In_Tree.Sources.Table (Source).Project;\n+                     Other_Project := Source.Project;\n \n                      if Is_Extending (Project, Other_Project, In_Tree) then\n-                        Other_Part :=\n-                          In_Tree.Sources.Table (Source).Other_Part;\n+                        Other_Part := Source.Other_Part;\n \n                         --  Record the source to be removed\n \n@@ -3481,14 +3440,9 @@ package body Prj.Nmsc is\n                Iter := For_Each_Source (In_Tree, Proj);\n                loop\n                   Src_Id := Prj.Element (Iter);\n-                  exit when Src_Id = No_Source;\n-\n-                  declare\n-                     Src : Source_Data renames In_Tree.Sources.Table (Src_Id);\n-                  begin\n-                     exit when Src.Lang_Kind /= File_Based\n-                       or else Src.Kind /= Spec;\n-                  end;\n+                  exit when Src_Id = No_Source\n+                    or else Src_Id.Lang_Kind /= File_Based\n+                    or else Src_Id.Kind /= Spec;\n                   Next (Iter);\n                end loop;\n \n@@ -4386,8 +4340,8 @@ package body Prj.Nmsc is\n         Prj.Util.Value_Of\n           (Name_Default_Language, Data.Decl.Attributes, In_Tree);\n \n-      --  ??? Shouldn't these be set to False by default, and only set to True\n-      --  when we actually find some source file ?\n+      --  Shouldn't these be set to False by default, and only set to True when\n+      --  we actually find some source file???\n \n       Data.Ada_Sources_Present   := Data.Source_Dirs /= Nil_String;\n       Data.Other_Sources_Present := Data.Source_Dirs /= Nil_String;\n@@ -4440,7 +4394,7 @@ package body Prj.Nmsc is\n \n                   --  Attribute Languages is not specified. So, it defaults to\n                   --  a project of language Ada only. No sources of languages\n-                  --  other than Ada\n+                  --  other than Ada.\n \n                   Data.Other_Sources_Present := False;\n \n@@ -4458,7 +4412,7 @@ package body Prj.Nmsc is\n                NL_Id             : Language_Ptr;\n \n             begin\n-               --  Assume there are no language declared\n+               --  Assume there are no languages declared\n \n                Data.Ada_Sources_Present := False;\n                Data.Other_Sources_Present := False;\n@@ -4487,7 +4441,8 @@ package body Prj.Nmsc is\n                      Lang_Name := Name_Find;\n \n                      --  If the language was not already specified (duplicates\n-                     --  are simply ignored)\n+                     --  are simply ignored).\n+\n                      NL_Id := Data.Languages;\n                      while NL_Id /= No_Language_Index loop\n                         exit when Lang_Name = NL_Id.Name;\n@@ -4496,6 +4451,7 @@ package body Prj.Nmsc is\n \n                      if NL_Id = No_Language_Index then\n                         if Get_Mode = Ada_Only then\n+\n                            --  Check for language Ada\n \n                            if Lang_Name = Name_Ada then\n@@ -4514,6 +4470,7 @@ package body Prj.Nmsc is\n                         if Lang_Name = Name_Ada then\n                            Index.Config.Kind := Unit_Based;\n                            Index.Config.Dependency_Kind := ALI_File;\n+\n                         else\n                            Index.Config.Kind := File_Based;\n                            Index.Config.Dependency_Kind := None;\n@@ -4734,8 +4691,8 @@ package body Prj.Nmsc is\n                               Project, In_Tree, Extending)\n                            then\n                               --  There is a body for this unit.\n-                              --  If there is no spec, we need to check\n-                              --  that it is not a subunit.\n+                              --  If there is no spec, we need to check that it\n+                              --  is not a subunit.\n \n                               if The_Unit_Data.File_Names\n                                 (Specification).Name = No_File\n@@ -4763,9 +4720,8 @@ package body Prj.Nmsc is\n                                  end;\n                               end if;\n \n-                              --  The unit is not a subunit, so we add\n-                              --  to the Interface ALIs the ALI file\n-                              --  corresponding to the body.\n+                              --  The unit is not a subunit, so we add the\n+                              --  ALI file for its body to the Interface ALIs.\n \n                               Add_ALI_For\n                                 (The_Unit_Data.File_Names (Body_Part).Name);\n@@ -4779,18 +4735,18 @@ package body Prj.Nmsc is\n                            end if;\n \n                         elsif The_Unit_Data.File_Names\n-                          (Specification).Name /= No_File\n+                                (Specification).Name /= No_File\n                           and then The_Unit_Data.File_Names\n-                            (Specification).Path.Name /= Slash\n+                                     (Specification).Path.Name /= Slash\n                           and then Check_Project\n-                            (The_Unit_Data.File_Names\n-                                 (Specification).Project,\n-                             Project, In_Tree, Extending)\n+                                     (The_Unit_Data.File_Names\n+                                        (Specification).Project,\n+                                      Project, In_Tree, Extending)\n \n                         then\n-                           --  The unit is part of the project, it has\n-                           --  a spec, but no body. We add to the Interface\n-                           --  ALIs the ALI file corresponding to the spec.\n+                           --  The unit is part of the project, it has a spec,\n+                           --  but no body. We add the ALI for its spec to the\n+                           --  Interface ALIs.\n \n                            Add_ALI_For\n                              (The_Unit_Data.File_Names (Specification).Name);\n@@ -4813,8 +4769,7 @@ package body Prj.Nmsc is\n \n                      loop\n                         while Prj.Element (Iter) /= No_Source and then\n-                           In_Tree.Sources.Table (Prj.Element (Iter)).Unit /=\n-                              Unit\n+                           Prj.Element (Iter).Unit /= Unit\n                         loop\n                            Next (Iter);\n                         end loop;\n@@ -4829,25 +4784,20 @@ package body Prj.Nmsc is\n                      end loop;\n \n                      if Source /= No_Source then\n-                        if In_Tree.Sources.Table (Source).Kind = Sep then\n+                        if Source.Kind = Sep then\n                            Source := No_Source;\n \n-                        elsif In_Tree.Sources.Table (Source).Kind = Spec\n-                          and then\n-                          In_Tree.Sources.Table (Source).Other_Part /=\n-                          No_Source\n+                        elsif Source.Kind = Spec\n+                          and then Source.Other_Part /= No_Source\n                         then\n-                           Source := In_Tree.Sources.Table (Source).Other_Part;\n+                           Source := Source.Other_Part;\n                         end if;\n                      end if;\n \n                      if Source /= No_Source then\n-                        if In_Tree.Sources.Table (Source).Project /= Project\n+                        if Source.Project /= Project\n                           and then\n-                            not Is_Extending\n-                              (Project,\n-                               In_Tree.Sources.Table (Source).Project,\n-                               In_Tree)\n+                            not Is_Extending (Project, Source.Project, In_Tree)\n                         then\n                            Source := No_Source;\n                         end if;\n@@ -4861,23 +4811,20 @@ package body Prj.Nmsc is\n                                 (Interfaces).Location);\n \n                      else\n-                        if In_Tree.Sources.Table (Source).Kind = Spec and then\n-                          In_Tree.Sources.Table (Source).Other_Part /=\n-                            No_Source\n+                        if Source.Kind = Spec and then\n+                          Source.Other_Part /= No_Source\n                         then\n-                           Source := In_Tree.Sources.Table (Source).Other_Part;\n+                           Source := Source.Other_Part;\n                         end if;\n \n                         String_Element_Table.Increment_Last\n                           (In_Tree.String_Elements);\n                         In_Tree.String_Elements.Table\n                           (String_Element_Table.Last\n                              (In_Tree.String_Elements)) :=\n-                          (Value         =>\n-                             Name_Id (In_Tree.Sources.Table (Source).Dep_Name),\n+                          (Value         => Name_Id (Source.Dep_Name),\n                            Index         => 0,\n-                           Display_Value =>\n-                             Name_Id (In_Tree.Sources.Table (Source).Dep_Name),\n+                           Display_Value => Name_Id (Source.Dep_Name),\n                            Location      =>\n                              In_Tree.String_Elements.Table\n                                (Interfaces).Location,\n@@ -4922,7 +4869,7 @@ package body Prj.Nmsc is\n \n                   else\n                      --  Library_Auto_Init cannot be \"true\" if auto init is not\n-                     --  supported\n+                     --  supported.\n \n                      Error_Msg\n                        (Project, In_Tree,\n@@ -7291,26 +7238,20 @@ package body Prj.Nmsc is\n                Source := Prj.Element (Iter);\n                exit when Source = No_Source;\n \n-               declare\n-                  Src_Data : Source_Data renames\n-                               In_Tree.Sources.Table (Source);\n-\n-               begin\n-                  if Src_Data.Naming_Exception\n-                    and then Src_Data.Path = No_Path_Information\n-                  then\n-                     if Src_Data.Unit /= No_Name then\n-                        Error_Msg_Name_1 := Name_Id (Src_Data.Display_File);\n-                        Error_Msg_Name_2 := Name_Id (Src_Data.Unit);\n-                        Error_Msg\n-                          (Project, In_Tree,\n-                           \"source file %% for unit %% not found\",\n-                           No_Location);\n-                     end if;\n-\n-                     Remove_Source (Source, No_Source, In_Tree);\n+               if Source.Naming_Exception\n+                 and then Source.Path = No_Path_Information\n+               then\n+                  if Source.Unit /= No_Name then\n+                     Error_Msg_Name_1 := Name_Id (Source.Display_File);\n+                     Error_Msg_Name_2 := Name_Id (Source.Unit);\n+                     Error_Msg\n+                       (Project, In_Tree,\n+                        \"source file %% for unit %% not found\",\n+                        No_Location);\n                   end if;\n-               end;\n+\n+                  Remove_Source (Source, No_Source);\n+               end if;\n \n                Next (Iter);\n             end loop;\n@@ -7704,8 +7645,7 @@ package body Prj.Nmsc is\n                Check_Name := True;\n \n             else\n-               In_Tree.Sources.Table (Name_Loc.Source).Path :=\n-                 (Path_Id, Display_Path_Id);\n+               Name_Loc.Source.Path := (Path_Id, Display_Path_Id);\n \n                Source_Paths_Htable.Set\n                  (In_Tree.Source_Paths_HT,\n@@ -7714,15 +7654,14 @@ package body Prj.Nmsc is\n \n                --  Check if this is a subunit\n \n-               if In_Tree.Sources.Table (Name_Loc.Source).Unit /= No_Name\n-                 and then\n-                   In_Tree.Sources.Table (Name_Loc.Source).Kind = Impl\n+               if Name_Loc.Source.Unit /= No_Name\n+                 and then Name_Loc.Source.Kind = Impl\n                then\n                   Src_Ind := Sinput.P.Load_Project_File\n                     (Get_Name_String (Path_Id));\n \n                   if Sinput.P.Source_File_Is_Subunit (Src_Ind) then\n-                     In_Tree.Sources.Table (Name_Loc.Source).Kind := Sep;\n+                     Name_Loc.Source.Kind := Sep;\n                   end if;\n                end if;\n             end if;\n@@ -7766,93 +7705,86 @@ package body Prj.Nmsc is\n                Source := Prj.Element (Iter);\n                exit when Source = No_Source;\n \n-               declare\n-                  Src_Data : Source_Data renames\n-                               In_Tree.Sources.Table (Source);\n+               if Unit /= No_Name\n+                 and then Source.Unit = Unit\n+                 and then\n+                   ((Source.Kind = Spec and then Kind = Impl)\n+                    or else\n+                      (Source.Kind = Impl and then Kind = Spec))\n+               then\n+                  Other_Part := Source;\n \n-               begin\n-                  if Unit /= No_Name\n-                    and then Src_Data.Unit = Unit\n-                    and then\n-                      ((Src_Data.Kind = Spec and then Kind = Impl)\n+               elsif (Unit /= No_Name\n+                      and then Source.Unit = Unit\n+                      and then\n+                        (Source.Kind = Kind\n                          or else\n-                       (Src_Data.Kind = Impl and then Kind = Spec))\n-                  then\n-                     Other_Part := Source;\n-\n-                  elsif (Unit /= No_Name\n-                         and then Src_Data.Unit = Unit\n-                         and then\n-                           (Src_Data.Kind = Kind\n-                             or else\n-                               (Src_Data.Kind = Sep  and then Kind = Impl)\n-                             or else\n-                               (Src_Data.Kind = Impl and then Kind = Sep)))\n-                    or else\n-                      (Unit = No_Name and then Src_Data.File = File_Name)\n-                  then\n-                     --  Duplication of file/unit in same project is only\n-                     --  allowed if order of source directories is known.\n+                           (Source.Kind = Sep  and then Kind = Impl)\n+                         or else\n+                           (Source.Kind = Impl and then Kind = Sep)))\n+                 or else\n+                   (Unit = No_Name and then Source.File = File_Name)\n+               then\n+                  --  Duplication of file/unit in same project is only\n+                  --  allowed if order of source directories is known.\n \n-                     if Project = Src_Data.Project then\n-                        if Data.Known_Order_Of_Source_Dirs then\n-                           Add_Src := False;\n+                  if Project = Source.Project then\n+                     if Data.Known_Order_Of_Source_Dirs then\n+                        Add_Src := False;\n \n-                        elsif Unit /= No_Name then\n-                           Error_Msg_Name_1 := Unit;\n-                           Error_Msg\n-                             (Project, In_Tree, \"duplicate unit %%\",\n-                              No_Location);\n-                           Add_Src := False;\n+                     elsif Unit /= No_Name then\n+                        Error_Msg_Name_1 := Unit;\n+                        Error_Msg\n+                          (Project, In_Tree, \"duplicate unit %%\",\n+                           No_Location);\n+                        Add_Src := False;\n \n-                        else\n-                           Error_Msg_File_1 := File_Name;\n-                           Error_Msg\n-                             (Project, In_Tree, \"duplicate source file name {\",\n-                              No_Location);\n-                           Add_Src := False;\n-                        end if;\n+                     else\n+                        Error_Msg_File_1 := File_Name;\n+                        Error_Msg\n+                          (Project, In_Tree, \"duplicate source file name {\",\n+                           No_Location);\n+                        Add_Src := False;\n+                     end if;\n \n-                        --  Do not allow the same unit name in different\n-                        --  projects, except if one is extending the other.\n+                     --  Do not allow the same unit name in different\n+                     --  projects, except if one is extending the other.\n \n-                        --  For a file based language, the same file name\n-                        --  replaces a file in a project being extended, but\n-                        --  it is allowed to have the same file name in\n-                        --  unrelated projects.\n+                     --  For a file based language, the same file name\n+                     --  replaces a file in a project being extended, but\n+                     --  it is allowed to have the same file name in\n+                     --  unrelated projects.\n \n-                     elsif Is_Extending\n-                       (Project, Src_Data.Project, In_Tree)\n-                     then\n-                        Source_To_Replace := Source;\n+                  elsif Is_Extending\n+                    (Project, Source.Project, In_Tree)\n+                  then\n+                     Source_To_Replace := Source;\n \n-                     elsif Unit /= No_Name\n-                       and then not Src_Data.Locally_Removed\n-                     then\n-                        Error_Msg_Name_1 := Unit;\n-                        Error_Msg\n-                          (Project, In_Tree,\n-                           \"unit %% cannot belong to several projects\",\n-                           No_Location);\n+                  elsif Unit /= No_Name\n+                    and then not Source.Locally_Removed\n+                  then\n+                     Error_Msg_Name_1 := Unit;\n+                     Error_Msg\n+                       (Project, In_Tree,\n+                        \"unit %% cannot belong to several projects\",\n+                        No_Location);\n \n-                        Error_Msg_Name_1 :=\n-                          In_Tree.Projects.Table (Project).Name;\n-                        Error_Msg_Name_2 := Name_Id (Display_Path_Id);\n-                        Error_Msg\n-                          (Project, In_Tree, \"\\  project %%, %%\", No_Location);\n+                     Error_Msg_Name_1 :=\n+                       In_Tree.Projects.Table (Project).Name;\n+                     Error_Msg_Name_2 := Name_Id (Display_Path_Id);\n+                     Error_Msg\n+                       (Project, In_Tree, \"\\  project %%, %%\", No_Location);\n \n-                        Error_Msg_Name_1 :=\n-                          In_Tree.Projects.Table (Src_Data.Project).Name;\n-                        Error_Msg_Name_2 :=\n-                          Name_Id (Src_Data.Path.Display_Name);\n-                        Error_Msg\n-                          (Project, In_Tree, \"\\  project %%, %%\", No_Location);\n+                     Error_Msg_Name_1 :=\n+                       In_Tree.Projects.Table (Source.Project).Name;\n+                     Error_Msg_Name_2 := Name_Id (Source.Path.Display_Name);\n+                     Error_Msg\n+                       (Project, In_Tree, \"\\  project %%, %%\", No_Location);\n \n-                        Add_Src := False;\n-                     end if;\n+                     Add_Src := False;\n                   end if;\n+               end if;\n \n-               end;\n                Next (Iter);\n             end loop;\n \n@@ -8016,8 +7948,6 @@ package body Prj.Nmsc is\n       In_Tree : Project_Tree_Ref)\n    is\n       Source : Source_Id;\n-      File   : File_Name_Type;\n-      Unit   : Name_Id;\n       Iter   : Source_Iterator;\n \n    begin\n@@ -8028,52 +7958,48 @@ package body Prj.Nmsc is\n          Source := Prj.Element (Iter);\n          exit when Source = No_Source;\n \n-         File := In_Tree.Sources.Table (Source).File;\n-         Unit := In_Tree.Sources.Table (Source).Unit;\n-\n          --  An excluded file cannot also be an exception file name\n \n-         if Excluded_Sources_Htable.Get (File) /= No_File_Found then\n-            Error_Msg_File_1 := File;\n+         if Excluded_Sources_Htable.Get (Source.File) /= No_File_Found then\n+            Error_Msg_File_1 := Source.File;\n             Error_Msg\n               (Project, In_Tree,\n                \"{ cannot be both excluded and an exception file name\",\n                No_Location);\n          end if;\n \n          if Current_Verbosity = High then\n-            Write_Str (\"Naming exception: Putting source #\");\n-            Write_Str (Source'Img);\n-            Write_Str (\", file \");\n-            Write_Str (Get_Name_String (File));\n+            Write_Str (\"Naming exception: Putting source file \");\n+            Write_Str (Get_Name_String (Source.File));\n             Write_Line (\" in Source_Names\");\n          end if;\n \n          Source_Names.Set\n-           (K => File,\n+           (K => Source.File,\n             E => Name_Location'\n-              (Name     => File,\n+              (Name     => Source.File,\n                Location => No_Location,\n                Source   => Source,\n-               Except   => Unit /= No_Name,\n+               Except   => Source.Unit /= No_Name,\n                Found    => False));\n \n          --  If this is an Ada exception, record in table Unit_Exceptions\n \n-         if Unit /= No_Name then\n+         if Source.Unit /= No_Name then\n             declare\n-               Unit_Except : Unit_Exception := Unit_Exceptions.Get (Unit);\n+               Unit_Except : Unit_Exception :=\n+                                Unit_Exceptions.Get (Source.Unit);\n \n             begin\n-               Unit_Except.Name := Unit;\n+               Unit_Except.Name := Source.Unit;\n \n-               if In_Tree.Sources.Table (Source).Kind = Spec then\n-                  Unit_Except.Spec := File;\n+               if Source.Kind = Spec then\n+                  Unit_Except.Spec := Source.File;\n                else\n-                  Unit_Except.Impl := File;\n+                  Unit_Except.Impl := Source.File;\n                end if;\n \n-               Unit_Exceptions.Set (Unit, Unit_Except);\n+               Unit_Exceptions.Set (Source.Unit, Unit_Except);\n             end;\n          end if;\n \n@@ -8140,8 +8066,8 @@ package body Prj.Nmsc is\n                end if;\n \n                if Source /= No_Source then\n-                  In_Tree.Sources.Table (Source).Locally_Removed := True;\n-                  In_Tree.Sources.Table (Source).In_Interfaces := False;\n+                  Source.Locally_Removed := True;\n+                  Source.In_Interfaces := False;\n                end if;\n \n                if Current_Verbosity = High then\n@@ -8193,10 +8119,8 @@ package body Prj.Nmsc is\n                   Source := Prj.Element (Iter);\n                   exit when Source = No_Source;\n \n-                  if In_Tree.Sources.Table (Source).File = Excluded.File then\n-                     Exclude\n-                       (In_Tree.Sources.Table (Source).Project,\n-                        No_Unit_Index, Specification);\n+                  if Source.File = Excluded.File then\n+                     Exclude (Source.Project, No_Unit_Index, Specification);\n                      exit;\n                   end if;\n \n@@ -8230,7 +8154,7 @@ package body Prj.Nmsc is\n             Src_Id      : Source_Id;\n             Source_Name : File_Name_Type;\n \n-            procedure Check_Object (Src_Data : Source_Data);\n+            procedure Check_Object (Src : Source_Id);\n             --  Check if object file name of the current source is already in\n             --  hash table Object_File_Names. If it is, report an error. If it\n             --  is not, put it there with the file name of the current source.\n@@ -8239,12 +8163,12 @@ package body Prj.Nmsc is\n             -- Check_Object --\n             ------------------\n \n-            procedure Check_Object (Src_Data : Source_Data) is\n+            procedure Check_Object (Src : Source_Id) is\n             begin\n-               Source_Name := Object_File_Names.Get (Src_Data.Object);\n+               Source_Name := Object_File_Names.Get (Src.Object);\n \n                if Source_Name /= No_File then\n-                  Error_Msg_File_1 := Src_Data.File;\n+                  Error_Msg_File_1 := Src.File;\n                   Error_Msg_File_2 := Source_Name;\n                   Error_Msg\n                     (Project,\n@@ -8253,7 +8177,7 @@ package body Prj.Nmsc is\n                      No_Location);\n \n                else\n-                  Object_File_Names.Set (Src_Data.Object, Src_Data.File);\n+                  Object_File_Names.Set (Src.Object, Src.File);\n                end if;\n             end Check_Object;\n \n@@ -8266,56 +8190,49 @@ package body Prj.Nmsc is\n                Src_Id := Prj.Element (Iter);\n                exit when Src_Id = No_Source;\n \n-               declare\n-                  Src_Data : Source_Data renames\n-                               In_Tree.Sources.Table (Src_Id);\n-\n-               begin\n-                  if Src_Data.Compiled and then Src_Data.Object_Exists\n-                    and then Is_Extending (Project, Src_Data.Project, In_Tree)\n-                  then\n-                     if Src_Data.Unit = No_Name then\n-                        if Src_Data.Kind = Impl then\n-                           Check_Object (Src_Data);\n-                        end if;\n-\n-                     else\n-                        case Src_Data.Kind is\n-                           when Spec =>\n-                              if Src_Data.Other_Part = No_Source then\n-                                 Check_Object (Src_Data);\n-                              end if;\n+               if Src_Id.Compiled and then Src_Id.Object_Exists\n+                 and then Is_Extending (Project, Src_Id.Project, In_Tree)\n+               then\n+                  if Src_Id.Unit = No_Name then\n+                     if Src_Id.Kind = Impl then\n+                        Check_Object (Src_Id);\n+                     end if;\n \n-                           when Sep =>\n-                              null;\n+                  else\n+                     case Src_Id.Kind is\n+                        when Spec =>\n+                           if Src_Id.Other_Part = No_Source then\n+                              Check_Object (Src_Id);\n+                           end if;\n \n-                           when Impl =>\n-                              if Src_Data.Other_Part /= No_Source then\n-                                 Check_Object (Src_Data);\n+                        when Sep =>\n+                           null;\n \n-                              else\n-                                 --  Check if it is a subunit\n+                        when Impl =>\n+                           if Src_Id.Other_Part /= No_Source then\n+                              Check_Object (Src_Id);\n \n-                                 declare\n-                                    Src_Ind : constant Source_File_Index :=\n-                                                Sinput.P.Load_Project_File\n-                                                 (Get_Name_String\n-                                                   (Src_Data.Path.Name));\n-                                 begin\n-                                    if Sinput.P.Source_File_Is_Subunit\n-                                      (Src_Ind)\n-                                    then\n-                                       In_Tree.Sources.Table (Src_Id).Kind :=\n-                                         Sep;\n-                                    else\n-                                       Check_Object (Src_Data);\n-                                    end if;\n-                                 end;\n-                              end if;\n-                        end case;\n-                     end if;\n+                           else\n+                              --  Check if it is a subunit\n+\n+                              declare\n+                                 Src_Ind : constant Source_File_Index :=\n+                                   Sinput.P.Load_Project_File\n+                                     (Get_Name_String\n+                                          (Src_Id.Path.Name));\n+                              begin\n+                                 if Sinput.P.Source_File_Is_Subunit\n+                                   (Src_Ind)\n+                                 then\n+                                    Src_Id.Kind := Sep;\n+                                 else\n+                                    Check_Object (Src_Id);\n+                                 end if;\n+                              end;\n+                           end if;\n+                     end case;\n                   end if;\n-               end;\n+               end if;\n \n                Next (Iter);\n             end loop;\n@@ -8716,36 +8633,32 @@ package body Prj.Nmsc is\n \n    procedure Remove_Source\n      (Id          : Source_Id;\n-      Replaced_By : Source_Id;\n-      In_Tree     : Project_Tree_Ref)\n+      Replaced_By : Source_Id)\n    is\n-      Src_Data : constant Source_Data := In_Tree.Sources.Table (Id);\n       Source   : Source_Id;\n \n    begin\n       if Current_Verbosity = High then\n-         Write_Str (\"Removing source #\");\n-         Write_Line (Id'Img);\n+         Write_Str (\"Removing source \");\n+         Write_Line (Get_Name_String (Id.File));\n       end if;\n \n       if Replaced_By /= No_Source then\n-         In_Tree.Sources.Table (Id).Replaced_By := Replaced_By;\n-         In_Tree.Sources.Table (Replaced_By).Declared_In_Interfaces :=\n-           In_Tree.Sources.Table (Id).Declared_In_Interfaces;\n+         Id.Replaced_By := Replaced_By;\n+         Replaced_By.Declared_In_Interfaces := Id.Declared_In_Interfaces;\n       end if;\n \n-      Source := Src_Data.Language.First_Source;\n+      Source := Id.Language.First_Source;\n \n       if Source = Id then\n-         Src_Data.Language.First_Source := Src_Data.Next_In_Lang;\n+         Id.Language.First_Source := Id.Next_In_Lang;\n \n       else\n-         while In_Tree.Sources.Table (Source).Next_In_Lang /= Id loop\n-            Source := In_Tree.Sources.Table (Source).Next_In_Lang;\n+         while Source.Next_In_Lang /= Id loop\n+            Source := Source.Next_In_Lang;\n          end loop;\n \n-         In_Tree.Sources.Table (Source).Next_In_Lang :=\n-           Src_Data.Next_In_Lang;\n+         Source.Next_In_Lang := Id.Next_In_Lang;\n       end if;\n    end Remove_Source;\n "}, {"sha": "ac7fd3c96a2f86613b2ae7c2f5dbbfd25d213425", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d07d0cfa86e9985f850fe41c46681f8f53eac71/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d07d0cfa86e9985f850fe41c46681f8f53eac71/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=5d07d0cfa86e9985f850fe41c46681f8f53eac71", "patch": "@@ -301,7 +301,7 @@ package body Prj.Proc is\n             Source1 := Prj.Element (Iter);\n             exit when Source1 = No_Source;\n \n-            Name := In_Tree.Sources.Table (Source1).Unit;\n+            Name := Source1.Unit;\n \n             if Name /= No_Name then\n                Source2 := Unit_Htable.Get (Name);\n@@ -311,8 +311,8 @@ package body Prj.Proc is\n \n                else\n                   Unit_Htable.Remove (Name);\n-                  In_Tree.Sources.Table (Source1).Other_Part := Source2;\n-                  In_Tree.Sources.Table (Source2).Other_Part := Source1;\n+                  Source1.Other_Part := Source2;\n+                  Source2.Other_Part := Source1;\n                end if;\n             end if;\n "}, {"sha": "c714a22d2b434f9090ad992d14edf315d1ee2a56", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d07d0cfa86e9985f850fe41c46681f8f53eac71/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d07d0cfa86e9985f850fe41c46681f8f53eac71/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=5d07d0cfa86e9985f850fe41c46681f8f53eac71", "patch": "@@ -153,7 +153,8 @@ package body Prj is\n    --  Free memory allocated for Project\n \n    procedure Free_List (Languages : in out Language_Ptr);\n-   --  Free memory allocated for the list of languages\n+   procedure Free_List (Source : in out Source_Id);\n+   --  Free memory allocated for the list of languages or sources\n \n    procedure Language_Changed (Iter : in out Source_Iterator);\n    procedure Project_Changed (Iter : in out Source_Iterator);\n@@ -480,7 +481,7 @@ package body Prj is\n \n    procedure Next (Iter : in out Source_Iterator) is\n    begin\n-      Iter.Current := Iter.In_Tree.Sources.Table (Iter.Current).Next_In_Lang;\n+      Iter.Current := Iter.Current.Next_In_Lang;\n       if Iter.Current = No_Source then\n          Iter.Language := Iter.Language.Next;\n          Language_Changed (Iter);\n@@ -816,13 +817,30 @@ package body Prj is\n    -- Free_List --\n    ---------------\n \n+   procedure Free_List (Source : in out Source_Id) is\n+      procedure Unchecked_Free is new Ada.Unchecked_Deallocation\n+        (Source_Data, Source_Id);\n+      Tmp : Source_Id;\n+   begin\n+      while Source /= No_Source loop\n+         Tmp := Source.Next_In_Lang;\n+         Unchecked_Free (Source);\n+         Source := Tmp;\n+      end loop;\n+   end Free_List;\n+\n+   ---------------\n+   -- Free_List --\n+   ---------------\n+\n    procedure Free_List (Languages : in out Language_Ptr) is\n       procedure Unchecked_Free is new Ada.Unchecked_Deallocation\n         (Language_Data, Language_Ptr);\n       Tmp : Language_Ptr;\n    begin\n       while Languages /= null loop\n          Tmp := Languages.Next;\n+         Free_List (Languages.First_Source);\n          Unchecked_Free (Languages);\n          Languages := Tmp;\n       end loop;\n@@ -844,7 +862,6 @@ package body Prj is\n          Array_Table.Free (Tree.Arrays);\n          Package_Table.Free (Tree.Packages);\n          Project_List_Table.Free (Tree.Project_Lists);\n-         Source_Data_Table.Free (Tree.Sources);\n          Alternate_Language_Table.Free (Tree.Alt_Langs);\n          Unit_Table.Free (Tree.Units);\n          Units_Htable.Reset (Tree.Units_HT);\n@@ -892,7 +909,6 @@ package body Prj is\n       Array_Table.Init              (Tree.Arrays);\n       Package_Table.Init            (Tree.Packages);\n       Project_List_Table.Init       (Tree.Project_Lists);\n-      Source_Data_Table.Init        (Tree.Sources);\n       Alternate_Language_Table.Init (Tree.Alt_Langs);\n       Unit_Table.Init               (Tree.Units);\n       Units_Htable.Reset            (Tree.Units_HT);"}, {"sha": "a3bad4a9e8089212a40fcd8bdf3a3f306ea77c74", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d07d0cfa86e9985f850fe41c46681f8f53eac71/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d07d0cfa86e9985f850fe41c46681f8f53eac71/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=5d07d0cfa86e9985f850fe41c46681f8f53eac71", "patch": "@@ -398,9 +398,10 @@ package Prj is\n                             Spec_Suffix     => No_File,\n                             Body_Suffix     => No_File);\n \n-   type Source_Id is new Nat;\n+   type Source_Data;\n+   type Source_Id is access Source_Data;\n \n-   No_Source : constant Source_Id := 0;\n+   No_Source : constant Source_Id := null;\n \n    type Path_Syntax_Kind is\n      (Canonical,\n@@ -629,7 +630,7 @@ package Prj is\n \n       Language            : Language_Ptr        := No_Language_Index;\n       --  Index of the language. This is an index into\n-      --  project_tree.languages_data\n+      --  Project_Tree.Languages_Data.\n \n       Lang_Kind           : Language_Kind         := File_Based;\n       --  Kind of the language\n@@ -645,8 +646,8 @@ package Prj is\n       --  True when source is declared in attribute Interfaces\n \n       Alternate_Languages : Alternate_Language_Id := No_Alternate_Language;\n-      --  List of languages a header file may also be, in addition of\n-      --  language Language_Name.\n+      --  List of languages a header file may also be, in addition of language\n+      --  Language_Name.\n \n       Kind                : Source_Kind           := Spec;\n       --  Kind of the source: spec, body or subunit\n@@ -775,14 +776,6 @@ package Prj is\n                        Naming_Exception       => False,\n                        Next_In_Lang           => No_Source);\n \n-   package Source_Data_Table is new GNAT.Dynamic_Tables\n-     (Table_Component_Type => Source_Data,\n-      Table_Index_Type     => Source_Id,\n-      Table_Low_Bound      => 1,\n-      Table_Initial        => 1000,\n-      Table_Increment      => 100);\n-   --  The table for the sources\n-\n    package Source_Paths_Htable is new Simple_HTable\n      (Header_Num => Header_Num,\n       Element    => Source_Id,\n@@ -1452,7 +1445,6 @@ package Prj is\n          Packages          : Package_Table.Instance;\n          Project_Lists     : Project_List_Table.Instance;\n          Projects          : Project_Table.Instance;\n-         Sources           : Source_Data_Table.Instance;\n          Alt_Langs         : Alternate_Language_Table.Instance;\n          Units             : Unit_Table.Instance;\n          Units_HT          : Units_Htable.Instance;"}]}