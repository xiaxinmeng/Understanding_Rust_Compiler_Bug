{"sha": "bfb7cccf060832bc63e0fdac12674cfb888a6ea2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmZiN2NjY2YwNjA4MzJiYzYzZTBmZGFjMTI2NzRjZmI4ODhhNmVhMg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-07-25T21:32:16Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-07-25T21:32:16Z"}, "message": "re PR target/44484 (revision 160260 caused sparc64 testsuite failures)\n\n\tPR target/44484\n\t* config/sparc/predicates.md (memory_reg_operand): Delete.\n\t* config/sparc/sync.md (sync_compare_and_swap): Minor tweaks.\n\t(*sync_compare_and_swap): Encode the address form in the pattern.\n\t(*sync_compare_and_swapdi_v8plus): Likewise.\n\nFrom-SVN: r162520", "tree": {"sha": "b03fcff0f8174b254f689b42602e29ece1486333", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b03fcff0f8174b254f689b42602e29ece1486333"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bfb7cccf060832bc63e0fdac12674cfb888a6ea2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfb7cccf060832bc63e0fdac12674cfb888a6ea2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfb7cccf060832bc63e0fdac12674cfb888a6ea2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfb7cccf060832bc63e0fdac12674cfb888a6ea2/comments", "author": null, "committer": null, "parents": [{"sha": "601d98be18b8a03c3208a6ff3ab2f7acd3a5c726", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/601d98be18b8a03c3208a6ff3ab2f7acd3a5c726", "html_url": "https://github.com/Rust-GCC/gccrs/commit/601d98be18b8a03c3208a6ff3ab2f7acd3a5c726"}], "stats": {"total": 34, "additions": 18, "deletions": 16}, "files": [{"sha": "bd557151d60f805767cacc7eefc2e8124d59179a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfb7cccf060832bc63e0fdac12674cfb888a6ea2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfb7cccf060832bc63e0fdac12674cfb888a6ea2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bfb7cccf060832bc63e0fdac12674cfb888a6ea2", "patch": "@@ -1,3 +1,11 @@\n+2010-07-25  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR target/44484\n+\t* config/sparc/predicates.md (memory_reg_operand): Delete.\n+\t* config/sparc/sync.md (sync_compare_and_swap): Minor tweaks.\n+\t(*sync_compare_and_swap): Encode the address form in the pattern.\n+\t(*sync_compare_and_swapdi_v8plus): Likewise.\n+\n 2010-07-24  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* doc/install.texi (Specific, *-*-freebsd*): Adjust to recent"}, {"sha": "4af960a880edb16b9de4ade7d83803848a96d5ec", "filename": "gcc/config/sparc/predicates.md", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfb7cccf060832bc63e0fdac12674cfb888a6ea2/gcc%2Fconfig%2Fsparc%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfb7cccf060832bc63e0fdac12674cfb888a6ea2/gcc%2Fconfig%2Fsparc%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fpredicates.md?ref=bfb7cccf060832bc63e0fdac12674cfb888a6ea2", "patch": "@@ -1,5 +1,5 @@\n ;; Predicate definitions for SPARC.\n-;; Copyright (C) 2005, 2007, 2008 Free Software Foundation, Inc.\n+;; Copyright (C) 2005, 2007, 2008, 2010 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n ;;\n@@ -473,9 +473,3 @@\n ;; and (xor ... (not ...)) to (not (xor ...)).  */\n (define_predicate \"cc_arith_not_operator\"\n   (match_code \"and,ior\"))\n-\n-;; Return true if OP is memory operand with just [%reg] addressing mode.\n-(define_predicate \"memory_reg_operand\"\n-  (and (match_code \"mem\")\n-       (and (match_operand 0 \"memory_operand\")\n-\t    (match_test \"REG_P (XEXP (op, 0))\"))))"}, {"sha": "5dd37d0947543df2ebd56b985e9c992b60dc5622", "filename": "gcc/config/sparc/sync.md", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfb7cccf060832bc63e0fdac12674cfb888a6ea2/gcc%2Fconfig%2Fsparc%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfb7cccf060832bc63e0fdac12674cfb888a6ea2/gcc%2Fconfig%2Fsparc%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsync.md?ref=bfb7cccf060832bc63e0fdac12674cfb888a6ea2", "patch": "@@ -1,5 +1,5 @@\n ;; GCC machine description for SPARC synchronization instructions.\n-;; Copyright (C) 2005, 2007, 2009\n+;; Copyright (C) 2005, 2007, 2009, 2010\n ;; Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n@@ -62,7 +62,7 @@\n \n (define_expand \"sync_compare_and_swap<mode>\"\n   [(parallel\n-     [(set (match_operand:I48MODE 0 \"register_operand\" \"=r\")\n+     [(set (match_operand:I48MODE 0 \"register_operand\" \"\")\n \t   (match_operand:I48MODE 1 \"memory_operand\" \"\"))\n       (set (match_dup 1)\n \t   (unspec_volatile:I48MODE\n@@ -71,7 +71,7 @@\n \t     UNSPECV_CAS))])]\n   \"TARGET_V9\"\n {\n-  if (! REG_P (XEXP (operands[1], 0)))\n+  if (!REG_P (XEXP (operands[1], 0)))\n     {\n       rtx addr = force_reg (Pmode, XEXP (operands[1], 0));\n       operands[1] = replace_equiv_address (operands[1], addr);\n@@ -81,20 +81,20 @@\n \n (define_insn \"*sync_compare_and_swap<mode>\"\n   [(set (match_operand:I48MODE 0 \"register_operand\" \"=r\")\n-\t(match_operand:I48MODE 1 \"memory_reg_operand\" \"+m\"))\n-   (set (match_dup 1)\n+\t(mem:I48MODE (match_operand 1 \"register_operand\" \"r\")))\n+   (set (mem:I48MODE (match_dup 1))\n \t(unspec_volatile:I48MODE\n \t  [(match_operand:I48MODE 2 \"register_operand\" \"r\")\n \t   (match_operand:I48MODE 3 \"register_operand\" \"0\")]\n \t  UNSPECV_CAS))]\n   \"TARGET_V9 && (<MODE>mode == SImode || TARGET_ARCH64)\"\n-  \"cas<modesuffix>\\t%1, %2, %0\"\n+  \"cas<modesuffix>\\t[%1], %2, %0\"\n   [(set_attr \"type\" \"multi\")])\n \n (define_insn \"*sync_compare_and_swapdi_v8plus\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=h\")\n-\t(match_operand:DI 1 \"memory_reg_operand\" \"+m\"))\n-   (set (match_dup 1)\n+\t(mem:DI (match_operand 1 \"register_operand\" \"r\")))\n+   (set (mem:DI (match_dup 1))\n \t(unspec_volatile:DI\n \t  [(match_operand:DI 2 \"register_operand\" \"h\")\n \t   (match_operand:DI 3 \"register_operand\" \"0\")]\n@@ -109,7 +109,7 @@\n     output_asm_insn (\"srl\\t%L2, 0, %L2\", operands);\n   output_asm_insn (\"sllx\\t%H2, 32, %H3\", operands);\n   output_asm_insn (\"or\\t%L2, %H3, %H3\", operands);\n-  output_asm_insn (\"casx\\t%1, %H3, %L3\", operands);\n+  output_asm_insn (\"casx\\t[%1], %H3, %L3\", operands);\n   return \"srlx\\t%L3, 32, %H3\";\n }\n   [(set_attr \"type\" \"multi\")"}]}