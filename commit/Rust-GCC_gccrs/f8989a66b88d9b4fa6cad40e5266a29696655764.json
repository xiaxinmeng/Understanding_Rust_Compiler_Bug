{"sha": "f8989a66b88d9b4fa6cad40e5266a29696655764", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg5ODlhNjZiODhkOWI0ZmE2Y2FkNDBlNTI2NmEyOTY5NjY1NTc2NA==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "2000-01-29T22:40:07Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "2000-01-29T22:40:07Z"}, "message": "[multiple changes]\n\n2000-01-29  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\n\t* parse.y (formal_parameter:): Set `$$' to NULL_TREE for better\n\terror handling/recovery.\n\t* java-tree.h (SYNCHRONIZED_EXPR): Fixed typo in comment.\n\nWed Jan 12 20:20:11 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\n\t* jcf-write.c (generate_bytecode_insns): binop: Change the type of\n\tthe shift value to int. Fixed typo in comment.\n\nFrom-SVN: r31695", "tree": {"sha": "b89a58f820f86bae4757bbef8cd5acd0505d0889", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b89a58f820f86bae4757bbef8cd5acd0505d0889"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8989a66b88d9b4fa6cad40e5266a29696655764", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8989a66b88d9b4fa6cad40e5266a29696655764", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8989a66b88d9b4fa6cad40e5266a29696655764", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8989a66b88d9b4fa6cad40e5266a29696655764/comments", "author": null, "committer": null, "parents": [{"sha": "114356ad7c0d15bfc2e5687e3fe530b7ebd54a50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/114356ad7c0d15bfc2e5687e3fe530b7ebd54a50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/114356ad7c0d15bfc2e5687e3fe530b7ebd54a50"}], "stats": {"total": 1079, "additions": 584, "deletions": 495}, "files": [{"sha": "d923c017fde48d1e6f583ae200f374afc233dd58", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8989a66b88d9b4fa6cad40e5266a29696655764/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8989a66b88d9b4fa6cad40e5266a29696655764/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=f8989a66b88d9b4fa6cad40e5266a29696655764", "patch": "@@ -1,3 +1,9 @@\n+2000-01-29  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* parse.y (formal_parameter:): Set `$$' to NULL_TREE for better\n+\terror handling/recovery.\n+\t* java-tree.h (SYNCHRONIZED_EXPR): Fixed typo in comment.\n+\n 2000-01-27  Andrew Haley  <aph@cygnus.com>\n \n         * jcf-write.c (emit_goto): RESERVE 3 bytes for insn.\n@@ -68,6 +74,11 @@ Mon Jan 17 11:58:17 2000  Joerg Brunsmann  <joerg.brunsmann@fernuni-hagen.de>\n \t* parse.y (build_string_concatenation): Only use\n \tStringBuffer(String) shortcut if String arg is constant.\n \n+Wed Jan 12 20:20:11 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* jcf-write.c (generate_bytecode_insns): binop: Change the type of\n+\tthe shift value to int. Fixed typo in comment.\n+\n 2000-01-11  Mumit Khan  <khan@xraylith.wisc.edu>\n \n \t* jcf-path.c: Delete PATH_SEPARATOR and DIR_SEPARATOR macros."}, {"sha": "ebc11f793fe14f7ca34f3728facf95a346ee612a", "filename": "gcc/java/java-tree.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8989a66b88d9b4fa6cad40e5266a29696655764/gcc%2Fjava%2Fjava-tree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8989a66b88d9b4fa6cad40e5266a29696655764/gcc%2Fjava%2Fjava-tree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.def?ref=f8989a66b88d9b4fa6cad40e5266a29696655764", "patch": "@@ -51,7 +51,7 @@ DEFTREECODE (TRY_EXPR, \"try-catch-finally\", 'e', 2)\n DEFTREECODE (CATCH_EXPR, \"catch\", '1', 1)\n \n /* Synchronized statement.\n-   Operand 0 is the expression on which we whish to synchronize,\n+   Operand 0 is the expression on which we wish to synchronize,\n    Operand 1 is the synchronized expression block.  */\n DEFTREECODE (SYNCHRONIZED_EXPR, \"synchronized\", 'e', 2)\n "}, {"sha": "81eeed7400632afe241c67af6dd97f06c58bdb76", "filename": "gcc/java/jcf-write.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8989a66b88d9b4fa6cad40e5266a29696655764/gcc%2Fjava%2Fjcf-write.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8989a66b88d9b4fa6cad40e5266a29696655764/gcc%2Fjava%2Fjcf-write.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-write.c?ref=f8989a66b88d9b4fa6cad40e5266a29696655764", "patch": "@@ -2089,11 +2089,13 @@ generate_bytecode_insns (exp, target, state)\n       else\n \t{\n \t  generate_bytecode_insns (arg0, target, state);\n+\t  if (jopcode >= OPCODE_lshl && jopcode <= OPCODE_lushr)\n+\t    arg1 = convert (int_type_node, arg1);\n \t  generate_bytecode_insns (arg1, target, state);\n \t}\n       /* For most binary operations, both operands and the result have the\n \t same type.  Shift operations are different.  Using arg1's type\n-\t gets us the correct SP adjustment in all casesd. */\n+\t gets us the correct SP adjustment in all cases. */\n       if (target == STACK_TARGET)\n \temit_binop (jopcode, TREE_TYPE (arg1), state);\n       break;"}, {"sha": "4931616b1fa09f2b6ce007b994c6f809af958c96", "filename": "gcc/java/parse.c", "status": "modified", "additions": 564, "deletions": 492, "changes": 1056, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8989a66b88d9b4fa6cad40e5266a29696655764/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8989a66b88d9b4fa6cad40e5266a29696655764/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=f8989a66b88d9b4fa6cad40e5266a29696655764", "patch": "@@ -1,7 +1,6 @@\n \n /*  A Bison parser, made from ./parse.y\n- by  GNU Bison version 1.25\n-  */\n+    by GNU Bison version 1.28  */\n \n #define YYBISON 1  /* Identify Bison output.  */\n \n@@ -12,113 +11,113 @@\n #define yychar java_char\n #define yydebug java_debug\n #define yynerrs java_nerrs\n-#define\tPLUS_TK\t258\n-#define\tMINUS_TK\t259\n-#define\tMULT_TK\t260\n-#define\tDIV_TK\t261\n-#define\tREM_TK\t262\n-#define\tLS_TK\t263\n-#define\tSRS_TK\t264\n-#define\tZRS_TK\t265\n-#define\tAND_TK\t266\n-#define\tXOR_TK\t267\n-#define\tOR_TK\t268\n-#define\tBOOL_AND_TK\t269\n-#define\tBOOL_OR_TK\t270\n-#define\tEQ_TK\t271\n-#define\tNEQ_TK\t272\n-#define\tGT_TK\t273\n-#define\tGTE_TK\t274\n-#define\tLT_TK\t275\n-#define\tLTE_TK\t276\n-#define\tPLUS_ASSIGN_TK\t277\n-#define\tMINUS_ASSIGN_TK\t278\n-#define\tMULT_ASSIGN_TK\t279\n-#define\tDIV_ASSIGN_TK\t280\n-#define\tREM_ASSIGN_TK\t281\n-#define\tLS_ASSIGN_TK\t282\n-#define\tSRS_ASSIGN_TK\t283\n-#define\tZRS_ASSIGN_TK\t284\n-#define\tAND_ASSIGN_TK\t285\n-#define\tXOR_ASSIGN_TK\t286\n-#define\tOR_ASSIGN_TK\t287\n-#define\tPUBLIC_TK\t288\n-#define\tPRIVATE_TK\t289\n-#define\tPROTECTED_TK\t290\n-#define\tSTATIC_TK\t291\n-#define\tFINAL_TK\t292\n-#define\tSYNCHRONIZED_TK\t293\n-#define\tVOLATILE_TK\t294\n-#define\tTRANSIENT_TK\t295\n-#define\tNATIVE_TK\t296\n-#define\tPAD_TK\t297\n-#define\tABSTRACT_TK\t298\n-#define\tMODIFIER_TK\t299\n-#define\tDECR_TK\t300\n-#define\tINCR_TK\t301\n-#define\tDEFAULT_TK\t302\n-#define\tIF_TK\t303\n-#define\tTHROW_TK\t304\n-#define\tBOOLEAN_TK\t305\n-#define\tDO_TK\t306\n-#define\tIMPLEMENTS_TK\t307\n-#define\tTHROWS_TK\t308\n-#define\tBREAK_TK\t309\n-#define\tIMPORT_TK\t310\n-#define\tELSE_TK\t311\n-#define\tINSTANCEOF_TK\t312\n-#define\tRETURN_TK\t313\n-#define\tVOID_TK\t314\n-#define\tCATCH_TK\t315\n-#define\tINTERFACE_TK\t316\n-#define\tCASE_TK\t317\n-#define\tEXTENDS_TK\t318\n-#define\tFINALLY_TK\t319\n-#define\tSUPER_TK\t320\n-#define\tWHILE_TK\t321\n-#define\tCLASS_TK\t322\n-#define\tSWITCH_TK\t323\n-#define\tCONST_TK\t324\n-#define\tTRY_TK\t325\n-#define\tFOR_TK\t326\n-#define\tNEW_TK\t327\n-#define\tCONTINUE_TK\t328\n-#define\tGOTO_TK\t329\n-#define\tPACKAGE_TK\t330\n-#define\tTHIS_TK\t331\n-#define\tBYTE_TK\t332\n-#define\tSHORT_TK\t333\n-#define\tINT_TK\t334\n-#define\tLONG_TK\t335\n-#define\tCHAR_TK\t336\n-#define\tINTEGRAL_TK\t337\n-#define\tFLOAT_TK\t338\n-#define\tDOUBLE_TK\t339\n-#define\tFP_TK\t340\n-#define\tID_TK\t341\n-#define\tREL_QM_TK\t342\n-#define\tREL_CL_TK\t343\n-#define\tNOT_TK\t344\n-#define\tNEG_TK\t345\n-#define\tASSIGN_ANY_TK\t346\n-#define\tASSIGN_TK\t347\n-#define\tOP_TK\t348\n-#define\tCP_TK\t349\n-#define\tOCB_TK\t350\n-#define\tCCB_TK\t351\n-#define\tOSB_TK\t352\n-#define\tCSB_TK\t353\n-#define\tSC_TK\t354\n-#define\tC_TK\t355\n-#define\tDOT_TK\t356\n-#define\tSTRING_LIT_TK\t357\n-#define\tCHAR_LIT_TK\t358\n-#define\tINT_LIT_TK\t359\n-#define\tFP_LIT_TK\t360\n-#define\tTRUE_TK\t361\n-#define\tFALSE_TK\t362\n-#define\tBOOL_LIT_TK\t363\n-#define\tNULL_TK\t364\n+#define\tPLUS_TK\t257\n+#define\tMINUS_TK\t258\n+#define\tMULT_TK\t259\n+#define\tDIV_TK\t260\n+#define\tREM_TK\t261\n+#define\tLS_TK\t262\n+#define\tSRS_TK\t263\n+#define\tZRS_TK\t264\n+#define\tAND_TK\t265\n+#define\tXOR_TK\t266\n+#define\tOR_TK\t267\n+#define\tBOOL_AND_TK\t268\n+#define\tBOOL_OR_TK\t269\n+#define\tEQ_TK\t270\n+#define\tNEQ_TK\t271\n+#define\tGT_TK\t272\n+#define\tGTE_TK\t273\n+#define\tLT_TK\t274\n+#define\tLTE_TK\t275\n+#define\tPLUS_ASSIGN_TK\t276\n+#define\tMINUS_ASSIGN_TK\t277\n+#define\tMULT_ASSIGN_TK\t278\n+#define\tDIV_ASSIGN_TK\t279\n+#define\tREM_ASSIGN_TK\t280\n+#define\tLS_ASSIGN_TK\t281\n+#define\tSRS_ASSIGN_TK\t282\n+#define\tZRS_ASSIGN_TK\t283\n+#define\tAND_ASSIGN_TK\t284\n+#define\tXOR_ASSIGN_TK\t285\n+#define\tOR_ASSIGN_TK\t286\n+#define\tPUBLIC_TK\t287\n+#define\tPRIVATE_TK\t288\n+#define\tPROTECTED_TK\t289\n+#define\tSTATIC_TK\t290\n+#define\tFINAL_TK\t291\n+#define\tSYNCHRONIZED_TK\t292\n+#define\tVOLATILE_TK\t293\n+#define\tTRANSIENT_TK\t294\n+#define\tNATIVE_TK\t295\n+#define\tPAD_TK\t296\n+#define\tABSTRACT_TK\t297\n+#define\tMODIFIER_TK\t298\n+#define\tDECR_TK\t299\n+#define\tINCR_TK\t300\n+#define\tDEFAULT_TK\t301\n+#define\tIF_TK\t302\n+#define\tTHROW_TK\t303\n+#define\tBOOLEAN_TK\t304\n+#define\tDO_TK\t305\n+#define\tIMPLEMENTS_TK\t306\n+#define\tTHROWS_TK\t307\n+#define\tBREAK_TK\t308\n+#define\tIMPORT_TK\t309\n+#define\tELSE_TK\t310\n+#define\tINSTANCEOF_TK\t311\n+#define\tRETURN_TK\t312\n+#define\tVOID_TK\t313\n+#define\tCATCH_TK\t314\n+#define\tINTERFACE_TK\t315\n+#define\tCASE_TK\t316\n+#define\tEXTENDS_TK\t317\n+#define\tFINALLY_TK\t318\n+#define\tSUPER_TK\t319\n+#define\tWHILE_TK\t320\n+#define\tCLASS_TK\t321\n+#define\tSWITCH_TK\t322\n+#define\tCONST_TK\t323\n+#define\tTRY_TK\t324\n+#define\tFOR_TK\t325\n+#define\tNEW_TK\t326\n+#define\tCONTINUE_TK\t327\n+#define\tGOTO_TK\t328\n+#define\tPACKAGE_TK\t329\n+#define\tTHIS_TK\t330\n+#define\tBYTE_TK\t331\n+#define\tSHORT_TK\t332\n+#define\tINT_TK\t333\n+#define\tLONG_TK\t334\n+#define\tCHAR_TK\t335\n+#define\tINTEGRAL_TK\t336\n+#define\tFLOAT_TK\t337\n+#define\tDOUBLE_TK\t338\n+#define\tFP_TK\t339\n+#define\tID_TK\t340\n+#define\tREL_QM_TK\t341\n+#define\tREL_CL_TK\t342\n+#define\tNOT_TK\t343\n+#define\tNEG_TK\t344\n+#define\tASSIGN_ANY_TK\t345\n+#define\tASSIGN_TK\t346\n+#define\tOP_TK\t347\n+#define\tCP_TK\t348\n+#define\tOCB_TK\t349\n+#define\tCCB_TK\t350\n+#define\tOSB_TK\t351\n+#define\tCSB_TK\t352\n+#define\tSC_TK\t353\n+#define\tC_TK\t354\n+#define\tDOT_TK\t355\n+#define\tSTRING_LIT_TK\t356\n+#define\tCHAR_LIT_TK\t357\n+#define\tINT_LIT_TK\t358\n+#define\tFP_LIT_TK\t359\n+#define\tTRUE_TK\t360\n+#define\tFALSE_TK\t361\n+#define\tBOOL_LIT_TK\t362\n+#define\tNULL_TK\t363\n \n #line 48 \"./parse.y\"\n \n@@ -449,7 +448,7 @@ typedef union {\n #define\tYYFLAG\t\t-32768\n #define\tYYNTBASE\t110\n \n-#define YYTRANSLATE(x) ((unsigned)(x) <= 364 ? yytranslate[x] : 267)\n+#define YYTRANSLATE(x) ((unsigned)(x) <= 363 ? yytranslate[x] : 267)\n \n static const char yytranslate[] = {     0,\n      2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n@@ -477,18 +476,18 @@ static const char yytranslate[] = {     0,\n      2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n      2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n      2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n-     2,     2,     2,     2,     2,     1,     2,     3,     4,     5,\n-     6,     7,     8,     9,    10,    11,    12,    13,    14,    15,\n-    16,    17,    18,    19,    20,    21,    22,    23,    24,    25,\n-    26,    27,    28,    29,    30,    31,    32,    33,    34,    35,\n-    36,    37,    38,    39,    40,    41,    42,    43,    44,    45,\n-    46,    47,    48,    49,    50,    51,    52,    53,    54,    55,\n-    56,    57,    58,    59,    60,    61,    62,    63,    64,    65,\n-    66,    67,    68,    69,    70,    71,    72,    73,    74,    75,\n-    76,    77,    78,    79,    80,    81,    82,    83,    84,    85,\n-    86,    87,    88,    89,    90,    91,    92,    93,    94,    95,\n-    96,    97,    98,    99,   100,   101,   102,   103,   104,   105,\n-   106,   107,   108,   109\n+     2,     2,     2,     2,     2,     1,     3,     4,     5,     6,\n+     7,     8,     9,    10,    11,    12,    13,    14,    15,    16,\n+    17,    18,    19,    20,    21,    22,    23,    24,    25,    26,\n+    27,    28,    29,    30,    31,    32,    33,    34,    35,    36,\n+    37,    38,    39,    40,    41,    42,    43,    44,    45,    46,\n+    47,    48,    49,    50,    51,    52,    53,    54,    55,    56,\n+    57,    58,    59,    60,    61,    62,    63,    64,    65,    66,\n+    67,    68,    69,    70,    71,    72,    73,    74,    75,    76,\n+    77,    78,    79,    80,    81,    82,    83,    84,    85,    86,\n+    87,    88,    89,    90,    91,    92,    93,    94,    95,    96,\n+    97,    98,    99,   100,   101,   102,   103,   104,   105,   106,\n+   107,   108,   109\n };\n \n #if YYDEBUG != 0\n@@ -739,45 +738,45 @@ static const short yyrline[] = { 0,\n    842,   844,   848,   851,   858,   864,   872,   874,   876,   878,\n    880,   884,   886,   890,   897,   898,   902,   905,   907,   909,\n    911,   916,   918,   920,   922,   929,   932,   934,   943,   945,\n-   949,   954,   959,   963,   968,   973,   975,   981,   991,   993,\n-   995,   999,  1002,  1004,  1008,  1010,  1011,  1016,  1022,  1029,\n-  1037,  1044,  1047,  1050,  1054,  1057,  1061,  1070,  1072,  1074,\n-  1078,  1080,  1083,  1090,  1098,  1100,  1104,  1111,  1121,  1125,\n-  1128,  1131,  1134,  1137,  1140,  1143,  1146,  1148,  1152,  1158,\n-  1163,  1165,  1169,  1172,  1176,  1178,  1181,  1183,  1184,  1186,\n-  1190,  1194,  1200,  1205,  1208,  1210,  1214,  1220,  1224,  1229,\n-  1238,  1242,  1247,  1259,  1261,  1264,  1266,  1268,  1272,  1276,\n-  1279,  1283,  1285,  1286,  1287,  1288,  1289,  1293,  1295,  1296,\n-  1297,  1298,  1302,  1304,  1305,  1306,  1307,  1308,  1309,  1310,\n-  1311,  1312,  1313,  1316,  1321,  1332,  1335,  1339,  1346,  1356,\n-  1362,  1368,  1374,  1376,  1381,  1383,  1388,  1390,  1392,  1394,\n-  1396,  1400,  1402,  1403,  1404,  1405,  1406,  1407,  1410,  1416,\n-  1418,  1420,  1424,  1429,  1434,  1440,  1450,  1456,  1458,  1460,\n-  1467,  1470,  1472,  1474,  1478,  1480,  1483,  1487,  1489,  1492,\n-  1499,  1505,  1507,  1509,  1513,  1521,  1524,  1526,  1528,  1532,\n-  1537,  1546,  1551,  1554,  1561,  1563,  1565,  1569,  1572,  1581,\n-  1588,  1590,  1594,  1607,  1609,  1615,  1621,  1625,  1627,  1631,\n-  1634,  1636,  1640,  1643,  1645,  1647,  1651,  1654,  1656,  1658,\n-  1662,  1665,  1667,  1669,  1673,  1679,  1681,  1685,  1692,  1694,\n-  1696,  1698,  1702,  1714,  1717,  1719,  1724,  1728,  1730,  1737,\n-  1745,  1762,  1764,  1769,  1773,  1776,  1781,  1783,  1786,  1788,\n-  1790,  1792,  1793,  1794,  1795,  1799,  1801,  1803,  1808,  1810,\n-  1812,  1814,  1816,  1820,  1823,  1828,  1830,  1835,  1836,  1837,\n-  1838,  1839,  1841,  1843,  1845,  1847,  1849,  1853,  1855,  1858,\n-  1864,  1869,  1873,  1876,  1878,  1880,  1884,  1886,  1888,  1890,\n-  1894,  1897,  1901,  1907,  1909,  1917,  1944,  1946,  1950,  1955,\n-  1962,  1966,  1969,  1971,  1982,  1993,  1998,  2007,  2009,  2013,\n-  2016,  2018,  2023,  2028,  2033,  2040,  2042,  2043,  2044,  2047,\n-  2052,  2057,  2059,  2060,  2062,  2064,  2065,  2067,  2071,  2074,\n-  2078,  2081,  2085,  2087,  2089,  2091,  2092,  2094,  2098,  2107,\n-  2109,  2111,  2124,  2126,  2132,  2134,  2136,  2140,  2142,  2147,\n-  2152,  2157,  2159,  2161,  2165,  2167,  2172,  2177,  2179,  2183,\n-  2185,  2190,  2195,  2200,  2202,  2204,  2208,  2210,  2215,  2220,\n-  2225,  2230,  2232,  2234,  2236,  2238,  2240,  2244,  2246,  2251,\n-  2256,  2258,  2262,  2264,  2269,  2273,  2275,  2280,  2284,  2286,\n-  2291,  2295,  2297,  2302,  2306,  2308,  2313,  2317,  2319,  2324,\n-  2330,  2332,  2336,  2338,  2341,  2344,  2352,  2354,  2355,  2358,\n-  2360,  2363,  2367\n+   949,   954,   959,   963,   968,   973,   978,   985,   995,   997,\n+   999,  1003,  1006,  1008,  1012,  1014,  1015,  1020,  1026,  1033,\n+  1041,  1048,  1051,  1054,  1058,  1061,  1065,  1074,  1076,  1078,\n+  1082,  1084,  1087,  1094,  1102,  1104,  1108,  1115,  1125,  1129,\n+  1132,  1135,  1138,  1141,  1144,  1147,  1150,  1152,  1156,  1162,\n+  1167,  1169,  1173,  1176,  1180,  1182,  1185,  1187,  1188,  1190,\n+  1194,  1198,  1204,  1209,  1212,  1214,  1218,  1224,  1228,  1233,\n+  1242,  1246,  1251,  1263,  1265,  1268,  1270,  1272,  1276,  1280,\n+  1283,  1287,  1289,  1290,  1291,  1292,  1293,  1297,  1299,  1300,\n+  1301,  1302,  1306,  1308,  1309,  1310,  1311,  1312,  1313,  1314,\n+  1315,  1316,  1317,  1320,  1325,  1336,  1339,  1343,  1350,  1360,\n+  1366,  1372,  1378,  1380,  1385,  1387,  1392,  1394,  1396,  1398,\n+  1400,  1404,  1406,  1407,  1408,  1409,  1410,  1411,  1414,  1420,\n+  1422,  1424,  1428,  1433,  1438,  1444,  1454,  1460,  1462,  1464,\n+  1471,  1474,  1476,  1478,  1482,  1484,  1487,  1491,  1493,  1496,\n+  1503,  1509,  1511,  1513,  1517,  1525,  1528,  1530,  1532,  1536,\n+  1541,  1550,  1555,  1558,  1565,  1567,  1569,  1573,  1576,  1585,\n+  1592,  1594,  1598,  1611,  1613,  1619,  1625,  1629,  1631,  1635,\n+  1638,  1640,  1644,  1647,  1649,  1651,  1655,  1658,  1660,  1662,\n+  1666,  1669,  1671,  1673,  1677,  1683,  1685,  1689,  1696,  1698,\n+  1700,  1702,  1706,  1718,  1721,  1723,  1728,  1732,  1734,  1741,\n+  1749,  1766,  1768,  1773,  1777,  1780,  1785,  1787,  1790,  1792,\n+  1794,  1796,  1797,  1798,  1799,  1803,  1805,  1807,  1812,  1814,\n+  1816,  1818,  1820,  1824,  1827,  1832,  1834,  1839,  1840,  1841,\n+  1842,  1843,  1845,  1847,  1849,  1851,  1853,  1857,  1859,  1862,\n+  1868,  1873,  1877,  1880,  1882,  1884,  1888,  1890,  1892,  1894,\n+  1898,  1901,  1905,  1911,  1913,  1921,  1948,  1950,  1954,  1959,\n+  1966,  1970,  1973,  1975,  1986,  1997,  2002,  2011,  2013,  2017,\n+  2020,  2022,  2027,  2032,  2037,  2044,  2046,  2047,  2048,  2051,\n+  2056,  2061,  2063,  2064,  2066,  2068,  2069,  2071,  2075,  2078,\n+  2082,  2085,  2089,  2091,  2093,  2095,  2096,  2098,  2102,  2111,\n+  2113,  2115,  2128,  2130,  2136,  2138,  2140,  2144,  2146,  2151,\n+  2156,  2161,  2163,  2165,  2169,  2171,  2176,  2181,  2183,  2187,\n+  2189,  2194,  2199,  2204,  2206,  2208,  2212,  2214,  2219,  2224,\n+  2229,  2234,  2236,  2238,  2240,  2242,  2244,  2248,  2250,  2255,\n+  2260,  2262,  2266,  2268,  2273,  2277,  2279,  2284,  2288,  2290,\n+  2295,  2299,  2301,  2306,  2310,  2312,  2317,  2321,  2323,  2328,\n+  2334,  2336,  2340,  2342,  2345,  2348,  2356,  2358,  2359,  2362,\n+  2364,  2367,  2371\n };\n #endif\n \n@@ -2282,7 +2281,8 @@ static const short yycheck[] = {     3,\n #define YYPURE 1\n \n /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n-#line 3 \"/usr/freeware/share/bison.simple\"\n+#line 3 \"/usr/lib/bison.simple\"\n+/* This file comes from bison-1.28.  */\n \n /* Skeleton output parser for bison,\n    Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.\n@@ -2299,46 +2299,66 @@ static const short yycheck[] = {     3,\n \n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n-   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+   Foundation, Inc., 59 Temple Place - Suite 330,\n+   Boston, MA 02111-1307, USA.  */\n \n /* As a special exception, when this file is copied by Bison into a\n    Bison output file, you may use that output file without restriction.\n    This special exception was added by the Free Software Foundation\n    in version 1.24 of Bison.  */\n \n-#ifndef alloca\n+/* This is the parser code that is written into each bison parser\n+  when the %semantic_parser declaration is not specified in the grammar.\n+  It was written by Richard Stallman by simplifying the hairy parser\n+  used when %semantic_parser is specified.  */\n+\n+#ifndef YYSTACK_USE_ALLOCA\n+#ifdef alloca\n+#define YYSTACK_USE_ALLOCA\n+#else /* alloca not defined */\n #ifdef __GNUC__\n+#define YYSTACK_USE_ALLOCA\n #define alloca __builtin_alloca\n #else /* not GNU C.  */\n-#if (!defined (__STDC__) && defined (sparc)) || defined (__sparc__) || defined (__sparc) || defined (__sgi)\n+#if (!defined (__STDC__) && defined (sparc)) || defined (__sparc__) || defined (__sparc) || defined (__sgi) || (defined (__sun) && defined (__i386))\n+#define YYSTACK_USE_ALLOCA\n #include <alloca.h>\n #else /* not sparc */\n-#if defined (MSDOS) && !defined (__TURBOC__)\n+/* We think this test detects Watcom and Microsoft C.  */\n+/* This used to test MSDOS, but that is a bad idea\n+   since that symbol is in the user namespace.  */\n+#if (defined (_MSDOS) || defined (_MSDOS_)) && !defined (__TURBOC__)\n+#if 0 /* No need for malloc.h, which pollutes the namespace;\n+\t instead, just don't use alloca.  */\n #include <malloc.h>\n+#endif\n #else /* not MSDOS, or __TURBOC__ */\n #if defined(_AIX)\n-#include <malloc.h>\n+/* I don't know what this was needed for, but it pollutes the namespace.\n+   So I turned it off.   rms, 2 May 1997.  */\n+/* #include <malloc.h>  */\n  #pragma alloca\n-#else /* not MSDOS, __TURBOC__, or _AIX */\n-#ifdef __hpux\n-#ifdef __cplusplus\n-extern \"C\" {\n-void *alloca (unsigned int);\n-};\n-#else /* not __cplusplus */\n-void *alloca ();\n-#endif /* not __cplusplus */\n+#define YYSTACK_USE_ALLOCA\n+#else /* not MSDOS, or __TURBOC__, or _AIX */\n+#if 0\n+#ifdef __hpux /* haible@ilog.fr says this works for HPUX 9.05 and up,\n+\t\t and on HPUX 10.  Eventually we can turn this on.  */\n+#define YYSTACK_USE_ALLOCA\n+#define alloca __builtin_alloca\n #endif /* __hpux */\n+#endif\n #endif /* not _AIX */\n #endif /* not MSDOS, or __TURBOC__ */\n-#endif /* not sparc.  */\n-#endif /* not GNU C.  */\n-#endif /* alloca not defined.  */\n+#endif /* not sparc */\n+#endif /* not GNU C */\n+#endif /* alloca not defined */\n+#endif /* YYSTACK_USE_ALLOCA not defined */\n \n-/* This is the parser code that is written into each bison parser\n-  when the %semantic_parser declaration is not specified in the grammar.\n-  It was written by Richard Stallman by simplifying the hairy parser\n-  used when %semantic_parser is specified.  */\n+#ifdef YYSTACK_USE_ALLOCA\n+#define YYSTACK_ALLOC alloca\n+#else\n+#define YYSTACK_ALLOC malloc\n+#endif\n \n /* Note: there must be only one dollar sign in this file.\n    It is replaced by the list of actions, each action\n@@ -2348,8 +2368,8 @@ void *alloca ();\n #define yyclearin\t(yychar = YYEMPTY)\n #define YYEMPTY\t\t-2\n #define YYEOF\t\t0\n-#define YYACCEPT\treturn(0)\n-#define YYABORT \treturn(1)\n+#define YYACCEPT\tgoto yyacceptlab\n+#define YYABORT \tgoto yyabortlab\n #define YYERROR\t\tgoto yyerrlab1\n /* Like YYERROR except do call yyerror.\n    This remains here temporarily to ease the\n@@ -2430,12 +2450,12 @@ int yydebug;\t\t\t/*  nonzero means print parse trace\t*/\n #ifndef YYMAXDEPTH\n #define YYMAXDEPTH 10000\n #endif\n-\n-/* Prevent warning if -Wstrict-prototypes.  */\n-#ifdef __GNUC__\n-int yyparse (void);\n-#endif\n \f\n+/* Define __yy_memcpy.  Note that the size argument\n+   should be passed with type unsigned int, because that is what the non-GCC\n+   definitions require.  With GCC, __builtin_memcpy takes an arg\n+   of type size_t, but it can handle unsigned int.  */\n+\n #if __GNUC__ > 1\t\t/* GNU C and GNU C++ define this.  */\n #define __yy_memcpy(TO,FROM,COUNT)\t__builtin_memcpy(TO,FROM,COUNT)\n #else\t\t\t\t/* not GNU C or C++ */\n@@ -2447,7 +2467,7 @@ static void\n __yy_memcpy (to, from, count)\n      char *to;\n      char *from;\n-     int count;\n+     unsigned int count;\n {\n   register char *f = from;\n   register char *t = to;\n@@ -2462,10 +2482,10 @@ __yy_memcpy (to, from, count)\n /* This is the most reliable way to avoid incompatibilities\n    in available built-in functions on various systems.  */\n static void\n-__yy_memcpy (char *to, char *from, int count)\n+__yy_memcpy (char *to, char *from, unsigned int count)\n {\n-  register char *f = from;\n   register char *t = to;\n+  register char *f = from;\n   register int i = count;\n \n   while (i-- > 0)\n@@ -2475,7 +2495,7 @@ __yy_memcpy (char *to, char *from, int count)\n #endif\n #endif\n \f\n-#line 196 \"/usr/freeware/share/bison.simple\"\n+#line 217 \"/usr/lib/bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -2496,6 +2516,15 @@ __yy_memcpy (char *to, char *from, int count)\n #define YYPARSE_PARAM_DECL\n #endif /* not YYPARSE_PARAM */\n \n+/* Prevent warning if -Wstrict-prototypes.  */\n+#ifdef __GNUC__\n+#ifdef YYPARSE_PARAM\n+int yyparse (void *);\n+#else\n+int yyparse (void);\n+#endif\n+#endif\n+\n int\n yyparse(YYPARSE_PARAM_ARG)\n      YYPARSE_PARAM_DECL\n@@ -2524,6 +2553,7 @@ yyparse(YYPARSE_PARAM_ARG)\n #endif\n \n   int yystacksize = YYINITDEPTH;\n+  int yyfree_stacks = 0;\n \n #ifdef YYPURE\n   int yychar;\n@@ -2608,18 +2638,32 @@ yyparse(YYPARSE_PARAM_ARG)\n       if (yystacksize >= YYMAXDEPTH)\n \t{\n \t  yyerror(\"parser stack overflow\");\n+\t  if (yyfree_stacks)\n+\t    {\n+\t      free (yyss);\n+\t      free (yyvs);\n+#ifdef YYLSP_NEEDED\n+\t      free (yyls);\n+#endif\n+\t    }\n \t  return 2;\n \t}\n       yystacksize *= 2;\n       if (yystacksize > YYMAXDEPTH)\n \tyystacksize = YYMAXDEPTH;\n-      yyss = (short *) alloca (yystacksize * sizeof (*yyssp));\n-      __yy_memcpy ((char *)yyss, (char *)yyss1, size * sizeof (*yyssp));\n-      yyvs = (YYSTYPE *) alloca (yystacksize * sizeof (*yyvsp));\n-      __yy_memcpy ((char *)yyvs, (char *)yyvs1, size * sizeof (*yyvsp));\n+#ifndef YYSTACK_USE_ALLOCA\n+      yyfree_stacks = 1;\n+#endif\n+      yyss = (short *) YYSTACK_ALLOC (yystacksize * sizeof (*yyssp));\n+      __yy_memcpy ((char *)yyss, (char *)yyss1,\n+\t\t   size * (unsigned int) sizeof (*yyssp));\n+      yyvs = (YYSTYPE *) YYSTACK_ALLOC (yystacksize * sizeof (*yyvsp));\n+      __yy_memcpy ((char *)yyvs, (char *)yyvs1,\n+\t\t   size * (unsigned int) sizeof (*yyvsp));\n #ifdef YYLSP_NEEDED\n-      yyls = (YYLTYPE *) alloca (yystacksize * sizeof (*yylsp));\n-      __yy_memcpy ((char *)yyls, (char *)yyls1, size * sizeof (*yylsp));\n+      yyls = (YYLTYPE *) YYSTACK_ALLOC (yystacksize * sizeof (*yylsp));\n+      __yy_memcpy ((char *)yyls, (char *)yyls1,\n+\t\t   size * (unsigned int) sizeof (*yylsp));\n #endif\n #endif /* no yyoverflow */\n \n@@ -3252,16 +3296,20 @@ case 125:\n     break;}\n case 126:\n #line 974 \"./parse.y\"\n-{yyerror (\"Missing identifier\"); RECOVER;;\n+{\n+\t\t  yyerror (\"Missing identifier\"); RECOVER;\n+\t\t  yyval.node = NULL_TREE;\n+\t\t;\n     break;}\n case 127:\n-#line 976 \"./parse.y\"\n+#line 979 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing identifier\"); RECOVER;\n+\t\t  yyval.node = NULL_TREE;\n \t\t;\n     break;}\n case 128:\n-#line 983 \"./parse.y\"\n+#line 987 \"./parse.y\"\n {\n \t\t  check_modifiers (\"Illegal modifier `%s'. Only `final' was expected here\",\n \t\t\t\t   yyvsp[0].value, ACC_FINAL);\n@@ -3270,267 +3318,267 @@ case 128:\n \t\t;\n     break;}\n case 129:\n-#line 992 \"./parse.y\"\n+#line 996 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 130:\n-#line 994 \"./parse.y\"\n+#line 998 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 131:\n-#line 996 \"./parse.y\"\n+#line 1000 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 132:\n-#line 1001 \"./parse.y\"\n+#line 1005 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, yyvsp[0].node); ;\n     break;}\n case 133:\n-#line 1003 \"./parse.y\"\n+#line 1007 \"./parse.y\"\n { yyval.node = tree_cons (yyvsp[0].node, yyvsp[0].node, yyvsp[-2].node); ;\n     break;}\n case 134:\n-#line 1005 \"./parse.y\"\n+#line 1009 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 137:\n-#line 1012 \"./parse.y\"\n+#line 1016 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 138:\n-#line 1018 \"./parse.y\"\n+#line 1022 \"./parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[0].node) = ctxp->static_initialized;\n \t\t  ctxp->static_initialized = yyvsp[0].node;\n \t\t;\n     break;}\n case 139:\n-#line 1023 \"./parse.y\"\n+#line 1027 \"./parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[-1].node) = ctxp->static_initialized;\n \t\t  ctxp->static_initialized = yyvsp[-1].node;\n \t\t;\n     break;}\n case 140:\n-#line 1031 \"./parse.y\"\n+#line 1035 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[0].value));\n \t\t;\n     break;}\n case 141:\n-#line 1039 \"./parse.y\"\n+#line 1043 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 142:\n-#line 1044 \"./parse.y\"\n+#line 1048 \"./parse.y\"\n { finish_method_declaration (yyvsp[0].node); ;\n     break;}\n case 143:\n-#line 1049 \"./parse.y\"\n+#line 1053 \"./parse.y\"\n { yyval.node = method_header (0, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 144:\n-#line 1051 \"./parse.y\"\n+#line 1055 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-2].value, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 145:\n-#line 1056 \"./parse.y\"\n+#line 1060 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 146:\n-#line 1058 \"./parse.y\"\n+#line 1062 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 147:\n-#line 1066 \"./parse.y\"\n+#line 1070 \"./parse.y\"\n { \n \t\t  BLOCK_EXPR_BODY (yyvsp[0].node) = empty_stmt_node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 148:\n-#line 1071 \"./parse.y\"\n+#line 1075 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 149:\n-#line 1073 \"./parse.y\"\n+#line 1077 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 150:\n-#line 1075 \"./parse.y\"\n+#line 1079 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 153:\n-#line 1085 \"./parse.y\"\n+#line 1089 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-3].node, NULL_TREE); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-3].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 154:\n-#line 1091 \"./parse.y\"\n+#line 1095 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-4].node, yyvsp[-2].node); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-4].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 155:\n-#line 1099 \"./parse.y\"\n+#line 1103 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 156:\n-#line 1101 \"./parse.y\"\n+#line 1105 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 157:\n-#line 1106 \"./parse.y\"\n+#line 1110 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (this_identifier_node);\n \t\t  EXPR_WFL_LINECOL (wfl) = yyvsp[0].operator.location;\n \t\t  yyval.node = wfl;\n \t\t;\n     break;}\n case 158:\n-#line 1112 \"./parse.y\"\n+#line 1116 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (super_identifier_node);\n \t\t  EXPR_WFL_LINECOL (wfl) = yyvsp[0].operator.location;\n \t\t  yyval.node = wfl;\n \t\t;\n     break;}\n case 159:\n-#line 1123 \"./parse.y\"\n+#line 1127 \"./parse.y\"\n { create_interface (0, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 160:\n-#line 1125 \"./parse.y\"\n+#line 1129 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 161:\n-#line 1129 \"./parse.y\"\n+#line 1133 \"./parse.y\"\n { create_interface (yyvsp[-2].value, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 162:\n-#line 1131 \"./parse.y\"\n+#line 1135 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 163:\n-#line 1135 \"./parse.y\"\n+#line 1139 \"./parse.y\"\n { create_interface (0, yyvsp[-1].node, yyvsp[0].node);\t;\n     break;}\n case 164:\n-#line 1137 \"./parse.y\"\n+#line 1141 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 165:\n-#line 1141 \"./parse.y\"\n+#line 1145 \"./parse.y\"\n { create_interface (yyvsp[-3].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 166:\n-#line 1143 \"./parse.y\"\n+#line 1147 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 167:\n-#line 1147 \"./parse.y\"\n+#line 1151 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 168:\n-#line 1149 \"./parse.y\"\n+#line 1153 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 169:\n-#line 1154 \"./parse.y\"\n+#line 1158 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 170:\n-#line 1159 \"./parse.y\"\n+#line 1163 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 171:\n-#line 1164 \"./parse.y\"\n+#line 1168 \"./parse.y\"\n {yyerror (\"Invalid interface type\"); RECOVER;;\n     break;}\n case 172:\n-#line 1166 \"./parse.y\"\n+#line 1170 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 173:\n-#line 1171 \"./parse.y\"\n+#line 1175 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 174:\n-#line 1173 \"./parse.y\"\n+#line 1177 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 179:\n-#line 1185 \"./parse.y\"\n+#line 1189 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 180:\n-#line 1187 \"./parse.y\"\n+#line 1191 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 182:\n-#line 1196 \"./parse.y\"\n+#line 1200 \"./parse.y\"\n { \n \t\t  check_abstract_method_header (yyvsp[-1].node);\n \t\t  current_function_decl = NULL_TREE; /* FIXME ? */\n \t\t;\n     break;}\n case 183:\n-#line 1201 \"./parse.y\"\n+#line 1205 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 184:\n-#line 1207 \"./parse.y\"\n+#line 1211 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 185:\n-#line 1209 \"./parse.y\"\n+#line 1213 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 186:\n-#line 1211 \"./parse.y\"\n+#line 1215 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-3].operator.location, yyvsp[-2].node); ;\n     break;}\n case 187:\n-#line 1216 \"./parse.y\"\n+#line 1220 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), \n \t\t\t\t  yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 188:\n-#line 1221 \"./parse.y\"\n+#line 1225 \"./parse.y\"\n {\n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 189:\n-#line 1225 \"./parse.y\"\n+#line 1229 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 190:\n-#line 1231 \"./parse.y\"\n+#line 1235 \"./parse.y\"\n { \n \t\t  /* Store the location of the `}' when doing xrefs */\n \t\t  if (current_function_decl && flag_emit_xref)\n@@ -3540,15 +3588,15 @@ case 190:\n \t\t;\n     break;}\n case 191:\n-#line 1239 \"./parse.y\"\n+#line 1243 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 192:\n-#line 1244 \"./parse.y\"\n+#line 1248 \"./parse.y\"\n { enter_block (); ;\n     break;}\n case 193:\n-#line 1249 \"./parse.y\"\n+#line 1253 \"./parse.y\"\n { \n \t\t  maybe_absorb_scoping_blocks ();\n \t\t  /* Store the location of the `}' when doing xrefs */\n@@ -3559,35 +3607,35 @@ case 193:\n \t\t;\n     break;}\n case 197:\n-#line 1267 \"./parse.y\"\n+#line 1271 \"./parse.y\"\n { java_method_add_stmt (current_function_decl, yyvsp[0].node); ;\n     break;}\n case 198:\n-#line 1269 \"./parse.y\"\n+#line 1273 \"./parse.y\"\n { parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 200:\n-#line 1278 \"./parse.y\"\n+#line 1282 \"./parse.y\"\n { declare_local_variables (0, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 201:\n-#line 1280 \"./parse.y\"\n+#line 1284 \"./parse.y\"\n { declare_local_variables (yyvsp[-2].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 207:\n-#line 1290 \"./parse.y\"\n+#line 1294 \"./parse.y\"\n { yyval.node = exit_block (); ;\n     break;}\n case 212:\n-#line 1299 \"./parse.y\"\n+#line 1303 \"./parse.y\"\n { yyval.node = exit_block (); ;\n     break;}\n case 224:\n-#line 1318 \"./parse.y\"\n+#line 1322 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 225:\n-#line 1323 \"./parse.y\"\n+#line 1327 \"./parse.y\"\n {\n \t\t  yyval.node = build_labeled_block (EXPR_WFL_LINECOL (yyvsp[-1].node), \n \t\t\t\t\t    EXPR_WFL_NODE (yyvsp[-1].node));\n@@ -3597,19 +3645,19 @@ case 225:\n \t\t;\n     break;}\n case 226:\n-#line 1334 \"./parse.y\"\n+#line 1338 \"./parse.y\"\n { yyval.node = finish_labeled_statement (yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 227:\n-#line 1336 \"./parse.y\"\n+#line 1340 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 228:\n-#line 1341 \"./parse.y\"\n+#line 1345 \"./parse.y\"\n { yyval.node = finish_labeled_statement (yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 229:\n-#line 1348 \"./parse.y\"\n+#line 1352 \"./parse.y\"\n {\n \t\t  /* We have a statement. Generate a WFL around it so\n \t\t     we can debug it */\n@@ -3620,106 +3668,106 @@ case 229:\n \t\t;\n     break;}\n case 230:\n-#line 1357 \"./parse.y\"\n+#line 1361 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 231:\n-#line 1363 \"./parse.y\"\n+#line 1367 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 232:\n-#line 1369 \"./parse.y\"\n+#line 1373 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 233:\n-#line 1375 \"./parse.y\"\n+#line 1379 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 234:\n-#line 1377 \"./parse.y\"\n+#line 1381 \"./parse.y\"\n {\n \t\t  parse_ctor_invocation_error ();\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 235:\n-#line 1382 \"./parse.y\"\n+#line 1386 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 236:\n-#line 1384 \"./parse.y\"\n+#line 1388 \"./parse.y\"\n {\n \t\t  parse_ctor_invocation_error ();\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 237:\n-#line 1389 \"./parse.y\"\n+#line 1393 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 238:\n-#line 1391 \"./parse.y\"\n+#line 1395 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 239:\n-#line 1393 \"./parse.y\"\n+#line 1397 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 240:\n-#line 1395 \"./parse.y\"\n+#line 1399 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 241:\n-#line 1397 \"./parse.y\"\n+#line 1401 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 249:\n-#line 1412 \"./parse.y\"\n+#line 1416 \"./parse.y\"\n { \n \t\t  yyval.node = build_if_else_statement (yyvsp[-3].operator.location, yyvsp[-2].node, \n \t\t\t\t\t\tyyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 250:\n-#line 1417 \"./parse.y\"\n+#line 1421 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 251:\n-#line 1419 \"./parse.y\"\n+#line 1423 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 252:\n-#line 1421 \"./parse.y\"\n+#line 1425 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 253:\n-#line 1426 \"./parse.y\"\n+#line 1430 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 254:\n-#line 1431 \"./parse.y\"\n+#line 1435 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 255:\n-#line 1436 \"./parse.y\"\n+#line 1440 \"./parse.y\"\n {\n \t\t  enter_block ();\n \t\t;\n     break;}\n case 256:\n-#line 1440 \"./parse.y\"\n+#line 1444 \"./parse.y\"\n { \n \t\t  /* Make into \"proper list\" of COMPOUND_EXPRs.\n \t\t     I.e. make the last statment also have its own\n@@ -3730,112 +3778,112 @@ case 256:\n \t\t;\n     break;}\n case 257:\n-#line 1452 \"./parse.y\"\n+#line 1456 \"./parse.y\"\n { \n \t\t  yyval.node = build (SWITCH_EXPR, NULL_TREE, yyvsp[-1].node, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 258:\n-#line 1457 \"./parse.y\"\n+#line 1461 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 259:\n-#line 1459 \"./parse.y\"\n+#line 1463 \"./parse.y\"\n {yyerror (\"Missing term or ')'\"); DRECOVER(switch_statement);;\n     break;}\n case 260:\n-#line 1461 \"./parse.y\"\n+#line 1465 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 261:\n-#line 1469 \"./parse.y\"\n+#line 1473 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 262:\n-#line 1471 \"./parse.y\"\n+#line 1475 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 263:\n-#line 1473 \"./parse.y\"\n+#line 1477 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 264:\n-#line 1475 \"./parse.y\"\n+#line 1479 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 270:\n-#line 1494 \"./parse.y\"\n+#line 1498 \"./parse.y\"\n { \n \t\t  tree lab = build1 (CASE_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-2].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 271:\n-#line 1500 \"./parse.y\"\n+#line 1504 \"./parse.y\"\n { \n \t\t  tree lab = build1 (DEFAULT_EXPR, NULL_TREE, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-1].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 272:\n-#line 1506 \"./parse.y\"\n+#line 1510 \"./parse.y\"\n {yyerror (\"Missing or invalid constant expression\"); RECOVER;;\n     break;}\n case 273:\n-#line 1508 \"./parse.y\"\n+#line 1512 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 274:\n-#line 1510 \"./parse.y\"\n+#line 1514 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 275:\n-#line 1515 \"./parse.y\"\n+#line 1519 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (yyvsp[-2].operator.location, yyvsp[-1].node, 0);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 276:\n-#line 1523 \"./parse.y\"\n+#line 1527 \"./parse.y\"\n { yyval.node = finish_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 277:\n-#line 1525 \"./parse.y\"\n+#line 1529 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 278:\n-#line 1527 \"./parse.y\"\n+#line 1531 \"./parse.y\"\n {yyerror (\"Missing term and ')' expected\"); RECOVER;;\n     break;}\n case 279:\n-#line 1529 \"./parse.y\"\n+#line 1533 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 280:\n-#line 1534 \"./parse.y\"\n+#line 1538 \"./parse.y\"\n { yyval.node = finish_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 281:\n-#line 1539 \"./parse.y\"\n+#line 1543 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (0, NULL_TREE, 1);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 282:\n-#line 1548 \"./parse.y\"\n+#line 1552 \"./parse.y\"\n { yyval.node = finish_loop_body (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[-5].node, 1); ;\n     break;}\n case 283:\n-#line 1553 \"./parse.y\"\n+#line 1557 \"./parse.y\"\n { yyval.node = finish_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 284:\n-#line 1555 \"./parse.y\"\n+#line 1559 \"./parse.y\"\n { \n \t\t  yyval.node = finish_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3844,23 +3892,23 @@ case 284:\n \t\t;\n     break;}\n case 285:\n-#line 1562 \"./parse.y\"\n+#line 1566 \"./parse.y\"\n {yyerror (\"Invalid control expression\"); RECOVER;;\n     break;}\n case 286:\n-#line 1564 \"./parse.y\"\n+#line 1568 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 287:\n-#line 1566 \"./parse.y\"\n+#line 1570 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 288:\n-#line 1571 \"./parse.y\"\n+#line 1575 \"./parse.y\"\n { yyval.node = finish_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);;\n     break;}\n case 289:\n-#line 1573 \"./parse.y\"\n+#line 1577 \"./parse.y\"\n { \n \t\t  yyval.node = finish_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3869,23 +3917,23 @@ case 289:\n \t\t;\n     break;}\n case 290:\n-#line 1583 \"./parse.y\"\n+#line 1587 \"./parse.y\"\n { \n \t\t  /* This scope defined for local variable that may be\n                      defined within the scope of the for loop */\n \t\t  enter_block (); \n \t\t;\n     break;}\n case 291:\n-#line 1589 \"./parse.y\"\n+#line 1593 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(for_1);;\n     break;}\n case 292:\n-#line 1591 \"./parse.y\"\n+#line 1595 \"./parse.y\"\n {yyerror (\"Invalid init statement\"); RECOVER;;\n     break;}\n case 293:\n-#line 1596 \"./parse.y\"\n+#line 1600 \"./parse.y\"\n { \n \t\t  /* We now declare the loop body. The loop is\n                      declared as a for loop. */\n@@ -3898,138 +3946,138 @@ case 293:\n \t\t;\n     break;}\n case 294:\n-#line 1608 \"./parse.y\"\n+#line 1612 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 295:\n-#line 1610 \"./parse.y\"\n+#line 1614 \"./parse.y\"\n { \n \t\t  /* Init statement recorded within the previously\n                      defined block scope */\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t;\n     break;}\n case 296:\n-#line 1616 \"./parse.y\"\n+#line 1620 \"./parse.y\"\n { \n \t\t  /* Local variable are recorded within the previously\n \t\t     defined block scope */\n \t\t  yyval.node = NULL_TREE;\n \t\t;\n     break;}\n case 297:\n-#line 1622 \"./parse.y\"\n+#line 1626 \"./parse.y\"\n {yyerror (\"';' expected\"); DRECOVER(for_init_1);;\n     break;}\n case 298:\n-#line 1626 \"./parse.y\"\n+#line 1630 \"./parse.y\"\n {yyval.node = empty_stmt_node;;\n     break;}\n case 299:\n-#line 1628 \"./parse.y\"\n+#line 1632 \"./parse.y\"\n { yyval.node = build_debugable_stmt (BUILD_LOCATION (), yyvsp[0].node); ;\n     break;}\n case 300:\n-#line 1633 \"./parse.y\"\n+#line 1637 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (NULL_TREE, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 301:\n-#line 1635 \"./parse.y\"\n+#line 1639 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (yyvsp[-2].node, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 302:\n-#line 1637 \"./parse.y\"\n+#line 1641 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 303:\n-#line 1642 \"./parse.y\"\n+#line 1646 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 1, NULL_TREE); ;\n     break;}\n case 304:\n-#line 1644 \"./parse.y\"\n+#line 1648 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 1, yyvsp[-1].node); ;\n     break;}\n case 305:\n-#line 1646 \"./parse.y\"\n+#line 1650 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 306:\n-#line 1648 \"./parse.y\"\n+#line 1652 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 307:\n-#line 1653 \"./parse.y\"\n+#line 1657 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 0, NULL_TREE); ;\n     break;}\n case 308:\n-#line 1655 \"./parse.y\"\n+#line 1659 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 0, yyvsp[-1].node); ;\n     break;}\n case 309:\n-#line 1657 \"./parse.y\"\n+#line 1661 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 310:\n-#line 1659 \"./parse.y\"\n+#line 1663 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 311:\n-#line 1664 \"./parse.y\"\n+#line 1668 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 312:\n-#line 1666 \"./parse.y\"\n+#line 1670 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 313:\n-#line 1668 \"./parse.y\"\n+#line 1672 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 314:\n-#line 1670 \"./parse.y\"\n+#line 1674 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 315:\n-#line 1675 \"./parse.y\"\n+#line 1679 \"./parse.y\"\n { \n \t\t  yyval.node = build1 (THROW_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 316:\n-#line 1680 \"./parse.y\"\n+#line 1684 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 317:\n-#line 1682 \"./parse.y\"\n+#line 1686 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 318:\n-#line 1687 \"./parse.y\"\n+#line 1691 \"./parse.y\"\n { \n \t\t  yyval.node = build (SYNCHRONIZED_EXPR, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = \n \t\t    EXPR_WFL_LINECOL (MODIFIER_WFL (SYNCHRONIZED_TK));\n \t\t;\n     break;}\n case 319:\n-#line 1693 \"./parse.y\"\n+#line 1697 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 320:\n-#line 1695 \"./parse.y\"\n+#line 1699 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 321:\n-#line 1697 \"./parse.y\"\n+#line 1701 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 322:\n-#line 1699 \"./parse.y\"\n+#line 1703 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 323:\n-#line 1704 \"./parse.y\"\n+#line 1708 \"./parse.y\"\n {\n \t\t  check_modifiers (\n              \"Illegal modifier `%s'. Only `synchronized' was expected here\",\n@@ -4040,41 +4088,41 @@ case 323:\n \t\t;\n     break;}\n case 324:\n-#line 1716 \"./parse.y\"\n+#line 1720 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-2].operator.location, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 325:\n-#line 1718 \"./parse.y\"\n+#line 1722 \"./parse.y\"\n { yyval.node = build_try_finally_statement (yyvsp[-2].operator.location, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 326:\n-#line 1720 \"./parse.y\"\n+#line 1724 \"./parse.y\"\n { yyval.node = build_try_finally_statement \n \t\t    (yyvsp[-3].operator.location, build_try_statement (yyvsp[-3].operator.location,\n \t\t\t\t\t\t       yyvsp[-2].node, yyvsp[-1].node), yyvsp[0].node);\n \t\t;\n     break;}\n case 327:\n-#line 1725 \"./parse.y\"\n+#line 1729 \"./parse.y\"\n {yyerror (\"'{' expected\"); DRECOVER (try_statement);;\n     break;}\n case 329:\n-#line 1731 \"./parse.y\"\n+#line 1735 \"./parse.y\"\n { \n \t\t  TREE_CHAIN (yyvsp[0].node) = yyvsp[-1].node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 330:\n-#line 1739 \"./parse.y\"\n+#line 1743 \"./parse.y\"\n { \n \t\t  java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t  exit_block ();\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 331:\n-#line 1747 \"./parse.y\"\n+#line 1751 \"./parse.y\"\n { \n \t\t  /* We add a block to define a scope for\n \t\t     formal_parameter (CCBP). The formal parameter is\n@@ -4092,187 +4140,187 @@ case 331:\n \t\t;\n     break;}\n case 332:\n-#line 1763 \"./parse.y\"\n+#line 1767 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER; yyval.node = NULL_TREE;;\n     break;}\n case 333:\n-#line 1765 \"./parse.y\"\n+#line 1769 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term or ')' expected\"); \n \t\t  RECOVER; yyval.node = NULL_TREE;\n \t\t;\n     break;}\n case 334:\n-#line 1770 \"./parse.y\"\n+#line 1774 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER; yyval.node = NULL_TREE;;\n     break;}\n case 335:\n-#line 1775 \"./parse.y\"\n+#line 1779 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 336:\n-#line 1777 \"./parse.y\"\n+#line 1781 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER; ;\n     break;}\n case 340:\n-#line 1789 \"./parse.y\"\n+#line 1793 \"./parse.y\"\n { yyval.node = build_this (yyvsp[0].operator.location); ;\n     break;}\n case 341:\n-#line 1791 \"./parse.y\"\n+#line 1795 \"./parse.y\"\n {yyval.node = yyvsp[-1].node;;\n     break;}\n case 346:\n-#line 1800 \"./parse.y\"\n+#line 1804 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"named class literals\"); ;\n     break;}\n case 347:\n-#line 1802 \"./parse.y\"\n+#line 1806 \"./parse.y\"\n { yyval.node = build_class_ref (yyvsp[-2].node); ;\n     break;}\n case 348:\n-#line 1804 \"./parse.y\"\n+#line 1808 \"./parse.y\"\n { yyval.node = build_class_ref (void_type_node); ;\n     break;}\n case 349:\n-#line 1809 \"./parse.y\"\n+#line 1813 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"class literals\"); ;\n     break;}\n case 350:\n-#line 1811 \"./parse.y\"\n+#line 1815 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 351:\n-#line 1813 \"./parse.y\"\n+#line 1817 \"./parse.y\"\n {yyerror (\"'class' or 'this' expected\" ); RECOVER;;\n     break;}\n case 352:\n-#line 1815 \"./parse.y\"\n+#line 1819 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 353:\n-#line 1817 \"./parse.y\"\n+#line 1821 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 354:\n-#line 1822 \"./parse.y\"\n+#line 1826 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 355:\n-#line 1824 \"./parse.y\"\n+#line 1828 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 356:\n-#line 1829 \"./parse.y\"\n+#line 1833 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 357:\n-#line 1831 \"./parse.y\"\n+#line 1835 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 362:\n-#line 1840 \"./parse.y\"\n+#line 1844 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(new_1);;\n     break;}\n case 363:\n-#line 1842 \"./parse.y\"\n+#line 1846 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 364:\n-#line 1844 \"./parse.y\"\n+#line 1848 \"./parse.y\"\n {yyerror (\"')' or term expected\"); RECOVER;;\n     break;}\n case 365:\n-#line 1846 \"./parse.y\"\n+#line 1850 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 366:\n-#line 1848 \"./parse.y\"\n+#line 1852 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 367:\n-#line 1850 \"./parse.y\"\n+#line 1854 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 370:\n-#line 1860 \"./parse.y\"\n+#line 1864 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, NULL_TREE);\n \t\t  ctxp->formal_parameter_number = 1; \n \t\t;\n     break;}\n case 371:\n-#line 1865 \"./parse.y\"\n+#line 1869 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 372:\n-#line 1870 \"./parse.y\"\n+#line 1874 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 373:\n-#line 1875 \"./parse.y\"\n+#line 1879 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 374:\n-#line 1877 \"./parse.y\"\n+#line 1881 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 375:\n-#line 1879 \"./parse.y\"\n+#line 1883 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, CURRENT_OSB (ctxp));;\n     break;}\n case 376:\n-#line 1881 \"./parse.y\"\n+#line 1885 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, CURRENT_OSB (ctxp));;\n     break;}\n case 377:\n-#line 1885 \"./parse.y\"\n+#line 1889 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 378:\n-#line 1887 \"./parse.y\"\n+#line 1891 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 379:\n-#line 1889 \"./parse.y\"\n+#line 1893 \"./parse.y\"\n {yyerror (\"'[' expected\"); DRECOVER (\"]\");;\n     break;}\n case 380:\n-#line 1891 \"./parse.y\"\n+#line 1895 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 381:\n-#line 1896 \"./parse.y\"\n+#line 1900 \"./parse.y\"\n { yyval.node = build_tree_list (NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 382:\n-#line 1898 \"./parse.y\"\n+#line 1902 \"./parse.y\"\n { yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyval.node); ;\n     break;}\n case 383:\n-#line 1903 \"./parse.y\"\n+#line 1907 \"./parse.y\"\n { \n \t\t  EXPR_WFL_LINECOL (yyvsp[-1].node) = yyvsp[-2].operator.location;\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 384:\n-#line 1908 \"./parse.y\"\n+#line 1912 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 385:\n-#line 1910 \"./parse.y\"\n+#line 1914 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term\");\n \t\t  yyerror (\"']' expected\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 386:\n-#line 1919 \"./parse.y\"\n+#line 1923 \"./parse.y\"\n { \n \t\t  int allocate = 0;\n \t\t  /* If not initialized, allocate memory for the osb\n@@ -4300,19 +4348,19 @@ case 386:\n \t\t;\n     break;}\n case 387:\n-#line 1945 \"./parse.y\"\n+#line 1949 \"./parse.y\"\n { CURRENT_OSB (ctxp)++; ;\n     break;}\n case 388:\n-#line 1947 \"./parse.y\"\n+#line 1951 \"./parse.y\"\n { yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 389:\n-#line 1952 \"./parse.y\"\n+#line 1956 \"./parse.y\"\n { yyval.node = make_qualified_primary (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 390:\n-#line 1956 \"./parse.y\"\n+#line 1960 \"./parse.y\"\n {\n \t\t  tree super_wfl = \n \t\t    build_wfl_node (super_identifier_node);\n@@ -4321,19 +4369,19 @@ case 390:\n \t\t;\n     break;}\n case 391:\n-#line 1963 \"./parse.y\"\n+#line 1967 \"./parse.y\"\n {yyerror (\"Field expected\"); DRECOVER (super_field_acces);;\n     break;}\n case 392:\n-#line 1968 \"./parse.y\"\n+#line 1972 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 393:\n-#line 1970 \"./parse.y\"\n+#line 1974 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 394:\n-#line 1972 \"./parse.y\"\n+#line 1976 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-4].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4346,7 +4394,7 @@ case 394:\n \t\t;\n     break;}\n case 395:\n-#line 1983 \"./parse.y\"\n+#line 1987 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-5].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4359,121 +4407,121 @@ case 395:\n \t\t;\n     break;}\n case 396:\n-#line 1994 \"./parse.y\"\n+#line 1998 \"./parse.y\"\n { \n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-2].node, NULL_TREE, yyvsp[-4].operator.location, yyvsp[-3].operator.location);\n \t\t;\n     break;}\n case 397:\n-#line 1999 \"./parse.y\"\n+#line 2003 \"./parse.y\"\n {\n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-3].node, yyvsp[-1].node, yyvsp[-5].operator.location, yyvsp[-4].operator.location);\n \t\t;\n     break;}\n case 398:\n-#line 2008 \"./parse.y\"\n+#line 2012 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 399:\n-#line 2010 \"./parse.y\"\n+#line 2014 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 400:\n-#line 2015 \"./parse.y\"\n+#line 2019 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 401:\n-#line 2017 \"./parse.y\"\n+#line 2021 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 402:\n-#line 2019 \"./parse.y\"\n+#line 2023 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 403:\n-#line 2024 \"./parse.y\"\n+#line 2028 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 404:\n-#line 2029 \"./parse.y\"\n+#line 2033 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 405:\n-#line 2034 \"./parse.y\"\n+#line 2038 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 410:\n-#line 2049 \"./parse.y\"\n+#line 2053 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 411:\n-#line 2054 \"./parse.y\"\n+#line 2058 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 414:\n-#line 2061 \"./parse.y\"\n+#line 2065 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 415:\n-#line 2063 \"./parse.y\"\n+#line 2067 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 417:\n-#line 2066 \"./parse.y\"\n+#line 2070 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 418:\n-#line 2068 \"./parse.y\"\n+#line 2072 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 419:\n-#line 2073 \"./parse.y\"\n+#line 2077 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 420:\n-#line 2075 \"./parse.y\"\n+#line 2079 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 421:\n-#line 2080 \"./parse.y\"\n+#line 2084 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 422:\n-#line 2082 \"./parse.y\"\n+#line 2086 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 424:\n-#line 2088 \"./parse.y\"\n+#line 2092 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 425:\n-#line 2090 \"./parse.y\"\n+#line 2094 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 427:\n-#line 2093 \"./parse.y\"\n+#line 2097 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 428:\n-#line 2095 \"./parse.y\"\n+#line 2099 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 429:\n-#line 2100 \"./parse.y\"\n+#line 2104 \"./parse.y\"\n { \n \t\t  tree type = yyvsp[-3].node;\n \t\t  while (CURRENT_OSB (ctxp)--)\n@@ -4483,15 +4531,15 @@ case 429:\n \t\t;\n     break;}\n case 430:\n-#line 2108 \"./parse.y\"\n+#line 2112 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 431:\n-#line 2110 \"./parse.y\"\n+#line 2114 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 432:\n-#line 2112 \"./parse.y\"\n+#line 2116 \"./parse.y\"\n { \n \t\t  const char *ptr;\n \t\t  while (CURRENT_OSB (ctxp)--)\n@@ -4506,275 +4554,275 @@ case 432:\n \t\t;\n     break;}\n case 433:\n-#line 2125 \"./parse.y\"\n+#line 2129 \"./parse.y\"\n {yyerror (\"']' expected, invalid type expression\");;\n     break;}\n case 434:\n-#line 2127 \"./parse.y\"\n+#line 2131 \"./parse.y\"\n {\n \t          if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid type expression\"); RECOVER;\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 435:\n-#line 2133 \"./parse.y\"\n+#line 2137 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 436:\n-#line 2135 \"./parse.y\"\n+#line 2139 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 437:\n-#line 2137 \"./parse.y\"\n+#line 2141 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 439:\n-#line 2143 \"./parse.y\"\n+#line 2147 \"./parse.y\"\n { \n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), \n \t\t\t\t    yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 440:\n-#line 2148 \"./parse.y\"\n+#line 2152 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 441:\n-#line 2153 \"./parse.y\"\n+#line 2157 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 442:\n-#line 2158 \"./parse.y\"\n+#line 2162 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 443:\n-#line 2160 \"./parse.y\"\n+#line 2164 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 444:\n-#line 2162 \"./parse.y\"\n+#line 2166 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 446:\n-#line 2168 \"./parse.y\"\n+#line 2172 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 447:\n-#line 2173 \"./parse.y\"\n+#line 2177 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 448:\n-#line 2178 \"./parse.y\"\n+#line 2182 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 449:\n-#line 2180 \"./parse.y\"\n+#line 2184 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 451:\n-#line 2186 \"./parse.y\"\n+#line 2190 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 452:\n-#line 2191 \"./parse.y\"\n+#line 2195 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 453:\n-#line 2196 \"./parse.y\"\n+#line 2200 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 454:\n-#line 2201 \"./parse.y\"\n+#line 2205 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 455:\n-#line 2203 \"./parse.y\"\n+#line 2207 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 456:\n-#line 2205 \"./parse.y\"\n+#line 2209 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 458:\n-#line 2211 \"./parse.y\"\n+#line 2215 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 459:\n-#line 2216 \"./parse.y\"\n+#line 2220 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 460:\n-#line 2221 \"./parse.y\"\n+#line 2225 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 461:\n-#line 2226 \"./parse.y\"\n+#line 2230 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 462:\n-#line 2231 \"./parse.y\"\n+#line 2235 \"./parse.y\"\n { yyval.node = build_binop (INSTANCEOF_EXPR, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 463:\n-#line 2233 \"./parse.y\"\n+#line 2237 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 464:\n-#line 2235 \"./parse.y\"\n+#line 2239 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 465:\n-#line 2237 \"./parse.y\"\n+#line 2241 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 466:\n-#line 2239 \"./parse.y\"\n+#line 2243 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 467:\n-#line 2241 \"./parse.y\"\n+#line 2245 \"./parse.y\"\n {yyerror (\"Invalid reference type\"); RECOVER;;\n     break;}\n case 469:\n-#line 2247 \"./parse.y\"\n+#line 2251 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 470:\n-#line 2252 \"./parse.y\"\n+#line 2256 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 471:\n-#line 2257 \"./parse.y\"\n+#line 2261 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 472:\n-#line 2259 \"./parse.y\"\n+#line 2263 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 474:\n-#line 2265 \"./parse.y\"\n+#line 2269 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 475:\n-#line 2270 \"./parse.y\"\n+#line 2274 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 477:\n-#line 2276 \"./parse.y\"\n+#line 2280 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 478:\n-#line 2281 \"./parse.y\"\n+#line 2285 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 480:\n-#line 2287 \"./parse.y\"\n+#line 2291 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 481:\n-#line 2292 \"./parse.y\"\n+#line 2296 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 483:\n-#line 2298 \"./parse.y\"\n+#line 2302 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 484:\n-#line 2303 \"./parse.y\"\n+#line 2307 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 486:\n-#line 2309 \"./parse.y\"\n+#line 2313 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 487:\n-#line 2314 \"./parse.y\"\n+#line 2318 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 489:\n-#line 2320 \"./parse.y\"\n+#line 2324 \"./parse.y\"\n {\n \t\t  yyval.node = build (CONDITIONAL_EXPR, NULL_TREE, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-3].operator.location;\n \t\t;\n     break;}\n case 490:\n-#line 2325 \"./parse.y\"\n+#line 2329 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Missing term\");\n \t\t  DRECOVER (1);\n \t\t;\n     break;}\n case 491:\n-#line 2331 \"./parse.y\"\n+#line 2335 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (2);;\n     break;}\n case 492:\n-#line 2333 \"./parse.y\"\n+#line 2337 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (3);;\n     break;}\n case 495:\n-#line 2343 \"./parse.y\"\n+#line 2347 \"./parse.y\"\n { yyval.node = build_assignment (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 496:\n-#line 2345 \"./parse.y\"\n+#line 2349 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Missing term\");\n@@ -4783,7 +4831,7 @@ case 496:\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 498 \"/usr/freeware/share/bison.simple\"\n+#line 543 \"/usr/lib/bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;\n@@ -4978,8 +5026,32 @@ case 496:\n \n   yystate = yyn;\n   goto yynewstate;\n+\n+ yyacceptlab:\n+  /* YYACCEPT comes here.  */\n+  if (yyfree_stacks)\n+    {\n+      free (yyss);\n+      free (yyvs);\n+#ifdef YYLSP_NEEDED\n+      free (yyls);\n+#endif\n+    }\n+  return 0;\n+\n+ yyabortlab:\n+  /* YYABORT comes here.  */\n+  if (yyfree_stacks)\n+    {\n+      free (yyss);\n+      free (yyvs);\n+#ifdef YYLSP_NEEDED\n+      free (yyls);\n+#endif\n+    }\n+  return 1;\n }\n-#line 2371 \"./parse.y\"\n+#line 2375 \"./parse.y\"\n \n \f\n "}, {"sha": "3ba506f616f94a838a710234afebb50e51d740f0", "filename": "gcc/java/parse.y", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8989a66b88d9b4fa6cad40e5266a29696655764/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8989a66b88d9b4fa6cad40e5266a29696655764/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=f8989a66b88d9b4fa6cad40e5266a29696655764", "patch": "@@ -971,10 +971,14 @@ formal_parameter:\n \t\t  $$ = build_tree_list ($3, $2);\n \t\t}\n |\ttype error\n-\t\t{yyerror (\"Missing identifier\"); RECOVER;}\n+\t\t{\n+\t\t  yyerror (\"Missing identifier\"); RECOVER;\n+\t\t  $$ = NULL_TREE;\n+\t\t}\n |\tfinal type error\n \t\t{\n \t\t  yyerror (\"Missing identifier\"); RECOVER;\n+\t\t  $$ = NULL_TREE;\n \t\t}\n ;\n "}]}