{"sha": "bdd4c95a6f11ca3fc3db217a106dd1f1ad7de6f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmRkNGM5NWE2ZjExY2EzZmMzZGIyMTdhMTA2ZGQxZjFhZDdkZTZmMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-09-18T21:53:25Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-09-18T21:53:25Z"}, "message": "(print_operand): Support unsigned codes for %D, %c, and %d.\n\nFrom-SVN: r12744", "tree": {"sha": "28500ce59c677ee34e8d5b5644a8bfcfecfee15e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28500ce59c677ee34e8d5b5644a8bfcfecfee15e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bdd4c95a6f11ca3fc3db217a106dd1f1ad7de6f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdd4c95a6f11ca3fc3db217a106dd1f1ad7de6f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdd4c95a6f11ca3fc3db217a106dd1f1ad7de6f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdd4c95a6f11ca3fc3db217a106dd1f1ad7de6f3/comments", "author": null, "committer": null, "parents": [{"sha": "d1e03f311f3e29f0fd414d2002e6d582b2bf0a53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1e03f311f3e29f0fd414d2002e6d582b2bf0a53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1e03f311f3e29f0fd414d2002e6d582b2bf0a53"}], "stats": {"total": 57, "additions": 21, "deletions": 36}, "files": [{"sha": "33a6fe6dfca6c6ca91ee3da080c06b854be8d513", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 21, "deletions": 36, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdd4c95a6f11ca3fc3db217a106dd1f1ad7de6f3/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdd4c95a6f11ca3fc3db217a106dd1f1ad7de6f3/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=bdd4c95a6f11ca3fc3db217a106dd1f1ad7de6f3", "patch": "@@ -1420,43 +1420,28 @@ print_operand (file, x, code)\n       fprintf (file, \"%ld\", (64 - INTVAL (x)) / 8);\n       break;\n \n-    case 'C':\n+    case 'C': case 'D': case 'c': case 'd':\n       /* Write out comparison name.  */\n-      if (GET_RTX_CLASS (GET_CODE (x)) != '<')\n-\toutput_operand_lossage (\"invalid %%C value\");\n-\n-      if (GET_CODE (x) == LEU)\n-\tfprintf (file, \"ule\");\n-      else if (GET_CODE (x) == LTU)\n-\tfprintf (file, \"ult\");\n-      else\n-\tfprintf (file, \"%s\", GET_RTX_NAME (GET_CODE (x)));\n-      break;\n-\n-    case 'D':\n-      /* Similar, but write reversed code.  We can't get an unsigned code\n-\t here.  */\n-      if (GET_RTX_CLASS (GET_CODE (x)) != '<')\n-\toutput_operand_lossage (\"invalid %%D value\");\n-\n-      fprintf (file, \"%s\", GET_RTX_NAME (reverse_condition (GET_CODE (x))));\n-      break;\n-\n-    case 'c':\n-      /* Similar to `c', but swap.  We can't get unsigned here either.  */\n-      if (GET_RTX_CLASS (GET_CODE (x)) != '<')\n-\toutput_operand_lossage (\"invalid %%D value\");\n-\n-      fprintf (file, \"%s\", GET_RTX_NAME (swap_condition (GET_CODE (x))));\n-      break;\n-\n-    case 'd':\n-      /* Similar, but reverse and swap.  We can't get unsigned here either.  */\n-      if (GET_RTX_CLASS (GET_CODE (x)) != '<')\n-\toutput_operand_lossage (\"invalid %%D value\");\n-\n-      fprintf (file, \"%s\",\n-\t       GET_RTX_NAME (swap_condition (reverse_condition ((GET_CODE (x))))));\n+      {\n+\tenum rtx_code c = GET_CODE (x);\n+\n+        if (GET_RTX_CLASS (c) != '<')\n+\t  output_operand_lossage (\"invalid %%C value\");\n+\n+\tif (code == 'D')\n+\t  c = reverse_condition (c);\n+\telse if (code == 'c')\n+\t  c = swap_condition (c);\n+\telse if (code == 'd')\n+\t  c = swap_condition (reverse_condition (c));\n+\n+        if (c == LEU)\n+\t  fprintf (file, \"ule\");\n+        else if (c == LTU)\n+\t  fprintf (file, \"ult\");\n+        else\n+\t  fprintf (file, \"%s\", GET_RTX_NAME (c));\n+      }\n       break;\n \n     case 'E':"}]}