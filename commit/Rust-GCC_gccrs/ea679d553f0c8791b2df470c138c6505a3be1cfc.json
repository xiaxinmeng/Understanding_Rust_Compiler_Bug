{"sha": "ea679d553f0c8791b2df470c138c6505a3be1cfc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE2NzlkNTUzZjBjODc5MWIyZGY0NzBjMTM4YzY1MDVhM2JlMWNmYw==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2013-04-22T14:50:32Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2013-04-22T14:50:32Z"}, "message": "[Mid-end] Add TARGET_GIMPLE_FOLD_BUILTIN target hook.\n\ngcc/\n\n\t* coretypes.h (gimple_stmt_iterator_d): Forward declare.\n\t(gimple_stmt_iterator): New typedef.\n\t* gimple.h (gimple_stmt_iterator): Rename to...\n\t(gimple_stmt_iterator_d): ... This.\n\t* doc/tm.texi.in (TARGET_FOLD_BUILTIN): Detail restriction that\n\ttrees be valid for GIMPLE and GENERIC.\n\t(TARGET_GIMPLE_FOLD_BUILTIN): New.\n\t* gimple-fold.c (gimple_fold_call): Call target hook\n\tgimple_fold_builtin.\n\t* hooks.c (hook_bool_gsiptr_false): New.\n\t* hooks.h (hook_bool_gsiptr_false): New.\n\t* target.def (fold_stmt): New.\n\t* doc/tm.texi: Regenerate.\n\nFrom-SVN: r198142", "tree": {"sha": "fdeb1da3b93237197679dcc3174d6e1b4a44b8cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fdeb1da3b93237197679dcc3174d6e1b4a44b8cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea679d553f0c8791b2df470c138c6505a3be1cfc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea679d553f0c8791b2df470c138c6505a3be1cfc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea679d553f0c8791b2df470c138c6505a3be1cfc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea679d553f0c8791b2df470c138c6505a3be1cfc/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9191d7a84aa904ae21bd4b8dd98100977e3b10a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9191d7a84aa904ae21bd4b8dd98100977e3b10a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9191d7a84aa904ae21bd4b8dd98100977e3b10a2"}], "stats": {"total": 66, "additions": 58, "deletions": 8}, "files": [{"sha": "6932a535fd69545397f5e62c34d5288584ba46ff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea679d553f0c8791b2df470c138c6505a3be1cfc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea679d553f0c8791b2df470c138c6505a3be1cfc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ea679d553f0c8791b2df470c138c6505a3be1cfc", "patch": "@@ -1,3 +1,19 @@\n+2013-04-22  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* coretypes.h (gimple_stmt_iterator_d): Forward declare.\n+\t(gimple_stmt_iterator): New typedef.\n+\t* gimple.h (gimple_stmt_iterator): Rename to...\n+\t(gimple_stmt_iterator_d): ... This.\n+\t* doc/tm.texi.in (TARGET_FOLD_BUILTIN): Detail restriction that\n+\ttrees be valid for GIMPLE and GENERIC.\n+\t(TARGET_GIMPLE_FOLD_BUILTIN): New.\n+\t* gimple-fold.c (gimple_fold_call): Call target hook\n+\tgimple_fold_builtin.\n+\t* hooks.c (hook_bool_gsiptr_false): New.\n+\t* hooks.h (hook_bool_gsiptr_false): New.\n+\t* target.def (fold_stmt): New.\n+\t* doc/tm.texi: Regenerate.\n+\n 2013-04-22  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR target/57018"}, {"sha": "76fc4aabc8adefab3cb12c0c54cdd574fe686ae3", "filename": "gcc/coretypes.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea679d553f0c8791b2df470c138c6505a3be1cfc/gcc%2Fcoretypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea679d553f0c8791b2df470c138c6505a3be1cfc/gcc%2Fcoretypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoretypes.h?ref=ea679d553f0c8791b2df470c138c6505a3be1cfc", "patch": "@@ -62,6 +62,8 @@ union gimple_statement_d;\n typedef union gimple_statement_d *gimple;\n typedef const union gimple_statement_d *const_gimple;\n typedef gimple gimple_seq;\n+struct gimple_stmt_iterator_d;\n+typedef gimple_stmt_iterator_d gimple_stmt_iterator;\n union section;\n typedef union section section;\n struct gcc_options;"}, {"sha": "ec7ef758086f5300d59d29cfedff3d01e4905f4a", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea679d553f0c8791b2df470c138c6505a3be1cfc/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea679d553f0c8791b2df470c138c6505a3be1cfc/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=ea679d553f0c8791b2df470c138c6505a3be1cfc", "patch": "@@ -10931,8 +10931,16 @@ Fold a call to a machine specific built-in function that was set up by\n @samp{TARGET_INIT_BUILTINS}.  @var{fndecl} is the declaration of the\n built-in function.  @var{n_args} is the number of arguments passed to\n the function; the arguments themselves are pointed to by @var{argp}.\n-The result is another tree containing a simplified expression for the\n-call's result.  If @var{ignore} is true the value will be ignored.\n+The result is another tree, valid for both GIMPLE and GENERIC,\n+containing a simplified expression for the call's result.  If\n+@var{ignore} is true the value will be ignored.\n+@end deftypefn\n+\n+@deftypefn {Target Hook} bool TARGET_GIMPLE_FOLD_BUILTIN (gimple_stmt_iterator *@var{gsi})\n+Fold a call to a machine specific built-in function that was set up\n+by @samp{TARGET_INIT_BUILTINS}.  @var{gsi} points to the gimple\n+statement holding the function call.  Returns true if any change\n+was made to the GIMPLE stream.\n @end deftypefn\n \n @deftypefn {Target Hook} int TARGET_COMPARE_VERSION_PRIORITY (tree @var{decl1}, tree @var{decl2})"}, {"sha": "a4187335b627c29b218f0217a82a4947a3228aa6", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea679d553f0c8791b2df470c138c6505a3be1cfc/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea679d553f0c8791b2df470c138c6505a3be1cfc/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=ea679d553f0c8791b2df470c138c6505a3be1cfc", "patch": "@@ -10775,10 +10775,13 @@ Fold a call to a machine specific built-in function that was set up by\n @samp{TARGET_INIT_BUILTINS}.  @var{fndecl} is the declaration of the\n built-in function.  @var{n_args} is the number of arguments passed to\n the function; the arguments themselves are pointed to by @var{argp}.\n-The result is another tree containing a simplified expression for the\n-call's result.  If @var{ignore} is true the value will be ignored.\n+The result is another tree, valid for both GIMPLE and GENERIC,\n+containing a simplified expression for the call's result.  If\n+@var{ignore} is true the value will be ignored.\n @end deftypefn\n \n+@hook TARGET_GIMPLE_FOLD_BUILTIN\n+\n @hook TARGET_COMPARE_VERSION_PRIORITY\n This hook is used to compare the target attributes in two functions to\n determine which function's features get higher priority.  This is used"}, {"sha": "738d7fddd4c97bc78eca043ff47bb60df9a9efdc", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea679d553f0c8791b2df470c138c6505a3be1cfc/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea679d553f0c8791b2df470c138c6505a3be1cfc/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=ea679d553f0c8791b2df470c138c6505a3be1cfc", "patch": "@@ -1143,6 +1143,8 @@ gimple_fold_call (gimple_stmt_iterator *gsi, bool inplace)\n \t    gimplify_and_update_call_from_tree (gsi, result);\n \t  changed = true;\n \t}\n+      else if (DECL_BUILT_IN_CLASS (callee) == BUILT_IN_MD)\n+\tchanged |= targetm.gimple_fold_builtin (gsi);\n     }\n \n   return changed;"}, {"sha": "76da6d2bcd7dd3963430d162a4d637df3c7729a2", "filename": "gcc/gimple.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea679d553f0c8791b2df470c138c6505a3be1cfc/gcc%2Fgimple.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea679d553f0c8791b2df470c138c6505a3be1cfc/gcc%2Fgimple.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.h?ref=ea679d553f0c8791b2df470c138c6505a3be1cfc", "patch": "@@ -139,7 +139,7 @@ enum plf_mask {\n \n /* Iterator object for GIMPLE statement sequences.  */\n \n-typedef struct\n+struct gimple_stmt_iterator_d\n {\n   /* Sequence node holding the current statement.  */\n   gimple_seq_node ptr;\n@@ -150,8 +150,7 @@ typedef struct\n      block/sequence is removed.  */\n   gimple_seq *seq;\n   basic_block bb;\n-} gimple_stmt_iterator;\n-\n+};\n \n /* Data structure definitions for GIMPLE tuples.  NOTE: word markers\n    are for 64 bit hosts.  */"}, {"sha": "3259658e4f4f9562bd93e2a66c24cf554a135169", "filename": "gcc/hooks.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea679d553f0c8791b2df470c138c6505a3be1cfc/gcc%2Fhooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea679d553f0c8791b2df470c138c6505a3be1cfc/gcc%2Fhooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhooks.c?ref=ea679d553f0c8791b2df470c138c6505a3be1cfc", "patch": "@@ -147,6 +147,14 @@ hook_bool_FILEptr_rtx_false (FILE *a ATTRIBUTE_UNUSED,\n   return false;\n }\n \n+/* Generic hook that takes (gimple_stmt_iterator *) and returns\n+   false.  */\n+bool\n+hook_bool_gsiptr_false (gimple_stmt_iterator *a ATTRIBUTE_UNUSED)\n+{\n+  return false;\n+}\n+\n /* Used for the TARGET_ASM_CAN_OUTPUT_MI_THUNK hook.  */\n bool\n hook_bool_const_tree_hwi_hwi_const_tree_false (const_tree a ATTRIBUTE_UNUSED,"}, {"sha": "eaf4b03ebbb9d325f353c538e7633b99f67cad90", "filename": "gcc/hooks.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea679d553f0c8791b2df470c138c6505a3be1cfc/gcc%2Fhooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea679d553f0c8791b2df470c138c6505a3be1cfc/gcc%2Fhooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhooks.h?ref=ea679d553f0c8791b2df470c138c6505a3be1cfc", "patch": "@@ -42,6 +42,7 @@ extern bool hook_bool_tree_false (tree);\n extern bool hook_bool_const_tree_false (const_tree);\n extern bool hook_bool_tree_true (tree);\n extern bool hook_bool_const_tree_true (const_tree);\n+extern bool hook_bool_gsiptr_false (gimple_stmt_iterator *);\n extern bool hook_bool_const_tree_hwi_hwi_const_tree_false (const_tree,\n \t\t\t\t\t\t\t   HOST_WIDE_INT,\n \t\t\t\t\t\t\t   HOST_WIDE_INT,"}, {"sha": "a8306b258897a09c0f932f006354bf5444e505cf", "filename": "gcc/target.def", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea679d553f0c8791b2df470c138c6505a3be1cfc/gcc%2Ftarget.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea679d553f0c8791b2df470c138c6505a3be1cfc/gcc%2Ftarget.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.def?ref=ea679d553f0c8791b2df470c138c6505a3be1cfc", "patch": "@@ -1289,13 +1289,24 @@ DEFHOOK\n  \"\",\n  tree, (unsigned int /*location_t*/ loc, tree fndecl, void *arglist), NULL)\n \n-/* Fold a target-specific builtin.  */\n+/* Fold a target-specific builtin to a tree valid for both GIMPLE\n+   and GENERIC.  */\n DEFHOOK\n (fold_builtin,\n  \"\",\n  tree, (tree fndecl, int n_args, tree *argp, bool ignore),\n  hook_tree_tree_int_treep_bool_null)\n \n+/* Fold a target-specific builtin to a valid GIMPLE tree.  */\n+DEFHOOK\n+(gimple_fold_builtin,\n+ \"Fold a call to a machine specific built-in function that was set up\\n\\\n+by @samp{TARGET_INIT_BUILTINS}.  @var{gsi} points to the gimple\\n\\\n+statement holding the function call.  Returns true if any change\\n\\\n+was made to the GIMPLE stream.\",\n+ bool, (gimple_stmt_iterator *gsi),\n+ hook_bool_gsiptr_false)\n+\n /* Target hook is used to compare the target attributes in two functions to\n    determine which function's features get higher priority.  This is used\n    during function multi-versioning to figure out the order in which two"}]}