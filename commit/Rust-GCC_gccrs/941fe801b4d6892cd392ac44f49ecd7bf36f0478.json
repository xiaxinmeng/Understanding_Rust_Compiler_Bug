{"sha": "941fe801b4d6892cd392ac44f49ecd7bf36f0478", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQxZmU4MDFiNGQ2ODkyY2QzOTJhYzQ0ZjQ5ZWNkN2JmMzZmMDQ3OA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2003-12-22T21:05:22Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-12-22T21:05:22Z"}, "message": "numeric_limits.cc: Add _GLIBCXX_ASSERT to dg-options in testcases that use VERIFY.\n\n\n2003-12-22  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* testsuite/18_support/numeric_limits.cc: Add _GLIBCXX_ASSERT to\n\tdg-options in testcases that use VERIFY.\n\t* testsuite/23_containers/vector/invalidation/1.cc: Same.\n\t* testsuite/23_containers/vector/invalidation/2.cc: Same.\n\t* testsuite/23_containers/vector/invalidation/3.cc: Same.\n\t* testsuite/23_containers/vector/invalidation/4.cc: Same.\n\t* testsuite/23_containers/vector/resize/1.cc: Same.\n\t* testsuite/26_numerics/complex_value.cc: Same.\n\t* testsuite/27_io/ios_base/storage/1.cc: Same.\n\t* testsuite/27_io/ios_base/storage/2.cc: Same.\n\t* testsuite/27_io/ios_base/storage/3.cc: Same.\n\t* testsuite/27_io/manipulators/standard/char/2.cc: Same.\n\t* testsuite/backward/11460.cc: Same.\n\t* testsuite/backward/strstream_members.cc: Same.\n\n\t* include/ext/hash_set (class hash_multiset): Fix typo.\n\nFrom-SVN: r74951", "tree": {"sha": "16b78e061a5a2baca0f4e86b5d3762e8c1bc36a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16b78e061a5a2baca0f4e86b5d3762e8c1bc36a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/941fe801b4d6892cd392ac44f49ecd7bf36f0478", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/941fe801b4d6892cd392ac44f49ecd7bf36f0478", "html_url": "https://github.com/Rust-GCC/gccrs/commit/941fe801b4d6892cd392ac44f49ecd7bf36f0478", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/941fe801b4d6892cd392ac44f49ecd7bf36f0478/comments", "author": null, "committer": null, "parents": [{"sha": "1ffe6573a9fc8c9de27d6372cd506533599fc55e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ffe6573a9fc8c9de27d6372cd506533599fc55e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ffe6573a9fc8c9de27d6372cd506533599fc55e"}], "stats": {"total": 51, "additions": 34, "deletions": 17}, "files": [{"sha": "832d5a021cbfdfc8637fdf1485299abea22351a0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/941fe801b4d6892cd392ac44f49ecd7bf36f0478/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/941fe801b4d6892cd392ac44f49ecd7bf36f0478/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=941fe801b4d6892cd392ac44f49ecd7bf36f0478", "patch": "@@ -1,5 +1,24 @@\n 2003-12-22  Benjamin Kosnik  <bkoz@redhat.com>\n \n+\t* testsuite/18_support/numeric_limits.cc: Add _GLIBCXX_ASSERT to\n+\tdg-options in testcases that use VERIFY.\t\n+\t* testsuite/23_containers/vector/invalidation/1.cc: Same.\n+\t* testsuite/23_containers/vector/invalidation/2.cc: Same.\n+\t* testsuite/23_containers/vector/invalidation/3.cc: Same.\n+\t* testsuite/23_containers/vector/invalidation/4.cc: Same.\n+\t* testsuite/23_containers/vector/resize/1.cc: Same.\n+\t* testsuite/26_numerics/complex_value.cc: Same.\n+\t* testsuite/27_io/ios_base/storage/1.cc: Same.\n+\t* testsuite/27_io/ios_base/storage/2.cc: Same.\n+\t* testsuite/27_io/ios_base/storage/3.cc: Same.\n+\t* testsuite/27_io/manipulators/standard/char/2.cc: Same.\n+\t* testsuite/backward/11460.cc: Same.\n+\t* testsuite/backward/strstream_members.cc: Same.\n+\n+\t* include/ext/hash_set (class hash_multiset): Fix typo.\n+\n+2003-12-22  Benjamin Kosnik  <bkoz@redhat.com>\t\n+\n \t* testsuite/27_io/objects/char/5.cc: Don't use stdc++.h.gch.\n \t* testsuite/27_io/objects/wchar_t/5.cc: Same.\n \t* docs/html/test.html: Add docs for constructing test files that"}, {"sha": "fee64fcbdb0ea8262c1c6b4e6f209224bb49ba3c", "filename": "libstdc++-v3/include/ext/hash_set", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/941fe801b4d6892cd392ac44f49ecd7bf36f0478/libstdc%2B%2B-v3%2Finclude%2Fext%2Fhash_set", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/941fe801b4d6892cd392ac44f49ecd7bf36f0478/libstdc%2B%2B-v3%2Finclude%2Fext%2Fhash_set", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fhash_set?ref=941fe801b4d6892cd392ac44f49ecd7bf36f0478", "patch": "@@ -267,7 +267,7 @@ public:\n   typedef typename _Ht::size_type size_type;\n   typedef typename _Ht::difference_type difference_type;\n   typedef typename _Alloc::pointer pointer;\n-  typedef typename _Alloc:const_pointer const_pointer;\n+  typedef typename _Alloc::const_pointer const_pointer;\n   typedef typename _Alloc::reference reference;\n   typedef typename _Alloc::const_reference const_reference;\n "}, {"sha": "a7c2494a8b9e6bdd8dd36e7fb0574b3b0fdc40f4", "filename": "libstdc++-v3/testsuite/18_support/numeric_limits.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/941fe801b4d6892cd392ac44f49ecd7bf36f0478/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/941fe801b4d6892cd392ac44f49ecd7bf36f0478/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits.cc?ref=941fe801b4d6892cd392ac44f49ecd7bf36f0478", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-mieee\" { target alpha*-*-* } }\n+// { dg-options \"-D_GLIBCXX_ASSERT -mieee\" { target alpha*-*-* } }\n \n // 1999-08-23 bkoz\n "}, {"sha": "833ec544d4b3acc9bb4d6e8acfa292c4fd322814", "filename": "libstdc++-v3/testsuite/23_containers/vector/invalidation/1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/941fe801b4d6892cd392ac44f49ecd7bf36f0478/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/941fe801b4d6892cd392ac44f49ecd7bf36f0478/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F1.cc?ref=941fe801b4d6892cd392ac44f49ecd7bf36f0478", "patch": "@@ -19,7 +19,7 @@\n // USA.\n \n // We need to be pedantic about reallocations for this testcase to be correct.\n-// { dg-options \"-D_GLIBCXX_DEBUG_PEDANTIC\" }\n+// { dg-options \"-D_GLIBCXX_ASSERT -D_GLIBCXX_DEBUG_PEDANTIC\" }\n \n #ifndef _GLIBCXX_DEBUG_PEDANTIC\n #  define _GLIBCXX_DEBUG_PEDANTIC 1"}, {"sha": "6526504c30d83b8aae8360e683687678513fc4b6", "filename": "libstdc++-v3/testsuite/23_containers/vector/invalidation/2.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/941fe801b4d6892cd392ac44f49ecd7bf36f0478/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/941fe801b4d6892cd392ac44f49ecd7bf36f0478/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F2.cc?ref=941fe801b4d6892cd392ac44f49ecd7bf36f0478", "patch": "@@ -19,7 +19,7 @@\n // USA.\n \n // We need to be pedantic about reallocations for this testcase to be correct.\n-// { dg-options \"-D_GLIBCXX_DEBUG_PEDANTIC\" }\n+// { dg-options \"-D_GLIBCXX_ASSERT -D_GLIBCXX_DEBUG_PEDANTIC\" }\n \n #ifndef _GLIBCXX_DEBUG_PEDANTIC\n #  define _GLIBCXX_DEBUG_PEDANTIC 1"}, {"sha": "b34af6448ff401dfb027d35ffac6c8abee9946fc", "filename": "libstdc++-v3/testsuite/23_containers/vector/invalidation/3.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/941fe801b4d6892cd392ac44f49ecd7bf36f0478/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/941fe801b4d6892cd392ac44f49ecd7bf36f0478/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F3.cc?ref=941fe801b4d6892cd392ac44f49ecd7bf36f0478", "patch": "@@ -19,7 +19,7 @@\n // USA.\n \n // We need to be pedantic about reallocations for this testcase to be correct.\n-// { dg-options \"-D_GLIBCXX_DEBUG_PEDANTIC\" }\n+// { dg-options \"-D_GLIBCXX_ASSERT -D_GLIBCXX_DEBUG_PEDANTIC\" }\n \n #ifndef _GLIBCXX_DEBUG_PEDANTIC\n #  define _GLIBCXX_DEBUG_PEDANTIC 1"}, {"sha": "0a9628ff4ed2a66d5bac0120d6befce49788ef9e", "filename": "libstdc++-v3/testsuite/23_containers/vector/invalidation/4.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/941fe801b4d6892cd392ac44f49ecd7bf36f0478/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/941fe801b4d6892cd392ac44f49ecd7bf36f0478/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F4.cc?ref=941fe801b4d6892cd392ac44f49ecd7bf36f0478", "patch": "@@ -19,7 +19,7 @@\n // USA.\n \n // We need to be pedantic about reallocations for this testcase to be correct.\n-// { dg-options \"-D_GLIBCXX_DEBUG_PEDANTIC\" }\n+// { dg-options \"-D_GLIBCXX_ASSERT -D_GLIBCXX_DEBUG_PEDANTIC\" }\n \n #ifndef _GLIBCXX_DEBUG_PEDANTIC\n #  define _GLIBCXX_DEBUG_PEDANTIC 1"}, {"sha": "c8e07cd54c7ced5d00c328389466037eb3aa51ce", "filename": "libstdc++-v3/testsuite/23_containers/vector/resize/1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/941fe801b4d6892cd392ac44f49ecd7bf36f0478/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fresize%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/941fe801b4d6892cd392ac44f49ecd7bf36f0478/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fresize%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fresize%2F1.cc?ref=941fe801b4d6892cd392ac44f49ecd7bf36f0478", "patch": "@@ -24,7 +24,7 @@\n // XXX This test will not work for irix6 because of bug(s) in libc malloc\n // XXX for very large allocations.  However -lmalloc seems to work.\n // See http://gcc.gnu.org/ml/libstdc++/2002-12/msg00131.html\n-// { dg-options \"-lmalloc\" { target mips*-*-irix6* } }\n+// { dg-options \"-D_GLIBCXX_ASSERT -lmalloc\" { target mips*-*-irix6* } }\n \n #include <vector>\n #include <stdexcept>"}, {"sha": "edb8f33c5449a1e640ca82037e63e7e9ec494f36", "filename": "libstdc++-v3/testsuite/26_numerics/complex_value.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/941fe801b4d6892cd392ac44f49ecd7bf36f0478/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex_value.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/941fe801b4d6892cd392ac44f49ecd7bf36f0478/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex_value.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex_value.cc?ref=941fe801b4d6892cd392ac44f49ecd7bf36f0478", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-O0\" }\n+// { dg-options \"-D_GLIBCXX_ASSERT -O0\" }\n // 2000-11-20\n // Benjamin Kosnik bkoz@redhat.com\n "}, {"sha": "07b9bbe79fb4de0acdd0f7b2c9142e9439d92a55", "filename": "libstdc++-v3/testsuite/27_io/ios_base/storage/1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/941fe801b4d6892cd392ac44f49ecd7bf36f0478/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fstorage%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/941fe801b4d6892cd392ac44f49ecd7bf36f0478/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fstorage%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fstorage%2F1.cc?ref=941fe801b4d6892cd392ac44f49ecd7bf36f0478", "patch": "@@ -24,7 +24,7 @@\n // XXX bug(s) in libc malloc for very large allocations.  However\n // XXX -lmalloc seems to work.\n // See http://gcc.gnu.org/ml/gcc/2002-05/msg01012.html\n-// { dg-options \"-lmalloc\" { target mips*-*-irix6* } }\n+// { dg-options \"-D_GLIBCXX_ASSERT -lmalloc\" { target mips*-*-irix6* } }\n \n #include <sstream>\n #include <iostream>"}, {"sha": "65ed829e193a0f03fc739759a17e1b0d1442106d", "filename": "libstdc++-v3/testsuite/27_io/ios_base/storage/2.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/941fe801b4d6892cd392ac44f49ecd7bf36f0478/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fstorage%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/941fe801b4d6892cd392ac44f49ecd7bf36f0478/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fstorage%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fstorage%2F2.cc?ref=941fe801b4d6892cd392ac44f49ecd7bf36f0478", "patch": "@@ -24,7 +24,7 @@\n // XXX bug(s) in libc malloc for very large allocations.  However\n // XXX -lmalloc seems to work.\n // See http://gcc.gnu.org/ml/gcc/2002-05/msg01012.html\n-// { dg-options \"-lmalloc\" { target mips*-*-irix6* } }\n+// { dg-options \"-D_GLIBCXX_ASSERT -lmalloc\" { target mips*-*-irix6* } }\n \n #include <sstream>\n #include <iostream>"}, {"sha": "3a5d7025ce70c877bdea0c04de42743843cc53b2", "filename": "libstdc++-v3/testsuite/27_io/ios_base/storage/3.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/941fe801b4d6892cd392ac44f49ecd7bf36f0478/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fstorage%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/941fe801b4d6892cd392ac44f49ecd7bf36f0478/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fstorage%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fstorage%2F3.cc?ref=941fe801b4d6892cd392ac44f49ecd7bf36f0478", "patch": "@@ -24,7 +24,7 @@\n // XXX bug(s) in libc malloc for very large allocations.  However\n // XXX -lmalloc seems to work.\n // See http://gcc.gnu.org/ml/gcc/2002-05/msg01012.html\n-// { dg-options \"-lmalloc\" { target mips*-*-irix6* } }\n+// { dg-options \"-D_GLIBCXX_ASSERT -lmalloc\" { target mips*-*-irix6* } }\n \n #include <sstream>\n #include <iostream>"}, {"sha": "6d07434851a55278f9b34a32e51949c323c5cf5c", "filename": "libstdc++-v3/testsuite/27_io/manipulators/standard/char/2.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/941fe801b4d6892cd392ac44f49ecd7bf36f0478/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fstandard%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/941fe801b4d6892cd392ac44f49ecd7bf36f0478/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fstandard%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fstandard%2Fchar%2F2.cc?ref=941fe801b4d6892cd392ac44f49ecd7bf36f0478", "patch": "@@ -1,3 +1,5 @@\n+// { dg-options \"-D_GLIBCXX_ASSERT -fno-implicit-templates\" }\n+\n // Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -20,8 +22,6 @@\n // their own code with -fno-implicit-templates and not suffer from a zillion\n // link errors.\n \n-// { dg-options \"-fno-implicit-templates\" }\n-\n #include <fstream>\n #include <istream>\n #include <ostream>"}, {"sha": "a0139e98d8913c94ffc32737c73b8a1c3d3c5dbb", "filename": "libstdc++-v3/testsuite/backward/11460.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/941fe801b4d6892cd392ac44f49ecd7bf36f0478/libstdc%2B%2B-v3%2Ftestsuite%2Fbackward%2F11460.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/941fe801b4d6892cd392ac44f49ecd7bf36f0478/libstdc%2B%2B-v3%2Ftestsuite%2Fbackward%2F11460.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fbackward%2F11460.cc?ref=941fe801b4d6892cd392ac44f49ecd7bf36f0478", "patch": "@@ -1,3 +1,4 @@\n+// { dg-options \"-Wno-deprecated -D_GLIBCXX_ASSERT\" }\n // Copyright (C) 2003 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -19,8 +20,6 @@\n #include <strstream>\n #include <testsuite_hooks.h>\n \n-// { dg-options \"-Wno-deprecated\" }\n-\n class Buf : public std::strstreambuf\n {\n public:"}, {"sha": "9ce059d297d2b843066db69db53f0c66759a9321", "filename": "libstdc++-v3/testsuite/backward/strstream_members.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/941fe801b4d6892cd392ac44f49ecd7bf36f0478/libstdc%2B%2B-v3%2Ftestsuite%2Fbackward%2Fstrstream_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/941fe801b4d6892cd392ac44f49ecd7bf36f0478/libstdc%2B%2B-v3%2Ftestsuite%2Fbackward%2Fstrstream_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fbackward%2Fstrstream_members.cc?ref=941fe801b4d6892cd392ac44f49ecd7bf36f0478", "patch": "@@ -1,3 +1,4 @@\n+// { dg-options \"-Wno-deprecated\" }\n // Copyright (C) 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -21,8 +22,6 @@\n #include <strstream>\n #include <testsuite_hooks.h>\n \n-// { dg-options \"-Wno-deprecated\" }\n-\n void test01()\n {\n    std::strstream s;"}]}