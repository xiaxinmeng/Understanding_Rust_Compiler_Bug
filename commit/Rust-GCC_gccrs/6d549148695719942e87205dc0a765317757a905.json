{"sha": "6d549148695719942e87205dc0a765317757a905", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQ1NDkxNDg2OTU3MTk5NDJlODcyMDVkYzBhNzY1MzE3NzU3YTkwNQ==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2011-02-20T17:52:44Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2011-02-20T17:52:44Z"}, "message": "Reverted usage of TARGET_64BIT for code generation for GNU Objective-C runtime\n\nFrom-SVN: r170343", "tree": {"sha": "4fa88789da4ac6afcba1f80d69d01dcbd5728d40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fa88789da4ac6afcba1f80d69d01dcbd5728d40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d549148695719942e87205dc0a765317757a905", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d549148695719942e87205dc0a765317757a905", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d549148695719942e87205dc0a765317757a905", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d549148695719942e87205dc0a765317757a905/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3890ce93e267fe56883b7b831475180641d9038f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3890ce93e267fe56883b7b831475180641d9038f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3890ce93e267fe56883b7b831475180641d9038f"}], "stats": {"total": 82, "additions": 59, "deletions": 23}, "files": [{"sha": "c2f16ec5557d4862089d663e357534a7728af608", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d549148695719942e87205dc0a765317757a905/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d549148695719942e87205dc0a765317757a905/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=6d549148695719942e87205dc0a765317757a905", "patch": "@@ -1,3 +1,10 @@\n+2011-02-19  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+       * objc-gnu-runtime-abi-01.c (TARGET_64BIT): Removed.  Removed\n+       usage of padding fields.  Do not include tm.h.\n+       * objc-act.c (objc_write_global_declaration): Set input_location\n+       to BUILTINS_LOCATION while generating runtime metadata.\n+\n 2011-01-19  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \tPR objc/47784"}, {"sha": "a91c7083173b4193f007459c4a475b1d989e5104", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d549148695719942e87205dc0a765317757a905/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d549148695719942e87205dc0a765317757a905/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=6d549148695719942e87205dc0a765317757a905", "patch": "@@ -466,6 +466,8 @@ objc_write_global_declarations (void)\n      and code if only checking syntax, or if generating a PCH file.  */\n   if (!flag_syntax_only && !pch_file)\n     {\n+      location_t saved_location;\n+\n       /* If gen_declaration desired, open the output file.  */\n       if (flag_gen_declaration)\n \t{\n@@ -475,8 +477,24 @@ objc_write_global_declarations (void)\n \t    fatal_error (\"can%'t open %s: %m\", dumpname);\n \t  free (dumpname);\n \t}\n+\n+      /* Set the input location to BUILTINS_LOCATION.  This is good\n+\t for error messages, in case any is generated while producing\n+\t the metadata, but it also silences warnings that would be\n+\t produced when compiling with -Wpadded in case when padding is\n+\t automatically added to the built-in runtime data structure\n+\t declarations.  We know about this padding, and it is fine; we\n+\t don't want users to see any warnings about it if they use\n+\t -Wpadded.  */\n+      saved_location = input_location;\n+      input_location = BUILTINS_LOCATION;\n+\n       /* Compute and emit the meta-data tables for this runtime.  */\n       (*runtime.generate_metadata) ();\n+\n+      /* Restore the original location, just in case it mattered.  */\n+      input_location = saved_location;\n+\n       /* ... and then close any declaration file we opened.  */\n       if (gen_declaration_file)\n \tfclose (gen_declaration_file);"}, {"sha": "7fb87611d69cbdea4680991c4b2d5011bcc4d32a", "filename": "gcc/objc/objc-gnu-runtime-abi-01.c", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d549148695719942e87205dc0a765317757a905/gcc%2Fobjc%2Fobjc-gnu-runtime-abi-01.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d549148695719942e87205dc0a765317757a905/gcc%2Fobjc%2Fobjc-gnu-runtime-abi-01.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-gnu-runtime-abi-01.c?ref=6d549148695719942e87205dc0a765317757a905", "patch": "@@ -21,7 +21,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tm.h\"\n #include \"tree.h\"\n \n #ifdef OBJCPLUS\n@@ -83,11 +82,6 @@ along with GCC; see the file COPYING3.  If not see\n   if (VERS)\t\t\t\t\t\t\t\t\\\n     DECL_ATTRIBUTES (DECL) = build_tree_list ((VERS), (KIND));\n \n-/* FIXME: Remove this macro, not needed.  */\n-#ifndef TARGET_64BIT\n-#define TARGET_64BIT 0\n-#endif\n-\n static void gnu_runtime_01_initialize (void);\n \n static void build_selector_template (void);\n@@ -1995,9 +1989,7 @@ build_objc_symtab_template (void)\n   /* short cat_def_cnt; */\n   add_field_decl (short_integer_type_node, \"cat_def_cnt\", &chain);\n \n-  /* FIXME: Remove.  */\n-  if (TARGET_64BIT)\n-    add_field_decl (integer_type_node, \"_explicit_padder\", &chain);\n+  /* Note that padding will be added here on LP64.  */\n \n   /* void *defs[imp_count + cat_count (+ 1)]; */\n   /* NB: The index is one less than the size of the array.  */\n@@ -2043,19 +2035,9 @@ init_objc_symtab (tree type)\n   CONSTRUCTOR_APPEND_ELT (v, NULL_TREE, \n \t\t\t  build_int_cst (short_integer_type_node, cat_count));\n \n-  /* FIXME: Remove.  */\n-  if (TARGET_64BIT)\n-    CONSTRUCTOR_APPEND_ELT (v, NULL_TREE,\n-\t\t\t  build_int_cst (integer_type_node, 0));\n-\n   /* cls_def = { ..., { &Foo, &Bar, ...}, ... } */\n \n   field = TYPE_FIELDS (type);\n-\n-  /* FIXME: Remove.  */\n-  if (TARGET_64BIT)\n-    field = DECL_CHAIN (field);\n-\n   field = DECL_CHAIN (DECL_CHAIN (DECL_CHAIN (DECL_CHAIN (field))));\n \n   CONSTRUCTOR_APPEND_ELT (v, NULL_TREE, init_def_list (TREE_TYPE (field)));"}, {"sha": "0161ebb947fe4f807b806919380b5161f9010cef", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d549148695719942e87205dc0a765317757a905/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d549148695719942e87205dc0a765317757a905/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6d549148695719942e87205dc0a765317757a905", "patch": "@@ -1,3 +1,10 @@\n+2011-02-19  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* objc.dg/layout-2.m: New.\n+\t* objc.dg/selector-3.m: Adjusted location of error message.\n+\t* objc.dg/type-size-3.m: Same.\n+\t* obj-c++.dg/selector-3.mm: Same.\n+\n 2011-02-19  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \tPR objc/47784\n@@ -74,7 +81,7 @@\n 2011-02-18  Iain Sandoe  <iains@gcc.gnu.org>\n \n \t* objc/execute/exceptions/foward-1.x: New.\n-\t\n+\n 2011-02-18  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/47789"}, {"sha": "a1321a7b74133c159225fbc844b2a8105d710544", "filename": "gcc/testsuite/obj-c++.dg/selector-3.mm", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d549148695719942e87205dc0a765317757a905/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fselector-3.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d549148695719942e87205dc0a765317757a905/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fselector-3.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fselector-3.mm?ref=6d549148695719942e87205dc0a765317757a905", "patch": "@@ -22,5 +22,8 @@ - (void) foo\n   a = @selector(b1ar);\n   b = @selector(bar);\n }\n-@end /* { dg-warning \"creating selector for nonexistent method .b1ar.\" } */\n+@end\n+\n+/* FIXME: The error message should be on the correct line.  */\n+/* { dg-warning \"creating selector for nonexistent method .b1ar.\" \"\" { target *-*-* } 0 } */\n "}, {"sha": "474fc046192a8b36dda291e7eb2d181095ac03cb", "filename": "gcc/testsuite/objc.dg/layout-2.m", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d549148695719942e87205dc0a765317757a905/gcc%2Ftestsuite%2Fobjc.dg%2Flayout-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d549148695719942e87205dc0a765317757a905/gcc%2Ftestsuite%2Fobjc.dg%2Flayout-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Flayout-2.m?ref=6d549148695719942e87205dc0a765317757a905", "patch": "@@ -0,0 +1,14 @@\n+/* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, February 2011.  */\n+/* Ensure that -Wpadded generates no warnings during runtime structure metadata\n+   generation.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wpadded\" } */\n+\n+#include \"../objc-obj-c++-shared/Object1.h\"\n+\n+/* Implement a class, so that the metadata generation happens.  */\n+@interface MyClass : Object\n+@end\n+\n+@implementation MyClass\n+@end"}, {"sha": "c0c5f3d8fba788c2281279ad19c65c5931859805", "filename": "gcc/testsuite/objc.dg/selector-3.m", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d549148695719942e87205dc0a765317757a905/gcc%2Ftestsuite%2Fobjc.dg%2Fselector-3.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d549148695719942e87205dc0a765317757a905/gcc%2Ftestsuite%2Fobjc.dg%2Fselector-3.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fselector-3.m?ref=6d549148695719942e87205dc0a765317757a905", "patch": "@@ -23,5 +23,8 @@ - (void) foo\n   a = @selector(b1ar);\n   b = @selector(bar);\n }\n-@end /* { dg-warning \"creating selector for nonexistent method .b1ar.\" } */\n+@end\n+\n+/* FIXME: The error message should be on the correct line.  */\n+/* { dg-warning \"creating selector for nonexistent method .b1ar.\" \"\" { target *-*-* } 0 } */\n "}, {"sha": "6d7fe038447c303401fd8e59f5def43000596209", "filename": "gcc/testsuite/objc.dg/type-size-3.m", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d549148695719942e87205dc0a765317757a905/gcc%2Ftestsuite%2Fobjc.dg%2Ftype-size-3.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d549148695719942e87205dc0a765317757a905/gcc%2Ftestsuite%2Fobjc.dg%2Ftype-size-3.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Ftype-size-3.m?ref=6d549148695719942e87205dc0a765317757a905", "patch": "@@ -15,4 +15,6 @@ @interface Test\n @end\n \n @implementation Test\n-@end /* { dg-error \"instance variable has unknown size\" } */\n+@end\n+\n+/* { dg-error \"instance variable has unknown size\" \"\" { target *-*-* } 0 } */"}]}