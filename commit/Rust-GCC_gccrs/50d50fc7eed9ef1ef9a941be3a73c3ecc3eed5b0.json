{"sha": "50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTBkNTBmYzdlZWQ5ZWYxZWY5YTk0MWJlM2E3M2MzZWNjM2VlZDViMA==", "commit": {"author": {"name": "Seongbae Park", "email": "seongbae.park@gmail.com", "date": "2007-03-12T18:31:39Z"}, "committer": {"name": "Seongbae Park", "email": "spark@gcc.gnu.org", "date": "2007-03-12T18:31:39Z"}, "message": "invoke.texi (Wvla): New warning.\n\nChangeLog:\n\n2007-03-12  Seongbae Park <seongbae.park@gmail.com>\n\n\t* gcc/doc/invoke.texi (Wvla): New warning.\n\ngcc/ChangeLog:\n\n2007-03-12  Seongbae Park <seongbae.park@gmail.com>\n\n\t* c-decl.c (warn_variable_length_array): New function.\n\tRefactored from grokdeclarator to handle warn_vla\n\tand handle unnamed array case.\n\t(grokdeclarator): Refactored VLA warning case.\n\t* c.opt (Wvla): New flag.\n\ngcc/cp/ChangeLog:\n\n2007-03-12  Seongbae Park <seongbae.park@gmail.com>\n\n\t* decl.c (compute_array_index_type): New warning flag warn_vla.\n\ngcc/testsuite/ChangeLog:\n\n2007-03-12  Seongbae Park <seongbae.park@gmail.com>\n\n \t* gcc.dg/wvla-1.c: New test\n \t* gcc.dg/wvla-2.c: New test\n \t* gcc.dg/wvla-3.c: New test\n \t* gcc.dg/wvla-4.c: New test\n \t* gcc.dg/wvla-5.c: New test\n \t* gcc.dg/wvla-6.c: New test\n \t* gcc.dg/wvla-7.c: New test\n\t* g++.dg/warn/Wvla-1.C: New test\n\t* g++.dg/warn/Wvla-2.C: New test\n\t* g++.dg/warn/Wvla-3.C: New test\n\nFrom-SVN: r122851", "tree": {"sha": "f58a0ea917a7250e26da70b4e2da5c2e6db2fd99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f58a0ea917a7250e26da70b4e2da5c2e6db2fd99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/comments", "author": null, "committer": null, "parents": [{"sha": "ae0698035be607578e73afab669c3255bf52a6e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae0698035be607578e73afab669c3255bf52a6e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae0698035be607578e73afab669c3255bf52a6e0"}], "stats": {"total": 181, "additions": 166, "deletions": 15}, "files": [{"sha": "1d1035fa6e81b8cf0992754c6868b8a260416663", "filename": "ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0", "patch": "@@ -1,3 +1,7 @@\n+2007-03-12  Seongbae Park <seongbae.park@gmail.com>\n+\n+\t* gcc/doc/invoke.texi (Wvla): New warning.\n+\n 2007-03-07  Andreas Schwab  <schwab@suse.de>\n \n \t* configure: Regenerate."}, {"sha": "624f65175439e1c31aeb75c44dc75b62252c77ec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0", "patch": "@@ -1,3 +1,11 @@\n+2007-03-12  Seongbae Park <seongbae.park@gmail.com>\n+\n+\t* c-decl.c (warn_variable_length_array): New function.\n+\tRefactored from grokdeclarator to handle warn_vla\n+\tand handle unnamed array case.\n+\t(grokdeclarator): Refactored VLA warning case.\n+\t* c.opt (Wvla): New flag.\n+\n 2007-03-12  Richard Henderson  <rth@redhat.com>\n \n \t* config/alpha/alpha.c (alpha_elf_section_type_flags): New."}, {"sha": "eaef0a506b87ccbdd487614f56725fc6694a6c4f", "filename": "gcc/c-decl.c", "status": "modified", "additions": 56, "deletions": 11, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0", "patch": "@@ -3891,6 +3891,61 @@ check_bitfield_type_and_width (tree *type, tree *width, const char *orig_name)\n }\n \n \f\n+\n+/* Print warning about variable length array if necessary.  */\n+\n+static void\n+warn_variable_length_array (const char *name, tree size)\n+{\n+  int ped = !flag_isoc99 && pedantic && warn_vla != 0;\n+  int const_size = TREE_CONSTANT (size);\n+\n+  if (ped)\n+    {\n+      if (const_size)\n+\t{\n+\t  if (name)\n+\t    pedwarn (\"ISO C90 forbids array %qs whose size \"\n+\t\t     \"can%'t be evaluated\",\n+\t\t     name);\n+\t  else\n+\t    pedwarn (\"ISO C90 forbids array whose size \"\n+\t\t     \"can%'t be evaluated\");\n+\t}\n+      else\n+\t{\n+\t  if (name) \n+\t    pedwarn (\"ISO C90 forbids variable length array %qs\",\n+\t\t     name);\n+\t  else\n+\t    pedwarn (\"ISO C90 forbids variable length array\");\n+\t}\n+    }\n+  else if (warn_vla > 0)\n+    {\n+      if (const_size)\n+        {\n+\t  if (name)\n+\t    warning (OPT_Wvla,\n+\t\t     \"the size of array %qs can\"\n+\t\t     \"%'t be evaluated\", name);\n+\t  else\n+\t    warning (OPT_Wvla,\n+\t\t     \"the size of array can %'t be evaluated\");\n+\t}\n+      else\n+\t{\n+\t  if (name)\n+\t    warning (OPT_Wvla,\n+\t\t     \"variable length array %qs is used\",\n+\t\t     name);\n+\t  else\n+\t    warning (OPT_Wvla,\n+\t\t     \"variable length array is used\");\n+\t}\n+    }\n+}\n+\n /* Given declspecs and a declarator,\n    determine the name and type of the object declared\n    and construct a ..._DECL node for it.\n@@ -4289,17 +4344,7 @@ grokdeclarator (const struct c_declarator *declarator,\n \t\t       nonconstant even if it is (eg) a const variable\n \t\t       with known value.  */\n \t\t    size_varies = 1;\n-\n-\t\t    if (!flag_isoc99 && pedantic)\n-\t\t      {\n-\t\t\tif (TREE_CONSTANT (size))\n-\t\t\t  pedwarn (\"ISO C90 forbids array %qs whose size \"\n-\t\t\t\t   \"can%'t be evaluated\",\n-\t\t\t\t   name);\n-\t\t\telse\n-\t\t\t  pedwarn (\"ISO C90 forbids variable-size array %qs\",\n-\t\t\t\t   name);\n-\t\t      }\n+\t\t    warn_variable_length_array (orig_name, size);\n \t\t  }\n \n \t\tif (integer_zerop (size))"}, {"sha": "928e8b2c59a598c2b66be40cb873d35b5d4b7ac8", "filename": "gcc/c.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc.opt?ref=50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0", "patch": "@@ -450,6 +450,10 @@ Wvariadic-macros\n C ObjC C++ ObjC++ Warning\n Do not warn about using variadic macros when -pedantic\n \n+Wvla\n+C ObjC C++ ObjC++ Var(warn_vla) Init(-1) Warning\n+Warn if a variable length array is used\n+\n Wwrite-strings\n C ObjC C++ ObjC++ Var(warn_write_strings) Warning\n In C++, nonzero means warn about deprecated conversion from string literals to `char *'.  In C, similar warning, except that the conversion is of course not deprecated by the ISO C standard."}, {"sha": "752d86fa4ef872addb0051f598497501b89b6cb7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0", "patch": "@@ -1,3 +1,7 @@\n+2007-03-12  Seongbae Park <seongbae.park@gmail.com>\n+\n+\t* decl.c (compute_array_index_type): New warning flag warn_vla.\n+\n 2007-03-12  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/30108"}, {"sha": "14d20cec2271597587352425e667db32ac5061e7", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0", "patch": "@@ -6632,12 +6632,21 @@ compute_array_index_type (tree name, tree size)\n \terror (\"size of array is not an integral constant-expression\");\n       size = integer_one_node;\n     }\n-  else if (pedantic)\n+  else if (pedantic && warn_vla != 0)\n     {\n       if (name)\n-\tpedwarn (\"ISO C++ forbids variable-size array %qD\", name);\n+\tpedwarn (\"ISO C++ forbids variable length array %qD\", name);\n       else\n-\tpedwarn (\"ISO C++ forbids variable-size array\");\n+\tpedwarn (\"ISO C++ forbids variable length array\");\n+    }\n+  else if (warn_vla > 0)\n+    {\n+      if (name)\n+\twarning (OPT_Wvla, \n+                 \"variable length array %qD is used\", name);\n+      else\n+\twarning (OPT_Wvla, \n+                 \"variable length array is used\");\n     }\n \n   if (processing_template_decl && !TREE_CONSTANT (size))"}, {"sha": "dc5bc513d4493c9145b8c96cad5ca1644a6fec98", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0", "patch": "@@ -254,7 +254,8 @@ Objective-C and Objective-C++ Dialects}.\n -Wsystem-headers  -Wtrigraphs  -Wundef  -Wuninitialized @gol\n -Wunknown-pragmas  -Wno-pragmas -Wunreachable-code @gol\n -Wunused  -Wunused-function  -Wunused-label  -Wunused-parameter @gol\n--Wunused-value  -Wunused-variable  -Wvariadic-macros @gol\n+-Wunused-value  -Wunused-variable @gol\n+-Wvariadic-macros -Wvla @gol\n -Wvolatile-register-var  -Wwrite-strings}\n \n @item C-only Warning Options\n@@ -3733,6 +3734,13 @@ Warn if variadic macros are used in pedantic ISO C90 mode, or the GNU\n alternate syntax when in pedantic ISO C99 mode.  This is default.\n To inhibit the warning messages, use @option{-Wno-variadic-macros}.\n \n+@item -Wvla\n+@opindex Wvla\n+@opindex Wno-vla\n+Warn if variable length array is used in the code.\n+@option{-Wno-vla} will prevent the @option{-pedantic} warning of\n+the variable length array.\n+\n @item -Wvolatile-register-var\n @opindex Wvolatile-register-var\n @opindex Wno-volatile-register-var"}, {"sha": "3925c554a42d0e750e8a98881ee885f40bbaf684", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0", "patch": "@@ -1,3 +1,16 @@\n+2007-03-12  Seongbae Park <seongbae.park@gmail.com>\n+\n+ \t* gcc.dg/wvla-1.c: New test\n+ \t* gcc.dg/wvla-2.c: New test\n+ \t* gcc.dg/wvla-3.c: New test\n+ \t* gcc.dg/wvla-4.c: New test\n+ \t* gcc.dg/wvla-5.c: New test\n+ \t* gcc.dg/wvla-6.c: New test\n+ \t* gcc.dg/wvla-7.c: New test\n+\t* g++.dg/warn/Wvla-1.C: New test\n+\t* g++.dg/warn/Wvla-2.C: New test\n+\t* g++.dg/warn/Wvla-3.C: New test\n+\n 2007-03-12  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/30108"}, {"sha": "ca3669aec99efd745617c9f397b0acd976bbc000", "filename": "gcc/testsuite/g++.dg/warn/Wvla-1.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWvla-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWvla-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWvla-1.C?ref=50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wvla\" } */\n+\n+void func (int i)\n+{\n+  int array[i]; /* { dg-warning \"variable length array 'array' is used\" } */\n+}"}, {"sha": "c611f07aab42ab57ab2371fe3aaebeea92ce9973", "filename": "gcc/testsuite/g++.dg/warn/Wvla-2.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWvla-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWvla-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWvla-2.C?ref=50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-pedantic-errors -Wvla\" } */\n+\n+void func (int i)\n+{\n+  int array[i]; /* { dg-error \"error: ISO C.* forbids variable.* array 'array'\" } */\n+}"}, {"sha": "259c576b29f8a4e03d57e1402269c83f16d30f69", "filename": "gcc/testsuite/g++.dg/warn/Wvla-3.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWvla-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWvla-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWvla-3.C?ref=50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-pedantic-errors -Wno-vla\" } */\n+\n+void func (int i)\n+{\n+  int array[i];\n+}"}, {"sha": "c8f21078be967edd3dc91f144c204dc8c8d6f272", "filename": "gcc/testsuite/gcc.dg/wvla-1.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2Ftestsuite%2Fgcc.dg%2Fwvla-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2Ftestsuite%2Fgcc.dg%2Fwvla-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fwvla-1.c?ref=50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-std=c89 -Wvla\" } */\n+\n+extern void \n+func (int i, int array[i]); /* { dg-warning \"variable length array 'array' is used\" } */"}, {"sha": "d811a112f077da82fd9a59c7dd6d69abf247ec3c", "filename": "gcc/testsuite/gcc.dg/wvla-2.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2Ftestsuite%2Fgcc.dg%2Fwvla-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2Ftestsuite%2Fgcc.dg%2Fwvla-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fwvla-2.c?ref=50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-std=c99 -Wvla\" } */\n+\n+extern void \n+func (int i, int array[i]); /* { dg-warning \"variable length array 'array' is used\" } */"}, {"sha": "3d5d3aa54345710e30ca6dd5f84e6a9b8844bce8", "filename": "gcc/testsuite/gcc.dg/wvla-3.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2Ftestsuite%2Fgcc.dg%2Fwvla-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2Ftestsuite%2Fgcc.dg%2Fwvla-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fwvla-3.c?ref=50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-pedantic-errors -std=c89 -Wvla\" } */\n+\n+extern void \n+func (int i, int array[i]); /* { dg-error \"error: ISO C90 forbids variable.* array 'array'\" } */"}, {"sha": "8c15292edacec7591153463a041b7c2523f2db29", "filename": "gcc/testsuite/gcc.dg/wvla-4.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2Ftestsuite%2Fgcc.dg%2Fwvla-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2Ftestsuite%2Fgcc.dg%2Fwvla-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fwvla-4.c?ref=50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-pedantic-errors -std=c99 -Wvla\" } */\n+\n+extern void \n+func (int i, int array[i]); /* { dg-warning \"variable length array 'array' is used\" } */"}, {"sha": "919b8dc201bdaa550f344a6cd4759a8dd8379fb5", "filename": "gcc/testsuite/gcc.dg/wvla-5.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2Ftestsuite%2Fgcc.dg%2Fwvla-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2Ftestsuite%2Fgcc.dg%2Fwvla-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fwvla-5.c?ref=50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-pedantic-errors -std=c89 -Wno-vla\" } */\n+\n+extern void \n+func (int i, int array[i]);"}, {"sha": "f21435b02a844137349d02c7110bc2b446e00383", "filename": "gcc/testsuite/gcc.dg/wvla-6.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2Ftestsuite%2Fgcc.dg%2Fwvla-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2Ftestsuite%2Fgcc.dg%2Fwvla-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fwvla-6.c?ref=50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-std=c89 -Wvla\" } */\n+\n+extern void \n+func (int i, int [i]); /* { dg-warning \"variable length array is used\" } */"}, {"sha": "bc113bfb05d6b012a53a5d642ad5154a95b5eabc", "filename": "gcc/testsuite/gcc.dg/wvla-7.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2Ftestsuite%2Fgcc.dg%2Fwvla-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0/gcc%2Ftestsuite%2Fgcc.dg%2Fwvla-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fwvla-7.c?ref=50d50fc7eed9ef1ef9a941be3a73c3ecc3eed5b0", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-pedantic-errors -std=c89 -Wvla\" } */\n+\n+extern void \n+func (int i, int [i]); /* { dg-error \"error: ISO C90 forbids variable\" } */"}]}