{"sha": "01d7d459e433196b1faa4ee025a314266887fc59", "node_id": "C_kwDOANBUbNoAKDAxZDdkNDU5ZTQzMzE5NmIxZmFhNGVlMDI1YTMxNDI2Njg4N2ZjNTk", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-17T13:32:35Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-17T13:41:04Z"}, "message": "[PR tree-optimization/105820] Add test.\n\n\tPR tree-optimization/105820\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/tree-ssa/pr105820.c: New test.", "tree": {"sha": "4bb7b871b509d2f1edc51afc0a994b5646e9f0c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4bb7b871b509d2f1edc51afc0a994b5646e9f0c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01d7d459e433196b1faa4ee025a314266887fc59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01d7d459e433196b1faa4ee025a314266887fc59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01d7d459e433196b1faa4ee025a314266887fc59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01d7d459e433196b1faa4ee025a314266887fc59/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb1edef9f4dadeffa15fdfd2fb206d78027b7b32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb1edef9f4dadeffa15fdfd2fb206d78027b7b32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb1edef9f4dadeffa15fdfd2fb206d78027b7b32"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "507950f42d3f4e8edc841e7e4cb48d10398d4fc7", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr105820.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01d7d459e433196b1faa4ee025a314266887fc59/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr105820.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01d7d459e433196b1faa4ee025a314266887fc59/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr105820.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr105820.c?ref=01d7d459e433196b1faa4ee025a314266887fc59", "patch": "@@ -0,0 +1,26 @@\n+// { dg-do compile }\n+// { dg-options \"-O2 -fstrict-enums --param case-values-threshold=1\"}\n+\n+typedef int basic_block;\n+\n+enum gimple_code {};\n+\n+struct omp_region {\n+  omp_region *outer;\n+  basic_block cont;\n+};\n+\n+void\n+oof (void);\n+\n+void\n+build_omp_regions_1 (omp_region *parent, basic_block bb, gimple_code code)\n+{\n+  if (code == 2)\n+    parent = parent->outer;\n+  else if (code != 0)\n+    parent->cont = bb;\n+\n+  if (parent)\n+    oof ();\n+}"}]}