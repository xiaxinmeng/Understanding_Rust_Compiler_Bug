{"sha": "bb2ae697ab610f10045da76435c9934d06dce608", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmIyYWU2OTdhYjYxMGYxMDA0NWRhNzY0MzVjOTkzNGQwNmRjZTYwOA==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-12-27T21:51:28Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-12-27T21:51:28Z"}, "message": "testsuite_hooks.h (gnu_counting_struct): Add.\n\n2001-12-27  Phil Edwards  <pme@gcc.gnu.org>\n\n\t* testsuite/testsuite_hooks.h (gnu_counting_struct):  Add.\n\t* testsuite/23_containers/deque_ctor.cc:  New file.\n\nFrom-SVN: r48332", "tree": {"sha": "c626dd3ff096f498ecf01785588f1b74915a1627", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c626dd3ff096f498ecf01785588f1b74915a1627"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb2ae697ab610f10045da76435c9934d06dce608", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb2ae697ab610f10045da76435c9934d06dce608", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb2ae697ab610f10045da76435c9934d06dce608", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb2ae697ab610f10045da76435c9934d06dce608/comments", "author": null, "committer": null, "parents": [{"sha": "a4b593ef7da891ee4521dc0a6b07228eb9ddbd79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4b593ef7da891ee4521dc0a6b07228eb9ddbd79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4b593ef7da891ee4521dc0a6b07228eb9ddbd79"}], "stats": {"total": 75, "additions": 75, "deletions": 0}, "files": [{"sha": "2be936a44cd0d711bcd593c676f69af8ace57c97", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb2ae697ab610f10045da76435c9934d06dce608/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb2ae697ab610f10045da76435c9934d06dce608/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=bb2ae697ab610f10045da76435c9934d06dce608", "patch": "@@ -1,3 +1,8 @@\n+2001-12-27  Phil Edwards  <pme@gcc.gnu.org>\n+\n+\t* testsuite/testsuite_hooks.h (gnu_counting_struct):  Add.\n+\t* testsuite/23_containers/deque_ctor.cc:  New file.\n+\n 2001-12-27  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* include/bits/locale_facets.tcc (collate::do_transform):"}, {"sha": "b02175dd734ce5efb076e932662b44d041bab598", "filename": "libstdc++-v3/testsuite/23_containers/deque_ctor.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb2ae697ab610f10045da76435c9934d06dce608/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque_ctor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb2ae697ab610f10045da76435c9934d06dce608/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque_ctor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque_ctor.cc?ref=bb2ae697ab610f10045da76435c9934d06dce608", "patch": "@@ -0,0 +1,46 @@\n+// 2001-12-27 pme\n+//\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 23.2.1.1 deque constructors, copy, and assignment\n+\n+#include <deque>\n+#include <testsuite_hooks.h>\n+\n+typedef std::deque<gnu_counting_struct>   gdeque;\n+\n+\n+// basic alloc/dealloc sanity check\n+void\n+test01()\n+{\n+  assert_count (0);\n+  {\n+     gdeque   d(10);\n+     assert_count (10);\n+  }\n+  assert_count (0);\n+}\n+\n+int main()\n+{\n+  test01();\n+\n+  return 0;\n+}"}, {"sha": "97bf04bd5199238ce9297fc3f7ebf06544eab1d1", "filename": "libstdc++-v3/testsuite/testsuite_hooks.h", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb2ae697ab610f10045da76435c9934d06dce608/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb2ae697ab610f10045da76435c9934d06dce608/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.h?ref=bb2ae697ab610f10045da76435c9934d06dce608", "patch": "@@ -40,6 +40,12 @@\n //   calling application.  The argument to __set_testsuite_memlimit() is the\n //   limit in megabytes (a floating-point number).  If _GLIBCPP_MEM_LIMITS is\n //   #defined before including this header, then no limiting is attempted.\n+//\n+// 3)  gnu_counting_struct\n+//   This is a POD with a static data member, gnu_counting_struct::count,\n+//   which starts at zero, increments on instance construction, and decrements\n+//   on instance destruction.  \"assert_count(n)\" can be called to VERIFY()\n+//   that the count equals N.\n \n #ifndef _GLIBCPP_TESTSUITE_HOOKS_H\n #define _GLIBCPP_TESTSUITE_HOOKS_H\n@@ -99,5 +105,23 @@ __set_testsuite_memlimit(float __size = MEMLIMIT_MB)\n }\n #endif\n \n+\n+struct gnu_counting_struct\n+{\n+    // Specifically and glaringly-obviously marked 'signed' so that when\n+    // count mistakenly goes negative, we can track the patterns of\n+    // deletions easier.\n+    typedef  signed int     size_type;\n+    static size_type   count;\n+    gnu_counting_struct() { ++count; }\n+    gnu_counting_struct (const gnu_counting_struct&) { ++count; }\n+    ~gnu_counting_struct() { --count; }\n+};\n+\n+#define assert_count(n)   VERIFY(gnu_counting_struct::count == n)\n+\n+gnu_counting_struct::size_type  gnu_counting_struct::count = 0;\n+\n+\n #endif // _GLIBCPP_TESTSUITE_HOOKS_H\n "}]}