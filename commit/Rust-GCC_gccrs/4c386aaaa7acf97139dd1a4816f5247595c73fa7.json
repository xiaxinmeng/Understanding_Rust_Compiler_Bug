{"sha": "4c386aaaa7acf97139dd1a4816f5247595c73fa7", "node_id": "C_kwDOANBUbNoAKDRjMzg2YWFhYTdhY2Y5NzEzOWRkMWE0ODE2ZjUyNDc1OTVjNzNmYTc", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-09-23T21:15:06Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-09-24T06:35:49Z"}, "message": "A bit of 'RichLocation' C++ tuning [#247], [#97, #374]\n\n... in preparation for a merge from GCC upstream, where we otherwise run into\nseveral different build errors.\n\nFollow-up to commit ed651fcdec170456f7460703edbd0ca5901f0026\n\"Add basic wrapper over gcc rich_location\".", "tree": {"sha": "c7c251a2fe0343fe49f4e8119834c8ed4de4693a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7c251a2fe0343fe49f4e8119834c8ed4de4693a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c386aaaa7acf97139dd1a4816f5247595c73fa7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c386aaaa7acf97139dd1a4816f5247595c73fa7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c386aaaa7acf97139dd1a4816f5247595c73fa7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c386aaaa7acf97139dd1a4816f5247595c73fa7/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4abf34c2b61b51ed34df9a63950927747a378cad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4abf34c2b61b51ed34df9a63950927747a378cad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4abf34c2b61b51ed34df9a63950927747a378cad"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "446435731dc43d4a1f6a52dabedb09504a4f264c", "filename": "gcc/rust/rust-diagnostics.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c386aaaa7acf97139dd1a4816f5247595c73fa7/gcc%2Frust%2Frust-diagnostics.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c386aaaa7acf97139dd1a4816f5247595c73fa7/gcc%2Frust%2Frust-diagnostics.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-diagnostics.cc?ref=4c386aaaa7acf97139dd1a4816f5247595c73fa7", "patch": "@@ -188,7 +188,7 @@ rust_inform (const Location location, const char *fmt, ...)\n \n // Rich Locations\n void\n-rust_error_at (const RichLocation location, const char *fmt, ...)\n+rust_error_at (const RichLocation &location, const char *fmt, ...)\n {\n   va_list ap;\n "}, {"sha": "2e34f3b46c973c0cb07cc26f5b4744d72bebbd8c", "filename": "gcc/rust/rust-diagnostics.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c386aaaa7acf97139dd1a4816f5247595c73fa7/gcc%2Frust%2Frust-diagnostics.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c386aaaa7acf97139dd1a4816f5247595c73fa7/gcc%2Frust%2Frust-diagnostics.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-diagnostics.h?ref=4c386aaaa7acf97139dd1a4816f5247595c73fa7", "patch": "@@ -64,7 +64,7 @@ rust_inform (const Location, const char *fmt, ...)\n \n // rich locations\n extern void\n-rust_error_at (const RichLocation, const char *fmt, ...)\n+rust_error_at (const RichLocation &, const char *fmt, ...)\n   RUST_ATTRIBUTE_GCC_DIAG (2, 3);\n \n // These interfaces provide a way for the front end to ask for\n@@ -84,7 +84,7 @@ rust_close_quote ();\n extern void\n rust_be_error_at (const Location, const std::string &errmsg);\n extern void\n-rust_be_error_at (const RichLocation, const std::string &errmsg);\n+rust_be_error_at (const RichLocation &, const std::string &errmsg);\n extern void\n rust_be_warning_at (const Location, int opt, const std::string &warningmsg);\n extern void"}, {"sha": "0394e9e3333da09d188ab2c5c8e0ce6758c20d7a", "filename": "gcc/rust/rust-gcc-diagnostics.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c386aaaa7acf97139dd1a4816f5247595c73fa7/gcc%2Frust%2Frust-gcc-diagnostics.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c386aaaa7acf97139dd1a4816f5247595c73fa7/gcc%2Frust%2Frust-gcc-diagnostics.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-gcc-diagnostics.cc?ref=4c386aaaa7acf97139dd1a4816f5247595c73fa7", "patch": "@@ -53,9 +53,10 @@ rust_be_inform (const Location location, const std::string &infomsg)\n }\n \n void\n-rust_be_error_at (const RichLocation location, const std::string &errmsg)\n+rust_be_error_at (const RichLocation &location, const std::string &errmsg)\n {\n-  rich_location gcc_loc = location.get ();\n+  /* TODO: 'error_at' would like a non-'const' 'rich_location *'.  */\n+  rich_location &gcc_loc = const_cast<rich_location &> (location.get ());\n   error_at (&gcc_loc, \"%s\", errmsg.c_str ());\n }\n "}, {"sha": "b69d7da94195a80d7adf4bc7a9c0a729d5e9a80f", "filename": "gcc/rust/rust-location.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c386aaaa7acf97139dd1a4816f5247595c73fa7/gcc%2Frust%2Frust-location.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c386aaaa7acf97139dd1a4816f5247595c73fa7/gcc%2Frust%2Frust-location.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-location.h?ref=4c386aaaa7acf97139dd1a4816f5247595c73fa7", "patch": "@@ -96,7 +96,7 @@ class RichLocation\n \n   void add_fixit_insert_after (Location where, const std::string &new_parent);\n \n-  rich_location get () const { return gcc_rich_loc; }\n+  const rich_location &get () const { return gcc_rich_loc; }\n \n private:\n   rich_location gcc_rich_loc;"}]}