{"sha": "693ed633816d191104a804686043a02146c34d8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjkzZWQ2MzM4MTZkMTkxMTA0YTgwNDY4NjA0M2EwMjE0NmMzNGQ4ZQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-08-10T08:40:17Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-08-10T08:40:17Z"}, "message": "jcf-dump.c (print_constant): Cast first frexp arg.\n\n\tgcc/java:\n\t* jcf-dump.c (print_constant): Cast first frexp arg.\n\n\tlibjava:\n\t* exception.cc (std::abort): Remove static.\n\nFrom-SVN: r177612", "tree": {"sha": "dafd0d203a4bfbc0ecee6ba042e5137667ee6c68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dafd0d203a4bfbc0ecee6ba042e5137667ee6c68"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/693ed633816d191104a804686043a02146c34d8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/693ed633816d191104a804686043a02146c34d8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/693ed633816d191104a804686043a02146c34d8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/693ed633816d191104a804686043a02146c34d8e/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dcfd875366c5ee2a115cfe4582830e8f6279b811", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcfd875366c5ee2a115cfe4582830e8f6279b811", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcfd875366c5ee2a115cfe4582830e8f6279b811"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "11515f0fa84062aa982a06a8cb5c025fa6d3cbc2", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693ed633816d191104a804686043a02146c34d8e/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693ed633816d191104a804686043a02146c34d8e/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=693ed633816d191104a804686043a02146c34d8e", "patch": "@@ -1,3 +1,7 @@\n+2011-08-10  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* jcf-dump.c (print_constant): Cast first frexp arg.\n+\n 2011-08-08  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* Make-lang.in ($(XGCJ)$(exeext)): Add $(EXTRA_GCC_LIBS)."}, {"sha": "fecca155db11ef85301734515d25cf7d10157e96", "filename": "gcc/java/jcf-dump.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693ed633816d191104a804686043a02146c34d8e/gcc%2Fjava%2Fjcf-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693ed633816d191104a804686043a02146c34d8e/gcc%2Fjava%2Fjcf-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-dump.c?ref=693ed633816d191104a804686043a02146c34d8e", "patch": "@@ -790,7 +790,7 @@ print_constant (FILE *out, JCF *jcf, int index, int verbosity)\n \t      /* Normal; add the implicit bit.  */\n \t      mantissa |= ((uint32)1 << 23);\n \t    \n-\t    f = frexp (mantissa, &dummy);\n+\t    f = frexp ((float) mantissa, &dummy);\n \t    f = ldexp (f, exponent + 1);\n \t    fprintf (out, \"%.10g\", f);\n \t  }\n@@ -833,7 +833,7 @@ print_constant (FILE *out, JCF *jcf, int index, int verbosity)\n \t      /* Normal; add the implicit bit.  */\n \t      mantissa |= ((uint64)1 << 52);\n \n-\t    d = frexp (mantissa, &dummy);\n+\t    d = frexp ((double) mantissa, &dummy);\n \t    d = ldexp (d, exponent + 1);\n \t    fprintf (out, \"%.20g\", d);\n \t  }"}, {"sha": "53adfd452853990e02a178fce2a93a24351b5a96", "filename": "libjava/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693ed633816d191104a804686043a02146c34d8e/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693ed633816d191104a804686043a02146c34d8e/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=693ed633816d191104a804686043a02146c34d8e", "patch": "@@ -1,3 +1,7 @@\n+2011-08-10  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* exception.cc (std::abort): Remove static.\n+\n 2011-08-08  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* configure.ac (THREADS): Remove posix95."}, {"sha": "5a8a9e21cfa4725383ef9dc64424e2e9280c1b7e", "filename": "libjava/exception.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693ed633816d191104a804686043a02146c34d8e/libjava%2Fexception.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693ed633816d191104a804686043a02146c34d8e/libjava%2Fexception.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fexception.cc?ref=693ed633816d191104a804686043a02146c34d8e", "patch": "@@ -1,6 +1,7 @@\n // Functions for Exception Support for Java.\n \n-/* Copyright (C) 1998, 1999, 2001, 2002, 2006, 2010  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2001, 2002, 2006, 2010, 2011\n+   Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -24,7 +25,7 @@ details.  */\n // stdlib.h's abort().\n namespace std\n {\n-  static __attribute__ ((__noreturn__)) void\n+  __attribute__ ((__noreturn__)) void\n   abort ()\n   {\n     ::abort ();"}]}