{"sha": "81fdaa176d937936a21bb3e42eb482f042f42b77", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODFmZGFhMTc2ZDkzNzkzNmEyMWJiM2U0MmViNDgyZjA0MmY0MmI3Nw==", "commit": {"author": {"name": "Adam Butcher", "email": "adam@jessamine.co.uk", "date": "2014-01-06T18:22:29Z"}, "committer": {"name": "Adam Butcher", "email": "abutcher@gcc.gnu.org", "date": "2014-01-06T18:22:29Z"}, "message": "re PR c++/59636 ([c++1y] ICE with missing template parameter in lambda)\n\nFix PR c++/59636\n\n\tPR c++/59636\n\t* cp/parser.c (cp_parser_template_parameter): Early out with\n\terror_mark_node if parameter declaration was not parsed.\n\n\t* g++.dg/cpp1y/pr59636.C: New testcase.\n\nFrom-SVN: r206369", "tree": {"sha": "8ccd2712fdeea89cfce91a2c01b9f055518c94ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ccd2712fdeea89cfce91a2c01b9f055518c94ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81fdaa176d937936a21bb3e42eb482f042f42b77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81fdaa176d937936a21bb3e42eb482f042f42b77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81fdaa176d937936a21bb3e42eb482f042f42b77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81fdaa176d937936a21bb3e42eb482f042f42b77/comments", "author": {"login": "abutcher-gh", "id": 10379705, "node_id": "MDQ6VXNlcjEwMzc5NzA1", "avatar_url": "https://avatars.githubusercontent.com/u/10379705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abutcher-gh", "html_url": "https://github.com/abutcher-gh", "followers_url": "https://api.github.com/users/abutcher-gh/followers", "following_url": "https://api.github.com/users/abutcher-gh/following{/other_user}", "gists_url": "https://api.github.com/users/abutcher-gh/gists{/gist_id}", "starred_url": "https://api.github.com/users/abutcher-gh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abutcher-gh/subscriptions", "organizations_url": "https://api.github.com/users/abutcher-gh/orgs", "repos_url": "https://api.github.com/users/abutcher-gh/repos", "events_url": "https://api.github.com/users/abutcher-gh/events{/privacy}", "received_events_url": "https://api.github.com/users/abutcher-gh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2c8c627389238b024de53401676139ffc6010b4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c8c627389238b024de53401676139ffc6010b4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c8c627389238b024de53401676139ffc6010b4e"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "33228977ca5db7f4433bf05044b87a0e02960ce0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81fdaa176d937936a21bb3e42eb482f042f42b77/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81fdaa176d937936a21bb3e42eb482f042f42b77/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=81fdaa176d937936a21bb3e42eb482f042f42b77", "patch": "@@ -4,6 +4,10 @@\n \t* cp/lambda.c (maybe_add_lambda_conv_op): Handle marking conversion\n \tfunction as unimplemented for generic lambdas with varargs.\n \n+\tPR c++/59636\n+\t* cp/parser.c (cp_parser_template_parameter): Early out with\n+\terror_mark_node if parameter declaration was not parsed.\n+\n 2014-01-03  Marc Glisse  <marc.glisse@inria.fr>\n \n \tPR c++/58950"}, {"sha": "4d970260a1b31201ab4eeab6264bde2b3ac289ec", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81fdaa176d937936a21bb3e42eb482f042f42b77/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81fdaa176d937936a21bb3e42eb482f042f42b77/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=81fdaa176d937936a21bb3e42eb482f042f42b77", "patch": "@@ -12977,20 +12977,21 @@ cp_parser_template_parameter (cp_parser* parser, bool *is_non_type,\n      = cp_parser_parameter_declaration (parser, /*template_parm_p=*/true,\n \t\t\t\t\t/*parenthesized_p=*/NULL);\n \n+  if (!parameter_declarator)\n+    return error_mark_node;\n+\n   /* If the parameter declaration is marked as a parameter pack, set\n      *IS_PARAMETER_PACK to notify the caller. Also, unmark the\n      declarator's PACK_EXPANSION_P, otherwise we'll get errors from\n      grokdeclarator. */\n-  if (parameter_declarator\n-      && parameter_declarator->declarator\n+  if (parameter_declarator->declarator\n       && parameter_declarator->declarator->parameter_pack_p)\n     {\n       *is_parameter_pack = true;\n       parameter_declarator->declarator->parameter_pack_p = false;\n     }\n \n-  if (parameter_declarator\n-      && parameter_declarator->default_argument)\n+  if (parameter_declarator->default_argument)\n     {\n       /* Can happen in some cases of erroneous input (c++/34892).  */\n       if (cp_lexer_next_token_is (parser->lexer, CPP_ELLIPSIS))\n@@ -13014,8 +13015,7 @@ cp_parser_template_parameter (cp_parser* parser, bool *is_non_type,\n   /* We might end up with a pack expansion as the type of the non-type\n      template parameter, in which case this is a non-type template\n      parameter pack.  */\n-  else if (parameter_declarator\n-\t   && parameter_declarator->decl_specifiers.type\n+  else if (parameter_declarator->decl_specifiers.type\n \t   && PACK_EXPANSION_P (parameter_declarator->decl_specifiers.type))\n     {\n       *is_parameter_pack = true;"}, {"sha": "a56b69dbb64e53c84ea66e62e199bf5a1064ce60", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81fdaa176d937936a21bb3e42eb482f042f42b77/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81fdaa176d937936a21bb3e42eb482f042f42b77/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=81fdaa176d937936a21bb3e42eb482f042f42b77", "patch": "@@ -1,7 +1,9 @@\n 2014-01-06  Adam Butcher  <adam@jessamine.co.uk>\n \n \tPR c++/59635\n+\tPR c++/59636\n \t* g++.dg/cpp1y/pr59635.C: New testcase.\n+\t* g++.dg/cpp1y/pr59636.C: New testcase.\n \n 2014-01-06  Martin Jambor  <mjambor@suse.cz>\n "}, {"sha": "f2ca5b6c09ccf3b67c48708f6fbb65cf4e610909", "filename": "gcc/testsuite/g++.dg/cpp1y/pr59636.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81fdaa176d937936a21bb3e42eb482f042f42b77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr59636.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81fdaa176d937936a21bb3e42eb482f042f42b77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr59636.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr59636.C?ref=81fdaa176d937936a21bb3e42eb482f042f42b77", "patch": "@@ -0,0 +1,7 @@\n+// { dg-do compile }\n+// { dg-options \"-std=c++1y\" }\n+\n+// PR c++/59636\n+\n+auto f = []() { return []<>() {}; };  // { dg-error \"expected identifier\" }\n+"}]}