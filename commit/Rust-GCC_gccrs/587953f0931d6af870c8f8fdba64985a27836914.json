{"sha": "587953f0931d6af870c8f8fdba64985a27836914", "node_id": "C_kwDOANBUbNoAKDU4Nzk1M2YwOTMxZDZhZjg3MGM4ZjhmZGJhNjQ5ODVhMjc4MzY5MTQ", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-04-16T00:16:31Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-04-16T00:16:31Z"}, "message": "Daily bump.", "tree": {"sha": "031cc244d47cd933d67196f10edbd35bf17032c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/031cc244d47cd933d67196f10edbd35bf17032c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/587953f0931d6af870c8f8fdba64985a27836914", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/587953f0931d6af870c8f8fdba64985a27836914", "html_url": "https://github.com/Rust-GCC/gccrs/commit/587953f0931d6af870c8f8fdba64985a27836914", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/587953f0931d6af870c8f8fdba64985a27836914/comments", "author": null, "committer": null, "parents": [{"sha": "d00dd52ea15f9026c327d2f591eb456d6f11df2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d00dd52ea15f9026c327d2f591eb456d6f11df2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d00dd52ea15f9026c327d2f591eb456d6f11df2c"}], "stats": {"total": 88, "additions": 87, "deletions": 1}, "files": [{"sha": "cde95dea14575fb7ac63b575aaa4a92b304809a5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/587953f0931d6af870c8f8fdba64985a27836914/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/587953f0931d6af870c8f8fdba64985a27836914/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=587953f0931d6af870c8f8fdba64985a27836914", "patch": "@@ -1,3 +1,8 @@\n+2022-04-15  Hongyu Wang  <hongyu.wang@intel.com>\n+\n+\t* config/i386/smmintrin.h: Correct target pragma from sse4.1\n+\tand sse4.2 to crc32 for crc32 intrinsics.\n+\n 2022-04-14  Indu Bhagat  <indu.bhagat@oracle.com>\n \n \tPR debug/105089"}, {"sha": "dc99b90f9c619c9ae82563841525453620594ab2", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/587953f0931d6af870c8f8fdba64985a27836914/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/587953f0931d6af870c8f8fdba64985a27836914/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=587953f0931d6af870c8f8fdba64985a27836914", "patch": "@@ -1 +1 @@\n-20220415\n+20220416"}, {"sha": "a0ae4ebc3f86144179f1308a5586c6747f95f108", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/587953f0931d6af870c8f8fdba64985a27836914/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/587953f0931d6af870c8f8fdba64985a27836914/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=587953f0931d6af870c8f8fdba64985a27836914", "patch": "@@ -1,3 +1,21 @@\n+2022-04-15  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/105268\n+\t* parser.cc (cp_parser_placeholder_type_specifier): Return\n+\terror_mark_node when trying to build up a constrained parameter in\n+\ta default argument.\n+\n+2022-04-15  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/102804\n+\t* decl.cc (grokdeclarator): Drop typedef used with 'unsigned'.\n+\n+2022-04-15  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/102987\n+\t* error.cc (dump_expr): Handle USING_DECL.\n+\t[VIEW_CONVERT_EXPR]: Just look through location wrapper.\n+\n 2022-04-14  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/104646"}, {"sha": "e147f69c8ebb8d67050a0f443e491bf64ea07966", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/587953f0931d6af870c8f8fdba64985a27836914/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/587953f0931d6af870c8f8fdba64985a27836914/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=587953f0931d6af870c8f8fdba64985a27836914", "patch": "@@ -1,3 +1,40 @@\n+2022-04-15  Paul A. Clarke  <pc@us.ibm.com>\n+\n+\t* g++.dg/debug/dwarf2/const2.C: Move to g++.target/powerpc.\n+\t* g++.dg/other/darwin-minversion-1.C: Likewise.\n+\t* g++.dg/eh/ppc64-sighandle-cr.C: Likewise.\n+\t* g++.dg/eh/simd-5.C: Likewise.\n+\t* g++.dg/eh/simd-4.C: Move to g++.target/powerpc, adjust dg directives.\n+\t* g++.dg/eh/uncaught3.C: Likewise.\n+\t* g++.dg/other/spu2vmx-1.C: Likewise.\n+\t* g++.target/powerpc/const2.C: New file.\n+\t* g++.target/powerpc/darwin-minversion-1.C: New file.\n+\t* g++.target/powerpc/ppc64-sighandle-cr.C: New file.\n+\t* g++.target/powerpc/simd-4.C: New file.\n+\t* g++.target/powerpc/simd-5.C: New file.\n+\t* g++.target/powerpc/spu2vmx-1.C: New file.\n+\t* g++.target/powerpc/uncaught3.C: New file.\n+\n+2022-04-15  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/105268\n+\t* g++.dg/concepts/variadic6.C: New test.\n+\n+2022-04-15  Hongyu Wang  <hongyu.wang@intel.com>\n+\n+\t* gcc.target/i386/crc32-6.c: Adjust dg-error message.\n+\t* gcc.target/i386/crc32-7.c: New test.\n+\n+2022-04-15  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/102804\n+\t* g++.dg/ext/unsigned-typedef1.C: New test.\n+\n+2022-04-15  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/102987\n+\t* g++.dg/diagnostic/using1.C: New test.\n+\n 2022-04-14  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/105264"}, {"sha": "ac3d02adf1545f80afec3f3763c7ed2f23890e86", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/587953f0931d6af870c8f8fdba64985a27836914/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/587953f0931d6af870c8f8fdba64985a27836914/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=587953f0931d6af870c8f8fdba64985a27836914", "patch": "@@ -1,3 +1,29 @@\n+2022-04-15  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR libstdc++/104858\n+\t* include/bits/ranges_algo.h (__minmax_fn): Avoid dereferencing\n+\t__first twice at the start.\n+\t* testsuite/25_algorithms/minmax/constrained.cc (test06): New test.\n+\n+2022-04-15  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* include/std/charconv (__from_chars_alnum_to_val_table): Define.\n+\t(__from_chars_alnum_to_val): Define.\n+\t(__from_chars_binary): Rename to ...\n+\t(__from_chars_pow2_base): ... this.  Generalize to handle any\n+\tpower-of-two base using __from_chars_alnum_to_val.\n+\t(__from_chars_digit): Optimize digit recognition to a single\n+\ttest instead of two tests.  Use [[__unlikely___]] attribute.\n+\t(__from_chars_alpha_to_num): Remove.\n+\t(__from_chars_alnum): Use __from_chars_alnum_to_val.  Use a\n+\tnested loop for the overflow case.  Maintain a lower bound\n+\ton the number of available bits in the result and use it to\n+\tomit the overflow check.\n+\t(from_chars): Adjust appropriately.\n+\t* src/c++17/floating_from_chars.cc (ascii_to_hexit): Remove.\n+\t(__floating_from_chars_hex): Use __from_chars_alnum_to_val\n+\tto recognize a hex digit instead.\n+\n 2022-04-14  Palmer Dabbelt  <palmer@rivosinc.com>\n \n \t* acinclude.m4 (GLIBCXX_ENABLE_LOCK_POLICY): Force auto to mutex"}]}