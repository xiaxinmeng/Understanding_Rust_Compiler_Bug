{"sha": "124bed29851cb5ece3d1218c6113a0774ffc26a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI0YmVkMjk4NTFjYjVlY2UzZDEyMThjNjExM2EwNzc0ZmZjMjZhNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-06-14T12:41:03Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-06-14T12:41:03Z"}, "message": "[multiple changes]\n\n2016-06-14  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb (Set_Actual_Subtypes): Do not generate actual\n\tsubtypes for unconstrained formals when analyzing the generated\n\tbody of an expression function, because it may lead to premature\n\tand misplaced freezing of the types of formals.\n\n2016-06-14  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_elab.adb, sem_ch4.adb: Minor reformatting and typo fix.\n\n2016-06-14  Tristan Gingold  <gingold@adacore.com>\n\n\t* einfo.adb (Set_Has_Timing_Event): Add assertion.\n\t* sem_util.ads, sem_util.adb (Propagate_Concurrent_Flags): New\n\tname for Propagate_Type_Has_Flags.\n\t* exp_ch3.adb, sem_ch3.adb, sem_ch7.adb, sem_ch9.adb: Adjust after\n\trenaming.\n\nFrom-SVN: r237439", "tree": {"sha": "efa2aa73489b5c83e1999ebdb5e8e7f60da26d4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efa2aa73489b5c83e1999ebdb5e8e7f60da26d4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/124bed29851cb5ece3d1218c6113a0774ffc26a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/124bed29851cb5ece3d1218c6113a0774ffc26a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/124bed29851cb5ece3d1218c6113a0774ffc26a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/124bed29851cb5ece3d1218c6113a0774ffc26a7/comments", "author": null, "committer": null, "parents": [{"sha": "519e9fdfbac069a01dc359975b50028acc7b0c65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/519e9fdfbac069a01dc359975b50028acc7b0c65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/519e9fdfbac069a01dc359975b50028acc7b0c65"}], "stats": {"total": 82, "additions": 56, "deletions": 26}, "files": [{"sha": "ebdf963de00d6a9fd3709ec5a0d461b161297ca8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124bed29851cb5ece3d1218c6113a0774ffc26a7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124bed29851cb5ece3d1218c6113a0774ffc26a7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=124bed29851cb5ece3d1218c6113a0774ffc26a7", "patch": "@@ -1,3 +1,22 @@\n+2016-06-14  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Set_Actual_Subtypes): Do not generate actual\n+\tsubtypes for unconstrained formals when analyzing the generated\n+\tbody of an expression function, because it may lead to premature\n+\tand misplaced freezing of the types of formals.\n+\n+2016-06-14  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_elab.adb, sem_ch4.adb: Minor reformatting and typo fix.\n+\n+2016-06-14  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* einfo.adb (Set_Has_Timing_Event): Add assertion.\n+\t* sem_util.ads, sem_util.adb (Propagate_Concurrent_Flags): New\n+\tname for Propagate_Type_Has_Flags.\n+\t* exp_ch3.adb, sem_ch3.adb, sem_ch7.adb, sem_ch9.adb: Adjust after\n+\trenaming.\n+\n 2016-06-14  Bob Duff  <duff@adacore.com>\n \n \t* sem_elab.adb (Check_A_Call): Do nothing if the callee is"}, {"sha": "f812026ce7544e15eef20eb1db2449c48af73d33", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124bed29851cb5ece3d1218c6113a0774ffc26a7/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124bed29851cb5ece3d1218c6113a0774ffc26a7/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=124bed29851cb5ece3d1218c6113a0774ffc26a7", "patch": "@@ -4885,6 +4885,7 @@ package body Einfo is\n \n    procedure Set_Has_Timing_Event (Id : E; V : B := True) is\n    begin\n+      pragma Assert (Id = Base_Type (Id));\n       Set_Flag289 (Id, V);\n    end Set_Has_Timing_Event;\n "}, {"sha": "06252736c7e57b3f33aa64c02b960356bd588e4c", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124bed29851cb5ece3d1218c6113a0774ffc26a7/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124bed29851cb5ece3d1218c6113a0774ffc26a7/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=124bed29851cb5ece3d1218c6113a0774ffc26a7", "patch": "@@ -4619,7 +4619,7 @@ package body Exp_Ch3 is\n          --  been a private type at the point of definition. Same if component\n          --  type is controlled or contains protected objects.\n \n-         Propagate_Type_Has_Flags (Base, Comp_Typ);\n+         Propagate_Concurrent_Flags (Base, Comp_Typ);\n          Set_Has_Controlled_Component\n            (Base, Has_Controlled_Component (Comp_Typ)\n                     or else Is_Controlled (Comp_Typ));\n@@ -5189,7 +5189,7 @@ package body Exp_Ch3 is\n       while Present (Comp) loop\n          Comp_Typ := Etype (Comp);\n \n-         Propagate_Type_Has_Flags (Typ, Comp_Typ);\n+         Propagate_Concurrent_Flags (Typ, Comp_Typ);\n \n          --  Do not set Has_Controlled_Component on a class-wide equivalent\n          --  type. See Make_CW_Equivalent_Type."}, {"sha": "4e5b8f7f9ae7db13a091f99092d64ceb28257504", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124bed29851cb5ece3d1218c6113a0774ffc26a7/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124bed29851cb5ece3d1218c6113a0774ffc26a7/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=124bed29851cb5ece3d1218c6113a0774ffc26a7", "patch": "@@ -4514,7 +4514,7 @@ package body Sem_Ch3 is\n       Set_Default_SSO      (T);\n \n       Set_Etype            (T,                Parent_Base);\n-      Propagate_Type_Has_Flags (T, Parent_Base);\n+      Propagate_Concurrent_Flags (T, Parent_Base);\n \n       Set_Convention       (T, Convention     (Parent_Type));\n       Set_First_Rep_Item   (T, First_Rep_Item (Parent_Type));\n@@ -5573,7 +5573,7 @@ package body Sem_Ch3 is\n \n          Set_First_Index       (Implicit_Base, First_Index (T));\n          Set_Component_Type    (Implicit_Base, Element_Type);\n-         Propagate_Type_Has_Flags (Implicit_Base, Element_Type);\n+         Propagate_Concurrent_Flags (Implicit_Base, Element_Type);\n          Set_Component_Size    (Implicit_Base, Uint_0);\n          Set_Packed_Array_Impl_Type (Implicit_Base, Empty);\n          Set_Has_Controlled_Component (Implicit_Base,\n@@ -5599,7 +5599,7 @@ package body Sem_Ch3 is\n          Set_Is_Constrained           (T, False);\n          Set_First_Index              (T, First (Subtype_Marks (Def)));\n          Set_Has_Delayed_Freeze       (T, True);\n-         Propagate_Type_Has_Flags     (T, Element_Type);\n+         Propagate_Concurrent_Flags   (T, Element_Type);\n          Set_Has_Controlled_Component (T, Has_Controlled_Component\n                                                         (Element_Type)\n                                             or else\n@@ -8948,9 +8948,9 @@ package body Sem_Ch3 is\n \n       Set_Scope                (Derived_Type, Current_Scope);\n \n-      Set_Etype                (Derived_Type,                Parent_Base);\n-      Set_Ekind                (Derived_Type, Ekind         (Parent_Base));\n-      Propagate_Type_Has_Flags (Derived_Type, Parent_Base);\n+      Set_Etype                  (Derived_Type,        Parent_Base);\n+      Set_Ekind                  (Derived_Type, Ekind (Parent_Base));\n+      Propagate_Concurrent_Flags (Derived_Type,        Parent_Base);\n \n       Set_Size_Info          (Derived_Type,                     Parent_Type);\n       Set_RM_Size            (Derived_Type, RM_Size            (Parent_Type));\n@@ -13707,7 +13707,7 @@ package body Sem_Ch3 is\n       Set_Component_Size           (T1, Component_Size           (T2));\n       Set_Has_Controlled_Component (T1, Has_Controlled_Component (T2));\n       Set_Has_Non_Standard_Rep     (T1, Has_Non_Standard_Rep     (T2));\n-      Propagate_Type_Has_Flags     (T1, T2);\n+      Propagate_Concurrent_Flags   (T1, T2);\n       Set_Is_Packed                (T1, Is_Packed                (T2));\n       Set_Has_Aliased_Components   (T1, Has_Aliased_Components   (T2));\n       Set_Has_Atomic_Components    (T1, Has_Atomic_Components    (T2));\n@@ -19924,7 +19924,7 @@ package body Sem_Ch3 is\n                Set_Class_Wide_Type\n                  (Base_Type (Full_T), Class_Wide_Type (Priv_T));\n \n-               Propagate_Type_Has_Flags (Class_Wide_Type (Priv_T), Full_T);\n+               Propagate_Concurrent_Flags (Class_Wide_Type (Priv_T), Full_T);\n             end if;\n          end;\n       end if;\n@@ -21280,7 +21280,7 @@ package body Sem_Ch3 is\n             Init_Component_Location (Component);\n          end if;\n \n-         Propagate_Type_Has_Flags (T, Etype (Component));\n+         Propagate_Concurrent_Flags (T, Etype (Component));\n \n          if Ekind (Component) /= E_Component then\n             null;"}, {"sha": "a109cd0c50c3e4f7d20782f2012c4c20d72ddca5", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124bed29851cb5ece3d1218c6113a0774ffc26a7/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124bed29851cb5ece3d1218c6113a0774ffc26a7/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=124bed29851cb5ece3d1218c6113a0774ffc26a7", "patch": "@@ -3917,9 +3917,9 @@ package body Sem_Ch4 is\n       if Warn_On_Suspicious_Contract\n         and then not Referenced (Loop_Id, Cond)\n       then\n-         --  Generating C this check causes spurious warnings on inlined\n+         --  Generating C, this check causes spurious warnings on inlined\n          --  postconditions; we can safely disable it because this check\n-         --  was previously performed when analying the internally built\n+         --  was previously performed when analyzing the internally built\n          --  postconditions procedure.\n \n          if Modify_Tree_For_C and then In_Inlined_Body then"}, {"sha": "4f7efc30ff1d46714700871b1f6f48dd48a07bd3", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124bed29851cb5ece3d1218c6113a0774ffc26a7/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124bed29851cb5ece3d1218c6113a0774ffc26a7/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=124bed29851cb5ece3d1218c6113a0774ffc26a7", "patch": "@@ -11150,6 +11150,16 @@ package body Sem_Ch6 is\n          return;\n       end if;\n \n+      --  The subtype declarations may freeze the formals. The body generated\n+      --  for an expression function is not a freeze point, so do not emit\n+      --  these declarations (small loss of efficiency in rare cases).\n+\n+      if Nkind (N) = N_Subprogram_Body\n+        and then Was_Expression_Function (N)\n+      then\n+         return;\n+      end if;\n+\n       Formal := First_Formal (Subp);\n       while Present (Formal) loop\n          T := Etype (Formal);"}, {"sha": "0c235f624dbcd34a15407c104ea479d71fc46ff3", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124bed29851cb5ece3d1218c6113a0774ffc26a7/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124bed29851cb5ece3d1218c6113a0774ffc26a7/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=124bed29851cb5ece3d1218c6113a0774ffc26a7", "patch": "@@ -2585,7 +2585,7 @@ package body Sem_Ch7 is\n             Set_Finalize_Storage_Only\n                               (Priv, Finalize_Storage_Only\n                                                    (Base_Type (Full)));\n-            Propagate_Type_Has_Flags\n+            Propagate_Concurrent_Flags\n                               (Priv,                Base_Type (Full));\n             Set_Has_Controlled_Component\n                               (Priv, Has_Controlled_Component"}, {"sha": "aa2a18de79266b633e39fd60f118e54d8c0cbda5", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124bed29851cb5ece3d1218c6113a0774ffc26a7/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124bed29851cb5ece3d1218c6113a0774ffc26a7/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=124bed29851cb5ece3d1218c6113a0774ffc26a7", "patch": "@@ -1938,7 +1938,7 @@ package body Sem_Ch9 is\n          if Ekind_In (E, E_Function, E_Procedure) then\n             Set_Convention (E, Convention_Protected);\n          else\n-            Propagate_Type_Has_Flags (Current_Scope, Etype (E));\n+            Propagate_Concurrent_Flags (Current_Scope, Etype (E));\n          end if;\n \n          Next_Entity (E);"}, {"sha": "480544004645713f05aad0ac1a28fbede73c4663", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124bed29851cb5ece3d1218c6113a0774ffc26a7/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124bed29851cb5ece3d1218c6113a0774ffc26a7/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=124bed29851cb5ece3d1218c6113a0774ffc26a7", "patch": "@@ -128,7 +128,7 @@ package body Sem_Elab is\n      Table_Name           => \"Delay_Check\");\n \n    C_Scope : Entity_Id;\n-   --  Top level scope of current scope. Compute this only once at the outer\n+   --  Top-level scope of current scope. Compute this only once at the outer\n    --  level, i.e. for a call to Check_Elab_Call from outside this unit.\n \n    Outer_Level_Sloc : Source_Ptr;\n@@ -532,7 +532,7 @@ package body Sem_Elab is\n        --  Msg_S is an info message (output if Elab_Info_Messages is set.\n \n       function Find_W_Scope return Entity_Id;\n-      --  Find top level scope for called entity (not following renamings\n+      --  Find top-level scope for called entity (not following renamings\n       --  or derivations). This is where the Elaborate_All will go if it is\n       --  needed. We start with the called entity, except in the case of an\n       --  initialization procedure outside the current package, where the init\n@@ -653,7 +653,7 @@ package body Sem_Elab is\n       --  we ignore this flag.\n \n       E_Scope : Entity_Id;\n-      --  Top level scope of entity for called subprogram. This value includes\n+      --  Top-level scope of entity for called subprogram. This value includes\n       --  following renamings and derivations, so this scope can be in a\n       --  non-visible unit. This is the scope that is to be investigated to\n       --  see whether an elaboration check is required.\n@@ -667,7 +667,7 @@ package body Sem_Elab is\n       --  Flag set when a source entity is called during elaboration in SPARK\n \n       W_Scope : constant Entity_Id := Find_W_Scope;\n-      --  Top level scope of directly called entity for subprogram. This\n+      --  Top-level scope of directly called entity for subprogram. This\n       --  differs from E_Scope in the case where renamings or derivations\n       --  are involved, since it does not follow these links. W_Scope is\n       --  generally in a visible unit, and it is this scope that may require\n@@ -1587,7 +1587,7 @@ package body Sem_Elab is\n \n                      --  Static model, call is not in elaboration code, we\n                      --  never need to worry, because in the static model the\n-                     --  top level caller always takes care of things.\n+                     --  top-level caller always takes care of things.\n \n                      else\n                         return;"}, {"sha": "c39e3a665459db8927f98eeece0a3a94804e66ef", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124bed29851cb5ece3d1218c6113a0774ffc26a7/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124bed29851cb5ece3d1218c6113a0774ffc26a7/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=124bed29851cb5ece3d1218c6113a0774ffc26a7", "patch": "@@ -18359,11 +18359,11 @@ package body Sem_Util is\n       Set_Sloc (Endl, Loc);\n    end Process_End_Label;\n \n-   ------------------------------\n-   -- Propagate_Type_Has_Flags --\n-   ------------------------------\n+   --------------------------------\n+   -- Propagate_Concurrent_Flags --\n+   --------------------------------\n \n-   procedure Propagate_Type_Has_Flags\n+   procedure Propagate_Concurrent_Flags\n      (Typ      : Entity_Id;\n       Comp_Typ : Entity_Id) is\n    begin\n@@ -18378,7 +18378,7 @@ package body Sem_Util is\n       if Has_Timing_Event (Comp_Typ) then\n          Set_Has_Timing_Event (Typ);\n       end if;\n-   end Propagate_Type_Has_Flags;\n+   end Propagate_Concurrent_Flags;\n \n    ---------------------------------------\n    -- Record_Possible_Part_Of_Reference --"}, {"sha": "b95366962e3b94c54177af97e53dc9ba31c7a3f7", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124bed29851cb5ece3d1218c6113a0774ffc26a7/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124bed29851cb5ece3d1218c6113a0774ffc26a7/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=124bed29851cb5ece3d1218c6113a0774ffc26a7", "patch": "@@ -2008,7 +2008,7 @@ package Sem_Util is\n    --  parameter Ent gives the entity to which the End_Label refers,\n    --  and to which cross-references are to be generated.\n \n-   procedure Propagate_Type_Has_Flags\n+   procedure Propagate_Concurrent_Flags\n      (Typ      : Entity_Id;\n       Comp_Typ : Entity_Id);\n    --  Set Has_Task, Has_Protected and Has_Timing_Event on Typ when the flags"}]}