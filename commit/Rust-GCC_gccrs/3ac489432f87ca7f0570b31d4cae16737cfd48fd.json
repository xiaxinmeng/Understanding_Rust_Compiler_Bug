{"sha": "3ac489432f87ca7f0570b31d4cae16737cfd48fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FjNDg5NDMyZjg3Y2E3ZjA1NzBiMzFkNGNhZTE2NzM3Y2ZkNDhmZA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2009-07-23T12:41:04Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-23T12:41:04Z"}, "message": "sem_util.adb (Wrong_Type): Special message for cases like A and B = 0\n\n2009-07-23  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_util.adb (Wrong_Type): Special message for cases like A and B = 0\n\nFrom-SVN: r150004", "tree": {"sha": "e4abe208b98d80262410e962ea433c666904acaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4abe208b98d80262410e962ea433c666904acaf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ac489432f87ca7f0570b31d4cae16737cfd48fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ac489432f87ca7f0570b31d4cae16737cfd48fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ac489432f87ca7f0570b31d4cae16737cfd48fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ac489432f87ca7f0570b31d4cae16737cfd48fd/comments", "author": null, "committer": null, "parents": [{"sha": "e0dc6003fc81c6f839159f8f32944de2cd771afa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0dc6003fc81c6f839159f8f32944de2cd771afa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0dc6003fc81c6f839159f8f32944de2cd771afa"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "8cd32783e1a28a68f219a20821739eae67ae81cf", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ac489432f87ca7f0570b31d4cae16737cfd48fd/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ac489432f87ca7f0570b31d4cae16737cfd48fd/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=3ac489432f87ca7f0570b31d4cae16737cfd48fd", "patch": "@@ -11077,6 +11077,30 @@ package body Sem_Util is\n             Error_Msg_NE (\"\\\\found}!\", Expr, Found_Type);\n          end if;\n \n+         --  A special check for cases like M1 and M2 = 0 where M1 and M2 are\n+         --  of the same modular type, and (M1 and M2) = 0 was intended.\n+\n+         if Expec_Type = Standard_Boolean\n+           and then Is_Modular_Integer_Type (Found_Type)\n+           and then Nkind_In (Parent (Expr), N_Op_And, N_Op_Or, N_Op_Xor)\n+           and then Nkind (Right_Opnd (Parent (Expr))) in N_Op_Compare\n+         then\n+            declare\n+               Op : constant Node_Id := Right_Opnd (Parent (Expr));\n+               L  : constant Node_Id := Left_Opnd (Op);\n+               R  : constant Node_Id := Right_Opnd (Op);\n+            begin\n+               if Etype (L) = Found_Type\n+                 and then Is_Integer_Type (Etype (R))\n+               then\n+                  Error_Msg_N\n+                    (\"\\\\possible missing parens for modular operation\", Expr);\n+               end if;\n+            end;\n+         end if;\n+\n+         --  Reset error message qualification indication\n+\n          Error_Msg_Qual_Level := 0;\n       end if;\n    end Wrong_Type;"}]}