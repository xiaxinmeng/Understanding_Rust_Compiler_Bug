{"sha": "37c5f877a4528d28fd4624373af09bf19df42c13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdjNWY4NzdhNDUyOGQyOGZkNDYyNDM3M2FmMDliZjE5ZGY0MmMxMw==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2014-08-24T10:46:25Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2014-08-24T10:46:25Z"}, "message": "re PR target/61996 ([SH] -musermode conflicts with -matomic-model=soft-imask)\n\ngcc/\n\tPR target/61996\n\t* config/sh/sh.opt (musermode): Allow negative form.\n\t* config/sh/sh.c (sh_option_override): Disable TARGET_USERMODE for\n\ttargets that don't support it.\n\t* doc/invoke.texi (SH Options): Rename sh-*-linux* to sh*-*-linux*.\n\tDocument -mno-usermode option.\n\ngcc/testsuite\n\n\tPR target/61996\n\t* gcc.target/sh/pr61996.c: New.\n\nFrom-SVN: r214406", "tree": {"sha": "b0edc96ef3219c24125d43e62eb4b7f4f93b68b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0edc96ef3219c24125d43e62eb4b7f4f93b68b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37c5f877a4528d28fd4624373af09bf19df42c13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37c5f877a4528d28fd4624373af09bf19df42c13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37c5f877a4528d28fd4624373af09bf19df42c13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37c5f877a4528d28fd4624373af09bf19df42c13/comments", "author": null, "committer": null, "parents": [{"sha": "ef24330ddfb1206a90cf44bdda2d941abc05d5d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef24330ddfb1206a90cf44bdda2d941abc05d5d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef24330ddfb1206a90cf44bdda2d941abc05d5d3"}], "stats": {"total": 53, "additions": 44, "deletions": 9}, "files": [{"sha": "703a48970f62b4c43df1dedc7d939363874e4bbd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37c5f877a4528d28fd4624373af09bf19df42c13/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37c5f877a4528d28fd4624373af09bf19df42c13/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=37c5f877a4528d28fd4624373af09bf19df42c13", "patch": "@@ -1,3 +1,12 @@\n+2014-08-24  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/61996\n+\t* config/sh/sh.opt (musermode): Allow negative form.\n+\t* config/sh/sh.c (sh_option_override): Disable TARGET_USERMODE for\n+\ttargets that don't support it.\n+\t* doc/invoke.texi (SH Options): Rename sh-*-linux* to sh*-*-linux*.\n+\tDocument -mno-usermode option.\n+\n 2014-08-24  Kito Cheng  <kito@0xlab.org>\n \n \t* system.h (CALLER_SAVE_PROFITABLE): Poison."}, {"sha": "0f286bce20b79ef065e7efede06ab116f5aed50a", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37c5f877a4528d28fd4624373af09bf19df42c13/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37c5f877a4528d28fd4624373af09bf19df42c13/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=37c5f877a4528d28fd4624373af09bf19df42c13", "patch": "@@ -886,6 +886,12 @@ sh_option_override (void)\n        targetm.asm_out.aligned_op.di = NULL;\n        targetm.asm_out.unaligned_op.di = NULL;\n     }\n+\n+  /* User/priviledged mode is supported only on SH3*, SH4* and SH5*.\n+     Disable it for everything else.  */\n+  if (! (TARGET_SH3 || TARGET_SH5) && TARGET_USERMODE)\n+    TARGET_USERMODE = false;\n+\n   if (TARGET_SH1)\n     {\n       if (! strcmp (sh_div_str, \"call-div1\"))"}, {"sha": "bb6d39581355ef553b577a19c47a85853109003f", "filename": "gcc/config/sh/sh.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37c5f877a4528d28fd4624373af09bf19df42c13/gcc%2Fconfig%2Fsh%2Fsh.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37c5f877a4528d28fd4624373af09bf19df42c13/gcc%2Fconfig%2Fsh%2Fsh.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.opt?ref=37c5f877a4528d28fd4624373af09bf19df42c13", "patch": "@@ -343,7 +343,7 @@ Target RejectNegative Joined UInteger Var(sh_multcost) Init(-1)\n Cost to assume for a multiply insn\n \n musermode\n-Target Report RejectNegative Var(TARGET_USERMODE)\n+Target Var(TARGET_USERMODE)\n Don't generate privileged-mode only code; implies -mno-inline-ic_invalidate if the inline code would not work in user mode.\n \n ;; We might want to enable this by default for TARGET_HARD_SH4, because"}, {"sha": "7debd6bdbe4448927c4d8ae459e15505e4d1447d", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37c5f877a4528d28fd4624373af09bf19df42c13/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37c5f877a4528d28fd4624373af09bf19df42c13/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=37c5f877a4528d28fd4624373af09bf19df42c13", "patch": "@@ -20908,7 +20908,7 @@ Mark the @code{MAC} register as call-clobbered, even if\n @item -mieee\n @itemx -mno-ieee\n @opindex mieee\n-@opindex mnoieee\n+@opindex mno-ieee\n Control the IEEE compliance of floating-point comparisons, which affects the\n handling of cases where the result of a comparison is unordered.  By default\n @option{-mieee} is implicitly enabled.  If @option{-ffinite-math-only} is\n@@ -20948,14 +20948,14 @@ separated list.  For details on the atomic built-in functions see\n \n @item none\n Disable compiler generated atomic sequences and emit library calls for atomic\n-operations.  This is the default if the target is not @code{sh-*-linux*}.\n+operations.  This is the default if the target is not @code{sh*-*-linux*}.\n \n @item soft-gusa\n Generate GNU/Linux compatible gUSA software atomic sequences for the atomic\n built-in functions.  The generated atomic sequences require additional support\n from the interrupt/exception handling code of the system and are only suitable\n for SH3* and SH4* single-core systems.  This option is enabled by default when\n-the target is @code{sh-*-linux*} and SH3* or SH4*.  When the target is SH4A,\n+the target is @code{sh*-*-linux*} and SH3* or SH4*.  When the target is SH4A,\n this option will also partially utilize the hardware atomic instructions\n @code{movli.l} and @code{movco.l} to create more efficient code, unless\n @samp{strict} is specified.  \n@@ -20974,7 +20974,7 @@ setting @code{SR.IMASK = 1111}.  This model works only when the program runs\n in privileged mode and is only suitable for single-core systems.  Additional\n support from the interrupt/exception handling code of the system is not\n required.  This model is enabled by default when the target is\n-@code{sh-*-linux*} and SH1* or SH2*.\n+@code{sh*-*-linux*} and SH1* or SH2*.\n \n @item hard-llcs\n Generate hardware atomic sequences using the @code{movli.l} and @code{movco.l}\n@@ -21015,11 +21015,14 @@ When generating position-independent code, emit function calls using\n the Global Offset Table instead of the Procedure Linkage Table.\n \n @item -musermode\n+@itemx -mno-usermode\n @opindex musermode\n-Don't generate privileged mode only code.  This option\n-implies @option{-mno-inline-ic_invalidate}\n-if the inlined code would not work in user mode.\n-This is the default when the target is @code{sh-*-linux*}.\n+@opindex mno-usermode\n+Don't allow (allow) the compiler generating privileged mode code.  Specifying\n+@option{-musermode} also implies @option{-mno-inline-ic_invalidate} if the\n+inlined code would not work in user mode.  @option{-musermode} is the default\n+when the target is @code{sh*-*-linux*}.  If the target is SH1* or SH2*\n+@option{-musermode} has no effect, since there is no user mode.\n \n @item -multcost=@var{number}\n @opindex multcost=@var{number}"}, {"sha": "82e10478dd3ddf56c2b4a028c395c432926fbc66", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37c5f877a4528d28fd4624373af09bf19df42c13/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37c5f877a4528d28fd4624373af09bf19df42c13/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=37c5f877a4528d28fd4624373af09bf19df42c13", "patch": "@@ -1,3 +1,8 @@\n+2014-08-24  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/61996\n+\t* gcc.target/sh/pr61996.c: New.\n+\n 2014-08-23  Edward Smith-Rowland  <3dw4rd@verizon.net>\n \n \t* g++.dg/cpp0x/cplusplus.C: New."}, {"sha": "51a5f929d5501291a84aaa9eeef4e0845efe0a1a", "filename": "gcc/testsuite/gcc.target/sh/pr61996.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37c5f877a4528d28fd4624373af09bf19df42c13/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr61996.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37c5f877a4528d28fd4624373af09bf19df42c13/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr61996.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr61996.c?ref=37c5f877a4528d28fd4624373af09bf19df42c13", "patch": "@@ -0,0 +1,12 @@\n+/* Check that the option -musermode has no effect on targets that do not\n+   support user/privileged mode and that it does not interfere with option\n+   -matomic-model=soft-imask.  */\n+/* { dg-do compile }  */\n+/* { dg-options \"-matomic-model=soft-imask\" }  */\n+/* { dg-skip-if \"\" { \"sh*-*-*\" } { \"*\"} { \"-m1*\" \"-m2*\" } }  */\n+\n+int\n+test (void)\n+{\n+  return 0;\n+}"}]}