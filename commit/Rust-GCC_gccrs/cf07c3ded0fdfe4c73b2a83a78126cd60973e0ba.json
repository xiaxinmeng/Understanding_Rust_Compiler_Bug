{"sha": "cf07c3ded0fdfe4c73b2a83a78126cd60973e0ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2YwN2MzZGVkMGZkZmU0YzczYjJhODNhNzgxMjZjZDYwOTczZTBiYQ==", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2016-09-28T14:25:21Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@gcc.gnu.org", "date": "2016-09-28T14:25:21Z"}, "message": "[ARC] New CPU C-define handler.\n\ngcc/\n2016-09-29  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* config/arc/arc-c.c: New file.\n\t* config/arc/arc-c.def: Likewise.\n\t* config/arc/t-arc: Likewise.\n\t* config.gcc: Include arc-c.o as c and cpp object.\n\t* config/arc/arc-protos.h (arc_cpu_cpp_builtins): Add prototype.\n\t* config/arc/arc.h (TARGET_CPU_CPP_BUILTINS): Use\n\tarc_cpu_cpp_builtins.\n\nFrom-SVN: r240577", "tree": {"sha": "6d527035923803fbeb27167c72b4849a2d77152f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d527035923803fbeb27167c72b4849a2d77152f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf07c3ded0fdfe4c73b2a83a78126cd60973e0ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf07c3ded0fdfe4c73b2a83a78126cd60973e0ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf07c3ded0fdfe4c73b2a83a78126cd60973e0ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf07c3ded0fdfe4c73b2a83a78126cd60973e0ba/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c6d66e907784830a1039d130ad35d500ea6dc005", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6d66e907784830a1039d130ad35d500ea6dc005", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6d66e907784830a1039d130ad35d500ea6dc005"}], "stats": {"total": 235, "additions": 180, "deletions": 55}, "files": [{"sha": "f69a301d049bdc485461f1b7aff012d07057b5b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf07c3ded0fdfe4c73b2a83a78126cd60973e0ba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf07c3ded0fdfe4c73b2a83a78126cd60973e0ba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cf07c3ded0fdfe4c73b2a83a78126cd60973e0ba", "patch": "@@ -1,3 +1,13 @@\n+2016-09-29  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* config/arc/arc-c.c: New file.\n+\t* config/arc/arc-c.def: Likewise.\n+\t* config/arc/t-arc: Likewise.\n+\t* config.gcc: Include arc-c.o as c and cpp object.\n+\t* config/arc/arc-protos.h (arc_cpu_cpp_builtins): Add prototype.\n+\t* config/arc/arc.h (TARGET_CPU_CPP_BUILTINS): Use\n+\tarc_cpu_cpp_builtins.\n+\n 2016-09-29  Claudiu Zissulescu  <claziss@synopsys.com>\n \n \t* config/arc/arc.md (*rotrsi3_cnt1): New pattern."}, {"sha": "7d24561ce4f67e13284ae00684e002ccd0b03167", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf07c3ded0fdfe4c73b2a83a78126cd60973e0ba/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf07c3ded0fdfe4c73b2a83a78126cd60973e0ba/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=cf07c3ded0fdfe4c73b2a83a78126cd60973e0ba", "patch": "@@ -316,6 +316,8 @@ am33_2.0-*-linux*)\n \t;;\n arc*-*-*)\n \tcpu_type=arc\n+\tc_target_objs=\"arc-c.o\"\n+\tcxx_target_objs=\"arc-c.o\"\n \t;;\n arm*-*-*)\n \tcpu_type=arm"}, {"sha": "3bf3fd26c2c46acd0fef6050036afda4620a6ec8", "filename": "gcc/config/arc/arc-c.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf07c3ded0fdfe4c73b2a83a78126cd60973e0ba/gcc%2Fconfig%2Farc%2Farc-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf07c3ded0fdfe4c73b2a83a78126cd60973e0ba/gcc%2Fconfig%2Farc%2Farc-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc-c.c?ref=cf07c3ded0fdfe4c73b2a83a78126cd60973e0ba", "patch": "@@ -0,0 +1,69 @@\n+/* Copyright (C) 2016 Free Software Foundation, Inc.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3, or (at your option)\n+   any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GCC; see the file COPYING3.  If not see\n+   <http://www.gnu.org/licenses/>.\n+*/\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+#include \"tree.h\"\n+#include \"tm_p.h\"\n+#include \"cpplib.h\"\n+#include \"c-family/c-common.h\"\n+#include \"target.h\"\n+\n+#define builtin_define(TXT) cpp_define (pfile, TXT)\n+#define builtin_assert(TXT) cpp_assert (pfile, TXT)\n+\n+/* Define or undefine macros based on the current target.  */\n+\n+static void\n+def_or_undef_macro (cpp_reader* pfile, const char *name, bool def_p)\n+{\n+  if (def_p)\n+    cpp_define (pfile, name);\n+  else\n+    cpp_undef (pfile, name);\n+}\n+\n+/* Helper for TARGET_CPU_CPP_BUILTINS hook.  */\n+\n+void\n+arc_cpu_cpp_builtins (cpp_reader * pfile)\n+{\n+  builtin_assert (\"cpu=arc\");\n+  builtin_assert (\"machine=arc\");\n+\n+  builtin_define (\"__arc__\");\n+\n+#undef ARC_C_DEF\n+#define ARC_C_DEF(NAME, CONDITION)\t\t\\\n+  def_or_undef_macro (pfile, NAME, CONDITION);\n+\n+#include \"arc-c.def\"\n+#undef ARC_C_DEF\n+\n+  builtin_define_with_int_value (\"__ARC_TLS_REGNO__\",\n+\t\t\t\t arc_tp_regno);\n+\n+  builtin_define (TARGET_BIG_ENDIAN\n+\t\t  ? \"__BIG_ENDIAN__\" : \"__LITTLE_ENDIAN__\");\n+  if (TARGET_BIG_ENDIAN)\n+    builtin_define (\"__big_endian__\");\n+\n+}"}, {"sha": "065e97360dedd8760111789bf06e5b1a27da2b32", "filename": "gcc/config/arc/arc-c.def", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf07c3ded0fdfe4c73b2a83a78126cd60973e0ba/gcc%2Fconfig%2Farc%2Farc-c.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf07c3ded0fdfe4c73b2a83a78126cd60973e0ba/gcc%2Fconfig%2Farc%2Farc-c.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc-c.def?ref=cf07c3ded0fdfe4c73b2a83a78126cd60973e0ba", "patch": "@@ -0,0 +1,68 @@\n+/* Copyright (C) 2016 Free Software Foundation, Inc.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3, or (at your option)\n+   any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GCC; see the file COPYING3.  If not see\n+   <http://www.gnu.org/licenses/>.\n+*/\n+\n+ARC_C_DEF (\"__ARC600__\",\tTARGET_ARC600)\n+ARC_C_DEF (\"__ARC601__\",\tTARGET_ARC601)\n+ARC_C_DEF (\"__ARC700__\",\tTARGET_ARC700)\n+ARC_C_DEF (\"__ARCEM__\",\t\tTARGET_EM)\n+ARC_C_DEF (\"__ARCHS__\",\t\tTARGET_HS)\n+ARC_C_DEF (\"__ARC_ATOMIC__\",\tTARGET_ATOMIC)\n+ARC_C_DEF (\"__ARC_NORM__\",\tTARGET_NORM)\n+ARC_C_DEF (\"__ARC_MUL64__\",\tTARGET_MUL64_SET)\n+ARC_C_DEF (\"__ARC_MUL32BY16__\", TARGET_MULMAC_32BY16_SET)\n+ARC_C_DEF (\"__ARC_SIMD__\",\tTARGET_SIMD_SET)\n+\n+ARC_C_DEF (\"__ARC_BARREL_SHIFTER__\", TARGET_BARREL_SHIFTER)\n+\n+ARC_C_DEF (\"__ARC_LL64__\",   TARGET_LL64)\n+ARC_C_DEF (\"__ARC_MPY__\",    TARGET_MPY)\n+ARC_C_DEF (\"__ARC_SWAP__\",   TARGET_SWAP)\n+ARC_C_DEF (\"__ARC_EA__\",     TARGET_EA_SET)\n+ARC_C_DEF (\"__ARC_FPX_SP__\", (TARGET_SPFP_FAST_SET || TARGET_SPFP_COMPACT_SET))\n+ARC_C_DEF (\"__ARC_FPX_DP__\", (TARGET_DPFP_FAST_SET || TARGET_DPFP_COMPACT_SET))\n+ARC_C_DEF (\"__ARC_MULT32__\", TARGET_MUL64_SET)\n+ARC_C_DEF (\"__ARC_DIVREM__\", TARGET_DIVREM)\n+\n+ARC_C_DEF (\"__ARC_CODE_DENSITY__\", TARGET_CODE_DENSITY)\n+\n+ARC_C_DEF (\"__ARC_MPY_WLHX__\",   (arc_mpy_option >= 2))\n+ARC_C_DEF (\"__ARC_MPY_WLH1__\",   (arc_mpy_option == 2))\n+ARC_C_DEF (\"__ARC_MPY_WLH2__\",   (arc_mpy_option == 3))\n+ARC_C_DEF (\"__ARC_MPY_WLH3__\",   (arc_mpy_option == 4))\n+ARC_C_DEF (\"__ARC_MPY_WLH4__\",   (arc_mpy_option == 5))\n+ARC_C_DEF (\"__ARC_MPY_WLH5__\",   (arc_mpy_option == 6))\n+ARC_C_DEF (\"__ARC_MPY_DMPY__\",   (arc_mpy_option == 7))\n+ARC_C_DEF (\"__ARC_MPY_MACD__\",   (arc_mpy_option == 8))\n+ARC_C_DEF (\"__ARC_MPY_QMACW__\",  (arc_mpy_option == 9))\n+\n+ARC_C_DEF (\"__ARC_FPU_SP__\",     TARGET_FP_SP_BASE)\n+ARC_C_DEF (\"__ARC_FPU_DP__\",     TARGET_FP_DP_BASE)\n+ARC_C_DEF (\"__ARC_FPU_SP_DIV__\", TARGET_FP_SP_SQRT)\n+ARC_C_DEF (\"__ARC_FPU_DP_DIV__\", TARGET_FP_DP_SQRT)\n+ARC_C_DEF (\"__ARC_FPU_SP_FMA__\", TARGET_FP_SP_FUSED)\n+ARC_C_DEF (\"__ARC_FPU_DP_FMA__\", TARGET_FP_DP_FUSED)\n+ARC_C_DEF (\"__ARC_FPU_ASSIST__\", TARGET_FP_DP_AX)\n+\n+/* To be deprecated.  */\n+ARC_C_DEF (\"__A6__\",     TARGET_ARC600)\n+ARC_C_DEF (\"__A7__\",     TARGET_ARC700)\n+ARC_C_DEF (\"__EM__\",     TARGET_EM)\n+ARC_C_DEF (\"__HS__\",     TARGET_HS)\n+ARC_C_DEF (\"__Xnorm\",    TARGET_NORM)\n+ARC_C_DEF (\"__Xbarrel_shifter\", TARGET_BARREL_SHIFTER)"}, {"sha": "ad5d4d347ec5e6f8a9c5e7d6990c2746d3cc9c0e", "filename": "gcc/config/arc/arc-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf07c3ded0fdfe4c73b2a83a78126cd60973e0ba/gcc%2Fconfig%2Farc%2Farc-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf07c3ded0fdfe4c73b2a83a78126cd60973e0ba/gcc%2Fconfig%2Farc%2Farc-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc-protos.h?ref=cf07c3ded0fdfe4c73b2a83a78126cd60973e0ba", "patch": "@@ -123,3 +123,4 @@ extern int arc_return_slot_offset (void);\n extern bool arc_legitimize_reload_address (rtx *, machine_mode, int, int);\n extern void arc_secondary_reload_conv (rtx, rtx, rtx, bool);\n extern bool insn_is_tls_gd_dispatch (rtx_insn *);\n+extern void arc_cpu_cpp_builtins (cpp_reader *);"}, {"sha": "c02e1cd4c77703bcf5f81a8273c86e87885e8845", "filename": "gcc/config/arc/arc.h", "status": "modified", "additions": 1, "deletions": 55, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf07c3ded0fdfe4c73b2a83a78126cd60973e0ba/gcc%2Fconfig%2Farc%2Farc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf07c3ded0fdfe4c73b2a83a78126cd60973e0ba/gcc%2Fconfig%2Farc%2Farc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.h?ref=cf07c3ded0fdfe4c73b2a83a78126cd60973e0ba", "patch": "@@ -64,61 +64,7 @@ along with GCC; see the file COPYING3.  If not see\n #undef CC1_SPEC\n \n /* Names to predefine in the preprocessor for this target machine.  */\n-#define TARGET_CPU_CPP_BUILTINS()\t\\\n- do {\t\t\t\t\t\\\n-    builtin_define (\"__arc__\");\t\t\\\n-    if (TARGET_ARC600)\t\t\t\\\n-      {\t\t\t\t\t\\\n-\tbuiltin_define (\"__A6__\");\t\\\n-\tbuiltin_define (\"__ARC600__\");\t\\\n-      }\t\t\t\t\t\\\n-    else if (TARGET_ARC601)\t\t\t\\\n-      {\t\t\t\t\t\\\n-\tbuiltin_define (\"__ARC601__\");\t\\\n-      }\t\t\t\t\t\\\n-    else if (TARGET_ARC700)\t\t\t\\\n-      {\t\t\t\t\t\\\n-\tbuiltin_define (\"__A7__\");\t\\\n-\tbuiltin_define (\"__ARC700__\");\t\\\n-      }\t\t\t\t\t\\\n-    else if (TARGET_EM)\t\t\t\\\n-      {\t\t\t\t\t\\\n-\tbuiltin_define (\"__EM__\");\t\\\n-      }\t\t\t\t\t\\\n-    else if (TARGET_HS)\t\t\t\\\n-      {\t\t\t\t\t\\\n-\tbuiltin_define (\"__HS__\");\t\\\n-      }\t\t\t\t\t\\\n-    if (TARGET_ATOMIC)\t\t\t\\\n-      {\t\t\t\t\t\\\n-\tbuiltin_define (\"__ARC_ATOMIC__\");\t\\\n-      }\t\t\t\t\t\\\n-    if (TARGET_NORM)\t\t\t\\\n-      {\t\t\t\t\t\\\n-\tbuiltin_define (\"__ARC_NORM__\");\\\n-\tbuiltin_define (\"__Xnorm\");\t\\\n-      }\t\t\t\t\t\\\n-    if (TARGET_LL64)\t\t\t\\\n-      {\t\t\t\t\t\\\n-\tbuiltin_define (\"__ARC_LL64__\");\\\n-      }\t\t\t\t\t\\\n-    if (TARGET_MUL64_SET)\t\t\\\n-      builtin_define (\"__ARC_MUL64__\");\\\n-    if (TARGET_MULMAC_32BY16_SET)\t\\\n-      builtin_define (\"__ARC_MUL32BY16__\");\\\n-    if (TARGET_SIMD_SET)        \t\\\n-      builtin_define (\"__ARC_SIMD__\");\t\\\n-    if (TARGET_BARREL_SHIFTER)\t\t\\\n-      builtin_define (\"__Xbarrel_shifter\");\\\n-    builtin_define_with_int_value (\"__ARC_TLS_REGNO__\", \\\n-\t\t\t\t   arc_tp_regno);\t\\\n-    builtin_assert (\"cpu=arc\");\t\t\\\n-    builtin_assert (\"machine=arc\");\t\\\n-    builtin_define (TARGET_BIG_ENDIAN\t\\\n-\t\t    ? \"__BIG_ENDIAN__\" : \"__LITTLE_ENDIAN__\"); \\\n-    if (TARGET_BIG_ENDIAN)\t\t\\\n-      builtin_define (\"__big_endian__\"); \\\n-} while(0)\n+#define TARGET_CPU_CPP_BUILTINS() arc_cpu_cpp_builtins (pfile)\n \n #if DEFAULT_LIBC == LIBC_UCLIBC\n "}, {"sha": "4252e73cabb5190476c307ac5b376a3192364211", "filename": "gcc/config/arc/t-arc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf07c3ded0fdfe4c73b2a83a78126cd60973e0ba/gcc%2Fconfig%2Farc%2Ft-arc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf07c3ded0fdfe4c73b2a83a78126cd60973e0ba/gcc%2Fconfig%2Farc%2Ft-arc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Ft-arc?ref=cf07c3ded0fdfe4c73b2a83a78126cd60973e0ba", "patch": "@@ -0,0 +1,29 @@\n+# GCC Makefile fragment for Synopsys DesignWare ARC.\n+#\n+# Copyright (C) 2016 Free Software Foundation, Inc.\n+#\n+# This file is part of GCC.\n+#\n+# GCC is free software; you can redistribute it and/or modify it under the\n+# terms of the GNU General Public License as published by the Free Software\n+# Foundation; either version 3, or (at your option) any later version.\n+#\n+# GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n+# details.\n+#\n+# You should have received a copy of the GNU General Public License along\n+# with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+TM_H += $(srcdir)/config/arc/arc-c.def\n+\n+arc-c.o: $(srcdir)/config/arc/arc-c.c $(CONFIG_H) $(SYSTEM_H) \\\n+$(TREE_H) $(TM_H) $(TM_P_H) coretypes.h\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t\t$(srcdir)/config/arc/arc-c.c\n+\n+# Local Variables:\n+# mode: Makefile\n+# End:"}]}