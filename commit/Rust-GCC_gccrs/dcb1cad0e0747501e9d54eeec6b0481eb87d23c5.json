{"sha": "dcb1cad0e0747501e9d54eeec6b0481eb87d23c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGNiMWNhZDBlMDc0NzUwMWU5ZDU0ZWVlYzZiMDQ4MWViODdkMjNjNQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-10-02T17:15:05Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-11-24T10:16:02Z"}, "message": "[Ada] Fix internal error on multiple nested instantiations\n\ngcc/ada/\n\n\t* sem_ch12.adb (Analyze_Associations) <Explicit_Freeze_Check>: Test\n\tthat the instance is in a statement sequence instead of local scope.\n\t(Freeze_Subprogram_Body): Use the special delayed placement with\n\tregard to the parent instance only if its Sloc is strictly greater.\n\t(Install_Body): Likewise.", "tree": {"sha": "c9da9866f4c2358954f3ff51c416804f103a31ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9da9866f4c2358954f3ff51c416804f103a31ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dcb1cad0e0747501e9d54eeec6b0481eb87d23c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcb1cad0e0747501e9d54eeec6b0481eb87d23c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcb1cad0e0747501e9d54eeec6b0481eb87d23c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcb1cad0e0747501e9d54eeec6b0481eb87d23c5/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e269fedf8c150f26e7651c0093ce02bef11ed5d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e269fedf8c150f26e7651c0093ce02bef11ed5d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e269fedf8c150f26e7651c0093ce02bef11ed5d6"}], "stats": {"total": 19, "additions": 8, "deletions": 11}, "files": [{"sha": "f9df62436148b256ae6e3072731fa22848fd3b94", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcb1cad0e0747501e9d54eeec6b0481eb87d23c5/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcb1cad0e0747501e9d54eeec6b0481eb87d23c5/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=dcb1cad0e0747501e9d54eeec6b0481eb87d23c5", "patch": "@@ -1998,7 +1998,7 @@ package body Sem_Ch12 is\n                         Gen_Par : Entity_Id;\n \n                         Needs_Freezing : Boolean;\n-                        S              : Entity_Id;\n+                        P              : Node_Id;\n \n                         procedure Check_Generic_Parent;\n                         --  The actual may be an instantiation of a unit\n@@ -2102,18 +2102,15 @@ package body Sem_Ch12 is\n \n                            Needs_Freezing := True;\n \n-                           S := Current_Scope;\n-                           while Present (S) loop\n-                              if Ekind (S) in E_Block\n-                                            | E_Function\n-                                            | E_Loop\n-                                            | E_Procedure\n+                           P := Parent (I_Node);\n+                           while Nkind (P) /= N_Compilation_Unit loop\n+                              if Nkind (P) = N_Handled_Sequence_Of_Statements\n                               then\n                                  Needs_Freezing := False;\n                                  exit;\n                               end if;\n \n-                              S := Scope (S);\n+                              P := Parent (P);\n                            end loop;\n \n                            if Needs_Freezing then\n@@ -9084,7 +9081,7 @@ package body Sem_Ch12 is\n          --\n          --    procedure P ...  --  this body freezes Parent_Inst\n          --\n-         --    package Inst is new ...\n+         --    procedure Inst is new ...\n          --\n          --  In this particular scenario, the freeze node for Inst must be\n          --  inserted in the same manner as that of Parent_Inst - before the\n@@ -9097,7 +9094,7 @@ package body Sem_Ch12 is\n \n          elsif List_Containing (Get_Unit_Instantiation_Node (Par)) =\n                List_Containing (Inst_Node)\n-           and then Sloc (Freeze_Node (Par)) < Sloc (Inst_Node)\n+           and then Sloc (Freeze_Node (Par)) <= Sloc (Inst_Node)\n          then\n             Insert_Freeze_Node_For_Instance (Inst_Node, F_Node);\n \n@@ -9938,7 +9935,7 @@ package body Sem_Ch12 is\n \n                if Parent (List_Containing (Get_Unit_Instantiation_Node (Par)))\n                     = Parent (List_Containing (N))\n-                 and then Sloc (Freeze_Node (Par)) < Sloc (N)\n+                 and then Sloc (Freeze_Node (Par)) <= Sloc (N)\n                then\n                   Insert_Freeze_Node_For_Instance (N, F_Node);\n                else"}]}