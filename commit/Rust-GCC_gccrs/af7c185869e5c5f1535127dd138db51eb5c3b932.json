{"sha": "af7c185869e5c5f1535127dd138db51eb5c3b932", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWY3YzE4NTg2OWU1YzVmMTUzNTEyN2RkMTM4ZGI1MWViNWMzYjkzMg==", "commit": {"author": {"name": "Richard B. Kreckel", "email": "kreckel@ginac.de", "date": "2011-11-02T18:43:26Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-11-02T18:43:26Z"}, "message": "re PR libstdc++/50880 (__complex_acosh() picks wrong complex branch)\n\n2011-11-02  Richard B. Kreckel  <kreckel@ginac.de>\n\t    Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/50880\n\t* include/std/complex (__complex_acosh): Fix in a better way,\n\tuse Kahan's formula.\n\t* include/tr1/complex (__complex_acosh): Likewise.\n\nFrom-SVN: r180787", "tree": {"sha": "d7679da43ffa3636ae8f3dcfa7dc84d9a971e9f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7679da43ffa3636ae8f3dcfa7dc84d9a971e9f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af7c185869e5c5f1535127dd138db51eb5c3b932", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af7c185869e5c5f1535127dd138db51eb5c3b932", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af7c185869e5c5f1535127dd138db51eb5c3b932", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af7c185869e5c5f1535127dd138db51eb5c3b932/comments", "author": null, "committer": null, "parents": [{"sha": "2d4e2a688ea50fdde672bf7502c202c049924039", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d4e2a688ea50fdde672bf7502c202c049924039", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d4e2a688ea50fdde672bf7502c202c049924039"}], "stats": {"total": 22, "additions": 6, "deletions": 16}, "files": [{"sha": "d74234338035da184b648a925813f8e1f9078832", "filename": "libstdc++-v3/include/std/complex", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af7c185869e5c5f1535127dd138db51eb5c3b932/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af7c185869e5c5f1535127dd138db51eb5c3b932/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex?ref=af7c185869e5c5f1535127dd138db51eb5c3b932", "patch": "@@ -1686,14 +1686,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     std::complex<_Tp>\n     __complex_acosh(const std::complex<_Tp>& __z)\n     {\n-      std::complex<_Tp> __t((__z.real() - __z.imag())\n-\t\t\t    * (__z.real() + __z.imag()) - _Tp(1.0),\n-\t\t\t    _Tp(2.0) * __z.real() * __z.imag());\n-      __t = std::sqrt(__t);\n-      if (__z.real() < _Tp())\n-\t__t = -__t;\n-\n-      return std::log(__t + __z);\n+      // Kahan's formula.\n+      return _Tp(2.0) * std::log(std::sqrt(_Tp(0.5) * (__z + _Tp(1.0)))\n+\t\t\t\t + std::sqrt(_Tp(0.5) * (__z - _Tp(1.0))));\n     }\n \n #if _GLIBCXX_USE_C99_COMPLEX_TR1"}, {"sha": "689ea167ba2341786e2de64e0cadb15da73c84ee", "filename": "libstdc++-v3/include/tr1/complex", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af7c185869e5c5f1535127dd138db51eb5c3b932/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcomplex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af7c185869e5c5f1535127dd138db51eb5c3b932/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcomplex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcomplex?ref=af7c185869e5c5f1535127dd138db51eb5c3b932", "patch": "@@ -185,14 +185,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     std::complex<_Tp>\n     __complex_acosh(const std::complex<_Tp>& __z)\n     {\n-      std::complex<_Tp> __t((__z.real() - __z.imag())\n-\t\t\t    * (__z.real() + __z.imag()) - _Tp(1.0),\n-\t\t\t    _Tp(2.0) * __z.real() * __z.imag());\n-      __t = std::sqrt(__t);\n-      if (__z.real() < _Tp())\n-\t__t = -__t;\n-\n-      return std::log(__t + __z);\n+      // Kahan's formula.\n+      return _Tp(2.0) * std::log(std::sqrt(_Tp(0.5) * (__z + _Tp(1.0)))\n+\t\t\t\t + std::sqrt(_Tp(0.5) * (__z - _Tp(1.0))));\n     }\n \n #if _GLIBCXX_USE_C99_COMPLEX_TR1"}]}