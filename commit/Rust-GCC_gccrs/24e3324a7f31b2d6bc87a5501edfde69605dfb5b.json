{"sha": "24e3324a7f31b2d6bc87a5501edfde69605dfb5b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjRlMzMyNGE3ZjMxYjJkNmJjODdhNTUwMWVkZmRlNjk2MDVkZmI1Yg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-02T18:07:56Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-02T18:07:56Z"}, "message": "(ASM_OUTPUT_COMMON, ASM_OUTPUT_LOCAL): Use SIZE instead of ROUNDED.\n\n(ASM_OUTPUT_CASE_LABEL): Always use `swbeg' syntax to\noutput switch table (m68k.md depends on this to happen).\n\n(LEGITIMATE_PIC_OPERAND_P): Treat a symbol_ref rtx with\nSYMBOL_REF_FLAG set a valid PIC operand.\n\n(OVERRIDE_OPTIONS): Turn off function cse when doing pic.\n\nFrom-SVN: r3593", "tree": {"sha": "e2da27b5d972e58646dfdf464c280c583b67950e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2da27b5d972e58646dfdf464c280c583b67950e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24e3324a7f31b2d6bc87a5501edfde69605dfb5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24e3324a7f31b2d6bc87a5501edfde69605dfb5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24e3324a7f31b2d6bc87a5501edfde69605dfb5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24e3324a7f31b2d6bc87a5501edfde69605dfb5b/comments", "author": null, "committer": null, "parents": [{"sha": "aa0cd7a228206eeee74db0f0744621ed1504065a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa0cd7a228206eeee74db0f0744621ed1504065a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa0cd7a228206eeee74db0f0744621ed1504065a"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "6f3e573df0c35fff8a3af544e6ef12c0a6f5bd71", "filename": "gcc/config/m68k/m68kv4.h", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e3324a7f31b2d6bc87a5501edfde69605dfb5b/gcc%2Fconfig%2Fm68k%2Fm68kv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e3324a7f31b2d6bc87a5501edfde69605dfb5b/gcc%2Fconfig%2Fm68k%2Fm68kv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68kv4.h?ref=24e3324a7f31b2d6bc87a5501edfde69605dfb5b", "patch": "@@ -234,3 +234,41 @@ do {\t\t\t\t\t\t\t\t\t\\\n } while (0)\n \n int switch_table_difference_label_flag;\n+\n+#undef ASM_OUTPUT_COMMON\n+#undef ASM_OUTPUT_LOCAL\n+#define ASM_OUTPUT_COMMON(FILE, NAME, SIZE, ROUNDED)  \\\n+( fputs (\".comm \", (FILE)),\t\t\t\\\n+  assemble_name ((FILE), (NAME)),\t\t\\\n+  fprintf ((FILE), \",%u\\n\", (SIZE)))\n+\n+#define ASM_OUTPUT_LOCAL(FILE, NAME, SIZE, ROUNDED)  \\\n+( fputs (\".lcomm \", (FILE)),\t\t\t\\\n+  assemble_name ((FILE), (NAME)),\t\t\\\n+  fprintf ((FILE), \",%u\\n\", (SIZE)))\n+\n+/* Override the definition in svr4.h. In m68k svr4, using swbeg is the \n+   standard way to do switch table. */\n+#undef ASM_OUTPUT_BEFORE_CASE_LABEL\n+#define ASM_OUTPUT_BEFORE_CASE_LABEL(FILE,PREFIX,NUM,TABLE)\t\t\\\n+  fprintf ((FILE), \"\\t%s &%d\\n\", SWBEG_ASM_OP, XVECLEN (PATTERN (TABLE), 1));\n+\n+/* In m68k svr4, a symbol_ref rtx can be a valid PIC operand if it is an\n+   operand of a function call. */\n+#undef LEGITIMATE_PIC_OPERAND_P\n+#define LEGITIMATE_PIC_OPERAND_P(X) \\\n+  (! symbolic_operand (X, VOIDmode) \\\n+   || ((GET_CODE(X) == SYMBOL_REF) && SYMBOL_REF_FLAG(X)))\n+\n+/* Turn off function cse if we are doing PIC. We always want function call\n+   to be done as `bsr foo@PLTPC', so it will force the assembler to create \n+   the PLT entry for `foo'. Doing function cse will cause the address of `foo'\n+   to be loaded into a register, which is exactly what we want to avoid when\n+   we are doing PIC on svr4 m68k. */\n+#undef OVERRIDE_OPTIONS\n+#define OVERRIDE_OPTIONS\t\t\\\n+{\t\t\t\t\t\\\n+  if (flag_pic) flag_no_function_cse = 1; \\\n+  if (! TARGET_68020 && flag_pic == 2)\t\\\n+    error(\"-fPIC is not currently supported on the 68000 or 68010\\n\");\t\\\n+}"}]}