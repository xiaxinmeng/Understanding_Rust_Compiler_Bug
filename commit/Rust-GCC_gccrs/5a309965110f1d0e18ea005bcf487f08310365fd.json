{"sha": "5a309965110f1d0e18ea005bcf487f08310365fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWEzMDk5NjUxMTBmMWQwZTE4ZWEwMDViY2Y0ODdmMDgzMTAzNjVmZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-02-26T11:02:39Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-02-26T11:02:39Z"}, "message": "re PR debug/43160 (Wrong debug info in guality/vla-1.c (f1))\n\n\tPR debug/43160\n\t* var-tracking.c (dv_onepart_p): Return true for DEBUG_EXPR_DECLs.\n\t(add_value_chain, add_value_chains, remove_value_chain,\n\tremove_value_chains): Handle DEBUG_EXPRs.\n\t(check_changed_vars_1, check_changed_vars_2): Handle DEBUG_EXPR_DECLs.\n\nFrom-SVN: r157084", "tree": {"sha": "911a8799b402d5fea8c4d113a243f9c16b8c3f6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/911a8799b402d5fea8c4d113a243f9c16b8c3f6b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a309965110f1d0e18ea005bcf487f08310365fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a309965110f1d0e18ea005bcf487f08310365fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a309965110f1d0e18ea005bcf487f08310365fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a309965110f1d0e18ea005bcf487f08310365fd/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e7140c8da2bb3dd863bb5f43638d066462a82287", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7140c8da2bb3dd863bb5f43638d066462a82287", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7140c8da2bb3dd863bb5f43638d066462a82287"}], "stats": {"total": 140, "additions": 84, "deletions": 56}, "files": [{"sha": "0130e9d4a687bf0b5686d4ec2cb22cb7b281510e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a309965110f1d0e18ea005bcf487f08310365fd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a309965110f1d0e18ea005bcf487f08310365fd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5a309965110f1d0e18ea005bcf487f08310365fd", "patch": "@@ -1,5 +1,11 @@\n 2010-02-26  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR debug/43160\n+\t* var-tracking.c (dv_onepart_p): Return true for DEBUG_EXPR_DECLs.\n+\t(add_value_chain, add_value_chains, remove_value_chain,\n+\tremove_value_chains): Handle DEBUG_EXPRs.\n+\t(check_changed_vars_1, check_changed_vars_2): Handle DEBUG_EXPR_DECLs.\n+\n \tPR debug/43161\n \t* regcprop.c (struct queued_debug_insn_change): New type.\n \t(struct value_data_entry): Add debug_insn_changes field."}, {"sha": "99589e95f2b5b24d8ca6e1b77c6349f266609907", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 78, "deletions": 56, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a309965110f1d0e18ea005bcf487f08310365fd/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a309965110f1d0e18ea005bcf487f08310365fd/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=5a309965110f1d0e18ea005bcf487f08310365fd", "patch": "@@ -784,6 +784,9 @@ dv_onepart_p (decl_or_value dv)\n   if (!decl)\n     return true;\n \n+  if (TREE_CODE (decl) == DEBUG_EXPR_DECL)\n+    return true;\n+\n   return (target_for_debug_bind (decl) != NULL_TREE);\n }\n \n@@ -2563,39 +2566,48 @@ loc_cmp (rtx x, rtx y)\n static int\n add_value_chain (rtx *loc, void *dvp)\n {\n-  if (GET_CODE (*loc) == VALUE && (void *) *loc != dvp)\n+  decl_or_value dv, ldv;\n+  value_chain vc, nvc;\n+  void **slot;\n+\n+  if (GET_CODE (*loc) == VALUE)\n+    ldv = dv_from_value (*loc);\n+  else if (GET_CODE (*loc) == DEBUG_EXPR)\n+    ldv = dv_from_decl (DEBUG_EXPR_TREE_DECL (*loc));\n+  else\n+    return 0;\n+\n+  if (dv_as_opaque (ldv) == dvp)\n+    return 0;\n+\n+  dv = (decl_or_value) dvp;\n+  slot = htab_find_slot_with_hash (value_chains, ldv, dv_htab_hash (ldv),\n+\t\t\t\t   INSERT);\n+  if (!*slot)\n     {\n-      decl_or_value dv = (decl_or_value) dvp;\n-      decl_or_value ldv = dv_from_value (*loc);\n-      value_chain vc, nvc;\n-      void **slot = htab_find_slot_with_hash (value_chains, ldv,\n-\t\t\t\t\t      dv_htab_hash (ldv), INSERT);\n-      if (!*slot)\n-\t{\n-\t  vc = (value_chain) pool_alloc (value_chain_pool);\n-\t  vc->dv = ldv;\n-\t  vc->next = NULL;\n-\t  vc->refcount = 0;\n-\t  *slot = (void *) vc;\n-\t}\n-      else\n+      vc = (value_chain) pool_alloc (value_chain_pool);\n+      vc->dv = ldv;\n+      vc->next = NULL;\n+      vc->refcount = 0;\n+      *slot = (void *) vc;\n+    }\n+  else\n+    {\n+      for (vc = ((value_chain) *slot)->next; vc; vc = vc->next)\n+\tif (dv_as_opaque (vc->dv) == dv_as_opaque (dv))\n+\t  break;\n+      if (vc)\n \t{\n-\t  for (vc = ((value_chain) *slot)->next; vc; vc = vc->next)\n-\t    if (dv_as_opaque (vc->dv) == dv_as_opaque (dv))\n-\t      break;\n-\t  if (vc)\n-\t    {\n-\t      vc->refcount++;\n-\t      return 0;\n-\t    }\n+\t  vc->refcount++;\n+\t  return 0;\n \t}\n-      vc = (value_chain) *slot;\n-      nvc = (value_chain) pool_alloc (value_chain_pool);\n-      nvc->dv = dv;\n-      nvc->next = vc->next;\n-      nvc->refcount = 1;\n-      vc->next = nvc;\n     }\n+  vc = (value_chain) *slot;\n+  nvc = (value_chain) pool_alloc (value_chain_pool);\n+  nvc->dv = dv;\n+  nvc->next = vc->next;\n+  nvc->refcount = 1;\n+  vc->next = nvc;\n   return 0;\n }\n \n@@ -2605,7 +2617,7 @@ add_value_chain (rtx *loc, void *dvp)\n static void\n add_value_chains (decl_or_value dv, rtx loc)\n {\n-  if (GET_CODE (loc) == VALUE)\n+  if (GET_CODE (loc) == VALUE || GET_CODE (loc) == DEBUG_EXPR)\n     {\n       add_value_chain (&loc, dv_as_opaque (dv));\n       return;\n@@ -2635,33 +2647,41 @@ add_cselib_value_chains (decl_or_value dv)\n static int\n remove_value_chain (rtx *loc, void *dvp)\n {\n-  if (GET_CODE (*loc) == VALUE && (void *) *loc != dvp)\n-    {\n-      decl_or_value dv = (decl_or_value) dvp;\n-      decl_or_value ldv = dv_from_value (*loc);\n-      value_chain vc, dvc = NULL;\n-      void **slot = htab_find_slot_with_hash (value_chains, ldv,\n-\t\t\t\t\t      dv_htab_hash (ldv), NO_INSERT);\n-      for (vc = (value_chain) *slot; vc->next; vc = vc->next)\n-\tif (dv_as_opaque (vc->next->dv) == dv_as_opaque (dv))\n+  decl_or_value dv, ldv;\n+  value_chain vc;\n+  void **slot;\n+\n+  if (GET_CODE (*loc) == VALUE)\n+    ldv = dv_from_value (*loc);\n+  else if (GET_CODE (*loc) == DEBUG_EXPR)\n+    ldv = dv_from_decl (DEBUG_EXPR_TREE_DECL (*loc));\n+  else\n+    return 0;\n+\n+  if (dv_as_opaque (ldv) == dvp)\n+    return 0;\n+\n+  dv = (decl_or_value) dvp;\n+  slot = htab_find_slot_with_hash (value_chains, ldv, dv_htab_hash (ldv),\n+\t\t\t\t   NO_INSERT);\n+  for (vc = (value_chain) *slot; vc->next; vc = vc->next)\n+    if (dv_as_opaque (vc->next->dv) == dv_as_opaque (dv))\n+      {\n+\tvalue_chain dvc = vc->next;\n+\tgcc_assert (dvc->refcount > 0);\n+\tif (--dvc->refcount == 0)\n \t  {\n-\t    dvc = vc->next;\n-\t    gcc_assert (dvc->refcount > 0);\n-\t    if (--dvc->refcount == 0)\n+\t    vc->next = dvc->next;\n+\t    pool_free (value_chain_pool, dvc);\n+\t    if (vc->next == NULL && vc == (value_chain) *slot)\n \t      {\n-\t\tvc->next = dvc->next;\n-\t\tpool_free (value_chain_pool, dvc);\n-\t\tif (vc->next == NULL && vc == (value_chain) *slot)\n-\t\t  {\n-\t\t    pool_free (value_chain_pool, vc);\n-\t\t    htab_clear_slot (value_chains, slot);\n-\t\t  }\n+\t\tpool_free (value_chain_pool, vc);\n+\t\thtab_clear_slot (value_chains, slot);\n \t      }\n-\t    return 0;\n \t  }\n-      gcc_unreachable ();\n-    }\n-  return 0;\n+\treturn 0;\n+      }\n+  gcc_unreachable ();\n }\n \n /* If decl or value DVP refers to VALUEs from within LOC, remove backlinks\n@@ -2670,7 +2690,7 @@ remove_value_chain (rtx *loc, void *dvp)\n static void\n remove_value_chains (decl_or_value dv, rtx loc)\n {\n-  if (GET_CODE (loc) == VALUE)\n+  if (GET_CODE (loc) == VALUE || GET_CODE (loc) == DEBUG_EXPR)\n     {\n       remove_value_chain (&loc, dv_as_opaque (dv));\n       return;\n@@ -6677,7 +6697,8 @@ check_changed_vars_1 (void **slot, void *data)\n   variable var = (variable) *slot;\n   htab_t htab = (htab_t) data;\n \n-  if (dv_is_value_p (var->dv))\n+  if (dv_is_value_p (var->dv)\n+      || TREE_CODE (dv_as_decl (var->dv)) == DEBUG_EXPR_DECL)\n     {\n       value_chain vc\n \t= (value_chain) htab_find_with_hash (value_chains, var->dv,\n@@ -6707,7 +6728,8 @@ static void\n check_changed_vars_2 (variable var, htab_t htab)\n {\n   variable_was_changed (var, NULL);\n-  if (dv_is_value_p (var->dv))\n+  if (dv_is_value_p (var->dv)\n+      || TREE_CODE (dv_as_decl (var->dv)) == DEBUG_EXPR_DECL)\n     {\n       value_chain vc\n \t= (value_chain) htab_find_with_hash (value_chains, var->dv,"}]}