{"sha": "06f9caede29980be5ef9fc38645dc2da0033b40f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDZmOWNhZWRlMjk5ODBiZTVlZjlmYzM4NjQ1ZGMyZGEwMDMzYjQwZg==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2016-08-11T21:39:49Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2016-08-11T21:39:49Z"}, "message": "re PR target/72863 (Powerpc64le: redundant swaps when using vec_vsx_ld/st)\n\n[gcc]\n\n2016-08-11  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\tPR target/72863\n\t* vsx.md (vsx_load_<mode>): For P8LE, emit swaps at expand time.\n\t(vsx_store_<mode>): Likewise.\n\n[gcc/testsuite]\n\n2016-08-11  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\tPR target/72863\n\t* gcc.target/powerpc/pr72863.c: New test.\n\nFrom-SVN: r239394", "tree": {"sha": "55b2c83cf43a4a1e892367968bebbfa3f896a01e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55b2c83cf43a4a1e892367968bebbfa3f896a01e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06f9caede29980be5ef9fc38645dc2da0033b40f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06f9caede29980be5ef9fc38645dc2da0033b40f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06f9caede29980be5ef9fc38645dc2da0033b40f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06f9caede29980be5ef9fc38645dc2da0033b40f/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3d0fa95d5c3c8826c9bc5ce746b220aa36581afb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d0fa95d5c3c8826c9bc5ce746b220aa36581afb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d0fa95d5c3c8826c9bc5ce746b220aa36581afb"}], "stats": {"total": 56, "additions": 54, "deletions": 2}, "files": [{"sha": "336133380c361f4d912c54eb1b8a87b89aa9a70c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06f9caede29980be5ef9fc38645dc2da0033b40f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06f9caede29980be5ef9fc38645dc2da0033b40f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=06f9caede29980be5ef9fc38645dc2da0033b40f", "patch": "@@ -1,3 +1,9 @@\n+2016-08-11  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\tPR target/72863\n+\t* vsx.md (vsx_load_<mode>): For P8LE, emit swaps at expand time.\n+\t(vsx_store_<mode>): Likewise.\n+\n 2015-08-11  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/i386.c (timode_scalar_to_vector_candidate_p): Allow"}, {"sha": "f43a28e14949ce7899e779afc655114c0902c3a8", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06f9caede29980be5ef9fc38645dc2da0033b40f/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06f9caede29980be5ef9fc38645dc2da0033b40f/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=06f9caede29980be5ef9fc38645dc2da0033b40f", "patch": "@@ -934,13 +934,27 @@\n   [(set (match_operand:VSX_M 0 \"vsx_register_operand\" \"\")\n \t(match_operand:VSX_M 1 \"memory_operand\" \"\"))]\n   \"VECTOR_MEM_VSX_P (<MODE>mode)\"\n-  \"\")\n+{\n+  /* Expand to swaps if needed, prior to swap optimization.  */\n+  if (!BYTES_BIG_ENDIAN && !TARGET_P9_VECTOR)\n+    {\n+      rs6000_emit_le_vsx_move (operands[0], operands[1], <MODE>mode);\n+      DONE;\n+    }\n+})\n \n (define_expand \"vsx_store_<mode>\"\n   [(set (match_operand:VSX_M 0 \"memory_operand\" \"\")\n \t(match_operand:VSX_M 1 \"vsx_register_operand\" \"\"))]\n   \"VECTOR_MEM_VSX_P (<MODE>mode)\"\n-  \"\")\n+{\n+  /* Expand to swaps if needed, prior to swap optimization.  */\n+  if (!BYTES_BIG_ENDIAN && !TARGET_P9_VECTOR)\n+    {\n+      rs6000_emit_le_vsx_move (operands[0], operands[1], <MODE>mode);\n+      DONE;\n+    }\n+})\n \n ;; Explicit load/store expanders for the builtin functions for lxvd2x, etc.,\n ;; when you really want their element-reversing behavior."}, {"sha": "26fe157f296193de902335918c668e6ff858c9a7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06f9caede29980be5ef9fc38645dc2da0033b40f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06f9caede29980be5ef9fc38645dc2da0033b40f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=06f9caede29980be5ef9fc38645dc2da0033b40f", "patch": "@@ -1,3 +1,8 @@\n+2016-08-11  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\tPR target/72863\n+\t* gcc.target/powerpc/pr72863.c: New test.\n+\n 2016-08-11  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* g++.dg/cpp1z/constexpr-lambda6.C: Remove dg-do run."}, {"sha": "26328f20afc94e49f76aa1334ac79b60988d911c", "filename": "gcc/testsuite/gcc.target/powerpc/pr72863.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06f9caede29980be5ef9fc38645dc2da0033b40f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr72863.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06f9caede29980be5ef9fc38645dc2da0033b40f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr72863.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr72863.c?ref=06f9caede29980be5ef9fc38645dc2da0033b40f", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile { target { powerpc64le-*-* } } } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power8\" } } */\n+/* { dg-options \"-mcpu=power8 -O3\" } */\n+/* { dg-final { scan-assembler \"lxvd2x\" } } */\n+/* { dg-final { scan-assembler \"stxvd2x\" } } */\n+/* { dg-final { scan-assembler-not \"xxpermdi\" } } */\n+\n+#include <altivec.h>\n+\n+extern unsigned char *src, *dst;\n+\n+void b(void)\n+{\n+  int i;\n+\n+  unsigned char *s8 = src;\n+  unsigned char *d8 = dst;\n+\n+  for (i = 0; i < 100; i++) {\n+    vector unsigned char vs = vec_vsx_ld(0, s8);\n+    vector unsigned char vd = vec_vsx_ld(0, d8);\n+    vector unsigned char vr = vec_xor(vs, vd);\n+    vec_vsx_st(vr, 0, d8);\n+    s8 += 16;\n+    d8 += 16;\n+  }\n+}"}]}