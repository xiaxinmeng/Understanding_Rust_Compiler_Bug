{"sha": "cd67948774f2f1f4ee36d27b6a2e7d456d20b260", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q2Nzk0ODc3NGYyZjFmNGVlMzZkMjdiNmEyZTdkNDU2ZDIwYjI2MA==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@au.ibm.com", "date": "2008-02-25T18:32:52Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2008-02-25T18:32:52Z"}, "message": "rs6000.h (ASM_CPU_POWER5_SPEC): Define.\n\n\t* config/rs6000/rs6000.h (ASM_CPU_POWER5_SPEC): Define.\n\t(ASM_CPU_POWER6_SPEC): Likewise.\n\t(ASM_CPU_SPEC): Pass %(asm_cpu_power5) for -mcpu=power5.\n\tLikewise, pass %(asm_cpu_power6) for -mcpu=power6.\n\t(EXTRA_SPECS): Add asm_cpu_power5, asm_cpu_power6 spec strings.\n\nFrom-SVN: r132631", "tree": {"sha": "c899ab1fbb501bf61e16d40b9eb65f40e1531b23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c899ab1fbb501bf61e16d40b9eb65f40e1531b23"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd67948774f2f1f4ee36d27b6a2e7d456d20b260", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd67948774f2f1f4ee36d27b6a2e7d456d20b260", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd67948774f2f1f4ee36d27b6a2e7d456d20b260", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd67948774f2f1f4ee36d27b6a2e7d456d20b260/comments", "author": null, "committer": null, "parents": [{"sha": "7660c722d9ed749ad84a919169ad55cf3b30f102", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7660c722d9ed749ad84a919169ad55cf3b30f102", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7660c722d9ed749ad84a919169ad55cf3b30f102"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "ac0ddb73b18956df54923571514682486c2b652f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd67948774f2f1f4ee36d27b6a2e7d456d20b260/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd67948774f2f1f4ee36d27b6a2e7d456d20b260/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cd67948774f2f1f4ee36d27b6a2e7d456d20b260", "patch": "@@ -1,3 +1,11 @@\n+2008-02-26  Ben Elliston  <bje@au.ibm.com>\n+\n+\t* config/rs6000/rs6000.h (ASM_CPU_POWER5_SPEC): Define.\n+\t(ASM_CPU_POWER6_SPEC): Likewise.\n+\t(ASM_CPU_SPEC): Pass %(asm_cpu_power5) for -mcpu=power5.\n+\tLikewise, pass %(asm_cpu_power6) for -mcpu=power6.\n+\t(EXTRA_SPECS): Add asm_cpu_power5, asm_cpu_power6 spec strings.\n+\n 2008-02-25  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-flow.h (uid_decl_map_hash, uid_decl_map_eq): Move ..."}, {"sha": "7f7dd57e1e10328d71858643a9f719185e27a21a", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd67948774f2f1f4ee36d27b6a2e7d456d20b260/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd67948774f2f1f4ee36d27b6a2e7d456d20b260/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=cd67948774f2f1f4ee36d27b6a2e7d456d20b260", "patch": "@@ -60,6 +60,18 @@\n #define TARGET_PAIRED_FLOAT 0\n #endif\n \n+#ifdef HAVE_AS_POPCNTB\n+#define ASM_CPU_POWER5_SPEC \"-mpower5\"\n+#else\n+#define ASM_CPU_POWER5_SPEC \"-mpower4\"\n+#endif\n+\n+#ifdef HAVE_AS_DFP\n+#define ASM_CPU_POWER6_SPEC \"-mpower6 -maltivec\"\n+#else\n+#define ASM_CPU_POWER6_SPEC \"-mpower4 -maltivec\"\n+#endif\n+\n /* Common ASM definitions used by ASM_SPEC among the various targets\n    for handling -mcpu=xxx switches.  */\n #define ASM_CPU_SPEC \\\n@@ -76,10 +88,10 @@\n %{mcpu=power2: -mpwrx} \\\n %{mcpu=power3: -mppc64} \\\n %{mcpu=power4: -mpower4} \\\n-%{mcpu=power5: -mpower4} \\\n-%{mcpu=power5+: -mpower4} \\\n-%{mcpu=power6: -mpower4 -maltivec} \\\n-%{mcpu=power6x: -mpower4 -maltivec} \\\n+%{mcpu=power5: %(asm_cpu_power5)} \\\n+%{mcpu=power5+: %(asm_cpu_power5)} \\\n+%{mcpu=power6: %(asm_cpu_power6) -maltivec} \\\n+%{mcpu=power6x: %(asm_cpu_power6) -maltivec} \\\n %{mcpu=powerpc: -mppc} \\\n %{mcpu=rios: -mpwr} \\\n %{mcpu=rios1: -mpwr} \\\n@@ -143,6 +155,8 @@\n   { \"asm_cpu\",\t\t\tASM_CPU_SPEC },\t\t\t\t\\\n   { \"asm_default\",\t\tASM_DEFAULT_SPEC },\t\t\t\\\n   { \"cc1_cpu\",\t\t\tCC1_CPU_SPEC },\t\t\t\t\\\n+  { \"asm_cpu_power5\",\t\tASM_CPU_POWER5_SPEC },\t\t\t\\\n+  { \"asm_cpu_power6\",\t\tASM_CPU_POWER6_SPEC },\t\t\t\\\n   SUBTARGET_EXTRA_SPECS\n \n /* -mcpu=native handling only makes sense with compiler running on"}]}