{"sha": "14298fa4891ee9b347d7f286cc8ef266976f9e18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQyOThmYTQ4OTFlZTliMzQ3ZDdmMjg2Y2M4ZWYyNjY5NzZmOWUxOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-07-19T10:26:23Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-07-19T10:26:23Z"}, "message": "re PR middle-end/91190 (ICE on valid code: in hashtab_chk_error, at hash-table.c:137)\n\n\tPR middle-end/91190\n\t* function.c (insert_temp_slot_address): Store into the hash table\n\ta copy of address to avoid RTL sharing issues.\n\n\t* gcc.c-torture/compile/pr91190.c: New test.\n\nFrom-SVN: r273599", "tree": {"sha": "e9fc9b6ab66a0e34aca203c1589f4af86f54f457", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9fc9b6ab66a0e34aca203c1589f4af86f54f457"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14298fa4891ee9b347d7f286cc8ef266976f9e18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14298fa4891ee9b347d7f286cc8ef266976f9e18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14298fa4891ee9b347d7f286cc8ef266976f9e18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14298fa4891ee9b347d7f286cc8ef266976f9e18/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "22469e4244a549e0745299578ebc5144505a6a51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22469e4244a549e0745299578ebc5144505a6a51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22469e4244a549e0745299578ebc5144505a6a51"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "3ac52e5f2b62457f13754970b0af797d1c6a80ae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14298fa4891ee9b347d7f286cc8ef266976f9e18/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14298fa4891ee9b347d7f286cc8ef266976f9e18/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=14298fa4891ee9b347d7f286cc8ef266976f9e18", "patch": "@@ -1,3 +1,9 @@\n+2019-07-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/91190\n+\t* function.c (insert_temp_slot_address): Store into the hash table\n+\ta copy of address to avoid RTL sharing issues.\n+\n 2019-07-19  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/91207"}, {"sha": "2a0061cad358e2c58d208182764e3ba90eb16088", "filename": "gcc/function.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14298fa4891ee9b347d7f286cc8ef266976f9e18/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14298fa4891ee9b347d7f286cc8ef266976f9e18/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=14298fa4891ee9b347d7f286cc8ef266976f9e18", "patch": "@@ -704,7 +704,7 @@ static void\n insert_temp_slot_address (rtx address, class temp_slot *temp_slot)\n {\n   struct temp_slot_address_entry *t = ggc_alloc<temp_slot_address_entry> ();\n-  t->address = address;\n+  t->address = copy_rtx (address);\n   t->temp_slot = temp_slot;\n   t->hash = temp_slot_address_compute_hash (t);\n   *temp_slot_address_table->find_slot_with_hash (t, t->hash, INSERT) = t;"}, {"sha": "906ca0e5d305495ca69197f1281707ea21b52780", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14298fa4891ee9b347d7f286cc8ef266976f9e18/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14298fa4891ee9b347d7f286cc8ef266976f9e18/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=14298fa4891ee9b347d7f286cc8ef266976f9e18", "patch": "@@ -1,3 +1,8 @@\n+2019-07-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/91190\n+\t* gcc.c-torture/compile/pr91190.c: New test.\n+\n 2019-07-19  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/91207"}, {"sha": "10b792f114aa288539af9d9277e6083c58050d4d", "filename": "gcc/testsuite/gcc.c-torture/compile/pr91190.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14298fa4891ee9b347d7f286cc8ef266976f9e18/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr91190.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14298fa4891ee9b347d7f286cc8ef266976f9e18/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr91190.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr91190.c?ref=14298fa4891ee9b347d7f286cc8ef266976f9e18", "patch": "@@ -0,0 +1,31 @@\n+/* PR middle-end/91190 */\n+\n+unsigned a[1], c;\n+long d, h;\n+int e[2], f, g;\n+char i;\n+\n+int\n+main ()\n+{\n+  char k = 0;\n+  int l;\n+  while (i || d)\n+    {\n+      if (g)\n+\twhile (1)\n+\t  ;\n+      e[1] = 0;\n+      long m[2], n = ~(3 & (5 | (h | 9) * 2237420170));\n+      g = 90 * n;\n+      char b = m[300000000], j = 0;\n+      c = 5 ^ a[c ^ (b & 5)];\n+      int o = d;\n+      k = o ? : j;\n+      if (k)\n+\tfor (l = 0; l < 3; l++)\n+\t  if (m[200000000000000000]) \n+\t    __builtin_printf (\"%d\", f);\n+    }\n+  return 0; \n+}"}]}