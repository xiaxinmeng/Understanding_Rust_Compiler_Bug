{"sha": "c8ba649886633947106b28f1ebf43b3b0d86be6c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzhiYTY0OTg4NjYzMzk0NzEwNmIyOGYxZWJmNDNiM2IwZDg2YmU2Yw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-07-06T08:43:58Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-07-06T08:43:58Z"}, "message": "re PR tree-optimization/66757 (wrong code at -O1 and above on x86_64-linux-gnu)\n\n\tPR tree-optimization/66757\n\t* match.pd: Add missing condition to ~X ^ C -> X ^ ~C.\n\nFrom-SVN: r225446", "tree": {"sha": "3e27070b49bb39532fbd3c286b5b62b54ba5e09d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e27070b49bb39532fbd3c286b5b62b54ba5e09d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8ba649886633947106b28f1ebf43b3b0d86be6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8ba649886633947106b28f1ebf43b3b0d86be6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8ba649886633947106b28f1ebf43b3b0d86be6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8ba649886633947106b28f1ebf43b3b0d86be6c/comments", "author": null, "committer": null, "parents": [{"sha": "43cbef95550f95ff267e306f7c9c970323781ef5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43cbef95550f95ff267e306f7c9c970323781ef5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43cbef95550f95ff267e306f7c9c970323781ef5"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "234468c71a1bb7eff6425240e06078b5fa58bd5e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8ba649886633947106b28f1ebf43b3b0d86be6c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8ba649886633947106b28f1ebf43b3b0d86be6c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c8ba649886633947106b28f1ebf43b3b0d86be6c", "patch": "@@ -1,3 +1,8 @@\n+2015-07-06  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR tree-optimization/66757\n+\t* match.pd: Add missing condition to ~X ^ C -> X ^ ~C.\n+\n 2015-07-05  Chung-Lin Tang  <cltang@codesourcery.com>\n \t    Sandra Loosemore <sandra@codesourcery.com>\n "}, {"sha": "ae0d9f11134d0e34c03dbaf8cceb9a7a65839a21", "filename": "gcc/match.pd", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8ba649886633947106b28f1ebf43b3b0d86be6c/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8ba649886633947106b28f1ebf43b3b0d86be6c/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=c8ba649886633947106b28f1ebf43b3b0d86be6c", "patch": "@@ -444,7 +444,8 @@ along with GCC; see the file COPYING3.  If not see\n /* Convert ~X ^ C to X ^ ~C.  */\n (simplify\n  (bit_xor (convert? (bit_not @0)) INTEGER_CST@1)\n- (bit_xor (convert @0) (bit_not @1)))\n+ (if (tree_nop_conversion_p (type, TREE_TYPE (@0)))\n+  (bit_xor (convert @0) (bit_not @1))))\n \n /* Fold (X & Y) ^ Y as ~X & Y.  */\n (simplify"}, {"sha": "da05a9468c2533d47b89119c4b0634ba2545b0fe", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8ba649886633947106b28f1ebf43b3b0d86be6c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8ba649886633947106b28f1ebf43b3b0d86be6c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c8ba649886633947106b28f1ebf43b3b0d86be6c", "patch": "@@ -1,8 +1,11 @@\n+2015-07-06  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc.c-torture/execute/pr66757.c: New test.\n+\n 2015-07-06  Bin Cheng  <bin.cheng@arm.com>\n \n \tPR tree-optimization/66720\n-\t* gcc.dg/vect/pr48052.c: Use dg-require-effective-target\n-\tvect_int_mult.\n+\t* gcc.dg/vect/pr48052.c: Use dg-require-effective-target vect_int_mult.\n \n 2015-07-05  Chung-Lin Tang  <cltang@codesourcery.com>\n \t    Sandra Loosemore <sandra@codesourcery.com>"}, {"sha": "acd4d20ff6f7b44a24de1bbe34d62915228b1f47", "filename": "gcc/testsuite/gcc.c-torture/execute/pr66757.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8ba649886633947106b28f1ebf43b3b0d86be6c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr66757.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8ba649886633947106b28f1ebf43b3b0d86be6c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr66757.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr66757.c?ref=c8ba649886633947106b28f1ebf43b3b0d86be6c", "patch": "@@ -0,0 +1,15 @@\n+/* PR tree-optimization/66757 */\n+/* Testcase by Zhendong Su <su@cs.ucdavis.edu> */\n+\n+int a, b;\n+\n+int\n+main (void)\n+{\n+  unsigned int t = (unsigned char) (~b); \n+\n+  if ((t ^ 1) / 255)\n+    __builtin_abort (); \n+\n+  return 0;\n+}"}]}