{"sha": "299859c2a458062c882c68c2e24022497726408f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk5ODU5YzJhNDU4MDYyYzg4MmM2OGMyZTI0MDIyNDk3NzI2NDA4Zg==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-04-08T00:16:44Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-04-08T00:16:44Z"}, "message": "Daily bump.", "tree": {"sha": "78c003481afb5097fb844c4bdac064d2ce48c13a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78c003481afb5097fb844c4bdac064d2ce48c13a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/299859c2a458062c882c68c2e24022497726408f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/299859c2a458062c882c68c2e24022497726408f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/299859c2a458062c882c68c2e24022497726408f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/299859c2a458062c882c68c2e24022497726408f/comments", "author": null, "committer": null, "parents": [{"sha": "fb5ed6d8c90a4bf8e677a3ff9bd79d83636ccff9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb5ed6d8c90a4bf8e677a3ff9bd79d83636ccff9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb5ed6d8c90a4bf8e677a3ff9bd79d83636ccff9"}], "stats": {"total": 148, "additions": 147, "deletions": 1}, "files": [{"sha": "8c12ba237415092ac073380e0a958c3c63fcc9da", "filename": "gcc/ChangeLog", "status": "modified", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/299859c2a458062c882c68c2e24022497726408f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/299859c2a458062c882c68c2e24022497726408f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=299859c2a458062c882c68c2e24022497726408f", "patch": "@@ -1,3 +1,60 @@\n+2021-04-07  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/97513\n+\t* tree-vect-slp.c (vect_add_slp_permutation): New function,\n+\tsplit out from...\n+\t(vectorizable_slp_permutation): ...here.  Detect cases in which\n+\tall VEC_PERM_EXPRs are guaranteed to have the same stepped\n+\tpermute vector and only generate one permute vector for that case.\n+\tExtend that case to handle variable-length vectors.\n+\n+2021-04-07  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/99873\n+\t* tree-vect-slp.c (vect_slp_prefer_store_lanes_p): New function.\n+\t(vect_build_slp_instance): Don't split store groups that could\n+\tuse IFN_STORE_LANES.\n+\n+2021-04-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/99872\n+\t* varasm.c (output_constant_pool_contents): Don't strip name encoding\n+\tfrom XSTR (desc->sym, 0) or from label before passing those to\n+\tASM_OUTPUT_DEF.\n+\n+2021-04-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/99954\n+\t* tree-loop-distribution.c: Include tree-affine.h.\n+\t(generate_memcpy_builtin): Try using tree-affine to prove\n+\tnon-overlap.\n+\t(loop_distribution::classify_builtin_ldst): Always classify\n+\tas PKIND_MEMMOVE.\n+\n+2021-04-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/99947\n+\t* tree-vect-loop.c (vectorizable_induction): Pre-allocate\n+\tsteps vector to avoid pushing elements from the reallocated\n+\tvector.\n+\n+2021-04-07  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-sccvn.h (print_vn_reference_ops): Declare.\n+\t* tree-ssa-pre.c (print_pre_expr): Factor out VN reference operand\n+\tprinting...\n+\t* tree-ssa-sccvn.c (print_vn_reference_ops): ... into this new\n+\tfunction.\n+\t(debug_vn_reference_ops): New.\n+\n+2021-04-07  Bin Cheng  <bin.cheng@linux.alibaba.com>\n+\n+\tPR tree-optimization/98736\n+\t* tree-loop-distribution.c\n+\t* (loop_distribution::bb_top_order_init):\n+\tCompute RPO with programing order preserved by calling function\n+\trev_post_order_and_mark_dfs_back_seme.\n+\n 2021-04-06  Vladimir N. Makarov  <vmakarov@redhat.com>\n \n \tPR target/99781"}, {"sha": "c12f44c8f0c6f56bdf1e2d2dcea66f63e71f5b6d", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/299859c2a458062c882c68c2e24022497726408f/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/299859c2a458062c882c68c2e24022497726408f/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=299859c2a458062c882c68c2e24022497726408f", "patch": "@@ -1 +1 @@\n-20210407\n+20210408"}, {"sha": "3459697fe59e13726d313a58ce79ca7c0849c8e4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/299859c2a458062c882c68c2e24022497726408f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/299859c2a458062c882c68c2e24022497726408f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=299859c2a458062c882c68c2e24022497726408f", "patch": "@@ -1,3 +1,20 @@\n+2021-04-07  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/41723\n+\t* parser.c (cp_parser_class_name): Check dependent_scope_p.\n+\n+2021-04-07  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/52625\n+\t* pt.c (maybe_process_partial_specialization): Check\n+\tDECL_SELF_REFERENCE_P.\n+\n+2021-04-07  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/92918\n+\t* name-lookup.c (push_class_level_binding_1): Do overload a new\n+\tfunction with a previous using-declaration.\n+\n 2021-04-06  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/96673"}, {"sha": "b5de7aa3b10ce5232e071875ee60a173e4b55641", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/299859c2a458062c882c68c2e24022497726408f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/299859c2a458062c882c68c2e24022497726408f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=299859c2a458062c882c68c2e24022497726408f", "patch": "@@ -1,3 +1,67 @@\n+2021-04-07  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/41723\n+\t* g++.dg/template/friend71.C: New test.\n+\n+2021-04-07  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/52625\n+\t* g++.dg/template/friend70.C: New test.\n+\n+2021-04-07  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/92918\n+\t* g++.dg/lookup/using66.C: New test.\n+\n+2021-04-07  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* lib/gcc.exp (gcc_target_compile): Add -dumpbase \"\"\n+\twhen building an executable with testglue.\n+\n+2021-04-07  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.target/aarch64/sve/pr88834.c: Expect the vectorizer to use SLP.\n+\t* gcc.target/aarch64/sve/pr88834_ld3.c: New test.\n+\n+2021-04-07  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.dg/vect/slp-21.c: Only expect 2 of the loops to use SLP\n+\tif IFN_STORE_LANES is available.\n+\t* gcc.dg/vect/vect-complex-5.c: Expect no loops to use SLP if\n+\tIFN_STORE_LANES is available.\n+\t* gcc.target/aarch64/pr99873_1.c: New test.\n+\t* gcc.target/aarch64/pr99873_2.c: Likewise.\n+\t* gcc.target/aarch64/pr99873_3.c: Likewise.\n+\t* gcc.target/aarch64/sve/pr99873_1.c: Likewise.\n+\t* gcc.target/aarch64/sve/pr99873_2.c: Likewise.\n+\t* gcc.target/aarch64/sve/pr99873_3.c: Likewise.\n+\n+2021-04-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/99954\n+\t* gcc.dg/torture/pr99954.c: New testcase.\n+\n+2021-04-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR testsuite/99955\n+\t* gcc.c-torture/execute/pr92618.c: Move may_alias attributes\n+\tlast.\n+\n+2021-04-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/99947\n+\t* gcc.dg/torture/pr99947.c: New testcase.\n+\n+2021-04-07  Bin Cheng  <bin.cheng@linux.alibaba.com>\n+\n+\tPR tree-optimization/98736\n+\t* gcc.c-torture/execute/pr98736.c: New test.\n+\n+2021-04-07  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/52202\n+\t* g++.dg/cpp0x/rv-life.C: New test.\n+\n 2021-04-06  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/96673"}, {"sha": "339a72bf079a214f869578d04edbbba43e8f0bd9", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/299859c2a458062c882c68c2e24022497726408f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/299859c2a458062c882c68c2e24022497726408f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=299859c2a458062c882c68c2e24022497726408f", "patch": "@@ -1,3 +1,11 @@\n+2021-04-07  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/99805\n+\t* src/c++17/fs_path.cc (path::_M_split_cmpts): Do not call\n+\tnon-const member on _M_pathname, to avoid copy-on-write.\n+\t* testsuite/27_io/filesystem/path/decompose/parent_path.cc:\n+\tCheck construction from strings that might be shared.\n+\n 2021-04-06  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/bits/move.h (forward, move, move_if_noexcept)"}]}