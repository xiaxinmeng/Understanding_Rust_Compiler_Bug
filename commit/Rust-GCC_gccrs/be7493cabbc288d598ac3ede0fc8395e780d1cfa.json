{"sha": "be7493cabbc288d598ac3ede0fc8395e780d1cfa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmU3NDkzY2FiYmMyODhkNTk4YWMzZWRlMGZjODM5NWU3ODBkMWNmYQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-06-27T11:29:04Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-06-27T11:29:04Z"}, "message": "re PR tree-optimization/53774 (Reassociator generates non-canonical addition)\n\n2012-06-27  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/53774\n\t* tree-ssa-reassoc.c (get_rank): All default defs have\n\tprecomputed rank.\n\t(init_reassoc): Precompute rank for all SSA default defs.\n\nFrom-SVN: r189012", "tree": {"sha": "346e641d1d23cc0da51ab0dfdd2b3085aee7fa9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/346e641d1d23cc0da51ab0dfdd2b3085aee7fa9c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be7493cabbc288d598ac3ede0fc8395e780d1cfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be7493cabbc288d598ac3ede0fc8395e780d1cfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be7493cabbc288d598ac3ede0fc8395e780d1cfa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be7493cabbc288d598ac3ede0fc8395e780d1cfa/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d3f7b31ee5aea0e0ea4b385f7bfd9a60c4e9ca22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3f7b31ee5aea0e0ea4b385f7bfd9a60c4e9ca22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3f7b31ee5aea0e0ea4b385f7bfd9a60c4e9ca22"}], "stats": {"total": 43, "additions": 18, "deletions": 25}, "files": [{"sha": "441f647585bcd968f2936bb04b235c45bea093bc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7493cabbc288d598ac3ede0fc8395e780d1cfa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7493cabbc288d598ac3ede0fc8395e780d1cfa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=be7493cabbc288d598ac3ede0fc8395e780d1cfa", "patch": "@@ -1,3 +1,10 @@\n+2012-06-27  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/53774\n+\t* tree-ssa-reassoc.c (get_rank): All default defs have\n+\tprecomputed rank.\n+\t(init_reassoc): Precompute rank for all SSA default defs.\n+\n 2012-06-27  Nick Clifton  <nickc@redhat.com>\n \n \t* config/rx/rx.md (simple_return): Use the simple_return rtx."}, {"sha": "99163bb206dfb8e54a31ef3cdb6efef5e3677009", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 11, "deletions": 25, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7493cabbc288d598ac3ede0fc8395e780d1cfa/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7493cabbc288d598ac3ede0fc8395e780d1cfa/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=be7493cabbc288d598ac3ede0fc8395e780d1cfa", "patch": "@@ -383,14 +383,10 @@ get_rank (tree e)\n       int i, n;\n       tree op;\n \n-      if (TREE_CODE (SSA_NAME_VAR (e)) == PARM_DECL\n-\t  && SSA_NAME_IS_DEFAULT_DEF (e))\n+      if (SSA_NAME_IS_DEFAULT_DEF (e))\n \treturn find_operand_rank (e);\n \n       stmt = SSA_NAME_DEF_STMT (e);\n-      if (gimple_bb (stmt) == NULL)\n-\treturn 0;\n-\n       if (gimple_code (stmt) == GIMPLE_PHI)\n \treturn phi_rank (stmt);\n \n@@ -484,7 +480,7 @@ sort_by_operand_rank (const void *pa, const void *pb)\n   /* It's nicer for optimize_expression if constants that are likely\n      to fold when added/multiplied//whatever are put next to each\n      other.  Since all constants have rank 0, order them by type.  */\n-  if (oeb->rank == 0 &&  oea->rank == 0)\n+  if (oeb->rank == 0 && oea->rank == 0)\n     {\n       if (constant_type (oeb->op) != constant_type (oea->op))\n \treturn constant_type (oeb->op) - constant_type (oea->op);\n@@ -3441,7 +3437,7 @@ transform_stmt_to_multiply (gimple_stmt_iterator *gsi, gimple stmt,\n       print_gimple_stmt (dump_file, stmt, 0, 0);\n     }\n \n-  gimple_assign_set_rhs_with_ops_1 (gsi, MULT_EXPR, rhs1, rhs2, NULL_TREE);\n+  gimple_assign_set_rhs_with_ops (gsi, MULT_EXPR, rhs1, rhs2);\n   update_stmt (gsi_stmt (*gsi));\n   remove_visited_stmt_chain (rhs1);\n \n@@ -3647,7 +3643,6 @@ init_reassoc (void)\n {\n   int i;\n   long rank = 2;\n-  tree param;\n   int *bbs = XNEWVEC (int, last_basic_block + 1);\n \n   /* Find the loops, so that we can prevent moving calculations in\n@@ -3666,24 +3661,15 @@ init_reassoc (void)\n   bb_rank = XCNEWVEC (long, last_basic_block + 1);\n   operand_rank = pointer_map_create ();\n \n-  /* Give each argument a distinct rank.   */\n-  for (param = DECL_ARGUMENTS (current_function_decl);\n-       param;\n-       param = DECL_CHAIN (param))\n-    {\n-      if (gimple_default_def (cfun, param) != NULL)\n-\t{\n-\t  tree def = gimple_default_def (cfun, param);\n-\t  insert_operand_rank (def, ++rank);\n-\t}\n-    }\n-\n-  /* Give the chain decl a distinct rank. */\n-  if (cfun->static_chain_decl != NULL)\n+  /* Give each default definition a distinct rank.  This includes\n+     parameters and the static chain.  Walk backwards over all\n+     SSA names so that we get proper rank ordering according\n+     to tree_swap_operands_p.  */\n+  for (i = num_ssa_names - 1; i > 0; --i)\n     {\n-      tree def = gimple_default_def (cfun, cfun->static_chain_decl);\n-      if (def != NULL)\n-\tinsert_operand_rank (def, ++rank);\n+      tree name = ssa_name (i);\n+      if (name && SSA_NAME_IS_DEFAULT_DEF (name))\n+\tinsert_operand_rank (name, ++rank);\n     }\n \n   /* Set up rank for each BB  */"}]}