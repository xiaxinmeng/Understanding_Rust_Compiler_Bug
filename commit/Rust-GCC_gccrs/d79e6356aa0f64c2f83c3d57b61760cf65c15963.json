{"sha": "d79e6356aa0f64c2f83c3d57b61760cf65c15963", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc5ZTYzNTZhYTBmNjRjMmY4M2MzZDU3YjYxNzYwY2Y2NWMxNTk2Mw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2006-01-03T00:30:27Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2006-01-03T00:30:27Z"}, "message": "libtool-ldflags: New script.\n\n\t* libtool-ldflags: New script.\n\n\t* src/Makefile.am (LTLDFLAGS): New variable. \n\t(CXXLINK): Use LTLDFLAGS.\n\t* src/Makefile.in: Regenerated.\n\t* libsupc++/Makefile.am (LTLDFLAGS): New variable. \n\t(CXXLINK): Use LTLDFLAGS.\n\t* libsupc++/Makefile.in: Regenerated.\n\nFrom-SVN: r109256", "tree": {"sha": "26f43cf3a310c3facb63a583f150f4158ffeb17b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26f43cf3a310c3facb63a583f150f4158ffeb17b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d79e6356aa0f64c2f83c3d57b61760cf65c15963", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d79e6356aa0f64c2f83c3d57b61760cf65c15963", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d79e6356aa0f64c2f83c3d57b61760cf65c15963", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d79e6356aa0f64c2f83c3d57b61760cf65c15963/comments", "author": null, "committer": null, "parents": [{"sha": "0ac6ae9a682f8238064f9eaa3661626839d36e64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ac6ae9a682f8238064f9eaa3661626839d36e64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ac6ae9a682f8238064f9eaa3661626839d36e64"}], "stats": {"total": 124, "additions": 120, "deletions": 4}, "files": [{"sha": "9c968fff1fb969b7d711d3882268a2c22bb78f96", "filename": "ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d79e6356aa0f64c2f83c3d57b61760cf65c15963/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d79e6356aa0f64c2f83c3d57b61760cf65c15963/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=d79e6356aa0f64c2f83c3d57b61760cf65c15963", "patch": "@@ -1,3 +1,7 @@\n+2006-01-02  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* libtool-ldflags: New script.\n+\n 2006-01-02  Andreas Schwab  <schwab@suse.de>\n \n \t* configure.in: When reconfiguring remove Makefile in"}, {"sha": "c6bd64e6d1c80909539b60de6578660f611c603d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d79e6356aa0f64c2f83c3d57b61760cf65c15963/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d79e6356aa0f64c2f83c3d57b61760cf65c15963/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d79e6356aa0f64c2f83c3d57b61760cf65c15963", "patch": "@@ -1,3 +1,12 @@\n+2006-01-02  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* src/Makefile.am (LTLDFLAGS): New variable. \n+\t(CXXLINK): Use LTLDFLAGS.\n+\t* src/Makefile.in: Regenerated.\n+\t* libsupc++/Makefile.am (LTLDFLAGS): New variable. \n+\t(CXXLINK): Use LTLDFLAGS.\n+\t* libsupc++/Makefile.in: Regenerated.\n+\n 2006-01-02  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/24645"}, {"sha": "4ce286159693283b84cf37ea6eb39d64ec490c87", "filename": "libstdc++-v3/libsupc++/Makefile.am", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d79e6356aa0f64c2f83c3d57b61760cf65c15963/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d79e6356aa0f64c2f83c3d57b61760cf65c15963/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am?ref=d79e6356aa0f64c2f83c3d57b61760cf65c15963", "patch": "@@ -139,6 +139,8 @@ LTCXXCOMPILE = $(LIBTOOL) --tag CXX --tag disable-shared \\\n \t       --mode=compile $(CXX) $(TOPLEVEL_INCLUDES) \\\n \t       $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) \n \n+LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n+\n # 3) We'd have a problem when building the shared libstdc++ object if\n # the rules automake generates would be used.  We cannot allow g++ to\n # be used since this would add -lstdc++ to the link line which of\n@@ -147,7 +149,7 @@ LTCXXCOMPILE = $(LIBTOOL) --tag CXX --tag disable-shared \\\n # compilation driver.\n CXXLINK = $(LIBTOOL) --tag CXX --tag disable-shared \\\n \t  --mode=link $(CXX) \\\n-\t  $(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_CXXFLAGS) $(LDFLAGS) -o $@\n+\t  $(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_CXXFLAGS) $(LTLDFLAGS) -o $@\n \n # We have to have rules modified from the default to counteract SUN make\n # prepending each of $(glibcxxinstall_HEADERS) with VPATH below."}, {"sha": "0b132b024bfdbb9e2a9126ba8a2537d3d15f172e", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d79e6356aa0f64c2f83c3d57b61760cf65c15963/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d79e6356aa0f64c2f83c3d57b61760cf65c15963/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=d79e6356aa0f64c2f83c3d57b61760cf65c15963", "patch": "@@ -402,6 +402,7 @@ LTCXXCOMPILE = $(LIBTOOL) --tag CXX --tag disable-shared \\\n \t       --mode=compile $(CXX) $(TOPLEVEL_INCLUDES) \\\n \t       $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) \n \n+LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n \n # 3) We'd have a problem when building the shared libstdc++ object if\n # the rules automake generates would be used.  We cannot allow g++ to\n@@ -411,7 +412,7 @@ LTCXXCOMPILE = $(LIBTOOL) --tag CXX --tag disable-shared \\\n # compilation driver.\n CXXLINK = $(LIBTOOL) --tag CXX --tag disable-shared \\\n \t  --mode=link $(CXX) \\\n-\t  $(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_CXXFLAGS) $(LDFLAGS) -o $@\n+\t  $(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_CXXFLAGS) $(LTLDFLAGS) -o $@\n \n all: all-am\n "}, {"sha": "973e75ff157d5979aa1e4b512c6c58123d297b4e", "filename": "libstdc++-v3/src/Makefile.am", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d79e6356aa0f64c2f83c3d57b61760cf65c15963/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d79e6356aa0f64c2f83c3d57b61760cf65c15963/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am?ref=d79e6356aa0f64c2f83c3d57b61760cf65c15963", "patch": "@@ -226,14 +226,16 @@ AM_CXXFLAGS = \\\n LTCXXCOMPILE = $(LIBTOOL) --tag CXX --mode=compile $(CXX) $(INCLUDES) \\\n \t       $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) \n \n+LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n+\n # 3) We'd have a problem when building the shared libstdc++ object if\n # the rules automake generates would be used.  We cannot allow g++ to\n # be used since this would add -lstdc++ to the link line which of\n # course is problematic at this point.  So, we get the top-level\n # directory to configure libstdc++-v3 to use gcc as the C++\n # compilation driver.\n CXXLINK = $(LIBTOOL) --tag CXX --mode=link $(CXX) \\\n-\t  $(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_CXXFLAGS) $(LDFLAGS) -o $@\n+\t  $(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_CXXFLAGS) $(LTLDFLAGS) -o $@\n \n \n # Added bits to build debug library."}, {"sha": "1a99a63e3e63bcfe65d89fee02352b5eb71c20f9", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d79e6356aa0f64c2f83c3d57b61760cf65c15963/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d79e6356aa0f64c2f83c3d57b61760cf65c15963/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=d79e6356aa0f64c2f83c3d57b61760cf65c15963", "patch": "@@ -405,6 +405,7 @@ AM_CXXFLAGS = \\\n LTCXXCOMPILE = $(LIBTOOL) --tag CXX --mode=compile $(CXX) $(INCLUDES) \\\n \t       $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) \n \n+LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n \n # 3) We'd have a problem when building the shared libstdc++ object if\n # the rules automake generates would be used.  We cannot allow g++ to\n@@ -413,7 +414,7 @@ LTCXXCOMPILE = $(LIBTOOL) --tag CXX --mode=compile $(CXX) $(INCLUDES) \\\n # directory to configure libstdc++-v3 to use gcc as the C++\n # compilation driver.\n CXXLINK = $(LIBTOOL) --tag CXX --mode=link $(CXX) \\\n-\t  $(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_CXXFLAGS) $(LDFLAGS) -o $@\n+\t  $(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_CXXFLAGS) $(LTLDFLAGS) -o $@\n \n debugdir = debug\n all: all-am"}, {"sha": "6321747b4a95b4163d9e847f1b529cef98bae6f7", "filename": "libtool-ldflags", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d79e6356aa0f64c2f83c3d57b61760cf65c15963/libtool-ldflags", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d79e6356aa0f64c2f83c3d57b61760cf65c15963/libtool-ldflags", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libtool-ldflags?ref=d79e6356aa0f64c2f83c3d57b61760cf65c15963", "patch": "@@ -0,0 +1,97 @@\n+#! /bin/sh\n+\n+# Script to translate LDFLAGS into a form suitable for use with libtool.\n+\n+# Copyright (C) 2005 Free Software Foundation, Inc.\n+#\n+# This file is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2 of the License, or\n+# (at your option) any later version.\n+# \n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, \n+# MA 02110-1301, USA. \n+\n+# Contributed by CodeSourcery, LLC.\n+\n+# This script is designed to be used from a Makefile that uses libtool\n+# to build libraries as follows: \n+#\n+#   LTLDFLAGS = $(shell libtool-ldflags $(LDFLAGS))\n+#\n+# Then, use (LTLDFLAGS) in place of $(LDFLAGS) in your link line.\n+\n+# The output of the script.  This string is built up as we process the\n+# arguments.\n+result=\n+\n+for arg\n+do\n+    case $arg in\n+\t-f*|--*)\n+\t    # Libtool does not ascribe any special meaning options\n+\t    # that begin with -f or with a double-dash.  So, it will\n+\t    # think these options are linker options, and prefix them\n+\t    # with \"-Wl,\".  Then, the compiler driver will ignore the\n+\t    # options.  So, we prefix these options with -Xcompiler to\n+\t    # make clear to libtool that they are in fact compiler\n+\t    # options.\n+\t    result=\"$result -Xcompiler\" \n+\t    ;;\n+\t*)\n+\t    # We do not want to add -Xcompiler to other options because\n+\t    # that would prevent libtool itself from recognizing them.\n+\t    ;;\n+    esac\n+\n+    # If $(LDFLAGS) is (say):\n+    #   a \"b'c d\" e\n+    # then the user expects that:\n+    #   $(LD) $(LDFLAGS)\n+    # will pass three arguments to $(LD):\n+    #   1) a\n+    #   2) b'c d\n+    #   3) e\n+    # We must ensure, therefore, that the arguments are appropriately\n+    # quoted so that using:\n+    #   libtool --mode=link ... $(LTLDFLAGS)\n+    # will result in the same number of arguments being passed to\n+    # libtool.   In other words, when this script was invoked, the shell \n+    # removed one level of quoting, present in $(LDFLAGS); we have to put \n+    # it back.\n+\n+    # Quote any embedded single quotes.\n+    case $arg in\n+\t*\"'\"*)\n+\t    # The following command creates the script:\n+\t    #   1s,^X,,;s|'|'\"'\"'|g\n+\t    # which removes a leading X, and then quotes and embedded single\n+\t    # quotes.\n+\t    sed_script=\"1s,^X,,;s|'|'\\\"'\\\"'|g\"\n+\t    # Add a leading \"X\" so that if $arg starts with a dash,\n+\t    # the echo command will not try to interpret the argument\n+\t    # as a command-line option.\n+\t    arg=\"X$arg\"\n+\t    # Generate the quoted string.\n+\t    quoted_arg=`echo \"$arg\" | sed -e \"$sed_script\"`\n+\t    ;;\n+\t*)\n+\t    quoted_arg=$arg\n+\t    ;;\n+    esac\n+    # Surround the entire argument with single quotes.\n+    quoted_arg=\"'\"$quoted_arg\"'\" \n+\n+    # Add it to the string.\n+    result=\"$result $quoted_arg\"\n+done\n+\n+# Output the string we have built up.\n+echo \"$result\""}]}