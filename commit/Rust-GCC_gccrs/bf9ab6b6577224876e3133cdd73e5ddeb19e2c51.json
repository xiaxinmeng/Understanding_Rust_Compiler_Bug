{"sha": "bf9ab6b6577224876e3133cdd73e5ddeb19e2c51", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY5YWI2YjY1NzcyMjQ4NzZlMzEzM2NkZDczZTVkZGViMTllMmM1MQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-09-09T03:51:56Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-09-09T03:51:56Z"}, "message": "Fix thinko in last patch.\n\nFrom-SVN: r71228", "tree": {"sha": "195ce84de6a88f5e429d7991ccffe76d5eaa47d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/195ce84de6a88f5e429d7991ccffe76d5eaa47d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf9ab6b6577224876e3133cdd73e5ddeb19e2c51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf9ab6b6577224876e3133cdd73e5ddeb19e2c51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf9ab6b6577224876e3133cdd73e5ddeb19e2c51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf9ab6b6577224876e3133cdd73e5ddeb19e2c51/comments", "author": null, "committer": null, "parents": [{"sha": "9649812aae971f307ade9756b14a1c961fbc8905", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9649812aae971f307ade9756b14a1c961fbc8905", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9649812aae971f307ade9756b14a1c961fbc8905"}], "stats": {"total": 22, "additions": 8, "deletions": 14}, "files": [{"sha": "56f2bb564e8bbe575e5e25b83b78bbae53a5720f", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 8, "deletions": 14, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf9ab6b6577224876e3133cdd73e5ddeb19e2c51/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf9ab6b6577224876e3133cdd73e5ddeb19e2c51/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=bf9ab6b6577224876e3133cdd73e5ddeb19e2c51", "patch": "@@ -7695,6 +7695,7 @@ ia64_init_builtins (void)\n     = build_function_type_list (void_type_node, pdi_type_node, NULL_TREE);\n \n   tree fpreg_type;\n+  tree float80_type;\n \n   /* The __fpreg type.  */\n   fpreg_type = make_node (REAL_TYPE);\n@@ -7708,20 +7709,13 @@ ia64_init_builtins (void)\n   (*lang_hooks.types.register_builtin_type) (fpreg_type, \"__fpreg\");\n \n   /* The __float80 type.  */\n-  if (INTEL_EXTENDED_IEEE_FORMAT)\n-    /* The __float80 type is a synonym for \"long double\".  */\n-    (*lang_hooks.types.register_builtin_type) (long_double_type_node,\n-\t\t\t\t\t       \"__float80\");\n-  else\n-    {\n-      tree float80_type = make_node (REAL_TYPE);\n-      /* ??? Once the IA64 back end supports both 80-bit and 128-bit\n-\t floating types, this type should have XFmode, not TFmode.\n-\t TYPE_PRECISION should be 80 bits, not 128.  */\n-      TYPE_PRECISION (float80_type) = 128;\n-      layout_type (float80_type);\n-      (*lang_hooks.types.register_builtin_type) (float80_type, \"__float80\");\n-    }\n+  float80_type = make_node (REAL_TYPE);\n+  /* ??? Once the IA64 back end supports both 80-bit and 128-bit\n+     floating types, this type should have XFmode, not TFmode.\n+     TYPE_PRECISION should be 80 bits, not 128.  */\n+  TYPE_PRECISION (float80_type) = 128;\n+  layout_type (float80_type);\n+  (*lang_hooks.types.register_builtin_type) (float80_type, \"__float80\");\n \n   /* The __float128 type.  */\n   if (INTEL_EXTENDED_IEEE_FORMAT)"}]}