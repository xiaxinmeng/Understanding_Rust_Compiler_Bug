{"sha": "5e20aef8df76663e5b8507114db9ca28ce76abae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWUyMGFlZjhkZjc2NjYzZTViODUwNzExNGRiOWNhMjhjZTc2YWJhZQ==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2017-12-11T17:57:38Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2017-12-11T17:57:38Z"}, "message": "re PR fortran/83379 (Intermittent failure of min/maxval_char*.f90 test cases)\n\n2017-12-11  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/83379\n\t* gfortran.dg/minval_char_1.f90: Correct logic for mask\n\tcalculation.\n\t* gfortran.dg/minval_char_2.f90: Likewise.\n\t* gfortran.dg/maxval_char_1.f90: Likewise.\n\t* gfortran.dg/maxval_char_2.f90: Likewise.\n\nFrom-SVN: r255543", "tree": {"sha": "d282f8cb255e5e93ad1aaab972c75987233a1a1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d282f8cb255e5e93ad1aaab972c75987233a1a1a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e20aef8df76663e5b8507114db9ca28ce76abae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e20aef8df76663e5b8507114db9ca28ce76abae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e20aef8df76663e5b8507114db9ca28ce76abae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e20aef8df76663e5b8507114db9ca28ce76abae/comments", "author": null, "committer": null, "parents": [{"sha": "317fa0647833daa24c3b82333a75f64814cda8b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/317fa0647833daa24c3b82333a75f64814cda8b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/317fa0647833daa24c3b82333a75f64814cda8b5"}], "stats": {"total": 33, "additions": 21, "deletions": 12}, "files": [{"sha": "acd4578f20ec8f8b542ffeb9bc0117e77afa92c7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e20aef8df76663e5b8507114db9ca28ce76abae/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e20aef8df76663e5b8507114db9ca28ce76abae/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5e20aef8df76663e5b8507114db9ca28ce76abae", "patch": "@@ -1,3 +1,12 @@\n+2017-12-11  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/83379\n+\t* gfortran.dg/minval_char_1.f90: Correct logic for mask\n+\tcalculation.\n+\t* gfortran.dg/minval_char_2.f90: Likewise.\n+\t* gfortran.dg/maxval_char_1.f90: Likewise.\n+\t* gfortran.dg/maxval_char_2.f90: Likewise.\n+\n 2017-12-11  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/45689"}, {"sha": "2e529005ac2e2c891514aa61dfa2b79686ffdce7", "filename": "gcc/testsuite/gfortran.dg/maxval_char_1.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e20aef8df76663e5b8507114db9ca28ce76abae/gcc%2Ftestsuite%2Fgfortran.dg%2Fmaxval_char_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e20aef8df76663e5b8507114db9ca28ce76abae/gcc%2Ftestsuite%2Fgfortran.dg%2Fmaxval_char_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmaxval_char_1.f90?ref=5e20aef8df76663e5b8507114db9ca28ce76abae", "patch": "@@ -19,10 +19,10 @@ program main\n   res = maxval(a,dim=1)\n   if (res /= '00030') call abort\n   do\n-    call random_number(r)\n-    if (count(r>0.2) > 1) exit\n+     call random_number(r)\n+     v = int(r * 100)\n+     if (count (v>20) > 1) exit\n   end do\n-  v = int(r * 100)\n   write (unit=b,fmt='(I5.5)') v\n   write (unit=res,fmt='(I5.5)') maxval(v)\n   if (res /= maxval(b)) call abort\n@@ -31,7 +31,7 @@ program main\n   smask = .false.\n   if (all_zero /= maxval(b, smask)) call abort\n \n-  mask = v < 30\n+  mask = v > 20\n   write (unit=res,fmt='(I5.5)') maxval(v,mask)\n   if (res /= maxval(b, mask)) call abort\n   mask = .false."}, {"sha": "c9ba125c330e6d04ab3ac3b93ce0b61e880b7c55", "filename": "gcc/testsuite/gfortran.dg/maxval_char_2.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e20aef8df76663e5b8507114db9ca28ce76abae/gcc%2Ftestsuite%2Fgfortran.dg%2Fmaxval_char_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e20aef8df76663e5b8507114db9ca28ce76abae/gcc%2Ftestsuite%2Fgfortran.dg%2Fmaxval_char_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmaxval_char_2.f90?ref=5e20aef8df76663e5b8507114db9ca28ce76abae", "patch": "@@ -18,9 +18,9 @@ program main\n   if (res /= 4_'00030') call abort\n   do\n      call random_number(r)\n-     if (count(r>0.2) > 1) exit\n+     v = int(r * 100)\n+     if (count(v > 20) > 1) exit\n   end do\n-   v = int(r * 100)\n   write (unit=b,fmt='(I5.5)') v\n   write (unit=res,fmt='(I5.5)') maxval(v)\n   if (res /= maxval(b)) call abort\n@@ -29,7 +29,7 @@ program main\n   smask = .false.\n   if (all_zero /= maxval(b, smask)) call abort\n \n-  mask = v < 30\n+  mask = v > 20\n   write (unit=res,fmt='(I5.5)') maxval(v,mask)\n   if (res /= maxval(b, mask)) call abort\n   mask = .false."}, {"sha": "4d2598ea8e4daabdc9e98a866cfb16569b83678c", "filename": "gcc/testsuite/gfortran.dg/minval_char_1.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e20aef8df76663e5b8507114db9ca28ce76abae/gcc%2Ftestsuite%2Fgfortran.dg%2Fminval_char_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e20aef8df76663e5b8507114db9ca28ce76abae/gcc%2Ftestsuite%2Fgfortran.dg%2Fminval_char_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fminval_char_1.f90?ref=5e20aef8df76663e5b8507114db9ca28ce76abae", "patch": "@@ -17,10 +17,10 @@ program main\n   res = minval(a)\n   if (res /= '00026') call abort\n   do\n-    call random_number(r)\n-    if (count(r<0.2) > 1) exit\n+     call random_number(r)\n+     v = int(r * 100)\n+     if (count(v < 30) > 1) exit\n   end do\n-  v = int(r * 100)\n   write (unit=b,fmt='(I5.5)') v\n   write (unit=res,fmt='(I5.5)') minval(v)\n   if (res /= minval(b)) call abort"}, {"sha": "93ea4f6e18ff74b1ce1a06fee7677c873cb10242", "filename": "gcc/testsuite/gfortran.dg/minval_char_2.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e20aef8df76663e5b8507114db9ca28ce76abae/gcc%2Ftestsuite%2Fgfortran.dg%2Fminval_char_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e20aef8df76663e5b8507114db9ca28ce76abae/gcc%2Ftestsuite%2Fgfortran.dg%2Fminval_char_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fminval_char_2.f90?ref=5e20aef8df76663e5b8507114db9ca28ce76abae", "patch": "@@ -20,9 +20,9 @@ program main\n   if (res /= 4_'00026') call abort\n   do\n      call random_number(r)\n-     if (count(r>0.2) > 1) exit\n+     v = int(r * 100)\n+     if (count(v<30) > 1) exit\n   end do\n-  v = int(r * 100)\n   write (unit=b,fmt='(I5.5)') v\n   write (unit=res,fmt='(I5.5)') minval(v)\n   if (res /= minval(b)) call abort"}]}