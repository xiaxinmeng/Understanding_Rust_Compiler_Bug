{"sha": "295940c3c2320a0b5d3e99bd88042e1a4dbb8c73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk1OTQwYzNjMjMyMGEwYjVkM2U5OWJkODgwNDJlMWE0ZGJiOGM3Mw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2017-08-04T17:48:57Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2017-08-04T17:48:57Z"}, "message": "i386: Rewrite check for AVX512 features\n\nAdd a new file, avx512-check.h, to check all AVX512 features.  The test\nis skipped if any requested AVX512 features are unavailable.\n\n\tPR target/81590\n\t* gcc.target/i386/avx512-check.h: New file.\n\t* gcc.target/i386/avx5124fmaps-check.h: Removed.\n\t* gcc.target/i386/avx5124vnniw-check.h: Likewise.\n\t* gcc.target/i386/avx512cd-check.h: Likewise.\n\t* gcc.target/i386/avx512ifma-check.h: Likewise.\n\t* gcc.target/i386/avx512vbmi-check.h: Likewise.\n\t* gcc.target/i386/avx512vpopcntdq-check.h: Likewise.\n\t* gcc.target/i386/avx512bw-check.h: Rewrite.\n\t* gcc.target/i386/avx512dq-check.h: Likewise.\n\t* gcc.target/i386/avx512er-check.h: Likewise.\n\t* gcc.target/i386/avx512f-check.h: Likewise.\n\t* gcc.target/i386/avx512vl-check.h: Likewise.\n\t* gcc.target/i386/avx512f-helper.h: Include \"avx512-check.h\"\n\tonly.\n\t(test_512): Removed.\n\t(avx512*_test): Likewise.\n\t* gcc.target/i386/avx512f-pr71559.c (TEST): Undef.\n\nFrom-SVN: r250875", "tree": {"sha": "0ab46115d286887c0f6c43087d554c6cf11de0d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ab46115d286887c0f6c43087d554c6cf11de0d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/295940c3c2320a0b5d3e99bd88042e1a4dbb8c73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/295940c3c2320a0b5d3e99bd88042e1a4dbb8c73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/295940c3c2320a0b5d3e99bd88042e1a4dbb8c73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/295940c3c2320a0b5d3e99bd88042e1a4dbb8c73/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8c05890538811eaf8a862642359099a8ffce2f80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c05890538811eaf8a862642359099a8ffce2f80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c05890538811eaf8a862642359099a8ffce2f80"}], "stats": {"total": 727, "additions": 151, "deletions": 576}, "files": [{"sha": "5b0568eb408603365b2c6952efb6aa2da6b6de16", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/295940c3c2320a0b5d3e99bd88042e1a4dbb8c73/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/295940c3c2320a0b5d3e99bd88042e1a4dbb8c73/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=295940c3c2320a0b5d3e99bd88042e1a4dbb8c73", "patch": "@@ -1,3 +1,24 @@\n+2017-08-04  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/81590\n+\t* gcc.target/i386/avx512-check.h: New file.\n+\t* gcc.target/i386/avx5124fmaps-check.h: Removed.\n+\t* gcc.target/i386/avx5124vnniw-check.h: Likewise.\n+\t* gcc.target/i386/avx512cd-check.h: Likewise.\n+\t* gcc.target/i386/avx512ifma-check.h: Likewise.\n+\t* gcc.target/i386/avx512vbmi-check.h: Likewise.\n+\t* gcc.target/i386/avx512vpopcntdq-check.h: Likewise.\n+\t* gcc.target/i386/avx512bw-check.h: Rewrite.\n+\t* gcc.target/i386/avx512dq-check.h: Likewise.\n+\t* gcc.target/i386/avx512er-check.h: Likewise.\n+\t* gcc.target/i386/avx512f-check.h: Likewise.\n+\t* gcc.target/i386/avx512vl-check.h: Likewise.\n+\t* gcc.target/i386/avx512f-helper.h: Include \"avx512-check.h\"\n+\tonly.\n+\t(test_512): Removed.\n+\t(avx512*_test): Likewise.\n+\t* gcc.target/i386/avx512f-pr71559.c (TEST): Undef.\n+\n 2017-08-04  Marek Polacek  <polacek@redhat.com>\n \n \tPR middle-end/81695"}, {"sha": "bfe14960100ef5006ded16dbb0c4bda845a0a20f", "filename": "gcc/testsuite/gcc.target/i386/avx512-check.h", "status": "added", "additions": 113, "deletions": 0, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/295940c3c2320a0b5d3e99bd88042e1a4dbb8c73/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/295940c3c2320a0b5d3e99bd88042e1a4dbb8c73/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512-check.h?ref=295940c3c2320a0b5d3e99bd88042e1a4dbb8c73", "patch": "@@ -0,0 +1,113 @@\n+#include <stdlib.h>\n+#include \"cpuid.h\"\n+#include \"m512-check.h\"\n+#include \"avx512f-os-support.h\"\n+\n+#ifndef DO_TEST\n+#define DO_TEST do_test\n+#ifdef AVX512VL\n+static void test_256 (void);\n+static void test_128 (void);\n+#else\n+static void test_512 (void);\n+#endif\n+\n+__attribute__ ((noinline))\n+static void\n+do_test (void)\n+{\n+#ifdef AVX512VL\n+  test_256 ();\n+  test_128 ();\n+#else\n+  test_512 ();\n+#endif\n+}\n+#endif\n+\n+int\n+main ()\n+{\n+  unsigned int eax, ebx, ecx, edx;\n+\n+  if (!__get_cpuid (1, &eax, &ebx, &ecx, &edx))\n+    goto skipped;\n+\n+  /* Run AVX512F test only if host has AVX512F support.  */\n+  if (!(ecx & bit_OSXSAVE))\n+    goto skipped;\n+\n+  if (__get_cpuid_max (0, NULL) < 7)\n+    goto skipped;\n+\n+  __cpuid_count (7, 0, eax, ebx, ecx, edx);\n+\n+  if (!(ebx & bit_AVX512F))\n+    goto skipped;\n+\n+#ifdef AVX512VL\n+  if (!(ebx & bit_AVX512VL))\n+    goto skipped;\n+#endif\n+\n+#ifdef AVX512ER\n+  if (!(ebx & bit_AVX512ER))\n+    goto skipped;\n+#endif\n+\n+#ifdef AVX512CD\n+  if (!(ebx & bit_AVX512CD))\n+    goto skipped;\n+#endif\n+\n+#ifdef AVX512DQ\n+  if (!(ebx & bit_AVX512DQ))\n+    goto skipped;\n+#endif\n+\n+#ifdef AVX512BW\n+  if (!(ebx & bit_AVX512BW))\n+    goto skipped;\n+#endif\n+\n+#ifdef AVX512IFMA\n+  if (!(ebx & bit_AVX512IFMA))\n+    goto skipped;\n+#endif\n+\n+#ifdef AVX512VBMI\n+  if (!(ecx & bit_AVX512VBMI))\n+    goto skipped;\n+#endif\n+\n+#ifdef AVX5124FMAPS\n+  if (!(edx & bit_AVX5124FMAPS))\n+    goto skipped;\n+#endif\n+\n+#ifdef AVX5124VNNIW\n+  if (!(edx & bit_AVX5124VNNIW))\n+    goto skipped;\n+#endif\n+\n+#ifdef AVX512VPOPCNTDQ\n+  if (!(ecx & bit_AVX512VPOPCNTDQ))\n+    goto skipped;\n+#endif\n+\n+  if (!avx512f_os_support ())\n+    goto skipped;\n+\n+  DO_TEST ();\n+\n+#ifdef DEBUG\n+  printf (\"PASSED\\n\");\n+#endif\n+  return 0;\n+\n+skipped:\n+#ifdef DEBUG\n+  printf (\"SKIPPED\\n\");\n+#endif\n+  return 0;\n+}"}, {"sha": "13ea70b0a8d256c1dcfa8ae3972d42a81540c96d", "filename": "gcc/testsuite/gcc.target/i386/avx5124fmaps-check.h", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c05890538811eaf8a862642359099a8ffce2f80/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx5124fmaps-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c05890538811eaf8a862642359099a8ffce2f80/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx5124fmaps-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx5124fmaps-check.h?ref=8c05890538811eaf8a862642359099a8ffce2f80", "patch": "@@ -1,47 +0,0 @@\n-#include <stdlib.h>\n-#include \"cpuid.h\"\n-#include \"m512-check.h\"\n-#include \"avx512f-os-support.h\"\n-\n-static void avx5124fmaps_test (void);\n-\n-static void __attribute__ ((noinline)) do_test (void)\n-{\n-  avx5124fmaps_test ();\n-}\n-\n-int\n-main ()\n-{\n-  unsigned int eax, ebx, ecx, edx;\n-\n-  if (!__get_cpuid (1, &eax, &ebx, &ecx, &edx))\n-    return 0;\n-\n-  /* Run AVX512_4FMAPS test only if host has the support.  */\n-  if ((ecx & bit_OSXSAVE) == (bit_OSXSAVE))\n-    {\n-      if (__get_cpuid_max (0, NULL) < 7)\n-\treturn 0;\n-\n-      __cpuid_count (7, 0, eax, ebx, ecx, edx);\n-\n-      if ((avx512f_os_support ()) && ((edx & bit_AVX5124FMAPS) == bit_AVX5124FMAPS))\n-\t{\n-\t  do_test ();\n-#ifdef DEBUG\n-\t  printf (\"PASSED\\n\");\n-#endif\n-\t  return 0;\n-\t}\n-#ifdef DEBUG\n-      printf (\"SKIPPED\\n\");\n-#endif\n-    }\n-#ifdef DEBUG\n-  else\n-    printf (\"SKIPPED\\n\");\n-#endif\n-\n-  return 0;\n-}"}, {"sha": "27d35a574902cb9af28110f4a7ccfae6d484d1eb", "filename": "gcc/testsuite/gcc.target/i386/avx5124vnniw-check.h", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c05890538811eaf8a862642359099a8ffce2f80/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx5124vnniw-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c05890538811eaf8a862642359099a8ffce2f80/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx5124vnniw-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx5124vnniw-check.h?ref=8c05890538811eaf8a862642359099a8ffce2f80", "patch": "@@ -1,47 +0,0 @@\n-#include <stdlib.h>\n-#include \"cpuid.h\"\n-#include \"m512-check.h\"\n-#include \"avx512f-os-support.h\"\n-\n-static void avx5124vnniw_test (void);\n-\n-static void __attribute__ ((noinline)) do_test (void)\n-{\n-  avx5124vnniw_test ();\n-}\n-\n-int\n-main ()\n-{\n-  unsigned int eax, ebx, ecx, edx;\n-\n-  if (!__get_cpuid (1, &eax, &ebx, &ecx, &edx))\n-    return 0;\n-\n-  /* Run AVX512_4VNNIW test only if host has the support.  */\n-  if ((ecx & bit_OSXSAVE) == (bit_OSXSAVE))\n-    {\n-      if (__get_cpuid_max (0, NULL) < 7)\n-\treturn 0;\n-\n-      __cpuid_count (7, 0, eax, ebx, ecx, edx);\n-\n-      if ((avx512f_os_support ()) && ((edx & bit_AVX5124VNNIW) == bit_AVX5124VNNIW))\n-\t{\n-\t  do_test ();\n-#ifdef DEBUG\n-\t  printf (\"PASSED\\n\");\n-#endif\n-\t  return 0;\n-\t}\n-#ifdef DEBUG\n-      printf (\"SKIPPED\\n\");\n-#endif\n-    }\n-#ifdef DEBUG\n-  else\n-    printf (\"SKIPPED\\n\");\n-#endif\n-\n-  return 0;\n-}"}, {"sha": "899a006363ebb150c08a6c2ba05b5587dbac2684", "filename": "gcc/testsuite/gcc.target/i386/avx512bw-check.h", "status": "modified", "additions": 3, "deletions": 47, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/295940c3c2320a0b5d3e99bd88042e1a4dbb8c73/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/295940c3c2320a0b5d3e99bd88042e1a4dbb8c73/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-check.h?ref=295940c3c2320a0b5d3e99bd88042e1a4dbb8c73", "patch": "@@ -1,47 +1,3 @@\n-#include <stdlib.h>\n-#include \"cpuid.h\"\n-#include \"m512-check.h\"\n-#include \"avx512f-os-support.h\"\n-\n-static void avx512bw_test (void);\n-\n-static void __attribute__ ((noinline)) do_test (void)\n-{\n-  avx512bw_test ();\n-}\n-\n-int\n-main ()\n-{\n-  unsigned int eax, ebx, ecx, edx;\n-\n-  if (!__get_cpuid (1, &eax, &ebx, &ecx, &edx))\n-    return 0;\n-\n-  /* Run AVX512BW test only if host has AVX512BW support.  */\n-  if (ecx & bit_OSXSAVE)\n-    {\n-      if (__get_cpuid_max (0, NULL) < 7)\n-\treturn 0;\n-\n-      __cpuid_count (7, 0, eax, ebx, ecx, edx);\n-\n-      if ((ebx & bit_AVX512BW) && avx512f_os_support ())\n-\t{\n-\t  do_test ();\n-#ifdef DEBUG\n-\t  printf (\"PASSED\\n\");\n-#endif\n-\t  return 0;\n-\t}\n-#ifdef DEBUG\n-      printf (\"SKIPPED\\n\");\n-#endif\n-    }\n-#ifdef DEBUG\n-  else\n-    printf (\"SKIPPED\\n\");\n-#endif\n-\n-  return 0;\n-}\n+#define AVX512BW\n+#define avx512bw_test test_512\n+#include \"avx512-check.h\""}, {"sha": "fd0b9eb05d6151e02ac42d46d1300c6c0196411d", "filename": "gcc/testsuite/gcc.target/i386/avx512cd-check.h", "status": "removed", "additions": 0, "deletions": 46, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c05890538811eaf8a862642359099a8ffce2f80/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512cd-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c05890538811eaf8a862642359099a8ffce2f80/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512cd-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512cd-check.h?ref=8c05890538811eaf8a862642359099a8ffce2f80", "patch": "@@ -1,46 +0,0 @@\n-#include <stdlib.h>\n-#include \"cpuid.h\"\n-#include \"m512-check.h\"\n-#include \"avx512f-os-support.h\"\n-\n-static void avx512cd_test (void);\n-\n-static void __attribute__ ((noinline)) do_test (void)\n-{\n-  avx512cd_test ();\n-}\n-\n-int\n-main ()\n-{\n-  unsigned int eax, ebx, ecx, edx;\n-\n-  if (!__get_cpuid (1, &eax, &ebx, &ecx, &edx))\n-    return 0;\n-\n-  if (ecx & bit_OSXSAVE)\n-    {\n-      if (__get_cpuid_max (0, NULL) < 7)\n-\treturn 0;\n-\n-      __cpuid_count (7, 0, eax, ebx, ecx, edx);\n-\n-      if ((ebx & bit_AVX512CD) && avx512f_os_support ())\n-\t{\n-\t  do_test ();\n-#ifdef DEBUG\n-\t  printf (\"PASSED\\n\");\n-#endif\n-\t  return 0;\n-\t}\n-#ifdef DEBUG\n-      printf (\"SKIPPED\\n\");\n-#endif\n-    }\n-#ifdef DEBUG\n-  else\n-    printf (\"SKIPPED\\n\");\n-#endif\n-\n-  return 0;\n-}"}, {"sha": "1b72883673154ed9bcdc00f3b0487ec42e539c57", "filename": "gcc/testsuite/gcc.target/i386/avx512dq-check.h", "status": "modified", "additions": 3, "deletions": 47, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/295940c3c2320a0b5d3e99bd88042e1a4dbb8c73/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/295940c3c2320a0b5d3e99bd88042e1a4dbb8c73/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-check.h?ref=295940c3c2320a0b5d3e99bd88042e1a4dbb8c73", "patch": "@@ -1,47 +1,3 @@\n-#include <stdlib.h>\n-#include \"cpuid.h\"\n-#include \"m512-check.h\"\n-#include \"avx512f-os-support.h\"\n-\n-static void avx512dq_test (void);\n-\n-static void __attribute__ ((noinline)) do_test (void)\n-{\n-  avx512dq_test ();\n-}\n-\n-int\n-main ()\n-{\n-  unsigned int eax, ebx, ecx, edx;\n-\n-  if (!__get_cpuid (1, &eax, &ebx, &ecx, &edx))\n-    return 0;\n-\n-  /* Run AVX512DQ test only if host has AVX512DQ support.  */\n-  if (ecx & bit_OSXSAVE)\n-    {\n-      if (__get_cpuid_max (0, NULL) < 7)\n-\treturn 0;\n-\n-      __cpuid_count (7, 0, eax, ebx, ecx, edx);\n-\n-      if ((ebx & bit_AVX512DQ) && avx512f_os_support ())\n-\t{\n-\t  do_test ();\n-#ifdef DEBUG\n-\t  printf (\"PASSED\\n\");\n-#endif\n-\t  return 0;\n-\t}\n-#ifdef DEBUG\n-      printf (\"SKIPPED\\n\");\n-#endif\n-    }\n-#ifdef DEBUG\n-  else\n-    printf (\"SKIPPED\\n\");\n-#endif\n-\n-  return 0;\n-}\n+#define AVX512DQ\n+#define avx512dq_test test_512\n+#include \"avx512-check.h\""}, {"sha": "eb44c2f7ade176cbf7c580c920b8f5a6cbaf79d0", "filename": "gcc/testsuite/gcc.target/i386/avx512er-check.h", "status": "modified", "additions": 3, "deletions": 46, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/295940c3c2320a0b5d3e99bd88042e1a4dbb8c73/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512er-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/295940c3c2320a0b5d3e99bd88042e1a4dbb8c73/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512er-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512er-check.h?ref=295940c3c2320a0b5d3e99bd88042e1a4dbb8c73", "patch": "@@ -1,46 +1,3 @@\n-#include <stdlib.h>\n-#include \"cpuid.h\"\n-#include \"m512-check.h\"\n-#include \"avx512f-os-support.h\"\n-\n-static void avx512er_test (void);\n-\n-static void __attribute__ ((noinline)) do_test (void)\n-{\n-  avx512er_test ();\n-}\n-\n-int\n-main ()\n-{\n-  unsigned int eax, ebx, ecx, edx;\n-\n-  if (!__get_cpuid (1, &eax, &ebx, &ecx, &edx))\n-    return 0;\n-\n-  if (ecx & bit_OSXSAVE)\n-    {\n-      if (__get_cpuid_max (0, NULL) < 7)\n-\treturn 0;\n-\n-      __cpuid_count (7, 0, eax, ebx, ecx, edx);\n-\n-      if ((ebx & bit_AVX512ER) && avx512f_os_support ())\n-\t{\n-\t  do_test ();\n-#ifdef DEBUG\n-\t  printf (\"PASSED\\n\");\n-#endif\n-\t  return 0;\n-\t}\n-#ifdef DEBUG\n-      printf (\"SKIPPED\\n\");\n-#endif\n-    }\n-#ifdef DEBUG\n-  else\n-    printf (\"SKIPPED\\n\");\n-#endif\n-\n-  return 0;\n-}\n+#define AVX512ER\n+#define avx512er_test test_512\n+#include \"avx512f-helper.h\""}, {"sha": "b3bdd9a05c4558f926041a435ff2f99a14769c9f", "filename": "gcc/testsuite/gcc.target/i386/avx512f-check.h", "status": "modified", "additions": 2, "deletions": 47, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/295940c3c2320a0b5d3e99bd88042e1a4dbb8c73/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/295940c3c2320a0b5d3e99bd88042e1a4dbb8c73/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-check.h?ref=295940c3c2320a0b5d3e99bd88042e1a4dbb8c73", "patch": "@@ -1,47 +1,2 @@\n-#include <stdlib.h>\n-#include \"cpuid.h\"\n-#include \"m512-check.h\"\n-#include \"avx512f-os-support.h\"\n-\n-static void avx512f_test (void);\n-\n-static void __attribute__ ((noinline)) do_test (void)\n-{\n-  avx512f_test ();\n-}\n-\n-int\n-main ()\n-{\n-  unsigned int eax, ebx, ecx, edx;\n-\n-  if (!__get_cpuid (1, &eax, &ebx, &ecx, &edx))\n-    return 0;\n-\n-  /* Run AVX512F test only if host has AVX512F support.  */\n-  if (ecx & bit_OSXSAVE)\n-    {\n-      if (__get_cpuid_max (0, NULL) < 7)\n-\treturn 0;\n-\n-      __cpuid_count (7, 0, eax, ebx, ecx, edx);\n-\n-      if ((ebx & bit_AVX512F) && avx512f_os_support ())\n-\t{\n-\t  do_test ();\n-#ifdef DEBUG\n-\t  printf (\"PASSED\\n\");\n-#endif\n-\t  return 0;\n-\t}\n-#ifdef DEBUG\n-      printf (\"SKIPPED\\n\");\n-#endif\n-    }\n-#ifdef DEBUG\n-  else\n-    printf (\"SKIPPED\\n\");\n-#endif\n-\n-  return 0;\n-}\n+#define avx512f_test test_512\n+#include \"avx512f-helper.h\""}, {"sha": "72982f95aed7c36348bb21bf67afe0fa385d3aee", "filename": "gcc/testsuite/gcc.target/i386/avx512f-helper.h", "status": "modified", "additions": 1, "deletions": 63, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/295940c3c2320a0b5d3e99bd88042e1a4dbb8c73/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-helper.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/295940c3c2320a0b5d3e99bd88042e1a4dbb8c73/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-helper.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-helper.h?ref=295940c3c2320a0b5d3e99bd88042e1a4dbb8c73", "patch": "@@ -8,29 +8,7 @@\n #ifndef AVX512F_HELPER_INCLUDED\n #define AVX512F_HELPER_INCLUDED\n \n-#if defined (AVX512F) && !defined (AVX512VL)\n-#include \"avx512f-check.h\"\n-#elif defined (AVX512ER) && !defined (AVX512VL)\n-#include \"avx512er-check.h\"\n-#elif defined (AVX512CD) && !defined (AVX512VL)\n-#include \"avx512cd-check.h\"\n-#elif defined (AVX512DQ) && !defined (AVX512VL)\n-#include \"avx512dq-check.h\"\n-#elif defined (AVX512BW) && !defined (AVX512VL)\n-#include \"avx512bw-check.h\"\n-#elif defined (AVX512IFMA) && !defined (AVX512VL)\n-#include \"avx512ifma-check.h\"\n-#elif defined (AVX512VBMI) && !defined (AVX512VL)\n-#include \"avx512vbmi-check.h\"\n-#elif defined (AVX5124FMAPS) && !defined (AVX512VL)\n-#include \"avx5124fmaps-check.h\"\n-#elif defined (AVX5124VNNIW) && !defined (AVX512VL)\n-#include \"avx5124vnniw-check.h\"\n-#elif defined (AVX512VPOPCNTDQ) && !defined (AVX512VL)\n-#include \"avx512vpopcntdq-check.h\"\n-#elif defined (AVX512VL)\n-#include \"avx512vl-check.h\"\n-#endif\n+#include \"avx512-check.h\"\n \n /* Macros expansion.  */\n #define CONCAT(a,b,c) a ## b ## c\n@@ -112,46 +90,6 @@ MAKE_MASK_ZERO(i_uq, unsigned long long)\n #ifndef AVX512VL\n #define AVX512F_LEN 512\n #define AVX512F_LEN_HALF 256\n-void test_512 ();\n-#endif\n-\n-void test_512 ();\n-void test_256 ();\n-void test_128 ();\n-\n-#if defined (AVX512F) && !defined (AVX512VL)\n-void\n-avx512f_test (void) { test_512 (); }\n-#elif defined (AVX512CD) && !defined (AVX512VL)\n-void\n-avx512cd_test (void) { test_512 (); }\n-#elif defined (AVX512ER) && !defined (AVX512VL)\n-void\n-avx512er_test (void) { test_512 (); }\n-#elif defined (AVX512DQ) && !defined (AVX512VL)\n-void\n-avx512dq_test (void) { test_512 (); }\n-#elif defined (AVX512BW) && !defined (AVX512VL)\n-void\n-avx512bw_test (void) { test_512 (); }\n-#elif defined (AVX512IFMA) && !defined (AVX512VL)\n-void\n-avx512ifma_test (void) { test_512 (); }\n-#elif defined (AVX512VBMI) && !defined (AVX512VL)\n-void\n-avx512vbmi_test (void) { test_512 (); }\n-#elif defined (AVX5124FMAPS) && !defined (AVX512VL)\n-void\n-avx5124fmaps_test (void) { test_512 (); }\n-#elif defined (AVX5124VNNIW) && !defined (AVX512VL)\n-void\n-avx5124vnniw_test (void) { test_512 (); }\n-#elif defined (AVX512VPOPCNTDQ) && !defined (AVX512VL)\n-void\n-avx512vpopcntdq_test (void) { test_512 (); }\n-#elif defined (AVX512VL)\n-void\n-avx512vl_test (void) { test_256 (); test_128 (); }\n #endif\n \n #endif /* AVX512F_HELPER_INCLUDED */"}, {"sha": "43dc236c410950a562701d8ca0bca13f4375c3fb", "filename": "gcc/testsuite/gcc.target/i386/avx512f-pr71559.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/295940c3c2320a0b5d3e99bd88042e1a4dbb8c73/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr71559.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/295940c3c2320a0b5d3e99bd88042e1a4dbb8c73/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr71559.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr71559.c?ref=295940c3c2320a0b5d3e99bd88042e1a4dbb8c73", "patch": "@@ -3,6 +3,7 @@\n /* { dg-options \"-O2 -ftree-vectorize -mavx512f\" } */\n \n #include \"avx512f-check.h\"\n+#undef TEST\n #define PR71559_TEST avx512f_test\n \n #include \"sse2-pr71559.c\""}, {"sha": "b90a4d55103b35505ae1780161fe736d7d765ec6", "filename": "gcc/testsuite/gcc.target/i386/avx512ifma-check.h", "status": "removed", "additions": 0, "deletions": 46, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c05890538811eaf8a862642359099a8ffce2f80/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512ifma-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c05890538811eaf8a862642359099a8ffce2f80/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512ifma-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512ifma-check.h?ref=8c05890538811eaf8a862642359099a8ffce2f80", "patch": "@@ -1,46 +0,0 @@\n-#include <stdlib.h>\n-#include \"cpuid.h\"\n-#include \"m512-check.h\"\n-#include \"avx512f-os-support.h\"\n-\n-static void avx512ifma_test (void);\n-\n-static void __attribute__ ((noinline)) do_test (void)\n-{\n-  avx512ifma_test ();\n-}\n-\n-int\n-main ()\n-{\n-  unsigned int eax, ebx, ecx, edx;\n-\n-  if (!__get_cpuid (1, &eax, &ebx, &ecx, &edx))\n-    return 0;\n-\n-  if (ecx & bit_OSXSAVE)\n-    {\n-      if (__get_cpuid_max (0, NULL) < 7)\n-\treturn 0;\n-\n-      __cpuid_count (7, 0, eax, ebx, ecx, edx);\n-\n-      if ((ebx & bit_AVX512IFMA) && avx512f_os_support ())\n-\t{\n-\t  do_test ();\n-#ifdef DEBUG\n-\t  printf (\"PASSED\\n\");\n-#endif\n-\t  return 0;\n-\t}\n-#ifdef DEBUG\n-      printf (\"SKIPPED\\n\");\n-#endif\n-    }\n-#ifdef DEBUG\n-  else\n-    printf (\"SKIPPED\\n\");\n-#endif\n-\n-  return 0;\n-}"}, {"sha": "2c1f6259401e50da0292fa6761fc06bf2fddd7f7", "filename": "gcc/testsuite/gcc.target/i386/avx512vbmi-check.h", "status": "removed", "additions": 0, "deletions": 46, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c05890538811eaf8a862642359099a8ffce2f80/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vbmi-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c05890538811eaf8a862642359099a8ffce2f80/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vbmi-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vbmi-check.h?ref=8c05890538811eaf8a862642359099a8ffce2f80", "patch": "@@ -1,46 +0,0 @@\n-#include <stdlib.h>\n-#include \"cpuid.h\"\n-#include \"m512-check.h\"\n-#include \"avx512f-os-support.h\"\n-\n-static void avx512vbmi_test (void);\n-\n-static void __attribute__ ((noinline)) do_test (void)\n-{\n-  avx512vbmi_test ();\n-}\n-\n-int\n-main ()\n-{\n-  unsigned int eax, ebx, ecx, edx;\n-\n-  if (!__get_cpuid (1, &eax, &ebx, &ecx, &edx))\n-    return 0;\n-\n-  if (ecx & bit_OSXSAVE)\n-    {\n-      if (__get_cpuid_max (0, NULL) < 7)\n-\treturn 0;\n-\n-      __cpuid_count (7, 0, eax, ebx, ecx, edx);\n-\n-      if ((ecx & bit_AVX512VBMI) && avx512f_os_support ())\n-\t{\n-\t  do_test ();\n-#ifdef DEBUG\n-\t  printf (\"PASSED\\n\");\n-#endif\n-\t  return 0;\n-\t}\n-#ifdef DEBUG\n-      printf (\"SKIPPED\\n\");\n-#endif\n-    }\n-#ifdef DEBUG\n-  else\n-    printf (\"SKIPPED\\n\");\n-#endif\n-\n-  return 0;\n-}"}, {"sha": "9d02cc82c46618d2f494fe82feaaf7684e4a6f23", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-check.h", "status": "modified", "additions": 4, "deletions": 47, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/295940c3c2320a0b5d3e99bd88042e1a4dbb8c73/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/295940c3c2320a0b5d3e99bd88042e1a4dbb8c73/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-check.h?ref=295940c3c2320a0b5d3e99bd88042e1a4dbb8c73", "patch": "@@ -1,47 +1,4 @@\n-#include <stdlib.h>\n-#include \"cpuid.h\"\n-#include \"m512-check.h\"\n-#include \"avx512f-os-support.h\"\n-\n-static void avx512vl_test (void);\n-\n-static void __attribute__ ((noinline)) do_test (void)\n-{\n-  avx512vl_test ();\n-}\n-\n-int\n-main ()\n-{\n-  unsigned int eax, ebx, ecx, edx;\n-\n-  if (!__get_cpuid (1, &eax, &ebx, &ecx, &edx))\n-    return 0;\n-\n-  /* Run avx512vl test only if host has avx512vl support.  */\n-  if (ecx & bit_OSXSAVE)\n-    {\n-      if (__get_cpuid_max (0, NULL) < 7)\n-\treturn 0;\n-\n-      __cpuid_count (7, 0, eax, ebx, ecx, edx);\n-\n-      if ((ebx & bit_AVX512VL) && avx512f_os_support ())\n-\t{\n-\t  do_test ();\n-#ifdef DEBUG\n-\t  printf (\"PASSED\\n\");\n-#endif\n-\t  return 0;\n-\t}\n-#ifdef DEBUG\n-      printf (\"SKIPPED\\n\");\n-#endif\n-    }\n-#ifdef DEBUG\n-  else\n-    printf (\"SKIPPED\\n\");\n-#endif\n-\n-  return 0;\n-}\n+#define AVX512VL\n+#define DO_TEST avx512vl_test\n+static void DO_TEST (void);\n+#include \"avx512-check.h\""}, {"sha": "179548bf8cb652626b76850f4127c8a7999f8b67", "filename": "gcc/testsuite/gcc.target/i386/avx512vpopcntdq-check.h", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c05890538811eaf8a862642359099a8ffce2f80/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vpopcntdq-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c05890538811eaf8a862642359099a8ffce2f80/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vpopcntdq-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vpopcntdq-check.h?ref=8c05890538811eaf8a862642359099a8ffce2f80", "patch": "@@ -1,47 +0,0 @@\n-#include <stdlib.h>\n-#include \"cpuid.h\"\n-#include \"m512-check.h\"\n-#include \"avx512f-os-support.h\"\n-\n-static void avx512vpopcntdq_test (void);\n-\n-static void __attribute__ ((noinline)) do_test (void)\n-{\n-  avx512vpopcntdq_test ();\n-}\n-\n-int\n-main ()\n-{\n-  unsigned int eax, ebx, ecx, edx;\n-\n-  if (!__get_cpuid (1, &eax, &ebx, &ecx, &edx))\n-    return 0;\n-\n-  /* Run AVX512_VPOPCNTDQ test only if host has the support.  */\n-  if ((ecx & bit_OSXSAVE) == (bit_OSXSAVE))\n-    {\n-      if (__get_cpuid_max (0, NULL) < 7)\n-\treturn 0;\n-\n-      __cpuid_count (7, 0, eax, ebx, ecx, edx);\n-\n-      if ((avx512f_os_support ()) && ((ecx & bit_AVX512VPOPCNTDQ) == bit_AVX512VPOPCNTDQ))\n-\t{\n-\t  do_test ();\n-#ifdef DEBUG\n-\t  printf (\"PASSED\\n\");\n-#endif\n-\t  return 0;\n-\t}\n-#ifdef DEBUG\n-      printf (\"SKIPPED\\n\");\n-#endif\n-    }\n-#ifdef DEBUG\n-  else\n-    printf (\"SKIPPED\\n\");\n-#endif\n-\n-  return 0;\n-}"}]}