{"sha": "e602394c38b7ad5053769e2ff03550fd5b5d412a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTYwMjM5NGMzOGI3YWQ1MDUzNzY5ZTJmZjAzNTUwZmQ1YjVkNDEyYQ==", "commit": {"author": {"name": "Pascal Obry", "email": "obry@adacore.com", "date": "2005-03-18T11:46:57Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-03-18T11:46:57Z"}, "message": "adaint.h, adaint.c (__gnat_waitpid): Moved to expect.c where it is used.\n\n2005-03-17  Pascal Obry  <obry@adacore.com>\n\n\t* adaint.h, adaint.c (__gnat_waitpid): Moved to expect.c where it is\n\tused.\n\n\t* expect.c (__gnat_waitpid): Moved here from adaint.c.\n\tReimplement under Win32 using Win32 API.\n\t(__gnat_kill) [Win32]: Properly close the process handle before leaving\n\tthis routine.\n\nFrom-SVN: r96659", "tree": {"sha": "c6f054c8d8afc51a137d9e7ead083ea1a480e398", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6f054c8d8afc51a137d9e7ead083ea1a480e398"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e602394c38b7ad5053769e2ff03550fd5b5d412a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e602394c38b7ad5053769e2ff03550fd5b5d412a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e602394c38b7ad5053769e2ff03550fd5b5d412a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e602394c38b7ad5053769e2ff03550fd5b5d412a/comments", "author": {"login": "TurboGit", "id": 467069, "node_id": "MDQ6VXNlcjQ2NzA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/467069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TurboGit", "html_url": "https://github.com/TurboGit", "followers_url": "https://api.github.com/users/TurboGit/followers", "following_url": "https://api.github.com/users/TurboGit/following{/other_user}", "gists_url": "https://api.github.com/users/TurboGit/gists{/gist_id}", "starred_url": "https://api.github.com/users/TurboGit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TurboGit/subscriptions", "organizations_url": "https://api.github.com/users/TurboGit/orgs", "repos_url": "https://api.github.com/users/TurboGit/repos", "events_url": "https://api.github.com/users/TurboGit/events{/privacy}", "received_events_url": "https://api.github.com/users/TurboGit/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bae802f98b2514a0a93a615db8dbdd957f4c7111", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bae802f98b2514a0a93a615db8dbdd957f4c7111", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bae802f98b2514a0a93a615db8dbdd957f4c7111"}], "stats": {"total": 80, "additions": 61, "deletions": 19}, "files": [{"sha": "cbe96f40a8baef39515b46678453f892344d77be", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e602394c38b7ad5053769e2ff03550fd5b5d412a/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e602394c38b7ad5053769e2ff03550fd5b5d412a/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=e602394c38b7ad5053769e2ff03550fd5b5d412a", "patch": "@@ -1927,23 +1927,6 @@ __gnat_portable_wait (int *process_status)\n   return pid;\n }\n \n-int\n-__gnat_waitpid (int pid)\n-{\n-  int status = 0;\n-\n-#if defined (_WIN32)\n-  cwait (&status, pid, _WAIT_CHILD);\n-#elif defined (__EMX__) || defined (MSDOS) || defined (__vxworks)\n-  /* Status is already zero, so nothing to do.  */\n-#else\n-  waitpid (pid, &status, 0);\n-  status =  WEXITSTATUS (status);\n-#endif\n-\n-  return status;\n-}\n-\n void\n __gnat_os_exit (int status)\n {"}, {"sha": "97d913bf99647e1b05e23d0568d1fdc2c273587c", "filename": "gcc/ada/adaint.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e602394c38b7ad5053769e2ff03550fd5b5d412a/gcc%2Fada%2Fadaint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e602394c38b7ad5053769e2ff03550fd5b5d412a/gcc%2Fada%2Fadaint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.h?ref=e602394c38b7ad5053769e2ff03550fd5b5d412a", "patch": "@@ -93,7 +93,6 @@ extern int    __gnat_is_symbolic_link\t\t   (char *name);\n extern int    __gnat_portable_spawn                (char *[]);\n extern int    __gnat_portable_no_block_spawn       (char *[]);\n extern int    __gnat_portable_wait                 (int *);\n-extern int    __gnat_waitpid\t\t\t   (int);\n extern char  *__gnat_locate_exec                   (char *, char *);\n extern char  *__gnat_locate_exec_on_path\t   (char *);\n extern char  *__gnat_locate_regular_file           (char *, char *);"}, {"sha": "dcb6776842e8fd5ad33ea16a6fc802287c1d9b18", "filename": "gcc/ada/expect.c", "status": "modified", "additions": 61, "deletions": 1, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e602394c38b7ad5053769e2ff03550fd5b5d412a/gcc%2Fada%2Fexpect.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e602394c38b7ad5053769e2ff03550fd5b5d412a/gcc%2Fada%2Fexpect.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpect.c?ref=e602394c38b7ad5053769e2ff03550fd5b5d412a", "patch": "@@ -43,6 +43,16 @@\n #include \"system.h\"\n #endif\n \n+#include <sys/types.h>\n+\n+#ifdef __MINGW32__\n+#if OLD_MINGW\n+#include <sys/wait.h>\n+#endif\n+#else\n+#include <sys/wait.h>\n+#endif\n+\n /* This file provides the low level functionalities needed to implement Expect\n    capabilities in GNAT.Expect.\n    Implementations for unix and windows systems is provided.\n@@ -72,10 +82,32 @@ __gnat_kill (int pid, int sig)\n     {\n       process_handle = OpenProcess (PROCESS_TERMINATE, FALSE, pid);\n       if (process_handle != NULL)\n-\tTerminateProcess (process_handle, 0);\n+\t{\n+\t  TerminateProcess (process_handle, 0);\n+\t  CloseHandle (process_handle);\n+\t}\n     }\n }\n \n+int\n+__gnat_waitpid (int pid)\n+{\n+  HANDLE process_handle;\n+  DWORD exitcode = 1;\n+  DWORD res;\n+\n+  process_handle = OpenProcess (PROCESS_QUERY_INFORMATION, FALSE, pid);\n+\n+  if (process_handle != NULL)\n+    {\n+      res = WaitForSingleObject (process_handle, INFINITE);\n+      GetExitCodeProcess (process_handle, &exitcode);\n+      CloseHandle (process_handle);\n+    }\n+\n+  return (int) exitcode;\n+}\n+\n int\n __gnat_expect_fork (void)\n {\n@@ -157,6 +189,17 @@ __gnat_expect_poll (int *fd, int num_fd, int timeout, int *is_set)\n #include <vms/stsdef.h>\n #include <vms/iodef.h>\n \n+int\n+__gnat_waitpid (int pid)\n+{\n+  int status = 0;\n+\n+  waitpid (pid, &status, 0);\n+  status =  WEXITSTATUS (status);\n+\n+  return status;\n+}\n+\n int\n __gnat_pipe (int *fd)\n {\n@@ -297,6 +340,17 @@ __gnat_kill (int pid, int sig)\n   kill (pid, sig);\n }\n \n+int\n+__gnat_waitpid (int pid)\n+{\n+  int status = 0;\n+\n+  waitpid (pid, &status, 0);\n+  status =  WEXITSTATUS (status);\n+\n+  return status;\n+}\n+\n int\n __gnat_pipe (int *fd)\n {\n@@ -404,6 +458,12 @@ __gnat_kill (int pid, int sig)\n {\n }\n \n+int\n+__gnat_waitpid (int pid, int sig)\n+{\n+  return 0;\n+}\n+\n int\n __gnat_pipe (int *fd)\n {"}]}