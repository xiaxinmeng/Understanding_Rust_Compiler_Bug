{"sha": "543202079c79535652361818185ff534a0161a39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQzMjAyMDc5Yzc5NTM1NjUyMzYxODE4MTg1ZmY1MzRhMDE2MWEzOQ==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2019-08-11T09:42:41Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2019-08-11T09:42:41Z"}, "message": "PR fortran/91413 Generate warning when making array static\n\nWhen moving a local variable from the stack to static storage, the\nprocedure is no longer safe to be called recursively or concurrently\nfrom multiple threads.  Thus generate a warning when this is done.\nAlso double the default limit for switching from stack to static.\n\nRegtested on x86_64-pc-linux-gnu.\n\ngcc/fortran/ChangeLog:\n\n2019-08-11  Janne Blomqvist  <jb@gcc.gnu.org>\n\n\tPR fortran/91413\n\t* invoke.texi (-fmax-stack-var-size): Document increased default.\n\t* options.c (gfc_post_options): Increase default stack var size to\n\t65536 bytes.\n\t* trans-decl.c (gfc_finish_var_decl): Generate warning when local\n\tarray moved to static storage.\n\nFrom-SVN: r274264", "tree": {"sha": "f56421276cff2b50b3afe7fe74fa112cf222c9be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f56421276cff2b50b3afe7fe74fa112cf222c9be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/543202079c79535652361818185ff534a0161a39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/543202079c79535652361818185ff534a0161a39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/543202079c79535652361818185ff534a0161a39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/543202079c79535652361818185ff534a0161a39/comments", "author": null, "committer": null, "parents": [{"sha": "4c9dbb967f3948630ae9cc79283c62e01399737f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c9dbb967f3948630ae9cc79283c62e01399737f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c9dbb967f3948630ae9cc79283c62e01399737f"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "d554991440bc3212ab0902399eeeb5724e025f4f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/543202079c79535652361818185ff534a0161a39/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/543202079c79535652361818185ff534a0161a39/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=543202079c79535652361818185ff534a0161a39", "patch": "@@ -1,3 +1,12 @@\n+2019-08-11  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/91413\n+\t* invoke.texi (-fmax-stack-var-size): Document increased default.\n+\t* options.c (gfc_post_options): Increase default stack var size to\n+\t65536 bytes.\n+\t* trans-decl.c (gfc_finish_var_decl): Generate warning when local\n+\tarray moved to static storage.\n+\n 2019-08-10  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \t* decl.c (match_old_style_init): Use a clearer error message."}, {"sha": "1039c6084c4241de6ba3d526ce8e170fe7a1c9b9", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/543202079c79535652361818185ff534a0161a39/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/543202079c79535652361818185ff534a0161a39/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=543202079c79535652361818185ff534a0161a39", "patch": "@@ -1720,7 +1720,7 @@ This option currently only affects local arrays declared with constant\n bounds, and may not apply to all character variables.\n Future versions of GNU Fortran may improve this behavior.\n \n-The default value for @var{n} is 32768.\n+The default value for @var{n} is 65536.\n \n @item -fstack-arrays\n @opindex @code{fstack-arrays}"}, {"sha": "146be2f1420a723e91ac18942df1d740573b8b24", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/543202079c79535652361818185ff534a0161a39/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/543202079c79535652361818185ff534a0161a39/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=543202079c79535652361818185ff534a0161a39", "patch": "@@ -437,7 +437,7 @@ gfc_post_options (const char **pfilename)\n \n   /* Set default.  */\n   if (flag_max_stack_var_size == -2)\n-    flag_max_stack_var_size = 32768;\n+    flag_max_stack_var_size = 65536;\n \n   /* Implement -fno-automatic as -fmax-stack-var-size=0.  */\n   if (!flag_automatic)"}, {"sha": "2a9b852568a8c5ed0cb4b2d7d48b986be3d6f3f5", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/543202079c79535652361818185ff534a0161a39/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/543202079c79535652361818185ff534a0161a39/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=543202079c79535652361818185ff534a0161a39", "patch": "@@ -753,6 +753,16 @@ gfc_finish_var_decl (tree decl, gfc_symbol * sym)\n \t  || sym->attr.allocatable)\n       && !DECL_ARTIFICIAL (decl))\n     {\n+      gfc_warning (OPT_Wsurprising,\n+\t\t   \"Array %qs at %L is larger than limit set by\"\n+\t\t   \" %<-fmax-stack-var-size=%>, moved from stack to static\"\n+\t\t   \" storage. This makes the procedure unsafe when called\"\n+\t\t   \" recursively, or concurrently from multiple threads.\"\n+\t\t   \" Consider using %<-frecursive%>, or increase the\"\n+\t\t   \" %<-fmax-stack-var-size=%> limit, or change the code to\"\n+\t\t   \" use an ALLOCATABLE array.\",\n+\t\t   sym->name, &sym->declared_at);\n+\n       TREE_STATIC (decl) = 1;\n \n       /* Because the size of this variable isn't known until now, we may have"}]}