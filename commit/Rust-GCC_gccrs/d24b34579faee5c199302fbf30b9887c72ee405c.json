{"sha": "d24b34579faee5c199302fbf30b9887c72ee405c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI0YjM0NTc5ZmFlZTVjMTk5MzAyZmJmMzBiOTg4N2M3MmVlNDA1Yw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2001-07-20T12:15:36Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2001-07-20T12:15:36Z"}, "message": "i386-protos.h (ix86_zero_extend_to_Pmode): Declare.\n\n\t* i386-protos.h (ix86_zero_extend_to_Pmode): Declare.\n\t* i386.c (ix86_zero_extend_to_Pmode): Make global.\n\t* i386.md (strclrsi expander): Use it.\n\nFrom-SVN: r44194", "tree": {"sha": "d540254a6fa6c65889930a2ba3ee3e6597cd2ac2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d540254a6fa6c65889930a2ba3ee3e6597cd2ac2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d24b34579faee5c199302fbf30b9887c72ee405c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d24b34579faee5c199302fbf30b9887c72ee405c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d24b34579faee5c199302fbf30b9887c72ee405c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d24b34579faee5c199302fbf30b9887c72ee405c/comments", "author": null, "committer": null, "parents": [{"sha": "bc8d3f9122da17fd715724c8e1102f0325cb5bae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc8d3f9122da17fd715724c8e1102f0325cb5bae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc8d3f9122da17fd715724c8e1102f0325cb5bae"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "656ad64ee467a379a0e5f7554ac479d77698df2d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d24b34579faee5c199302fbf30b9887c72ee405c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d24b34579faee5c199302fbf30b9887c72ee405c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d24b34579faee5c199302fbf30b9887c72ee405c", "patch": "@@ -1,3 +1,9 @@\n+Fri Jul 20 14:12:57 CEST 2001  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386-protos.h (ix86_zero_extend_to_Pmode): Declare.\n+\t* i386.c (ix86_zero_extend_to_Pmode): Make global.\n+\t* i386.md (strclrsi expander): Use it.\n+\n Fri Jul 20 13:24:16 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* integrate.c (copy_insn_list): handle"}, {"sha": "5b9e9792e1f291cb7c65d248d21146035bbfde3f", "filename": "gcc/config/i386/i386-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d24b34579faee5c199302fbf30b9887c72ee405c/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d24b34579faee5c199302fbf30b9887c72ee405c/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-protos.h?ref=d24b34579faee5c199302fbf30b9887c72ee405c", "patch": "@@ -119,6 +119,7 @@ extern int ix86_expand_setcc PARAMS ((enum rtx_code, rtx));\n extern int ix86_expand_int_movcc PARAMS ((rtx[]));\n extern int ix86_expand_fp_movcc PARAMS ((rtx[]));\n extern void x86_initialize_trampoline PARAMS ((rtx, rtx, rtx));\n+extern rtx ix86_zero_extend_to_Pmode PARAMS ((rtx));\n extern void ix86_split_long_move PARAMS ((rtx[]));\n extern void ix86_split_ashldi PARAMS ((rtx *, rtx));\n extern void ix86_split_ashrdi PARAMS ((rtx *, rtx));"}, {"sha": "27512cf7aec97acc8a48d6001c6aef089d7a0e14", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d24b34579faee5c199302fbf30b9887c72ee405c/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d24b34579faee5c199302fbf30b9887c72ee405c/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=d24b34579faee5c199302fbf30b9887c72ee405c", "patch": "@@ -7463,7 +7463,7 @@ ix86_adjust_counter (countreg, value)\n }\n \n /* Zero extend possibly SImode EXP to Pmode register.  */\n-static rtx\n+rtx\n ix86_zero_extend_to_Pmode (exp)\n    rtx exp;\n {"}, {"sha": "d2ff08b46d6d2a0ac62540b61272339e81b07cd7", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d24b34579faee5c199302fbf30b9887c72ee405c/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d24b34579faee5c199302fbf30b9887c72ee405c/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=d24b34579faee5c199302fbf30b9887c72ee405c", "patch": "@@ -15197,7 +15197,7 @@\n   addr2 = copy_to_mode_reg (Pmode, XEXP (operands[2], 0));\n   \n   count = operands[3];\n-  countreg = copy_to_mode_reg (Pmode, count);\n+  countreg = ix86_zero_extend_to_Pmode (count);\n \n   /* %%% Iff we are testing strict equality, we can use known alignment\n      to good advantage.  This may be possible with combine, particularly"}]}