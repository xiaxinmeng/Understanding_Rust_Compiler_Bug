{"sha": "6b13641dc3ee3388b96bfb9479ced64c5127e838", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmIxMzY0MWRjM2VlMzM4OGI5NmJmYjk0NzljZWQ2NGM1MTI3ZTgzOA==", "commit": {"author": {"name": "Dale Johannesen", "email": "dalej@apple.com", "date": "2003-03-21T19:01:42Z"}, "committer": {"name": "Dale Johannesen", "email": "dalej@gcc.gnu.org", "date": "2003-03-21T19:01:42Z"}, "message": "rs6000.h (REG_ALLOC_ORDER): Increase priority for R2 on Darwin.\n\n2003-03-21  Dale Johannesen  <dalej@apple.com>\n\n        * config/rs6000/rs6000.h (REG_ALLOC_ORDER):  Increase\n        priority for R2 on Darwin.\n        (HARD_REGNO_MODE_OK):  Don't accept R31 for DFmode.\n\nFrom-SVN: r64676", "tree": {"sha": "d36d1413cebeb7f26509205feccc098544fe826a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d36d1413cebeb7f26509205feccc098544fe826a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b13641dc3ee3388b96bfb9479ced64c5127e838", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b13641dc3ee3388b96bfb9479ced64c5127e838", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b13641dc3ee3388b96bfb9479ced64c5127e838", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b13641dc3ee3388b96bfb9479ced64c5127e838/comments", "author": null, "committer": null, "parents": [{"sha": "6e814b8d35ad3c0ae7415acf0267c085744fd214", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e814b8d35ad3c0ae7415acf0267c085744fd214", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e814b8d35ad3c0ae7415acf0267c085744fd214"}], "stats": {"total": 33, "additions": 24, "deletions": 9}, "files": [{"sha": "3985860a60c5a1543abd11b4d2bd370ae4e98713", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b13641dc3ee3388b96bfb9479ced64c5127e838/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b13641dc3ee3388b96bfb9479ced64c5127e838/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6b13641dc3ee3388b96bfb9479ced64c5127e838", "patch": "@@ -1,3 +1,9 @@\n+2003-03-21  Dale Johannesen  <dalej@apple.com>\n+\n+\t* config/rs6000/rs6000.h (REG_ALLOC_ORDER):  Increase\n+\tpriority for R2 on Darwin.\n+\t(HARD_REGNO_MODE_OK):  Don't accept R31 for DFmode.\n+\n 2003-03-21  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* combine.c (make_field_assignment): Remove unnecessary AND"}, {"sha": "4adb4e020ba713c557a3d203a09422c36099a169", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 18, "deletions": 9, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b13641dc3ee3388b96bfb9479ced64c5127e838/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b13641dc3ee3388b96bfb9479ced64c5127e838/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=6b13641dc3ee3388b96bfb9479ced64c5127e838", "patch": "@@ -828,6 +828,13 @@ extern int rs6000_default_long_calls;\n \tv31 - v20       (saved; order given to save least number)\n */\n \t\t\t\t\t\t\n+#if FIXED_R2 == 1\n+#define MAYBE_R2_AVAILABLE\n+#define MAYBE_R2_FIXED 2,\n+#else\n+#define MAYBE_R2_AVAILABLE 2,\n+#define MAYBE_R2_FIXED\n+#endif\n \n #define REG_ALLOC_ORDER\t\t\t\t\t\\\n   {32, \t\t\t\t\t\t\t\\\n@@ -836,13 +843,13 @@ extern int rs6000_default_long_calls;\n    63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51,\t\\\n    50, 49, 48, 47, 46, \t\t\t\t\t\\\n    75, 74, 69, 68, 72, 71, 70,\t\t\t\t\\\n-   0,\t\t\t\t\t\t\t\\\n+   0, MAYBE_R2_AVAILABLE\t\t\t\t\\\n    9, 11, 10, 8, 7, 6, 5, 4,\t\t\t\t\\\n    3,\t\t\t\t\t\t\t\\\n    31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19,\t\\\n    18, 17, 16, 15, 14, 13, 12,\t\t\t\t\\\n    64, 66, 65, \t\t\t\t\t\t\\\n-   73, 1, 2, 67, 76,\t\t\t\t\t\\\n+   73, 1, MAYBE_R2_FIXED 67, 76,\t\t\t\\\n    /* AltiVec registers.  */\t\t\t\t\\\n    77, 78,\t\t\t\t\t\t\\\n    90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80,\t\t\\\n@@ -916,22 +923,24 @@ extern int rs6000_default_long_calls;\n \t || (TARGET_ALTIVEC && ALTIVEC_VECTOR_MODE (MODE)))\n \n /* Value is 1 if hard register REGNO can hold a value of machine-mode MODE.\n-   For POWER and PowerPC, the GPRs can hold any mode, but the float\n+   For POWER and PowerPC, the GPRs can hold any mode, but values bigger\n+   than one register cannot go past R31.  The float\n    registers only can hold floating modes and DImode, and CR register only\n    can hold CC modes.  We cannot put TImode anywhere except general\n    register and it must be able to fit within the register set.  */\n \n #define HARD_REGNO_MODE_OK(REGNO, MODE)\t\t\t\t\t\\\n-  (FP_REGNO_P (REGNO) ?\t\t\t\t\t\t\t\\\n-   (GET_MODE_CLASS (MODE) == MODE_FLOAT\t\t\t\t\t\\\n-    || (GET_MODE_CLASS (MODE) == MODE_INT\t\t\t\t\\\n-\t&& GET_MODE_SIZE (MODE) == UNITS_PER_FP_WORD))\t\t\t\\\n+  (INT_REGNO_P (REGNO) ?\t\t\t\t\t\t\\\n+     INT_REGNO_P (REGNO + HARD_REGNO_NREGS (REGNO, MODE) - 1)\t        \\\n+   : FP_REGNO_P (REGNO) ?\t\t\t\t\t\t\\\n+     (GET_MODE_CLASS (MODE) == MODE_FLOAT\t\t\t\t\\\n+      || (GET_MODE_CLASS (MODE) == MODE_INT\t\t\t\t\\\n+\t  && GET_MODE_SIZE (MODE) == UNITS_PER_FP_WORD))\t\t\\\n    : ALTIVEC_REGNO_P (REGNO) ? ALTIVEC_VECTOR_MODE (MODE)\t\t\\\n    : SPE_SIMD_REGNO_P (REGNO) && TARGET_SPE && SPE_VECTOR_MODE (MODE) ? 1 \\\n    : CR_REGNO_P (REGNO) ? GET_MODE_CLASS (MODE) == MODE_CC\t\t\\\n    : XER_REGNO_P (REGNO) ? (MODE) == PSImode\t\t\t\t\\\n-   : ! INT_REGNO_P (REGNO) ? GET_MODE_SIZE (MODE) <= UNITS_PER_WORD\t\\\n-   : 1)\n+   : GET_MODE_SIZE (MODE) <= UNITS_PER_WORD)\n \n /* Value is 1 if it is a good idea to tie two pseudo registers\n    when one has mode MODE1 and one has mode MODE2."}]}