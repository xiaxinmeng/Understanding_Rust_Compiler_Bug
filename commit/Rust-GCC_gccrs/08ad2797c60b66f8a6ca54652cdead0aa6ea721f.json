{"sha": "08ad2797c60b66f8a6ca54652cdead0aa6ea721f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhhZDI3OTdjNjBiNjZmOGE2Y2E1NDY1MmNkZWFkMGFhNmVhNzIxZg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2018-03-22T08:08:07Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2018-03-22T08:08:07Z"}, "message": "re PR c++/84854 (ICE: unexpected expression in cxx_eval_constant_expression, at cp/constexpr.c:4774)\n\n\tPR c++/84854\n\t* semantics.c (finish_if_stmt_cond): Check if the type of the condition\n\tis boolean.\n\n\t* g++.dg/cpp1z/constexpr-if15.C: New test.\n\t* g++.dg/cpp1z/constexpr-if16.C: New test.\n\nFrom-SVN: r258756", "tree": {"sha": "f9899378cfb63c1e7528b102e9bd49112f356ce1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9899378cfb63c1e7528b102e9bd49112f356ce1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08ad2797c60b66f8a6ca54652cdead0aa6ea721f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08ad2797c60b66f8a6ca54652cdead0aa6ea721f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08ad2797c60b66f8a6ca54652cdead0aa6ea721f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08ad2797c60b66f8a6ca54652cdead0aa6ea721f/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2170d4b6ddca526b53e87215dbf6fab5973000c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2170d4b6ddca526b53e87215dbf6fab5973000c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2170d4b6ddca526b53e87215dbf6fab5973000c7"}], "stats": {"total": 48, "additions": 47, "deletions": 1}, "files": [{"sha": "f9e7a57ec03dffb235c7916a267f2e1a23cfc058", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08ad2797c60b66f8a6ca54652cdead0aa6ea721f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08ad2797c60b66f8a6ca54652cdead0aa6ea721f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=08ad2797c60b66f8a6ca54652cdead0aa6ea721f", "patch": "@@ -1,3 +1,9 @@\n+2018-03-22  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/84854\n+\t* semantics.c (finish_if_stmt_cond): Check if the type of the condition\n+\tis boolean.\n+\n 2018-03-21  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/81311 - wrong C++17 overload resolution."}, {"sha": "97fa57ae94e54b12faec1e984ba46ac73e127e46", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08ad2797c60b66f8a6ca54652cdead0aa6ea721f/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08ad2797c60b66f8a6ca54652cdead0aa6ea721f/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=08ad2797c60b66f8a6ca54652cdead0aa6ea721f", "patch": "@@ -733,7 +733,10 @@ finish_if_stmt_cond (tree cond, tree if_stmt)\n   if (IF_STMT_CONSTEXPR_P (if_stmt)\n       && !type_dependent_expression_p (cond)\n       && require_constant_expression (cond)\n-      && !value_dependent_expression_p (cond))\n+      && !value_dependent_expression_p (cond)\n+      /* Wait until instantiation time, since only then COND has been\n+\t converted to bool.  */\n+      && TREE_TYPE (cond) == boolean_type_node)\n     {\n       cond = instantiate_non_dependent_expr (cond);\n       cond = cxx_constant_value (cond, NULL_TREE);"}, {"sha": "00b804c701893c07153f7d2231f43e162004d1d1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08ad2797c60b66f8a6ca54652cdead0aa6ea721f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08ad2797c60b66f8a6ca54652cdead0aa6ea721f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=08ad2797c60b66f8a6ca54652cdead0aa6ea721f", "patch": "@@ -1,3 +1,9 @@\n+2018-03-22  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/84854\n+\t* g++.dg/cpp1z/constexpr-if15.C: New test.\n+\t* g++.dg/cpp1z/constexpr-if16.C: New test.\n+\n 2018-03-21  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/builtin-tgmath-3.c: New test."}, {"sha": "9a9053c3305066deab72bbb4351d29b1cf73c35a", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-if15.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08ad2797c60b66f8a6ca54652cdead0aa6ea721f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08ad2797c60b66f8a6ca54652cdead0aa6ea721f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if15.C?ref=08ad2797c60b66f8a6ca54652cdead0aa6ea721f", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/84854\n+// { dg-options -std=c++17 }\n+\n+constexpr int foo () { return 1; }\n+constexpr int foo (int) { return 2; }\n+\n+template <typename>\n+void a()\n+{\n+  if constexpr(foo) { };\n+}"}, {"sha": "31a149702fd41e41864b02c549802d2caf147270", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-if16.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08ad2797c60b66f8a6ca54652cdead0aa6ea721f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08ad2797c60b66f8a6ca54652cdead0aa6ea721f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if16.C?ref=08ad2797c60b66f8a6ca54652cdead0aa6ea721f", "patch": "@@ -0,0 +1,20 @@\n+// { dg-options -std=c++17 }\n+\n+struct A\n+{\n+  constexpr operator bool () { return true; }\n+  int i;\n+};\n+\n+A a;\n+\n+template <class T> void f()\n+{\n+  constexpr bool b = a;\n+  if constexpr (a) { }\n+}\n+\n+int main()\n+{\n+  f<int>();\n+}"}]}