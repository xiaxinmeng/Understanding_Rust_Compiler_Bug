{"sha": "39fc3cc7785b6e38cad746fdb449cc67a0929a06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzlmYzNjYzc3ODViNmUzOGNhZDc0NmZkYjQ0OWNjNjdhMDkyOWEwNg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2001-08-29T16:04:13Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2001-08-29T16:04:13Z"}, "message": "* h8300.h (RETURN_ADDR_RTX): New.\n\nFrom-SVN: r45262", "tree": {"sha": "367755e017788d096031ebab2a416304bd5d35f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/367755e017788d096031ebab2a416304bd5d35f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39fc3cc7785b6e38cad746fdb449cc67a0929a06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39fc3cc7785b6e38cad746fdb449cc67a0929a06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39fc3cc7785b6e38cad746fdb449cc67a0929a06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39fc3cc7785b6e38cad746fdb449cc67a0929a06/comments", "author": null, "committer": null, "parents": [{"sha": "b3a68dbae82fa22528936f7eb25c7acab1eaa6d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3a68dbae82fa22528936f7eb25c7acab1eaa6d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3a68dbae82fa22528936f7eb25c7acab1eaa6d0"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "796b2080944d453c03b34d7c460520f3b373e987", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39fc3cc7785b6e38cad746fdb449cc67a0929a06/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39fc3cc7785b6e38cad746fdb449cc67a0929a06/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=39fc3cc7785b6e38cad746fdb449cc67a0929a06", "patch": "@@ -1,3 +1,7 @@\n+2001-08-29  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* h8300.h (RETURN_ADDR_RTX): New.\n+\n 2001-08-29  Kazu Hirata  <kazu@hxi.com>\n \n \t* h8300.md (movsi_h8300hs): Optimize loading of several"}, {"sha": "ea1d3e8df0a8afd4937d41fcad3ceb743c38ceaa", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39fc3cc7785b6e38cad746fdb449cc67a0929a06/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39fc3cc7785b6e38cad746fdb449cc67a0929a06/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=39fc3cc7785b6e38cad746fdb449cc67a0929a06", "patch": "@@ -495,6 +495,15 @@ enum reg_class {\n \n #define STARTING_FRAME_OFFSET 0\n \n+/* We do not know if the caller has a frame pointer, so we cannot go\n+   beyond level 0.  */\n+\n+#define RETURN_ADDR_RTX(COUNT, FRAME)\t\t\t\t\t   \\\n+  ((COUNT) == 0\t\t\t\t\t\t\t\t   \\\n+   ? gen_rtx_MEM (Pmode,\t\t\t\t\t\t   \\\n+\t\t  plus_constant (arg_pointer_rtx, -GET_MODE_SIZE (Pmode))) \\\n+   : 0)\n+\n /* If we generate an insn to push BYTES bytes,\n    this says how many the stack pointer really advances by.\n "}]}