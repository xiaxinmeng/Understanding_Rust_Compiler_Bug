{"sha": "e2790e1eab7bfaae5a733ed742a59a518253a645", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI3OTBlMWVhYjdiZmFhZTVhNzMzZWQ3NDJhNTlhNTE4MjUzYTY0NQ==", "commit": {"author": {"name": "Cherry Zhang", "email": "cherryyz@google.com", "date": "2019-07-02T16:47:48Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-07-02T16:47:48Z"}, "message": "compiler: use builtin memset for non-pointer memclr\n    \n    For zeroing a range of memory that doesn't contain pointer, we\n    can use builtin memset directly.\n    \n    Reviewed-on: https://go-review.googlesource.com/c/gofrontend/+/184438\n\n\t* go-gcc.cc (Gcc_backend::Gcc_backend): Define __builtin_memset.\n\nFrom-SVN: r272944", "tree": {"sha": "b3c80682051e61f7267a88209da91bec78937dff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3c80682051e61f7267a88209da91bec78937dff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2790e1eab7bfaae5a733ed742a59a518253a645", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2790e1eab7bfaae5a733ed742a59a518253a645", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2790e1eab7bfaae5a733ed742a59a518253a645", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2790e1eab7bfaae5a733ed742a59a518253a645/comments", "author": {"login": "cherrymui", "id": 14119929, "node_id": "MDQ6VXNlcjE0MTE5OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/14119929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cherrymui", "html_url": "https://github.com/cherrymui", "followers_url": "https://api.github.com/users/cherrymui/followers", "following_url": "https://api.github.com/users/cherrymui/following{/other_user}", "gists_url": "https://api.github.com/users/cherrymui/gists{/gist_id}", "starred_url": "https://api.github.com/users/cherrymui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cherrymui/subscriptions", "organizations_url": "https://api.github.com/users/cherrymui/orgs", "repos_url": "https://api.github.com/users/cherrymui/repos", "events_url": "https://api.github.com/users/cherrymui/events{/privacy}", "received_events_url": "https://api.github.com/users/cherrymui/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dab0477b0bbcc90418a7e1aec40b465de3ec842c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dab0477b0bbcc90418a7e1aec40b465de3ec842c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dab0477b0bbcc90418a7e1aec40b465de3ec842c"}], "stats": {"total": 55, "additions": 40, "deletions": 15}, "files": [{"sha": "60d11875ed3df7f49d28c6218c0391b123b4dfdc", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2790e1eab7bfaae5a733ed742a59a518253a645/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2790e1eab7bfaae5a733ed742a59a518253a645/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=e2790e1eab7bfaae5a733ed742a59a518253a645", "patch": "@@ -1,3 +1,7 @@\n+2019-07-02  Cherry Zhang  <cherryyz@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::Gcc_backend): Define __builtin_memset.\n+\n 2019-06-21  Cherry Zhang  <cherryyz@google.com>\n \n \t* go-gcc.cc (Gcc_backend::Gcc_backend): Define math/bits"}, {"sha": "d9fc1a733402357287df8559c9d88d7471c42f64", "filename": "gcc/go/go-gcc.cc", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2790e1eab7bfaae5a733ed742a59a518253a645/gcc%2Fgo%2Fgo-gcc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2790e1eab7bfaae5a733ed742a59a518253a645/gcc%2Fgo%2Fgo-gcc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-gcc.cc?ref=e2790e1eab7bfaae5a733ed742a59a518253a645", "patch": "@@ -613,6 +613,15 @@ Gcc_backend::Gcc_backend()\n \t\t\t\t\t\tNULL_TREE),\n \t\t       false, false);\n \n+  // We use __builtin_memset for zeroing data.\n+  this->define_builtin(BUILT_IN_MEMSET, \"__builtin_memset\", \"memset\",\n+\t\t       build_function_type_list(void_type_node,\n+\t\t\t\t\t\tptr_type_node,\n+\t\t\t\t\t\tinteger_type_node,\n+\t\t\t\t\t\tsize_type_node,\n+\t\t\t\t\t\tNULL_TREE),\n+\t\t       false, false);\n+\n   // Used by runtime/internal/sys and math/bits.\n   this->define_builtin(BUILT_IN_CTZ, \"__builtin_ctz\", \"ctz\",\n \t\t       build_function_type_list(integer_type_node,"}, {"sha": "11cba0fa8910f6e44fdff42e335e76c91f7e91b0", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2790e1eab7bfaae5a733ed742a59a518253a645/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2790e1eab7bfaae5a733ed742a59a518253a645/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=e2790e1eab7bfaae5a733ed742a59a518253a645", "patch": "@@ -1,4 +1,4 @@\n-1e042a49d6f2e95d371301aa7b911522dc5877f4\n+7f753feb8df400d6ed17cdbdfb364f7f3a42fb31\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "d52155183c624f83efa8e4cff25abeba1b7fee14", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2790e1eab7bfaae5a733ed742a59a518253a645/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2790e1eab7bfaae5a733ed742a59a518253a645/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=e2790e1eab7bfaae5a733ed742a59a518253a645", "patch": "@@ -8910,10 +8910,16 @@ Builtin_call_expression::flatten_append(Gogo* gogo, Named_object* function,\n           a2 = Expression::make_type_info(element_type, TYPE_INFO_SIZE);\n           a2 = Expression::make_binary(OPERATOR_MULT, a2, ref, loc);\n \n-          Runtime::Function code = (element_type->has_pointer()\n-                                    ? Runtime::MEMCLRHASPTR\n-                                    : Runtime::MEMCLRNOPTR);\n-          call = Runtime::make_call(code, loc, 2, a1, a2);\n+          if (element_type->has_pointer())\n+            call = Runtime::make_call(Runtime::MEMCLRHASPTR, loc, 2, a1, a2);\n+          else\n+            {\n+              Type* int32_type = Type::lookup_integer_type(\"int32\");\n+              Expression* zero =\n+                Expression::make_integer_ul(0, int32_type, loc);\n+              call = Runtime::make_call(Runtime::BUILTIN_MEMSET, loc, 3, a1,\n+                                        zero, a2);\n+            }\n \n           if (element_type->has_pointer())\n             {"}, {"sha": "f510a65e7b73e008069a5f9e07e5b5cac4b67a31", "filename": "gcc/go/gofrontend/runtime.def", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2790e1eab7bfaae5a733ed742a59a518253a645/gcc%2Fgo%2Fgofrontend%2Fruntime.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2790e1eab7bfaae5a733ed742a59a518253a645/gcc%2Fgo%2Fgofrontend%2Fruntime.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fruntime.def?ref=e2790e1eab7bfaae5a733ed742a59a518253a645", "patch": "@@ -351,10 +351,6 @@ DEF_GO_RUNTIME(GCWRITEBARRIER, \"runtime.gcWriteBarrier\",\n DEF_GO_RUNTIME(TYPEDMEMMOVE, \"runtime.typedmemmove\",\n \t       P3(TYPE, POINTER, POINTER), R0())\n \n-// Clear memory that contains no pointer.\n-DEF_GO_RUNTIME(MEMCLRNOPTR, \"runtime.memclrNoHeapPointers\",\n-               P2(POINTER, UINTPTR), R0())\n-\n // Clear memory that contains pointer.\n DEF_GO_RUNTIME(MEMCLRHASPTR, \"runtime.memclrHasPointers\",\n                P2(POINTER, UINTPTR), R0())\n@@ -414,6 +410,10 @@ DEF_GO_RUNTIME(UNREACHABLE, \"__builtin_unreachable\", P0(), R0())\n DEF_GO_RUNTIME(BUILTIN_MEMMOVE, \"__builtin_memmove\",\n                P3(POINTER, POINTER, UINTPTR), R0())\n \n+// Memset, used for zeroing memory.\n+DEF_GO_RUNTIME(BUILTIN_MEMSET, \"__builtin_memset\",\n+               P3(POINTER, INT32, UINTPTR), R0())\n+\n // Various intrinsics.\n \n // Get the caller's PC, used for runtime.getcallerpc."}, {"sha": "968c8a01b5787a1726b6779696047f0052896a07", "filename": "gcc/go/gofrontend/statements.cc", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2790e1eab7bfaae5a733ed742a59a518253a645/gcc%2Fgo%2Fgofrontend%2Fstatements.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2790e1eab7bfaae5a733ed742a59a518253a645/gcc%2Fgo%2Fgofrontend%2Fstatements.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fstatements.cc?ref=e2790e1eab7bfaae5a733ed742a59a518253a645", "patch": "@@ -6882,12 +6882,18 @@ For_range_statement::lower_array_range_clear(Gogo* gogo,\n   Temporary_statement* ts2 = Statement::make_temporary(NULL, e2, loc);\n   b->add_statement(ts2);\n \n-  Expression* arg1 = Expression::make_temporary_reference(ts1, loc);\n-  Expression* arg2 = Expression::make_temporary_reference(ts2, loc);\n-  Runtime::Function code = (elem_type->has_pointer()\n-                            ? Runtime::MEMCLRHASPTR\n-                            : Runtime::MEMCLRNOPTR);\n-  Expression* call = Runtime::make_call(code, loc, 2, arg1, arg2);\n+  Expression* ptr_arg = Expression::make_temporary_reference(ts1, loc);\n+  Expression* sz_arg = Expression::make_temporary_reference(ts2, loc);\n+  Expression* call;\n+  if (elem_type->has_pointer())\n+    call = Runtime::make_call(Runtime::MEMCLRHASPTR, loc, 2, ptr_arg, sz_arg);\n+  else\n+    {\n+      Type* int32_type = Type::lookup_integer_type(\"int32\");\n+      Expression* zero = Expression::make_integer_ul(0, int32_type, loc);\n+      call = Runtime::make_call(Runtime::BUILTIN_MEMSET, loc, 3, ptr_arg,\n+                                zero, sz_arg);\n+    }\n   Statement* cs3 = Statement::make_statement(call, true);\n   b->add_statement(cs3);\n "}]}