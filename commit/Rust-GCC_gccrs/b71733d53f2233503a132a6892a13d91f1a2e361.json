{"sha": "b71733d53f2233503a132a6892a13d91f1a2e361", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjcxNzMzZDUzZjIyMzM1MDNhMTMyYTY4OTJhMTNkOTFmMWEyZTM2MQ==", "commit": {"author": {"name": "Greg McGary", "email": "gkm@gnu.org", "date": "1999-11-19T00:23:01Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "1999-11-19T00:23:01Z"}, "message": "m68kelf.h: Suppress '/* within comment' warning.\n\n* config/m68k/m68kelf.h: Suppress '/* within comment' warning.\n\n* config/m68k/m68k.h (MASK_PCREL): Don't use same value as\nMASK_ALIGN_INT.\n\n* config/m68k/m68k.h (MASK_NO_STRICT_ALIGNMENT): New macro.\n(TARGET_STRICT_ALIGNMENT): New macro.\n(TARGET_SWITCHES): Add \"strict-align\" and \"no-strict-align\".\n(STRICT_ALIGNMENT): Depend on TARGET_STRICT_ALIGNMENT.\n* invoke.texi (M680x0 Options): Document -mstrict-align.\n\nCo-Authored-By: Geoff Keating <geoffk@cygnus.com>\n\nFrom-SVN: r30579", "tree": {"sha": "78079b1605891648f963c32a19cc993c58c1e6a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78079b1605891648f963c32a19cc993c58c1e6a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b71733d53f2233503a132a6892a13d91f1a2e361", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b71733d53f2233503a132a6892a13d91f1a2e361", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b71733d53f2233503a132a6892a13d91f1a2e361", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b71733d53f2233503a132a6892a13d91f1a2e361/comments", "author": null, "committer": null, "parents": [{"sha": "2450a057297b5bf665b98e9594ac6799c8a7e5fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2450a057297b5bf665b98e9594ac6799c8a7e5fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2450a057297b5bf665b98e9594ac6799c8a7e5fb"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "f5f41250dd1ec7ca8797fda565d0160d8c7824db", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b71733d53f2233503a132a6892a13d91f1a2e361/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b71733d53f2233503a132a6892a13d91f1a2e361/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b71733d53f2233503a132a6892a13d91f1a2e361", "patch": "@@ -1,3 +1,17 @@\n+Fri Nov 19 11:11:55 1999  Greg McGary  <gkm@gnu.org>\n+\t\t\t  Geoffrey Keating  <geoffk@cygnus.com>\n+\n+\t* config/m68k/m68kelf.h: Suppress '/* within comment' warning.\n+\n+\t* config/m68k/m68k.h (MASK_PCREL): Don't use same value as\n+\tMASK_ALIGN_INT.\n+\t\n+\t* config/m68k/m68k.h (MASK_NO_STRICT_ALIGNMENT): New macro.\n+\t(TARGET_STRICT_ALIGNMENT): New macro.\n+\t(TARGET_SWITCHES): Add \"strict-align\" and \"no-strict-align\".\n+\t(STRICT_ALIGNMENT): Depend on TARGET_STRICT_ALIGNMENT.\n+\t* invoke.texi (M680x0 Options): Document -mstrict-align.\n+\n Thu Nov 18 11:10:03 1999  Jan Hubicka  <hubicka@freesoft.cz>\n \t\t\t  Richard Henderson  <rth@cygnus.com>\n "}, {"sha": "62fd7595472757f236fe15efa122ee9c2124dd74", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b71733d53f2233503a132a6892a13d91f1a2e361/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b71733d53f2233503a132a6892a13d91f1a2e361/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=b71733d53f2233503a132a6892a13d91f1a2e361", "patch": "@@ -132,9 +132,13 @@ extern int target_flags;\n    treated as all containing an implicit PC-relative component, and hence\n    cannot be used directly as addresses for memory writes.  See the comments\n    in m68k.c for more information.  */\n-#define MASK_PCREL\t4096\n+#define MASK_PCREL\t8192\n #define TARGET_PCREL\t(target_flags & MASK_PCREL)\n \n+/* Relax strict alignment. */\n+#define MASK_NO_STRICT_ALIGNMENT 16384\n+#define TARGET_STRICT_ALIGNMENT  (~target_flags & MASK_NO_STRICT_ALIGNMENT)\n+\n /* Macro to define tables used to set the flags.\n    This is a list in braces of pairs in braces,\n    each pair being { \"NAME\", VALUE }\n@@ -194,6 +198,8 @@ extern int target_flags;\n     { \"align-int\", MASK_ALIGN_INT },\t\t\t\t\t\\\n     { \"no-align-int\", -MASK_ALIGN_INT },\t\t\t\t\\\n     { \"pcrel\", MASK_PCREL},\t\t\t\t\t\t\\\n+    { \"strict-align\", -MASK_NO_STRICT_ALIGNMENT},\t\t\t\\\n+    { \"no-strict-align\", MASK_NO_STRICT_ALIGNMENT},\t\t\t\\\n     SUBTARGET_SWITCHES\t\t\t\t\t\t\t\\\n     { \"\", TARGET_DEFAULT}}\n /* TARGET_DEFAULT is defined in sun*.h and isi.h, etc.  */\n@@ -304,7 +310,7 @@ extern int target_flags;\n \n /* Set this nonzero if move instructions will actually fail to work\n    when given unaligned data.  */\n-#define STRICT_ALIGNMENT 1\n+#define STRICT_ALIGNMENT (TARGET_STRICT_ALIGNMENT)\n \n /* Maximum power of 2 that code can be aligned to.  */\n #define MAX_CODE_ALIGN\t2\t\t\t/* 4 byte alignment */"}, {"sha": "7ac21b6ba4a534f9ed7397af92c63fc3f21bc400", "filename": "gcc/config/m68k/m68kelf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b71733d53f2233503a132a6892a13d91f1a2e361/gcc%2Fconfig%2Fm68k%2Fm68kelf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b71733d53f2233503a132a6892a13d91f1a2e361/gcc%2Fconfig%2Fm68k%2Fm68kelf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68kelf.h?ref=b71733d53f2233503a132a6892a13d91f1a2e361", "patch": "@@ -22,7 +22,7 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-/* #notinclude \"m68k/sgs.h\"\t/* The m68k/SVR4 assembler is SGS based */\n+/* #notinclude \"m68k/sgs.h\"\t/ * The m68k/SVR4 assembler is SGS based */\n \n /* These are necessary for -fpic/-fPIC to work correctly.  */\n #ifndef MOTOROLA"}, {"sha": "1784fb94c20aebeb52f866d51ad667cb4837b4ee", "filename": "gcc/invoke.texi", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b71733d53f2233503a132a6892a13d91f1a2e361/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b71733d53f2233503a132a6892a13d91f1a2e361/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=b71733d53f2233503a132a6892a13d91f1a2e361", "patch": "@@ -221,7 +221,7 @@ in the following sections.\n -m68000  -m68020  -m68020-40  -m68020-60  -m68030  -m68040\n -m68060  -mcpu32 -m5200  -m68881  -mbitfield  -mc68000  -mc68020  \n -mfpa -mnobitfield  -mrtd  -mshort  -msoft-float  -mpcrel\n--malign-int\n+-malign-int -mstrict-align\n \n @emph{VAX Options}\n -mg  -mgnu  -munix\n@@ -3831,6 +3831,12 @@ allowing at most a 16-bit offset for pc-relative addressing.  -fPIC is\n not presently supported with -mpcrel, though this could be supported for\n 68020 and higher processors.\n \n+@item -mno-strict-align\n+@itemx -mstrict-align\n+@kindex -mstrict-align\n+Do not (do) assume that unaligned memory references will be handled by\n+the system.\n+\n @end table\n \n @node VAX Options"}]}