{"sha": "4262839e12747458dddc905525271e115e3bfe83", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI2MjgzOWUxMjc0NzQ1OGRkZGM5MDU1MjUyNzFlMTE1ZTNiZmU4Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-10-03T18:19:12Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-10-03T18:19:12Z"}, "message": "i386.c (ix86_expand_vec_perm_vpermi2): Fix up formatting.\n\n\t* config/i386/i386.c (ix86_expand_vec_perm_vpermi2): Fix up formatting.\n\t(ix86_expand_vec_perm): Only call ix86_expand_vec_perm_vpermi2 if\n\tTARGET_AVX512F.\n\t(expand_vec_perm_1): Likewise.\n\nFrom-SVN: r215868", "tree": {"sha": "12e4a5f6a9d2c4338d87463ffe95f28069b32388", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12e4a5f6a9d2c4338d87463ffe95f28069b32388"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4262839e12747458dddc905525271e115e3bfe83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4262839e12747458dddc905525271e115e3bfe83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4262839e12747458dddc905525271e115e3bfe83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4262839e12747458dddc905525271e115e3bfe83/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "342382107e44eb5c91628f9ada8f623b065eba2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/342382107e44eb5c91628f9ada8f623b065eba2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/342382107e44eb5c91628f9ada8f623b065eba2f"}], "stats": {"total": 49, "additions": 31, "deletions": 18}, "files": [{"sha": "7e1272c82c3540b7fdaf27fbe0deff3c510d35f8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4262839e12747458dddc905525271e115e3bfe83/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4262839e12747458dddc905525271e115e3bfe83/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4262839e12747458dddc905525271e115e3bfe83", "patch": "@@ -1,3 +1,10 @@\n+2014-10-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/i386/i386.c (ix86_expand_vec_perm_vpermi2): Fix up formatting.\n+\t(ix86_expand_vec_perm): Only call ix86_expand_vec_perm_vpermi2 if\n+\tTARGET_AVX512F.\n+\t(expand_vec_perm_1): Likewise.\n+\n 2014-10-03  Jakub Jelinek  <jakub@redhat.com>\n \t    Uros Bizjak  <ubizjak@gmail.com>\n "}, {"sha": "ed8fe2d920933bac1c00b5bad9d58b2e497cf978", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 24, "deletions": 18, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4262839e12747458dddc905525271e115e3bfe83/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4262839e12747458dddc905525271e115e3bfe83/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=4262839e12747458dddc905525271e115e3bfe83", "patch": "@@ -21373,21 +21373,23 @@ ix86_expand_vec_perm_vpermi2 (rtx target, rtx op0, rtx mask, rtx op1)\n     {\n     case V16SImode:\n       emit_insn (gen_avx512f_vpermi2varv16si3 (target, op0,\n-\t\t\t\t\t      force_reg (V16SImode, mask),\n-\t\t\t\t\t      op1));\n+\t\t\t\t\t       force_reg (V16SImode, mask),\n+\t\t\t\t\t       op1));\n       return true;\n     case V16SFmode:\n       emit_insn (gen_avx512f_vpermi2varv16sf3 (target, op0,\n-\t\t\t\t\t      force_reg (V16SImode, mask),\n-\t\t\t\t\t      op1));\n+\t\t\t\t\t       force_reg (V16SImode, mask),\n+\t\t\t\t\t       op1));\n       return true;\n     case V8DImode:\n       emit_insn (gen_avx512f_vpermi2varv8di3 (target, op0,\n-\t\t\t\t\t     force_reg (V8DImode, mask), op1));\n+\t\t\t\t\t      force_reg (V8DImode, mask),\n+\t\t\t\t\t      op1));\n       return true;\n     case V8DFmode:\n       emit_insn (gen_avx512f_vpermi2varv8df3 (target, op0,\n-\t\t\t\t\t     force_reg (V8DImode, mask), op1));\n+\t\t\t\t\t      force_reg (V8DImode, mask),\n+\t\t\t\t\t      op1));\n       return true;\n     default:\n       return false;\n@@ -21414,7 +21416,8 @@ ix86_expand_vec_perm (rtx operands[])\n   e = GET_MODE_UNIT_SIZE (mode);\n   gcc_assert (w <= 64);\n \n-  if (ix86_expand_vec_perm_vpermi2 (target, op0, mask, op1))\n+  if (TARGET_AVX512F\n+      && ix86_expand_vec_perm_vpermi2 (target, op0, mask, op1))\n     return;\n \n   if (TARGET_AVX2)\n@@ -43231,17 +43234,20 @@ expand_vec_perm_1 (struct expand_vec_perm_d *d)\n     return true;\n \n   /* Try the AVX512F vpermi2 instructions.  */\n-  rtx vec[64];\n-  enum machine_mode mode = d->vmode;\n-  if (mode == V8DFmode)\n-    mode = V8DImode;\n-  else if (mode == V16SFmode)\n-    mode = V16SImode;\n-  for (i = 0; i < nelt; ++i)\n-    vec[i] = GEN_INT (d->perm[i]);\n-  rtx mask = gen_rtx_CONST_VECTOR (mode, gen_rtvec_v (nelt, vec));\n-  if (ix86_expand_vec_perm_vpermi2 (d->target, d->op0, mask, d->op1))\n-    return true;\n+  if (TARGET_AVX512F)\n+    {\n+      rtx vec[64];\n+      enum machine_mode mode = d->vmode;\n+      if (mode == V8DFmode)\n+\tmode = V8DImode;\n+      else if (mode == V16SFmode)\n+\tmode = V16SImode;\n+      for (i = 0; i < nelt; ++i)\n+\tvec[i] = GEN_INT (d->perm[i]);\n+      rtx mask = gen_rtx_CONST_VECTOR (mode, gen_rtvec_v (nelt, vec));\n+      if (ix86_expand_vec_perm_vpermi2 (d->target, d->op0, mask, d->op1))\n+\treturn true;\n+    }\n \n   return false;\n }"}]}