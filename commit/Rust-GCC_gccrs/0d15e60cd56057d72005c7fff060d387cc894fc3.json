{"sha": "0d15e60cd56057d72005c7fff060d387cc894fc3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQxNWU2MGNkNTYwNTdkNzIwMDVjN2ZmZjA2MGQzODdjYzg5NGZjMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-01-05T03:21:00Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-01-05T03:21:00Z"}, "message": "(get_inner_reference): Fix type error.\n\n(expand_expr, case COMPONENT_REF): Don't convert if modifier\nis EXPAND_CONST_ADDRESS, EXPAND_SUM, or EXPAND_INITIALIZER.\n\nFrom-SVN: r13375", "tree": {"sha": "9a715f339d3327c017c27359b8754d19f113891e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a715f339d3327c017c27359b8754d19f113891e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d15e60cd56057d72005c7fff060d387cc894fc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d15e60cd56057d72005c7fff060d387cc894fc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d15e60cd56057d72005c7fff060d387cc894fc3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d15e60cd56057d72005c7fff060d387cc894fc3/comments", "author": null, "committer": null, "parents": [{"sha": "5cb1f2fa910c2132a95e9198c2966a1295937875", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cb1f2fa910c2132a95e9198c2966a1295937875", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cb1f2fa910c2132a95e9198c2966a1295937875"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "eeed0b08c30edcffc323f1124f7c7f1df873f765", "filename": "gcc/expr.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d15e60cd56057d72005c7fff060d387cc894fc3/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d15e60cd56057d72005c7fff060d387cc894fc3/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=0d15e60cd56057d72005c7fff060d387cc894fc3", "patch": "@@ -4304,7 +4304,8 @@ get_inner_reference (exp, pbitsize, pbitpos, poffset, pmode,\n \t    }\n \n \t  index = fold (build (MULT_EXPR, index_type, index,\n-\t\t\t       TYPE_SIZE (TREE_TYPE (exp))));\n+\t\t\t       convert (index_type,\n+\t\t\t\t\tTYPE_SIZE (TREE_TYPE (exp)))));\n \n \t  if (TREE_CODE (index) == INTEGER_CST\n \t      && TREE_INT_CST_HIGH (index) == 0)\n@@ -5670,10 +5671,13 @@ expand_expr (exp, target, tmode, modifier)\n \n \tMEM_IN_STRUCT_P (op0) = 1;\n \tMEM_VOLATILE_P (op0) |= volatilep;\n-\tif (mode == mode1 || mode1 == BLKmode || mode1 == tmode)\n+\tif (mode == mode1 || mode1 == BLKmode || mode1 == tmode\n+\t    || modifier == EXPAND_CONST_ADDRESS || modifier == EXPAND_SUM\n+\t    || modifier == EXPAND_INITIALIZER)\n \t  return op0;\n-\tif (target == 0)\n+\telse if (target == 0)\n \t  target = gen_reg_rtx (tmode != VOIDmode ? tmode : mode);\n+\n \tconvert_move (target, op0, unsignedp);\n \treturn target;\n       }"}]}