{"sha": "68e58c33468f3523c1eb6232d0a4d1e949db3011", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhlNThjMzM0NjhmMzUyM2MxZWI2MjMyZDBhNGQxZTk0OWRiMzAxMQ==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2005-12-05T19:37:11Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2005-12-05T19:37:11Z"}, "message": "host-darwin.c (segv_handler): Unblock SEGV so we don't go into an infinite loop.\n\n\t* config/rs6000/host-darwin.c (segv_handler): Unblock SEGV so\n\twe don't go into an infinite loop.\n\nFrom-SVN: r108070", "tree": {"sha": "e450f27873614a518a1821132358d8caac91e0b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e450f27873614a518a1821132358d8caac91e0b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68e58c33468f3523c1eb6232d0a4d1e949db3011", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68e58c33468f3523c1eb6232d0a4d1e949db3011", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68e58c33468f3523c1eb6232d0a4d1e949db3011", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68e58c33468f3523c1eb6232d0a4d1e949db3011/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c44ca1626c8e2b6519a6ae58780a55a741fd42e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c44ca1626c8e2b6519a6ae58780a55a741fd42e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c44ca1626c8e2b6519a6ae58780a55a741fd42e2"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "57153ed8e4ba6ae29b5bf60a71310885d592bb0e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e58c33468f3523c1eb6232d0a4d1e949db3011/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e58c33468f3523c1eb6232d0a4d1e949db3011/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=68e58c33468f3523c1eb6232d0a4d1e949db3011", "patch": "@@ -1,3 +1,8 @@\n+2005-12-05  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* config/rs6000/host-darwin.c (segv_handler): Unblock SEGV so\n+\twe don't go into an infinite loop.\n+\n 2005-12-05  Paolo Bonzini  <bonzini@gnu.org>\n \n         * config/rs6000/predicates.md (logical_const_operand): Split"}, {"sha": "75c92a2a25bd4620125839f71edcc8f0861a6ca6", "filename": "gcc/config/rs6000/host-darwin.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e58c33468f3523c1eb6232d0a4d1e949db3011/gcc%2Fconfig%2Frs6000%2Fhost-darwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e58c33468f3523c1eb6232d0a4d1e949db3011/gcc%2Fconfig%2Frs6000%2Fhost-darwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fhost-darwin.c?ref=68e58c33468f3523c1eb6232d0a4d1e949db3011", "patch": "@@ -58,11 +58,15 @@ segv_handler (int sig ATTRIBUTE_UNUSED,\n \t      void *scp)\n {\n   ucontext_t *uc = (ucontext_t *)scp;\n+  sigset_t sigset;\n   unsigned faulting_insn;\n \n   /* The fault might have happened when trying to run some instruction, in\n      which case the next line will segfault _again_.  Handle this case.  */\n   signal (SIGSEGV, segv_crash_handler);\n+  sigemptyset (&sigset);\n+  sigaddset (&sigset, SIGSEGV);\n+  sigprocmask (SIG_UNBLOCK, &sigset, NULL);\n \n   faulting_insn = *(unsigned *)uc->uc_mcontext->ss.srr0;\n "}]}