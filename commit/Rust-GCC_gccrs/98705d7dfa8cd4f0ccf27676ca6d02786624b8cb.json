{"sha": "98705d7dfa8cd4f0ccf27676ca6d02786624b8cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTg3MDVkN2RmYThjZDRmMGNjZjI3Njc2Y2E2ZDAyNzg2NjI0YjhjYg==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2004-11-30T19:15:38Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2004-11-30T19:15:38Z"}, "message": "altivec.h (vec_step_help): Support const vector types.\n\n\t* config/rs6000/altivec.h (vec_step_help): Support const vector types.\n\t* g++.dg/ext/altivec-13.C: New test.\n\nFrom-SVN: r91533", "tree": {"sha": "811d2cf455f5e0bb4a839fabb368396d704245d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/811d2cf455f5e0bb4a839fabb368396d704245d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98705d7dfa8cd4f0ccf27676ca6d02786624b8cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98705d7dfa8cd4f0ccf27676ca6d02786624b8cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98705d7dfa8cd4f0ccf27676ca6d02786624b8cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98705d7dfa8cd4f0ccf27676ca6d02786624b8cb/comments", "author": null, "committer": null, "parents": [{"sha": "209e170cf47f93c83786522b00ddba70b9df1a2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/209e170cf47f93c83786522b00ddba70b9df1a2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/209e170cf47f93c83786522b00ddba70b9df1a2d"}], "stats": {"total": 155, "additions": 144, "deletions": 11}, "files": [{"sha": "302ba113349a5f90fc9d5ecacf3d7490f594dda3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98705d7dfa8cd4f0ccf27676ca6d02786624b8cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98705d7dfa8cd4f0ccf27676ca6d02786624b8cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=98705d7dfa8cd4f0ccf27676ca6d02786624b8cb", "patch": "@@ -1,3 +1,7 @@\n+2004-11-30  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* config/rs6000/altivec.h (vec_step_help): Support const vector types.\n+\n 2004-11-30  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR tree-opt/18298"}, {"sha": "0447d9e1fc4c4e787322cd9bc35b47e991dad6a2", "filename": "gcc/config/rs6000/altivec.h", "status": "modified", "additions": 77, "deletions": 11, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98705d7dfa8cd4f0ccf27676ca6d02786624b8cb/gcc%2Fconfig%2Frs6000%2Faltivec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98705d7dfa8cd4f0ccf27676ca6d02786624b8cb/gcc%2Fconfig%2Frs6000%2Faltivec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.h?ref=98705d7dfa8cd4f0ccf27676ca6d02786624b8cb", "patch": "@@ -246,67 +246,133 @@ struct __vec_step_help\n };\n \n template<>\n-struct __vec_step_help<vector signed short>\n+struct __vec_step_help<__vector signed short>\n {\n   static const int _S_elem = 8;\n };\n \n template<>\n-struct __vec_step_help<vector unsigned short>\n+struct __vec_step_help<const __vector signed short>\n {\n   static const int _S_elem = 8;\n };\n \n template<>\n-struct __vec_step_help<vector bool short>\n+struct __vec_step_help<__vector unsigned short>\n {\n   static const int _S_elem = 8;\n };\n \n template<>\n-struct __vec_step_help<vector pixel>\n+struct __vec_step_help<const __vector unsigned short>\n {\n   static const int _S_elem = 8;\n };\n \n template<>\n-struct __vec_step_help<vector signed int>\n+struct __vec_step_help<__vector bool short>\n+{\n+  static const int _S_elem = 8;\n+};\n+\n+template<>\n+struct __vec_step_help<const __vector bool short>\n+{\n+  static const int _S_elem = 8;\n+};\n+\n+template<>\n+struct __vec_step_help<__vector pixel>\n+{\n+  static const int _S_elem = 8;\n+};\n+\n+template<>\n+struct __vec_step_help<const __vector pixel>\n+{\n+  static const int _S_elem = 8;\n+};\n+\n+template<>\n+struct __vec_step_help<__vector signed int>\n+{\n+  static const int _S_elem = 4;\n+};\n+\n+template<>\n+struct __vec_step_help<const __vector signed int>\n {\n   static const int _S_elem = 4;\n };\n \n template<>\n-struct __vec_step_help<vector unsigned int>\n+struct __vec_step_help<__vector unsigned int>\n {\n   static const int _S_elem = 4;\n };\n \n template<>\n-struct __vec_step_help<vector bool int>\n+struct __vec_step_help<const __vector unsigned int>\n {\n   static const int _S_elem = 4;\n };\n \n template<>\n-struct __vec_step_help<vector unsigned char>\n+struct __vec_step_help<__vector bool int>\n+{\n+  static const int _S_elem = 4;\n+};\n+\n+template<>\n+struct __vec_step_help<const __vector bool int>\n+{\n+  static const int _S_elem = 4;\n+};\n+\n+template<>\n+struct __vec_step_help<__vector unsigned char>\n {\n   static const int _S_elem = 16;\n };\n \n template<>\n-struct __vec_step_help<vector signed char>\n+struct __vec_step_help<const __vector unsigned char>\n {\n   static const int _S_elem = 16;\n };\n \n template<>\n-struct __vec_step_help<vector bool char>\n+struct __vec_step_help<__vector signed char>\n {\n   static const int _S_elem = 16;\n };\n \n template<>\n-struct __vec_step_help<vector float>\n+struct __vec_step_help<const __vector signed char>\n+{\n+  static const int _S_elem = 16;\n+};\n+\n+template<>\n+struct __vec_step_help<__vector bool char>\n+{\n+  static const int _S_elem = 16;\n+};\n+\n+template<>\n+struct __vec_step_help<const __vector bool char>\n+{\n+  static const int _S_elem = 16;\n+};\n+\n+template<>\n+struct __vec_step_help<__vector float>\n+{\n+  static const int _S_elem = 4;\n+};\n+\n+template<>\n+struct __vec_step_help<const __vector float>\n {\n   static const int _S_elem = 4;\n };"}, {"sha": "1d12628ebf09783b6a8a5324fe201ec6b3b96ea8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98705d7dfa8cd4f0ccf27676ca6d02786624b8cb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98705d7dfa8cd4f0ccf27676ca6d02786624b8cb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=98705d7dfa8cd4f0ccf27676ca6d02786624b8cb", "patch": "@@ -1,3 +1,7 @@\n+2004-11-30  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* g++.dg/ext/altivec-13.C: New test.\n+\n 2004-11-30  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR tree-opt/18298"}, {"sha": "15ca5cc365016034cc5a955348796d96c8431313", "filename": "gcc/testsuite/g++.dg/ext/altivec-13.C", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98705d7dfa8cd4f0ccf27676ca6d02786624b8cb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98705d7dfa8cd4f0ccf27676ca6d02786624b8cb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-13.C?ref=98705d7dfa8cd4f0ccf27676ca6d02786624b8cb", "patch": "@@ -0,0 +1,59 @@\n+/* Check that vec_step can be used with const vector types.   This\n+   test is derived from parts of gcc.dg/vmx/8-02.c from Motorola's\n+   AltiVec testsuite.  */\n+\n+/* { dg-do compile { target powerpc*-*-* } } */\n+/* { dg-xfail-if \"\" { \"powerpc-ibm-aix*\" } { \"*\" } { \"\" } } */\n+/* { dg-options \"-maltivec\" } */\n+                                                                                \n+#include <altivec.h>\n+\n+extern vector unsigned char vuc;\n+extern vector signed char vsc;\n+extern vector bool char vbc;\n+extern vector unsigned short vus;\n+extern vector signed short vss;\n+extern vector bool short vbs;\n+extern vector unsigned int vui;\n+extern vector signed int vsi;\n+extern vector bool int vbi;\n+extern vector pixel vp;\n+extern vector float vf;\n+extern const vector unsigned char cvuc;\n+extern const vector signed char cvsc;\n+extern const vector bool char cvbc;\n+extern const vector unsigned short cvus;\n+extern const vector signed short cvss;\n+extern const vector bool short cvbs;\n+extern const vector unsigned int cvui;\n+extern const vector signed int cvsi;\n+extern const vector bool int cvbi;\n+extern const vector pixel cvp;\n+extern const vector float cvf;\n+\n+void\n+foo (void)\n+{\n+  int i_vuc = vec_step (vuc);\n+  int i_vsc = vec_step (vsc);\n+  int i_vbc = vec_step (vbc);\n+  int i_vus = vec_step (vus);\n+  int i_vss = vec_step (vss);\n+  int i_vbs = vec_step (vbs);\n+  int i_vui = vec_step (vui);\n+  int i_vsi = vec_step (vsi);\n+  int i_vbi = vec_step (vbi);\n+  int i_vp = vec_step (vp);\n+  int i_vf = vec_step (vf);\n+  int i_cvuc = vec_step (cvuc);\n+  int i_cvsc = vec_step (cvsc);\n+  int i_cvbc = vec_step (cvbc);\n+  int i_cvus = vec_step (cvus);\n+  int i_cvss = vec_step (cvss);\n+  int i_cvbs = vec_step (cvbs);\n+  int i_cvui = vec_step (cvui);\n+  int i_cvsi = vec_step (cvsi);\n+  int i_cvbi = vec_step (cvbi);\n+  int i_cvp = vec_step (cvp);\n+  int i_cvf = vec_step (cvf);\n+}"}]}