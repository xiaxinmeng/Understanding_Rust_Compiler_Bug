{"sha": "c2fe65930a4b48017042e49516eb338c9e241e53", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJmZTY1OTMwYTRiNDgwMTcwNDJlNDk1MTZlYjMzOGM5ZTI0MWU1Mw==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2019-06-27T17:52:00Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2019-06-27T17:52:00Z"}, "message": "re PR fortran/90987 (Wrong error message with variables named \"COMMON*\")\n\n2019-06-27  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/90987\n\t* match.c (gfc_match_common): Adjust parsing of fixed and free form\n\tsource code containing, e.g., COMMONI.\n\n2019-06-27  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/90987\n\t* gfortran.dg/common_1.f: new test.\n\t* gfortran.dg/common_26.f90: Ditto.\n\nFrom-SVN: r272756", "tree": {"sha": "b33219a6ab48866b7456403126706057e7cab1e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b33219a6ab48866b7456403126706057e7cab1e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2fe65930a4b48017042e49516eb338c9e241e53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2fe65930a4b48017042e49516eb338c9e241e53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2fe65930a4b48017042e49516eb338c9e241e53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2fe65930a4b48017042e49516eb338c9e241e53/comments", "author": null, "committer": null, "parents": [{"sha": "76715c3216cf6ccd071fc852920af55d6b0054ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76715c3216cf6ccd071fc852920af55d6b0054ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76715c3216cf6ccd071fc852920af55d6b0054ae"}], "stats": {"total": 72, "additions": 67, "deletions": 5}, "files": [{"sha": "699b072de1c0b2412a4a221d49eb76c9a2af27ac", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2fe65930a4b48017042e49516eb338c9e241e53/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2fe65930a4b48017042e49516eb338c9e241e53/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c2fe65930a4b48017042e49516eb338c9e241e53", "patch": "@@ -1,7 +1,13 @@\n+2019-06-27  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/90987\n+\t* gfortran.dg/common_1.f: new test.\n+\t* gfortran.dg/common_26.f90: Ditto.\n+\n 2019-06-26  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR Fortran/90988\n-\tChangeLog forgotten with revision 272698\n+\tChangeLog forgotten with revision 272667\n \t* decl.c (access_attr_decl): Use temporary variable to reduce\n \tunreadability of code.  Normalize jumping to return.\n \t(gfc_match_protected): Fix parsing error.  Add comments to "}, {"sha": "0f3b2132122816e5044450877547b2f00b3881d1", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2fe65930a4b48017042e49516eb338c9e241e53/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2fe65930a4b48017042e49516eb338c9e241e53/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=c2fe65930a4b48017042e49516eb338c9e241e53", "patch": "@@ -5115,6 +5115,14 @@ gfc_match_common (void)\n   gfc_array_spec *as;\n   gfc_equiv *e1, *e2;\n   match m;\n+  char c;\n+\n+  /* COMMON has been matched.  In free form source code, the next character\n+     needs to be whitespace or '/'.  Check that here.   Fixed form source\n+     code needs to be checked below.  */\n+  c = gfc_peek_ascii_char ();\n+  if (gfc_current_form == FORM_FREE && !gfc_is_whitespace (c) && c != '/')\n+    return MATCH_NO;\n \n   as = NULL;\n \n@@ -5279,10 +5287,24 @@ gfc_match_common (void)\n \t  gfc_gobble_whitespace ();\n \t  if (gfc_match_eos () == MATCH_YES)\n \t    goto done;\n-\t  if (gfc_peek_ascii_char () == '/')\n+\t  c = gfc_peek_ascii_char ();\n+\t  if (c == '/')\n \t    break;\n-\t  if (gfc_match_char (',') != MATCH_YES)\n-\t    goto syntax;\n+\t  if (c != ',')\n+\t    {\n+\t      /* In Fixed form source code, gfortran can end up here for an\n+\t\t expression of the form COMMONI = RHS.  This may not be an\n+\t\t error, so return MATCH_NO.  */\n+\t      if (gfc_current_form == FORM_FIXED && c == '=')\n+\t\t{\n+\t\t  gfc_free_array_spec (as);\n+\t\t  return MATCH_NO;\n+\t\t}\n+\t      goto syntax;\n+\t    }\n+\t  else\n+\t    gfc_match_char (',');\n+\n \t  gfc_gobble_whitespace ();\n \t  if (gfc_peek_ascii_char () == '/')\n \t    break;"}, {"sha": "57aeaa39f7727fbd4ed1c63ceca112fb1b38e7f1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2fe65930a4b48017042e49516eb338c9e241e53/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2fe65930a4b48017042e49516eb338c9e241e53/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c2fe65930a4b48017042e49516eb338c9e241e53", "patch": "@@ -1,3 +1,9 @@\n+2019-06-27  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/90987\n+\t* match.c (gfc_match_common): Adjust parsing of fixed and free form\n+\tsource code containing, e.g., COMMONI.\n+\n 2019-06-27  Jan Hubicka  <jh@suse.cz>\n \n \t* g++.dg/lto/alias-2_0.C: New testcase.\n@@ -63,7 +69,7 @@\n 2019-06-26  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR Fortran/90988\n-\tChangeLog forgotten with revision 272698\n+\tChangeLog forgotten with revision 272667\n \t* gfortran.dg/pr90988_1.f90: New test.\n \t* gfortran.dg/pr90988_2.f90: Ditto.\n \t* gfortran.dg/pr90988_3.f90: Ditto."}, {"sha": "2c5e96aa4fa4a7b95df3bd7d916f150904acd672", "filename": "gcc/testsuite/gfortran.dg/common_1.f", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2fe65930a4b48017042e49516eb338c9e241e53/gcc%2Ftestsuite%2Fgfortran.dg%2Fcommon_1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2fe65930a4b48017042e49516eb338c9e241e53/gcc%2Ftestsuite%2Fgfortran.dg%2Fcommon_1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcommon_1.f?ref=c2fe65930a4b48017042e49516eb338c9e241e53", "patch": "@@ -0,0 +1,14 @@\n+! { dg-do compile }\n+      module mymod\n+      type :: mytyp\n+      integer :: i\n+      end type mytyp\n+      contains\n+      subroutine mysub\n+      implicit none\n+      type(mytyp) :: a\n+      integer :: commoni,commonj\n+      commoni = a%i\n+      commonj = a%j      ! { dg-error \"is not a member of\" }\n+      end subroutine mysub\n+      end module mymod"}, {"sha": "5834d7c53e5316f886597acee87e85eeb5e5f8f7", "filename": "gcc/testsuite/gfortran.dg/common_26.f90", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2fe65930a4b48017042e49516eb338c9e241e53/gcc%2Ftestsuite%2Fgfortran.dg%2Fcommon_26.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2fe65930a4b48017042e49516eb338c9e241e53/gcc%2Ftestsuite%2Fgfortran.dg%2Fcommon_26.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcommon_26.f90?ref=c2fe65930a4b48017042e49516eb338c9e241e53", "patch": "@@ -0,0 +1,14 @@\n+! { dg-do compile }\n+module mymod\n+  type :: mytyp\n+    integer :: i\n+  end type mytyp\n+contains\n+  subroutine mysub\n+    implicit none\n+    type(mytyp) :: a\n+    integer :: commoni,commonj\n+    commoni = a%i\n+    commonj = a%j             ! { dg-error \"is not a member of\" }\n+  end subroutine mysub\n+end module mymod"}]}