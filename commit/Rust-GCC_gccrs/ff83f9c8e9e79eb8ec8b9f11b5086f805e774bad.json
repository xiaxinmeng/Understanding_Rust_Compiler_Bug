{"sha": "ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmY4M2Y5YzhlOWU3OWViOGVjOGI5ZjExYjUwODZmODA1ZTc3NGJhZA==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2014-11-18T10:53:13Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-11-18T10:53:13Z"}, "message": "safe-3.c: Add bind_pic_locally.\n\ngcc/testsuite\n\t* c-c++-common/tm/safe-3.c: Add bind_pic_locally.\n\t* g++.dg/ipa/devirt-15.C: Ditto.\n\t* g++.dg/ipa/devirt-7.C: Ditto.\n\t* g++.dg/ipa/pr60600.C: Ditto.\n\t* g++.dg/opt/vt2.C: Ditto.\n\t* g++.dg/opt/vt4.C: Ditto.\n\t* g++.dg/pr48484.C: Ditto.\n\t* g++.dg/tm/pr47746.C: Ditto.\n\t* g++.dg/tree-ssa/pr57380.C: Ditto.\n\t* gcc.dg/ipa/inline-4.c: Ditto.\n\t* gcc.dg/ipa/inlinehint-1.c: Ditto.\n\t* gcc.dg/ipa/inlinehint-2.c: Ditto.\n\t* gcc.dg/ipa/inlinehint-3.c: Ditto.\n\t* gcc.dg/pr47276.c: Ditto.\n\t* gcc.dg/pure-2.c: Ditto.\n\t* gcc.dg/tm/nested-2.c: Ditto.\n\t* gcc.dg/tree-ssa/alias-29.c: Ditto.\n\t* gcc.target/i386/3dnow-1.c: Ditto.\n\t* gcc.target/i386/3dnow-2.c: Ditto.\n\t* gcc.target/i386/3dnowA-1.c: Ditto.\n\t* gcc.target/i386/3dnowA-2.c: Ditto.\n\t* gcc.target/i386/avx-1.c: Ditto.\n\t* gcc.target/i386/avx-2.c: Ditto.\n\t* gcc.target/i386/memcpy-1.c: Ditto.\n\t* gcc.target/i386/mmx-1.c: Ditto.\n\t* gcc.target/i386/mmx-2.c: Ditto.\n\t* gcc.target/i386/sse-14.c: Ditto.\n\t* gcc.target/i386/sse-22.c: Ditto.\n\t* gcc.target/i386/sse-22a.c: Ditto.\n\t* gcc.target/i386/sse-23.c: Ditto.\n\t* gcc.target/i386/sse-24.c: Ditto.\n\t* gcc.target/i386/vect-double-1.c: Ditto.\n\t* g++.dg/fstack-protector-strong.C: Add target nonpic.\n\t* gcc.dg/fstack-protector-strong.c: Ditto.\n\nFrom-SVN: r217704", "tree": {"sha": "bc65d0d726c8e8cab0519d3e491185db4a22a292", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc65d0d726c8e8cab0519d3e491185db4a22a292"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/comments", "author": null, "committer": null, "parents": [{"sha": "f89e12f21b8ef413a10191c61539c43c81970592", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f89e12f21b8ef413a10191c61539c43c81970592", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f89e12f21b8ef413a10191c61539c43c81970592"}], "stats": {"total": 85, "additions": 83, "deletions": 2}, "files": [{"sha": "689f8870b6b2171c59b1411727c0080de62fad27", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -1,3 +1,40 @@\n+2014-11-18  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\n+\t* c-c++-common/tm/safe-3.c: Add bind_pic_locally.\n+\t* g++.dg/ipa/devirt-15.C: Ditto.\n+\t* g++.dg/ipa/devirt-7.C: Ditto.\n+\t* g++.dg/ipa/pr60600.C: Ditto.\n+\t* g++.dg/opt/vt2.C: Ditto.\n+\t* g++.dg/opt/vt4.C: Ditto.\n+\t* g++.dg/pr48484.C: Ditto.\n+\t* g++.dg/tm/pr47746.C: Ditto.\n+\t* g++.dg/tree-ssa/pr57380.C: Ditto.\n+\t* gcc.dg/ipa/inline-4.c: Ditto.\n+\t* gcc.dg/ipa/inlinehint-1.c: Ditto.\n+\t* gcc.dg/ipa/inlinehint-2.c: Ditto.\n+\t* gcc.dg/ipa/inlinehint-3.c: Ditto.\n+\t* gcc.dg/pr47276.c: Ditto.\n+\t* gcc.dg/pure-2.c: Ditto.\n+\t* gcc.dg/tm/nested-2.c: Ditto.\n+\t* gcc.dg/tree-ssa/alias-29.c: Ditto.\n+\t* gcc.target/i386/3dnow-1.c: Ditto.\n+\t* gcc.target/i386/3dnow-2.c: Ditto.\n+\t* gcc.target/i386/3dnowA-1.c: Ditto.\n+\t* gcc.target/i386/3dnowA-2.c: Ditto.\n+\t* gcc.target/i386/avx-1.c: Ditto.\n+\t* gcc.target/i386/avx-2.c: Ditto.\n+\t* gcc.target/i386/memcpy-1.c: Ditto.\n+\t* gcc.target/i386/mmx-1.c: Ditto.\n+\t* gcc.target/i386/mmx-2.c: Ditto.\n+\t* gcc.target/i386/sse-14.c: Ditto.\n+\t* gcc.target/i386/sse-22.c: Ditto.\n+\t* gcc.target/i386/sse-22a.c: Ditto.\n+\t* gcc.target/i386/sse-23.c: Ditto.\n+\t* gcc.target/i386/sse-24.c: Ditto.\n+\t* gcc.target/i386/vect-double-1.c: Ditto.\n+\t* g++.dg/fstack-protector-strong.C: Add target nonpic.\n+\t* gcc.dg/fstack-protector-strong.c: Ditto.\n+\n 2014-11-18  Hale Wang  <hale.wang@arm.com>\n \n \t* gcc.target/arm/small-multiply-m0-1.c: Only apply when"}, {"sha": "becbd2ff643a602b46fa724f39b0cf9ede91961b", "filename": "gcc/testsuite/c-c++-common/tm/safe-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftm%2Fsafe-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftm%2Fsafe-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftm%2Fsafe-3.c?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-fgnu-tm\" } */\n+/* { dg-add-options bind_pic_locally } */\n \n void f_extern (void);\n void f_first (void);"}, {"sha": "ae6d2fdb8df0dbde5e42afcd975ded4f049847c2", "filename": "gcc/testsuite/g++.dg/fstack-protector-strong.C", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ffstack-protector-strong.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ffstack-protector-strong.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ffstack-protector-strong.C?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -3,6 +3,11 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-O2 -fstack-protector-strong\" } */\n \n+/* This test checks the presence of __stack_chk_fail function in assembler.\n+ * Compiler generates _stack_chk_fail_local (wrapper) calls instead for PIC.\n+ */\n+/* { dg-require-effective-target nonpic } */\n+\n class A\n {\n public:"}, {"sha": "fd8389466e27ebeb658c5fefc8f5bd6190aa0f58", "filename": "gcc/testsuite/g++.dg/ipa/devirt-15.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-15.C?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -2,6 +2,8 @@\n    A is noreturn.  */\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-ipa-devirt-details -fdump-tree-optimized\"  } */\n+/* { dg-add-options bind_pic_locally } */\n+\n class A {\n public:\n   virtual int foo(void)"}, {"sha": "30df64a3704c0affc2799f67a6c2eb06c72161f1", "filename": "gcc/testsuite/g++.dg/ipa/devirt-7.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-7.C?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -2,6 +2,7 @@\n    comes from a method that has been early-inlined into a descendant.  */\n /* { dg-do run } */\n /* { dg-options \"-O3 -fdump-ipa-cp\"  } */\n+/* { dg-add-options bind_pic_locally } */\n \n extern \"C\" void abort (void);\n "}, {"sha": "8f6cd7aed1fa9f609b858b11e856125f0d3ebf4f", "filename": "gcc/testsuite/g++.dg/ipa/pr60600.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr60600.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr60600.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr60600.C?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O3 -fdump-ipa-cp\" } */\n+/* { dg-add-options bind_pic_locally } */\n \n struct data {\n     data(int);"}, {"sha": "780f58775c9b7ea37e90e9aaa8cd58f4540d3437", "filename": "gcc/testsuite/g++.dg/opt/vt2.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fvt2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fvt2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fvt2.C?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -1,5 +1,6 @@\n // PR c++/34949\n // { dg-options \"-O3\" }\n+// { dg-add-options bind_pic_locally }\n // { dg-final { scan-assembler-not \"mov\\[^\\n\\]*_ZTV\" { target i?86-*-* x86_64-*-* } } }\n \n class Foo"}, {"sha": "98378da00f1e44464fc3115c8629c17f90965baf", "filename": "gcc/testsuite/g++.dg/opt/vt4.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fvt4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fvt4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fvt4.C?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -1,6 +1,7 @@\n // PR c++/50243\n // { dg-do compile }\n // { dg-options \"-O\" }\n+// { dg-add-options bind_pic_locally }\n // { dg-final { scan-assembler-not \"_ZTV.A\" } }\n \n void foo ();"}, {"sha": "1380c452fa405939851654e70e2e3432006cfbb0", "filename": "gcc/testsuite/g++.dg/pr48484.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr48484.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr48484.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr48484.C?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O -finline-functions -finline-small-functions -Wuninitialized\" }  */\n-\n+/* { dg-add-options bind_pic_locally } */\n \n struct SQObjectPtr\n {"}, {"sha": "61082976e67b528e3ad7ade698ae8fdc6384074c", "filename": "gcc/testsuite/g++.dg/tm/pr47746.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftm%2Fpr47746.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftm%2Fpr47746.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftm%2Fpr47746.C?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -1,5 +1,6 @@\n // { dg-do compile }\n // { dg-options \"-fgnu-tm\" }\n+/* { dg-add-options bind_pic_locally } */\n \n class InputStream\n {"}, {"sha": "b370292f11e2db7cf5d664d864f0d4837df3ce3c", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr57380.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr57380.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr57380.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr57380.C?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-phiopt1\" } */\n+/* { dg-add-options bind_pic_locally } */\n \n struct my_array {\n     int data[4];"}, {"sha": "8e9d891aceaf84b1f06f8fb08b38e20a40d74289", "filename": "gcc/testsuite/gcc.dg/fstack-protector-strong.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.dg%2Ffstack-protector-strong.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.dg%2Ffstack-protector-strong.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffstack-protector-strong.c?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -3,6 +3,11 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* rs6000-*-* s390x-*-* } } */\n /* { dg-options \"-O2 -fstack-protector-strong\" } */\n \n+/* This test checks the presence of __stack_chk_fail function in assembler.\n+ * Compiler generates _stack_chk_fail_local (wrapper) calls instead for PIC.\n+ */\n+/* { dg-require-effective-target nonpic } */\n+\n #include<string.h>\n \n extern int g0;"}, {"sha": "6df541add54f297da983bb4cd602b9ecaf702c05", "filename": "gcc/testsuite/gcc.dg/ipa/inline-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Finline-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Finline-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Finline-4.c?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-Os -c -fdump-ipa-inline -fno-early-inlining -fno-partial-inlining -fno-ipa-cp\"  } */\n+/* { dg-add-options bind_pic_locally } */\n \n void work_hard (void);\n "}, {"sha": "c1688f18ed1064f4b5a98835c4d12f08f1194b90", "filename": "gcc/testsuite/gcc.dg/ipa/inlinehint-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Finlinehint-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Finlinehint-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Finlinehint-1.c?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -1,4 +1,6 @@\n /* { dg-options \"-O3 -c -fdump-ipa-inline-details -fno-early-inlining -fno-ipa-cp\"  } */\n+/* { dg-add-options bind_pic_locally } */\n+\n void test2 (int);\n int\n test (int a)"}, {"sha": "d1119a56f91fdc1797b72b04b617dfbaaf2f8a6f", "filename": "gcc/testsuite/gcc.dg/ipa/inlinehint-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Finlinehint-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Finlinehint-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Finlinehint-2.c?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -1,4 +1,6 @@\n /* { dg-options \"-O3 -c -fdump-ipa-inline-details -fno-early-inlining -fno-ipa-cp\"  } */\n+/* { dg-add-options bind_pic_locally } */\n+\n int\n t(int s, void **p)\n {"}, {"sha": "6a424ff1672b38e0be2e5ae8bdccd43c5f3bc95c", "filename": "gcc/testsuite/gcc.dg/ipa/inlinehint-3.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Finlinehint-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Finlinehint-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Finlinehint-3.c?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -1,4 +1,6 @@\n /* { dg-options \"-O3 -c -fdump-ipa-inline-details -fno-early-inlining -fno-ipa-cp\"  } */\n+/* { dg-add-options bind_pic_locally } */\n+\n void abort (void);\n int scc_entry (int);\n int sum;"}, {"sha": "fb0c12549f0a07991ea072592449afd78c86f208", "filename": "gcc/testsuite/gcc.dg/pr47276.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.dg%2Fpr47276.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.dg%2Fpr47276.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr47276.c?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-require-alias \"\" } */\n /* { dg-require-visibility \"\" } */\n+/* { dg-add-options bind_pic_locally } */\n \n #define ASMNAME(cname)  ASMNAME2 (__USER_LABEL_PREFIX__, cname)\n #define ASMNAME2(prefix, cname) STRING (prefix) cname"}, {"sha": "638bd7c550db51872508b5b443d30bfc854f2b6a", "filename": "gcc/testsuite/gcc.dg/pure-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.dg%2Fpure-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.dg%2Fpure-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpure-2.c?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -Wsuggest-attribute=pure\" } */\n+/* { dg-add-options bind_pic_locally } */\n \n extern int extern_const(int a) __attribute__ ((pure));\n extern int v;"}, {"sha": "2ea3b93ec5ce8c5229f93fb3f4c50fd10b06aeba", "filename": "gcc/testsuite/gcc.dg/tm/nested-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.dg%2Ftm%2Fnested-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.dg%2Ftm%2Fnested-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftm%2Fnested-2.c?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-fgnu-tm\" } */\n+/* { dg-add-options bind_pic_locally } */\n \n void foobar(void)\n {"}, {"sha": "b23bdea612e0d517f4b025862e2281fd3c545607", "filename": "gcc/testsuite/gcc.dg/tree-ssa/alias-29.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-29.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-29.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-29.c?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O -fdump-tree-optimized\" } */\n+/* { dg-add-options bind_pic_locally } */\n \n union X {\n     int i;"}, {"sha": "c0800cf1c2600875e20dbd9dc8b1db7f9c803feb", "filename": "gcc/testsuite/gcc.target/i386/3dnow-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F3dnow-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F3dnow-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F3dnow-1.c?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do assemble } */\n /* { dg-require-effective-target 3dnow } */\n /* { dg-options \"-O2 -Werror-implicit-function-declaration -m3dnow\" } */\n+/* { dg-add-options bind_pic_locally } */\n \n /* Test that the intrinsics compile with optimization.  All of them are\n    defined as inline functions in mmintrin.h that reference the proper"}, {"sha": "a89cb0bf541b0ee69ba025faf1e875674a945730", "filename": "gcc/testsuite/gcc.target/i386/3dnow-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F3dnow-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F3dnow-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F3dnow-2.c?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do assemble } */\n /* { dg-require-effective-target 3dnow } */\n /* { dg-options \"-O0 -Werror-implicit-function-declaration -m3dnow\" } */\n+/* { dg-add-options bind_pic_locally } */\n \n /* Test that the intrinsics compile without optimization.  All of them are\n    defined as inline functions in mmintrin.h that reference the proper"}, {"sha": "74e852f95ec15f46865569f351c6e2ce096692bf", "filename": "gcc/testsuite/gcc.target/i386/3dnowA-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F3dnowA-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F3dnowA-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F3dnowA-1.c?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do assemble } */\n /* { dg-require-effective-target 3dnow } */\n /* { dg-options \"-O2 -Werror-implicit-function-declaration -march=k8 -m3dnow\" } */\n+/* { dg-add-options bind_pic_locally } */\n \n /* Test that the intrinsics compile with optimization.  All of them are\n    defined as inline functions in mmintrin.h that reference the proper"}, {"sha": "c1f2daab6ba5386e03ff8a0096d2f4d200b8c113", "filename": "gcc/testsuite/gcc.target/i386/3dnowA-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F3dnowA-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F3dnowA-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F3dnowA-2.c?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do assemble } */\n /* { dg-require-effective-target 3dnow } */\n /* { dg-options \"-O0 -Werror-implicit-function-declaration -march=k8 -m3dnow\" } */\n+/* { dg-add-options bind_pic_locally } */\n \n /* Test that the intrinsics compile without optimization.  All of them are\n    defined as inline functions in mmintrin.h that reference the proper"}, {"sha": "0418d07ad48615e4b7178bd1441c30240efefdc5", "filename": "gcc/testsuite/gcc.target/i386/avx-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-1.c?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -Werror-implicit-function-declaration -march=k8 -m3dnow -mavx -mavx2 -maes -mpclmul\" } */\n+/* { dg-add-options bind_pic_locally } */\n \n #include <mm_malloc.h>\n "}, {"sha": "0061d9cdd229fdc4d61b036eccb1d97154da0eac", "filename": "gcc/testsuite/gcc.target/i386/avx-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-2.c?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O0 -Werror-implicit-function-declaration -march=k8 -m3dnow -mavx -mavx2 -msse4a -maes -mpclmul\" } */\n+/* { dg-add-options bind_pic_locally } */\n \n #include <mm_malloc.h>\n "}, {"sha": "725c864d866dabb592f2ff19e6fe0b5a89365428", "filename": "gcc/testsuite/gcc.target/i386/memcpy-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemcpy-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemcpy-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemcpy-1.c?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2 -march=pentiumpro -minline-all-stringops -fno-common\" } */\n+/* { dg-add-options bind_pic_locally } */\n /* { dg-final { scan-assembler \"rep\" } } */\n /* { dg-final { scan-assembler \"movs\" } } */\n /* { dg-final { scan-assembler-not \"test\" } } */"}, {"sha": "7078c22ec9a156f2bbf081e57a743ae2de797cb9", "filename": "gcc/testsuite/gcc.target/i386/mmx-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmmx-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmmx-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmmx-1.c?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-do compile { target { nonpic } } } */\n /* { dg-options \"-O2 -Werror-implicit-function-declaration -mmmx\" } */\n+/* { dg-add-options bind_pic_locally } */\n \n /* Test that the intrinsics compile with optimization.  All of them are\n    defined as inline functions in mmintrin.h that reference the proper"}, {"sha": "2bb54883b9b7cc210dd81ba50f7e2b459c2b25f2", "filename": "gcc/testsuite/gcc.target/i386/mmx-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmmx-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmmx-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmmx-2.c?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O0 -Werror-implicit-function-declaration -mmmx\" } */\n \n+/* { dg-add-options bind_pic_locally } */\n /* Test that the intrinsics compile without optimization.  All of them are\n    defined as inline functions in mmintrin.h that reference the proper\n    builtin functions.  Defining away \"extern\" and \"__inline\" results in"}, {"sha": "a2a4f73cabb37f379e0d6e852d33238613d8909b", "filename": "gcc/testsuite/gcc.target/i386/sse-14.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O0 -Werror-implicit-function-declaration -march=k8 -msse4a -m3dnow -mavx -mavx2 -mfma4 -mxop -maes -mpclmul -mpopcnt -mabm -mlzcnt -mbmi -mbmi2 -mtbm -mlwp -mfsgsbase -mrdrnd -mf16c -mfma -mrtm -mrdseed -mprfchw -madx -mfxsr -mxsaveopt -mavx512f -mavx512er -mavx512cd -mavx512pf -msha -mprefetchwt1 -mxsavec -mxsaves -mclflushopt -mavx512dq -mavx512bw -mavx512vl\" } */\n+/* { dg-add-options bind_pic_locally } */\n \n #include <mm_malloc.h>\n "}, {"sha": "1d1ed7b9d08a03c20b18faddab49f36ac5d87070", "filename": "gcc/testsuite/gcc.target/i386/sse-22.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-22.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-22.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-22.c?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -1,6 +1,7 @@\n /* Same as sse-14, except converted to use #pragma GCC option.  */\n /* { dg-do compile } */\n /* { dg-options \"-O0 -Werror-implicit-function-declaration -march=k8\" } */\n+/* { dg-add-options bind_pic_locally } */\n \n #include <mm_malloc.h>\n "}, {"sha": "11b4a973bf66a5969cb4bad6eefcb8e5ba90f4fb", "filename": "gcc/testsuite/gcc.target/i386/sse-22a.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-22a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-22a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-22a.c?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O0 -Werror-implicit-function-declaration -march=k8\" } */\n+/* { dg-add-options bind_pic_locally } */\n \n #define DIFFERENT_PRAGMAS\n "}, {"sha": "f54f98d23ddff2ca437c0c1b2f46fde1f4fe701f", "filename": "gcc/testsuite/gcc.target/i386/sse-23.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-23.c?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -Werror-implicit-function-declaration -march=k8\" } */\n+/* { dg-add-options bind_pic_locally } */\n \n #include <mm_malloc.h>\n "}, {"sha": "768eb0d09c6023cbec7dfd563eedd930fa2fb1e3", "filename": "gcc/testsuite/gcc.target/i386/sse-24.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-24.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-24.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-24.c?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -1,5 +1,6 @@\n /* PR target/44338 */\n /* { dg-do compile } */\n /* { dg-options \"-O2 -Werror-implicit-function-declaration -march=k8 -ffp-contract=off\" } */\n+/* { dg-add-options bind_pic_locally } */\n \n #include \"sse-23.c\""}, {"sha": "c375956157d9944017342eff121d0f3aa8e1aa76", "filename": "gcc/testsuite/gcc.target/i386/vect-double-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvect-double-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvect-double-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvect-double-1.c?ref=ff83f9c8e9e79eb8ec8b9f11b5086f805e774bad", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-march=*\" } { \"-march=core2\" } } */\n /* { dg-options \"-O2 -ftree-vectorize -mfpmath=sse -march=core2 -fdump-tree-vect-stats\" } */\n+/* { dg-add-options bind_pic_locally } */\n \n extern void abort (void);\n "}]}