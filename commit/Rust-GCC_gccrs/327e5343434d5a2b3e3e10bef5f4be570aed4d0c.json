{"sha": "327e5343434d5a2b3e3e10bef5f4be570aed4d0c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzI3ZTUzNDM0MzRkNWEyYjNlM2UxMGJlZjVmNGJlNTcwYWVkNGQwYw==", "commit": {"author": {"name": "Fariborz Jahanian", "email": "fjahanian@apple.com", "date": "2004-03-18T16:39:44Z"}, "committer": {"name": "Fariborz Jahanian", "email": "fjahanian@gcc.gnu.org", "date": "2004-03-18T16:39:44Z"}, "message": "Fixed some stack size allocation in G5's mixed mode.\n\nOked by David Edelsohn.\n\nFrom-SVN: r79624", "tree": {"sha": "2c86b84fa300ec489088aa2886294a993f0f9a20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c86b84fa300ec489088aa2886294a993f0f9a20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/327e5343434d5a2b3e3e10bef5f4be570aed4d0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/327e5343434d5a2b3e3e10bef5f4be570aed4d0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/327e5343434d5a2b3e3e10bef5f4be570aed4d0c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/327e5343434d5a2b3e3e10bef5f4be570aed4d0c/comments", "author": null, "committer": null, "parents": [{"sha": "a336eacaf1fe8e0ac28decabbc59c7972766f742", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a336eacaf1fe8e0ac28decabbc59c7972766f742", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a336eacaf1fe8e0ac28decabbc59c7972766f742"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "6058c6caf6d38c7ce176a4df137aa9eaa21b823c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/327e5343434d5a2b3e3e10bef5f4be570aed4d0c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/327e5343434d5a2b3e3e10bef5f4be570aed4d0c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=327e5343434d5a2b3e3e10bef5f4be570aed4d0c", "patch": "@@ -1,3 +1,12 @@\n+2004-03-17  Fariborz Jahanian <fjahanian@apple.com>\n+\n+        * config/rs6000/rs6000.c (rs6000_stack_info): correct reg_size\n+        for mixed mode.\n+        (rs6000_emit_prologue): Ditto.\n+        (rs6000_emit_epilogue): Ditto.\n+        * config/rs6000/rs6000.h: Definition of DWARF_CIE_DATA_ALIGNMENT\n+        macro for mixed mode.\n+\n 2004-03-18  Jan Hubicka  <jh@suse.cz>\n \n \t* predict.c (propagate_freq): Compute correctly frequency of"}, {"sha": "f2f41076c1edee508cef1ee2654b2c516b0c6d33", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/327e5343434d5a2b3e3e10bef5f4be570aed4d0c/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/327e5343434d5a2b3e3e10bef5f4be570aed4d0c/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=327e5343434d5a2b3e3e10bef5f4be570aed4d0c", "patch": "@@ -10671,7 +10671,7 @@ rs6000_stack_info (void)\n {\n   static rs6000_stack_t info, zero_info;\n   rs6000_stack_t *info_ptr = &info;\n-  int reg_size = TARGET_POWERPC64 ? 8 : 4;\n+  int reg_size = TARGET_32BIT ? 4 : 8;\n   int ehrd_size;\n   HOST_WIDE_INT total_raw_size;\n \n@@ -11871,7 +11871,7 @@ rs6000_emit_prologue (void)\n {\n   rs6000_stack_t *info = rs6000_stack_info ();\n   enum machine_mode reg_mode = Pmode;\n-  int reg_size = UNITS_PER_WORD;\n+  int reg_size = TARGET_32BIT ? 4 : 8;\n   rtx sp_reg_rtx = gen_rtx_REG (Pmode, STACK_POINTER_REGNUM);\n   rtx frame_ptr_rtx = gen_rtx_REG (Pmode, 12);\n   rtx frame_reg_rtx = sp_reg_rtx;\n@@ -12338,7 +12338,7 @@ rs6000_emit_epilogue (int sibcall)\n   rtx sp_reg_rtx = gen_rtx_REG (Pmode, 1);\n   rtx frame_reg_rtx = sp_reg_rtx;\n   enum machine_mode reg_mode = Pmode;\n-  int reg_size = UNITS_PER_WORD;\n+  int reg_size = TARGET_32BIT ? 4 : 8;\n   int i;\n \n   info = rs6000_stack_info ();"}, {"sha": "9d64f7ef10b01db0aad44368d98d0b5b25efeb78", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/327e5343434d5a2b3e3e10bef5f4be570aed4d0c/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/327e5343434d5a2b3e3e10bef5f4be570aed4d0c/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=327e5343434d5a2b3e3e10bef5f4be570aed4d0c", "patch": "@@ -1536,6 +1536,9 @@ extern enum rs6000_abi rs6000_current_abi;\t/* available for use by subtarget */\n    makes the stack pointer a smaller address.  */\n #define STACK_GROWS_DOWNWARD\n \n+/* Offsets recorded in opcodes are a multiple of this alignment factor.  */\n+#define DWARF_CIE_DATA_ALIGNMENT (-((int) (TARGET_32BIT ? 4 : 8)))\n+\n /* Define this if the nominal address of the stack frame\n    is at the high-address end of the local variables;\n    that is, each additional local variable allocated"}]}