{"sha": "635f48009c1321df9957aceeb98e86eece0ebb98", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM1ZjQ4MDA5YzEzMjFkZjk5NTdhY2VlYjk4ZTg2ZWVjZTBlYmI5OA==", "commit": {"author": {"name": "Gary Benson", "email": "gbenson@redhat.com", "date": "2014-08-13T15:56:38Z"}, "committer": {"name": "Gary Benson", "email": "gary@gcc.gnu.org", "date": "2014-08-13T15:56:38Z"}, "message": "demangler-fuzzer.c: New file.\n\nlibiberty/\n\t* testsuite/demangler-fuzzer.c: New file.\n\t* testsuite/Makefile.in (fuzz-demangler): New rule.\n\t(demangler-fuzzer): Likewise.\n\t(mostlyclean): Clean up demangler fuzzer.\n\nFrom-SVN: r213912", "tree": {"sha": "dcb1e6c81bc72da9f2e962d5c8f940b370c601ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dcb1e6c81bc72da9f2e962d5c8f940b370c601ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/635f48009c1321df9957aceeb98e86eece0ebb98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/635f48009c1321df9957aceeb98e86eece0ebb98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/635f48009c1321df9957aceeb98e86eece0ebb98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/635f48009c1321df9957aceeb98e86eece0ebb98/comments", "author": null, "committer": null, "parents": [{"sha": "a3fea1ef37cded943ca50c3f38d74916e24373ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3fea1ef37cded943ca50c3f38d74916e24373ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3fea1ef37cded943ca50c3f38d74916e24373ee"}], "stats": {"total": 124, "additions": 124, "deletions": 0}, "files": [{"sha": "96064ac74058113d5f45cff67aa5c595c118d924", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/635f48009c1321df9957aceeb98e86eece0ebb98/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/635f48009c1321df9957aceeb98e86eece0ebb98/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=635f48009c1321df9957aceeb98e86eece0ebb98", "patch": "@@ -1,3 +1,10 @@\n+2014-08-13  Gary Benson  <gbenson@redhat.com>\n+\n+\t* testsuite/demangler-fuzzer.c: New file.\n+\t* testsuite/Makefile.in (fuzz-demangler): New rule.\n+\t(demangler-fuzzer): Likewise.\n+\t(mostlyclean): Clean up demangler fuzzer.\n+\n 2014-06-11  Andrew Burgess  <aburgess@broadcom.com>\n \n \t* cplus-dem.c (do_type): Call string_delete even if the call to"}, {"sha": "d23c09c8b2d79f060f42919c454b0b48af8d1429", "filename": "libiberty/testsuite/Makefile.in", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/635f48009c1321df9957aceeb98e86eece0ebb98/libiberty%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/635f48009c1321df9957aceeb98e86eece0ebb98/libiberty%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ftestsuite%2FMakefile.in?ref=635f48009c1321df9957aceeb98e86eece0ebb98", "patch": "@@ -59,6 +59,10 @@ check-pexecute: test-pexecute\n check-expandargv: test-expandargv\n \t./test-expandargv\n \n+# Run the demangler fuzzer\n+fuzz-demangler: demangler-fuzzer\n+\t./demangler-fuzzer\n+\n TEST_COMPILE = $(CC) @DEFS@ $(LIBCFLAGS) -I.. -I$(INCDIR) $(HDEFINES)\n test-demangle: $(srcdir)/test-demangle.c ../libiberty.a\n \t$(TEST_COMPILE) -o test-demangle \\\n@@ -72,6 +76,10 @@ test-expandargv: $(srcdir)/test-expandargv.c ../libiberty.a\n \t$(TEST_COMPILE) -DHAVE_CONFIG_H -I.. -o test-expandargv \\\n \t\t$(srcdir)/test-expandargv.c ../libiberty.a\n \n+demangler-fuzzer: $(srcdir)/demangler-fuzzer.c ../libiberty.a\n+\t$(TEST_COMPILE) -o demangler-fuzzer \\\n+\t\t$(srcdir)/demangler-fuzzer.c ../libiberty.a\n+\n # Standard (either GNU or Cygnus) rules we don't use.\n html install-html info install-info clean-info dvi pdf install-pdf \\\n install etags tags installcheck:\n@@ -81,6 +89,7 @@ mostlyclean:\n \trm -f test-demangle\n \trm -f test-pexecute\n \trm -f test-expandargv\n+\trm -f demangler-fuzzer\n \trm -f core\n clean: mostlyclean\n distclean: clean"}, {"sha": "aff702473010fd0518871dd334df3a60b7e4eb3d", "filename": "libiberty/testsuite/demangler-fuzzer.c", "status": "added", "additions": 108, "deletions": 0, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/635f48009c1321df9957aceeb98e86eece0ebb98/libiberty%2Ftestsuite%2Fdemangler-fuzzer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/635f48009c1321df9957aceeb98e86eece0ebb98/libiberty%2Ftestsuite%2Fdemangler-fuzzer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ftestsuite%2Fdemangler-fuzzer.c?ref=635f48009c1321df9957aceeb98e86eece0ebb98", "patch": "@@ -0,0 +1,108 @@\n+/* Demangler fuzzer.\n+\n+   Copyright (C) 2014 Free Software Foundation, Inc.\n+\n+   This file is part of GNU libiberty.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <unistd.h>\n+#include <time.h>\n+#include \"demangle.h\"\n+\n+#define MAXLEN 253\n+#define ALPMIN 33\n+#define ALPMAX 127\n+\n+static char *program_name;\n+\n+#define DEFAULT_MAXCOUNT 7500000\n+\n+static void\n+print_usage (FILE *fp, int exit_value)\n+{\n+  fprintf (fp, \"Usage: %s [OPTION]...\\n\", program_name);\n+  fprintf (fp, \"Options:\\n\");\n+  fprintf (fp, \"  -h           Display this message.\\n\");\n+  fprintf (fp, \"  -s SEED      Select the random seed to be used.\\n\");\n+  fprintf (fp, \"               The default is to base one on the\");\n+  fprintf (fp, \" current time.\\n\");\n+  fprintf (fp, \"  -m MAXCOUNT  Exit after MAXCOUNT symbols.\\n\");\n+  fprintf (fp, \"               The default is %d.\", DEFAULT_MAXCOUNT);\n+  fprintf (fp, \" Set to `-1' for no limit.\\n\");\n+\n+  exit (exit_value);\n+}\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  char symbol[2 + MAXLEN + 1] = \"_Z\";\n+  int seed = -1, seed_set = 0;\n+  int count = 0, maxcount = DEFAULT_MAXCOUNT;\n+  int optchr;\n+\n+  program_name = argv[0];\n+\n+  do\n+    {\n+      optchr = getopt (argc, argv, \"hs:m:t:\");\n+      switch (optchr)\n+\t{\n+\tcase '?':  /* Unrecognized option.  */\n+\t  print_usage (stderr, 1);\n+\t  break;\n+\n+\tcase 'h':\n+\t  print_usage (stdout, 0);\n+\t  break;\n+\n+\tcase 's':\n+\t  seed = atoi (optarg);\n+\t  seed_set = 1;\n+\t  break;\n+\n+\tcase 'm':\n+\t  maxcount = atoi (optarg);\n+\t  break;\n+\t}\n+    }\n+  while (optchr != -1);\n+\n+  if (!seed_set)\n+    seed = time (NULL);\n+  srand (seed);\n+  printf (\"%s: seed = %d\\n\", program_name, seed);\n+\n+  while (maxcount < 0 || count < maxcount)\n+    {\n+      char *buffer = symbol + 2;\n+      int length, i;\n+\n+      length = rand () % MAXLEN;\n+      for (i = 0; i < length; i++)\n+\t*buffer++ = (rand () % (ALPMAX - ALPMIN)) + ALPMIN;\n+\n+      *buffer++ = '\\0';\n+\n+      cplus_demangle (symbol, DMGL_AUTO | DMGL_ANSI | DMGL_PARAMS);\n+\n+      count++;\n+    }\n+\n+  printf (\"%s: successfully demangled %d symbols\\n\", program_name, count);\n+  exit (0);\n+}"}]}