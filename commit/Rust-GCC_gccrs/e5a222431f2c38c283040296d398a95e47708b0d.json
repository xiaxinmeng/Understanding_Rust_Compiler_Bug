{"sha": "e5a222431f2c38c283040296d398a95e47708b0d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTVhMjIyNDMxZjJjMzhjMjgzMDQwMjk2ZDM5OGE5NWU0NzcwOGIwZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-05-15T09:46:19Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-05-15T09:46:19Z"}, "message": "[multiple changes]\n\n2012-05-15  Tristan Gingold  <gingold@adacore.com>\n\n\t* s-soflin.ads, s-soflin.adb (Save_Library_Occurrence): Parameter\n\tE is now of type Exception_Occurrence_Access.\n\t* exp_ch7.ads, exp_ch7.adb (Build_Exception_Handler): Adjust generated\n\tcall to Save_Library_Occurrence.\n\n2012-05-15  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_ch4.adb (Rewrite_Coextension): Use Insert_Action to\n\tinsert temporary variable decl at the proper place in the tree.\n\nFrom-SVN: r187513", "tree": {"sha": "9fedcb7157eb950243aa5bc85a2679e28d69abe8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fedcb7157eb950243aa5bc85a2679e28d69abe8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5a222431f2c38c283040296d398a95e47708b0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5a222431f2c38c283040296d398a95e47708b0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5a222431f2c38c283040296d398a95e47708b0d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5a222431f2c38c283040296d398a95e47708b0d/comments", "author": null, "committer": null, "parents": [{"sha": "5277d0b7109e67d3dd582f5b832723ed8e008cb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5277d0b7109e67d3dd582f5b832723ed8e008cb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5277d0b7109e67d3dd582f5b832723ed8e008cb1"}], "stats": {"total": 80, "additions": 39, "deletions": 41}, "files": [{"sha": "5fd1ca03f50803abdb056b1ed6b217e20133ee15", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5a222431f2c38c283040296d398a95e47708b0d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5a222431f2c38c283040296d398a95e47708b0d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e5a222431f2c38c283040296d398a95e47708b0d", "patch": "@@ -1,3 +1,15 @@\n+2012-05-15  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* s-soflin.ads, s-soflin.adb (Save_Library_Occurrence): Parameter\n+\tE is now of type Exception_Occurrence_Access.\n+\t* exp_ch7.ads, exp_ch7.adb (Build_Exception_Handler): Adjust generated\n+\tcall to Save_Library_Occurrence.\n+\n+2012-05-15  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_ch4.adb (Rewrite_Coextension): Use Insert_Action to\n+\tinsert temporary variable decl at the proper place in the tree.\n+\n 2012-05-15  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* g-calend.adb (Split_At_Locale): New routine."}, {"sha": "03ab119823b39dad2db54a25c54ace36b9a32a1c", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 3, "deletions": 18, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5a222431f2c38c283040296d398a95e47708b0d/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5a222431f2c38c283040296d398a95e47708b0d/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=e5a222431f2c38c283040296d398a95e47708b0d", "patch": "@@ -3424,9 +3424,8 @@ package body Exp_Ch4 is\n       -------------------------\n \n       procedure Rewrite_Coextension (N : Node_Id) is\n-         Temp_Id    : constant Node_Id := Make_Temporary (Loc, 'C');\n-         Temp_Decl  : Node_Id;\n-         Insert_Nod : Node_Id;\n+         Temp_Id   : constant Node_Id := Make_Temporary (Loc, 'C');\n+         Temp_Decl : Node_Id;\n \n       begin\n          --  Generate:\n@@ -3442,21 +3441,7 @@ package body Exp_Ch4 is\n             Set_Expression (Temp_Decl, Expression (Expression (N)));\n          end if;\n \n-         --  Find the proper insertion node for the declaration\n-\n-         Insert_Nod := Parent (N);\n-         while Present (Insert_Nod) loop\n-            exit when\n-              Nkind (Insert_Nod) in N_Statement_Other_Than_Procedure_Call\n-                or else Nkind (Insert_Nod) = N_Procedure_Call_Statement\n-                or else Nkind (Insert_Nod) in N_Declaration;\n-\n-            Insert_Nod := Parent (Insert_Nod);\n-         end loop;\n-\n-         Insert_Before (Insert_Nod, Temp_Decl);\n-         Analyze (Temp_Decl);\n-\n+         Insert_Action (N, Temp_Decl);\n          Rewrite (N,\n            Make_Attribute_Reference (Loc,\n              Prefix         => New_Occurrence_Of (Temp_Id, Loc),"}, {"sha": "b42c2341d7a21900c71e9e9a31a2860b5f349d43", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 19, "deletions": 16, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5a222431f2c38c283040296d398a95e47708b0d/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5a222431f2c38c283040296d398a95e47708b0d/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=e5a222431f2c38c283040296d398a95e47708b0d", "patch": "@@ -716,40 +716,43 @@ package body Exp_Ch7 is\n    is\n       Actuals      : List_Id;\n       Proc_To_Call : Entity_Id;\n+      Except       : Node_Id;\n \n    begin\n       pragma Assert (Present (Data.E_Id));\n       pragma Assert (Present (Data.Raised_Id));\n \n       --  Generate:\n-      --    Get_Current_Excep.all.all\n-\n-      Actuals := New_List (\n-        Make_Explicit_Dereference (Data.Loc,\n-          Prefix =>\n-            Make_Function_Call (Data.Loc,\n-              Name =>\n-                Make_Explicit_Dereference (Data.Loc,\n-                  Prefix =>\n-                    New_Reference_To (RTE (RE_Get_Current_Excep),\n-                                      Data.Loc)))));\n-\n-      if For_Library and then not Restricted_Profile then\n-         Proc_To_Call := RTE (RE_Save_Library_Occurrence);\n \n+      --    Get_Current_Excep.all\n+\n+      Except :=\n+        Make_Function_Call (Data.Loc,\n+          Name =>\n+            Make_Explicit_Dereference (Data.Loc,\n+              Prefix =>\n+                New_Reference_To (RTE (RE_Get_Current_Excep), Data.Loc)));\n+\n+      if For_Library and not Restricted_Profile then\n+         Proc_To_Call := RTE (RE_Save_Library_Occurrence);\n+         Actuals := New_List (Except);\n       else\n          Proc_To_Call := RTE (RE_Save_Occurrence);\n-         Prepend_To (Actuals, New_Reference_To (Data.E_Id, Data.Loc));\n+         Actuals :=\n+           New_List\n+             (New_Reference_To (Data.E_Id, Data.Loc),\n+              Make_Explicit_Dereference (Data.Loc, Except));\n       end if;\n \n       --  Generate:\n+\n       --    when others =>\n       --       if not Raised_Id then\n       --          Raised_Id := True;\n \n       --          Save_Occurrence (E_Id, Get_Current_Excep.all.all);\n       --            or\n-      --          Save_Library_Occurrence (Get_Current_Excep.all.all);\n+      --          Save_Library_Occurrence (Get_Current_Excep.all);\n       --       end if;\n \n       return"}, {"sha": "2cb42657bd410a89d40f8503fea30da678e1d172", "filename": "gcc/ada/exp_ch7.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5a222431f2c38c283040296d398a95e47708b0d/gcc%2Fada%2Fexp_ch7.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5a222431f2c38c283040296d398a95e47708b0d/gcc%2Fada%2Fexp_ch7.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.ads?ref=e5a222431f2c38c283040296d398a95e47708b0d", "patch": "@@ -89,7 +89,7 @@ package Exp_Ch7 is\n    --    when others =>\n    --       if not Raised_Id then\n    --          Raised_Id := True;\n-   --          Save_Library_Occurrence (Get_Current_Excep.all.all);\n+   --          Save_Library_Occurrence (Get_Current_Excep.all);\n    --       end if;\n    --\n    --  E_Id denotes the defining identifier of a local exception occurrence."}, {"sha": "6367cacd9101778b2f5dc6bd70d5632a3cba58cc", "filename": "gcc/ada/s-soflin.adb", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5a222431f2c38c283040296d398a95e47708b0d/gcc%2Fada%2Fs-soflin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5a222431f2c38c283040296d398a95e47708b0d/gcc%2Fada%2Fs-soflin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-soflin.adb?ref=e5a222431f2c38c283040296d398a95e47708b0d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -223,13 +223,11 @@ package body System.Soft_Links is\n    -- Save_Library_Occurrence --\n    -----------------------------\n \n-   procedure Save_Library_Occurrence\n-     (E : Ada.Exceptions.Exception_Occurrence)\n-   is\n+   procedure Save_Library_Occurrence (E : EOA) is\n    begin\n       if not Library_Exception_Set then\n          Library_Exception_Set := True;\n-         Ada.Exceptions.Save_Occurrence (Library_Exception, E);\n+         Ada.Exceptions.Save_Occurrence (Library_Exception, E.all);\n       end if;\n    end Save_Library_Occurrence;\n "}, {"sha": "2592bd1eeb79c122bc33d3db4681793ce4aa3df2", "filename": "gcc/ada/s-soflin.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5a222431f2c38c283040296d398a95e47708b0d/gcc%2Fada%2Fs-soflin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5a222431f2c38c283040296d398a95e47708b0d/gcc%2Fada%2Fs-soflin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-soflin.ads?ref=e5a222431f2c38c283040296d398a95e47708b0d", "patch": "@@ -310,7 +310,7 @@ package System.Soft_Links is\n    --  See the body of Tailored_Exception_Traceback in Ada.Exceptions for\n    --  a more detailed description of the potential problems.\n \n-   procedure Save_Library_Occurrence (E : Ada.Exceptions.Exception_Occurrence);\n+   procedure Save_Library_Occurrence (E : EOA);\n    --  When invoked, this routine saves an exception occurrence into a hidden\n    --  reference. Subsequent calls will have no effect.\n "}]}