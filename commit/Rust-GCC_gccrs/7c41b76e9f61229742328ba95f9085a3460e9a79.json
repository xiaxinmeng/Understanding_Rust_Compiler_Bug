{"sha": "7c41b76e9f61229742328ba95f9085a3460e9a79", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M0MWI3NmU5ZjYxMjI5NzQyMzI4YmE5NWY5MDg1YTM0NjBlOWE3OQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2017-06-12T12:36:47Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2017-06-12T12:36:47Z"}, "message": "* cgraph.c (cgraph_node::dump): Complain about profile insanities.\n\nFrom-SVN: r249123", "tree": {"sha": "5fcba40cc850e855e1eacc5a9593bf3a08dfc5e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5fcba40cc850e855e1eacc5a9593bf3a08dfc5e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c41b76e9f61229742328ba95f9085a3460e9a79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c41b76e9f61229742328ba95f9085a3460e9a79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c41b76e9f61229742328ba95f9085a3460e9a79", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c41b76e9f61229742328ba95f9085a3460e9a79/comments", "author": null, "committer": null, "parents": [{"sha": "6cddb61ca1c1ed9957217f5f10fb4c79257a5914", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cddb61ca1c1ed9957217f5f10fb4c79257a5914", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cddb61ca1c1ed9957217f5f10fb4c79257a5914"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "20dafd3c5861a5f62435231807ba7844fdad14ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c41b76e9f61229742328ba95f9085a3460e9a79/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c41b76e9f61229742328ba95f9085a3460e9a79/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7c41b76e9f61229742328ba95f9085a3460e9a79", "patch": "@@ -1,3 +1,7 @@\n+2017-06-11  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* cgraph.c (cgraph_node::dump): Complain about profile insanities.\n+\n 2017-06-12  Doug Rupp  <rupp@adacore.com>\n \n \t* config.gcc (*-*-vxworks*): Set use_gcc_stdint to \"provide\"."}, {"sha": "81aed5c357ca0cac88f52fbcaa0bb3a4180d88d3", "filename": "gcc/cgraph.c", "status": "modified", "additions": 34, "deletions": 1, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c41b76e9f61229742328ba95f9085a3460e9a79/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c41b76e9f61229742328ba95f9085a3460e9a79/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=7c41b76e9f61229742328ba95f9085a3460e9a79", "patch": "@@ -2094,7 +2094,7 @@ cgraph_node::dump (FILE *f)\n   fprintf (f, \"  Function flags:\");\n   if (count.initialized_p ())\n     {\n-      fprintf (f, \" profile_count \");\n+      fprintf (f, \" count: \");\n       count.dump (f);\n     }\n   if (origin)\n@@ -2172,10 +2172,13 @@ cgraph_node::dump (FILE *f)\n   \n   fprintf (f, \"  Called by: \");\n \n+  profile_count sum = profile_count::zero ();\n   for (edge = callers; edge; edge = edge->next_caller)\n     {\n       fprintf (f, \"%s \", edge->caller->dump_name ());\n       edge->dump_edge_flags (f);\n+      if (edge->count.initialized_p ())\n+\tsum += edge->count;\n     }\n \n   fprintf (f, \"\\n  Calls: \");\n@@ -2186,6 +2189,36 @@ cgraph_node::dump (FILE *f)\n     }\n   fprintf (f, \"\\n\");\n \n+  if (count.initialized_p ())\n+    {\n+      bool ok = true;\n+      bool min = false;\n+      ipa_ref *ref;\n+\n+      FOR_EACH_ALIAS (this, ref)\n+\tif (dyn_cast <cgraph_node *> (ref->referring)->count.initialized_p ())\n+\t  sum += dyn_cast <cgraph_node *> (ref->referring)->count;\n+  \n+      if (global.inlined_to\n+\t  || (symtab->state < EXPANSION\n+\t      && ultimate_alias_target () == this && only_called_directly_p ()))\n+\tok = !count.differs_from_p (sum);\n+      else if (count > profile_count::from_gcov_type (100)\n+\t       && count < sum.apply_scale (99, 100))\n+\tok = false, min = true;\n+      if (!ok)\n+\t{\n+\t  fprintf (f, \"   Invalid sum of caller counts \");\n+\t  sum.dump (f);\n+\t  if (min)\n+\t    fprintf (f, \", should be at most \");\n+\t  else\n+\t    fprintf (f, \", should be \");\n+\t  count.dump (f);\n+\t  fprintf (f, \"\\n\");\n+\t}\n+    }\n+\n   for (edge = indirect_calls; edge; edge = edge->next_callee)\n     {\n       if (edge->indirect_info->polymorphic)"}]}