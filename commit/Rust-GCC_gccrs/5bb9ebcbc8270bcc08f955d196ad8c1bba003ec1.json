{"sha": "5bb9ebcbc8270bcc08f955d196ad8c1bba003ec1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJiOWViY2JjODI3MGJjYzA4Zjk1NWQxOTZhZDhjMWJiYTAwM2VjMQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-08-21T14:47:56Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-08-21T14:47:56Z"}, "message": "[Ada] Properly set scope of artificial entities in blocks\n\n2018-08-21  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch9.adb (Expand_N_Timed_Entry_Call,\n\tExpand_Conditional_Entry_Call): Use Reset_Scopes_Of to set\n\tproperly the scope of all entities created in blocks generated\n\tby the expansion of these constructs.\n\nFrom-SVN: r263730", "tree": {"sha": "6579c6e3a52da85f0b57e02dcc31038e72a8243c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6579c6e3a52da85f0b57e02dcc31038e72a8243c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bb9ebcbc8270bcc08f955d196ad8c1bba003ec1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bb9ebcbc8270bcc08f955d196ad8c1bba003ec1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bb9ebcbc8270bcc08f955d196ad8c1bba003ec1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bb9ebcbc8270bcc08f955d196ad8c1bba003ec1/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6989a2bbfa259633296bf1e9f278ea83c5345811", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6989a2bbfa259633296bf1e9f278ea83c5345811", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6989a2bbfa259633296bf1e9f278ea83c5345811"}], "stats": {"total": 47, "additions": 36, "deletions": 11}, "files": [{"sha": "98045633fbf53518854015a8976572b21c56f2e4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bb9ebcbc8270bcc08f955d196ad8c1bba003ec1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bb9ebcbc8270bcc08f955d196ad8c1bba003ec1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5bb9ebcbc8270bcc08f955d196ad8c1bba003ec1", "patch": "@@ -1,3 +1,10 @@\n+2018-08-21  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch9.adb (Expand_N_Timed_Entry_Call,\n+\tExpand_Conditional_Entry_Call): Use Reset_Scopes_Of to set\n+\tproperly the scope of all entities created in blocks generated\n+\tby the expansion of these constructs.\n+\n 2018-08-21  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch13.adb (Build_Predicate_Functioss): Apply"}, {"sha": "c398948ed87404b102af490a6fe6d625abf9c715", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 29, "deletions": 11, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bb9ebcbc8270bcc08f955d196ad8c1bba003ec1/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bb9ebcbc8270bcc08f955d196ad8c1bba003ec1/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=5bb9ebcbc8270bcc08f955d196ad8c1bba003ec1", "patch": "@@ -476,10 +476,11 @@ package body Exp_Ch9 is\n    --    ...\n    --    <actualN> := P.<formalN>;\n \n-   procedure Reset_Scopes_To (Proc_Body : Node_Id; E : Entity_Id);\n-   --  Reset the scope of declarations and blocks at the top level of Proc_Body\n-   --  to be E. Used after expanding entry bodies into their corresponding\n-   --  procedures. This is needed during unnesting to determine whether a\n+   procedure Reset_Scopes_To (Bod : Node_Id; E : Entity_Id);\n+   --  Reset the scope of declarations and blocks at the top level of Bod\n+   --  to be E. Bod is either a block or a subprogram body.  Used after\n+   --  expanding various kinds of entry bodies into their corresponding\n+   --  constructs. This is needed during unnesting to determine whether a\n    --  body geenrated for an entry or an accept alternative includes uplevel\n    --  references.\n \n@@ -8240,6 +8241,7 @@ package body Exp_Ch9 is\n       end if;\n \n       Analyze (N);\n+      Reset_Scopes_To (N, Entity (Identifier (N)));\n    end Expand_N_Conditional_Entry_Call;\n \n    ---------------------------------------\n@@ -12653,7 +12655,7 @@ package body Exp_Ch9 is\n           Expression          => D_Disc));\n \n       --  Do the assignment at this stage only because the evaluation of the\n-      --  expression must not occur before (see ACVC C97302A).\n+      --  expression must not occur earlier (see ACVC C97302A).\n \n       Append_To (Stmts,\n         Make_Assignment_Statement (Loc,\n@@ -12850,7 +12852,7 @@ package body Exp_Ch9 is\n          end loop;\n \n          --  Do the assignment at this stage only because the evaluation\n-         --  of the expression must not occur before (see ACVC C97302A).\n+         --  of the expression must not occur earlier (see ACVC C97302A).\n \n          Insert_Before (Stmt,\n            Make_Assignment_Statement (Loc,\n@@ -12935,6 +12937,21 @@ package body Exp_Ch9 is\n             Make_Handled_Sequence_Of_Statements (Loc, Stmts)));\n \n       Analyze (N);\n+\n+      --  Some items in Decls used to be in the N_Block in  E_Call that\n+      --  is constructed in Expand_Entry_Call, and are now in the new\n+      --  Block into which N has been rewritten.  Adjust their scopes\n+      --  to reflect that.\n+\n+      if Nkind (E_Call) = N_Block_Statement then\n+         Obj := First_Entity (Entity (Identifier (E_Call)));\n+         while Present (Obj) loop\n+            Set_Scope (Obj, Entity (Identifier (N)));\n+            Next_Entity (Obj);\n+         end loop;\n+      end if;\n+\n+      Reset_Scopes_To (N, Entity (Identifier (N)));\n    end Expand_N_Timed_Entry_Call;\n \n    ----------------------------------------\n@@ -14832,7 +14849,7 @@ package body Exp_Ch9 is\n    -- Reset_Scopes_To --\n    ---------------------\n \n-   procedure Reset_Scopes_To (Proc_Body : Node_Id; E : Entity_Id) is\n+   procedure Reset_Scopes_To (Bod : Node_Id; E : Entity_Id) is\n \n       function Reset_Scope (N : Node_Id) return Traverse_Result;\n       --  Temporaries may have been declared during expansion of the procedure\n@@ -14853,7 +14870,8 @@ package body Exp_Ch9 is\n          --  If this is a block statement with an Identifier, it forms a scope,\n          --  so we want to reset its scope but not look inside.\n \n-         if Nkind (N) = N_Block_Statement\n+         if N /= Bod\n+           and then Nkind (N) = N_Block_Statement\n            and then Present (Identifier (N))\n          then\n             Set_Scope (Entity (Identifier (N)), E);\n@@ -14868,7 +14886,7 @@ package body Exp_Ch9 is\n             Set_Scope (Defining_Entity (N), E);\n             return Skip;\n \n-         elsif N = Proc_Body then\n+         elsif N = Bod then\n \n             --  Scan declarations in new body. Declarations in the statement\n             --  part will be handled during later traversal.\n@@ -14879,7 +14897,7 @@ package body Exp_Ch9 is\n                Next (Decl);\n             end loop;\n \n-         elsif N /= Proc_Body and then Nkind (N) in N_Proper_Body then\n+         elsif N /= Bod and then Nkind (N) in N_Proper_Body then\n             return Skip;\n          end if;\n \n@@ -14889,7 +14907,7 @@ package body Exp_Ch9 is\n    --  Start of processing for Reset_Scopes_To\n \n    begin\n-      Reset_Scopes (Proc_Body);\n+      Reset_Scopes (Bod);\n    end Reset_Scopes_To;\n \n    ----------------------"}]}