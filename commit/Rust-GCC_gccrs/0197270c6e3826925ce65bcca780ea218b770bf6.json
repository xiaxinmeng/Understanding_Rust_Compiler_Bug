{"sha": "0197270c6e3826925ce65bcca780ea218b770bf6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE5NzI3MGM2ZTM4MjY5MjVjZTY1YmNjYTc4MGVhMjE4Yjc3MGJmNg==", "commit": {"author": {"name": "Simon Martin", "email": "simartin@users.sourceforge.net", "date": "2007-12-10T22:39:27Z"}, "committer": {"name": "Simon Martin", "email": "simartin@gcc.gnu.org", "date": "2007-12-10T22:39:27Z"}, "message": "re PR c++/34059 (ICE with invalid base type for class member)\n\ngcc/cp/\n\n2007-12-10  Simon Martin  <simartin@users.sourceforge.net>\n\n\tPR c++/34059\n\t* typeck.c (build_class_member_access_expr): Compute MEMBER_SCOPE from\n\tMEMBER's BASELINK_ACCESS_BINFO instead of its BASELINK_BINFO.\n\ngcc/testsuite/\n\n2007-12-10  Simon Martin  <simartin@users.sourceforge.net>\n\n\tPR c++/34059\n\t* g++.dg/parse/crash40.C: New test.\n\nFrom-SVN: r130754", "tree": {"sha": "6f990544e44c80af83a114b925e26b4204950c13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f990544e44c80af83a114b925e26b4204950c13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0197270c6e3826925ce65bcca780ea218b770bf6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0197270c6e3826925ce65bcca780ea218b770bf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0197270c6e3826925ce65bcca780ea218b770bf6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0197270c6e3826925ce65bcca780ea218b770bf6/comments", "author": {"login": "simartin", "id": 935202, "node_id": "MDQ6VXNlcjkzNTIwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/935202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simartin", "html_url": "https://github.com/simartin", "followers_url": "https://api.github.com/users/simartin/followers", "following_url": "https://api.github.com/users/simartin/following{/other_user}", "gists_url": "https://api.github.com/users/simartin/gists{/gist_id}", "starred_url": "https://api.github.com/users/simartin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simartin/subscriptions", "organizations_url": "https://api.github.com/users/simartin/orgs", "repos_url": "https://api.github.com/users/simartin/repos", "events_url": "https://api.github.com/users/simartin/events{/privacy}", "received_events_url": "https://api.github.com/users/simartin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1b22c72e3be242e7d47d4d76ebb3d8f3f362045c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b22c72e3be242e7d47d4d76ebb3d8f3f362045c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b22c72e3be242e7d47d4d76ebb3d8f3f362045c"}], "stats": {"total": 55, "additions": 54, "deletions": 1}, "files": [{"sha": "294be3a089d11263e7c278f9c1dd9475690d82a7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0197270c6e3826925ce65bcca780ea218b770bf6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0197270c6e3826925ce65bcca780ea218b770bf6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0197270c6e3826925ce65bcca780ea218b770bf6", "patch": "@@ -1,3 +1,9 @@\n+2007-12-10  Simon Martin  <simartin@users.sourceforge.net>\n+\n+\tPR c++/34059\n+\t* typeck.c (build_class_member_access_expr): Compute MEMBER_SCOPE from\n+\tMEMBER's BASELINK_ACCESS_BINFO instead of its BASELINK_BINFO.\n+\n 2007-12-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/34395"}, {"sha": "0f7ecf723a48be6220095e6a5d1ae7c426d764fe", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0197270c6e3826925ce65bcca780ea218b770bf6/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0197270c6e3826925ce65bcca780ea218b770bf6/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=0197270c6e3826925ce65bcca780ea218b770bf6", "patch": "@@ -1800,7 +1800,7 @@ build_class_member_access_expr (tree object, tree member,\n \twarn_deprecated_use (member);\n     }\n   else\n-    member_scope = BINFO_TYPE (BASELINK_BINFO (member));\n+    member_scope = BINFO_TYPE (BASELINK_ACCESS_BINFO (member));\n   /* If MEMBER is from an anonymous aggregate, MEMBER_SCOPE will\n      presently be the anonymous union.  Go outwards until we find a\n      type related to OBJECT_TYPE.  */"}, {"sha": "099f0291e228d4df0173b1d1f9536afd1a84eda5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0197270c6e3826925ce65bcca780ea218b770bf6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0197270c6e3826925ce65bcca780ea218b770bf6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0197270c6e3826925ce65bcca780ea218b770bf6", "patch": "@@ -1,3 +1,8 @@\n+2007-12-10  Simon Martin  <simartin@users.sourceforge.net>\n+\n+\tPR c++/34059\n+\t* g++.dg/parse/crash40.C: New test.\n+\n 2007-12-10  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* g++.dg/opt/memcpy1.C: New test."}, {"sha": "af44fdb695caf76be2728b1a94534b48b2dfe798", "filename": "gcc/testsuite/g++.dg/parse/crash40.C", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0197270c6e3826925ce65bcca780ea218b770bf6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash40.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0197270c6e3826925ce65bcca780ea218b770bf6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash40.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash40.C?ref=0197270c6e3826925ce65bcca780ea218b770bf6", "patch": "@@ -0,0 +1,42 @@\n+/* PR c++/34059 */\n+/* { dg-do \"compile\" } */\n+\n+struct A\n+{\n+  template<int> void foo();\n+};\n+struct B : A {};\n+struct C : A {};\n+\n+class AA\n+{\n+  template<int> void foo(); /* { dg-error \"is private\" } */\n+};\n+struct BB : AA {};\n+\n+class AAA {\n+  int get() const {}\n+};\n+struct BBB {\n+  static BBB *foo();\n+private:\n+  int get() const {} /* { dg-error \"is private\" } */\n+};\n+template<bool> struct S {\n+  S(unsigned int = BBB::foo()->AAA::get()); /* { dg-error \"is not a base of\" } */\n+};\n+template<bool> struct SS {\n+  SS(unsigned int = BBB::foo()->get());\n+};\n+\n+void bar()\n+{\n+  B().C::foo<0>(); /* { dg-error \"is not a member of\" } */\n+  BB().AA::foo<0>(); /* { dg-error \"within this context\" } */\n+\n+  int i;\n+  i.C::foo<0>(); /* { dg-error \"which is of non-class type\" } */\n+\n+  S<false> s;\n+  SS<false> ss; /* { dg-error \"within this context\" } */\n+}"}]}