{"sha": "bb93020ff852fb159bc329bbaea12a33a4ef6761", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI5MzAyMGZmODUyZmIxNTliYzMyOWJiYWVhMTJhMzNhNGVmNjc2MQ==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2020-10-24T08:48:44Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2020-11-01T20:28:57Z"}, "message": "Objective-C : Implement SEL as a built-in typedef.\n\nThe reference implementation for Objective-C provides the SEL\ntypedef (although it is also available from <objc/objc.h>).\n\ngcc/objc/ChangeLog:\n\n\t* objc-act.c (synth_module_prologue): Get the SEL identifier.\n\t* objc-act.h (enum objc_tree_index): Add OCTI_SEL_NAME.\n\t(objc_selector_name): New.\n\t(SEL_TYPEDEF_NAME): New.\n\t* objc-gnu-runtime-abi-01.c\n\t(gnu_runtime_01_initialize): Initialize SEL typedef.\n\t* objc-next-runtime-abi-01.c\n\t(next_runtime_01_initialize): Likewise.\n\t* objc-next-runtime-abi-02.c\n\ngcc/testsuite/ChangeLog:\n\n\t* obj-c++.dg/SEL-typedef.mm: New test.\n\t* objc.dg/SEL-typedef.m: New test.", "tree": {"sha": "3e568e503293dc71ed8c26a6eb95dff25945d1bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e568e503293dc71ed8c26a6eb95dff25945d1bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb93020ff852fb159bc329bbaea12a33a4ef6761", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb93020ff852fb159bc329bbaea12a33a4ef6761", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb93020ff852fb159bc329bbaea12a33a4ef6761", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb93020ff852fb159bc329bbaea12a33a4ef6761/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a2cc1e8438ee853900f20880ca8858c17486b10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a2cc1e8438ee853900f20880ca8858c17486b10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a2cc1e8438ee853900f20880ca8858c17486b10"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "0393bc445008e0e4c62ad6814e96cb181f812675", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb93020ff852fb159bc329bbaea12a33a4ef6761/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb93020ff852fb159bc329bbaea12a33a4ef6761/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=bb93020ff852fb159bc329bbaea12a33a4ef6761", "patch": "@@ -2954,6 +2954,7 @@ synth_module_prologue (void)\n   objc_object_name = get_identifier (OBJECT_TYPEDEF_NAME);\n   objc_instancetype_name = get_identifier (INSTANCE_TYPEDEF_NAME);\n   objc_class_name = get_identifier (CLASS_TYPEDEF_NAME);\n+  objc_selector_name = get_identifier (SEL_TYPEDEF_NAME);\n \n   /* Declare the 'id', 'instancetype' and 'Class' typedefs.  */\n   type = lang_hooks.decls.pushdecl (build_decl (input_location,"}, {"sha": "db71b6a265ee7a2576d27c335576213c4bf5e670", "filename": "gcc/objc/objc-act.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb93020ff852fb159bc329bbaea12a33a4ef6761/gcc%2Fobjc%2Fobjc-act.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb93020ff852fb159bc329bbaea12a33a4ef6761/gcc%2Fobjc%2Fobjc-act.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.h?ref=bb93020ff852fb159bc329bbaea12a33a4ef6761", "patch": "@@ -371,6 +371,7 @@ enum objc_tree_index\n     OCTI_ID_NAME,\n     OCTI_INSTANCETYPE_NAME,\n     OCTI_CLASS_NAME,\n+    OCTI_SEL_NAME,\n     OCTI_CNST_STR_ID,\n     OCTI_CNST_STR_TYPE,\n     OCTI_CNST_STR_GLOB_ID,\n@@ -576,6 +577,7 @@ extern GTY(()) tree objc_global_trees[OCTI_MAX];\n #define objc_object_name        objc_global_trees[OCTI_ID_NAME]\n #define objc_instancetype_name\tobjc_global_trees[OCTI_INSTANCETYPE_NAME]\n #define objc_class_name\t\tobjc_global_trees[OCTI_CLASS_NAME]\n+#define objc_selector_name\tobjc_global_trees[OCTI_SEL_NAME]\n \n /* Constant string classes.  */\n #define constant_string_id\tobjc_global_trees[OCTI_CNST_STR_ID]\n@@ -614,6 +616,7 @@ extern GTY(()) tree objc_global_trees[OCTI_MAX];\n #define OBJECT_TYPEDEF_NAME\t\t\"id\"\n #define INSTANCE_TYPEDEF_NAME\t\t\"instancetype\"\n #define CLASS_TYPEDEF_NAME\t\t\"Class\"\n+#define SEL_TYPEDEF_NAME\t\t\"SEL\"\n \n #define TAG_OBJECT\t\t\t\"objc_object\"\n #define TAG_CLASS\t\t\t\"objc_class\""}, {"sha": "ac9a8626f4049bec26701fc0ae3f40179831de47", "filename": "gcc/objc/objc-gnu-runtime-abi-01.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb93020ff852fb159bc329bbaea12a33a4ef6761/gcc%2Fobjc%2Fobjc-gnu-runtime-abi-01.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb93020ff852fb159bc329bbaea12a33a4ef6761/gcc%2Fobjc%2Fobjc-gnu-runtime-abi-01.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-gnu-runtime-abi-01.c?ref=bb93020ff852fb159bc329bbaea12a33a4ef6761", "patch": "@@ -208,6 +208,13 @@ static void gnu_runtime_01_initialize (void)\n   type = build_qualified_type (type, TYPE_QUAL_CONST);\n   objc_selector_type = build_pointer_type (type);\n \n+  /* SEL typedef.  */\n+  type = lang_hooks.decls.pushdecl (build_decl (input_location,\n+\t\t\t\t\t\tTYPE_DECL,\n+\t\t\t\t\t\tobjc_selector_name,\n+\t\t\t\t\t\tobjc_selector_type));\n+  TREE_NO_WARNING (type) = 1;\n+\n   /* typedef id (*IMP)(id, SEL, ...); */\n   ftype = build_varargs_function_type_list (objc_object_type,\n \t\t\t\t\t    objc_object_type,"}, {"sha": "7fc449bab413e417d98c95991fd774afcb46eebd", "filename": "gcc/objc/objc-next-runtime-abi-01.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb93020ff852fb159bc329bbaea12a33a4ef6761/gcc%2Fobjc%2Fobjc-next-runtime-abi-01.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb93020ff852fb159bc329bbaea12a33a4ef6761/gcc%2Fobjc%2Fobjc-next-runtime-abi-01.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-next-runtime-abi-01.c?ref=bb93020ff852fb159bc329bbaea12a33a4ef6761", "patch": "@@ -277,6 +277,13 @@ static void next_runtime_01_initialize (void)\n   objc_selector_type = build_pointer_type (xref_tag (RECORD_TYPE,\n \t\t\t\t\t   get_identifier (TAG_SELECTOR)));\n \n+  /* SEL typedef.  */\n+  type = lang_hooks.decls.pushdecl (build_decl (input_location,\n+\t\t\t\t\t\tTYPE_DECL,\n+\t\t\t\t\t\tobjc_selector_name,\n+\t\t\t\t\t\tobjc_selector_type));\n+  TREE_NO_WARNING (type) = 1;\n+\n   build_v1_class_template ();\n   build_super_template ();\n   build_v1_protocol_template ();"}, {"sha": "f3c285a937bae994d13ae84afbc173610214ca20", "filename": "gcc/objc/objc-next-runtime-abi-02.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb93020ff852fb159bc329bbaea12a33a4ef6761/gcc%2Fobjc%2Fobjc-next-runtime-abi-02.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb93020ff852fb159bc329bbaea12a33a4ef6761/gcc%2Fobjc%2Fobjc-next-runtime-abi-02.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-next-runtime-abi-02.c?ref=bb93020ff852fb159bc329bbaea12a33a4ef6761", "patch": "@@ -374,6 +374,13 @@ static void next_runtime_02_initialize (void)\n   objc_selector_type = build_pointer_type (xref_tag (RECORD_TYPE,\n \t\t\t\t\t   get_identifier (TAG_SELECTOR)));\n \n+  /* SEL typedef.  */\n+  type = lang_hooks.decls.pushdecl (build_decl (input_location,\n+\t\t\t\t\t\tTYPE_DECL,\n+\t\t\t\t\t\tobjc_selector_name,\n+\t\t\t\t\t\tobjc_selector_type));\n+  TREE_NO_WARNING (type) = 1;\n+\n   /* IMP : id (*) (id, _message_ref_t*, ...)\n      SUPER_IMP : id (*) ( super_t*, _super_message_ref_t*, ...)\n      objc_v2_selector_type.  */"}, {"sha": "2ece1fd46cdf70f76307d213d88b5ab9c93206ce", "filename": "gcc/testsuite/obj-c++.dg/SEL-typedef.mm", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb93020ff852fb159bc329bbaea12a33a4ef6761/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2FSEL-typedef.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb93020ff852fb159bc329bbaea12a33a4ef6761/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2FSEL-typedef.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2FSEL-typedef.mm?ref=bb93020ff852fb159bc329bbaea12a33a4ef6761", "patch": "@@ -0,0 +1,7 @@\n+/* Check that we accept the SEL typedef.  */\n+/*  { dg-additional-options \"-fsyntax-only \" } */\n+\n+SEL aSelector;\n+\n+typedef SEL MySEL;\n+"}, {"sha": "2ece1fd46cdf70f76307d213d88b5ab9c93206ce", "filename": "gcc/testsuite/objc.dg/SEL-typedef.m", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb93020ff852fb159bc329bbaea12a33a4ef6761/gcc%2Ftestsuite%2Fobjc.dg%2FSEL-typedef.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb93020ff852fb159bc329bbaea12a33a4ef6761/gcc%2Ftestsuite%2Fobjc.dg%2FSEL-typedef.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2FSEL-typedef.m?ref=bb93020ff852fb159bc329bbaea12a33a4ef6761", "patch": "@@ -0,0 +1,7 @@\n+/* Check that we accept the SEL typedef.  */\n+/*  { dg-additional-options \"-fsyntax-only \" } */\n+\n+SEL aSelector;\n+\n+typedef SEL MySEL;\n+"}]}