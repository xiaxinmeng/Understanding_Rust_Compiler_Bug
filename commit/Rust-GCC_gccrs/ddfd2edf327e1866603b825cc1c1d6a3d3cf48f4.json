{"sha": "ddfd2edf327e1866603b825cc1c1d6a3d3cf48f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRmZDJlZGYzMjdlMTg2NjYwM2I4MjVjYzFjMWQ2YTNkM2NmNDhmNA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2011-09-27T08:27:31Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2011-09-27T08:27:31Z"}, "message": "gcc/\n\t* config/arm/neon.md (neon_vget_highv16qi, neon_vget_highv8hi)\n\t(neon_vget_highv4si, neon_vget_highv4sf, neon_vget_highv2di)\n\t(neon_vget_lowv16qi, neon_vget_lowv8hi, neon_vget_lowv4si)\n\t(neon_vget_lowv4sf, neon_vget_lowv2di): Turn into define_expands\n\tthat produce subreg moves.  Define using VQX iterators.\n\nFrom-SVN: r179243", "tree": {"sha": "1089375b8ea853d003d17619db8d59edb49f315f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1089375b8ea853d003d17619db8d59edb49f315f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddfd2edf327e1866603b825cc1c1d6a3d3cf48f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddfd2edf327e1866603b825cc1c1d6a3d3cf48f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddfd2edf327e1866603b825cc1c1d6a3d3cf48f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddfd2edf327e1866603b825cc1c1d6a3d3cf48f4/comments", "author": null, "committer": null, "parents": [{"sha": "1cd12949e12ec05f9730ce1663aca7e00e00d867", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cd12949e12ec05f9730ce1663aca7e00e00d867", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cd12949e12ec05f9730ce1663aca7e00e00d867"}], "stats": {"total": 196, "additions": 24, "deletions": 172}, "files": [{"sha": "1abfbba235f7ee398ba6aef1062f99f1503e8889", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddfd2edf327e1866603b825cc1c1d6a3d3cf48f4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddfd2edf327e1866603b825cc1c1d6a3d3cf48f4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ddfd2edf327e1866603b825cc1c1d6a3d3cf48f4", "patch": "@@ -1,3 +1,11 @@\n+2011-09-27  Richard Sandiford  <richard.sandiford@linaro.org>\n+\n+\t* config/arm/neon.md (neon_vget_highv16qi, neon_vget_highv8hi)\n+\t(neon_vget_highv4si, neon_vget_highv4sf, neon_vget_highv2di)\n+\t(neon_vget_lowv16qi, neon_vget_lowv8hi, neon_vget_lowv4si)\n+\t(neon_vget_lowv4sf, neon_vget_lowv2di): Turn into define_expands\n+\tthat produce subreg moves.  Define using VQX iterators.\n+\n 2011-09-27  Georg-Johann Lay  <avr@gjlay.de>\n \n \t* config/avr/avr.md (ashrqi3): Split alternative \"n\""}, {"sha": "5be3cf7a38f34be0db24aa5638cbf42b19ddcf3b", "filename": "gcc/config/arm/neon.md", "status": "modified", "additions": 16, "deletions": 172, "changes": 188, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddfd2edf327e1866603b825cc1c1d6a3d3cf48f4/gcc%2Fconfig%2Farm%2Fneon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddfd2edf327e1866603b825cc1c1d6a3d3cf48f4/gcc%2Fconfig%2Farm%2Fneon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fneon.md?ref=ddfd2edf327e1866603b825cc1c1d6a3d3cf48f4", "patch": "@@ -2969,183 +2969,27 @@\n    (set_attr \"neon_type\" \"neon_bp_simple\")]\n )\n \n-(define_insn \"neon_vget_highv16qi\"\n-  [(set (match_operand:V8QI 0 \"s_register_operand\" \"=w\")\n-\t(vec_select:V8QI (match_operand:V16QI 1 \"s_register_operand\" \"w\")\n-                         (parallel [(const_int 8) (const_int 9)\n-\t\t\t            (const_int 10) (const_int 11)\n-\t\t\t\t    (const_int 12) (const_int 13)\n-\t\t\t\t    (const_int 14) (const_int 15)])))]\n-  \"TARGET_NEON\"\n-{\n-  int dest = REGNO (operands[0]);\n-  int src = REGNO (operands[1]);\n-\n-  if (dest != src + 2)\n-    return \"vmov\\t%P0, %f1\";\n-  else\n-    return \"\";\n-}\n-  [(set_attr \"neon_type\" \"neon_bp_simple\")]\n-)\n-\n-(define_insn \"neon_vget_highv8hi\"\n-  [(set (match_operand:V4HI 0 \"s_register_operand\" \"=w\")\n-\t(vec_select:V4HI (match_operand:V8HI 1 \"s_register_operand\" \"w\")\n-\t                 (parallel [(const_int 4) (const_int 5)\n-\t\t\t            (const_int 6) (const_int 7)])))]\n-  \"TARGET_NEON\"\n-{\n-  int dest = REGNO (operands[0]);\n-  int src = REGNO (operands[1]);\n-\n-  if (dest != src + 2)\n-    return \"vmov\\t%P0, %f1\";\n-  else\n-    return \"\";\n-}\n-  [(set_attr \"neon_type\" \"neon_bp_simple\")]\n-)\n-\n-(define_insn \"neon_vget_highv4si\"\n-  [(set (match_operand:V2SI 0 \"s_register_operand\" \"=w\")\n-\t(vec_select:V2SI (match_operand:V4SI 1 \"s_register_operand\" \"w\")\n-\t                 (parallel [(const_int 2) (const_int 3)])))]\n-  \"TARGET_NEON\"\n-{\n-  int dest = REGNO (operands[0]);\n-  int src = REGNO (operands[1]);\n-\n-  if (dest != src + 2)\n-    return \"vmov\\t%P0, %f1\";\n-  else\n-    return \"\";\n-}\n-  [(set_attr \"neon_type\" \"neon_bp_simple\")]\n-)\n-\n-(define_insn \"neon_vget_highv4sf\"\n-  [(set (match_operand:V2SF 0 \"s_register_operand\" \"=w\")\n-\t(vec_select:V2SF (match_operand:V4SF 1 \"s_register_operand\" \"w\")\n-\t                 (parallel [(const_int 2) (const_int 3)])))]\n-  \"TARGET_NEON\"\n-{\n-  int dest = REGNO (operands[0]);\n-  int src = REGNO (operands[1]);\n-\n-  if (dest != src + 2)\n-    return \"vmov\\t%P0, %f1\";\n-  else\n-    return \"\";\n-}\n-  [(set_attr \"neon_type\" \"neon_bp_simple\")]\n-)\n-\n-(define_insn \"neon_vget_highv2di\"\n-  [(set (match_operand:DI 0 \"s_register_operand\" \"=w\")\n-\t(vec_select:DI (match_operand:V2DI 1 \"s_register_operand\" \"w\")\n-\t               (parallel [(const_int 1)])))]\n+(define_expand \"neon_vget_high<mode>\"\n+  [(match_operand:<V_HALF> 0 \"s_register_operand\")\n+   (match_operand:VQX 1 \"s_register_operand\")]\n   \"TARGET_NEON\"\n {\n-  int dest = REGNO (operands[0]);\n-  int src = REGNO (operands[1]);\n-\n-  if (dest != src + 2)\n-    return \"vmov\\t%P0, %f1\";\n-  else\n-    return \"\";\n-}\n-  [(set_attr \"neon_type\" \"neon_bp_simple\")]\n-)\n-\n-(define_insn \"neon_vget_lowv16qi\"\n-  [(set (match_operand:V8QI 0 \"s_register_operand\" \"=w\")\n-\t(vec_select:V8QI (match_operand:V16QI 1 \"s_register_operand\" \"w\")\n-                         (parallel [(const_int 0) (const_int 1)\n-\t\t\t            (const_int 2) (const_int 3)\n-\t\t\t\t    (const_int 4) (const_int 5)\n-\t\t\t\t    (const_int 6) (const_int 7)])))]\n-  \"TARGET_NEON\"\n-{\n-  int dest = REGNO (operands[0]);\n-  int src = REGNO (operands[1]);\n-\n-  if (dest != src)\n-    return \"vmov\\t%P0, %e1\";\n-  else\n-    return \"\";\n-}\n-  [(set_attr \"neon_type\" \"neon_bp_simple\")]\n-)\n-\n-(define_insn \"neon_vget_lowv8hi\"\n-  [(set (match_operand:V4HI 0 \"s_register_operand\" \"=w\")\n-\t(vec_select:V4HI (match_operand:V8HI 1 \"s_register_operand\" \"w\")\n-\t                 (parallel [(const_int 0) (const_int 1)\n-\t\t\t            (const_int 2) (const_int 3)])))]\n-  \"TARGET_NEON\"\n-{\n-  int dest = REGNO (operands[0]);\n-  int src = REGNO (operands[1]);\n-\n-  if (dest != src)\n-    return \"vmov\\t%P0, %e1\";\n-  else\n-    return \"\";\n-}\n-  [(set_attr \"neon_type\" \"neon_bp_simple\")]\n-)\n-\n-(define_insn \"neon_vget_lowv4si\"\n-  [(set (match_operand:V2SI 0 \"s_register_operand\" \"=w\")\n-\t(vec_select:V2SI (match_operand:V4SI 1 \"s_register_operand\" \"w\")\n-\t                 (parallel [(const_int 0) (const_int 1)])))]\n-  \"TARGET_NEON\"\n-{\n-  int dest = REGNO (operands[0]);\n-  int src = REGNO (operands[1]);\n-\n-  if (dest != src)\n-    return \"vmov\\t%P0, %e1\";\n-  else\n-    return \"\";\n-}\n-  [(set_attr \"neon_type\" \"neon_bp_simple\")]\n-)\n-\n-(define_insn \"neon_vget_lowv4sf\"\n-  [(set (match_operand:V2SF 0 \"s_register_operand\" \"=w\")\n-\t(vec_select:V2SF (match_operand:V4SF 1 \"s_register_operand\" \"w\")\n-\t                 (parallel [(const_int 0) (const_int 1)])))]\n-  \"TARGET_NEON\"\n-{\n-  int dest = REGNO (operands[0]);\n-  int src = REGNO (operands[1]);\n-\n-  if (dest != src)\n-    return \"vmov\\t%P0, %e1\";\n-  else\n-    return \"\";\n-}\n-  [(set_attr \"neon_type\" \"neon_bp_simple\")]\n-)\n+  emit_move_insn (operands[0],\n+\t\t  simplify_gen_subreg (<V_HALF>mode, operands[1], <MODE>mode,\n+\t\t\t\t       GET_MODE_SIZE (<V_HALF>mode)));\n+  DONE;\n+})\n \n-(define_insn \"neon_vget_lowv2di\"\n-  [(set (match_operand:DI 0 \"s_register_operand\" \"=w\")\n-\t(vec_select:DI (match_operand:V2DI 1 \"s_register_operand\" \"w\")\n-\t               (parallel [(const_int 0)])))]\n+(define_expand \"neon_vget_low<mode>\"\n+  [(match_operand:<V_HALF> 0 \"s_register_operand\")\n+   (match_operand:VQX 1 \"s_register_operand\")]\n   \"TARGET_NEON\"\n {\n-  int dest = REGNO (operands[0]);\n-  int src = REGNO (operands[1]);\n-\n-  if (dest != src)\n-    return \"vmov\\t%P0, %e1\";\n-  else\n-    return \"\";\n-}\n-  [(set_attr \"neon_type\" \"neon_bp_simple\")]\n-)\n+  emit_move_insn (operands[0],\n+\t\t  simplify_gen_subreg (<V_HALF>mode, operands[1],\n+\t\t\t\t       <MODE>mode, 0));\n+  DONE;\n+})\n \n (define_insn \"neon_vcvt<mode>\"\n   [(set (match_operand:<V_CVTTO> 0 \"s_register_operand\" \"=w\")"}]}