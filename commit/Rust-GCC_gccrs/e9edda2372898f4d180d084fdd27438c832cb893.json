{"sha": "e9edda2372898f4d180d084fdd27438c832cb893", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTllZGRhMjM3Mjg5OGY0ZDE4MGQwODRmZGQyNzQzOGM4MzJjYjg5Mw==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2009-07-11T08:28:34Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2009-07-11T08:28:34Z"}, "message": "expmed.c (emit_store_flag_1): Fix choice of zero vs.\n\n2009-07-11  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* expmed.c (emit_store_flag_1): Fix choice of zero vs. sign extension.\n\n2009-07-11  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* gcc.c-torture/execute/20090711-1.c: New test.\n\nFrom-SVN: r149509", "tree": {"sha": "c2c59b221188a05f86f030b5329eaabab71f14dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2c59b221188a05f86f030b5329eaabab71f14dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9edda2372898f4d180d084fdd27438c832cb893", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9edda2372898f4d180d084fdd27438c832cb893", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9edda2372898f4d180d084fdd27438c832cb893", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9edda2372898f4d180d084fdd27438c832cb893/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "33cde5161f2bc0738d24bcafe8ea9a858a63f9f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33cde5161f2bc0738d24bcafe8ea9a858a63f9f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33cde5161f2bc0738d24bcafe8ea9a858a63f9f4"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "3e626352ec126caac5e9cb8ac8f3ee1111198d8a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9edda2372898f4d180d084fdd27438c832cb893/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9edda2372898f4d180d084fdd27438c832cb893/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e9edda2372898f4d180d084fdd27438c832cb893", "patch": "@@ -1,3 +1,7 @@\n+2009-07-11  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* expmed.c (emit_store_flag_1): Fix choice of zero vs. sign extension.\n+\n 2009-07-10  DJ Delorie  <dj@redhat.com>\n \n \t* config/mep/mep.c (mep_can_inline_p): Correct logic, and simplify."}, {"sha": "c73bf21f67107a9738b5e9ea330927b3ac6d739f", "filename": "gcc/expmed.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9edda2372898f4d180d084fdd27438c832cb893/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9edda2372898f4d180d084fdd27438c832cb893/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=e9edda2372898f4d180d084fdd27438c832cb893", "patch": "@@ -5343,7 +5343,7 @@ emit_store_flag_1 (rtx target, enum rtx_code code, rtx op0, rtx op1,\n \t    target = gen_reg_rtx (target_mode);\n \n \t  convert_move (target, tem,\n-\t\t\t0 == (STORE_FLAG_VALUE\n+\t\t\t0 == ((normalizep ? normalizep : STORE_FLAG_VALUE)\n \t\t\t      & ((HOST_WIDE_INT) 1\n \t\t\t\t << (GET_MODE_BITSIZE (word_mode) -1))));\n \t  return target;"}, {"sha": "7a477b3b9b62cbf284877909065787560d4036b1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9edda2372898f4d180d084fdd27438c832cb893/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9edda2372898f4d180d084fdd27438c832cb893/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e9edda2372898f4d180d084fdd27438c832cb893", "patch": "@@ -1,3 +1,7 @@\n+2009-07-11  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* gcc.c-torture/execute/20090711-1.c: New test.\n+\n 2009-07-11  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \tPR testsuite/40699"}, {"sha": "5c3d93a37ed7935f9cde044c87ba350842f8c12c", "filename": "gcc/testsuite/gcc.c-torture/execute/20090711-1.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9edda2372898f4d180d084fdd27438c832cb893/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20090711-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9edda2372898f4d180d084fdd27438c832cb893/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20090711-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20090711-1.c?ref=e9edda2372898f4d180d084fdd27438c832cb893", "patch": "@@ -0,0 +1,21 @@\n+/* Used to be miscompiled at -O0 due to incorrect choice of sign extension\n+   vs. zero extension.  __attribute__ ((noinline)) added to try to make it\n+   fail at higher optimization levels too.  */\n+\n+extern void abort (void);\n+\n+long long __attribute__ ((noinline))\n+div (long long val)\n+{\n+  return val / 32768;\n+}\n+\n+int main (void)\n+{\n+  long long d1 = -990000000;\n+  long long d2 = div(d1);\n+  if (d2 != -30212)\n+    abort ();\n+  return 0;\n+}\n+"}]}