{"sha": "8fd94bdae7cd721efb0c3d3eacb986646d01ea83", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZkOTRiZGFlN2NkNzIxZWZiMGMzZDNlYWNiOTg2NjQ2ZDAxZWE4Mw==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2009-02-11T00:06:31Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2009-02-11T00:06:31Z"}, "message": "extend.texi (Fixed-Point Types): Break long paragraphs into bulleted lists.\n\n\t* doc/extend.texi (Fixed-Point Types): Break long paragraphs into\n\tbulleted lists.\n\nFrom-SVN: r144086", "tree": {"sha": "8f0d98149f52512deb547d32a1aa6f3e21273fa5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f0d98149f52512deb547d32a1aa6f3e21273fa5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fd94bdae7cd721efb0c3d3eacb986646d01ea83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fd94bdae7cd721efb0c3d3eacb986646d01ea83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fd94bdae7cd721efb0c3d3eacb986646d01ea83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fd94bdae7cd721efb0c3d3eacb986646d01ea83/comments", "author": null, "committer": null, "parents": [{"sha": "794511d20a377c604fa6b0752ad9ba0e035ccfb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/794511d20a377c604fa6b0752ad9ba0e035ccfb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/794511d20a377c604fa6b0752ad9ba0e035ccfb0"}], "stats": {"total": 96, "additions": 60, "deletions": 36}, "files": [{"sha": "1d32e094e3ed77155c012fcce356f0860516c211", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fd94bdae7cd721efb0c3d3eacb986646d01ea83/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fd94bdae7cd721efb0c3d3eacb986646d01ea83/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8fd94bdae7cd721efb0c3d3eacb986646d01ea83", "patch": "@@ -1,3 +1,8 @@\n+2009-02-10  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* doc/extend.texi (Fixed-Point Types): Break long paragraphs into\n+\tbulleted lists.\n+\n 2009-02-10  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* alias.h (record_alias_subset): Declare."}, {"sha": "436a0693675b41197082da4462050fffba356de5", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 55, "deletions": 36, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fd94bdae7cd721efb0c3d3eacb986646d01ea83/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fd94bdae7cd721efb0c3d3eacb986646d01ea83/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=8fd94bdae7cd721efb0c3d3eacb986646d01ea83", "patch": "@@ -1069,45 +1069,64 @@ The fixed-point types are\n @code{_Sat unsigned _Accum},\n @code{_Sat unsigned long _Accum},\n @code{_Sat unsigned long long _Accum}.\n+\n Fixed-point data values contain fractional and optional integral parts.\n The format of fixed-point data varies and depends on the target machine.\n \n-Support for fixed-point types includes prefix and postfix increment\n-and decrement operators (@code{++}, @code{--}); unary arithmetic operators\n-(@code{+}, @code{-}, @code{!}); binary arithmetic operators (@code{+},\n-@code{-}, @code{*}, @code{/}); binary shift operators (@code{<<}, @code{>>});\n-relational operators (@code{<}, @code{<=}, @code{>=}, @code{>});\n-equality operators (@code{==}, @code{!=}); assignment operators\n-(@code{+=}, @code{-=}, @code{*=}, @code{/=}, @code{<<=}, @code{>>=});\n-and conversions to and from integer, floating-point, or fixed-point types.\n-\n-Use a suffix @samp{hr} or @samp{HR} in a literal constant of type\n-@code{short _Fract} and @code{_Sat short _Fract},\n-@samp{r} or @samp{R} for @code{_Fract} and @code{_Sat _Fract},\n-@samp{lr} or @samp{LR} for @code{long _Fract} and @code{_Sat long _Fract},\n-@samp{llr} or @samp{LLR} for @code{long long _Fract} and\n-@code{_Sat long long _Fract},\n-@samp{uhr} or @samp{UHR} for @code{unsigned short _Fract} and\n-@code{_Sat unsigned short _Fract},\n-@samp{ur} or @samp{UR} for @code{unsigned _Fract} and\n-@code{_Sat unsigned _Fract},\n-@samp{ulr} or @samp{ULR} for @code{unsigned long _Fract} and\n-@code{_Sat unsigned long _Fract},\n-@samp{ullr} or @samp{ULLR} for @code{unsigned long long _Fract}\n-and @code{_Sat unsigned long long _Fract},\n-@samp{hk} or @samp{HK} for @code{short _Accum} and @code{_Sat short _Accum},\n-@samp{k} or @samp{K} for @code{_Accum} and @code{_Sat _Accum},\n-@samp{lk} or @samp{LK} for @code{long _Accum} and @code{_Sat long _Accum},\n-@samp{llk} or @samp{LLK} for @code{long long _Accum} and\n-@code{_Sat long long _Accum},\n-@samp{uhk} or @samp{UHK} for @code{unsigned short _Accum} and\n-@code{_Sat unsigned short _Accum},\n-@samp{uk} or @samp{UK} for @code{unsigned _Accum} and\n-@code{_Sat unsigned _Accum},\n-@samp{ulk} or @samp{ULK} for @code{unsigned long _Accum} and\n-@code{_Sat unsigned long _Accum},\n-and @samp{ullk} or @samp{ULLK} for @code{unsigned long long _Accum}\n-and @code{_Sat unsigned long long _Accum}.\n+Support for fixed-point types includes:\n+@itemize @bullet\n+@item\n+prefix and postfix increment and decrement operators (@code{++}, @code{--})\n+@item\n+unary arithmetic operators (@code{+}, @code{-}, @code{!})\n+@item\n+binary arithmetic operators (@code{+}, @code{-}, @code{*}, @code{/})\n+@item\n+binary shift operators (@code{<<}, @code{>>})\n+@item\n+relational operators (@code{<}, @code{<=}, @code{>=}, @code{>})\n+@item\n+equality operators (@code{==}, @code{!=})\n+@item\n+assignment operators (@code{+=}, @code{-=}, @code{*=}, @code{/=},\n+@code{<<=}, @code{>>=})\n+@item\n+conversions to and from integer, floating-point, or fixed-point types\n+@end itemize\n+\n+Use a suffix in a fixed-point literal constant:\n+@itemize\n+@item @samp{hr} or @samp{HR} for @code{short _Fract} and\n+@code{_Sat short _Fract}\n+@item @samp{r} or @samp{R} for @code{_Fract} and @code{_Sat _Fract}\n+@item @samp{lr} or @samp{LR} for @code{long _Fract} and\n+@code{_Sat long _Fract}\n+@item @samp{llr} or @samp{LLR} for @code{long long _Fract} and\n+@code{_Sat long long _Fract}\n+@item @samp{uhr} or @samp{UHR} for @code{unsigned short _Fract} and\n+@code{_Sat unsigned short _Fract}\n+@item @samp{ur} or @samp{UR} for @code{unsigned _Fract} and\n+@code{_Sat unsigned _Fract}\n+@item @samp{ulr} or @samp{ULR} for @code{unsigned long _Fract} and\n+@code{_Sat unsigned long _Fract}\n+@item @samp{ullr} or @samp{ULLR} for @code{unsigned long long _Fract}\n+and @code{_Sat unsigned long long _Fract}\n+@item @samp{hk} or @samp{HK} for @code{short _Accum} and\n+@code{_Sat short _Accum}\n+@item @samp{k} or @samp{K} for @code{_Accum} and @code{_Sat _Accum}\n+@item @samp{lk} or @samp{LK} for @code{long _Accum} and\n+@code{_Sat long _Accum}\n+@item @samp{llk} or @samp{LLK} for @code{long long _Accum} and\n+@code{_Sat long long _Accum}\n+@item @samp{uhk} or @samp{UHK} for @code{unsigned short _Accum} and\n+@code{_Sat unsigned short _Accum}\n+@item @samp{uk} or @samp{UK} for @code{unsigned _Accum} and\n+@code{_Sat unsigned _Accum}\n+@item @samp{ulk} or @samp{ULK} for @code{unsigned long _Accum} and\n+@code{_Sat unsigned long _Accum}\n+@item @samp{ullk} or @samp{ULLK} for @code{unsigned long long _Accum}\n+and @code{_Sat unsigned long long _Accum}\n+@end itemize\n \n GCC support of fixed-point types as specified by the draft technical report\n is incomplete:"}]}