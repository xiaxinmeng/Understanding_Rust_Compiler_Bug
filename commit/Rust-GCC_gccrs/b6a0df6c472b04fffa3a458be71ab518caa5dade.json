{"sha": "b6a0df6c472b04fffa3a458be71ab518caa5dade", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZhMGRmNmM0NzJiMDRmZmZhM2E0NThiZTcxYWI1MThjYWE1ZGFkZQ==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-03-02T20:56:46Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-03-02T20:56:46Z"}, "message": "re PR target/31640 (cache block alignment is too aggressive on sh-elf)\n\n\tPR target/31640\n\t* config/sh/sh.h (LOOP_ALIGN): Move logic to sh_loop_align.\n\t* config/sh/sh.c: Update copyright notice dates.\n\t(sh_loop_align): Add logic from LOOP_ALIGN.  Don't disable loop\n\talignment for TARGET_HARD_SH4.\n\t(sh_option_override): Reduce default function alignment.  Set \n\tloop alignment to 4 bytes when not optimizing for size.\n\nFrom-SVN: r184825", "tree": {"sha": "c500e77938ee84f8b9b3be4c205131a0aceaa32a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c500e77938ee84f8b9b3be4c205131a0aceaa32a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6a0df6c472b04fffa3a458be71ab518caa5dade", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6a0df6c472b04fffa3a458be71ab518caa5dade", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6a0df6c472b04fffa3a458be71ab518caa5dade", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6a0df6c472b04fffa3a458be71ab518caa5dade/comments", "author": null, "committer": null, "parents": [{"sha": "cd33b08fbde7a7868f902161b4caeb6a3a2b42ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd33b08fbde7a7868f902161b4caeb6a3a2b42ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd33b08fbde7a7868f902161b4caeb6a3a2b42ae"}], "stats": {"total": 57, "additions": 45, "deletions": 12}, "files": [{"sha": "94e66c07c1e86d2686c10ca747e206f86d83d2c5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6a0df6c472b04fffa3a458be71ab518caa5dade/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6a0df6c472b04fffa3a458be71ab518caa5dade/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b6a0df6c472b04fffa3a458be71ab518caa5dade", "patch": "@@ -1,3 +1,13 @@\n+2012-01-02  Oleg Endo  <olegendo@gcc.gnu.org>\n+ \n+\tPR target/31640\n+\t* config/sh/sh.h (LOOP_ALIGN): Move logic to sh_loop_align.\n+\t* config/sh/sh.c: Update copyright notice dates.\n+\t(sh_loop_align): Add logic from LOOP_ALIGN.  Don't disable loop\n+\talignment for TARGET_HARD_SH4.\n+\t(sh_option_override): Reduce default function alignment.  Set \n+\tloop alignment to 4 bytes when not optimizing for size.\n+\n 2012-03-02  Maxim Kuvyrkov  <maxim@codesourcery.com>\n \n \tPR middle-end/50335"}, {"sha": "901a5a2b748fdbc356e571f23346234542e7c98a", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 34, "deletions": 9, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6a0df6c472b04fffa3a458be71ab518caa5dade/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6a0df6c472b04fffa3a458be71ab518caa5dade/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=b6a0df6c472b04fffa3a458be71ab518caa5dade", "patch": "@@ -1,6 +1,6 @@\n /* Output routines for GCC for Renesas / SuperH SH.\n    Copyright (C) 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-   2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n+   2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012\n    Free Software Foundation, Inc.\n    Contributed by Steve Chamberlain (sac@cygnus.com).\n    Improved by Jim Wilson (wilson@cygnus.com).\n@@ -816,20 +816,42 @@ sh_option_override (void)\n \t}\n     }\n \n+  /*  Adjust loop, jump and function alignment values (in bytes), if those\n+      were not specified by the user using -falign-loops, -falign-jumps\n+      and -falign-functions options.\n+      32 bit alignment is better for speed, because instructions can be\n+      fetched as a pair from a longword boundary.  For size use 16 bit\n+      alignment to get more compact code.\n+      Aligning all jumps increases the code size, even if it might\n+      result in slightly faster code.  Thus, it is set to the smallest \n+      alignment possible if not specified by the user.  */\n   if (align_loops == 0)\n-    align_loops =  1 << (TARGET_SH5 ? 3 : 2);\n+    {\n+      if (TARGET_SH5)\n+\talign_loops = 8;\n+      else\n+\talign_loops = optimize_size ? 2 : 4;\n+    }\n+\n   if (align_jumps == 0)\n-    align_jumps = 1 << CACHE_LOG;\n+    {\n+      if (TARGET_SHMEDIA)\n+\talign_jumps = 1 << CACHE_LOG;\n+      else\n+\talign_jumps = 2;\n+    }\n   else if (align_jumps < (TARGET_SHMEDIA ? 4 : 2))\n     align_jumps = TARGET_SHMEDIA ? 4 : 2;\n \n-  /* Allocation boundary (in *bytes*) for the code of a function.\n-     SH1: 32 bit alignment is faster, because instructions are always\n-     fetched as a pair from a longword boundary.\n-     SH2 .. SH5 : align to cache line start.  */\n   if (align_functions == 0)\n-    align_functions\n-      = optimize_size ? FUNCTION_BOUNDARY/8 : (1 << CACHE_LOG);\n+    {\n+      if (TARGET_SHMEDIA)\n+\talign_functions = optimize_size\n+\t\t\t  ? FUNCTION_BOUNDARY/8 : (1 << CACHE_LOG);\n+      else\n+\talign_functions = optimize_size ? 2 : 4;\n+    }\n+\n   /* The linker relaxation code breaks when a function contains\n      alignments that are larger than that at the start of a\n      compilation unit.  */\n@@ -5342,6 +5364,9 @@ sh_loop_align (rtx label)\n {\n   rtx next = label;\n \n+  if (! optimize || optimize_size)\n+    return 0;\n+\n   do\n     next = next_nonnote_insn (next);\n   while (next && LABEL_P (next));"}, {"sha": "7a2af0a2841b3fa9a04d4ce44a381f18fc62545b", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6a0df6c472b04fffa3a458be71ab518caa5dade/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6a0df6c472b04fffa3a458be71ab518caa5dade/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=b6a0df6c472b04fffa3a458be71ab518caa5dade", "patch": "@@ -579,9 +579,7 @@ extern enum sh_divide_strategy_e sh_div_strategy;\n #define LABEL_ALIGN_AFTER_BARRIER(LABEL_AFTER_BARRIER) \\\n   barrier_align (LABEL_AFTER_BARRIER)\n \n-#define LOOP_ALIGN(A_LABEL) \\\n-  ((! optimize || TARGET_HARD_SH4 || optimize_size) \\\n-   ? 0 : sh_loop_align (A_LABEL))\n+#define LOOP_ALIGN(A_LABEL) sh_loop_align (A_LABEL)\n \n #define LABEL_ALIGN(A_LABEL) \\\n (\t\t\t\t\t\t\t\t\t\\"}]}