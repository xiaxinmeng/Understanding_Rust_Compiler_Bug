{"sha": "51e10276d6792f67f1d88d90f299e7ac1b1f1f24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFlMTAyNzZkNjc5MmY2N2YxZDg4ZDkwZjI5OWU3YWMxYjFmMWYyNA==", "commit": {"author": {"name": "Jose E. Marchesi", "email": "jose.marchesi@oracle.com", "date": "2020-05-19T09:46:06Z"}, "committer": {"name": "Jose E. Marchesi", "email": "jose.marchesi@oracle.com", "date": "2020-05-19T09:46:06Z"}, "message": "bpf: add support for the -mxbpf option\n\nThis patch adds support for a new option -mxbpf.  This tells GCC to\ngenerate code for an expanded version of BPF that relaxes some of the\nrestrictions imposed by BPF.\n\n2020-05-19  Jose E. Marchesi  <jose.marchesi@oracle.com>\n\ngcc/\n\t* config/bpf/bpf.opt (mxbpf): New option.\n\t* doc/invoke.texi (Option Summary): Add -mxbpf.\n\t(eBPF Options): Document -mxbbpf.", "tree": {"sha": "db79e5d61bc6943638ff57d37f6b4ad2e1264a01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db79e5d61bc6943638ff57d37f6b4ad2e1264a01"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51e10276d6792f67f1d88d90f299e7ac1b1f1f24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51e10276d6792f67f1d88d90f299e7ac1b1f1f24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51e10276d6792f67f1d88d90f299e7ac1b1f1f24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51e10276d6792f67f1d88d90f299e7ac1b1f1f24/comments", "author": {"login": "jemarch", "id": 7061875, "node_id": "MDQ6VXNlcjcwNjE4NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/7061875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jemarch", "html_url": "https://github.com/jemarch", "followers_url": "https://api.github.com/users/jemarch/followers", "following_url": "https://api.github.com/users/jemarch/following{/other_user}", "gists_url": "https://api.github.com/users/jemarch/gists{/gist_id}", "starred_url": "https://api.github.com/users/jemarch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jemarch/subscriptions", "organizations_url": "https://api.github.com/users/jemarch/orgs", "repos_url": "https://api.github.com/users/jemarch/repos", "events_url": "https://api.github.com/users/jemarch/events{/privacy}", "received_events_url": "https://api.github.com/users/jemarch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jemarch", "id": 7061875, "node_id": "MDQ6VXNlcjcwNjE4NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/7061875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jemarch", "html_url": "https://github.com/jemarch", "followers_url": "https://api.github.com/users/jemarch/followers", "following_url": "https://api.github.com/users/jemarch/following{/other_user}", "gists_url": "https://api.github.com/users/jemarch/gists{/gist_id}", "starred_url": "https://api.github.com/users/jemarch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jemarch/subscriptions", "organizations_url": "https://api.github.com/users/jemarch/orgs", "repos_url": "https://api.github.com/users/jemarch/repos", "events_url": "https://api.github.com/users/jemarch/events{/privacy}", "received_events_url": "https://api.github.com/users/jemarch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00243d9a640a14413c4e051447e09741a543deae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00243d9a640a14413c4e051447e09741a543deae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00243d9a640a14413c4e051447e09741a543deae"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "ef3bcee391169ecd04809a781ec02ed9cccc22ee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51e10276d6792f67f1d88d90f299e7ac1b1f1f24/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51e10276d6792f67f1d88d90f299e7ac1b1f1f24/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=51e10276d6792f67f1d88d90f299e7ac1b1f1f24", "patch": "@@ -1,3 +1,9 @@\n+2020-05-19  Jose E. Marchesi  <jose.marchesi@oracle.com>\n+\n+\t* config/bpf/bpf.opt (mxbpf): New option.\n+\t* doc/invoke.texi (Option Summary): Add -mxbpf.\n+\t(eBPF Options): Document -mxbbpf.\n+\n 2020-05-19  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \tPR target/92658"}, {"sha": "6aa858408f135cfbcd2b72cabd7afd71c2bc21dc", "filename": "gcc/config/bpf/bpf.opt", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51e10276d6792f67f1d88d90f299e7ac1b1f1f24/gcc%2Fconfig%2Fbpf%2Fbpf.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51e10276d6792f67f1d88d90f299e7ac1b1f1f24/gcc%2Fconfig%2Fbpf%2Fbpf.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbpf%2Fbpf.opt?ref=51e10276d6792f67f1d88d90f299e7ac1b1f1f24", "patch": "@@ -108,6 +108,12 @@ Enum(bpf_kernel) String(5.1) Value(LINUX_V5_1)\n EnumValue\n Enum(bpf_kernel) String(5.2) Value(LINUX_V5_2)\n \n+; Use xBPF extensions.\n+\n+mxbpf\n+Target Report Mask(XBPF)\n+Generate xBPF.\n+\n ; Selecting big endian or little endian targets.\n \n mbig-endian"}, {"sha": "0c33deb830ba4365b55eab5cae06b77562f463ec", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51e10276d6792f67f1d88d90f299e7ac1b1f1f24/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51e10276d6792f67f1d88d90f299e7ac1b1f1f24/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=51e10276d6792f67f1d88d90f299e7ac1b1f1f24", "patch": "@@ -862,7 +862,7 @@ Objective-C and Objective-C++ Dialects}.\n \n @emph{eBPF Options}\n @gccoptlist{-mbig-endian -mlittle-endian -mkernel=@var{version}\n--mframe-limit=@var{bytes}}\n+-mframe-limit=@var{bytes} -mxbpf}\n \n @emph{FR30 Options}\n @gccoptlist{-msmall-model  -mno-lsim}\n@@ -21013,6 +21013,10 @@ Generate code for a big-endian target.\n @item -mlittle-endian\n @opindex mlittle-endian\n Generate code for a little-endian target.  This is the default.\n+\n+@item -mxbpf\n+Generate code for an expanded version of BPF, which relaxes some of\n+the restrictions imposed by the BPF architecture.\n @end table\n \n @node FR30 Options"}]}