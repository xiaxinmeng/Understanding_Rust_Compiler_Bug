{"sha": "96c493240211f9103b0a19d0411b2e8e4d0da11c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZjNDkzMjQwMjExZjkxMDNiMGExOWQwNDExYjJlOGU0ZDBkYTExYw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2009-12-08T08:52:28Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2009-12-08T08:52:28Z"}, "message": "re PR fortran/40961 (Document set_fpe(int))\n\n2009-12-08  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/40961\n        PR fortran/40377\n        * gfortran.texi (Non-Fortran Main Program): Add\n        _gfortran_set_fpe documentation.\n        (Interoperability with C): Mention array storage order.\n\nFrom-SVN: r155083", "tree": {"sha": "7a267c95812e3724441abed4c6e18961257d544d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a267c95812e3724441abed4c6e18961257d544d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96c493240211f9103b0a19d0411b2e8e4d0da11c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96c493240211f9103b0a19d0411b2e8e4d0da11c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96c493240211f9103b0a19d0411b2e8e4d0da11c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96c493240211f9103b0a19d0411b2e8e4d0da11c/comments", "author": null, "committer": null, "parents": [{"sha": "698861dc8d0d800c0eae3c704cbc86cbf2649a58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/698861dc8d0d800c0eae3c704cbc86cbf2649a58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/698861dc8d0d800c0eae3c704cbc86cbf2649a58"}], "stats": {"total": 61, "additions": 57, "deletions": 4}, "files": [{"sha": "24db229ee4fe1eb7f30d2f584a6bf4dd5105986a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96c493240211f9103b0a19d0411b2e8e4d0da11c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96c493240211f9103b0a19d0411b2e8e4d0da11c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=96c493240211f9103b0a19d0411b2e8e4d0da11c", "patch": "@@ -1,8 +1,16 @@\n+2009-12-08  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/40961\n+\tPR fortran/40377\n+\t* gfortran.texi (Non-Fortran Main Program): Add\n+\t_gfortran_set_fpe documentation.\n+\t(Interoperability with C): Mention array storage order.\n+\n 2009-12-07  Daniel Franke  <franke.daniel@gmail.com>\n \n-        PR fortran/41940\n-        * match.c (gfc_match_allocate): Improved error message for\n-        allocatable scalars that are allocated with a shape.\n+\tPR fortran/41940\n+\t* match.c (gfc_match_allocate): Improved error message for\n+\tallocatable scalars that are allocated with a shape.\n \n 2009-12-07  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n "}, {"sha": "e9adb3d229b55aece01930f1ea7bf8986730cf6b", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 46, "deletions": 1, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96c493240211f9103b0a19d0411b2e8e4d0da11c/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96c493240211f9103b0a19d0411b2e8e4d0da11c/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=96c493240211f9103b0a19d0411b2e8e4d0da11c", "patch": "@@ -1911,6 +1911,12 @@ all C features have a Fortran equivalent or vice versa. For instance,\n neither C's unsigned integers nor C's functions with variable number\n of arguments have an equivalent in Fortran.\n \n+Note that array dimensions are reversely orded in C and that arrays in\n+C always start with index 0 while in Fortran they start by default with\n+1. Thus, an array declaration @code{A(n,m)} in Fortran matches\n+@code{A[m][n]} in C and accessing the element @code{A(i,j)} matches\n+@code{A[j-1][i-1]}. The element following @code{A(i,j)} (C: @code{A[j-1][i-1]};\n+assuming @math{i < n}) in memory is @code{A(i+1,j)} (C: @code{A[j-1][i]}).\n \n @node Intrinsic Types\n @subsection Intrinsic Types\n@@ -2191,6 +2197,7 @@ the same declaration part as the variable or procedure pointer.\n * _gfortran_set_convert:: Set endian conversion\n * _gfortran_set_record_marker:: Set length of record markers\n * _gfortran_set_max_subrecord_length:: Set subrecord length\n+* _gfortran_set_fpe:: Set when a Floating Point Exception should be raised\n @end menu\n \n Even if you are doing mixed-language programming, it is very\n@@ -2362,7 +2369,7 @@ int main (int argc, char *argv[])\n \n @table @asis\n @item @emph{Description}:\n-@code{_gfortran_set_record_marker} set the length of record markers\n+@code{_gfortran_set_record_marker} sets the length of record markers\n for unformatted files.\n \n @item @emph{Syntax}:\n@@ -2387,6 +2394,44 @@ int main (int argc, char *argv[])\n @end table\n \n \n+@node _gfortran_set_fpe\n+@subsection @code{_gfortran_set_fpe} --- Set when a Floating Point Exception should be raised\n+@fnindex _gfortran_set_fpe\n+@cindex libgfortran initialization, set_fpe\n+\n+@table @asis\n+@item @emph{Description}:\n+@code{_gfortran_set_fpe} sets the IEEE exceptions for which a\n+Floating Point Exception (FPE) should be raised. On most systems,\n+this will result in a SIGFPE signal being sent and the program\n+being interrupted.\n+\n+@item @emph{Syntax}:\n+@code{void _gfortran_set_fpe (int val)}\n+\n+@item @emph{Arguments}:\n+@multitable @columnfractions .15 .70\n+@item @var{option}[0] @tab IEEE exceptions. Possible values are\n+(bitwise or-ed) zero (0, default) no trapping,\n+@code{GFC_FPE_INVALID} (1), @code{GFC_FPE_DENORMAL} (2),\n+@code{GFC_FPE_ZERO} (4), @code{GFC_FPE_OVERFLOW} (8),\n+@code{GFC_FPE_UNDERFLOW} (16), and @code{GFC_FPE_PRECISION} (32).\n+@end multitable\n+\n+@item @emph{Example}:\n+@smallexample\n+int main (int argc, char *argv[])\n+@{\n+  /* Initialize libgfortran.  */\n+  _gfortran_set_args (argc, argv);\n+  /* FPE for invalid operations such as SQRT(-1.0).  */\n+  _gfortran_set_fpe (1);\n+  return 0;\n+@}\n+@end smallexample\n+@end table\n+\n+\n @node _gfortran_set_max_subrecord_length\n @subsection @code{_gfortran_set_max_subrecord_length} --- Set subrecord length\n @fnindex _gfortran_set_max_subrecord_length"}]}