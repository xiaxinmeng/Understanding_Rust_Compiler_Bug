{"sha": "239d82d4c05b30632fd09ba4056de7dac5aee070", "node_id": "C_kwDOANBUbNoAKDIzOWQ4MmQ0YzA1YjMwNjMyZmQwOWJhNDA1NmRlN2RhYzVhZWUwNzA", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2021-11-08T16:49:54Z"}, "committer": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2021-11-08T16:52:51Z"}, "message": "ipa: Unshare expresseions before putting them into debug statements (PR 103099, PR 103107)\n\nMy recent patch to improve debug experience when there are removed\nparameters (by ipa-sra or ipa-split) was not careful to unshare the\nexpressions that were then put into debug statements, which manifests\nitself as PR 103099.  This patch adds unsharing them using\nunshare_expr_without_location which is a bit more careful with stripping\nlocations than what we were doing manually and so also fixes PR 103107.\n\ngcc/ChangeLog:\n\n2021-11-08  Martin Jambor  <mjambor@suse.cz>\n\n\tPR ipa/103099\n\tPR ipa/103107\n\t* tree-inline.c (remap_gimple_stmt): Unshare the expression without\n\tlocation before invoking remap_with_debug_expressions on it.\n\t* ipa-param-manipulation.c\n\t(ipa_param_body_adjustments::prepare_debug_expressions): Likewise.\n\ngcc/testsuite/ChangeLog:\n\n2021-11-08  Martin Jambor  <mjambor@suse.cz>\n\n\tPR ipa/103099\n\tPR ipa/103107\n\t* g++.dg/ipa/pr103099.C: New test.\n\t* gcc.dg/ipa/pr103107.c: Likewise.", "tree": {"sha": "00fb5ee32968c70ffbf55e5819c25d7b99e1bc8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00fb5ee32968c70ffbf55e5819c25d7b99e1bc8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/239d82d4c05b30632fd09ba4056de7dac5aee070", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE5elVTFt/d09Vsoczv2PBvD+kNUAFAmGJVeMACgkQv2PBvD+k\nNUCBWQ/+IcJdTgsP3n25vUmEMc3ol7cdxtU+Ee45uvgY2k9GP83U9FjGEZ5hYRk0\nY7PIC3p/R0bqsF064arSYX0BqUEGiG0GQRnbcaN50MjEx1a7uMFwy/qYuh9r/53v\n0lXe/1QeoiVRvgTBOgNSiJPNlir6jtgBeY7IALP0jCPpevcwWF9IzIqhDSH1SdPe\nvTgCmeqzhDA+3JMc8vMmAvqZu3GHAAh490oo84fzzypir+XFiu19nmYR547WABYL\nTKRyXYSTardayAItnlk1qSrtu1PBEJZWRzvJcYQ8j8xZLajzuhI0YvJnNS8HhcN9\nHmGWiwsOHuNc3QuPbiMEEKVgn08GH54zPo8zoMTmfwk49o0XpXh68Ij25glbgdrm\nxpGN7cC1Z7J4hWrj8x2mriUh56sDtiGaTMOcpCymfYJGfevbyMLbeDymy1kYIxbF\nwFgygKcwX3JJRYRokwY4ieibn3RSuOQe9d5bN20ELElOP4ELqKwgOSmkoh8NToFH\na06DkCG4ZcL7rxVofN2u3Oy939T1iUb2ejtQzkvA54iO/NACp0SXhvruIcZPrNWf\nQ3f9rYKA+IWWQYF5fzl38rKcdaQVl+f1D7j7fT77vu7CBkChtIUOQ86bvnAm0izp\nPd29nFDFOek8fbodRekxtk3haBDMZ8ZkI41bM8EZIhzk4tv6MhY=\n=YSlZ\n-----END PGP SIGNATURE-----", "payload": "tree 00fb5ee32968c70ffbf55e5819c25d7b99e1bc8e\nparent a7dce7626a6d5247d7dda48fa36d3cdc258aae84\nauthor Martin Jambor <mjambor@suse.cz> 1636390194 +0100\ncommitter Martin Jambor <mjambor@suse.cz> 1636390371 +0100\n\nipa: Unshare expresseions before putting them into debug statements (PR 103099, PR 103107)\n\nMy recent patch to improve debug experience when there are removed\nparameters (by ipa-sra or ipa-split) was not careful to unshare the\nexpressions that were then put into debug statements, which manifests\nitself as PR 103099.  This patch adds unsharing them using\nunshare_expr_without_location which is a bit more careful with stripping\nlocations than what we were doing manually and so also fixes PR 103107.\n\ngcc/ChangeLog:\n\n2021-11-08  Martin Jambor  <mjambor@suse.cz>\n\n\tPR ipa/103099\n\tPR ipa/103107\n\t* tree-inline.c (remap_gimple_stmt): Unshare the expression without\n\tlocation before invoking remap_with_debug_expressions on it.\n\t* ipa-param-manipulation.c\n\t(ipa_param_body_adjustments::prepare_debug_expressions): Likewise.\n\ngcc/testsuite/ChangeLog:\n\n2021-11-08  Martin Jambor  <mjambor@suse.cz>\n\n\tPR ipa/103099\n\tPR ipa/103107\n\t* g++.dg/ipa/pr103099.C: New test.\n\t* gcc.dg/ipa/pr103107.c: Likewise.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/239d82d4c05b30632fd09ba4056de7dac5aee070", "html_url": "https://github.com/Rust-GCC/gccrs/commit/239d82d4c05b30632fd09ba4056de7dac5aee070", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/239d82d4c05b30632fd09ba4056de7dac5aee070/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7dce7626a6d5247d7dda48fa36d3cdc258aae84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7dce7626a6d5247d7dda48fa36d3cdc258aae84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7dce7626a6d5247d7dda48fa36d3cdc258aae84"}], "stats": {"total": 51, "additions": 48, "deletions": 3}, "files": [{"sha": "44f3bed2640f5c73bab91202b8afecd546cfbf0e", "filename": "gcc/ipa-param-manipulation.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/239d82d4c05b30632fd09ba4056de7dac5aee070/gcc%2Fipa-param-manipulation.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/239d82d4c05b30632fd09ba4056de7dac5aee070/gcc%2Fipa-param-manipulation.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-param-manipulation.c?ref=239d82d4c05b30632fd09ba4056de7dac5aee070", "patch": "@@ -1185,8 +1185,8 @@ ipa_param_body_adjustments::prepare_debug_expressions (tree dead_ssa)\n \t  return (*d != NULL_TREE);\n \t}\n \n-      tree val = gimple_assign_rhs_to_tree (def);\n-      SET_EXPR_LOCATION (val, UNKNOWN_LOCATION);\n+      tree val\n+\t= unshare_expr_without_location (gimple_assign_rhs_to_tree (def));\n       remap_with_debug_expressions (&val);\n \n       tree vexpr = make_node (DEBUG_EXPR_DECL);"}, {"sha": "5fb137d6799afc678f2b7fddfa248c2711267b37", "filename": "gcc/testsuite/g++.dg/ipa/pr103099.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/239d82d4c05b30632fd09ba4056de7dac5aee070/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr103099.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/239d82d4c05b30632fd09ba4056de7dac5aee070/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr103099.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr103099.C?ref=239d82d4c05b30632fd09ba4056de7dac5aee070", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -g\" } */\n+\n+void pthread_mutex_unlock(int *);\n+int __gthread_mutex_unlock___mutex, unlock___trans_tmp_1;\n+struct Object {\n+  void _change_notify() {}\n+  bool _is_queued_for_deletion;\n+};\n+struct ClassDB {\n+  template <class N, class M> static int bind_method(N, M);\n+};\n+struct CanvasItemMaterial : Object {\n+  bool particles_animation;\n+  void set_particles_animation(bool);\n+};\n+void CanvasItemMaterial::set_particles_animation(bool p_particles_anim) {\n+  particles_animation = p_particles_anim;\n+  if (unlock___trans_tmp_1)\n+    pthread_mutex_unlock(&__gthread_mutex_unlock___mutex);\n+  _change_notify();\n+}\n+void CanvasItemMaterial_bind_methods() {\n+  ClassDB::bind_method(\"\", &CanvasItemMaterial::set_particles_animation);\n+}"}, {"sha": "3ea3fc55947aa098716721e7cda063fb65a1762b", "filename": "gcc/testsuite/gcc.dg/ipa/pr103107.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/239d82d4c05b30632fd09ba4056de7dac5aee070/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr103107.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/239d82d4c05b30632fd09ba4056de7dac5aee070/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr103107.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr103107.c?ref=239d82d4c05b30632fd09ba4056de7dac5aee070", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Og -g -fipa-sra -fno-tree-dce\" } */\n+\n+typedef int __attribute__((__vector_size__ (8))) V;\n+V v;\n+\n+static void\n+bar (int i)\n+{\n+  V l = v + i;\n+}\n+\n+void\n+foo (void)\n+{\n+  bar (0);\n+}"}, {"sha": "53d664ec2e4f589a0c6ccb54b48a0fbbee540dc3", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/239d82d4c05b30632fd09ba4056de7dac5aee070/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/239d82d4c05b30632fd09ba4056de7dac5aee070/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=239d82d4c05b30632fd09ba4056de7dac5aee070", "patch": "@@ -1825,7 +1825,10 @@ remap_gimple_stmt (gimple *stmt, copy_body_data *id)\n \t  tree value = gimple_debug_bind_get_value (stmt);\n \t  if (id->param_body_adjs\n \t      && id->param_body_adjs->m_dead_stmts.contains (stmt))\n-\t    id->param_body_adjs->remap_with_debug_expressions (&value);\n+\t    {\n+\t      value = unshare_expr_without_location (value);\n+\t      id->param_body_adjs->remap_with_debug_expressions (&value);\n+\t    }\n \n \t  gdebug *copy = gimple_build_debug_bind (var, value, stmt);\n \t  if (id->reset_location)"}]}