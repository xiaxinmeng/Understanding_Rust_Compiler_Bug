{"sha": "ec6a6eb7d7abadb0aebfbcc6686a0d762b393f55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWM2YTZlYjdkN2FiYWRiMGFlYmZiY2M2Njg2YTBkNzYyYjM5M2Y1NQ==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@cs.tamu.edu", "date": "2009-10-01T15:31:42Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2009-10-01T15:31:42Z"}, "message": "decl.c (record_builtin_java_type): Undo unintended change.\n\n\t* decl.c (record_builtin_java_type): Undo unintended change.\n\t(cxx_init_decl_processing): Likewise.\n\nFrom-SVN: r152375", "tree": {"sha": "a1dd6f6d5066fc3b5d62f114b979857d3f5b3db1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1dd6f6d5066fc3b5d62f114b979857d3f5b3db1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec6a6eb7d7abadb0aebfbcc6686a0d762b393f55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec6a6eb7d7abadb0aebfbcc6686a0d762b393f55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec6a6eb7d7abadb0aebfbcc6686a0d762b393f55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec6a6eb7d7abadb0aebfbcc6686a0d762b393f55/comments", "author": null, "committer": null, "parents": [{"sha": "2968d410491161912b56a2ec7f7528d06d5ba19d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2968d410491161912b56a2ec7f7528d06d5ba19d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2968d410491161912b56a2ec7f7528d06d5ba19d"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "fbe0637d5f10d95606afb237e29d8a1c2e9531a7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec6a6eb7d7abadb0aebfbcc6686a0d762b393f55/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec6a6eb7d7abadb0aebfbcc6686a0d762b393f55/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ec6a6eb7d7abadb0aebfbcc6686a0d762b393f55", "patch": "@@ -1,3 +1,8 @@\n+2009-10-01  Gabriel Dos Reis  <gdr@cs.tamu.edu>\n+\n+\t* decl.c (record_builtin_java_type): Undo unintended change.\n+\t(cxx_init_decl_processing): Likewise.\n+\n 2009-10-01  Jason Merrill  <jason@redhat.com>\n \n \t* pt.c (register_specialization): Push DECL_SOURCE_LOCATION to the\n@@ -12,8 +17,6 @@\n \n \t* decl.c (check_for_uninitialized_const_var): Check constexpr\n \tvariables too.\n-\t(build_ptrmemfunc_type): Make the result a literal type.\n-\t(build_ptrmem_type): Likewise.\n \t(grokdeclarator): Handle `constexpr'.\n \t(check_tag_decl): Reject `constexpr'.\n \t(check_function_type): Check constexpr functions."}, {"sha": "5d3ff9dad425258a8d395a21db7b240e285990c4", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec6a6eb7d7abadb0aebfbcc6686a0d762b393f55/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec6a6eb7d7abadb0aebfbcc6686a0d762b393f55/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=ec6a6eb7d7abadb0aebfbcc6686a0d762b393f55", "patch": "@@ -3231,7 +3231,7 @@ record_builtin_java_type (const char* name, int size)\n     }\n   else\n     { /* \"__java_float\" or \"\"__java_double\".  */\n-      type = cxx_make_type (REAL_TYPE);\n+      type = make_node (REAL_TYPE);\n       TYPE_PRECISION (type) = - size;\n       layout_type (type);\n     }\n@@ -3397,7 +3397,7 @@ cxx_init_decl_processing (void)\n \n   /* C++ extensions */\n \n-  unknown_type_node = cxx_make_type (UNKNOWN_TYPE);\n+  unknown_type_node = make_node (UNKNOWN_TYPE);\n   record_unknown_type (unknown_type_node, \"unknown type\");\n \n   /* Indirecting an UNKNOWN_TYPE node yields an UNKNOWN_TYPE node.  */\n@@ -3408,13 +3408,13 @@ cxx_init_decl_processing (void)\n   TYPE_POINTER_TO (unknown_type_node) = unknown_type_node;\n   TYPE_REFERENCE_TO (unknown_type_node) = unknown_type_node;\n \n-  init_list_type_node = cxx_make_type (UNKNOWN_TYPE);\n+  init_list_type_node = make_node (UNKNOWN_TYPE);\n   record_unknown_type (init_list_type_node, \"init list\");\n \n   {\n     /* Make sure we get a unique function type, so we can give\n        its pointer type a name.  (This wins for gdb.) */\n-    tree vfunc_type = cxx_make_type (FUNCTION_TYPE);\n+    tree vfunc_type = make_node (FUNCTION_TYPE);\n     TREE_TYPE (vfunc_type) = integer_type_node;\n     TYPE_ARG_TYPES (vfunc_type) = NULL_TREE;\n     layout_type (vfunc_type);\n@@ -3436,7 +3436,7 @@ cxx_init_decl_processing (void)\n   abi_node = current_namespace;\n   pop_namespace ();\n \n-  global_type_node = cxx_make_type (LANG_TYPE);\n+  global_type_node = make_node (LANG_TYPE);\n   record_unknown_type (global_type_node, \"global type\");\n \n   /* Now, C++.  */"}]}