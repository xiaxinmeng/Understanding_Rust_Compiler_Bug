{"sha": "3f969affaf77cc21583941b0e0652c286c433d26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Y5NjlhZmZhZjc3Y2MyMTU4Mzk0MWIwZTA2NTJjMjg2YzQzM2QyNg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-01-14T09:42:47Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-05-06T06:41:17Z"}, "message": "Adjust integer <-> pointer conversion IL checking\n\nThe existing check doesn't reflect the actual reason why it exists,\nthe patch makes us to use POINTERS_EXTEND_UNSIGNED instead which\nis specified for ptr_mode and word_mode/Pmode precision.\n\n2020-05-06  Richard Biener  <rguenther@suse.de>\n\n\t* tree-cfg.c (verify_gimple_assign_unary): Adjust integer\n\tto/from pointer conversion checking.", "tree": {"sha": "5e1e0e0d6e7ed64cea7106cd047802541a809758", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e1e0e0d6e7ed64cea7106cd047802541a809758"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f969affaf77cc21583941b0e0652c286c433d26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f969affaf77cc21583941b0e0652c286c433d26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f969affaf77cc21583941b0e0652c286c433d26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f969affaf77cc21583941b0e0652c286c433d26/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc80c1e4232a71080e793c7147e0830b88bda937", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc80c1e4232a71080e793c7147e0830b88bda937", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc80c1e4232a71080e793c7147e0830b88bda937"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "628008833b9dbe89be02c37bc0e2829b69bf5164", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f969affaf77cc21583941b0e0652c286c433d26/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f969affaf77cc21583941b0e0652c286c433d26/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3f969affaf77cc21583941b0e0652c286c433d26", "patch": "@@ -1,3 +1,8 @@\n+2020-05-06  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-cfg.c (verify_gimple_assign_unary): Adjust integer\n+\tto/from pointer conversion checking.\n+\n 2020-05-05  Michael Meissner  <meissner@linux.ibm.com>\n \n \t* config/rs6000/rs6000-builtin.def: Delete changes meant for a"}, {"sha": "8e6fed876f503ae7091e22f0d683a77a3f3a0514", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f969affaf77cc21583941b0e0652c286c433d26/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f969affaf77cc21583941b0e0652c286c433d26/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=3f969affaf77cc21583941b0e0652c286c433d26", "patch": "@@ -3591,13 +3591,21 @@ verify_gimple_assign_unary (gassign *stmt)\n \t/* Allow conversions from pointer type to integral type only if\n \t   there is no sign or zero extension involved.\n \t   For targets were the precision of ptrofftype doesn't match that\n-\t   of pointers we need to allow arbitrary conversions to ptrofftype.  */\n+\t   of pointers we allow conversions to types where\n+\t   POINTERS_EXTEND_UNSIGNED specifies how that works.  */\n \tif ((POINTER_TYPE_P (lhs_type)\n \t     && INTEGRAL_TYPE_P (rhs1_type))\n \t    || (POINTER_TYPE_P (rhs1_type)\n \t\t&& INTEGRAL_TYPE_P (lhs_type)\n \t\t&& (TYPE_PRECISION (rhs1_type) >= TYPE_PRECISION (lhs_type)\n-\t\t    || ptrofftype_p (lhs_type))))\n+#if defined(POINTERS_EXTEND_UNSIGNED)\n+\t\t    || (TYPE_MODE (rhs1_type) == ptr_mode\n+\t\t\t&& (TYPE_PRECISION (lhs_type)\n+\t\t\t      == BITS_PER_WORD /* word_mode */\n+\t\t\t    || (TYPE_PRECISION (lhs_type)\n+\t\t\t\t  == GET_MODE_PRECISION (Pmode))))\n+#endif\n+\t\t   )))\n \t  return false;\n \n \t/* Allow conversion from integral to offset type and vice versa.  */"}]}