{"sha": "cded4e9ed7d9f793d31303def53d999890a0f5a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2RlZDRlOWVkN2Q5Zjc5M2QzMTMwM2RlZjUzZDk5OTg5MGEwZjVhNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-10-16T11:19:37Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-10-16T11:19:37Z"}, "message": "re PR tree-optimization/54889 (Revision 191983 gives compfail for 465.tonto in SPEC CPU 2006 when use -O3 -mavx)\n\n\tPR tree-optimization/54889\n\t* tree-vect-stmts.c (vectorizable_load): Add VIEW_CONVERT_EXPR if\n\tARRAY_REF newref doesn't have compatible type with vectype element\n\ttype, use vectype element type for MEM_REF.\n\n\t* gfortran.dg/pr54889.f90: New test.\n\nFrom-SVN: r192493", "tree": {"sha": "ddeae4a074044091ad624bc53856955eaf820414", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ddeae4a074044091ad624bc53856955eaf820414"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cded4e9ed7d9f793d31303def53d999890a0f5a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cded4e9ed7d9f793d31303def53d999890a0f5a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cded4e9ed7d9f793d31303def53d999890a0f5a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cded4e9ed7d9f793d31303def53d999890a0f5a5/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c7fb4c7aaed8a053dd0a6f2bca0c5f54fa34f155", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7fb4c7aaed8a053dd0a6f2bca0c5f54fa34f155", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7fb4c7aaed8a053dd0a6f2bca0c5f54fa34f155"}], "stats": {"total": 38, "additions": 33, "deletions": 5}, "files": [{"sha": "dfbc6118622bb42126e5f716f1d67ab00d1be436", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cded4e9ed7d9f793d31303def53d999890a0f5a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cded4e9ed7d9f793d31303def53d999890a0f5a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cded4e9ed7d9f793d31303def53d999890a0f5a5", "patch": "@@ -1,3 +1,10 @@\n+2012-10-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/54889\n+\t* tree-vect-stmts.c (vectorizable_load): Add VIEW_CONVERT_EXPR if\n+\tARRAY_REF newref doesn't have compatible type with vectype element\n+\ttype, use vectype element type for MEM_REF.\n+\n 2012-10-16  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* combine.c (record_dead_and_set_regs): Iterate over hard register set"}, {"sha": "babeba69d485a884c98de26c699a5e19b18bc15d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cded4e9ed7d9f793d31303def53d999890a0f5a5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cded4e9ed7d9f793d31303def53d999890a0f5a5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cded4e9ed7d9f793d31303def53d999890a0f5a5", "patch": "@@ -1,3 +1,8 @@\n+2012-10-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/54889\n+\t* gfortran.dg/pr54889.f90: New test.\n+\n 2012-10-16  Eric Botcazou <ebotcazou@adacore.com>\n \n \t* g++.dg/other/dump-ada-spec-2.C: New test."}, {"sha": "68c6bee00b15a1550060d31d11947c3569708f79", "filename": "gcc/testsuite/gfortran.dg/pr54889.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cded4e9ed7d9f793d31303def53d999890a0f5a5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr54889.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cded4e9ed7d9f793d31303def53d999890a0f5a5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr54889.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr54889.f90?ref=cded4e9ed7d9f793d31303def53d999890a0f5a5", "patch": "@@ -0,0 +1,10 @@\n+! PR tree-optimization/54889\n+! { dg-do compile }\n+! { dg-options \"-O3\" }\n+! { dg-additional-options \"-mavx\" { target { i?86-*-* x86_64-*-* } } }\n+\n+subroutine foo(x,y,z)\n+  logical, pointer :: x(:,:)\n+  integer :: y, z\n+  x=x(1:y,1:z)\n+end subroutine"}, {"sha": "70bcebbe99bd6bfe757f0a49dd8cc4735337e02a", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cded4e9ed7d9f793d31303def53d999890a0f5a5/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cded4e9ed7d9f793d31303def53d999890a0f5a5/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=cded4e9ed7d9f793d31303def53d999890a0f5a5", "patch": "@@ -4743,12 +4743,18 @@ vectorizable_load (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt,\n \t      tree newref, newoff;\n \t      gimple incr;\n \t      if (TREE_CODE (ref) == ARRAY_REF)\n-\t\tnewref = build4 (ARRAY_REF, TREE_TYPE (ref),\n-\t\t\t\t unshare_expr (TREE_OPERAND (ref, 0)),\n-\t\t\t\t running_off,\n-\t\t\t\t NULL_TREE, NULL_TREE);\n+\t\t{\n+\t\t  newref = build4 (ARRAY_REF, TREE_TYPE (ref),\n+\t\t\t\t   unshare_expr (TREE_OPERAND (ref, 0)),\n+\t\t\t\t   running_off,\n+\t\t\t\t   NULL_TREE, NULL_TREE);\n+\t\t  if (!useless_type_conversion_p (TREE_TYPE (vectype),\n+\t\t\t\t\t\t  TREE_TYPE (newref)))\n+\t\t    newref = build1 (VIEW_CONVERT_EXPR, TREE_TYPE (vectype),\n+\t\t\t\t     newref);\n+\t\t}\n \t      else\n-\t\tnewref = build2 (MEM_REF, TREE_TYPE (ref),\n+\t\tnewref = build2 (MEM_REF, TREE_TYPE (vectype),\n \t\t\t\t running_off,\n \t\t\t\t TREE_OPERAND (ref, 1));\n "}]}