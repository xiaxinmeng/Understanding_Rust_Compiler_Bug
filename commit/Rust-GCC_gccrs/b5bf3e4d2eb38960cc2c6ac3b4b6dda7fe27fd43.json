{"sha": "b5bf3e4d2eb38960cc2c6ac3b4b6dda7fe27fd43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjViZjNlNGQyZWIzODk2MGNjMmM2YWMzYjRiNmRkYTdmZTI3ZmQ0Mw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2007-11-18T16:35:12Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-11-18T16:35:12Z"}, "message": "re PR fortran/34137 (Module function with ENTRY rejected)\n\n2007-11-18  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/34137\n        * primary.c (match_variable): Reject non-result entry symbols.\n        * resolve.c (resolve_contained_fntype): Do not check entry\n        * master functions.\n\n2007-11-18  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/34137\n        * gfortran.dg/entry_14.f90: New.\n        * gfortran.dg/entry_15.f90: New.\n\nFrom-SVN: r130270", "tree": {"sha": "51b77ebaab1959061a8ea69ccc3d628c2212051f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51b77ebaab1959061a8ea69ccc3d628c2212051f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5bf3e4d2eb38960cc2c6ac3b4b6dda7fe27fd43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5bf3e4d2eb38960cc2c6ac3b4b6dda7fe27fd43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5bf3e4d2eb38960cc2c6ac3b4b6dda7fe27fd43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5bf3e4d2eb38960cc2c6ac3b4b6dda7fe27fd43/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4ba480060a2ab5473b699f57f6f22665c59bff28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ba480060a2ab5473b699f57f6f22665c59bff28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ba480060a2ab5473b699f57f6f22665c59bff28"}], "stats": {"total": 162, "additions": 158, "deletions": 4}, "files": [{"sha": "f95ca6688a89af9d2d47ec61900a718b9a21c033", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bf3e4d2eb38960cc2c6ac3b4b6dda7fe27fd43/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bf3e4d2eb38960cc2c6ac3b4b6dda7fe27fd43/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=b5bf3e4d2eb38960cc2c6ac3b4b6dda7fe27fd43", "patch": "@@ -1,3 +1,10 @@\n+2007-11-18  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/34137\n+\t* primary.c (match_variable): Reject non-result entry symbols.\n+\t* resolve.c (resolve_contained_fntype): Do not check entry master\n+\tfunctions.\n+\n 2007-11-17  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \t* trans-types.c (gfc_init_types): Use wider buffer."}, {"sha": "7e3d539ba16555dacf01a1eb1549d3fe4e700fca", "filename": "gcc/fortran/primary.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bf3e4d2eb38960cc2c6ac3b4b6dda7fe27fd43/gcc%2Ffortran%2Fprimary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bf3e4d2eb38960cc2c6ac3b4b6dda7fe27fd43/gcc%2Ffortran%2Fprimary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fprimary.c?ref=b5bf3e4d2eb38960cc2c6ac3b4b6dda7fe27fd43", "patch": "@@ -2525,8 +2525,7 @@ match_variable (gfc_expr **result, int equiv_flag, int host_flag)\n \n     case FL_PROCEDURE:\n       /* Check for a nonrecursive function result */\n-      if (sym->attr.function && (sym->result == sym || sym->attr.entry)\n-\t  && !sym->attr.external)\n+      if (sym->attr.function && sym->result == sym && !sym->attr.external)\n \t{\n \t  /* If a function result is a derived type, then the derived\n \t     type may still have to be resolved.  */"}, {"sha": "0d5e36ea0469e81b97c6a1edd2cc004dff6bd2cc", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bf3e4d2eb38960cc2c6ac3b4b6dda7fe27fd43/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bf3e4d2eb38960cc2c6ac3b4b6dda7fe27fd43/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=b5bf3e4d2eb38960cc2c6ac3b4b6dda7fe27fd43", "patch": "@@ -284,8 +284,10 @@ resolve_contained_fntype (gfc_symbol *sym, gfc_namespace *ns)\n {\n   try t;\n \n-  /* If this namespace is not a function, ignore it.  */\n-  if (! sym || !(sym->attr.function || sym->attr.flavor == FL_VARIABLE))\n+  /* If this namespace is not a function or an entry master function,\n+     ignore it.  */\n+  if (! sym || !(sym->attr.function || sym->attr.flavor == FL_VARIABLE)\n+      || sym->attr.entry_master)\n     return;\n \n   /* Try to find out of what the return type is.  */"}, {"sha": "5ea2a0e68d9644a8ecd2550525bb18c01940c977", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bf3e4d2eb38960cc2c6ac3b4b6dda7fe27fd43/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bf3e4d2eb38960cc2c6ac3b4b6dda7fe27fd43/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b5bf3e4d2eb38960cc2c6ac3b4b6dda7fe27fd43", "patch": "@@ -1,3 +1,9 @@\n+2007-11-18  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/34137\n+\t* gfortran.dg/entry_14.f90: New.\n+\t* gfortran.dg/entry_15.f90: New.\n+\n 2007-11-18  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/34127"}, {"sha": "e0aa00078c4f2c338b6a102da2316e7515319dee", "filename": "gcc/testsuite/gfortran.dg/entry_14.f90", "status": "added", "additions": 103, "deletions": 0, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bf3e4d2eb38960cc2c6ac3b4b6dda7fe27fd43/gcc%2Ftestsuite%2Fgfortran.dg%2Fentry_14.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bf3e4d2eb38960cc2c6ac3b4b6dda7fe27fd43/gcc%2Ftestsuite%2Fgfortran.dg%2Fentry_14.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fentry_14.f90?ref=b5bf3e4d2eb38960cc2c6ac3b4b6dda7fe27fd43", "patch": "@@ -0,0 +1,103 @@\n+! { dg-do run }\n+! \n+! PR fortran/34137\n+!\n+! Entry was previously not possible in a module.\n+! Checks also whether the different result combinations\n+! work properly.\n+!\n+module m1\n+  implicit none\n+contains\n+function func(a)\n+  implicit none\n+  integer :: a, func\n+  real :: ent\n+  func = a*4\n+  return\n+entry ent(a)\n+  ent = -a*2.0\n+  return\n+end function func\n+end module m1\n+\n+module m2\n+  implicit none\n+contains\n+function func(a)\n+  implicit none\n+  integer :: a, func\n+  real :: func2\n+  func = a*8\n+  return\n+entry ent(a) result(func2)\n+  func2 = -a*4.0\n+  return\n+end function func\n+end module m2\n+\n+module m3\n+  implicit none\n+contains\n+function func(a) result(res)\n+  implicit none\n+  integer :: a, res\n+  real :: func2\n+  res = a*12\n+  return\n+entry ent(a) result(func2)\n+  func2 = -a*6.0\n+  return\n+end function func\n+end module m3\n+\n+\n+module m4\n+  implicit none\n+contains\n+function func(a) result(res)\n+  implicit none\n+  integer :: a, res\n+  real :: ent\n+  res = a*16\n+  return\n+entry ent(a)\n+  ent = -a*8.0\n+  return\n+end function func\n+end module m4\n+\n+program main\n+  implicit none\n+  call test1()\n+  call test2()\n+  call test3()\n+  call test4()\n+contains\n+  subroutine test1()\n+    use m1\n+    implicit none\n+    if(func(3) /= 12) call abort()\n+    if(abs(ent(7) + 14.0) > tiny(1.0)) call abort()\n+  end subroutine test1\n+  subroutine test2()\n+    use m2\n+    implicit none\n+    if(func(9) /= 72) call abort()\n+    if(abs(ent(11) + 44.0) > tiny(1.0)) call abort()\n+  end subroutine test2\n+  subroutine test3()\n+    use m3\n+    implicit none\n+    if(func(13) /= 156) call abort()\n+    if(abs(ent(17) + 102.0) > tiny(1.0)) call abort()\n+  end subroutine test3\n+  subroutine test4()\n+    use m4\n+    implicit none\n+    if(func(23) /= 368) call abort()\n+    if(abs(ent(27) + 216.0) > tiny(1.0)) call abort()\n+  end subroutine test4\n+end program main\n+\n+! { dg-final { cleanup-modules \"m1 m2 m3 m4\" } }"}, {"sha": "ed0eb4b0c44578147c0c518bab4e970e66916f10", "filename": "gcc/testsuite/gfortran.dg/entry_15.f90", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bf3e4d2eb38960cc2c6ac3b4b6dda7fe27fd43/gcc%2Ftestsuite%2Fgfortran.dg%2Fentry_15.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bf3e4d2eb38960cc2c6ac3b4b6dda7fe27fd43/gcc%2Ftestsuite%2Fgfortran.dg%2Fentry_15.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fentry_15.f90?ref=b5bf3e4d2eb38960cc2c6ac3b4b6dda7fe27fd43", "patch": "@@ -0,0 +1,37 @@\n+! { dg-do compile }\n+! \n+! PR fortran/34137\n+!\n+! Entry was previously not possible in a module.\n+! Checks also whether the different result combinations\n+! work properly.\n+!\n+module m2\n+  implicit none\n+contains\n+function func(a)\n+  implicit none\n+  integer :: a, func\n+  real :: func2\n+  func = a*8\n+  return\n+entry ent(a) result(func2)\n+  ent = -a*4.0 ! { dg-error \"Expected VARIABLE\" }\n+  return\n+end function func\n+end module m2\n+\n+module m3\n+  implicit none\n+contains\n+function func(a) result(res)\n+  implicit none\n+  integer :: a, res\n+  real :: func2\n+  res = a*12\n+  return\n+entry ent(a) result(func2)\n+  ent = -a*6.0 ! { dg-error \"Expected VARIABLE\" }\n+  return\n+end function func\n+end module m3"}]}