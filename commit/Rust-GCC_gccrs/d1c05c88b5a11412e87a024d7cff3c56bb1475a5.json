{"sha": "d1c05c88b5a11412e87a024d7cff3c56bb1475a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDFjMDVjODhiNWExMTQxMmU4N2EwMjRkN2NmZjNjNTZiYjE0NzVhNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-01-16T15:23:19Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-01-16T15:23:19Z"}, "message": "re PR c++/42761 (std::bind doesn't work for simple class types)\n\n\tPR c++/42761\n\t* semantics.c (finish_decltype_type): Within a template, treat\n\tunresolved CALL_EXPR as dependent.\n\nFrom-SVN: r155966", "tree": {"sha": "572cb4b5c52eda131d1d51fb619a47e08ed42616", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/572cb4b5c52eda131d1d51fb619a47e08ed42616"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1c05c88b5a11412e87a024d7cff3c56bb1475a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1c05c88b5a11412e87a024d7cff3c56bb1475a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1c05c88b5a11412e87a024d7cff3c56bb1475a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1c05c88b5a11412e87a024d7cff3c56bb1475a5/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a6918ffd390f28fbe74abc82aae3c0aa89def495", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6918ffd390f28fbe74abc82aae3c0aa89def495", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6918ffd390f28fbe74abc82aae3c0aa89def495"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "08307272a00b786cfa302db9900885308956c49a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1c05c88b5a11412e87a024d7cff3c56bb1475a5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1c05c88b5a11412e87a024d7cff3c56bb1475a5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d1c05c88b5a11412e87a024d7cff3c56bb1475a5", "patch": "@@ -1,3 +1,9 @@\n+2010-01-16  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/42761\n+\t* semantics.c (finish_decltype_type): Within a template, treat\n+\tunresolved CALL_EXPR as dependent.\n+\n 2010-01-15  Dodji Seketeli  <dodji@redhat.com>\n \n \t* error.c (dump_template_parms,count_non_default_template_args):"}, {"sha": "fa3ecda205d58abb493bef7ad2ab377aabe0fab9", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1c05c88b5a11412e87a024d7cff3c56bb1475a5/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1c05c88b5a11412e87a024d7cff3c56bb1475a5/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=d1c05c88b5a11412e87a024d7cff3c56bb1475a5", "patch": "@@ -4803,6 +4803,7 @@ finish_decltype_type (tree expr, bool id_expression_or_member_access_p)\n       if (type && !type_uses_auto (type))\n \treturn type;\n \n+    treat_as_dependent:\n       type = cxx_make_type (DECLTYPE_TYPE);\n       DECLTYPE_TYPE_EXPR (type) = expr;\n       DECLTYPE_TYPE_ID_EXPR_OR_MEMBER_ACCESS_P (type)\n@@ -4930,6 +4931,11 @@ finish_decltype_type (tree expr, bool id_expression_or_member_access_p)\n                   && (TREE_CODE (TREE_TYPE (target_type)) == FUNCTION_TYPE\n                       || TREE_CODE (TREE_TYPE (target_type)) == METHOD_TYPE))\n                 type = TREE_TYPE (TREE_TYPE (target_type));\n+\t      else if (processing_template_decl)\n+\t\t/* Within a template finish_call_expr doesn't resolve\n+\t\t   CALL_EXPR_FN, so even though this decltype isn't really\n+\t\t   dependent let's defer resolving it.  */\n+\t\tgoto treat_as_dependent;\n               else\n                 sorry (\"unable to determine the declared type of expression %<%E%>\",\n                        expr);"}, {"sha": "8c45d483af0d2ebf7495e1f2847f30c2f77c5787", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1c05c88b5a11412e87a024d7cff3c56bb1475a5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1c05c88b5a11412e87a024d7cff3c56bb1475a5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d1c05c88b5a11412e87a024d7cff3c56bb1475a5", "patch": "@@ -1,3 +1,8 @@\n+2010-01-15  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/42761\n+\t* g++.dg/cpp0x/decltype22.C: New.\n+\n 2010-01-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/42760"}, {"sha": "74811cfe701cb9bd618206b836680d245f51e808", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype22.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1c05c88b5a11412e87a024d7cff3c56bb1475a5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1c05c88b5a11412e87a024d7cff3c56bb1475a5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype22.C?ref=d1c05c88b5a11412e87a024d7cff3c56bb1475a5", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/42761\n+// { dg-options \"-std=c++0x\" }\n+\n+template<typename _Tp> _Tp* fn();\n+\n+template <class T> struct A\n+{\n+  template <class U,\n+\t    class S = decltype(fn<T>())>\n+  struct B { };\n+};\n+\n+A<int> a;"}]}