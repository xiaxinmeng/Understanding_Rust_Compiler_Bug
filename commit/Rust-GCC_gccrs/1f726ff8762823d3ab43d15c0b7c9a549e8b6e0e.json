{"sha": "1f726ff8762823d3ab43d15c0b7c9a549e8b6e0e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY3MjZmZjg3NjI4MjNkM2FiNDNkMTVjMGI3YzlhNTQ5ZThiNmUwZQ==", "commit": {"author": {"name": "Mark Kettenis", "email": "kettenis@openbsd.org", "date": "2012-10-10T23:11:54Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2012-10-10T23:11:54Z"}, "message": "2012-10-10  Mark Kettenis  <kettenis@openbsd.org>\n\n\t* configure.host (*-*-openbsd*) Set cpu_include_dir.\n\t* config/os/bsd/openbsd/ctype_base.h: New file.\n\t* config/os/bsd/openbsd/ctype_configure_char.cc: New file.\n\t* config/os/bsd/openbsd/ctype_inline.h: New file.\n\t* config/os/bsd/openbsd/os_defines.h: New file.\n\t* acinclude.m4 (GLIBCXX_ENABLE_CLOCALE): Use newlib locale model\n\tfor OpenBSD.\n\t* configure: Regenerated.\n\nFrom-SVN: r192334", "tree": {"sha": "5adc0e9523050353ae68142ba52424c4633d3829", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5adc0e9523050353ae68142ba52424c4633d3829"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f726ff8762823d3ab43d15c0b7c9a549e8b6e0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f726ff8762823d3ab43d15c0b7c9a549e8b6e0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f726ff8762823d3ab43d15c0b7c9a549e8b6e0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f726ff8762823d3ab43d15c0b7c9a549e8b6e0e/comments", "author": {"login": "kettenis", "id": 19817229, "node_id": "MDQ6VXNlcjE5ODE3MjI5", "avatar_url": "https://avatars.githubusercontent.com/u/19817229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kettenis", "html_url": "https://github.com/kettenis", "followers_url": "https://api.github.com/users/kettenis/followers", "following_url": "https://api.github.com/users/kettenis/following{/other_user}", "gists_url": "https://api.github.com/users/kettenis/gists{/gist_id}", "starred_url": "https://api.github.com/users/kettenis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kettenis/subscriptions", "organizations_url": "https://api.github.com/users/kettenis/orgs", "repos_url": "https://api.github.com/users/kettenis/repos", "events_url": "https://api.github.com/users/kettenis/events{/privacy}", "received_events_url": "https://api.github.com/users/kettenis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40d15b5bdc1ac4b8fea62a24cae7b12f61c9701f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40d15b5bdc1ac4b8fea62a24cae7b12f61c9701f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40d15b5bdc1ac4b8fea62a24cae7b12f61c9701f"}], "stats": {"total": 293, "additions": 293, "deletions": 0}, "files": [{"sha": "da8a0847e81571bff96c9e829f6135e4ab514d8e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f726ff8762823d3ab43d15c0b7c9a549e8b6e0e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f726ff8762823d3ab43d15c0b7c9a549e8b6e0e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1f726ff8762823d3ab43d15c0b7c9a549e8b6e0e", "patch": "@@ -1,3 +1,14 @@\n+2012-10-10  Mark Kettenis  <kettenis@openbsd.org>\n+\n+\t* configure.host (*-*-openbsd*) Set cpu_include_dir.\n+\t* config/os/bsd/openbsd/ctype_base.h: New file.\n+\t* config/os/bsd/openbsd/ctype_configure_char.cc: New file.\n+\t* config/os/bsd/openbsd/ctype_inline.h: New file.\n+\t* config/os/bsd/openbsd/os_defines.h: New file.\n+\t* acinclude.m4 (GLIBCXX_ENABLE_CLOCALE): Use newlib locale model\n+\tfor OpenBSD.\n+\t* configure: Regenerated.\n+\n 2012-10-10  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/std/type_traits (__do_common_type_impl): Revert for now"}, {"sha": "960bae3ec0d3d20ceff6cc18127b0e7db4acc7c5", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f726ff8762823d3ab43d15c0b7c9a549e8b6e0e/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f726ff8762823d3ab43d15c0b7c9a549e8b6e0e/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=1f726ff8762823d3ab43d15c0b7c9a549e8b6e0e", "patch": "@@ -1862,6 +1862,9 @@ AC_DEFUN([GLIBCXX_ENABLE_CLOCALE], [\n       darwin* | freebsd*)\n \tenable_clocale_flag=darwin\n \t;;\n+      openbsd*)\n+\tenable_clocale_flag=newlib\n+\t;;\n       *)\n \tif test x\"$with_newlib\" = x\"yes\"; then\n \t  enable_clocale_flag=newlib"}, {"sha": "895c4265ef519df05e5cf01f73fe7ae4662557d6", "filename": "libstdc++-v3/config/os/bsd/openbsd/ctype_base.h", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f726ff8762823d3ab43d15c0b7c9a549e8b6e0e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fopenbsd%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f726ff8762823d3ab43d15c0b7c9a549e8b6e0e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fopenbsd%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fopenbsd%2Fctype_base.h?ref=1f726ff8762823d3ab43d15c0b7c9a549e8b6e0e", "patch": "@@ -0,0 +1,59 @@\n+// Locale support -*- C++ -*-\n+\n+// Copyright (C) 2000, 2009, 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// Under Section 7 of GPL version 3, you are granted additional\n+// permissions described in the GCC Runtime Library Exception, version\n+// 3.1, as published by the Free Software Foundation.\n+\n+// You should have received a copy of the GNU General Public License and\n+// a copy of the GCC Runtime Library Exception along with this program;\n+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+// <http://www.gnu.org/licenses/>.\n+\n+//\n+// ISO C++ 14882: 22.1  Locales\n+//\n+\n+// Information as gleaned from /usr/include/ctype.h on OpenBSD.\n+\n+namespace std _GLIBCXX_VISIBILITY(default)\n+{\n+_GLIBCXX_BEGIN_NAMESPACE_VERSION\n+\n+  /// @brief  Base class for ctype.\n+  struct ctype_base\n+  {\n+    // Non-standard typedefs.\n+    typedef const short*\t__to_type;\n+\n+    // NB: Offsets into ctype<char>::_M_table force a particular size\n+    // on the mask type. Because of this, we don't use an enum.\n+    typedef char\t\tmask;\n+\n+    static const mask upper\t= _U;\n+    static const mask lower\t= _L;\n+    static const mask alpha\t= _U | _L;\n+    static const mask digit\t= _N;\n+    static const mask xdigit\t= _N | _X;\n+    static const mask space\t= _S;\n+    static const mask print\t= _P | _U | _L | _N | _B;\n+    static const mask graph\t= _P | _U | _L | _N;\n+    static const mask cntrl\t= _C;\n+    static const mask punct\t= _P;\n+    static const mask alnum\t= _U | _L | _N;\n+  };\n+\n+_GLIBCXX_END_NAMESPACE_VERSION\n+} // namespace"}, {"sha": "72e91239a2b64af4f1dbc0aee8474eb7adaccc51", "filename": "libstdc++-v3/config/os/bsd/openbsd/ctype_configure_char.cc", "status": "added", "additions": 99, "deletions": 0, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f726ff8762823d3ab43d15c0b7c9a549e8b6e0e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fopenbsd%2Fctype_configure_char.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f726ff8762823d3ab43d15c0b7c9a549e8b6e0e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fopenbsd%2Fctype_configure_char.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fopenbsd%2Fctype_configure_char.cc?ref=1f726ff8762823d3ab43d15c0b7c9a549e8b6e0e", "patch": "@@ -0,0 +1,99 @@\n+// Locale support -*- C++ -*-\n+\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// Under Section 7 of GPL version 3, you are granted additional\n+// permissions described in the GCC Runtime Library Exception, version\n+// 3.1, as published by the Free Software Foundation.\n+\n+// You should have received a copy of the GNU General Public License and\n+// a copy of the GCC Runtime Library Exception along with this program;\n+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+// <http://www.gnu.org/licenses/>.\n+\n+/** @file ctype_configure_char.cc */\n+\n+//\n+// ISO C++ 14882: 22.1  Locales\n+//\n+\n+#include <locale>\n+#include <cstdlib>\n+#include <cstring>\n+\n+namespace std _GLIBCXX_VISIBILITY(default)\n+{\n+_GLIBCXX_BEGIN_NAMESPACE_VERSION\n+\n+// Information as gleaned from /usr/include/ctype.h\n+\n+  const ctype_base::mask*\n+  ctype<char>::classic_table() throw()\n+  { return _ctype_ + 1; }\n+\n+  ctype<char>::ctype(__c_locale, const mask* __table, bool __del,\n+\t\t     size_t __refs)\n+  : facet(__refs), _M_del(__table != 0 && __del),\n+  _M_toupper(NULL), _M_tolower(NULL),\n+  _M_table(__table ? __table : classic_table())\n+  {\n+    memset(_M_widen, 0, sizeof(_M_widen));\n+    _M_widen_ok = 0;\n+    memset(_M_narrow, 0, sizeof(_M_narrow));\n+    _M_narrow_ok = 0;\n+  }\n+\n+  ctype<char>::ctype(const mask* __table, bool __del, size_t __refs)\n+  : facet(__refs), _M_del(__table != 0 && __del),\n+  _M_toupper(NULL), _M_tolower(NULL),\n+  _M_table(__table ? __table : classic_table())\n+  {\n+    memset(_M_widen, 0, sizeof(_M_widen));\n+    _M_widen_ok = 0;\n+    memset(_M_narrow, 0, sizeof(_M_narrow));\n+    _M_narrow_ok = 0;\n+  }\n+\n+  char\n+  ctype<char>::do_toupper(char __c) const\n+  { return ::toupper((int) __c); }\n+\n+  const char*\n+  ctype<char>::do_toupper(char* __low, const char* __high) const\n+  {\n+    while (__low < __high)\n+      {\n+\t*__low = ::toupper((int) *__low);\n+\t++__low;\n+      }\n+    return __high;\n+  }\n+\n+  char\n+  ctype<char>::do_tolower(char __c) const\n+  { return ::tolower((int) __c); }\n+\n+  const char*\n+  ctype<char>::do_tolower(char* __low, const char* __high) const\n+  {\n+    while (__low < __high)\n+      {\n+\t*__low = ::tolower((int) *__low);\n+\t++__low;\n+      }\n+    return __high;\n+  }\n+\n+_GLIBCXX_END_NAMESPACE_VERSION\n+} // namespace"}, {"sha": "e7b8d5c83059f9d13e95fc725c0ca3d8a0c51075", "filename": "libstdc++-v3/config/os/bsd/openbsd/ctype_inline.h", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f726ff8762823d3ab43d15c0b7c9a549e8b6e0e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fopenbsd%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f726ff8762823d3ab43d15c0b7c9a549e8b6e0e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fopenbsd%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fopenbsd%2Fctype_inline.h?ref=1f726ff8762823d3ab43d15c0b7c9a549e8b6e0e", "patch": "@@ -0,0 +1,74 @@\n+// Locale support -*- C++ -*-\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// Under Section 7 of GPL version 3, you are granted additional\n+// permissions described in the GCC Runtime Library Exception, version\n+// 3.1, as published by the Free Software Foundation.\n+\n+// You should have received a copy of the GNU General Public License and\n+// a copy of the GCC Runtime Library Exception along with this program;\n+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+// <http://www.gnu.org/licenses/>.\n+\n+/** @file bits/ctype_inline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  Do not attempt to use it directly. @headername{locale}\n+ */\n+\n+//\n+// ISO C++ 14882: 22.1  Locales\n+//\n+\n+// ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n+// functions go in ctype.cc\n+\n+namespace std _GLIBCXX_VISIBILITY(default)\n+{\n+_GLIBCXX_BEGIN_NAMESPACE_VERSION\n+\n+  bool\n+  ctype<char>::\n+  is(mask __m, char __c) const\n+  { return _M_table[static_cast<unsigned char>(__c)] & __m; }\n+\n+  const char*\n+  ctype<char>::\n+  is(const char* __low, const char* __high, mask* __vec) const\n+  {\n+    while (__low < __high)\n+      *__vec++ = _M_table[static_cast<unsigned char>(*__low++)];\n+    return __high;\n+  }\n+\n+  const char*\n+  ctype<char>::\n+  scan_is(mask __m, const char* __low, const char* __high) const\n+  {\n+    while (__low < __high && !this->is(__m, *__low))\n+      ++__low;\n+    return __low;\n+  }\n+\n+  const char*\n+  ctype<char>::\n+  scan_not(mask __m, const char* __low, const char* __high) const\n+  {\n+    while (__low < __high && this->is(__m, *__low) != 0)\n+      ++__low;\n+    return __low;\n+  }\n+\n+_GLIBCXX_END_NAMESPACE_VERSION\n+} // namespace"}, {"sha": "b57d951e3c5a6a90921e7f249ba2e3c195b70fa5", "filename": "libstdc++-v3/config/os/bsd/openbsd/os_defines.h", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f726ff8762823d3ab43d15c0b7c9a549e8b6e0e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fopenbsd%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f726ff8762823d3ab43d15c0b7c9a549e8b6e0e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fopenbsd%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fopenbsd%2Fos_defines.h?ref=1f726ff8762823d3ab43d15c0b7c9a549e8b6e0e", "patch": "@@ -0,0 +1,41 @@\n+// Specific definitions for OpenBSD  -*- C++ -*-\n+\n+// Copyright (C) 2000, 2002, 2009, 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// Under Section 7 of GPL version 3, you are granted additional\n+// permissions described in the GCC Runtime Library Exception, version\n+// 3.1, as published by the Free Software Foundation.\n+\n+// You should have received a copy of the GNU General Public License and\n+// a copy of the GCC Runtime Library Exception along with this program;\n+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+// <http://www.gnu.org/licenses/>.\n+\n+/** @file bits/os_defines.h\n+ *  This is an internal header file, included by other library headers.\n+ *  Do not attempt to use it directly. @headername{iosfwd}\n+ */\n+\n+#ifndef _GLIBCXX_OS_DEFINES\n+#define _GLIBCXX_OS_DEFINES 1\n+\n+// System-specific #define, typedefs, corrections, etc, go here.  This\n+// file will come before all others.\n+\n+#define _GLIBCXX_USE_C99_DYNAMIC (!(__ISO_C_VISIBLE >= 1999))\n+#define _GLIBCXX_USE_C99_LONG_LONG_DYNAMIC _GLIBCXX_USE_C99_DYNAMIC\n+#define _GLIBCXX_USE_C99_FLOAT_TRANSCENDENTALS_DYNAMIC _GLIBCXX_USE_C99_DYNAMIC\n+#define _GLIBCXX_USE_C99_FP_MACROS_DYNAMIC _GLIBCXX_USE_C99_DYNAMIC\n+\n+#endif"}, {"sha": "912c03401e777f6e88cbe63c7da1c1b38f349251", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f726ff8762823d3ab43d15c0b7c9a549e8b6e0e/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f726ff8762823d3ab43d15c0b7c9a549e8b6e0e/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=1f726ff8762823d3ab43d15c0b7c9a549e8b6e0e", "patch": "@@ -15816,6 +15816,9 @@ fi\n       darwin* | freebsd*)\n \tenable_clocale_flag=darwin\n \t;;\n+      openbsd*)\n+\tenable_clocale_flag=newlib\n+\t;;\n       *)\n \tif test x\"$with_newlib\" = x\"yes\"; then\n \t  enable_clocale_flag=newlib"}, {"sha": "ed9e72109d41774c179190d9546b53d0dd4feef1", "filename": "libstdc++-v3/configure.host", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f726ff8762823d3ab43d15c0b7c9a549e8b6e0e/libstdc%2B%2B-v3%2Fconfigure.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f726ff8762823d3ab43d15c0b7c9a549e8b6e0e/libstdc%2B%2B-v3%2Fconfigure.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.host?ref=1f726ff8762823d3ab43d15c0b7c9a549e8b6e0e", "patch": "@@ -291,6 +291,9 @@ case \"${host_os}\" in\n   netbsd*)\n     os_include_dir=\"os/bsd/netbsd\"\n     ;;\n+  openbsd*)\n+    os_include_dir=\"os/bsd/openbsd\"\n+    ;;\n   qnx6.[12]*)\n     os_include_dir=\"os/qnx/qnx6.1\"\n     c_model=c"}]}