{"sha": "371b4ad7c423891d13f9b855f5fdd469a82f7160", "node_id": "C_kwDOANBUbNoAKDM3MWI0YWQ3YzQyMzg5MWQxM2Y5Yjg1NWY1ZmRkNDY5YTgyZjcxNjA", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2022-01-04T09:37:53Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-01-11T13:24:47Z"}, "message": "[Ada] Adapt ghost code to maintain proof\n\ngcc/ada/\n\n\t* libgnat/s-expmod.adb (Exp_Modular): Add assertions.", "tree": {"sha": "51bb4cd8aebbe7996e86ed6785e69f5730e859c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51bb4cd8aebbe7996e86ed6785e69f5730e859c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/371b4ad7c423891d13f9b855f5fdd469a82f7160", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/371b4ad7c423891d13f9b855f5fdd469a82f7160", "html_url": "https://github.com/Rust-GCC/gccrs/commit/371b4ad7c423891d13f9b855f5fdd469a82f7160", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/371b4ad7c423891d13f9b855f5fdd469a82f7160/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42c54add83708c37b350c71a2979f2d7483a1656", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42c54add83708c37b350c71a2979f2d7483a1656", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42c54add83708c37b350c71a2979f2d7483a1656"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "60d86e505b8a4a8ed5b39682b5b4fc3a9e63e7ff", "filename": "gcc/ada/libgnat/s-expmod.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/371b4ad7c423891d13f9b855f5fdd469a82f7160/gcc%2Fada%2Flibgnat%2Fs-expmod.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/371b4ad7c423891d13f9b855f5fdd469a82f7160/gcc%2Fada%2Flibgnat%2Fs-expmod.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-expmod.adb?ref=371b4ad7c423891d13f9b855f5fdd469a82f7160", "patch": "@@ -278,6 +278,7 @@ is\n                  (Big (Result) * Big (Factor) ** (Exp - 1),\n                   Big (Left) ** Right));\n                Lemma_Exp_Expand (Big (Factor), Exp - 1);\n+               pragma Assert (Exp / 2 = (Exp - 1) / 2);\n             end if;\n \n             Lemma_Exp_Expand (Big (Factor), Exp);\n@@ -286,6 +287,8 @@ is\n             exit when Exp = 0;\n \n             Rest := Big (Factor) ** Exp;\n+            pragma Assert (Equal_Modulo\n+              (Big (Result) * (Rest * Rest), Big (Left) ** Right));\n             Lemma_Exp_Mod (Big (Factor) * Big (Factor), Exp, Big (Modulus));\n             pragma Assert\n               ((Big (Factor) * Big (Factor)) ** Exp = Rest * Rest);"}]}