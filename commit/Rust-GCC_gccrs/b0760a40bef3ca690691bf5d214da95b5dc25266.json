{"sha": "b0760a40bef3ca690691bf5d214da95b5dc25266", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA3NjBhNDBiZWYzY2E2OTA2OTFiZjVkMjE0ZGE5NWI1ZGMyNTI2Ng==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-08-07T19:05:42Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-08-07T19:05:42Z"}, "message": "[AArch64] Merge SVE reduction patterns\n\nThe reorg showed that we had an unnecessary separation between\nthe bitwise and max/min reductions for integers, and the\naddition and max/min reductions for fp.\n\n2019-08-07  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* config/aarch64/iterators.md (BITWISEV): Delete.\n\t(SVE_INT_REDUCTION, SVE_FP_REDUCTION): New int iterators.\n\t(optab): Handle UNSPEC_UMAXV, UNSPEC_UMINV, UNSPEC_SMAXV,\n\tUNSPEC_SMINV, UNSPEC_FADDV, UNSPEC_FMAXNMV, UNSPEC_FMAXV,\n\tUNSPEC_FMINNMV, UNSPEC_FMINV.\n\t(bit_reduc_op): Delete.\n\t(sve_int_op): New int attribute.\n\t(sve_fp_op): Handle UNSPEC_FADDV, UNSPEC_FMAXNMV, UNSPEC_FMAXV,\n\tUNSPEC_FMINNMV, UNSPEC_FMINV.\n\t* config/aarch64/aarch64-sve.md\n\t(reduc_<MAXMINV:maxmin_uns>_scal_<SVE_I:mode>)\n\t(*reduc_<MAXMINV:maxmin_uns>_scal_<SVE_I:mode>)\n\t(reduc_<BITWISEV:optab>_scal_<SVE_I:mode>)\n\t(*reduc_<BITWISEV:optab>_scal_<SVE_I:mode>): Merge into...\n\t(reduc_<SVE_INT_REDUCTION:optab>_scal_<SVE_I:mode>)\n\t(*reduc_<SVE_INT_REDUCTION:optab>_scal_<SVE_I:mode>): ...these\n\tnew patterns.\n\t(reduc_plus_scal_<SVE_F:mode>, *reduc_plus_scal_<SVE_I:mode>)\n\t(reduc_<FMAXMINV:optab>_scal_<SVE_F:mode>)\n\t(*reduc_<FMAXMINV:optab>_scal_<SVE_F:mode>): Merge into...\n\t(reduc_<SVE_FP_REDUCTION:optab>_scal_<SVE_F:mode>)\n\t(*reduc_<SVE_FP_REDUCTION:optab>_scal_<SVE_F:mode>): ...these\n\tnew patterns.\n\nFrom-SVN: r274190", "tree": {"sha": "31d17f3a279b165abe7583d403df0cfe3bf46838", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31d17f3a279b165abe7583d403df0cfe3bf46838"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0760a40bef3ca690691bf5d214da95b5dc25266", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0760a40bef3ca690691bf5d214da95b5dc25266", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0760a40bef3ca690691bf5d214da95b5dc25266", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0760a40bef3ca690691bf5d214da95b5dc25266/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0d80d083a2e1d368fcb11eb7ea5490c274f0ea15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d80d083a2e1d368fcb11eb7ea5490c274f0ea15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d80d083a2e1d368fcb11eb7ea5490c274f0ea15"}], "stats": {"total": 136, "additions": 75, "deletions": 61}, "files": [{"sha": "43e53c0a260c2d0054acd9829d055b0ab44e1ed8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0760a40bef3ca690691bf5d214da95b5dc25266/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0760a40bef3ca690691bf5d214da95b5dc25266/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b0760a40bef3ca690691bf5d214da95b5dc25266", "patch": "@@ -1,3 +1,29 @@\n+2019-08-07  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/aarch64/iterators.md (BITWISEV): Delete.\n+\t(SVE_INT_REDUCTION, SVE_FP_REDUCTION): New int iterators.\n+\t(optab): Handle UNSPEC_UMAXV, UNSPEC_UMINV, UNSPEC_SMAXV,\n+\tUNSPEC_SMINV, UNSPEC_FADDV, UNSPEC_FMAXNMV, UNSPEC_FMAXV,\n+\tUNSPEC_FMINNMV, UNSPEC_FMINV.\n+\t(bit_reduc_op): Delete.\n+\t(sve_int_op): New int attribute.\n+\t(sve_fp_op): Handle UNSPEC_FADDV, UNSPEC_FMAXNMV, UNSPEC_FMAXV,\n+\tUNSPEC_FMINNMV, UNSPEC_FMINV.\n+\t* config/aarch64/aarch64-sve.md\n+\t(reduc_<MAXMINV:maxmin_uns>_scal_<SVE_I:mode>)\n+\t(*reduc_<MAXMINV:maxmin_uns>_scal_<SVE_I:mode>)\n+\t(reduc_<BITWISEV:optab>_scal_<SVE_I:mode>)\n+\t(*reduc_<BITWISEV:optab>_scal_<SVE_I:mode>): Merge into...\n+\t(reduc_<SVE_INT_REDUCTION:optab>_scal_<SVE_I:mode>)\n+\t(*reduc_<SVE_INT_REDUCTION:optab>_scal_<SVE_I:mode>): ...these\n+\tnew patterns.\n+\t(reduc_plus_scal_<SVE_F:mode>, *reduc_plus_scal_<SVE_I:mode>)\n+\t(reduc_<FMAXMINV:optab>_scal_<SVE_F:mode>)\n+\t(*reduc_<FMAXMINV:optab>_scal_<SVE_F:mode>): Merge into...\n+\t(reduc_<SVE_FP_REDUCTION:optab>_scal_<SVE_F:mode>)\n+\t(*reduc_<SVE_FP_REDUCTION:optab>_scal_<SVE_F:mode>): ...these\n+\tnew patterns.\n+\n 2019-08-07  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* config/aarch64/aarch64-sve.md (fma<mode>4, *fma<mode>4)"}, {"sha": "3d60afacc25f08f4c2f17a1be0a2c7cd20247576", "filename": "gcc/config/aarch64/aarch64-sve.md", "status": "modified", "additions": 12, "deletions": 54, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0760a40bef3ca690691bf5d214da95b5dc25266/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0760a40bef3ca690691bf5d214da95b5dc25266/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md?ref=b0760a40bef3ca690691bf5d214da95b5dc25266", "patch": "@@ -3152,46 +3152,26 @@\n   \"uaddv\\t%d0, %1, %2.<Vetype>\"\n )\n \n-;; Unpredicated integer MAX/MIN reduction.\n-(define_expand \"reduc_<maxmin_uns>_scal_<mode>\"\n-  [(set (match_operand:<VEL> 0 \"register_operand\")\n-\t(unspec:<VEL> [(match_dup 2)\n-\t\t       (match_operand:SVE_I 1 \"register_operand\")]\n-\t\t      MAXMINV))]\n-  \"TARGET_SVE\"\n-  {\n-    operands[2] = aarch64_ptrue_reg (<VPRED>mode);\n-  }\n-)\n-\n-;; Predicated integer MAX/MIN reduction.\n-(define_insn \"*reduc_<maxmin_uns>_scal_<mode>\"\n-  [(set (match_operand:<VEL> 0 \"register_operand\" \"=w\")\n-\t(unspec:<VEL> [(match_operand:<VPRED> 1 \"register_operand\" \"Upl\")\n-\t\t       (match_operand:SVE_I 2 \"register_operand\" \"w\")]\n-\t\t      MAXMINV))]\n-  \"TARGET_SVE\"\n-  \"<maxmin_uns_op>v\\t%<Vetype>0, %1, %2.<Vetype>\"\n-)\n-\n+;; Unpredicated integer reductions.\n (define_expand \"reduc_<optab>_scal_<mode>\"\n   [(set (match_operand:<VEL> 0 \"register_operand\")\n \t(unspec:<VEL> [(match_dup 2)\n \t\t       (match_operand:SVE_I 1 \"register_operand\")]\n-\t\t      BITWISEV))]\n+\t\t      SVE_INT_REDUCTION))]\n   \"TARGET_SVE\"\n   {\n     operands[2] = aarch64_ptrue_reg (<VPRED>mode);\n   }\n )\n \n+;; Predicated integer reductions.\n (define_insn \"*reduc_<optab>_scal_<mode>\"\n   [(set (match_operand:<VEL> 0 \"register_operand\" \"=w\")\n \t(unspec:<VEL> [(match_operand:<VPRED> 1 \"register_operand\" \"Upl\")\n \t\t       (match_operand:SVE_I 2 \"register_operand\" \"w\")]\n-\t\t      BITWISEV))]\n+\t\t      SVE_INT_REDUCTION))]\n   \"TARGET_SVE\"\n-  \"<bit_reduc_op>\\t%<Vetype>0, %1, %2.<Vetype>\"\n+  \"<sve_int_op>\\t%<Vetype>0, %1, %2.<Vetype>\"\n )\n \n ;; -------------------------------------------------------------------------\n@@ -3205,48 +3185,26 @@\n ;; - FMINV\n ;; -------------------------------------------------------------------------\n \n-;; Unpredicated floating-point add reduction.\n-(define_expand \"reduc_plus_scal_<mode>\"\n-  [(set (match_operand:<VEL> 0 \"register_operand\")\n-\t(unspec:<VEL> [(match_dup 2)\n-\t\t       (match_operand:SVE_F 1 \"register_operand\")]\n-\t\t      UNSPEC_FADDV))]\n-  \"TARGET_SVE\"\n-  {\n-    operands[2] = aarch64_ptrue_reg (<VPRED>mode);\n-  }\n-)\n-\n-;; Predicated floating-point add reduction.\n-(define_insn \"*reduc_plus_scal_<mode>\"\n-  [(set (match_operand:<VEL> 0 \"register_operand\" \"=w\")\n-\t(unspec:<VEL> [(match_operand:<VPRED> 1 \"register_operand\" \"Upl\")\n-\t\t       (match_operand:SVE_F 2 \"register_operand\" \"w\")]\n-\t\t      UNSPEC_FADDV))]\n-  \"TARGET_SVE\"\n-  \"faddv\\t%<Vetype>0, %1, %2.<Vetype>\"\n-)\n-\n-;; Unpredicated floating-point MAX/MIN reduction.\n-(define_expand \"reduc_<maxmin_uns>_scal_<mode>\"\n+;; Unpredicated floating-point tree reductions.\n+(define_expand \"reduc_<optab>_scal_<mode>\"\n   [(set (match_operand:<VEL> 0 \"register_operand\")\n \t(unspec:<VEL> [(match_dup 2)\n \t\t       (match_operand:SVE_F 1 \"register_operand\")]\n-\t\t      FMAXMINV))]\n+\t\t      SVE_FP_REDUCTION))]\n   \"TARGET_SVE\"\n   {\n     operands[2] = aarch64_ptrue_reg (<VPRED>mode);\n   }\n )\n \n-;; Predicated floating-point MAX/MIN reduction.\n-(define_insn \"*reduc_<maxmin_uns>_scal_<mode>\"\n+;; Predicated floating-point tree reductions.\n+(define_insn \"*reduc_<optab>_scal_<mode>\"\n   [(set (match_operand:<VEL> 0 \"register_operand\" \"=w\")\n \t(unspec:<VEL> [(match_operand:<VPRED> 1 \"register_operand\" \"Upl\")\n \t\t       (match_operand:SVE_F 2 \"register_operand\" \"w\")]\n-\t\t      FMAXMINV))]\n+\t\t      SVE_FP_REDUCTION))]\n   \"TARGET_SVE\"\n-  \"<maxmin_uns_op>v\\t%<Vetype>0, %1, %2.<Vetype>\"\n+  \"<sve_fp_op>\\t%<Vetype>0, %1, %2.<Vetype>\"\n )\n \n ;; -------------------------------------------------------------------------"}, {"sha": "5b72dc4147b4a9fff5c6c7837b95047300386689", "filename": "gcc/config/aarch64/iterators.md", "status": "modified", "additions": 37, "deletions": 7, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0760a40bef3ca690691bf5d214da95b5dc25266/gcc%2Fconfig%2Faarch64%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0760a40bef3ca690691bf5d214da95b5dc25266/gcc%2Fconfig%2Faarch64%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fiterators.md?ref=b0760a40bef3ca690691bf5d214da95b5dc25266", "patch": "@@ -1501,8 +1501,6 @@\n (define_int_iterator FMAXMINV [UNSPEC_FMAXV UNSPEC_FMINV\n \t\t\t       UNSPEC_FMAXNMV UNSPEC_FMINNMV])\n \n-(define_int_iterator BITWISEV [UNSPEC_ANDV UNSPEC_IORV UNSPEC_XORV])\n-\n (define_int_iterator LOGICALF [UNSPEC_ANDF UNSPEC_IORF UNSPEC_XORF])\n \n (define_int_iterator HADDSUB [UNSPEC_SHADD UNSPEC_UHADD\n@@ -1612,6 +1610,20 @@\n \n (define_int_iterator MUL_HIGHPART [UNSPEC_SMUL_HIGHPART UNSPEC_UMUL_HIGHPART])\n \n+(define_int_iterator SVE_INT_REDUCTION [UNSPEC_ANDV\n+\t\t\t\t\tUNSPEC_IORV\n+\t\t\t\t\tUNSPEC_SMAXV\n+\t\t\t\t\tUNSPEC_SMINV\n+\t\t\t\t\tUNSPEC_UMAXV\n+\t\t\t\t\tUNSPEC_UMINV\n+\t\t\t\t\tUNSPEC_XORV])\n+\n+(define_int_iterator SVE_FP_REDUCTION [UNSPEC_FADDV\n+\t\t\t\t       UNSPEC_FMAXV\n+\t\t\t\t       UNSPEC_FMAXNMV\n+\t\t\t\t       UNSPEC_FMINV\n+\t\t\t\t       UNSPEC_FMINNMV])\n+\n (define_int_iterator SVE_COND_FP_UNARY [UNSPEC_COND_FABS\n \t\t\t\t\tUNSPEC_COND_FNEG\n \t\t\t\t\tUNSPEC_COND_FRINTA\n@@ -1682,6 +1694,15 @@\n \t\t\t(UNSPEC_ANDV \"and\")\n \t\t\t(UNSPEC_IORV \"ior\")\n \t\t\t(UNSPEC_XORV \"xor\")\n+\t\t\t(UNSPEC_UMAXV \"umax\")\n+\t\t\t(UNSPEC_UMINV \"umin\")\n+\t\t\t(UNSPEC_SMAXV \"smax\")\n+\t\t\t(UNSPEC_SMINV \"smin\")\n+\t\t\t(UNSPEC_FADDV \"plus\")\n+\t\t\t(UNSPEC_FMAXNMV \"smax\")\n+\t\t\t(UNSPEC_FMAXV \"smax_nan\")\n+\t\t\t(UNSPEC_FMINNMV \"smin\")\n+\t\t\t(UNSPEC_FMINV \"smin_nan\")\n \t\t\t(UNSPEC_COND_FABS \"abs\")\n \t\t\t(UNSPEC_COND_FADD \"add\")\n \t\t\t(UNSPEC_COND_FDIV \"div\")\n@@ -1731,10 +1752,6 @@\n \t\t\t\t (UNSPEC_FMAXNM \"fmaxnm\")\n \t\t\t\t (UNSPEC_FMINNM \"fminnm\")])\n \n-(define_int_attr bit_reduc_op [(UNSPEC_ANDV \"andv\")\n-\t\t\t       (UNSPEC_IORV \"orv\")\n-\t\t\t       (UNSPEC_XORV \"eorv\")])\n-\n ;; The SVE logical instruction that implements an unspec.\n (define_int_attr logicalf_op [(UNSPEC_ANDF \"and\")\n \t\t \t      (UNSPEC_IORF \"orr\")\n@@ -1932,7 +1949,20 @@\n \t\t\t (UNSPEC_COND_FCMLT \"lt\")\n \t\t\t (UNSPEC_COND_FCMNE \"ne\")])\n \n-(define_int_attr sve_fp_op [(UNSPEC_COND_FABS \"fabs\")\n+(define_int_attr sve_int_op [(UNSPEC_ANDV \"andv\")\n+\t\t\t     (UNSPEC_IORV \"orv\")\n+\t\t\t     (UNSPEC_XORV \"eorv\")\n+\t\t\t     (UNSPEC_UMAXV \"umaxv\")\n+\t\t\t     (UNSPEC_UMINV \"uminv\")\n+\t\t\t     (UNSPEC_SMAXV \"smaxv\")\n+\t\t\t     (UNSPEC_SMINV \"sminv\")])\n+\n+(define_int_attr sve_fp_op [(UNSPEC_FADDV \"faddv\")\n+\t\t\t    (UNSPEC_FMAXNMV \"fmaxnmv\")\n+\t\t\t    (UNSPEC_FMAXV \"fmaxv\")\n+\t\t\t    (UNSPEC_FMINNMV \"fminnmv\")\n+\t\t\t    (UNSPEC_FMINV \"fminv\")\n+\t\t\t    (UNSPEC_COND_FABS \"fabs\")\n \t\t\t    (UNSPEC_COND_FADD \"fadd\")\n \t\t\t    (UNSPEC_COND_FDIV \"fdiv\")\n \t\t\t    (UNSPEC_COND_FMAXNM \"fmaxnm\")"}]}