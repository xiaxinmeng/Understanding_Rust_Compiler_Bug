{"sha": "37e0df8a9be5a8232f4ccb73cdadb02121ba523f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdlMGRmOGE5YmU1YTgyMzJmNGNjYjczY2RhZGIwMjEyMWJhNTIzZg==", "commit": {"author": {"name": "Jiufu Guo", "email": "guojiufu@linux.ibm.com", "date": "2020-03-10T05:51:57Z"}, "committer": {"name": "Jiufu Guo", "email": "guojiufu@linux.ibm.com", "date": "2020-03-11T01:34:39Z"}, "message": "rs6000: Check -+0 and NaN for smax/smin generation\n\nPR93709 mentioned regressions on maxlocval_4.f90 and minlocval_f.f90 which\nrelates to max of '-inf' and 'nan'. This regression occur on P9 because\nP9 new instruction 'xsmaxcdp' is generated. \nAnd for C code `a < b ? b : a` is also generated as `xsmaxcdp` under -O2\nfor P9. While this instruction behavior more like C/C++ semantic (a>b?a:b).\n\nThis generates prevents 'xsmaxcdp' to be generated for those cases.\n'xsmincdp' also is handled in patch.\n\ngcc/\n2020-03-10  Jiufu Guo  <guojiufu@linux.ibm.com>\n\n\tPR target/93709\n\t* gcc/config/rs6000/rs6000.c (rs6000_emit_p9_fp_minmax): Check\n\tNAN and SIGNED_ZEROR for smax/smin.\n\ngcc/testsuite\n2020-03-10  Jiufu Guo  <guojiufu@linux.ibm.com>\n\n\tPR target/93709\n\t* gcc.target/powerpc/p9-minmax-3.c: New test.", "tree": {"sha": "6e5892773073ca2e3964bc81de76cdd97dc5d98c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e5892773073ca2e3964bc81de76cdd97dc5d98c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37e0df8a9be5a8232f4ccb73cdadb02121ba523f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37e0df8a9be5a8232f4ccb73cdadb02121ba523f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37e0df8a9be5a8232f4ccb73cdadb02121ba523f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37e0df8a9be5a8232f4ccb73cdadb02121ba523f/comments", "author": null, "committer": null, "parents": [{"sha": "76743c8a6abbe29fe0f20fc55d5d691ff62dee6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76743c8a6abbe29fe0f20fc55d5d691ff62dee6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76743c8a6abbe29fe0f20fc55d5d691ff62dee6a"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "5b67b79745f92733d6d97eae63ad00415bdf87db", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37e0df8a9be5a8232f4ccb73cdadb02121ba523f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37e0df8a9be5a8232f4ccb73cdadb02121ba523f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=37e0df8a9be5a8232f4ccb73cdadb02121ba523f", "patch": "@@ -1,3 +1,9 @@\n+2020-03-10  Jiufu Guo  <guojiufu@linux.ibm.com>\n+\n+\tPR target/93709\n+\t* gcc/config/rs6000/rs6000.c (rs6000_emit_p9_fp_minmax): Check\n+\tNAN and SIGNED_ZEROR for smax/smin.\n+\n 2020-03-10  Will Schmidt  <will_schmidt@vnet.ibm.com>\n \n \tPR target/90763"}, {"sha": "46b7dec2abd4b9629061a02217df6cb2ef014ea6", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37e0df8a9be5a8232f4ccb73cdadb02121ba523f/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37e0df8a9be5a8232f4ccb73cdadb02121ba523f/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=37e0df8a9be5a8232f4ccb73cdadb02121ba523f", "patch": "@@ -14831,7 +14831,11 @@ rs6000_emit_p9_fp_minmax (rtx dest, rtx op, rtx true_cond, rtx false_cond)\n   if (rtx_equal_p (op0, true_cond) && rtx_equal_p (op1, false_cond))\n     ;\n \n-  else if (rtx_equal_p (op1, true_cond) && rtx_equal_p (op0, false_cond))\n+  /* Only when NaNs and signed-zeros are not in effect, smax could be\n+     used for `op0 < op1 ? op1 : op0`, and smin could be used for\n+     `op0 > op1 ? op1 : op0`.  */\n+  else if (rtx_equal_p (op1, true_cond) && rtx_equal_p (op0, false_cond)\n+\t   && !HONOR_NANS (compare_mode) && !HONOR_SIGNED_ZEROS (compare_mode))\n     max_p = !max_p;\n \n   else"}, {"sha": "c76d891a3e64c5d191810ad4353afcbb151f1dd6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37e0df8a9be5a8232f4ccb73cdadb02121ba523f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37e0df8a9be5a8232f4ccb73cdadb02121ba523f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=37e0df8a9be5a8232f4ccb73cdadb02121ba523f", "patch": "@@ -1,3 +1,8 @@\n+2020-03-10  Jiufu Guo  <guojiufu@linux.ibm.com>\n+\n+\tPR target/93709\n+\t* gcc.target/powerpc/p9-minmax-3.c: New test.\n+\n 2020-03-10  Will Schmidt  <will_schmidt@vnet.ibm.com>\n \n \tPR target/90763"}, {"sha": "141603e05b4330da9f4d86659ba0798b1f3a85d0", "filename": "gcc/testsuite/gcc.target/powerpc/p9-minmax-3.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37e0df8a9be5a8232f4ccb73cdadb02121ba523f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp9-minmax-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37e0df8a9be5a8232f4ccb73cdadb02121ba523f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp9-minmax-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp9-minmax-3.c?ref=37e0df8a9be5a8232f4ccb73cdadb02121ba523f", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile { target { powerpc*-*-* } } } */\n+/* { dg-require-effective-target powerpc_p9vector_ok } */\n+/* { dg-options \"-mdejagnu-cpu=power9 -O2 -mpower9-minmax\" } */\n+/* { dg-final { scan-assembler-not \"xsmaxcdp\"   } } */\n+/* { dg-final { scan-assembler-not \"xsmincdp\"   } } */\n+\n+double\n+dbl_max1 (double a, double b)\n+{\n+  return a < b ? b : a;\n+}\n+\n+double\n+dbl_min1 (double a, double b)\n+{\n+  return a > b ? b : a;\n+}"}]}