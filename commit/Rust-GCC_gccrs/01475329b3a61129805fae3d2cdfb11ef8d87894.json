{"sha": "01475329b3a61129805fae3d2cdfb11ef8d87894", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE0NzUzMjliM2E2MTEyOTgwNWZhZTNkMmNkZmIxMWVmOGQ4Nzg5NA==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2003-04-25T22:55:18Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2003-04-25T22:55:18Z"}, "message": "Add the new file.\n\nFrom-SVN: r66079", "tree": {"sha": "88558d050ce991eb063fd05852390a3c3c3efc7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88558d050ce991eb063fd05852390a3c3c3efc7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01475329b3a61129805fae3d2cdfb11ef8d87894", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01475329b3a61129805fae3d2cdfb11ef8d87894", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01475329b3a61129805fae3d2cdfb11ef8d87894", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01475329b3a61129805fae3d2cdfb11ef8d87894/comments", "author": null, "committer": null, "parents": [{"sha": "d3a0b002e173465d21c5a42f8492dc70b149c568", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3a0b002e173465d21c5a42f8492dc70b149c568", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3a0b002e173465d21c5a42f8492dc70b149c568"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "98dfdac78ac7458068162e508cf1908cde9e9455", "filename": "gcc/testsuite/gcc.dg/ia64-sync-4.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01475329b3a61129805fae3d2cdfb11ef8d87894/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01475329b3a61129805fae3d2cdfb11ef8d87894/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-4.c?ref=01475329b3a61129805fae3d2cdfb11ef8d87894", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile { target ia64-*-* } } */\n+/* { dg-options \"-O2 -finline-functions\" } */\n+\n+/* Test inlining __sync_bool_compare_and_swap_di.  */\n+\n+#include <stdbool.h>\n+#include <ia64intrin.h>\n+\n+static bool\n+compare_and_swap(long *addr, long old, long new_val)\n+{\n+  return __sync_bool_compare_and_swap_di(addr, old, new_val);\n+}\n+\n+void\n+foo (long *address)\n+{\n+  long he_address = *address & ~1;\n+  while (!compare_and_swap(address, he_address, he_address | 1))\n+    he_address = *address & ~1;\n+}"}]}