{"sha": "12d80acc4898f08ea2abbfd8c2be41a52c8d98bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJkODBhY2M0ODk4ZjA4ZWEyYWJiZmQ4YzJiZTQxYTUyYzhkOThiYw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-02-18T13:22:17Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-02-18T13:22:17Z"}, "message": "re PR tree-optimization/47737 (wrong code with -funswitch-loops -fno-tree-dominator-opts -fgraphite-identity)\n\n2011-02-18  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/47737\n\t* tree-ssa-loop-im.c (extract_true_false_args_from_phi): Fix\n\tedge dominance check.\n\nFrom-SVN: r170272", "tree": {"sha": "3c922e2a1a58a34b735ca64db0fe8d3abb392357", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c922e2a1a58a34b735ca64db0fe8d3abb392357"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12d80acc4898f08ea2abbfd8c2be41a52c8d98bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12d80acc4898f08ea2abbfd8c2be41a52c8d98bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12d80acc4898f08ea2abbfd8c2be41a52c8d98bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12d80acc4898f08ea2abbfd8c2be41a52c8d98bc/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "357f98e5520d628b5acf21b516c8ce5f408a605f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/357f98e5520d628b5acf21b516c8ce5f408a605f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/357f98e5520d628b5acf21b516c8ce5f408a605f"}], "stats": {"total": 39, "additions": 26, "deletions": 13}, "files": [{"sha": "724e6edcceb3ab1548a68daf39124a2fc34a188b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12d80acc4898f08ea2abbfd8c2be41a52c8d98bc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12d80acc4898f08ea2abbfd8c2be41a52c8d98bc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=12d80acc4898f08ea2abbfd8c2be41a52c8d98bc", "patch": "@@ -1,3 +1,9 @@\n+2011-02-18  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/47737\n+\t* tree-ssa-loop-im.c (extract_true_false_args_from_phi): Fix\n+\tedge dominance check.\n+\n 2011-02-18  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/47780"}, {"sha": "4ec67cf1138eba56db012fbf4f9a77db5db3e2d9", "filename": "gcc/tree-ssa-loop-im.c", "status": "modified", "additions": 20, "deletions": 13, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12d80acc4898f08ea2abbfd8c2be41a52c8d98bc/gcc%2Ftree-ssa-loop-im.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12d80acc4898f08ea2abbfd8c2be41a52c8d98bc/gcc%2Ftree-ssa-loop-im.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-im.c?ref=12d80acc4898f08ea2abbfd8c2be41a52c8d98bc", "patch": "@@ -676,31 +676,38 @@ extract_true_false_args_from_phi (basic_block dom, gimple phi,\n      by the true edge of the predicate block and the other edge\n      dominated by the false edge.  This ensures that the PHI argument\n      we are going to take is completely determined by the path we\n-     take from the predicate block.  */\n+     take from the predicate block.\n+     We can only use BB dominance checks below if the destination of\n+     the true/false edges are dominated by their edge, thus only\n+     have a single predecessor.  */\n   extract_true_false_edges_from_block (dom, &true_edge, &false_edge);\n   tem = EDGE_PRED (bb, 0);\n   if (tem == true_edge\n-      || tem->src == true_edge->dest\n-      || dominated_by_p (CDI_DOMINATORS,\n-\t\t\t tem->src, true_edge->dest))\n+      || (single_pred_p (true_edge->dest)\n+\t  && (tem->src == true_edge->dest\n+\t      || dominated_by_p (CDI_DOMINATORS,\n+\t\t\t\t tem->src, true_edge->dest))))\n     arg0 = PHI_ARG_DEF (phi, tem->dest_idx);\n   else if (tem == false_edge\n-\t   || tem->src == false_edge->dest\n-\t   || dominated_by_p (CDI_DOMINATORS,\n-\t\t\t      tem->src, false_edge->dest))\n+\t   || (single_pred_p (false_edge->dest)\n+\t       && (tem->src == false_edge->dest\n+\t\t   || dominated_by_p (CDI_DOMINATORS,\n+\t\t\t\t      tem->src, false_edge->dest))))\n     arg1 = PHI_ARG_DEF (phi, tem->dest_idx);\n   else\n     return false;\n   tem = EDGE_PRED (bb, 1);\n   if (tem == true_edge\n-      || tem->src == true_edge->dest\n-      || dominated_by_p (CDI_DOMINATORS,\n-\t\t\t tem->src, true_edge->dest))\n+      || (single_pred_p (true_edge->dest)\n+\t  && (tem->src == true_edge->dest\n+\t      || dominated_by_p (CDI_DOMINATORS,\n+\t\t\t\t tem->src, true_edge->dest))))\n     arg0 = PHI_ARG_DEF (phi, tem->dest_idx);\n   else if (tem == false_edge\n-\t   || tem->src == false_edge->dest\n-\t   || dominated_by_p (CDI_DOMINATORS,\n-\t\t\t      tem->src, false_edge->dest))\n+\t   || (single_pred_p (false_edge->dest)\n+\t       && (tem->src == false_edge->dest\n+\t\t   || dominated_by_p (CDI_DOMINATORS,\n+\t\t\t\t      tem->src, false_edge->dest))))\n     arg1 = PHI_ARG_DEF (phi, tem->dest_idx);\n   else\n     return false;"}]}