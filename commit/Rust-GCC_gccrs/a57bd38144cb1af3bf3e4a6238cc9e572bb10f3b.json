{"sha": "a57bd38144cb1af3bf3e4a6238cc9e572bb10f3b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU3YmQzODE0NGNiMWFmM2JmM2U0YTYyMzhjYzllNTcyYmIxMGYzYg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-06T19:04:59Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-06T19:04:59Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1462", "tree": {"sha": "64f8f7b876242cff00cbdb165c1be48a1e5e76ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64f8f7b876242cff00cbdb165c1be48a1e5e76ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a57bd38144cb1af3bf3e4a6238cc9e572bb10f3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a57bd38144cb1af3bf3e4a6238cc9e572bb10f3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a57bd38144cb1af3bf3e4a6238cc9e572bb10f3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a57bd38144cb1af3bf3e4a6238cc9e572bb10f3b/comments", "author": null, "committer": null, "parents": [{"sha": "236430379567f1dfa9c3bf0064ece7ef61daee23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/236430379567f1dfa9c3bf0064ece7ef61daee23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/236430379567f1dfa9c3bf0064ece7ef61daee23"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "b0cf3ff52c911c78ed13dd2b087a41fe5365e231", "filename": "gcc/stmt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a57bd38144cb1af3bf3e4a6238cc9e572bb10f3b/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a57bd38144cb1af3bf3e4a6238cc9e572bb10f3b/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=a57bd38144cb1af3bf3e4a6238cc9e572bb10f3b", "patch": "@@ -3233,7 +3233,7 @@ pushcase (value, label, duplicate)\n     return 0;\n \n   /* There may be NOP_EXPR around the value if we got it from an enum.  */\n-  STRIP_NOPS (arg);\n+  STRIP_NOPS (value);\n \n   /* Convert VALUE to the type in which the comparisons are nominally done.  */\n   if (value != 0)"}]}