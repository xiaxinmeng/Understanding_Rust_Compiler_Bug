{"sha": "33d01c335d7cd5255448a07fe636952f62155bb9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNkMDFjMzM1ZDdjZDUyNTU0NDhhMDdmZTYzNjk1MmY2MjE1NWJiOQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-06-28T18:04:46Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-06-28T18:04:46Z"}, "message": "(output_{pro,epi}log): Flag_inhibit_size_directive should supress .ent, .end, and accompanying directives.\n\n(output_{pro,epi}log): Flag_inhibit_size_directive\nshould supress .ent, .end, and accompanying directives.\n(alpha_output_lineno): Fix polarity on GAS test.\n\nFrom-SVN: r12352", "tree": {"sha": "cf1b0f396efbf71e214d02b96e77fbace69fadf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf1b0f396efbf71e214d02b96e77fbace69fadf3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33d01c335d7cd5255448a07fe636952f62155bb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33d01c335d7cd5255448a07fe636952f62155bb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33d01c335d7cd5255448a07fe636952f62155bb9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33d01c335d7cd5255448a07fe636952f62155bb9/comments", "author": null, "committer": null, "parents": [{"sha": "7fa12593d2c685c58961de5645b0d543355651ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fa12593d2c685c58961de5645b0d543355651ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fa12593d2c685c58961de5645b0d543355651ed"}], "stats": {"total": 40, "additions": 25, "deletions": 15}, "files": [{"sha": "7e75a9dc039ff5c212c65c9c269f467d43453420", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 25, "deletions": 15, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33d01c335d7cd5255448a07fe636952f62155bb9/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33d01c335d7cd5255448a07fe636952f62155bb9/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=33d01c335d7cd5255448a07fe636952f62155bb9", "patch": "@@ -1633,13 +1633,16 @@ output_prolog (file, size)\n      to the .ent directive, the lex_level, is ignored by the assembler,\n      so we might as well omit it.  */\n      \n-  fprintf (file, \"\\t.ent \");\n-  assemble_name (file, alpha_function_name);\n-  fprintf (file, \"\\n\");\n+  if (!flag_inhibit_size_directive)\n+    {\n+      fprintf (file, \"\\t.ent \");\n+      assemble_name (file, alpha_function_name);\n+      fprintf (file, \"\\n\");\n+    }\n   ASM_OUTPUT_LABEL (file, alpha_function_name);\n   inside_function = TRUE;\n \n-  if (TARGET_IEEE_CONFORMANT)\n+  if (TARGET_IEEE_CONFORMANT && !flag_inhibit_size_directive)\n     /* Set flags in procedure descriptor to request IEEE-conformant\n        math-library routines.  The value we set it to is PDSC_EXC_IEEE\n        (/usr/include/pdsc.h). */\n@@ -1746,10 +1749,13 @@ output_prolog (file, size)\n     }\n \n   /* Describe our frame.  */\n-  fprintf (file, \"\\t.frame $%d,%d,$26,%d\\n\", \n-\t   (frame_pointer_needed\n-\t    ? HARD_FRAME_POINTER_REGNUM : STACK_POINTER_REGNUM),\n-\t   frame_size, current_function_pretend_args_size);\n+  if (!flag_inhibit_size_directive)\n+    {\n+      fprintf (file, \"\\t.frame $%d,%d,$26,%d\\n\", \n+\t       (frame_pointer_needed\n+\t        ? HARD_FRAME_POINTER_REGNUM : STACK_POINTER_REGNUM),\n+\t       frame_size, current_function_pretend_args_size);\n+    }\n     \n   /* Save register 26 if any other register needs to be saved.  */\n   if (sa_size != 0)\n@@ -1771,7 +1777,7 @@ output_prolog (file, size)\n       }\n \n   /* Print the register mask and do floating-point saves.  */\n-  if (reg_mask)\n+  if (reg_mask && !flag_inhibit_size_directive)\n     fprintf (file, \"\\t.mask 0x%x,%d\\n\", reg_mask,\n \t     actual_start_reg_offset - frame_size);\n \n@@ -1788,7 +1794,7 @@ output_prolog (file, size)\n       }\n \n   /* Print the floating-point mask, if we've saved any fp register.  */\n-  if (reg_mask)\n+  if (reg_mask && !flag_inhibit_size_directive)\n     fprintf (file, \"\\t.fmask 0x%x,%d\\n\", reg_mask,\n \t     actual_start_reg_offset - frame_size + int_reg_save_area_size);\n \n@@ -1798,7 +1804,8 @@ output_prolog (file, size)\n     fprintf (file, \"\\tbis $30,$30,$15\\n\");\n \n   /* End the prologue and say if we used gp.  */\n-  fprintf (file, \"\\t.prologue %d\\n\", alpha_function_needs_gp);\n+  if (!flag_inhibit_size_directive)\n+    fprintf (file, \"\\t.prologue %d\\n\", alpha_function_needs_gp);\n }\n \n /* Write function epilogue.  */\n@@ -1894,9 +1901,12 @@ output_epilog (file, size)\n     }\n \n   /* End the function.  */\n-  fprintf (file, \"\\t.end \");\n-  assemble_name (file, alpha_function_name);\n-  fprintf (file, \"\\n\");\n+  if (!flag_inhibit_size_directive)\n+    {\n+      fprintf (file, \"\\t.end \");\n+      assemble_name (file, alpha_function_name);\n+      fprintf (file, \"\\n\");\n+    }\n   inside_function = FALSE;\n \n   /* Show that we know this function if it is called again.  */\n@@ -1983,7 +1993,7 @@ alpha_output_lineno (stream, line)\n      FILE *stream;\n      int line;\n {\n-  if (! TARGET_GAS && write_symbols == DBX_DEBUG)\n+  if (TARGET_GAS && write_symbols == DBX_DEBUG)\n     {\n       /* mips-tfile doesn't understand .stabd directives.  */\n       ++sym_lineno;"}]}