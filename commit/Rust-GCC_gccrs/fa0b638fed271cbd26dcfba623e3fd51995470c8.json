{"sha": "fa0b638fed271cbd26dcfba623e3fd51995470c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmEwYjYzOGZlZDI3MWNiZDI2ZGNmYmE2MjNlM2ZkNTE5OTU0NzBjOA==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2017-06-16T21:05:08Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2017-06-16T21:05:08Z"}, "message": "[arm] Allow explicit periods to be escaped in\n\n\nThe MULTILIB_REUSE mapping rules are built up using periods to\nrepresent the placement of '=' signs in the command line syntax.  This\npresents a problem if the option contains an explicit period because\nthat is translated unconditionally.  The result is that it is not\ncurrently possible to write a reuse rule that would match the\nARMv8-M mainline architecture:\n\n\t-march=armv8-m.main\n\nTo fix this, this patch allows an explicit period to be escaped by writing\n\\. and by then preserving the period into the generated multilib header.\n\n\t* genmultilib (multilib_reuse): Allow an explicit period to be escaped\n\twith a backslash.  Remove the backslash after substituting unescaped\n\tperiods.\n\t* doc/fragments.texi (MULTILIB_REUSE): Document it.\n\nFrom-SVN: r249298", "tree": {"sha": "822455acd69da19fe65310e15eb9056099d9f16e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/822455acd69da19fe65310e15eb9056099d9f16e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa0b638fed271cbd26dcfba623e3fd51995470c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa0b638fed271cbd26dcfba623e3fd51995470c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa0b638fed271cbd26dcfba623e3fd51995470c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa0b638fed271cbd26dcfba623e3fd51995470c8/comments", "author": null, "committer": null, "parents": [{"sha": "f0cd49c501a98050f8b2c71b6866f57e94a4c1c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0cd49c501a98050f8b2c71b6866f57e94a4c1c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0cd49c501a98050f8b2c71b6866f57e94a4c1c6"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "d20d0aa4ebf68a96eba7048f08abbe5c20e54345", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa0b638fed271cbd26dcfba623e3fd51995470c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa0b638fed271cbd26dcfba623e3fd51995470c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fa0b638fed271cbd26dcfba623e3fd51995470c8", "patch": "@@ -1,3 +1,10 @@\n+2017-06-16  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* genmultilib (multilib_reuse): Allow an explicit period to be escaped\n+\twith a backslash.  Remove the backslash after substituting unescaped\n+\tperiods.\n+\t* doc/fragments.texi (MULTILIB_REUSE): Document it.\n+\n 2017-06-16  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* config.gcc: (arm*-*-*): When building a-profile libraries, force"}, {"sha": "6aef5537f437a602fa28d1504ed0b2eab5a17a35", "filename": "gcc/doc/fragments.texi", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa0b638fed271cbd26dcfba623e3fd51995470c8/gcc%2Fdoc%2Ffragments.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa0b638fed271cbd26dcfba623e3fd51995470c8/gcc%2Fdoc%2Ffragments.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ffragments.texi?ref=fa0b638fed271cbd26dcfba623e3fd51995470c8", "patch": "@@ -160,10 +160,12 @@ A reuse rule is comprised of two parts connected by equality sign.  The left\n part is the option set used to build multilib and the right part is the option\n set that will reuse this multilib.  Both parts should only use options\n specified in @code{MULTILIB_OPTIONS} and the equality signs found in options\n-name should be replaced with periods.  The order of options in the left part\n-matters and should be same with those specified in @code{MULTILIB_REQUIRED} or\n-aligned with the order in @code{MULTILIB_OPTIONS}.  There is no such limitation\n-for options in the right part as we don't build multilib from them.\n+name should be replaced with periods.  An explicit period in the rule can be\n+escaped by preceding it with a backslash.  The order of options in the left\n+part matters and should be same with those specified in\n+@code{MULTILIB_REQUIRED} or aligned with the order in @code{MULTILIB_OPTIONS}.\n+There is no such limitation for options in the right part as we don't build\n+multilib from them.\n \n @code{MULTILIB_REUSE} is different from @code{MULTILIB_MATCHES} in that it\n sets up relations between two option sets rather than two options.  Here is an"}, {"sha": "c8bcdf3935da194918172c2afe84abb24c8ea5b8", "filename": "gcc/genmultilib", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa0b638fed271cbd26dcfba623e3fd51995470c8/gcc%2Fgenmultilib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa0b638fed271cbd26dcfba623e3fd51995470c8/gcc%2Fgenmultilib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenmultilib?ref=fa0b638fed271cbd26dcfba623e3fd51995470c8", "patch": "@@ -466,8 +466,8 @@ echo \"static const char *const multilib_reuse_raw[] = {\"\n for rrule in ${multilib_reuse}; do\n   # The left part of the rule are the options we used to build multilib.\n   # The right part of the rule are the options that can reuse this multilib.\n-  combo=`echo ${rrule} | sed -e 's/=.*$//' -e 's/\\./=/g'`\n-  copts=`echo ${rrule} | sed -e 's/^.*=//' -e 's/\\./=/g'`\n+  combo=`echo ${rrule} | sed -e 's/=.*$//' -e 's/\\([^\\\\]\\)\\./\\1=/g' -e 's/\\\\\\././g'`\n+  copts=`echo ${rrule} | sed -e 's/^.*=//' -e 's/\\([^\\\\]\\)\\./\\1=/g' -e 's/\\\\\\././g'`\n   # The variable ${combinations} are the option combinations we will build\n   # multilib from.  If the combination in the left part of reuse rule isn't\n   # in this variable, it means no multilib will be built for current reuse"}]}