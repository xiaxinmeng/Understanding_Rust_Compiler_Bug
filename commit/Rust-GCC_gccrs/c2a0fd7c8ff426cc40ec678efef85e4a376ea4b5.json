{"sha": "c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJhMGZkN2M4ZmY0MjZjYzQwZWM2NzhlZmVmODVlNGEzNzZlYTRiNQ==", "commit": {"author": {"name": "Mark Eggleston", "email": "markeggleston@gcc.gnu.org", "date": "2020-08-04T13:10:08Z"}, "committer": {"name": "Mark Eggleston", "email": "markeggleston@gcc.gnu.org", "date": "2020-08-20T06:40:55Z"}, "message": "Fortran  : rejected f0.d edit descriptor PR96436\n\nZero length f format descriptors are valid for Fortran 95 and\nlater.  For g format descriptors from Fortran 2008 and later.\nFinally for D, E, EN and ES for Fortran 2018 and later.\n\n2020-08-20  Mark Eggleston  <markeggleston@gcc.gnu.org>\n\nlibgfortran/\n\n\tPR fortran/96436\n\t* io/format.c (parse_format_list):  Add new local variable\n\t\"standard\" to hold the required standard to check. If the\n\tformat width is zero select standard depending on descriptor.\n\tCall notification_std using the new standard variable.\n\n2020-08-20  Mark Eggleston  <markeggleston@gcc.gnu.org>\n\ngcc/testsuite/\n\n\tPR fortran/96436\n\t* gfortran.dg/pr96436_1.f90: New test.\n\t* gfortran.dg/pr96436_2.f90: New test.\n\t* gfortran.dg/pr96436_3.f90: New test.\n\t* gfortran.dg/pr96436_4.f90: New test.\n\t* gfortran.dg/pr96436_5.f90: New test.\n\t* gfortran.dg/pr96436_6.f90: New test.\n\t* gfortran.dg/pr96436_7.f90: New test.\n\t* gfortran.dg/pr96436_8.f90: New test.\n\t* gfortran.dg/pr96436_9.f90\n\t* gfortran.dg/pr96436_10.f90", "tree": {"sha": "df94cc464dbb4da304a5c733425324b1eb5e2b25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df94cc464dbb4da304a5c733425324b1eb5e2b25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5/comments", "author": null, "committer": null, "parents": [{"sha": "2f5951bd95e334d611f4be7bbe1a136c580f9c20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f5951bd95e334d611f4be7bbe1a136c580f9c20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f5951bd95e334d611f4be7bbe1a136c580f9c20"}], "stats": {"total": 143, "additions": 142, "deletions": 1}, "files": [{"sha": "7cc6a0a69b1e15a657aae77ee687e627d18d2966", "filename": "gcc/testsuite/gfortran.dg/pr96436_1.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr96436_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr96436_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr96436_1.f90?ref=c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do run }\n+! { dg-options \"-std=f95 -pedantic\" }\n+\n+character(20) :: fmt\n+character(9) :: buffer\n+fmt = \"(1a1,f0.2,1a1)\"\n+write(buffer,fmt) \">\", 3.0, \"<\"\n+if (buffer.ne.\">3.00<\") stop 1\n+end\n+"}, {"sha": "3bd30a9f16bf8472d652e404bbd22ff9bfc4fe23", "filename": "gcc/testsuite/gfortran.dg/pr96436_10.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr96436_10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr96436_10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr96436_10.f90?ref=c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do run }\n+! { dg-options \"-std=f2008 -pedantic\" }\n+! { dg-shouldfail \"Zero width in format descriptor\" }\n+\n+character(10) :: fmt = \"(es0.2)\"\n+print fmt, 3.\n+end\n+\n+! { dg-output \"Fortran runtime error: Zero width in format descriptor\" }\n+"}, {"sha": "d2d6caffbfe4a9a38f4119b4f91aeae4bb144b55", "filename": "gcc/testsuite/gfortran.dg/pr96436_2.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr96436_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr96436_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr96436_2.f90?ref=c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do run }\n+! { dg-options \"-std=f2003 -pedantic\" }\n+\n+character(20) :: fmt\n+character(9) :: buffer\n+fmt = \"(1a1,f0.2,1a1)\"\n+write(buffer,fmt) \">\", 3.0, \"<\"\n+if (buffer.ne.\">3.00<\") stop 1\n+end\n+"}, {"sha": "2750231312f0bafeeddec6c077cf6dd1fd96ccd2", "filename": "gcc/testsuite/gfortran.dg/pr96436_3.f90", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr96436_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr96436_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr96436_3.f90?ref=c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5", "patch": "@@ -0,0 +1,13 @@\n+! { dg-do run }\n+! { dg-options \"-std=f2008 -pedantic\" }\n+\n+character(20) :: fmt\n+character(9) :: buffer\n+fmt = \"(1a1,f0.2,1a1)\"\n+write(buffer,fmt) \">\", 3.0, \"<\"\n+if (buffer.ne.\">3.00<\") stop 1\n+fmt = \"(1a1,g0.2,1a1)\"\n+write(buffer,fmt) \">\", 0.3, \"<\"\n+if (buffer.ne.\">0.30<\") stop 2\n+end\n+"}, {"sha": "335ce5fb009fd97cc9ca5681f80a50cc20aaf0d2", "filename": "gcc/testsuite/gfortran.dg/pr96436_4.f90", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr96436_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr96436_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr96436_4.f90?ref=c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5", "patch": "@@ -0,0 +1,25 @@\n+! { dg-do run }\n+! { dg-options \"-std=f2018 -pedantic\" }\n+\n+character(20) :: fmt\n+character(9) :: buffer\n+fmt = \"(1a1,f0.2,1a1)\"\n+write(buffer,fmt) \">\", 3.0, \"<\"\n+if (buffer.ne.\">3.00<\") stop 1\n+fmt = \"(1a1,g0.2,1a1)\"\n+write(buffer,fmt) \">\", 0.3, \"<\"\n+if (buffer.ne.\">0.30<\") stop 2\n+fmt = \"(1a1,d0.2,1a1)\"\n+write(buffer,fmt) \">\", 3.0, \"<\"\n+if (buffer.ne.\">0.30D+1<\") stop 3\n+fmt = \"(1a1,e0.2,1a1)\"\n+write(buffer,fmt) \">\", 3.0, \"<\"\n+if (buffer.ne.\">0.30E+1<\") stop 4\n+fmt = \"(1a1,en0.2,1a1)\"\n+write(buffer,fmt) \">\", 3.0, \"<\"\n+if (buffer.ne.\">3.00<\") stop 5\n+fmt = \"(1a1,es0.2,1a1)\"\n+write(buffer,fmt) \">\", 3.0, \"<\"\n+if (buffer.ne.\">3.00<\") stop 6\n+end\n+"}, {"sha": "a45df8963c85e6ca2689db987ce51f5826809b1c", "filename": "gcc/testsuite/gfortran.dg/pr96436_5.f90", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr96436_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr96436_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr96436_5.f90?ref=c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5", "patch": "@@ -0,0 +1,25 @@\n+! { dg-do run }\n+! { dg-options \"-pedantic\" }\n+\n+character(20) :: fmt\n+character(9) :: buffer\n+fmt = \"(1a1,f0.2,1a1)\"\n+write(buffer,fmt) \">\", 3.0, \"<\"\n+if (buffer.ne.\">3.00<\") stop 1\n+fmt = \"(1a1,g0.2,1a1)\"\n+write(buffer,fmt) \">\", 0.30, \"<\"\n+if (buffer.ne.\">0.30<\") stop 2\n+fmt = \"(1a1,d0.2,1a1)\"\n+write(buffer,fmt) \">\", 3.0, \"<\"\n+if (buffer.ne.\">0.30D+1<\") stop 3\n+fmt = \"(1a1,e0.2,1a1)\"\n+write(buffer,fmt) \">\", 3.0, \"<\"\n+if (buffer.ne.\">0.30E+1<\") stop 4\n+fmt = \"(1a1,en0.2,1a1)\"\n+write(buffer,fmt) \">\", 3.0, \"<\"\n+if (buffer.ne.\">3.00<\") stop 5\n+fmt = \"(1a1,es0.2,1a1)\"\n+write(buffer,fmt) \">\", 3.0, \"<\"\n+if (buffer.ne.\">3.00<\") stop 6\n+end\n+"}, {"sha": "e413ffcbd0d7b6464745ebe665c8aff6a80edaf0", "filename": "gcc/testsuite/gfortran.dg/pr96436_6.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr96436_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr96436_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr96436_6.f90?ref=c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do run }\n+! { dg-options \"-std=f2003 -pedantic\" }\n+! { dg-shouldfail \"Zero width in format descriptor\" }\n+\n+character(10) :: fmt = \"(g0.2)\"\n+print fmt, 0.3\n+end\n+\n+! { dg-output \"Fortran runtime error: Zero width in format descriptor\" }\n+"}, {"sha": "607a7f66c14fa382125b70f60fc56973546eda2c", "filename": "gcc/testsuite/gfortran.dg/pr96436_7.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr96436_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr96436_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr96436_7.f90?ref=c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do run }\n+! { dg-options \"-std=f2008 -pedantic\" }\n+! { dg-shouldfail \"Zero width in format descriptor\" }\n+\n+character(10) :: fmt = \"(d0.2)\"\n+print fmt, 3.\n+end\n+\n+! { dg-output \"Fortran runtime error: Zero width in format descriptor\" }\n+"}, {"sha": "b851a75ea4f57f65ca77bf2366f9696673f74b6a", "filename": "gcc/testsuite/gfortran.dg/pr96436_8.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr96436_8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr96436_8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr96436_8.f90?ref=c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do run }\n+! { dg-options \"-std=f2008 -pedantic\" }\n+! { dg-shouldfail \"Zero width in format descriptor\" }\n+\n+character(10) :: fmt = \"(e0.2)\"\n+print fmt, 3.\n+end\n+\n+! { dg-output \"Fortran runtime error: Zero width in format descriptor\" }\n+"}, {"sha": "a10f818f9d286e27779235f28bbf6d14c9c7ae66", "filename": "gcc/testsuite/gfortran.dg/pr96436_9.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr96436_9.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr96436_9.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr96436_9.f90?ref=c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do run }\n+! { dg-options \"-std=f2008 -pedantic\" }\n+! { dg-shouldfail \"Zero width in format descriptor\" }\n+\n+character(10) :: fmt = \"(en0.2)\"\n+print fmt, 3.\n+end\n+\n+! { dg-output \"Fortran runtime error: Zero width in format descriptor\" }\n+"}, {"sha": "0959b3d8f84aec857c08f4456af03362d4a90c80", "filename": "libgfortran/io/format.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5/libgfortran%2Fio%2Fformat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5/libgfortran%2Fio%2Fformat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fformat.c?ref=c2a0fd7c8ff426cc40ec678efef85e4a376ea4b5", "patch": "@@ -617,6 +617,7 @@ parse_format_list (st_parameter_dt *dtp, bool *seen_dd)\n   int repeat;\n   format_data *fmt = dtp->u.p.fmt;\n   bool seen_data_desc = false;\n+  int standard;\n \n   head = tail = NULL;\n \n@@ -929,7 +930,14 @@ parse_format_list (st_parameter_dt *dtp, bool *seen_dd)\n       /* Processing for zero width formats.  */\n       if (u == FMT_ZERO)\n \t{\n-\t  if (notification_std (GFC_STD_F2008) == NOTIFICATION_ERROR\n+          if (t == FMT_F)\n+\t    standard = GFC_STD_F95;\n+\t  else if (t == FMT_G)\n+\t    standard = GFC_STD_F2008;\n+\t  else\n+\t    standard = GFC_STD_F2018;\n+\n+\t  if (notification_std (standard) == NOTIFICATION_ERROR\n \t      || dtp->u.p.mode == READING)\n \t    {\n \t      fmt->error = zero_width;"}]}