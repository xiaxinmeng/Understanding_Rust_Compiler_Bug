{"sha": "bf1e8c4ddced2188ae3239ac62573d73eccbd634", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmYxZThjNGRkY2VkMjE4OGFlMzIzOWFjNjI1NzNkNzNlY2NiZDYzNA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-30T01:12:43Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-30T01:12:43Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1349", "tree": {"sha": "07c5f4875f62e52ed2702c70ef73ae6f07dd1ea7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07c5f4875f62e52ed2702c70ef73ae6f07dd1ea7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf1e8c4ddced2188ae3239ac62573d73eccbd634", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf1e8c4ddced2188ae3239ac62573d73eccbd634", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf1e8c4ddced2188ae3239ac62573d73eccbd634", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf1e8c4ddced2188ae3239ac62573d73eccbd634/comments", "author": null, "committer": null, "parents": [{"sha": "61b01243ddfd3123722b4032502c7caa35149d9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61b01243ddfd3123722b4032502c7caa35149d9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61b01243ddfd3123722b4032502c7caa35149d9f"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "b8e0a4e2ee51e4e27eb9cc8e645c32e7ff16833b", "filename": "gcc/sdbout.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf1e8c4ddced2188ae3239ac62573d73eccbd634/gcc%2Fsdbout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf1e8c4ddced2188ae3239ac62573d73eccbd634/gcc%2Fsdbout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsdbout.c?ref=bf1e8c4ddced2188ae3239ac62573d73eccbd634", "patch": "@@ -659,7 +659,12 @@ sdbout_symbol (decl, local)\n       if (DECL_RTL (decl) == 0)\n \treturn;\n \n-      value = eliminate_regs (DECL_RTL (decl), 0, 0);\n+      DECL_RTL (decl) = eliminate_regs (DECL_RTL (decl), 0, 0);\n+#ifdef LEAF_REG_REMAP\n+      if (leaf_function)\n+\tleaf_renumber_regs_insn (DECL_RTL (decl));\n+#endif\n+      value = DECL_RTL (decl);\n \n       /* Don't mention a variable at all\n \t if it was completely optimized into nothingness.\n@@ -671,11 +676,9 @@ sdbout_symbol (decl, local)\n \t{\n \t  regno = REGNO (DECL_RTL (decl));\n \t  if (regno >= FIRST_PSEUDO_REGISTER)\n-\t    regno = reg_renumber[REGNO (DECL_RTL (decl))];\n-\t  if (regno < 0)\n \t    return;\n \t}\n-      else if (GET_CODE (DECL_RTL (decl)) == SUBREG)\n+      else if (GET_CODE (value) == SUBREG)\n \t{\n \t  int offset = 0;\n \t  while (GET_CODE (value) == SUBREG)\n@@ -687,10 +690,11 @@ sdbout_symbol (decl, local)\n \t    {\n \t      regno = REGNO (value);\n \t      if (regno >= FIRST_PSEUDO_REGISTER)\n-\t\tregno = reg_renumber[REGNO (value)];\n-\t      if (regno >= 0)\n-\t\tregno += offset;\n+\t\treturn;\n+\t      regno += offset;\n \t    }\n+\t  alter_subreg (DECL_RTL (decl));\n+\t  value = DECL_RTL (decl);\n \t}\n \n       /* Emit any structure, union, or enum type that has not been output."}]}