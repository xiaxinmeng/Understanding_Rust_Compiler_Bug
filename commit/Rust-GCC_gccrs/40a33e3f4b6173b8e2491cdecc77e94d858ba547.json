{"sha": "40a33e3f4b6173b8e2491cdecc77e94d858ba547", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDBhMzNlM2Y0YjYxNzNiOGUyNDkxY2RlY2M3N2U5NGQ4NThiYTU0Nw==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2010-10-06T15:29:46Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2010-10-06T15:29:46Z"}, "message": "array.c (gfc_match_array_spec): Don't re-initialize cleared struct.\n\n2010-10-06  Mikael Morin  <mikael@gcc.gnu.org>\n\n\t* array.c (gfc_match_array_spec): Don't re-initialize cleared struct.\n\t* symbol.c (gen_shape_param): Ditto.\n\nFrom-SVN: r165039", "tree": {"sha": "7aead7cc36dfbdb46fa84200b3bd702eb4d9e328", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7aead7cc36dfbdb46fa84200b3bd702eb4d9e328"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40a33e3f4b6173b8e2491cdecc77e94d858ba547", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40a33e3f4b6173b8e2491cdecc77e94d858ba547", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40a33e3f4b6173b8e2491cdecc77e94d858ba547", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40a33e3f4b6173b8e2491cdecc77e94d858ba547/comments", "author": null, "committer": null, "parents": [{"sha": "1b02e40106a10a241a3753ffeeac2acfd21772fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b02e40106a10a241a3753ffeeac2acfd21772fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b02e40106a10a241a3753ffeeac2acfd21772fb"}], "stats": {"total": 24, "additions": 7, "deletions": 17}, "files": [{"sha": "63a818c0dd734fca21a5d33f7e209fb8168acb42", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40a33e3f4b6173b8e2491cdecc77e94d858ba547/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40a33e3f4b6173b8e2491cdecc77e94d858ba547/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=40a33e3f4b6173b8e2491cdecc77e94d858ba547", "patch": "@@ -1,3 +1,8 @@\n+2010-10-06  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* array.c (gfc_match_array_spec): Don't re-initialize cleared struct.\n+\t* symbol.c (gen_shape_param): Ditto.\n+\n 2010-10-06  Mikael Morin  <mikael@gcc.gnu.org>\n \n \t* symbol.c (free_entry_list): New function."}, {"sha": "8c74e709f3da6443e02d7fa21b6e16eb6e831ddc", "filename": "gcc/fortran/array.c", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40a33e3f4b6173b8e2491cdecc77e94d858ba547/gcc%2Ffortran%2Farray.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40a33e3f4b6173b8e2491cdecc77e94d858ba547/gcc%2Ffortran%2Farray.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Farray.c?ref=40a33e3f4b6173b8e2491cdecc77e94d858ba547", "patch": "@@ -437,16 +437,8 @@ gfc_match_array_spec (gfc_array_spec **asp, bool match_dim, bool match_codim)\n   array_type current_type;\n   gfc_array_spec *as;\n   int i;\n- \n-  as = gfc_get_array_spec ();\n-  as->corank = 0;\n-  as->rank = 0;\n \n-  for (i = 0; i < GFC_MAX_DIMENSIONS; i++)\n-    {\n-      as->lower[i] = NULL;\n-      as->upper[i] = NULL;\n-    }\n+  as = gfc_get_array_spec ();\n \n   if (!match_dim)\n     goto coarray;"}, {"sha": "93199cf7089c77ed25b21ff5942175dec441731c", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40a33e3f4b6173b8e2491cdecc77e94d858ba547/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40a33e3f4b6173b8e2491cdecc77e94d858ba547/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=40a33e3f4b6173b8e2491cdecc77e94d858ba547", "patch": "@@ -3968,7 +3968,6 @@ gen_shape_param (gfc_formal_arglist **head,\n   gfc_symtree *param_symtree = NULL;\n   gfc_formal_arglist *formal_arg = NULL;\n   const char *shape_param = \"gfc_shape_array__\";\n-  int i;\n \n   if (shape_param_name != NULL)\n     shape_param = shape_param_name;\n@@ -3994,15 +3993,9 @@ gen_shape_param (gfc_formal_arglist **head,\n   /* Initialize the kind to default integer.  However, it will be overridden\n      during resolution to match the kind of the SHAPE parameter given as\n      the actual argument (to allow for any valid integer kind).  */\n-  param_sym->ts.kind = gfc_default_integer_kind;   \n+  param_sym->ts.kind = gfc_default_integer_kind;\n   param_sym->as = gfc_get_array_spec ();\n \n-  /* Clear out the dimension info for the array.  */\n-  for (i = 0; i < GFC_MAX_DIMENSIONS; i++)\n-    {\n-      param_sym->as->lower[i] = NULL;\n-      param_sym->as->upper[i] = NULL;\n-    }\n   param_sym->as->rank = 1;\n   param_sym->as->lower[0] = gfc_get_int_expr (gfc_default_integer_kind,\n \t\t\t\t\t      NULL, 1);"}]}