{"sha": "3ba421e8becbd17526a88ec76226d7213b96af14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JhNDIxZThiZWNiZDE3NTI2YTg4ZWM3NjIyNmQ3MjEzYjk2YWYxNA==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2014-08-20T12:48:16Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2014-08-20T12:48:16Z"}, "message": "re PR c/59304 (#pragma diagnostic pop after warning fails for options unspecified in the command-line and disabled by default)\n\ngcc/ChangeLog:\n\n2014-08-20  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n\tPR c/59304\n\t* opts-common.c (set_option): Call diagnostic_classify_diagnostic\n\tbefore setting the option.\n\t* diagnostic.c (diagnostic_classify_diagnostic): Record\n\tcommand-line status.\n\ngcc/testsuite/ChangeLog:\n\n2014-08-20  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n\tPR c/59304\n\t* gcc.dg/pr59304.c: New test.\n\nFrom-SVN: r214221", "tree": {"sha": "3164cedfb7fb422a18eb3305ee3af6daa65943fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3164cedfb7fb422a18eb3305ee3af6daa65943fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ba421e8becbd17526a88ec76226d7213b96af14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ba421e8becbd17526a88ec76226d7213b96af14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ba421e8becbd17526a88ec76226d7213b96af14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ba421e8becbd17526a88ec76226d7213b96af14/comments", "author": null, "committer": null, "parents": [{"sha": "c84d88e45c50cadf07edfaac07b174490d48bbde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c84d88e45c50cadf07edfaac07b174490d48bbde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c84d88e45c50cadf07edfaac07b174490d48bbde"}], "stats": {"total": 72, "additions": 68, "deletions": 4}, "files": [{"sha": "00497633a9be53d645f7049114f6df05e6a72966", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ba421e8becbd17526a88ec76226d7213b96af14/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ba421e8becbd17526a88ec76226d7213b96af14/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ba421e8becbd17526a88ec76226d7213b96af14", "patch": "@@ -1,3 +1,11 @@\n+2014-08-20  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR c/59304\n+\t* opts-common.c (set_option): Call diagnostic_classify_diagnostic\n+\tbefore setting the option.\n+\t* diagnostic.c (diagnostic_classify_diagnostic): Record\n+\tcommand-line status.\n+\n 2014-08-20  Richard Biener  <rguenther@suse.de>\n \n \tPR lto/62190"}, {"sha": "62447212d49324ce118705159472d45d8d0241d6", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ba421e8becbd17526a88ec76226d7213b96af14/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ba421e8becbd17526a88ec76226d7213b96af14/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=3ba421e8becbd17526a88ec76226d7213b96af14", "patch": "@@ -584,6 +584,15 @@ diagnostic_classify_diagnostic (diagnostic_context *context,\n     {\n       int i;\n \n+      /* Record the command-line status, so we can reset it back on DK_POP. */\n+      if (old_kind == DK_UNSPECIFIED)\n+\t{\n+\t  old_kind = context->option_enabled (option_index,\n+\t\t\t\t\t      context->option_state)\n+\t    ? DK_WARNING : DK_IGNORED;\n+\t  context->classify_diagnostic[option_index] = old_kind;\n+\t}\n+\n       for (i = context->n_classification_history - 1; i >= 0; i --)\n \tif (context->classification_history[i].option == option_index)\n \t  {"}, {"sha": "3b9420161839dceb2dfcaa529c719d61b50bd2d7", "filename": "gcc/opts-common.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ba421e8becbd17526a88ec76226d7213b96af14/gcc%2Fopts-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ba421e8becbd17526a88ec76226d7213b96af14/gcc%2Fopts-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts-common.c?ref=3ba421e8becbd17526a88ec76226d7213b96af14", "patch": "@@ -1119,6 +1119,9 @@ set_option (struct gcc_options *opts, struct gcc_options *opts_set,\n   if (!flag_var)\n     return;\n \n+  if ((diagnostic_t) kind != DK_UNSPECIFIED && dc != NULL)\n+    diagnostic_classify_diagnostic (dc, opt_index, (diagnostic_t) kind, loc);\n+\n   if (opts_set != NULL)\n     set_flag_var = option_flag_var (opt_index, opts_set);\n \n@@ -1198,10 +1201,6 @@ set_option (struct gcc_options *opts, struct gcc_options *opts_set,\n \t}\n \tbreak;\n     }\n-\n-  if ((diagnostic_t) kind != DK_UNSPECIFIED\n-      && dc != NULL)\n-    diagnostic_classify_diagnostic (dc, opt_index, (diagnostic_t) kind, loc);\n }\n \n /* Return the address of the flag variable for option OPT_INDEX in"}, {"sha": "73390a2cd50ec1aa6ae788780903080dfb20fcb3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ba421e8becbd17526a88ec76226d7213b96af14/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ba421e8becbd17526a88ec76226d7213b96af14/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3ba421e8becbd17526a88ec76226d7213b96af14", "patch": "@@ -1,3 +1,11 @@\n+2014-08-20  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR c/59304\n+\t* opts-common.c (set_option): Call diagnostic_classify_diagnostic\n+\tbefore setting the option.\n+\t* diagnostic.c (diagnostic_classify_diagnostic): Record\n+\tcommand-line status.\n+\n 2014-08-20  Mark Wielaard  <mjw@redhat.com>\n \n \t* gcc.dg/guality/restrict.c: Add `used' attribute to all variables."}, {"sha": "f56ebc374bd8776ce0d4e6e06759dd30dd442ad7", "filename": "gcc/testsuite/gcc.dg/pr59304.c", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ba421e8becbd17526a88ec76226d7213b96af14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59304.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ba421e8becbd17526a88ec76226d7213b96af14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59304.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59304.c?ref=3ba421e8becbd17526a88ec76226d7213b96af14", "patch": "@@ -0,0 +1,40 @@\n+/* { dg-do compile } */\n+enum EE\n+  {\n+    ONE, TWO, THREE\n+  };\n+\n+int f (enum EE e)\n+{\n+  int r = 0;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic error \"-Wswitch-enum\"\n+\n+  switch (e)\n+    {\n+    case ONE:\n+      r = 1;\n+      break;\n+    case TWO:\n+      r = 2;\n+      break;\n+    case THREE:\n+      r = 3;\n+      break;\n+    }\n+\n+#pragma GCC diagnostic pop\n+\n+  switch (e)\n+    {\n+    case ONE:\n+      r = 1;\n+      break;\n+    case TWO:\n+      r = 2;\n+      break;\n+    }\n+\n+  return r;\n+}"}]}