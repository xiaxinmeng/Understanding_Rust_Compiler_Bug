{"sha": "d5b6cc25028a79e054909ade4090eb90e9272f5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDViNmNjMjUwMjhhNzllMDU0OTA5YWRlNDA5MGViOTBlOTI3MmY1Zg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2011-06-03T01:42:31Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2011-06-03T01:42:31Z"}, "message": "params.def (PARAM_MAX_VARTRACK_EXPR_DEPTH): Bump default to 10.\n\n* params.def (PARAM_MAX_VARTRACK_EXPR_DEPTH): Bump default to 10.\n* var-tracking.c (reverse_op): Limite recurse depth to 5.\n\nFrom-SVN: r174596", "tree": {"sha": "dbaa32ab2ffc78f96b99d91ca29795d82049b30b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbaa32ab2ffc78f96b99d91ca29795d82049b30b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5b6cc25028a79e054909ade4090eb90e9272f5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5b6cc25028a79e054909ade4090eb90e9272f5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5b6cc25028a79e054909ade4090eb90e9272f5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5b6cc25028a79e054909ade4090eb90e9272f5f/comments", "author": null, "committer": null, "parents": [{"sha": "2ba42841595c45e522de73fd3b7577f05f2b9f10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ba42841595c45e522de73fd3b7577f05f2b9f10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ba42841595c45e522de73fd3b7577f05f2b9f10"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "9ad2d406b8abb0c34a9dab49922ee968849db738", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5b6cc25028a79e054909ade4090eb90e9272f5f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5b6cc25028a79e054909ade4090eb90e9272f5f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d5b6cc25028a79e054909ade4090eb90e9272f5f", "patch": "@@ -1,3 +1,8 @@\n+2011-06-02  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* params.def (PARAM_MAX_VARTRACK_EXPR_DEPTH): Bump default to 10.\n+\t* var-tracking.c (reverse_op): Limite recurse depth to 5.\n+\n 2011-06-02  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/47590"}, {"sha": "a3e9831baddc30bdab8af8669987b7a377aacd06", "filename": "gcc/params.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5b6cc25028a79e054909ade4090eb90e9272f5f/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5b6cc25028a79e054909ade4090eb90e9272f5f/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=d5b6cc25028a79e054909ade4090eb90e9272f5f", "patch": "@@ -845,7 +845,7 @@ DEFPARAM (PARAM_MAX_VARTRACK_SIZE,\n DEFPARAM (PARAM_MAX_VARTRACK_EXPR_DEPTH,\n \t  \"max-vartrack-expr-depth\",\n \t  \"Max. recursion depth for expanding var tracking expressions\",\n-\t  10, 0, 0)\n+\t  20, 0, 0)\n \n /* Set minimum insn uid for non-debug insns.  */\n "}, {"sha": "0ddc8d7619e3a1ae689471ae2afce729dded703e", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5b6cc25028a79e054909ade4090eb90e9272f5f/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5b6cc25028a79e054909ade4090eb90e9272f5f/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=d5b6cc25028a79e054909ade4090eb90e9272f5f", "patch": "@@ -5290,7 +5290,7 @@ reverse_op (rtx val, const_rtx expr)\n       arg = XEXP (src, 1);\n       if (!CONST_INT_P (arg) && GET_CODE (arg) != SYMBOL_REF)\n \t{\n-\t  arg = cselib_expand_value_rtx (arg, scratch_regs, EXPR_DEPTH);\n+\t  arg = cselib_expand_value_rtx (arg, scratch_regs, 5);\n \t  if (arg == NULL_RTX)\n \t    return NULL_RTX;\n \t  if (!CONST_INT_P (arg) && GET_CODE (arg) != SYMBOL_REF)"}]}