{"sha": "fe4b53b2e7e58d3bcf476a0a319b51a5a8c668a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU0YjUzYjJlN2U1OGQzYmNmNDc2YTBhMzE5YjUxYTVhOGM2NjhhMg==", "commit": {"author": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2020-03-03T23:16:13Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2020-03-25T21:04:23Z"}, "message": "testsuite: adjustments for amdgcn\n\n2020-03-25  Andrew Stubbs  <ams@codesourcery.com>\n\n\tgcc/testsuite/\n\t* gcc.dg/vect/bb-slp-pr69907.c: Disable the dump scan for amdgcn.\n\t* lib/target-supports.exp (check_effective_target_vect_unpack):\n\tAdd amdgcn.", "tree": {"sha": "9d4ad99210e583ff48d7a4645e83b4a10b63f956", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d4ad99210e583ff48d7a4645e83b4a10b63f956"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe4b53b2e7e58d3bcf476a0a319b51a5a8c668a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe4b53b2e7e58d3bcf476a0a319b51a5a8c668a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe4b53b2e7e58d3bcf476a0a319b51a5a8c668a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe4b53b2e7e58d3bcf476a0a319b51a5a8c668a2/comments", "author": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48817fbd7616f086ac7bb1dd38b862f78762c9b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48817fbd7616f086ac7bb1dd38b862f78762c9b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48817fbd7616f086ac7bb1dd38b862f78762c9b8"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "e750dcbc7900157e7524034bf851797c5bc2942f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe4b53b2e7e58d3bcf476a0a319b51a5a8c668a2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe4b53b2e7e58d3bcf476a0a319b51a5a8c668a2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fe4b53b2e7e58d3bcf476a0a319b51a5a8c668a2", "patch": "@@ -1,3 +1,9 @@\n+2020-03-25  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\t* gcc.dg/vect/bb-slp-pr69907.c: Disable the dump scan for amdgcn.\n+\t* lib/target-supports.exp (check_effective_target_vect_unpack):\n+\tAdd amdgcn.\n+\n 2020-03-25  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/94292"}, {"sha": "fe52d18525a339ce8d7814974bbd5a925762d871", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-pr69907.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe4b53b2e7e58d3bcf476a0a319b51a5a8c668a2/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pr69907.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe4b53b2e7e58d3bcf476a0a319b51a5a8c668a2/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pr69907.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pr69907.c?ref=fe4b53b2e7e58d3bcf476a0a319b51a5a8c668a2", "patch": "@@ -19,5 +19,6 @@ void foo(unsigned *p1, unsigned short *p2)\n \n /* Disable for SVE because for long or variable-length vectors we don't\n    get an unrolled epilogue loop.  Also disable for AArch64 Advanced SIMD,\n-   because there we can vectorize the epilogue using mixed vector sizes.  */\n-/* { dg-final { scan-tree-dump \"BB vectorization with gaps at the end of a load is not supported\" \"slp1\" { target { ! aarch64*-*-* } } } } */\n+   because there we can vectorize the epilogue using mixed vector sizes.\n+   Likewise for AMD GCN.  */\n+/* { dg-final { scan-tree-dump \"BB vectorization with gaps at the end of a load is not supported\" \"slp1\" { target { { ! aarch64*-*-* } && { ! amdgcn*-*-* } } } } } */"}, {"sha": "3654e7bc232e7513a59497d8d58823dc46be926e", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe4b53b2e7e58d3bcf476a0a319b51a5a8c668a2/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe4b53b2e7e58d3bcf476a0a319b51a5a8c668a2/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=fe4b53b2e7e58d3bcf476a0a319b51a5a8c668a2", "patch": "@@ -6717,7 +6717,8 @@ proc check_effective_target_vect_unpack { } {\n              || ([istarget arm*-*-*] && [check_effective_target_arm_neon_ok]\n \t\t && [check_effective_target_arm_little_endian])\n \t     || ([istarget s390*-*-*]\n-\t\t && [check_effective_target_s390_vx]) }}]\n+\t\t && [check_effective_target_s390_vx])\n+\t     || [istarget amdgcn*-*-*] }}]\n }\n \n # Return 1 if the target plus current options does not guarantee"}]}