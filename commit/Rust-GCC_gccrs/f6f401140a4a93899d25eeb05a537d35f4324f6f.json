{"sha": "f6f401140a4a93899d25eeb05a537d35f4324f6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZmNDAxMTQwYTRhOTM4OTlkMjVlZWIwNWE1MzdkMzVmNDMyNGY2Zg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-27T11:21:23Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-27T11:21:23Z"}, "message": "[multiple changes]\n\n2015-10-27  Yannick Moy  <moy@adacore.com>\n\n\t* lib-xref-spark_specific.adb\n\t(Enclosing_Subprogram_Or_Library_Package): detect library-level\n\tsubprograms and handle entries as subprograms, i.e. now both\n\tlibrary-level subprograms and entry bodies act as enclosing\n\tscopes.\n\t(Traverse_Declarations_Or_Statements): process entry bodies just\n\tlike subprogram bodies.\n\t* lib-xref.ads (Enclosing_Subprogram_Or_Library_Package): comment\n\tsimplified while keeping its the meaning and minor typo fixed\n\t(\"of\" -> \"or\").\n\t* spark_xrefs.ads (Xref Section): fix in description of the ALI\n\tline for subprogram calls; such lines start with captial \"F\"\n\tfollowed by a space.\n\n2015-10-27  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch8.adb (Find_Direct_Name): A parameter association is\n\ta legal context for applying an implicit dereference.\n\t(Analyze_Expanded_Name): Minor code cleanup.\n\nFrom-SVN: r229418", "tree": {"sha": "d27facc59cc94a59a1d88d59f763949e8b0d6e65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d27facc59cc94a59a1d88d59f763949e8b0d6e65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6f401140a4a93899d25eeb05a537d35f4324f6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6f401140a4a93899d25eeb05a537d35f4324f6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6f401140a4a93899d25eeb05a537d35f4324f6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6f401140a4a93899d25eeb05a537d35f4324f6f/comments", "author": null, "committer": null, "parents": [{"sha": "3f8743e802e6927c8ea91911fd9e313137b73c50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f8743e802e6927c8ea91911fd9e313137b73c50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f8743e802e6927c8ea91911fd9e313137b73c50"}], "stats": {"total": 54, "additions": 45, "deletions": 9}, "files": [{"sha": "bb6af69ca5097e894bcc1ba513e3fc72e6021fed", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f401140a4a93899d25eeb05a537d35f4324f6f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f401140a4a93899d25eeb05a537d35f4324f6f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f6f401140a4a93899d25eeb05a537d35f4324f6f", "patch": "@@ -1,3 +1,25 @@\n+2015-10-27  Yannick Moy  <moy@adacore.com>\n+\n+\t* lib-xref-spark_specific.adb\n+\t(Enclosing_Subprogram_Or_Library_Package): detect library-level\n+\tsubprograms and handle entries as subprograms, i.e. now both\n+\tlibrary-level subprograms and entry bodies act as enclosing\n+\tscopes.\n+\t(Traverse_Declarations_Or_Statements): process entry bodies just\n+\tlike subprogram bodies.\n+\t* lib-xref.ads (Enclosing_Subprogram_Or_Library_Package): comment\n+\tsimplified while keeping its the meaning and minor typo fixed\n+\t(\"of\" -> \"or\").\n+\t* spark_xrefs.ads (Xref Section): fix in description of the ALI\n+\tline for subprogram calls; such lines start with captial \"F\"\n+\tfollowed by a space.\n+\n+2015-10-27  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch8.adb (Find_Direct_Name): A parameter association is\n+\ta legal context for applying an implicit dereference.\n+\t(Analyze_Expanded_Name): Minor code cleanup.\n+\n 2015-10-27  Arnaud Charlet  <charlet@adacore.com>\n \n \t* sinput.ads, spark_xrefs.ads, lib-xref.adb: Fix typos."}, {"sha": "fce0cf09d25596b6f4c2784fddbf5cfb75de2b35", "filename": "gcc/ada/lib-xref-spark_specific.adb", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f401140a4a93899d25eeb05a537d35f4324f6f/gcc%2Fada%2Flib-xref-spark_specific.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f401140a4a93899d25eeb05a537d35f4324f6f/gcc%2Fada%2Flib-xref-spark_specific.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref-spark_specific.adb?ref=f6f401140a4a93899d25eeb05a537d35f4324f6f", "patch": "@@ -1032,6 +1032,12 @@ package body SPARK_Specific is\n         and then Nkind (Parent (N)) in N_Subprogram_Specification\n       then\n          Result := Parent (Parent (Parent (N)));\n+\n+         --  If this was a library-level subprogram then replace Result with\n+         --  its Unit, which points to N_Subprogram_* node.\n+         if Nkind (Result) = N_Compilation_Unit then\n+            Result := Unit (Result);\n+         end if;\n       else\n          Result := N;\n       end if;\n@@ -1090,6 +1096,10 @@ package body SPARK_Specific is\n                   Result := Parent (Result);\n                end if;\n \n+            when N_Entry_Body =>\n+               Result := Defining_Identifier (Result);\n+               exit;\n+\n             when others =>\n                Result := Parent (Result);\n          end case;\n@@ -1431,6 +1441,8 @@ package body SPARK_Specific is\n          if Nkind (N) in N_Declaration\n               or else\n             Nkind (N) in N_Later_Decl_Item\n+              or else\n+            Nkind (N) = N_Entry_Body\n          then\n             Process (N);\n          end if;"}, {"sha": "63d78c7c1692269f98f764185be14ef4ff43140a", "filename": "gcc/ada/lib-xref.ads", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f401140a4a93899d25eeb05a537d35f4324f6f/gcc%2Fada%2Flib-xref.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f401140a4a93899d25eeb05a537d35f4324f6f/gcc%2Fada%2Flib-xref.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.ads?ref=f6f401140a4a93899d25eeb05a537d35f4324f6f", "patch": "@@ -624,10 +624,9 @@ package Lib.Xref is\n \n       function Enclosing_Subprogram_Or_Library_Package\n         (N : Node_Id) return Entity_Id;\n-      --  Return the closest enclosing subprogram of package. Only return a\n-      --  library level package. If the package is enclosed in a subprogram,\n-      --  return the subprogram. This ensures that GNATprove can distinguish\n-      --  local variables from global variables.\n+      --  Return the closest enclosing subprogram or library-level package.\n+      --  This ensures that GNATprove can distinguish local variables from\n+      --  global variables.\n \n       procedure Generate_Dereference\n         (N   : Node_Id;"}, {"sha": "f02ec524340786ac57a035ec41822d56fcc8a2c9", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f401140a4a93899d25eeb05a537d35f4324f6f/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f401140a4a93899d25eeb05a537d35f4324f6f/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=f6f401140a4a93899d25eeb05a537d35f4324f6f", "patch": "@@ -597,8 +597,10 @@ package body Sem_Ch8 is\n    begin\n       --  If the entity pointer is already set, this is an internal node, or a\n       --  node that is analyzed more than once, after a tree modification. In\n-      --  such a case there is no resolution to perform, just set the type. For\n-      --  completeness, analyze prefix as well.\n+      --  such a case there is no resolution to perform, just set the type.\n+      --  In either case, start by analyzing the prefix.\n+\n+      Analyze (Prefix (N));\n \n       if Present (Entity (N)) then\n          if Is_Type (Entity (N)) then\n@@ -607,7 +609,6 @@ package body Sem_Ch8 is\n             Set_Etype (N, Etype (Entity (N)));\n          end if;\n \n-         Analyze (Prefix (N));\n          return;\n       else\n          Find_Expanded_Name (N);\n@@ -5615,12 +5616,14 @@ package body Sem_Ch8 is\n             Set_Entity_Or_Discriminal (N, E);\n \n             --  The name may designate a generalized reference, in which case\n-            --  the dereference interpretation will be included.\n+            --  the dereference interpretation will be included. Context is\n+            --  one in which a name is legal.\n \n             if Ada_Version >= Ada_2012\n               and then\n                 (Nkind (Parent (N)) in N_Subexpr\n                   or else Nkind_In (Parent (N), N_Object_Declaration,\n+                                                N_Parameter_Association,\n                                                 N_Assignment_Statement))\n             then\n                Check_Implicit_Dereference (N, Etype (E));"}, {"sha": "f6cc7c3de921cfbc5762143e8bfbcc0412781051", "filename": "gcc/ada/spark_xrefs.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f401140a4a93899d25eeb05a537d35f4324f6f/gcc%2Fada%2Fspark_xrefs.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f401140a4a93899d25eeb05a537d35f4324f6f/gcc%2Fada%2Fspark_xrefs.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fspark_xrefs.ads?ref=f6f401140a4a93899d25eeb05a537d35f4324f6f", "patch": "@@ -138,7 +138,7 @@ package SPARK_Xrefs is\n    --      entity-number and identity identify a scope entity in FS lines for\n    --      the file previously identified.\n \n-   --    line typ col entity ref*\n+   --    F line typ col entity ref*\n \n    --      line is the line number of the referenced entity\n "}]}