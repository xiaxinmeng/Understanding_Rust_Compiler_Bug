{"sha": "566d09eff650c4722dad479494213ecf29372da7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTY2ZDA5ZWZmNjUwYzQ3MjJkYWQ0Nzk0OTQyMTNlY2YyOTM3MmRhNw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-06-01T20:35:08Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-06-01T20:35:08Z"}, "message": "tree-cfgcleanup.c (fixup_noreturn_call): Break out from ...; remove return value.\n\n\n\t* tree-cfgcleanup.c (fixup_noreturn_call): Break out from ...;\n\tremove return value.\n\t(split_bbs_on_noreturn_calls) .... here.\n\t* tree-optimize.c (execute_fixup_cfg): Fixup noreturn calls too.\n\t* tree-flow.h (fixup_noreturn_call): New.\n\t* testsuite/gcc.dg/lto/noreturn-1_1.c: New testcase.\n\t* testsuite/gcc.dg/lto/noreturn-1_0.c: New testcase.\n\nFrom-SVN: r160122", "tree": {"sha": "444592859a62623603f67efe10d11b809be02e54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/444592859a62623603f67efe10d11b809be02e54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/566d09eff650c4722dad479494213ecf29372da7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/566d09eff650c4722dad479494213ecf29372da7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/566d09eff650c4722dad479494213ecf29372da7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/566d09eff650c4722dad479494213ecf29372da7/comments", "author": null, "committer": null, "parents": [{"sha": "fb9ef4c18e7f5294fab9ba71f6d1fe1c03eae7aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb9ef4c18e7f5294fab9ba71f6d1fe1c03eae7aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb9ef4c18e7f5294fab9ba71f6d1fe1c03eae7aa"}], "stats": {"total": 128, "additions": 81, "deletions": 47}, "files": [{"sha": "513b3181ac60f96c64ea6380d369fe98090e2a56", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/566d09eff650c4722dad479494213ecf29372da7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/566d09eff650c4722dad479494213ecf29372da7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=566d09eff650c4722dad479494213ecf29372da7", "patch": "@@ -1,3 +1,11 @@\n+2010-06-01  Jan Hubicka  <jh@suse.cz>\n+\n+\t* tree-cfgcleanup.c (fixup_noreturn_call): Break out from ...;\n+\tremove return value.\n+\t(split_bbs_on_noreturn_calls) .... here.\n+\t* tree-optimize.c (execute_fixup_cfg): Fixup noreturn calls too.\n+\t* tree-flow.h (fixup_noreturn_call): New.\n+\n 2010-06-01  Jan Hubicka  <jh@suse.cz>\n \n \t* emit-rtl.c (remove_insn): Fix thinko in prevoius patch."}, {"sha": "464f02a4641a22b995486f56cf43b54f26656b69", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/566d09eff650c4722dad479494213ecf29372da7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/566d09eff650c4722dad479494213ecf29372da7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=566d09eff650c4722dad479494213ecf29372da7", "patch": "@@ -1,3 +1,8 @@\n+2010-05-31 Jan Hubicka  <jh@suse.cz>\n+\n+\t* testsuite/gcc.dg/lto/noreturn-1_1.c: New testcase.\n+\t* testsuite/gcc.dg/lto/noreturn-1_0.c: New testcase.\n+\n 2010-05-31  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/36928"}, {"sha": "daac35dce35c3b49093e756213bd5dd9c3cf61bc", "filename": "gcc/testsuite/gcc.dg/lto/noreturn-1_0.c", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/566d09eff650c4722dad479494213ecf29372da7/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fnoreturn-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/566d09eff650c4722dad479494213ecf29372da7/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fnoreturn-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fnoreturn-1_0.c?ref=566d09eff650c4722dad479494213ecf29372da7", "patch": "@@ -5,17 +5,3 @@ call_me (void)\n {\n   exit (0);\n }\n-void exit (int);\n-__attribute__ ((noreturn))\n-int\n-call_me (void)\n-{\n-  exit (0);\n-}\n-void exit (int);\n-__attribute__ ((noreturn))\n-int\n-call_me (void)\n-{\n-  exit (0);\n-}"}, {"sha": "6dbded718d86dd47a137ab4f0f86efdde5ba3a69", "filename": "gcc/testsuite/gcc.dg/lto/noreturn-1_1.c", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/566d09eff650c4722dad479494213ecf29372da7/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fnoreturn-1_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/566d09eff650c4722dad479494213ecf29372da7/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fnoreturn-1_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fnoreturn-1_1.c?ref=566d09eff650c4722dad479494213ecf29372da7", "patch": "@@ -7,21 +7,3 @@ main(void)\n {\n  return call_me ();\n }\n-/* { dg-lto-do run } */\n-/* { dg-lto-options {{-O2 -fwhopr} } } */\n-\n-int call_me (void);\n-int\n-main(void)\n-{\n- return call_me ();\n-}\n-/* { dg-lto-do run } */\n-/* { dg-lto-options {{-O2 -fwhopr} } } */\n-\n-int call_me (void);\n-int\n-main(void)\n-{\n- return call_me ();\n-}"}, {"sha": "10fc7aceb644def9118458dc3542dada71064f2a", "filename": "gcc/tree-cfgcleanup.c", "status": "modified", "additions": 44, "deletions": 4, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/566d09eff650c4722dad479494213ecf29372da7/gcc%2Ftree-cfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/566d09eff650c4722dad479494213ecf29372da7/gcc%2Ftree-cfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfgcleanup.c?ref=566d09eff650c4722dad479494213ecf29372da7", "patch": "@@ -538,6 +538,49 @@ remove_forwarder_block (basic_block bb)\n   return true;\n }\n \n+/* STMT is a call that has been discovered noreturn.  Fixup the CFG\n+   and remove LHS.  Return true if something changed.  */\n+\n+bool\n+fixup_noreturn_call (gimple stmt)\n+{\n+  basic_block bb = gimple_bb (stmt);\n+  bool changed = false;\n+\n+  if (gimple_call_builtin_p (stmt, BUILT_IN_RETURN))\n+    return false;\n+\n+  /* First split basic block if stmt is not last.  */\n+  if (stmt != gsi_stmt (gsi_last_bb (bb)))\n+    split_block (bb, stmt);\n+\n+  changed |= remove_fallthru_edge (bb->succs);\n+\n+  /* If there is LHS, remove it.  */\n+  if (gimple_call_lhs (stmt))\n+    {\n+      tree op = gimple_call_lhs (stmt);\n+      gimple_call_set_lhs (stmt, NULL_TREE);\n+      /* We need to remove SSA name to avoid checking.\n+\t All uses are dominated by the noreturn and thus will\n+\t be removed afterwards.  */\n+      if (TREE_CODE (op) == SSA_NAME)\n+\t{\n+\t  use_operand_p use_p;\n+          imm_use_iterator iter;\n+\t  gimple use_stmt;\n+\n+          FOR_EACH_IMM_USE_STMT (use_stmt, iter, op)\n+\t    FOR_EACH_IMM_USE_ON_STMT (use_p, iter)\n+\t      SET_USE (use_p, error_mark_node);\n+\t}\n+      update_stmt (stmt);\n+      changed = true;\n+    }\n+  return changed;\n+}\n+\n+\n /* Split basic blocks on calls in the middle of a basic block that are now\n    known not to return, and remove the unreachable code.  */\n \n@@ -560,13 +603,10 @@ split_bbs_on_noreturn_calls (void)\n \t    || bb->index < NUM_FIXED_BLOCKS\n \t    || bb->index >= n_basic_blocks\n \t    || BASIC_BLOCK (bb->index) != bb\n-\t    || last_stmt (bb) == stmt\n \t    || !gimple_call_noreturn_p (stmt))\n \t  continue;\n \n-\tchanged = true;\n-\tsplit_block (bb, stmt);\n-\tremove_fallthru_edge (bb->succs);\n+\tchanged |= fixup_noreturn_call (stmt);\n       }\n \n   return changed;"}, {"sha": "f28ef31c2a91d0c32f8621411158f8ecca8a16d2", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/566d09eff650c4722dad479494213ecf29372da7/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/566d09eff650c4722dad479494213ecf29372da7/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=566d09eff650c4722dad479494213ecf29372da7", "patch": "@@ -870,6 +870,7 @@ tree maybe_fold_tmr (tree);\n \n unsigned int execute_free_datastructures (void);\n unsigned int execute_fixup_cfg (void);\n+bool fixup_noreturn_call (gimple stmt);\n \n #include \"tree-flow-inline.h\"\n "}, {"sha": "2631e14cce4e56f519fee0269390301f8b7ad9f0", "filename": "gcc/tree-optimize.c", "status": "modified", "additions": 23, "deletions": 11, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/566d09eff650c4722dad479494213ecf29372da7/gcc%2Ftree-optimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/566d09eff650c4722dad479494213ecf29372da7/gcc%2Ftree-optimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-optimize.c?ref=566d09eff650c4722dad479494213ecf29372da7", "patch": "@@ -231,7 +231,8 @@ execute_free_datastructures (void)\n }\n \n /* Pass: fixup_cfg.  IPA passes, compilation of earlier functions or inlining\n-   might have changed some properties, such as marked functions nothrow.\n+   might have changed some properties, such as marked functions nothrow,\n+   pure, const or noreturn.\n    Remove redundant edges and basic blocks, and create new ones if necessary.\n \n    This pass can't be executed as stand alone pass from pass manager, because\n@@ -267,19 +268,23 @@ execute_fixup_cfg (void)\n \t  tree decl = is_gimple_call (stmt)\n \t\t      ? gimple_call_fndecl (stmt)\n \t\t      : NULL;\n-\n-\t  if (decl\n-\t      && gimple_call_flags (stmt) & (ECF_CONST\n-\t\t\t\t\t     | ECF_PURE\n-\t\t\t\t\t     | ECF_LOOPING_CONST_OR_PURE))\n+\t  if (decl)\n \t    {\n-\t      if (gimple_in_ssa_p (cfun))\n+\t      int flags = gimple_call_flags (stmt);\n+\t      if (flags & (ECF_CONST | ECF_PURE | ECF_LOOPING_CONST_OR_PURE))\n \t\t{\n-\t\t  todo |= TODO_update_ssa | TODO_cleanup_cfg;\n-\t\t  mark_symbols_for_renaming (stmt);\n-\t\t  update_stmt (stmt);\n+\t\t  if (gimple_in_ssa_p (cfun))\n+\t\t    {\n+\t\t      todo |= TODO_update_ssa | TODO_cleanup_cfg;\n+\t\t      mark_symbols_for_renaming (stmt);\n+\t\t      update_stmt (stmt);\n+\t\t    }\n \t\t}\n-\t    }\n+\t      \n+\t      if (flags & ECF_NORETURN\n+\t\t  && fixup_noreturn_call (stmt))\n+\t\ttodo |= TODO_cleanup_cfg;\n+\t     }\n \n \t  maybe_clean_eh_stmt (stmt);\n \t}\n@@ -293,6 +298,13 @@ execute_fixup_cfg (void)\n   if (count_scale != REG_BR_PROB_BASE)\n     compute_function_frequency ();\n \n+  /* We just processed all calls.  */\n+  if (cfun->gimple_df)\n+    {\n+      VEC_free (gimple, gc, MODIFIED_NORETURN_CALLS (cfun));\n+      MODIFIED_NORETURN_CALLS (cfun) = NULL;\n+    }\n+\n   /* Dump a textual representation of the flowgraph.  */\n   if (dump_file)\n     gimple_dump_cfg (dump_file, dump_flags);"}]}