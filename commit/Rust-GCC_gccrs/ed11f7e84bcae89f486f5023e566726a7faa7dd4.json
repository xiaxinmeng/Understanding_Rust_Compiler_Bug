{"sha": "ed11f7e84bcae89f486f5023e566726a7faa7dd4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQxMWY3ZTg0YmNhZTg5ZjQ4NmY1MDIzZTU2NjcyNmE3ZmFhN2RkNA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-08-10T17:44:06Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-08-10T17:47:06Z"}, "message": "libstdc++: Fix compatibility support in unique_ptr pretty printer\n\nThe support for the old std::unique_ptr implementation was failing,\nbecause it tried to work on a typedef instead of the underlying type.\nThe test supposed to verify the support worked wasn't using a typedef,\nso didn't notice the problem.\n\nlibstdc++-v3/ChangeLog:\n\n\t* python/libstdcxx/v6/printers.py (UniquePointerPrinter.__init__):\n\tUse gdb.Type.strip_typedefs().\n\t* testsuite/libstdc++-prettyprinters/compat.cc: Use a typedef in\n\tthe emulated old type.", "tree": {"sha": "c1a9fcb986e61da0284500f5456900d7a7894883", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1a9fcb986e61da0284500f5456900d7a7894883"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed11f7e84bcae89f486f5023e566726a7faa7dd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed11f7e84bcae89f486f5023e566726a7faa7dd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed11f7e84bcae89f486f5023e566726a7faa7dd4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed11f7e84bcae89f486f5023e566726a7faa7dd4/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5da50ed65a835dc1ed6179e3f2b6164fd6e4969", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5da50ed65a835dc1ed6179e3f2b6164fd6e4969", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5da50ed65a835dc1ed6179e3f2b6164fd6e4969"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "c0f061f79c1f03715d10091f8b2955d86bca9ad2", "filename": "libstdc++-v3/python/libstdcxx/v6/printers.py", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed11f7e84bcae89f486f5023e566726a7faa7dd4/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed11f7e84bcae89f486f5023e566726a7faa7dd4/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py?ref=ed11f7e84bcae89f486f5023e566726a7faa7dd4", "patch": "@@ -245,15 +245,15 @@ class UniquePointerPrinter:\n \n     def __init__ (self, typename, val):\n         self.val = val\n-        impl_type = val.type.fields()[0].type.tag\n+        impl_type = val.type.fields()[0].type.strip_typedefs()\n         # Check for new implementations first:\n         if is_specialization_of(impl_type, '__uniq_ptr_data') \\\n             or is_specialization_of(impl_type, '__uniq_ptr_impl'):\n             tuple_member = val['_M_t']['_M_t']\n         elif is_specialization_of(impl_type, 'tuple'):\n             tuple_member = val['_M_t']\n         else:\n-            raise ValueError(\"Unsupported implementation for unique_ptr: %s\" % impl_type)\n+            raise ValueError(\"Unsupported implementation for unique_ptr: %s\" % str(impl_type))\n         tuple_impl_type = tuple_member.type.fields()[0].type # _Tuple_impl\n         tuple_head_type = tuple_impl_type.fields()[1].type   # _Head_base\n         head_field = tuple_head_type.fields()[0]\n@@ -262,7 +262,7 @@ def __init__ (self, typename, val):\n         elif head_field.is_base_class:\n             self.pointer = tuple_member.cast(head_field.type)\n         else:\n-            raise ValueError(\"Unsupported implementation for tuple in unique_ptr: %s\" % impl_type)\n+            raise ValueError(\"Unsupported implementation for tuple in unique_ptr: %s\" % str(impl_type))\n \n     def children (self):\n         return SmartPtrIterator(self.pointer)"}, {"sha": "c681becf8b985b42fe61f44f71dc4a791620208f", "filename": "libstdc++-v3/testsuite/libstdc++-prettyprinters/compat.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed11f7e84bcae89f486f5023e566726a7faa7dd4/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fcompat.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed11f7e84bcae89f486f5023e566726a7faa7dd4/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fcompat.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fcompat.cc?ref=ed11f7e84bcae89f486f5023e566726a7faa7dd4", "patch": "@@ -53,7 +53,9 @@ namespace std\n     {\n       unique_ptr(T* p) { _M_t._M_head_impl = p; }\n \n-      tuple<T*, D> _M_t;\n+      using __tuple_type = tuple<T*, D>;\n+\n+      __tuple_type _M_t;\n     };\n \n   // Old representation of std::optional, before GCC 9"}]}