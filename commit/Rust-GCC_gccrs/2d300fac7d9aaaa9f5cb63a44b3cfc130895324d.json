{"sha": "2d300fac7d9aaaa9f5cb63a44b3cfc130895324d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQzMDBmYWM3ZDlhYWFhOWY1Y2I2M2E0NGIzY2ZjMTMwODk1MzI0ZA==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2011-01-18T22:40:33Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2011-01-18T22:40:33Z"}, "message": "re PR fortran/47240 ([F03] segfault with procedure pointer component)\n\n2011-01-18  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/47240\n\t* resolve.c (expression_rank): Fix rank of procedure poiner components.\n\t* trans-expr.c (gfc_conv_procedure_call): Take care of procedure\n\tpointer components as actual arguments.\n\n\n2011-01-18  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/47240\n\t* gfortran.dg/proc_ptr_comp_29.f90: New.\n\nFrom-SVN: r168973", "tree": {"sha": "ebece8ac1cfec95a7fefd3af146ad3257b95f006", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebece8ac1cfec95a7fefd3af146ad3257b95f006"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d300fac7d9aaaa9f5cb63a44b3cfc130895324d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d300fac7d9aaaa9f5cb63a44b3cfc130895324d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d300fac7d9aaaa9f5cb63a44b3cfc130895324d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d300fac7d9aaaa9f5cb63a44b3cfc130895324d/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2cd871faaa370e18d71e26bc92e25034bcbc05c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2cd871faaa370e18d71e26bc92e25034bcbc05c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2cd871faaa370e18d71e26bc92e25034bcbc05c"}], "stats": {"total": 46, "additions": 44, "deletions": 2}, "files": [{"sha": "8bf90a95b045b244b79b00df6ab1912b69347a6b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d300fac7d9aaaa9f5cb63a44b3cfc130895324d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d300fac7d9aaaa9f5cb63a44b3cfc130895324d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2d300fac7d9aaaa9f5cb63a44b3cfc130895324d", "patch": "@@ -1,3 +1,10 @@\n+2011-01-18  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/47240\n+\t* resolve.c (expression_rank): Fix rank of procedure poiner components.\n+\t* trans-expr.c (gfc_conv_procedure_call): Take care of procedure\n+\tpointer components as actual arguments.\n+\n 2011-01-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/47331"}, {"sha": "f2e722320dda034d768f3ae8cd50aaefba5ff28c", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d300fac7d9aaaa9f5cb63a44b3cfc130895324d/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d300fac7d9aaaa9f5cb63a44b3cfc130895324d/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=2d300fac7d9aaaa9f5cb63a44b3cfc130895324d", "patch": "@@ -4863,6 +4863,10 @@ expression_rank (gfc_expr *e)\n \n   for (ref = e->ref; ref; ref = ref->next)\n     {\n+      if (ref->type == REF_COMPONENT && ref->u.c.component->attr.proc_pointer\n+\t  && ref->u.c.component->attr.function && !ref->next)\n+\trank = ref->u.c.component->as ? ref->u.c.component->as->rank : 0;\n+\n       if (ref->type != REF_ARRAY)\n \tcontinue;\n "}, {"sha": "ec1e848509c8ce1b1ff4b3b082f675286d9d271f", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d300fac7d9aaaa9f5cb63a44b3cfc130895324d/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d300fac7d9aaaa9f5cb63a44b3cfc130895324d/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=2d300fac7d9aaaa9f5cb63a44b3cfc130895324d", "patch": "@@ -3043,8 +3043,9 @@ gfc_conv_procedure_call (gfc_se * se, gfc_symbol * sym,\n \t\t\t   && fsym->attr.flavor != FL_PROCEDURE)\n \t\t\t  || (fsym->attr.proc_pointer\n \t\t\t      && !(e->expr_type == EXPR_VARIABLE\n-\t\t\t      && e->symtree->n.sym->attr.dummy))\n-\t\t\t  || (e->expr_type == EXPR_VARIABLE\n+\t\t\t\t   && e->symtree->n.sym->attr.dummy))\n+\t\t\t  || (fsym->attr.proc_pointer\n+\t\t\t      && e->expr_type == EXPR_VARIABLE\n \t\t\t      && gfc_is_proc_ptr_comp (e, NULL))\n \t\t\t  || fsym->attr.allocatable))\n \t\t    {"}, {"sha": "9c3e8ba99d03fbc60f5f54c77d4b6c7484f6b75f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d300fac7d9aaaa9f5cb63a44b3cfc130895324d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d300fac7d9aaaa9f5cb63a44b3cfc130895324d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2d300fac7d9aaaa9f5cb63a44b3cfc130895324d", "patch": "@@ -1,3 +1,8 @@\n+2011-01-18  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/47240\n+\t* gfortran.dg/proc_ptr_comp_29.f90: New.\n+\n 2011-01-18  Dominique d'Humieres  <dominiq@lps.ens.fr>\n \n \tPR testsuite/41146"}, {"sha": "94c59cd1a3bb3d4d5e254698834604bdd33ec725", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_comp_29.f90", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d300fac7d9aaaa9f5cb63a44b3cfc130895324d/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_29.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d300fac7d9aaaa9f5cb63a44b3cfc130895324d/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_29.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_29.f90?ref=2d300fac7d9aaaa9f5cb63a44b3cfc130895324d", "patch": "@@ -0,0 +1,25 @@\n+! { dg-do run }\n+!\n+! PR 47240: [F03] segfault with procedure pointer component\n+!\n+! Contributed by Martien Hulsen <m.a.hulsen@tue.nl>\n+\n+  type t\n+    procedure (fun), pointer, nopass :: p\n+  end type\n+  type(t) :: x\n+  real, dimension(2) :: r\n+  x%p => fun\n+  r = evaluate (x%p)\n+  if (r(1) /= 5 .and. r(2) /= 6) call abort()\n+contains\n+  function fun ()\n+    real, dimension(2) :: fun\n+    fun = (/ 5, 6 /)\n+  end function\n+  function evaluate ( dummy )\n+    real, dimension(2) :: evaluate\n+    procedure(fun) :: dummy\n+    evaluate = dummy ()\n+  end function\n+end"}]}