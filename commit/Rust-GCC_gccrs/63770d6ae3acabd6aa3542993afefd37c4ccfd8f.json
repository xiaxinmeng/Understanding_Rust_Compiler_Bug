{"sha": "63770d6ae3acabd6aa3542993afefd37c4ccfd8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM3NzBkNmFlM2FjYWJkNmFhMzU0Mjk5M2FmZWZkMzdjNGNjZmQ4Zg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-26T21:12:46Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-26T21:12:46Z"}, "message": "(fixup_var_refs_insn): Delete CLOBBER of VAR.\n\n(fixup_var_refs_insn): Delete CLOBBER of VAR.  If VAR is being\nassigned into by a libcall sequence, remove the libcall notes.\n\nFrom-SVN: r6632", "tree": {"sha": "138e34ad8c6b4ecf5b34eeacdb450d57fbb1b5e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/138e34ad8c6b4ecf5b34eeacdb450d57fbb1b5e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63770d6ae3acabd6aa3542993afefd37c4ccfd8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63770d6ae3acabd6aa3542993afefd37c4ccfd8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63770d6ae3acabd6aa3542993afefd37c4ccfd8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63770d6ae3acabd6aa3542993afefd37c4ccfd8f/comments", "author": null, "committer": null, "parents": [{"sha": "9ff08f70f3b2ab1b68c1e7934ede369ae0417c4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ff08f70f3b2ab1b68c1e7934ede369ae0417c4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ff08f70f3b2ab1b68c1e7934ede369ae0417c4f"}], "stats": {"total": 36, "additions": 29, "deletions": 7}, "files": [{"sha": "a66e33678312dab2a3434fbf038143655adec9be", "filename": "gcc/function.c", "status": "modified", "additions": 29, "deletions": 7, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63770d6ae3acabd6aa3542993afefd37c4ccfd8f/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63770d6ae3acabd6aa3542993afefd37c4ccfd8f/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=63770d6ae3acabd6aa3542993afefd37c4ccfd8f", "patch": "@@ -1307,15 +1307,37 @@ fixup_var_refs_insns (var, promoted_mode, unsignedp, insn, toplevel)\n       rtx note;\n       if (GET_RTX_CLASS (GET_CODE (insn)) == 'i')\n \t{\n+\t  /* If this is a CLOBBER of VAR, delete it.\n+\n+\t     If it has a REG_LIBCALL note, delete the REG_LIBCALL\n+\t     and REG_RETVAL notes too.  */\n+\t  if (GET_CODE (PATTERN (insn)) == CLOBBER\n+\t      && XEXP (PATTERN (insn), 0) == var)\n+\t    {\n+\t      if ((note = find_reg_note (insn, REG_LIBCALL, NULL_RTX)) != 0)\n+\t\t/* The REG_LIBCALL note will go away since we are going to\n+\t\t   turn INSN into a NOTE, so just delete the\n+\t\t   corresponding REG_RETVAL note.  */\n+\t\tremove_note (XEXP (note, 0),\n+\t\t\t     find_reg_note (XEXP (note, 0), REG_RETVAL,\n+\t\t\t\t\t    NULL_RTX));\n+\n+\t      /* In unoptimized compilation, we shouldn't call delete_insn\n+\t\t except in jump.c doing warnings.  */\n+\t      PUT_CODE (insn, NOTE);\n+\t      NOTE_LINE_NUMBER (insn) = NOTE_INSN_DELETED;\n+\t      NOTE_SOURCE_FILE (insn) = 0;\n+\t    }\n+\n \t  /* The insn to load VAR from a home in the arglist\n \t     is now a no-op.  When we see it, just delete it.  */\n-\t  if (toplevel\n-\t      && GET_CODE (PATTERN (insn)) == SET\n-\t      && SET_DEST (PATTERN (insn)) == var\n-\t      /* If this represents the result of an insn group,\n-\t\t don't delete the insn.  */\n-\t      && find_reg_note (insn, REG_RETVAL, NULL_RTX) == 0\n-\t      && rtx_equal_p (SET_SRC (PATTERN (insn)), var))\n+\t  else if (toplevel\n+\t\t   && GET_CODE (PATTERN (insn)) == SET\n+\t\t   && SET_DEST (PATTERN (insn)) == var\n+\t\t   /* If this represents the result of an insn group,\n+\t\t      don't delete the insn.  */\n+\t\t   && find_reg_note (insn, REG_RETVAL, NULL_RTX) == 0\n+\t\t   && rtx_equal_p (SET_SRC (PATTERN (insn)), var))\n \t    {\n \t      /* In unoptimized compilation, we shouldn't call delete_insn\n \t\t except in jump.c doing warnings.  */"}]}