{"sha": "19b7a780f4aa53761e35aea1c963a06b454e0f7e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTliN2E3ODBmNGFhNTM3NjFlMzVhZWExYzk2M2EwNmI0NTRlMGY3ZQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-08-02T06:20:56Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-08-02T06:20:56Z"}, "message": "Initial revision\n\nFrom-SVN: r21533", "tree": {"sha": "d334d16febf06ffd6e6399f84ef6a9651e558f7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d334d16febf06ffd6e6399f84ef6a9651e558f7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19b7a780f4aa53761e35aea1c963a06b454e0f7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19b7a780f4aa53761e35aea1c963a06b454e0f7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19b7a780f4aa53761e35aea1c963a06b454e0f7e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19b7a780f4aa53761e35aea1c963a06b454e0f7e/comments", "author": null, "committer": null, "parents": [{"sha": "a2c0accaef01c83e1822996d9e997b6a3fd2be0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2c0accaef01c83e1822996d9e997b6a3fd2be0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2c0accaef01c83e1822996d9e997b6a3fd2be0c"}], "stats": {"total": 491, "additions": 491, "deletions": 0}, "files": [{"sha": "829b7b5344dab39d1ede6422f6c8da4319153e05", "filename": "gcc/po/en_UK.po", "status": "added", "additions": 491, "deletions": 0, "changes": 491, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19b7a780f4aa53761e35aea1c963a06b454e0f7e/gcc%2Fpo%2Fen_UK.po", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19b7a780f4aa53761e35aea1c963a06b454e0f7e/gcc%2Fpo%2Fen_UK.po", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2Fen_UK.po?ref=19b7a780f4aa53761e35aea1c963a06b454e0f7e", "patch": "@@ -0,0 +1,491 @@\n+# British English messages for GNU CC\n+# Copyright (C) 1998 Free Software Foundation, Inc.\n+# Paul Eggert <eggert@twinsun.com>, 1998.\n+#\n+msgid \"\"\n+msgstr \"\"\n+\"Project-Id-Version: cc 2.8.1.19980813\\n\"\n+\"POT-Creation-Date: 1998-07-26 00:33-0700\\n\"\n+\"PO-Revision-Date: 1998-09-27 21:34-0700\\n\"\n+\"Last-Translator: Paul Eggert <eggert@twinsun.com>\\n\"\n+\"Language-Team: English <en@li.org>\\n\"\n+\"MIME-Version: 1.0\\n\"\n+\"Content-Type: text/plain; charset=us-ascii\\n\"\n+\"Content-Transfer-Encoding: 7bit\\n\"\n+\n+#: c-common.c:643\n+msgid \"unrecognized format specifier\"\n+msgstr \"unrecognised format specifier\"\n+\n+#: c-common.c:659\n+#, c-format\n+msgid \"`%s' is an unrecognized format function type\"\n+msgstr \"`%s' is an unrecognised format function type\"\n+\n+#: c-decl.c:3673\n+#, c-format\n+msgid \"typedef `%s' is initialized\"\n+msgstr \"typedef `%s' is initialised\"\n+\n+#: c-decl.c:3680\n+#, c-format\n+msgid \"function `%s' is initialized like a variable\"\n+msgstr \"function `%s' is initialised like a variable\"\n+\n+#. DECL_INITIAL in a PARM_DECL is really DECL_ARG_TYPE.\n+#: c-decl.c:3687\n+#, c-format\n+msgid \"parameter `%s' is initialized\"\n+msgstr \"parameter `%s' is initialised\"\n+\n+#: c-decl.c:3702 c-typeck.c:4924\n+msgid \"variable-sized object may not be initialized\"\n+msgstr \"variable-sized object may not be initialised\"\n+\n+#: c-decl.c:3708\n+#, c-format\n+msgid \"variable `%s' has initializer but incomplete type\"\n+msgstr \"variable `%s' has initialiser but incomplete type\"\n+\n+#: c-decl.c:3726\n+#, c-format\n+msgid \"declaration of `%s' has `extern' and is initialized\"\n+msgstr \"declaration of `%s' has `extern' and is initialised\"\n+\n+#: c-decl.c:3865\n+#, c-format\n+msgid \"initializer fails to determine size of `%s'\"\n+msgstr \"initialiser fails to determine size of `%s'\"\n+\n+#: c-decl.c:4626 cp/decl.c:8536\n+#, c-format\n+msgid \"`%s' initialized and declared `extern'\"\n+msgstr \"`%s' initialised and declared `extern'\"\n+\n+#: c-decl.c:4628 cp/decl.c:8539\n+#, c-format\n+msgid \"`%s' has both `extern' and initializer\"\n+msgstr \"`%s' has both `extern' and initialiser\"\n+\n+#: c-lex.c:406 cp/lex.c:2158\n+msgid \"stray '\\\\' in program\"\n+msgstr \"stray '\\\\' in programme\"\n+\n+#: c-lex.c:859\n+msgid \"unrecognized text at end of #line\"\n+msgstr \"unrecognised text at end of #line\"\n+\n+#: c-parse.y:1106 objc-parse.y:1212\n+msgid \"ANSI C forbids empty initializer braces\"\n+msgstr \"ANSI C forbids empty initialiser braces\"\n+\n+#: c-typeck.c:4544\n+msgid \"initializer for static variable is not constant\"\n+msgstr \"initialiser for static variable is not constant\"\n+\n+#: c-typeck.c:4550\n+msgid \"initializer for static variable uses complicated arithmetic\"\n+msgstr \"initialiser for static variable uses complicated arithmetic\"\n+\n+#: c-typeck.c:4558\n+msgid \"aggregate initializer is not constant\"\n+msgstr \"aggregate initialiser is not constant\"\n+\n+#: c-typeck.c:4560\n+msgid \"aggregate initializer uses complicated arithmetic\"\n+msgstr \"aggregate initialiser uses complicated arithmetic\"\n+\n+#: c-typeck.c:4724 c-typeck.c:4740 c-typeck.c:4756\n+#, c-format\n+msgid \"(near initialization for `%s')\"\n+msgstr \"(near initialisation for `%s')\"\n+\n+#: c-typeck.c:4804 cp/typeck2.c:787\n+msgid \"char-array initialized from wide string\"\n+msgstr \"char-array initialised from wide string\"\n+\n+#: c-typeck.c:4811 cp/typeck2.c:794\n+msgid \"int-array initialized from non-wide string\"\n+msgstr \"int-array initialised from non-wide string\"\n+\n+#: c-typeck.c:4828 cp/typeck2.c:815\n+msgid \"initializer-string for array of chars is too long\"\n+msgstr \"initialiser-string for array of chars is too long\"\n+\n+#: c-typeck.c:4855\n+msgid \"array initialized from non-constant array expression\"\n+msgstr \"array initialised from non-constant array expression\"\n+\n+#: c-typeck.c:4872 c-typeck.c:4874 c-typeck.c:4880 c-typeck.c:4907\n+#: c-typeck.c:6107\n+msgid \"initializer element is not constant\"\n+msgstr \"initialiser element is not constant\"\n+\n+#: c-typeck.c:4886 c-typeck.c:4913 c-typeck.c:6113\n+msgid \"initializer element is not computable at load time\"\n+msgstr \"initialiser element is not computable at load time\"\n+\n+#: c-typeck.c:4902\n+msgid \"initialization\"\n+msgstr \"initialisation\"\n+\n+#: c-typeck.c:4950 c-typeck.c:4966 cp/typeck2.c:893\n+msgid \"invalid initializer\"\n+msgstr \"invalid initialiser\"\n+\n+#: c-typeck.c:5444\n+msgid \"extra brace group at end of initializer\"\n+msgstr \"extra brace group at end of initialiser\"\n+\n+#: c-typeck.c:5456\n+msgid \"missing braces around initializer\"\n+msgstr \"missing braces around initialiser\"\n+\n+#: c-typeck.c:5486\n+msgid \"braces around scalar initializer\"\n+msgstr \"braces around scalar initialiser\"\n+\n+#: c-typeck.c:5560\n+msgid \"empty braces in initializer\"\n+msgstr \"empty braces in initialiser\"\n+\n+#: c-typeck.c:5624\n+msgid \"empty scalar initializer\"\n+msgstr \"empty scalar initialiser\"\n+\n+#: c-typeck.c:5629\n+msgid \"extra elements in scalar initializer\"\n+msgstr \"extra elements in scalar initialiser\"\n+\n+#: c-typeck.c:5763 c-typeck.c:5765\n+msgid \"nonconstant array index in initializer\"\n+msgstr \"nonconstant array index in initialiser\"\n+\n+#: c-typeck.c:5767\n+msgid \"array index in non-array initializer\"\n+msgstr \"array index in non-array initialiser\"\n+\n+#: c-typeck.c:5769\n+msgid \"duplicate array index in initializer\"\n+msgstr \"duplicate array index in initialiser\"\n+\n+#: c-typeck.c:5776\n+msgid \"empty index range in initializer\"\n+msgstr \"empty index range in initialiser\"\n+\n+#: c-typeck.c:5780\n+msgid \"ANSI C forbids specifying element to initialize\"\n+msgstr \"ANSI C forbids specifying element to initialise\"\n+\n+#: c-typeck.c:5810\n+#, c-format\n+msgid \"unknown field `%s' specified in initializer\"\n+msgstr \"unknown field `%s' specified in initialiser\"\n+\n+#: c-typeck.c:5813\n+#, c-format\n+msgid \"field `%s' already initialized\"\n+msgstr \"field `%s' already initialised\"\n+\n+#: c-typeck.c:5819\n+msgid \"ANSI C forbids specifying structure member to initialize\"\n+msgstr \"ANSI C forbids specifying structure member to initialise\"\n+\n+#: c-typeck.c:6129\n+msgid \"duplicate initializer\"\n+msgstr \"duplicate initialiser\"\n+\n+#: c-typeck.c:6475 c-typeck.c:6510\n+msgid \"excess elements in struct initializer\"\n+msgstr \"excess elements in struct initialiser\"\n+\n+#: c-typeck.c:6574\n+msgid \"excess elements in union initializer\"\n+msgstr \"excess elements in union initialiser\"\n+\n+#: c-typeck.c:6648 c-typeck.c:6659\n+msgid \"excess elements in array initializer\"\n+msgstr \"excess elements in array initialiser\"\n+\n+#: c-typeck.c:6710\n+msgid \"excess elements in scalar initializer\"\n+msgstr \"excess elements in scalar initialiser\"\n+\n+#: cccp.c:2708\n+msgid \"preprocessing directive not recognized within macro arg\"\n+msgstr \"preprocessing directive not recognised within macro arg\"\n+\n+#: config/h8300/h8300.c:2948 config/h8300/h8300.c:2960\n+msgid \"Only initialized variables can be placed into the 8-bit area.\"\n+msgstr \"Only initialised variables can be placed into the 8-bit area.\"\n+\n+#: config/nextstep.c:70\n+msgid \"optimization turned on\"\n+msgstr \"optimisation turned on\"\n+\n+#: config/nextstep.c:76\n+msgid \"optimization turned off\"\n+msgstr \"optimisation turned off\"\n+\n+#: config/nextstep.c:91\n+msgid \"optimization level restored\"\n+msgstr \"optimisation level restored\"\n+\n+#: cp/class.c:4897\n+#, c-format\n+msgid \"language string `\\\"%s\\\"' not recognized\"\n+msgstr \"language string `\\\"%s\\\"' not recognised\"\n+\n+#: cp/decl.c:6372\n+msgid \"assignment (not initialization) in declaration\"\n+msgstr \"assignment (not initialisation) in declaration\"\n+\n+#: cp/decl.c:8913\n+#, c-format\n+msgid \"can't initialize friend function `%s'\"\n+msgstr \"can't initialise friend function `%s'\"\n+\n+#: cp/decl.c:9385\n+msgid \"typedef declaration includes an initializer\"\n+msgstr \"typedef declaration includes an initialiser\"\n+\n+#: cp/decl2.c:1609\n+msgid \"function declarations cannot have initializers in signature\"\n+msgstr \"function declarations cannot have initialisers in signature\"\n+\n+#: cp/decl2.c:1655\n+msgid \"field initializer is not constant\"\n+msgstr \"field initialiser is not constant\"\n+\n+#: cp/decl2.c:1697\n+msgid \"initializer invalid for static member with constructor\"\n+msgstr \"initialiser invalid for static member with constructor\"\n+\n+#: cp/decl2.c:1699\n+msgid \"(you really want to initialize it separately)\"\n+msgstr \"(you really want to initialise it separately)\"\n+\n+#: cp/init.c:213\n+msgid \"initializer list treated as compound expression\"\n+msgstr \"initialiser list treated as compound expression\"\n+\n+#: cp/init.c:945\n+msgid \"base class initializer specified, but no base class to initialize\"\n+msgstr \"base class initialiser specified, but no base class to initialise\"\n+\n+#: cp/init.c:951\n+msgid \"initializer for unnamed base class ambiguous\"\n+msgstr \"initialiser for unnamed base class ambiguous\"\n+\n+#: cp/init.c:979\n+msgid \"no base class to initialize\"\n+msgstr \"no base class to initialise\"\n+\n+#: cp/init.c:1010\n+msgid \"   will be re-ordered to precede member initializations\"\n+msgstr \"   will be re-ordered to precede member initialisations\"\n+\n+#. Handle bad initializers like:\n+#. class COMPLEX {\n+#. public:\n+#. double re, im;\n+#. COMPLEX(double r = 0.0, double i = 0.0) {re = r; im = i;};\n+#. ~COMPLEX() {};\n+#. };\n+#.\n+#. int main(int argc, char **argv) {\n+#. COMPLEX zees(1.0, 0.0)[10];\n+#. }\n+#.\n+#: cp/init.c:1199\n+msgid \"bad array initializer\"\n+msgstr \"bad array initialiser\"\n+\n+#: cp/init.c:1519 cp/typeck.c:6093\n+msgid \"return value from function receives multiple initializations\"\n+msgstr \"return value from function receives multiple initialisations\"\n+\n+#: cp/init.c:1536 cp/init.c:2590 cp/typeck2.c:601 cp/typeck2.c:1445\n+msgid \"initializer list being treated as compound expression\"\n+msgstr \"initialiser list being treated as compound expression\"\n+\n+#: cp/init.c:2593\n+msgid \"initializer list appears where operand should be used\"\n+msgstr \"initialiser list appears where operand should be used\"\n+\n+#: cp/init.c:3069\n+msgid \"initialization of array from dissimilar array type\"\n+msgstr \"initialisation of array from dissimilar array type\"\n+\n+#: cp/init.c:3083\n+msgid \"initializer ends prematurely\"\n+msgstr \"initialiser ends prematurely\"\n+\n+#: cp/init.c:3116\n+msgid \"cannot initialize multi-dimensional array with initializer\"\n+msgstr \"cannot initialise multi-dimensional array with initialiser\"\n+\n+#: parse.y:763\n+msgid \"no base initializers given following ':'\"\n+msgstr \"no base initialisers given following ':'\"\n+\n+#: parse.y:786\n+msgid \"base initializers not allowed for non-member functions\"\n+msgstr \"base initialisers not allowed for non-member functions\"\n+\n+#: parse.y:788\n+msgid \"only constructors take base initializers\"\n+msgstr \"only constructors take base initialisers\"\n+\n+#: parse.y:805 parse.y:811\n+msgid \"anachronistic old style base class initializer\"\n+msgstr \"anachronistic old style base class initialiser\"\n+\n+#: parse.y:1182\n+msgid \"ANSI C++ forbids initialization of new expression with `='\"\n+msgstr \"ANSI C++ forbids initialisation of new expression with `='\"\n+\n+#: parse.y:4029\n+msgid \"ANSI C++ forbids compound statements inside for initializations\"\n+msgstr \"ANSI C++ forbids compound statements inside for initialisations\"\n+\n+#: cp/pt.c:504\n+msgid \"Explicit specialization not preceded by `template <>'\"\n+msgstr \"Explicit specialisation not preceded by `template <>'\"\n+\n+#: cp/tree.c:1609\n+msgid \"initializer contains unrecognized tree code\"\n+msgstr \"initialiser contains unrecognised tree code\"\n+\n+#: cp/typeck.c:189\n+msgid \"argument list may not have an initializer list\"\n+msgstr \"argument list may not have an initialiser list\"\n+\n+#: cp/typeck.c:2643\n+msgid \"ANSI C++ forbids calling `main' from within program\"\n+msgstr \"ANSI C++ forbids calling `main' from within programme\"\n+\n+#: cp/typeck2.c:576\n+msgid \"comma expression used to initialize return value\"\n+msgstr \"comma expression used to initialise return value\"\n+\n+#: cp/typeck2.c:592\n+msgid \"cannot initialize arrays using this syntax\"\n+msgstr \"cannot initialise arrays using this syntax\"\n+\n+#: cp/typeck2.c:658\n+msgid \"ANSI C++ forbids non-constant aggregate initializer expressions\"\n+msgstr \"ANSI C++ forbids non-constant aggregate initialiser expressions\"\n+\n+#: cp/typeck2.c:741 cp/typeck2.c:757\n+msgid \"ANSI C++ forbids initializing array from array expression\"\n+msgstr \"ANSI C++ forbids initialising array from array expression\"\n+\n+#: cp/typeck2.c:759\n+msgid \"ANSI C++ forbids single nonscalar initializer with braces\"\n+msgstr \"ANSI C++ forbids single nonscalar initialiser with braces\"\n+\n+#: cp/typeck2.c:802\n+msgid \"ANSI C++ forbids string initializer except for `char' elements\"\n+msgstr \"ANSI C++ forbids string initialiser except for `char' elements\"\n+\n+#: cp/typeck2.c:834\n+msgid \"initializer for scalar variable requires one element\"\n+msgstr \"initialiser for scalar variable requires one element\"\n+\n+#: cp/typeck2.c:931\n+msgid \"aggregate has a partly bracketed initializer\"\n+msgstr \"aggregate has a partly bracketed initialiser\"\n+\n+#: cp/typeck2.c:974\n+msgid \"non-empty initializer for array of empty elements\"\n+msgstr \"non-empty initialiser for array of empty elements\"\n+\n+#: cp/typeck2.c:1003\n+msgid \"initializer list for object of class with virtual baseclasses\"\n+msgstr \"initialiser list for object of class with virtual baseclasses\"\n+\n+#: cp/typeck2.c:1009\n+msgid \"initializer list for object of class with baseclasses\"\n+msgstr \"initialiser list for object of class with baseclasses\"\n+\n+#: cp/typeck2.c:1015\n+msgid \"initializer list for object using virtual functions\"\n+msgstr \"initialiser list for object using virtual functions\"\n+\n+#: cp/typeck2.c:1076\n+#, c-format\n+msgid \"uninitialized const member `%s'\"\n+msgstr \"uninitialised const member `%s'\"\n+\n+#: cp/typeck2.c:1080\n+#, c-format\n+msgid \"member `%s' with uninitialized const fields\"\n+msgstr \"member `%s' with uninitialised const fields\"\n+\n+#: cp/typeck2.c:1083\n+#, c-format\n+msgid \"member `%s' is uninitialized reference\"\n+msgstr \"member `%s' is uninitialised reference\"\n+\n+#: cp/typeck2.c:1108\n+msgid \"index value instead of field name in union initializer\"\n+msgstr \"index value instead of field name in union initialiser\"\n+\n+#: cp/typeck2.c:1120\n+#, c-format\n+msgid \"no field `%s' in union being initialized\"\n+msgstr \"no field `%s' in union being initialised\"\n+\n+#: cp/typeck2.c:1164\n+msgid \"excess elements in aggregate initializer\"\n+msgstr \"excess elements in aggregate initialiser\"\n+\n+#: function.c:4809\n+#, c-format\n+msgid \"`%s' might be used uninitialized in this function\"\n+msgstr \"`%s' might be used uninitialised in this function\"\n+\n+#: gcc.c:2268\n+#, c-format\n+msgid \"Internal compiler error: program %s got fatal signal %d\"\n+msgstr \"Internal compiler error: programme %s got fatal signal %d\"\n+\n+#: gcc.c:4606\n+#, c-format\n+msgid \"unrecognized option `-%s'\"\n+msgstr \"unrecognised option `-%s'\"\n+\n+#: gcc.c:4862\n+#, c-format\n+msgid \"language %s not recognized\"\n+msgstr \"language %s not recognised\"\n+\n+#: gcov.c:449\n+#, c-format\n+msgid \"Could not open program flow graph file %s.\\n\"\n+msgstr \"Could not open programme flow graph file %s.\\n\"\n+\n+#. --option\n+#: getopt.c:755\n+#, c-format\n+msgid \"%s: unrecognized option `--%s'\\n\"\n+msgstr \"%s: unrecognised option `--%s'\\n\"\n+\n+#. +option or -option\n+#: getopt.c:759\n+#, c-format\n+msgid \"%s: unrecognized option `%c%s'\\n\"\n+msgstr \"%s: unrecognised option `%c%s'\\n\"\n+\n+#: tree.c:4771\n+msgid \"invalid initializer for bit string\"\n+msgstr \"invalid initialiser for bit string\"\n+\n+#: varasm.c:4086\n+msgid \"initializer for integer value is too complicated\"\n+msgstr \"initialiser for integer value is too complicated\"\n+\n+#: varasm.c:4092\n+msgid \"initializer for floating value is not a floating constant\"\n+msgstr \"initialiser for floating value is not a floating constant\""}]}