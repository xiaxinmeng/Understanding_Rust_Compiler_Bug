{"sha": "3b67d7e6949d199a0aadf866734332374a3eced9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2I2N2Q3ZTY5NDlkMTk5YTBhYWRmODY2NzM0MzMyMzc0YTNlY2VkOQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2018-04-27T20:20:31Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2018-04-27T20:20:31Z"}, "message": "input.h: convert some macros to inline functions\n\ngcc/ChangeLog:\n\t* input.h (in_system_header_at): Convert from macro to inline\n\tfunction.\n\t(from_macro_expansion_at): Likewise.\n\t(from_macro_definition_at): Likewise.\n\nFrom-SVN: r259727", "tree": {"sha": "b3d13fc05a8b8a76aa3823876440aed5f4886d21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3d13fc05a8b8a76aa3823876440aed5f4886d21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b67d7e6949d199a0aadf866734332374a3eced9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b67d7e6949d199a0aadf866734332374a3eced9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b67d7e6949d199a0aadf866734332374a3eced9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b67d7e6949d199a0aadf866734332374a3eced9/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "16787011ab14619b2395f58fbc3495dc2e35ed66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16787011ab14619b2395f58fbc3495dc2e35ed66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16787011ab14619b2395f58fbc3495dc2e35ed66"}], "stats": {"total": 41, "additions": 31, "deletions": 10}, "files": [{"sha": "048ec0bfbffaf71186e745629b5f96ba77a78127", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b67d7e6949d199a0aadf866734332374a3eced9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b67d7e6949d199a0aadf866734332374a3eced9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3b67d7e6949d199a0aadf866734332374a3eced9", "patch": "@@ -1,3 +1,10 @@\n+2018-04-27  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* input.h (in_system_header_at): Convert from macro to inline\n+\tfunction.\n+\t(from_macro_expansion_at): Likewise.\n+\t(from_macro_definition_at): Likewise.\n+\n 2018-04-27  Jeff Law  <law@redhat.com>\n \n \t* config.gcc: Mark tile* targets as deprecated/obsolete."}, {"sha": "da5451e8bd11a19f63661bd48012b11530c863d4", "filename": "gcc/input.h", "status": "modified", "additions": 24, "deletions": 10, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b67d7e6949d199a0aadf866734332374a3eced9/gcc%2Finput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b67d7e6949d199a0aadf866734332374a3eced9/gcc%2Finput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finput.h?ref=3b67d7e6949d199a0aadf866734332374a3eced9", "patch": "@@ -73,17 +73,31 @@ extern location_t input_location;\n    Note that this function returns 1 if LOCATION belongs to a token\n    that is part of a macro replacement-list defined in a system\n    header, but expanded in a non-system file.  */\n-#define in_system_header_at(LOC) \\\n-  (linemap_location_in_system_header_p (line_table, LOC))\n-/* Return a positive value if LOCATION is the locus of a token that\n-   comes from a macro expansion, O otherwise.  */\n-#define from_macro_expansion_at(LOC) \\\n-  ((linemap_location_from_macro_expansion_p (line_table, LOC)))\n-/* Return a positive value if LOCATION is the locus of a token that comes from\n-   a macro definition, O otherwise.  This differs from from_macro_expansion_at\n+\n+static inline int\n+in_system_header_at (location_t loc)\n+{\n+  return linemap_location_in_system_header_p (line_table, loc);\n+}\n+\n+/* Return true if LOCATION is the locus of a token that\n+   comes from a macro expansion, false otherwise.  */\n+\n+static inline bool\n+from_macro_expansion_at (location_t loc)\n+{\n+  return linemap_location_from_macro_expansion_p (line_table, loc);\n+}\n+\n+/* Return true if LOCATION is the locus of a token that comes from\n+   a macro definition, false otherwise.  This differs from from_macro_expansion_at\n    in its treatment of macro arguments, for which this returns false.  */\n-#define from_macro_definition_at(LOC) \\\n-  ((linemap_location_from_macro_definition_p (line_table, LOC)))\n+\n+static inline bool\n+from_macro_definition_at (location_t loc)\n+{\n+  return linemap_location_from_macro_definition_p (line_table, loc);\n+}\n \n static inline location_t\n get_pure_location (location_t loc)"}]}